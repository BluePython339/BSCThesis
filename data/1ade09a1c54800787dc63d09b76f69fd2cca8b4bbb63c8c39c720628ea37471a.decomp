sub_42d100
inc bh
bsf bx si
bt esi ebx
mov bx [ esi ]
cmp dh 0x67
and ebx 0xfff
bt sp cx
call sub_430b47
lea eax [ eax + 0xdb526ae ]
movsx eax cl
lea eax [ rwxdata ]
pushfd
call sub_434b6a
sub_42d133
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
jb rwxdata
btc cx bx
mov ecx 0x6
test dl bl
clc
shl eax cl
push esp
mov [ esp ] 0x32
pushfd
pushad
lea eax [ ebx + eax * 4 + 0x6c0 ]
call sub_4a098c
push 0x17ed4074
shld cx bp cl
rol cx 0x8
mov eax 0x3
add esp 0x4
sub_42d2f1
add ecx 0x1
pushfd
pushfd
call sub_4a542d
add [ ebx + 0x6d6d347 ] edx
inc edx
mov cl 0x3d
movsd [ edi ] [ esi ]
movsd [ edi ] gs : [ esi ]
popad
xor [ edi ] ebp
inc edi
dec ecx
inc edi
fdiv [ eax ]
mov ch 0xc5
mov bh 0xa7
int1
mov eax [ 0x377747db ]
cmp [ ecx - 0x1380b5ab ] ebp
sub_42d40f
lea esp [ esp + 0x10 ]
jb rwxdata
dec eax
and ch dl
daa
pop ecx
movsx ax cl
pushad
mov eax [ esp + 0x20 ]
push [ esp + 0x8 ]
test bl 0xe2
clc
cmp ecx 0x7
mov [ esp + 0x4 ] dx
call j_sub_4a61e1
adc cx bx
push ecx
movzx cx dl
shl dx cl
mov ecx eax
shld dx cx cl
shl dx 0xa
bts dx 0xa
setle dh
mov edx 0x1
cmc
shr ecx 0x1
lea esp [ esp + 0x4 ]
jae rwxdata
jmp rwxdata
push 0x7f104ae8
adc edx edx
pushfd
test al al
cmc
sub ecx 0x1
pushfd
bt di 0x2
jmp rwxdata
pushfd
mov [ esp ] ah
pushfd
adc edx edx
pushad
bt ebp edi
sub ecx 0x1
mov [ esp + 0x8 ] 0xa7
shl edx cl
push [ esp + 0x8 ]
jmp rwxdata
clc
shl edx cl
clc
mov [ ebp - 0x20 ] edx
cmp dl dl
cmc
cmp eax 0xe
mov [ esp + 0x8 ] dx
call sub_430d76
mov [ ebp - 0x20 ] edx
cmc
mov [ esp ] dh
cmp eax 0xe
pushfd
lea esp [ esp + 0x30 ]
jae rwxdata
push 0x760b6a25
jmp rwxdata
clc
sub edx eax
movsx ax dl
sets al
lahf
lea eax [ edi + 0x506c89e5 ]
lea eax [ ebx + edx * 4 + 0xabc ]
call sub_433c9a
push ebx
clc
sub ecx 0x4
call sub_432202
sub_42d4b3
adc dl dl
pushfd
mov [ esp + 0x4 ] 0xf2
jmp rwxdata
lea esp [ esp + 0x30 ]
jae rwxdata
lea eax [ ecx + 0x7e3c72b6 ]
lea eax [ eax + 0x1bb9c34e ]
pushfd
lea eax [ ebx + edx * 4 ]
call sub_4a5bb2
add al cl
btr ecx 0x17
pop ebx
sbb ax dx
movzx ax bl
pop ecx
sub ax 0x4a06
mov ah 0x9e
mov [ ebp - 0x2 ] dl
shld ax cx 0x9
cmp ecx 0x4
pushfd
mov eax ecx
pushad
jmp rwxdata
push 0x1d1c032a
call sub_4af617
sub_42d4e1
pushfd
jmp rwxdata
lea esp [ esp + 0x14 ]
jb rwxdata
btc cx bx
mov ecx 0x6
test dl bl
clc
shl eax cl
push esp
mov [ esp ] 0x32
pushfd
pushad
lea eax [ ebx + eax * 4 + 0x6c0 ]
call sub_4a098c
shl ax 0xf
mov eax 0x3
clc
movsx cx bl
shld ecx esi cl
bswap cx
mov ecx 0x6
bt cx 0x1
cmc
shl eax cl
pushad
mov [ esp ] dh
mov [ esp ] 0xb4
jmp sub_42da91
sub_42d84f
mov edx [ esi + 0x78 ]
pushfd
pushfd
test edx edx
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
jmp sub_43521d
push 0x513f0b40
pushfd
bsr ecx edi
add edx eax
shrd cx bp 0x7
clc
mov ecx [ esi + 0x7c ]
mov [ esp + 0x4 ] bh
add ecx edx
jmp rwxdata
mov [ ebp - 0x10 ] ecx
lea ecx [ ecx * 8 + 0x1445fd09 ]
mov ecx [ ebp + 0xc ]
pushfd
mov [ esp + 0x4 ] 0xef
pushad
cmp ecx 0xffff
push [ esp + 0x8 ]
mov [ esp + 0xc ] bx
lea esp [ esp + 0x30 ]
jbe rwxdata
cmc
bt cx 0x1
sub ecx [ edx + 0x10 ]
pushad
cmp ecx [ edx + 0x14 ]
lea esp [ esp + 0x20 ]
jae rwxdata
jmp rwxdata
jmp rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
jae rwxdata
pushad
mov edi [ edx + 0x24 ]
btc ecx 0xb
btc cx dx
add edi eax
inc bx
lea ecx [ ecx + 0x4b5fb527 ]
clc
mov ebx [ edx + 0x20 ]
neg cl
add ebx eax
movzx ecx dl
mov [ ebp - 0x8 ] 0x0
btr ecx 0x7
btc cx bx
shr cx 0xa
mov ecx [ edx + 0x18 ]
add esp 0x20
pushad
mov [ esp + 0x14 ] di
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
pushad
push ecx
push ecx
lea esp [ esp + 0x28 ]
jae rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
jmp rwxdata
push eax
mov [ esp ] cl
mov [ esp ] cl
lea esp [ esp + 0x4 ]
jmp rwxdata
neg edi
mov edi [ edx + 0x1c ]
clc
add edi eax
jns rwxdata
push 0x477f2fe8
pushfd
lea esp [ esp + 0x28 ]
jbe rwxdata
pushfd
test bl 0x2c
bt si 0x1
mov edi [ edi + ecx * 4 ]
test edi edx
push [ esp ]
clc
test edi edi
pushfd
pushfd
jmp sub_4a1181
cmp cl dl
mov edi [ edi + ecx * 4 ]
cmc
stc
test edi edi
push 0x50d1366d
push 0x98093b1f
push ebx
lea esp [ esp + 0xc ]
je rwxdata
btr di 0xd
sub ecx 0x1
pushad
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x20 ]
mov di di
sub ecx ebp
jmp rwxdata
test ax si
call sub_430152
movsx di al
not ecx
ror al 0x4
bswap cx
not al
not di
bsr di bp
xor eax eax
bswap ecx
mov edi eax
xchg ch al
mov ecx 0x4
lea esp [ esp + 0x30 ]
not al
push 0x987c1e10
pushfd
lodsb [ esi ]
clc
cmp si di
pushad
not al
call sub_431bb3
clc
mov ecx [ ebp - 0x8 ]
btr si bx
add ecx [ ebp - 0x4 ]
test bl 0x34
call sub_4ae36d
xor ch [ edx ]
sbb ecx esi
and eax [ edi ]
inc edx
ficom [ ebx - 0x54ac5c85 ]
jg rwxdata
dec ebp
and eax 0x780bf94f
mov ecx 0xce76c8e1
xchg [ ebx + 0x2f ] esi
fwait
paddusb mmx0 [ ecx + edx * 2 - 0x65 ]
or al 0xa
fdiv [ 0x75b81f7f ]
movsd [ edi ] gs : [ esi ]
inc ebp
lds ecx [ ecx - 0x67 ]
cmp [ ecx ] 0xc5751f67
sub [ ecx - 0x3078f68f ] edi
cmp edx [ edi - 0x80 ]
fld [ edi - 0x449b7ede ]
xor al 0xca
test al 0xc8
push 0x9c73e468
xor al 0xf8
mov cl 0x4d
sub_42da2a
sub al 0x30
push edx
cmp ch dl
jmp rwxdata
cmp al 0x9
push edi
pushad
mov [ esp + 0x4 ] si
jmp rwxdata
lea esp [ esp + 0x30 ]
ja rwxdata
jmp sub_4ae8b9
clc
imul edx edx 0xa
test dx 0x4b24
bt bx 0x5
bt bp bx
add edx eax
pushad
push [ esp ]
lea esp [ esp + 0x24 ]
jmp rwxdata
test bl cl
shl al 0x5
add edi 0x1
cmc
rcr al 0x2
add al dh
shl al 0x6
mov al [ edi ]
cmp bl al
test al al
call sub_431d1a
call sub_434b0f
sub_42db6b
shl al 0x4
neg ax
push ebp
xor ax dx
cmc
jmp rwxdata
or al ch
mov ebp esp
neg ax
setbe al
shld ax di cl
cmp al 0x5e
sub esp 0x18
shld ax cx cl
sar ax 0x5
push esi
movzx ax dl
rol ax 0xb
bt sp 0xe
push edi
aad 0x5a
btr ax 0x9
shl ah 0x7
push ebx
aas
lea eax [ ecx * 2 + 0x1b5642b0 ]
pushfd
mov [ esp ] edx
adc ax 0xdce9
test sp 0xc921
bsf ax sp
sar ah 0x4
mov eax [ ebp + 0x8 ]
test sp sp
push eax
push 0xbc23e57c
pushfd
test eax eax
pushad
push 0xa1b8cd3b
lea esp [ esp + 0x30 ]
je rwxdata
jmp sub_43521d
lea edx [ edi + 0x5d12a28f ]
dec esi
mov esi [ eax + 0x3c ]
xor dl bh
shl dh 0x7
add esi eax
shr dx cl
cmp bx dx
call sub_42d84f
mov [ esp ] 0x9
mov [ esp ] 0xc
push [ eax ]
pop [ esp + 0x3c ]
push 0xbe791279
pushfd
mov [ esp + 0x4 ] 0x83
push [ esp + 0x44 ]
retn 0x48
sub_42ff1a
stc
push [ esp ]
stc
cmp al 0x9
lea esp [ esp + 0x8 ]
pushad
pushfd
push 0xb41347d1
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
jmp sub_4ae8b9
clc
pushad
call sub_43266b
sub_4300a1
lea esp [ esp + 0x44 ]
jne rwxdata
dec eax
and ch dl
daa
pop ecx
movsx ax cl
pushad
mov eax [ esp + 0x20 ]
push [ esp + 0x8 ]
test bl 0xe2
clc
cmp ecx 0x7
mov [ esp + 0x4 ] dx
call j_sub_4a61e1
push 0x50476a66
pushad
xchg ecx eax
mov ecx [ esp + 0x24 ]
pop eax
mov eax [ esp + 0x24 ]
cwde
movzx ax dl
movzx ax al
mov [ esp + 0x24 ] ebx
lahf
setae ah
mov [ esp ] 0x48
setne ah
lea eax [ LocalFree@IAT ]
jmp rwxdata
jmp rwxdata
mov [ esp + 0x20 ] rwxdata
pushad
jmp rwxdata
mov [ esp ] 0x9
mov [ esp ] 0xc
push [ eax ]
pop [ esp + 0x3c ]
push 0xbe791279
pushfd
mov [ esp + 0x4 ] 0x83
push [ esp + 0x44 ]
retn 0x48
sub_4300de
lea esp [ esp + 0x28 ]
je rwxdata
mov bx 0x8ade
shr bl 0x5
setno bh
add bl 0x54
mov bx [ esi ]
test sp 0xd96a
pushad
pushfd
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
test cl 0x28
stc
test cl 0xd8
and ebx 0xfff
test cx di
add [ ebx + edi ] edx
push 0xffffffd9
jmp 0xffffffffe985f1dd
pushfd
pushad
call sub_432dbd
salc
sbb al 0x1d
popfd
call 0xffffffffaa0b2ed1
jne rwxdata
sub_4300f4
sub edx eax
not ax
lea eax [ ebx + edx * 4 + 0xabc ]
pushfd
lea esp [ esp + 0xc ]
call sub_4a5ccd
pushad
add cx 0x67c
add [ ebp - 0x20 ] eax
sub esp 0xffffffe0
dec eax
and ch dl
daa
pop ecx
movsx ax cl
pushad
mov eax [ esp + 0x20 ]
push [ esp + 0x8 ]
test bl 0xe2
clc
cmp ecx 0x7
mov [ esp + 0x4 ] dx
call j_sub_4a61e1
sub_430139
pushad
stosb [ edi ]
pushfd
mov [ esp + 0x4 ] 0x50
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_430893
call sub_434e9a
lea esp [ esp + 0x8 ]
jne rwxdata
jmp sub_4ae8b9
lea eax [ edx + 0x18ec7f15 ]
movzx ax bl
pushad
mov [ edi - 0x1 ] 0x0
cwde
lea eax [ edx * 4 + 0x1b98e736 ]
mov ax 0x30b
not ax
mov [ esp + 0x1c ] ebx
setle al
call sub_430888
sub_4308d1
lea esp [ esp + 0x4 ]
jb rwxdata
bswap ax
call sub_434eca
shl ax cl
lahf
bsf ax bx
cwde
cmp ecx 0x7
movsx ax bl
sbb ecx ecx
setle al
movzx ax dl
movzx ax al
lea eax [ ecx - 0x6b3f50d0 ]
lea ecx [ ecx * 2 + 0xb ]
lahf
lea eax [ ebp * 8 + 0x6a148369 ]
mov eax [ ebp - 0x20 ]
call sub_4a613f
sub_430938
lea esp [ esp + 0x34 ]
call sub_433bc2
jmp rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
jb rwxdata
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
jb rwxdata
bswap ax
call sub_434eca
movzx eax bl
add ah ch
adc ah dh
btc eax 0xa
cmp ecx 0x7
not al
pushad
bswap ax
lea eax [ 0xffffffffecd5a2f4 ]
sbb ecx ecx
pop eax
pop eax
not eax
lea ecx [ ecx * 2 + 0xb ]
mov al bh
mov eax [ ebp - 0x20 ]
pushfd
pushfd
call sub_42d2e7
stc
cmp bl 0x81
cmp ecx 0x7
inc ah
mov ah cl
lea eax [ ecx * 8 + 0x1b4fbad2 ]
sbb ecx ecx
movzx ax al
lea ecx [ ecx * 2 + 0xb ]
lea eax [ edx - 0x73ebc1b0 ]
mov eax [ ebp - 0x20 ]
push edi
call j_sub_4334f2
sub_430a54
call sub_4afb57
xor ebx edi
pop esp
mov [ esi ] ecx
pop es
inc edx
salc
mov ebp 0xdaa47749
and al 0x8a
nop
push esi
xor dl [ eax + 0xa2eb08a ]
sti
jpo rwxdata
xchg ebp eax
push 0x68d13bf4
les edx [ ebx - 0x446e8b37 ]
dec esp
mov al [ 0xffffffff8e1ee52d ]
cmpsb [ esi ] [ edi ]
or eax 0xe8875687
jecxz rwxdata
cmp eax 0x5ec8a0da
aam 0x86
in eax 0x1e
mov fs [ esi - 0x78a978f3 ]
sub_430b47
add [ ebx + edi ] dx
push edi
push 0x64148668
lea esp [ esp + 0x10 ]
jmp rwxdata
pushfd
pushad
call sub_432dbd
salc
sbb al 0x1d
popfd
call 0xffffffffaa0b2ed1
jne rwxdata
push 0xffffffd9
test cl 0x28
stc
test cl 0xd8
and ebx 0xfff
test cx di
add [ ebx + edi ] edx
jmp 0xffffffffe985f1dd
sub_430b5a
dec ch
mov edi eax
sar ch 0x6
rcl cl 0x1
add cl ch
push 0x2d4ec3b3
mov ecx 0x104
stc
xor al al
cmc
cmp al dh
pushfd
[ edi ]
mov [ esp ] dl
lea esp [ esp + 0xc ]
jne rwxdata
jmp sub_43521d
bt edx edx
bsf cx cx
mov ecx edi
call sub_430fd2
sub_430b93
push ebx
push edx
push 0xf7f7338
call sub_4afd2a
pushfd
pushad
mov al [ eax + edi ]
mov [ esp ] bh
push 0x6c9fc8a7
push 0x2684a7bb
stosb [ edi ]
pushfd
pushfd
mov [ ebp - 0x2 ] al
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_430bc6
push ecx
bt bx cx
test edi edi
mov [ esp + 0x8 ] 0x4
pushfd
lea esp [ esp + 0x48 ]
je rwxdata
jmp sub_43521d
clc
add eax edi
pushfd
cmp dx cx
clc
pushfd
cmp eax edx
pushad
mov [ esp ] 0x1d
lea esp [ esp + 0x28 ]
jb rwxdata
pushfd
lea edx [ ecx + 0x4e0b7053 ]
mov edx [ esp + 0x4 ]
mov [ esp ] 0x7e71
pushfd
movsx esi bl
mov ebx [ esp + 0xc ]
mov [ esp ] 0xdb19
movzx si dl
mov edi [ esp + 0x10 ]
not esi
pushfd
call sub_4b0443
jmp rwxdata
bt si 0xa
cmp cx 0xb5d3
cmp eax [ ebp - 0x10 ]
pushad
pushad
mov [ esp ] 0x1f
push [ esp + 0x8 ]
lea esp [ esp + 0x44 ]
jae rwxdata
bswap bx
bts di 0xc
rol cl 0x3
jmp rwxdata
mov ebx eax
not di
bt dx 0x3
shrd di si 0x4
call sub_433f33
sub_430d8a
mov [ esp + 0x10 ] 0x2
lea esp [ esp + 0x28 ]
ja rwxdata
pushad
pushfd
pushfd
lea esp [ esp + 0x28 ]
ja rwxdata
ja rwxdata
clc
push ecx
mov [ esp ] cx
push edx
sub edi 0x4
call sub_42da86
bt cx dx
sub ebx edi
rol edi cl
movsx di dl
add ebx esp
sete al
sub al dl
sub di ax
btr di 0x2
mov edi ebx
jmp rwxdata
setne al
rcr al cl
sub ebx edi
and al 0x79
add ebx esp
inc al
rcl al 0x4
rol al 0x5
jmp rwxdata
inc al
rcl al cl
cmp cl dh
mov al 0x2e
bt di 0x9
cmp ax 0xe089
test bp 0x69e2
cmc
[ edi ]
push 0x72f57d12
call sub_49f156
xor ah al
pop ebp
mov cl bh
push cs
inc edx
xlat
mov esp 0xb22c4042
dec eax
aam 0x32
add [ edx + ebx * 2 + 0x26 ] dh
mov edi ebx
pushfd
ror al 0x5
bt cx 0xa
mov al 0x2e
clc
test cx ax
bt sp di
[ edi ]
push 0x2b37d73e
jmp rwxdata
lea esp [ esp + 0x8 ]
jne rwxdata
jmp sub_4ae8b9
lea eax [ edx + 0x18ec7f15 ]
movzx ax bl
pushad
mov [ edi - 0x1 ] 0x0
cwde
lea eax [ edx * 4 + 0x1b98e736 ]
mov ax 0x30b
not ax
mov [ esp + 0x1c ] ebx
setle al
call sub_430888
sub_430f29
shl edi 0x8
cmp bl bh
push 0x42b84069
clc
add edi eax
push edi
sub ecx 0x1
pushfd
push 0x51dc7edb
push 0x7fb0f8d3
lea esp [ esp + 0x48 ]
jne rwxdata
not al
push 0x987c1e10
pushfd
lodsb [ esi ]
clc
cmp si di
pushad
not al
call sub_431bb3
shl dl cl
movzx edx cl
sub ecx 0xd4244956
inc cx
mov [ ebp - 0x1c ] edi
lea edi [ ecx * 2 + 0x36ce3f86 ]
mov edi [ ebp + 0xc ]
rcr dh 0x5
cmc
sub eax eax
movsx edx cl
mov [ ebp - 0x2 ] al
shrd cx bp cl
shl ecx cl
clc
mov ecx eax
stc
mov [ ebp - 0x20 ] eax
sbb dh 0x68
test dl cl
mov [ ebp - 0x24 ] eax
cmc
push edi
clc
call sub_433f95
sub_430fbb
mov al [ ebp - 0x2 ]
push [ esp ]
push esp
pushfd
stosb [ edi ]
pushad
mov [ esp ] 0x9d
lea esp [ esp + 0x30 ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_430fd2
bt cx 0xf
sub ecx ebx
bswap si
cmc
test bh 0xc9
neg si
lea esi [ esp + 0x4 ]
cmc
sub edi 0x4
cmc
push [ edi ]
pop [ esp ]
jmp sub_4acfd7
sub_431a0f
lea esp [ esp + 0x4 ]
jb rwxdata
pushfd
lea edx [ ecx + 0x4e0b7053 ]
mov edx [ esp + 0x4 ]
mov [ esp ] 0x7e71
pushfd
movsx esi bl
mov ebx [ esp + 0xc ]
mov [ esp ] 0xdb19
movzx si dl
mov edi [ esp + 0x10 ]
not esi
pushfd
call sub_4b0443
push esi
cmc
cmp eax [ ebp - 0x10 ]
call sub_4340e0
sub_431a23
lea ecx [ ebx * 2 - 0x7ef48335 ]
lea ecx [ eax + 0x2 ]
and al 0xd4
clc
sar al cl
mov esi [ ebp - 0x20 ]
rol al cl
ror al cl
mov [ esp ] ah
adc al 0x58
not esi
sar al 0x1
jmp sub_4af3de
sub_431aaa
lea esp [ esp + 0xc ]
je rwxdata
dec dh
add cl cl
sete ah
xchg dh al
movzx ax bl
setl al
setb dh
pushfd
push esi
lea eax [ ebx + edx * 4 + 0x400 ]
pushfd
jmp sub_4a5f53
not al
lahf
cwde
lea eax [ ebx + edx * 4 ]
call sub_430bc1
sub_431ad3
mov [ esp + 0x8 ] ah
mov [ esp + 0x4 ] 0x9d
lea eax [ ebx + eax * 4 ]
pushfd
jmp rwxdata
lea esp [ esp + 0x14 ]
ja rwxdata
jmp rwxdata
push edi
lea esp [ esp + 0x4 ]
call sub_433bc2
jmp rwxdata
push ebp
lea esp [ esp + 0x4 ]
call sub_433bc2
pushad
pushfd
mov [ esp ] 0x94
lea esp [ esp + 0x24 ]
jb rwxdata
push edx
mov [ esp ] 0x27
lea esp [ esp + 0x4 ]
jb rwxdata
bswap eax
call sub_4aef45
shl ah 0x1
shl eax cl
movzx eax [ ebp - 0x2 ]
lea edx [ eax - 0x2f1787b9 ]
shr eax 0x5
mov dx sp
movsx dx dl
btr dx di
call sub_4a0b45
btc dx 0x8
movzx eax [ ebp - 0x2 ]
rol dh cl
clc
shr eax 0x5
rol dh 0x7
not dh
jmp rwxdata
imul eax eax 0x300
shld dx dx 0xd
xor dh 0xe7
bsr edx esp
lea eax [ ebx + eax * 4 + 0x94d8 ]
cmc
cmc
adc dx dx
btc dx sp
push ecx
add dh 0x3f
push ebx
bt si 0x1
bswap ebx
shr dx cl
clc
mov ebx eax
pushfd
mov edx 0x1
pushad
stc
clc
jmp rwxdata
cmp ecx 0x7
mov [ esp ] ch
call sub_49f886
add dl dh
fistp [ edi - 0x7 ]
or eax 0xbf6b0042
daa
adc eax 0xdf96985
test eax 0xafad15f9
sub_431d1a
mov [ esp ] 0xc6
pushfd
mov [ esp ] 0xb7
lea esp [ esp + 0x8 ]
je rwxdata
cmc
cmc
test ah 0xa4
mov edi edx
stc
sub al 0x30
call sub_42ff1a
not eax
call sub_4aecd9
mov al [ ecx ]
test eax 0x84842b85
clc
cmc
call sub_4ad2c4
add [ eax ] al
dec ebp
popad
imul esp [ ebp + 0x53 ] 0x75
jb rwxdata
push edx
pushfd
pushad
lea esp [ esp + 0x28 ]
inc esp
imul esi [ edx + 0x65 ] 0x726f7463
rcl al 0x5
sar al cl
bt esi 0x17
and al dl
sub edx edx
btc ax 0x2
sbb ah ah
lahf
mov eax edx
test bl cl
shl al 0x5
add edi 0x1
cmc
rcr al 0x2
add al dh
shl al 0x6
mov al [ edi ]
cmp bl al
test al al
call sub_431d1a
call sub_434b0f
and al 0x8d
and al 0x10
jne rwxdata
popad
je rwxdata
btr cx di
shl cl cl
neg ch
mov ecx edi
pushfd
neg al
not al
jmp rwxdata
mov [ esp ] 0x62
inc ebp
js rwxdata
cmp ch bh
clc
call sub_4aece6
adc al 0xee
fwait
inc ecx
loope rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
rol al 0x4
clc
neg al
bt di 0x4
mov [ esp ] 0x10
jae rwxdata
cmc
add [ ecx - 0x4b ] esp
int 0x51
xor [ ebp - 0x33 ] 0x5f8f4565
dec ebp
or [ ss : edi ] bh
pop edi
leave
dec edx
sbb [ ecx ] ecx
shl [ edx + edi + 0x3b4e5e02 ] 0x1
scasd [ edi ]
int1
aas
lodsb [ esi ]
mov [ ebx ] bh
push edx
xlat
popf
imul ebx [ eax - 0x10dcfce9 ] 0x53cb737
push ebp
mov [ esi - 0x4e ] ah
nop
pop es
inc esp
mov cl 0x25
jmp rwxdata
inc edx
xlat
dec esp
stosb [ edi ]
mov eax 0x12b456c0
cld
and al al
cwde
cmc
pushad
mov [ esp + 0x14 ] di
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
cmc
call sub_430893
mov al [ eax + edi ]
push [ esp ]
mov [ esp ] 0xa6
push 0x3ad16c2c
mov [ esp + 0x4 ] cl
stosb [ edi ]
push [ esp ]
pushfd
mov [ esp + 0x4 ] ah
mov [ ebp - 0x2 ] al
push ecx
mov [ esp + 0x4 ] 0xb
push ebx
mov [ esp ] bp
lea esp [ esp + 0x40 ]
jmp rwxdata
push esp
mov [ esp ] esi
cmp al [ edi ]
lea eax [ eax + 0x3a41937c ]
bswap eax
lahf
sets ah
lea edi [ edi + 0x1 ]
setb al
lea eax [ ecx + 0x5fbea19a ]
and al 0x10
jae rwxdata
insd
xlat
xchg esi eax
in al 0x59
mov ebp 0xee29b4e
inc edx
or eax 0x32d49606
nop
xchg [ esi + edi - 0x7d73d124 ] bh
ror [ cs : ebx - 0x55d33433 ] cl
je rwxdata
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
jo rwxdata
push ds
fdiv [ esi ]
push 0x477f2fe8
pushfd
lea esp [ esp + 0x28 ]
jbe rwxdata
je rwxdata
int1
lodsb [ esi ]
adc bl [ edx + eax * 4 + 0x1fcd6a14 ]
push ss
mov esp 0xdacf1c6
cwde
xor dl 0x6a
test [ edx + eax * 4 - 0x25 ] edi
cmp ecx esi
lodsb [ esi ]
adc bl [ edx + eax * 4 - 0x45ac1c36 ]
ja rwxdata
jmp sub_43521d
btr di 0xd
sub ecx 0x1
pushad
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x20 ]
mov di di
sub ecx ebp
jmp rwxdata
jb rwxdata
or [ ebp - 0x16cfdb9c ] cl
into
imul edi eax 0xa9018aff
test [ ebx ] ebp
test [ eax + edi * 8 - 0x335170b ] al
mov eax [ esp + 0x48 ]
pushfd
lea esp [ esp + 0x50 ]
ja rwxdata
pop edi
int3
clc
mov ecx [ ebp - 0x8 ]
btr si bx
add ecx [ ebp - 0x4 ]
test bl 0x34
call sub_4ae36d
xor ch [ edx ]
sbb ecx esi
and eax [ edi ]
inc edx
ficom [ ebx - 0x54ac5c85 ]
jg rwxdata
jmp rwxdata
and al 0x28
jns rwxdata
arpl [ edi + ebp * 2 + 0x72 ] si
dec ebp
and eax 0x780bf94f
mov ecx 0xce76c8e1
xchg [ ebx + 0x2f ] esi
fwait
paddusb mmx0 [ ecx + edx * 2 - 0x65 ]
or al 0xa
fdiv [ 0x75b81f7f ]
movsd [ edi ] gs : [ esi ]
inc ebp
lds ecx [ ecx - 0x67 ]
cmp [ ecx ] 0xc5751f67
sub [ ecx - 0x3078f68f ] edi
cmp edx [ edi - 0x80 ]
fld [ edi - 0x449b7ede ]
xor al 0xca
test al 0xc8
push 0x9c73e468
xor al 0xf8
mov cl 0x4d
sub_431d41
mov ebx [ esp + 0xc ]
not ecx
bswap cx
lea ecx [ edx - 0x7cd8d222 ]
mov ecx [ esp + 0x10 ]
call sub_43014b
add [ eax ] al
inc edi
je rwxdata
pop ecx
dec edi
pop ebp
outsd
jne rwxdata
pop edi
fnstsw [ eax + 0x3a ]
fimul [ esi - 0x6a2369ab ]
pop ebp
adc [ ebx - 0x2 ] ebx
inc edx
xchg ecx eax
fwait
add [ edx ] al
xor eax esi
push edx
shr esp 0x36
mov cl 0x26
xor edx [ ebp + 0x2d ]
aad 0xa2
dec ebx
int 0x83
mov bl 0x77
mov edx 0xf23dfef2
0xf63b012c 0xd7cf
cmp ebp eax
aad 0xe9
xchg [ edx + edi * 8 ] ebx
pop eax
into
out dx al
jns rwxdata
inc esi
imul ebp [ ebp + 0x4e ] 0x57656d61
add [ esi + edi * 8 ] al
mov al [ 0x42071934 ]
imul edx eax 0xffffffe8
dec esi
fcomp [ edx ]
in al dx
inc edx
enter 0xe6ce 0x64
mov esi 0x6ab83acc
push eax
pushad
mul [ eax ]
sahf
mov dh 0xca
sub ebp [ ebx + 0x3a78dd5f ]
xor al 0x19
pop es
inc edx
push esi
xor cl [ esp + esi + 0x62 ]
xor [ esi ] bl
pop edi
or al 0x69
adc bl [ edx + 0x7b ]
mov ch 0x50
adc ecx [ edx + 0x7f904f17 ]
inc [ ecx - 0x28 ]
mov [ edi + ebp * 2 + 0x5d4f5909 ] dl
pop ebx
jge rwxdata
0xf63b012c 0xd7cf
sub ebx [ ebx - 0x31da3a52 ]
cmpsb [ esi ] [ edi ]
or [ ebx ] esp
mov eax 0x4f65d756
movsb [ edi ] [ esi ]
mov eax [ 0x43e350d4 ]
in al 0xbe
salc
xchg esp eax
mov esi 0x4b7dc078
mov cl 0x4
xor edi esp
push 0xffffff93
outsd
salc
js rwxdata
mov bh 0x91
push 0x5c
jae rwxdata
imul edx [ edx ] 0x50b57b5a
fbstp [ ecx - 0x7b ]
insd
das
call 0xffffffff81aa1585
inc esi
mov bh [ edx + 0x55ab2d6 ]
aaa
mov [ 0xffffffffc516eed6 ] al
pop ds
mov dl 0x87
clc
mov ebp 0xf5a2a704
xchg edi eax
pushfd
in al 0x78

sub_4320fe
lea esp [ esp + 0x8 ]
ja rwxdata
clc
push ecx
mov [ esp ] cx
push edx
sub edi 0x4
call sub_42da86
jmp rwxdata
cmp ax bp
sub ebx edi
shrd di bx 0x8
xor di sp
setl al
pushad
lea esp [ esp + 0x20 ]
add ebx esp
btr edi 0x17
shr edi cl
mov edi ebx
shl al 0x4
mov al 0x2e
bt si bx
cmp ah 0x70
[ edi ]
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0x3e
lea esp [ esp + 0x20 ]
jne rwxdata
jmp sub_4ae8b9
bswap ax
mov ah 0x2b
cwde
not ax
mov [ edi - 0x1 ] 0x0
movsx ax al
movsx ax dl
movsx eax dl
jmp sub_430b93
sub_432202
mov [ esp + 0x8 ] 0xbd
push 0x78084eb0
jmp rwxdata
lea esp [ esp + 0x10 ]
call sub_4a6115
pushad
jmp rwxdata
pushad
mov cl 0x4
jmp rwxdata
shl eax cl
clc
cmp bl dl
add [ ebp - 0x20 ] eax
not eax
push [ esp + 0x4 ]
pop eax
cwde
lea eax [ ebx + 0xc88 ]
call sub_4320d6
mov cl 0x69
0x51f
sub_43262c
mov [ esp + 0x4 ] al
stosb [ edi ]
push eax
mov [ esp + 0x4 ] 0x56
mov [ ebp - 0x2 ] al
mov [ esp + 0x4 ] 0x96ab
pushfd
pushfd
push 0x8d7ffe4
lea esp [ esp + 0x4c ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_432651
lea edi [ edi + 0x1 ]
lea esp [ esp + 0x44 ]
jne rwxdata
pushad
pushad
pushfd
mov eax [ esp + 0x44 ]
call sub_4b0193
pushad
mov [ esp + 0x8 ] 0x3e
lea esp [ esp + 0x20 ]
jne rwxdata
pushad
not ax
mov eax [ esp + 0x20 ]
call sub_49f37c
jmp sub_4ae8b9
bswap ax
mov ah 0x2b
cwde
not ax
mov [ edi - 0x1 ] 0x0
movsx ax al
movsx ax dl
movsx eax dl
jmp sub_430b93
sub_432dbd
add esi 0x2
pushfd
mov [ esp ] di
dec ecx
pushfd
jmp rwxdata
lea esp [ esp + 0x30 ]
jne rwxdata
sub bx 0xb3e5
shr bl 0x6
bts bx 0x1
rol bl 0x2
mov bx [ esi ]
pushad
jmp rwxdata
cmc
bsr cx si
rol cl 0x6
mov ecx [ ebp - 0x4 ]
pushfd
cmc
cmp [ ebp + 0x14 ] ecx
pushfd
pushfd
lea esp [ esp + 0xc ]
ja rwxdata
jmp rwxdata
jmp rwxdata
mov di 0x641a
pop esi
jmp rwxdata
clc
shr ebx 0xc
pushad
call sub_4a1a0f
push ebx
lea eax [ rwxdata ]
mov [ esp ] 0x68679056
jmp sub_431405
sbb ch bh
or cl ah
dec ch
mov ecx [ esi + 0x4 ]
clc
jne rwxdata
not ecx
mov di 0xc5e4
bswap cx
pop edi
mov bl al
call sub_4a58d8
pushfd
pushad
stc
cmp dh ah
or ecx ecx
mov [ esp ] 0xe2ca
jmp rwxdata
test bl dl
bt si 0x4
or ecx ecx
call sub_49f04f
lea esp [ esp + 0x24 ]
bsr di ax
add [ ebp - 0x4 ] ecx
je rwxdata
0xf2e5e4d5 0x36d0
sbb [ ebx + 0x15 ] dh
in al 0xfd
mov [ 0x35640c58 ] eax
rol ch 0x1
in eax dx
dec cx
pushfd
xchg ebx eax
fwait
xor eax 0x648d9744
and al 0x24
lodsb [ esi ]
sbb ah bh
jbe rwxdata
bt sp 0xd
pushad
sub edi 0x9b074a1d
ror bl 0x1
sub ecx 0x8
bt ax di
shr ecx 0x1
btr edi ebx
sub di dx
call sub_4af778
fnsave [ 0xdf00bde ]
inc edx
push esp
aas
fistp [ edi ]
mov ebx 0xbe3cb5b
dec ebp
into
add al 0x12
and ah 0xea
sub al 0x44
push 0xe64827ac
sbb [ ecx ] al
jae rwxdata
push ecx
sbb eax [ eax ]
add [ esi + 0xf ] ah
mov ebp 0xfc4d01f8
sar [ ebx - 0x78 ] 0x1
push eax
xchg ecx eax
insb
add eax ebx
and eax 0xceaab06f
aam 0x9c
0xf358a002 0xef6b
cmp eax 0x2ba2d6eb
fbstp [ eax ]
sbb al 0xa3
fsubrp st6
jg rwxdata

test [ ebp - 0x19cf4554 ] ax
in al 0x9a
lahf
jmp 0xffffffff83aeb24a
sub_432f4c
mov [ esp + 0x4 ] 0xd6
lea esp [ esp + 0x2c ]
je rwxdata
cmc
cmc
test ah 0xa4
mov edi edx
pushfd
clc
call sub_42da2a
pushfd
lea esp [ esp + 0x28 ]
jne rwxdata
mov al [ ecx ]
test eax 0x84842b85
clc
cmc
call sub_4ad2c4
add [ eax ] al
dec ebp
popad
imul esp [ ebp + 0x53 ] 0x75
jb rwxdata
btr cx di
shl cl cl
neg ch
mov ecx edi
pushfd
neg al
not al
jmp rwxdata
rcl al 0x5
sar al cl
bt esi 0x17
and al dl
sub edx edx
btc ax 0x2
sbb ah ah
lahf
mov eax edx
test bl cl
shl al 0x5
add edi 0x1
cmc
rcr al 0x2
add al dh
shl al 0x6
mov al [ edi ]
cmp bl al
test al al
call sub_431d1a
call sub_434b0f
push edx
pushfd
pushad
lea esp [ esp + 0x28 ]
inc esp
imul esi [ edx + 0x65 ] 0x726f7463
and al 0x8d
and al 0x10
jne rwxdata
popad
je rwxdata
mov [ esp ] 0x62
inc ebp
js rwxdata
cmp ch bh
clc
call sub_4aece6
adc al 0xee
fwait
inc ecx
loope rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
rol al 0x4
clc
neg al
bt di 0x4
mov [ esp ] 0x10
jae rwxdata
cmc
add [ ecx - 0x4b ] esp
int 0x51
xor [ ebp - 0x33 ] 0x5f8f4565
dec ebp
or [ ss : edi ] bh
pop edi
leave
dec edx
sbb [ ecx ] ecx
shl [ edx + edi + 0x3b4e5e02 ] 0x1
scasd [ edi ]
int1
aas
lodsb [ esi ]
mov [ ebx ] bh
push edx
xlat
popf
imul ebx [ eax - 0x10dcfce9 ] 0x53cb737
push ebp
mov [ esi - 0x4e ] ah
nop
pop es
inc esp
mov cl 0x25
jmp rwxdata
inc edx
xlat
dec esp
stosb [ edi ]
mov eax 0x12b456c0
cld
and al al
cwde
cmc
pushad
mov [ esp + 0x14 ] di
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
cmc
call sub_430893
mov al [ eax + edi ]
push [ esp ]
mov [ esp ] 0xa6
push 0x3ad16c2c
mov [ esp + 0x4 ] cl
stosb [ edi ]
push [ esp ]
pushfd
mov [ esp + 0x4 ] ah
mov [ ebp - 0x2 ] al
push ecx
mov [ esp + 0x4 ] 0xb
push ebx
mov [ esp ] bp
lea esp [ esp + 0x40 ]
jmp rwxdata
push esp
mov [ esp ] esi
cmp al [ edi ]
lea eax [ eax + 0x3a41937c ]
bswap eax
lahf
sets ah
lea edi [ edi + 0x1 ]
setb al
lea eax [ ecx + 0x5fbea19a ]
and al 0x10
jae rwxdata
insd
xlat
xchg esi eax
in al 0x59
mov ebp 0xee29b4e
inc edx
or eax 0x32d49606
nop
xchg [ esi + edi - 0x7d73d124 ] bh
ror [ cs : ebx - 0x55d33433 ] cl
je rwxdata
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
jo rwxdata
push ds
fdiv [ esi ]
push 0x477f2fe8
pushfd
lea esp [ esp + 0x28 ]
jbe rwxdata
je rwxdata
int1
lodsb [ esi ]
adc bl [ edx + eax * 4 + 0x1fcd6a14 ]
push ss
mov esp 0xdacf1c6
cwde
xor dl 0x6a
test [ edx + eax * 4 - 0x25 ] edi
cmp ecx esi
lodsb [ esi ]
adc bl [ edx + eax * 4 - 0x45ac1c36 ]
ja rwxdata
jmp sub_43521d
btr di 0xd
sub ecx 0x1
pushad
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x20 ]
mov di di
sub ecx ebp
jmp rwxdata
jb rwxdata
or [ ebp - 0x16cfdb9c ] cl
into
imul edi eax 0xa9018aff
test [ ebx ] ebp
test [ eax + edi * 8 - 0x335170b ] al
mov eax [ esp + 0x48 ]
pushfd
lea esp [ esp + 0x50 ]
ja rwxdata
pop edi
int3
clc
mov ecx [ ebp - 0x8 ]
btr si bx
add ecx [ ebp - 0x4 ]
test bl 0x34
call sub_4ae36d
xor ch [ edx ]
sbb ecx esi
and eax [ edi ]
inc edx
ficom [ ebx - 0x54ac5c85 ]
jg rwxdata
jmp rwxdata
and al 0x28
jns rwxdata
arpl [ edi + ebp * 2 + 0x72 ] si
dec ebp
and eax 0x780bf94f
mov ecx 0xce76c8e1
xchg [ ebx + 0x2f ] esi
fwait
paddusb mmx0 [ ecx + edx * 2 - 0x65 ]
or al 0xa
fdiv [ 0x75b81f7f ]
movsd [ edi ] gs : [ esi ]
inc ebp
lds ecx [ ecx - 0x67 ]
cmp [ ecx ] 0xc5751f67
sub [ ecx - 0x3078f68f ] edi
cmp edx [ edi - 0x80 ]
fld [ edi - 0x449b7ede ]
xor al 0xca
test al 0xc8
push 0x9c73e468
xor al 0xf8
mov cl 0x4d
sub_432fa5
lea esp [ esp + 0x4 ]
jb rwxdata
not ah
pushad
mov [ esp + 0x1c ] edx
lahf
push 0xc88ed181
pushfd
bswap ax
lea eax [ ebx + ecx * 4 + 0x360 ]
pushad
lea esp [ esp + 0x44 ]
call sub_433bc2
pushad
pop edx
movzx dx cl
mov edx [ ebp - 0x20 ]
mov [ esp ] bl
push edx
mov [ esp + 0x4 ] 0x5e7a81e
push esi
xchg [ ebp - 0x24 ] edx
pushad
lea esp [ esp + 0x44 ]
jae rwxdata
xor ah 0x59
aas
lahf
mov eax ecx
cmc
bt di 0x2
call sub_42da34
pushfd
lea eax [ edx * 8 - 0x2c95f1cf ]
pushad
movzx ax al
mov [ ebp - 0x20 ] edx
setpo al
push 0xcf7c8890
mov edx [ esp + 0x28 ]
lea esp [ esp + 0x2c ]
bswap ax
call sub_434eca
not ah
push ecx
mov [ esp ] 0x7b
call sub_4ae29f
sub_432fc1
cmp cx 0x2069
sub ecx eax
mov al [ esp ]
pushfd
seto al
mov al [ ebp - 0x2 ]
pushfd
pushfd
stosb [ edi ]
pushad
pushfd
mov [ esp + 0x8 ] 0x24
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_433391
cmp [ edi - 0x1 ] 0x0
pushad
push 0xe71e793e
lea esp [ esp + 0x28 ]
jne rwxdata
pushad
push [ esp + 0x10 ]
call sub_4a16c8
add [ eax ] al
dec esp
outsd
arpl [ ecx + 0x6c ] sp
inc esi
jb rwxdata
mov di 0x9904
shl di cl
mov edi [ edx + 0x24 ]
cmp dh dl
add edi eax
cmc
stc
movzx ecx [ edi + ecx * 2 ]
neg edi
mov edi [ edx + 0x1c ]
clc
add edi eax
jns rwxdata
daa
aad 0x9f
shr [ ebx + 0x1ef06a2d ] cl
dec dl
sub ah [ edi - 0x38 ]
inc ecx
int1
lodsd [ esi ]
xor [ edx + 0x38b73ae5 ] dl
imul eax [ esi ] 0xdf64d7ad
add [ edx + 0x4b ] ecx
and dl ah
push ebx
cmp ebx [ edx - 0x741f7687 ]
ja rwxdata
add [ gs : eax + 0xe70ce8 ] bl
add [ ecx ] al
shr al 0x1
and bh dh
pushfd
test bl 0x2c
bt si 0x1
mov edi [ edi + ecx * 4 ]
test edi edx
push [ esp ]
clc
test edi edi
pushfd
pushfd
jmp sub_4a1181
cmp cl dl
mov edi [ edi + ecx * 4 ]
cmc
stc
test edi edi
push 0x50d1366d
push 0x98093b1f
push ebx
lea esp [ esp + 0xc ]
je rwxdata
or [ ebx - 0x43 ] ebx
push esi
mov esp 0x204ab062
jo rwxdata
sbb bl [ edx + 0x522923b9 ]
jmp sub_43521d
test ax si
call sub_430152
movsx di al
not ecx
ror al 0x4
bswap cx
not al
not di
bsr di bp
xor eax eax
bswap ecx
mov edi eax
xchg ch al
mov ecx 0x4
lea esp [ esp + 0x30 ]
not al
push 0x987c1e10
pushfd
lodsb [ esi ]
clc
cmp si di
pushad
not al
call sub_431bb3
push edx
push esi
les ebp [ edx ]
mov [ ecx + esi * 8 + 0x1abfa2b3 ] ecx
aaa
pop esp
sub_43365d
pushfd
sbb ecx ecx
pushfd
stc
bt ax 0xb
lea ecx [ ecx + ecx * 2 + 0xb ]
sub esp 0xffffffd0
push 0x74c7e7bd
cmc
stc
test edx 0xb9f3c6df
xchg [ esp ] ecx
test dl 0x73
push esi
cmc
rol cx cl
ror ch cl
push 0xa1d55f5b
lea ecx [ eax + 0x2 ]
adc si bp
mov esi [ ebp - 0x20 ]
add al ch
not esi
shr al 0x6
mov al 0x6a
stc
add esi edi
push edx
jmp sub_42da10
sub_4337c3
push 0x73c0af48
mov [ esp + 0x48 ] ebx
push 0xd961f9a0
lea eax [ rwxdata ]
push 0xb462cc56
mov [ esp + 0x4 ] 0xdf6fc487
call sub_4ae44b
cmp sp 0x367
dec cl
mov ebx eax
shl cl cl
shr di cl
mov edi eax
and ch 0x47
sub cl al
mov ecx 0x104
pushad
jmp rwxdata
sub al al
lea esp [ esp + 0x20 ]
jl rwxdata
bt di 0x7
cmc
jmp rwxdata
[ edi ]
pushad
pushad
lea esp [ esp + 0x40 ]
jne rwxdata
[ edi ]
push 0x61b019bb
call sub_49ea00
jmp sub_43521d
sar cx cl
cmp ecx 0x299098b2
mov ecx edi
shrd si di 0x6
shr si 0x4
add esi 0xcef582e7
sub ecx ebx
stc
inc si
bts esi esp
test sp bp
mov esi esp
bt cx di
sub edi 0x4
stc
cmp bl bl
cmc
push [ edi ]
test ch ch
cmp edi ebx
push 0xe8ff9b50
call sub_4320fe
sub_4338c8
pushad
add esp 0x20
add ebx esp
rol al 0x2
movsx di al
bswap di
setae al
mov edi ebx
shl al 0x2
adc al 0xda
mov al 0x2e
bt ax 0xf
[ edi ]
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jmp sub_4ae8b9
pushfd
pushfd
lahf
movzx ax al
mov [ edi - 0x1 ] 0x0
setpe ah
bswap ax
mov [ esp + 0x4 ] ebx
setl ah
pushad
pop eax
movzx eax dl
lea eax [ rwxdata ]
call sub_430c7f
pushfd
lea esp [ esp + 0x18 ]
jne rwxdata
btr cx di
shl cl cl
neg ch
mov ecx edi
pushfd
neg al
not al
jmp rwxdata
add ah al
bts ax cx
movsx ax dl
xor edx edx
cmc
mov eax edx
stc
seto al
rol al cl
add edi 0x1
and al dl
sar al 0x7
neg al
mov al [ edi ]
pushad
test al al
pushad
push esi
push [ esp + 0xc ]
lea esp [ esp + 0x48 ]
je rwxdata
mov al [ ecx ]
test eax 0x84842b85
clc
cmc
call sub_4ad2c4
add [ eax ] al
dec ebp
popad
imul esp [ ebp + 0x53 ] 0x75
jb rwxdata
cmc
cmc
test ah 0xa4
mov edi edx
pushfd
call sub_4ae362
push edx
pushfd
pushad
lea esp [ esp + 0x28 ]
inc esp
imul esi [ edx + 0x65 ] 0x726f7463
rcl al 0x5
sar al cl
bt esi 0x17
and al dl
sub edx edx
btc ax 0x2
sbb ah ah
lahf
mov eax edx
test bl cl
shl al 0x5
add edi 0x1
cmc
rcr al 0x2
add al dh
shl al 0x6
mov al [ edi ]
cmp bl al
test al al
call sub_431d1a
call sub_434b0f
and al 0x8d
and al 0x10
jne rwxdata
popad
je rwxdata
mov [ esp ] 0x62
inc ebp
js rwxdata
cmp ch bh
clc
call sub_4aece6
adc al 0xee
fwait
inc ecx
loope rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
rol al 0x4
clc
neg al
bt di 0x4
mov [ esp ] 0x10
jae rwxdata
cmc
add [ ecx - 0x4b ] esp
int 0x51
xor [ ebp - 0x33 ] 0x5f8f4565
dec ebp
or [ ss : edi ] bh
pop edi
leave
dec edx
sbb [ ecx ] ecx
shl [ edx + edi + 0x3b4e5e02 ] 0x1
scasd [ edi ]
int1
aas
lodsb [ esi ]
mov [ ebx ] bh
push edx
xlat
popf
imul ebx [ eax - 0x10dcfce9 ] 0x53cb737
push ebp
mov [ esi - 0x4e ] ah
nop
pop es
inc esp
mov cl 0x25
jmp rwxdata
inc edx
xlat
dec esp
stosb [ edi ]
mov eax 0x12b456c0
cld
and al al
cwde
cmc
pushad
mov [ esp + 0x14 ] di
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
cmc
call sub_430893
mov al [ eax + edi ]
push [ esp ]
mov [ esp ] 0xa6
push 0x3ad16c2c
mov [ esp + 0x4 ] cl
stosb [ edi ]
push [ esp ]
pushfd
mov [ esp + 0x4 ] ah
mov [ ebp - 0x2 ] al
push ecx
mov [ esp + 0x4 ] 0xb
push ebx
mov [ esp ] bp
lea esp [ esp + 0x40 ]
jmp rwxdata
push esp
mov [ esp ] esi
cmp al [ edi ]
lea eax [ eax + 0x3a41937c ]
bswap eax
lahf
sets ah
lea edi [ edi + 0x1 ]
setb al
lea eax [ ecx + 0x5fbea19a ]
and al 0x10
jae rwxdata
insd
xlat
xchg esi eax
in al 0x59
mov ebp 0xee29b4e
inc edx
or eax 0x32d49606
nop
xchg [ esi + edi - 0x7d73d124 ] bh
ror [ cs : ebx - 0x55d33433 ] cl
je rwxdata
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
jo rwxdata
push ds
fdiv [ esi ]
push 0x477f2fe8
pushfd
lea esp [ esp + 0x28 ]
jbe rwxdata
je rwxdata
int1
lodsb [ esi ]
adc bl [ edx + eax * 4 + 0x1fcd6a14 ]
push ss
mov esp 0xdacf1c6
cwde
xor dl 0x6a
test [ edx + eax * 4 - 0x25 ] edi
cmp ecx esi
lodsb [ esi ]
adc bl [ edx + eax * 4 - 0x45ac1c36 ]
ja rwxdata
jmp sub_43521d
btr di 0xd
sub ecx 0x1
pushad
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x20 ]
mov di di
sub ecx ebp
jmp rwxdata
jb rwxdata
or [ ebp - 0x16cfdb9c ] cl
into
imul edi eax 0xa9018aff
test [ ebx ] ebp
test [ eax + edi * 8 - 0x335170b ] al
mov eax [ esp + 0x48 ]
pushfd
lea esp [ esp + 0x50 ]
ja rwxdata
pop edi
int3
clc
mov ecx [ ebp - 0x8 ]
btr si bx
add ecx [ ebp - 0x4 ]
test bl 0x34
call sub_4ae36d
xor ch [ edx ]
sbb ecx esi
and eax [ edi ]
inc edx
ficom [ ebx - 0x54ac5c85 ]
jg rwxdata
jmp rwxdata
and al 0x28
jns rwxdata
arpl [ edi + ebp * 2 + 0x72 ] si
dec ebp
and eax 0x780bf94f
mov ecx 0xce76c8e1
xchg [ ebx + 0x2f ] esi
fwait
paddusb mmx0 [ ecx + edx * 2 - 0x65 ]
or al 0xa
fdiv [ 0x75b81f7f ]
movsd [ edi ] gs : [ esi ]
inc ebp
lds ecx [ ecx - 0x67 ]
cmp [ ecx ] 0xc5751f67
sub [ ecx - 0x3078f68f ] edi
cmp edx [ edi - 0x80 ]
fld [ edi - 0x449b7ede ]
xor al 0xca
test al 0xc8
push 0x9c73e468
xor al 0xf8
mov cl 0x4d
sub_433964
pushfd
add edx eax
pushad
pushfd
push edx
mov [ esp ] 0x64
lea esp [ esp + 0x30 ]
jmp rwxdata
test bl cl
shl al 0x5
add edi 0x1
cmc
rcr al 0x2
add al dh
shl al 0x6
mov al [ edi ]
cmp bl al
test al al
call sub_431d1a
call sub_434b0f
sub_433bc2
push edx
mov edx [ ebp - 0x18 ]
shr edx 0xb
imul edx [ eax ]
cmp [ ebp - 0x1c ] edx
jae rwxdata
sub [ ebp - 0x18 ] edx
sub [ ebp - 0x1c ] edx
mov edx [ eax ]
shr edx 0x5
sub [ eax ] edx
call sub_49f61b
stc
pop edx
retn
mov [ ebp - 0x18 ] edx
mov edx 0x800
sub edx [ eax ]
shr edx 0x5
add [ eax ] edx
call sub_49f61b
clc
pop edx
retn
sub_433c02
mov [ esp ] 0x47b5
push [ esp + 0x4 ]
lea esp [ esp + 0x28 ]
jae rwxdata
lea eax [ ecx + 0x7e3c72b6 ]
lea eax [ eax + 0x1bb9c34e ]
pushfd
lea eax [ ebx + edx * 4 ]
call sub_4a5bb2
aas
movzx bx bl
pop ebx
dec ah
lea eax [ eax * 4 - 0x20395f58 ]
lahf
ror ecx cl
pop ecx
movsx eax al
aad 0xe9
pushfd
stc
mov [ ebp - 0x2 ] dl
stc
bts ax sp
neg ah
shld ax cx 0x8
cmp ecx 0x4
pop eax
bswap ax
mov eax ecx
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
bt bx ax
bt edx 0xa
sub ecx eax
jmp rwxdata
and ax di
dec ax
bt edi eax
cmp ecx 0xa
lea eax [ ecx + 0x77ca9a6a ]
lahf
push eax
jmp rwxdata
call sub_430fbb
mov eax 0x3
pushad
lea esp [ esp + 0x24 ]
jb rwxdata
shrd ax ax cl
jmp rwxdata
dec ax
mov eax 0x6
call sub_432fc1
sub_433c9a
lea esp [ esp + 0x4 ]
call sub_4a5ccd
test dl dl
add [ ebp - 0x20 ] eax
rcr ch cl
cmp cl dl
pop ecx
movzx ax al
stc
cmp bh ah
sar ah cl
pop eax
cmc
cmp ecx 0x7
pushfd
push 0x23399806
sbb ecx ecx
mov [ esp + 0x4 ] dh
jmp rwxdata
lea ecx [ ecx + ecx * 2 + 0xa ]
push 0x78bd0a0b
pushad
mov [ esp + 0x4 ] bx
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
push 0x74c7e7bd
cmc
stc
test edx 0xb9f3c6df
xchg [ esp ] ecx
test dl 0x73
push esi
cmc
rol cx cl
ror ch cl
push 0xa1d55f5b
lea ecx [ eax + 0x2 ]
adc si bp
mov esi [ ebp - 0x20 ]
add al ch
not esi
shr al 0x6
mov al 0x6a
stc
add esi edi
push edx
jmp sub_42da10
sub_433f95
mov [ ebp - 0x28 ] eax
push [ esp ]
btc dx 0xe
mov [ ebp - 0x14 ] eax
shl dl cl
rcl dx cl
btc dx 0xe
sub eax 0x1
pushad
mov [ ebp - 0x18 ] eax
lea esp [ esp + 0x2c ]
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_434094
mov eax 0x3
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
jb rwxdata
bt bx ax
bt edx 0xa
sub ecx eax
jmp rwxdata
ror ax cl
pushfd
sbb al 0xc5
btc ax bp
mov eax 0x6
bt bp cx
cmp al 0x20
pushad
pushfd
sub ecx eax
call sub_4341b4
adc ax 0x3925
jmp rwxdata
call sub_430fbb
neg al
mov eax 0x6
sub_4340e0
pushad
mov [ esp ] 0xc2
lea esp [ esp + 0x28 ]
jg rwxdata
call sub_4a092c
add [ eax ] dl
add [ eax ] al
pop esp
add [ eax ] al
add [ edx ] cl
xor [ ebx ] bh
xor [ esi + 0x31 ] edx
adc al 0x32
mov bh 0x32
jmp 0x537d4277
jae rwxdata
pushfd
lea edx [ ecx + 0x4e0b7053 ]
mov edx [ esp + 0x4 ]
mov [ esp ] 0x7e71
pushfd
movsx esi bl
mov ebx [ esp + 0xc ]
mov [ esp ] 0xdb19
movzx si dl
mov edi [ esp + 0x10 ]
not esi
pushfd
call sub_4b0443
xchg bl ch
bsf bx si
inc bx
or edi 0x484e29ed
mov ebx eax
or ch 0x3b
push 0xd29c1478
mov edi eax
adc cl 0x2b
mov ecx 0x104
call sub_43466b
sub_43411d
lea esp [ esp + 0x30 ]
jb rwxdata
bt bx ax
bt edx 0xa
sub ecx eax
jmp rwxdata
cmc
aaa
cmp ecx 0xa
setge ah
mov eax 0x3
jmp rwxdata
call sub_430fbb
pushad
pushad
push ebx
lea esp [ esp + 0x44 ]
jb rwxdata
jmp rwxdata
mov eax 0x6
clc
sub ecx eax
pushfd
mov al cl
pushad
mov al [ ebp - 0x2 ]
lea esp [ esp + 0x24 ]
jbe rwxdata
pushad
stosb [ edi ]
push 0xd19d9ed2
push 0x2b31d3ea
pushfd
push [ esp + 0x8 ]
lea esp [ esp + 0x30 ]
jmp rwxdata
stosb [ edi ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_43466b
call sub_4a1beb
pushfd
jmp rwxdata
lea esp [ esp + 0x28 ]
je rwxdata
mov di 0x641a
pop esi
jmp rwxdata
add al 0xb8
xor ebx ebx
aaa
mov [ ebp - 0x4 ] ebx
jmp rwxdata
not ecx
mov di 0xc5e4
bswap cx
pop edi
mov bl al
call sub_4a58d8
mov eax edx
not cx
cmc
shr eax 0x10
jmp rwxdata
sbb ch bh
or cl ah
dec ch
mov ecx [ esi + 0x4 ]
clc
jne rwxdata
pushfd
pushad
stc
cmp dh ah
or ecx ecx
mov [ esp ] 0xe2ca
jmp rwxdata
test bl dl
bt si 0x4
or ecx ecx
call sub_49f04f
lea esp [ esp + 0x24 ]
bsr di ax
add [ ebp - 0x4 ] ecx
je rwxdata
0xf2e5e4d5 0x36d0
sbb [ ebx + 0x15 ] dh
in al 0xfd
mov [ 0x35640c58 ] eax
rol ch 0x1
in eax dx
dec cx
pushfd
xchg ebx eax
fwait
xor eax 0x648d9744
and al 0x24
lodsb [ esi ]
sbb ah bh
jbe rwxdata
bt sp 0xd
pushad
sub edi 0x9b074a1d
ror bl 0x1
sub ecx 0x8
bt ax di
shr ecx 0x1
btr edi ebx
sub di dx
call sub_4af778
fnsave [ 0xdf00bde ]
inc edx
push esp
aas
fistp [ edi ]
mov ebx 0xbe3cb5b
dec ebp
into
add al 0x12
and ah 0xea
sub al 0x44
push 0xe64827ac
sbb [ ecx ] al
jae rwxdata
push ecx
sbb eax [ eax ]
add [ esi + 0xf ] ah
mov ebp 0xfc4d01f8
sar [ ebx - 0x78 ] 0x1
push eax
xchg ecx eax
insb
add eax ebx
and eax 0xceaab06f
aam 0x9c
0xf358a002 0xef6b
cmp eax 0x2ba2d6eb
fbstp [ eax ]
sbb al 0xa3
fsubrp st6
jg rwxdata

test [ ebp - 0x19cf4554 ] ax
in al 0x9a
lahf
jmp 0xffffffff83aeb24a
sub_434676
cmc
sub edi 0x4
clc
push [ edi ]
pop [ esp + 0x20 ]
bt si 0xb
cmc
pushfd
cmp edi ebx
mov [ esp ] 0x6d
call sub_430d8a
pushad
xchg [ ebp - 0x28 ] eax
push [ esp + 0x8 ]
call sub_434a0d
sub_434aa7
push [ esp + 0xc ]
pushfd
lea esp [ esp + 0x3c ]
ja rwxdata
clc
push ecx
mov [ esp ] cx
push edx
sub edi 0x4
call sub_42da86
adc al dl
cmp edi 0xda869020
or al ch
sub ebx edi
rcr al cl
sete al
add ebx esp
cmc
sub di 0x1e8c
mov edi ebx
jmp rwxdata
shl al cl
and al 0xe7
mov al 0x2e
push esp
[ edi ]
call sub_4afb3d
sub_434ad6
push ecx
mov [ esp + 0x8 ] 0x7dd7
pushfd
mov [ esp + 0x30 ] rwxdata
pushfd
jmp rwxdata
push [ esp ]
push eax
mov [ esp + 0x38 ] eax
push 0xdd28a4f0
mov [ esp ] dx
pushfd
push [ esp + 0x40 ]
retn 0x44
sub_434b56
cmc
cmp bp di
pushad
add eax edx
pushfd
lea eax [ ebx + eax * 4 + 0x3c0 ]
jmp rwxdata
push [ esp + 0x4 ]
mov [ esp + 0x4 ] ah
mov [ esp ] 0xe9
lea esp [ esp + 0x2c ]
call sub_433bc2
jmp rwxdata
push edx
jmp sub_4a5f5f
sub_434c69
cmp eax edx
pushad
push esp
mov [ esp + 0x8 ] 0x2519
lea esp [ esp + 0x28 ]
jb rwxdata
pushfd
lea edx [ ecx + 0x4e0b7053 ]
mov edx [ esp + 0x4 ]
mov [ esp ] 0x7e71
pushfd
movsx esi bl
mov ebx [ esp + 0xc ]
mov [ esp ] 0xdb19
movzx si dl
mov edi [ esp + 0x10 ]
not esi
pushfd
call sub_4b0443
bt bp bx
cmp bl cl
cmc
stc
cmp eax [ ebp - 0x10 ]
jmp rwxdata
jmp rwxdata
jae rwxdata
lea edi [ ebx + 0x160dd96 ]
sub di 0x96eb
mov ebx eax
lea ecx [ ecx - 0x34da07b7 ]
call sub_430b5a
test [ ecx * 8 + 0x4207544d ] cl
fild [ eax - 0x2e ]
js rwxdata
call r--data
out 0xb6 al
hlt
mov esi 0xd81edcae
into
in al 0xf8
sub_434c8e
pushfd
jmp rwxdata
lea esp [ esp + 0x10 ]
call sub_433bc2
pushfd
pushfd
mov [ esp + 0x4 ] ch
pushad
xchg [ ebp - 0x28 ] edx
push 0x9a718e20
push edi
lea esp [ esp + 0x30 ]
jle rwxdata
pushad
push 0xed68c9e6
pushad
mov [ esp + 0x8 ] bl
lea esp [ esp + 0x44 ]
jae rwxdata
jae rwxdata
pushfd
lea eax [ edx * 8 - 0x2c95f1cf ]
pushad
movzx ax al
mov [ ebp - 0x20 ] edx
setpo al
push 0xcf7c8890
mov edx [ esp + 0x28 ]
lea esp [ esp + 0x2c ]
bswap ax
call sub_434eca
mov ax bp
push 0xa2dc32c0
pushfd
pushfd
xchg [ ebp - 0x14 ] edx
jmp sub_48e3e7
movzx ax dl
lahf
movzx ax dl
xchg [ ebp - 0x14 ] edx
sub_434e45
lea esp [ esp + 0x28 ]
call sub_4b0154
cmp cl ch
stc
mov [ ebp - 0x20 ] eax
cmc
clc
cmp bl dl
clc
cmp eax 0x4
push 0x8491c1a0
mov [ esp ] 0x50f8
pushfd
lea esp [ esp + 0x8 ]
jb rwxdata
dec eax
and ch dl
daa
pop ecx
movsx ax cl
pushad
mov eax [ esp + 0x20 ]
push [ esp + 0x8 ]
test bl 0xe2
clc
cmp ecx 0x7
mov [ esp + 0x4 ] dx
call j_sub_4a61e1
xadd cl dh
bsr dx bp
stc
mov ecx eax
sar dh cl
shl dx 0x8
xor dl 0xdf
setb dl
mov edx 0x1
test edx ebx
stc
pushad
shr ecx 0x1
call sub_49f8d5
sub_434e9a
pushad
cmp [ edi - 0x1 ] 0x0
push [ esp + 0x8 ]
lea esp [ esp + 0x2c ]
jne rwxdata
pushad
push [ esp + 0x10 ]
call sub_4a16c8
add [ eax ] al
dec esp
outsd
arpl [ ecx + 0x6c ] sp
inc esi
jb rwxdata
dec edi
push eax
shrd di di 0x8
bsf di bx
mov edi [ edx + 0x24 ]
test bl 0xba
bt sp ax
clc
add edi eax
call sub_434b3e
daa
aad 0x9f
shr [ ebx + 0x1ef06a2d ] cl
dec dl
sub ah [ edi - 0x38 ]
inc ecx
int1
lodsd [ esi ]
xor [ edx + 0x38b73ae5 ] dl
imul eax [ esi ] 0xdf64d7ad
add [ edx + 0x4b ] ecx
and dl ah
push ebx
cmp ebx [ edx - 0x741f7687 ]
ja rwxdata
add [ gs : eax + 0xe70ce8 ] bl
add [ ecx ] al
shr al 0x1
and bh dh
or [ ebx - 0x43 ] ebx
push esi
mov esp 0x204ab062
jo rwxdata
sbb bl [ edx + 0x522923b9 ]
push edx
push esi
les ebp [ edx ]
mov [ ecx + esi * 8 + 0x1abfa2b3 ] ecx
aaa
pop esp
sub_43521d
rol si cl
sub eax eax
pushfd
lea edx [ ecx + 0x4e0b7053 ]
mov edx [ esp + 0x4 ]
mov [ esp ] 0x7e71
pushfd
movsx esi bl
mov ebx [ esp + 0xc ]
mov [ esp ] 0xdb19
movzx si dl
mov edi [ esp + 0x10 ]
not esi
pushfd
call sub_4b0443
sub_435251
lea esp [ esp + 0x4 ]
jb rwxdata
add al cl
btr ecx 0x17
pop ebx
sbb ax dx
movzx ax bl
pop ecx
sub ax 0x4a06
mov ah 0x9e
mov [ ebp - 0x2 ] dl
shld ax cx 0x9
cmp ecx 0x4
pushfd
mov eax ecx
pushad
jmp rwxdata
jmp rwxdata
push 0x1d1c032a
call sub_4af617
xor dh dl
push 0xe34ab969
jmp sub_49fb93
sub_435260
call sub_4323fc
add [ eax ] al
dec edi
push ebx
mov bh 0xb4
popfd
push es
mov edi 0xd692ac7e
mov edx [ edx - 0x8 ]
xchg edx eax
imul edi [ ebp - 0x3c ] 0x1989646a
je rwxdata
outsb
push ebx
inc ebx
dec ebp
popad
outsb
popad
jb rwxdata
cmp ch ch
push esi
pop es
inc edx
jpo rwxdata
enter 0xba3a 0x21
push ebx
imul [ ebp - 0x5c ]
rcr [ ebx - 0x1ffe144c ] 0x71
sbb [ edi + edx * 8 + 0x2d ] dh
xchg esp eax
test [ ebp - 0x24 ] ebx
mov dh 0x46
inc ebp
add bh bh
xor al 0x24
pushad
call sub_42d4b3
jo rwxdata
adc ch [ eax - 0x56 ]
jo rwxdata
int1
push ds
jno rwxdata
inc edx
mov esp 0xbace0802
cmp dl ch
0x708e3808 0x3387
push ebp
in al dx
bound edi [ ebx - 0x30184e37 ]
add [ ecx - 0x4f ] eax
or ecx esi
cdq
loopne rwxdata
cmp eax 0x6d00631d
in eax 0x84
fchs
and [ edx + 0x39e0999a ] edi
fcom [ esi - 0x5a ]
push ebx
shr [ ebp + 0x45213936 ] cl
cdq
mov dh 0x7d
in al dx
xor ch [ ebx - 0x66ed8577 ]
add bh dh
pop ebp
clc
or eax 0xedf2d827
mov al 0x2b
rcl [ ecx - 0x28 ] cl
dec edi
stosb [ edi ]
cmp [ ecx + 0x5769bcaf ] esp
pop es
inc edx
jmp [ esi + ecx * 4 - 0x74 ]
inc esi
sahf
hlt
sub_48e3e7
mov [ ebp - 0x20 ] edx
mov dx bp
not ax
pushfd
mov edx [ esp + 0x10 ]
bswap ax
movsx ax al
lea eax [ ebx + 0x50d0 ]
push 0x2eaceb7f
mov [ esp ] 0xde7d043d
pushad
lea esp [ esp + 0x38 ]
call sub_49fa94
jmp rwxdata
cmp ecx 0x7
call sub_430f24
sub_48e42a
mov [ esp ] bx
lea esp [ esp + 0x54 ]
call sub_49fa94
cmp bx cx
push 0x2867b782
push esp
jmp rwxdata
mov [ esp + 0x4 ] eax
clc
lea esp [ esp + 0x4 ]
jpe rwxdata
pushfd
mov [ esp ] ecx
pushad
clc
cmp eax 0x4
pushfd
push 0x48f9a490
push edi
lea esp [ esp + 0x2c ]
jb rwxdata
push ecx
bt bx 0x4
jmp rwxdata
btc cx bx
mov ecx 0x6
test dl bl
clc
shl eax cl
push esp
mov [ esp ] 0x32
pushfd
pushad
lea eax [ ebx + eax * 4 + 0x6c0 ]
call sub_4a098c
btc cx dx
xchg al cl
shr ax cl
xadd cl al
mov eax 0x3
bts cx sp
shld cx ax cl
bsr ecx esi
mov ecx 0x6
jmp rwxdata
clc
stc
cmp eax 0x4
call sub_42d133
bt si si
pushfd
shl eax cl
pushfd
call sub_4323e0
sub_48e96c
not al
mov al [ ebp - 0x2 ]
push [ esp ]
stosb [ edi ]
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_48eaed
pushfd
lea esp [ esp + 0x10 ]
call sub_433bc2
jmp rwxdata
pushfd
push esp
lea esp [ esp + 0x8 ]
ja rwxdata
call sub_4308d1
jb rwxdata
bswap ax
call sub_434eca
xor al bl
pushad
ror ah cl
add esp 0x20
jpe rwxdata
call sub_4af736
cmp ecx 0x7
dec ah
movzx ax bl
call sub_4aeefb
sub_49e5a1
pushad
lea esp [ esp + 0x24 ]
je rwxdata
dec dh
add cl cl
sete ah
xchg dh al
movzx ax bl
setl al
setb dh
pushfd
push esi
lea eax [ ebx + edx * 4 + 0x400 ]
pushfd
jmp sub_4a5f53
lea eax [ ecx + 0x7e3c72b6 ]
lea eax [ eax + 0x1bb9c34e ]
pushfd
lea eax [ ebx + edx * 4 ]
call sub_4a5bb2
sub_49ea26
pushad
movsx si al
[ edi ]
jmp rwxdata
not si
mov esi [ ebp + 0x8 ]
not cl
pushfd
pushfd
lodsb [ esi ]
shl di 0x6
jmp rwxdata
not al
or cx 0x43d4
sub al 0x76
xchg di cx
jmp rwxdata
movsx di al
not ecx
ror al 0x4
bswap cx
not al
not di
bsr di bp
xor eax eax
bswap ecx
mov edi eax
xchg ch al
mov ecx 0x4
lea esp [ esp + 0x30 ]
not al
push 0x987c1e10
pushfd
lodsb [ esi ]
clc
cmp si di
pushad
not al
call sub_431bb3
sub_49ea32
push 0x372ead84
push 0x99e3ad1a
lea esp [ esp + 0x14 ]
jne rwxdata
jmp sub_4ae8b9
setge al
lahf
mov [ edi - 0x1 ] 0x0
setg al
movsx ax bl
ja rwxdata
pushad
pushfd
pushfd
mov [ esp + 0x24 ] ebx
jmp sub_49f168
push ebx
mov ah ch
jmp rwxdata
lea eax [ eax + 0xdb526ae ]
movsx eax cl
lea eax [ rwxdata ]
pushfd
call sub_434b6a
sub_49ea63
mov [ ebp - 0x20 ] edx
pushfd
cmp eax 0xe
pushfd
jmp rwxdata
mov [ esp ] ah
lea esp [ esp + 0x34 ]
jae rwxdata
push 0x760b6a25
jmp rwxdata
pushfd
pushfd
jmp rwxdata
push ebx
clc
sub ecx 0x4
call sub_432202
cmc
sub edx eax
push [ esp ]
pushfd
mov ah 0x59
lea eax [ ebp * 8 + 0x35565da ]
lea eax [ ebx + edx * 4 + 0xabc ]
jmp rwxdata
lea esp [ esp + 0x10 ]
call sub_4a5ccd
shrd cx bx cl
rol ecx 0x10
cmp edx 0x5844a0ed
stc
add [ ebp - 0x20 ] eax
cmc
pop ecx
adc ah 0x33
lahf
aam 0xc7
lea eax [ 0xffffffffe77c8523 ]
pop eax
cmc
cmp ecx 0x7
jo rwxdata
push ecx
mov [ esp ] dh
push 0x60dbacbe
sbb ecx ecx
pushfd
push [ esp ]
jmp rwxdata
sbb ecx ecx
push esp
lea ecx [ ecx + ecx * 2 + 0xa ]
push 0xf5b68831
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
lea ecx [ ecx + ecx * 2 + 0xa ]
push [ esp ]
pushfd
pushfd
lea esp [ esp + 0x1c ]
jmp rwxdata
push 0x74c7e7bd
cmc
stc
test edx 0xb9f3c6df
xchg [ esp ] ecx
test dl 0x73
push esi
cmc
rol cx cl
ror ch cl
push 0xa1d55f5b
lea ecx [ eax + 0x2 ]
adc si bp
mov esi [ ebp - 0x20 ]
add al ch
not esi
shr al 0x6
mov al 0x6a
stc
add esi edi
push edx
jmp sub_42da10
sub_49f04f
lea esp [ esp + 0x4 ]
je rwxdata
mov di 0x641a
pop esi
jmp rwxdata
ror bh 0x4
dec edi
setge bh
push 0xbb4309fe
add [ ebp - 0x4 ] ecx
movsx di al
inc di
adc bh al
sub ecx 0x8
inc bl
bswap bx
lea edi [ esi + 0x555fca8e ]
shr ecx 0x1
and bx 0xcfd4
bsf bx cx
ror edi cl
pushad
mov edi [ esi ]
stc
inc bl
jmp rwxdata
not ecx
mov di 0xc5e4
bswap cx
pop edi
mov bl al
call sub_4a58d8
add edi [ ebp + 0x10 ]
shl bl cl
bsf bx si
rcl bl cl
add esi 0x8
sub esp 0xffffffdc
sub bx 0xb3e5
shr bl 0x6
bts bx 0x1
rol bl 0x2
mov bx [ esi ]
pushad
jmp rwxdata
jmp rwxdata
clc
shr ebx 0xc
pushad
call sub_4a1a0f
push ebx
lea eax [ rwxdata ]
mov [ esp ] 0x68679056
jmp sub_431405
sub_49f156
pushad
pushfd
lea esp [ esp + 0x2c ]
jne rwxdata
jmp sub_4ae8b9
pushad
jmp rwxdata
pushfd
seta ah
mov [ edi - 0x1 ] 0x0
pushad
lea eax [ edi - 0x62f49847 ]
call sub_4337c3
retn 0x7fd2
sub_49f168
cwde
call sub_4a1e09
add al 0x16
pminub mm6 mm5
or eax 0x48ee8542
jbe rwxdata
dec esp
ficom [ edi ]
pop eax
0x18e8
jb rwxdata
xor al 0x59
mov eax [ 0xffffffffdb2326e5 ]
mov [ 0x4301d835 ] eax
retn
rcl [ eax - 0x115d2bca ] 0x1
xor al 0xb6
push esp
0x2468
sub_49f37c
pushfd
mov [ esp + 0x4 ] 0xe675
lea esp [ esp + 0x2c ]
ja rwxdata
cmp ch bh
clc
call sub_4aece6
adc al 0xee
fwait
inc ecx
loope rwxdata
push 0x6080108
jmp rwxdata
cmc
add [ ecx - 0x4b ] esp
int 0x51
xor [ ebp - 0x33 ] 0x5f8f4565
dec ebp
or [ ss : edi ] bh
pop edi
leave
dec edx
sbb [ ecx ] ecx
shl [ edx + edi + 0x3b4e5e02 ] 0x1
scasd [ edi ]
int1
aas
lodsb [ esi ]
mov [ ebx ] bh
push edx
xlat
popf
imul ebx [ eax - 0x10dcfce9 ] 0x53cb737
push ebp
mov [ esi - 0x4e ] ah
nop
pop es
inc esp
mov cl 0x25
jmp rwxdata
inc edx
xlat
dec esp
stosb [ edi ]
mov eax 0x12b456c0
cld
and al al
cwde
cmc
mov [ esp ] 0xaa786ab8
lea esp [ esp + 0x4 ]
jb rwxdata
insd
xlat
xchg esi eax
in al 0x59
mov ebp 0xee29b4e
inc edx
or eax 0x32d49606
nop
xchg [ esi + edi - 0x7d73d124 ] bh
ror [ cs : ebx - 0x55d33433 ] cl
je rwxdata
pushad
mov [ esp + 0x14 ] di
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
test bh bh
call sub_4ae1a8
cwde
seta al
cwde
lea eax [ ebx + 0xcc8 ]
call j_sub_48e42a
push ds
fdiv [ esi ]
jmp rwxdata
push 0x477f2fe8
pushfd
lea esp [ esp + 0x28 ]
jbe rwxdata
jmp sub_43521d
btr di 0xd
sub ecx 0x1
pushad
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x20 ]
mov di di
sub ecx ebp
jmp rwxdata
clc
mov ecx [ ebp - 0x8 ]
btr si bx
add ecx [ ebp - 0x4 ]
test bl 0x34
call sub_4ae36d
xor ch [ edx ]
sbb ecx esi
and eax [ edi ]
inc edx
ficom [ ebx - 0x54ac5c85 ]
jg rwxdata
dec ebp
and eax 0x780bf94f
mov ecx 0xce76c8e1
xchg [ ebx + 0x2f ] esi
fwait
paddusb mmx0 [ ecx + edx * 2 - 0x65 ]
or al 0xa
fdiv [ 0x75b81f7f ]
movsd [ edi ] gs : [ esi ]
inc ebp
lds ecx [ ecx - 0x67 ]
cmp [ ecx ] 0xc5751f67
sub [ ecx - 0x3078f68f ] edi
cmp edx [ edi - 0x80 ]
fld [ edi - 0x449b7ede ]
xor al 0xca
test al 0xc8
push 0x9c73e468
xor al 0xf8
mov cl 0x4d
sub_49f608
pushfd
mov [ ebp - 0x2 ] al
pushfd
mov [ esp ] 0x41
push edx
lea esp [ esp + 0x28 ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_49f61b
cmp [ ebp - 0x15 ] 0x0
jne rwxdata
retn
shl [ ebp - 0x18 ] 0x8
shl [ ebp - 0x1c ] 0x8
push eax
lodsb [ esi ]
not al
sub al 0x76
ror al 0x4
not al
mov [ ebp - 0x1c ] al
pop eax
sub_49f886
mov [ esp + 0x4 ] 0x2d
pushfd
lea esp [ esp + 0x2c ]
jb rwxdata
lea eax [ ecx + 0x7e3c72b6 ]
lea eax [ eax + 0x1bb9c34e ]
pushfd
lea eax [ ebx + edx * 4 ]
call sub_4a5bb2
lea eax [ ebx * 8 - 0x4b08cd48 ]
mov eax [ ebp - 0x20 ]
stc
neg dh
not eax
mov dh 0xc9
mov cl cl
xadd cl dh
cmp ah 0x71
mov cl [ eax + edi ]
dec dh
add cl cl
sete ah
xchg dh al
movzx ax bl
setl al
setb dh
pushfd
push esi
lea eax [ ebx + edx * 4 + 0x400 ]
pushfd
jmp sub_4a5f53
sub_49fa94
push ecx
call sub_433bc2
jae rwxdata
mov ecx 0x3
shl edx cl
lea eax [ eax + edx * 4 + 0x8 ]
call sub_4b0154
pop ecx
retn
add eax 0x4
call sub_433bc2
jb rwxdata
add eax 0x404
mov ecx 0x8
call sub_4b0154
add eax 0x10
pop ecx
retn
mov ecx 0x3
shl edx cl
lea eax [ eax + edx * 4 + 0x204 ]
call sub_4b0154
add eax 0x8
pop ecx
retn
sub_49fade
push 0x1081013b
lea esp [ esp + 0x2c ]
jne rwxdata
jmp sub_43521d
cmp ebp 0xccd7e882
cmc
stc
bswap ecx
mov ecx edi
rol si 0x8
pushad
sub ecx ebx
not si
lea esi [ esp + 0x20 ]
cmp dx 0xaa5f
call sub_434676
sub_49fb65
lea esp [ esp + 0x2c ]
call sub_4a5ccd
btc cx 0x4
add [ ebp - 0x20 ] eax
xadd al cl
aam 0xe0
pop ecx
sbb ax bp
btc ax bx
shrd ax bp cl
pop eax
pushfd
stc
cmp ecx 0x7
pushfd
call sub_435a7f
sub_49fb93
pushfd
cmc
test dh 0x1
mov dh [ esp ]
mov dh 0x0
call sub_431aaa
lea esp [ esp + 0x30 ]
ja rwxdata
jmp sub_4ae8b9
clc
imul edx edx 0xa
test dx 0x4b24
bt bx 0x5
bt bp bx
add edx eax
pushad
push [ esp ]
lea esp [ esp + 0x24 ]
jmp rwxdata
test bl cl
shl al 0x5
add edi 0x1
cmc
rcr al 0x2
add al dh
shl al 0x6
mov al [ edi ]
cmp bl al
test al al
call sub_431d1a
call sub_434b0f
sub_4a02b5
push 0x7267cedc
lea esp [ esp + 0x30 ]
jb rwxdata
dec eax
and ch dl
daa
pop ecx
movsx ax cl
pushad
mov eax [ esp + 0x20 ]
push [ esp + 0x8 ]
test bl 0xe2
clc
cmp ecx 0x7
mov [ esp + 0x4 ] dx
call j_sub_4a61e1
lea edx [ edx * 4 - 0x55adf80 ]
mov ecx eax
cmc
mov edx 0x1
test dx bx
push esi
stc
shr ecx 0x1
pushad
adc edx edx
test ch 0x11
cmc
bt sp 0xb
stc
sub ecx 0x1
stc
shl edx cl
pushfd
call sub_49ea63
sub_4a08f9
test bp dx
pushfd
sub edi 0x4
clc
pushfd
bt ebx ebp
cmp bp 0xa06e
push [ edi ]
pop [ esp + 0x8 ]
clc
cmp edi ebx
pushfd
push [ esp ]
lea esp [ esp + 0x10 ]
ja rwxdata
clc
push ecx
mov [ esp ] cx
push edx
sub edi 0x4
call sub_42da86
sub al al
sbb al 0xe7
neg al
call sub_4a0b18
sub_4a092c
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
pushfd
lea edx [ ecx + 0x4e0b7053 ]
mov edx [ esp + 0x4 ]
mov [ esp ] 0x7e71
pushfd
movsx esi bl
mov ebx [ esp + 0xc ]
mov [ esp ] 0xdb19
movzx si dl
mov edi [ esp + 0x10 ]
not esi
pushfd
call sub_4b0443
stc
bswap di
mov ebx eax
inc di
mov edi eax
pushad
mov ecx 0x104
cmc
test dx 0xbee6
pushad
mov [ esp ] al
sub al al
jmp rwxdata
jmp rwxdata
[ edi ]
push ecx
push [ esp ]
lea esp [ esp + 0x48 ]
jne rwxdata
jmp sub_43521d
ror si cl
jmp rwxdata
cmp ah cl
movsx si al
mov ecx edi
sar esi cl
sub ecx ebx
shl esi cl
mov esi 0xf249f4f9
mov esi esp
pushfd
bt bx bp
sub edi 0x4
jmp sub_4af11c
sub_4a095b
cwde
bswap ax
sbb ecx ecx
lahf
lea eax [ edi * 4 + 0x33849035 ]
mov al 0xa6
lea eax [ 0xffffffff8224723b ]
lea ecx [ ecx * 2 + 0xb ]
pop eax
bswap eax
not al
setge al
mov eax [ ebp - 0x20 ]
pushfd
pushfd
pushad
jmp rwxdata
not eax
pushfd
mov [ esp ] al
push ebp
mov [ esp + 0x4 ] 0xe8
mov al [ eax + edi ]
push 0x9a5cf73f
push [ esp ]
call sub_43262c
sub_4a098c
push ecx
pushfd
jmp rwxdata
lea esp [ esp + 0x34 ]
call sub_4b0154
clc
test ch cl
bt cx bp
pushfd
mov [ ebp - 0x20 ] eax
pushfd
clc
call sub_4af53d
sub_4a0b18
sub ebx edi
inc edi
setb al
sub esp 0xfffffffc
add ebx esp
pushad
bts edi 0x15
mov edi ebx
clc
neg al
mov al 0x2e
pushfd
push 0x6d7b5c5c
pushfd
cmp bx 0x29ef
[ edi ]
push [ esp ]
jmp rwxdata
lea esp [ esp + 0x30 ]
jne rwxdata
jmp sub_4ae8b9
pushad
mov [ edi - 0x1 ] 0x0
setae al
jmp rwxdata
movzx ax bl
mov [ esp + 0x1c ] ebx
cwde
mov al cl
movzx ax bl
out dx al
mov [ 0x1e670746 ] eax
add [ edi - 0x66 ] ch
aaa
mov ch 0x53
push ds
jl rwxdata
mov [ edx ] 0xea
xor [ edx - 0x34010c8d ] dh
stosd [ edi ]
push esi
aad 0x8e
in eax 0x25
cmc
xchg ebx eax
retn 0xa031
dec ebp
mov ch 0xb5
jecxz rwxdata
add al 0x83
bound ecx [ ebx ]
pushad
mov dh 0xa7
int 0xa0
inc edx
sub [ edx - 0x4308e07f ] 0xffffffd1
cmp [ edx ] edi
in al dx
jg rwxdata
lea eax [ rwxdata ]
call sub_430915
test eax 0xed677a2
inc edx
sub bl dl
lodsd [ esi ]
adc eax 0x29d92505
lds ecx [ ebp - 0x4b ]
mov ch 0xe3
fstp [ esi ]
movzx eax bl
mov ah 0x46
movsb [ edi ] [ esi ]
pop esi
jl rwxdata
push ds
bt bx cx
pushfd
clc
neg al
jmp rwxdata
loopne rwxdata
pushfd
ror al 0x4
pushfd
pushfd
inc al
pushfd
xor al 0x4d
jmp rwxdata
sbb eax 0x74ad251a
fdiv [ eax ]
xchg edx eax
mov [ esi + 0x7db74fdb ] dh
pop ss
mov dh 0xe
aad 0x1f
stosb [ edi ]
adc bl [ ebp + 0x7dee863f ]
xchg [ edx - 0x52 ] ecx
stosb [ edi ]
sbb [ esp + edi * 2 ] ebx
insb
shl [ edi - 0x32 ] 0x49
mov [ ecx ] al
bt bp 0x1
pushad
add ecx 0x1
cmp di cx
test ah ah
pushfd
jmp rwxdata
push ebp
push edx
lea esp [ esp + 0x48 ]
jne rwxdata
pushfd
neg al
not al
jmp rwxdata
pushfd
push [ esp ]
jmp rwxdata
mov al [ ecx ]
test eax 0x84842b85
clc
cmc
call sub_4ad2c4
add [ eax ] al
dec ebp
popad
imul esp [ ebp + 0x53 ] 0x75
jb rwxdata
mov [ esp + 0x4 ] edi
mov [ esp ] 0x1c
mov [ esp ] ebx
pushfd
lea esp [ esp + 0x4 ]
call sub_42db6b
pushad
lea esp [ esp + 0x20 ]
jg rwxdata
push edx
pushfd
pushad
lea esp [ esp + 0x28 ]
inc esp
imul esi [ edx + 0x65 ] 0x726f7463
jmp rwxdata
pushfd
mov esp esi
pushfd
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
rcl al 0x5
sar al cl
bt esi 0x17
and al dl
sub edx edx
btc ax 0x2
sbb ah ah
lahf
mov eax edx
test bl cl
shl al 0x5
add edi 0x1
cmc
rcr al 0x2
add al dh
shl al 0x6
mov al [ edi ]
cmp bl al
test al al
call sub_431d1a
call sub_434b0f
and al 0x8d
and al 0x10
jne rwxdata
popad
je rwxdata
push 0xa352aa4c
mov esp esi
pushfd
pushad
mov [ esp + 0x4 ] al
lea esp [ esp + 0x24 ]
jmp rwxdata
pushfd
lea edx [ ecx + 0x4e0b7053 ]
mov edx [ esp + 0x4 ]
mov [ esp ] 0x7e71
pushfd
movsx esi bl
mov ebx [ esp + 0xc ]
mov [ esp ] 0xdb19
movzx si dl
mov edi [ esp + 0x10 ]
not esi
pushfd
call sub_4b0443
btr cx di
shl cl cl
neg ch
mov ecx edi
mov [ esp ] 0x62
inc ebp
js rwxdata
cmp ch bh
clc
call sub_4aece6
adc al 0xee
fwait
inc ecx
loope rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
rol al 0x4
clc
neg al
bt di 0x4
mov [ esp ] 0x10
jae rwxdata
cmc
add [ ecx - 0x4b ] esp
int 0x51
xor [ ebp - 0x33 ] 0x5f8f4565
dec ebp
or [ ss : edi ] bh
pop edi
leave
dec edx
sbb [ ecx ] ecx
shl [ edx + edi + 0x3b4e5e02 ] 0x1
scasd [ edi ]
int1
aas
lodsb [ esi ]
mov [ ebx ] bh
push edx
xlat
popf
imul ebx [ eax - 0x10dcfce9 ] 0x53cb737
push ebp
mov [ esi - 0x4e ] ah
nop
pop es
inc esp
mov cl 0x25
jmp rwxdata
inc edx
xlat
dec esp
stosb [ edi ]
mov eax 0x12b456c0
cld
and al al
cwde
cmc
pushad
mov [ esp + 0x14 ] di
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
cmc
call sub_430893
mov al [ eax + edi ]
push [ esp ]
mov [ esp ] 0xa6
push 0x3ad16c2c
mov [ esp + 0x4 ] cl
stosb [ edi ]
push [ esp ]
pushfd
mov [ esp + 0x4 ] ah
mov [ ebp - 0x2 ] al
push ecx
mov [ esp + 0x4 ] 0xb
push ebx
mov [ esp ] bp
lea esp [ esp + 0x40 ]
jmp rwxdata
push esp
mov [ esp ] esi
cmp al [ edi ]
lea eax [ eax + 0x3a41937c ]
bswap eax
lahf
sets ah
lea edi [ edi + 0x1 ]
setb al
lea eax [ ecx + 0x5fbea19a ]
and al 0x10
jae rwxdata
insd
xlat
xchg esi eax
in al 0x59
mov ebp 0xee29b4e
inc edx
or eax 0x32d49606
nop
xchg [ esi + edi - 0x7d73d124 ] bh
ror [ cs : ebx - 0x55d33433 ] cl
je rwxdata
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
jo rwxdata
push ds
fdiv [ esi ]
push 0x477f2fe8
pushfd
lea esp [ esp + 0x28 ]
jbe rwxdata
je rwxdata
int1
lodsb [ esi ]
adc bl [ edx + eax * 4 + 0x1fcd6a14 ]
push ss
mov esp 0xdacf1c6
cwde
xor dl 0x6a
test [ edx + eax * 4 - 0x25 ] edi
cmp ecx esi
lodsb [ esi ]
adc bl [ edx + eax * 4 - 0x45ac1c36 ]
ja rwxdata
jmp sub_43521d
btr di 0xd
sub ecx 0x1
pushad
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x20 ]
mov di di
sub ecx ebp
jmp rwxdata
jb rwxdata
or [ ebp - 0x16cfdb9c ] cl
into
imul edi eax 0xa9018aff
test [ ebx ] ebp
test [ eax + edi * 8 - 0x335170b ] al
mov eax [ esp + 0x48 ]
pushfd
lea esp [ esp + 0x50 ]
ja rwxdata
pop edi
int3
clc
mov ecx [ ebp - 0x8 ]
btr si bx
add ecx [ ebp - 0x4 ]
test bl 0x34
call sub_4ae36d
xor ch [ edx ]
sbb ecx esi
and eax [ edi ]
inc edx
ficom [ ebx - 0x54ac5c85 ]
jg rwxdata
jmp rwxdata
and al 0x28
jns rwxdata
arpl [ edi + ebp * 2 + 0x72 ] si
dec ebp
and eax 0x780bf94f
mov ecx 0xce76c8e1
xchg [ ebx + 0x2f ] esi
fwait
paddusb mmx0 [ ecx + edx * 2 - 0x65 ]
or al 0xa
fdiv [ 0x75b81f7f ]
movsd [ edi ] gs : [ esi ]
inc ebp
lds ecx [ ecx - 0x67 ]
cmp [ ecx ] 0xc5751f67
sub [ ecx - 0x3078f68f ] edi
cmp edx [ edi - 0x80 ]
fld [ edi - 0x449b7ede ]
xor al 0xca
test al 0xc8
push 0x9c73e468
xor al 0xf8
mov cl 0x4d
sub_4a0b45
imul eax eax 0x300
sbb dx di
pushfd
shl edx 0x18
cmc
lea eax [ ebx + eax * 4 + 0x94d8 ]
bts dx sp
lea edx [ 0x4efcc485 ]
shrd dx ax cl
bsr dx di
mov [ esp + 0x4 ] ecx
clc
xchg [ esp ] ebx
cmc
btc edx ebx
mov ebx eax
jmp rwxdata
sub edx edi
push esi
movsx edx bl
mov edx 0x1
sub esp 0xfffffffc
jb rwxdata
jmp rwxdata
cmp ecx 0x7
jmp rwxdata
cmc
cmp ecx 0x7
push 0xdd9df7e3
lea esp [ esp + 0x4 ]
jb rwxdata
push ebx
pushad
pushfd
lea esp [ esp + 0x28 ]
jb rwxdata
lea eax [ ecx + 0x7e3c72b6 ]
lea eax [ eax + 0x1bb9c34e ]
pushfd
lea eax [ ebx + edx * 4 ]
call sub_4a5bb2
cmp ah ah
daa
stc
mov cl ah
mov eax [ ebp - 0x20 ]
stc
clc
xor cl 0xac
stc
not eax
xadd dh cl
mov cl [ eax + edi ]
btr eax edi
adc ax 0xf01e
add cl cl
bswap eax
xchg al dh
setno al
setb dh
not ax
pushad
pop eax
lea eax [ ebx + edx * 4 + 0x400 ]
mov [ esp ] bx
lea esp [ esp + 0x1c ]
call sub_433bc2
pushfd
pushfd
adc dl dl
push ebp
mov [ esp + 0x4 ] 0x35
push [ esp + 0x8 ]
lea esp [ esp + 0x10 ]
jb rwxdata
shrd eax ebp cl
pushad
add dh 0x1a
dec dh
mov eax [ ebp - 0x20 ]
neg dh
sar dh cl
not cl
not eax
pushad
adc cl 0x94
shl cl 0x4
neg cl
mov cl [ eax + edi ]
xor dh 0x10
das
pushfd
add cl cl
jmp rwxdata
add al cl
btr ecx 0x17
pop ebx
sbb ax dx
movzx ax bl
pop ecx
sub ax 0x4a06
mov ah 0x9e
mov [ ebp - 0x2 ] dl
shld ax cx 0x9
cmp ecx 0x4
pushfd
mov eax ecx
pushad
jmp rwxdata
pushad
clc
call sub_430a22
call sub_433bc2
call sub_432fa5
push ebp
setb dh
mov eax esi
push 0xdc49abc8
pop eax
cwde
lea eax [ ebx + edx * 4 + 0x400 ]
mov [ esp + 0x10 ] 0x8f
jmp rwxdata
push 0x1d1c032a
call sub_4af617
lea esp [ esp + 0x48 ]
call sub_433bc2
jmp rwxdata
adc dl dl
call sub_435251
sub_4a0cc0
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x4 ]
pushad
push [ esp + 0x10 ]
call sub_4a16c8
add [ eax ] al
dec esp
outsd
arpl [ ecx + 0x6c ] sp
inc esi
jb rwxdata
daa
aad 0x9f
shr [ ebx + 0x1ef06a2d ] cl
dec dl
sub ah [ edi - 0x38 ]
inc ecx
int1
lodsd [ esi ]
xor [ edx + 0x38b73ae5 ] dl
imul eax [ esi ] 0xdf64d7ad
add [ edx + 0x4b ] ecx
and dl ah
push ebx
cmp ebx [ edx - 0x741f7687 ]
ja rwxdata
add [ gs : eax + 0xe70ce8 ] bl
add [ ecx ] al
shr al 0x1
and bh dh
or [ ebx - 0x43 ] ebx
push esi
mov esp 0x204ab062
jo rwxdata
sbb bl [ edx + 0x522923b9 ]
push edx
push esi
les ebp [ edx ]
mov [ ecx + esi * 8 + 0x1abfa2b3 ] ecx
aaa
pop esp
sub_4a0ce4
add eax edx
call sub_4a0b0d
push ecx
mov edi eax
sub eax 0x72420e08
jge rwxdata
dec edx
dec ebx
and dl ah
push ebx
cmp ebx [ edx - 0x741f7687 ]
ja rwxdata
fldcw [ ecx ]
xor [ ebp - 0x33 ] 0x235b3929
inc ecx
or [ ebx - 0x43 ] ebx
push esi
mov esp 0x204ab062
jo rwxdata
sbb bl [ edx + 0x522923b9 ]
push edx
push esi
les ebp [ edx ]
mov [ ecx + esi * 8 + 0x1abfa2b3 ] ecx
aaa
pop esp
sub_4a110f
imul edx edx 0xa
pushfd
test al bh
add edx eax
mov [ esp ] 0xda
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
test bl cl
shl al 0x5
add edi 0x1
cmc
rcr al 0x2
add al dh
shl al 0x6
mov al [ edi ]
cmp bl al
test al al
call sub_431d1a
call sub_434b0f
sub_4a1128
mov [ esp ] esp
cmp ebx 0x3
pushfd
jmp rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
mov bx 0x8ade
shr bl 0x5
setno bh
add bl 0x54
mov bx [ esi ]
test sp 0xd96a
push eax
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
test cl 0x28
stc
test cl 0xd8
and ebx 0xfff
test cx di
add [ ebx + edi ] edx
push 0xffffffd9
jmp 0xffffffffe985f1dd
pushfd
pushad
call sub_432dbd
salc
sbb al 0x1d
popfd
call 0xffffffffaa0b2ed1
jne rwxdata
sub_4a116a
push edx
mov [ ebp - 0x2 ] al
push 0x4ca5fe1f
push [ esp + 0x4 ]
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_4a1181
pushfd
lea esp [ esp + 0x14 ]
je rwxdata
jmp sub_43521d
clc
add eax edi
pushfd
push 0x36c32611
cmp eax edx
push [ esp ]
pushad
lea esp [ esp + 0x2c ]
jb rwxdata
pushfd
lea edx [ ecx + 0x4e0b7053 ]
mov edx [ esp + 0x4 ]
mov [ esp ] 0x7e71
pushfd
movsx esi bl
mov ebx [ esp + 0xc ]
mov [ esp ] 0xdb19
movzx si dl
mov edi [ esp + 0x10 ]
not esi
pushfd
call sub_4b0443
pushfd
push 0xf36a80fc
bt di di
cmc
cmp eax [ ebp - 0x10 ]
pushad
push 0xc118f3ee
push eax
lea esp [ esp + 0x30 ]
jae rwxdata
setno ch
jmp rwxdata
cmp sp 0x367
dec cl
mov ebx eax
shl cl cl
shr di cl
mov edi eax
and ch 0x47
sub cl al
mov ecx 0x104
pushad
jmp rwxdata
sub al al
lea esp [ esp + 0x20 ]
jl rwxdata
bt di 0x7
cmc
jmp rwxdata
[ edi ]
pushad
pushad
lea esp [ esp + 0x40 ]
jne rwxdata
[ edi ]
push 0x61b019bb
call sub_49ea00
sar cx cl
cmp ecx 0x299098b2
mov ecx edi
shrd si di 0x6
shr si 0x4
add esi 0xcef582e7
sub ecx ebx
stc
inc si
bts esi esp
test sp bp
mov esi esp
bt cx di
sub edi 0x4
stc
cmp bl bl
cmc
push [ edi ]
test ch ch
cmp edi ebx
push 0xe8ff9b50
call sub_4320fe
sub_4a1392
push [ esp + 0x4 ]
mov [ esp ] ch
lea esp [ esp + 0xc ]
call sub_433bc2
jmp rwxdata
jmp rwxdata
adc dl dl
push ecx
lea esp [ esp + 0x4 ]
jae rwxdata
lea eax [ ecx + 0x7e3c72b6 ]
lea eax [ eax + 0x1bb9c34e ]
pushfd
lea eax [ ebx + edx * 4 ]
call sub_4a5bb2
daa
adc bh 0xef
cwde
dec bx
pop ebx
aam 0xb7
bt esp ecx
pop ecx
btr ax 0x3
mov [ ebp - 0x2 ] dl
stc
cmc
push 0xb780cd46
cmp ecx 0x4
pop eax
lahf
lea eax [ esi * 2 + 0x27590222 ]
mov eax ecx
jmp rwxdata
push 0xd109d954
call sub_4a3634
sub_4a16c8
mov [ esp + 0x24 ] eax
lea esp [ esp + 0x24 ]
jo rwxdata
jmp rwxdata
push 0xd3322b3b
push [ esp ]
lodsb [ esi ]
pushfd
cmc
pushad
clc
xor al 0x4d
jmp rwxdata
lodsb [ esi ]
test di 0xff48
stc
test di 0xa0dd
push ecx
xor al 0x4d
pushad
jmp sub_4ad675
call sub_433f71
sub_4a19c1
mov [ ebp - 0x2 ] al
mov [ esp ] ax
push [ esp ]
pushad
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_4a1a0f
test esi edx
cmp ebx 0x1
pushfd
lea esp [ esp + 0x48 ]
je rwxdata
mov bl 0x90
mov bx [ esi ]
push 0x26c8c8e8
bt si si
pushad
and ebx 0xfff
pushfd
pushfd
add [ ebx + edi ] ax
push edx
mov [ esp + 0x4 ] ah
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
pushfd
cmp ebx 0x2
push esi
jmp rwxdata
pushfd
pushad
call sub_432dbd
salc
sbb al 0x1d
popfd
call 0xffffffffaa0b2ed1
jne rwxdata
lea esp [ esp + 0x8 ]
je rwxdata
push 0xffffffd9
test cl 0x28
stc
test cl 0xd8
and ebx 0xfff
test cx di
add [ ebx + edi ] edx
jmp 0xffffffffe985f1dd
call sub_42d100
bt bx 0x7
stc
cmp ebx 0x3
pushad
pushfd
call sub_4300de
push [ esp + 0x4 ]
push 0x9358f0a0
mov al [ eax + edi ]
call sub_432765
sub_4a1beb
sub al al
mov [ esp + 0x8 ] 0xf1811c0b
[ edi ]
mov [ esp ] 0x47f6b25f
mov [ esp + 0x4 ] 0x908c341d
mov [ esp + 0x8 ] 0x2e
lea esp [ esp + 0xc ]
jne rwxdata
jmp sub_43521d
shl esi 0x1f
rcr cl cl
test ch cl
mov ecx edi
pushfd
sub ecx ebx
shrd si bx 0x8
mov esi [ esp ]
lea esi [ esp + 0x4 ]
lea esp [ esp + 0x4 ]
clc
push ecx
mov [ esp ] cx
push edx
sub edi 0x4
call sub_42da86
sub_4a1d13
push 0x81885f16
[ edi ] [ esi ]
mov al [ esp ]
push ebp
jmp rwxdata
mov esi [ esp + 0x30 ]
pushfd
xchg al cl
mov ecx [ esp + 0x38 ]
setae al
push 0x1ff2a043
mov al [ edi - 0x1 ]
mov [ esp ] 0x3b
push [ esp ]
jmp rwxdata
mov [ esp ] 0x6
mov [ ebp - 0x2 ] al
pushfd
mov [ esp + 0x8 ] bh
mov [ esp ] 0xce
lea esp [ esp + 0x48 ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_4a1e09
bswap ax
lea eax [ rwxdata ]
call sub_434ad6
sbb ebp esi
jecxz rwxdata
pushad
sub al 0xb0
jno rwxdata
push cs
inc edx
imul [ esi ]
push 0xffffffa8
push esi
fadd [ edx - 0x70 ]
push 0xffffffd0
inc edx
test al 0xac
xchg esi eax
lodsb [ esi ]
adc esp esi
dec edi
insd
test [ esi + 0x74 ] 0x2c607ea4
mov al 0x71
hlt
cld
add ah bh
cmp al 0xce
jo rwxdata
sti
fimul [ ebx + 0x3b ]
rcr ch 0x1
xor al 0xea
jpo rwxdata
mov [ 0xffffffff931ee510 ] eax
fcomp [ esi ]
jge rwxdata
shl dl cl
movsd [ edi ] [ esi ]
push edx
cmp [ edx + edx * 8 ] bh
dec eax
sbb [ edx - 0x75 ] esp
xchg edx eax
push esp
mov dl 0xd2
test al 0x1f
mov [ 0xffffffffca83f128 ] al
and [ ebx + 0x648dd826 ] edi
and al 0x28
jae rwxdata
inc esi
mov al 0x59
adc al 0x1d
cmp al cl
cmpsb [ esi ] [ edi ]
into
sub bh 0x1f
mov al 0x1e
call sub_4af71c
je rwxdata
mov eax eax
lea eax [ ebx + ecx * 4 + 0x330 ]
jmp rwxdata
lea eax [ eax * 8 + 0x2e636b82 ]
bswap eax
lea eax [ ebx + ecx * 4 + 0x330 ]
jmp rwxdata
call sub_433bc2
call sub_432fa5
call sub_433bc2
push eax
jmp rwxdata
mov [ esp ] bx
pushad
lea esp [ esp + 0x24 ]
jb rwxdata
not ah
pushad
mov [ esp + 0x1c ] edx
lahf
push 0xc88ed181
pushfd
bswap ax
lea eax [ ebx + ecx * 4 + 0x360 ]
pushad
lea esp [ esp + 0x44 ]
call sub_433bc2
pushad
pop edx
movzx dx cl
mov edx [ ebp - 0x20 ]
mov [ esp ] bl
push edx
mov [ esp + 0x4 ] 0x5e7a81e
push esi
xchg [ ebp - 0x24 ] edx
pushad
lea esp [ esp + 0x44 ]
jae rwxdata
mov ax di
shld ax dx cl
mov eax ecx
bt cx 0x9
jmp rwxdata
pushfd
lea eax [ edx * 8 - 0x2c95f1cf ]
pushad
movzx ax al
mov [ ebp - 0x20 ] edx
setpo al
push 0xcf7c8890
mov edx [ esp + 0x28 ]
lea esp [ esp + 0x2c ]
bswap ax
call sub_434eca
not ah
push ecx
mov [ esp ] 0x7b
call sub_4ae29f
cmp ecx 0xb6265a40
shl eax 0x4
cmc
add eax edx
pushfd
jmp rwxdata
pushfd
lea eax [ ebx + eax * 4 + 0x3c0 ]
push [ esp ]
jmp rwxdata
jmp sub_48eaed
sub_4a1eff
lea esp [ esp + 0x28 ]
jae rwxdata
call sub_4af71c
je rwxdata
mov eax eax
lea eax [ ebx + ecx * 4 + 0x330 ]
jmp rwxdata
lea eax [ eax * 8 + 0x2e636b82 ]
bswap eax
lea eax [ ebx + ecx * 4 + 0x330 ]
jmp rwxdata
call sub_433bc2
call sub_432fa5
call sub_433bc2
push eax
jmp rwxdata
mov [ esp ] bx
pushad
lea esp [ esp + 0x24 ]
jb rwxdata
not ah
pushad
mov [ esp + 0x1c ] edx
lahf
push 0xc88ed181
pushfd
bswap ax
lea eax [ ebx + ecx * 4 + 0x360 ]
pushad
lea esp [ esp + 0x44 ]
call sub_433bc2
pushad
pop edx
movzx dx cl
mov edx [ ebp - 0x20 ]
mov [ esp ] bl
push edx
mov [ esp + 0x4 ] 0x5e7a81e
push esi
xchg [ ebp - 0x24 ] edx
pushad
lea esp [ esp + 0x44 ]
jae rwxdata
mov ax di
shld ax dx cl
mov eax ecx
bt cx 0x9
jmp rwxdata
pushfd
lea eax [ edx * 8 - 0x2c95f1cf ]
pushad
movzx ax al
mov [ ebp - 0x20 ] edx
setpo al
push 0xcf7c8890
mov edx [ esp + 0x28 ]
lea esp [ esp + 0x2c ]
bswap ax
call sub_434eca
not ah
push ecx
mov [ esp ] 0x7b
call sub_4ae29f
cmp ecx 0xb6265a40
shl eax 0x4
cmc
add eax edx
pushfd
jmp rwxdata
pushfd
lea eax [ ebx + eax * 4 + 0x3c0 ]
push [ esp ]
jmp rwxdata
jmp sub_48eaed
sub_4a3634
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x8 ]
jb rwxdata
bt bx ax
bt edx 0xa
sub ecx eax
jmp rwxdata
shr ah 0x7
clc
adc eax 0x1e65031b
cmp ecx 0xa
not al
cwde
bswap eax
mov eax 0x3
push ebx
push ecx
lea esp [ esp + 0x8 ]
jb rwxdata
call sub_430fbb
btc eax 0x16
shl al cl
mov eax 0x6
clc
sub ecx eax
not al
setpe al
mov al [ ebp - 0x2 ]
call sub_430139
sub_4a53ed
lea esp [ esp + 0x8 ]
jne rwxdata
btr cx di
shl cl cl
neg ch
mov ecx edi
pushfd
neg al
not al
jmp rwxdata
lea eax [ edx * 8 + 0x64705158 ]
lea eax [ edi + 0x1902b9b0 ]
shr al cl
cwde
sub edx edx
aas
mov eax edx
jns rwxdata
mov al [ ecx ]
test eax 0x84842b85
clc
cmc
call sub_4ad2c4
add [ eax ] al
dec ebp
popad
imul esp [ ebp + 0x53 ] 0x75
jb rwxdata
inc al
add edi 0x1
shr al 0x7
mov al [ edi ]
cmc
call sub_4afd23
inc al
pushad
stc
add edi 0x1
or al dl
or al ah
mov al [ edi ]
cmc
push 0xca0b3f4b
pushfd
test al al
call sub_432f4c
push edx
pushfd
pushad
lea esp [ esp + 0x28 ]
inc esp
imul esi [ edx + 0x65 ] 0x726f7463
rcl al 0x5
sar al cl
bt esi 0x17
and al dl
sub edx edx
btc ax 0x2
sbb ah ah
lahf
mov eax edx
test bl cl
shl al 0x5
add edi 0x1
cmc
rcr al 0x2
add al dh
shl al 0x6
mov al [ edi ]
cmp bl al
test al al
call sub_431d1a
call sub_434b0f
and al 0x8d
and al 0x10
jne rwxdata
popad
je rwxdata
mov [ esp ] 0x62
inc ebp
js rwxdata
cmp ch bh
clc
call sub_4aece6
adc al 0xee
fwait
inc ecx
loope rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
rol al 0x4
clc
neg al
bt di 0x4
mov [ esp ] 0x10
jae rwxdata
cmc
add [ ecx - 0x4b ] esp
int 0x51
xor [ ebp - 0x33 ] 0x5f8f4565
dec ebp
or [ ss : edi ] bh
pop edi
leave
dec edx
sbb [ ecx ] ecx
shl [ edx + edi + 0x3b4e5e02 ] 0x1
scasd [ edi ]
int1
aas
lodsb [ esi ]
mov [ ebx ] bh
push edx
xlat
popf
imul ebx [ eax - 0x10dcfce9 ] 0x53cb737
push ebp
mov [ esi - 0x4e ] ah
nop
pop es
inc esp
mov cl 0x25
jmp rwxdata
inc edx
xlat
dec esp
stosb [ edi ]
mov eax 0x12b456c0
cld
and al al
cwde
cmc
pushad
mov [ esp + 0x14 ] di
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
cmc
call sub_430893
mov al [ eax + edi ]
push [ esp ]
mov [ esp ] 0xa6
push 0x3ad16c2c
mov [ esp + 0x4 ] cl
stosb [ edi ]
push [ esp ]
pushfd
mov [ esp + 0x4 ] ah
mov [ ebp - 0x2 ] al
push ecx
mov [ esp + 0x4 ] 0xb
push ebx
mov [ esp ] bp
lea esp [ esp + 0x40 ]
jmp rwxdata
push esp
mov [ esp ] esi
cmp al [ edi ]
lea eax [ eax + 0x3a41937c ]
bswap eax
lahf
sets ah
lea edi [ edi + 0x1 ]
setb al
lea eax [ ecx + 0x5fbea19a ]
and al 0x10
jae rwxdata
insd
xlat
xchg esi eax
in al 0x59
mov ebp 0xee29b4e
inc edx
or eax 0x32d49606
nop
xchg [ esi + edi - 0x7d73d124 ] bh
ror [ cs : ebx - 0x55d33433 ] cl
je rwxdata
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
jo rwxdata
push ds
fdiv [ esi ]
push 0x477f2fe8
pushfd
lea esp [ esp + 0x28 ]
jbe rwxdata
je rwxdata
int1
lodsb [ esi ]
adc bl [ edx + eax * 4 + 0x1fcd6a14 ]
push ss
mov esp 0xdacf1c6
cwde
xor dl 0x6a
test [ edx + eax * 4 - 0x25 ] edi
cmp ecx esi
lodsb [ esi ]
adc bl [ edx + eax * 4 - 0x45ac1c36 ]
ja rwxdata
jmp sub_43521d
btr di 0xd
sub ecx 0x1
pushad
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x20 ]
mov di di
sub ecx ebp
jmp rwxdata
jb rwxdata
or [ ebp - 0x16cfdb9c ] cl
into
imul edi eax 0xa9018aff
test [ ebx ] ebp
test [ eax + edi * 8 - 0x335170b ] al
mov eax [ esp + 0x48 ]
pushfd
lea esp [ esp + 0x50 ]
ja rwxdata
pop edi
int3
clc
mov ecx [ ebp - 0x8 ]
btr si bx
add ecx [ ebp - 0x4 ]
test bl 0x34
call sub_4ae36d
xor ch [ edx ]
sbb ecx esi
and eax [ edi ]
inc edx
ficom [ ebx - 0x54ac5c85 ]
jg rwxdata
jmp rwxdata
and al 0x28
jns rwxdata
arpl [ edi + ebp * 2 + 0x72 ] si
dec ebp
and eax 0x780bf94f
mov ecx 0xce76c8e1
xchg [ ebx + 0x2f ] esi
fwait
paddusb mmx0 [ ecx + edx * 2 - 0x65 ]
or al 0xa
fdiv [ 0x75b81f7f ]
movsd [ edi ] gs : [ esi ]
inc ebp
lds ecx [ ecx - 0x67 ]
cmp [ ecx ] 0xc5751f67
sub [ ecx - 0x3078f68f ] edi
cmp edx [ edi - 0x80 ]
fld [ edi - 0x449b7ede ]
xor al 0xca
test al 0xc8
push 0x9c73e468
xor al 0xf8
mov cl 0x4d
sub_4a542d
mov [ ebp - 0x8 ] ecx
mov [ esp ] edx
mov [ esp ] bh
pushad
push 0x6c8a0ac2
lea esp [ esp + 0x38 ]
jmp rwxdata
mov di di
sub ecx ebp
jmp rwxdata
clc
mov ecx [ ebp - 0x8 ]
btr si bx
add ecx [ ebp - 0x4 ]
test bl 0x34
call sub_4ae36d
xor ch [ edx ]
sbb ecx esi
and eax [ edi ]
inc edx
ficom [ ebx - 0x54ac5c85 ]
jg rwxdata
dec ebp
and eax 0x780bf94f
mov ecx 0xce76c8e1
xchg [ ebx + 0x2f ] esi
fwait
paddusb mmx0 [ ecx + edx * 2 - 0x65 ]
or al 0xa
fdiv [ 0x75b81f7f ]
movsd [ edi ] gs : [ esi ]
inc ebp
lds ecx [ ecx - 0x67 ]
cmp [ ecx ] 0xc5751f67
sub [ ecx - 0x3078f68f ] edi
cmp edx [ edi - 0x80 ]
fld [ edi - 0x449b7ede ]
xor al 0xca
test al 0xc8
push 0x9c73e468
xor al 0xf8
mov cl 0x4d
sub_4a547b
mov [ esp + 0x44 ] 0x296771e7
pushfd
pushfd
mov [ esp ] 0x431d7848
push 0x3da5e2d2
lea esp [ esp + 0x50 ]
jmp rwxdata
push esi
push ebp
mov [ esp ] 0xac
mov [ esp ] 0x2
mov [ esp + 0x4 ] eax
push [ esp ]
mov [ esp + 0x4 ] ebx
push eax
jmp rwxdata
mov [ esp + 0x4 ] dl
mov [ esp + 0x4 ] esi
pushad
mov [ esp + 0x20 ] ebp
push 0xe2ff0f60
mov [ esp ] bh
mov [ esp + 0x18 ] bl
pushfd
mov [ esp + 0x24 ] edx
call sub_4b0cd6
sub_4a589d
mov [ esp ] cl
lea esp [ esp + 0x28 ]
je rwxdata
mov bl 0x90
mov bx [ esi ]
push 0x26c8c8e8
bt si si
pushad
and ebx 0xfff
pushfd
pushfd
add [ ebx + edi ] ax
push edx
mov [ esp + 0x4 ] ah
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
clc
pushfd
push esi
cmp ebx 0x2
mov [ esp + 0x4 ] 0x1
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
pushad
call sub_432dbd
salc
sbb al 0x1d
popfd
call 0xffffffffaa0b2ed1
jne rwxdata
call sub_42d100
call sub_4a1128
mov [ esp + 0x3c ] eax
mov [ esp + 0x4 ] 0x7f
mov [ esp ] ah
pushfd
push [ esp + 0x40 ]
retn 0x44
push 0xffffffd9
test cl 0x28
stc
test cl 0xd8
and ebx 0xfff
test cx di
add [ ebx + edi ] edx
jmp 0xffffffffe985f1dd
sub_4a58d8
pushfd
call sub_431d41
rcl dl 0x1
scasd [ edi ]
das
pop esp
push cs
inc edx
mov ecx 0xa18f2f2
mov al 0xdc
pushf
add al 0xfd
aad 0xa7
xlat
add ecx eax
xlat
out dx eax
inc edi
adc esi edi
sti
sub_4a5ccd
push ebx
push edi
push ecx
mov ebx eax
mov edx 0x1
xor edi edi
lea eax [ ebx + edx * 4 ]
call sub_433bc2
lahf
adc edx edx
sahf
rcr edi 0x1
sub ecx 0x1
jne rwxdata
mov eax edi
pop ecx
rol eax cl
pop edi
pop ebx
retn
sub_4a613f
not eax
mov [ esp ] esi
jmp rwxdata
pushfd
pushad
mov al [ eax + edi ]
mov [ esp ] bh
push 0x6c9fc8a7
push 0x2684a7bb
stosb [ edi ]
pushfd
pushfd
mov [ ebp - 0x2 ] al
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_4a61e1
mov [ esp ] edi
sbb ecx ecx
pushfd
lea ecx [ ecx + ecx * 2 + 0xa ]
mov [ esp + 0x4 ] 0x98
pushfd
push esp
lea esp [ esp + 0x38 ]
jmp rwxdata
push 0x74c7e7bd
cmc
stc
test edx 0xb9f3c6df
xchg [ esp ] ecx
test dl 0x73
push esi
cmc
rol cx cl
ror ch cl
push 0xa1d55f5b
lea ecx [ eax + 0x2 ]
adc si bp
mov esi [ ebp - 0x20 ]
add al ch
not esi
shr al 0x6
mov al 0x6a
stc
add esi edi
push edx
jmp sub_42da10
sub_4ad2c4
mov ah al
bt bx cx
pushfd
clc
neg al
jmp rwxdata
pushfd
ror al 0x4
pushfd
pushfd
inc al
pushfd
xor al 0x4d
jmp rwxdata
mov [ ecx ] al
bt bp 0x1
pushad
add ecx 0x1
cmp di cx
test ah ah
pushfd
jmp rwxdata
push ebp
push edx
lea esp [ esp + 0x48 ]
jne rwxdata
pushfd
neg al
not al
jmp rwxdata
pushfd
push [ esp ]
jmp rwxdata
mov al [ ecx ]
test eax 0x84842b85
clc
cmc
call sub_4ad2c4
add [ eax ] al
dec ebp
popad
imul esp [ ebp + 0x53 ] 0x75
jb rwxdata
mov [ esp + 0x4 ] edi
mov [ esp ] 0x1c
mov [ esp ] ebx
pushfd
lea esp [ esp + 0x4 ]
call sub_42db6b
pushad
lea esp [ esp + 0x20 ]
jg rwxdata
push edx
pushfd
pushad
lea esp [ esp + 0x28 ]
inc esp
imul esi [ edx + 0x65 ] 0x726f7463
jmp rwxdata
pushfd
mov esp esi
pushfd
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
rcl al 0x5
sar al cl
bt esi 0x17
and al dl
sub edx edx
btc ax 0x2
sbb ah ah
lahf
mov eax edx
test bl cl
shl al 0x5
add edi 0x1
cmc
rcr al 0x2
add al dh
shl al 0x6
mov al [ edi ]
cmp bl al
test al al
call sub_431d1a
call sub_434b0f
and al 0x8d
and al 0x10
jne rwxdata
popad
je rwxdata
push 0xa352aa4c
mov esp esi
pushfd
pushad
mov [ esp + 0x4 ] al
lea esp [ esp + 0x24 ]
jmp rwxdata
pushfd
lea edx [ ecx + 0x4e0b7053 ]
mov edx [ esp + 0x4 ]
mov [ esp ] 0x7e71
pushfd
movsx esi bl
mov ebx [ esp + 0xc ]
mov [ esp ] 0xdb19
movzx si dl
mov edi [ esp + 0x10 ]
not esi
pushfd
call sub_4b0443
btr cx di
shl cl cl
neg ch
mov ecx edi
mov [ esp ] 0x62
inc ebp
js rwxdata
cmp ch bh
clc
call sub_4aece6
adc al 0xee
fwait
inc ecx
loope rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
rol al 0x4
clc
neg al
bt di 0x4
mov [ esp ] 0x10
jae rwxdata
cmc
add [ ecx - 0x4b ] esp
int 0x51
xor [ ebp - 0x33 ] 0x5f8f4565
dec ebp
or [ ss : edi ] bh
pop edi
leave
dec edx
sbb [ ecx ] ecx
shl [ edx + edi + 0x3b4e5e02 ] 0x1
scasd [ edi ]
int1
aas
lodsb [ esi ]
mov [ ebx ] bh
push edx
xlat
popf
imul ebx [ eax - 0x10dcfce9 ] 0x53cb737
push ebp
mov [ esi - 0x4e ] ah
nop
pop es
inc esp
mov cl 0x25
jmp rwxdata
inc edx
xlat
dec esp
stosb [ edi ]
mov eax 0x12b456c0
cld
and al al
cwde
cmc
pushad
mov [ esp + 0x14 ] di
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
cmc
call sub_430893
mov al [ eax + edi ]
push [ esp ]
mov [ esp ] 0xa6
push 0x3ad16c2c
mov [ esp + 0x4 ] cl
stosb [ edi ]
push [ esp ]
pushfd
mov [ esp + 0x4 ] ah
mov [ ebp - 0x2 ] al
push ecx
mov [ esp + 0x4 ] 0xb
push ebx
mov [ esp ] bp
lea esp [ esp + 0x40 ]
jmp rwxdata
push esp
mov [ esp ] esi
cmp al [ edi ]
lea eax [ eax + 0x3a41937c ]
bswap eax
lahf
sets ah
lea edi [ edi + 0x1 ]
setb al
lea eax [ ecx + 0x5fbea19a ]
and al 0x10
jae rwxdata
insd
xlat
xchg esi eax
in al 0x59
mov ebp 0xee29b4e
inc edx
or eax 0x32d49606
nop
xchg [ esi + edi - 0x7d73d124 ] bh
ror [ cs : ebx - 0x55d33433 ] cl
je rwxdata
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
jo rwxdata
push ds
fdiv [ esi ]
push 0x477f2fe8
pushfd
lea esp [ esp + 0x28 ]
jbe rwxdata
je rwxdata
int1
lodsb [ esi ]
adc bl [ edx + eax * 4 + 0x1fcd6a14 ]
push ss
mov esp 0xdacf1c6
cwde
xor dl 0x6a
test [ edx + eax * 4 - 0x25 ] edi
cmp ecx esi
lodsb [ esi ]
adc bl [ edx + eax * 4 - 0x45ac1c36 ]
ja rwxdata
jmp sub_43521d
btr di 0xd
sub ecx 0x1
pushad
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x20 ]
mov di di
sub ecx ebp
jmp rwxdata
jb rwxdata
or [ ebp - 0x16cfdb9c ] cl
into
imul edi eax 0xa9018aff
test [ ebx ] ebp
test [ eax + edi * 8 - 0x335170b ] al
mov eax [ esp + 0x48 ]
pushfd
lea esp [ esp + 0x50 ]
ja rwxdata
pop edi
int3
clc
mov ecx [ ebp - 0x8 ]
btr si bx
add ecx [ ebp - 0x4 ]
test bl 0x34
call sub_4ae36d
xor ch [ edx ]
sbb ecx esi
and eax [ edi ]
inc edx
ficom [ ebx - 0x54ac5c85 ]
jg rwxdata
jmp rwxdata
and al 0x28
jns rwxdata
arpl [ edi + ebp * 2 + 0x72 ] si
dec ebp
and eax 0x780bf94f
mov ecx 0xce76c8e1
xchg [ ebx + 0x2f ] esi
fwait
paddusb mmx0 [ ecx + edx * 2 - 0x65 ]
or al 0xa
fdiv [ 0x75b81f7f ]
movsd [ edi ] gs : [ esi ]
inc ebp
lds ecx [ ecx - 0x67 ]
cmp [ ecx ] 0xc5751f67
sub [ ecx - 0x3078f68f ] edi
cmp edx [ edi - 0x80 ]
fld [ edi - 0x449b7ede ]
xor al 0xca
test al 0xc8
push 0x9c73e468
xor al 0xf8
mov cl 0x4d
sub_4ad2d3
shl edx cl
push [ esp ]
cmc
test al al
mov [ ebp - 0x20 ] edx
clc
cmp eax 0xe
mov [ esp + 0x4 ] 0x72
lea esp [ esp + 0x4c ]
jae rwxdata
push 0x760b6a25
jmp rwxdata
test bl 0xd3
bt di si
cmc
bt bp di
sub edx eax
pushfd
mov al ch
lea eax [ ebx + edx * 4 + 0xabc ]
call sub_430b28
push ebx
clc
sub ecx 0x4
call sub_432202
sub_4ad3e2
lea esp [ esp + 0xc ]
je rwxdata
cmc
cmc
test ah 0xa4
mov edi edx
pushad
bt dx 0x1
jmp rwxdata
mov al [ ecx ]
test eax 0x84842b85
clc
cmc
call sub_4ad2c4
add [ eax ] al
dec ebp
popad
imul esp [ ebp + 0x53 ] 0x75
jb rwxdata
cmc
sub al 0x30
test cl bh
stc
mov [ esp + 0x4 ] al
cmp bp di
cmp al 0x9
jmp rwxdata
push edx
pushfd
pushad
lea esp [ esp + 0x28 ]
inc esp
imul esi [ edx + 0x65 ] 0x726f7463
lea esp [ esp + 0x20 ]
ja rwxdata
rcl al 0x5
sar al cl
bt esi 0x17
and al dl
sub edx edx
btc ax 0x2
sbb ah ah
lahf
mov eax edx
and al 0x8d
and al 0x10
jne rwxdata
popad
je rwxdata
jmp sub_4ae8b9
push 0x40b1b0e4
stc
imul edx edx 0xa
bt ax si
add edx eax
push 0xc02d1957
pushad
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
btr cx di
shl cl cl
neg ch
mov ecx edi
pushfd
neg al
not al
jmp rwxdata
mov [ esp ] 0x62
inc ebp
js rwxdata
test bl cl
shl al 0x5
add edi 0x1
cmc
rcr al 0x2
add al dh
shl al 0x6
mov al [ edi ]
cmp bl al
test al al
call sub_431d1a
call sub_434b0f
cmp ch bh
clc
call sub_4aece6
adc al 0xee
fwait
inc ecx
loope rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
rol al 0x4
clc
neg al
bt di 0x4
mov [ esp ] 0x10
jae rwxdata
cmc
add [ ecx - 0x4b ] esp
int 0x51
xor [ ebp - 0x33 ] 0x5f8f4565
dec ebp
or [ ss : edi ] bh
pop edi
leave
dec edx
sbb [ ecx ] ecx
shl [ edx + edi + 0x3b4e5e02 ] 0x1
scasd [ edi ]
int1
aas
lodsb [ esi ]
mov [ ebx ] bh
push edx
xlat
popf
imul ebx [ eax - 0x10dcfce9 ] 0x53cb737
push ebp
mov [ esi - 0x4e ] ah
nop
pop es
inc esp
mov cl 0x25
jmp rwxdata
inc edx
xlat
dec esp
stosb [ edi ]
mov eax 0x12b456c0
cld
and al al
cwde
cmc
pushad
mov [ esp + 0x14 ] di
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
cmc
call sub_430893
mov al [ eax + edi ]
push [ esp ]
mov [ esp ] 0xa6
push 0x3ad16c2c
mov [ esp + 0x4 ] cl
stosb [ edi ]
push [ esp ]
pushfd
mov [ esp + 0x4 ] ah
mov [ ebp - 0x2 ] al
push ecx
mov [ esp + 0x4 ] 0xb
push ebx
mov [ esp ] bp
lea esp [ esp + 0x40 ]
jmp rwxdata
push esp
mov [ esp ] esi
cmp al [ edi ]
lea eax [ eax + 0x3a41937c ]
bswap eax
lahf
sets ah
lea edi [ edi + 0x1 ]
setb al
lea eax [ ecx + 0x5fbea19a ]
and al 0x10
jae rwxdata
insd
xlat
xchg esi eax
in al 0x59
mov ebp 0xee29b4e
inc edx
or eax 0x32d49606
nop
xchg [ esi + edi - 0x7d73d124 ] bh
ror [ cs : ebx - 0x55d33433 ] cl
je rwxdata
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
jo rwxdata
push ds
fdiv [ esi ]
push 0x477f2fe8
pushfd
lea esp [ esp + 0x28 ]
jbe rwxdata
je rwxdata
int1
lodsb [ esi ]
adc bl [ edx + eax * 4 + 0x1fcd6a14 ]
push ss
mov esp 0xdacf1c6
cwde
xor dl 0x6a
test [ edx + eax * 4 - 0x25 ] edi
cmp ecx esi
lodsb [ esi ]
adc bl [ edx + eax * 4 - 0x45ac1c36 ]
ja rwxdata
jmp sub_43521d
btr di 0xd
sub ecx 0x1
pushad
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x20 ]
mov di di
sub ecx ebp
jmp rwxdata
jb rwxdata
or [ ebp - 0x16cfdb9c ] cl
into
imul edi eax 0xa9018aff
test [ ebx ] ebp
test [ eax + edi * 8 - 0x335170b ] al
mov eax [ esp + 0x48 ]
pushfd
lea esp [ esp + 0x50 ]
ja rwxdata
pop edi
int3
clc
mov ecx [ ebp - 0x8 ]
btr si bx
add ecx [ ebp - 0x4 ]
test bl 0x34
call sub_4ae36d
xor ch [ edx ]
sbb ecx esi
and eax [ edi ]
inc edx
ficom [ ebx - 0x54ac5c85 ]
jg rwxdata
jmp rwxdata
and al 0x28
jns rwxdata
arpl [ edi + ebp * 2 + 0x72 ] si
dec ebp
and eax 0x780bf94f
mov ecx 0xce76c8e1
xchg [ ebx + 0x2f ] esi
fwait
paddusb mmx0 [ ecx + edx * 2 - 0x65 ]
or al 0xa
fdiv [ 0x75b81f7f ]
movsd [ edi ] gs : [ esi ]
inc ebp
lds ecx [ ecx - 0x67 ]
cmp [ ecx ] 0xc5751f67
sub [ ecx - 0x3078f68f ] edi
cmp edx [ edi - 0x80 ]
fld [ edi - 0x449b7ede ]
xor al 0xca
test al 0xc8
push 0x9c73e468
xor al 0xf8
mov cl 0x4d
sub_4ad5b4
push esi
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
dec dh
add cl cl
sete ah
xchg dh al
movzx ax bl
setl al
setb dh
pushfd
push esi
lea eax [ ebx + edx * 4 + 0x400 ]
pushfd
jmp sub_4a5f53
push 0x72fc8308
lea eax [ ebx + edx * 4 ]
jmp sub_434c94
sub_4ad5cd
call sub_4ad3e2
pushad
stosb [ edi ]
push 0xd19d9ed2
push 0x2b31d3ea
pushfd
push [ esp + 0x8 ]
lea esp [ esp + 0x30 ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_4ad675
pushad
dec al
clc
mov [ esp ] 0x62
rol al 0x4
clc
neg al
bt di 0x4
mov [ esp ] 0x10
push esp
mov [ esp ] esi
cmp al [ edi ]
lea eax [ eax + 0x3a41937c ]
bswap eax
lahf
sets ah
lea edi [ edi + 0x1 ]
setb al
lea eax [ ecx + 0x5fbea19a ]
mov eax [ esp + 0x48 ]
pushfd
lea esp [ esp + 0x50 ]
ja rwxdata
cmp ch bh
clc
call sub_4aece6
adc al 0xee
fwait
inc ecx
loope rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
cmc
add [ ecx - 0x4b ] esp
int 0x51
xor [ ebp - 0x33 ] 0x5f8f4565
dec ebp
or [ ss : edi ] bh
pop edi
leave
dec edx
sbb [ ecx ] ecx
shl [ edx + edi + 0x3b4e5e02 ] 0x1
scasd [ edi ]
int1
aas
lodsb [ esi ]
mov [ ebx ] bh
push edx
xlat
popf
imul ebx [ eax - 0x10dcfce9 ] 0x53cb737
push ebp
mov [ esi - 0x4e ] ah
nop
pop es
inc esp
mov cl 0x25
jmp rwxdata
inc edx
xlat
dec esp
stosb [ edi ]
mov eax 0x12b456c0
cld
and al al
cwde
cmc
pushad
mov [ esp + 0x14 ] di
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
cmc
call sub_430893
mov al [ eax + edi ]
push [ esp ]
mov [ esp ] 0xa6
push 0x3ad16c2c
mov [ esp + 0x4 ] cl
stosb [ edi ]
push [ esp ]
pushfd
mov [ esp + 0x4 ] ah
mov [ ebp - 0x2 ] al
push ecx
mov [ esp + 0x4 ] 0xb
push ebx
mov [ esp ] bp
lea esp [ esp + 0x40 ]
jmp rwxdata
insd
xlat
xchg esi eax
in al 0x59
mov ebp 0xee29b4e
inc edx
or eax 0x32d49606
nop
xchg [ esi + edi - 0x7d73d124 ] bh
ror [ cs : ebx - 0x55d33433 ] cl
je rwxdata
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
push ds
fdiv [ esi ]
push 0x477f2fe8
pushfd
lea esp [ esp + 0x28 ]
jbe rwxdata
jmp sub_43521d
btr di 0xd
sub ecx 0x1
pushad
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x20 ]
mov di di
sub ecx ebp
jmp rwxdata
clc
mov ecx [ ebp - 0x8 ]
btr si bx
add ecx [ ebp - 0x4 ]
test bl 0x34
call sub_4ae36d
xor ch [ edx ]
sbb ecx esi
and eax [ edi ]
inc edx
ficom [ ebx - 0x54ac5c85 ]
jg rwxdata
dec ebp
and eax 0x780bf94f
mov ecx 0xce76c8e1
xchg [ ebx + 0x2f ] esi
fwait
paddusb mmx0 [ ecx + edx * 2 - 0x65 ]
or al 0xa
fdiv [ 0x75b81f7f ]
movsd [ edi ] gs : [ esi ]
inc ebp
lds ecx [ ecx - 0x67 ]
cmp [ ecx ] 0xc5751f67
sub [ ecx - 0x3078f68f ] edi
cmp edx [ edi - 0x80 ]
fld [ edi - 0x449b7ede ]
xor al 0xca
test al 0xc8
push 0x9c73e468
xor al 0xf8
mov cl 0x4d
sub_4ad95e
lea esp [ esp + 0x4 ]
jb rwxdata
pushad
mov [ esp + 0x14 ] di
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
cmp bh cl
test bl 0xd8
cmp [ edi - 0x1 ] 0x0
pushfd
pushfd
jmp rwxdata
jmp rwxdata
jmp rwxdata
push 0x477f2fe8
pushfd
lea esp [ esp + 0x28 ]
jbe rwxdata
lea esp [ esp + 0x8 ]
jne rwxdata
jmp sub_43521d
btr di 0xd
sub ecx 0x1
pushad
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x20 ]
mov di di
sub ecx ebp
jmp rwxdata
pushad
push [ esp + 0x10 ]
call sub_4a16c8
add [ eax ] al
dec esp
outsd
arpl [ ecx + 0x6c ] sp
inc esi
jb rwxdata
pushad
neg di
rol di 0x8
mov edi [ edx + 0x24 ]
cmp cx 0x68db
cmp ax 0x8ab9
mov [ esp ] 0xba
cmc
add edi eax
call sub_4af42b
add edi [ ebp + 0x10 ]
shl bl cl
bsf bx si
rcl bl cl
add esi 0x8
sub esp 0xffffffdc
sub bx 0xb3e5
shr bl 0x6
bts bx 0x1
rol bl 0x2
mov bx [ esi ]
pushad
jmp rwxdata
clc
mov ecx [ ebp - 0x8 ]
btr si bx
add ecx [ ebp - 0x4 ]
test bl 0x34
call sub_4ae36d
xor ch [ edx ]
sbb ecx esi
and eax [ edi ]
inc edx
ficom [ ebx - 0x54ac5c85 ]
jg rwxdata
daa
aad 0x9f
shr [ ebx + 0x1ef06a2d ] cl
dec dl
sub ah [ edi - 0x38 ]
inc ecx
int1
lodsd [ esi ]
xor [ edx + 0x38b73ae5 ] dl
imul eax [ esi ] 0xdf64d7ad
add [ edx + 0x4b ] ecx
and dl ah
push ebx
cmp ebx [ edx - 0x741f7687 ]
ja rwxdata
add [ gs : eax + 0xe70ce8 ] bl
add [ ecx ] al
shr al 0x1
and bh dh
jmp rwxdata
dec ebp
and eax 0x780bf94f
mov ecx 0xce76c8e1
xchg [ ebx + 0x2f ] esi
fwait
paddusb mmx0 [ ecx + edx * 2 - 0x65 ]
or al 0xa
fdiv [ 0x75b81f7f ]
movsd [ edi ] gs : [ esi ]
inc ebp
lds ecx [ ecx - 0x67 ]
cmp [ ecx ] 0xc5751f67
sub [ ecx - 0x3078f68f ] edi
cmp edx [ edi - 0x80 ]
fld [ edi - 0x449b7ede ]
xor al 0xca
test al 0xc8
push 0x9c73e468
xor al 0xf8
mov cl 0x4d
or [ ebx - 0x43 ] ebx
push esi
mov esp 0x204ab062
jo rwxdata
sbb bl [ edx + 0x522923b9 ]
clc
shr ebx 0xc
pushad
call sub_4a1a0f
push ebx
lea eax [ rwxdata ]
mov [ esp ] 0x68679056
jmp sub_431405
push edx
push esi
les ebp [ edx ]
mov [ ecx + esi * 8 + 0x1abfa2b3 ] ecx
aaa
pop esp
sub_4ae947
lea esp [ esp + 0x8 ]
ja rwxdata
jmp sub_4ae8b9
pushfd
imul edx edx 0xa
cmc
cmp esp 0x26e1a59c
add edx eax
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
test bl cl
shl al 0x5
add edi 0x1
cmc
rcr al 0x2
add al dh
shl al 0x6
mov al [ edi ]
cmp bl al
test al al
call sub_431d1a
call sub_434b0f
sub_4aeee5
push 0x58d81769
stosb [ edi ]
push edx
mov [ ebp - 0x2 ] al
push [ esp ]
lea esp [ esp + 0x44 ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_4aeefb
sbb ecx ecx
seta ah
push [ esp ]
lea ecx [ ecx * 2 + 0xb ]
mov [ esp + 0x4 ] ah
lahf
mov eax [ ebp - 0x20 ]
lea esp [ esp + 0x8 ]
jge rwxdata
pushfd
jmp rwxdata
not eax
jmp rwxdata
not eax
call sub_4aecd9
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
sub_4aef45
lea esp [ esp + 0x4 ]
jo rwxdata
bswap ax
lea eax [ ebx + ecx * 4 + 0x300 ]
pushfd
lea esp [ esp + 0x4 ]
call sub_433bc2
pushfd
jmp sub_42d2be
lea eax [ ebx + ecx * 4 + 0x300 ]
pushad
pushad
lea esp [ esp + 0x40 ]
call sub_433bc2
call sub_434b38
sub_4af11c
stc
test bl 0xe8
push [ edi ]
pop [ esp ]
test dx ax
cmp edi ebx
pushfd
push edx
jmp rwxdata
lea esp [ esp + 0x8 ]
ja rwxdata
clc
push ecx
mov [ esp ] cx
push edx
sub edi 0x4
call sub_42da86
not al
rol al 0x7
sar al 0x3
sub ebx edi
lea edi [ eax + 0x69367ba3 ]
dec di
jmp sub_4338c8
sub_4af42b
movzx ecx [ edi + ecx * 2 ]
add edi edx
bsf di bx
shl di cl
pushad
mov edi [ edx + 0x1c ]
clc
clc
add edi eax
test sp 0x3a75
jmp rwxdata
stc
mov edi [ edi + ecx * 4 ]
cmp ch dl
cmp cl 0xc9
test edi edi
pushfd
lea esp [ esp + 0x48 ]
je rwxdata
jmp sub_43521d
clc
add eax edi
call sub_434c69
out dx eax
lea edx [ esi - 0x7d ]
ror [ esi ] 0x1
test al 0x90
sub esi [ ecx ]
js rwxdata
fisubr [ eax ]
mov dh 0x3c
stosb [ edi ]
js rwxdata
push ebx
push 0xffffff9f
inc esi
xchg esi eax
nop
and [ cs : edi ] 0xc9
call [ esi + 0x50 ]
rol esi 0xd6
jmp 0x363008fe
or [ ebx + edi + 0xc24648d ] edi
je rwxdata
mov ss [ ebp - 0x4 ]
xchg [ ebx - 0x560ada7d ] dh
mov ecx 0x8a8eef4a
daa
push 0xb01344ae
pop esi
fadd [ edx + 0x40 ]
test [ edx ] bl
inc esi
jbe rwxdata
cmc
cmc
test ah 0xa4
mov edi edx
pushad
bt dx 0x1
jmp rwxdata
inc edx
adc eax 0xe423cd50
and ch ah
xor dl ah
or al [ eax ]
jbe rwxdata
push cs
push 0x41
cmpsd [ esi ] [ edi ]
scasd [ edi ]
and eax 0x9ff72693
jmp 0x7606ca8a
mov al [ ecx ]
test eax 0x84842b85
clc
cmc
call sub_4ad2c4
add [ eax ] al
dec ebp
popad
imul esp [ ebp + 0x53 ] 0x75
jb rwxdata
cmc
sub al 0x30
test cl bh
stc
mov [ esp + 0x4 ] al
cmp bp di
cmp al 0x9
jmp rwxdata
push edx
pushfd
pushad
lea esp [ esp + 0x28 ]
inc esp
imul esi [ edx + 0x65 ] 0x726f7463
lea esp [ esp + 0x20 ]
ja rwxdata
rcl al 0x5
sar al cl
bt esi 0x17
and al dl
sub edx edx
btc ax 0x2
sbb ah ah
lahf
mov eax edx
and al 0x8d
and al 0x10
jne rwxdata
popad
je rwxdata
jmp sub_4ae8b9
push 0x40b1b0e4
stc
imul edx edx 0xa
bt ax si
add edx eax
push 0xc02d1957
pushad
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
btr cx di
shl cl cl
neg ch
mov ecx edi
pushfd
neg al
not al
jmp rwxdata
mov [ esp ] 0x62
inc ebp
js rwxdata
test bl cl
shl al 0x5
add edi 0x1
cmc
rcr al 0x2
add al dh
shl al 0x6
mov al [ edi ]
cmp bl al
test al al
call sub_431d1a
call sub_434b0f
cmp ch bh
clc
call sub_4aece6
adc al 0xee
fwait
inc ecx
loope rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
rol al 0x4
clc
neg al
bt di 0x4
mov [ esp ] 0x10
jae rwxdata
cmc
add [ ecx - 0x4b ] esp
int 0x51
xor [ ebp - 0x33 ] 0x5f8f4565
dec ebp
or [ ss : edi ] bh
pop edi
leave
dec edx
sbb [ ecx ] ecx
shl [ edx + edi + 0x3b4e5e02 ] 0x1
scasd [ edi ]
int1
aas
lodsb [ esi ]
mov [ ebx ] bh
push edx
xlat
popf
imul ebx [ eax - 0x10dcfce9 ] 0x53cb737
push ebp
mov [ esi - 0x4e ] ah
nop
pop es
inc esp
mov cl 0x25
jmp rwxdata
inc edx
xlat
dec esp
stosb [ edi ]
mov eax 0x12b456c0
cld
and al al
cwde
cmc
pushad
mov [ esp + 0x14 ] di
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
cmc
call sub_430893
mov al [ eax + edi ]
push [ esp ]
mov [ esp ] 0xa6
push 0x3ad16c2c
mov [ esp + 0x4 ] cl
stosb [ edi ]
push [ esp ]
pushfd
mov [ esp + 0x4 ] ah
mov [ ebp - 0x2 ] al
push ecx
mov [ esp + 0x4 ] 0xb
push ebx
mov [ esp ] bp
lea esp [ esp + 0x40 ]
jmp rwxdata
push esp
mov [ esp ] esi
cmp al [ edi ]
lea eax [ eax + 0x3a41937c ]
bswap eax
lahf
sets ah
lea edi [ edi + 0x1 ]
setb al
lea eax [ ecx + 0x5fbea19a ]
and al 0x10
jae rwxdata
insd
xlat
xchg esi eax
in al 0x59
mov ebp 0xee29b4e
inc edx
or eax 0x32d49606
nop
xchg [ esi + edi - 0x7d73d124 ] bh
ror [ cs : ebx - 0x55d33433 ] cl
je rwxdata
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
jo rwxdata
push ds
fdiv [ esi ]
push 0x477f2fe8
pushfd
lea esp [ esp + 0x28 ]
jbe rwxdata
je rwxdata
int1
lodsb [ esi ]
adc bl [ edx + eax * 4 + 0x1fcd6a14 ]
push ss
mov esp 0xdacf1c6
cwde
xor dl 0x6a
test [ edx + eax * 4 - 0x25 ] edi
cmp ecx esi
lodsb [ esi ]
adc bl [ edx + eax * 4 - 0x45ac1c36 ]
ja rwxdata
btr di 0xd
sub ecx 0x1
pushad
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x20 ]
mov di di
sub ecx ebp
jmp rwxdata
jb rwxdata
or [ ebp - 0x16cfdb9c ] cl
into
imul edi eax 0xa9018aff
test [ ebx ] ebp
test [ eax + edi * 8 - 0x335170b ] al
mov eax [ esp + 0x48 ]
pushfd
lea esp [ esp + 0x50 ]
ja rwxdata
pop edi
int3
clc
mov ecx [ ebp - 0x8 ]
btr si bx
add ecx [ ebp - 0x4 ]
test bl 0x34
call sub_4ae36d
xor ch [ edx ]
sbb ecx esi
and eax [ edi ]
inc edx
ficom [ ebx - 0x54ac5c85 ]
jg rwxdata
jmp rwxdata
and al 0x28
jns rwxdata
arpl [ edi + ebp * 2 + 0x72 ] si
dec ebp
and eax 0x780bf94f
mov ecx 0xce76c8e1
xchg [ ebx + 0x2f ] esi
fwait
paddusb mmx0 [ ecx + edx * 2 - 0x65 ]
or al 0xa
fdiv [ 0x75b81f7f ]
movsd [ edi ] gs : [ esi ]
inc ebp
lds ecx [ ecx - 0x67 ]
cmp [ ecx ] 0xc5751f67
sub [ ecx - 0x3078f68f ] edi
cmp edx [ edi - 0x80 ]
fld [ edi - 0x449b7ede ]
xor al 0xca
test al 0xc8
push 0x9c73e468
xor al 0xf8
mov cl 0x4d
sub_4af514
lea esp [ esp + 0x44 ]
jge rwxdata
call sub_4a19c1
mov [ ebp - 0x2 ] al
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_4af6de
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
clc
push ecx
mov [ esp ] cx
push edx
sub edi 0x4
call sub_42da86
xor al 0x23
sub ebx edi
rcl di cl
sbb edi edi
xor di 0xe4f5
clc
add ebx esp
stc
sub di bx
add edi 0xfb79fef3
rcl al 0x6
mov edi ebx
xor al 0xe3
mov al 0x2e
cmc
push ecx
push [ esp ]
test dl 0xc3
[ edi ]
call j_sub_49ea32
sub_4af71c
mov eax [ ebp - 0x20 ]
mov [ esp ] dh
pushad
lea esp [ esp + 0x24 ]
jb rwxdata
push esi
xchg [ ebp - 0x24 ] eax
mov [ esp ] edi
push 0xe5254096
xchg [ ebp - 0x28 ] eax
call j_sub_4a319b
xchg [ ebp - 0x24 ] eax
pushad
jmp rwxdata
pushad
xchg [ ebp - 0x28 ] eax
push [ esp + 0x8 ]
call sub_434a0d
sub_4af736
pop eax
cwde
clc
cmp ecx 0x7
bswap ax
pushad
inc al
sbb ecx ecx
not al
not ah
movsx ax dl
lea ecx [ ecx * 2 + 0xb ]
push eax
setge ah
mov eax [ ebp - 0x20 ]
push esp
mov [ esp + 0x4 ] dx
not eax
jmp rwxdata
mov al [ eax + edi ]
push [ esp ]
mov [ esp ] 0xa6
push 0x3ad16c2c
mov [ esp + 0x4 ] cl
stosb [ edi ]
push [ esp ]
pushfd
mov [ esp + 0x4 ] ah
mov [ ebp - 0x2 ] al
push ecx
mov [ esp + 0x4 ] 0xb
push ebx
mov [ esp ] bp
lea esp [ esp + 0x40 ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_4af778
movzx edi cl
mov edi [ esi ]
clc
add edi [ ebp + 0x10 ]
shrd bx di 0xa
rol bl cl
or bh 0x1a
add esi 0x8
movzx bx cl
mov bx [ esi ]
mov [ esp ] 0x93
shr ebx 0xc
cmc
test bp 0xf9e6
cmp ebx 0x1
call sub_4a589d
cmp [ edi ] 0x23
pushfd
jmp rwxdata
call sub_4a53ed
sub_4afb3d
push 0x3d49f54f
lea esp [ esp + 0xc ]
jne rwxdata
jmp sub_4ae8b9
setno al
setge ah
jmp rwxdata
mov [ edi - 0x1 ] 0x0
cwde
movsx eax bl
push ebx
jmp rwxdata
push ebx
lea eax [ rwxdata ]
mov [ esp ] 0x68679056
jmp sub_431405
sub_4afb95
push [ esp ]
pushad
jmp rwxdata
lea esp [ esp + 0x28 ]
jae rwxdata
jmp sub_43521d
call sub_4a61fb
mov [ edi - 0x1 ] 0x0
cwde
movsx eax bl
push ebx
jmp rwxdata
push ebx
lea eax [ rwxdata ]
mov [ esp ] 0x68679056
jmp sub_431405
sub_4afb9e
mov dh 0x0
mov [ esp + 0x8 ] 0xfe
lea esp [ esp + 0x50 ]
je rwxdata
dec dh
add cl cl
sete ah
xchg dh al
movzx ax bl
setl al
setb dh
pushfd
push esi
lea eax [ ebx + edx * 4 + 0x400 ]
pushfd
jmp sub_4a5f53
movzx eax cl
movzx ax cl
lea eax [ ebx + edx * 4 ]
push ebp
lea esp [ esp + 0x4 ]
call sub_433bc2
pushad
adc dl dl
call sub_433c02
sub_4afbcc
pushad
lea esp [ esp + 0x2c ]
call sub_433bc2
pushad
mov [ esp ] 0xe9bf
mov [ esp + 0x8 ] dl
adc dl dl
mov [ esp ] di
pushfd
jmp rwxdata
lea esp [ esp + 0x24 ]
jae rwxdata
lea eax [ ecx + 0x7e3c72b6 ]
lea eax [ eax + 0x1bb9c34e ]
pushfd
lea eax [ ebx + edx * 4 ]
call sub_4a5bb2
bsf ecx esi
rol ebx 0xe
pop ebx
not ax
pop ecx
btc eax ebp
or al bl
shr ah cl
mov [ ebp - 0x2 ] dl
sub al bl
cmp ecx 0x4
mov ah ah
pushad
call sub_4afb67
sub_4afd2a
lea eax [ rwxdata ]
call sub_4a1733
inc al
rcl al cl
cmp cl dh
mov al 0x2e
bt di 0x9
cmp ax 0xe089
test bp 0x69e2
cmc
[ edi ]
push 0x72f57d12
call sub_49f156
xor ah al
pop ebp
mov cl bh
push cs
inc edx
xlat
mov esp 0xb22c4042
dec eax
aam 0x32
add [ edx + ebx * 2 + 0x26 ] dh
sub_4b0154
push ebx
push edi
mov ebx eax
mov edx 0x1
mov edi edx
shl edi cl
lea eax [ ebx + edx * 4 ]
call sub_433bc2
adc edx edx
sub ecx 0x1
jne rwxdata
mov eax edx
sub eax edi
pop edi
pop ebx
retn
sub_4b0193
mov [ esp + 0x4 ] ah
push esp
lea esp [ esp + 0x50 ]
ja rwxdata
cmp ch bh
clc
call sub_4aece6
adc al 0xee
fwait
inc ecx
loope rwxdata
call j_sub_4ad95e
cmc
jmp rwxdata
cmc
add [ ecx - 0x4b ] esp
int 0x51
xor [ ebp - 0x33 ] 0x5f8f4565
dec ebp
or [ ss : edi ] bh
pop edi
leave
dec edx
sbb [ ecx ] ecx
shl [ edx + edi + 0x3b4e5e02 ] 0x1
scasd [ edi ]
int1
aas
lodsb [ esi ]
mov [ ebx ] bh
push edx
xlat
popf
imul ebx [ eax - 0x10dcfce9 ] 0x53cb737
push ebp
mov [ esi - 0x4e ] ah
nop
pop es
inc esp
mov cl 0x25
jmp rwxdata
inc edx
xlat
dec esp
stosb [ edi ]
mov eax 0x12b456c0
cld
and al al
cwde
cmc
clc
cmp al 0x9
pushfd
call sub_4ae947
insd
xlat
xchg esi eax
in al 0x59
mov ebp 0xee29b4e
inc edx
or eax 0x32d49606
nop
xchg [ esi + edi - 0x7d73d124 ] bh
ror [ cs : ebx - 0x55d33433 ] cl
je rwxdata
push ds
fdiv [ esi ]
sub_4b02b5
push [ esp ]
lea ecx [ ecx + ecx * 2 + 0xa ]
mov [ esp + 0x8 ] 0x9264
lea esp [ esp + 0x3c ]
jmp rwxdata
push 0x74c7e7bd
cmc
stc
test edx 0xb9f3c6df
xchg [ esp ] ecx
test dl 0x73
push esi
cmc
rol cx cl
ror ch cl
push 0xa1d55f5b
lea ecx [ eax + 0x2 ]
adc si bp
mov esi [ ebp - 0x20 ]
add al ch
not esi
shr al 0x6
mov al 0x6a
stc
add esi edi
push edx
jmp sub_42da10
sub_4b0443
lea esi [ eax + 0x51de73f5 ]
mov esi [ esp + 0x1c ]
pushfd
push [ esp ]
mov [ esp ] 0x4ed7
mov esp ebp
jmp rwxdata
not bp
lea ebp [ esp + 0x1c312e49 ]
pop ebp
push 0x78e6805e
pushad
pushad
push [ esp + 0x44 ]
retn 0x50
sub_4b07b8
lea esp [ esp + 0xc ]
call sub_433bc2
pushad
jmp rwxdata
adc dl dl
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
add al cl
btr ecx 0x17
pop ebx
sbb ax dx
movzx ax bl
pop ecx
sub ax 0x4a06
mov ah 0x9e
mov [ ebp - 0x2 ] dl
shld ax cx 0x9
cmp ecx 0x4
pushfd
mov eax ecx
pushad
jmp rwxdata
pushfd
stc
xor dh dl
push [ esp ]
test sp 0x59bb
test dh 0x1
setns dh
lea esp [ esp + 0x8 ]
jae rwxdata
push 0x1d1c032a
call sub_4af617
jmp sub_42da1d
mov dh 0x0
call sub_49e5a1
mov [ esp ] 0x6
mov [ ebp - 0x2 ] al
pushfd
mov [ esp + 0x8 ] bh
mov [ esp ] 0xce
lea esp [ esp + 0x48 ]
jmp rwxdata
shrd ax si cl
shl edx 0x7
ror dx cl
push 0xc440bd12
mov edx edi
bt esi ebx
test edi edx
inc al
sub edx [ ebp + 0xc ]
adc ax 0xc93f
cmc
shr al 0x6
and edx 0x3
lea eax [ esp - 0x765ee60f ]
mov eax ecx
mov [ esp ] dl
shl eax 0x4
mov [ esp ] bh
cmp dl cl
call sub_4a0ce4
pushfd
push ebx
push [ esp + 0x4 ]
mov al [ eax + edi ]
push [ esp ]
stosb [ edi ]
mov [ esp ] 0x55c1ecf9
pushfd
mov [ ebp - 0x2 ] al
mov [ esp ] 0xbdda0a69
pushad
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
sub_4b0867
lea esp [ esp + 0x4 ]
call sub_433bc2
jmp rwxdata
push 0x4edc838a
lea esp [ esp + 0x4 ]
jb rwxdata
not ah
pushad
mov [ esp + 0x1c ] edx
lahf
push 0xc88ed181
pushfd
bswap ax
lea eax [ ebx + ecx * 4 + 0x360 ]
pushad
lea esp [ esp + 0x44 ]
call sub_433bc2
pushad
pop edx
movzx dx cl
mov edx [ ebp - 0x20 ]
mov [ esp ] bl
push edx
mov [ esp + 0x4 ] 0x5e7a81e
push esi
xchg [ ebp - 0x24 ] edx
pushad
lea esp [ esp + 0x44 ]
jae rwxdata
bswap ax
mov eax ecx
jmp rwxdata
pushfd
lea eax [ edx * 8 - 0x2c95f1cf ]
pushad
movzx ax al
mov [ ebp - 0x20 ] edx
setpo al
push 0xcf7c8890
mov edx [ esp + 0x28 ]
lea esp [ esp + 0x2c ]
bswap ax
call sub_434eca
not ah
push ecx
mov [ esp ] 0x7b
call sub_4ae29f
shl eax 0x4
call sub_434b56
sub_4b08ee
neg bx
sub esp 0xb4
movzx edi cl
and di 0x9319
sbb ecx 0xd20889cd
xadd bl al
mov edi esp
sbb al dh
not ecx
dec al
bt si 0xd
mov ebx esi
bsf ecx edx
bts cx 0xd
add esi [ ebp ]
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b0ed9
call sub_4b0875
sub_4b0bc2
call sub_4b0f3c
adc al dl
push edx
jmp rwxdata
mov al [ ebp ]
shr cl cl
setle cl
xor cl dl
mov cl [ ebp + 0x2 ]
lea esp [ esp + 0x4 ]
jg rwxdata
test bh dh
pushfd
cmc
jmp rwxdata
pushfd
pushfd
sub ebp 0x2
stc
shr al cl
mov [ esp ] al
mov [ esp ] bl
pushfd
mov [ ebp + 0x4 ] ax
pushfd
pushfd
call j_sub_4b16fb
sub ebp 0x2
stc
sub esp 0xfffffffc
jo rwxdata
cmp esi 0x157ce5e8
shr al cl
pushfd
mov [ esp ] 0x4c
mov [ ebp + 0x4 ] ax
push ebp
pushfd
pop [ esp + 0x4 ]
call sub_4b0fa8
push 0xadac1c2b
mov [ esp ] ch
shr al cl
pushad
call j_sub_4b1344
sub_4b0bcf
neg ecx
bt bp 0x4
bt sp 0x3
test sp bp
cmp bl 0x81
add ecx 0x0
push ecx
lea esp [ esp + 0x10 ]
jo rwxdata
push 0x3de28678
push [ esp ]
mov [ esp + 0x4 ] ecx
push [ esp ]
push [ esp + 0x4 ]
pushad
push [ esp + 0x2c ]
retn 0x30
pushad
push 0x7817f2bb
mov [ esp + 0x20 ] ecx
push 0xe14cc384
pushad
pushfd
pushfd
push [ esp + 0x4c ]
retn 0x50
sub_4b0f00
or eax ecx
mov [ esp ] 0xf9efae14
stc
xor al [ edx ]
lea esp [ esp + 0x10 ]
jae rwxdata
pushfd
pushfd
inc edx
pushad
dec [ ebp ]
mov [ esp + 0x8 ] 0xbda8
pushfd
push [ esp + 0x4 ]
jmp rwxdata
pushfd
inc edx
call sub_4b1d3b
lea esp [ esp + 0x30 ]
jne rwxdata
bswap cx
cmp bh dh
sub cl dh
bt edi esp
mov ecx eax
cmp ch dh
pushfd
jmp rwxdata
push 0xd9aec7ef
push edx
mov [ ebp ] eax
push [ esp + 0x4 ]
push ebx
pushfd
lea esp [ esp + 0x14 ]
jmp rwxdata
shl eax 0x7
bt sp 0x3
shr ecx 0x19
pushfd
pushfd
bt dx ax
call sub_4b0f00
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b0ed9
call sub_4b0875
sub_4b0f3c
pushfd
lea esp [ esp + 0x3c ]
jpo rwxdata
jmp rwxdata
push ecx
pushad
push [ esp + 0x4 ]
push edx
push [ esp + 0x28 ]
retn 0x2c
push ecx
pushfd
pushfd
push ecx
mov [ esp + 0x8 ] edx
push [ esp + 0xc ]
retn 0x10
sub_4b131f
pushfd
sub bx ax
pushfd
cwde
test dh 0xda
pushfd
sub ebp 0x4
push ecx
pushfd
mov [ ebp ] eax
pushfd
lea esp [ esp + 0x44 ]
jmp sub_4b24ba
sub_4b1344
mov [ esp ] 0x19e0
mov [ ebp + 0x4 ] ax
pushfd
pushfd
pushfd
pop [ esp + 0x2c ]
jmp rwxdata
pushfd
push [ esp + 0x30 ]
pop [ ebp ]
mov [ esp ] 0x55ed9540
pushfd
mov [ esp + 0xc ] 0x78b5
push [ esp ]
lea esp [ esp + 0x3c ]
jmp sub_4b24ba
sub_4b15d7
mov [ ebp ] ax
mov [ esp + 0x4 ] 0x9e
push ebx
lea esp [ esp + 0x2c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b0ed9
call sub_4b0875
sub_4b1d3b
dec [ ebp ]
pushad
mov [ esp ] 0x40
lea esp [ esp + 0x28 ]
jne rwxdata
bswap cx
cmp bh dh
sub cl dh
bt edi esp
mov ecx eax
cmp ch dh
pushfd
jmp rwxdata
pushad
pushad
lea esp [ esp + 0x40 ]
jge rwxdata
shl eax 0x7
bt sp 0x3
shr ecx 0x19
pushfd
pushfd
bt dx ax
call sub_4b0f00
pushfd
jmp rwxdata
mov [ ebp ] eax
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov [ ebp ] eax
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b0ed9
call sub_4b0875
sub_4b20b6
dec dh
btc dx cx
or dh 0x42
mov dx [ ebp ]
push ebx
add esi 0x1
mov [ esp ] edx
clc
add ebp 0x2
jmp rwxdata
mov [ eax + edi ] dx
push esi
push edi
mov [ esp + 0x8 ] 0xdd
lea esp [ esp + 0x38 ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b0ed9
call sub_4b0875
sub_4b20dd
mov [ esp + 0x24 ] esi
pushad
jmp rwxdata
mov [ esp + 0x40 ] ebp
pushfd
jmp rwxdata
mov [ esp ] ch
mov [ esp + 0x40 ] edx
mov [ esp + 0x4 ] 0x8
pushfd
jmp rwxdata
mov [ esp + 0x40 ] esi
jmp rwxdata
mov [ esp + 0x3c ] edi
push 0x71cc5b1c
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x40 ]
jmp sub_4b21a3
sub_4b21a3
lea edi [ ebp + 0x63f42afc ]
push ecx
push edx
pushfd
pop [ esp ]
xchg bp si
push [ rwxdata ]
mov si bp
bswap si
xchg bp si
push 0x0
mov si 0x7e1e
movsx edi cl
mov esi [ esp + 0x30 ]
push ecx
inc esi
rcl bp cl
rol esi 0xe
movsx bx al
push esp
call sub_4b2e13
sub_4b21f5
[ edi ] [ esi ]
ror di 0x6
cmc
btc di ax
mov edi [ esp + 0x50 ]
sar si cl
ror si 0x3
lea esi [ 0xffffffffc6bb040e ]
mov esi [ esp + 0x54 ]
std
stc
std
bt si 0x1
push [ esp + 0x58 ]
popfd
mov [ esp ] dh
mov [ esp + 0x10 ] ah
lea esp [ esp + 0x5c ]
jmp rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b0ed9
call sub_4b0875
sub_4b224d
mov [ esp + 0x10 ] 0x41d03457
push 0x88a6cf
mov [ esp + 0x4c ] ebp
push ebp
mov [ esp + 0x14 ] esp
mov [ esp + 0x4c ] edx
pushfd
mov [ esp + 0x4c ] esi
mov [ esp ] 0xc8
mov [ esp + 0x48 ] edi
push 0x84e10a9f
pushfd
mov [ esp + 0x4 ] 0x7
lea esp [ esp + 0x50 ]
jmp sub_4b21a3
sub_4b24ba
bswap ax
add al dl
lea eax [ edi + 0x50 ]
push edx
pushad
cmp ebp eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x2c ]
ja rwxdata
lea ecx [ 0x7e08a772 ]
cmc
movsx cx cl
mov al [ esi ]
setpe cl
clc
xor al bl
not cl
push 0x365743bb
setno cl
rol al 0x5
dec ch
shld cx di 0x5
not al
bswap cx
or cx sp
pop ecx
shld cx si 0x8
xor al 0xd6
bswap cx
jpe rwxdata
clc
mov edx esp
clc
bsr ax bp
aad 0xde
lea ecx [ edi + 0x40 ]
shl edi cl
sub ecx edx
sub di cx
aad 0xf9
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_4b09c1
lea ecx [ 0xffffffffabd60e40 ]
shr ch cl
xor bl al
rcr ch 0x5
shld ecx ebx 0x1
movzx eax al
cmc
inc cx
cmc
sbb ch dl
lea esi [ esi + 0x1 ]
jmp rwxdata
sar cl cl
bt ecx esi
xor bl al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
movzx eax al
add ch cl
cmc
bts cx 0x5
sbb cx si
lea esi [ esi + 0x1 ]
add ecx 0xb8430c07
btc ecx edx
call sub_4b0ed9
call sub_4b0875
sub_4b2ed2
not al
pushad
cmp bh 0x77
not dl
push esp
cmc
sub ebp 0x2
jmp rwxdata
and al dl
lea esp [ esp + 0x28 ]
jno rwxdata
jmp rwxdata
push 0x4aab8746
mov [ esp ] 0xc0
pushfd
mov [ ebp + 0x4 ] ax
call sub_4b2df3
pushfd
mov [ ebp + 0x4 ] ax
push [ esp ]
pushfd
pop [ esp + 0x4 ]
pushad
jmp rwxdata
push [ esp + 0x24 ]
pop [ ebp ]
push 0xb7c59963
pushfd
lea esp [ esp + 0x30 ]
jmp sub_4b24ba
sub_42d2be
lea esp [ esp + 0x4 ]
jae rwxdata
call sub_4af71c
mov ax 0xf190
lea eax [ ebx + ecx * 4 + 0x330 ]
call sub_4b0867
sub_42d2df
stc
add edi eax
call sub_49f596
sub_42d2e7
not eax
push [ esp ]
call sub_4af44a
sub_42d4c4
bt bx bx
stc
mov [ esp + 0x4 ] ah
rol al 0x4
call sub_435260
clc
stc
cmp eax 0x4
call sub_42d133
sub_42da10
mov [ esp + 0x4 ] 0x7f
pushad
[ edi ] [ esi ]
jmp sub_4a01d0
sub_42da1d
push 0x6c2f5132
mov dh 0x0
call sub_4ad5b4
sub_42da34
pushad
shl eax 0x4
push [ esp ]
pushfd
pushfd
stc
add eax edx
call j_sub_42fc3f
sub_42da86
push 0x82887475
pushad
call sub_4336a8
sub_42da91
lea eax [ ebx + eax * 4 + 0x6c0 ]
pushfd
mov [ esp + 0x4 ] 0x3c
mov [ esp + 0x4 ] al
call sub_434e45
j_sub_4af6de
jmp sub_4af6de
sub_42fc3f
mov [ esp ] dh
lea eax [ ebx + eax * 4 + 0x3c0 ]
mov [ esp + 0x10 ] 0x6f
mov [ esp + 0x4 ] 0x5bad
jmp sub_430938
sub_42fffd
mov al [ eax + edi ]
pushad
push [ esp + 0xc ]
pushfd
stosb [ edi ]
call sub_43088d
sub_43014b
mov esp ebp
call sub_4a5ca7
sub_430152
add eax edi
clc
cmc
cmp eax edx
jmp sub_431a0f
sub_430888
call sub_433bb7
sub_43088d
pushfd
call sub_4af514
j_sub_4ad95e
jmp sub_4ad95e
sub_430915
mov [ esp + 0x1c ] rwxdata
pushfd
pushad
jmp rwxdata
mov [ esp + 0x3c ] eax
mov [ esp + 0x4 ] 0x7f
mov [ esp ] ah
pushfd
push [ esp + 0x40 ]
retn 0x44
sub_430a15
call sub_42fffd
sub_430a22
xor dh dl
bt bp 0x3
pushad
pushfd
test dh 0x1
push [ esp ]
jmp rwxdata
call sub_4afb9e
sub_430b28
mov [ esp ] 0x18f9dc05
pushad
call sub_49fb65
sub_430bc1
call sub_4a1392
sub_430c7f
mov [ esp ] al
mov [ esp + 0x20 ] rwxdata
pushad
mov [ esp + 0x3c ] eax
push ebx
push [ esp + 0x4 ]
push [ esp + 0x44 ]
retn 0x48
sub_430d76
mov [ esp ] al
lea esp [ esp + 0x10 ]
jae rwxdata
push 0x760b6a25
jmp rwxdata
stc
pushfd
call sub_4300f4
push ebx
clc
sub ecx 0x4
call sub_432202
sub_430f24
call sub_4a0a7a
sub_431405
jmp rwxdata
mov [ esp ] rwxdata
pushad
mov [ esp + 0x1c ] eax
mov [ esp ] bh
push [ esp + 0x8 ]
push [ esp + 0x20 ]
retn 0x24
sub_431ac0
pushad
call sub_4b02b5
sub_431bb3
sub al 0x76
pushfd
mov [ esp + 0x20 ] sp
mov [ esp ] cl
ror al 0x4
mov [ esp + 0x10 ] 0xdc
test bl 0x89
not al
call sub_430f29
j_sub_4a319b
jmp sub_4a319b
sub_4320d6
mov [ esp + 0x4 ] 0x6a
lea esp [ esp + 0x44 ]
call sub_4a5ccd
pushfd
stc
add [ ebp - 0x20 ] eax
pushad
jmp rwxdata
cmc
pushad
cmp [ ebp - 0x20 ] 0xffffffff
jmp sub_4300a1
sub_432120
call sub_4afa4a
sub_4323e0
lea eax [ ebx + eax * 4 + 0x6c0 ]
mov [ esp ] dh
pushfd
push [ esp ]
lea esp [ esp + 0x14 ]
call sub_4b0154
jmp rwxdata
call sub_433378
sub_4323fc
test ch bh
neg al
test edx 0xdb6474ba
cmp al [ edi ]
push [ esp + 0x4 ]
lahf
call sub_432651
sbb al 0xfa
sub_43266b
call sub_4a110f
sub_432755
cmp eax 0x4
pushfd
call sub_42d4e1
sub_432765
pushfd
stosb [ edi ]
call sub_49f608
sub_433378
cmp bp 0xf553
pushfd
mov [ ebp - 0x20 ] eax
clc
bt sp si
cmp eax 0x4
pushad
call sub_4a02b5
sub_4334f2
not eax
call sub_430a15
sub_4336a8
push [ edi ]
pop [ esp + 0x30 ]
mov [ esp + 0x10 ] ch
cmp edi ebx
mov [ esp + 0x4 ] 0xf4
call sub_434aa7
sub_433bb7
lea eax [ rwxdata ]
jmp sub_48e41d
sub_433f33
mov edi eax
shl cl cl
mov ecx 0x104
pushad
jmp rwxdata
xor al al
mov [ esp + 0x4 ] dl
mov [ esp + 0x4 ] 0xa
[ edi ]
call j_sub_49fade
sub_433f71
dec al
call sub_42d4c4
sub_4341b4
not al
jmp sub_48e96c
sub_434a0d
pushfd
push ebx
mov [ ebp - 0x14 ] eax
jmp rwxdata
cwde
seta al
cwde
lea eax [ ebx + 0xcc8 ]
call j_sub_48e42a
j_sub_49fade
jmp sub_49fade
sub_434a81
mov [ esp ] eax
pushfd
push 0x5c58633e
pushad
mov [ esp + 0x8 ] 0x8f
push [ esp + 0x28 ]
retn 0x2c
sub_434b0f
call sub_4a116a
sub_434b38
pushad
call sub_4a1eff
sub_434b3e
movzx ecx [ edi + ecx * 2 ]
add di 0xc1a8
pushfd
bts di 0x5
mov edi [ edx + 0x1c ]
pushad
call sub_42d2df
sub_434b6a
mov [ esp + 0x4 ] rwxdata
jmp j_sub_434a81
sub_434c94
push [ esp ]
call sub_4afbcc
_start
pushad
jmp rwxdata
push edi
pushad
mov [ esp + 0x40 ] 0x7a340128
push [ esp + 0x14 ]
call sub_4a547b
sub_434eca
bswap ax
lea eax [ ebx + 0x50d0 ]
pushfd
lea esp [ esp + 0x8 ]
call sub_49fa94
cmc
cmp ecx 0x7
pushad
push ebp
call sub_43365d
sub_435276
push [ esp ]
pushad
call sub_42d4b3
sub_4356e7
sub ecx ebx
lea esi [ edx * 8 - 0x65712f1a ]
not si
xor si 0x9aa
xor esi edx
lea esi [ esp + 0x4 ]
jmp sub_4a08f9
sub_435a7f
push 0xd39c493e
sbb ecx ecx
call sub_431ac0
sub_48e41d
mov [ esp + 0x20 ] rwxdata
jmp sub_430a54
j_sub_430bc6
jmp sub_430bc6
sub_49e9b6
push ecx
push [ esp ]
lea eax [ ebx + 0xcc8 ]
pushad
lea esp [ esp + 0x34 ]
call sub_49fa94
pushfd
cmc
mov [ esp ] eax
push 0x6e168786
bt ax 0x7
call sub_49f1e9
sub_49ea00
pushfd
lea esp [ esp + 0xc ]
jne rwxdata
jmp sub_43521d
pushfd
neg cx
mov ecx edi
pop esi
shr si 0x4
clc
call sub_4356e7
j_sub_48e42a
jmp sub_48e42a
sub_49f1e9
mov [ esp ] 0xbc
mov [ esp + 0x4 ] ecx
call sub_432755
j_sub_49e9b6
jmp sub_49e9b6
sub_49f596
push esp
pushfd
stc
mov edi [ edi + ecx * 4 ]
call j_sub_430bc6

sub_49f8d5
pushad
adc edx edx
jmp rwxdata
bt ax di
sub ecx 0x1
jmp rwxdata
test bh 0x28
stc
call sub_4ad2d3
sub_4a01d0
mov esi [ esp + 0x28 ]
bswap cx
pushfd
pop ecx
mov ecx [ esp + 0x2c ]
push [ esp + 0xc ]
jmp rwxdata
mov al dh
jmp rwxdata
mov al [ edi - 0x1 ]
jmp rwxdata
call sub_434b0f
sub_4a0a7a
pushad
sbb ecx ecx
stc
lea ecx [ ecx + ecx * 2 + 0xb ]
cmp ch al
xchg [ esp + 0x24 ] ecx
shld cx di cl
xchg [ esp + 0x20 ] esi
call sub_431a23
sub_4a0b0d
call sub_431ad3
sub_4a0b12
pushad
jmp rwxdata
push [ eax ]
pop [ esp + 0x20 ]
pushfd
pushad
push [ esp + 0x44 ]
retn 0x48
sub_4a0ebd
call sub_434c8e
sub_4a1733
mov [ esp + 0xc ] rwxdata
pushad
mov [ esp + 0x28 ] eax
push [ esp ]
pushfd
push ecx
push esp
push [ esp + 0x38 ]
retn 0x3c
sub_4a319b
mov [ ebp - 0x14 ] eax
jmp j_sub_49e9b6
j_sub_4a61e1
jmp sub_4a61e1
j_sub_49ea32
jmp sub_49ea32
sub_4a5bb2
lea esp [ esp + 0x8 ]
call sub_433bc2
call sub_435276
sub_4a5ca7
not bp
mov ebp [ esp + 0x4 ]
push [ esp + 0x4 ]
pushad
push [ esp + 0x2c ]
retn 0x40
sub_4a5f53
mov [ esp + 0x4 ] 0xdd14
jmp sub_4b07b8
sub_4a5f5f
lea esp [ esp + 0x4 ]
jb rwxdata
bswap ax
call sub_434eca
stc
cmp ecx 0x7
call sub_4a095b
j_sub_42fc3f
jmp sub_42fc3f
sub_4a6115
xor eax eax
call sub_49f61b
sub ecx 0x1
jne rwxdata
mov [ ebp - 0x1c ] edx
add eax 0x1
shr [ ebp - 0x18 ] 0x1
add eax eax
mov edx [ ebp - 0x1c ]
sub edx [ ebp - 0x18 ]
jb rwxdata
retn
sub_4a61fb
call sub_42d2f1
mov ch [ esp + esi * 4 ]
daa
adc bh bl
sub_4acfd7
cmc
cmp edi ebx
call j_sub_4af6de
j_sub_434a81
jmp sub_434a81
sub_4ae1a8
mov [ esp ] ah
jmp sub_433391
sub_4ae29f
lea eax [ ebx + ecx * 4 + 0x390 ]
jmp sub_4a0ebd
sub_4ae362
sub al 0x30
pushad
clc
cmp al 0x9
jmp rwxdata
lea esp [ esp + 0x28 ]
ja rwxdata
jmp sub_4ae8b9
clc
imul edx edx 0xa
call sub_433964
sub_4ae36d
bswap esi
shr ecx 0x1
dec di
or di dx
test dl 0xdf
mov edi [ ebx + ecx * 4 ]
bsf si cx
or si cx
inc esi
add edi eax
jmp sub_4a0cc0
sub_4ae44b
mov [ esp + 0x50 ] rwxdata
mov [ esp + 0x8 ] cx
mov [ esp + 0x4 ] ah
mov [ esp + 0x4c ] eax
push [ esp + 0x4 ]
mov [ esp + 0x8 ] dx
mov [ esp ] 0xa855
push [ esp + 0x50 ]
retn 0x54
sub_4ae8b9
push 0x9e41283e
push edx
mov esp esi
push edx
mov [ esp ] al
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
jmp sub_43521d
sub_4aecd9
jmp rwxdata
push [ esp + 0x4 ]
push 0x9358f0a0
mov al [ eax + edi ]
call sub_432765
sub_4aece6
cmp ecx [ ebp - 0x4 ]
jmp sub_4afb95
sub_4af3de
add esi edi
call sub_4a1d13
j_sub_4334f2
jmp sub_4334f2
sub_4af44a
pushfd
mov [ esp ] 0xf9
mov al [ eax + edi ]
pushfd
call sub_4aeee5
sub_4af53d
cmp eax 0x4
call sub_42d40f
sub_4af617
lea esp [ esp + 0x2c ]
jb rwxdata
bt bx ax
bt edx 0xa
sub ecx eax
jmp rwxdata
adc ah dl
cmp ecx 0xa
call sub_434094
call sub_430fbb
sub_4afa4a
mov edi ebx
mov si bx
jmp sub_49ea26
sub_4afb57
mov [ esp + 0x20 ] eax
pushad
push [ esp ]
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4afb67
mov eax ecx
pushfd
mov [ esp ] 0x7e339e40
push 0xa7522bf6
call sub_43411d
sub_4afd23
test al al
call sub_4ad5cd
sub_4b0875
stc
mov ecx [ eax * 4 + rwxdata ]
pushad
call sub_4b1521
sub_4b0894
bt bx 0xd
clc
test bx di
xchg [ ebp + ecx * 4 ] eax
cmp bh 0x6
mov [ esp ] eax
call sub_4b1720
sub_4b09c1
xchg [ esp + 0x40 ] esi
cld
pop edi
mov esi edx
pushfd
cld
lea edi [ ecx + eax - 0x40 ]
call sub_4b163e
sub_4b0a34
call sub_4b0fc3
sub_4b0b02
mov [ esp + 0x28 ] edi
mov [ esp + 0x4 ] 0x32a5
pushfd
lea esp [ esp + 0x2c ]
jmp sub_4b21a3
sub_4b0b2a
push 0xe17256ee
xchg [ esp + 0x4c ] edi
lea edi [ eax * 2 + 0x24e6d209 ]
mov edi eax
mov [ esp + 0x4 ] ah
jmp rwxdata
mov [ esp + 0x4 ] bl
cld
call j_sub_4b21f5
sub_4b0b8a
sub ecx 0x1
jmp j_sub_4b28d0
sub_4b0cd6
push 0xece3a10a
mov [ esp + 0x28 ] esi
jmp rwxdata
call sub_4b0b02
sub_4b0ed9
mov ecx [ eax * 4 + rwxdata ]
stc
call sub_4b0bcf
call sub_4b0875
sub_4b0fa8
push [ esp + 0x8 ]
pop [ ebp ]
pushfd
pushfd
lea esp [ esp + 0x14 ]
jmp sub_4b24ba
sub_4b0fc3
xchg [ ebp ] eax
jmp sub_4b1533
j_sub_4b1344
jmp sub_4b1344
j_sub_4b28d0
jmp sub_4b28d0
sub_4b1501
cmp cl 0xf3
sub eax eax
call sub_4b0a34
sub_4b1521
pushfd
neg ecx
cmc
call sub_4b28df
sub_4b1533
pushad
push 0x3a4676f0
mov [ esp + 0x2c ] rwxdata
call sub_4b2a93
add ebp 0x2
pushad
pushfd
mov ax [ eax ]
mov [ esp ] 0xa359da6e
call sub_4b15d7
sub_4b163e
call sub_4b20d8
sub_4b1643
mov [ esp ] 0x84
pushad
jmp rwxdata
mov [ esp + 0x20 ] ebx
pushad
push edi
push 0xa412fb79
pushfd
mov [ esp + 0x48 ] esi
call sub_4b224d
sub_4b1691
stc
cmp al 0xd
mov [ esp ] si
sub eax eax
jmp sub_4b0894
sub_4b16fb
pushfd
pop [ esp + 0x14 ]
pushad
mov [ esp ] bl
push [ esp + 0x34 ]
pop [ ebp ]
push 0x150720d6
push ebp
push 0x771a3e89
pushfd
lea esp [ esp + 0x48 ]
jmp sub_4b24ba
sub_4b1720
call sub_4b0b8a
sub_4b20d8
call sub_4b0b2a
sub_4b2238
inc esi
push ecx
push 0x27e43e74
mov [ ebp ] ax
pushfd
lea esp [ esp + 0x50 ]
jmp sub_4b24ba
sub_4b22c2
mov [ esp + 0x48 ] edi
mov [ esp + 0x4 ] dh
push 0x270e5baf
push [ esp ]
mov [ esp ] 0x54
lea esp [ esp + 0x50 ]
jmp sub_4b21a3
sub_4b28d0
lea esp [ esp + 0x8 ]
jne rwxdata
call sub_4b1691
call sub_4b1501
sub_4b28df
cmc
cmc
add ecx 0x0
call sub_4b0bc2
sub_4b28fb
mov [ esp + 0x44 ] esi
push esp
call sub_4b22c2
j_sub_4b16fb
jmp sub_4b16fb
j_sub_4b21f5
jmp sub_4b21f5
sub_4b2a8c
sub bl al
call sub_4b20b6
sub_4b2a93
push esp
pushfd
mov [ esp + 0x34 ] eax
pushfd
push [ esp + 0x38 ]
retn 0x3c
sub_4b2df3
pushfd
jmp rwxdata
pushfd
pop [ esp + 0xc ]
pushfd
push [ esp + 0x10 ]
pop [ ebp ]
push [ esp + 0x4 ]
lea esp [ esp + 0x18 ]
jmp sub_4b24ba
sub_4b2e13
dec esi
stc
rcr bl cl
ror di cl
btr ebx 0x2
lea ebp [ esp + 0xc ]
jmp sub_4b08ee
