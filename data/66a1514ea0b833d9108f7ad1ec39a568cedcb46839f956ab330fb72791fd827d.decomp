sub_2171e5
push esi
inc al
clc
push [ esp + 0x8 ]
pushfd
ror al 0x4
cmc
mov [ esp + 0x4 ] dl
bt bp 0xe
add al 0xdf
stc
neg al
mov [ esp ] 0x3275
pushfd
lea esp [ esp + 0x50 ]
call sub_39e219
pushad
cmp bl bh
push [ esp ]
cmp eax 0x7d00
mov [ esp ] ah
pushad
lea esp [ esp + 0x44 ]
jae rwxdata
setpo bl
not bl
pushad
inc bl
inc ecx
lea esp [ esp + 0x20 ]
stc
push 0xc391dba4
cmp ah 0x5
mov [ esp ] ch
lea esp [ esp + 0x4 ]
jae rwxdata
call sub_3ae276
pushfd
push edi
push 0x46eb7982
cmp eax 0x7f
mov [ esp + 0x8 ] cx
push [ esp ]
pushad
lea esp [ esp + 0x30 ]
ja rwxdata
or bl al
xchg ebp eax
cmc
xchg al bl
push 0x49aab4ea
mov eax ebp
cmc
add bl 0xee
mov bl 0x1
lea esp [ esp + 0x4 ]
push esp
cmc
call sub_399cc7
jmp rwxdata
jmp rwxdata
not bl
inc ecx
pushfd
push ebp
sets bl
inc ecx
sar bl 0x2
neg bl
pushfd
add bl cl
xchg ebp eax
adc bl 0xf6
sbb bl bl
xchg al bl
mov eax ebp
and bl 0xac
jmp rwxdata
mov bl 0x1
stc
stc
mov [ esp ] dh
mov [ esp + 0x8 ] esi
call sub_393b5d
sub_2172a3
stc
push 0xe3e0868b
cmp [ edi ] 0x23
pushad
pushfd
push 0xdcb09f7b
jmp rwxdata
lea esp [ esp + 0x30 ]
jne rwxdata
pushfd
cmc
jmp sub_21762e
btc ax si
aas
sub edx edx
pushfd
mov eax edx
shl al 0x5
shl al 0x1
add edi 0x1
dec al
cmc
shl al 0x2
and al cl
mov al [ edi ]
pushfd
clc
test al al
call sub_392b0d
add al 0x25
mov esi 0x7b5d9680
cdq
sti
test eax 0xdc89a09c
int1
push ebx
jl rwxdata
hlt
jno rwxdata
xchg ebp eax
push ds
sbb eax 0x8052efeb
pop ebx
adc al 0x47
mov ebp 0x70e51724
mov ecx 0xaebb5300
mov edx 0x60f2f339
xchg [ esi + ecx - 0x59 ] eax
test eax 0xf14f4ea7
push 0x27
sub eax 0xed1200b4
inc edx
arpl dx bx
jpe rwxdata
push edi
add [ ebp + 0xf242464 ] cl
test [ ebx ] cl
jo rwxdata
mov dl 0x10
lodsd [ esi ]
fdivr [ esp + edi * 8 ]
xor [ edi ] al
pop esp
movsd [ edi ] [ esi ]
and eax edi
dec edx
push cs
pop ecx
inc esi
xchg esp eax
sbb eax 0x22c2ca2b
imul esi [ esi + edx * 4 - 0x34f24ba3 ] 0xffffffa5
xor [ cs : eax + esi + 0x3bd4aca ] eax
imul dl
sub [ edx - 0x305eda78 ] ecx
hlt
xor [ eax + esi + 0x3bd4aca ] eax
dec esi
lea edx [ esi ]
mov [ 0xffffffffe61e2a9e ] eax
dec esi
bound esp [ ebp + 0x31 ]
jecxz rwxdata
add [ ebx - 0x45 ] dl
scasb [ edi ]
sub_2172b8
bsr ax dx
sar al cl
mov eax edx
rcl al 0x2
and al 0xd7
rcl al cl
add edi 0x1
pushfd
mov al [ edi ]
push [ esp + 0x4 ]
test al al
push 0xce91fddb
lea esp [ esp + 0x10 ]
je rwxdata
rcl al cl
clc
setbe ch
rol ecx 0x18
mov edi edx
pushfd
cmc
jmp sub_21762e
call sub_3acbc3
inc ebx
in al 0x52
xchg ecx eax
adc bh [ esp + eax * 4 ]
aad 0xfb
mov cl 0x75
xor al 0xf5
pushad
out 0xd al
sbb ebx edx
pop esp
fwait
jno rwxdata
int 0x8
pop eax
dec esi
push edi
dec eax
loope rwxdata
add ebx 0xc26f4200
inc ebx
pop eax
0x15aca209 0xf628
mov cl 0x74
dec ebp
fwait
aad 0x30
sbb [ ebp + edx + 0x4e5808cd ] 0xefe14857
dec ecx
xor al [ edx ]
pop ebx
push cs
sub al 0xcb
sti
mov bl 0x70
mov [ 0x6cf98db2 ] al
lahf
dec esi
xchg ecx eax
sub_2173a4
push [ esp ]
jmp rwxdata
pushf
pop [ esp + 0x6 ]
pushfd
dec dl
jmp rwxdata
pushad
mov dl [ esi ]
pushfd
call sub_390193
push ss
jb rwxdata
add al 0xfe
retn
movsb [ edi ] [ esi ]
lodsd [ esi ]
loop rwxdata
cmp al 0x99
xchg esp eax
dec eax
xchg [ esi ] ecx
aam 0x2a
daa
loopne rwxdata
xchg edi eax
mov [ eax + 0x61 ] ebp
fdivr [ edx ]
mov ecx 0xbf95300e
cwde
cmc
pop edi
xchg [ ebx + edi * 2 + 0x4c ] bh
jle rwxdata
iretd
test [ edi - 0x3f ] al
and bh dh
cmpsd [ esi ] [ edi ]
add al 0x54
mul [ esi - 0x27 ]
push cs
mov [ 0xffffffffec568fad ] eax
or esi [ ecx + ebp * 2 ]
fistp [ edx ]
scasd [ edi ]
xchg ecx eax
inc edx
std
or ebx [ edx ]
sub [ ebp - 0x10e94ed1 ] esp
push eax
mov dl 0x35
push ds

popad
mov [ edx ] esp
mov [ edi - 0x40 ] edx
push 0x705b7487
scasb [ edi ]

sub_2173ac
pushfd
lea esp [ esp + 0xc ]
jb rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
clc
pushad
bt cx ax
cmp eax [ ebp - 0x10 ]
call sub_3991fb
fst [ edx - 0x7d ]
int 0x5b
0x7427a940 0x3566
pop edi
rol [ eax ] cl
inc edx
shl [ edi ] 0x29
enter 0x8bc9 0x38
sbb dl [ ebx + edx * 8 ]
cmp [ eax - 0x6547c8f3 ] edi
inc ebx
or eax 0xc2806f32
and [ edx - 0x68 ] dl
rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
lahf
dec esi
xchg ecx eax
dec ebx
int3
sub_2174c4
add ecx 0xffffffff
pushad
mov [ esp + 0xc ] bl
lea esp [ esp + 0x24 ]
je rwxdata
call sub_38eb4e
add [ eax ] al
inc edi
je rwxdata
call sub_399eda
mov ah [ ebx + 0x1dd67071 ]
mov ebp 0x1e58b3cf
adc ebp [ esi - 0x644973c5 ]
add eax esp
dec esi
xchg ebp eax
jl rwxdata
outsd
jne rwxdata
mov bh 0x53
xchg edx eax
xchg [ esi + 0xb601cea ] bl
int1
xchg [ eax ] ebp
idiv ch
dec ebx
stosb [ edi ]
imul ebx [ edx - 0x7d ] 0xbc7140cd
cmc
test eax 0x83a64ffa
mov bl 0x27
push edi
mov [ 0xffffffffc04ea41a ] al
in eax dx
popad
mov al [ 0xffffffffefcc7b23 ]
or bl dl
and eax 0xa5e85879
mov esi 0xe816b303
push es
std

aam 0xc5
fcom [ ecx + esi * 4 ]
xchg [ ecx ] bh
scasb [ edi ]
inc ebx
or eax 0x3e03c61f
or eax [ eax - 0x3eddd3ef ]
inc [ eax - 0x27 ]
mov dh 0x8c
imul edi [ ecx - 0x104466c8 ] 0x21
cdq
fcomp st1
int 0xc3
in al dx
cmp dh [ ebx ]
adc ch dh
mov ah 0xa
mov ebx 0xd89921ef
fxch st5
retn
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add al al
enter 0x6604 0x89
and al 0xc
add al 0xdf
cmp ch 0x5a
bt di ax
mov [ esp ] cl
neg al
call j_sub_3ab756
lea eax [ rwxdata ]
jmp sub_3938a9
sub_2175a0
lea esp [ esp + 0x34 ]
jne rwxdata
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
jmp rwxdata
pushad
push 0x1268e053
pushad
inc esi
push 0x8f7131c8
inc edi
pushfd
lea esp [ esp + 0x4c ]
jmp sub_217c14
sub_2176bd
xchg [ esp + 0x2c ] eax
not ah
mov [ esp + 0xc ] 0x59
lahf
movsx ax al
mov [ esp + 0x28 ] 0xb
pushfd
movzx eax dl
pushfd
call sub_39511d
jmp rwxdata
push esp
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
rcl al cl
clc
setbe ch
rol ecx 0x18
mov edi edx
pushfd
cmc
jmp sub_21762e
cmc
call sub_39a2ad
sub_2176f4
lea esp [ esp + 0xc ]
ja rwxdata
jle rwxdata
pushad
stc
imul edx edx 0xa
pushfd
bt dx 0x8
push 0x9e1d3d73
cmp bp 0x761c
add edx eax
push 0xe6c71c63
push 0x756e3f53
push ebp
lea esp [ esp + 0x34 ]
jmp rwxdata
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov esp esi
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
shl al 0x6
rol al 0x1
rol al cl
add edi 0x1
shl al 0x5
neg al
mov al [ edi ]
cmc
test al al
pushad
push 0xcef31194
mov [ esp ] ch
lea esp [ esp + 0x24 ]
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
rcl al cl
clc
setbe ch
rol ecx 0x18
mov edi edx
pushfd
cmc
jmp sub_21762e
cmc
sub al 0x30
pushad
call sub_3ae00b
mov esp 0x4ec07e7d
xchg ebp eax
jl rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
mov fs [ eax - 0x3d4ffb22 ]
loop rwxdata
cmp al 0x67
jbe rwxdata
mov al [ 0x10e4e14b ]
push ds
out dx eax
adc cl [ esi - 0x15f3b18c ]
add dl [ edi + eax * 8 ]
jl rwxdata
add eax [ eax - 0x31e1275a ]
loopne rwxdata
je rwxdata
and al 0x8d
and al 0x24
leave
pushfd
jle rwxdata
jmp 0x14bf7242
loop rwxdata
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x663c5 ]
or eax 0xef5f6225
inc ecx
mov dh ch
loop rwxdata
out dx eax
jpo rwxdata
adc [ ecx + ebp * 8 - 0x1c ] 0xd21484a2
0xab77e5b1 0xd5e8
and [ esi - 0x1f31e128 ] 0xe2
xor ecx [ eax - 0x54e1b488 ]
loop rwxdata
test [ ecx ] 0x628452dc
mov ebp 0xfff99c3b
adc dl [ esi - 0x11 ]
sbb [ ebp - 0x738b1058 ] cl
sbb bl dh
out 0x6a al
cld
out dx eax
sbb cl [ edx + ebp + 0x757d7790 ]
cmp al 0x1f
lds ecx [ edi ]
mov ah 0x32
or eax 0xdab27771
or eax 0x28178423
into
cmc
jge rwxdata
jg rwxdata
cmp ebx ecx
or eax 0x78816320
fxch st2
xchg ecx eax
sub [ ebp + ecx * 8 + 0x379dca05 ] bl
mov al [ 0x467178ef ]
pop edi
inc ecx
mov [ ecx ] ecx
hlt
sub_217be6
cmc
cmp ax di
add [ ebx + edi ] ax
push ebp
push [ esp ]
mov [ esp ] 0xb3
mov [ esp + 0x8 ] cx
lea esp [ esp + 0x14 ]
jmp rwxdata
cmp edx 0xa4b2386f
cmc
cmc
add esi 0x2
call sub_39b5ee
sub_217c14
pushfd
rcl al cl
cmc
mov al [ edi ]
test ch 0x7b
bt ax cx
cmp al 0x41
push [ esp ]
jmp rwxdata
lea esp [ esp + 0x8 ]
jl rwxdata
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
push esi
pushfd
lea esp [ esp + 0x8 ]
jb rwxdata
clc
sar ah cl
mov ah [ esi ]
jmp rwxdata
call sub_399bf8
mov edx 0x50632e29
push cs
and [ esi ] dh
lahf
aas
retn 0x72e7
push ecx
mov [ esp ] 0xb8
cmp al 0x5a
pushad
push 0x3d984947
lea esp [ esp + 0x28 ]
ja rwxdata
cmc
cmp ah 0x41
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
sbb ah al
not ah
add al 0x20
pushad
call sub_3950bd
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
stc
cmp cl 0x3
cmp ah 0x5a
pushad
jmp rwxdata
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
lea esp [ esp + 0x20 ]
ja rwxdata
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
call sub_39d8b7
cmp dh bl
call 0xffffffffe30f57ec
hlt
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
jmp rwxdata
ja rwxdata
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_217cfe
stc
cmp ebx 0x3
pushad
lea esp [ esp + 0x24 ]
je rwxdata
movzx bx dl
bts bx bp
movsx bx dl
rcl bh 0x2
mov bx [ esi ]
clc
clc
pushad
and ebx 0xfff
push ecx
stc
cmc
cmc
add [ ebx + edi ] edx
sub esp 0xffffffdc
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
cmp edx 0xa4b2386f
cmc
cmc
add esi 0x2
call sub_39b5ee
sub_38e70b
pop esi
mov esi [ ebp + 0xc ]
pushfd
mov [ esp + 0x4 ] 0x39
lea esp [ esp + 0x2c ]
jg rwxdata
call sub_3946c4
xor eax 0xdf7172ac
push es
into
xchg ebp eax
sti
test eax 0xd085a402
cmp eax 0x31a4e752
adc esp [ eax - 0x7a4635e ]
xchg ebp eax
xchg ebx eax
push edx
les esp [ ebx ]
xor al 0x69
jecxz rwxdata
push ecx
mov [ esp ] eax
mov al ch
lodsb [ esi ]
cmc
push 0xb0618d9a
add esp 0x4
jbe rwxdata
jpo rwxdata
mov bh 0x99
jmp rwxdata
xor al 0x6e
bt si bx
jge rwxdata
sub esi esi
iretd
test dh bh
salc
mov fs [ ebp - 0x52ef241b ]
inc esi
leave
dec eax
adc edi ecx
clc
loopne rwxdata
bt ebx ebx
stc
xor al 0x6e
pushad
neg al
clc
sub al 0x82
push 0x7a4179b3
mov [ esp + 0x8 ] 0x5c
rol al 0x7
jmp rwxdata
test ch dh
cmc
pushfd
stc
neg al
clc
pushfd
bt cx 0xc
jmp rwxdata
neg al
clc
pushad
push 0x81fe3a96
stc
sub al 0x82
mov [ esp ] 0xe8
pushfd
pushfd
rol al 0x7
test bh cl
test cl 0xba
stc
push [ esp ]
cmp al [ edi ]
bswap ax
lea edi [ edi + 0x1 ]
lahf
movzx eax bl
mov eax [ esp + 0x30 ]
mov [ esp ] sp
pushfd
pushfd
lea esp [ esp + 0x3c ]
ja rwxdata
mov bh 0xfb
adc eax 0x6151e2d3
mov al [ 0x51ef1b01 ]
sti
xlat
xchg edi eax
stosd [ edi ]
and al 0xeb
pop edx
movsd [ edi ] [ esi ]
and ebx [ ecx + 0x6b ]
in eax dx
js rwxdata
clc
test dh 0xb0
cmp al [ edi ]
jmp rwxdata
sub al 0x82
mov [ esp ] si
rol al 0x7
cmp dl 0x43
test dl bh
jmp rwxdata
test dh ch
test bp di
pushad
cmp ecx [ ebp - 0x4 ]
call sub_39feab
cmp eax [ ebp - 0x10 ]
pushfd
push [ esp ]
pushad
call sub_393bb9
mov [ esp + 0x4 ] 0x3504a534
lea esp [ esp + 0x4 ]
jns rwxdata
jmp rwxdata
xchg ebx eax
xor ecx [ ebp + esi - 0x4c9f1138 ]
scasb [ edi ]
or edi esp
fadd [ edx ]
sbb dl cl
mov cl 0x86
test eax 0xb952efac
inc edi
pop edx
out 0x19 al
mov ah 0x40
or al 0x1c
test [ ebp + 0x696e42a3 ] ch
inc esi
or [ ebx ] bl
xchg esp eax
xor al 0x97
pop ss
push 0xfeebd9dd
hlt
lea edi [ edi + 0x1 ]
pushfd
mov eax [ esp + 0x28 ]
push [ esp + 0x4 ]
lea esp [ esp + 0x30 ]
ja rwxdata
cmc
cmp al [ edi ]
push [ esp ]
bswap ax
lea edi [ edi + 0x1 ]
pushfd
pushad
not eax
mov eax [ esp + 0x30 ]
jmp rwxdata
pushfd
mov [ esp ] 0xbb1d4cd0
push 0x9424f5d5
mov [ esp ] 0x76c6
lea esp [ esp + 0x4 ]
jmp rwxdata
push 0xbb1d4cd0
push esi
pushad
push [ esp + 0x4 ]
mov [ esp ] 0xb4a1
lea esp [ esp + 0x28 ]
jmp rwxdata
jb rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
lea esp [ esp + 0x34 ]
ja rwxdata
pushad
call sub_3b0606
stc
push 0x69b51dd0
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
call sub_394d69
cmc
cmp [ edi - 0x1 ] 0x0
pushfd
call sub_39b494
fcom [ ecx + 0x7a ]
les esp [ edx - 0x7f ]
xchg esp eax
inc esp
int3
push 0xcca8569
lea esp [ esp + 0x4 ]
jb rwxdata
pushad
jmp rwxdata
clc
pushad
cmp [ edi - 0x1 ] 0x0
pushfd
lea esp [ esp + 0x24 ]
jne rwxdata
jmp rwxdata
jmp rwxdata
btc edi 0x1c
stc
bts di bx
mov edi [ edx + 0x24 ]
bt ecx ebp
clc
jmp rwxdata
lea esp [ esp + 0x24 ]
jbe rwxdata
pushad
mov [ esp + 0x1c ] eax
mov al [ esp + 0xc ]
setne al
setpo al
mov al ah
lodsb [ esi ]
bt eax eax
xor al 0x6e
mov [ esp + 0x8 ] cl
pushad
call j_sub_392f6b
pushad
add edi eax
mov [ esp ] cx
push [ esp + 0x4 ]
bt bp ax
jmp rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
movzx ecx [ edi + ecx * 2 ]
pushfd
mov edi [ edx + 0x1c ]
bt esi ebx
push [ esp + 0x4 ]
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
cmp bl bl
add edi eax
clc
push 0xcda511c0
mov edi [ edi + ecx * 4 ]
call sub_392d65
xchg esi eax
xchg edi eax
sub [ ebx ] bl
mov eax 0x7f300f9a
add ch bl
mov dl 0x77
loop rwxdata
push edx
mov al 0x37
mov al 0x92
or esi [ 0xffffffffc47a71be ]
push edx
xchg ecx eax
inc edx
std
cmp edi [ edx - 0x322fa464 ]
inc edi
scasb [ edi ]
test eax 0xa921bf35
popad
shl [ edx - 0x6c ] 0x1
add al 0x99
mov [ ecx ] gs
mov esi 0x821f793a
xor [ 0x4b3c82d7 ] 0x2d

sub_38e784
mov [ esp ] si
add ah 0x20
lea esp [ esp + 0x8 ]
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
jmp rwxdata
ja rwxdata
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_38eb23
sub esp 0xfffffffc
jae rwxdata
sar al 0x7
clc
ror al cl
sub ebx edi
dec edi
sub al 0xdf
add ebx esp
shld di si 0x9
mov edi ebx
inc al
ror al cl
pushad
rol al 0x7
mov al 0x2e
stc
stc
bt ebx edx
[ edi ]
pushad
lea esp [ esp + 0x40 ]
jne rwxdata
sub ebx edi
cmc
add ebx esp
rcl al 0x4
mov edi ebx
test bp dx
rol al cl
shr al 0x4
pushad
mov al 0x2e
pushad
[ edi ]
jmp rwxdata
jle rwxdata
not al
mov [ edi - 0x1 ] 0x0
lea eax [ edx * 4 - 0x22cc58d8 ]
lea eax [ ebp * 4 + 0x50be8f85 ]
push ebx
setl al
push 0x1905736f
jmp rwxdata
call j_sub_39bf52#2
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov esp esi
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
lea eax [ rwxdata ]
pushad
mov [ esp + 0x20 ] rwxdata
call sub_3aa96b
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_38eb4e
test dh 0x87
sub eax eax
add esp 0x4
pushfd
pushfd
or ebx ebx
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
je rwxdata
seta bl
pop edi
not bl
pushad
mov esi [ esp + 0x20 ]
movzx bx al
jmp rwxdata
lea esi [ edx * 4 + 0x7483117e ]
mov esi eax
setbe ah
cwde
push ebx
call sub_3adc79
lea esp [ esp + 0x20 ]
ja rwxdata
mov bh 0x48
mov ebx [ esp + 0x24 ]
push edx
mov esp ebp
ja rwxdata
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
call sub_39d8b7
cmp dh bl
call 0xffffffffe30f57ec
hlt
jbe rwxdata
bswap bp
pop ebp
pushad
mov [ esp + 0x4 ] bl
push 0x941fd693
push [ esp + 0x24 ]
retn 0x2c
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_3ac5c9
lea esp [ esp + 0x4 ]
je rwxdata
pop ebp
push edi
mov [ esp ] bp
push [ esp + 0x4 ]
retn 0xc
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
not bl
call sub_39bc1f
arpl sp ax
cmc
pop edi
int 0x14
or ebp eax
jmp 0x5a8bac22
and bh dh
rcr di 0xe
add [ ebp - 0x4 ] ecx
rcr di cl
pushad
sub ecx 0x8
or edi edx
xadd bx di
pushad
shr ecx 0x1
push 0x54d1ddd9
setpe bh
btr bx di
xadd di bx
mov edi [ esi ]
rol bl cl
push [ esp + 0x4 ]
bt cx bx
rcl bl cl
add edi [ ebp + 0x10 ]
sbb bl ah
seto bh
add esi 0x8
add esp 0x48
call sub_39d414
mov [ esp ] edi
jmp rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
call sub_39f376
sets bh
mov ebx eax
pushad
cmp [ edi ] 0x23
push edx
lea esp [ esp + 0x24 ]
jne rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
pushfd
cmc
jmp sub_21762e
das
xor edx edx
call sub_2172b8
dec edx
jecxz rwxdata
jmp rwxdata
dec edx
rcl [ ecx ] cl
out 0x72 eax
loopne rwxdata
dec ecx
out dx al
mov [ 0x1e2dba51 ] eax
rcl [ ebx + edx * 2 + 0x7a ] 0x2f
cmp cl [ edi + 0x5f5e97b1 ]
shl [ ebx + esi * 4 ] cl
mov [ eax - 0x4e ] ebp
xor [ edi ] ebx
ja rwxdata
jbe rwxdata
retn
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
dec eax
xchg [ eax ] ebp
neg ch
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_38ee11
push 0xb99c43e6
call sub_3a000f
push [ esp ]
pushfd
pushfd
mov [ esp + 0xc ] rwxdata
call sub_3990ee
xor al al
call j_sub_39c501
mov cl 0x20
push es
in eax dx
dec edi
xchg esi eax
push ds
xor [ ebx + 0x77b28541 ] dh
loop rwxdata
add bl bl
and [ ebx - 0x75 ] edx
dec esi
js rwxdata
lahf
xchg ecx eax
push eax
inc ebp
clc
pop ecx
mov bh 0x8a
movsb [ edi ] [ esi ]
inc ebx
lds ebp [ ecx + ebp ]
mov sp 0x9c3b
cmpsb [ esi ] [ edi ]
mov [ ebx - 0x1b ] gs
or al 0xc8
add edi edx
enter 0x5f7f 0x9e
pop es
and eax 0xc5c14558
mov dr6 esi
and al 0x8
call sub_217c14
pushfd
pushfd
pushfd
pushfd
lea esp [ esp + 0x10 ]
jne rwxdata
mov esi 0x50af1085
mov al 0xf5
loop rwxdata
push edx
bt ax bp
cmc
jmp sub_2174c4
pushfd
mov eax [ edx + 0x8 ]
mov [ esp ] bl
pushad
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
cmp [ eax ] ecx
int 0x6b
mov cl [ esi - 0x59 ]
mov edx 0x4af6863e
xchg edx eax
inc edx
cli
or al 0xc8
pushfd
pushfd
or ebx ebx
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
je rwxdata
je rwxdata
cld
int1
loope rwxdata
seta bl
pop edi
not bl
pushad
mov esi [ esp + 0x20 ]
movzx bx al
lea esi [ edx * 4 + 0x7483117e ]
mov esi eax
setbe ah
cwde
push ebx
call sub_3adc79
lea esp [ esp + 0x20 ]
ja rwxdata
jmp rwxdata
movzx ebx al
push ebp
push ebp
jo rwxdata
mov bh 0x48
mov ebx [ esp + 0x24 ]
push edx
mov esp ebp
ja rwxdata
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
call sub_39d8b7
cmp dh bl
call 0xffffffffe30f57ec
hlt
sub al 0xff
push edi
imul ebp [ esi - 0x4f ] 0x2
retn 0xb305
jbe rwxdata
bswap bp
pop ebp
pushad
mov [ esp + 0x4 ] bl
push 0x941fd693
push [ esp + 0x24 ]
retn 0x2c
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_3ac5c9
lea esp [ esp + 0x4 ]
je rwxdata
pop ebp
push edi
mov [ esp ] bp
push [ esp + 0x4 ]
retn 0xc
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
not bl
call sub_39bc1f
arpl sp ax
cmc
pop edi
int 0x14
or ebp eax
jmp 0x5a8bac22
and bh dh
rcr di 0xe
add [ ebp - 0x4 ] ecx
rcr di cl
pushad
sub ecx 0x8
or edi edx
xadd bx di
pushad
shr ecx 0x1
push 0x54d1ddd9
setpe bh
btr bx di
xadd di bx
mov edi [ esi ]
rol bl cl
push [ esp + 0x4 ]
bt cx bx
rcl bl cl
add edi [ ebp + 0x10 ]
sbb bl ah
seto bh
add esi 0x8
add esp 0x48
call sub_39d414
mov [ esp ] edi
jmp rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
call sub_39f376
sets bh
mov ebx eax
pushad
cmp [ edi ] 0x23
push edx
lea esp [ esp + 0x24 ]
jne rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
pushfd
cmc
jmp sub_21762e
das
xor edx edx
call sub_2172b8
dec edx
jecxz rwxdata
jmp rwxdata
dec edx
rcl [ ecx ] cl
out 0x72 eax
loopne rwxdata
dec ecx
out dx al
mov [ 0x1e2dba51 ] eax
rcl [ ebx + edx * 2 + 0x7a ] 0x2f
cmp cl [ edi + 0x5f5e97b1 ]
shl [ ebx + esi * 4 ] cl
mov [ eax - 0x4e ] ebp
xor [ edi ] ebx
ja rwxdata
jbe rwxdata
retn
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
dec eax
xchg [ eax ] ebp
neg ch
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_38eeac
lea esp [ esp + 0x8 ]
call sub_217c14
pushfd
pushfd
pushfd
pushfd
lea esp [ esp + 0x10 ]
jne rwxdata
push edx
bt ax bp
cmc
jmp sub_2174c4
pushfd
mov eax [ edx + 0x8 ]
mov [ esp ] bl
pushad
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
pushfd
or ebx ebx
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
je rwxdata
seta bl
pop edi
not bl
pushad
mov esi [ esp + 0x20 ]
movzx bx al
jmp rwxdata
lea esi [ edx * 4 + 0x7483117e ]
mov esi eax
setbe ah
cwde
push ebx
call sub_3adc79
lea esp [ esp + 0x20 ]
ja rwxdata
mov bh 0x48
mov ebx [ esp + 0x24 ]
push edx
mov esp ebp
ja rwxdata
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
call sub_39d8b7
cmp dh bl
call 0xffffffffe30f57ec
hlt
jbe rwxdata
bswap bp
pop ebp
pushad
mov [ esp + 0x4 ] bl
push 0x941fd693
push [ esp + 0x24 ]
retn 0x2c
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_3ac5c9
lea esp [ esp + 0x4 ]
je rwxdata
pop ebp
push edi
mov [ esp ] bp
push [ esp + 0x4 ]
retn 0xc
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
not bl
call sub_39bc1f
arpl sp ax
cmc
pop edi
int 0x14
or ebp eax
jmp 0x5a8bac22
and bh dh
rcr di 0xe
add [ ebp - 0x4 ] ecx
rcr di cl
pushad
sub ecx 0x8
or edi edx
xadd bx di
pushad
shr ecx 0x1
push 0x54d1ddd9
setpe bh
btr bx di
xadd di bx
mov edi [ esi ]
rol bl cl
push [ esp + 0x4 ]
bt cx bx
rcl bl cl
add edi [ ebp + 0x10 ]
sbb bl ah
seto bh
add esi 0x8
add esp 0x48
call sub_39d414
mov [ esp ] edi
jmp rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
call sub_39f376
sets bh
mov ebx eax
pushad
cmp [ edi ] 0x23
push edx
lea esp [ esp + 0x24 ]
jne rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
pushfd
cmc
jmp sub_21762e
das
xor edx edx
call sub_2172b8
dec edx
jecxz rwxdata
jmp rwxdata
dec edx
rcl [ ecx ] cl
out 0x72 eax
loopne rwxdata
dec ecx
out dx al
mov [ 0x1e2dba51 ] eax
rcl [ ebx + edx * 2 + 0x7a ] 0x2f
cmp cl [ edi + 0x5f5e97b1 ]
shl [ ebx + esi * 4 ] cl
mov [ eax - 0x4e ] ebp
xor [ edi ] ebx
ja rwxdata
jbe rwxdata
retn
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
dec eax
xchg [ eax ] ebp
neg ch
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_38efc1
push 0xb0feffa3
pushfd
ror al 0x4
clc
pushfd
clc
mov [ esp + 0x4 ] di
add al 0xdf
stc
jmp rwxdata
push [ esp + 0x4 ]
jmp rwxdata
neg al
mov [ esp ] ch
jmp rwxdata
pushfd
lea esp [ esp + 0x18 ]
call sub_39e219
bt di 0xf
cmp eax 0x7d00
pushfd
pushad
push [ esp + 0x4 ]
mov [ esp ] 0xb4
lea esp [ esp + 0x28 ]
jae rwxdata
setpo bl
not bl
pushad
inc bl
inc ecx
lea esp [ esp + 0x20 ]
cmp ah al
cmp ah 0x5
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
call sub_3ae276
clc
cmp eax 0x7f
jmp rwxdata
ja rwxdata
or bl al
xchg ebp eax
cmc
xchg al bl
push 0x49aab4ea
mov eax ebp
cmc
add bl 0xee
mov bl 0x1
lea esp [ esp + 0x4 ]
push esp
cmc
call sub_399cc7
sub_38f300
pushad
lodsb [ esi ]
setno bl
push ebx
not al
pushfd
mov [ esp + 0x4 ] cl
pushfd
inc al
ror bl 0x1
setae bl
setpo bl
pushfd
ror al 0x4
inc bl
sub bl 0xb8
add al 0xdf
call sub_39dfd2
pushad
mov dl [ esi ]
pushfd
call sub_390193
push ss
jb rwxdata
add al 0xfe
retn
movsb [ edi ] [ esi ]
lodsd [ esi ]
loop rwxdata
cmp al 0x99
xchg esp eax
dec eax
xchg [ esi ] ecx
aam 0x2a
daa
loopne rwxdata
xchg edi eax
mov [ eax + 0x61 ] ebp
fdivr [ edx ]
mov ecx 0xbf95300e
cwde
cmc
pop edi
xchg [ ebx + edi * 2 + 0x4c ] bh
jle rwxdata
iretd
test [ edi - 0x3f ] al
and bh dh
cmpsd [ esi ] [ edi ]
add al 0x54
mul [ esi - 0x27 ]
push cs
mov [ 0xffffffffec568fad ] eax
or esi [ ecx + ebp * 2 ]
fistp [ edx ]
scasd [ edi ]
xchg ecx eax
inc edx
std
or ebx [ edx ]
sub [ ebp - 0x10e94ed1 ] esp
push eax
mov dl 0x35
push ds

popad
mov [ edx ] esp
mov [ edi - 0x40 ] edx
push 0x705b7487
scasb [ edi ]

sub_38fbd8
clc
movzx ax bl
shld ax dx cl
push ebp
bswap bp
mov ebp esp
adc ax 0xcdb4
or ax 0x928c
sub esp 0x18
cmc
shld ax di cl
push esi
shld ax ax cl
push edi
stc
seto al
push ebx
ja rwxdata
bsr ax sp
dec ah
aas
push edx
rol al 0x6
mov eax [ ebp + 0x8 ]
bt sp 0x8
test eax eax
push ebp
pushad
lea esp [ esp + 0x24 ]
je rwxdata
sub ah bl
btr ax ax
xor ah 0x24
push edx
aaa
and eax 0x7a07086d
mov eax [ ebp + 0x8 ]
jmp rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
pushfd
rcr dh 0x7
mov esi [ eax + 0x3c ]
shrd dx dx cl
sete dh
bts dx 0x2
add esi eax
bsf edx ecx
mov edx [ esi + 0x78 ]
clc
test edx edx
mov [ esp ] bh
lea esp [ esp + 0x4 ]
push esi
pushad
test eax eax
pushad
push 0xa9e808ff
mov [ esp ] 0x4a
pushfd
lea esp [ esp + 0x4c ]
je rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
stc
movsx cx al
movsx cx dl
add edx eax
not cx
mov ecx [ esi + 0x7c ]
call sub_39a8ca
push ds
sbb edx ecx
call sub_3aa9b0
sar al 0x7
clc
ror al cl
sub ebx edi
dec edi
sub al 0xdf
add ebx esp
shld di si 0x9
mov edi ebx
inc al
ror al cl
pushad
rol al 0x7
mov al 0x2e
stc
stc
bt ebx edx
[ edi ]
pushad
lea esp [ esp + 0x40 ]
jne rwxdata
xor al 0xfb
sub [ ebx + ecx + 0x1c ] bh
movsb [ edi ] [ esi ]
inc edx
jpe rwxdata
jle rwxdata
not al
mov [ edi - 0x1 ] 0x0
lea eax [ edx * 4 - 0x22cc58d8 ]
lea eax [ ebp * 4 + 0x50be8f85 ]
push ebx
setl al
push 0x1905736f
jmp rwxdata
pop ds
and eax eax
loope rwxdata
add [ esi ] bl
dec eax
add ebx [ ecx + esi * 2 - 0x60879789 ]
shl ebp 0x81
out dx al
sbb ebx [ bx + di - 0x3d ]
xor al 0x93
out dx eax
cdq
sbb edi edx
sbb eax 0xb4fb08cd
sub [ edx ] bh
fbstp [ edx ]
inc ecx
dec edx
jl rwxdata
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov esp esi
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
lea eax [ rwxdata ]
pushad
mov [ esp + 0x20 ] rwxdata
call sub_3aa96b
push es
and edx [ edi ]
mov edi [ esi - 0x4e ]
pushfd
pop ebx
fstp [ eax ]
mov esp 0x37ffe11f
nop
rol [ edx ] 0x37
mov edi 0x5d64a1b6
jns rwxdata
mov dl 0xe8
sub al [ esi ]
add al 0xe3
push ebp
pushfd
mov ch [ ecx + 0x62 ]
in al dx
dec esi
xchg ebp eax
jle rwxdata
jne rwxdata
or al 0xe8
push cs
push ecx
call 0xffffffffe8d58c08
cli
retn
mov ebx 0x6c644bf4
outsd
pushad
push 0x5a
loop rwxdata
sub eax ecx
std
inc edi
fistp [ fs : ecx ]
mov eax 0x3abb756e
stosb [ edi ]
sub eax 0x6cb12fa5
jge rwxdata
pop edx
test al 0x66
js rwxdata
fld [ 0x2ec308c0 ]
xchg [ ebx ] ebp
scasb [ edi ]
push eax
adc [ esi - 0x7ec3696c ] ch
jl rwxdata
jl rwxdata
inc ebx
sbb esi esi
xor [ bp + di ] bh
xchg edi eax
test eax 0xabacba71
arpl si si
cld
in al dx
enter 0x75db 0xbf
int1
imul edi
cmp eax 0x2e8e66bb
fcomp st1
xor edi [ esp - 0x3c0d42f7 ]
jae rwxdata
shl edx 0xcb
insb
mov dh 0xae
stc
and eax 0xcc3e4a95
cmp [ edx ] ecx
out 0x6 eax
mov esp 0xf2bd09e4
retn
retn 0x9cdf
je rwxdata
salc
jle rwxdata
sub_38fc20
cmp ah 0x53
add edi eax
mov [ esp + 0x4 ] ax
pushfd
test bl 0x6a
movzx ecx [ edi + ecx * 2 ]
movsx edi bl
mov edi [ edx + 0x1c ]
push [ esp ]
pushad
add edi eax
mov [ esp ] 0xa3ca
test dl bl
call sub_393bff
clc
test edi edi
push esi
lea esp [ esp + 0x50 ]
jmp rwxdata
call sub_38e6ff
movzx ecx [ edi + ecx * 2 ]
pushfd
mov edi [ edx + 0x1c ]
bt esi ebx
push [ esp + 0x4 ]
cmp bl bl
add edi eax
clc
push 0xcda511c0
mov edi [ edi + ecx * 4 ]
call sub_392d65
xchg esi eax
xchg edi eax
sub [ ebx ] bl
mov eax 0x7f300f9a
add ch bl
mov dl 0x77
loop rwxdata
push edx
mov al 0x37
mov al 0x92
or esi [ 0xffffffffc47a71be ]
push edx
xchg ecx eax
inc edx
std
cmp edi [ edx - 0x322fa464 ]
inc edi
scasb [ edi ]
test eax 0xa921bf35
popad
shl [ edx - 0x6c ] 0x1
add al 0x99
mov [ ecx ] gs
mov esi 0x821f793a
xor [ 0x4b3c82d7 ] 0x2d

sub_38fc5d
mov [ esp + 0x8 ] eax
cwde
movsx ax cl
push [ ebp - 0x4 ]
pop [ esp + 0x4 ]
pushad
cwde
jmp rwxdata
bswap ax
mov [ esp + 0x20 ] ebx
bswap ax
mov [ esp + 0x1c ] 0xb
pushfd
lea eax [ rwxdata ]
call sub_3ad18f
call sub_39e0e7
dec edi
xchg [ ebx + ecx * 2 + 0x4527d9c4 ] ch
std
push ebx
imul ebp [ eax + 0x35f99b01 ] 0x599a84ba
jmp rwxdata
sar [ ebp - 0x2a ] cl

sub_390172
mov edi [ esp + 0xc ]
movsx cx cl
pushfd
movzx bx cl
mov ebx [ esp + 0x14 ]
movzx ecx al
bswap cx
push 0x7e480d3e
jmp rwxdata
mov ecx [ esp + 0x1c ]
lea esp [ esp + 0x20 ]
jle rwxdata
push 0xbc495110
mov esp ebp
not bp
push 0xc19bdac9
movzx bp cl
mov ebp [ esp + 0x4 ]
mov [ esp ] 0x39
push [ esp ]
pushad
push [ esp + 0x2c ]
retn 0x40
mov esp ebp
not ebp
jmp rwxdata
call sub_39bf1c
xchg [ ebx ] ax
jmp rwxdata
pushad
mov [ esp + 0x1c ] 0x35044f86
pushad
mov [ esp + 0x38 ] 0x89d97c38
push [ esp ]
mov [ esp ] cx
lea esp [ esp + 0x3c ]
jmp rwxdata
jmp rwxdata
pushad
mov [ esp ] ch
mov [ esp ] 0x64406dd
mov [ esp + 0x1c ] ecx
jmp sub_3b0398
sub_390193
push 0x48810a1f
push [ esp + 0xc ]
not dl
mov [ esp ] eax
mov [ esp ] di
push [ esp + 0x14 ]
mov [ esp + 0x10 ] 0xc167
inc dl
push 0x8ae0dc7b
push edi
ror dl 0x4
jmp rwxdata
add dl 0xdf
pushfd
neg dl
push [ esp ]
push [ esp + 0x4e ]
popf
call j_sub_3aab2a
sub_3921bf
cmp [ edi - 0x1 ] 0x0
pushad
push [ esp ]
push [ esp ]
lea esp [ esp + 0x2c ]
jne rwxdata
jmp rwxdata
xor di sp
mov edi [ edx + 0x24 ]
push 0x4b35572c
add edi eax
jmp sub_39d4f3
pushad
mov [ esp + 0x1c ] eax
mov al [ esp + 0xc ]
setne al
setpo al
mov al ah
lodsb [ esi ]
bt eax eax
xor al 0x6e
mov [ esp + 0x8 ] cl
pushad
call j_sub_392f6b
sub_392481
jmp rwxdata
lea esp [ esp + 0x28 ]
je rwxdata
movzx bx dl
bts bx bp
movsx bx dl
rcl bh 0x2
mov bx [ esi ]
clc
clc
pushad
and ebx 0xfff
push ecx
stc
cmc
cmc
add [ ebx + edi ] edx
sub esp 0xffffffdc
push 0xf8f073e9
mov [ esp ] dx
lea esp [ esp + 0x4 ]
jmp rwxdata
cmp edx 0xa4b2386f
cmc
cmc
add esi 0x2
call sub_39b5ee
sub_392725
[ edi ]
push [ esp ]
lea esp [ esp + 0x8 ]
jne rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
cmc
btc cx dx
rcr ch 0x1
mov ecx edi
and si 0xac48
add si 0x5e1f
sub ecx ebx
btr si 0x2
or si bp
mov esi esp
jmp rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
jmp rwxdata
bt ecx 0xb
push edx
sub edi 0x4
jmp sub_399c7d
sub_392758
cmp al 0x9
pushad
lea esp [ esp + 0x28 ]
ja rwxdata
jle rwxdata
pushad
imul edx edx 0xa
bt di 0x6
jmp rwxdata
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov esp esi
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
cmp cl ah
cmc
add edx eax
pushfd
push [ esp + 0x4 ]
pushfd
mov [ esp ] 0x3332fce6
lea esp [ esp + 0x2c ]
jmp rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
shl al 0x6
rol al 0x1
rol al cl
add edi 0x1
shl al 0x5
neg al
mov al [ edi ]
cmc
test al al
pushad
push 0xcef31194
mov [ esp ] ch
lea esp [ esp + 0x24 ]
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
rcl al cl
clc
setbe ch
rol ecx 0x18
mov edi edx
pushfd
cmc
jmp sub_21762e
cmc
sub al 0x30
pushad
call sub_3ae00b
mov esp 0x4ec07e7d
xchg ebp eax
jl rwxdata
mov fs [ eax - 0x3d4ffb22 ]
loop rwxdata
cmp al 0x67
jbe rwxdata
mov al [ 0x10e4e14b ]
push ds
out dx eax
adc cl [ esi - 0x15f3b18c ]
add dl [ edi + eax * 8 ]
jl rwxdata
add eax [ eax - 0x31e1275a ]
loopne rwxdata
je rwxdata
and al 0x8d
and al 0x24
leave
pushfd
jle rwxdata
jmp 0x14bf7242
loop rwxdata
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x663c5 ]
or eax 0xef5f6225
inc ecx
mov dh ch
loop rwxdata
out dx eax
jpo rwxdata
adc [ ecx + ebp * 8 - 0x1c ] 0xd21484a2
0xab77e5b1 0xd5e8
and [ esi - 0x1f31e128 ] 0xe2
xor ecx [ eax - 0x54e1b488 ]
loop rwxdata
test [ ecx ] 0x628452dc
mov ebp 0xfff99c3b
adc dl [ esi - 0x11 ]
sbb [ ebp - 0x738b1058 ] cl
sbb bl dh
out 0x6a al
cld
out dx eax
sbb cl [ edx + ebp + 0x757d7790 ]
cmp al 0x1f
lds ecx [ edi ]
mov ah 0x32
or eax 0xdab27771
or eax 0x28178423
into
cmc
jge rwxdata
jg rwxdata
cmp ebx ecx
or eax 0x78816320
fxch st2
xchg ecx eax
sub [ ebp + ecx * 8 + 0x379dca05 ] bl
mov al [ 0x467178ef ]
pop edi
inc ecx
mov [ ecx ] ecx
hlt
sub_392776
push 0x177a889e
jmp rwxdata
mov [ esp + 0x8 ] dl
lea esp [ esp + 0xc ]
ja rwxdata
jle rwxdata
call sub_399117
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov esp esi
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_392780
sub al 0x30
stc
lea esp [ esp + 0x4 ]
je rwxdata
cmc
cmp bx 0x709e
cmp al 0x9
push edi
lea esp [ esp + 0x4 ]
jmp rwxdata
cmp al 0x9
pushad
pushad
mov [ esp ] 0x6
lea esp [ esp + 0x40 ]
jmp rwxdata
call sub_39c428
jle rwxdata
pop edx
rcl [ edx ] cl
and bh al
call [ ecx ]
les esi [ edx ]
jecxz rwxdata
dec edx
mov eax 0x73eb56da
jno rwxdata
0xdab8
std
mov dh 0x46
cmp [ 0xffffffff973ae898 ] 0x7028ad21
mov [ 0xffffffffae15268d ] al
inc esi
adc [ ecx + 0x74 ] 0xeedcd8a6
adc [ ebp + 0x26b1f45e ] ch
0x424648d 0x820f
inc esp
sub_392974
call sub_38fc5d
mov [ eax ] ebx
lea esp [ esp + 0x44 ]
jg rwxdata
pushfd
push [ esp ]
mov [ esp + 0x4 ] eax
lahf
mov [ esp ] ebx
movzx ax cl
cwde
bswap eax
lea eax [ ebp - 0x4 ]
pushad
xchg [ esp + 0x1c ] eax
not al
push [ esp + 0x4 ]
movzx ax dl
mov [ esp + 0x1c ] 0xb
movsx ax dl
lea eax [ rwxdata ]
jmp rwxdata
push 0x8bbd3d97
xchg [ esp ] eax
jmp rwxdata
pushad
jmp rwxdata
cwde
push ebx
pushfd
lahf
push [ esp ]
lea eax [ ebp - 0x4 ]
mov [ esp + 0x4 ] ah
pushad
pushfd
call sub_2176bd
pushfd
mov [ esp + 0x3c ] rwxdata
push 0x8a04adee
pushfd
push 0x22a2c932
push [ eax ]
pop [ esp + 0x44 ]
mov [ esp ] di
push [ esp ]
push [ esp + 0x48 ]
retn 0x4c
sub_392ad6
lea esi [ esi + edx + 0x1c ]
pushfd
bswap di
pop edi
mov edi [ ebp + 0x8 ]
mov [ esp + 0x4 ] 0x1bacceb1
lea esp [ esp + 0x2c ]
call sub_217c14
jmp rwxdata
call sub_399e93
push ebx
aaa
sbb eax ebx
dec edx
test eax 0xc57b5293
fisub [ eax + 0x5d ]
out 0xd0 eax
jb rwxdata
0xecc4aa74 0xefef
0x6d54f1d6 0x3491
das
sbb eax ebx
mov ch 0x42
pop ss
fisttp [ eax + 0x70 ]
jpo rwxdata
add [ eax + 0x45721338 ] bl
out 0xf4 eax
hlt
sub_392b0d
lea esp [ esp + 0xc ]
je rwxdata
rcl al cl
clc
setbe ch
rol ecx 0x18
mov edi edx
pushfd
cmc
jmp sub_21762e
jmp rwxdata
pushad
sub al 0x30
clc
jmp rwxdata
cmp al 0x9
call sub_39fec7
pushad
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
mov [ esp ] 0xbd
push [ esp ]
push [ eax ]
pop [ esp + 0x3c ]
mov [ esp + 0xc ] 0x1e5e583
push [ esp + 0x3c ]
retn 0x40
sub_392c00
push ebp
dec al
mov bl 0x2
push 0x496f9ebd
inc ecx
mov al 0x4e
not al
pushfd
mov al ah
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
lea esp [ esp + 0x20 ]
call sub_38ef01
pushfd
adc al al
pushad
mov [ esp ] 0x1
push 0xfb4899a4
lea esp [ esp + 0x28 ]
jae rwxdata
pushfd
lea esp [ esp + 0x4 ]
jne rwxdata
push esp
cmc
call sub_399cc7
pushfd
stosb [ edi ]
pushfd
mov [ esp + 0x4 ] 0xd6
lea esp [ esp + 0x8 ]
jmp rwxdata
jmp rwxdata
pushad
push 0x354c939a
lea esp [ esp + 0x24 ]
call sub_38ef01
jmp rwxdata
call sub_39dfe7
pushad
lea esp [ esp + 0x20 ]
je rwxdata
call sub_38eb4e
add [ eax ] al
inc edi
je rwxdata
lea edi [ ebx * 2 + 0x1c40efbd ]
lea edx [ ebx + 0x4 ]
movzx di dl
lea esi [ 0x3cb784e9 ]
movzx esi [ edx + 0x1a ]
mov di 0x7121
mov edi 0xfc0ea659
lea esi [ esi + edx + 0x1c ]
bswap di
mov edi 0xc4a6bc9
mov edi [ ebp + 0x8 ]
pushfd
call sub_38eeac
lea esp [ esp + 0x24 ]
jbe rwxdata
add eax esp
dec esi
xchg ebp eax
jl rwxdata
outsd
jne rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
mov bh 0x53
xchg edx eax
xchg [ esi + 0xb601cea ] bl
int1
xchg [ eax ] ebp
idiv ch
dec ebx
stosb [ edi ]
imul ebx [ edx - 0x7d ] 0xbc7140cd
cmc
test eax 0x83a64ffa
mov bl 0x27
push edi
mov [ 0xffffffffc04ea41a ] al
in eax dx
popad
mov al [ 0xffffffffefcc7b23 ]
or bl dl
and eax 0xa5e85879
mov esi 0xe816b303
push es
std

aam 0xc5
fcom [ ecx + esi * 4 ]
xchg [ ecx ] bh
scasb [ edi ]
inc ebx
or eax 0x3e03c61f
or eax [ eax - 0x3eddd3ef ]
inc [ eax - 0x27 ]
mov dh 0x8c
imul edi [ ecx - 0x104466c8 ] 0x21
cdq
fcomp st1
int 0xc3
in al dx
cmp dh [ ebx ]
adc ch dh
mov ah 0xa
mov ebx 0xd89921ef
fxch st5
retn
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add al al
enter 0x6604 0x89
and al 0xc
add al 0xdf
cmp ch 0x5a
bt di ax
mov [ esp ] cl
neg al
call j_sub_3ab756
lea eax [ rwxdata ]
jmp sub_3938a9
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_392c5c
bt di si
bt ax 0x2
add edi eax
stc
cmp cx 0x2b0b
test edi edx
mov [ esp + 0x4 ] dl
mov edi [ edi + ecx * 4 ]
mov [ esp + 0x8 ] edx
test edi edi
lea esp [ esp + 0xc ]
call sub_38e6ff
movzx ecx [ edi + ecx * 2 ]
pushfd
mov edi [ edx + 0x1c ]
bt esi ebx
push [ esp + 0x4 ]
cmp bl bl
add edi eax
clc
push 0xcda511c0
mov edi [ edi + ecx * 4 ]
call sub_392d65
xchg esi eax
xchg edi eax
sub [ ebx ] bl
mov eax 0x7f300f9a
add ch bl
mov dl 0x77
loop rwxdata
push edx
mov al 0x37
mov al 0x92
or esi [ 0xffffffffc47a71be ]
push edx
xchg ecx eax
inc edx
std
cmp edi [ edx - 0x322fa464 ]
inc edi
scasb [ edi ]
test eax 0xa921bf35
popad
shl [ edx - 0x6c ] 0x1
add al 0x99
mov [ ecx ] gs
mov esi 0x821f793a
xor [ 0x4b3c82d7 ] 0x2d

sub_392d65
pushfd
mov [ esp + 0x4 ] 0x3a
test edi edi
pushfd
push edi
mov [ esp ] dh
pushfd
lea esp [ esp + 0x44 ]
jmp rwxdata
call sub_38e6ff
movzx ecx [ edi + ecx * 2 ]
pushfd
mov edi [ edx + 0x1c ]
bt esi ebx
push [ esp + 0x4 ]
cmp bl bl
add edi eax
clc
push 0xcda511c0
mov edi [ edi + ecx * 4 ]
call sub_392d65
xchg esi eax
xchg edi eax
sub [ ebx ] bl
mov eax 0x7f300f9a
add ch bl
mov dl 0x77
loop rwxdata
push edx
mov al 0x37
mov al 0x92
or esi [ 0xffffffffc47a71be ]
push edx
xchg ecx eax
inc edx
std
cmp edi [ edx - 0x322fa464 ]
inc edi
scasb [ edi ]
test eax 0xa921bf35
popad
shl [ edx - 0x6c ] 0x1
add al 0x99
mov [ ecx ] gs
mov esi 0x821f793a
xor [ 0x4b3c82d7 ] 0x2d

sub_392d7c
lahf
call sub_395178
dec ebx
out dx al
inc edi
inc esp
mov [ esi - 0x6292b5b7 ] ds
shr esp 0xbd
test al 0x76
jge rwxdata
retn 0x6680
aam 0x3e
movsd [ edi ] [ esi ]
fwait
pop edx
ja rwxdata
and al 0x44
jmp rwxdata
push esi
dec ebx
aad 0x1c
test edi ecx
cmp eax 0x88172da4
0xd5f2
call sub_38e6ff
movzx ecx [ edi + ecx * 2 ]
pushfd
mov edi [ edx + 0x1c ]
bt esi ebx
push [ esp + 0x4 ]
cmp bl bl
add edi eax
clc
push 0xcda511c0
mov edi [ edi + ecx * 4 ]
call sub_392d65
xchg esi eax
xchg edi eax
sub [ ebx ] bl
mov eax 0x7f300f9a
add ch bl
mov dl 0x77
loop rwxdata
push edx
mov al 0x37
mov al 0x92
or esi [ 0xffffffffc47a71be ]
push edx
xchg ecx eax
inc edx
std
cmp edi [ edx - 0x322fa464 ]
inc edi
scasb [ edi ]
test eax 0xa921bf35
popad
shl [ edx - 0x6c ] 0x1
add al 0x99
mov [ ecx ] gs
mov esi 0x821f793a
xor [ 0x4b3c82d7 ] 0x2d

sub_392fd5
stc
test eax 0xe0973ba7
bt ebp 0x6
mov edi [ edi + ecx * 4 ]
cmp bx 0x180f
jmp rwxdata
clc
test edi edi
push esi
lea esp [ esp + 0x50 ]
jmp rwxdata
call sub_38e6ff
movzx ecx [ edi + ecx * 2 ]
pushfd
mov edi [ edx + 0x1c ]
bt esi ebx
push [ esp + 0x4 ]
cmp bl bl
add edi eax
clc
push 0xcda511c0
mov edi [ edi + ecx * 4 ]
call sub_392d65
xchg esi eax
xchg edi eax
sub [ ebx ] bl
mov eax 0x7f300f9a
add ch bl
mov dl 0x77
loop rwxdata
push edx
mov al 0x37
mov al 0x92
or esi [ 0xffffffffc47a71be ]
push edx
xchg ecx eax
inc edx
std
cmp edi [ edx - 0x322fa464 ]
inc edi
scasb [ edi ]
test eax 0xa921bf35
popad
shl [ edx - 0x6c ] 0x1
add al 0x99
mov [ ecx ] gs
mov esi 0x821f793a
xor [ 0x4b3c82d7 ] 0x2d

sub_39315f
sbb al bl
sbb al 0xc3
mov al 0x2e
bt sp 0x7
cmc
push 0x7dc9d2ee
[ edi ]
jmp rwxdata
push edx
call sub_3ad33e
push esp
test al al
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
rcl al cl
clc
setbe ch
rol ecx 0x18
mov edi edx
pushfd
cmc
jmp sub_21762e
test ch 0x71
clc
call sub_217553
lea esp [ esp + 0x48 ]
jne rwxdata
jle rwxdata
lea eax [ esp + 0x28c0648f ]
cwde
bswap ax
mov [ edi - 0x1 ] 0x0
sets al
not al
push ebx
pushad
lea eax [ esp - 0x410efdf5 ]
call sub_399cb9
mov [ esp ] 0x8255
lea esp [ esp + 0x8 ]
ja rwxdata
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov esp esi
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
test dh ch
test bp di
pushad
cmp ecx [ ebp - 0x4 ]
call sub_39feab
cmp eax [ ebp - 0x10 ]
pushfd
push [ esp ]
pushad
call sub_393bb9
mov [ esp + 0x4 ] 0x3504a534
lea esp [ esp + 0x4 ]
jns rwxdata
pushfd
push esi
jmp rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
pushfd
mov [ esp ] 0xbb1d4cd0
push 0x9424f5d5
mov [ esp ] 0x76c6
lea esp [ esp + 0x4 ]
jmp rwxdata
push 0xbb1d4cd0
push esi
pushad
push [ esp + 0x4 ]
mov [ esp ] 0xb4a1
lea esp [ esp + 0x28 ]
jmp rwxdata
push ebx
lea esp [ esp + 0xc ]
jb rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
pushad
call sub_3b0606
stc
push 0x69b51dd0
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
pushad
clc
cmc
test si bx
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
jmp rwxdata
call sub_39e0e7
dec edi
xchg [ ebx + ecx * 2 + 0x4527d9c4 ] ch
std
push ebx
imul ebp [ eax + 0x35f99b01 ] 0x599a84ba
jmp rwxdata
jmp rwxdata
sar [ ebp - 0x2a ] cl

lea esp [ esp + 0x24 ]
jbe rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
sub_3933d0
pushfd
call sub_392c55
add [ eax ] al
push ebx
je rwxdata
jmp 0x7188d9d7
js rwxdata
int1
test eax 0x1b290831
inc ecx
insb
imul esp [ edi + 0x6e ] 0x64896600
and al 0x4
push 0xfe93d116
call sub_3ad8c3
sub_3936c3
lea esp [ esp + 0x28 ]
jne rwxdata
push edx
bt ax bp
cmc
jmp sub_2174c4
push ebx
mov eax [ edx + 0x8 ]
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
pushfd
pushfd
or ebx ebx
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
je rwxdata
seta bl
pop edi
not bl
pushad
mov esi [ esp + 0x20 ]
movzx bx al
jmp rwxdata
lea esi [ edx * 4 + 0x7483117e ]
mov esi eax
setbe ah
cwde
push ebx
call sub_3adc79
lea esp [ esp + 0x20 ]
ja rwxdata
mov bh 0x48
mov ebx [ esp + 0x24 ]
push edx
mov esp ebp
ja rwxdata
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
call sub_39d8b7
cmp dh bl
call 0xffffffffe30f57ec
hlt
jbe rwxdata
bswap bp
pop ebp
pushad
mov [ esp + 0x4 ] bl
push 0x941fd693
push [ esp + 0x24 ]
retn 0x2c
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_3ac5c9
lea esp [ esp + 0x4 ]
je rwxdata
pop ebp
push edi
mov [ esp ] bp
push [ esp + 0x4 ]
retn 0xc
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
not bl
call sub_39bc1f
arpl sp ax
cmc
pop edi
int 0x14
or ebp eax
jmp 0x5a8bac22
and bh dh
rcr di 0xe
add [ ebp - 0x4 ] ecx
rcr di cl
pushad
sub ecx 0x8
or edi edx
xadd bx di
pushad
shr ecx 0x1
push 0x54d1ddd9
setpe bh
btr bx di
xadd di bx
mov edi [ esi ]
rol bl cl
push [ esp + 0x4 ]
bt cx bx
rcl bl cl
add edi [ ebp + 0x10 ]
sbb bl ah
seto bh
add esi 0x8
add esp 0x48
call sub_39d414
mov [ esp ] edi
jmp rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
call sub_39f376
sets bh
mov ebx eax
pushad
cmp [ edi ] 0x23
push edx
lea esp [ esp + 0x24 ]
jne rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
pushfd
cmc
jmp sub_21762e
das
xor edx edx
call sub_2172b8
dec edx
jecxz rwxdata
jmp rwxdata
dec edx
rcl [ ecx ] cl
out 0x72 eax
loopne rwxdata
dec ecx
out dx al
mov [ 0x1e2dba51 ] eax
rcl [ ebx + edx * 2 + 0x7a ] 0x2f
cmp cl [ edi + 0x5f5e97b1 ]
shl [ ebx + esi * 4 ] cl
mov [ eax - 0x4e ] ebp
xor [ edi ] ebx
ja rwxdata
jbe rwxdata
retn
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
dec eax
xchg [ eax ] ebp
neg ch
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_39385d
lea esp [ esp + 0x8 ]
call j_sub_39a510
cmp dh 0xd8
test cx sp
pushad
mov [ esp ] bx
sub ecx ebx
push 0x40b98238
mov [ esp ] 0xd5
push 0x4c0a4cc7
lea esp [ esp + 0x28 ]
jne rwxdata
pushfd
lea esp [ esp + 0x4 ]
jae rwxdata
pushfd
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call sub_39e219
pushad
pushfd
push edx
lea esp [ esp + 0x28 ]
jmp rwxdata
push 0x45dc973b
xchg ecx eax
pushad
push 0xe1b0c59a
jmp rwxdata
pushfd
xchg ecx eax
pushad
jmp rwxdata
cmc
xchg al bl
push 0x49aab4ea
mov eax ebp
cmc
add bl 0xee
mov bl 0x1
lea esp [ esp + 0x4 ]
push esp
cmc
call sub_399cc7
dec eax
jmp rwxdata
dec eax
push [ esp + 0x8 ]
shl eax 0x8
jmp rwxdata
push [ esp + 0x8 ]
jmp rwxdata
jmp rwxdata
shl eax 0x8
push [ esp ]
call sub_393236
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0xd ] cl
sbb [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
and al 0xe7
mov al ch
lodsb [ esi ]
pushfd
not al
lea esp [ esp + 0x2c ]
jae rwxdata
fwait
push ds
outsb
jo rwxdata
jecxz rwxdata
pushad
call sub_21793b
inc al
call sub_38efc1
aas
jge rwxdata
shl [ edi + 0x3f3a6890 ] cl
fimul [ eax - 0x774f0c9c ]
inc edx
sbb [ eax ] eax
sub ah bh
sbb [ eax ] eax
sub bh ah
sbb [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
out 0x19 eax
add [ edx - 0x38 ] dl
mul dl
stosb [ edi ]
enter 0xa877 0x82
pushad
imul esp [ ecx + eax * 8 ] 0x857b3f15
push edx
sti
sbb al 0x6e
push ebp
add [ ecx - 0x51bd9f6a ] ebx
inc ebp
lds esp [ ebp - 0x726c33ec ]
nop edx ebp
shl ch 0xe2
dec edi
xor eax [ esi ]
pop [ edx - 0x57dfc49b ]
pop esi
sbb ecx edi
int 0x76
0x8370163e 0x2233
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi ] ah
adc ah [ eax + 0x42 ]
add [ ebp - 0x5c5ca699 ] ecx
sbb edi ebx
push ss
or ebx [ esi ]
mov ebp 0xdc2dc180
cld
sti
pop esp
jg rwxdata
0xebb65ba 0x5387
push ebp
pop es
shl dl cl
cld
dec edi
cwde
xchg [ esp + ebx * 4 ] ah
out 0x72 al
in eax 0x2f
push eax
cli
or edx 0xffffffb4
insd
mov ebx 0xea902205
cmpsb [ esi ] [ edi ]
dec edx
inc eax
out dx eax
fldcw [ ecx - 0x42462105 ]
mov edx 0x78737880
xchg esi eax
xor [ ebp - 0x12e99ed2 ] esp
frstor [ eax ]
inc esi
dec ebx
dec edx
fild [ ecx + 0x63eb3f30 ]
outsd
int3
xchg edi eax
mov ebx 0x4912ba1
test eax 0xeda1de71
aas
jg rwxdata
pop ecx
mov [ 0x16df19a3 ] eax
lodsb [ esi ]
or al [ ebp - 0x4cfd6952 ]
out 0x95 al
0xb64918bd 0x2369
js rwxdata
inc ecx
xor al 0x40
push cs
push cs
pop ebx
sbb eax 0x845886bc
scasb [ edi ]
in eax dx
push ds
xor al 0x5a
fdivp st0
sahf
dec edi
pop edi
ja rwxdata
jl rwxdata
dec ecx
adc al [ edi ]
xchg [ edx + 0x260da5c4 ] ecx
pop esp
in eax 0x61
xchg ebp eax
aaa
insd
mov dl 0x5
outsd
cmpsd [ esi ] [ edi ]
sub [ edi + 0x5b ] ah
adc ebp [ 0xffffffffe4041850 ]
mov dh 0x6e
[ esi - 0x41dc7c26 ]
out 0x91 eax
loopne rwxdata
push esi
pop es
xchg esi eax
jbe rwxdata
xchg esi eax
add dh [ ebx - 0x42156a1a ]
sbb [ ecx - 0x4a ] cl
imul esp [ ebx ] 0xcc248fce
sub eax [ ecx ]
mov bl 0xb
push ds
hlt
das
cmp esi [ ebx + 0x7b ]
cmp [ edi - 0x49 ] al
push edx
or al 0xeb
sbb al 0x53
xor edx edx
cwde
push esp
sub [ ecx ] 0xfffffff2
push 0xe9b08358
mov esi 0x296daa50
pop ds
cli
mov [ 0x4d586cab ] al
fdivr [ edi + 0x46cfe02a ]
out 0x79 al
aad 0x32
jle rwxdata
pop eax
test [ esi + 0x5a341eed ] ch
out dx eax
cmc
clc
pop edx
and al [ ecx - 0x3413682f ]
pop eax
jpo rwxdata
and [ ebx ] 0xffffffbe
fist [ edi + esi ]
dec edx
fidiv [ 0xffffffffd7b0bf67 ]
sbb eax [ esi ]
scasd [ edi ]
mov eax [ edx - 0x3f ]
xchg edi eax
sub_3938a9
call sub_39bc60
pushad
pushad
adc ecx ecx
mov [ esp ] sp
mov [ esp ] ax
mov [ esp + 0x4 ] cx
lea esp [ esp + 0x40 ]
jmp rwxdata
setpo bl
not bl
pushad
inc bl
inc ecx
lea esp [ esp + 0x20 ]
call sub_3ae276
sub_393b4e
lea esp [ esp + 0x44 ]
je rwxdata
call sub_38eb4e
add [ eax ] al
inc edi
je rwxdata
call sub_3956c5
add eax esp
dec esi
xchg ebp eax
jl rwxdata
outsd
jne rwxdata
mov bh 0x53
xchg edx eax
xchg [ esi + 0xb601cea ] bl
int1
xchg [ eax ] ebp
idiv ch
dec ebx
stosb [ edi ]
imul ebx [ edx - 0x7d ] 0xbc7140cd
cmc
test eax 0x83a64ffa
mov bl 0x27
push edi
mov [ 0xffffffffc04ea41a ] al
in eax dx
popad
mov al [ 0xffffffffefcc7b23 ]
or bl dl
and eax 0xa5e85879
mov esi 0xe816b303
push es
std

aam 0xc5
fcom [ ecx + esi * 4 ]
xchg [ ecx ] bh
scasb [ edi ]
inc ebx
or eax 0x3e03c61f
or eax [ eax - 0x3eddd3ef ]
inc [ eax - 0x27 ]
mov dh 0x8c
imul edi [ ecx - 0x104466c8 ] 0x21
cdq
fcomp st1
int 0xc3
in al dx
cmp dh [ ebx ]
adc ch dh
mov ah 0xa
mov ebx 0xd89921ef
fxch st5
retn
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add al al
enter 0x6604 0x89
and al 0xc
add al 0xdf
cmp ch 0x5a
bt di ax
mov [ esp ] cl
neg al
call j_sub_3ab756
lea eax [ rwxdata ]
jmp sub_3938a9
sub_393b5d
mov [ esp + 0x8 ] 0x84e6
mov esi edi
pushad
test dh al
mov [ esp ] edx
sub esi eax
mov [ esp ] sp
push [ esp ]
jmp rwxdata
[ edi ] [ esi ]
movsx si cl
mov esi [ esp + 0x30 ]
push esi
mov [ esp + 0x4 ] bl
mov [ esp + 0x4 ] cl
lea esp [ esp + 0x38 ]
jmp rwxdata
jmp rwxdata
pushad
push 0x354c939a
lea esp [ esp + 0x24 ]
call sub_38ef01
jmp rwxdata
call sub_39dfe7
pushad
lea esp [ esp + 0x20 ]
je rwxdata
call sub_38eb4e
add [ eax ] al
inc edi
je rwxdata
lea edi [ ebx * 2 + 0x1c40efbd ]
lea edx [ ebx + 0x4 ]
movzx di dl
lea esi [ 0x3cb784e9 ]
movzx esi [ edx + 0x1a ]
mov di 0x7121
mov edi 0xfc0ea659
lea esi [ esi + edx + 0x1c ]
bswap di
mov edi 0xc4a6bc9
mov edi [ ebp + 0x8 ]
pushfd
call sub_38eeac
lea esp [ esp + 0x24 ]
jbe rwxdata
add eax esp
dec esi
xchg ebp eax
jl rwxdata
outsd
jne rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
mov bh 0x53
xchg edx eax
xchg [ esi + 0xb601cea ] bl
int1
xchg [ eax ] ebp
idiv ch
dec ebx
stosb [ edi ]
imul ebx [ edx - 0x7d ] 0xbc7140cd
cmc
test eax 0x83a64ffa
mov bl 0x27
push edi
mov [ 0xffffffffc04ea41a ] al
in eax dx
popad
mov al [ 0xffffffffefcc7b23 ]
or bl dl
and eax 0xa5e85879
mov esi 0xe816b303
push es
std

aam 0xc5
fcom [ ecx + esi * 4 ]
xchg [ ecx ] bh
scasb [ edi ]
inc ebx
or eax 0x3e03c61f
or eax [ eax - 0x3eddd3ef ]
inc [ eax - 0x27 ]
mov dh 0x8c
imul edi [ ecx - 0x104466c8 ] 0x21
cdq
fcomp st1
int 0xc3
in al dx
cmp dh [ ebx ]
adc ch dh
mov ah 0xa
mov ebx 0xd89921ef
fxch st5
retn
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add al al
enter 0x6604 0x89
and al 0xc
add al 0xdf
cmp ch 0x5a
bt di ax
mov [ esp ] cl
neg al
call j_sub_3ab756
lea eax [ rwxdata ]
jmp sub_3938a9
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_393bb9
lea esp [ esp + 0x2c ]
jae rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
sub bl dl
sar cl 0x7
btr bx 0x6
inc bh
mov ebx eax
call sub_39a490
lea eax [ rwxdata ]
push esi
mov [ esp ] 0x7c
call sub_3ab713
pushad
push 0x354c939a
lea esp [ esp + 0x24 ]
call sub_38ef01
jmp rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
call sub_39dfe7
pushad
lea esp [ esp + 0x20 ]
je rwxdata
call sub_38eb4e
add [ eax ] al
inc edi
je rwxdata
lea edi [ ebx * 2 + 0x1c40efbd ]
lea edx [ ebx + 0x4 ]
movzx di dl
lea esi [ 0x3cb784e9 ]
movzx esi [ edx + 0x1a ]
mov di 0x7121
mov edi 0xfc0ea659
lea esi [ esi + edx + 0x1c ]
bswap di
mov edi 0xc4a6bc9
mov edi [ ebp + 0x8 ]
pushfd
call sub_38eeac
lea esp [ esp + 0x24 ]
jbe rwxdata
add eax esp
dec esi
xchg ebp eax
jl rwxdata
outsd
jne rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
mov bh 0x53
xchg edx eax
xchg [ esi + 0xb601cea ] bl
int1
xchg [ eax ] ebp
idiv ch
dec ebx
stosb [ edi ]
imul ebx [ edx - 0x7d ] 0xbc7140cd
cmc
test eax 0x83a64ffa
mov bl 0x27
push edi
mov [ 0xffffffffc04ea41a ] al
in eax dx
popad
mov al [ 0xffffffffefcc7b23 ]
or bl dl
and eax 0xa5e85879
mov esi 0xe816b303
push es
std

aam 0xc5
fcom [ ecx + esi * 4 ]
xchg [ ecx ] bh
scasb [ edi ]
inc ebx
or eax 0x3e03c61f
or eax [ eax - 0x3eddd3ef ]
inc [ eax - 0x27 ]
mov dh 0x8c
imul edi [ ecx - 0x104466c8 ] 0x21
cdq
fcomp st1
int 0xc3
in al dx
cmp dh [ ebx ]
adc ch dh
mov ah 0xa
mov ebx 0xd89921ef
fxch st5
retn
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add al al
enter 0x6604 0x89
and al 0xc
add al 0xdf
cmp ch 0x5a
bt di ax
mov [ esp ] cl
neg al
call j_sub_3ab756
lea eax [ rwxdata ]
jmp sub_3938a9
sub_393c0c
movsx ax bl
pushad
mov [ esp + 0x20 ] ebx
cwde
push edi
lea eax [ rwxdata ]
jmp rwxdata
call j_sub_217288
jecxz rwxdata
pop ds
mov [ esi ] 0xf40d533e
inc dh
je rwxdata
mov edx 0x1d9da239
das
pushad
mov esi 0xe378b32a
fsub [ esi - 0x4c ]
xor esp [ ecx ]
shl [ edx ] 0xb1
xor cl [ 0x3457ea0b ]
cld
imul esp esi 0x152fc31a
sub [ ecx - 0x35 ] ebx
salc
xchg ecx eax
sub eax [ bp - 0x23 ]
sub [ ecx - 0x2d987ed7 ] bl
mov esp 0xa833033c
jge rwxdata
mov edx 0x1c497c6e
int1
inc esp
test al 0x4e
pop edx
test al 0xfb
pop ecx
outsd
lodsd [ esi ]
xor [ edx + edi * 4 - 0x47 ] dl
sbb esi [ edx + ebx * 4 ]
0xc71f
out dx al
push cs
push esp
cmp [ esi + ecx * 4 - 0x2e1799ab ] 0x2ec06d6c
fld [ esi - 0x1c ]
in eax 0x17
mov ebx 0x10849399
aaa
and [ ebx - 0x56 ] esi
0x120a220f 0xfbe8
pop es
sahf
idiv ah
push ebx
xor [ eax ] al
movsb [ edi ] [ esi ]
daa
adc al dl
jbe rwxdata
0x757140ed 0x8450
sbb al bl
das
adc eax 0xf3cb5929
salc
int1
salc
js rwxdata
mov ch 0xa7
dec esi
mov ah 0x33
adc al 0x89
adc [ cs : esi ] al
in eax dx
int 0x47
pop ds
push ss
mov edx 0x8ba09e53
sub [ ecx ] ebp
inc esi
mov eax 0xb94bab74
mov [ ebx - 0x66 ] dh
popfd
xchg ecx eax
xor eax 0x8215cfed
mov [ 0xffffffff90522036 ] eax
arpl di ax
sub eax 0xd6d67417
sar esp 0x1
sbb bl al
int3
out 0x3a al
and esp ebp
sbb eax 0x576b3611
jb rwxdata
sbb [ esi + 0x7f ] esi
shr [ ebx - 0x76 ] 0x23
sub eax 0x7241ea0b
jpe rwxdata
mov cl 0x32
or eax 0x3457ea0b
jmp 0x1b204ea1
sub_393e85
mov [ esp ] 0x9b69
pushad
lea esp [ esp + 0x44 ]
ja rwxdata
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
pushad
pushfd
call sub_3abcd5
lea ebp [ esi + 0x1cd55790 ]
mov ah 0x4e
sti
stosb [ edi ]
lahf
mov edi 0xc47a69d5
dec esi
xchg ebp eax
jae rwxdata
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
mov ah 0x3c
add al 0x2c
adc dl [ ebx - 0x4d4887a8 ]
add ebx [ ebx ]
sbb esi edx
rcl [ ebp - 0xd648884 ] 0xaa
or [ ecx - 0x2aa4d458 ] ah
pop ss
fdiv [ ss : esi ]
ja rwxdata
mov eax 0x2ed8193f
mov ch 0x1e
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
dec edi
mov ebp 0xa013b824
mov [ 0xffffffffaad82250 ] al
fbld [ esp + esi * 2 - 0x3e ]
fucomp st5
loope rwxdata
and eax 0x20a5eadb
les edx [ esi + 0x2a ]
cmp eax 0xa8baa795
xchg esi eax
add [ eax ] al
jae rwxdata
and [ esi ] al
in eax dx
xor esi [ edx - 0x7bf8d9f5 ]
xor eax 0xd22a71f
bound eax [ ebx - 0x22 ]
lodsb [ esi ]
adc [ esi + 0x508396db ] ch
mov esi 0xa5eadb25
and ah al
push esi
sub bh [ 0xffffffffa8baa795 ]
push ds
sub al 0x81
0x387a264 0xcdc0
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
into
push eax
pop eax
pop esi
add eax 0x121dbd98
mov [ 0xffffffffa8ae02d1 ] al
fbstp [ edx ]
sbb al 0xc9
outsb
pop esi
jns rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
add eax 0x4f786e8f
rcr [ edi ] 0x1
nop
inc eax
fwait
pop di
xchg [ ecx + 0x4181ae10 ] ebx
push es
rol [ edx + 0x46 ] cl
popfd
dec [ ecx ]
jpo rwxdata
jmp rwxdata
push ebp
lodsb [ esi ]
add eax 0x1bc020a5
mov [ 0x1c4ec3e2 ] eax
out dx eax
push ecx
jle rwxdata
jb rwxdata
ja rwxdata
outsd
jbe rwxdata
pushfd
and [ esi + 0x5a5718a8 ] esp
fbld [ ecx + 0x57 ]
sub [ ebx + edx ] edi
retn 0x553
0x723ae447 0x1301
leave
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_39403c
pushfd
call sub_39b282
add [ eax ] al
push esp
jb rwxdata
add edx [ edx - 0x41 ]
movsb [ edi ] [ esi ]
inc esi
cmpsb [ esi ] [ edi ]
adc [ ebx ] 0xffffffec
outsb
jae rwxdata
mov [ 0xffffffff8e9611a8 ] eax
0xa828
cmc
popad
je rwxdata
push ds
push es
stosb [ edi ]
aam 0xf5
inc ecx
arpl [ ebx + 0x65 ] sp
insb
jb rwxdata
je rwxdata
fmul [ eax + ebp - 0x41 ]
or al 0x36
jb rwxdata
xchg esp eax
in al dx
add [ eax - 0x10 ] dl
pop ds
std
std
mov edi edx
xchg edx eax
insb
pop esp
mov ah 0x1
retn 0x904e
sub_394194
push ebp
lea esp [ esp + 0x10 ]
je rwxdata
rcl al cl
clc
setbe ch
rol ecx 0x18
mov edi edx
pushfd
cmc
jmp sub_21762e
call sub_392780
push 0xa03731f1
mov [ esp + 0x28 ] eax
mov [ esp ] 0xbb
mov [ esp ] 0x3e99
push [ esp + 0x28 ]
retn 0x2c
sub_3943c5
pushad
cmp [ edi - 0x1 ] 0x0
push 0xda102e4a
push [ esp ]
call j_sub_39ff11
call sub_39f376
sets bh
mov ebx eax
pushad
cmp [ edi ] 0x23
push edx
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
cmc
jmp sub_21762e
das
xor edx edx
call sub_2172b8
dec edx
jecxz rwxdata
dec edx
rcl [ ecx ] cl
out 0x72 eax
loopne rwxdata
dec ecx
out dx al
mov [ 0x1e2dba51 ] eax
rcl [ ebx + edx * 2 + 0x7a ] 0x2f
cmp cl [ edi + 0x5f5e97b1 ]
shl [ ebx + esi * 4 ] cl
mov [ eax - 0x4e ] ebp
xor [ edi ] ebx
jbe rwxdata
retn
dec eax
xchg [ eax ] ebp
neg ch
sub_394533
lea esp [ esp + 0x8 ]
je rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
cmc
test al dl
call sub_39ff52
cli
jmp 0x1d0e949d
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_3946c4
mov [ esp ] eax
not al
not al
pushfd
pushfd
lodsb [ esi ]
stc
mov [ esp ] 0xaf
stc
xor al 0x6e
clc
cmc
neg al
pushad
call sub_39d1f3
xchg edx eax
inc ecx
pop edx
in al 0x2e
mov ch 0x37
mov al [ 0x42e7a5fb ]
imul cx bp 0x14
mov eax [ 0xffffffffc3797a9c ]
and ah [ ebx - 0x3ee3cd53 ]
and [ eax - 0x775dbc03 ] 0x6f
int 0x14
sub [ esi + 0x4a ] esp
les esi [ edx + ebp * 4 - 0x48d25cf5 ]
cdq
adc [ ecx + 0x411659a3 ] ah
popad
mov al [ 0xe234a8f ]
push cs
fld [ edi - 0x7c5c2401 ]
jle rwxdata
jg rwxdata
pop edi
shl [ edx ] 0xb1
test [ 0x75e300c5 ] bh
mov cl 0x9c
dec esp
mov ah 0x21
popfd
mov [ eax + 0x5b ] esi
pop ss
scasd [ edi ]
xor eax 0x68eee4ed
dec ebx
cmp [ bx ] eax
lodsd [ esi ]
ja rwxdata
sbb eax 0xaf13a257
sub al dl
add eax 0xc0ef2c9a
xor ebx [ ebx + 0x10 ]
scasb [ edi ]
clc
xor [ edx ] 0x25
xchg ebp eax
push ebp
retn
or al 0x27
mov bl 0x16
[ ecx + ebx + 0x1a9237a3 ]
push cs
mov ecx 0xf3df67e9
and edx esi
mov edx 0x90b43
push ebp
outsd
aaa
sub_394a9e
pushfd
jmp rwxdata
mov [ esp + 0x24 ] 0xe4f8554e
push edi
push esi
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
pushfd
mov [ esp ] ecx
pushad
pushfd
push [ esp ]
mov [ esp + 0x24 ] ebp
mov [ esp + 0x4 ] sp
mov [ esp + 0x20 ] eax
pushfd
mov [ esp + 0x4 ] si
mov [ esp + 0x20 ] esi
push [ esp ]
jmp rwxdata
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp sub_3aedab
sub_394ed7
lea esp [ esp + 0x8 ]
call sub_38ef01
pushad
pushad
adc ecx ecx
call sub_399d3e
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
push edx
bt ax bp
cmc
jmp sub_2174c4
movzx ax dl
mov ah 0x51
mov ax 0xcc89
mov eax [ edx + 0x8 ]
pushad
pushad
mov [ esp ] 0x64
lea esp [ esp + 0x40 ]
jmp rwxdata
pushfd
pushfd
or ebx ebx
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
je rwxdata
seta bl
pop edi
not bl
pushad
mov esi [ esp + 0x20 ]
movzx bx al
jmp rwxdata
lea esi [ edx * 4 + 0x7483117e ]
mov esi eax
setbe ah
cwde
push ebx
call sub_3adc79
lea esp [ esp + 0x20 ]
ja rwxdata
mov bh 0x48
mov ebx [ esp + 0x24 ]
push edx
mov esp ebp
ja rwxdata
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
call sub_39d8b7
cmp dh bl
call 0xffffffffe30f57ec
hlt
jbe rwxdata
bswap bp
pop ebp
pushad
mov [ esp + 0x4 ] bl
push 0x941fd693
push [ esp + 0x24 ]
retn 0x2c
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_3ac5c9
lea esp [ esp + 0x4 ]
je rwxdata
pop ebp
push edi
mov [ esp ] bp
push [ esp + 0x4 ]
retn 0xc
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
not bl
call sub_39bc1f
arpl sp ax
cmc
pop edi
int 0x14
or ebp eax
jmp 0x5a8bac22
and bh dh
rcr di 0xe
add [ ebp - 0x4 ] ecx
rcr di cl
pushad
sub ecx 0x8
or edi edx
xadd bx di
pushad
shr ecx 0x1
push 0x54d1ddd9
setpe bh
btr bx di
xadd di bx
mov edi [ esi ]
rol bl cl
push [ esp + 0x4 ]
bt cx bx
rcl bl cl
add edi [ ebp + 0x10 ]
sbb bl ah
seto bh
add esi 0x8
add esp 0x48
call sub_39d414
mov [ esp ] edi
jmp rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
call sub_39f376
sets bh
mov ebx eax
pushad
cmp [ edi ] 0x23
push edx
lea esp [ esp + 0x24 ]
jne rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
pushfd
cmc
jmp sub_21762e
das
xor edx edx
call sub_2172b8
dec edx
jecxz rwxdata
jmp rwxdata
dec edx
rcl [ ecx ] cl
out 0x72 eax
loopne rwxdata
dec ecx
out dx al
mov [ 0x1e2dba51 ] eax
rcl [ ebx + edx * 2 + 0x7a ] 0x2f
cmp cl [ edi + 0x5f5e97b1 ]
shl [ ebx + esi * 4 ] cl
mov [ eax - 0x4e ] ebp
xor [ edi ] ebx
ja rwxdata
jbe rwxdata
retn
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
dec eax
xchg [ eax ] ebp
neg ch
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_394f16
call sub_39c41a
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_3950bd
bt ax bx
mov ah [ esi ]
pushfd
pushfd
clc
cmp ah 0x41
pushfd
lea esp [ esp + 0x30 ]
ja rwxdata
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
stc
pushad
bt dx si
cmp ah 0x5a
call sub_393e85
lea esp [ esp + 0x34 ]
jne rwxdata
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jmp rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
sub si 0xd75a
movzx cx dl
mov ecx edi
bt ax cx
sub ecx ebx
clc
mov esi esp
test bl 0xa7
sub edi 0x4
cmc
stc
cmp esp ebp
push [ edi ]
pushad
jmp rwxdata
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
ja rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
cmp edi ebx
push 0xd7ff7179
lea esp [ esp + 0x24 ]
ja rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
clc
jmp sub_394ed2
pushad
test dl 0xe6
stc
and al 0xb8
sub ebx edi
xor al al
bswap edi
add esp 0x20
add ebx esp
bsf edi ebp
mov edi ebx
rcr al cl
mov al 0x2e
pushad
[ edi ]
pushad
call sub_394f16
0x7463
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_395141
lea esp [ esp + 0x30 ]
jne rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
movzx si al
sbb cl ch
mov ecx edi
shld si cx cl
bsf si cx
movzx si dl
sub ecx ebx
shld esi eax 0x4
test esp 0x8a84ccbc
or si 0x6094
stc
mov esi esp
call sub_217910
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_395178
mov [ edi - 0x1 ] 0x0
cwde
push [ esp ]
push eax
mov [ esp + 0xc ] ebx
movzx eax bl
lea eax [ rwxdata ]
pushad
jmp rwxdata
mov [ esp + 0x28 ] rwxdata
call sub_39bf79
scasb [ edi ]
and eax 0x241aa18e
rcl dl 0x5
sti
mov [ ebx ] dh
sti
mov al 0xbb
lodsd [ esi ]
xor al 0xb1
xchg ebx eax
movsd [ edi ] [ esi ]
dec esp
scasb [ edi ]
xor eax 0x271d84ba
and eax eax
push esi
popfd
sub [ es : edx ] bl
sub_39532f
mov [ esp ] 0x7a
ror al 0x4
push [ esp ]
pushfd
add al 0xdf
pushfd
pushfd
bt di 0x7
neg al
clc
shr eax 0x1
mov [ esp + 0x8 ] 0xdf70
pushfd
mov [ esp ] ecx
jmp rwxdata
lea esp [ esp + 0x3c ]
je rwxdata
pushad
pushad
xchg di si
mov ebx [ esp + 0x40 ]
movsx si bl
mov edi [ esp + 0x44 ]
mov si [ esp + 0xc ]
call sub_217d9b
jae rwxdata
jmp rwxdata
sar ah cl
xor edx edx
pushfd
mov eax edx
xor al bh
call sub_39dc25
rol esi 0x79
push ebp
sbb al 0x14
cli
add al 0x6c
sub eax 0x181e22f0
fild [ ebp + 0x74 ]
out 0xd al
pop ds
pushad
pushad
adc ecx ecx
mov [ esp ] sp
mov [ esp ] ax
mov [ esp + 0x4 ] cx
lea esp [ esp + 0x40 ]
jmp rwxdata
setpo bl
not bl
pushad
inc bl
inc ecx
lea esp [ esp + 0x20 ]
call sub_3ae276
sub_395605
add ecx 0x1
cmp si dx
push ecx
call sub_39b4ce
lea esp [ esp + 0x28 ]
je rwxdata
movzx bx dl
bts bx bp
movsx bx dl
rcl bh 0x2
mov bx [ esi ]
clc
clc
pushad
and ebx 0xfff
push ecx
stc
cmc
cmc
add [ ebx + edi ] edx
sub esp 0xffffffdc
push 0xf8f073e9
mov [ esp ] dx
lea esp [ esp + 0x4 ]
jmp rwxdata
cmp edx 0xa4b2386f
cmc
cmc
add esi 0x2
call sub_39b5ee
sub_3956e8
inc ecx
lea esp [ esp + 0xc ]
or bl al
xchg ebp eax
cmc
xchg al bl
push 0x49aab4ea
mov eax ebp
cmc
add bl 0xee
mov bl 0x1
lea esp [ esp + 0x4 ]
push esp
cmc
call sub_399cc7
sub_398d01
mov [ esp ] 0xb1
cmp eax edx
pushad
pushfd
pushfd
jmp rwxdata
lea esp [ esp + 0x34 ]
jb rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
clc
test di dx
clc
stc
cmp eax [ ebp - 0x10 ]
push edx
pushad
call sub_39a23e
pushfd
jmp rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
call sub_2173ac
add edx edx
add ecx [ ebp - 0x35 ]
sub ah al
sub_3990ff
call sub_39fafe
jae rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
push ebp
mov ebx eax
sbb cx dx
mov edi eax
call sub_3ab78a
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_399117
push [ esp ]
pushad
jmp rwxdata
imul edx edx 0xa
stc
add edx eax
mov [ esp + 0x4 ] al
push [ esp ]
push [ esp ]
push [ esp + 0x4 ]
lea esp [ esp + 0x34 ]
jmp rwxdata
shl al 0x6
rol al 0x1
rol al cl
add edi 0x1
shl al 0x5
neg al
mov al [ edi ]
cmc
test al al
pushad
push 0xcef31194
mov [ esp ] ch
lea esp [ esp + 0x24 ]
rcl al cl
clc
setbe ch
rol ecx 0x18
mov edi edx
pushfd
cmc
jmp sub_21762e
cmc
sub al 0x30
pushad
call sub_3ae00b
mov esp 0x4ec07e7d
xchg ebp eax
jl rwxdata
mov fs [ eax - 0x3d4ffb22 ]
loop rwxdata
cmp al 0x67
jbe rwxdata
mov al [ 0x10e4e14b ]
push ds
out dx eax
adc cl [ esi - 0x15f3b18c ]
add dl [ edi + eax * 8 ]
jl rwxdata
add eax [ eax - 0x31e1275a ]
loopne rwxdata
je rwxdata
and al 0x8d
and al 0x24
leave
pushfd
jle rwxdata
jmp 0x14bf7242
loop rwxdata
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x663c5 ]
or eax 0xef5f6225
inc ecx
mov dh ch
loop rwxdata
out dx eax
jpo rwxdata
adc [ ecx + ebp * 8 - 0x1c ] 0xd21484a2
0xab77e5b1 0xd5e8
and [ esi - 0x1f31e128 ] 0xe2
xor ecx [ eax - 0x54e1b488 ]
loop rwxdata
test [ ecx ] 0x628452dc
mov ebp 0xfff99c3b
adc dl [ esi - 0x11 ]
sbb [ ebp - 0x738b1058 ] cl
sbb bl dh
out 0x6a al
cld
out dx eax
sbb cl [ edx + ebp + 0x757d7790 ]
cmp al 0x1f
lds ecx [ edi ]
mov ah 0x32
or eax 0xdab27771
or eax 0x28178423
into
cmc
jge rwxdata
jg rwxdata
cmp ebx ecx
or eax 0x78816320
fxch st2
xchg ecx eax
sub [ ebp + ecx * 8 + 0x379dca05 ] bl
mov al [ 0x467178ef ]
pop edi
inc ecx
mov [ ecx ] ecx
hlt
sub_3991df
call sub_39e4ca
lea esp [ esp + 0xc ]
jb rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
test cl dh
jmp rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
cmp eax [ ebp - 0x10 ]
jmp rwxdata
jae rwxdata
push ebp
mov ebx eax
sbb cx dx
mov edi eax
call sub_3ab78a
sub_3991fb
lea esp [ esp + 0x24 ]
jae rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call sub_399c01
bt sp di
push [ esp + 0x4 ]
test edi edi
push esi
pushfd
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
call sub_38e6ff
movzx ecx [ edi + ecx * 2 ]
pushfd
mov edi [ edx + 0x1c ]
bt esi ebx
push [ esp + 0x4 ]
cmp bl bl
add edi eax
clc
push 0xcda511c0
mov edi [ edi + ecx * 4 ]
call sub_392d65
xchg esi eax
xchg edi eax
sub [ ebx ] bl
mov eax 0x7f300f9a
add ch bl
mov dl 0x77
loop rwxdata
push edx
mov al 0x37
mov al 0x92
or esi [ 0xffffffffc47a71be ]
push edx
xchg ecx eax
inc edx
std
cmp edi [ edx - 0x322fa464 ]
inc edi
scasb [ edi ]
test eax 0xa921bf35
popad
shl [ edx - 0x6c ] 0x1
add al 0x99
mov [ ecx ] gs
mov esi 0x821f793a
xor [ 0x4b3c82d7 ] 0x2d

sub_3999ff
mov si 0x4cef
mov esi [ esp + 0x38 ]
pushfd
mov [ esp ] bh
pushfd
push esi
lea esp [ esp + 0x48 ]
jmp rwxdata
jmp rwxdata
pushad
push 0x354c939a
lea esp [ esp + 0x24 ]
call sub_38ef01
jmp rwxdata
call sub_39dfe7
pushad
lea esp [ esp + 0x20 ]
je rwxdata
call sub_38eb4e
add [ eax ] al
inc edi
je rwxdata
lea edi [ ebx * 2 + 0x1c40efbd ]
lea edx [ ebx + 0x4 ]
movzx di dl
lea esi [ 0x3cb784e9 ]
movzx esi [ edx + 0x1a ]
mov di 0x7121
mov edi 0xfc0ea659
lea esi [ esi + edx + 0x1c ]
bswap di
mov edi 0xc4a6bc9
mov edi [ ebp + 0x8 ]
pushfd
call sub_38eeac
lea esp [ esp + 0x24 ]
jbe rwxdata
add eax esp
dec esi
xchg ebp eax
jl rwxdata
outsd
jne rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
mov bh 0x53
xchg edx eax
xchg [ esi + 0xb601cea ] bl
int1
xchg [ eax ] ebp
idiv ch
dec ebx
stosb [ edi ]
imul ebx [ edx - 0x7d ] 0xbc7140cd
cmc
test eax 0x83a64ffa
mov bl 0x27
push edi
mov [ 0xffffffffc04ea41a ] al
in eax dx
popad
mov al [ 0xffffffffefcc7b23 ]
or bl dl
and eax 0xa5e85879
mov esi 0xe816b303
push es
std

aam 0xc5
fcom [ ecx + esi * 4 ]
xchg [ ecx ] bh
scasb [ edi ]
inc ebx
or eax 0x3e03c61f
or eax [ eax - 0x3eddd3ef ]
inc [ eax - 0x27 ]
mov dh 0x8c
imul edi [ ecx - 0x104466c8 ] 0x21
cdq
fcomp st1
int 0xc3
in al dx
cmp dh [ ebx ]
adc ch dh
mov ah 0xa
mov ebx 0xd89921ef
fxch st5
retn
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add al al
enter 0x6604 0x89
and al 0xc
add al 0xdf
cmp ch 0x5a
bt di ax
mov [ esp ] cl
neg al
call j_sub_3ab756
lea eax [ rwxdata ]
jmp sub_3938a9
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_399a7d
lea esp [ esp + 0x34 ]
je rwxdata
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
pushad
pushfd
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
inc eax
jns rwxdata
out 0x6 eax
movsd [ edi ] [ esi ]
inc ebx
shr [ ebp - 0x51 ] 0x1
sbb bh bl
dec ebp
xchg esp eax
jb rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
xor ch 0xf8
adc al 0xfd
setl al
sub ebx ebx
lea esp [ esp + 0x4 ]
call sub_38f300
jbe rwxdata
retn
jmp rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
or al 0x2
fprem1
shl [ edi ] 0x1
cwde
jpo rwxdata
loope rwxdata
dec ebp
mov eax 0xfb2aad95
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jmp rwxdata
jno rwxdata
xor ebx [ eax - 0x6b99676 ]
or esp [ ebp + 0x19 ]
mov [ edi + 0x120ce9f3 ] bh
pop edi
call sub_3aab13
scasb [ edi ]
and eax 0x111ea58a
jle rwxdata
adc [ esi - 0x267198dc ] ch
test [ ebp + 0xf342464 ] 0x1e2c84
add [ eax - 0x64 ] ah
sti
mov ah 0x1c
mov edi 0x9532aa2f
inc edi
cmp [ ebp - 0x43fb2ba3 ] esp
mov esp [ edi + ebp * 8 ]
push ecx
fistp [ esi ]
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
ja rwxdata
mov ah [ ebp - 0x6081eee2 ]
and [ edx + eax ] ecx
or ah [ ebx - 0x1fac462 ]
xchg ebx eax
cwde
cmc
shl [ edi - 0x526a47b3 ] cl
sub bh bl
mov bh 0xa2
jne rwxdata
add ebx 0x5468fd31
in eax dx
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_399c29
mov ah al
push [ esp + 0x4 ]
cmc
ror al 0x7
push [ esp ]
add al 0x82
test ah cl
clc
stc
test dl 0x59
neg al
cmc
xor al 0x6e
cmp esp 0xe2c53c63
mov [ ecx ] al
call sub_395605
_start
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
call sub_3ac953
pushad
push 0x52bcd977
mov [ esp + 0x20 ] 0x3504a757
push ecx
push 0x696fd9e6
jmp rwxdata
mov [ esp + 0x24 ] 0x4cc817ee
pushad
lea esp [ esp + 0x44 ]
jmp j_sub_3b06a3
sub_399c7d
push [ edi ]
pop [ esp ]
clc
cmp edi ebx
pushad
lea esp [ esp + 0x20 ]
ja rwxdata
clc
jmp sub_394ed2
pushfd
shl al 0x1
sub ebx edi
sar edi cl
adc al 0x7d
add esp 0x4
add ebx esp
shl edi 0x9
mov edi ebx
and al 0x43
mov al 0x2e
pushfd
cmc
[ edi ]
mov [ esp ] 0x28
jmp rwxdata
lea esp [ esp + 0x4 ]
jne rwxdata
jle rwxdata
not ah
lea eax [ ecx - 0x50764a91 ]
mov [ edi - 0x1 ] 0x0
call sub_393c0c
cmp bx dx
cmc
pushad
or ecx ecx
pushad
jmp rwxdata
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov esp esi
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
mov [ esp ] 0x23
call sub_393b4e
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_399cc7
cmc
mov [ esp + 0x4 ] esi
bsr si bp
mov [ esp ] 0x6a94
sar si 0x7
cmp cl cl
mov esi edi
test dx di
sub esi eax
call sub_39bc65
push 0x27da37e1
pushfd
mov [ esp + 0x4 ] 0x3504a757
call j_sub_39babe
mov bh 0x48
mov ebx [ esp + 0x24 ]
push edx
mov esp ebp
ja rwxdata
jbe rwxdata
bswap bp
pop ebp
pushad
mov [ esp + 0x4 ] bl
push 0x941fd693
push [ esp + 0x24 ]
retn 0x2c
call sub_3ac5c9
lea esp [ esp + 0x4 ]
je rwxdata
pop ebp
push edi
mov [ esp ] bp
push [ esp + 0x4 ]
retn 0xc
not bl
call sub_39bc1f
arpl sp ax
cmc
pop edi
int 0x14
or ebp eax
jmp 0x5a8bac22
and bh dh
rcr di 0xe
add [ ebp - 0x4 ] ecx
rcr di cl
pushad
sub ecx 0x8
or edi edx
xadd bx di
pushad
shr ecx 0x1
push 0x54d1ddd9
setpe bh
btr bx di
xadd di bx
mov edi [ esi ]
rol bl cl
push [ esp + 0x4 ]
bt cx bx
rcl bl cl
add edi [ ebp + 0x10 ]
sbb bl ah
seto bh
add esi 0x8
add esp 0x48
call sub_39d414
mov [ esp ] edi
jmp rwxdata
call sub_39f376
sets bh
mov ebx eax
pushad
cmp [ edi ] 0x23
push edx
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
cmc
jmp sub_21762e
das
xor edx edx
call sub_2172b8
dec edx
jecxz rwxdata
dec edx
rcl [ ecx ] cl
out 0x72 eax
loopne rwxdata
dec ecx
out dx al
mov [ 0x1e2dba51 ] eax
rcl [ ebx + edx * 2 + 0x7a ] 0x2f
cmp cl [ edi + 0x5f5e97b1 ]
shl [ ebx + esi * 4 ] cl
mov [ eax - 0x4e ] ebp
xor [ edi ] ebx
jbe rwxdata
retn
dec eax
xchg [ eax ] ebp
neg ch
sub_399d2b
lea esp [ esp + 0x4 ]
call sub_38ef01
pushad
mov [ esp ] bh
pushfd
jmp rwxdata
lea esp [ esp + 0x24 ]
jae rwxdata
not al
mov al bh
setl al
lodsb [ esi ]
pushad
not al
push ebx
mov [ esp ] 0x254a
inc al
call sub_39532f
push edx
call sub_3ad33e
push esp
test al al
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
call sub_392c00
jmp rwxdata
rcl al cl
clc
setbe ch
rol ecx 0x18
mov edi edx
pushfd
cmc
jmp sub_21762e
test ch 0x71
clc
call sub_217553
lea esp [ esp + 0x48 ]
jne rwxdata
push esi
mov [ esp + 0xc ] 0xb816bc91
mov [ esp ] 0x5804
lea esp [ esp + 0xc ]
jmp j_sub_3b06a3
jle rwxdata
lea eax [ esp + 0x28c0648f ]
cwde
bswap ax
mov [ edi - 0x1 ] 0x0
sets al
not al
push ebx
pushad
lea eax [ esp - 0x410efdf5 ]
call sub_399cb9
mov [ esp ] 0x8255
lea esp [ esp + 0x8 ]
ja rwxdata
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov esp esi
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
test dh ch
test bp di
pushad
cmp ecx [ ebp - 0x4 ]
call sub_39feab
cmp eax [ ebp - 0x10 ]
pushfd
push [ esp ]
pushad
call sub_393bb9
mov [ esp + 0x4 ] 0x3504a534
lea esp [ esp + 0x4 ]
jns rwxdata
pushfd
push esi
jmp rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
pushfd
mov [ esp ] 0xbb1d4cd0
push 0x9424f5d5
mov [ esp ] 0x76c6
lea esp [ esp + 0x4 ]
jmp rwxdata
push 0xbb1d4cd0
push esi
pushad
push [ esp + 0x4 ]
mov [ esp ] 0xb4a1
lea esp [ esp + 0x28 ]
jmp rwxdata
push ebx
lea esp [ esp + 0xc ]
jb rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
pushad
call sub_3b0606
stc
push 0x69b51dd0
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
pushad
clc
cmc
test si bx
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
jmp rwxdata
call sub_39e0e7
dec edi
xchg [ ebx + ecx * 2 + 0x4527d9c4 ] ch
std
push ebx
imul ebp [ eax + 0x35f99b01 ] 0x599a84ba
jmp rwxdata
jmp rwxdata
sar [ ebp - 0x2a ] cl

lea esp [ esp + 0x24 ]
jbe rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
sub_399d3e
lea esp [ esp + 0x44 ]
call sub_38ef01
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
pushfd
call sub_394ed7
add al 0xd3
cmp [ eax - 0x56ba1957 ] edi
dec edi
into
xor dh [ eax + 0x7daf7497 ]
fwait
movsb [ edi ] [ esi ]
rcr [ edx ] 0x1
insb
mul [ ebx + 0x7f ]
push 0xffffffc4
add al 0x90
mov esp 0xd424e3c8
cwde
pop edx
dec edi
sbb al bl
lea esp [ edi - 0x51698b2 ]
inc esp
ror esi 0x1
test [ edx - 0x30 ] 0x339eb417
sbb eax 0x41ffd213
iretd
pushfd
pushfd
push [ esp + 0x8 ]
retn 0xc
sub_399e10
push [ edi ]
pop [ esp + 0x4 ]
mov [ esp ] ebp
mov [ esp ] 0xdc
cmc
push 0x4923129e
cmp edi ebx
push [ esp ]
lea esp [ esp + 0xc ]
ja rwxdata
clc
jmp sub_394ed2
clc
sbb al 0x3c
ror al cl
neg al
sub ebx edi
shl al 0x2
bsr di ax
bt esi 0x1f
mov al cl
add ebx esp
sar edi cl
or al 0xcb
xor di 0x9526
shr di 0x7
mov edi ebx
cmp al cl
ror al 0x6
mov al 0x2e
stc
cmc
[ edi ]
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp ] 0xbc
lea esp [ esp + 0x4 ]
jne rwxdata
jle rwxdata
pushfd
mov [ edi - 0x1 ] 0x0
lea eax [ edx + 0x2b7c607e ]
cwde
lea eax [ edx + 0x1b3db359 ]
lahf
mov [ esp ] ebx
cwde
movsx ax dl
jmp rwxdata
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov esp esi
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
lea eax [ rwxdata ]
push esi
mov [ esp ] 0x7c
call sub_3ab713
pushad
push 0x354c939a
lea esp [ esp + 0x24 ]
call sub_38ef01
jmp rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call sub_39dfe7
pushad
lea esp [ esp + 0x20 ]
je rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
call sub_38eb4e
add [ eax ] al
inc edi
je rwxdata
lea edi [ ebx * 2 + 0x1c40efbd ]
lea edx [ ebx + 0x4 ]
movzx di dl
lea esi [ 0x3cb784e9 ]
movzx esi [ edx + 0x1a ]
mov di 0x7121
mov edi 0xfc0ea659
lea esi [ esi + edx + 0x1c ]
bswap di
mov edi 0xc4a6bc9
mov edi [ ebp + 0x8 ]
pushfd
call sub_38eeac
lea esp [ esp + 0x24 ]
jbe rwxdata
add eax esp
dec esi
xchg ebp eax
jl rwxdata
outsd
jne rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
mov bh 0x53
xchg edx eax
xchg [ esi + 0xb601cea ] bl
int1
xchg [ eax ] ebp
idiv ch
dec ebx
stosb [ edi ]
imul ebx [ edx - 0x7d ] 0xbc7140cd
cmc
test eax 0x83a64ffa
mov bl 0x27
push edi
mov [ 0xffffffffc04ea41a ] al
in eax dx
popad
mov al [ 0xffffffffefcc7b23 ]
or bl dl
and eax 0xa5e85879
mov esi 0xe816b303
push es
std

aam 0xc5
fcom [ ecx + esi * 4 ]
xchg [ ecx ] bh
scasb [ edi ]
inc ebx
or eax 0x3e03c61f
or eax [ eax - 0x3eddd3ef ]
inc [ eax - 0x27 ]
mov dh 0x8c
imul edi [ ecx - 0x104466c8 ] 0x21
cdq
fcomp st1
int 0xc3
in al dx
cmp dh [ ebx ]
adc ch dh
mov ah 0xa
mov ebx 0xd89921ef
fxch st5
retn
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add al al
enter 0x6604 0x89
and al 0xc
add al 0xdf
cmp ch 0x5a
bt di ax
mov [ esp ] cl
neg al
call j_sub_3ab756
lea eax [ rwxdata ]
jmp sub_3938a9
sub_399e8a
push [ esp ]
pushfd
jmp rwxdata
lea esp [ esp + 0x10 ]
je rwxdata
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
jge rwxdata
call sub_392fa8
cmp dh 0x52
pushad
cmc
cmp ah 0x2e
lea esp [ esp + 0x20 ]
sub_399e93
mov [ esp ] 0x8473
lea esp [ esp + 0x4 ]
jne rwxdata
push edx
bt ax bp
cmc
jmp sub_2174c4
bswap ax
mov eax [ edx + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
pushfd
pushfd
or ebx ebx
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
je rwxdata
seta bl
pop edi
not bl
pushad
mov esi [ esp + 0x20 ]
movzx bx al
jmp rwxdata
lea esi [ edx * 4 + 0x7483117e ]
mov esi eax
setbe ah
cwde
push ebx
call sub_3adc79
lea esp [ esp + 0x20 ]
ja rwxdata
mov bh 0x48
mov ebx [ esp + 0x24 ]
push edx
mov esp ebp
ja rwxdata
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
call sub_39d8b7
cmp dh bl
call 0xffffffffe30f57ec
hlt
jbe rwxdata
bswap bp
pop ebp
pushad
mov [ esp + 0x4 ] bl
push 0x941fd693
push [ esp + 0x24 ]
retn 0x2c
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_3ac5c9
lea esp [ esp + 0x4 ]
je rwxdata
pop ebp
push edi
mov [ esp ] bp
push [ esp + 0x4 ]
retn 0xc
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
not bl
call sub_39bc1f
arpl sp ax
cmc
pop edi
int 0x14
or ebp eax
jmp 0x5a8bac22
and bh dh
rcr di 0xe
add [ ebp - 0x4 ] ecx
rcr di cl
pushad
sub ecx 0x8
or edi edx
xadd bx di
pushad
shr ecx 0x1
push 0x54d1ddd9
setpe bh
btr bx di
xadd di bx
mov edi [ esi ]
rol bl cl
push [ esp + 0x4 ]
bt cx bx
rcl bl cl
add edi [ ebp + 0x10 ]
sbb bl ah
seto bh
add esi 0x8
add esp 0x48
call sub_39d414
mov [ esp ] edi
jmp rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
call sub_39f376
sets bh
mov ebx eax
pushad
cmp [ edi ] 0x23
push edx
lea esp [ esp + 0x24 ]
jne rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
pushfd
cmc
jmp sub_21762e
das
xor edx edx
call sub_2172b8
dec edx
jecxz rwxdata
jmp rwxdata
dec edx
rcl [ ecx ] cl
out 0x72 eax
loopne rwxdata
dec ecx
out dx al
mov [ 0x1e2dba51 ] eax
rcl [ ebx + edx * 2 + 0x7a ] 0x2f
cmp cl [ edi + 0x5f5e97b1 ]
shl [ ebx + esi * 4 ] cl
mov [ eax - 0x4e ] ebp
xor [ edi ] ebx
ja rwxdata
jbe rwxdata
retn
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
dec eax
xchg [ eax ] ebp
neg ch
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_399eca
not bl
not bl
pushfd
mov bl 0x2
lea esp [ esp + 0x48 ]
jmp rwxdata
pushad
push 0x354c939a
lea esp [ esp + 0x24 ]
call sub_38ef01
jmp rwxdata
call sub_39dfe7
pushad
lea esp [ esp + 0x20 ]
je rwxdata
call sub_38eb4e
add [ eax ] al
inc edi
je rwxdata
lea edi [ ebx * 2 + 0x1c40efbd ]
lea edx [ ebx + 0x4 ]
movzx di dl
lea esi [ 0x3cb784e9 ]
movzx esi [ edx + 0x1a ]
mov di 0x7121
mov edi 0xfc0ea659
lea esi [ esi + edx + 0x1c ]
bswap di
mov edi 0xc4a6bc9
mov edi [ ebp + 0x8 ]
pushfd
call sub_38eeac
lea esp [ esp + 0x24 ]
jbe rwxdata
add eax esp
dec esi
xchg ebp eax
jl rwxdata
outsd
jne rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
mov bh 0x53
xchg edx eax
xchg [ esi + 0xb601cea ] bl
int1
xchg [ eax ] ebp
idiv ch
dec ebx
stosb [ edi ]
imul ebx [ edx - 0x7d ] 0xbc7140cd
cmc
test eax 0x83a64ffa
mov bl 0x27
push edi
mov [ 0xffffffffc04ea41a ] al
in eax dx
popad
mov al [ 0xffffffffefcc7b23 ]
or bl dl
and eax 0xa5e85879
mov esi 0xe816b303
push es
std

aam 0xc5
fcom [ ecx + esi * 4 ]
xchg [ ecx ] bh
scasb [ edi ]
inc ebx
or eax 0x3e03c61f
or eax [ eax - 0x3eddd3ef ]
inc [ eax - 0x27 ]
mov dh 0x8c
imul edi [ ecx - 0x104466c8 ] 0x21
cdq
fcomp st1
int 0xc3
in al dx
cmp dh [ ebx ]
adc ch dh
mov ah 0xa
mov ebx 0xd89921ef
fxch st5
retn
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add al al
enter 0x6604 0x89
and al 0xc
add al 0xdf
cmp ch 0x5a
bt di ax
mov [ esp ] cl
neg al
call j_sub_3ab756
lea eax [ rwxdata ]
jmp sub_3938a9
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_399eda
test bl 0xb5
cmp ch dl
add edx 0x11c
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
push esi
xchg si di
movzx esi [ edx + 0x1a ]
pushad
not di
lea esi [ esi + edx + 0x1c ]
pushfd
mov edi [ ebp + 0x8 ]
mov [ esp + 0x4 ] 0xf510
push ecx
mov [ esp + 0x8 ] 0x1
mov [ esp ] dl
lea esp [ esp + 0x2c ]
call sub_217c14
jmp rwxdata
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
push edx
bt ax bp
cmc
jmp sub_2174c4
movzx ax dl
mov ah 0x51
mov ax 0xcc89
mov eax [ edx + 0x8 ]
pushad
pushad
mov [ esp ] 0x64
lea esp [ esp + 0x40 ]
jmp rwxdata
pushfd
pushfd
or ebx ebx
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
je rwxdata
seta bl
pop edi
not bl
pushad
mov esi [ esp + 0x20 ]
movzx bx al
jmp rwxdata
lea esi [ edx * 4 + 0x7483117e ]
mov esi eax
setbe ah
cwde
push ebx
call sub_3adc79
lea esp [ esp + 0x20 ]
ja rwxdata
mov bh 0x48
mov ebx [ esp + 0x24 ]
push edx
mov esp ebp
ja rwxdata
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
call sub_39d8b7
cmp dh bl
call 0xffffffffe30f57ec
hlt
jbe rwxdata
bswap bp
pop ebp
pushad
mov [ esp + 0x4 ] bl
push 0x941fd693
push [ esp + 0x24 ]
retn 0x2c
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_3ac5c9
lea esp [ esp + 0x4 ]
je rwxdata
pop ebp
push edi
mov [ esp ] bp
push [ esp + 0x4 ]
retn 0xc
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
not bl
call sub_39bc1f
arpl sp ax
cmc
pop edi
int 0x14
or ebp eax
jmp 0x5a8bac22
and bh dh
rcr di 0xe
add [ ebp - 0x4 ] ecx
rcr di cl
pushad
sub ecx 0x8
or edi edx
xadd bx di
pushad
shr ecx 0x1
push 0x54d1ddd9
setpe bh
btr bx di
xadd di bx
mov edi [ esi ]
rol bl cl
push [ esp + 0x4 ]
bt cx bx
rcl bl cl
add edi [ ebp + 0x10 ]
sbb bl ah
seto bh
add esi 0x8
add esp 0x48
call sub_39d414
mov [ esp ] edi
jmp rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
call sub_39f376
sets bh
mov ebx eax
pushad
cmp [ edi ] 0x23
push edx
lea esp [ esp + 0x24 ]
jne rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
pushfd
cmc
jmp sub_21762e
das
xor edx edx
call sub_2172b8
dec edx
jecxz rwxdata
jmp rwxdata
dec edx
rcl [ ecx ] cl
out 0x72 eax
loopne rwxdata
dec ecx
out dx al
mov [ 0x1e2dba51 ] eax
rcl [ ebx + edx * 2 + 0x7a ] 0x2f
cmp cl [ edi + 0x5f5e97b1 ]
shl [ ebx + esi * 4 ] cl
mov [ eax - 0x4e ] ebp
xor [ edi ] ebx
ja rwxdata
jbe rwxdata
retn
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
dec eax
xchg [ eax ] ebp
neg ch
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_39a23e
lea esp [ esp + 0x28 ]
jae rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
sub cl dl
neg ch
mov ebx eax
lea edi [ esi * 2 - 0x51dcdbdd ]
or ch ch
mov cl 0xe2
bswap di
mov edi eax
and ch dl
or cx si
mov ecx 0x104
pushad
mov [ esp ] ch
bt bx ax
cmp bh 0xb9
xor al al
mov [ esp ] 0xba
test ch 0x25
cmp cl 0xdd
[ edi ]
call sub_39fe7e
bt bx 0xc
test ch 0xbe
jmp rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
or eax eax
pushfd
jmp rwxdata
lea esp [ esp + 0x4 ]
je rwxdata
call sub_38eb4e
add [ eax ] al
inc edi
je rwxdata
push ebx
mov [ esp ] 0x86232c41
mov ebx eax
mov [ esp ] dh
lea eax [ ebp - 0x8 ]
call sub_392974
enter 0xbb61 0x3a
stosd [ edi ]
xchg ebp eax
sub [ ebx ] edi
pop ebp
push ds
push ecx
cmpsd [ esi ] [ edi ]
test bh dl
call 0xffffffff916a7922
mov bl 0x10
idiv ah
int1
adc dl [ eax - 0x6a ]
jge rwxdata
add eax esp
dec esi
xchg ebp eax
jl rwxdata
outsd
jne rwxdata
fmul [ 0xffffffffef96f4b5 ]
aaa
mov [ ebx - 0x19 ] 0x7044db5f
xlat
insd
inc ebx
std
add ebp [ ebp + 0x2b ]
leave
cmc
shr al 0x1
scasd [ edi ]
lds ecx [ ebx + edi - 0x58 ]
stosb [ edi ]
test [ ebp + 0x7a6da938 ] ebp
mov eax rwxdata
out 0xd7 eax
pop ecx
mov ebp 0xdf725a6d
pop edx
salc
cmp eax 0xf09d4fbb
fnsave [ edx + 0x48f81b30 ]
frstor [ ebp - 0x7d ]
xor [ esi - 0x2bf3eae6 ] dh
cmp [ edx + ebp - 0x29aa301e ] 0xd8
int3
mov bh 0x53
xchg edx eax
xchg [ esi + 0xb601cea ] bl
int1
xchg [ eax ] ebp
idiv ch
dec ebx
stosb [ edi ]
imul ebx [ edx - 0x7d ] 0xbc7140cd
cmc
test eax 0x83a64ffa
mov bl 0x27
push edi
mov [ 0xffffffffc04ea41a ] al
in eax dx
popad
mov al [ 0xffffffffefcc7b23 ]
or bl dl
and eax 0xa5e85879
mov esi 0xe816b303
push es
std

aam 0xc5
fcom [ ecx + esi * 4 ]
xchg [ ecx ] bh
scasb [ edi ]
inc ebx
or eax 0x3e03c61f
or eax [ eax - 0x3eddd3ef ]
inc [ eax - 0x27 ]
mov dh 0x8c
imul edi [ ecx - 0x104466c8 ] 0x21
cdq
fcomp st1
int 0xc3
in al dx
cmp dh [ ebx ]
adc ch dh
mov ah 0xa
mov ebx 0xd89921ef
fxch st5
retn
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add al al
enter 0x6604 0x89
and al 0xc
add al 0xdf
cmp ch 0x5a
bt di ax
mov [ esp ] cl
neg al
call j_sub_3ab756
lea eax [ rwxdata ]
jmp sub_3938a9
sub_39a41e
cmp dl 0x69
stc
pushad
add edi eax
pushfd
pushfd
call sub_39523f
mov [ esp + 0x3c ] 0xcfa006a2
mov [ esp + 0x4 ] ah
push ecx
pushfd
lea esp [ esp + 0x44 ]
jmp rwxdata
jmp rwxdata
pushad
mov [ esp ] ch
mov [ esp ] 0x64406dd
mov [ esp + 0x1c ] ecx
jmp sub_3b0398
sub_39a490
shl cl cl
pushad
mov edi eax
lea ecx [ 0x26ae236e ]
mov ecx 0x104
pushfd
cmc
bt sp di
push esi
xor al al
call sub_3ab6db
mov [ ebp - 0x10 ] ecx
cmp ebp 0x69ac92fd
sbb cl ah
setae cl
not cl
mov ecx [ ebp + 0xc ]
pushfd
cmp ecx 0xffff
push [ esp + 0xc ]
jmp rwxdata
lea esp [ esp + 0x30 ]
jbe rwxdata
test ch dl
bt si 0xe
sub ecx [ edx + 0x10 ]
pushfd
pushad
cmc
cmp dl bh
cmp ecx [ edx + 0x14 ]
jmp rwxdata
rcr bl 0x3
cmc
mov edi [ edx + 0x24 ]
bts cx ax
stc
bswap cx
neg bh
add edi eax
bswap bx
mov ebx [ edx + 0x20 ]
mov cl ch
clc
stc
add ebx eax
bts cx 0xe
mov [ ebp - 0x8 ] 0x0
adc ch cl
dec cl
neg cl
bsr ecx eax
mov ecx [ edx + 0x18 ]
stc
push 0x69b51dd0
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
pushad
push ebp
push 0x447ddc79
lea esp [ esp + 0x4c ]
jae rwxdata
pushad
jmp rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
push eax
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
jmp rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
pushfd
xor di bx
rcl edi cl
mov edi [ edx + 0x1c ]
push [ esp ]
call sub_392c5c
lea esp [ esp + 0x24 ]
jbe rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
sub_39a4f2
push [ esp ]
push [ esp + 0x4 ]
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
call sub_38eb4e
add [ eax ] al
inc edi
je rwxdata
jmp rwxdata
add eax esp
dec esi
xchg ebp eax
jl rwxdata
outsd
jne rwxdata
mov [ ebp - 0x4 ] eax
pushad
xchg [ esp + 0x1c ] eax
pushfd
mov [ esp + 0x1c ] 0x0
jmp rwxdata
mov bh 0x53
xchg edx eax
xchg [ esi + 0xb601cea ] bl
int1
xchg [ eax ] ebp
idiv ch
dec ebx
stosb [ edi ]
imul ebx [ edx - 0x7d ] 0xbc7140cd
cmc
test eax 0x83a64ffa
mov bl 0x27
push edi
mov [ 0xffffffffc04ea41a ] al
in eax dx
popad
mov al [ 0xffffffffefcc7b23 ]
or bl dl
and eax 0xa5e85879
mov esi 0xe816b303
push es
std

aam 0xc5
fcom [ ecx + esi * 4 ]
xchg [ ecx ] bh
scasb [ edi ]
inc ebx
or eax 0x3e03c61f
or eax [ eax - 0x3eddd3ef ]
inc [ eax - 0x27 ]
mov dh 0x8c
imul edi [ ecx - 0x104466c8 ] 0x21
cdq
fcomp st1
int 0xc3
in al dx
cmp dh [ ebx ]
adc ch dh
mov ah 0xa
mov ebx 0xd89921ef
fxch st5
retn
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add al al
enter 0x6604 0x89
and al 0xc
add al 0xdf
cmp ch 0x5a
bt di ax
mov [ esp ] cl
neg al
call j_sub_3ab756
lea eax [ rwxdata ]
jmp sub_3938a9
setge ah
lea esp [ esp + 0x1c ]
jne rwxdata
pushad
not ax
lea eax [ ebp + 0x69a3b67d ]
lea eax [ LocalAlloc@IAT ]
pushfd
mov [ esp + 0x20 ] rwxdata
mov [ esp ] 0x6cf0ad43
push [ eax ]
pop [ esp + 0x1c ]
pushfd
pushfd
push [ esp + 0x8 ]
push esi
push [ esp + 0x2c ]
retn 0x30
lea eax [ LocalAlloc@IAT ]
call sub_392f7b
sbb bh cl
cmp eax 0xa73311a4
inc ecx
jne rwxdata
or [ ebx - 0x52d579bd ] esi
dec al
das
push edi
adc [ esi + 0x19cc8f1b ] ch
mov eax [ 0xffffffffff92f3e8 ]
dec [ edi ]
popfd
les ecx [ ebp + 0xf1c2464 ]
test ecx edi
add [ es : eax ] al
or eax 0xda74e1c8
sbb [ ebx ] ecx
0xa9a73e03 0x3c12
sub_39a510
pushfd
pushad
inc ecx
lea esp [ esp + 0x24 ]
pushfd
call sub_394ed7
add al 0xd3
cmp [ eax - 0x56ba1957 ] edi
dec edi
into
xor dh [ eax + 0x7daf7497 ]
fwait
movsb [ edi ] [ esi ]
rcr [ edx ] 0x1
insb
mul [ ebx + 0x7f ]
push 0xffffffc4
add al 0x90
mov esp 0xd424e3c8
cwde
pop edx
dec edi
sbb al bl
lea esp [ edi - 0x51698b2 ]
inc esp
ror esi 0x1
test [ edx - 0x30 ] 0x339eb417
sbb eax 0x41ffd213
iretd
sub_39a8ca
add ecx edx
mov [ esp ] 0x25
pushad
mov [ ebp - 0x10 ] ecx
pushfd
mov ecx [ ebp + 0xc ]
push 0x9eeb7b95
cmp di bp
push 0x12e5e2bd
cmp ecx 0xffff
call sub_38ee11
cld
jmp rwxdata
sub [ edx - 0x203019b0 ] ebx
xchg edi eax
and eax 0x77af0412
inc esp
ror esi 0x1
ficom [ esi - 0x5da14ce9 ]
pop esp
vmptrst [ edi + 0x7 ]
iretd
sub_39b282
mov [ esp + 0x4 ] di
lea esp [ esp + 0x10 ]
je rwxdata
not bl
call sub_39bc1f
arpl sp ax
cmc
pop edi
int 0x14
or ebp eax
jmp 0x5a8bac22
shr cl cl
btr eax edi
movsx ax bl
sub ebx ebx
xor cl al
push 0x6cc86a3
add cl 0xc
pushad
mov [ ebp - 0x4 ] ebx
pushfd
test bl 0x8b
mov eax edx
sar cx cl
shr eax 0x10
lea esp [ esp + 0x28 ]
inc ecx
neg cl
bsf cx bx
btr cx 0x7
mov ecx [ esi + 0x4 ]
pushad
call sub_3ac03d
call sub_2173ac
add edx edx
add ecx [ ebp - 0x35 ]
sub ah al
sub_39b494
pushad
lea esp [ esp + 0x28 ]
jne rwxdata
jmp rwxdata
rol di 0x6
bt dx cx
adc di 0x1770
shld di si cl
mov edi [ edx + 0x24 ]
pushad
push 0xac1b4dd6
bt sp dx
cmc
add edi eax
test bl 0x1b
cmc
pushad
movzx ecx [ edi + ecx * 2 ]
jmp rwxdata
pushad
mov [ esp + 0x1c ] eax
mov al [ esp + 0xc ]
setne al
setpo al
mov al ah
lodsb [ esi ]
bt eax eax
xor al 0x6e
mov [ esp + 0x8 ] cl
pushad
call j_sub_392f6b
adc edi 0xbf81fc5f
mov di [ esp + 0x4 ]
sbb di 0x6bd5
mov edi [ edx + 0x1c ]
cmp al 0xc6
pushfd
add edi eax
call sub_392fd5
ja rwxdata
pop [ edx + 0x3a01d8fe ]
pop es
int3
outsd
jbe rwxdata
mov bl 0xf2
fild [ ecx + ebx * 2 - 0x59 ]
fxch st6
clc
in al 0xe7
in al dx
ficomp [ esi - 0x7e8ca790 ]
and dl [ ebx - 0x7c0edcaf ]
sub ebp [ esi + 0x9e13a48 ]
adc [ esi + 0x6b00d10f ] ch
scasb [ edi ]
aas
mov ah 0x9e
aaa
or ch [ edi + 0x5b5e9791 ]
salc
push esp
xchg ebx eax
mov [ 0xffffffff8b6cd60f ] al
dec edi
mov dl [ esi ]
mov cl 0x35
nop
bound ebx [ esp + ebx * 2 ]
xor al 0x19
sbb ecx [ eax + ebx * 8 - 0x18280b10 ]
loop rwxdata
aad 0xf0
enter 0x665a 0x0
adc [ esi - 0x584bf2f4 ] ch
inc edi
test ax 0x391b
or eax eax
pushfd
jmp rwxdata
xchg [ ebp + 0x46 ] ch
xchg esp eax
out dx al
xor eax 0x51e22a8e
and [ eax + 0x51efa9a7 ] edx
inc ecx
loop rwxdata
pushad
push [ esp + 0x4 ]
lea esp [ esp + 0x30 ]
jne rwxdata
pop es
mov ecx [ esi + 0x4 ]
pushad
call sub_3ac03d
call sub_2173ac
add edx edx
add ecx [ ebp - 0x35 ]
sub ah al
out dx eax
cdq
inc edx
call sub_38eb4e
add [ eax ] al
inc edi
je rwxdata
shl cx cl
sub cx bp
btr ecx 0x11
mov ecx [ ebx ]
cmc
or ecx ecx
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
add eax esp
dec esi
xchg ebp eax
jl rwxdata
outsd
jne rwxdata
push 0x7c422a24
lea edx [ esp + 0x415500fc ]
not si
pushad
lea edx [ ebx + 0x4 ]
push esp
movzx esi [ edx + 0x1a ]
lea edi [ eax + 0x129e402 ]
call j_sub_392ad6
pushfd
push [ esp ]
mov [ esp + 0x4 ] eax
lahf
mov [ esp ] ebx
movzx ax cl
cwde
bswap eax
lea eax [ ebp - 0x4 ]
pushad
xchg [ esp + 0x1c ] eax
not al
push [ esp + 0x4 ]
movzx ax dl
mov [ esp + 0x1c ] 0xb
movsx ax dl
lea eax [ rwxdata ]
jmp rwxdata
mov bh 0x53
xchg edx eax
xchg [ esi + 0xb601cea ] bl
int1
xchg [ eax ] ebp
idiv ch
dec ebx
stosb [ edi ]
imul ebx [ edx - 0x7d ] 0xbc7140cd
cmc
test eax 0x83a64ffa
mov bl 0x27
push edi
mov [ 0xffffffffc04ea41a ] al
in eax dx
popad
mov al [ 0xffffffffefcc7b23 ]
or bl dl
and eax 0xa5e85879
mov esi 0xe816b303
push es
std

aam 0xc5
fcom [ ecx + esi * 4 ]
xchg [ ecx ] bh
scasb [ edi ]
inc ebx
or eax 0x3e03c61f
or eax [ eax - 0x3eddd3ef ]
inc [ eax - 0x27 ]
mov dh 0x8c
imul edi [ ecx - 0x104466c8 ] 0x21
cdq
fcomp st1
int 0xc3
in al dx
cmp dh [ ebx ]
adc ch dh
mov ah 0xa
mov ebx 0xd89921ef
fxch st5
retn
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add al al
enter 0x6604 0x89
and al 0xc
add al 0xdf
cmp ch 0x5a
bt di ax
mov [ esp ] cl
neg al
call j_sub_3ab756
lea eax [ rwxdata ]
jmp sub_3938a9
pushad
jmp rwxdata
pushfd
mov [ esp + 0x3c ] rwxdata
push 0x8a04adee
pushfd
push 0x22a2c932
push [ eax ]
pop [ esp + 0x44 ]
mov [ esp ] di
push [ esp ]
push [ esp + 0x48 ]
retn 0x4c
sub_39b4ce
test ah ah
push [ esp + 0x4 ]
jmp rwxdata
lea esp [ esp + 0x40 ]
jne rwxdata
pushfd
pushad
rcr al cl
rcr al cl
mov al [ ecx ]
stc
cmc
jmp sub_39dab6
push ebx
jmp rwxdata
mov [ esp ] edi
jmp rwxdata
call sub_39f376
sets bh
mov ebx eax
pushad
cmp [ edi ] 0x23
push edx
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
cmc
jmp sub_21762e
das
xor edx edx
call sub_2172b8
dec edx
jecxz rwxdata
dec edx
rcl [ ecx ] cl
out 0x72 eax
loopne rwxdata
dec ecx
out dx al
mov [ 0x1e2dba51 ] eax
rcl [ ebx + edx * 2 + 0x7a ] 0x2f
cmp cl [ edi + 0x5f5e97b1 ]
shl [ ebx + esi * 4 ] cl
mov [ eax - 0x4e ] ebp
xor [ edi ] ebx
jbe rwxdata
retn
dec eax
xchg [ eax ] ebp
neg ch
sub_39bbb3
clc
test edi edi
pushfd
push 0xf4e3e442
push [ esp + 0x4 ]
lea esp [ esp + 0x44 ]
jmp rwxdata
call sub_38e6ff
movzx ecx [ edi + ecx * 2 ]
pushfd
mov edi [ edx + 0x1c ]
bt esi ebx
push [ esp + 0x4 ]
cmp bl bl
add edi eax
clc
push 0xcda511c0
mov edi [ edi + ecx * 4 ]
call sub_392d65
xchg esi eax
xchg edi eax
sub [ ebx ] bl
mov eax 0x7f300f9a
add ch bl
mov dl 0x77
loop rwxdata
push edx
mov al 0x37
mov al 0x92
or esi [ 0xffffffffc47a71be ]
push edx
xchg ecx eax
inc edx
std
cmp edi [ edx - 0x322fa464 ]
inc edi
scasb [ edi ]
test eax 0xa921bf35
popad
shl [ edx - 0x6c ] 0x1
add al 0x99
mov [ ecx ] gs
mov esi 0x821f793a
xor [ 0x4b3c82d7 ] 0x2d

sub_39bbe1
lea esp [ esp + 0x8 ]
je rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
clc
bt ecx 0x8
clc
add eax edi
jmp rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
jmp rwxdata
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jmp rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
ja rwxdata
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_39bc1f
movsx si al
lea esi [ esi + 0x20ad4592 ]
mov esi [ esp + 0x4 ]
call sub_39d457
imul edx edx 0xa
stc
add edx eax
mov [ esp + 0x4 ] al
push [ esp ]
push [ esp ]
push [ esp + 0x4 ]
lea esp [ esp + 0x34 ]
jmp rwxdata
shl al 0x6
rol al 0x1
rol al cl
add edi 0x1
shl al 0x5
neg al
mov al [ edi ]
cmc
test al al
pushad
push 0xcef31194
mov [ esp ] ch
lea esp [ esp + 0x24 ]
rcl al cl
clc
setbe ch
rol ecx 0x18
mov edi edx
pushfd
cmc
jmp sub_21762e
cmc
sub al 0x30
pushad
call sub_3ae00b
mov esp 0x4ec07e7d
xchg ebp eax
jl rwxdata
mov fs [ eax - 0x3d4ffb22 ]
loop rwxdata
cmp al 0x67
jbe rwxdata
mov al [ 0x10e4e14b ]
push ds
out dx eax
adc cl [ esi - 0x15f3b18c ]
add dl [ edi + eax * 8 ]
jl rwxdata
add eax [ eax - 0x31e1275a ]
loopne rwxdata
je rwxdata
and al 0x8d
and al 0x24
leave
pushfd
jle rwxdata
jmp 0x14bf7242
loop rwxdata
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x663c5 ]
or eax 0xef5f6225
inc ecx
mov dh ch
loop rwxdata
out dx eax
jpo rwxdata
adc [ ecx + ebp * 8 - 0x1c ] 0xd21484a2
0xab77e5b1 0xd5e8
and [ esi - 0x1f31e128 ] 0xe2
xor ecx [ eax - 0x54e1b488 ]
loop rwxdata
test [ ecx ] 0x628452dc
mov ebp 0xfff99c3b
adc dl [ esi - 0x11 ]
sbb [ ebp - 0x738b1058 ] cl
sbb bl dh
out 0x6a al
cld
out dx eax
sbb cl [ edx + ebp + 0x757d7790 ]
cmp al 0x1f
lds ecx [ edi ]
mov ah 0x32
or eax 0xdab27771
or eax 0x28178423
into
cmc
jge rwxdata
jg rwxdata
cmp ebx ecx
or eax 0x78816320
fxch st2
xchg ecx eax
sub [ ebp + ecx * 8 + 0x379dca05 ] bl
mov al [ 0x467178ef ]
pop edi
inc ecx
mov [ ecx ] ecx
hlt
sub_39bc65
mov [ esp + 0x4 ] 0x37
[ edi ] [ esi ]
pop esi
mov [ esp ] 0x7b71
not esi
pop esi
pop esi
push 0x7b37d417
push [ esp ]
pushfd
mov [ esp + 0x4 ] bl
lea esp [ esp + 0xc ]
jmp rwxdata
jmp rwxdata
pushad
push 0x354c939a
lea esp [ esp + 0x24 ]
call sub_38ef01
jmp rwxdata
call sub_39dfe7
pushad
lea esp [ esp + 0x20 ]
je rwxdata
call sub_38eb4e
add [ eax ] al
inc edi
je rwxdata
lea edi [ ebx * 2 + 0x1c40efbd ]
lea edx [ ebx + 0x4 ]
movzx di dl
lea esi [ 0x3cb784e9 ]
movzx esi [ edx + 0x1a ]
mov di 0x7121
mov edi 0xfc0ea659
lea esi [ esi + edx + 0x1c ]
bswap di
mov edi 0xc4a6bc9
mov edi [ ebp + 0x8 ]
pushfd
call sub_38eeac
lea esp [ esp + 0x24 ]
jbe rwxdata
add eax esp
dec esi
xchg ebp eax
jl rwxdata
outsd
jne rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
mov bh 0x53
xchg edx eax
xchg [ esi + 0xb601cea ] bl
int1
xchg [ eax ] ebp
idiv ch
dec ebx
stosb [ edi ]
imul ebx [ edx - 0x7d ] 0xbc7140cd
cmc
test eax 0x83a64ffa
mov bl 0x27
push edi
mov [ 0xffffffffc04ea41a ] al
in eax dx
popad
mov al [ 0xffffffffefcc7b23 ]
or bl dl
and eax 0xa5e85879
mov esi 0xe816b303
push es
std

aam 0xc5
fcom [ ecx + esi * 4 ]
xchg [ ecx ] bh
scasb [ edi ]
inc ebx
or eax 0x3e03c61f
or eax [ eax - 0x3eddd3ef ]
inc [ eax - 0x27 ]
mov dh 0x8c
imul edi [ ecx - 0x104466c8 ] 0x21
cdq
fcomp st1
int 0xc3
in al dx
cmp dh [ ebx ]
adc ch dh
mov ah 0xa
mov ebx 0xd89921ef
fxch st5
retn
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add al al
enter 0x6604 0x89
and al 0xc
add al 0xdf
cmp ch 0x5a
bt di ax
mov [ esp ] cl
neg al
call j_sub_3ab756
lea eax [ rwxdata ]
jmp sub_3938a9
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_39bd57
lea esp [ esp + 0x30 ]
jne rwxdata
call sub_39d414
mov [ esp ] edi
jmp rwxdata
bsr cx bp
mov ecx [ ebp - 0x4 ]
call sub_39d986
call sub_39f376
sets bh
mov ebx eax
pushad
cmp [ edi ] 0x23
push edx
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
cmc
jmp sub_21762e
das
xor edx edx
call sub_2172b8
dec edx
jecxz rwxdata
dec edx
rcl [ ecx ] cl
out 0x72 eax
loopne rwxdata
dec ecx
out dx al
mov [ 0x1e2dba51 ] eax
rcl [ ebx + edx * 2 + 0x7a ] 0x2f
cmp cl [ edi + 0x5f5e97b1 ]
shl [ ebx + esi * 4 ] cl
mov [ eax - 0x4e ] ebp
xor [ edi ] ebx
jbe rwxdata
retn
dec eax
xchg [ eax ] ebp
neg ch
sub_39bf52
lea esp [ esp + 0x44 ]
jne rwxdata
jle rwxdata
lahf
mov [ edi - 0x1 ] 0x0
cwde
push ebx
push 0x48fd55a2
lea eax [ rwxdata ]
jmp rwxdata
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov esp esi
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
push [ esp ]
pushfd
pushfd
mov [ esp + 0xc ] rwxdata
call sub_3990ee
xor al al
call j_sub_39c501
mov cl 0x20
push es
in eax dx
dec edi
xchg esi eax
push ds
xor [ ebx + 0x77b28541 ] dh
loop rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
add bl bl
and [ ebx - 0x75 ] edx
dec esi
js rwxdata
lahf
xchg ecx eax
push eax
inc ebp
clc
pop ecx
mov bh 0x8a
movsb [ edi ] [ esi ]
inc ebx
lds ebp [ ecx + ebp ]
mov sp 0x9c3b
cmpsb [ esi ] [ edi ]
mov [ ebx - 0x1b ] gs
or al 0xc8
add edi edx
enter 0x5f7f 0x9e
pop es
and eax 0xc5c14558
mov dr6 esi
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
and al 0x8
call sub_217c14
pushfd
pushfd
pushfd
pushfd
lea esp [ esp + 0x10 ]
jne rwxdata
mov esi 0x50af1085
mov al 0xf5
loop rwxdata
push edx
bt ax bp
cmc
jmp sub_2174c4
pushfd
mov eax [ edx + 0x8 ]
mov [ esp ] bl
pushad
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
cmp [ eax ] ecx
int 0x6b
mov cl [ esi - 0x59 ]
mov edx 0x4af6863e
xchg edx eax
inc edx
cli
or al 0xc8
pushfd
pushfd
or ebx ebx
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
je rwxdata
je rwxdata
cld
int1
loope rwxdata
seta bl
pop edi
not bl
pushad
mov esi [ esp + 0x20 ]
movzx bx al
lea esi [ edx * 4 + 0x7483117e ]
mov esi eax
setbe ah
cwde
push ebx
call sub_3adc79
lea esp [ esp + 0x20 ]
ja rwxdata
jmp rwxdata
movzx ebx al
push ebp
push ebp
jo rwxdata
mov bh 0x48
mov ebx [ esp + 0x24 ]
push edx
mov esp ebp
ja rwxdata
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
call sub_39d8b7
cmp dh bl
call 0xffffffffe30f57ec
hlt
sub al 0xff
push edi
imul ebp [ esi - 0x4f ] 0x2
retn 0xb305
jbe rwxdata
bswap bp
pop ebp
pushad
mov [ esp + 0x4 ] bl
push 0x941fd693
push [ esp + 0x24 ]
retn 0x2c
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_3ac5c9
lea esp [ esp + 0x4 ]
je rwxdata
pop ebp
push edi
mov [ esp ] bp
push [ esp + 0x4 ]
retn 0xc
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
not bl
call sub_39bc1f
arpl sp ax
cmc
pop edi
int 0x14
or ebp eax
jmp 0x5a8bac22
and bh dh
rcr di 0xe
add [ ebp - 0x4 ] ecx
rcr di cl
pushad
sub ecx 0x8
or edi edx
xadd bx di
pushad
shr ecx 0x1
push 0x54d1ddd9
setpe bh
btr bx di
xadd di bx
mov edi [ esi ]
rol bl cl
push [ esp + 0x4 ]
bt cx bx
rcl bl cl
add edi [ ebp + 0x10 ]
sbb bl ah
seto bh
add esi 0x8
add esp 0x48
call sub_39d414
mov [ esp ] edi
jmp rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
call sub_39f376
sets bh
mov ebx eax
pushad
cmp [ edi ] 0x23
push edx
lea esp [ esp + 0x24 ]
jne rwxdata
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
pushfd
cmc
jmp sub_21762e
das
xor edx edx
call sub_2172b8
dec edx
jecxz rwxdata
jmp rwxdata
dec edx
rcl [ ecx ] cl
out 0x72 eax
loopne rwxdata
dec ecx
out dx al
mov [ 0x1e2dba51 ] eax
rcl [ ebx + edx * 2 + 0x7a ] 0x2f
cmp cl [ edi + 0x5f5e97b1 ]
shl [ ebx + esi * 4 ] cl
mov [ eax - 0x4e ] ebp
xor [ edi ] ebx
ja rwxdata
jbe rwxdata
retn
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
dec eax
xchg [ eax ] ebp
neg ch
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_39bf79
call sub_3991df
dec edi
dec esp
inc ebp
inc ecx
push ebp
push esp
xor esi [ edx ]
inc esp
dec esp
dec esp
add ah cl
popfd
jmp sub_3a000a
sub_39c41a
jmp rwxdata
lea esp [ esp + 0x48 ]
jne rwxdata
jle rwxdata
lea eax [ esp + 0x28c0648f ]
cwde
bswap ax
mov [ edi - 0x1 ] 0x0
sets al
not al
push ebx
pushad
lea eax [ esp - 0x410efdf5 ]
call sub_399cb9
mov [ esp ] 0x8255
lea esp [ esp + 0x8 ]
ja rwxdata
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov esp esi
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
test dh ch
test bp di
pushad
cmp ecx [ ebp - 0x4 ]
call sub_39feab
cmp eax [ ebp - 0x10 ]
pushfd
push [ esp ]
pushad
call sub_393bb9
mov [ esp + 0x4 ] 0x3504a534
lea esp [ esp + 0x4 ]
jns rwxdata
pushfd
push esi
jmp rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
pushfd
mov [ esp ] 0xbb1d4cd0
push 0x9424f5d5
mov [ esp ] 0x76c6
lea esp [ esp + 0x4 ]
jmp rwxdata
push 0xbb1d4cd0
push esi
pushad
push [ esp + 0x4 ]
mov [ esp ] 0xb4a1
lea esp [ esp + 0x28 ]
jmp rwxdata
push ebx
lea esp [ esp + 0xc ]
jb rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
pushad
call sub_3b0606
stc
push 0x69b51dd0
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
pushad
clc
cmc
test si bx
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
jmp rwxdata
call sub_39e0e7
dec edi
xchg [ ebx + ecx * 2 + 0x4527d9c4 ] ch
std
push ebx
imul ebp [ eax + 0x35f99b01 ] 0x599a84ba
jmp rwxdata
jmp rwxdata
sar [ ebp - 0x2a ] cl

lea esp [ esp + 0x24 ]
jbe rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
sub_39c428
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
jle rwxdata
cmc
imul edx edx 0xa
bt ax 0xf
clc
pushfd
push 0xebc5579e
add edx eax
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov esp esi
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
shl al 0x6
rol al 0x1
rol al cl
add edi 0x1
shl al 0x5
neg al
mov al [ edi ]
cmc
test al al
pushad
push 0xcef31194
mov [ esp ] ch
lea esp [ esp + 0x24 ]
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
rcl al cl
clc
setbe ch
rol ecx 0x18
mov edi edx
pushfd
cmc
jmp sub_21762e
cmc
sub al 0x30
pushad
call sub_3ae00b
mov esp 0x4ec07e7d
xchg ebp eax
jl rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
mov fs [ eax - 0x3d4ffb22 ]
loop rwxdata
cmp al 0x67
jbe rwxdata
mov al [ 0x10e4e14b ]
push ds
out dx eax
adc cl [ esi - 0x15f3b18c ]
add dl [ edi + eax * 8 ]
jl rwxdata
add eax [ eax - 0x31e1275a ]
loopne rwxdata
je rwxdata
and al 0x8d
and al 0x24
leave
pushfd
jle rwxdata
jmp 0x14bf7242
loop rwxdata
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x663c5 ]
or eax 0xef5f6225
inc ecx
mov dh ch
loop rwxdata
out dx eax
jpo rwxdata
adc [ ecx + ebp * 8 - 0x1c ] 0xd21484a2
0xab77e5b1 0xd5e8
and [ esi - 0x1f31e128 ] 0xe2
xor ecx [ eax - 0x54e1b488 ]
loop rwxdata
test [ ecx ] 0x628452dc
mov ebp 0xfff99c3b
adc dl [ esi - 0x11 ]
sbb [ ebp - 0x738b1058 ] cl
sbb bl dh
out 0x6a al
cld
out dx eax
sbb cl [ edx + ebp + 0x757d7790 ]
cmp al 0x1f
lds ecx [ edi ]
mov ah 0x32
or eax 0xdab27771
or eax 0x28178423
into
cmc
jge rwxdata
jg rwxdata
cmp ebx ecx
or eax 0x78816320
fxch st2
xchg ecx eax
sub [ ebp + ecx * 8 + 0x379dca05 ] bl
mov al [ 0x467178ef ]
pop edi
inc ecx
mov [ ecx ] ecx
hlt
sub_39c501
[ edi ]
pushad
call sub_395141
sub [ edi - 0x3c7e937b ] bh
sbb [ edx - 0x67c885ab ] eax
mov esp 0xde636ad6
dec eax
scasd [ edi ]
or [ ebx ] bh
pushfd
xchg edi eax
jns rwxdata
ficomp [ ecx ]
jmp esi
sub_39c893
jmp rwxdata
bt sp di
push [ esp + 0x4 ]
test edi edi
push esi
pushfd
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
call sub_38e6ff
movzx ecx [ edi + ecx * 2 ]
pushfd
mov edi [ edx + 0x1c ]
bt esi ebx
push [ esp + 0x4 ]
cmp bl bl
add edi eax
clc
push 0xcda511c0
mov edi [ edi + ecx * 4 ]
call sub_392d65
xchg esi eax
xchg edi eax
sub [ ebx ] bl
mov eax 0x7f300f9a
add ch bl
mov dl 0x77
loop rwxdata
push edx
mov al 0x37
mov al 0x92
or esi [ 0xffffffffc47a71be ]
push edx
xchg ecx eax
inc edx
std
cmp edi [ edx - 0x322fa464 ]
inc edi
scasb [ edi ]
test eax 0xa921bf35
popad
shl [ edx - 0x6c ] 0x1
add al 0x99
mov [ ecx ] gs
mov esi 0x821f793a
xor [ 0x4b3c82d7 ] 0x2d

sub_39cae5
cmp ebx 0x3
pushad
jmp rwxdata
pushfd
lea esp [ esp + 0x30 ]
je rwxdata
movzx bx dl
bts bx bp
movsx bx dl
rcl bh 0x2
mov bx [ esi ]
clc
clc
pushad
and ebx 0xfff
push ecx
stc
cmc
cmc
add [ ebx + edi ] edx
sub esp 0xffffffdc
pushad
mov [ esp + 0x4 ] dh
pushad
lea esp [ esp + 0x40 ]
jmp rwxdata
cmp edx 0xa4b2386f
cmc
cmc
add esi 0x2
call sub_39b5ee
sub_39d414
adc bl ch
dec bl
rcl bh cl
mov bx [ esi ]
push 0x8e0f7f83
clc
shr ebx 0xc
clc
stc
pushad
cmp ebx 0x1
lea esp [ esp + 0x28 ]
js rwxdata
jmp rwxdata
je rwxdata
je rwxdata
cmp ah ah
dec bl
mov bx [ esi ]
pushfd
push esp
test ch 0x11
clc
and ebx 0xfff
clc
call sub_217be6
pushad
bt di ax
pushad
cmp ebx 0x2
pushfd
lea esp [ esp + 0x44 ]
je rwxdata
stc
cmc
cmp ebx 0x2
pushfd
lea esp [ esp + 0x4 ]
je rwxdata
shr bl cl
push ebp
adc bx sp
mov bx [ esi ]
call sub_3abce7
mov esp esi
push 0xd66c7b88
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
push eax
cmc
jmp sub_217cfe
test ch cl
cmp ebx 0x3
pushad
push [ esp + 0x8 ]
call sub_392481
0x78964ff9 0xa67f
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_39d8b7
call sub_38e784
call sub_3ace3e
mov ebx 0x3ea9a72a
int1
dec esp
sub [ ecx ] ebx
daa
aam 0x35
or eax edi
dec ebp
loope rwxdata
aaa
mov [ eax ] bh
jl rwxdata
xchg ebx eax
0xfbf062b 0xc101
mov [ eax ] dl
scasb [ edi ]
mov ch 0x5b
pushad
mov al ch
enter 0xff0e 0xff
add [ ecx ] bl
[ gs : esi ]
0x3b8419a5 0x22e
adc [ edx - 0x45f6cd7f ] esp
cmp bl [ ebp + 0x4877884d ]
cmp eax 0x65dbf2f3
jbe rwxdata
aaa
mov esi 0x95f847a0
cmpsb [ esi ] [ edi ]
sti
aam 0x7e
push ebx
out dx al
cli
fucomp st5
call [ edx + 0x6e ]
sbb eax 0x4f313fba
je rwxdata
mov [ 0x388837dc ] al
mov [ edi + 0x48 ] dh
xchg [ ecx - 0x4a ] ah
or eax 0xef01590
pop ecx
cmp ebp 0xffffffed
cmp edi [ ecx + 0x42c0404f ]
outsb
mov ds dx
call 0xffffffffe827e187
mov ebp 0x1fedcf75
ror dh 0xa1
0xa60aec2e 0xaff4
sub_39d986
mov [ esp ] al
cmc
cmp [ ebp + 0x14 ] ecx
pushfd
jmp rwxdata
pushad
jmp rwxdata
lea esp [ esp + 0x28 ]
ja rwxdata
inc ecx
neg cl
bsf cx bx
btr cx 0x7
mov ecx [ esi + 0x4 ]
pushad
call sub_3ac03d
call sub_2173ac
add edx edx
add ecx [ ebp - 0x35 ]
sub ah al
not bl
call sub_39bc1f
arpl sp ax
cmc
pop edi
int 0x14
or ebp eax
jmp 0x5a8bac22
sub_39dc25
shr al 0x1
add edi 0x1
clc
add al 0xaa
mov al [ edi ]
bt cx cx
jmp rwxdata
push esp
test al al
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
rcl al cl
clc
setbe ch
rol ecx 0x18
mov edi edx
pushfd
cmc
jmp sub_21762e
test ch 0x71
clc
call sub_217553
lea esp [ esp + 0x48 ]
jne rwxdata
jle rwxdata
lea eax [ esp + 0x28c0648f ]
cwde
bswap ax
mov [ edi - 0x1 ] 0x0
sets al
not al
push ebx
pushad
lea eax [ esp - 0x410efdf5 ]
call sub_399cb9
mov [ esp ] 0x8255
lea esp [ esp + 0x8 ]
ja rwxdata
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov esp esi
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
test dh ch
test bp di
pushad
cmp ecx [ ebp - 0x4 ]
call sub_39feab
cmp eax [ ebp - 0x10 ]
pushfd
push [ esp ]
pushad
call sub_393bb9
mov [ esp + 0x4 ] 0x3504a534
lea esp [ esp + 0x4 ]
jns rwxdata
pushfd
push esi
jmp rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
pushfd
mov [ esp ] 0xbb1d4cd0
push 0x9424f5d5
mov [ esp ] 0x76c6
lea esp [ esp + 0x4 ]
jmp rwxdata
push 0xbb1d4cd0
push esi
pushad
push [ esp + 0x4 ]
mov [ esp ] 0xb4a1
lea esp [ esp + 0x28 ]
jmp rwxdata
push ebx
lea esp [ esp + 0xc ]
jb rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
pushad
call sub_3b0606
stc
push 0x69b51dd0
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
pushad
clc
cmc
test si bx
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
jmp rwxdata
call sub_39e0e7
dec edi
xchg [ ebx + ecx * 2 + 0x4527d9c4 ] ch
std
push ebx
imul ebp [ eax + 0x35f99b01 ] 0x599a84ba
jmp rwxdata
jmp rwxdata
sar [ ebp - 0x2a ] cl

lea esp [ esp + 0x24 ]
jbe rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
sub_39de2f
push [ edi ]
pop [ esp + 0x2c ]
cmc
cmp edi ebx
mov [ esp ] 0x27
lea esp [ esp + 0x2c ]
ja rwxdata
clc
jmp sub_394ed2
sete al
call sub_38eb23
pushad
jmp rwxdata
jmp rwxdata
mov [ esp + 0x1c ] 0x3404694e
pushad
push 0xdc5240ee
jmp rwxdata
mov [ esp + 0x3c ] 0xcfa006a2
mov [ esp + 0x4 ] ah
push ecx
pushfd
lea esp [ esp + 0x44 ]
jmp rwxdata
jmp rwxdata
pushad
mov [ esp ] ch
mov [ esp ] 0x64406dd
mov [ esp + 0x1c ] ecx
jmp sub_3b0398
sub_39deca
lea esp [ esp + 0xc ]
jae rwxdata
call sub_398cfc
pop esp
mov ebx [ eax ]
cmp dh [ ebx ]
push 0xaafba290
aam 0x3c
in eax dx
js rwxdata
test bp 0x9e2f
sub eax eax
call sub_399d2b
pop ds
movsb [ edi ] [ esi ]
shr bh 0x51
outsd
outsb
push ss
retn
xor [ eax - 0x624cf56b ] esi
and [ edx - 0x34 ] 0x2b
sbb eax ebx
dec edx
test eax 0x78d6f13e
popad
fcomp st1
jpo rwxdata
mov ebx 0xe91f2d2a
fwait
pop ss
push edx
test eax 0xec53ab49
adc [ esi + 0x6afff690 ] ch
shl [ edi ] 0xcf
push cs
test al 0x3d
cmp ebx [ eax - 0x342a1e8a ]
aam 0xf1
push ebx
fstp [ eax ]
mov ah 0x17
add [ ebp + 0x3c993d84 ] bl
pop es
cdq
popfd
pushad
adc al dh
cld
cld
jl rwxdata
mov esp 0x3ddee50e
jbe rwxdata
sub [ ecx + eax * 4 + 0x5731250f ] edi
je rwxdata
sub ch [ 0x179be91f ]
add edi esi
int3
or al [ eax ]
add [ ebp - 0x29 ] al
sbb [ eax ] eax
add [ eax ] al
add [ eax ] al
salc
xor ebx [ ecx ]
add [ eax ] al
add [ eax ] al
add [ edx + 0x4d ] cl
sbb [ eax ] eax
mov bh 0x56
sbb [ eax ] eax
add [ eax ] al
add [ eax ] al
mov bh [ edx + 0x19 ]
add [ eax ] al
xor ebp [ ecx ]
sbb [ eax ] eax
add [ eax ] al
add [ eax ] al
inc edx
inc eax
sbb [ eax ] eax
add [ eax ] al
add [ eax ] al
mov dh 0xd8
sbb al [ eax ]
add [ eax ] al
add [ eax ] al
dec eax
rcr [ edx ] 0x0
add [ eax ] al
add [ eax ] al
xchg dh bl
sbb [ eax ] eax
inc edi
rcr [ ecx ] 0x0
mov ebx 0x720018f8
imul edi [ ebp + 0x35 ] 0xefa3030c
push ecx
mov [ eax - 0x5 ] al
outsb
outsd
shr [ eax ] 0x1
enter 0x92e8 0xb2
and eax 0x8ed6de09
sahf
outsd
adc [ edx ] edx
sub_39dfe7
push esi
mov [ esp ] 0xf5
lea esp [ esp + 0x8 ]
jae rwxdata
call sub_38f300
test cx 0xa8fe
clc
pushfd
xor ecx ecx
pushad
lea esp [ esp + 0x24 ]
call sub_38ef01
push edi
pushfd
call sub_39deca
jmp rwxdata
lea esp [ esp + 0x24 ]
jbe rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_39e0e7
lea esp [ esp + 0x24 ]
jne rwxdata
jmp rwxdata
shl di cl
mov edi [ edx + 0x24 ]
pushfd
bt cx bx
add edi eax
cmp bh 0xb
cmc
test ax 0xa8fb
movzx ecx [ edi + ecx * 2 ]
rol di 0xc
sbb edi edx
add di bx
mov edi [ edx + 0x1c ]
jmp rwxdata
pushad
mov [ esp + 0x1c ] eax
mov al [ esp + 0xc ]
setne al
setpo al
mov al ah
lodsb [ esi ]
bt eax eax
xor al 0x6e
mov [ esp + 0x8 ] cl
pushad
call j_sub_392f6b
add edi eax
cmc
mov [ esp ] 0xd2
clc
cmc
mov edi [ edi + ecx * 4 ]
bt esi ebx
test di bx
test edi edi
call j_sub_39bbe1
add [ eax ] al
dec esp
outsd
arpl [ ecx + 0x6c ] sp
inc ecx
insb
insb
outsd
arpl [ eax ] ax
adc bl 0x1a
clc
or bx 0x711e
mov ebx eax
call sub_2172a3
clc
mov eax [ ebp - 0x8 ]
test ah 0x7
clc
bt ax 0xc
clc
shl eax 0x1
call sub_39a4f2
mov bl dl
div dh
rcr dh cl
ficom [ esi + ecx * 8 + 0x5610bee0 ]
xlat
cld
aaa
mov [ edi + 0x653c4937 ] fs
jpo rwxdata
0x2746af10 0xf2cd
xchg esi eax
sar [ esi ] 0x53
enter 0x5fc5 0x86
pop ds
adc bh [ ebx ]
push eax
0xaa29
sub_39f414
add eax edi
pushad
bt ecx 0x1c
cmp ah dh
cmp eax edx
push 0x407b95b6
lea esp [ esp + 0x2c ]
jb rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
cmc
jmp rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
cmp eax [ ebp - 0x10 ]
pushfd
push [ esp ]
pushad
call sub_393bb9
mov [ esp + 0x4 ] 0x3504a534
lea esp [ esp + 0x4 ]
jns rwxdata
pushfd
mov [ esp ] 0xbb1d4cd0
push 0x9424f5d5
mov [ esp ] 0x76c6
lea esp [ esp + 0x4 ]
jmp rwxdata
push 0xbb1d4cd0
push esi
pushad
push [ esp + 0x4 ]
mov [ esp ] 0xb4a1
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
call sub_3b0606
sub_39f434
call sub_38fbd8
jmp rwxdata
mov esp esi
push 0xd66c7b88
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_39f43e
clc
stc
cmp eax [ ebp - 0x10 ]
mov [ esp ] 0x1a33
mov [ esp ] 0x2b
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
xor di di
bts edi 0x18
shld di sp 0x1
xadd bx cx
mov ebx eax
bsr cx bx
mov edi eax
bsr cx cx
lea ecx [ ebx - 0x5881dc73 ]
shld cx si 0x7
mov ecx 0x104
cmc
sub al al
bt sp bx
stc
jmp rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
clc
[ edi ]
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
cmp ch 0xa3
shr esi 0x1
mov ecx edi
cmc
shl esi 0x6
shld esi ecx 0xa
sub ecx ebx
mov esi 0x19b5af7b
bt esp eax
or si 0xa9ae
cmp dl 0x46
mov esi esp
pushfd
cmc
clc
sub edi 0x4
call sub_399e10
pushfd
lea esp [ esp + 0x4 ]
jae rwxdata
push 0x45dc973b
xchg ecx eax
pushad
push 0xe1b0c59a
jmp rwxdata
pushfd
xchg ecx eax
pushad
jmp rwxdata
dec eax
jmp rwxdata
dec eax
push [ esp + 0x8 ]
shl eax 0x8
jmp rwxdata
push [ esp + 0x8 ]
jmp rwxdata
jmp rwxdata
shl eax 0x8
push [ esp ]
call sub_393236
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0xd ] cl
sbb [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
and al 0xe7
mov al ch
lodsb [ esi ]
pushfd
not al
lea esp [ esp + 0x2c ]
jae rwxdata
fwait
push ds
outsb
jo rwxdata
jecxz rwxdata
pushad
call sub_21793b
inc al
call sub_38efc1
aas
jge rwxdata
shl [ edi + 0x3f3a6890 ] cl
fimul [ eax - 0x774f0c9c ]
inc edx
sbb [ eax ] eax
sub ah bh
sbb [ eax ] eax
sub bh ah
sbb [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
out 0x19 eax
add [ edx - 0x38 ] dl
mul dl
stosb [ edi ]
enter 0xa877 0x82
pushad
imul esp [ ecx + eax * 8 ] 0x857b3f15
push edx
sti
sbb al 0x6e
push ebp
add [ ecx - 0x51bd9f6a ] ebx
inc ebp
lds esp [ ebp - 0x726c33ec ]
nop edx ebp
shl ch 0xe2
dec edi
xor eax [ esi ]
pop [ edx - 0x57dfc49b ]
pop esi
sbb ecx edi
int 0x76
0x8370163e 0x2233
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi ] ah
adc ah [ eax + 0x42 ]
add [ ebp - 0x5c5ca699 ] ecx
sbb edi ebx
push ss
or ebx [ esi ]
mov ebp 0xdc2dc180
cld
sti
pop esp
jg rwxdata
0xebb65ba 0x5387
push ebp
pop es
shl dl cl
cld
dec edi
cwde
xchg [ esp + ebx * 4 ] ah
out 0x72 al
in eax 0x2f
push eax
cli
or edx 0xffffffb4
insd
mov ebx 0xea902205
cmpsb [ esi ] [ edi ]
dec edx
inc eax
out dx eax
fldcw [ ecx - 0x42462105 ]
mov edx 0x78737880
xchg esi eax
xor [ ebp - 0x12e99ed2 ] esp
frstor [ eax ]
inc esi
dec ebx
dec edx
fild [ ecx + 0x63eb3f30 ]
outsd
int3
xchg edi eax
mov ebx 0x4912ba1
test eax 0xeda1de71
aas
jg rwxdata
pop ecx
mov [ 0x16df19a3 ] eax
lodsb [ esi ]
or al [ ebp - 0x4cfd6952 ]
out 0x95 al
0xb64918bd 0x2369
js rwxdata
inc ecx
xor al 0x40
push cs
push cs
pop ebx
sbb eax 0x845886bc
scasb [ edi ]
in eax dx
push ds
xor al 0x5a
fdivp st0
sahf
dec edi
pop edi
ja rwxdata
jl rwxdata
dec ecx
adc al [ edi ]
xchg [ edx + 0x260da5c4 ] ecx
pop esp
in eax 0x61
xchg ebp eax
aaa
insd
mov dl 0x5
outsd
cmpsd [ esi ] [ edi ]
sub [ edi + 0x5b ] ah
adc ebp [ 0xffffffffe4041850 ]
mov dh 0x6e
[ esi - 0x41dc7c26 ]
out 0x91 eax
loopne rwxdata
push esi
pop es
xchg esi eax
jbe rwxdata
xchg esi eax
add dh [ ebx - 0x42156a1a ]
sbb [ ecx - 0x4a ] cl
imul esp [ ebx ] 0xcc248fce
sub eax [ ecx ]
mov bl 0xb
push ds
hlt
das
cmp esi [ ebx + 0x7b ]
cmp [ edi - 0x49 ] al
push edx
or al 0xeb
sbb al 0x53
xor edx edx
cwde
push esp
sub [ ecx ] 0xfffffff2
push 0xe9b08358
mov esi 0x296daa50
pop ds
cli
mov [ 0x4d586cab ] al
fdivr [ edi + 0x46cfe02a ]
out 0x79 al
aad 0x32
jle rwxdata
pop eax
test [ esi + 0x5a341eed ] ch
out dx eax
cmc
clc
pop edx
and al [ ecx - 0x3413682f ]
pop eax
jpo rwxdata
and [ ebx ] 0xffffffbe
fist [ edi + esi ]
dec edx
fidiv [ 0xffffffffd7b0bf67 ]
sbb eax [ esi ]
scasd [ edi ]
mov eax [ edx - 0x3f ]
xchg edi eax
sub_39fafe
lea esp [ esp + 0x34 ]
jne rwxdata
pushfd
jmp rwxdata
call sub_2173a4
pushad
jmp rwxdata
lea esp [ esp + 0x4 ]
retn
jmp rwxdata
lea esp [ esp + 0x24 ]
jbe rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_39fd77
mov [ esp ] ah
sub al al
bt dx 0x1
push edx
cmc
[ edi ]
call sub_3a00da
inc esp
xchg ebx eax
jge rwxdata
xor eax 0xaed320b3
xchg ebp eax
sub eax 0x3ca49e49
[ ecx + 0x56 ]
dec edi
clc
cmp [ edx + 0x3ae41e0e ] bh
xchg ecx eax
lodsb [ esi ]
xchg edi eax
mov dh 0x2
pop ebp
jle rwxdata
rcl [ ecx ] cl
pop ebp
fld [ ebx - 0x47 ]
cmc
hlt
xchg esp eax
pop edx
in al 0xa2
inc eax
pushad
jpo sub_39fe7e
push ebx
bound ebx [ esi - 0x8 ]
dec esp
lds edi [ ebp + ecx * 4 - 0x205b1c27 ]
add esp [ esi - 0x6b6d4fd5 ]
sub_39fe7e
lea esp [ esp + 0x24 ]
jne rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
shld si dx 0x1
or si cx
xadd esi ecx
bsf esi ecx
mov ecx edi
movsx si cl
clc
sub ecx ebx
dec si
cmc
mov esi esp
clc
jmp sub_394ed2
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_39feab
mov [ esp + 0xc ] 0x7d
pushad
lea esp [ esp + 0x44 ]
jae rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
push esp
jmp rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
cmp ah ch
bt dx sp
add ecx 0x1
push esi
mov [ esp ] bp
push esp
push [ esp ]
mov [ ebp - 0x8 ] ecx
pushfd
lea esp [ esp + 0x14 ]
jmp rwxdata
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
sub_39fec7
lea esp [ esp + 0x24 ]
ja rwxdata
jle rwxdata
clc
bt esi 0x1b
jmp rwxdata
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov esp esi
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
imul edx edx 0xa
pushad
cmc
clc
add edx eax
push [ esp ]
mov [ esp ] 0x56
mov [ esp + 0x8 ] 0xab
mov [ esp + 0xc ] 0x32
lea esp [ esp + 0x24 ]
jmp rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
shl al 0x6
rol al 0x1
rol al cl
add edi 0x1
shl al 0x5
neg al
mov al [ edi ]
cmc
test al al
pushad
push 0xcef31194
mov [ esp ] ch
lea esp [ esp + 0x24 ]
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
rcl al cl
clc
setbe ch
rol ecx 0x18
mov edi edx
pushfd
cmc
jmp sub_21762e
cmc
sub al 0x30
pushad
call sub_3ae00b
mov esp 0x4ec07e7d
xchg ebp eax
jl rwxdata
mov fs [ eax - 0x3d4ffb22 ]
loop rwxdata
cmp al 0x67
jbe rwxdata
mov al [ 0x10e4e14b ]
push ds
out dx eax
adc cl [ esi - 0x15f3b18c ]
add dl [ edi + eax * 8 ]
jl rwxdata
add eax [ eax - 0x31e1275a ]
loopne rwxdata
je rwxdata
and al 0x8d
and al 0x24
leave
pushfd
jle rwxdata
jmp 0x14bf7242
loop rwxdata
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x663c5 ]
or eax 0xef5f6225
inc ecx
mov dh ch
loop rwxdata
out dx eax
jpo rwxdata
adc [ ecx + ebp * 8 - 0x1c ] 0xd21484a2
0xab77e5b1 0xd5e8
and [ esi - 0x1f31e128 ] 0xe2
xor ecx [ eax - 0x54e1b488 ]
loop rwxdata
test [ ecx ] 0x628452dc
mov ebp 0xfff99c3b
adc dl [ esi - 0x11 ]
sbb [ ebp - 0x738b1058 ] cl
sbb bl dh
out 0x6a al
cld
out dx eax
sbb cl [ edx + ebp + 0x757d7790 ]
cmp al 0x1f
lds ecx [ edi ]
mov ah 0x32
or eax 0xdab27771
or eax 0x28178423
into
cmc
jge rwxdata
jg rwxdata
cmp ebx ecx
or eax 0x78816320
fxch st2
xchg ecx eax
sub [ ebp + ecx * 8 + 0x379dca05 ] bl
mov al [ 0x467178ef ]
pop edi
inc ecx
mov [ ecx ] ecx
hlt
sub_39ff11
lea esp [ esp + 0x30 ]
jne rwxdata
jmp rwxdata
rcr di cl
shl di cl
lea edi [ edi + 0x13addec2 ]
adc edi 0x12c0b5da
mov edi [ edx + 0x24 ]
jno rwxdata
pushad
mov [ esp + 0x1c ] eax
mov al [ esp + 0xc ]
setne al
setpo al
mov al ah
lodsb [ esi ]
bt eax eax
xor al 0x6e
mov [ esp + 0x8 ] cl
pushad
call j_sub_392f6b
push ecx
pushfd
add edi eax
jmp rwxdata
cmc
add edi eax
pushad
movzx ecx [ edi + ecx * 2 ]
add esp 0x20
pushfd
xor di bx
rcl edi cl
mov edi [ edx + 0x1c ]
push [ esp ]
call sub_392c5c
cmp di cx
cmp di 0x94fe
mov [ esp + 0x4 ] 0x42
movzx ecx [ edi + ecx * 2 ]
shr edi cl
not di
bts di 0xf
mov edi [ edx + 0x1c ]
pushfd
sub esp 0xfffffff4
jge rwxdata
jmp rwxdata
add edi eax
cmc
cmp cl bl
clc
mov edi [ edi + ecx * 4 ]
bt bp 0xd
bt di 0x1
cmc
push ebp
test edi edi
pushfd
push 0x4e56bc7b
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
stc
add edi eax
test bh 0x2a
pushad
mov edi [ edi + ecx * 4 ]
clc
stc
cmp ch 0x40
test edi edi
mov [ esp ] al
call sub_3ac15d
adc ch [ ebx ]
int1
clc
ror dl 0x4
shr si cl
sub eax eax
pushad
add esp 0x20
jle rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
bt cx cx
add eax edi
pushad
mov [ esp ] si
pushad
test ah 0xf2
cmp eax edx
pushfd
lea esp [ esp + 0x44 ]
jl rwxdata
add eax edi
clc
jmp rwxdata
pushfd
jmp rwxdata
jb rwxdata
bt ax 0x9
cmp eax edx
pushfd
push [ esp ]
push [ esp + 0x4 ]
jmp rwxdata
call sub_2173ac
add edx edx
add ecx [ ebp - 0x35 ]
sub ah al
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
cmc
cmp eax [ ebp - 0x10 ]
jmp rwxdata
lea esp [ esp + 0xc ]
jb rwxdata
jae rwxdata
test cl dh
jmp rwxdata
sar di 0x1
movsx ecx al
mov ebx eax
setle cl
bsf edi ebp
mov edi eax
inc ecx
bts cx 0x6
mov ecx 0x104
cmp al ch
xor al al
call j_sub_392725
inc ebp
xlat
sbb [ eax ] eax
add [ eax ] al
add [ eax ] al
salc
xor ebx [ ecx ]
add [ eax ] al
add [ eax ] al
add [ edx + 0x4d ] cl
sbb [ eax ] eax
mov bh 0x56
sbb [ eax ] eax
add [ eax ] al
add [ eax ] al
mov bh [ edx + 0x19 ]
add [ eax ] al
xor ebp [ ecx ]
sbb [ eax ] eax
add [ eax ] al
add [ eax ] al
inc edx
inc eax
sbb [ eax ] eax
add [ eax ] al
add [ eax ] al
mov dh 0xd8
sbb al [ eax ]
add [ eax ] al
add [ eax ] al
dec eax
rcr [ edx ] 0x0
add [ eax ] al
add [ eax ] al
xchg dh bl
sbb [ eax ] eax
inc edi
rcr [ ecx ] 0x0
mov ebx 0x720018f8
cmp eax [ ebp - 0x10 ]
jmp rwxdata
jae rwxdata
push ebp
mov ebx eax
sbb cx dx
mov edi eax
call sub_3ab78a
sub_39ff52
push 0x2b40d832
add eax edi
cmc
call sub_398d01
cdq
dec eax
in eax dx
mov [ 0x245d4907 ] al
sbb al 0x1a
xlat
xlat
rcr cl 0x1
mov [ esi + 0x80aeb55 ] cs
out dx eax
in al dx
inc edi
loope rwxdata
int1
jpe rwxdata
movsb [ edi ] [ esi ]
xor ch ch
in eax 0x3f
les edi [ edx + 0x54 ]
fcmovnbe st4
outsd
mov dh 0xde
sub dh [ edx - 0x42 ]
jle rwxdata
and eax eax
inc edx
mov eax [ 0xffffffffdd736e87 ]
pop ss
imul ebp [ ecx + 0x21 ] 0x18d2e710
rcl [ ebx + 0x46a0e2d5 ] cl
xchg edx eax
add esp 0x20
pushfd
xor di bx
rcl edi cl
mov edi [ edx + 0x1c ]
push [ esp ]
call sub_392c5c
retn
sub_3a000f
push [ esp + 0x8 ]
lea esp [ esp + 0x40 ]
jbe rwxdata
test ch dl
bt si 0xe
sub ecx [ edx + 0x10 ]
pushfd
pushad
cmc
cmp dl bh
cmp ecx [ edx + 0x14 ]
jmp rwxdata
ror di 0xc
mov edi [ edx + 0x24 ]
neg cx
shl bl 0x2
rcl bl 0x7
add edi eax
dec ch
push 0x45e47a71
movzx bx bl
bts ebx 0xc
mov ebx [ edx + 0x20 ]
bswap ecx
pop ecx
add ebx eax
clc
push 0x91f8fd06
mov [ ebp - 0x8 ] 0x0
and cx 0x6e1b
shld cx bp 0x1
mov ecx [ edx + 0x18 ]
cmp ch 0xfa
bt si 0x6
test di bx
cmp ecx [ ebp - 0x8 ]
push [ esp ]
pushfd
pushad
pushfd
lea esp [ esp + 0x30 ]
jbe rwxdata
pushad
push ebp
push 0x447ddc79
lea esp [ esp + 0x4c ]
jae rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
test dl 0xdb
cmp ah bh
sub ecx 0x1
neg esi
pushfd
mov [ ebp - 0x4 ] ecx
shld ecx esi 0x1f
sar cx cl
mov ecx [ ebp - 0x8 ]
xchg di si
test ch cl
lea edi [ edx - 0x471f7a65 ]
pushfd
add ecx [ ebp - 0x4 ]
test cl dh
rol edi cl
shr ecx 0x1
lea esi [ ebp - 0x238f2e1b ]
mov edi [ ebx + ecx * 4 ]
sbb si 0x5916
add edi eax
movsx si bl
pushad
call sub_38e70b
bt si si
clc
pushad
jmp rwxdata
push eax
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
or eax eax
jmp rwxdata
pushfd
xor di bx
rcl edi cl
mov edi [ edx + 0x1c ]
push [ esp ]
call sub_392c5c
pushad
lea esp [ esp + 0x40 ]
jne rwxdata
call sub_38eb4e
add [ eax ] al
inc edi
je rwxdata
rol cl cl
mov ecx [ ebx ]
jmp rwxdata
add eax esp
dec esi
xchg ebp eax
jl rwxdata
outsd
jne rwxdata
cmp bx dx
cmc
pushad
or ecx ecx
pushad
jmp rwxdata
mov bh 0x53
xchg edx eax
xchg [ esi + 0xb601cea ] bl
int1
xchg [ eax ] ebp
idiv ch
dec ebx
stosb [ edi ]
imul ebx [ edx - 0x7d ] 0xbc7140cd
cmc
test eax 0x83a64ffa
mov bl 0x27
push edi
mov [ 0xffffffffc04ea41a ] al
in eax dx
popad
mov al [ 0xffffffffefcc7b23 ]
or bl dl
and eax 0xa5e85879
mov esi 0xe816b303
push es
std

aam 0xc5
fcom [ ecx + esi * 4 ]
xchg [ ecx ] bh
scasb [ edi ]
inc ebx
or eax 0x3e03c61f
or eax [ eax - 0x3eddd3ef ]
inc [ eax - 0x27 ]
mov dh 0x8c
imul edi [ ecx - 0x104466c8 ] 0x21
cdq
fcomp st1
int 0xc3
in al dx
cmp dh [ ebx ]
adc ch dh
mov ah 0xa
mov ebx 0xd89921ef
fxch st5
retn
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add al al
enter 0x6604 0x89
and al 0xc
add al 0xdf
cmp ch 0x5a
bt di ax
mov [ esp ] cl
neg al
call j_sub_3ab756
lea eax [ rwxdata ]
jmp sub_3938a9
mov [ esp ] 0x23
call sub_393b4e
sub_3a00da
lea esp [ esp + 0x14 ]
jne rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
shl ch cl
rcl si 0x9
movsx esi bl
not si
mov ecx edi
clc
push 0x94a56364
bswap si
shld esi edi 0x8
sub ecx ebx
and esi ebx
movzx esi bl
shl si cl
lea esi [ esp + 0x4 ]
pushad
pushfd
sub edi 0x4
bt di 0x7
cmp al 0xa7
test dh al
push [ edi ]
pop [ esp + 0x24 ]
stc
cmp si sp
test si di
cmp edi ebx
push [ esp ]
lea esp [ esp + 0x28 ]
ja rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
clc
jmp sub_394ed2
add al ah
clc
sub ebx edi
jmp rwxdata
add ebx esp
sbb al 0x21
push esi
pop edi
bsf di cx
mov edi ebx
xor al cl
stc
cmc
rol al 0x1
mov al 0x2e
stc
stc
jae rwxdata
clc
[ edi ]
pushfd
jmp rwxdata
[ edi ]
jmp rwxdata
mov [ esp ] 0x3dc29e4d
lea esp [ esp + 0x4 ]
jne rwxdata
jmp rwxdata
jle rwxdata
pushfd
lahf
pop eax
mov [ edi - 0x1 ] 0x0
pushfd
lea eax [ ecx - 0x403ad5b2 ]
mov [ esp ] ebx
pushad
movsx ax bl
cwde
lea eax [ rwxdata ]
push [ esp ]
pushfd
push [ esp + 0xc ]
mov [ esp ] dh
mov [ esp + 0x28 ] rwxdata
mov [ esp + 0x8 ] 0x1c39
mov [ esp + 0x4 ] eax
mov [ esp + 0x24 ] eax
pushad
mov [ esp ] dx
pushfd
push [ esp + 0x48 ]
retn 0x4c
jne rwxdata
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov esp esi
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
call sub_392d7c
pushfd
mov [ esp + 0x4 ] 0x96
push [ eax ]
pop [ esp + 0x1c ]
push 0xf6c3692e
push [ esp + 0x20 ]
retn 0x24
sub_3aa96b
call sub_217935
call sub_38eb4e
add [ eax ] al
inc edi
je rwxdata
add eax esp
dec esi
xchg ebp eax
jl rwxdata
outsd
jne rwxdata
mov bh 0x53
xchg edx eax
xchg [ esi + 0xb601cea ] bl
int1
xchg [ eax ] ebp
idiv ch
dec ebx
stosb [ edi ]
imul ebx [ edx - 0x7d ] 0xbc7140cd
cmc
test eax 0x83a64ffa
mov bl 0x27
push edi
mov [ 0xffffffffc04ea41a ] al
in eax dx
popad
mov al [ 0xffffffffefcc7b23 ]
or bl dl
and eax 0xa5e85879
mov esi 0xe816b303
push es
std

aam 0xc5
fcom [ ecx + esi * 4 ]
xchg [ ecx ] bh
scasb [ edi ]
inc ebx
or eax 0x3e03c61f
or eax [ eax - 0x3eddd3ef ]
inc [ eax - 0x27 ]
mov dh 0x8c
imul edi [ ecx - 0x104466c8 ] 0x21
cdq
fcomp st1
int 0xc3
in al dx
cmp dh [ ebx ]
adc ch dh
mov ah 0xa
mov ebx 0xd89921ef
fxch st5
retn
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add al al
enter 0x6604 0x89
and al 0xc
add al 0xdf
cmp ch 0x5a
bt di ax
mov [ esp ] cl
neg al
call j_sub_3ab756
lea eax [ rwxdata ]
jmp sub_3938a9
sub_3aa9b0
mov esi [ eax + 0x3c ]
pushad
add esi eax
pushad
test dh ch
mov edx [ esi + 0x78 ]
bt cx di
stc
call sub_3ac906
test al 0x3f
add eax esp
dec esi
xchg ebp eax
jl rwxdata
mov bh 0x53
xchg edx eax
xchg [ esi + 0xb601cea ] bl
int1
xchg [ eax ] ebp
idiv ch
dec ebx
stosb [ edi ]
imul ebx [ edx - 0x7d ] 0xbc7140cd
cmc
test eax 0x83a64ffa
mov bl 0x27
push edi
mov [ 0xffffffffc04ea41a ] al
in eax dx
popad
mov al [ 0xffffffffefcc7b23 ]
or bl dl
and eax 0xa5e85879
mov esi 0xe816b303
push es
std

aam 0xc5
fcom [ ecx + esi * 4 ]
xchg [ ecx ] bh
scasb [ edi ]
inc ebx
or eax 0x3e03c61f
or eax [ eax - 0x3eddd3ef ]
inc [ eax - 0x27 ]
mov dh 0x8c
imul edi [ ecx - 0x104466c8 ] 0x21
cdq
fcomp st1
int 0xc3
in al dx
cmp dh [ ebx ]
adc ch dh
mov ah 0xa
sub_3aab13
cmp al ah
push 0xbfddac1a
pushfd
lea esp [ esp + 0x30 ]
jne rwxdata
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
jmp rwxdata
pushad
pushfd
inc esi
jmp rwxdata
mov [ esp + 0x4 ] sp
push 0xfe93d116
call sub_3ad8c3
sub_3aab2a
mov [ esp ] 0x91e1
loope rwxdata
lodsb [ esi ]
mov ds cx
fisub [ eax - 0x4d ]
arpl bp bx
in al 0x65
mov dl 0xc2
inc esi
call sub_217561
and ch dh
jecxz rwxdata
sete [ esi + 0x7a5f5b9c ]
sar ecx 0x1
in al dx
rcr ebp 0x1
les esp [ ebx + 0x4eeb807c ]
mov eax [ 0x4ad3 ]
jpo rwxdata
push ds
les eax [ edi + eax * 8 ]
or [ ebx + 0x6f ] edi
adc [ ebp + edx * 2 + 0x4b ] 0xb3f61b58
xor eax 0x5ca08ea0
pop edi
pop eax
sbb esi ecx
sub [ edx + 0x35033d13 ] ebx
mov bl 0x4d
daa
aad 0x3e
test eax 0xa87ca022
and eax 0xc401d98e
add bh al
fstp st5
sub esi [ eax - 0x72 ]
fstpnce st6
pushad
mov bl 0x63
fucom st4
mov dl 0xc2
sbb ebx [ edx ]
stosd [ edi ]
xchg esi eax
das
add dh [ ebx + 0x3a9f377e ]
mov dl 0x15
in al dx
lds esi [ eax ]
xor [ ecx + edx * 2 + 0x10 ] 0x13ec14ad
inc esi
js rwxdata
cmp [ edx - 0x69 ] 0x85
push esp
mov al 0x7e
dec esp
mov ax 0xdadf
0x1b02ef58 0x96b7
or eax ebp
retn 0xff53
sub_3ab6db
mov [ esp + 0x8 ] 0x5f
[ edi ]
pushfd
jmp rwxdata
lea esp [ esp + 0x34 ]
jne rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
sub si 0xd75a
movzx cx dl
mov ecx edi
bt ax cx
sub ecx ebx
clc
mov esi esp
test bl 0xa7
sub edi 0x4
cmc
stc
cmp esp ebp
push [ edi ]
pushad
jmp rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
cmp edi ebx
push 0xd7ff7179
lea esp [ esp + 0x24 ]
ja rwxdata
clc
jmp sub_394ed2
pushad
test dl 0xe6
stc
and al 0xb8
sub ebx edi
xor al al
bswap edi
add esp 0x20
add ebx esp
bsf edi ebp
mov edi ebx
rcr al cl
mov al 0x2e
pushad
[ edi ]
pushad
call sub_394f16
0x7463
sub_3ab756
pushfd
lea esp [ esp + 0x34 ]
call sub_39e219
cmc
cmp eax 0x7d00
pushfd
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
setpo bl
not bl
pushad
inc bl
inc ecx
lea esp [ esp + 0x20 ]
push 0x6180705c
cmp ah 0x5
jmp rwxdata
mov [ esp ] 0x4a
mov [ esp ] dl
lea esp [ esp + 0x4 ]
jae rwxdata
call sub_3ae276
test edi 0x1b166194
push 0xe2273ee5
bt dx 0x2
stc
cmp eax 0x7f
jmp rwxdata
jmp rwxdata
mov [ esp ] 0xde
push esp
lea esp [ esp + 0x8 ]
ja rwxdata
or bl al
xchg ebp eax
cmc
xchg al bl
push 0x49aab4ea
mov eax ebp
cmc
add bl 0xee
mov bl 0x1
lea esp [ esp + 0x4 ]
push esp
cmc
call sub_399cc7
pushad
pushfd
inc ecx
pushfd
seto bl
inc ecx
add bl dh
xchg ebp eax
inc bl
dec bl
test al 0xb2
mov eax ebp
dec bl
shl bl cl
cmp bh 0xb
mov bl 0x1
mov [ esp + 0x10 ] 0xfe
stc
cmc
clc
mov [ esp + 0x24 ] esi
mov esi [ esp + 0x4 ]
sar esi 0x6
btr si cx
sbb si 0x6f48
mov esi edi
call sub_3a00d0
int 0x4
sbb bl cl
dec edx
inc edi
fidivr [ ebx - 0x5c8d6275 ]
iretd
sub_3ab77f
mov esi [ esp + 0x28 ]
pushfd
pushfd
jmp rwxdata
mov esp ebp
movzx bp cl
pushfd
pushfd
lea ebp [ edx + 0x1f1f957b ]
mov ebp [ esp + 0x8 ]
pushfd
mov [ esp + 0x4 ] 0xda
push [ esp + 0x10 ]
retn 0x1c
sub_3ab78a
bsf cx di
mov ecx 0x104
stc
cmc
jmp rwxdata
xor al al
call j_sub_39c501
mov cl 0x20
push es
in eax dx
dec edi
xchg esi eax
push ds
xor [ ebx + 0x77b28541 ] dh
loop rwxdata
add bl bl
and [ ebx - 0x75 ] edx
dec esi
js rwxdata
lahf
xchg ecx eax
push eax
inc ebp
clc
pop ecx
mov bh 0x8a
movsb [ edi ] [ esi ]
inc ebx
lds ebp [ ecx + ebp ]
mov sp 0x9c3b
cmpsb [ esi ] [ edi ]
mov [ ebx - 0x1b ] gs
or al 0xc8
add edi edx
enter 0x5f7f 0x9e
pop es
and eax 0xc5c14558
mov dr6 esi
and al 0x8
call sub_217c14
pushfd
pushfd
pushfd
pushfd
lea esp [ esp + 0x10 ]
jne rwxdata
mov esi 0x50af1085
mov al 0xf5
loop rwxdata
push edx
bt ax bp
cmc
jmp sub_2174c4
pushfd
mov eax [ edx + 0x8 ]
mov [ esp ] bl
pushad
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
cmp [ eax ] ecx
int 0x6b
mov cl [ esi - 0x59 ]
mov edx 0x4af6863e
xchg edx eax
inc edx
cli
or al 0xc8
pushfd
pushfd
or ebx ebx
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
je rwxdata
je rwxdata
cld
int1
loope rwxdata
seta bl
pop edi
not bl
pushad
mov esi [ esp + 0x20 ]
movzx bx al
lea esi [ edx * 4 + 0x7483117e ]
mov esi eax
setbe ah
cwde
push ebx
call sub_3adc79
lea esp [ esp + 0x20 ]
ja rwxdata
jmp rwxdata
movzx ebx al
push ebp
push ebp
jo rwxdata
mov bh 0x48
mov ebx [ esp + 0x24 ]
push edx
mov esp ebp
ja rwxdata
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
call sub_39d8b7
cmp dh bl
call 0xffffffffe30f57ec
hlt
sub al 0xff
push edi
imul ebp [ esi - 0x4f ] 0x2
retn 0xb305
jbe rwxdata
bswap bp
pop ebp
pushad
mov [ esp + 0x4 ] bl
push 0x941fd693
push [ esp + 0x24 ]
retn 0x2c
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_3ac5c9
lea esp [ esp + 0x4 ]
je rwxdata
pop ebp
push edi
mov [ esp ] bp
push [ esp + 0x4 ]
retn 0xc
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
not bl
call sub_39bc1f
arpl sp ax
cmc
pop edi
int 0x14
or ebp eax
jmp 0x5a8bac22
and bh dh
rcr di 0xe
add [ ebp - 0x4 ] ecx
rcr di cl
pushad
sub ecx 0x8
or edi edx
xadd bx di
pushad
shr ecx 0x1
push 0x54d1ddd9
setpe bh
btr bx di
xadd di bx
mov edi [ esi ]
rol bl cl
push [ esp + 0x4 ]
bt cx bx
rcl bl cl
add edi [ ebp + 0x10 ]
sbb bl ah
seto bh
add esi 0x8
add esp 0x48
call sub_39d414
mov [ esp ] edi
jmp rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
call sub_39f376
sets bh
mov ebx eax
pushad
cmp [ edi ] 0x23
push edx
lea esp [ esp + 0x24 ]
jne rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
pushfd
cmc
jmp sub_21762e
das
xor edx edx
call sub_2172b8
dec edx
jecxz rwxdata
jmp rwxdata
dec edx
rcl [ ecx ] cl
out 0x72 eax
loopne rwxdata
dec ecx
out dx al
mov [ 0x1e2dba51 ] eax
rcl [ ebx + edx * 2 + 0x7a ] 0x2f
cmp cl [ edi + 0x5f5e97b1 ]
shl [ ebx + esi * 4 ] cl
mov [ eax - 0x4e ] ebp
xor [ edi ] ebx
ja rwxdata
jbe rwxdata
retn
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
dec eax
xchg [ eax ] ebp
neg ch
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_3abbbe
lea esp [ esp + 0x10 ]
jne rwxdata
pushfd
cmc
jmp sub_21762e
bswap ax
sub edx edx
cwde
sar eax cl
clc
mov eax edx
clc
sar al cl
clc
inc al
add edi 0x1
pushfd
add al 0xbd
or al 0xb0
sbb al 0x67
mov al [ edi ]
mov cl 0x6
insb
rol [ eax ] cl
sub cl cl
das
mov dh 0x80
jo rwxdata
push 0xd53491aa
mov [ esp ] 0x19b976cf
test al al
call sub_394194
lodsb [ esi ]
cmp ebx [ 0x6048f5c4 ]
jb rwxdata
mov al 0x1c
mov al [ bx ]
iretd
sub_3abce7
and ebx 0xfff
xlat
push ecx
cmpsd [ esi ] [ edi ]
dec ebp
sub al 0x4
lodsd [ esi ]
xchg ebx eax
push ecx
jge rwxdata
dec ecx
iretd
mov ecx 0x2df5a963
scasb [ edi ]
or al 0x24
out 0xe4 eax
mov al [ 0xffffffffdeef235f ]
xor al 0x8
mov [ ecx + ecx + 0x58f2504b ] esp
lahf
sub [ edx ] ch
hlt
outsb
pop eax
jae rwxdata
int 0x2b
rcr edi 0x57
clc
and [ esi + 0x72 ] 0xc0
clc
cmp eax 0x96f08b2f
dec edi
loopne rwxdata
sar dh 0x1
pop esi
jns rwxdata
clc
call sub_398d17
std
aam 0x6a
mov [ ebx + 0x7a ] edi
jl rwxdata
imul eax [ esi - 0x27 ] 0xffffffcb
push ecx
das
cmpsd [ esi ] [ edi ]
mov ch 0xef
jpe rwxdata
mov [ 0x51d78b7d ] eax
jge rwxdata
pop eax
xchg al bh
aas
jo rwxdata
lodsd [ esi ]
add al [ ebx + 0x71 ]
pop esi
jle rwxdata
inc eax
iretd
add al 0x78
not [ eax ]
neg [ eax - 0x30bfeaf8 ]
popfd
xor al 0x56
retn 0x339b
mov [ esp + 0x3c ] rwxdata
push 0x8a04adee
pushfd
push 0x22a2c932
push [ eax ]
pop [ esp + 0x44 ]
mov [ esp ] di
push [ esp ]
push [ esp + 0x48 ]
retn 0x4c
sub_3ac03d
lea esp [ esp + 0x24 ]
je rwxdata
clc
cmc
bt esp edi
push edx
or ecx ecx
pushfd
pushfd
jmp rwxdata
test ah dh
or ecx ecx
jmp rwxdata
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
push eax
jmp rwxdata
not bl
call sub_39bc1f
arpl sp ax
cmc
pop edi
int 0x14
or ebp eax
jmp 0x5a8bac22
not bl
ror di 0x5
inc bh
add [ ebp - 0x4 ] ecx
test bh 0x61
stc
cmp cl cl
sub ecx 0x8
cmc
xadd bx di
shl bl 0x1
shr ecx 0x1
clc
rcr edi 0x4
mov edi [ esi ]
inc bx
clc
bts bx bx
setne bl
add edi [ ebp + 0x10 ]
or bl 0x68
add esi 0x8
pushad
mov bx [ esi ]
jmp rwxdata
lea esp [ esp + 0x4 ]
je rwxdata
shr ebx 0xc
cmp bh 0xaf
cmp edi ecx
cmp ebx 0x1
mov [ esp + 0xc ] 0x17
lea esp [ esp + 0x20 ]
je rwxdata
and bh dh
rcr di 0xe
add [ ebp - 0x4 ] ecx
rcr di cl
pushad
sub ecx 0x8
or edi edx
xadd bx di
pushad
shr ecx 0x1
push 0x54d1ddd9
setpe bh
btr bx di
xadd di bx
mov edi [ esi ]
rol bl cl
push [ esp + 0x4 ]
bt cx bx
rcl bl cl
add edi [ ebp + 0x10 ]
sbb bl ah
seto bh
add esi 0x8
add esp 0x48
call sub_39d414
mov [ esp ] edi
jmp rwxdata
cmp ah ah
dec bl
mov bx [ esi ]
pushfd
push esp
test ch 0x11
clc
and ebx 0xfff
clc
call sub_217be6
jmp rwxdata
call sub_39f376
sets bh
mov ebx eax
pushad
cmp [ edi ] 0x23
push edx
lea esp [ esp + 0x24 ]
jne rwxdata
pushad
pushfd
cmp ebx 0x2
mov [ esp ] dl
lea esp [ esp + 0x24 ]
je rwxdata
pushfd
cmc
jmp sub_21762e
das
xor edx edx
call sub_2172b8
dec edx
jecxz rwxdata
shr bl cl
push ebp
adc bx sp
mov bx [ esi ]
call sub_3abce7
mov esp esi
push 0xd66c7b88
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
pushfd
push esp
call sub_39cae5
jmp rwxdata
dec edx
rcl [ ecx ] cl
out 0x72 eax
loopne rwxdata
dec ecx
out dx al
mov [ 0x1e2dba51 ] eax
rcl [ ebx + edx * 2 + 0x7a ] 0x2f
cmp cl [ edi + 0x5f5e97b1 ]
shl [ ebx + esi * 4 ] cl
mov [ eax - 0x4e ] ebp
xor [ edi ] ebx
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
push 0xfffffff6
jbe rwxdata
retn
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
dec eax
xchg [ eax ] ebp
neg ch
sub_3ac137
push 0x202303bd
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x2c ]
jmp rwxdata
pushad
mov [ esp + 0x1c ] eax
mov al [ esp + 0xc ]
setne al
setpo al
mov al ah
lodsb [ esi ]
bt eax eax
xor al 0x6e
mov [ esp + 0x8 ] cl
pushad
call j_sub_392f6b
sub_3ac15d
lea esp [ esp + 0x24 ]
je rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
push ebp
clc
call sub_39f414
lea esp [ esp + 0x34 ]
jb rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
clc
test di dx
clc
stc
cmp eax [ ebp - 0x10 ]
push edx
pushad
call sub_39a23e
pushfd
jmp rwxdata
call sub_2173ac
add edx edx
add ecx [ ebp - 0x35 ]
sub ah al
sub_3ac5c1
sub al 0x82
push eax
jmp rwxdata
call sub_3acb93
loopne rwxdata
xchg ecx eax
mov [ 0x7cb02436 ] eax
lea ebp [ ebx + 0x57 ]
push ds
push ss
fwait
mov [ 0xffffffff99a96d9a ] al
ja rwxdata
jmp rwxdata
jno rwxdata
cdq
insd
jns rwxdata
sub dl bh
shr [ ebp - 0x70 ] 0xd
dec esi
mov ah 0x9b
pop ecx
lodsd [ esi ]
cmp eax 0x7947d9d7
xor [ edx + 0x466e87b5 ] ah
dec ecx
scasd [ edi ]
popfd
inc ebx
mov edi 0x47074ba3
dec esi
adc eax 0xf3447d2c
dec ecx
mov al [ 0x76a94bf7 ]
loope rwxdata
fmul [ edx ]
scasd [ edi ]
push ss
jmp rwxdata
outsb
inc esi
push ds
xchg edx eax
push esi
adc [ edx ] ebx
mov ah 0xa7
pop ss
iretd
sub_3ac5d6
push [ edi ]
pop [ esp + 0x4 ]
pushfd
cmp bx 0x9fdc
bt ecx 0x3
cmp edi ebx
pushad
mov [ esp + 0x10 ] 0xf5
lea esp [ esp + 0x28 ]
ja rwxdata
clc
jmp sub_394ed2
adc al 0x66
pushfd
sub ebx edi
mov al 0x1d
sub esp 0xfffffffc
add ebx esp
not al
and al al
rol di 0xf
not di
mov edi ebx
call sub_39315f
lea edi [ edi + 0x1 ]
pushfd
mov eax [ esp + 0x28 ]
push [ esp + 0x4 ]
lea esp [ esp + 0x30 ]
ja rwxdata
test dh ch
test bp di
pushad
cmp ecx [ ebp - 0x4 ]
call sub_39feab
cmp eax [ ebp - 0x10 ]
pushfd
push [ esp ]
pushad
call sub_393bb9
mov [ esp + 0x4 ] 0x3504a534
lea esp [ esp + 0x4 ]
jns rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
pushfd
mov [ esp ] 0xbb1d4cd0
push 0x9424f5d5
mov [ esp ] 0x76c6
lea esp [ esp + 0x4 ]
jmp rwxdata
push 0xbb1d4cd0
push esi
pushad
push [ esp + 0x4 ]
mov [ esp ] 0xb4a1
lea esp [ esp + 0x28 ]
jmp rwxdata
stc
push 0x69b51dd0
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
cmc
cmp [ edi - 0x1 ] 0x0
pushfd
call sub_39b494
fcom [ ecx + 0x7a ]
les esp [ edx - 0x7f ]
xchg esp eax
inc esp
int3
pushad
call sub_3b0606
pushad
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x24 ]
jbe rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_3ac70f
mov [ esp ] 0x132
mov [ esp ] al
cmp [ edi - 0x1 ] 0x0
pushad
pushfd
lea esp [ esp + 0x28 ]
jne rwxdata
jmp rwxdata
pushfd
pushad
mov [ esp + 0x1c ] eax
mov al [ esp + 0xc ]
setne al
setpo al
mov al ah
lodsb [ esi ]
bt eax eax
xor al 0x6e
mov [ esp + 0x8 ] cl
pushad
call j_sub_392f6b
pop eax
jl rwxdata
mov cl 0x4b

stosb [ edi ]
shl [ ebx + ebx * 8 + 0x34e3e8f9 ] 0x1
inc esi
loopne rwxdata
btr di sp
mov edi [ edx + 0x24 ]
mov [ esp ] 0xdbb4d0aa
stc
call sub_38fc20
fisttp [ edx ]
add bh ah
jo rwxdata
xchg esp eax
in eax 0x8
inc ebx
out dx al
ficom [ ecx - 0x5f ]
sbb al [ 0x241a2b60 ]
xchg esi eax
int 0xbe
out 0x70 eax
mov esp 0x3ece98af
or [ edx + 0x69 ] ebp

sub_3ac906
test edx edx
push 0x3a895427
mov [ esp ] 0xdf20
pushfd
lea esp [ esp + 0x50 ]
je rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
cmp ecx 0xf6dc42d0
cmc
add edx eax
shl cl 0x7
mov ecx [ esi + 0x7c ]
pushad
test esp 0xeb471b13
clc
push 0x5e79d5ad
add ecx edx
test al 0xfe
mov [ esp + 0x4 ] cx
pushfd
jmp rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
mov [ ebp - 0x10 ] ecx
cmp ebp 0x69ac92fd
sbb cl ah
setae cl
not cl
mov ecx [ ebp + 0xc ]
pushfd
cmp ecx 0xffff
push [ esp + 0xc ]
jmp rwxdata
lea esp [ esp + 0x30 ]
jbe rwxdata
test ch dl
bt si 0xe
sub ecx [ edx + 0x10 ]
pushfd
pushad
cmc
cmp dl bh
cmp ecx [ edx + 0x14 ]
jmp rwxdata
rcr bl 0x3
cmc
mov edi [ edx + 0x24 ]
bts cx ax
stc
bswap cx
neg bh
add edi eax
bswap bx
mov ebx [ edx + 0x20 ]
mov cl ch
clc
stc
add ebx eax
bts cx 0xe
mov [ ebp - 0x8 ] 0x0
adc ch cl
dec cl
neg cl
bsr ecx eax
mov ecx [ edx + 0x18 ]
stc
push 0x69b51dd0
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
pushad
push ebp
push 0x447ddc79
lea esp [ esp + 0x4c ]
jae rwxdata
pushad
jmp rwxdata
push eax
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
jmp rwxdata
pushfd
xor di bx
rcl edi cl
mov edi [ edx + 0x1c ]
push [ esp ]
call sub_392c5c
lea esp [ esp + 0x24 ]
jbe rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
sub_3ac953
lea esp [ esp + 0x4 ]
jg rwxdata
push 0x27da37e1
pushfd
mov [ esp + 0x4 ] 0x3504a757
call j_sub_39babe
mov bh 0x48
mov ebx [ esp + 0x24 ]
push edx
mov esp ebp
ja rwxdata
pushfd
mov [ esp ] 0x3504a757
call j_sub_3add52
jbe rwxdata
bswap bp
pop ebp
pushad
mov [ esp + 0x4 ] bl
push 0x941fd693
push [ esp + 0x24 ]
retn 0x2c
or [ ecx ] ah
push cs
cmp [ ebp + 0x64 ] 0xffffffcf
xor edi [ ecx + 0x3e5973f ]
mov ch ah
mov eax 0xe9200c25
dec ebx
jbe rwxdata
mov dl 0x5d
mov [ esi + 0x4a ] bh
dec edx
sub eax ebx
scasb [ edi ]
insb
cmp edi [ ebp + 0x74 ]
test [ ecx - 0x62 ] 0x94
push ebx
test [ edi - 0x80fd9e4 ] bh
fsub [ esi - 0x14 ]
or ebx [ esi + 0x2cc55790 ]
sbb bl cl
das
mov dh 0x13
mov dl 0x15
xchg ebp eax
pop ds
shl ebp 0x24
sar [ ecx + 0x30 ] 0x1
mov [ ecx + 0x60b132cc ] ds
add dl ah
fsubr [ edx - 0x13 ]
sub [ ebx + ecx ] edi
fldl2t
inc edx
loop rwxdata
call sub_3ac5c9
lea esp [ esp + 0x4 ]
je rwxdata
pop ebp
push edi
mov [ esp ] bp
push [ esp + 0x4 ]
retn 0xc
xor dl [ ebp + 0xf488441 ]
lahf
jbe rwxdata
not bl
call sub_39bc1f
arpl sp ax
cmc
pop edi
int 0x14
or ebp eax
jmp 0x5a8bac22
and bh dh
rcr di 0xe
add [ ebp - 0x4 ] ecx
rcr di cl
pushad
sub ecx 0x8
or edi edx
xadd bx di
pushad
shr ecx 0x1
push 0x54d1ddd9
setpe bh
btr bx di
xadd di bx
mov edi [ esi ]
rol bl cl
push [ esp + 0x4 ]
bt cx bx
rcl bl cl
add edi [ ebp + 0x10 ]
sbb bl ah
seto bh
add esi 0x8
add esp 0x48
call sub_39d414
mov [ esp ] edi
jmp rwxdata
and al 0x1
xor [ ebp - 0x2f09e7a3 ] esp
pop esp
test [ ebx + ecx ] bh
int1
prefetchwt1 [ eax ]
lodsd [ esi ]
pushfd
fst [ ebx ]
mov eax 0x17838f50
mov al [ 0xada661f ]
retn 0x6671
adc [ ebp - 0x1a27d58c ] ch
std
les edx [ ebx ]
and eax eax
shr [ edi + eax * 8 - 0x11 ] 0x1
cli
pop esp
sti
test eax 0xc29792d8
pushad
xchg [ ebp - 0x79e625ac ] ecx
enter 0x995a 0x9b
pop edx
imul edx ebp 0xffffffda
leave
mov [ ebx + 0x58 ] 0xbe
and eax 0xe5173c99
pop esp
jno rwxdata
dec esp
dec esi
mov [ ecx - 0x35 ] ds
sub cl [ 0x598c0ea6 ]
xor eax 0x5c87ab8e
pop ecx
sti
add eax esi
salc
int1
in eax dx
call 0xffffffffe10a425c
sub eax [ eax + ecx * 2 - 0x2efc8e7d ]
mov [ 0xffffffff9532be1b ] eax
inc ecx
test [ eax + 0xf ] cl
xchg bh cl
inc esi
dec ebx
sbb eax 0xff13761e
out 0xc al
cwde
pop edi
shr [ edx + ebp * 4 + 0x37 ] 0x1
sbb eax 0x24165c27
or [ fs : eax + 0x6096edcf ] 0xd9
shl [ esi ] 0xc8
mov edx 0x2f1d9136
fisub [ ebx ]
push edx
sub [ 0x1559a2b8 ] 0x4c
call sub_39f376
sets bh
mov ebx eax
pushad
cmp [ edi ] 0x23
push edx
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
cmc
jmp sub_21762e
das
xor edx edx
call sub_2172b8
dec edx
jecxz rwxdata
dec edx
rcl [ ecx ] cl
out 0x72 eax
loopne rwxdata
dec ecx
out dx al
mov [ 0x1e2dba51 ] eax
rcl [ ebx + edx * 2 + 0x7a ] 0x2f
cmp cl [ edi + 0x5f5e97b1 ]
shl [ ebx + esi * 4 ] cl
mov [ eax - 0x4e ] ebp
xor [ edi ] ebx
jbe rwxdata
retn
dec eax
xchg [ eax ] ebp
neg ch
sub_3acb93
clc
rol al 0x7
clc
test dl cl
cmp al [ edi ]
lahf
lea edi [ edi + 0x1 ]
setg ah
pushfd
bswap ax
pop eax
mov eax [ esp + 0x34 ]
pushfd
pushfd
push esi
lea esp [ esp + 0x44 ]
ja rwxdata
test dh ch
test bp di
pushad
cmp ecx [ ebp - 0x4 ]
call sub_39feab
cmp eax [ ebp - 0x10 ]
pushfd
push [ esp ]
pushad
call sub_393bb9
mov [ esp + 0x4 ] 0x3504a534
lea esp [ esp + 0x4 ]
jns rwxdata
jmp rwxdata
pushfd
mov [ esp ] 0xbb1d4cd0
push 0x9424f5d5
mov [ esp ] 0x76c6
lea esp [ esp + 0x4 ]
jmp rwxdata
push 0xbb1d4cd0
push esi
pushad
push [ esp + 0x4 ]
mov [ esp ] 0xb4a1
lea esp [ esp + 0x28 ]
jmp rwxdata
push 0xb4bb2956
pushfd
lea esp [ esp + 0x8 ]
jb rwxdata
pushad
call sub_3b0606
stc
push 0x69b51dd0
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
call sub_3ac70f
pushad
jmp rwxdata
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
jmp rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
lea esp [ esp + 0x24 ]
jbe rwxdata
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jmp rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
ja rwxdata
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_3acbc3
stc
sub al 0x30
cmp al 0x1f
cmp al 0x9
push [ esp ]
mov [ esp + 0x4 ] 0xee
call j_sub_2176f4
jl rwxdata
out 0x9e eax
inc esi
test [ edi + 0x61dccf67 ] ebx
fimul [ ecx - 0x59c7ad11 ]
enter 0xe55a 0xda
adc dh [ esi ]
and [ ebp - 0x4b36be8 ] edi
pop es
xchg ecx eax
hlt
call 0x2ac027d8
sti
test eax 0x283d6c83
or [ esi + 0x4dd6384 ] eax
idiv ch
std
xchg edx eax
aaa
or dl [ edi + 0x604bacaa ]
loop rwxdata
inc esi
pop ebx
loope rwxdata
test [ ebx - 0x23 ] ah
add al 0xf6
std
push ebp
fsubr st1
jmp 0x62cf552c
sub_3ad33e
lea esp [ esp + 0x10 ]
jne rwxdata
jle rwxdata
setb al
movsx ax al
jmp rwxdata
pushad
push [ esp + 0x8 ]
push ebp
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov esp esi
push ebp
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
mov [ edi - 0x1 ] 0x0
lahf
push ebx
movsx ax dl
pushfd
lea eax [ rwxdata ]
mov [ esp ] dl
call sub_394eae
mov [ esp ] 0xd50b
lea esp [ esp + 0x44 ]
je rwxdata
clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
not bl
call sub_39bc1f
arpl sp ax
cmc
pop edi
int 0x14
or ebp eax
jmp 0x5a8bac22
cmc
cmp cl bl
bt ax bx
push 0x2f52f511
or ecx ecx
call sub_39403c
jae rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
inc edi
ja rwxdata
les esp [ ebx ]
and eax 0xb39fd8cc
inc eax
int3
jbe rwxdata
clc
stc
test dl 0x59
neg al
cmc
xor al 0x6e
cmp esp 0xe2c53c63
mov [ ecx ] al
call sub_395605
mov esp 0x31654cf5
jecxz rwxdata
add [ eax ] eax
and [ eax ] edx
scasb [ edi ]
and eax 0x725467b9
sub_3ad354
cmp al 0x5a
pushad
lea esp [ esp + 0x28 ]
ja rwxdata
clc
sar ah cl
mov ah [ esi ]
jmp rwxdata
mov ah ch
add al 0x20
cmc
cmp ah 0x41
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
pushad
cmc
or al al
pushad
lea esp [ esp + 0x40 ]
je rwxdata
stc
cmp cl 0x3
cmp ah 0x5a
pushad
jmp rwxdata
pushfd
call sub_3a034a
xchg ebx eax
inc edx
ja rwxdata
stc
cmp al ah
push 0xdec14aee
mov [ esp ] 0x6486
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
lea esp [ esp + 0x20 ]
ja rwxdata
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
dec esi
push edi
mov ah 0xef
pushad
sti
stosb [ edi ]
cmp eax 0x3fd9f434
cmpsb [ esi ] [ edi ]
and ebx [ esi ]
xchg ebx eax
scasb [ edi ]
mov [ edi - 0xc ] ch
test eax 0x3fb86283
cmp al 0x51
mov ebx 0x238eb33a
sub eax 0xdd25a1cf
push esp
mov [ esi ] ss
fadd st5
adc [ esi - 0x7f537987 ] ch
mov esi [ esi + 0x4 ]
daa
sub al 0x3f
cdq
dec esi
int 0x7c
pop eax
das
pushfd
pushfd
mov [ esp ] dh
jmp sub_3ac949
pushfd
inc esi
pushad
pushfd
pushfd
inc edi
mov [ esp + 0x8 ] 0xab9df260
lea esp [ esp + 0x2c ]
jmp sub_217c14
call sub_39d8b7
cmp dh bl
call 0xffffffffe30f57ec
hlt
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
call j_sub_39f43e
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
stc
bt dx 0x2
cmp ah 0x5a
jmp rwxdata
jmp rwxdata
ja rwxdata
cmc
stc
add ah 0x20
pushad
push eax
push [ esp ]
mov [ esp + 0x8 ] edi
or al al
pushfd
mov [ esp + 0x8 ] 0x86
jmp rwxdata
lea esp [ esp + 0x2c ]
je rwxdata
push 0xc82a5b0
pushad
pushfd
pushfd
cmp al ah
push 0xbf0fdd59
jmp rwxdata
call sub_2175a0
and [ ebp + edx - 0x757842d8 ] 0xffffffee
sti
mov dl 0x56
test al 0x81
aam 0xd9
jpo rwxdata
cli
outsb
sub eax 0x2d1648f1
or ebp edx
dec eax
salc
out dx eax
push ecx
or ah 0x36
mov ebp 0xd40d0b96
push 0xffffff89
lahf
inc esi
mov esp 0x4acc253b
test eax 0xccd357c
xchg ebp eax
sub eax 0x12b610b7
xor al 0x8a
aaa
pushfd
cmpsb [ esi ] [ edi ]
0xd38a567 0xeb69
sub_3ad6e3
lea esp [ esp + 0x58 ]
jno rwxdata
pushfd
cwde
movzx eax cl
movzx eax cl
mov eax [ esp + 0x4 ]
jmp rwxdata
lahf
pop eax
push 0x371533c3
mov [ esp ] 0xbe
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
mov [ esp ] 0x8255
lea esp [ esp + 0x8 ]
ja rwxdata
test dh ch
test bp di
pushad
cmp ecx [ ebp - 0x4 ]
call sub_39feab
cmp eax [ ebp - 0x10 ]
pushfd
push [ esp ]
pushad
call sub_393bb9
mov [ esp + 0x4 ] 0x3504a534
lea esp [ esp + 0x4 ]
jns rwxdata
push 0xf6ac7a02
pushfd
lea esp [ esp + 0x8 ]
jb rwxdata
pushfd
push esi
jmp rwxdata
pushfd
mov [ esp ] 0xbb1d4cd0
push 0x9424f5d5
mov [ esp ] 0x76c6
lea esp [ esp + 0x4 ]
jmp rwxdata
push 0xbb1d4cd0
push esi
pushad
push [ esp + 0x4 ]
mov [ esp ] 0xb4a1
lea esp [ esp + 0x28 ]
jmp rwxdata
stc
push 0x69b51dd0
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
call sub_3943c5
movsd [ edi ] [ esi ]
cmp al 0xa1
mov [ 0xffffffffe6c83a18 ] eax
pop esi
int3
push ebx
lea esp [ esp + 0xc ]
jb rwxdata
pushad
call sub_3b0606
pushad
jmp rwxdata
pushad
clc
cmc
test si bx
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
jmp rwxdata
call sub_39e0e7
dec edi
xchg [ ebx + ecx * 2 + 0x4527d9c4 ] ch
std
push ebx
imul ebp [ eax + 0x35f99b01 ] 0x599a84ba
jmp rwxdata
lea esp [ esp + 0x24 ]
jbe rwxdata
sar [ ebp - 0x2a ] cl

clc
ror dl 0x4
shr si cl
sub eax eax
movzx dx bl
lea edx [ ecx - 0x297e2d1d ]
pushfd
bswap bx
mov edx [ esp + 0x4 ]
movsx bx cl
mov ebx [ esp + 0x8 ]
pop esi
pushad
pop edi
pop esi
mov edi [ esp + 0x20 ]
call sub_38ea34
mov [ 0xffffffffb14f0584 ] eax
xor [ ecx + 0x6aafbaa ] cl
xor al 0xf4
fsin
inc eax
inc ebp
clc
dec esi
xchg ebp eax
jg rwxdata
xor si di
sub ecx 0x1
sar si cl
mov [ ebp - 0x4 ] ecx
cmc
mov ecx [ ebp - 0x8 ]
shr di 0x8
xadd si di
bts si 0x5
and di 0x449
add ecx [ ebp - 0x4 ]
pushad
inc si
xchg di si
shr ecx 0x1
bts di 0xd
xadd di si
add si si
shr si 0xf
mov edi [ ebx + ecx * 4 ]
test bh 0x87
pushfd
add edi eax
call sub_3ac137
add al 0xc9
or [ ebp + 0x2e06be9a ] esi
sbb [ edi + edx * 4 ] edx
mov bh [ edx ]
ror eax cl
fnstcw [ ebx - 0x4f ]
xor [ ebp - 0x29a36a51 ] ah
sbb eax 0x7dd3c223
lea ecx [ eax - 0x35 ]

test [ ebx - 0x51ef5b5e ] dl
inc edx
dec esi
add al dl
aam 0xa5
and [ ebp - 0x80 ] bl
cmp eax 0x756bd2f1
iretd
sub_3adc79
mov ah dh
mov [ esp ] 0xa
lea eax [ LocalFree@IAT ]
pushfd
mov [ esp ] ah
push [ esp + 0x4 ]
push 0x2fa0e278
mov [ esp + 0xc ] rwxdata
pushad
jmp rwxdata
call sub_3ace3e
mov ebx 0x3ea9a72a
int1
dec esp
sub [ ecx ] ebx
daa
aam 0x35
or eax edi
dec ebp
loope rwxdata
aaa
mov [ eax ] bh
jl rwxdata
xchg ebx eax
0xfbf062b 0xc101
mov [ eax ] dl
scasb [ edi ]
mov ch 0x5b
pushad
mov al ch
enter 0xff0e 0xff
add [ ecx ] bl
[ gs : esi ]
0x3b8419a5 0x22e
adc [ edx - 0x45f6cd7f ] esp
cmp bl [ ebp + 0x4877884d ]
cmp eax 0x65dbf2f3
jbe rwxdata
aaa
mov esi 0x95f847a0
cmpsb [ esi ] [ edi ]
sti
aam 0x7e
push ebx
out dx al
cli
fucomp st5
call [ edx + 0x6e ]
sbb eax 0x4f313fba
je rwxdata
mov [ 0x388837dc ] al
mov [ edi + 0x48 ] dh
xchg [ ecx - 0x4a ] ah
or eax 0xef01590
pop ecx
cmp ebp 0xffffffed
cmp edi [ ecx + 0x42c0404f ]
outsb
mov ds dx
call 0xffffffffe827e187
mov ebp 0x1fedcf75
ror dh 0xa1
0xa60aec2e 0xaff4
sub_3ade65
call j_sub_3abbbe
mov al [ 0xffffffffab5c2c31 ]
loope rwxdata
push edx
mov ecx 0x40aa190a
xor dl [ 0x757552ae ]
push eax
js rwxdata
rol [ ebp - 0x4cb74e38 ] 0x1
pop esp
jg rwxdata
std
mov es [ ebp - 0x5e ]
sahf
into
shl [ eax + ecx - 0x3 ] cl
sbb [ edi + 0x7c ] 0x6
xor eax 0x5c4884ce
cmp [ esi ] edi
pop esp
inc eax
fnsave [ ebp + esi * 4 - 0x4a221acc ]
fbld [ esi + 0x33203fb3 ]
cmpsb [ esi ] [ edi ]
sbb edx esp
in eax dx
out 0x1b eax
xor eax 0xf3f4a61b
jae rwxdata
xor eax 0xfba4784b
inc eax
sahf
push ebp
std
pop ebx
xor [ eax ] edx
lodsd [ esi ]
pushad
or al 0x1c
adc [ eax - 0x18 ] ah
sbb [ esi + 0x66eb20ff ] dl
mov ebx 0xf665a13
mov esp 0x9cc389dc
cmp ch 0x65
bt bp 0x8
call sub_39bd4f
jo rwxdata
loop rwxdata
and [ esi ] bh
or dl [ edi - 0x50218e36 ]
in eax 0xee
fadd [ esi ]
jo rwxdata
popfd
mov dh 0x8f
movsb [ edi ] [ esi ]
0x2204adb0 0x9933
jbe rwxdata
into
cmp bl [ ebx - 0x4b ]
and eax 0xa3399f0d
cmp edx esp
or eax 0x7df9d70f
0x513943f9 0x14e7
mov esi 0xe9d599f4
mov eax 0x7a367bc2
je rwxdata
mov [ 0xffffffff88640c58 ] eax
ffree st4
lea eax [ esi ]
inc edx
enter 0xb93 0xf5
dec edi
aaa
jmp rwxdata
pushfd
mov [ esp + 0x4 ] 0x3504425f
pushad
mov [ esp + 0x4 ] 0x8b9d
mov [ esp + 0x4 ] 0x55
push 0x15002df2
mov [ esp + 0x24 ] 0x95c05777
mov [ esp + 0x10 ] 0xbdc73daf
push eax
mov [ esp ] esp
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
mov [ esp ] ecx
pushad
pushfd
push [ esp ]
mov [ esp + 0x24 ] ebp
mov [ esp + 0x4 ] sp
mov [ esp + 0x20 ] eax
pushfd
mov [ esp + 0x4 ] si
mov [ esp + 0x20 ] esi
push [ esp ]
jmp rwxdata
mov [ esp ] 0xee52f1b0
mov [ esp + 0x20 ] edi
push 0xdca92d94
mov [ esp + 0x20 ] ecx
jmp rwxdata
jmp sub_3aedab
sub_3ae00b
clc
cmp al 0x9
lea esp [ esp + 0x24 ]
call sub_39c428
jle rwxdata
pop edx
rcl [ edx ] cl
and bh al
call [ ecx ]
les esi [ edx ]
jecxz rwxdata
dec edx
mov eax 0x73eb56da
jno rwxdata
0xdab8
std
mov dh 0x46
cmp [ 0xffffffff973ae898 ] 0x7028ad21
mov [ 0xffffffffae15268d ] al
inc esi
adc [ ecx + 0x74 ] 0xeedcd8a6
adc [ ebp + 0x26b1f45e ] ch
0x424648d 0x820f
inc esp
sub_3ae0c9
lea esp [ esp + 0x4 ]
jb rwxdata
pushfd
call sub_394ed7
add al 0xd3
cmp [ eax - 0x56ba1957 ] edi
dec edi
into
xor dh [ eax + 0x7daf7497 ]
fwait
movsb [ edi ] [ esi ]
rcr [ edx ] 0x1
insb
mul [ ebx + 0x7f ]
push 0xffffffc4
add al 0x90
mov esp 0xd424e3c8
cwde
pop edx
dec edi
sbb al bl
lea esp [ edi - 0x51698b2 ]
inc esp
ror esi 0x1
test [ edx - 0x30 ] 0x339eb417
sbb eax 0x41ffd213
iretd
pushad
push 0x984fbdf7
push 0x441abc6f
push [ esp + 0x28 ]
retn 0x2c
sub_3ae2f1
cmc
test dl 0x2f
cmp dx ax
cmp [ ebp + 0xc ] 0x1
mov [ esp ] bl
push 0xc73fd950
pushfd
mov [ ebp + 0xc ] eax
pushad
mov [ ebp + 0x8 ] ebx
jmp rwxdata
push 0x6d6bf94a
jmp rwxdata
mov [ ebp + 0x4 ] ecx
mov [ esp + 0x8 ] al
mov [ esp ] bl
jmp rwxdata
pushfd
mov [ ebp ] edx
push [ esp ]
pushfd
push [ esp ]
call sub_3b07fd
pushad
not dx
mov dx [ ebp ]
mov [ esp ] 0x1f
pushfd
mov [ esp + 0x8 ] cx
dec esi
bt ecx 0x10
pushfd
add ebp 0x2
push 0x4d0b66bd
mov [ eax + edi ] dl
mov [ esp ] ax
mov [ esp ] 0x1b624be9
mov [ esp ] 0x21
lea esp [ esp + 0x34 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3ae369
mov [ esp ] 0xcf
mov [ esp + 0x18 ] esi
pushfd
mov [ esp + 0x18 ] edi
jmp rwxdata
mov [ esp + 0x14 ] ecx
mov [ esp + 0x8 ] sp
mov [ esp + 0x10 ] edx
pushad
pushfd
pop [ esp + 0x2c ]
mov [ esp ] 0xed
push [ esp ]
call sub_3af563
call sub_3b1170
pushad
mov [ esp + 0x1c ] ebx
call sub_3af946
btr di dx
sub cl 0xc7
cdq
std
mov esp ebp
adc cx di
xchg dh cl
pop ecx
movzx edx bl
cdq
pop edx
shr cx cl
bswap bx
rdtsc
pop ebx
sbb si 0xe334
popfd
pushfd
mov cx 0xf4b6
movzx bp al
pop ecx
pop edx
movsx cx cl
pop ecx
call sub_3b0e9a
mov [ esp + 0x44 ] ebx
jmp rwxdata
call sub_3af9d4
mov [ esp + 0x14 ] edx
pushad
pushfd
pushfd
pop [ esp + 0x34 ]
jmp rwxdata
jmp rwxdata
mov [ esp + 0x30 ] ebx
pushfd
pushfd
push [ esp + 0x4 ]
mov [ esp ] dl
push [ rwxdata ]
pop [ esp + 0x38 ]
jmp rwxdata
mov [ esp + 0x4 ] ax
mov [ esp + 0x34 ] 0x0
mov [ esp ] ax
mov [ esp ] ecx
push edx
mov [ esp + 0x24 ] bl
lea esp [ esp + 0x38 ]
jmp sub_3b1253
sub_3ae45c
pushfd
xchg [ ebp + ecx * 4 ] eax
test ch al
pushad
mov [ esp + 0x2c ] eax
cmc
pushfd
stc
sub ecx 0x1
pushfd
push 0x3a4676f0
lea esp [ esp + 0x38 ]
jne rwxdata
cmp sp bp
bt dx 0x7
call sub_3b07e8
call sub_3af4ce
test bh bl
bt si dx
cmc
xor eax eax
jmp rwxdata
push 0xf7ae4d09
call sub_3af3cc
sub_3ae4b0
push [ esp + 0x8 ]
mov [ esp ] 0xa4
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x4 ] 0x7927
mov [ esp + 0x18 ] ebx
pushfd
pushfd
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x1c ]
pushfd
pushfd
mov [ esp + 0x20 ] 0x0
pushfd
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp sub_3b1253
sub_3ae8e5
mov bp 0xa7be
xchg [ esp + 0x1c ] ecx
bswap bp
mov [ esp + 0x18 ] edx
mov edi [ esp ]
pushfd
pop [ esp + 0x14 ]
bswap si
movsx si bl
mov [ esp + 0x10 ] ebx
shr esi 0x1f
bsr si di
push [ rwxdata ]
pop [ esp + 0xc ]
mov [ esp ] sp
bt dx bp
shl di 0xe
rcr si cl
mov [ esp + 0x8 ] 0x0
sar si 0xe
mov esi [ esp + 0x38 ]
and bp ax
sar bp 0xc
sbb di 0xfd43
neg bp
bswap esi
pop ecx
rol edi cl
add esi 0x9dcffc04
movsx bp al
pushfd
rol esi 0x10
neg cl
pushfd
or di si
sbb ebp 0x88615514
lea ebp [ esp + 0xc ]
cmp cx 0x59a1
sub esp 0xb4
shl al 0x1
cmp esi 0x157ce5e8
mov edi esp
bswap cx
sar cx 0xe
mov ebx esi
xchg al cl
btc cx 0x1
add esi [ ebp ]
btc cx cx
shl cx cl
clc
mov al [ esi - 0x1 ]
inc ch
bts cx 0xa
sub al bl
stc
neg al
push 0x391c7e4
lea ecx [ ebp - 0x50a09944 ]
inc al
cmc
pop ecx
bswap cx
ror al 0x4
adc ecx 0xec220144
push 0x7f814e55
sub bl al
btc ecx ebp
rol ch 0x1
movzx eax al
add ch ch
setl ch
or ch ah
mov ecx [ eax * 4 + rwxdata ]
bt di 0x4
push ebx
pushad
cmp ch 0x13
not ecx
cmc
add esi 0xffffffff
bt sp ax
cmp ch ch
clc
push [ esp + 0x10 ]
add ecx 0x0
jmp rwxdata
mov [ esp + 0x28 ] ecx
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
push [ esp + 0x2c ]
retn 0x30
sub_3aea07
pushfd
jmp rwxdata
jmp rwxdata
pushfd
pop [ esp + 0x24 ]
call sub_3aed75
call sub_3af794
call sub_3af9d4
mov [ esp + 0x14 ] edx
pushad
pushfd
pushfd
pop [ esp + 0x34 ]
jmp rwxdata
jmp rwxdata
mov [ esp + 0x30 ] ebx
pushfd
pushfd
push [ esp + 0x4 ]
mov [ esp ] dl
push [ rwxdata ]
pop [ esp + 0x38 ]
jmp rwxdata
mov [ esp + 0x4 ] ax
mov [ esp + 0x34 ] 0x0
mov [ esp ] ax
mov [ esp ] ecx
push edx
mov [ esp + 0x24 ] bl
lea esp [ esp + 0x38 ]
jmp sub_3b1253
sub_3aea60
pushfd
mov [ esp + 0x40 ] ebx
call sub_3aee07
pushad
pushad
mov [ esp + 0x3c ] ecx
jmp rwxdata
pushfd
mov [ esp + 0x3c ] ebp
call sub_3affdd
pushfd
pop [ esp + 0x24 ]
jmp rwxdata
push edx
mov [ esp + 0x4 ] dl
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp + 0x4 ] bh
push edx
lea esp [ esp + 0x30 ]
jmp sub_3b0d83
sub_3aea75
and al 0xe8
push ebp
jmp rwxdata
mov al [ esi - 0x1 ]
test si 0xf9b9
sub al bl
test al 0xa7
bt esi 0x14
clc
add al 0x9e
cmp si bx
cmp dl dh
test dh ch
cmc
neg al
clc
lea esi [ esi - 0x1 ]
clc
call sub_3b0155
sub_3aea8e
pop ecx
pop edi
xchg si bp
cwde
not si
xchg bp cx
pop esi
call sub_3b0b19
bt bx 0xd
or ecx ecx
push ebp
push [ esp + 0x4 ]
call sub_3b129d
sub_3aeabf
stc
push edi
push 0x2559cecf
neg al
cmc
pushfd
cmc
push esp
ror al 0x2
stc
cmp bl 0x27
mov [ esp ] edi
cmc
add esi 0xffffffff
pushad
add bl al
call sub_3b024e
sub_3aeae2
pushad
mov [ esp ] bp
push [ esp + 0x24 ]
pop [ ebp ]
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3aeb8d
add esi 0xffffffff
bt bp 0x4
bt sp 0x3
test sp bp
cmp bl 0x81
add ecx 0x0
push 0x947344b5
pushad
jmp rwxdata
jmp rwxdata
mov [ esp + 0x34 ] ecx
pushfd
push 0xe14cc384
push [ esp + 0x3c ]
retn 0x40
sub_3aec3c
pushfd
pop [ esp + 0x40 ]
lea esp [ esp + 0x40 ]
jo rwxdata
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] ebx
jmp rwxdata
pushfd
push 0xb238a78d
mov [ esp ] sp
mov [ esp + 0x4 ] ebx
call sub_3ae320
mov [ esp + 0xc ] dh
mov [ esp + 0x4 ] 0x93
mov [ esp + 0x18 ] ebp
call sub_3b07f8
shl ah cl
aad 0x30
bts ax 0x5
mov eax [ ebp ]
inc dl
and dl bl
mov dl [ ebp + 0x4 ]
cmc
call sub_3af31e
pushad
mov [ esp ] cx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x14 ] 0xec39
mov [ esp + 0x1c ] ebp
lea esp [ esp + 0x1c ]
jge rwxdata
push [ rwxdata ]
pop [ esp + 0x38 ]
push [ esp ]
call sub_3affa6
pushfd
pushad
mov [ esp + 0x20 ] ecx
pushad
mov [ esp + 0x4 ] esp
mov [ esp + 0x4 ] 0x87
push 0x8aa8260c
mov [ esp + 0x40 ] ebp
mov [ esp + 0x8 ] 0xef
mov [ esp ] 0x67
pushfd
mov [ esp + 0x40 ] eax
lea esp [ esp + 0x40 ]
jpe rwxdata
jmp sub_3af350
push esp
mov [ esp ] cl
mov [ esp ] eax
jmp rwxdata
call sub_3b08f3
mov [ esp + 0x1c ] eax
jmp sub_3ae369
pushfd
pushad
pushad
mov [ esp + 0x40 ] esi
mov [ esp + 0x4 ] 0x8a63
push 0x8406a7de
pushfd
mov [ esp + 0x44 ] edi
jmp rwxdata
push esi
push ebx
mov [ esp ] 0x7f
pushfd
mov [ esp + 0x4 ] edi
lea esp [ esp + 0x4 ]
ja rwxdata
mov [ esp ] ch
push 0x388552e1
pushfd
mov [ esp + 0x48 ] ecx
call sub_3aed00
cwde
call sub_3af160
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
call sub_3ae3d1
pushfd
mov [ esp ] ecx
pushfd
push esp
jmp rwxdata
shl al 0x2
and bl 0x82
rol ecx 0x1a
xadd al cl
mov ebx esi
sbb ecx esi
ror ecx cl
rcl al cl
rol ch 0x1
add esi [ ebp ]
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
mov [ esp + 0x4 ] edx
pushfd
push [ esp ]
pushad
pushfd
pop [ esp + 0x28 ]
jmp rwxdata
mov [ esp + 0x24 ] ebx
mov [ esp + 0x4 ] 0x8a
push [ rwxdata ]
pop [ esp + 0x20 ]
pushfd
mov [ esp + 0x4 ] bh
pushfd
mov [ esp + 0x24 ] 0x0
push [ esp ]
pushfd
mov [ esp ] dl
mov [ esp ] 0x9bb588a3
lea esp [ esp + 0x2c ]
jmp sub_3b1253
sub_3aec57
pushfd
pop [ esp + 0x4c ]
pushfd
mov [ esp ] 0x45
mov [ esp + 0x8 ] 0xb9
mov [ esp + 0x4c ] ebx
push [ esp + 0x4 ]
mov [ esp + 0x4 ] al
push [ rwxdata ]
pop [ esp + 0x4c ]
pushfd
mov [ esp ] 0x95
mov [ esp + 0x10 ] 0x79ff
mov [ esp + 0x4c ] 0x0
push 0x4035a777
mov [ esp + 0x4 ] dl
mov [ esp + 0xc ] 0x6e5
mov [ esp + 0x4 ] 0x59
lea esp [ esp + 0x50 ]
jmp sub_3b1253
sub_3aed09
pushfd
pop [ esp + 0x2c ]
push [ esp ]
pushfd
mov [ esp ] ah
call sub_3aefd5
push 0xd29ba8ae
not al
mov [ esp ] ax
not dl
cmp ah bh
sub ebp 0x2
pushad
jmp rwxdata
stc
clc
and al dl
call j_sub_3af20d
sub_3aedba
pushfd
pop [ esp + 0x30 ]
pushfd
mov [ esp + 0x30 ] ebx
call sub_3af8e1
dec ax
sbb ax 0xaa4c
pushfd
cbw
mov ax [ esi - 0x2 ]
push 0x122f818e
xchg al ah
pushfd
clc
add ax bx
cmp esi ecx
not ax
pushad
test bh cl
cmp ecx 0x33d02062
neg ax
mov [ esp + 0x4 ] 0xe6
stc
sub esi 0x2
push [ esp + 0x4 ]
call sub_3afd53
sub_3aeea1
pushfd
mov [ esp ] bh
pushfd
pop [ esp + 0x40 ]
jmp rwxdata
mov [ esp ] bl
mov [ esp + 0x3c ] ebx
mov [ esp + 0x8 ] ebx
mov [ esp + 0x4 ] bh
push [ rwxdata ]
pop [ esp + 0x38 ]
push ebx
pushfd
mov [ esp + 0x3c ] 0x0
push [ esp + 0x10 ]
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp sub_3b1253
sub_3aeeb0
pushad
push [ esp ]
mov [ ss : eax ] dl
push eax
lea esp [ esp + 0x30 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3aef1d
mov [ esp ] dh
lea ebp [ ebp + ecx * 4 ]
push 0xa551356a
pushfd
mov [ ebp ] eax
mov [ esp + 0xc ] 0x23
push [ esp ]
lea esp [ esp + 0x34 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3aeff1
call sub_3b0736
add ebp 0x6
mov [ esp ] bh
mov [ esp ] 0x83
call sub_3af54c
shld dx di cl
xchg al dl
mov al [ esi - 0x1 ]
bsr dx cx
adc dl 0x3
xor al bl
movzx dx al
clc
movzx dx dl
bts dx bp
sub al 0x7
jbe rwxdata
cmc
movzx dx cl
stc
push 0x6fdbb59c
ror al 0x5
not dl
dec al
mov [ esp ] 0x81
xor bl al
pushfd
jmp rwxdata
rcr dh cl
push ebx
ror al 0x5
bswap dx
pushad
mov [ esp ] dh
dec al
sub esp 0xffffffdc
jpe rwxdata
pushad
not dx
mov dx [ ebp ]
mov [ esp ] 0x1f
pushfd
mov [ esp + 0x8 ] cx
dec esi
bt ecx 0x10
pushfd
add ebp 0x2
push 0x4d0b66bd
mov [ eax + edi ] dl
mov [ esp ] ax
mov [ esp ] 0x1b624be9
mov [ esp ] 0x21
lea esp [ esp + 0x34 ]
jmp rwxdata
sar dl cl
rcr dl 0x2
jmp rwxdata
movzx dx al
push 0xa1755e5c
xor bl al
bswap dx
movsx dx al
mov [ esp ] 0xdce4
mov dx [ ebp ]
mov [ esp ] 0xbc
dec esi
cmc
push edi
push esi
add ebp 0x2
mov [ esp + 0x8 ] 0x91
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
xor bl al
movzx dx cl
bswap dx
mov dx [ ebp ]
pushad
dec esi
push [ esp ]
cmp dl 0xa5
jmp rwxdata
mov [ esp + 0x8 ] bp
mov [ eax + edi ] dl
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
add ebp 0x2
mov [ esp ] 0x82
pushad
mov [ esp ] dl
mov [ eax + edi ] dl
pushfd
pushfd
push [ esp ]
mov [ esp + 0x8 ] 0x1966
lea esp [ esp + 0x50 ]
jmp rwxdata
sub_3af075
xchg [ esp + 0x40 ] esi
cld
pop edi
mov esi edx
pushfd
cld
lea edi [ ecx + eax - 0x40 ]
call sub_3af1a7
shrd ax si cl
mov eax [ ebp ]
pushad
mov [ esp + 0xc ] 0x8438c9c0
bt bp cx
jmp rwxdata
add [ ebp + 0x4 ] eax
call sub_3aea07
bts ax di
ror ah cl
cmp al dh
and ah 0x12
movzx ax [ esi - 0x2 ]
call j_sub_3b08c2
sub_3af0a1
push 0x5fb9a8b3
jmp rwxdata
push ecx
mov ax [ ss : eax ]
pushad
call j_sub_3b01e5
pushfd
pop [ esp + 0x54 ]
call sub_3af23d
cbw
stc
cwde
mov [ esp ] 0xe1
clc
pushfd
pushfd
add esi 0xffffffff
bt bx 0x1
mov [ esp + 0x8 ] 0xf7
call sub_3b0720
pushfd
mov [ ebp + 0x4 ] ax
jmp rwxdata
call sub_3b0b71
call sub_3b0b93
pushfd
mov [ esp ] 0x4a
mov [ esp + 0x38 ] esi
call sub_3afba3
pushfd
call sub_3af33f
sub_3af0ab
push [ esp + 0xc ]
pop [ ebp ]
mov [ esp + 0x4 ] 0x6b25198
lea esp [ esp + 0x10 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3af160
stc
pushfd
mov [ esp + 0xc ] 0xf1
add esi 0xffffffff
clc
cmc
jmp rwxdata
stc
sub ebp 0x4
pushfd
push esi
mov [ esp + 0x8 ] 0x8641
mov [ ebp ] eax
mov [ esp ] 0xe4
mov [ esp ] 0xec2d
mov [ esp ] ah
lea esp [ esp + 0x34 ]
jmp sub_3b0d83
sub_3af171
mov [ esp ] ecx
push 0xaa5137d5
pushad
push 0x3a284149
mov [ esp + 0x24 ] edx
pushad
pushfd
pop [ esp + 0x40 ]
call sub_3b1007
shl al cl
mov al [ esi - 0x1 ]
cmc
cmp di 0x23c6
lea ecx [ edx + 0x4482b25e ]
add al bl
jmp rwxdata
setge cl
inc al
movsx cx cl
dec cx
neg ch
lea esi [ esi - 0x1 ]
push 0xd7f48b02
sbb ch ah
push [ esp ]
neg al
mov cl 0xb6
ror al 0x2
add cl 0x8b
adc cx dx
sar cl 0x6
add bl al
inc cl
movzx ecx al
stc
mov [ ebp - 0x4 ] ecx
cmp al 0xd
mov [ esp ] si
jmp rwxdata
bt bx 0xd
or ecx ecx
push ebp
push [ esp + 0x4 ]
call sub_3b129d
sub_3af1ac
push [ esp ]
mov [ esp + 0x40 ] edi
pushfd
pushfd
mov [ esp + 0x44 ] ecx
mov [ esp + 0x8 ] 0xea
mov [ esp ] al
mov [ esp + 0x40 ] edx
mov [ esp ] 0x6e86
mov [ esp ] al
pushfd
pop [ esp + 0x3c ]
call sub_3aea60
add ebp 0x8
push 0x3dca9d34
jmp rwxdata
mov [ fs : eax ] edx
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3af262
push edx
lea esp [ esp + 0x38 ]
jpe rwxdata
pushfd
pushad
pushfd
pushfd
pop [ esp + 0x24 ]
mov [ esp + 0x10 ] 0x92
mov [ esp ] ax
push [ esp + 0x24 ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xcf
pushfd
lea esp [ esp + 0x2c ]
jmp sub_3b0d83
pushfd
pushfd
pushfd
pushad
jmp rwxdata
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp + 0x8 ] cl
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp sub_3b0d83
sub_3af276
call sub_3ae45c
xor al 0x46
mov dh 0xcc
movzx eax [ esi - 0x1 ]
cmc
sub al bl
cmp dh 0xe
inc dl
add al 0x9e
neg dh
pushfd
bsf dx sp
neg al
btc dx 0xc
bts dx ax
stc
ror dx 0xf
ror al 0x1
bswap dx
pushfd
not dl
push 0x58f05f14
dec esi
sub dl 0x2a
shrd dx si cl
sub bl al
and dh 0xc7
mov dx [ ebp ]
stc
pushfd
call j_sub_3b04b3
sub_3af33f
mov [ esp + 0x4 ] ecx
mov [ esp ] 0x21
mov [ esp ] ebp
pushfd
jmp rwxdata
mov [ esp ] eax
pushfd
jmp rwxdata
mov [ esp ] 0xa4
mov [ esp ] esi
jmp rwxdata
push edi
pushad
pushad
push 0xb126472c
mov [ esp + 0x40 ] ecx
pushfd
push 0x8b230b2b
call sub_3b0d12
stc
clc
and al dl
call j_sub_3af20d
sub_3af350
push eax
push 0x9a03f2a8
mov [ esp ] esi
pushfd
push 0x8a3eac0c
mov [ esp + 0x4 ] edi
pushfd
jmp rwxdata
push ebx
pushad
mov [ esp + 0x28 ] ecx
push [ esp + 0x4 ]
mov [ esp + 0x4 ] 0xc2
push 0xf79b621c
mov [ esp + 0x2c ] edx
call sub_3aed09
bswap bp
push eax
lea ebp [ esi + 0x5e4155d7 ]
push esi
jmp rwxdata
not al
setbe al
pushad
xchg [ esp + 0x1c ] edi
bswap edi
movsx di bl
call sub_3ae8e5
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp + 0x28 ] ebp
pushfd
push 0xa6feee80
mov [ esp + 0x2c ] eax
jmp rwxdata
mov [ esp + 0x28 ] esi
call sub_3af68b
pushad
call sub_3b0a37
mov [ esp ] 0x73
lea esp [ esp + 0x24 ]
jle rwxdata
push 0xdd048c91
pushfd
pushfd
pushad
mov [ esp + 0x28 ] ebp
jmp rwxdata
push ebp
call sub_3aff44
jmp sub_3b11cd
mov [ esp + 0x24 ] eax
pushad
push 0xbce76aa9
push 0x6eca622c
pushfd
mov [ esp + 0x4c ] esi
mov [ esp ] 0xce07
mov [ esp + 0x48 ] edi
push 0xafd6aa85
jmp rwxdata
call sub_3b117e
xor eax 0x46c05fa
jmp rwxdata
neg eax
stc
bt si dx
pushfd
jmp rwxdata
not eax
push edi
cmp dh al
mov [ esp + 0x4 ] ax
cmp al 0x89
xor ebx eax
cmc
clc
clc
sub ebp 0x4
jmp rwxdata
pushfd
mov [ ebp ] eax
pushfd
mov [ esp ] dh
lea esp [ esp + 0x3c ]
jmp sub_3b0d83
sub_3af3a1
pushfd
pushfd
pushfd
mov [ esp + 0x14 ] edi
jmp rwxdata
mov [ esp ] bh
pushfd
call sub_3b0509
cmc
cmp bh 0x2c
add ebp 0x6
call sub_3affce
pushfd
pop [ esp + 0x24 ]
call sub_3aed75
call sub_3af794
call sub_3af9d4
mov [ esp + 0x14 ] edx
pushad
pushfd
pushfd
pop [ esp + 0x34 ]
jmp rwxdata
jmp rwxdata
mov [ esp + 0x30 ] ebx
pushfd
pushfd
push [ esp + 0x4 ]
mov [ esp ] dl
push [ rwxdata ]
pop [ esp + 0x38 ]
jmp rwxdata
mov [ esp + 0x4 ] ax
mov [ esp + 0x34 ] 0x0
mov [ esp ] ax
mov [ esp ] ecx
push edx
mov [ esp + 0x24 ] bl
lea esp [ esp + 0x38 ]
jmp sub_3b1253
sub_3af3cc
xchg [ ebp ] eax
mov [ esp ] 0xb6
pushfd
mov [ esp + 0x8 ] rwxdata
pushfd
call sub_3afb88
push [ esp + 0xc ]
pop [ ebp ]
pushad
lea esp [ esp + 0x30 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3af3f3
pushfd
jmp rwxdata
call sub_3b1170
pushad
mov [ esp + 0x1c ] ebx
call sub_3af946
btr di dx
sub cl 0xc7
cdq
std
mov esp ebp
adc cx di
xchg dh cl
pop ecx
movzx edx bl
cdq
pop edx
shr cx cl
bswap bx
rdtsc
pop ebx
sbb si 0xe334
popfd
pushfd
mov cx 0xf4b6
movzx bp al
pop ecx
pop edx
movsx cx cl
pop ecx
call sub_3b0e9a
mov [ esp + 0x44 ] ebx
jmp rwxdata
call sub_3af9d4
mov [ esp + 0x14 ] edx
pushad
pushfd
pushfd
pop [ esp + 0x34 ]
jmp rwxdata
jmp rwxdata
mov [ esp + 0x30 ] ebx
pushfd
pushfd
push [ esp + 0x4 ]
mov [ esp ] dl
push [ rwxdata ]
pop [ esp + 0x38 ]
jmp rwxdata
mov [ esp + 0x4 ] ax
mov [ esp + 0x34 ] 0x0
mov [ esp ] ax
mov [ esp ] ecx
push edx
mov [ esp + 0x24 ] bl
lea esp [ esp + 0x38 ]
jmp sub_3b1253
sub_3af460
mov [ esp ] 0x33
call j_sub_3aef0e
add ebp 0x2
mov [ esp ] 0x82
pushad
mov [ esp ] dl
mov [ eax + edi ] dl
pushfd
pushfd
push [ esp ]
mov [ esp + 0x8 ] 0x1966
lea esp [ esp + 0x50 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3af4ce
push 0x12e349a2
mov [ esp + 0x4c ] eax
pushfd
mov [ esp + 0xc ] al
mov [ esp + 0x4c ] esi
call sub_3af4bb
pushfd
pop [ esp + 0x4c ]
mov [ esp + 0x8 ] cl
pushfd
lea esp [ esp + 0x50 ]
jge rwxdata
push 0x8928ef29
pushad
mov [ esp + 0x20 ] ebx
pushad
call sub_3af7e4
lahf
dec al
btr ax bx
mov ax [ ebp ]
rol dh cl
mov dx [ ebp + 0x2 ]
bt bx 0x6
jmp rwxdata
push edi
mov [ esp ] ebx
pushfd
push [ esp ]
pushfd
push [ rwxdata ]
pop [ esp + 0x8 ]
mov [ esp ] bh
push 0x8c595a6d
mov [ esp ] bl
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x4 ] ch
mov [ esp + 0x4 ] ah
mov [ esp + 0x4 ] esp
lea esp [ esp + 0x8 ]
jmp sub_3b1253
push 0xd29ba8ae
not al
mov [ esp ] ax
not dl
cmp ah bh
sub ebp 0x2
pushad
jmp rwxdata
stc
clc
and al dl
call j_sub_3af20d
sub_3af54c
mov [ eax ] dx
pushfd
pushad
push [ esp + 0x4 ]
lea esp [ esp + 0x30 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3af690
call sub_3afe81
call sub_3b0f74
pushfd
pushfd
pushfd
pop [ esp + 0x4 ]
push 0x85689406
pushfd
push [ esp + 0xc ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xca
pushfd
pushfd
push 0x3f694be7
lea esp [ esp + 0x1c ]
jmp sub_3b0d83
sub_3af794
pushfd
mov al [ eax + edi ]
push [ esp ]
pushad
cmc
push 0x6e77a364
add esi 0xffffffff
bt cx 0xb
sub ebp 0x2
mov [ esp ] 0xfe
jmp rwxdata
pushfd
push [ esp ]
mov [ ebp ] ax
push [ esp + 0x4 ]
mov [ esp + 0x18 ] dx
push esi
lea esp [ esp + 0x40 ]
jmp sub_3b0d83
sub_3af81d
mov [ esp + 0x8 ] 0x50
mov [ esp + 0x30 ] esi
call sub_3afedd
push [ rwxdata ]
pop [ esp + 0x38 ]
push [ esp ]
call sub_3affa6
pushfd
pushad
mov [ esp + 0x20 ] ecx
pushad
mov [ esp + 0x4 ] esp
mov [ esp + 0x4 ] 0x87
push 0x8aa8260c
mov [ esp + 0x40 ] ebp
mov [ esp + 0x8 ] 0xef
mov [ esp ] 0x67
pushfd
mov [ esp + 0x40 ] eax
lea esp [ esp + 0x40 ]
jpe rwxdata
call sub_3b08f3
mov [ esp + 0x1c ] eax
jmp sub_3ae369
pushfd
pushad
pushad
mov [ esp + 0x40 ] esi
mov [ esp + 0x4 ] 0x8a63
push 0x8406a7de
pushfd
mov [ esp + 0x44 ] edi
jmp rwxdata
mov [ esp ] ch
push 0x388552e1
pushfd
mov [ esp + 0x48 ] ecx
call sub_3aed00
cwde
call sub_3af160
add ebp 0x4
pushad
mov [ esp + 0x8 ] 0x72
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
shl al 0x2
and bl 0x82
rol ecx 0x1a
xadd al cl
mov ebx esi
sbb ecx esi
ror ecx cl
rcl al cl
rol ch 0x1
add esi [ ebp ]
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3af8e1
push [ rwxdata ]
pop [ esp + 0x30 ]
mov [ esp ] 0xac05aaec
call sub_3afa81
xadd dh al
inc al
shr al cl
mov edx [ ebp ]
test dh 0x74
inc al
add ebp 0x2
setne al
pushfd
push 0xdf5198a7
mov al [ edx ]
call sub_3b0a5e
mov [ esp + 0x20 ] esi
mov [ esp + 0x4 ] 0xc9
jmp rwxdata
mov [ esp + 0x1c ] edi
pushfd
jmp rwxdata
push 0xead608ed
mov [ esp + 0x20 ] ecx
push ecx
mov [ esp + 0x20 ] edx
push [ esp ]
pushfd
pop [ esp + 0x20 ]
lea esp [ esp + 0x20 ]
jle rwxdata
pushad
mov [ esp + 0x1c ] ebx
call sub_3af946
btr di dx
sub cl 0xc7
cdq
std
mov esp ebp
adc cx di
xchg dh cl
pop ecx
movzx edx bl
cdq
pop edx
shr cx cl
bswap bx
rdtsc
pop ebx
sbb si 0xe334
popfd
pushfd
mov cx 0xf4b6
movzx bp al
pop ecx
pop edx
movsx cx cl
pop ecx
call sub_3b0e9a
mov [ esp + 0x44 ] ebx
jmp rwxdata
push ebx
call sub_3b084c
xor al ch
mov al [ esi - 0x1 ]
jmp rwxdata
call sub_3af9d4
mov [ esp + 0x14 ] edx
pushad
pushfd
pushfd
pop [ esp + 0x34 ]
jmp rwxdata
jbe rwxdata
jmp rwxdata
bt eax esi
bt ax dx
pushfd
xor al bl
pushad
sub al 0x7
stc
cmc
ror al 0x5
jmp rwxdata
push eax
mov [ esp ] bx
xor al bl
mov [ esp ] bh
sub al 0x7
bt sp bx
clc
cmc
ror al 0x5
pushad
mov [ esp ] cx
jmp rwxdata
mov [ esp + 0x30 ] ebx
pushfd
pushfd
push [ esp + 0x4 ]
mov [ esp ] dl
push [ rwxdata ]
pop [ esp + 0x38 ]
jmp rwxdata
call sub_3b100c
pushad
dec al
cmc
pushfd
xor bl al
stc
pushfd
add esp 0x4c
jne rwxdata
mov [ esp + 0x4 ] ax
mov [ esp + 0x34 ] 0x0
mov [ esp ] ax
mov [ esp ] ecx
push edx
mov [ esp + 0x24 ] bl
lea esp [ esp + 0x38 ]
jmp sub_3b1253
call sub_3af794
clc
mov al [ eax + edi ]
stc
clc
pushfd
add esi 0xffffffff
pushfd
sub ebp 0x2
call sub_3b0970
sub_3af93b
mov [ esp + 0x30 ] esi
pushfd
pushfd
jmp rwxdata
mov [ esp + 0x34 ] edi
push 0x8c691dd5
push 0x69e8e5c7
mov [ esp + 0x38 ] ecx
pushfd
mov [ esp + 0x38 ] edx
jmp rwxdata
push 0x58a04c24
pushfd
pop [ esp + 0x38 ]
call sub_3af3f3
sub_3af94c
mov [ esp + 0x4 ] ebp
call sub_3aec31
inc al
test sp 0x5e1a
mov al [ esi - 0x1 ]
pushfd
add al bl
mov [ esp ] dx
inc al
call sub_3aeabf
pushfd
mov [ ebp ] eax
pushfd
mov [ esp ] dh
lea esp [ esp + 0x3c ]
jmp sub_3b0d83
sub_3af9d4
push [ rwxdata ]
pop [ esp + 0x44 ]
call sub_3af8a6
mov [ esp ] bl
mov [ esp + 0x3c ] ebx
mov [ esp + 0x8 ] ebx
mov [ esp + 0x4 ] bh
push [ rwxdata ]
pop [ esp + 0x38 ]
push ebx
pushfd
mov [ esp + 0x3c ] 0x0
push [ esp + 0x10 ]
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp sub_3b1253
sub_3afa15
pushfd
pop [ esp + 0x14 ]
pushfd
push [ esp ]
pushfd
push [ esp + 0x20 ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xbe
pushfd
mov [ esp + 0x4 ] 0x96539eee
push ecx
lea esp [ esp + 0x2c ]
jmp sub_3b0d83
sub_3afa86
pushfd
mov [ esp + 0x28 ] ecx
mov [ esp ] 0xa9
jmp rwxdata
jmp rwxdata
push [ esp + 0x8 ]
mov [ esp + 0x28 ] ebp
pushfd
push 0xa6feee80
mov [ esp + 0x2c ] eax
jmp rwxdata
mov [ esp + 0x28 ] esi
call sub_3af68b
pushad
call sub_3b0a37
mov [ esp ] 0x73
lea esp [ esp + 0x24 ]
jle rwxdata
push 0xdd048c91
pushfd
pushfd
pushad
mov [ esp + 0x28 ] ebp
jmp rwxdata
push ebp
call sub_3aff44
jmp sub_3b11cd
mov [ esp + 0x24 ] eax
pushad
push 0xbce76aa9
push 0x6eca622c
pushfd
mov [ esp + 0x4c ] esi
mov [ esp ] 0xce07
mov [ esp + 0x48 ] edi
push 0xafd6aa85
jmp rwxdata
call sub_3b117e
xor eax 0x46c05fa
jmp rwxdata
neg eax
stc
bt si dx
pushfd
jmp rwxdata
not eax
push edi
cmp dh al
mov [ esp + 0x4 ] ax
cmp al 0x89
xor ebx eax
cmc
clc
clc
sub ebp 0x4
jmp rwxdata
pushfd
mov [ ebp ] eax
pushfd
mov [ esp ] dh
lea esp [ esp + 0x3c ]
jmp sub_3b0d83
sub_3afb58
jmp rwxdata
pushfd
pop [ esp + 0x54 ]
call sub_3af23d
cbw
stc
cwde
mov [ esp ] 0xe1
clc
pushfd
pushfd
add esi 0xffffffff
bt bx 0x1
mov [ esp + 0x8 ] 0xf7
call sub_3b0720
pushfd
mov [ ebp + 0x4 ] ax
jmp rwxdata
call sub_3b0b71
call sub_3b0b93
pushfd
mov [ esp ] 0x4a
mov [ esp + 0x38 ] esi
call sub_3afba3
pushfd
call sub_3af33f
sub_3afc05
lea esp [ esp + 0x8 ]
jb rwxdata
call sub_3aeccd
pushad
push [ esp + 0x20 ]
pop [ ebp ]
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3afcb0
mov [ ebp ] ax
mov [ esp ] sp
pushfd
push edx
mov [ esp + 0xc ] 0x228d
lea esp [ esp + 0x34 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3afcd9
mov [ esp + 0x38 ] ebx
push 0x48eb6052
push 0xd1cc5e1
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x3c ]
jmp rwxdata
pushfd
pushfd
mov [ esp + 0x40 ] 0x0
mov [ esp ] 0x36
mov [ esp ] 0xf5
lea esp [ esp + 0x40 ]
jmp sub_3b1253
sub_3afd53
cmp al cl
add ax 0x9113
mov [ esp ] 0xc39
add bx ax
call sub_3b0e13
pushfd
mov [ esp + 0x34 ] ebx
call sub_3b05b8
bt esi edi
test bx 0x9b33
shr dh 0x3
bsf eax esi
mov eax [ ebp ]
xor dh 0xf7
setno dh
rcl dx 0xb
push 0x14b29414
mov edx [ ebp + 0x4 ]
bt bp cx
call sub_3b11f2
setge cl
inc al
movsx cx cl
dec cx
neg ch
lea esi [ esi - 0x1 ]
push 0xd7f48b02
sbb ch ah
push [ esp ]
neg al
mov cl 0xb6
ror al 0x2
add cl 0x8b
adc cx dx
sar cl 0x6
add bl al
inc cl
movzx ecx al
stc
mov [ ebp - 0x4 ] ecx
cmp al 0xd
mov [ esp ] si
jmp rwxdata
bt bx 0xd
or ecx ecx
push ebp
push [ esp + 0x4 ]
call sub_3b129d
sub_3afdf9
mov [ eax ] edx
push eax
mov [ esp ] dl
pushfd
push 0x1980c03
lea esp [ esp + 0x38 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3afe0e
cmc
cmc
cmp ebx 0xfe0
pushfd
pushfd
push [ esp ]
lea esp [ esp + 0x18 ]
jne rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp sub_3b0d83
call sub_3afd36
pushfd
pushfd
pop [ esp ]
pushad
pushad
push [ esp + 0x40 ]
pop [ ebp ]
mov [ esp ] 0xc3
mov [ esp + 0x10 ] bx
pushfd
mov [ esp ] 0x9
lea esp [ esp + 0x48 ]
jmp sub_3b0d83
sub_3afe81
push 0xe17256ee
xchg [ esp + 0x4c ] edi
lea edi [ eax * 2 + 0x24e6d209 ]
mov edi eax
mov [ esp + 0x4 ] ah
jmp rwxdata
mov [ esp + 0x4 ] bl
cld
call j_sub_3b0c74
pushfd
pushfd
mov [ esp + 0x4 ] ecx
mov [ esp ] bh
mov [ esp ] 0x4f
mov [ esp ] 0x5cc7
call sub_3af94c
sub_3afedd
mov [ esp + 0x4 ] 0x5
pushfd
mov [ esp + 0x34 ] edi
call sub_3afa67
push esi
push ebx
mov [ esp ] 0x7f
pushfd
mov [ esp + 0x4 ] edi
lea esp [ esp + 0x4 ]
ja rwxdata
call sub_3ae3d1
pushfd
mov [ esp ] ecx
pushfd
push esp
jmp rwxdata
mov [ esp + 0x4 ] edx
pushfd
push [ esp ]
pushad
pushfd
pop [ esp + 0x28 ]
jmp rwxdata
mov [ esp + 0x24 ] ebx
mov [ esp + 0x4 ] 0x8a
push [ rwxdata ]
pop [ esp + 0x20 ]
pushfd
mov [ esp + 0x4 ] bh
pushfd
mov [ esp + 0x24 ] 0x0
push [ esp ]
pushfd
mov [ esp ] dl
mov [ esp ] 0x9bb588a3
lea esp [ esp + 0x2c ]
jmp sub_3b1253
sub_3aff0c
push eax
pushfd
pop [ esp + 0xc ]
pushfd
mov [ esp + 0xc ] ebx
mov [ esp ] al
push [ esp ]
mov [ esp + 0x4 ] ch
push [ rwxdata ]
pop [ esp + 0xc ]
pushad
mov [ esp + 0x4 ] dl
jmp rwxdata
pushfd
mov [ esp + 0x2c ] 0x0
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp sub_3b1253
sub_3aff36
push edx
mov [ esp + 0x8 ] dh
mov [ esp + 0x40 ] ecx
jmp rwxdata
mov [ esp + 0x3c ] edx
mov [ esp + 0x4 ] ah
jmp rwxdata
push ebx
push [ esp + 0x4 ]
pushfd
pop [ esp + 0x40 ]
push 0x717373a
jmp rwxdata
mov [ esp + 0x40 ] ebx
jmp sub_3b0680
sub_3affbd
pushfd
push ebx
mov [ esp + 0x10 ] eax
jmp rwxdata
jmp rwxdata
push esp
mov [ esp ] 0x32
mov [ esp + 0x10 ] esi
pushad
mov [ esp + 0x2c ] edi
pushfd
mov [ esp + 0x2c ] ecx
pushfd
pushfd
lea esp [ esp + 0x34 ]
je rwxdata
pushad
mov [ esp ] dl
mov [ esp ] esi
call sub_3aee48
stc
xadd al cl
clc
mov al [ ebp ]
sar cl cl
shl cl 0x7
mov cl [ ebp + 0x2 ]
push edx
cmp di 0xbecf
mov [ esp ] dx
mov [ esp ] 0x10cc
sub ebp 0x2
pushad
call sub_3b079c
jmp rwxdata
push edx
pushfd
push edx
call sub_3aff0c
cmp bl 0x9a
bt bp di
sub ebp 0x2
push 0xbf8b5964
push ebp
jmp rwxdata
pushfd
pop [ esp + 0x24 ]
call sub_3aed75
call sub_3af794
call sub_3af9d4
mov [ esp + 0x14 ] edx
pushad
pushfd
pushfd
pop [ esp + 0x34 ]
jmp rwxdata
shl eax cl
pushad
mov [ esp ] al
push 0xfd611c72
mov [ esp + 0x4 ] esp
mov [ ebp + 0x4 ] eax
call sub_3af262
jmp rwxdata
mov [ esp + 0x30 ] ebx
pushfd
pushfd
push [ esp + 0x4 ]
mov [ esp ] dl
push [ rwxdata ]
pop [ esp + 0x38 ]
jmp rwxdata
mov [ esp + 0x4 ] ax
mov [ esp + 0x34 ] 0x0
mov [ esp ] ax
mov [ esp ] ecx
push edx
mov [ esp + 0x24 ] bl
lea esp [ esp + 0x38 ]
jmp sub_3b1253
sub_3affce
pushfd
mov [ ss : eax ] dx
push esp
lea esp [ esp + 0x10 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3b0093
pushfd
jmp rwxdata
pushfd
pop [ esp + 0x4c ]
mov [ esp + 0x8 ] cl
pushfd
lea esp [ esp + 0x50 ]
jge rwxdata
push 0x8928ef29
pushad
mov [ esp + 0x20 ] ebx
pushad
call sub_3af7e4
lahf
dec al
btr ax bx
mov ax [ ebp ]
rol dh cl
mov dx [ ebp + 0x2 ]
bt bx 0x6
jmp rwxdata
push edi
mov [ esp ] ebx
pushfd
push [ esp ]
pushfd
push [ rwxdata ]
pop [ esp + 0x8 ]
mov [ esp ] bh
push 0x8c595a6d
mov [ esp ] bl
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x4 ] ch
mov [ esp + 0x4 ] ah
mov [ esp + 0x4 ] esp
lea esp [ esp + 0x8 ]
jmp sub_3b1253
push 0xd29ba8ae
not al
mov [ esp ] ax
not dl
cmp ah bh
sub ebp 0x2
pushad
jmp rwxdata
stc
clc
and al dl
call j_sub_3af20d
sub_3b0099
jmp rwxdata
mov [ esp + 0x44 ] ebx
jmp rwxdata
call sub_3af9d4
mov [ esp + 0x14 ] edx
pushad
pushfd
pushfd
pop [ esp + 0x34 ]
jmp rwxdata
jmp rwxdata
mov [ esp + 0x30 ] ebx
pushfd
pushfd
push [ esp + 0x4 ]
mov [ esp ] dl
push [ rwxdata ]
pop [ esp + 0x38 ]
jmp rwxdata
mov [ esp + 0x4 ] ax
mov [ esp + 0x34 ] 0x0
mov [ esp ] ax
mov [ esp ] ecx
push edx
mov [ esp + 0x24 ] bl
lea esp [ esp + 0x38 ]
jmp sub_3b1253
sub_3b00bc
pushfd
mov [ esp + 0x10 ] eax
mov [ esp + 0x4 ] bh
pushfd
call sub_3afe6a
neg bx
lea edi [ esp + 0x20 ]
sub esp 0xffffffe0
shl al 0x2
and bl 0x82
rol ecx 0x1a
xadd al cl
mov ebx esi
sbb ecx esi
ror ecx cl
rcl al cl
rol ch 0x1
add esi [ ebp ]
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3b0155
push 0x47e81abf
ror al 0x1
clc
push [ esp + 0x8 ]
cmc
cmp si sp
sub bl al
bt edx ecx
clc
push 0x704c3e28
mov ax [ eax + edi ]
cmp esp edi
test ch ch
clc
sub ebp 0x2
push 0xc7280666
mov [ ebp ] ax
pushad
pushfd
push ebx
mov [ esp ] dl
lea esp [ esp + 0x44 ]
jmp sub_3b0d83
sub_3b01e5
mov [ ebp ] ax
mov [ esp + 0xc ] bh
pushfd
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3b024e
lea esp [ esp + 0x3c ]
jne rwxdata
cmp ch ch
call sub_3aeef8
pushfd
pop [ esp + 0x3c ]
mov [ esp + 0xc ] 0x42cc
mov [ esp ] 0x53
call sub_3ae44a
test sp di
cmc
sub ebp 0x2
push edx
jmp rwxdata
push ebp
call sub_3b049f
push edx
shl al cl
lea esp [ esp + 0x4c ]
jle rwxdata
pushfd
mov [ ebp + 0x4 ] ax
jmp rwxdata
mov [ ebp + 0x4 ] ax
jge rwxdata
call sub_3b0b71
call sub_3b0b93
pushfd
mov [ esp ] 0x4a
mov [ esp + 0x38 ] esi
call sub_3afba3
pushfd
call sub_3af33f
jmp rwxdata
push ecx
pushfd
pop [ esp ]
push 0x7f1662e9
push [ esp + 0x4 ]
pop [ ebp ]
mov [ esp ] 0x57
push 0xfd9f00cf
lea esp [ esp + 0xc ]
jmp sub_3b0d83
pushfd
pushfd
pushfd
pop [ esp + 0x4 ]
push 0x85689406
pushfd
push [ esp + 0xc ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xca
pushfd
pushfd
push 0x3f694be7
lea esp [ esp + 0x1c ]
jmp sub_3b0d83
sub_3b0265
pushfd
pop [ esp + 0x1c ]
pushfd
push edi
push edx
push [ esp + 0x4 ]
mov [ esp + 0x28 ] ebx
jmp rwxdata
push [ esp + 0x8 ]
jmp rwxdata
push [ rwxdata ]
pop [ esp + 0x28 ]
call sub_3afba8
sub_3b02cb
mov [ esp + 0x3c ] edi
pushfd
jmp rwxdata
call sub_3b0bf2
pushfd
pushfd
mov [ ebp + 0x4 ] ax
jmp rwxdata
call j_sub_3afa15
push edx
mov [ esp + 0x4 ] dl
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp + 0x4 ] bh
push edx
lea esp [ esp + 0x30 ]
jmp sub_3b0d83
sub_3b038a
test di 0x8594
add esi 0xfffffffe
pushad
jmp rwxdata
cmc
push eax
add ax 0x9113
bt esi 0xa
bt ecx 0xf
add bx ax
cmp bh dh
cwde
cmc
call sub_3b0cee
sub_3b0398
jmp rwxdata
mov [ esp + 0xc ] dh
mov [ esp + 0x4 ] 0x93
mov [ esp + 0x18 ] ebp
call sub_3b07f8
shl ah cl
aad 0x30
bts ax 0x5
mov eax [ ebp ]
inc dl
and dl bl
mov dl [ ebp + 0x4 ]
cmc
call sub_3af31e
pushad
mov [ esp ] cx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x14 ] 0xec39
mov [ esp + 0x1c ] ebp
lea esp [ esp + 0x1c ]
jge rwxdata
jmp sub_3af350
push esp
mov [ esp ] cl
mov [ esp ] eax
jmp rwxdata
push esi
push ebx
mov [ esp ] 0x7f
pushfd
mov [ esp + 0x4 ] edi
lea esp [ esp + 0x4 ]
ja rwxdata
call sub_3ae3d1
pushfd
mov [ esp ] ecx
pushfd
push esp
jmp rwxdata
mov [ esp + 0x4 ] edx
pushfd
push [ esp ]
pushad
pushfd
pop [ esp + 0x28 ]
jmp rwxdata
mov [ esp + 0x24 ] ebx
mov [ esp + 0x4 ] 0x8a
push [ rwxdata ]
pop [ esp + 0x20 ]
pushfd
mov [ esp + 0x4 ] bh
pushfd
mov [ esp + 0x24 ] 0x0
push [ esp ]
pushfd
mov [ esp ] dl
mov [ esp ] 0x9bb588a3
lea esp [ esp + 0x2c ]
jmp sub_3b1253
sub_3b03a9
push [ esp + 0x28 ]
pop [ ebp ]
pushfd
pushfd
pushfd
mov [ esp + 0x4 ] bh
lea esp [ esp + 0x38 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3b045c
push 0xb196af6
pushfd
pushfd
pop [ esp + 0x34 ]
jmp rwxdata
pushfd
mov [ esp + 0x34 ] ebx
call sub_3b05b8
bt esi edi
test bx 0x9b33
shr dh 0x3
bsf eax esi
mov eax [ ebp ]
xor dh 0xf7
setno dh
rcl dx 0xb
push 0x14b29414
mov edx [ ebp + 0x4 ]
bt bp cx
call sub_3b11f2
setge cl
inc al
movsx cx cl
dec cx
neg ch
lea esi [ esi - 0x1 ]
push 0xd7f48b02
sbb ch ah
push [ esp ]
neg al
mov cl 0xb6
ror al 0x2
add cl 0x8b
adc cx dx
sar cl 0x6
add bl al
inc cl
movzx ecx al
stc
mov [ ebp - 0x4 ] ecx
cmp al 0xd
mov [ esp ] si
jmp rwxdata
bt bx 0xd
or ecx ecx
push ebp
push [ esp + 0x4 ]
call sub_3b129d
sub_3b04bc
pushfd
add ax 0x9113
pushfd
add bx ax
test dh 0xda
pushfd
cwde
stc
clc
sub ebp 0x4
pushfd
mov [ ebp ] eax
mov [ esp ] ax
lea esp [ esp + 0x18 ]
jmp sub_3b0d83
sub_3b04f7
mov [ eax + edi ] dx
mov [ esp + 0x4 ] 0xf
lea esp [ esp + 0x38 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3b0509
mov [ esp + 0x18 ] ecx
jmp rwxdata
mov [ esp + 0x14 ] edx
pushad
pushfd
pushfd
pop [ esp + 0x34 ]
jmp rwxdata
jmp rwxdata
mov [ esp + 0x30 ] ebx
pushfd
pushfd
push [ esp + 0x4 ]
mov [ esp ] dl
push [ rwxdata ]
pop [ esp + 0x38 ]
jmp rwxdata
mov [ esp + 0x4 ] ax
mov [ esp + 0x34 ] 0x0
mov [ esp ] ax
mov [ esp ] ecx
push edx
mov [ esp + 0x24 ] bl
lea esp [ esp + 0x38 ]
jmp sub_3b1253
sub_3b0606
call sub_3afa86
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
pushfd
pushfd
pop [ esp ]
pushad
pushad
push [ esp + 0x40 ]
pop [ ebp ]
mov [ esp ] 0xc3
mov [ esp + 0x10 ] bx
pushfd
mov [ esp ] 0x9
lea esp [ esp + 0x48 ]
jmp sub_3b0d83
pushfd
jmp rwxdata
call sub_3aed33
mov [ esp + 0x2c ] edx
push esp
jmp sub_3b045c
sub_3b0624
pushfd
neg dx
ror dl cl
neg al
not dl
movsx dx bl
pushfd
dec al
pushad
adc dh ch
and dh 0x87
btr edx esp
xor al 0xb
sar dh cl
bts dx 0x7
xor bl al
not dh
movzx dx bl
cmp dx 0x1957
mov edx [ ebp ]
stc
cmc
cmp bp dx
test bh al
add ebp 0x4
jmp rwxdata
mov [ eax + edi ] edx
mov [ esp ] dl
lea esp [ esp + 0x2c ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3b0736
mov [ esp + 0x38 ] edx
pushfd
call sub_3b1298
push ecx
mov ax [ ss : eax ]
pushad
call j_sub_3b01e5
pushfd
pop [ esp + 0x54 ]
call sub_3af23d
cbw
stc
cwde
mov [ esp ] 0xe1
clc
pushfd
pushfd
add esi 0xffffffff
bt bx 0x1
mov [ esp + 0x8 ] 0xf7
call sub_3b0720
pushfd
mov [ ebp + 0x4 ] ax
jmp rwxdata
call sub_3b0b71
call sub_3b0b93
pushfd
mov [ esp ] 0x4a
mov [ esp + 0x38 ] esi
call sub_3afba3
pushfd
call sub_3af33f
sub_3b079c
shr al cl
push [ esp ]
mov [ ebp + 0x4 ] ax
push 0x1b1f562c
mov [ esp + 0x4 ] 0x4882
pushfd
pushfd
pop [ esp + 0x30 ]
pushfd
jmp rwxdata
jmp rwxdata
push [ esp + 0x34 ]
pop [ ebp ]
push [ esp ]
pushfd
lea esp [ esp + 0x40 ]
jmp sub_3b0d83
sub_3b07e8
xor eax eax
call sub_3af276
mov [ esp ] eax
pushfd
jmp rwxdata
mov [ esp ] 0xa4
mov [ esp ] esi
jmp rwxdata
push edi
pushad
pushad
push 0xb126472c
mov [ esp + 0x40 ] ecx
pushfd
push 0x8b230b2b
call sub_3b0d12
stc
clc
and al dl
call j_sub_3af20d
sub_3b07fd
lea esp [ esp + 0x44 ]
jne rwxdata
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp sub_3b0d83
adc bx sp
shld bx dx cl
or bh cl
ror bx 0xe
mov ebx eax
bt sp 0x3
pushfd
pushfd
and ebx 0xff0
bt dx ax
call sub_3afe0e
sub_3b084c
pushad
push [ rwxdata ]
pop [ esp + 0x20 ]
pushad
call sub_3aeb60
push 0xead608ed
mov [ esp + 0x20 ] ecx
push ecx
mov [ esp + 0x20 ] edx
push [ esp ]
pushfd
pop [ esp + 0x20 ]
lea esp [ esp + 0x20 ]
jle rwxdata
pushad
mov [ esp + 0x1c ] ebx
call sub_3af946
btr di dx
sub cl 0xc7
cdq
std
mov esp ebp
adc cx di
xchg dh cl
pop ecx
movzx edx bl
cdq
pop edx
shr cx cl
bswap bx
rdtsc
pop ebx
sbb si 0xe334
popfd
pushfd
mov cx 0xf4b6
movzx bp al
pop ecx
pop edx
movsx cx cl
pop ecx
call sub_3b0e9a
mov [ esp + 0x44 ] ebx
jmp rwxdata
push ebx
call sub_3b084c
xor al ch
mov al [ esi - 0x1 ]
jmp rwxdata
call sub_3af9d4
mov [ esp + 0x14 ] edx
pushad
pushfd
pushfd
pop [ esp + 0x34 ]
jmp rwxdata
jbe rwxdata
jmp rwxdata
bt eax esi
bt ax dx
pushfd
xor al bl
pushad
sub al 0x7
stc
cmc
ror al 0x5
jmp rwxdata
push eax
mov [ esp ] bx
xor al bl
mov [ esp ] bh
sub al 0x7
bt sp bx
clc
cmc
ror al 0x5
pushad
mov [ esp ] cx
jmp rwxdata
mov [ esp + 0x30 ] ebx
pushfd
pushfd
push [ esp + 0x4 ]
mov [ esp ] dl
push [ rwxdata ]
pop [ esp + 0x38 ]
jmp rwxdata
call sub_3b100c
pushad
dec al
cmc
pushfd
xor bl al
stc
pushfd
add esp 0x4c
jne rwxdata
mov [ esp + 0x4 ] ax
mov [ esp + 0x34 ] 0x0
mov [ esp ] ax
mov [ esp ] ecx
push edx
mov [ esp + 0x24 ] bl
lea esp [ esp + 0x38 ]
jmp sub_3b1253
call sub_3af794
clc
mov al [ eax + edi ]
stc
clc
pushfd
add esi 0xffffffff
pushfd
sub ebp 0x2
call sub_3b0970
sub_3b08c2
xchg al ah
cmc
bt bx bp
add ax bx
pushfd
stc
clc
mov [ esp + 0x4 ] bl
not ax
lea esp [ esp + 0x8 ]
jns rwxdata
push 0xb6d859d1
call sub_3af4c3
pushfd
clc
neg ax
clc
add esi 0xfffffffe
call sub_3b04bc
call sub_3aea75
sub_3b08ff
pushad
mov [ esp + 0x20 ] ecx
mov [ esp + 0x4 ] 0x9b
mov [ esp + 0x8 ] ah
mov [ esp + 0x1c ] edx
pushad
call sub_3aeea1
pushfd
push [ esp ]
mov [ esp + 0x4 ] ebp
mov [ esp + 0x4 ] rwxdata
push 0xe5388cc5
push 0x3aeef376
pushfd
call sub_3aeab1
mov al [ esi - 0x1 ]
test si 0xf9b9
sub al bl
test al 0xa7
bt esi 0x14
clc
add al 0x9e
cmp si bx
cmp dl dh
test dh ch
cmc
neg al
clc
lea esi [ esi - 0x1 ]
clc
call sub_3b0155
sub_3b095e
sub esp 0x94
inc edi
pushad
jmp rwxdata
neg bx
lea edi [ esp + 0x20 ]
sub esp 0xffffffe0
shl al 0x2
and bl 0x82
rol ecx 0x1a
xadd al cl
mov ebx esi
sbb ecx esi
ror ecx cl
rcl al cl
rol ch 0x1
add esi [ ebp ]
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3b0970
lea esp [ esp + 0xc ]
jg rwxdata
call sub_3aefc4
call sub_3aef1d
call sub_3aed33
mov [ esp + 0x2c ] edx
push esp
jmp sub_3b045c
mov [ ebp ] ax
pushfd
mov [ esp ] ax
push [ esp ]
pushfd
lea esp [ esp + 0xc ]
jmp sub_3b0d83
sub_3b0a5e
pushfd
mov [ ebp ] ax
mov [ esp + 0xc ] sp
pushad
push [ esp ]
mov [ esp ] ch
lea esp [ esp + 0x34 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3b0c74
[ edi ] [ esi ]
ror di 0x6
cmc
btc di ax
mov edi [ esp + 0x50 ]
sar si cl
ror si 0x3
lea esi [ 0xffffffffc6bb040e ]
mov esi [ esp + 0x54 ]
std
stc
std
bt si 0x1
push [ esp + 0x58 ]
popfd
mov [ esp ] dh
mov [ esp + 0x10 ] ah
lea esp [ esp + 0x5c ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3b0d12
mov [ esp + 0x48 ] edx
call sub_3b0093
pushfd
push 0xb238a78d
mov [ esp ] sp
mov [ esp + 0x4 ] ebx
call sub_3ae320
mov [ esp + 0xc ] dh
mov [ esp + 0x4 ] 0x93
mov [ esp + 0x18 ] ebp
call sub_3b07f8
shl ah cl
aad 0x30
bts ax 0x5
mov eax [ ebp ]
inc dl
and dl bl
mov dl [ ebp + 0x4 ]
cmc
call sub_3af31e
pushad
mov [ esp ] cx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x14 ] 0xec39
mov [ esp + 0x1c ] ebp
lea esp [ esp + 0x1c ]
jge rwxdata
jmp sub_3af350
push esp
mov [ esp ] cl
mov [ esp ] eax
jmp rwxdata
push esi
push ebx
mov [ esp ] 0x7f
pushfd
mov [ esp + 0x4 ] edi
lea esp [ esp + 0x4 ]
ja rwxdata
call sub_3ae3d1
pushfd
mov [ esp ] ecx
pushfd
push esp
jmp rwxdata
mov [ esp + 0x4 ] edx
pushfd
push [ esp ]
pushad
pushfd
pop [ esp + 0x28 ]
jmp rwxdata
mov [ esp + 0x24 ] ebx
mov [ esp + 0x4 ] 0x8a
push [ rwxdata ]
pop [ esp + 0x20 ]
pushfd
mov [ esp + 0x4 ] bh
pushfd
mov [ esp + 0x24 ] 0x0
push [ esp ]
pushfd
mov [ esp ] dl
mov [ esp ] 0x9bb588a3
lea esp [ esp + 0x2c ]
jmp sub_3b1253
sub_3b0d83
or al 0x87
lea eax [ edi + 0x50 ]
pushad
test bx 0x584a
cmp ebp eax
push [ esp + 0x8 ]
mov [ esp ] bl
lea esp [ esp + 0x24 ]
ja rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
neg ax
clc
mov edx esp
ror al 0x2
movzx cx bl
bsr ax bp
lea ecx [ edi + 0x40 ]
shld eax eax 0x12
shld ax bx cl
daa
sub ecx edx
das
not di
lea eax [ ebp - 0x80 ]
rcl di cl
and al 0xfc
rol di 0xc
bswap di
xor di cx
add di 0x7f85
sub eax ecx
mov di 0x7936
bswap di
mov di di
mov esp eax
bswap di
pushad
movsx di dl
push 0x23e5274f
pushfd
pop [ esp + 0x20 ]
mov di ax
pushad
call sub_3af075
call sub_3b117e
xor eax 0x46c05fa
jmp rwxdata
neg eax
stc
bt si dx
pushfd
jmp rwxdata
not eax
push edi
cmp dh al
mov [ esp + 0x4 ] ax
cmp al 0x89
xor ebx eax
cmc
clc
clc
sub ebp 0x4
jmp rwxdata
pushfd
mov [ ebp ] eax
pushfd
mov [ esp ] dh
lea esp [ esp + 0x3c ]
jmp sub_3b0d83
sub_3b0ed5
clc
pushfd
add [ ebp + 0x4 ] al
pushad
mov [ esp ] 0x361b
mov [ esp + 0x8 ] cx
pushfd
pop [ esp + 0x24 ]
lea esp [ esp + 0x24 ]
je rwxdata
pushfd
push [ esp + 0x4 ]
pop [ ebp ]
pushad
push edi
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp sub_3b0d83
pop [ ebp ]
pushad
push ebp
push ebp
pushfd
lea esp [ esp + 0x2c ]
jmp sub_3b0d83
sub_3b0f48
pushfd
pop [ esp + 0x2c ]
lea esp [ esp + 0x2c ]
jge rwxdata
jne rwxdata
pushad
mov [ esp ] ch
mov [ esp + 0x4 ] 0xe8
push [ esp + 0x20 ]
pop [ ebp ]
push [ esp ]
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
pushfd
pushfd
push [ esp + 0x8 ]
pop [ ebp ]
push 0x587796c3
lea esp [ esp + 0x10 ]
jmp rwxdata
pushad
mov [ esp ] 0xf3
push [ esp + 0x20 ]
pop [ ebp ]
pushad
push 0xc2ec74c6
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3b0f74
aad 0x48
lea edx [ edi * 8 - 0x44f856df ]
mov eax [ ebp ]
cmp dx bx
sbb dh 0xda
stc
clc
mov edx [ ebp + 0x4 ]
sub esp 0xfffffffc
jae rwxdata
stc
jmp rwxdata
push eax
add ebp 0x8
pushfd
mov [ eax ] edx
pushfd
pushad
lea esp [ esp + 0x2c ]
jmp rwxdata
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
sub_3b100c
dec al
bt dx ax
pushfd
xor bl al
cmp cl 0xab
pushfd
push esi
stc
mov al [ eax + edi ]
jmp rwxdata
pushfd
add esi 0xffffffff
stc
sub ebp 0x2
call sub_3afeac
sub_3b1070
inc al
bswap ecx
bt edi edx
ror al 0x4
rol cx 0x8
shr cl cl
sub bl al
shld cx si 0x8
or cl ah
adc cx si
cmp al dh
movzx eax al
pushfd
shl cl cl
shrd cx bx 0x1
rcr ecx cl
mov ecx [ eax * 4 + rwxdata ]
test cl bh
jmp rwxdata
test dl ah
call sub_3b1107
sub_3b10d0
mov [ esp + 0x44 ] ecx
mov [ esp + 0x4 ] al
mov [ esp + 0x8 ] bh
mov [ esp + 0x40 ] edx
mov [ esp + 0xc ] eax
mov [ esp ] 0x2c
call sub_3af393
shrd dx bp 0x8
mov al [ esi - 0x1 ]
sbb dh 0x90
sub esi 0x1
sub dx 0xbe8d
xor al bl
call sub_3b0624
sub_3b1107
not ecx
stc
call sub_3aeb8d
jmp rwxdata
mov [ esp + 0x20 ] esi
mov [ esp + 0x4 ] 0xc9
jmp rwxdata
mov [ esp + 0x1c ] edi
pushfd
jmp rwxdata
push 0xead608ed
mov [ esp + 0x20 ] ecx
push ecx
mov [ esp + 0x20 ] edx
push [ esp ]
pushfd
pop [ esp + 0x20 ]
lea esp [ esp + 0x20 ]
jle rwxdata
pushad
mov [ esp + 0x1c ] ebx
call sub_3af946
btr di dx
sub cl 0xc7
cdq
std
mov esp ebp
adc cx di
xchg dh cl
pop ecx
movzx edx bl
cdq
pop edx
shr cx cl
bswap bx
rdtsc
pop ebx
sbb si 0xe334
popfd
pushfd
mov cx 0xf4b6
movzx bp al
pop ecx
pop edx
movsx cx cl
pop ecx
call sub_3b0e9a
mov [ esp + 0x44 ] ebx
jmp rwxdata
push ebx
call sub_3b084c
xor al ch
mov al [ esi - 0x1 ]
jmp rwxdata
call sub_3af9d4
mov [ esp + 0x14 ] edx
pushad
pushfd
pushfd
pop [ esp + 0x34 ]
jmp rwxdata
jbe rwxdata
jmp rwxdata
bt eax esi
bt ax dx
pushfd
xor al bl
pushad
sub al 0x7
stc
cmc
ror al 0x5
jmp rwxdata
push eax
mov [ esp ] bx
xor al bl
mov [ esp ] bh
sub al 0x7
bt sp bx
clc
cmc
ror al 0x5
pushad
mov [ esp ] cx
jmp rwxdata
mov [ esp + 0x30 ] ebx
pushfd
pushfd
push [ esp + 0x4 ]
mov [ esp ] dl
push [ rwxdata ]
pop [ esp + 0x38 ]
jmp rwxdata
call sub_3b100c
pushad
dec al
cmc
pushfd
xor bl al
stc
pushfd
add esp 0x4c
jne rwxdata
mov [ esp + 0x4 ] ax
mov [ esp + 0x34 ] 0x0
mov [ esp ] ax
mov [ esp ] ecx
push edx
mov [ esp + 0x24 ] bl
lea esp [ esp + 0x38 ]
jmp sub_3b1253
call sub_3af794
clc
mov al [ eax + edi ]
stc
clc
pushfd
add esi 0xffffffff
pushfd
sub ebp 0x2
call sub_3b0970
sub_3b112d
push 0xf50ae366
jmp rwxdata
pushfd
mov [ esp + 0xc ] ebp
call sub_3b00bc
call sub_3aeae2
xor bl al
movzx dx cl
bswap dx
mov dx [ ebp ]
pushad
dec esi
push [ esp ]
cmp dl 0xa5
jmp rwxdata
add ebp 0x2
mov [ esp ] 0x82
pushad
mov [ esp ] dl
mov [ eax + edi ] dl
pushfd
pushfd
push [ esp ]
mov [ esp + 0x8 ] 0x1966
lea esp [ esp + 0x50 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3b1145
push [ esp ]
mov [ esp ] ecx
add ebp 0x6
mov [ esp ] 0x2a
pushad
mov [ eax ] dl
pushfd
push eax
pushfd
mov [ esp ] bp
lea esp [ esp + 0x34 ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3b117e
mov [ esp + 0x4c ] ecx
push esi
call sub_3b0129
push esi
push 0x6489405e
pushfd
pop [ esp + 0x4 ]
call sub_3afc05
push eax
mov [ esp ] ebp
mov [ esp ] ecx
pushfd
mov [ esp ] al
mov [ esp ] ebp
pushad
push 0x8b46175a
mov [ esp + 0x20 ] eax
pushad
mov [ esp + 0x3c ] esi
mov [ esp ] bh
call sub_3af1ac
movsx ax cl
mov eax [ ebp ]
pushad
pushfd
mov eax [ eax ]
jmp rwxdata
mov [ ebp ] eax
pushad
pushfd
mov [ esp + 0x4 ] 0xb16e
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3b11f2
pushad
cmc
add ebp 0x8
jmp rwxdata
jmp rwxdata
push esi
mov [ ss : eax ] edx
mov [ esp ] bl
lea esp [ esp + 0x2c ]
jmp rwxdata
rol al 0x5
mov al dl
mov al [ esi - 0x1 ]
lea ecx [ edi - 0x3fe56ec1 ]
sub al bl
sbb ecx eax
bsr cx dx
lea ecx [ esi * 8 + 0x45bff226 ]
sbb cl 0xac
neg al
pushfd
call sub_3b1070
stc
bt dx 0x3
add ebp 0x8
pushad
push [ esp ]
pushfd
call sub_3afdf9
sub_3b1253
mov si 0xe786
mov esi [ esp + 0x30 ]
rol bp 0xf
xor bx 0x16e4
bswap esi
dec di
bswap bp
add esi 0x9dcffc04
rol di cl
push 0xd55318aa
pushfd
rol esi 0x10
inc di
stc
rcr bl cl
lea ebp [ esp + 0x8 ]
pushad
call sub_3b095e
mov [ esp + 0x1c ] edi
pushfd
jmp rwxdata
push 0xead608ed
mov [ esp + 0x20 ] ecx
push ecx
mov [ esp + 0x20 ] edx
push [ esp ]
pushfd
pop [ esp + 0x20 ]
lea esp [ esp + 0x20 ]
jle rwxdata
pushad
mov [ esp + 0x1c ] ebx
call sub_3af946
btr di dx
sub cl 0xc7
cdq
std
mov esp ebp
adc cx di
xchg dh cl
pop ecx
movzx edx bl
cdq
pop edx
shr cx cl
bswap bx
rdtsc
pop ebx
sbb si 0xe334
popfd
pushfd
mov cx 0xf4b6
movzx bp al
pop ecx
pop edx
movsx cx cl
pop ecx
call sub_3b0e9a
mov [ esp + 0x44 ] ebx
jmp rwxdata
push ebx
call sub_3b084c
xor al ch
mov al [ esi - 0x1 ]
jmp rwxdata
call sub_3af9d4
mov [ esp + 0x14 ] edx
pushad
pushfd
pushfd
pop [ esp + 0x34 ]
jmp rwxdata
jbe rwxdata
jmp rwxdata
bt eax esi
bt ax dx
pushfd
xor al bl
pushad
sub al 0x7
stc
cmc
ror al 0x5
jmp rwxdata
push eax
mov [ esp ] bx
xor al bl
mov [ esp ] bh
sub al 0x7
bt sp bx
clc
cmc
ror al 0x5
pushad
mov [ esp ] cx
jmp rwxdata
mov [ esp + 0x30 ] ebx
pushfd
pushfd
push [ esp + 0x4 ]
mov [ esp ] dl
push [ rwxdata ]
pop [ esp + 0x38 ]
jmp rwxdata
call sub_3b100c
pushad
dec al
cmc
pushfd
xor bl al
stc
pushfd
add esp 0x4c
jne rwxdata
mov [ esp + 0x4 ] ax
mov [ esp + 0x34 ] 0x0
mov [ esp ] ax
mov [ esp ] ecx
push edx
mov [ esp + 0x24 ] bl
lea esp [ esp + 0x38 ]
jmp sub_3b1253
call sub_3af794
clc
mov al [ eax + edi ]
stc
clc
pushfd
add esi 0xffffffff
pushfd
sub ebp 0x2
call sub_3b0970
sub_3b129d
lea esp [ esp + 0x14 ]
je rwxdata
test bh bl
bt si dx
cmc
xor eax eax
jmp rwxdata
cmp sp bp
bt dx 0x7
call sub_3b07e8
call sub_3af4ce
push 0xf7ae4d09
call sub_3af3cc
sub_2171d9
add dl dl
push [ esp + 0x4 ]
pushfd
call sub_3990ff
sub_217288
pushfd
mov [ esp + 0x28 ] rwxdata
jmp rwxdata
jmp rwxdata
push 0xa03731f1
mov [ esp + 0x28 ] eax
mov [ esp ] 0xbb
mov [ esp ] 0x3e99
push [ esp + 0x28 ]
retn 0x2c
sub_217553
bt esp esi
sub al 0x30
cmp dl dl
cmp al 0x9
call sub_392776
sub_217561
mov [ esp + 0x4 ] edx
mov [ esp ] 0x2f7
adc dl dl
lea esp [ esp + 0x58 ]
pushfd
jmp rwxdata
lea esp [ esp + 0x4 ]
retn
sub_21762e
mov ecx edi
lea esp [ esp + 0x4 ]
pushfd
pushad
rcr al cl
rcr al cl
mov al [ ecx ]
stc
cmc
jmp sub_39dab6
j_sub_39bbe1
jmp sub_39bbe1
sub_217910
push [ esp ]
pushad
sub edi 0x4
pushfd
jmp rwxdata
call sub_39de2f
mov [ esp + 0x24 ] 0x4cc817ee
pushad
lea esp [ esp + 0x44 ]
jmp j_sub_3b06a3
sub_217935
pushfd
jmp rwxdata
mov [ esp + 0x28 ] eax
push esi
pushfd
pushfd
push [ esp + 0x34 ]
retn 0x38
sub_21793b
inc al
pushfd
bt ebp 0x9
call sub_217aa0
sub_217aa0
jmp rwxdata
ror al 0x4
mov [ esp + 0xc ] sp
add al 0xdf
cmp ch 0x5a
bt di ax
mov [ esp ] cl
neg al
call j_sub_3ab756
lea eax [ rwxdata ]
jmp sub_3938a9
sub_217adb
lea esp [ esp + 0x28 ]
call sub_38ef01
pushfd
adc ecx ecx
jmp rwxdata
call sub_39531f
j_sub_3abbbe
jmp sub_3abbbe
sub_217d9b
movsx si bl
mov esi [ esp + 0x4c ]
lea ebp [ ecx * 2 - 0x20c05da9 ]
lea ebp [ ebx - 0x774d17f0 ]
mov ebp [ esp + 0x50 ]
mov [ esp + 0x14 ] 0xde
mov [ esp + 0x8 ] ebp
mov [ esp + 0x4 ] di
push [ esp + 0x54 ]
retn 0x60
sub_38e6ff
mov [ esp ] 0xdb
mov [ esp ] bh
call sub_394533
sub_38ea34
movzx si al
jmp sub_3ab77f
j_sub_3add52
jmp sub_3add52
j_sub_3936c3
jmp sub_3936c3
j_sub_3aab2a
jmp sub_3aab2a
sub_38f185
bt cx dx
jmp sub_3ac5d6
j_sub_392ad6
jmp sub_392ad6
sub_38fdb6
not bl
call sub_3956e8
sub_392af8
pop edi
mov edi [ ebp + 0x8 ]
pushfd
lea esp [ esp + 0xc ]
call sub_217c14
pushad
pushfd
call j_sub_3936c3
sub_392c55
[ edi ] [ esi ]
call sub_3999ff
sub_392f6b
neg al
cmc
push 0x1fda015
cmc
sub al 0x82
call sub_39570b
sub_392f7b
mov [ esp ] rwxdata
pushad
jmp rwxdata
push [ esp ]
push [ eax ]
pop [ esp + 0x20 ]
mov [ esp + 0x8 ] 0x56a3
push [ esp ]
pushad
push [ esp + 0x44 ]
retn 0x48
sub_392fa8
cmp ah 0x2e
mov [ esp ] 0x10a4
mov [ esp ] 0x71
pushad
mov [ esp ] 0x2c
push [ esp + 0x24 ]
retn 0x28
sub_393236
lodsb [ esi ]
pushfd
push esi
not al
mov [ esp ] 0x9c
jmp rwxdata
call sub_2171e5
j_sub_3ab756
jmp sub_3ab756
j_sub_39c501
jmp sub_39c501
sub_393bff
mov edi [ edi + ecx * 4 ]
call sub_39bbb3
j_sub_39bf52#2
jmp j_sub_39bf52
sub_394d69
cmp al 0x16
test ah al
jmp sub_3921bf
sub_394eae
mov [ esp + 0x4 ] rwxdata
push 0x991c118
mov [ esp + 0x4 ] bp
mov [ esp ] dl
mov [ esp + 0x4 ] eax
push [ esp ]
pushfd
push [ esp + 0xc ]
retn 0x10
sub_394ed2
call sub_39bd42
sub_39511d
lea eax [ rwxdata ]
pushfd
mov [ esp + 0x34 ] rwxdata
mov [ esp ] bx
push [ eax ]
pop [ esp + 0x30 ]
mov [ esp + 0x8 ] bh
push [ esp + 0x30 ]
retn 0x34
sub_39523f
mov edi [ edi + ecx * 4 ]
jmp sub_39c893
sub_39531f
pushfd
pushad
lea esp [ esp + 0x2c ]
call sub_38ef01
call sub_3ae0c9
sub_3956c5
movzx dx dl
lea edx [ ebx + 0x4 ]
movsx edi bl
push [ esp ]
movzx edi al
movzx esi [ edx + 0x1a ]
not di
not di
lea esi [ esi + edx + 0x1c ]
call j_sub_392af8
sub_39570b
mov [ esp + 0x4 ] 0xca
jmp sub_39d80e
j_sub_39ff11
jmp sub_39ff11
sub_398cfc
call sub_39385d
sub_398d17
add [ ebx + edi ] dx
push 0x4fec1f44
pushad
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
cmp edx 0xa4b2386f
cmc
cmc
add esi 0x2
call sub_39b5ee
sub_3990ee
mov [ esp + 0xc ] eax
pushad
push 0x801e5b32
push [ esp + 0x30 ]
retn 0x34
j_sub_392af8
jmp sub_392af8
sub_399bf8
bt cx di
call sub_3ad354
sub_399c01
mov [ esp ] 0xa3
or cx 0x1841
mov ebx eax
pushfd
cmp dl ch
shrd di di cl
lea ecx [ esp + 0x1c0f5b7b ]
mov edi eax
rcr ecx 0x1f
mov ecx 0x104
call sub_39fd77
sub_399cb9
setae al
lea eax [ rwxdata ]
call j_sub_39b4d9
sub_39a293
call sub_39c41f
cwde
push ebx
pushfd
lahf
push [ esp ]
lea eax [ ebp - 0x4 ]
mov [ esp + 0x4 ] ah
pushad
pushfd
call sub_2176bd
sub_39a2ad
cmc
sub al 0x30
call sub_392758
cmp eax 0x824da694
int3
j_sub_217288
jmp sub_217288
j_sub_39babe
jmp sub_39babe
sub_39b4d9
push [ esp + 0x4 ]
mov [ esp + 0x28 ] rwxdata
mov [ esp ] 0x40
push [ esp + 0xc ]
mov [ esp + 0x8 ] esp
jmp rwxdata
mov [ esp + 0x28 ] eax
pushfd
push esp
mov [ esp ] ah
push [ esp + 0x30 ]
retn 0x34
sub_39b5ee
mov [ esp ] cx
pushad
push [ esp ]
dec ecx
pushfd
call sub_39bd57
xor [ eax + 0x6df6182 ] esp
mov ds di
daa
or [ edi - 0x4f ] ecx
test cl ah
0x1e9d
sub_39babe
pushad
pushfd
mov [ esp + 0x28 ] 0x4cc817ee
push ebx
mov [ esp + 0x4 ] dh
mov [ esp + 0xc ] cl
lea esp [ esp + 0x2c ]
jmp j_sub_3b06a3
sub_39bc52
pushad
mov [ esp + 0x20 ] 0x3504e73a
call sub_394a9e
sub_39bc60
call sub_3accae
sub_39bd42
bt si 0x8
sub edi 0x4
call sub_38f185
sub_39bd4f
cmp [ edi ] 0x23
call sub_3ade65
sub_39bf1c
mov ebp [ esp + 0x4 ]
push [ esp + 0x4 ]
mov [ esp + 0x8 ] ah
pushad
push [ esp + 0x2c ]
retn 0x40
sub_39c41f
lea edi [ edi + 0x1 ]
cwde
call sub_3ad6e3
sub_39d1f3
bt cx 0x7
jmp sub_3ac5c1
j_sub_392725
clc
jmp sub_392725
sub_39d457
lea edi [ esi - 0x7c0ad5bc ]
jmp sub_390172
sub_39d4f3
movzx ecx [ edi + ecx * 2 ]
not di
dec di
or edi edx
mov edi [ edx + 0x1c ]
jmp sub_39a41e
sub_39d80e
rol al 0x7
stc
mov [ esp + 0xc ] 0x525f
cmp al bl
push 0x99d5699c
cmp al [ edi ]
call sub_39a293
sub_39dab6
call sub_399c29
inc ebp
out 0x73 al
sub [ ecx ] ch
outsb
mov esp 0xdea68d36

j_sub_39bf52
jmp sub_39bf52
j_sub_392f6b
jmp sub_392f6b
sub_39dfd2
push ebp
neg al
not bl
not bl
mov [ esp ] 0x7d
push [ esp + 0x4 ]
stosb [ edi ]
call sub_399eca
sub_39e219
bt sp sp
jl rwxdata
pushad
cmc
cmp dl 0xbf
sub ecx ecx
pushfd
inc ecx
call j_sub_217adb
xor ecx ecx
j_sub_39a510
jmp sub_39a510
j_sub_217adb
jmp sub_217adb
sub_39e4ca
mov [ esp + 0x30 ] eax
pushfd
pushfd
pushfd
push [ esp ]
push [ esp + 0x40 ]
retn 0x44
j_sub_39b4d9
jmp sub_39b4d9
sub_39f376
mov [ esp ] ebx
jmp sub_39f434
_TLS_Entry_0
pushad
push edi
mov [ esp + 0x20 ] 0x3504f4a8
pushfd
mov [ esp + 0x20 ] 0x7949726e
push esp
lea esp [ esp + 0x24 ]
jmp rwxdata
call sub_3b004b
sub_3a000a
call sub_39bc52
sub_3a00d0
stc
cmp al 0x2
sub esi eax
call sub_3933d0
sub_3a032f
push 0xd6055df0
or al al
pushfd
call sub_399a7d
pushad
cmc
cmp dl 0xbf
sub ecx ecx
pushfd
inc ecx
call j_sub_217adb
sub_3a034a
or ah ah
jmp sub_399e8a
sub_3ab713
pushad
mov [ esp + 0x24 ] rwxdata
pushfd
push ebp
pushfd
mov [ esp + 0x2c ] eax
push edx
push [ esp + 0x30 ]
retn 0x34
sub_3abcd5
jmp rwxdata
add ah 0x20
jmp sub_3a032f
sub_3ac5c9
mov ebp [ esp + 0x4 ]
pushad
pushfd
push [ esp + 0x2c ]
retn 0x34
sub_3ac949
lea esp [ esp + 0x8 ]
retn
j_sub_2176f4
jmp sub_2176f4
sub_3accae
mov [ esp + 0x1c ] rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x4 ] 0x96
push [ eax ]
pop [ esp + 0x1c ]
push 0xf6c3692e
push [ esp + 0x20 ]
retn 0x24
sub_3ace3e
push [ eax ]
pop [ esp + 0x2c ]
pushfd
pushfd
mov [ esp + 0x8 ] 0x30
mov [ esp + 0x8 ] 0x3
push [ esp + 0x34 ]
retn 0x38
sub_3ad18f
mov [ esp ] 0x726b4bed
mov [ esp + 0x20 ] rwxdata
pushfd
jmp rwxdata
push [ eax ]
pop [ esp + 0x20 ]
pushad
push [ esp + 0x40 ]
retn 0x44
sub_3ad8c3
inc edi
mov [ esp ] 0xc9
lea esp [ esp + 0x2c ]
jmp sub_217c14
j_sub_39f43e
jmp sub_39f43e
sub_3add52
mov [ esp ] 0x35
mov [ esp ] 0x4cc817ee
push 0x3789daa6
pushad
lea esp [ esp + 0x24 ]
jmp j_sub_3b06a3
sub_3ae276
call sub_38fdb6
sub_3ae320
mov [ esp + 0x4 ] 0xfc
push [ rwxdata ]
pop [ esp + 0x4 ]
pushfd
mov [ esp + 0x4 ] bh
mov [ esp + 0x4 ] 0x0
pushad
lea esp [ esp + 0x24 ]
jmp sub_3b1253
sub_3ae3d1
jmp rwxdata
jmp sub_3af171
sub_3ae44a
pushfd
mov [ esp + 0x40 ] ebx
mov [ esp ] edx
call sub_3afd00
jmp sub_3af9b5
j_sub_3aefb2
jmp sub_3aefb2
sub_3aea1a
call sub_3af21b
clc
sub ebp 0x2
cmp esi eax
jmp sub_3b0ed5
sub_3aea55
pushfd
pushfd
pop [ esp + 0x2c ]
call sub_3afc4e
j_sub_3af9c2
jmp sub_3af9c2
sub_3aeab1
mov [ esp + 0x10 ] edx
pushfd
pushfd
pushfd
push [ esp + 0x1c ]
retn 0x20
j_sub_3aef4c
jmp j_sub_3aef4c#2
sub_3aeb09
push [ rwxdata ]
pop [ esp + 0x48 ]
push 0x59c3ff4f
mov [ esp + 0xc ] 0x6d5002e3
mov [ esp + 0x48 ] 0x0
pushfd
pushfd
mov [ esp ] 0xb5b9
lea esp [ esp + 0x50 ]
jmp sub_3b1253
j_sub_3b04b3
jmp sub_3b04b3
sub_3aeb60
pushfd
mov [ esp + 0x44 ] 0x0
mov [ esp ] ecx
push 0x524a0ad7
lea esp [ esp + 0x48 ]
jmp sub_3b1253
sub_3aebf3
push [ rwxdata ]
pop [ esp + 0x24 ]
pushad
push [ esp ]
mov [ esp + 0x44 ] 0x0
mov [ esp + 0x8 ] bp
push [ esp + 0x10 ]
push 0x3987608
lea esp [ esp + 0x4c ]
jmp sub_3b1253
sub_3aec31
pushad
push esi
mov [ esp + 0x28 ] eax
call sub_3af3ad
sub_3aeccd
call sub_3b0bc6
sub_3aecd2
mov [ esp + 0x34 ] 0x0
pushfd
pushfd
pushfd
lea esp [ esp + 0x40 ]
jmp sub_3b1253
sub_3aed00
mov [ esp + 0x48 ] edx
jmp sub_3b029b
sub_3aed33
mov [ esp ] dh
push [ esp + 0x4 ]
pop [ ebp ]
pushfd
push [ esp ]
pushad
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x30 ]
jmp sub_3b0d83
sub_3aed75
mov [ esp ] 0x9a
mov [ esp + 0x8 ] 0x689e
jmp sub_3b03a9
sub_3aedab
mov [ esp + 0x1c ] edx
mov [ esp ] 0x2aae
jmp sub_3ae4b0
sub_3aee07
push [ rwxdata ]
pop [ esp + 0x40 ]
call sub_3b01c8
mov [ esp + 0x28 ] ecx
mov [ esp + 0x4 ] 0x53c3
push 0x5e070397
push [ esp + 0x2c ]
retn 0x30
sub_3aee48
mov [ esp + 0x20 ] edx
jmp sub_3b0265
sub_3aeece
mov [ esp + 0x40 ] edx
jmp sub_3aea1a
sub_3aeef8
sub ebp 0x2
jmp rwxdata
jmp sub_3b11cd
sub_3aef0e
push [ rwxdata ]
pop [ esp + 0x58 ]
call j_sub_3b0568
sub_3aef4c
mov [ esp + 0x2c ] edi
pushfd
pushfd
mov [ esp + 0x30 ] ecx
jmp rwxdata
mov [ esp + 0x2c ] edx
push esp
jmp sub_3b045c
sub_3aefb2
mov [ esp + 0x4 ] 0xe9a4
pushfd
pop [ esp + 0x38 ]
call sub_3afcd9
sub_3aefc4
mov [ ebp ] ax
pushfd
push [ esp ]
lea esp [ esp + 0xc ]
jmp sub_3b0d83
sub_3aefd5
mov [ esp + 0x34 ] ebx
push 0x4e572278
push [ rwxdata ]
pop [ esp + 0x34 ]
mov [ esp + 0x4 ] al
call sub_3b0bcb
j_sub_3affbd
jmp sub_3affbd
sub_3af1a7
call sub_3af690
sub_3af1e6
call sub_3af246
mov [ esp + 0x4 ] ax
mov [ esp + 0x34 ] 0x0
mov [ esp ] ax
mov [ esp ] ecx
push edx
mov [ esp + 0x24 ] bl
lea esp [ esp + 0x38 ]
jmp sub_3b1253
sub_3af20d
mov [ ebp + 0x4 ] ax
call sub_3aea55
j_sub_3b0568
jmp sub_3b0568
sub_3af21b
pushfd
pop [ esp + 0x40 ]
mov [ esp + 0x4 ] 0xf5
mov [ esp + 0x3c ] ebx
mov [ esp ] 0x66
push [ rwxdata ]
pop [ esp + 0x38 ]
jmp sub_3b0782
sub_3af23d
mov [ esp + 0x54 ] ebx
call sub_3af460
sub_3af246
mov [ esp + 0x54 ] edi
call sub_3b04f2
rcr ah 0x1
mov eax [ ebp ]
pushfd
mov [ esp ] 0xa2
push esp
add ebp 0x2
call sub_3af0a1
j_sub_3af20d
jmp sub_3af20d
sub_3af2cf
call sub_3b0a2e
mov [ esp + 0x4 ] 0xf770b11
mov [ esp + 0x4 ] 0x5372
mov [ esp + 0x3c ] ebp
jmp j_sub_3af9c2
j_sub_3afa15
jmp sub_3afa15
sub_3af31e
bt ax 0xb
cmp si 0xef9b
add ebp 0x6
call j_sub_3aeeb0
push [ rwxdata ]
pop [ esp + 0x28 ]
call sub_3afba8
sub_3af393
mov [ esp ] eax
pushfd
pop [ esp + 0x40 ]
call sub_3b0b05
sub_3af3ad
pushfd
call sub_3af81d
pushad
pushfd
push 0x98dc7120
push [ esp + 0x14 ]
mov [ esp + 0x28 ] ecx
pushfd
mov [ esp + 0x28 ] ebp
call sub_3b000f
sub_3af48c
mov [ esp ] 0xe6
mov [ esp + 0x58 ] ecx
jmp sub_3af499
sub_3af499
mov [ esp + 0x4 ] ah
mov [ esp + 0x4 ] dh
mov [ esp + 0x4 ] ah
mov [ esp + 0x54 ] edx
call sub_3afb58
pushfd
add esi 0xffffffff
stc
sub ebp 0x2
call sub_3afeac
sub_3af4bb
mov [ esp ] ah
call sub_3af1e6
sub_3af4c3
neg ax
cmp cl dh
clc
jmp sub_3b038a
sub_3af563
mov [ esp + 0x4 ] 0x82
mov [ esp + 0x30 ] ebx
call sub_3b0019
jmp sub_3aedab
sub_3af67a
mov [ esp ] esi
pushfd
mov [ esp ] si
mov [ esp ] edi
pushfd
jmp rwxdata
mov [ esp ] ecx
pushad
pushad
call sub_3aeece
sub_3af68b
call j_sub_3aef4c
sub_3af6e9
movzx ax cl
mov [ esp ] 0x15
mov eax [ ebp ]
cmp al bl
rcr dl cl
mov dl [ ebp + 0x4 ]
jmp j_sub_3b1145
j_sub_3b08c2
jmp sub_3b08c2
sub_3af7e4
push [ rwxdata ]
pop [ esp + 0x40 ]
mov [ esp + 0x8 ] 0xa3
push 0xe1b73e41
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x4 ] 0x62
push 0xae8489b1
push 0x410356df
mov [ esp + 0x8 ] 0x59
lea esp [ esp + 0x48 ]
jmp sub_3b1253
sub_3af8a6
push 0x8f5071a
mov [ esp + 0x48 ] 0x0
mov [ esp + 0xc ] 0x828f81e
push eax
mov [ esp ] edi
lea esp [ esp + 0x4c ]
jmp sub_3b1253
sub_3af8cd
mov [ esp ] 0x3c
push [ rwxdata ]
pop [ esp + 0x30 ]
pushfd
call sub_3aecd2
sub_3af946
pushfd
call sub_3aebf3
sub_3af9b5
push esp
mov [ esp ] ecx
pushfd
mov [ esp ] ebp
call sub_3affc8
sub_3af9c2
mov [ esp + 0x38 ] eax
push esp
mov [ esp + 0x38 ] esi
mov [ esp ] si
call sub_3b0c3d
sub_3afa4f
mov [ esp + 0x3c ] ecx
mov [ esp ] di
mov [ esp ] cl
mov [ esp + 0x38 ] edx
mov [ esp + 0x10 ] ah
call j_sub_3aefb2
sub_3afa67
mov [ esp + 0x34 ] ecx
mov [ esp ] ch
call sub_3aeff1
sub_3afa73
mov [ esp + 0xc ] bl
mov [ esp + 0x2c ] eax
pushfd
call sub_3af93b
sub_3afa81
call sub_3b0fef
j_sub_3b061c
jmp sub_3b061c
j_sub_3b02cb
jmp sub_3b02cb
sub_3afb88
mov [ esp + 0xc ] eax
mov [ esp + 0x4 ] 0xdc6d407b
push 0xaa8a8559
push [ esp ]
push [ esp + 0x14 ]
retn 0x18
sub_3afba3
call j_sub_3b02cb
sub_3afba8
mov [ esp ] 0x24
mov [ esp + 0xc ] bl
jmp sub_3b0225
sub_3afc4e
mov [ esp + 0x4 ] 0x4f6f
jmp sub_3b03ef
j_sub_3aeeb0
jmp sub_3aeeb0
sub_3afd00
push [ rwxdata ]
pop [ esp + 0x40 ]
mov [ esp + 0x10 ] bh
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x8 ] ax
mov [ esp ] bh
lea esp [ esp + 0x3c ]
jmp sub_3b1253
sub_3afd36
xor [ ebp + 0xc ] 0x20
lea esp [ esp + 0x4 ]
pushad
lea ebx [ eax + 0x6a190e72 ]
mov ebx [ esp + 0x20 ]
pushad
lea esp [ esp + 0x44 ]
jmp sub_3b0d83
sub_3afe6a
mov [ esp + 0x14 ] esi
pushfd
pushfd
call sub_3aff49
mov [ esp + 0x30 ] ecx
push [ esp ]
jmp rwxdata
mov [ esp + 0x30 ] edx
call sub_3aedba
stc
shrd eax edx cl
jmp sub_3b0a88
sub_3afeac
mov [ esp + 0x4 ] bh
mov [ esp ] ax
mov [ ebp ] ax
mov [ esp + 0x10 ] ax
mov [ esp ] 0x6d7a4353
pushfd
mov [ esp ] 0x4fa6
lea esp [ esp + 0x40 ]
jmp sub_3b0d83
sub_3aff44
call j_sub_3b0b40
sub_3aff49
mov [ esp + 0x1c ] edi
pushad
push [ esp + 0x4 ]
push [ esp + 0x4 ]
mov [ esp + 0x40 ] ecx
pushfd
jmp rwxdata
mov [ esp + 0x40 ] edx
mov [ esp + 0x4 ] bh
call sub_3aec3c
sub_3affa6
pushfd
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x4 ] 0x22
lea esp [ esp + 0x40 ]
jmp sub_3b1253
sub_3affc8
pushfd
jmp rwxdata
mov [ esp + 0x4 ] eax
pushad
push [ esp + 0x8 ]
call sub_3af2cf
sub_3affdd
mov [ esp + 0x4 ] bh
push [ esp ]
mov [ esp + 0x40 ] eax
mov [ esp + 0x4 ] 0xee
push 0x1de0f1a3
mov [ esp + 0x40 ] esi
mov [ esp + 0x4 ] 0x24a
mov [ esp + 0x3c ] edi
call j_sub_3afa4f
mov [ esp + 0x40 ] ebx
jmp sub_3b0680
sub_3b000f
call sub_3afa73
jmp sub_3af171
sub_3b0019
mov [ esp + 0x14 ] dl
jmp sub_3af8cd
sub_3b004b
push ecx
mov [ esp + 0x4 ] sp
mov [ esp + 0x4 ] ecx
call sub_3b112d
mov [ ebp ] ax
push [ esp ]
pushfd
pushfd
lea esp [ esp + 0x14 ]
jmp sub_3b0d83
j_sub_3b01e5
jmp sub_3b01e5
sub_3b0129
mov [ esp + 0x4 ] ch
mov [ esp + 0x50 ] edx
jmp sub_3aec57
sub_3b013b
bt cx dx
sub ebp 0xc
call sub_3ae2f1
movsx ax al
call sub_3af6e9
j_sub_3afa4f
jmp sub_3afa4f
sub_3b01c8
pushfd
mov [ esp + 0x8 ] 0x73
mov [ esp + 0x44 ] 0x0
mov [ esp ] 0x70da
lea esp [ esp + 0x44 ]
jmp sub_3b1253
sub_3b0225
mov [ esp + 0x28 ] 0x0
mov [ esp ] 0x84
mov [ esp + 0x4 ] dx
push [ esp ]
lea esp [ esp + 0x2c ]
jmp sub_3b1253
sub_3b029b
pushfd
pop [ esp + 0x44 ]
push 0xf976b880
mov [ esp ] 0x30666113
pushfd
mov [ esp + 0x10 ] 0x69
mov [ esp + 0x48 ] ebx
call sub_3b0486
j_sub_3b06a3
jmp sub_3b06a3
sub_3b03ef
push [ esp + 0x30 ]
pop [ ebp ]
mov [ esp ] 0x712
pushfd
lea esp [ esp + 0x38 ]
jmp sub_3b0d83
sub_3b0486
push [ rwxdata ]
pop [ esp + 0x48 ]
jmp rwxdata
mov [ esp + 0x44 ] 0x0
push esi
push 0xcfdb5f40
lea esp [ esp + 0x4c ]
jmp sub_3b1253
sub_3b049f
mov [ ebp ] ax
push ebx
pushad
mov [ esp + 0x8 ] 0xe3
lea esp [ esp + 0x30 ]
jmp sub_3b0d83
sub_3b04b3
add ebp 0x2
pushad
call sub_3b04f7
sub_3b04f2
call sub_3af48c
sub_3b0568
mov [ esp ] bh
mov [ esp ] cl
mov [ esp + 0x58 ] 0x0
mov [ esp + 0x4 ] bh
mov [ esp + 0x4 ] dh
mov [ esp ] di
lea esp [ esp + 0x58 ]
jmp sub_3b1253
j_sub_3b06bb
jmp sub_3b06bb
sub_3b05b8
pushfd
push [ rwxdata ]
pop [ esp + 0x38 ]
pushfd
mov [ esp + 0x38 ] 0x0
pushfd
mov [ esp ] 0x0
push [ esp ]
mov [ esp + 0x4 ] 0x75
lea esp [ esp + 0x40 ]
jmp sub_3b1253
j_sub_3b0b40
jmp sub_3b0b40
sub_3b061c
mov [ esp ] edi
call sub_3b08ff
sub_3b0680
mov [ esp ] bl
mov [ esp ] dl
call sub_3b082c
mov [ esp ] 0x98
push [ esp ]
mov [ esp + 0x4 ] ch
mov [ esp + 0x4 ] esi
mov [ esp ] 0x25
jmp j_sub_3b061c
sub_3b06a3
push esi
mov [ esp ] ecx
push 0x73c032c6
push edx
push 0xa07373b7
mov [ esp + 0x8 ] ebp
call j_sub_3affbd
sub_3b06bb
push esi
push esp
push [ rwxdata ]
pop [ esp + 0x48 ]
mov [ esp + 0xc ] 0x8
pushfd
jmp rwxdata
mov [ esp + 0x48 ] 0x0
push 0xe6b8dcb8
lea esp [ esp + 0x4c ]
jmp sub_3b1253
sub_3b0720
sub ebp 0x4
mov [ esp ] 0x66
pushad
mov [ ebp ] eax
pushfd
push ecx
lea esp [ esp + 0x38 ]
jmp sub_3b0d83
j_sub_3aeb09
jmp sub_3aeb09
sub_3b0782
mov [ esp ] 0xc4
mov [ esp + 0x34 ] 0x0
push 0xe05355eb
lea esp [ esp + 0x38 ]
jmp sub_3b1253
sub_3b07f8
call sub_3b0fea
sub_3b082c
push [ rwxdata ]
pop [ esp + 0x40 ]
mov [ esp ] cl
mov [ esp + 0x3c ] 0x0
pushfd
push edx
lea esp [ esp + 0x44 ]
jmp sub_3b1253
sub_3b08f3
mov [ esp ] bx
push [ esp ]
call sub_3b0fe1
j_sub_3b0c74
jmp sub_3b0c74
sub_3b0a2e
mov [ esp + 0x2c ] esi
call sub_3b0d03
sub_3b0a37
pushfd
mov ax [ eax ]
call sub_3afcb0
mov [ esp + 0x44 ] 0x0
push esi
push 0xcfdb5f40
lea esp [ esp + 0x4c ]
jmp sub_3b1253
sub_3b0a88
pushfd
jmp rwxdata
push 0xe722813d
mov [ ebp + 0x4 ] eax
pushfd
call sub_3b0f48
j_sub_3b1145
jmp sub_3b1145
j_sub_3aef4c#2
jmp sub_3aef4c
sub_3b0b05
mov [ esp ] cx
pushfd
push esp
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4 ] 0xad
call j_sub_3aeb09
sub_3b0b19
lea eax [ esi - 0x18c5d6cd ]
mov eax [ esp + 0x4 ]
push [ esp ]
movzx bp al
mov ebp [ esp + 0xc ]
push 0x1066d885
mov ecx [ esp + 0x14 ]
pushfd
push esi
push [ esp + 0x20 ]
retn 0x24
sub_3b0b40
mov [ esp + 0x4 ] eax
jmp sub_3af67a
sub_3b0b71
pushfd
pushfd
pop [ esp + 0x8 ]
pushad
push [ esp + 0x28 ]
pop [ ebp ]
pushfd
push 0xb057c49f
push 0x213c94e1
lea esp [ esp + 0x38 ]
jmp sub_3b0d83
sub_3b0b93
mov [ esp + 0x4 ] ah
mov [ ebp ] edx
jmp j_sub_3b0fa6
sub_3b0bc6
call sub_3af0ab
sub_3b0bcb
mov [ esp + 0x34 ] 0x0
mov [ esp ] ax
push 0xde34d8e2
lea esp [ esp + 0x38 ]
jmp sub_3b1253
sub_3b0bf2
call sub_3b10d0
pushad
mov [ esp ] ch
mov [ esp ] 0x64406dd
mov [ esp + 0x1c ] ecx
jmp sub_3b0398
sub_3b0c3d
mov [ esp + 0x8 ] ah
mov [ esp + 0x4 ] ah
mov [ esp + 0x38 ] edi
push 0xec9b914a
call sub_3aff36
mov [ esp + 0x34 ] ecx
pushfd
push 0xe14cc384
push [ esp + 0x3c ]
retn 0x40
j_sub_3aef0e
jmp sub_3aef0e
sub_3b0cee
sub ebp 0x4
push 0xab8de9dc
pushfd
mov [ esp + 0x4 ] 0xab80
jmp rwxdata
mov [ ebp ] eax
mov [ esp + 0x4 ] bl
push 0xbdd1a73c
pushfd
lea esp [ esp + 0x40 ]
jmp sub_3b0d83
sub_3b0d03
mov [ esp ] 0x4b
mov [ esp ] 0xf643
call sub_3b1023
sub_3b0e13
stc
sub ebp 0x2
pushfd
mov [ esp + 0x20 ] 0x28
mov [ ebp ] ax
pushfd
lea esp [ esp + 0x40 ]
jmp sub_3b0d83
sub_3b0e9a
bswap di
jmp sub_3aea8e
sub_3b0fa6
cmc
add esi 0xffffffff
mov [ esp ] dh
mov [ esp ] ah
lea esp [ esp + 0x50 ]
jmp sub_3b0d83
sub_3b0fe1
mov [ esp + 0x8 ] esi
call sub_3af3a1
sub_3b0fea
jmp rwxdata
mov [ esp + 0x1c ] eax
jmp sub_3ae369
sub_3b0fef
push 0xdf3492e8
mov [ esp + 0x38 ] 0x0
push esp
pushfd
lea esp [ esp + 0x40 ]
jmp sub_3b1253
sub_3b1007
call sub_3b0099
sub_3b1023
mov [ esp + 0x30 ] edi
push 0x5fa1f604
jmp rwxdata
mov [ esp + 0x30 ] ecx
push [ esp ]
jmp rwxdata
mov [ esp + 0x30 ] edx
call sub_3aedba
stc
shrd eax edx cl
jmp sub_3b0a88
j_sub_3b0fa6
jmp sub_3b0fa6
sub_3b1170
mov [ esp + 0x40 ] ebx
call j_sub_3b06bb
jmp sub_3b013b
sub_3b11cd
mov [ ebp ] ax
pushfd
push [ esp ]
push [ esp + 0x4 ]
mov [ esp + 0x4 ] al
lea esp [ esp + 0x10 ]
jmp sub_3b0d83
sub_3b1298
jmp rwxdata
pushfd
pop [ esp + 0x3c ]
mov [ esp + 0xc ] 0x42cc
mov [ esp ] 0x53
call sub_3ae44a
