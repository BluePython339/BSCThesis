sub_401000
cmp cl 0x40
jae r-xdata
sar edx 0x1f
mov eax edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
sar edx 0x1f
and cl 0x1f
sar eax cl
retn
shrd eax edx cl
sar edx cl
retn
sub_401030
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_401070
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_401120
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_401200
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4012c0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_4012eb
push ebp
mov ebp esp
sub esp 0x22c
lea eax [ ebp - 0x4 ]
push eax
call [ SHGetMalloc@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x22c ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
push esi
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x14 ] 0x41
call [ SHBrowseForFolderW@IAT ]
mov esi eax
test esi esi
jne r-xdata
xor al al
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push esi
call [ SHGetPathFromIDListW@IAT ]
mov edi eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push esi
push eax
call [ ecx + 0x14 ]
xor eax eax
test edi edi
setne al
pop edi
xor al al
jmp r-xdata
leave
retn 0xc
pop esi
sub_401367
push ebp
mov ebp esp
sub esp 0x808
push ebx
push esi
push edi
xor ebx ebx
push ebx
push [ ebp + 0x10 ]
call sub_406def
mov ecx [ ebp + 0x8 ]
mov [ ebp + 0x10 ] eax
call sub_40c7bb
mov edi 0x400
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x404 ]
push eax
call sub_40c9fa
test al al
jne r-xdata
lea eax [ ebp - 0x404 ]
push eax
call sub_406dd3
mov esi eax
movsx eax [ esi ]
push eax
call sub_406a75
cmp [ ebp + 0xc ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
cmp al bl
je r-xdata
cmp al bl
je r-xdata
cmp [ ebp - 0x404 ] 0x2a
mov esi [ ebp + 0x10 ]
jne r-xdata
push r--data
lea eax [ ebp - 0x404 ]
push eax
call sub_40910b
push ebx
lea eax [ ebp - 0x404 ]
push eax
call sub_406d40
push eax
call sub_406a38
test al al
jne r-xdata
mov [ esi ] bl
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x404 ]
push esi
push ebx
push eax
call sub_406def
push eax
call sub_4067c8
test al al
jne r-xdata
movsx eax [ ebp - 0x403 ]
push eax
call sub_406a75
test al al
je r-xdata
jmp r-xdata
mov al 0x1
jmp r-xdata
push edi
push esi
lea eax [ ebp - 0x806 ]
push eax
mov [ ebp - 0x808 ] 0x2e
mov [ ebp - 0x807 ] 0x5c
call sub_40c630
lea esi [ ebp - 0x808 ]
sub_40148d
push ebp
mov ebp esp
push esi
push 0x5
push [ ebp + 0x10 ]
mov esi ecx
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ esi + 0x4f08 ]
call sub_401367
test al al
je r-xdata
xor ecx ecx
cmp [ ebp + 0x14 ] cl
je r-xdata
mov al 0x1
jmp r-xdata
xor al al
mov eax [ esi + 0x4f0c ]
cmp [ eax + 0x20 ] ecx
je r-xdata
pop esi
pop ebp
retn 0x10
push 0x5
push ecx
push [ ebp + 0x8 ]
mov ecx esi
push [ ebp + 0xc ]
push eax
call sub_401367
neg al
sbb al al
inc al
jmp r-xdata
sub_4014e3
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ esi + 0x30 ]
push eax
mov edi ecx
mov [ ebp + 0x8 ] eax
call sub_408ef5
mov ebx 0x400
cmp eax ebx
jae r-xdata
xor eax eax
lea eax [ esi + 0x430 ]
push eax
call sub_409129
cmp eax ebx
jae r-xdata
mov al [ esi + 0x8 ]
and al 0xe0
cmp al 0xe0
sete al
xor ebx ebx
inc ebx
push ebx
push 0x0
mov [ ebp - 0x8 ] al
push [ ebp - 0x8 ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_40148d
test al al
jne r-xdata
mov ecx [ edi + 0x4f04 ]
call sub_40c7bb
jmp r-xdata
mov ecx [ edi + 0x4f04 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_40c8fd
test al al
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_4067c8
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
inc ebx
mov eax ebx
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call j_sub_40c591
neg eax
sbb al al
inc al
mov [ esi ] al
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_401598
push ebx
push ebp
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4f04 ]
xor ebp ebp
cmp edi ebp
je r-xdata
mov edi [ esi + 0x4f08 ]
cmp edi ebp
je r-xdata
mov ecx edi
call sub_40147a
push edi
call sub_409393
pop ecx
mov edi [ esi + 0x4f0c ]
cmp edi ebp
je r-xdata
mov ecx edi
call sub_40147a
push edi
call sub_409393
pop ecx
mov edi [ esi + 0x4f14 ]
cmp edi ebp
je r-xdata
mov ecx edi
call sub_40147a
push edi
call sub_409393
pop ecx
lea edi [ esi + 0x4f10 ]
mov ebx [ edi ]
cmp ebx ebp
je r-xdata
mov ecx edi
call sub_40147a
push edi
call sub_409393
pop ecx
mov [ edi ] ebp
pop edi
mov [ esi + 0x4f14 ] ebp
mov [ esi + 0x4f0c ] ebp
mov [ esi + 0x4f08 ] ebp
mov [ esi + 0x4f04 ] ebp
lea ecx [ esi + 0x2d60 ]
pop esi
pop ebp
pop ebx
jmp sub_40c7c4
mov ecx ebx
call sub_40147a
push ebx
call sub_409393
pop ecx
sub_401653
push ebx
push esi
push edi
mov esi ecx
call sub_40694d
mov ecx esi
call sub_401598
xor ebx ebx
xor eax eax
mov edi 0xa8
push edi
mov [ esi + 0x36d1 ] bl
mov [ esi + 0x3ae2 ] ax
mov [ esi + 0x4302 ] bl
mov [ esi + 0x4702 ] ax
mov [ esi + 0x36c8 ] bl
mov [ esi + 0x36c9 ] bl
mov [ esi + 0x36cc ] ebx
call sub_4093a0
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_40c967
jmp r-xdata
xor eax eax
mov ecx eax
call sub_40c967
jmp r-xdata
push edi
mov [ esi + 0x4f04 ] eax
call sub_4093a0
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_40c967
jmp r-xdata
push edi
mov [ esi + 0x4f08 ] eax
call sub_4093a0
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_40c967
jmp r-xdata
push edi
mov [ esi + 0x4f0c ] eax
call sub_4093a0
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_40c967
jmp r-xdata
push edi
mov [ esi + 0x4f14 ] eax
call sub_4093a0
pop ecx
cmp eax ebx
je r-xdata
pop edi
mov [ esi + 0x4f10 ] eax
pop esi
pop ebx
retn
sub_401729
push esi
mov esi ecx
call sub_4069e0
xor eax eax
mov ecx esi
mov [ esi + 0x4f10 ] eax
mov [ esi + 0x4f14 ] eax
mov [ esi + 0x4f0c ] eax
mov [ esi + 0x4f08 ] eax
mov [ esi + 0x4f04 ] eax
call sub_401653
mov eax esi
pop esi
retn
sub_401761
xor ecx ecx
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
mov [ ecx * 4 + rw-data ] eax
mov [ ecx * 4 + rw-data ] eax
inc ecx
cmp ecx 0x100
jb r-xdata
dec edx
jne r-xdata
push 0x8
mov eax ecx
pop edx
push ebx
push esi
push edi
mov ecx rw-data
mov edi 0x101
movzx ebx al
shr eax 0x8
xor eax [ ebx * 4 + rw-data ]
mov [ edx ] eax
add edx 0x400
dec esi
jne r-xdata
add ecx 0x4
dec edi
jne r-xdata
mov eax [ ecx - 0x400 ]
push 0x7
mov edx ecx
pop esi
pop edi
pop esi
pop ebx
retn
sub_4017cb
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
push edi
call sub_401761
cmp esi 0x8
jb r-xdata
test cl 0x7
je r-xdata
test esi esi
ja r-xdata
mov edi esi
shr edi 0x3
push ebx
movzx edx [ ecx ]
movzx edi al
xor edx edi
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
dec esi
inc ecx
jmp r-xdata
movzx edx [ ecx ]
movzx edi al
xor edx edi
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
dec esi
inc ecx
pop edi
pop esi
retn 0xc
xor eax [ ecx ]
sub esi 0x8
mov ebx eax
shr ebx 0x10
movzx ebx bl
mov edx eax
shr edx 0x18
mov edx [ edx * 4 + rw-data ]
xor edx [ ebx * 4 + rw-data ]
mov ebx eax
shr ebx 0x8
movzx ebx bl
xor edx [ ebx * 4 + rw-data ]
movzx ebx [ ecx + 0x6 ]
xor edx [ ebx * 4 + rw-data ]
movzx ebx [ ecx + 0x5 ]
xor edx [ ebx * 4 + rw-data ]
movzx ebx [ ecx + 0x4 ]
xor edx [ ebx * 4 + rw-data ]
movzx ebx [ ecx + 0x7 ]
xor edx [ ebx * 4 + rw-data ]
movzx eax al
xor edx [ eax * 4 + rw-data ]
add ecx 0x8
dec edi
mov eax edx
jne r-xdata
pop ebx
jmp r-xdata
test esi esi
jbe r-xdata
sub_4018e5
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x30
je r-xdata
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_4087bf
cmp [ ebp + 0xc ] 0x110
jne r-xdata
xor al al
pop ebp
retn 0x1c
mov al [ ebp + 0x20 ]
and al 0x1
movzx eax al
push eax
push [ ebp + 0x18 ]
mov ecx rw-data
push [ ebp + 0x8 ]
call sub_408a0e
jmp r-xdata
sub_40194b
push ebp
mov ebp esp
mov eax 0x1000
call sub_4012c0
call [ GetLastError@IAT ]
cmp eax 0x3
jne r-xdata
leave
retn 0x8
push esi
push edi
mov edi 0x400
push edi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406cab
lea eax [ ebp - 0x800 ]
push eax
call sub_409129
mov esi eax
lea eax [ ebp - 0x800 ]
push eax
call sub_4070e2
test al al
jne r-xdata
mov eax 0x104
pop edi
cmp esi eax
pop esi
jbe r-xdata
lea eax [ ebp - 0x1000 ]
push eax
push edi
call [ GetCurrentDirectoryW@IAT ]
lea eax [ ebp - 0x1000 ]
push eax
call sub_409129
lea esi [ esi + eax + 0x1 ]
push eax
push 0xaf
call sub_408c71
push eax
push r--data
call sub_40a123
add esp 0xc
sub_4019e1
mov edx [ esp + 0x4 ]
mov eax edx
dec eax
je r-xdata
cmp [ ecx ] 0x0
jne r-xdata
dec eax
je r-xdata
inc [ ecx + 0x4 ]
retn 0x4
mov [ ecx ] edx
mov eax [ ecx ]
test eax eax
je r-xdata
sub eax 0xfd
jne r-xdata
mov [ ecx ] 0x2
jmp r-xdata
cmp eax 0x1
jne r-xdata
sub_401a14
push esi
mov esi [ esp + 0x8 ]
cmp esi 0xff
jne r-xdata
push esi
mov ecx rw-data
call sub_4019e1
call sub_403bf2
call sub_40a6a4
push esi
call sub_409335
cmp [ ecx + 0x8 ] 0x0
je r-xdata
pop esi
retn 0x4
sub_401a6e
push ebp
mov ebp esp
sub esp 0x800
cmp [ rw-data ] 0x0
push esi
mov esi ecx
jne r-xdata
push 0x2
mov ecx esi
call sub_401a14
pop esi
leave
retn 0x8
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406cab
lea eax [ ebp - 0x800 ]
push eax
push 0x76
call sub_408c71
push eax
push 0x0
call sub_40a123
add esp 0xc
sub_401ac1
push ebp
mov ebp esp
mov eax 0x1200
call sub_4012c0
cmp [ ecx + 0x9 ] 0x0
jne r-xdata
xor al al
push ebx
push esi
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406cab
lea eax [ ebp - 0x800 ]
push eax
push 0x74
call sub_408c71
push eax
lea eax [ ebp - 0x1200 ]
push 0x500
push eax
call sub_40936c
add esp 0x10
call [ GetLastError@IAT ]
push 0x35
push 0x7e
mov esi eax
call sub_408c71
push eax
lea eax [ ebp - 0x1200 ]
push eax
push [ rw-data ]
call [ MessageBoxW@IAT ]
cmp eax 0x4
push esi
sete bl
call [ SetLastError@IAT ]
pop esi
mov al bl
pop ebx
jmp r-xdata
leave
retn 0xc
sub_401b4e
push ebp
mov ebp esp
sub esp 0x800
cmp [ rw-data ] 0x0
push esi
mov esi ecx
jne r-xdata
push 0x2
mov ecx esi
call sub_401a14
pop esi
leave
retn 0x8
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406cab
lea eax [ ebp - 0x800 ]
push eax
push 0x204
call sub_408c71
push eax
push 0x0
call sub_40a123
add esp 0xc
sub_401bc0
push ebp
mov ebp esp
mov eax 0x1000
call sub_4012c0
push esi
mov esi 0x400
push esi
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406cab
push esi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_406cab
lea eax [ ebp - 0x800 ]
push eax
push 0x6d
call sub_408c71
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_40a123
add esp 0xc
pop esi
leave
retn 0x10
sub_401c1c
push ebp
mov ebp esp
mov eax 0x1000
call sub_4012c0
push esi
push edi
mov esi 0x400
push esi
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0xc ]
mov edi ecx
push [ ebp + 0x8 ]
call sub_406cab
push esi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_406cab
lea eax [ ebp - 0x800 ]
push eax
push 0x6e
call sub_408c71
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_40a123
add esp 0xc
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x10 ]
call sub_40194b
pop edi
pop esi
leave
retn 0x10
sub_401c89
push ebp
mov ebp esp
mov eax 0x1000
call sub_4012c0
push esi
mov esi 0x400
push esi
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406cab
push esi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_406cab
lea eax [ ebp - 0x800 ]
push eax
push 0x75
call sub_408c71
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_40a123
add esp 0xc
pop esi
leave
retn 0x10
sub_401ce5
push ebp
mov ebp esp
mov eax 0x1000
call sub_4012c0
push esi
mov esi 0x400
push esi
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406cab
push esi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_406cab
lea eax [ ebp - 0x800 ]
push eax
push 0x74
call sub_408c71
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_40a123
add esp 0xc
pop esi
leave
retn 0x10
sub_401d8c
mov eax [ rw-data ]
mov ecx [ rw-data ]
xor ecx [ eax + 0x40 ]
xor edx edx
and ecx 0x1
xor [ eax + 0x40 ] ecx
mov cl [ rw-data ]
mov eax [ rw-data ]
and cl 0x8
cmp cl 0x8
sete dl
add edx edx
xor edx [ eax + 0x40 ]
and edx 0x2
xor [ eax + 0x40 ] edx
movzx ecx [ rw-data ]
mov eax [ rw-data ]
shl ecx 0x2
xor ecx [ eax + 0x40 ]
and ecx 0x4
xor [ eax + 0x40 ] ecx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ eax + 0x18 ] ecx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + 0x8 ] eax
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + 0xc ] eax
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + 0x14 ] eax
cmp [ rw-data ] 0x2
jne r-xdata
mov ax [ rw-data ]
cmp ax 0x2
jb r-xdata
cmp [ rw-data ] 0x2a
ja r-xdata
cmp ax 0x7
je r-xdata
cmp ax 0x5
jbe r-xdata
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
cmp ax 0x9
ja r-xdata
xor eax eax
retn
push rw-data
push 0x6c
call sub_408c71
push eax
push rw-data
call sub_40a123
add esp 0xc
call sub_40e444
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx ] eax
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + 0x4 ] eax
xor eax eax
inc eax
retn
sub_401e9a
push ecx
push ecx
or [ rw-data ] 0xffffffff
push ebx
push ebp
xor ebx ebx
xor ebp ebp
inc ebp
push esi
push edi
mov [ esp + 0x14 ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebp
cmp [ rw-data ] bl
jne r-xdata
mov edi rw-data
call sub_404cc5
mov edi rw-data
test eax eax
je r-xdata
mov esi rw-data
mov [ rw-data ] ebx
xor ebp ebp
mov edi 0x10000
add eax 0xfffffff8
cmp eax ebp
ja r-xdata
cmp [ rw-data ] bl
jne r-xdata
push ebp
push edi
call sub_4041aa
call sub_404cc5
test eax eax
je r-xdata
call sub_404759
jg r-xdata
push edi
push 0x6c
call sub_408c71
push eax
push rw-data
call sub_40a123
add esp 0xc
call sub_404414
cmp [ rw-data ] bl
jne r-xdata
xor eax eax
cmp cx 0x9
sete al
push eax
call sub_40645d
cmp eax ebx
je r-xdata
call sub_40449c
mov cx [ rw-data ]
movzx eax cx
cmp eax ebx
je r-xdata
mov esi [ rw-data ]
push ebx
push 0x800
push esi
push [ rw-data ]
call sub_401070
cmp edx [ rw-data ]
jg r-xdata
push edi
push ebx
push rw-data
push rw-data
mov ecx rw-data
call sub_401c1c
push 0x34
pop eax
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
mov eax ebp
jmp r-xdata
call sub_40e301
push edi
call sub_403fdd
cmp [ rw-data ] 0x0
mov cl [ rw-data ]
mov [ esp + 0x13 ] 0x0
je r-xdata
xor ecx ecx
cmp eax 0x3
sete cl
lea ecx [ ecx * 4 + 0x2 ]
mov [ esp + 0x14 ] ecx
jmp r-xdata
jl r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
xor ebp ebp
xor ebx ebx
inc ebp
mov edi rw-data
push 0x0
push eax
push esi
call sub_404970
mov ecx [ rw-data ]
mov [ ecx ] al
inc [ rw-data ]
inc [ rw-data ]
cmp [ rw-data ] edi
jne r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi rw-data
cmp eax ebx
je r-xdata
test cl cl
jne r-xdata
cmp esi ebx
jl r-xdata
cmp eax [ rw-data ]
jae r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
push [ rw-data ]
mov ecx [ rw-data ]
push [ rw-data ]
add ebp edi
adc ebx 0x0
call sub_403729
add eax [ rw-data ]
adc edx [ rw-data ]
push edx
push eax
push [ rw-data ]
push [ rw-data ]
push ebx
push ebp
call sub_40a180
call sub_4096b3
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ esp + 0x14 ] 0x6
jne r-xdata
cmp eax ebp
jle r-xdata
mov [ esp + 0x13 ] 0x1
mov ecx [ rw-data ]
push ebx
push [ rw-data ]
push [ rw-data ]
call sub_403c6d
mov ecx [ rw-data ]
call sub_4037b8
mov ecx [ rw-data ]
push ebx
push ebx
push ebx
call sub_403c6d
jmp r-xdata
jg r-xdata
push 0x0
push [ rw-data ]
push esi
call sub_404970
and [ rw-data ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx rw-data
call sub_40193c
mov [ esp + 0x14 ] ebp
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ rw-data ]
call sub_403ca3
cmp edx [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x5f5e100
jbe r-xdata
mov [ rw-data ] esi
mov eax [ rw-data ]
not eax
cmp eax [ rw-data ]
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push edi
push ebx
push esi
push rw-data
mov ecx rw-data
call sub_401ce5
mov [ esp + 0x14 ] 0x32
jmp r-xdata
test cl cl
jne r-xdata
jg r-xdata
cmp [ esp + 0x14 ] 0x1
push 0x2
pop ebp
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ esp + 0x13 ] 0x1
cmp eax [ rw-data ]
jbe r-xdata
mov eax [ rw-data ]
test [ eax + 0x40 ] 0x1
push edi
je r-xdata
cmp [ esp + 0x14 ] ebp
jne r-xdata
cmp [ esp + 0x14 ] ebx
je r-xdata
jmp r-xdata
push 0x71
push 0x70
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ rw-data ]
call sub_4037b8
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esp + 0x14 ] ebp
cmp [ rw-data ] 0x0
jne r-xdata
call sub_408c71
push eax
push esi
call sub_40a123
add esp 0xc
cmp [ esp + 0x13 ] 0x0
je r-xdata
call sub_40e301
mov [ esp + 0x13 ] 0x1
call sub_404414
mov eax [ esp + 0x14 ]
push edi
call sub_403fdd
sub_402255
push esi
mov esi [ esp + 0xc ]
cmp esi [ rw-data ]
jbe r-xdata
push esi
push [ esp + 0xc ]
push [ rw-data ]
call sub_408e73
add [ rw-data ] esi
sub [ rw-data ] esi
add [ rw-data ] esi
xor eax eax
push 0x32
pop eax
jmp r-xdata
pop esi
retn 0x8
sub_40228f
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x14
cmp eax 0x63
jl r-xdata
inc eax
push eax
push r--data
inc eax
push eax
push r--data
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_409345
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
call sub_407148
leave
retn 0x8
sub_4022c9
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x28
cmp eax 0x63
jl r-xdata
inc eax
push eax
push r--data
inc eax
push eax
push r--data
jmp r-xdata
lea eax [ ebp - 0x28 ]
push 0x14
push eax
call sub_40936c
add esp 0x10
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x8 ]
call sub_407187
leave
retn 0x8
sub_402305
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
push edi
mov esi ecx
test ebx ebx
je r-xdata
xor al al
test esi esi
jne r-xdata
cmp ebx 0x4
jae r-xdata
push esi
call sub_404c8d
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x2 ]
push eax
call sub_404c8d
movzx edi ax
lea eax [ ebx - 0x4 ]
cmp edi eax
ja r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0xa
jne r-xdata
push 0xfffffffc
pop eax
sub eax edi
lea esi [ esi + edi + 0x4 ]
add ebx eax
cmp edi 0x20
jb r-xdata
lea eax [ esi + 0x8 ]
push eax
call sub_404c8d
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0xa ]
push eax
call sub_404c8d
cmp [ ebp - 0x4 ] 0x1
movzx eax ax
jne r-xdata
cmp eax 0x18
je r-xdata
lea eax [ esi + 0xc ]
push eax
call sub_404ca0
mov edi [ ebp + 0x8 ]
mov [ edi ] eax
lea eax [ esi + 0x10 ]
push eax
call sub_404ca0
mov [ edi + 0x4 ] eax
lea eax [ esi + 0x14 ]
push eax
call sub_404ca0
mov edi [ ebp + 0xc ]
mov [ edi ] eax
lea eax [ esi + 0x18 ]
push eax
call sub_404ca0
mov [ edi + 0x4 ] eax
lea eax [ esi + 0x1c ]
push eax
call sub_404ca0
mov edi [ ebp + 0x10 ]
add esi 0x20
push esi
mov [ edi ] eax
call sub_404ca0
mov [ edi + 0x4 ] eax
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_4023d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
push edi
mov esi ecx
test ebx ebx
je r-xdata
xor al al
test esi esi
jne r-xdata
cmp ebx 0x4
jae r-xdata
push esi
call sub_404c8d
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x2 ]
push eax
call sub_404c8d
movzx edi ax
lea eax [ ebx - 0x4 ]
cmp edi eax
ja r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x7075
jne r-xdata
push 0xfffffffc
pop eax
sub eax edi
lea esi [ esi + edi + 0x4 ]
add ebx eax
cmp edi 0x5
jbe r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ esi + 0x5 ]
push eax
call sub_404ca0
cmp [ ebp + 0x8 ] eax
je r-xdata
lea eax [ edi - 0x5 ]
mov edi [ ebp + 0x10 ]
dec edi
cmp eax edi
jae r-xdata
push edi
add esi 0x9
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_40901c
mov [ edi + esi ] 0x0
mov al 0x1
jmp r-xdata
mov edi eax
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_40246a
push esi
push edi
mov edi [ esp + 0xc ]
mov eax edi
imul eax eax 0x48
push eax
mov esi ecx
call sub_408ced
mov [ esi ] eax
test eax eax
jne r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
pop edi
mov eax esi
pop esi
retn 0x4
test edi edi
je r-xdata
mov ecx rw-data
call sub_401a5b
sub_40249e
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
cmp ecx eax
jbe r-xdata
pop esi
retn 0x4
mov edx eax
shr edx 0x2
push edi
lea edi [ edx + eax + 0x20 ]
cmp ecx edi
jbe r-xdata
mov eax edi
imul eax eax 0x48
push eax
push [ esi ]
call sub_408d25
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi ecx
mov [ esi + 0x8 ] edi
pop edi
mov ecx rw-data
call sub_401a5b
sub_4024e7
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
cmp ecx eax
jbe r-xdata
pop esi
retn 0x4
mov edx eax
shr edx 0x2
push edi
lea edi [ edx + eax + 0x20 ]
cmp ecx edi
jbe r-xdata
mov eax edi
shl eax 0x3
push eax
push [ esi ]
call sub_408d25
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi ecx
mov [ esi + 0x8 ] edi
pop edi
mov ecx rw-data
call sub_401a5b
sub_40256d
push esi
mov esi ecx
xor ecx ecx
lea eax [ esi + 0xc30 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
lea ecx [ esi + 0xc44 ]
call sub_40cb59
lea ecx [ esi + 0xc68 ]
call sub_40cb59
lea ecx [ esi + 0xc8c ]
call sub_40cb59
lea ecx [ esi + 0xcb0 ]
call sub_40cb59
mov eax esi
pop esi
retn
sub_4025b0
push ebp
lea ebp [ esp - 0x78 ]
mov eax 0x273c
call sub_4012c0
or [ ebp + 0x44 ] 0xffffffff
push ebx
push esi
xor esi esi
push edi
push 0x40
lea ecx [ ebp + 0x20 ]
mov [ ebp + 0x38 ] esi
mov [ ebp + 0x70 ] esi
mov [ ebp + 0x48 ] esi
mov [ ebp + 0x4c ] esi
mov [ ebp + 0x5c ] esi
mov [ ebp + 0x60 ] esi
mov [ ebp + 0x50 ] esi
mov [ ebp + 0x54 ] esi
mov [ ebp + 0x3c ] esi
mov [ ebp + 0x64 ] esi
call sub_40246a
lea ecx [ ebp - 0x1dc ]
call sub_40c967
lea ecx [ ebp - 0x134 ]
mov [ ebp + 0x2c ] esi
mov [ ebp + 0x30 ] esi
mov [ ebp + 0x34 ] esi
call sub_40c967
mov eax [ ebp + 0x20 ]
mov [ rw-data ] eax
mov [ rw-data ] 0x1
mov edi 0x400
push edi
lea eax [ ebp - 0x9dc ]
push eax
lea ecx [ ebp - 0x134 ]
call sub_40ca0c
test al al
je r-xdata
and [ ebp + 0x58 ] 0x0
and [ ebp + 0x68 ] 0x0
mov ebx rw-data
xor ebx ebx
mov esi [ ebp + 0x2c ]
add esi 0x10
xor ebx ebx
cmp eax [ ebp + 0x24 ]
jl r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp + 0x70 ]
cmp [ ebp + 0x3c ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp - 0x8c ]
call sub_40cb5f
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x68 ]
push 0x4
add ecx eax
push esi
mov [ rw-data ] ecx
call sub_404680
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
inc eax
push eax
lea ecx [ ebp + 0x20 ]
call sub_402530
cmp [ rw-data ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp + 0xc ] eax
je r-xdata
test edi edi
jne r-xdata
cmp [ rw-data ] 0x49
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp + 0x54 ] ebx
jne r-xdata
mov [ ebp + 0x70 ] 0x33
jmp r-xdata
push 0x4
push rw-data
push esi
call sub_4090ae
test eax eax
jne r-xdata
and [ ebp + 0x68 ] 0x0
cmp [ ebp + 0x58 ] 0x0
jle r-xdata
and [ rw-data ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
cmp edi esi
jne r-xdata
cmp ebx 0x1
jg r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0xa0
call sub_408c71
push eax
push rw-data
call sub_40a123
mov ebx [ ebp + 0x70 ]
pop ecx
pop ecx
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x8c ]
push eax
lea eax [ ebp - 0x9dc ]
push eax
push ebx
call sub_40425f
push edi
lea eax [ ebp - 0x9dc ]
push eax
lea ecx [ ebp - 0x134 ]
add esi 0x18
call sub_40ca0c
test al al
jne r-xdata
cmp [ ebp + 0x60 ] ebx
jne r-xdata
lea eax [ ebp + 0x50 ]
push eax
lea ecx [ ebp - 0x68 ]
call sub_40cb5f
cmp [ ebp + 0x50 ] ebx
je r-xdata
mov [ ebp + 0x64 ] edi
mov ecx [ rw-data ]
mov eax ecx
xor eax [ ebp + 0x50 ]
mov edx 0xffff
and eax edx
xor ebx ebx
or eax ebx
je r-xdata
call sub_408387
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
push 0x0
push [ ebp ]
push [ ebp - 0x4 ]
call sub_403c6d
mov ecx [ rw-data ]
call sub_403729
push 0x2000
push [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] edx
call sub_404527
mov eax [ ebp - 0x8 ]
inc [ ebp + 0x38 ]
cmp [ ebp + 0x64 ] 0x0
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
mov [ rw-data ] eax
je r-xdata
mov eax [ ebp + 0x38 ]
shl eax 0x6
mov [ ebp + 0x40 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push r--data
push rw-data
call sub_407148
cmp [ ebp + 0x48 ] 0x0
jbe r-xdata
cmp ebx 0x1
jg r-xdata
xor ax ax
cmp ax [ ebp + 0x48 ]
sbb ebx ebx
and ebx 0x46
add ebx 0xb
jmp r-xdata
push 0x343
call sub_408c71
push eax
push rw-data
call sub_40a123
pop ecx
pop ecx
mov edi [ ebp + 0x44 ]
movzx esi [ ebp + 0x4c ]
inc edi
cmp edi esi
jne r-xdata
inc ebx
jmp r-xdata
mov eax [ esi - 0x10 ]
mov [ ebp + 0x18 ] eax
mov eax [ esi - 0xc ]
mov [ ebp + 0x1c ] eax
mov eax [ esi - 0x8 ]
mov [ ebp + 0x50 ] eax
mov eax [ esi - 0x4 ]
mov [ ebp + 0x54 ] eax
mov eax [ esi ]
mov [ ebp + 0x5c ] eax
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x8c ]
mov [ ebp + 0x60 ] eax
call sub_40cb59
lea ecx [ ebp - 0x68 ]
call sub_40cb59
lea ecx [ ebp - 0x44 ]
call sub_40cb59
cmp [ rw-data ] ebx
je r-xdata
jmp r-xdata
lea eax [ ebp + 0x5c ]
push eax
lea ecx [ ebp - 0x44 ]
call sub_40cb5f
cmp [ ebp + 0x5c ] ebx
je r-xdata
push r--data
lea eax [ ebp + 0x11 ]
push eax
mov [ ebp + 0x10 ] 0x50
call sub_408fe8
push 0x4
push rw-data
push esi
call sub_4090ae
test eax eax
je r-xdata
cmp ecx edx
jne r-xdata
mov [ ebp + 0x70 ] eax
jmp r-xdata
xor eax eax
mov [ rw-data ] ax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push rw-data
push 0x2
push eax
call sub_404a44
cmp eax esi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp + 0x68 ]
add eax ecx
imul ecx ecx 0x48
add ecx [ ebp + 0x20 ]
mov [ ebp + 0x44 ] eax
mov [ rw-data ] ecx
lea ecx [ ebp - 0x1dc ]
call sub_40c9e6
cmp [ rw-data ] 0x0
mov [ ebp + 0x4 ] eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push r--data
push rw-data
call sub_407187
cmp [ ebp + 0x4c ] 0x0
jbe r-xdata
cmp ebx 0x1
jg r-xdata
push 0x52
jmp r-xdata
lea ecx [ ebp - 0x124 ]
call sub_40146d
xor esi esi
cmp [ ebp - 0x134 ] esi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
and [ ebp + 0x3c ] ebx
jmp r-xdata
cmp [ rw-data ] bl
je r-xdata
push 0xa0
call sub_408c71
push eax
push rw-data
call sub_40a123
pop ecx
pop ecx
mov [ ebp + 0x70 ] 0x3
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
movzx eax [ rw-data ]
push esi
push esi
push 0x3
push eax
call sub_404a44
cmp eax esi
je r-xdata
cmp eax [ ebp + 0x70 ]
jle r-xdata
mov eax [ rw-data ]
mov edi [ eax ]
add edi [ rw-data ]
mov esi [ eax + 0x4 ]
adc esi [ rw-data ]
push 0x0
push 0x2000
push esi
push edi
call sub_401200
mov ebx eax
mov eax edi
sub eax ebx
mov ecx esi
sbb ecx edx
test esi esi
jg r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
and [ rw-data ] 0x0
call sub_4043b4
mov eax [ ecx ]
push edi
call [ eax ]
test ebx ebx
jne r-xdata
push 0x51
pop ebx
jmp r-xdata
cmp [ ebp + 0x2c ] esi
je r-xdata
push [ ebp - 0x134 ]
call sub_408d06
mov [ ebp + 0x3c ] edi
jmp r-xdata
push 0x4
lea eax [ ebp + 0x10 ]
push eax
push esi
call sub_4090ae
test eax eax
je r-xdata
movzx eax [ rw-data ]
push esi
push eax
push [ rw-data ]
call sub_407c4d
movzx eax [ rw-data ]
push rw-data
push eax
push [ rw-data ]
call sub_40cca3
movzx eax [ rw-data ]
push esi
push esi
push esi
push eax
call sub_404a44
cmp eax esi
je r-xdata
cmp eax [ ebp + 0x70 ]
jle r-xdata
cmp eax edi
jg r-xdata
mov [ ebp + 0x70 ] eax
cmp eax [ rw-data ]
jne r-xdata
jl r-xdata
movzx ecx [ rw-data ]
cmp eax ecx
jne r-xdata
inc ebx
lea ecx [ ebp - 0x1cc ]
call sub_40146d
cmp [ ebp - 0x1dc ] esi
je r-xdata
push [ ebp + 0x2c ]
call sub_408d06
mov eax [ rw-data ]
mov ecx [ rw-data ]
shr eax 0xb
and al 0x1
mov [ ebp + 0x6f ] al
push 0x1800
lea eax [ ebp - 0x26c4 ]
push eax
movzx eax [ rw-data ]
push [ rw-data ]
call sub_4023d8
test al al
je r-xdata
cmp eax [ ebp + 0x70 ]
jle r-xdata
cmp eax edi
jg r-xdata
mov [ ebp + 0x70 ] eax
push ebx
push 0x68
call sub_408c71
push eax
push rw-data
call sub_40a123
add esp 0xc
xor edi edi
push edi
push ecx
mov ecx [ rw-data ]
push eax
call sub_403c6d
mov ecx [ rw-data ]
call sub_403729
push 0x2000
push [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] edx
call sub_404527
cdq
cmp edx edi
mov [ rw-data ] eax
mov [ rw-data ] edx
jg r-xdata
cmp ecx [ rw-data ]
jne r-xdata
push 0xa0
call sub_408c71
push eax
push rw-data
call sub_40a123
cmp [ ebp + 0x44 ] 0x0
pop ecx
pop ecx
mov [ ebp + 0x70 ] 0x2
jne r-xdata
test edi edi
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] esi
je r-xdata
push [ ebp - 0x1dc ]
call sub_408d06
lea eax [ ebp - 0x20 ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
call [ DosDateTimeToFileTime@IAT ]
mov eax [ rw-data ]
add eax 0x28
push eax
lea eax [ ebp - 0x20 ]
push eax
call [ LocalFileTimeToFileTime@IAT ]
mov eax [ rw-data ]
push 0x8
push 0x0
add eax 0x30
push eax
call sub_408e46
mov eax [ rw-data ]
push 0x8
push 0x0
add eax 0x38
push eax
call sub_408e46
mov eax [ rw-data ]
lea ecx [ eax + 0x38 ]
push ecx
lea ecx [ eax + 0x30 ]
push ecx
mov ecx [ rw-data ]
add eax 0x28
push eax
movzx eax [ rw-data ]
call sub_402305
movzx esi [ rw-data ]
mov eax [ rw-data ]
mov edi eax
test esi esi
je r-xdata
mov edi 0x400
push edi
push ebx
lea eax [ ebp - 0x26c4 ]
push eax
call sub_40d18e
push edi
push esi
push ebx
call sub_406ab3
mov [ ebp + 0x6f ] 0x1
cmp eax edi
jg r-xdata
mov [ ebp + 0x70 ] eax
mov eax [ rw-data ]
add eax ebx
mov [ rw-data ] eax
mov eax ebx
cdq
sub [ rw-data ] eax
sbb [ rw-data ] edx
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp + 0x70 ] 0x3
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx eax
or edx ecx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push eax
push rw-data
call sub_40228f
cmp [ rw-data ] 0x0
je r-xdata
push r--data
push rw-data
call sub_407148
mov eax ebx
push [ ebp + 0x20 ]
call sub_408d06
mov [ ebp + 0x77 ] 0x0
jmp r-xdata
test eax eax
jne r-xdata
push 0xa0
push 0x4
push rw-data
push ebx
call sub_4090ae
mov esi 0xa0
test eax eax
je r-xdata
cmp eax edi
jbe r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
sub eax ebx
sub eax ecx
cdq
add [ rw-data ] eax
adc [ rw-data ] edx
add ebx ecx
mov [ rw-data ] ebx
xor edi edi
jmp r-xdata
inc [ ebp + 0x68 ]
mov eax [ ebp + 0x68 ]
cmp eax [ ebp + 0x58 ]
jl r-xdata
mov [ ebp + 0x60 ] ecx
xor ecx ecx
push ecx
mov [ ebp + 0x5c ] eax
mov eax [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] ecx
mov esi [ eax + 0x4 ]
mov edi [ eax ]
push 0x2000
push esi
push edi
call sub_401200
mov ebx eax
mov eax edi
sub eax ebx
mov ecx esi
sbb ecx edx
test esi esi
jg r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ rw-data ] eax
test ecx ecx
je r-xdata
mov eax [ rw-data ]
push [ eax + 0x20 ]
push rw-data
call sub_4022c9
push r--data
push rw-data
call sub_407187
jmp r-xdata
lea ecx [ ebp - 0xec4 ]
call sub_40256d
push 0xce8
xor edi edi
push edi
lea eax [ ebp - 0xec4 ]
push eax
call sub_408e46
mov esi 0x400
push esi
push ebx
lea eax [ ebp - 0xa94 ]
push eax
call sub_40c658
push esi
lea eax [ ebp - 0xe94 ]
push eax
lea eax [ ebp - 0xa94 ]
push eax
call sub_406cfe
mov eax [ rw-data ]
add eax 0x28
push eax
lea ecx [ ebp - 0x280 ]
call sub_40cb5f
mov eax [ rw-data ]
mov [ ebp - 0x1e4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1e0 ] eax
mov eax 0x200
or [ ebp - 0xebc ] ax
cmp [ ebp + 0x77 ] 0x0
jne r-xdata
cmp esi 0x4
jae r-xdata
call sub_407dce
mov ebx eax
cmp ebx edi
je r-xdata
push esi
call sub_408c71
push eax
push rw-data
call sub_40a123
mov eax [ rw-data ]
pop ecx
pop ecx
mov ecx [ rw-data ]
mov [ ebp + 0x70 ] 0x2
cmp [ ebp + 0x44 ] edi
jne r-xdata
push 0x4
mov ebx rw-data
push ebx
call sub_404680
test eax eax
je r-xdata
mov eax [ ebp + 0x40 ]
jl r-xdata
and [ rw-data ] 0x0
call sub_4043b4
mov eax [ ecx ]
push 0x1
call [ eax ]
add [ ebp + 0x50 ] 0x1
lea ecx [ ebp - 0x294 ]
adc [ ebp + 0x54 ] edi
call sub_40146d
jmp r-xdata
push 0x5
push edi
lea eax [ ebp - 0xec4 ]
push eax
mov ecx rw-data
call sub_4014e3
test eax eax
je r-xdata
push edi
call sub_404c8d
movzx eax ax
mov [ ebp + 0x40 ] eax
lea eax [ edi + 0x2 ]
push eax
call sub_404c8d
movzx eax ax
lea ecx [ esi - 0x4 ]
cmp eax ecx
ja r-xdata
jmp r-xdata
xor eax eax
push edi
mov [ rw-data ] ax
movzx eax [ rw-data ]
push rw-data
push 0x2
push eax
call sub_404a44
cmp eax edi
je r-xdata
push esi
call sub_408c71
push eax
push rw-data
call sub_40a123
pop ecx
pop ecx
mov [ ebp + 0x70 ] ebx
jmp r-xdata
or eax ecx
jne r-xdata
mov edx eax
or edx ecx
jne r-xdata
test edi edi
jae r-xdata
mov eax [ ebp + 0x58 ]
xor edi edi
inc edi
cmp eax 0x40
mov esi rw-data
jl r-xdata
call sub_401d8c
test eax eax
je r-xdata
cmp [ ebp + 0x40 ] 0x17
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
cmp eax [ ebp + 0x70 ]
jle r-xdata
mov eax [ ebp + 0x5c ]
or eax [ ebp + 0x60 ]
je r-xdata
mov [ ebp + 0x5c ] eax
mov [ ebp + 0x60 ] ecx
mov [ rw-data ] edi
mov [ rw-data ] edi
jmp r-xdata
inc [ ebp + 0x48 ]
cmp [ ebp + 0x6f ] 0x0
mov eax ebx
jne r-xdata
push ebx
push 0xb0
mov [ ebp + 0x77 ] 0x1
call sub_408c71
push eax
push rw-data
call sub_40a123
add esp 0xc
push 0xfffffffc
pop ecx
sub ecx eax
lea edi [ edi + eax + 0x4 ]
add esi ecx
movzx eax [ rw-data ]
push edi
push edi
push 0x3
push eax
call sub_404a44
cmp eax edi
je r-xdata
push eax
call sub_408d06
mov [ rw-data ] edi
cmp eax 0x1
jle r-xdata
mov [ ebp + 0x70 ] eax
mov eax [ ebp + 0x5c ]
mov [ rw-data ] eax
mov eax [ ebp + 0x60 ]
mov [ rw-data ] eax
xor edi edi
mov ebx rw-data
mov eax [ rw-data ]
push [ eax + 0x4 ]
push [ eax ]
call sub_40487a
test eax eax
jne r-xdata
push eax
lea ecx [ ebp - 0x1dc ]
call sub_40c994
inc [ ebp + 0x58 ]
add [ ebp + 0x68 ] 0x48
jmp r-xdata
mov eax r--data
movzx eax [ rw-data ]
push 0x1
push eax
push [ rw-data ]
call sub_407c4d
mov ecx [ rw-data ]
push 0x1800
lea eax [ ebp - 0x26c4 ]
push eax
movzx eax [ rw-data ]
push [ rw-data ]
call sub_4023d8
mov ebx 0x400
mov esi rw-data
test al al
je r-xdata
cmp eax [ ebp + 0x70 ]
jle r-xdata
push rw-data
push 0x68
push esi
jmp r-xdata
push 0x4
push ebx
call sub_404680
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x28 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x2c ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x30 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x34 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x38 ]
mov [ rw-data ] ecx
mov eax [ eax + 0x3c ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ rw-data ]
call sub_402305
test al al
je r-xdata
push ebx
push esi
lea eax [ ebp - 0x26c4 ]
push eax
call sub_40d18e
push ebx
push edi
push esi
call sub_406ab3
cmp eax 0x1
jg r-xdata
mov [ ebp + 0x70 ] eax
call sub_408c71
push eax
push rw-data
call sub_40a123
pop ecx
pop ecx
push 0x4
push rw-data
push ebx
call sub_4090ae
test eax eax
je r-xdata
movzx eax [ rw-data ]
push rw-data
push eax
push [ rw-data ]
call sub_40cca3
mov eax [ ebp + 0x4 ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x18 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x14 ]
mov [ rw-data ] eax
mov eax [ ebp + 0x18 ]
mov [ rw-data ] eax
mov eax [ ebp + 0x1c ]
mov [ rw-data ] eax
push esi
call sub_406a1f
cmp [ eax ] 0x5c
sete [ ebp + 0x77 ]
cmp [ ebp + 0x77 ] 0x0
je r-xdata
cmp [ eax ] di
je r-xdata
cmp [ rw-data ] di
je r-xdata
xor ecx ecx
mov [ eax ] cx
push ebx
push eax
push esi
call sub_40c658
push esi
push esi
call sub_406eee
mov eax [ rw-data ]
test [ eax + 0x24 ] 0x10
je r-xdata
cmp [ rw-data ] di
je r-xdata
cmp [ rw-data ] 0x49
push edi
sete al
movzx eax al
push eax
movzx eax [ rw-data ]
push eax
push esi
push edi
call sub_409c12
test al al
je r-xdata
mov ecx [ eax + 0x10 ]
or ecx [ eax + 0x14 ]
jne r-xdata
mov eax rw-data
cmp [ rw-data ] di
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ eax + 0x1c ]
cmp eax edi
je r-xdata
cmp [ eax ] 0x3a
jne r-xdata
mov eax [ rw-data ]
test [ eax + 0x40 ] 0x1
je r-xdata
xor ebx ebx
cmp [ ebp + 0x77 ] bl
jne r-xdata
mov [ ebp + 0x77 ] 0x1
cmp eax 0xb
jne r-xdata
inc eax
inc eax
cmp [ eax ] di
jne r-xdata
push 0x5f
pop ecx
mov [ eax ] cx
mov [ rw-data ] edi
call sub_401e9a
cmp eax edi
je r-xdata
call sub_40d11e
cmp eax edi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
call sub_4049cd
cmp eax 0xffffffff
je r-xdata
cmp eax [ ebp + 0x70 ]
jle r-xdata
cmp eax 0x9
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp eax edi
je r-xdata
cmp [ rw-data ] 0x1
jg r-xdata
mov [ ebp + 0x70 ] eax
push edi
call sub_409bd0
pop ecx
jmp r-xdata
cmp eax 0x1
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
cmp eax 0x1
jne r-xdata
lea ecx [ ebp - 0x124 ]
call sub_40146d
xor esi esi
cmp [ ebp - 0x134 ] esi
je r-xdata
cmp eax [ ebp + 0x70 ]
jle r-xdata
cmp [ rw-data ] edi
jne r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x1c ]
xor ebx ebx
xor edi edi
cmp ecx ebx
je r-xdata
xor edi edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
cmp [ ebp + 0x2c ] esi
je r-xdata
push [ ebp - 0x134 ]
call sub_408d06
push esi
push 0x73
jmp r-xdata
mov [ ebp + 0x70 ] eax
inc [ ebp + 0x4c ]
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
mov edi [ eax + 0x24 ]
cmp ecx 0xb
jne r-xdata
mov esi rw-data
push esi
lea eax [ ebp - 0x9dc ]
push eax
call sub_409153
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
push edi
shl eax 0x10
add eax ecx
push eax
push [ rw-data ]
lea eax [ ebp - 0x9dc ]
push [ rw-data ]
push eax
push edi
call sub_40aa8c
cmp al 0x43
je r-xdata
cmp eax 0x3
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea ecx [ ebp - 0x1cc ]
call sub_40146d
cmp [ ebp - 0x1dc ] esi
je r-xdata
push [ ebp + 0x2c ]
call sub_408d06
call sub_408c71
push eax
push rw-data
call sub_40a123
add esp 0xc
jmp r-xdata
push esi
push 0x73
call sub_408c71
push eax
push rw-data
call sub_40a123
add esp 0xc
push edi
call sub_409bd0
pop ecx
jmp r-xdata
push esi
lea ecx [ ebp - 0x134 ]
call sub_40c994
push [ rw-data ]
lea ecx [ ebp + 0x2c ]
push [ rw-data ]
call sub_40254a
push [ rw-data ]
lea ecx [ ebp + 0x2c ]
push [ rw-data ]
call sub_40254a
push [ rw-data ]
lea ecx [ ebp + 0x2c ]
push [ rw-data ]
call sub_40254a
jmp r-xdata
cmp [ rw-data ] al
push edi
sete al
movzx eax al
push eax
push esi
push ebx
call sub_40413e
test eax eax
je r-xdata
mov esi rw-data
push esi
call sub_403f10
test al al
jne r-xdata
cmp al 0x41
je r-xdata
mov esi rw-data
test ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] esi
je r-xdata
push [ ebp - 0x1dc ]
call sub_408d06
push 0x1
push esi
call sub_4041aa
cmp [ rw-data ] 0x0
push edi
sete al
movzx eax al
push eax
push esi
push ebx
call sub_40413e
test eax eax
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp al 0x4e
je r-xdata
je r-xdata
mov eax [ ebp + 0x70 ]
jmp r-xdata
push [ ebp + 0x20 ]
call sub_408d06
push esi
push 0x6f
call sub_408c71
push eax
push rw-data
call sub_40a123
add esp 0xc
push esi
mov esi rw-data
push ebx
mov ecx esi
call sub_40194b
mov ecx esi
call sub_401a46
jmp r-xdata
cmp al 0x52
je r-xdata
pop edi
pop esi
pop ebx
add ebp 0x78
leave
retn
lea eax [ ebp - 0x9dc ]
push eax
mov esi rw-data
push esi
call sub_409153
xor ebx ebx
inc ebx
xor edi edi
jmp r-xdata
cmp al 0x59
je r-xdata
cmp al 0x72
je r-xdata
cmp al 0x79
je r-xdata
xor edi edi
jmp r-xdata
sub_403602
mov eax ecx
or [ eax + 0x4 ] 0xffffffff
xor ecx ecx
xor edx edx
mov [ eax ] r--data
mov [ eax + 0x1d ] cl
mov [ eax + 0x41e ] dx
mov [ eax + 0x12 ] cl
mov [ eax + 0x8 ] cl
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] cl
mov [ eax + 0x11 ] cl
mov [ eax + 0xc20 ] ecx
mov [ eax + 0x1c ] cl
mov [ eax + 0x13 ] 0x1
mov [ eax + 0xc24 ] ecx
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x15 ] cl
mov [ eax + 0x18 ] 0x100
retn
sub_403674
push ebx
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
mov bl 0x1
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
and [ esi + 0xc ] 0x0
jmp r-xdata
inc [ esi + 0xc24 ]
pop esi
mov al bl
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xffffffff
test bl bl
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov ebx eax
dec ebx
neg ebx
sbb bl bl
inc bl
jne r-xdata
cmp [ esi + 0x14 ] bl
je r-xdata
xor eax eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ esi + 0x41e ]
push eax
lea eax [ esi + 0x1d ]
push eax
mov ecx rw-data
call sub_401a6e
and [ eax * 4 + rw-data ] 0x0
inc eax
cmp eax 0x100
jb r-xdata
cmp [ eax * 4 + rw-data ] esi
je r-xdata
jmp r-xdata
sub_4036f9
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0xffffffff
je r-xdata
xor al al
pop esi
retn
cmp [ esi + 0x13 ] 0x0
je r-xdata
call sub_403674
lea eax [ esi + 0x41e ]
push eax
add esi 0x1d
push esi
call sub_403ffc
pop esi
retn
sub_403729
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
or edx 0xffffffff
xor ebx ebx
cmp [ esi + 0x4 ] edx
jne r-xdata
push edi
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push ebx
push [ esi + 0x4 ]
mov [ ebp - 0x4 ] ebx
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
cmp [ esi + 0x14 ] bl
je r-xdata
mov eax [ ebp - 0x4 ]
push 0x1
cdq
push ebx
push edx
push eax
call sub_401030
xor ecx ecx
add eax edi
adc edx ecx
call [ GetLastError@IAT ]
test eax eax
je r-xdata
mov eax edx
jmp r-xdata
lea eax [ esi + 0x41e ]
push eax
lea eax [ esi + 0x1d ]
push eax
mov ecx rw-data
call sub_401b4e
cmp [ esi + 0x14 ] bl
je r-xdata
pop esi
pop ebx
leave
retn
or edx 0xffffffff
mov eax edx
jmp r-xdata
lea eax [ esi + 0x41e ]
push eax
add esi 0x1d
push esi
mov ecx rw-data
call sub_401b4e
pop edi
sub_4037c8
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ GetFileType@IAT ]
cmp eax 0x2
je r-xdata
xor al al
retn
xor eax eax
inc eax
retn
cmp eax 0x3
je r-xdata
xor eax eax
retn
sub_40380e
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov [ esi + 0xc20 ] ebx
cmp [ esi + 0x1c ] bl
jne r-xdata
mov al 0x1
test [ ebp + 0x10 ] 0x4
jne r-xdata
mov [ ebp + 0x10 ] 0x1
cmp al bl
je r-xdata
or edi 0x40000000
xor al al
jmp r-xdata
xor eax eax
cmp [ esi + 0x15 ] bl
setne al
dec eax
and eax 0x8000000
mov [ ebp - 0x4 ] eax
call sub_406603
test eax eax
je r-xdata
mov [ ebp + 0x10 ] 0x3
mov ecx [ ebp + 0x10 ]
shr ecx 0x1
and cl 0x1
movzx edi cl
neg edi
sbb edi edi
and edi 0xc0000000
add edi 0x80000000
test [ ebp + 0x10 ] 0x1
je r-xdata
push ebx
push [ ebp - 0x4 ]
push 0x3
push ebx
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
cmp edi 0xffffffff
setne [ ebp + 0x13 ]
mov [ esi + 0x12 ] bl
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
cmp [ ebp + 0x13 ] bl
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
jne r-xdata
cmp [ eax ] bx
je r-xdata
mov al [ ebp + 0x13 ]
pop edi
pop esi
pop ebx
leave
retn 0xc
mov [ esi + 0x4 ] edi
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
mov [ esi + 0xc20 ] 0x1
push ebx
push [ ebp - 0x4 ]
push 0x3
push ebx
push [ ebp + 0x10 ]
push edi
push eax
call [ CreateFileW@IAT ]
jmp r-xdata
xor eax eax
mov [ esi + 0x41e ] ax
push edi
call sub_409129
lea eax [ eax + eax + 0x2 ]
push eax
push edi
lea eax [ esi + 0x41e ]
push eax
call sub_408eaa
jmp r-xdata
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0x1000000
lea eax [ esi + 0x1d ]
push eax
push edi
call sub_40d131
push [ ebp + 0x8 ]
call sub_408ef5
inc eax
push eax
push [ ebp + 0x8 ]
lea eax [ esi + 0x1d ]
push eax
call sub_408eaa
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
push [ esi + 0x4 ]
mov ecx esi
call sub_40364d
sub_403955
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x10 ]
mov eax ecx
shr eax 0x1
and al 0x1
xor ebx ebx
test cl 0x8
jne r-xdata
mov dl 0x1
cmp [ esi + 0x1c ] bl
jne r-xdata
push ebx
push ebx
push 0x2
push ebx
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
xor dl dl
jmp r-xdata
xor eax eax
mov [ esi + 0x41e ] ax
push [ ebp + 0xc ]
lea eax [ esi + 0x41e ]
push eax
call sub_409153
jmp r-xdata
cmp [ eax ] bx
je r-xdata
mov [ esi + 0x18 ] ecx
xor ecx ecx
cmp al bl
sete cl
xor eax eax
push edi
dec ecx
and ecx 0x80000000
add ecx 0xc0000000
cmp dl bl
setne al
mov edi ecx
mov [ ebp + 0x10 ] eax
call sub_406603
test eax eax
je r-xdata
push 0x1000000
push eax
push [ ebp + 0xc ]
call sub_40d131
push [ ebp + 0x8 ]
push eax
call sub_408fe8
jmp r-xdata
lea eax [ esi + 0x1d ]
cmp [ ebp + 0x8 ] ebx
je r-xdata
push ebx
push ebx
push 0x2
push ebx
push [ ebp + 0x10 ]
push edi
push eax
call [ CreateFileW@IAT ]
jmp r-xdata
push [ esi + 0x4 ]
mov ecx esi
call sub_40364d
xor eax eax
cmp [ esi + 0x4 ] 0xffffffff
pop esi
setne al
pop ebx
pop ebp
retn 0xc
mov [ esi + 0x4 ] eax
mov [ esi + 0x12 ] 0x1
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
sub_403a3b
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
cmp [ edi + 0xc ] 0x1
mov esi 0x4e20
jne r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ edi + 0x4 ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ecx edi
call sub_4037c8
test al al
je r-xdata
push 0xfffffff6
call [ GetStdHandle@IAT ]
mov [ edi + 0x4 ] eax
mov [ ebp + 0xc ] esi
cmp [ edi + 0xc ] 0x1
jne r-xdata
cmp [ ebp + 0xc ] esi
jbe r-xdata
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x6d
jne r-xdata
push esi
push [ ebp + 0x8 ]
mov ecx edi
call sub_403a3b
jmp r-xdata
pop edi
pop esi
leave
retn 0x8
xor eax eax
jmp r-xdata
sub_403aba
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0xffffffff
je r-xdata
mov al 0x1
push esi
mov esi [ ebp + 0xc ]
test esi esi
jg r-xdata
push [ ebp + 0x10 ]
mov eax esi
sar eax 0x1f
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
push [ edi + 0x4 ]
call [ SetFilePointer@IAT ]
pop esi
cmp eax 0xffffffff
jne r-xdata
jl r-xdata
call [ GetLastError@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jae r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
pop edi
leave
retn 0xc
call sub_403ca3
call sub_403729
jmp r-xdata
add [ ebp + 0x8 ] eax
adc esi edx
and [ ebp + 0x10 ] 0x0
sub_403b2e
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ecx + 0x18 ]
mov [ ebp - 0x4 ] ecx
cmp eax 0x100
je r-xdata
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp ecx eax
je r-xdata
test al 0x2
jne r-xdata
mov [ ebp + 0xb ] al
mov [ ebp + 0xb ] 0x1
cmp [ ecx ] eax
jne r-xdata
push [ ecx + 0x4 ]
call [ FlushFileBuffers@IAT ]
mov [ ebp + 0xf ] al
mov [ ebp + 0xf ] 0x1
cmp [ edi ] eax
jne r-xdata
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
cmp edi eax
je r-xdata
xor bl bl
cmp [ esi ] eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_40ca52
mov bl 0x1
jmp r-xdata
test bl bl
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
call sub_40ca52
cmp [ ebp + 0xb ] al
je r-xdata
movzx eax [ ebp + 0xb ]
neg eax
sbb eax eax
lea ecx [ ebp - 0xc ]
and eax ecx
push eax
movzx eax bl
neg eax
sbb eax eax
lea ecx [ ebp - 0x14 ]
and eax ecx
push eax
movzx eax [ ebp + 0xf ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x1c ]
and eax ecx
push eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x4 ]
call [ SetFileTime@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0xc
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_40ca52
sub_403bf2
push ebp
mov ebp esp
push ecx
inc [ rw-data ]
push esi
mov [ ebp - 0x1 ] 0x1
xor esi esi
add esi 0x4
cmp esi 0x400
jb r-xdata
mov [ eax + 0x14 ] 0x0
mov ecx [ esi + rw-data ]
cmp [ ecx + 0x12 ] 0x0
je r-xdata
mov eax [ esi + rw-data ]
test eax eax
je r-xdata
dec [ rw-data ]
mov al [ ebp - 0x1 ]
pop esi
leave
retn
call sub_403674
call sub_4036f9
jmp r-xdata
mov [ ebp - 0x1 ] 0x0
and [ esi + rw-data ] 0x0
jmp r-xdata
test al al
je r-xdata
sub_403c6d
push esi
push [ esp + 0x10 ]
mov esi ecx
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_403aba
test al al
jne r-xdata
pop esi
retn 0xc
cmp [ esi + 0x14 ] al
je r-xdata
lea eax [ esi + 0x41e ]
push eax
add esi 0x1d
push esi
mov ecx rw-data
call sub_401b4e
sub_403ca3
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi ecx
push edi
push esi
lea ecx [ ebp - 0x18 ]
call sub_40949b
push 0x2
push 0x0
push 0x0
mov ecx esi
call sub_403c6d
mov ecx esi
call sub_403729
lea ecx [ ebp - 0x18 ]
mov esi eax
mov edi edx
call sub_4094c2
mov edx edi
pop edi
mov eax esi
pop esi
leave
retn
sub_403cde
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
push esi
mov esi ecx
je r-xdata
pop esi
leave
retn 0x8
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push ebx
mov ebx [ WriteFile@IAT ]
push edi
dec eax
je r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call ebx
dec eax
neg eax
sbb al al
inc al
cmp [ ebp + 0xc ] edi
jbe r-xdata
push 0xfffffff5
dec eax
jne r-xdata
pop edi
mov [ esi + 0x8 ] 0x1
pop ebx
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
sub ecx edi
mov eax 0x4000
cmp ecx eax
jae r-xdata
push 0xfffffff4
jmp r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push eax
mov eax [ ebp + 0x8 ]
add eax edi
push eax
push [ esi + 0x4 ]
call ebx
dec eax
neg eax
sbb al al
inc al
je r-xdata
mov eax ecx
call [ GetStdHandle@IAT ]
mov [ esi + 0x4 ] eax
push 0x0
lea eax [ esi + 0x41e ]
push eax
lea eax [ esi + 0x1d ]
mov edi rw-data
push eax
mov ecx edi
call sub_401ac1
test al al
je r-xdata
add edi 0x4000
cmp edi [ ebp + 0xc ]
jb r-xdata
lea eax [ esi + 0x41e ]
push eax
lea eax [ esi + 0x1d ]
push eax
push 0x0
push 0x0
mov ecx edi
call sub_401d67
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
jmp r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
cmp [ esi + 0xc ] edi
je r-xdata
test eax eax
jbe r-xdata
test al al
jne r-xdata
push 0x0
mov ecx esi
call sub_403729
mov ecx [ ebp - 0x4 ]
xor edi edi
sub eax ecx
sbb edx edi
push edx
push eax
mov ecx esi
call sub_403c6d
jmp r-xdata
sub_403df3
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
xor ebx ebx
mov esi ecx
push edi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
cmp [ esi + 0x11 ] bl
je r-xdata
mov edi rw-data
call sub_403729
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov [ esi + 0xc20 ] 0x2
cmp [ esi + 0x14 ] bl
je r-xdata
cmp [ esi + 0x11 ] bl
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov edi 0x200
lea eax [ esi + 0x41e ]
push eax
add esi 0x1d
push esi
mov ecx edi
call sub_401d46
lea eax [ esi + 0x41e ]
push eax
lea eax [ esi + 0x1d ]
push eax
mov ecx edi
call sub_401937
test al al
jne r-xdata
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_403a3b
cmp eax 0xffffffff
jne r-xdata
mov eax edi
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_403a3b
mov [ ebp - 0x4 ] eax
cmp eax 0xffffffff
jne r-xdata
add [ ebp - 0x4 ] eax
add ebx edi
cmp ebx [ ebp + 0xc ]
jb r-xdata
mov eax edi
xor ecx ecx
mov eax ebx
add eax [ ebp - 0xc ]
push 0x0
adc ecx [ ebp - 0x8 ]
push ecx
push eax
mov ecx esi
call sub_403c6d
mov eax [ ebp + 0xc ]
sub eax ebx
cmp eax edi
jb r-xdata
jmp r-xdata
sub_403ec6
call sub_406603
test eax eax
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
push [ esp + 0x4 ]
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp [ eax ] 0x0
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push eax
call [ GetFileAttributesW@IAT ]
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov al cl
jmp r-xdata
retn 0x8
sub_403f6c
call sub_406603
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ GetFileAttributesA@IAT ]
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push eax
call [ GetFileAttributesW@IAT ]
jmp r-xdata
retn 0x8
sub_403f99
push ebp
mov ebp esp
call sub_406603
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
xor al al
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call [ SetFileAttributesA@IAT ]
cmp [ eax ] 0x0
je r-xdata
pop ebp
retn 0xc
push [ ebp + 0x10 ]
push eax
call [ SetFileAttributesW@IAT ]
jmp r-xdata
test eax eax
setne al
jmp r-xdata
sub_403ffc
call sub_406603
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ DeleteFileA@IAT ]
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push eax
call [ DeleteFileW@IAT ]
jmp r-xdata
test eax eax
setne al
retn 0x8
sub_40402e
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov al [ esi ]
xor ebx ebx
push edi
cmp al 0x72
jne r-xdata
xor ecx ecx
cmp [ esi + 0x1 ] 0x2b
mov [ ebp + 0x10 ] 0x1
setne cl
dec ecx
and ecx 0x80000000
add ecx 0x40000000
mov edi ecx
xor ecx ecx
cmp al 0x61
sete cl
lea ecx [ ecx + ecx + 0x2 ]
mov [ ebp + 0x14 ] ecx
xor eax eax
cmp [ esi + 0x1 ] 0x2b
setne al
dec eax
and eax 0x40000000
add eax 0x80000000
mov edi eax
xor eax eax
cmp [ ebp + 0x14 ] bl
mov [ ebp + 0x14 ] 0x3
setne al
lea eax [ eax + eax + 0x1 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
call sub_406603
test eax eax
je r-xdata
push ebx
push 0x8000000
push [ ebp + 0x14 ]
push ebx
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
xor eax eax
jmp r-xdata
cmp [ eax ] bx
je r-xdata
cmp [ esi ] 0x61
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
push ebx
push 0x8000000
push [ ebp + 0x14 ]
push ebx
push [ ebp + 0x10 ]
push edi
push eax
call [ CreateFileW@IAT ]
jmp r-xdata
push 0x4
call sub_408ced
mov [ eax ] edi
push 0x2
push ebx
push ebx
push edi
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
sub_40413e
push ebp
mov ebp esp
push ebx
push esi
call sub_406603
mov esi [ ebp + 0xc ]
xor ebx ebx
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
cmp esi ebx
je r-xdata
push 0x2
pop eax
push ebx
push [ ebp + 0x8 ]
call [ CreateDirectoryA@IAT ]
cmp [ esi ] bx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
cmp [ ebp + 0x10 ] bl
je r-xdata
push ebx
push esi
call [ CreateDirectoryW@IAT ]
jmp r-xdata
cmp eax 0x3
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x14 ]
push esi
push [ ebp + 0x8 ]
call sub_403f99
cmp eax ebx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
sub_4041aa
push ebp
mov ebp esp
sub esp 0x800
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor al al
cmp [ esi ] bx
je r-xdata
mov [ ebp + 0xb ] 0x1
push edi
cmp [ ebp + 0xc ] 0x0
pop edi
jne r-xdata
movzx eax [ ebx + esi ]
push eax
call sub_406a75
test al al
je r-xdata
mov al [ ebp + 0xb ]
jmp r-xdata
push esi
call sub_406a1f
movzx eax [ eax ]
push eax
call sub_406a75
test al al
jne r-xdata
inc ebx
inc ebx
cmp [ ebx + esi ] 0x0
jne r-xdata
push edi
push esi
lea eax [ ebp - 0x800 ]
push eax
call sub_409183
xor eax eax
push eax
mov [ ebp + edi * 2 - 0x800 ] ax
push 0x1
lea eax [ ebp - 0x800 ]
push eax
push 0x0
call sub_40413e
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn 0x8
push 0x0
push 0x1
push esi
push 0x0
call sub_40413e
test eax eax
je r-xdata
mov edi ebx
sar edi 0x1
cmp edi 0x400
jge r-xdata
mov [ ebp + 0xb ] 0x0
mov [ ebp + 0xb ] 0x0
sub_40425f
push ebp
mov ebp esp
sub esp 0x820
call sub_406603
test eax eax
je r-xdata
leave
retn 0x14
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x2 ] 0x1
cmp [ eax ] ebx
jne r-xdata
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x3 ] 0x1
cmp [ eax ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x1 ] 0x1
cmp [ eax ] ebx
jne r-xdata
mov eax [ ebp + 0x18 ]
cmp eax ebx
je r-xdata
mov [ ebp + 0xf ] bl
jmp r-xdata
test al 0x1
je r-xdata
push edi
mov edi [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_403f6c
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
push esi
push 0x400
lea eax [ ebp - 0x820 ]
push eax
push edi
push [ ebp + 0x8 ]
call sub_406cab
push ebx
push 0x2000000
push 0x3
push ebx
push 0x3
push 0x40000000
lea eax [ ebp - 0x820 ]
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push ebx
push edi
push [ ebp + 0x8 ]
mov [ ebp + 0xf ] 0x1
call sub_403f99
pop esi
pop edi
pop ebx
cmp [ ebp - 0x2 ] bl
je r-xdata
cmp [ ebp - 0x3 ] bl
je r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_40ca52
cmp [ ebp - 0x1 ] bl
je r-xdata
mov ecx [ ebp + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40ca52
movzx eax [ ebp - 0x2 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x20 ]
and eax ecx
push eax
movzx eax [ ebp - 0x1 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x10 ]
and eax ecx
push eax
movzx eax [ ebp - 0x3 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x18 ]
and eax ecx
push eax
push esi
call [ SetFileTime@IAT ]
push esi
call [ CloseHandle@IAT ]
cmp [ ebp + 0xf ] bl
je r-xdata
mov ecx [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40ca52
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x8 ]
call sub_403f99
sub_4043b4
push 0xc28
call sub_4093a0
pop ecx
test eax eax
je r-xdata
xor ecx ecx
mov ecx eax
call sub_403602
mov ecx eax
jmp r-xdata
xor eax eax
push edi
push esi
push edi
push esi
mov ecx rw-data
call sub_401bc0
xor eax eax
inc eax
jmp r-xdata
movzx eax [ rw-data ]
push esi
neg eax
push edi
sbb eax eax
and eax 0x4
push eax
mov edi rw-data
push edi
mov esi rw-data
push esi
mov [ rw-data ] ecx
call sub_40380e
test al al
jne r-xdata
pop edi
pop esi
retn
sub_404414
mov eax [ rw-data ]
mov edx [ rw-data ]
test eax eax
jl r-xdata
push esi
mov esi [ rw-data ]
test esi esi
jl r-xdata
jg r-xdata
test eax eax
jg r-xdata
mov ecx [ rw-data ]
jg r-xdata
add [ rw-data ] edx
adc [ rw-data ] eax
test edx edx
jbe r-xdata
pop esi
retn
jl r-xdata
push ebx
mov ebx [ rw-data ]
mov eax ebx
cdq
add eax ecx
adc edx esi
and [ rw-data ] 0x0
mov [ rw-data ] eax
mov eax [ rw-data ]
sub eax ebx
and [ rw-data ] 0x0
pop ebx
mov [ rw-data ] edx
mov [ rw-data ] eax
pop esi
retn
test ecx ecx
jbe r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
test edx edx
jae r-xdata
sub_40449c
mov ecx [ rw-data ]
push esi
mov esi [ rw-data ]
mov eax esi
push edi
mov edi [ rw-data ]
cdq
cmp edx edi
jl r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
jg r-xdata
test edi edi
jg r-xdata
cmp eax ecx
jbe r-xdata
mov eax [ rw-data ]
add eax ecx
mov [ rw-data ] eax
mov eax ecx
cdq
push ebx
mov ebx [ rw-data ]
sub esi eax
sbb ebx edx
mov [ rw-data ] esi
mov esi eax
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edx
pop ebx
jmp r-xdata
jl r-xdata
sub ecx esi
sbb edi [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] edi
pop edi
pop esi
retn
xor ecx ecx
xor edi edi
test ecx ecx
jae r-xdata
sub_404527
push ebp
mov ebp esp
mov eax 0x14a0
call sub_4012c0
mov ecx [ rw-data ]
push edi
mov edi [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_403df3
cmp [ rw-data ] 0x0
mov [ ebp + 0xc ] eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax edi
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
movzx ecx [ rw-data ]
cmp eax ecx
jge r-xdata
push ebx
push esi
lea ecx [ ebp - 0x14a0 ]
call sub_403f1e
push 0x0
lea eax [ ebp - 0x14a0 ]
push eax
mov ebx rw-data
push ebx
mov esi rw-data
push esi
call sub_405269
test al al
je r-xdata
movzx eax [ rw-data ]
inc [ rw-data ]
cmp [ rw-data ] eax
jne r-xdata
mov eax [ ebp - 0x8a0 ]
add [ rw-data ] eax
mov eax [ ebp - 0x89c ]
adc [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
push esi
call sub_40228f
cmp [ rw-data ] 0x0
je r-xdata
push r--data
push esi
call sub_407148
mov ecx [ rw-data ]
pop esi
pop ebx
test ecx ecx
je r-xdata
push [ rw-data ]
push ebx
call sub_4022c9
push r--data
push ebx
call sub_407187
jmp r-xdata
and [ rw-data ] 0x0
call sub_4043b4
test eax eax
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
sub edi eax
add eax ecx
mov ecx [ rw-data ]
push edi
push eax
call sub_403df3
test eax eax
jge r-xdata
add [ ebp + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
pop edi
leave
retn 0x8
sub_404680
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov [ ebp + 0xc ] edi
test edi edi
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ rw-data ]
mov ebx 0x2000
mov esi edi
cmp edi eax
jb r-xdata
jl r-xdata
push esi
push [ rw-data ]
push [ ebp + 0x8 ]
call sub_408e73
mov eax [ rw-data ]
add [ ebp + 0x8 ] esi
add [ rw-data ] esi
sub eax esi
sbb [ rw-data ] 0x0
sub edi esi
mov [ rw-data ] eax
jne r-xdata
mov esi eax
push ebx
push [ rw-data ]
call sub_404527
cdq
mov ecx eax
or ecx edx
mov [ rw-data ] eax
mov [ rw-data ] edx
je r-xdata
test eax eax
ja r-xdata
cmp [ rw-data ] 0x0
jg r-xdata
mov eax [ ebp + 0xc ]
sub eax edi
jmp r-xdata
test edx edx
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push rw-data
push 0x0
push rw-data
push rw-data
mov ecx rw-data
call sub_401c89
xor eax eax
jmp r-xdata
jg r-xdata
add [ rw-data ] ebx
mov ecx [ rw-data ]
mov [ rw-data ] ecx
adc [ rw-data ] 0x0
test eax eax
jb r-xdata
sub_404759
push edi
xor edi edi
cmp [ rw-data ] edi
je r-xdata
cmp [ rw-data ] edi
jg r-xdata
or eax 0xffffffff
pop edi
retn
cmp [ rw-data ] edi
push esi
jg r-xdata
jl r-xdata
mov eax [ rw-data ]
test [ eax + 0x40 ] 0x1
je r-xdata
jl r-xdata
add [ rw-data ] 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
adc [ rw-data ] 0xffffffff
jmp r-xdata
cmp [ rw-data ] edi
ja r-xdata
add [ rw-data ] 0xffffffff
mov eax [ rw-data ]
adc [ rw-data ] 0xffffffff
movzx eax [ eax ]
inc [ rw-data ]
mov edi [ rw-data ]
mov esi [ rw-data ]
push ebx
mov ebx [ rw-data ]
jmp r-xdata
mov esi 0x2000
push esi
push [ rw-data ]
call sub_404527
cdq
mov ecx eax
mov [ rw-data ] eax
and eax edx
or ecx edx
mov [ rw-data ] edx
je r-xdata
cmp [ rw-data ] edi
ja r-xdata
mov eax edi
or eax ebx
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
cmp eax 0xffffffff
je r-xdata
add edi 0xffffffff
adc ebx 0xffffffff
call sub_40cd84
xor [ esi ] al
movzx eax [ esi ]
push eax
call sub_40cda4
inc esi
pop ebx
mov [ rw-data ] edi
mov [ rw-data ] edi
or eax 0xffffffff
jmp r-xdata
mov ecx rw-data
push ecx
mov eax rw-data
push eax
push ecx
push eax
mov ecx rw-data
call sub_401c89
add [ rw-data ] esi
mov eax [ rw-data ]
mov [ rw-data ] eax
adc [ rw-data ] edi
call sub_40449c
pop esi
pop edi
retn
sub_40487a
push ebp
mov ebp esp
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ rw-data ]
add edi [ ebp + 0x8 ]
push 0x0
adc esi [ ebp + 0xc ]
mov ebx 0x2000
push ebx
push esi
push edi
call sub_401200
mov [ ebp + 0x8 ] eax
mov eax edi
sub eax [ ebp + 0x8 ]
mov ecx esi
sbb ecx edx
test esi esi
jg r-xdata
cmp eax [ rw-data ]
jne r-xdata
jl r-xdata
push 0x0
push ecx
mov ecx [ rw-data ]
push eax
call sub_403c6d
mov ecx [ rw-data ]
call sub_403729
mov ecx [ rw-data ]
push ebx
push [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] edx
call sub_403df3
cdq
mov [ rw-data ] eax
mov [ rw-data ] edx
test edx edx
jg r-xdata
cmp ecx [ rw-data ]
je r-xdata
push 0x3
test edi edi
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov eax ecx
cdq
sub [ rw-data ] eax
mov eax [ rw-data ]
sbb [ rw-data ] edx
add eax ecx
mov [ rw-data ] eax
jmp r-xdata
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
sub eax ecx
sub eax esi
cdq
add [ rw-data ] eax
adc [ rw-data ] edx
add ecx esi
mov [ rw-data ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
xor eax eax
push 0x33
jmp r-xdata
test eax eax
ja r-xdata
pop eax
jmp r-xdata
sub_404970
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call sub_4017cb
mov [ rw-data ] eax
xor eax eax
cmp [ rw-data ] al
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
je r-xdata
push [ ebp + 0xc ]
mov ecx [ rw-data ]
push [ ebp + 0x8 ]
call sub_403cde
push 0x32
pop eax
jmp r-xdata
pop ebp
retn 0xc
sub_4049cd
push ebp
mov ebp esp
mov eax 0x1cc4
call sub_4012c0
push 0x400
lea eax [ ebp - 0x824 ]
push eax
push [ ebp + 0x8 ]
call sub_406ab3
lea ecx [ ebp - 0x1cc4 ]
call sub_403f1e
push 0x0
lea eax [ ebp - 0x1cc4 ]
push eax
lea eax [ ebp - 0x824 ]
push eax
push 0x0
call sub_405269
test al al
jne r-xdata
lea ecx [ ebp - 0x24 ]
call sub_40cb59
push rw-data
lea ecx [ ebp - 0x24 ]
call sub_40cb5f
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x10b0 ]
call sub_40cc79
movzx eax al
or eax 0xffffffff
jmp r-xdata
leave
retn 0x4
sub_404a44
push ebp
mov ebp esp
sub esp 0x404
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0xc ]
sub eax ebx
push edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
sub eax [ rw-data ]
cdq
sub eax [ rw-data ]
sbb edx [ rw-data ]
xor ecx ecx
add eax esi
adc edx ecx
add eax [ rw-data ]
adc edx [ rw-data ]
push edx
push eax
call sub_40487a
dec eax
dec eax
je r-xdata
pop esi
pop ebx
leave
retn 0x10
mov edi 0x400
mov [ ebp + 0x8 ] ebx
cmp esi edi
jb r-xdata
dec eax
jne r-xdata
push esi
lea eax [ ebp - 0x404 ]
push eax
mov [ rw-data ] ebx
call sub_404680
test eax eax
jne r-xdata
add esi 0xfffffc01
movzx eax si
mov [ ebp - 0x4 ] 0x1
mov [ ebp + 0x8 ] eax
lea esi [ edi - 0x1 ]
mov eax [ ebp - 0x4 ]
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push esi
lea eax [ ebp - 0x404 ]
push eax
push 0xffffffff
call sub_4017cb
not eax
mov [ ebp + esi - 0x404 ] bl
mov esi [ ebp + 0x10 ]
mov [ rw-data ] eax
mov ebx 0x800
mov eax ebx
test [ esi ] ax
jne r-xdata
push 0x33
pop eax
jmp r-xdata
push esi
call sub_408ced
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
call sub_408d06
mov eax ebx
test [ esi ] ax
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
pop edi
push esi
push eax
call sub_404680
test eax eax
jne r-xdata
test [ esi ] bx
push edi
mov esi rw-data
lea eax [ ebp - 0x404 ]
push esi
je r-xdata
movzx eax [ rw-data ]
push eax
mov eax [ rw-data ]
push [ eax + 0x1c ]
call sub_40e688
test al al
je r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x404 ]
push eax
call sub_40e6b9
test al al
je r-xdata
jmp r-xdata
push 0x0
push eax
call sub_406cab
push eax
call sub_40d18e
jmp r-xdata
lea eax [ ebp - 0x404 ]
push eax
push eax
call OemToCharA
mov eax ebx
or [ esi ] ax
movzx esi [ ebp + 0x8 ]
push edi
push 0x0
push esi
call sub_406ab3
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_404bd5
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
movzx eax [ esi + 0x7 ]
push edi
xor ebx ebx
push ebx
cdq
mov edi 0x100
push edi
push edx
push eax
call sub_401030
mov ecx eax
movzx eax [ esi + 0x6 ]
mov ebp edx
cdq
push ebx
add ecx eax
push edi
adc ebp edx
push ebp
push ecx
call sub_401030
mov ecx eax
movzx eax [ esi + 0x5 ]
mov ebp edx
cdq
push ebx
add ecx eax
push edi
adc ebp edx
push ebp
push ecx
call sub_401030
mov ecx eax
movzx eax [ esi + 0x4 ]
mov ebp edx
cdq
push ebx
add ecx eax
push edi
adc ebp edx
push ebp
push ecx
call sub_401030
mov ecx eax
movzx eax [ esi + 0x3 ]
mov ebp edx
cdq
push ebx
add ecx eax
push edi
adc ebp edx
push ebp
push ecx
call sub_401030
mov ecx eax
movzx eax [ esi + 0x2 ]
mov ebp edx
cdq
push ebx
add ecx eax
push edi
adc ebp edx
push ebp
push ecx
call sub_401030
mov ecx eax
movzx eax [ esi + 0x1 ]
mov ebp edx
cdq
push ebx
add ecx eax
push edi
adc ebp edx
push ebp
push ecx
call sub_401030
mov ecx eax
movzx eax [ esi ]
mov edi edx
cdq
add ecx eax
adc edi edx
mov edx edi
pop edi
pop esi
pop ebp
mov eax ecx
pop ebx
retn 0x4
sub_404cc5
push ebp
mov ebp esp
mov eax 0x14a0
call sub_4012c0
push esi
push edi
lea ecx [ ebp - 0x14a0 ]
call sub_403f1e
xor edi edi
push edi
lea eax [ ebp - 0x14a0 ]
push eax
mov esi rw-data
push esi
push edi
call sub_405269
test al al
je r-xdata
push 0xc28
call sub_4093a0
pop ecx
cmp eax edi
je r-xdata
push [ ebp - 0x898 ]
call sub_403f5e
test al al
jne r-xdata
xor ecx ecx
mov ecx eax
call sub_403602
mov ecx eax
jmp r-xdata
push esi
call sub_403fdd
test al al
jne r-xdata
push esi
push edi
call sub_4043a2
xor eax eax
mov ecx [ rw-data ]
cmp ecx edi
je r-xdata
push 0xa
push esi
push edi
mov [ rw-data ] ecx
call sub_403955
test al al
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
pop edi
pop esi
leave
retn
sub_404d6b
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
sub esp 0x204
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
jne r-xdata
dec eax
mov [ ecx ] eax
mov [ ecx ] 0x2
jmp r-xdata
push 0xfffffffe
pop ebx
cmp [ ebp - 0x4 ] bl
jne r-xdata
lea ecx [ ebp - 0x104 ]
call sub_409674
lea eax [ ebp - 0x104 ]
push eax
push rw-data
push ebx
push 0x1
call j_sub_40ab03
test al al
je r-xdata
mov edi [ ebp + 0x10 ]
push esi
push edi
lea eax [ ebp - 0x204 ]
push eax
call sub_40d131
push 0x100
lea eax [ ebp - 0x204 ]
push eax
mov [ esi + edi - 0x1 ] 0x0
call sub_409685
lea ecx [ ebp - 0x104 ]
call j_sub_40969b
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x10
mov esi [ ebp + 0x14 ]
mov esi 0x80
push esi
lea eax [ ebp - 0x204 ]
push eax
lea ecx [ ebp - 0x104 ]
call sub_409609
cmp [ ebp + 0x14 ] esi
jg r-xdata
sub_404e43
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
retn 0x4
push edi
lea eax [ esi + 0x400 ]
push eax
call sub_409153
cmp [ esi ] 0x0
jne r-xdata
mov [ esi + 0xc00 ] 0x1
push 0x1000000
push esi
push edi
call sub_40d131
sub_404e79
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0xa50
push ebx
push esi
push edi
call sub_406603
mov edi 0x1000000
test eax eax
je r-xdata
mov eax [ ebp + 0x74 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x78 ]
test eax eax
je r-xdata
push edi
lea eax [ ebp - 0x5e8 ]
push eax
push [ ebp + 0x78 ]
call sub_40d131
cmp [ eax ] 0x0
je r-xdata
push edi
lea eax [ ebp - 0x9e8 ]
push eax
push [ ebp + 0x74 ]
call sub_40d163
cmp [ eax ] 0x0
je r-xdata
push [ ebp + 0x70 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x5e8 ]
push eax
call [ FindFirstFileA@IAT ]
mov [ ebp + 0x70 ] eax
cmp eax ebx
jne r-xdata
push eax
lea eax [ ebp - 0x5e8 ]
push eax
call sub_408fe8
jmp r-xdata
push [ ebp + 0x70 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x9e8 ]
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp + 0x70 ] eax
cmp eax ebx
jne r-xdata
push eax
lea eax [ ebp - 0x9e8 ]
push eax
call sub_409153
jmp r-xdata
cmp [ ebp + 0x70 ] ebx
je r-xdata
mov [ ebp + 0x70 ] ebx
call [ GetLastError@IAT ]
cmp eax 0x12
setne al
mov [ esi + 0x149c ] al
lea eax [ ebp - 0x5e8 ]
push eax
push esi
call sub_408fe8
lea eax [ ebp - 0xac ]
push eax
push esi
call sub_406d40
push eax
call sub_408fe8
push edi
lea eax [ esi + 0x400 ]
push eax
push esi
call sub_40d163
push 0x1
push 0x0
push 0x0
push [ ebp - 0xbc ]
call sub_401030
mov ecx [ ebp - 0xb8 ]
xor ebx ebx
add eax ecx
mov [ esi + 0xc00 ] eax
mov eax [ ebp - 0xd8 ]
mov [ esi + 0xc08 ] eax
push edi
lea eax [ esi + 0xc80 ]
push eax
lea eax [ ebp + 0x58 ]
adc edx ebx
push eax
mov [ esi + 0xc04 ] edx
call sub_40d163
mov eax [ ebp - 0xd4 ]
mov [ esi + 0x1480 ] eax
mov eax [ ebp - 0xd0 ]
mov [ esi + 0x1484 ] eax
mov eax [ ebp - 0xcc ]
mov [ esi + 0x1488 ] eax
mov eax [ ebp - 0xc8 ]
mov [ esi + 0x148c ] eax
mov eax [ ebp - 0xc4 ]
mov [ esi + 0x1490 ] eax
mov eax [ ebp - 0xc0 ]
mov [ esi + 0x1494 ] eax
lea eax [ ebp - 0xc4 ]
lea edi [ esi + 0xc14 ]
push eax
mov ecx edi
call sub_40cb5f
lea eax [ ebp - 0xd4 ]
push eax
lea ecx [ esi + 0xc38 ]
call sub_40cb5f
lea eax [ ebp - 0xcc ]
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
mov esi [ ebp + 0x7c ]
or ebx 0xffffffff
lea eax [ ebp - 0xd8 ]
push eax
cmp [ ebp + 0x70 ] ebx
jne r-xdata
cmp [ ebp + 0x70 ] ebx
je r-xdata
mov [ ebp + 0x70 ] ebx
call [ GetLastError@IAT ]
cmp eax 0x12
setne al
mov [ esi + 0x149c ] al
lea eax [ ebp - 0x9e8 ]
push eax
lea ebx [ esi + 0x400 ]
push ebx
call sub_409153
lea eax [ ebp - 0x1bc ]
push eax
push ebx
call sub_406d97
push eax
call sub_409153
push edi
push esi
push ebx
call sub_40d131
push 0x1
push 0x0
push 0x0
push [ ebp - 0x1cc ]
call sub_401030
mov ecx [ ebp - 0x1c8 ]
xor edi edi
add eax ecx
mov [ esi + 0xc00 ] eax
mov eax [ ebp - 0x1e8 ]
mov [ esi + 0xc08 ] eax
lea eax [ ebp + 0x4c ]
push eax
lea eax [ esi + 0xc80 ]
adc edx edi
push eax
mov [ esi + 0xc04 ] edx
call sub_409153
mov eax [ ebp - 0x1e4 ]
mov [ esi + 0x1480 ] eax
mov eax [ ebp - 0x1e0 ]
mov [ esi + 0x1484 ] eax
mov eax [ ebp - 0x1dc ]
mov [ esi + 0x1488 ] eax
mov eax [ ebp - 0x1d8 ]
mov [ esi + 0x148c ] eax
mov eax [ ebp - 0x1d4 ]
mov [ esi + 0x1490 ] eax
mov eax [ ebp - 0x1d0 ]
mov [ esi + 0x1494 ] eax
lea eax [ ebp - 0x1d4 ]
lea edi [ esi + 0xc14 ]
push eax
mov ecx edi
call sub_40cb5f
lea eax [ ebp - 0x1e4 ]
push eax
lea ecx [ esi + 0xc38 ]
call sub_40cb5f
lea eax [ ebp - 0x1dc ]
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
mov esi [ ebp + 0x7c ]
or ebx 0xffffffff
lea eax [ ebp - 0x1e8 ]
push eax
cmp [ ebp + 0x70 ] ebx
jne r-xdata
and [ esi + 0x1498 ] 0x0
mov eax [ ebp + 0x70 ]
pop edi
pop esi
pop ebx
add ebp 0x68
leave
retn 0x10
xor eax eax
cmp eax 0x3
jmp r-xdata
push eax
lea ecx [ esi + 0xc5c ]
call sub_40cb5f
mov ecx edi
call sub_40cb02
mov [ esi + 0xc0c ] eax
cmp eax 0x3
je r-xdata
je r-xdata
cmp eax 0x12
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0x149c ] al
jmp r-xdata
sub_4051d1
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi ecx
xor ebx ebx
jmp r-xdata
mov [ edi + 0x149c ] bl
cmp [ esi ] bl
jne r-xdata
push edi
lea eax [ esi + 0x400 ]
push eax
push esi
cmp [ esi + 0xc00 ] bl
je r-xdata
xor al al
jmp r-xdata
push [ esi + 0xc04 ]
call sub_404e79
push 0xffffffff
call sub_404e79
mov [ esi + 0xc04 ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
push [ edi + 0xc08 ]
mov [ edi + 0x1498 ] ebx
call sub_403f46
mov [ edi + 0xc10 ] al
push edi
mov [ esi + 0xc00 ] bl
call sub_406d40
mov ebp eax
push r--data
push ebp
call sub_40905a
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
push r--data
push ebp
call sub_40905a
test eax eax
jne r-xdata
mov al 0x1
sub_405269
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
push [ ebp + 0x8 ]
mov [ esi + 0x149c ] 0x0
call sub_406a38
test al al
je r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0xffffffff
call sub_404e79
cmp eax 0xffffffff
je r-xdata
xor al al
jmp r-xdata
push eax
call [ FindClose@IAT ]
push [ esi + 0xc08 ]
and [ esi + 0x1498 ] 0x0
call sub_403f46
mov [ esi + 0xc10 ] al
mov al 0x1
pop esi
pop ebp
retn 0x10
sub_4052c3
push esi
push 0x11c58
push 0x0
mov esi rw-data
push esi
call sub_408e46
and [ rw-data ] 0x0
mov eax esi
mov [ rw-data ] rw-data
mov [ rw-data ] 0x1
mov [ rw-data ] sub_4049bc
mov [ rw-data ] sub_4049c1
mov [ rw-data ] sub_404d6b
pop esi
retn
sub_405313
sub esp 0x1c
mov eax [ rw-data ]
and [ esp + 0xc ] 0x0
and [ esp + 0x8 ] 0x0
mov [ esp ] eax
mov eax [ esp + 0x28 ]
movzx eax [ eax * 2 + r--data ]
push ebx
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x30 ]
movzx eax [ eax * 2 + r--data ]
push ebp
mov ebp [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
mov [ esp + 0x28 ] eax
jmp r-xdata
cmp esi [ esp + 0x38 ]
jb r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_404759
jg r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x30 ]
jmp r-xdata
mov [ esp + 0x18 ] 0x1
mov ecx esi
shl eax cl
or ebp eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
and eax ebp
lea edi [ ecx + eax * 8 ]
movzx ecx [ edi + 0x1 ]
movzx ebx [ edi ]
shr ebp cl
sub esi ecx
mov [ esp + 0x14 ] ebp
cmp ebx 0x20
jne r-xdata
cmp eax 0xffffffff
je r-xdata
cmp ebx 0x1f
jb r-xdata
mov ecx [ esp + 0x10 ]
inc [ esp + 0x10 ]
cmp [ esp + 0x10 ] 0x10000
mov al [ edi + 0x4 ]
mov [ ecx + rw-data ] al
jne r-xdata
cmp esi ebx
jb r-xdata
je r-xdata
cmp [ esp + 0x18 ] 0x0
mov ebp [ esp + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov [ rw-data ] ebp
mov [ rw-data ] esi
cmp ebx 0x63
je r-xdata
push 0x0
push 0x10000
push rw-data
call sub_404970
push 0x10000
push rw-data
call sub_402255
jmp r-xdata
call sub_404759
jg r-xdata
movzx eax [ ebx * 2 + r--data ]
movzx ecx [ edi + 0x4 ]
and eax ebp
add eax ecx
mov ecx ebx
shr ebp cl
mov [ esp + 0x20 ] eax
sub esi ebx
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
and ebx 0x1f
jmp r-xdata
mov eax [ esp + 0x1c ]
and [ esp + 0x10 ] eax
jmp r-xdata
mov [ esp + 0x1c ] eax
test eax eax
jne r-xdata
mov [ esp + 0x18 ] 0x1
mov ecx esi
shl eax cl
or ebp eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
cmp esi [ esp + 0x3c ]
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
cmp esi ebx
jb r-xdata
cmp eax 0xffffffff
je r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_404759
jg r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x34 ]
jmp r-xdata
call sub_404759
jg r-xdata
movzx eax [ ebx * 2 + r--data ]
mov ecx [ edi + 0x4 ]
mov [ esp + 0x18 ] 0x1
mov ecx esi
shl eax cl
or ebp eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
and eax ebp
lea edi [ ecx + eax * 8 ]
movzx ecx [ edi + 0x1 ]
movzx ebx [ edi ]
shr ebp cl
sub esi ecx
mov [ esp + 0x14 ] ebp
cmp ebx 0x20
jae r-xdata
mov [ esp + 0x18 ] 0x1
mov ecx esi
shl eax cl
or ebp eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
cmp eax 0xffffffff
je r-xdata
cmp ebx 0x63
je r-xdata
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
and ebx 0x1f
jmp r-xdata
cmp esi ebx
jb r-xdata
cmp esi ebx
jb r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_404759
jg r-xdata
movzx eax [ ebx * 2 + r--data ]
and eax [ esp + 0x14 ]
mov ebp [ esp + 0x10 ]
sub ebp eax
movzx eax [ edi + 0x4 ]
mov ecx ebx
shr [ esp + 0x14 ] cl
sub ebp eax
sub esi ebx
call sub_404759
jg r-xdata
movzx eax [ ebx * 2 + r--data ]
mov ecx [ edi + 0x4 ]
mov [ esp + 0x18 ] 0x1
mov ecx esi
shl eax cl
or ebp eax
mov [ esp + 0x14 ] ebp
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
mov edi 0x10000
sub edi eax
cmp edi [ esp + 0x20 ]
jbe r-xdata
mov eax ecx
mov [ esp + 0x18 ] 0x1
mov ecx esi
shl eax cl
or ebp eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
cmp eax 0xffffffff
je r-xdata
sub [ esp + 0x20 ] edi
mov eax ecx
sub eax ebp
cmp eax edi
jb r-xdata
mov edi [ esp + 0x20 ]
cmp eax 0xffffffff
je r-xdata
mov al [ ebp + rw-data ]
mov [ ecx + rw-data ] al
inc ecx
inc ebp
dec edi
jne r-xdata
push edi
lea eax [ ebp + rw-data ]
push eax
mov eax [ esp + 0x18 ]
lea eax [ eax + rw-data ]
push eax
call sub_408e73
add [ esp + 0x10 ] edi
add ebp edi
jmp r-xdata
mov [ esp + 0x10 ] ecx
cmp [ esp + 0x10 ] 0x10000
jne r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ esp + 0x10 ]
and ebp 0xffff
mov eax ebp
cmp ebp ecx
ja r-xdata
push 0x0
push 0x10000
push rw-data
call sub_404970
push 0x10000
push rw-data
call sub_402255
jmp r-xdata
and [ esp + 0x10 ] eax
mov [ esp + 0x1c ] eax
test eax eax
jne r-xdata
sub_405739
sub esp 0xc
and [ esp + 0x8 ] 0x0
and [ esp + 0x4 ] 0x0
push ebx
mov ebx [ rw-data ]
push ebp
mov ebp [ rw-data ]
push esi
mov esi [ rw-data ]
mov ecx esi
push edi
and ecx 0x7
push 0x10
shr ebx cl
sub esi ecx
pop edi
jmp r-xdata
cmp esi edi
jb r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_404759
jg r-xdata
movzx eax bx
shr ebx 0x10
mov [ esp + 0x10 ] eax
sub esi edi
jmp r-xdata
mov [ esp + 0x14 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
cmp esi edi
jb r-xdata
cmp eax 0xffffffff
je r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_404759
jg r-xdata
mov eax ebx
not eax
and eax 0xffff
cmp [ esp + 0x10 ] eax
je r-xdata
mov [ esp + 0x14 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
shr ebx 0x10
sub esi edi
cmp [ esp + 0x10 ] 0x0
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] ebp
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov edi 0x10000
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
jmp r-xdata
cmp esi 0x8
jb r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_404759
jg r-xdata
mov [ ebp + rw-data ] bl
inc ebp
cmp ebp edi
jne r-xdata
mov [ esp + 0x14 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
shr ebx 0x8
sub esi 0x8
cmp [ esp + 0x10 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0xffffffff
je r-xdata
dec [ esp + 0x10 ]
cmp [ esp + 0x14 ] 0x0
jne r-xdata
push 0x0
push edi
push rw-data
call sub_404970
push edi
push rw-data
call sub_402255
jmp r-xdata
mov eax [ esp + 0x18 ]
xor ebp ebp
mov [ esp + 0x18 ] eax
cmp eax ebp
jne r-xdata
sub_405901
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn 0x4
push esi
mov esi [ eax - 0x4 ]
sub eax 0x8
push eax
call sub_408d06
mov eax esi
test esi esi
jne r-xdata
pop esi
sub_405952
push ebp
lea ebp [ esp - 0x5c ]
sub esp 0x5c8
push ebx
push esi
push edi
mov edi [ ebp + 0x68 ]
push 0x10
pop esi
cmp edi 0x100
jbe r-xdata
mov [ ebp + 0x44 ] esi
mov eax [ ebp + 0x64 ]
mov eax [ eax + 0x400 ]
mov [ ebp + 0x44 ] eax
jmp r-xdata
mov eax [ ecx ]
lea eax [ ebp + eax * 4 - 0x24 ]
inc [ eax ]
add ecx 0x4
dec edx
jne r-xdata
cmp [ ebp - 0x24 ] edi
jne r-xdata
push 0x44
xor ebx ebx
push ebx
lea eax [ ebp - 0x24 ]
push eax
call sub_408e46
mov ecx [ ebp + 0x64 ]
mov edx edi
xor edi edi
inc edi
mov ecx edi
mov eax [ ebp + 0x78 ]
mov [ eax ] ebx
mov eax [ ebp + 0x7c ]
mov [ eax ] ebx
jmp r-xdata
mov edx [ ebp + 0x7c ]
mov [ ebp + 0x58 ] ecx
cmp [ edx ] ecx
jae r-xdata
inc ecx
cmp ecx esi
jbe r-xdata
xor eax eax
mov eax esi
mov [ edx ] ecx
cmp [ ebp + ecx * 4 - 0x24 ] ebx
jne r-xdata
mov [ ebp + 0x40 ] eax
cmp [ edx ] eax
jbe r-xdata
dec eax
jne r-xdata
shl edi cl
jmp r-xdata
mov [ edx ] eax
cmp [ ebp + eax * 4 - 0x24 ] ebx
jne r-xdata
cmp ecx eax
jb r-xdata
sub edi [ ebp + ecx * 4 - 0x24 ]
js r-xdata
mov esi eax
shl esi 0x2
lea ecx [ ebp + esi - 0x24 ]
mov edx [ ecx ]
sub edi edx
mov [ ebp + 0x28 ] edi
js r-xdata
push 0x2
inc ecx
add edi edi
add edx edi
mov [ ecx ] edx
xor ecx ecx
dec eax
mov [ ebp - 0x64 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
add ebp 0x5c
leave
retn 0x1c
push 0x480
push ebx
lea eax [ ebp - 0x56c ]
push eax
call sub_408e46
mov ebx [ ebp + 0x64 ]
xor ecx ecx
xor edx edx
xor edx edx
inc edx
cmp edx [ ebp + 0x68 ]
jb r-xdata
lea eax [ ebp + eax * 4 - 0x68 ]
mov ecx [ eax ]
mov [ ebp + ecx * 4 - 0x56c ] edx
inc ecx
mov [ eax ] ecx
xor ecx ecx
add ecx [ ebp + edx - 0x20 ]
add edx 0x4
dec eax
mov [ ebp + edx - 0x64 ] ecx
jne r-xdata
mov eax [ ebx ]
add ebx 0x4
cmp eax ecx
je r-xdata
mov eax [ ebp + esi - 0x68 ]
mov [ ebp + 0x68 ] eax
lea eax [ ebp - 0x56c ]
mov [ ebp + 0x50 ] ecx
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0xac ] ecx
mov [ ebp - 0xec ] ecx
mov [ ebp + 0x24 ] ecx
mov [ ebp + 0x2c ] ecx
mov ecx [ ebp + 0x58 ]
mov [ ebp + 0x64 ] eax
or eax 0xffffffff
xor ebx ebx
cmp ecx [ ebp + 0x40 ]
mov [ ebp + 0x54 ] eax
jg r-xdata
mov eax [ ebp - 0xa8 ]
mov ecx [ ebp + 0x7c ]
mov [ ecx ] eax
test edi edi
je r-xdata
lea edx [ ecx - 0x1 ]
lea ecx [ ebp + ecx * 4 - 0x24 ]
mov [ ebp + 0x34 ] edx
mov [ ebp + 0x30 ] ecx
xor eax eax
inc eax
cmp [ ebp + 0x40 ] eax
jne r-xdata
inc [ ebp + 0x58 ]
mov ecx [ ebp + 0x30 ]
mov edx [ ebp + 0x58 ]
add ecx 0x4
inc [ ebp + 0x34 ]
cmp edx [ ebp + 0x40 ]
mov [ ebp + 0x30 ] ecx
jle r-xdata
mov eax [ ebp + eax * 4 - 0xa8 ]
dec [ ebp + 0x3c ]
add eax ebx
cmp [ ebp + 0x58 ] eax
jle r-xdata
mov ecx [ ecx ]
mov [ ebp + 0x3c ] ecx
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x58 ]
mov al cl
sub al bl
mov [ ebp + 0x49 ] al
mov eax [ ebp + 0x68 ]
lea eax [ ebp + eax * 4 - 0x56c ]
cmp [ ebp + 0x64 ] eax
jb r-xdata
lea ecx [ ebp - 0xec ]
sub ecx 0x4
mov [ ebp + 0x20 ] ecx
mov eax [ ebp + 0x64 ]
mov eax [ eax ]
cmp eax [ ebp + 0x6c ]
jae r-xdata
mov [ ebp + 0x48 ] 0x63
jmp r-xdata
mov ebx [ ebp + 0x58 ]
mov esi [ ebp + 0x3c ]
xor eax eax
sub ebx edi
inc eax
mov ecx ebx
shl eax cl
lea ecx [ esi + 0x1 ]
cmp eax ecx
jbe r-xdata
mov edx eax
sub eax [ ebp + 0x6c ]
mov edx [ ebp + 0x74 ]
mov dl [ eax + edx ]
mov [ ebp + 0x48 ] dl
mov edx [ ebp + 0x70 ]
mov ax [ edx + eax * 2 ]
cmp eax 0x100
setb al
add al 0x1f
mov [ ebp + 0x48 ] al
mov eax [ ebp + 0x64 ]
mov ax [ eax ]
jmp r-xdata
mov eax [ ebp + 0x50 ]
xor edx edx
sub ecx ebx
inc edx
shl edx cl
mov ecx ebx
shr eax cl
cmp eax [ ebp + 0x2c ]
jae r-xdata
lea eax [ edi + ebx ]
cmp eax [ ebp + 0x44 ]
jbe r-xdata
or ecx 0xffffffff
sub ecx esi
mov esi [ ebp + 0x30 ]
add eax ecx
jmp r-xdata
mov ecx [ ebp + 0x34 ]
mov edx [ ebp + 0x50 ]
xor eax eax
inc eax
shl eax cl
jmp r-xdata
mov ecx [ ebp + 0x24 ]
mov esi edx
shl esi 0x3
lea ecx [ ecx + eax * 8 ]
add [ ebp + 0x64 ] 0x4
mov [ ebp + 0x4c ] ax
mov esi [ ebp + 0x54 ]
xor eax eax
inc eax
mov ecx ebx
shl eax cl
shl esi 0x2
lea edi [ ebp + esi - 0xa8 ]
mov [ edi ] ebx
mov [ ebp + 0x2c ] eax
lea eax [ eax * 8 + 0x8 ]
push eax
call sub_408ced
test eax eax
je r-xdata
cmp edi [ ebp + 0x44 ]
jae r-xdata
inc ebx
cmp ebx edx
jb r-xdata
test edx eax
jne r-xdata
mov edi [ ebp + 0x48 ]
mov [ ecx ] edi
mov edi [ ebp + 0x4c ]
mov [ ecx + 0x4 ] edi
add eax edx
add ecx esi
cmp eax [ ebp + 0x2c ]
jb r-xdata
mov edi [ ebp + 0x28 ]
cmp [ ebp + 0x54 ] 0x0
je r-xdata
mov edx [ ebp + 0x78 ]
lea ecx [ eax + 0x8 ]
add eax 0x4
mov [ edx ] ecx
and [ eax ] 0x0
cmp [ ebp + 0x54 ] 0x0
mov [ ebp + 0x78 ] eax
mov [ ebp + 0x24 ] ecx
mov [ ebp + esi - 0xec ] ecx
je r-xdata
mov ebx [ ebp + 0x44 ]
sub ebx edi
add esi 0x4
mov ecx [ esi ]
add eax eax
cmp eax ecx
jbe r-xdata
xor edx eax
shr eax 0x1
xor esi esi
inc esi
mov ecx ebx
shl esi cl
xor edx eax
mov eax [ ebp + 0x54 ]
mov [ ebp + 0x50 ] edx
dec esi
and esi edx
cmp esi [ ebp + eax * 4 - 0x68 ]
je r-xdata
push 0x3
jmp r-xdata
push [ ebp - 0xec ]
call sub_405901
mov eax [ edi ]
mov ecx [ ebp + 0x38 ]
add eax ecx
cmp [ ebp + 0x58 ] eax
jg r-xdata
mov eax [ ebp + 0x50 ]
mov [ ebp + esi - 0x68 ] eax
lea edx [ ebp + esi - 0xac ]
mov al [ edx ]
mov [ ebp + 0x49 ] al
add bl 0x20
xor eax eax
mov [ ebp + 0x48 ] bl
mov ebx ecx
mov ecx [ ebp + 0x38 ]
inc eax
shl eax cl
sub ecx [ edx ]
mov [ ebp + 0x4c ] ebx
dec eax
and eax [ ebp + 0x50 ]
shr eax cl
mov ecx [ ebp + 0x20 ]
mov esi [ esi + ecx ]
mov ecx [ ebp + 0x48 ]
mov [ esi + eax * 8 ] ecx
mov [ esi + eax * 8 + 0x4 ] ebx
sub eax ecx
cmp [ ebp + 0x3c ] 0x0
jne r-xdata
sub ebx [ ebp + eax * 4 - 0xac ]
dec eax
xor esi esi
inc esi
mov ecx ebx
shl esi cl
dec esi
and esi edx
cmp esi [ ebp + eax * 4 - 0x68 ]
jne r-xdata
pop eax
jmp r-xdata
mov edx [ ebp + 0x40 ]
inc [ ebp + 0x54 ]
mov edi eax
mov eax [ ebp + 0x7c ]
mov eax [ eax ]
sub edx edi
mov [ ebp + 0x38 ] edi
cmp edx eax
jbe r-xdata
mov edi [ ebp + 0x28 ]
mov ebx ecx
mov [ ebp + 0x54 ] eax
sub_405d1a
push ebp
mov ebp esp
sub esp 0x480
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call sub_405313
push 0x8
pop eax
push 0x70
mov ecx 0x90
lea edi [ ebp - 0x480 ]
[ edi ]
pop ecx
push 0x9
pop eax
push 0x18
lea edi [ ebp - 0x240 ]
[ edi ]
pop ecx
push 0x7
pop edx
push 0x8
mov eax edx
lea edi [ ebp - 0x80 ]
[ edi ]
pop ecx
push ecx
pop eax
push rw-data
push rw-data
push [ rw-data ]
lea edi [ ebp - 0x20 ]
push [ rw-data ]
[ edi ]
push 0x101
push 0x120
lea eax [ ebp - 0x480 ]
push eax
mov [ rw-data ] edx
call sub_405952
cmp eax ebx
je r-xdata
push 0x20
pop ecx
push 0x5
pop eax
push rw-data
push rw-data
push [ rw-data ]
lea edi [ ebp - 0x480 ]
push r--data
push ebx
[ edi ]
mov [ rw-data ] eax
push 0x20
lea eax [ ebp - 0x480 ]
push eax
call sub_405952
mov esi eax
cmp esi 0x1
jle r-xdata
mov [ rw-data ] ebx
jmp r-xdata
push [ rw-data ]
call sub_405901
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov eax esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_405e22
push ebp
mov ebp esp
sub esp 0x524
and [ ebp - 0x8 ] 0x0
push ebx
push esi
push edi
push 0x500
push 0x0
lea eax [ ebp - 0x524 ]
push eax
call sub_408e46
mov ebx [ rw-data ]
mov esi [ rw-data ]
push 0x5
pop edi
jmp r-xdata
cmp esi edi
jb r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_404759
jg r-xdata
mov eax ebx
and eax 0x1f
add eax 0x101
shr ebx 0x5
mov [ ebp - 0x1c ] eax
sub esi edi
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
cmp esi edi
jb r-xdata
cmp eax 0xffffffff
je r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_404759
jg r-xdata
mov edi ebx
and edi 0x1f
inc edi
shr ebx 0x5
mov [ ebp - 0x20 ] edi
sub esi 0x5
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
mov [ ebp - 0x4 ] ebx
cmp esi 0x4
jb r-xdata
cmp eax 0xffffffff
je r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_404759
jg r-xdata
mov ebx [ ebp - 0x4 ]
shr [ ebp - 0x4 ] 0x4
and ebx 0xf
add ebx 0x4
sub esi 0x4
cmp [ ebp - 0x1c ] 0x120
ja r-xdata
mov [ ebp - 0x8 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
xor eax eax
inc eax
cmp edi 0x20
ja r-xdata
cmp eax 0xffffffff
je r-xdata
xor edi edi
test ebx ebx
jbe r-xdata
mov eax [ edi * 4 + r--data ]
and [ ebp + eax * 4 - 0x524 ] 0x0
inc edi
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
xor ebx ebx
push ebx
push ebx
push 0x13
push 0x13
lea eax [ ebp - 0x524 ]
push eax
mov [ ebp - 0xc ] 0x7
call sub_405952
mov ecx [ ebp - 0xc ]
mov edi eax
cmp ecx ebx
jne r-xdata
cmp edi 0x13
jb r-xdata
jmp r-xdata
cmp edi ebx
je r-xdata
xor edi edi
inc edi
cmp esi 0x3
jb r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
movzx ecx [ ecx * 2 + r--data ]
add eax edx
xor edi edi
mov [ ebp - 0x18 ] ebx
cmp eax ebx
mov ebx [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] ecx
jbe r-xdata
cmp edi 0x1
jne r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
push [ ebp - 0x10 ]
call sub_405901
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ rw-data ]
mov [ rw-data ] esi
push [ rw-data ]
mov esi 0x101
push esi
push [ ebp - 0x1c ]
lea eax [ ebp - 0x524 ]
push eax
mov [ rw-data ] ebx
mov [ ebp - 0xc ] 0x9
call sub_405952
cmp [ ebp - 0xc ] 0x0
mov edi eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax edi
jmp r-xdata
push [ ebp - 0x10 ]
call sub_405901
call sub_404759
jg r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ edi * 4 + r--data ]
shr [ ebp - 0x4 ] 0x3
and eax 0x7
sub esi 0x3
inc edi
mov [ ebp + ecx * 4 - 0x524 ] eax
cmp edi ebx
jb r-xdata
test edi edi
jne r-xdata
xor edi edi
inc edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x8 ] 0x1
mov ecx esi
shl eax cl
or [ ebp - 0x4 ] eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
jmp r-xdata
mov ebx [ ebp - 0x1c ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ rw-data ]
lea eax [ ebp + ebx * 4 - 0x524 ]
push r--data
push edi
push [ ebp - 0x20 ]
mov [ ebp - 0x14 ] 0x6
push eax
call sub_405952
mov edi eax
cmp edi 0x1
jne r-xdata
cmp esi [ ebp - 0xc ]
jb r-xdata
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edi edi
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
test edi edi
je r-xdata
cmp ebx esi
jbe r-xdata
call sub_404759
jg r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
and eax ebx
lea eax [ ecx + eax * 8 ]
movzx ecx [ eax + 0x1 ]
mov [ ebp - 0x4 ] eax
movzx eax [ eax + 0x4 ]
shr ebx cl
sub esi ecx
cmp eax 0x10
jae r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
push [ ebp - 0x10 ]
call sub_405313
push [ ebp - 0x10 ]
mov esi eax
call sub_405901
push [ ebp - 0x4 ]
call sub_405901
mov eax esi
jmp r-xdata
cmp edi 0x1
jne r-xdata
xor edi edi
inc edi
mov [ ebp - 0x8 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
je r-xdata
mov [ ebp + edi * 4 - 0x524 ] eax
mov [ ebp - 0x18 ] eax
inc edi
jmp r-xdata
push [ ebp - 0x4 ]
call sub_405901
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
cmp esi 0x2
jb r-xdata
cmp eax 0x11
jne r-xdata
cmp edi [ ebp - 0x14 ]
jb r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
cmp esi 0x7
jb r-xdata
jmp r-xdata
call sub_404759
jg r-xdata
mov ecx ebx
and ecx 0x3
add ecx 0x3
shr ebx 0x2
dec esi
lea edx [ edi + ecx ]
dec esi
cmp edx [ ebp - 0x14 ]
ja r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
cmp esi 0x3
jb r-xdata
mov [ ebp - 0x8 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
test ecx ecx
je r-xdata
call sub_404759
jg r-xdata
mov ecx ebx
and ecx 0x7f
add ecx 0xb
shr ebx 0x7
sub esi 0x7
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x18 ]
lea edi [ ebp + edi * 4 - 0x524 ]
[ edi ]
mov edi edx
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
test ecx ecx
je r-xdata
call sub_404759
jg r-xdata
mov ecx ebx
and ecx 0x7
add ecx 0x3
shr ebx 0x3
sub esi 0x3
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
and [ ebp - 0x18 ] 0x0
lea edi [ ebp + edi * 4 - 0x524 ]
xor eax eax
[ edi ]
mov edi edx
mov [ ebp - 0x8 ] 0x1
mov ecx esi
shl eax cl
or ebx eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
lea edx [ edi + ecx ]
cmp edx [ ebp - 0x14 ]
ja r-xdata
cmp eax 0xffffffff
je r-xdata
sub_406364
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ rw-data ]
xor ebx ebx
jmp r-xdata
cmp esi 0x1
jb r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_404759
jg r-xdata
mov ecx [ esp + 0x10 ]
mov eax edi
and eax 0x1
shr edi 0x1
mov [ ecx ] eax
dec esi
jmp r-xdata
xor ebx ebx
inc ebx
mov ecx esi
shl eax cl
or edi eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] ebx
jb r-xdata
cmp esi 0x2
jb r-xdata
cmp eax 0xffffffff
je r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
jmp r-xdata
call sub_404759
jg r-xdata
mov eax edi
and eax 0x3
test ebx ebx
jne r-xdata
xor ebx ebx
inc ebx
mov ecx esi
shl eax cl
or edi eax
add esi 0x8
mov eax [ rw-data ]
movzx eax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
jb r-xdata
push 0x2
pop eax
shr edi 0x2
add esi 0xfffffffe
mov [ rw-data ] edi
mov [ rw-data ] esi
cmp eax 0x2
jne r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
call sub_405e22
jmp r-xdata
cmp eax 0x1
jne r-xdata
call sub_405739
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
call sub_405d1a
jmp r-xdata
sub_40645d
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
push esi
push edi
mov [ ebp - 0x8 ] eax
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp [ rw-data ] bl
jne r-xdata
mov [ rw-data ] eax
xor eax eax
inc eax
jmp r-xdata
push [ rw-data ]
mov esi [ ebp - 0xc ]
sub esi [ rw-data ]
mov edi [ ebp - 0x8 ]
push [ rw-data ]
mov ecx [ rw-data ]
sbb edi [ rw-data ]
call sub_403729
add eax [ rw-data ]
adc edx [ rw-data ]
push edx
push eax
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push edi
push esi
call sub_40a180
cmp [ ebp - 0x4 ] ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_406364
cmp eax ebx
jne r-xdata
mov eax [ rw-data ]
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
jmp r-xdata
push ebx
push [ rw-data ]
push rw-data
call sub_404970
push [ rw-data ]
push rw-data
call sub_402255
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
sub_406603
push ebp
mov ebp esp
mov ecx [ rw-data ]
sub esp 0x114
cmp ecx 0xffffffff
jne r-xdata
mov eax [ rw-data ]
lea eax [ ebp - 0x114 ]
push eax
mov [ ebp - 0x114 ] 0x114
call [ GetVersionExW@IAT ]
mov ecx [ ebp - 0x104 ]
mov eax [ ebp - 0x110 ]
mov edx [ ebp - 0x10c ]
mov [ rw-data ] ecx
mov [ rw-data ] eax
mov [ rw-data ] edx
jmp r-xdata
mov eax 0x501
leave
retn
shl eax 0x8
add eax [ rw-data ]
leave
retn
cmp ecx 0x2
jne r-xdata
sub_4066c6
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
test bl bl
sete al
cmp al 0x2a
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp al 0x3f
je r-xdata
cmp al 0x2e
jne r-xdata
mov al 0x1
jmp r-xdata
test bl bl
je r-xdata
cmp al bl
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
lea ebx [ edi + 0x1 ]
cmp [ ebx ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor al al
jmp r-xdata
inc esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp al 0x2e
jne r-xdata
push [ ebp + 0x10 ]
push esi
push edi
call sub_4066c6
inc esi
test al al
jne r-xdata
jmp r-xdata
push 0x2e
push esi
call sub_408f1e
cmp [ ebx ] 0x0
mov esi eax
jne r-xdata
cmp [ edi + 0x2 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
movzx eax [ esi ]
push [ ebp + 0x10 ]
push eax
call sub_40666f
push [ ebp + 0x10 ]
mov bl al
movzx eax [ edi ]
push eax
call sub_40666f
inc edi
test al al
je r-xdata
test bl bl
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp bl 0x5c
je r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
push r--data
push edi
mov [ ebp + 0xc ] esi
call sub_408f87
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp [ esi + 0x1 ] 0x0
je r-xdata
cmp bl al
je r-xdata
push 0x2e
inc esi
push esi
call sub_408f1e
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
push esi
push ebx
call sub_406685
neg eax
sbb eax eax
inc eax
jmp r-xdata
sub_4067c8
push ebp
mov ebp esp
sub esp 0x800
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
shr eax 0x1f
and al 0x1
and edi 0xffff
mov [ ebp + 0x10 ] al
je r-xdata
push ebx
call sub_406d40
push [ ebp + 0xc ]
mov ebx eax
call sub_406d40
push 0x6
mov esi eax
push esi
push r--data
call sub_40c5b2
test eax eax
je r-xdata
push ebx
call sub_408ef5
mov esi eax
cmp edi 0x2
je r-xdata
xor al al
jmp r-xdata
push [ ebp + 0x10 ]
push esi
cmp edi 0x2
jne r-xdata
cmp edi 0x1
jne r-xdata
cmp edi 0x3
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push ebx
call sub_4066c6
push ebx
call sub_406685
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov esi 0x400
push esi
lea eax [ ebp - 0x400 ]
push eax
push ebx
call sub_407045
push esi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
call sub_407045
cmp edi 0x2
je r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push ebx
call sub_4066a4
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x800 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_406685
test eax eax
jne r-xdata
cmp edi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
mov al [ esi + eax ]
cmp al 0x5c
je r-xdata
cmp edi 0x4
je r-xdata
mov al 0x1
jmp r-xdata
cmp al 0x2f
je r-xdata
push 0x0
lea eax [ ebp - 0x400 ]
push eax
call sub_406a38
test al al
je r-xdata
cmp edi 0x5
jne r-xdata
test al al
jne r-xdata
cmp edi 0x4
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
cmp [ ebp - 0x400 ] 0x0
je r-xdata
push 0x0
push ebx
call sub_406a38
test al al
jne r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x400 ]
push eax
call sub_408ef5
push eax
lea eax [ ebp - 0x800 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_4066a4
push [ ebp + 0x10 ]
lea eax [ ebp - 0x800 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call sub_406685
jmp r-xdata
test eax eax
jne r-xdata
sub_40694d
push esi
push edi
push 0x36c8
xor edi edi
mov esi ecx
push edi
push esi
call sub_408e46
mov eax 0x7fffffff
mov [ esi + 0x2d28 ] edi
mov [ esi + 0x2d20 ] edi
mov [ esi + 0x2d78 ] edi
mov [ esi + 0x2d6c ] edi
pop edi
mov [ esi + 0xc ] __pe_WINRAR_export_address_table
mov [ esi + 0x2d2c ] 0x3
mov [ esi + 0x2d8c ] 0x1
mov [ esi + 0x32b4 ] 0x4
mov [ esi + 0x2dd8 ] eax
mov [ esi + 0x2ddc ] eax
mov [ esi + 0x2de0 ] eax
mov [ esi + 0x2de4 ] eax
pop esi
retn
sub_4069e0
push esi
mov esi ecx
lea ecx [ esi + 0x281c ]
call sub_409674
xor ecx ecx
lea eax [ esi + 0x2d60 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
lea ecx [ esi + 0x2d90 ]
call sub_40cb59
lea ecx [ esi + 0x2db4 ]
call sub_40cb59
mov ecx esi
call sub_40694d
mov eax esi
pop esi
retn
sub_406a38
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
cmp [ esp + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
push r--data
push [ esp + 0x8 ]
call sub_408f87
xor eax eax
jmp r-xdata
push r--data
push eax
call sub_409300
jmp r-xdata
retn 0x8
neg eax
sbb eax eax
neg eax
sub_406a8d
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_409129
test eax eax
jbe r-xdata
pop esi
retn 0x4
cmp [ esi + eax * 2 - 0x2 ] 0x5c
je r-xdata
push r--data
push esi
call sub_4091c5
sub_406ab3
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
test esi esi
je r-xdata
cmp [ edi ] 0x0
mov eax edi
je r-xdata
cmp esi edi
je r-xdata
mov eax edi
test esi esi
je r-xdata
xor ecx ecx
push ebx
push edi
call sub_409129
cmp eax [ esp + 0x14 ]
jb r-xdata
pop edi
pop esi
retn 0xc
mov eax esi
inc eax
inc eax
inc ecx
inc ecx
cmp [ eax ] 0x0
jne r-xdata
push 0x5c
test esi esi
jne r-xdata
push edi
push esi
call sub_409153
xor eax eax
mov [ esi ] ax
jmp r-xdata
cmp [ eax ] 0x2f
jne r-xdata
pop ebx
mov edx ecx
sar edx 0x1
pop ebx
mov [ esi + edx * 2 ] bx
pop edx
mov [ eax ] dx
jmp r-xdata
sub_406b1d
push ebp
mov ebp esp
sub esp 0x400
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
mov esi 0x400
push esi
push edi
call [ GetFullPathNameA@IAT ]
test eax eax
je r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
cmp eax esi
jae r-xdata
pop edi
pop esi
leave
retn 0x8
push edi
lea eax [ ebp - 0x400 ]
push eax
jmp r-xdata
push [ ebp + 0xc ]
call sub_408fe8
sub_406b68
push ebp
mov ebp esp
sub esp 0x800
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ecx ] ax
cmp [ edi ] 0x0
je r-xdata
call sub_406603
test eax eax
je r-xdata
mov esi 0x1000000
push esi
lea eax [ ebp - 0x400 ]
push eax
push edi
call sub_40d131
lea eax [ ebp - 0x400 ]
push eax
push eax
call sub_406b1d
push esi
push [ ebp + 0xc ]
lea eax [ ebp - 0x400 ]
push eax
call sub_40d163
jmp r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x800 ]
push eax
mov esi 0x400
push esi
push edi
call [ GetFullPathNameW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn 0x8
cmp edi [ ebp + 0xc ]
je r-xdata
cmp eax esi
jae r-xdata
push edi
lea eax [ ebp - 0x800 ]
push eax
jmp r-xdata
push [ ebp + 0xc ]
call sub_409153
jmp r-xdata
sub_406c02
push esi
mov esi [ esp + 0x8 ]
movzx eax [ esi ]
push eax
call sub_40c5e6
movzx eax ax
add eax 0xffffffbf
cmp ax 0x19
ja r-xdata
xor eax eax
cmp [ esi + 0x2 ] 0x3a
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
retn 0x4
sub_406c2e
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
push esi
mov [ ebx ] ax
call sub_406c02
test al al
je r-xdata
push edi
push 0x5c
pop edi
cmp [ esi ] di
jne r-xdata
movzx eax [ esi ]
push eax
push r--data
push 0x4
push ebx
call sub_40936c
add esp 0x10
jmp r-xdata
pop edi
cmp [ esi + 0x2 ] di
jne r-xdata
pop esi
pop ebx
retn 0x8
push edi
lea eax [ esi + 0x4 ]
push eax
call sub_409292
test eax eax
je r-xdata
push edi
add eax 0x2
push eax
call sub_409292
test eax eax
je r-xdata
push esi
call sub_409129
sub eax esi
sar eax 0x1
inc eax
jmp r-xdata
mov edi eax
push edi
push esi
push ebx
call sub_409183
xor eax eax
mov [ ebx + edi * 2 ] ax
sub_406cab
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x14 ]
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
mov esi [ ebp + 0x10 ]
je r-xdata
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov [ esi ] ax
push edi
push esi
push [ ebp + 0x8 ]
call sub_40d163
jmp r-xdata
mov esi [ ebp + 0x10 ]
cmp esi eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
xor eax eax
mov [ esi + edi * 2 - 0x2 ] ax
test edi edi
jbe r-xdata
push edi
push eax
push esi
call sub_409183
jmp r-xdata
sub_406cfe
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
test edi edi
jbe r-xdata
mov [ esi ] 0x0
push edi
push esi
push [ esp + 0x14 ]
call sub_40d131
mov [ esi + edi - 0x1 ] 0x0
jmp r-xdata
pop edi
mov eax esi
pop esi
retn 0xc
sub_406d40
push esi
mov esi [ esp + 0x8 ]
mov al [ esi ]
push edi
xor edi edi
mov ecx esi
test al al
je r-xdata
mov eax esi
movsx eax al
push eax
call sub_406a75
test al al
je r-xdata
push ecx
call sub_404123
mov ecx eax
mov al [ ecx ]
test al al
jne r-xdata
lea edi [ ecx + 0x1 ]
test edi edi
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax edi
jmp r-xdata
lea edi [ esi + 0x1 ]
cmp [ edi ] 0x3a
jne r-xdata
pop edi
pop esi
retn 0x4
push esi
call sub_404123
cmp eax edi
lea eax [ esi + 0x2 ]
je r-xdata
sub_406d97
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_409129
mov ecx eax
jmp r-xdata
dec ecx
jns r-xdata
movzx eax [ esi + ecx * 2 ]
push eax
call sub_406a75
test al al
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ esi + ecx * 2 + 0x2 ]
jmp r-xdata
mov eax esi
cmp [ esi + 0x2 ] 0x3a
lea eax [ esi + 0x4 ]
je r-xdata
pop esi
retn 0x4
sub_406def
push ebp
mov ebp esp
sub esp 0x400
push esi
mov esi [ ebp + 0x8 ]
mov al [ esi ]
test al al
je r-xdata
cmp [ esi ] 0x0
je r-xdata
lea ecx [ esi + 0x2 ]
cmp [ esi ] 0x2e
jne r-xdata
push edi
mov al [ ecx - 0x1 ]
inc ecx
test al al
jne r-xdata
cmp [ ecx - 0x1 ] 0x2e
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x1 ] 0x2e
jne r-xdata
cmp al 0x5c
jne r-xdata
cmp [ esi + 0x1 ] 0x3a
jne r-xdata
movsx eax al
push eax
call sub_406a75
test al al
je r-xdata
cmp [ ecx ] 0x2e
jne r-xdata
mov eax esi
pop esi
leave
retn 0x8
push 0x400
push esi
lea eax [ ebp - 0x400 ]
push eax
call sub_40c630
lea eax [ ebp - 0x400 ]
push eax
push [ ebp + 0xc ]
call sub_408fe8
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x0
jne r-xdata
mov al [ edi ]
mov ecx edi
test al al
je r-xdata
cmp [ esi + 0x1 ] al
jne r-xdata
lea edi [ esi + 0x2 ]
jmp r-xdata
movsx eax [ ecx + 0x1 ]
push eax
call sub_406a75
test al al
je r-xdata
mov esi eax
cmp edi esi
je r-xdata
mov dl al
push 0x5c
lea eax [ esi + 0x2 ]
push eax
call sub_408f1e
test eax eax
je r-xdata
lea esi [ ecx + 0x2 ]
pop edi
cmp [ edi ] 0x0
mov esi edi
jne r-xdata
cmp dl 0x2e
jne r-xdata
lea edi [ ecx + 0x1 ]
jmp r-xdata
push 0x5c
inc eax
push eax
call sub_408f1e
test eax eax
je r-xdata
mov al [ esi ]
mov edi esi
test al al
je r-xdata
inc ecx
mov dl [ ecx ]
test dl dl
jne r-xdata
lea edi [ eax + 0x1 ]
movsx eax dl
push eax
call sub_406a75
test al al
je r-xdata
sub_406eee
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
sub esp 0x800
push edi
mov edi eax
test cx cx
je r-xdata
cmp [ edi ] 0x0
je r-xdata
movzx edx cx
lea ecx [ eax + 0x4 ]
cmp [ edi ] 0x2e
jne r-xdata
push esi
inc ecx
movzx eax [ ecx - 0x3 ]
inc ecx
movzx edx ax
test ax ax
jne r-xdata
cmp [ ecx - 0x2 ] 0x2e
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ edi + 0x2 ] 0x2e
jne r-xdata
cmp [ esi ] 0x5c
jne r-xdata
cmp [ edi + 0x2 ] 0x3a
jne r-xdata
movzx eax dx
push eax
call sub_406a75
test al al
je r-xdata
cmp [ ecx ] 0x2e
jne r-xdata
mov eax edi
pop edi
leave
retn 0x8
push 0x400
push edi
lea eax [ ebp - 0x800 ]
push eax
call sub_40c658
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
call sub_409153
lea eax [ edi + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
movzx eax [ esi ]
mov edx esi
test ax ax
je r-xdata
cmp [ esi + 0x2 ] 0x5c
jne r-xdata
lea esi [ edi + 0x4 ]
movzx eax [ ecx + 0x2 ]
push eax
call sub_406a75
test al al
je r-xdata
mov edi eax
cmp esi edi
je r-xdata
movzx ecx ax
push 0x5c
lea eax [ esi + 0x4 ]
push eax
call sub_409292
test eax eax
je r-xdata
lea edi [ ecx + 0x4 ]
pop esi
cmp [ esi ] 0x0
mov edi esi
jne r-xdata
cmp cx 0x2e
jne r-xdata
lea esi [ edx + 0x2 ]
jmp r-xdata
push 0x5c
add eax 0x2
push eax
call sub_409292
test eax eax
je r-xdata
cmp [ edi ] 0x0
mov esi edi
je r-xdata
inc edx
inc edx
movzx ecx [ edx ]
test cx cx
jne r-xdata
lea esi [ eax + 0x2 ]
movzx eax cx
push eax
call sub_406a75
test al al
je r-xdata
sub_407045
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0xc ]
push edi
dec esi
call sub_406d40
sub eax edi
cmp esi eax
jl r-xdata
push esi
push edi
mov edi [ esp + 0x18 ]
push edi
call sub_40901c
mov [ esi + edi ] 0x0
pop edi
pop esi
retn 0xc
push edi
call sub_406d40
mov esi eax
sub esi edi
sub_40707b
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0xc ]
push edi
dec esi
call sub_406d97
sub eax edi
sar eax 0x1
cmp esi eax
jl r-xdata
push esi
push edi
mov edi [ esp + 0x18 ]
push edi
call sub_409183
xor eax eax
mov [ edi + esi * 2 ] ax
pop edi
pop esi
retn 0xc
push edi
call sub_406d97
mov esi eax
sub esi edi
sar esi 0x1
sub_4070b7
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_406d97
lea ecx [ esi + 0x4 ]
cmp eax ecx
jb r-xdata
xor ecx ecx
mov [ eax ] cx
pop esi
retn 0x4
cmp [ esi + 0x2 ] 0x3a
jne r-xdata
dec eax
dec eax
add esi 0x8
cmp eax esi
jb r-xdata
sub_4070e2
push ebp
mov ebp esp
sub esp 0x800
push esi
mov esi [ ebp + 0x8 ]
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push esi
call sub_40707b
lea eax [ ebp - 0x800 ]
push eax
push 0x0
call sub_406a38
test al al
je r-xdata
cmp [ esi ] 0x5c
jne r-xdata
mov al 0x1
jmp r-xdata
push esi
call sub_406c02
test al al
je r-xdata
cmp [ esi + 0x2 ] 0x5c
je r-xdata
pop esi
leave
retn 0x4
xor eax eax
movzx eax [ esi + 0x4 ]
push eax
call sub_406a75
test al al
je r-xdata
xor eax eax
inc eax
jmp r-xdata
sub_407148
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40700d
cmp [ ebp + 0xc ] 0x0
jne r-xdata
test eax eax
jne r-xdata
test eax eax
je r-xdata
push [ ebp + 0xc ]
inc eax
push eax
call sub_408fe8
push r--data
push [ ebp + 0x8 ]
call sub_40910b
pop ebp
jmp sub_40910b
pop ebp
retn 0x8
mov [ eax ] 0x0
jmp r-xdata
sub_407187
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn 0x8
cmp [ esi ] 0x0
je r-xdata
push esi
call sub_407029
cmp [ esp + 0xc ] 0x0
jne r-xdata
test eax eax
jne r-xdata
test eax eax
je r-xdata
push [ esp + 0xc ]
add eax 0x2
push eax
call sub_409153
push r--data
push esi
call sub_4091c5
push [ esp + 0xc ]
push esi
call sub_4091c5
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
sub_4071da
call sub_405922
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call sub_408d06
and [ rw-data ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call sub_408d06
and [ rw-data ] 0x0
and [ rw-data ] 0x0
retn
push eax
call sub_408d06
sub_407222
sub esp 0xc
and [ esp ] 0x0
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
mov edi [ rw-data ]
push 0x0
mov ebp 0x2000
push ebp
push esi
push edi
call sub_401200
mov ebx eax
mov eax [ esp + 0x2c ]
mov ecx edx
cdq
cmp ecx edx
mov [ esp + 0x18 ] ecx
jl r-xdata
sub edi ebx
sbb esi ecx
mov [ rw-data ] edi
mov [ rw-data ] esi
jg r-xdata
cmp [ esp + 0x10 ] esi
je r-xdata
sub edi ebx
push 0x0
sbb esi ecx
mov ecx [ rw-data ]
push esi
push edi
call sub_403c6d
mov ecx [ rw-data ]
call sub_403729
mov ecx [ rw-data ]
push ebx
push [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] edx
call sub_403df3
cdq
mov ecx eax
mov esi edx
mov eax ebx
cdq
mov [ rw-data ] ecx
mov [ rw-data ] esi
cmp ecx eax
jne r-xdata
cmp ebx eax
jbe r-xdata
cmp edi [ esp + 0x2c ]
jg r-xdata
mov eax [ rw-data ]
pop edi
pop esi
pop ebp
pop ebx
cmp [ rw-data ] eax
jae r-xdata
cmp esi edx
jne r-xdata
cmp [ rw-data ] esi
jl r-xdata
mov eax [ esp ]
neg eax
sbb eax eax
and eax 0xfffffffe
inc eax
inc eax
add esp 0xc
retn 0x10
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov eax ecx
sub eax [ esp + 0x2c ]
lea eax [ eax + ebx - 0x4 ]
jmp r-xdata
jg r-xdata
mov [ rw-data ] eax
cmp eax ecx
jae r-xdata
add [ rw-data ] 0xffffe000
mov ecx [ rw-data ]
push esi
adc [ rw-data ] 0xffffffff
push [ rw-data ]
push [ rw-data ]
call sub_403c6d
mov ecx [ rw-data ]
push ebp
push [ rw-data ]
call sub_403df3
cdq
mov [ rw-data ] eax
mov [ rw-data ] edx
cmp eax ebp
jne r-xdata
cmp [ rw-data ] ebp
jb r-xdata
cmp [ eax ] 0x50
jne r-xdata
jmp r-xdata
cmp edx esi
jne r-xdata
dec eax
push 0x4
push [ esp + 0x2c ]
push eax
call sub_4090ae
mov ecx [ rw-data ]
test eax eax
mov eax [ rw-data ]
je r-xdata
push 0x3
push ecx
push [ rw-data ]
call sub_408e73
mov ecx [ esp + 0x18 ]
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1fff ]
jmp r-xdata
sub eax ecx
cdq
sub [ rw-data ] eax
mov [ esp + 0x10 ] 0x1
sbb [ rw-data ] edx
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
push 0x0
pop esi
sub eax ebx
sbb edx ecx
push esi
add eax 0x1fff
push ebp
adc edx esi
push edx
push eax
call sub_401070
xor edi edi
mov [ esp + 0x2c ] eax
inc edi
jmp r-xdata
mov [ rw-data ] eax
cmp eax ecx
jae r-xdata
cmp [ eax ] 0x50
jne r-xdata
jmp r-xdata
dec eax
push 0x4
push [ esp + 0x2c ]
push eax
call sub_4090ae
mov ecx [ rw-data ]
test eax eax
mov eax [ rw-data ]
je r-xdata
push 0x3
push ecx
push [ rw-data ]
call sub_408e73
inc edi
sub eax ecx
cdq
sub [ rw-data ] eax
mov [ esp + 0x10 ] 0x1
sbb [ rw-data ] edx
sub_40747d
push ebp
mov ebp esp
sub esp 0x64
push r--data
lea eax [ ebp - 0x7 ]
push eax
mov [ ebp - 0x8 ] 0x50
call sub_408fe8
push 0x38
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407222
cmp eax 0x2
je r-xdata
xor eax eax
mov eax [ rw-data ]
sub eax [ rw-data ]
push 0x3c
cdq
add eax [ rw-data ]
adc edx [ rw-data ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x64 ]
push eax
mov [ ebp - 0x24 ] edx
call sub_404680
test eax eax
jne r-xdata
push ebx
push esi
push edi
lea eax [ ebp - 0x54 ]
push eax
call sub_404ca0
movzx ebx ax
lea eax [ ebp - 0x50 ]
push eax
call sub_404ca0
movzx edi ax
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp + 0xc ] edi
call sub_404bd5
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp - 0xc ] edx
call sub_404bd5
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x14 ] edx
call sub_404bd5
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x1c ] edx
call sub_404bd5
mov si [ rw-data ]
mov ecx 0xffff
mov [ ebp - 0x8 ] eax
mov eax ecx
mov [ ebp - 0x4 ] edx
cmp si ax
je r-xdata
push 0x33
pop eax
jmp r-xdata
cmp [ rw-data ] ax
je r-xdata
cmp si bx
jne r-xdata
leave
retn 0x8
mov eax [ rw-data ]
mov edx [ rw-data ]
cmp eax ecx
jne r-xdata
cmp [ rw-data ] di
jne r-xdata
pop edi
pop esi
pop ebx
cmp eax [ ebp - 0x10 ]
jne r-xdata
test edx edx
je r-xdata
cmp edx [ ebp - 0xc ]
jne r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
cmp eax ecx
jne r-xdata
cmp eax [ ebp - 0x18 ]
jne r-xdata
test edx edx
je r-xdata
cmp edx [ ebp - 0x14 ]
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
cmp edx 0xffffffff
jne r-xdata
cmp edx [ ebp - 0x20 ]
jne r-xdata
test eax eax
je r-xdata
cmp eax [ ebp - 0x1c ]
jne r-xdata
mov edi [ rw-data ]
cmp edi 0xffffffff
jne r-xdata
cmp edi [ ebp - 0x8 ]
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ rw-data ] eax
jne r-xdata
mov eax ecx
cmp si ax
jne r-xdata
cmp [ rw-data ] ax
jne r-xdata
mov [ rw-data ] bx
cmp [ rw-data ] ecx
jne r-xdata
mov ax [ ebp + 0xc ]
mov [ rw-data ] ax
cmp [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
cmp edi 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x14 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x28 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x24 ]
mov [ rw-data ] eax
mov [ rw-data ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x1c ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
sub_4076cb
sub esp 0x24
push ebx
push ebp
push esi
mov esi [ rw-data ]
xor ebp ebp
cmp esi ebp
push edi
mov edi [ rw-data ]
mov [ esp + 0x10 ] ebp
jg r-xdata
push ebp
push 0x2000
push esi
push edi
call sub_401200
mov ebx eax
cmp ebx 0x12
cdq
mov ebp eax
mov [ esp + 0x18 ] edx
jle r-xdata
jl r-xdata
sub edi ebp
sbb esi edx
mov [ rw-data ] edi
mov [ rw-data ] esi
mov ecx [ rw-data ]
sub edi ebp
push 0x0
sbb esi edx
push esi
push edi
call sub_403c6d
mov ecx [ rw-data ]
call sub_403729
push ebx
push [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] edx
call sub_404527
cdq
mov [ rw-data ] eax
mov [ rw-data ] edx
cmp eax ebp
jne r-xdata
mov ecx [ rw-data ]
push ebp
push ebp
push ebp
call sub_403c6d
push [ rw-data ]
push [ rw-data ]
call sub_404527
mov esi [ rw-data ]
cdq
mov ecx eax
mov edi edx
mov eax esi
cdq
mov [ rw-data ] ecx
mov [ rw-data ] edi
cmp ecx eax
jne r-xdata
cmp edi 0x2000
ja r-xdata
xor ebp ebp
mov eax [ esp + 0x14 ]
cmp [ esp + 0x38 ] eax
jg r-xdata
push 0x78
call sub_408c71
push eax
push rw-data
call sub_40a123
pop ecx
pop ecx
push 0x2
cmp edx [ esp + 0x18 ]
jne r-xdata
cmp edi edx
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
call sub_404c8d
mov [ rw-data ] ax
lea eax [ esp + 0x22 ]
push eax
call sub_404c8d
mov [ rw-data ] ax
lea eax [ esp + 0x24 ]
push eax
call sub_404c8d
movzx eax ax
cdq
mov [ rw-data ] eax
lea eax [ esp + 0x26 ]
push eax
mov [ rw-data ] edx
call sub_404c8d
movzx eax ax
cdq
mov [ rw-data ] eax
lea eax [ esp + 0x28 ]
push eax
mov [ rw-data ] edx
call sub_404ca0
mov [ rw-data ] eax
lea eax [ esp + 0x2c ]
push eax
mov [ rw-data ] ebp
call sub_404ca0
mov [ rw-data ] eax
lea eax [ esp + 0x30 ]
push eax
mov [ rw-data ] ebp
call sub_404c8d
add ebx 0x4c
adc edi ebp
push edi
push ebx
mov [ rw-data ] ax
call sub_40747d
cmp eax ebp
jne r-xdata
push 0x33
jmp r-xdata
cmp [ esp + 0x10 ] ebp
jne r-xdata
add [ rw-data ] 0xffffe000
mov ecx [ rw-data ]
push ebp
adc [ rw-data ] 0xffffffff
push [ rw-data ]
push [ rw-data ]
call sub_403c6d
push esi
push [ rw-data ]
call sub_404527
cdq
mov [ rw-data ] eax
mov [ rw-data ] edx
cmp eax esi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn 0x8
mov ecx [ rw-data ]
lea ebx [ ecx + ebx - 0x16 ]
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ esi + ecx - 0x16 ]
jmp r-xdata
mov eax [ rw-data ]
add eax [ rw-data ]
mov ecx [ rw-data ]
adc ecx [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
xor eax eax
pop eax
jmp r-xdata
cmp edx ebp
jne r-xdata
mov [ rw-data ] ebx
cmp ebx ecx
jae r-xdata
mov [ rw-data ] eax
cmp eax ecx
jae r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1fff ]
jmp r-xdata
cmp [ ebx ] 0x50
jne r-xdata
jmp r-xdata
cmp [ eax ] 0x50
jne r-xdata
jmp r-xdata
mov [ rw-data ] eax
cmp eax ecx
jae r-xdata
dec ebx
push 0x4
push rw-data
push ebx
call sub_4090ae
mov ecx [ rw-data ]
test eax eax
je r-xdata
push 0x3
push ecx
push [ rw-data ]
call sub_40901c
jmp r-xdata
dec eax
push 0x4
push rw-data
push eax
call sub_4090ae
test eax eax
mov eax [ rw-data ]
je r-xdata
cmp [ eax ] 0x50
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
sub eax ecx
cdq
sub [ rw-data ] eax
mov [ esp + 0x10 ] 0x1
sbb [ rw-data ] edx
mov ebx [ rw-data ]
mov ebx [ esp + 0x38 ]
mov edi [ esp + 0x3c ]
push 0x0
mov eax ebx
sub eax ebp
pop ebp
mov ecx edi
sbb ecx [ esp + 0x18 ]
push ebp
add eax 0x1fff
mov esi 0x2000
push esi
adc ecx ebp
push ecx
push eax
call sub_401070
mov [ esp + 0x14 ] eax
mov [ esp + 0x38 ] 0x1
cmp [ esp + 0x10 ] ebp
jne r-xdata
sub eax [ rw-data ]
mov edi [ esp + 0x3c ]
mov ebx [ esp + 0x38 ]
cdq
sub [ rw-data ] eax
sbb [ rw-data ] edx
jmp r-xdata
mov ecx [ rw-data ]
dec eax
push 0x4
push rw-data
push eax
call sub_4090ae
mov ecx [ rw-data ]
test eax eax
mov eax [ rw-data ]
je r-xdata
push 0x3
push ecx
push [ rw-data ]
call sub_40901c
inc [ esp + 0x38 ]
cmp [ esp + 0x10 ] ebp
je r-xdata
mov eax [ rw-data ]
sub eax [ rw-data ]
push 0x16
cdq
add eax [ rw-data ]
adc edx [ rw-data ]
mov [ rw-data ] eax
lea eax [ esp + 0x20 ]
push eax
mov [ rw-data ] edx
call sub_404680
test eax eax
jne r-xdata
sub eax ecx
cdq
sub [ rw-data ] eax
mov [ esp + 0x10 ] 0x1
sbb [ rw-data ] edx
xor ebp ebp
sub_407ab4
mov cx [ rw-data ]
push esi
xor edx edx
xor esi esi
cmp cx dx
je r-xdata
mov eax esi
pop esi
retn
mov eax [ rw-data ]
cmp eax edx
jg r-xdata
push edx
push edx
movzx eax cx
push edx
push eax
call sub_404a44
test eax eax
je r-xdata
jne r-xdata
push 0x6a
call sub_408c71
push eax
push rw-data
call sub_40a123
pop ecx
xor esi esi
pop ecx
inc esi
cmp [ rw-data ] edx
jne r-xdata
sub_407b03
push ebp
mov ebp esp
sub esp 0x2c
push 0x2a
lea eax [ ebp - 0x2c ]
push eax
call sub_404680
test eax eax
jne r-xdata
mov al [ ebp - 0x2c ]
mov [ rw-data ] al
mov al [ ebp - 0x2b ]
mov [ rw-data ] al
mov al [ ebp - 0x2a ]
mov [ rw-data ] al
mov al [ ebp - 0x29 ]
mov [ rw-data ] al
push esi
lea eax [ ebp - 0x28 ]
push eax
call sub_404c8d
mov [ rw-data ] ax
lea eax [ ebp - 0x26 ]
push eax
call sub_404c8d
mov [ rw-data ] ax
lea eax [ ebp - 0x24 ]
push eax
call sub_404c8d
mov [ rw-data ] ax
lea eax [ ebp - 0x22 ]
push eax
call sub_404c8d
mov [ rw-data ] ax
lea eax [ ebp - 0x20 ]
push eax
call sub_404ca0
mov [ rw-data ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_404ca0
mov [ rw-data ] eax
lea eax [ ebp - 0x18 ]
xor esi esi
push eax
mov [ rw-data ] esi
call sub_404ca0
mov [ rw-data ] eax
lea eax [ ebp - 0x14 ]
push eax
mov [ rw-data ] esi
call sub_404c8d
mov [ rw-data ] ax
lea eax [ ebp - 0x12 ]
push eax
call sub_404c8d
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
call sub_404c8d
mov [ rw-data ] ax
lea eax [ ebp - 0xe ]
push eax
call sub_404c8d
mov [ rw-data ] ax
lea eax [ ebp - 0xc ]
push eax
call sub_404c8d
mov [ rw-data ] ax
lea eax [ ebp - 0xa ]
push eax
call sub_404ca0
mov [ rw-data ] eax
lea eax [ ebp - 0x6 ]
push eax
call sub_404ca0
cmp [ rw-data ] 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
jne r-xdata
push 0x33
pop eax
leave
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
xor eax eax
pop esi
leave
retn
cmp [ rw-data ] esi
jne r-xdata
mov [ rw-data ] 0x1
sub_407c4d
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push esi
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0xc
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
cmp [ ebp + 0xc ] 0x4
jb r-xdata
push ebx
push edi
pop edi
pop ebx
cmp edi 0x1
jne r-xdata
push 0xfffffffc
pop eax
sub eax ebx
add [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] 0x4
lea esi [ esi + ebx + 0x4 ]
jae r-xdata
cmp [ ebp + 0x10 ] 0x0
push 0x4
mov [ rw-data ] 0x1
pop edi
jne r-xdata
push esi
call sub_404c8d
movzx edi ax
lea eax [ esi + 0x2 ]
push eax
call sub_404c8d
movzx ebx ax
mov eax [ ebp + 0xc ]
add eax 0xfffffffc
cmp ebx eax
ja r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x4 ]
push eax
call sub_404bd5
push 0xc
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] edx
pop edi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
lea eax [ edi + esi ]
push eax
call sub_404bd5
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] edx
add edi 0x8
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0xffff
cmp [ rw-data ] ax
jne r-xdata
lea eax [ edi + esi ]
push eax
call sub_404bd5
mov [ rw-data ] eax
mov [ rw-data ] edx
add edi 0x8
add edi esi
push edi
call sub_404ca0
mov [ rw-data ] ax
sub_407dce
push ebp
mov ebp esp
sub esp 0x1c
push 0x1a
lea eax [ ebp - 0x1c ]
push eax
call sub_404680
test eax eax
jne r-xdata
mov al [ ebp - 0x1c ]
mov [ rw-data ] al
mov al [ ebp - 0x1b ]
mov [ rw-data ] al
lea eax [ ebp - 0x1a ]
push eax
call sub_404c8d
mov [ rw-data ] ax
lea eax [ ebp - 0x18 ]
push eax
call sub_404c8d
mov [ rw-data ] ax
lea eax [ ebp - 0x16 ]
push eax
call sub_404c8d
mov [ rw-data ] ax
lea eax [ ebp - 0x14 ]
push eax
call sub_404c8d
mov [ rw-data ] ax
lea eax [ ebp - 0x12 ]
push eax
call sub_404ca0
mov [ rw-data ] eax
lea eax [ ebp - 0xe ]
push eax
call sub_404ca0
and [ rw-data ] 0x0
mov [ rw-data ] eax
lea eax [ ebp - 0xa ]
push eax
call sub_404ca0
and [ rw-data ] 0x0
mov [ rw-data ] eax
lea eax [ ebp - 0x6 ]
push eax
call sub_404c8d
mov [ rw-data ] ax
lea eax [ ebp - 0x4 ]
push eax
call sub_404c8d
test [ rw-data ] 0x8
mov [ rw-data ] ax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
je r-xdata
push 0x33
pop eax
leave
retn
xor eax eax
leave
retn
mov eax [ rw-data ]
mov ecx [ eax + 0x18 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x8 ]
mov [ rw-data ] ecx
mov edx [ eax + 0xc ]
mov [ rw-data ] edx
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov ecx [ eax + 0x10 ]
mov [ rw-data ] ecx
mov eax [ eax + 0x14 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] eax
sub_407f07
push ebp
mov ebp esp
mov eax 0x316c
call sub_4012c0
push ebx
push esi
push edi
lea ecx [ ebp - 0x316c ]
call sub_403f1e
xor ebx ebx
push ebx
lea eax [ ebp - 0x316c ]
push eax
mov esi rw-data
push esi
mov edi rw-data
push edi
call sub_405269
test al al
je r-xdata
push esi
push edi
push esi
push edi
mov ecx rw-data
call sub_401bc0
xor eax eax
cmp [ ebp - 0x255c ] al
sete al
dec eax
and eax 0x43
add eax 0x9
cmp [ ebp - 0x255c ] bl
jne r-xdata
mov eax [ ebp - 0x256c ]
mov ecx [ ebp - 0x2568 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
push esi
lea eax [ ebp - 0x82c ]
push eax
mov [ rw-data ] ecx
mov [ rw-data ] ecx
xor edi edi
call sub_409153
push ebx
jmp r-xdata
lea eax [ ebp - 0x82c ]
push eax
call sub_4022c9
lea ecx [ ebp - 0x1ccc ]
call sub_403f1e
push ebx
lea eax [ ebp - 0x1ccc ]
push eax
lea eax [ ebp - 0x82c ]
push eax
push ebx
call sub_405269
test al al
jne r-xdata
mov eax [ ebp - 0x10cc ]
add [ rw-data ] eax
mov eax [ ebp - 0x10c8 ]
push esi
adc [ rw-data ] eax
lea eax [ ebp - 0x82c ]
push eax
inc edi
call sub_409153
push edi
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_4043b4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov edx 0x101d0
jg r-xdata
push 0x9
mov ecx edx
xor eax eax
mov ecx [ rw-data ]
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
call sub_407ab4
xor edi edi
inc edi
cmp eax edi
mov [ ebp - 0x4 ] eax
jg r-xdata
push eax
push ecx
call sub_4076cb
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
cmp ecx edx
jb r-xdata
mov [ rw-data ] ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
cmp [ rw-data ] ebx
mov cx [ rw-data ]
jle r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov [ rw-data ] bl
mov [ rw-data ] 0x1
cmp cx bx
jne r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov eax [ rw-data ]
sbb eax [ rw-data ]
mov [ rw-data ] ecx
cmp eax ebx
mov [ rw-data ] eax
mov edi 0xa0
jg r-xdata
mov ax [ rw-data ]
cmp cx ax
je r-xdata
or [ rw-data ] 0xffffffff
cmp [ rw-data ] ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ecx ]
push edi
call [ eax ]
mov eax [ rw-data ]
or eax [ rw-data ]
jne r-xdata
jl r-xdata
jbe r-xdata
mov eax [ rw-data ]
or eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
or eax [ rw-data ]
je r-xdata
push edi
call sub_408c71
push eax
push esi
call sub_40a123
jmp r-xdata
cmp ecx ebx
jae r-xdata
push 0x7c
call sub_408c71
push eax
push esi
call sub_40a123
pop ecx
pop ecx
mov [ ebp - 0x4 ] edi
push 0x78
call sub_408c71
push eax
push esi
call sub_40a123
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xb
push [ rw-data ]
push [ rw-data ]
call sub_40487a
cmp eax 0x3
jne r-xdata
mov eax [ rw-data ]
or eax [ rw-data ]
jne r-xdata
push edi
call sub_408c71
push eax
push esi
call sub_40a123
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] ebx
pop ecx
mov [ ebp - 0x4 ] 0x2
pop ecx
cmp eax ebx
jl r-xdata
mov [ rw-data ] ebx
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
push 0x4
mov ebx rw-data
push ebx
call sub_404680
test eax eax
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
jg r-xdata
push [ rw-data ]
and [ rw-data ] 0x0
push [ rw-data ]
and [ rw-data ] 0x0
call sub_40487a
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
push 0x4
push rw-data
push ebx
call sub_4090ae
test eax eax
je r-xdata
push 0x3
pop eax
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
push edi
call sub_408c71
push eax
push esi
call sub_40a123
pop ecx
pop ecx
cmp ecx ebx
jbe r-xdata
push edi
call sub_408c71
push eax
push esi
call sub_40a123
pop ecx
pop ecx
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push 0x4
push ebx
call sub_404680
test eax eax
je r-xdata
push [ rw-data ]
push [ rw-data ]
call sub_40487a
mov esi eax
test esi esi
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x1
mov [ rw-data ] ebx
jg r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ ebp + 0x8 ]
and [ rw-data ] 0x0
test eax eax
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
push 0x4
push rw-data
push ebx
call sub_4090ae
test eax eax
jne r-xdata
call sub_4025b0
xor ebx ebx
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x3
jmp r-xdata
cmp [ rw-data ] 0x4
jne r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
xor ebx ebx
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
pop eax
jmp r-xdata
push edi
call sub_408c71
push eax
push esi
call sub_40a123
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x2
cmp [ rw-data ] eax
je r-xdata
sub_408387
call sub_407b03
test eax eax
jne r-xdata
retn
mov al [ rw-data ]
cmp al 0x12
jae r-xdata
push 0x12
pop eax
movzx eax al
jmp r-xdata
mov ecx [ rw-data ]
mov [ ecx + 0x1c ] eax
movzx eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + 0x20 ] eax
xor eax eax
sub_4083bd
push esi
push 0x2004
xor esi esi
call sub_408ced
push 0x20001
mov [ rw-data ] eax
call sub_408ced
mov ecx [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp ecx esi
je r-xdata
mov ecx rw-data
call sub_40193c
push 0x4
pop eax
pop esi
retn
cmp eax esi
je r-xdata
push r--data
add ecx 0x2000
push rw-data
mov [ rw-data ] ecx
mov [ rw-data ] 0x50
mov [ rw-data ] 0x50
mov [ rw-data ] 0x50
mov [ rw-data ] 0x4b
mov [ rw-data ] 0x4b
mov [ rw-data ] 0x4b
call sub_408fe8
push r--data
push rw-data
call sub_408fe8
push r--data
push rw-data
call sub_408fe8
push esi
call sub_407f07
cmp eax 0x4c
je r-xdata
call sub_4071da
mov eax esi
pop esi
retn
cmp eax esi
jle r-xdata
mov esi eax
sub_408496
push ebp
mov ebp esp
mov eax 0x3438
call sub_4012c0
push edi
push 0x5c
push [ ebp + 0x8 ]
mov edi ecx
call sub_409292
test eax eax
lea eax [ ebp - 0x1438 ]
jne r-xdata
push [ ebp + 0x8 ]
push eax
call sub_409153
push ebx
lea ecx [ ebp - 0xc38 ]
call sub_403602
push 0x4
lea eax [ ebp - 0x1438 ]
push eax
xor ebx ebx
push ebx
lea ecx [ ebp - 0xc38 ]
call sub_40380e
test al al
jne r-xdata
push 0x400
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
push 0x5c
lea eax [ ebp - 0x1438 ]
push eax
call sub_4092bf
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp + 0xb ] bl
mov [ ebp - 0x8 ] ebx
push esi
lea ecx [ ebp - 0xc38 ]
call sub_4037eb
jmp r-xdata
pop edi
leave
retn 0x4
add eax 0x2
mov eax [ ebp - 0x4 ]
cdq
push ebx
push edx
push eax
lea ecx [ ebp - 0xc38 ]
call sub_403c6d
push 0x80002
call sub_408ced
mov [ edi ] eax
lea ecx [ ebp - 0xc38 ]
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0xc38 ]
call sub_403729
mov [ ebp - 0x10 ] eax
push 0x2000
lea eax [ ebp - 0x3438 ]
push eax
lea ecx [ ebp - 0xc38 ]
call sub_403df3
mov [ ebp - 0xc ] eax
add eax 0xfffffff0
xor esi esi
cmp eax ebx
jl r-xdata
pop ebx
call sub_4037eb
pop esi
push 0x80000
push eax
call sub_403df3
cmp [ ebp + 0xb ] 0x0
mov [ edi + 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
xor ebx ebx
push ebx
lea eax [ eax + ecx - 0x10 ]
push ebx
push eax
lea ecx [ ebp - 0xc38 ]
call sub_403c6d
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x80
jb r-xdata
lea ebx [ ebp + esi - 0x3438 ]
cmp [ ebx ] 0x2a
jne r-xdata
lea eax [ eax + eax + 0x2 ]
push eax
call sub_408ced
mov esi eax
cmp esi ebx
je r-xdata
shr eax 0x1
mov [ edi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
cmp [ ebx ] 0x2a
jne r-xdata
cmp [ ebp + esi - 0x3437 ] 0x2a
jne r-xdata
lea ecx [ ebp - 0xc38 ]
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
mov [ eax + ecx ] 0x0
mov eax [ edi + 0x4 ]
inc eax
push eax
push esi
push [ edi ]
call sub_40d163
push [ edi ]
call sub_408d06
mov [ edi ] esi
mov ecx [ edi + 0x4 ]
mov eax 0x40000
cmp ecx eax
ja r-xdata
cmp [ ebx ] 0x52
jne r-xdata
lea eax [ ebp + esi - 0x3434 ]
cmp [ eax - 0x2 ] 0x2a
jne r-xdata
push 0xb
push r--data
lea eax [ ebp + esi - 0x3436 ]
push eax
call sub_4090ae
test eax eax
je r-xdata
mov ecx [ edi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
xor ecx ecx
cmp [ edi + 0x4 ] ecx
jbe r-xdata
mov eax ecx
mov eax [ ebp - 0xc ]
inc esi
add eax 0xfffffff0
cmp esi eax
jle r-xdata
cmp [ ebp + esi - 0x3437 ] 0x61
jne r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xffffffe0
cmp esi ecx
jg r-xdata
mov eax [ ebp - 0x10 ]
add esi eax
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
xor edx edx
mov [ eax + ecx * 2 ] dx
mov [ edi + 0x4 ] ecx
mov eax [ edi ]
movzx edx [ eax + ebx * 2 ]
inc ebx
test dx dx
je r-xdata
jmp r-xdata
push 0x4
push r--data
lea eax [ ebp + esi - 0x3436 ]
push eax
call sub_4090ae
test eax eax
je r-xdata
push 0xb
push r--data
push eax
call sub_409233
test eax eax
je r-xdata
cmp dx 0x5c
jne r-xdata
mov [ ebp + 0xb ] 0x1
cmp dx 0xd
je r-xdata
movzx esi [ eax + ebx * 2 ]
sub esi 0x22
je r-xdata
push 0xc
cmp dx 0xa
jne r-xdata
push 0x22
sub esi 0x3a
je r-xdata
mov [ eax + ecx * 2 ] dx
inc ecx
cmp ebx [ edi + 0x4 ]
jb r-xdata
pop edx
push 0x5c
jmp r-xdata
sub esi 0x12
je r-xdata
inc ebx
jmp r-xdata
push 0xa
jmp r-xdata
sub esi 0x4
je r-xdata
push 0xd
jmp r-xdata
dec esi
dec esi
jne r-xdata
push 0x9
jmp r-xdata
sub_40875c
push esi
mov esi [ ecx ]
movzx eax [ esi ]
push edi
test ax ax
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
movzx eax [ esi ]
test ax ax
jne r-xdata
push 0x7
lea eax [ edi + 0x2 ]
push eax
lea eax [ esi + 0x2 ]
push eax
call sub_409233
test eax eax
jne r-xdata
cmp ax 0xc
je r-xdata
jmp r-xdata
cmp [ esi + 0x10 ] 0x3d
jne r-xdata
inc esi
inc esi
inc esi
inc esi
cmp [ esi ] 0xc
je r-xdata
cmp [ esi + 0x12 ] 0x22
jne r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
mov eax esi
jmp r-xdata
cmp ax [ edi ]
jne r-xdata
pop edi
pop esi
retn 0x4
sub_4087e6
push ebp
mov ebp esp
mov eax 0x2014
call sub_4012c0
push ebx
mov ebx ecx
cmp [ ebx ] 0x0
push esi
push edi
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x8 ] eax
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax 0x0
mov ecx r--data
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
push [ ebp + 0x8 ]
push eax
call sub_409153
mov ecx r--data
dec eax
je r-xdata
push esi
lea eax [ ebp - 0x1014 ]
push eax
push [ ebp + 0x8 ]
call sub_40d131
lea eax [ ebp - 0x1014 ]
push eax
mov [ ebp - 0x15 ] 0x0
call sub_408ef5
push eax
lea eax [ ebp - 0x1014 ]
push eax
push edi
call sub_4017cb
not eax
push eax
push r--data
lea eax [ ebp - 0x14 ]
push 0xa
push eax
call sub_40936c
add esp 0x10
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
call sub_40875c
test eax eax
je r-xdata
push esi
lea eax [ ebp - 0x2014 ]
push eax
push [ ebp + 0x18 ]
call sub_40d131
lea eax [ ebp - 0x2014 ]
push eax
call sub_408ef5
push eax
lea eax [ ebp - 0x2014 ]
push eax
push edi
call sub_4017cb
mov edi eax
mov ecx r--data
jmp r-xdata
dec eax
jne r-xdata
lea ebx [ eax + 0x14 ]
push 0xc
push ebx
call sub_409292
test eax eax
je r-xdata
push 0x1
push ecx
push 0xffffffff
call sub_4017cb
cmp [ ebp + 0x18 ] 0x0
mov edi eax
mov esi 0x1000
je r-xdata
mov ecx r--data
jmp r-xdata
mov esi 0xff
sub eax ebx
sar eax 0x1
mov esi eax
jmp r-xdata
mov edi [ ebp + 0xc ]
test esi esi
jbe r-xdata
neg eax
sbb eax eax
and eax ecx
mov esi eax
mov eax [ ebp + 0x10 ]
lea ecx [ eax - 0x1 ]
cmp esi ecx
jbe r-xdata
push 0x22
xor eax eax
push edi
mov [ edi + esi * 2 ] ax
call sub_4092bf
test eax eax
je r-xdata
push esi
push ebx
push edi
call sub_409183
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
sub_40892b
push ebp
mov ebp esp
sub esp 0x400
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x400 ]
push 0x1
push 0x200
push eax
push r--data
call sub_4087e6
push 0x2a
lea eax [ ebp - 0x400 ]
push eax
call sub_409292
mov edi eax
push 0x64
pop ebx
test edi edi
je r-xdata
mov ecx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov [ ecx ] ebx
mov [ esi ] ebx
lea eax [ ebp - 0x400 ]
push eax
call sub_40d4ad
mov esi [ ebp + 0xc ]
add edi 0x2
push edi
mov [ esi ] eax
call sub_40d4ad
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ecx ] ebx
jne r-xdata
cmp [ esi ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_4089aa
push ebp
mov ebp esp
sub esp 0x800
push esi
push edi
push 0x0
mov edi ecx
call [ GetModuleHandleW@IAT ]
push 0x5
mov esi r--data
push esi
push eax
call [ FindResourceW@IAT ]
test eax eax
je r-xdata
mov eax r--data
push eax
push 0x1
push 0x400
lea ecx [ ebp - 0x800 ]
push ecx
push eax
mov ecx edi
call sub_4087e6
push esi
lea eax [ ebp - 0x800 ]
push eax
call sub_4091e3
neg eax
sbb al al
inc al
mov [ edi + 0x10 ] al
mov [ edi + 0x10 ] 0x1
jmp r-xdata
pop edi
pop esi
leave
retn
sub_408a0e
push ebp
mov ebp esp
sub esp 0x850
push ebx
push esi
push edi
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x20 ] ecx
call sub_40892b
mov [ ebp - 0x1 ] al
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x50 ]
push eax
push [ ebp + 0x8 ]
call [ GetClientRect@IAT ]
mov ecx [ ebp - 0x28 ]
sub ecx [ ebp - 0x30 ]
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x2c ]
mov eax [ ebp - 0x48 ]
inc ecx
inc esi
mov ebx ecx
mov edi esi
sub edi [ ebp - 0x44 ]
sub ebx eax
cmp [ ebp - 0x1 ] 0x0
mov [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi 0x400
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push 0x8
call [ GetSystemMetrics@IAT ]
push 0x5
push [ ebp + 0x8 ]
sub edi eax
call [ GetWindow@IAT ]
and [ ebp + 0x8 ] 0x0
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
push esi
lea eax [ ebp - 0x850 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextW@IAT ]
push [ ebp + 0xc ]
mov ecx [ ebp - 0x20 ]
push 0x1
push esi
lea eax [ ebp - 0x850 ]
push eax
push eax
call sub_4087e6
lea eax [ ebp - 0x850 ]
push eax
push [ ebp + 0x8 ]
call [ SetWindowTextW@IAT ]
jmp r-xdata
mov esi 0x400
imul eax [ ebp - 0x10 ]
cdq
push 0x64
pop ebx
idiv ebx
add eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x44 ]
imul eax [ ebp - 0xc ]
cdq
idiv ebx
add eax edi
mov [ ebp - 0x18 ] eax
mov eax ecx
sub eax [ ebp - 0x14 ]
cdq
sub eax edx
mov ebx eax
mov eax esi
sub eax [ ebp - 0x18 ]
sar ebx 0x1
add ebx [ ebp - 0x30 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
add esi [ ebp - 0x2c ]
test ebx ebx
jge r-xdata
test eax eax
jne r-xdata
test esi esi
jge r-xdata
xor ebx ebx
cmp [ ebp + 0x8 ] 0x200
jge r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0xfffffff0
push [ ebp + 0x8 ]
mov [ ebp - 0x1c ] 0x204
call [ GetWindowLongW@IAT ]
test eax 0x800
jne r-xdata
xor esi esi
push esi
lea eax [ ebp - 0x850 ]
push eax
push [ ebp + 0x10 ]
call [ GetWindowTextW@IAT ]
cmp [ ebp - 0x850 ] 0x0
je r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push esi
push ebx
push 0x0
push [ ebp + 0x8 ]
call [ SetWindowPos@IAT ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] 0x206
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push [ ebp + 0xc ]
mov ecx [ ebp - 0x20 ]
push 0x1
push esi
lea eax [ ebp - 0x850 ]
push eax
push eax
call sub_4087e6
lea eax [ ebp - 0x850 ]
push eax
push [ ebp + 0x10 ]
call [ SetWindowTextW@IAT ]
push 0x2
push [ ebp + 0x10 ]
call [ GetWindow@IAT ]
mov [ ebp + 0x10 ] eax
cmp eax [ ebp - 0x8 ]
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
push [ ebp + 0x10 ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x34 ]
sub eax [ ebp - 0x3c ]
push 0x204
inc eax
imul eax [ ebp - 0xc ]
cdq
push 0x64
pop ecx
idiv ecx
push eax
mov eax [ ebp - 0x38 ]
sub eax [ ebp - 0x40 ]
inc eax
imul eax [ ebp - 0x10 ]
cdq
idiv ecx
push eax
mov eax [ ebp - 0x3c ]
sub eax edi
sub eax [ ebp - 0x2c ]
imul eax [ ebp - 0xc ]
cdq
idiv ecx
push eax
mov eax ebx
cdq
sub eax edx
mov ecx eax
mov eax [ ebp - 0x40 ]
sar ecx 0x1
sub eax ecx
sub eax [ ebp - 0x30 ]
push 0x64
imul eax [ ebp - 0x10 ]
pop ecx
cdq
idiv ecx
push eax
push 0x0
push [ ebp + 0x10 ]
call [ SetWindowPos@IAT ]
inc [ ebp + 0x8 ]
sub_408c71
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
cmp eax 0x8
jb r-xdata
push ebx
push ebp
shl eax 0xa
add eax rw-data
push esi
mov esi eax
xor eax eax
mov ebp rw-data
push edi
mov ecx ebp
mov [ esi ] ax
call sub_408754
mov ebx [ LoadStringW@IAT ]
mov edi 0x200
test al al
jne r-xdata
xor eax eax
mov [ rw-data ] eax
push edi
push esi
push [ esp + 0x1c ]
push [ rw-data ]
call ebx
push edi
push esi
push [ esp + 0x1c ]
push [ rw-data ]
call ebx
test eax eax
jne r-xdata
push 0x0
push 0x0
push edi
push esi
push esi
mov ecx ebp
call sub_4087e6
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
sub_408d25
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push [ ebp + 0xc ]
call sub_408ced
jmp r-xdata
pop ebp
retn 0x8
sub_408d51
push ebp
mov ebp esp
push ecx
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
call [ OemToCharBuffA@IAT ]
movzx eax [ ebp + 0x8 ]
push eax
call [ CharUpperA@IAT ]
mov [ ebp - 0x4 ] eax
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call [ CharToOemBuffA@IAT ]
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_408d8a
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ CloseHandle@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
call sub_408d06
mov eax [ ebp - 0x4 ]
or eax 0xffffffff
jmp r-xdata
leave
retn 0x4
sub_408dbd
push ebp
mov ebp esp
sub esp 0xc
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
imul eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
push [ eax ]
call [ ReadFile@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
xor edx edx
div [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
leave
retn 0x10
sub_408e00
push ebp
mov ebp esp
push ecx
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ SetFilePointer@IAT ]
mov [ ebp - 0x4 ] eax
xor eax eax
cmp [ ebp - 0x4 ] 0xffffffff
sete al
leave
retn 0xc
sub_408e27
push ebp
mov ebp esp
push ecx
push 0x1
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ SetFilePointer@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_408e46
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0xc
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
sub_408e73
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0xc
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
mov cl [ ecx ]
mov [ eax ] cl
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
sub_408eaa
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp + 0x10 ]
dec eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408e73
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0xc
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x4 ]
mov cl [ ecx ]
mov [ eax ] cl
jmp r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ ebp - 0x4 ] eax
sub_408ef5
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn 0x4
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0x8 ]
inc ecx
mov [ ebp + 0x8 ] ecx
test eax eax
je r-xdata
sub_408f1e
push ebp
mov ebp esp
xor eax eax
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
test eax eax
je r-xdata
pop ebp
retn 0x8
sub_408f4a
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
call sub_408ef5
dec eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ ebp - 0x4 ] eax
leave
retn 0x8
sub_408f87
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx eax [ eax ]
test eax eax
je r-xdata
xor eax eax
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x8 ]
movsx eax [ eax ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx eax [ eax ]
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x8 ]
movsx ecx [ ecx ]
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
leave
retn 0x8
sub_408fe8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx eax [ eax ]
test eax eax
je r-xdata
sub_40901c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0x8 ]
inc ecx
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
inc ecx
mov [ ebp + 0xc ] ecx
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
dec ecx
mov [ ebp + 0x10 ] ecx
test eax eax
jle r-xdata
sub_40905a
push ebp
mov ebp esp
xor eax eax
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0xc ]
movsx ecx [ ecx ]
cmp eax ecx
jge r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0xc ]
movsx ecx [ ecx ]
cmp eax ecx
jle r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
inc eax
je r-xdata
sub_4090ae
push ebp
mov ebp esp
xor eax eax
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0xc ]
movsx ecx [ ecx ]
cmp eax ecx
jge r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
mov ecx [ ebp + 0xc ]
movsx ecx [ ecx ]
cmp eax ecx
jle r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
dec ecx
mov [ ebp + 0x10 ] ecx
test eax eax
jbe r-xdata
sub_409129
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn 0x4
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp + 0x8 ]
inc ecx
inc ecx
mov [ ebp + 0x8 ] ecx
test eax eax
je r-xdata
sub_409153
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov cx [ ecx ]
mov [ eax ] cx
mov eax [ ebp + 0x8 ]
inc eax
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
mov ecx [ ebp + 0xc ]
inc ecx
inc ecx
mov [ ebp + 0xc ] ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_409183
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov cx [ ecx ]
mov [ eax ] cx
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp + 0x8 ]
inc ecx
inc ecx
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
inc ecx
inc ecx
mov [ ebp + 0xc ] ecx
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
dec ecx
mov [ ebp + 0x10 ] ecx
test eax eax
jle r-xdata
sub_4091e3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx ]
xor edx edx
cmp eax ecx
setge dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
inc eax
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
inc eax
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx ]
cmp eax ecx
jne r-xdata
pop ebp
retn 0x8
sub_409233
push ebp
mov ebp esp
xor eax eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx ]
cmp eax ecx
jge r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx ]
cmp eax ecx
jle r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
inc eax
inc eax
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
inc eax
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
dec ecx
mov [ ebp + 0x10 ] ecx
test eax eax
jle r-xdata
sub_409292
push ebp
mov ebp esp
xor eax eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x8 ]
inc eax
inc eax
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
test eax eax
je r-xdata
pop ebp
retn 0x8
sub_4092bf
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
call sub_409129
dec eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx + eax * 2 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax * 2 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ ebp - 0x4 ] eax
leave
retn 0x8
sub_409300
push ebp
mov ebp esp
xor eax eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
push [ ebp + 0xc ]
call sub_409292
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
inc eax
inc eax
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
test eax eax
je r-xdata
pop ebp
retn 0x8
sub_409345
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ wvsprintfA@IAT ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_408ef5
leave
retn
sub_40936c
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call [ wvsprintfW@IAT ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_409129
leave
retn
sub_4093ad
push ebp
mov ebp esp
sub esp 0x20
push rw-data
push 0x101
call sub_408ea5
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_40d561
mov [ ebp - 0x14 ] eax
jmp r-xdata
and [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0x8 ]
call sub_401a47
mov [ ebp - 0x18 ] eax
jmp r-xdata
push rw-data
push 0xc
call sub_408ea5
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0xc ]
call sub_408481
mov [ ebp - 0x1c ] eax
jmp r-xdata
push rw-data
push 0x14
call sub_408ea5
pop ecx
pop ecx
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
and [ ebp - 0x20 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_401729
mov [ ebp - 0x20 ] eax
jmp r-xdata
push rw-data
push 0x4f18
call sub_408ea5
pop ecx
pop ecx
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
leave
retn
sub_40945e
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ eax ]
movzx ecx [ ecx ]
sub eax ecx
pop ebp
retn
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
inc eax
inc ecx
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_40949b
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov ecx edi
mov [ esi ] edi
call sub_403729
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax [ edi + 0xc24 ]
mov [ esi + 0x10 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_4094fc
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
pop esi
retn
push r--data
call [ LoadLibraryW@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x1
push edi
mov edi [ GetProcAddress@IAT ]
push r--data
push eax
call edi
push r--data
push [ esi ]
mov [ esi + 0x8 ] eax
call edi
mov [ esi + 0xc ] eax
pop edi
sub_40953b
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
mov ebx [ ebp + 0x10 ]
je r-xdata
mov ecx rw-data
call sub_4094fc
cmp [ rw-data ] esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
call [ GetCurrentProcessId@IAT ]
xor edx edx
cmp ebx esi
jbe r-xdata
test bl 0xf
jne r-xdata
test bl 0xf
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
sub esi ecx
push edi
add ebx ebx
push ebx
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_408e73
push esi
push ebx
push [ ebp + 0xc ]
call [ rw-data ]
test eax eax
jne r-xdata
add ebx ebx
push ebx
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_408e73
push esi
push ebx
push [ ebp + 0xc ]
call [ rw-data ]
test eax eax
jne r-xdata
lea edi [ eax + edx + 0x4b ]
xor di [ esi + ecx ]
inc edx
mov [ ecx ] di
inc ecx
inc ecx
cmp edx ebx
jb r-xdata
pop edi
push r--data
jmp r-xdata
push r--data
mov esi rw-data
mov ecx esi
call sub_401ba4
mov ecx esi
call sub_401a46
push 0x2
mov ecx esi
call j_sub_401a14
jmp r-xdata
sub_409609
cmp [ ecx + 0x100 ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ ecx ] ax
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push 0x0
push esi
push edi
push ecx
call sub_40953b
xor eax eax
mov [ edi + esi * 2 - 0x2 ] ax
pop edi
pop esi
jmp r-xdata
retn 0x8
sub_40963d
mov eax [ esp + 0x4 ]
xor edx edx
cmp [ eax ] dx
jne r-xdata
push 0x1
push 0x80
push ecx
push eax
mov [ ecx + 0x100 ] 0x1
call sub_40953b
push 0x100
push edx
push ecx
mov [ ecx + 0x100 ] dl
call sub_408e46
jmp r-xdata
retn 0x4
sub_4096b3
push ebp
mov ebp esp
sub esp 0x1c
push esi
xor esi esi
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn
push esi
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
call [ GetMessageW@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageW@IAT ]
sub_4096f2
push ebp
mov ebp esp
sub esp 0x12c
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
mov edi 0x400
jne r-xdata
lea eax [ ebp - 0x64 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c682
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
push ebx
push esi
xor eax eax
push rw-data
mov [ esi ] ax
lea eax [ ebp - 0x64 ]
push eax
push 0x0
push edi
call [ GetNumberFormatW@IAT ]
xor eax eax
pop edi
mov [ esi + ebx * 2 - 0x2 ] ax
pop esi
pop ebx
leave
retn 0x10
push 0x64
lea eax [ ebp - 0x12c ]
push eax
push 0xf
push edi
call [ GetLocaleInfoW@IAT ]
mov ax [ ebp - 0x12c ]
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] ax
mov [ rw-data ] rw-data
sub_409779
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xf4240
jbe r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
shr eax 0x8
shr [ ebp + 0xc ] 0x8
cmp [ ebp + 0xc ] eax
jae r-xdata
xor eax eax
jmp r-xdata
imul eax eax 0x64
xor edx edx
div [ ebp + 0xc ]
push 0x64
pop eax
jmp r-xdata
pop ebp
retn 0x8
sub_4097ad
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ecx ] ax
movzx eax [ esi ]
test ax ax
je r-xdata
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
mov [ ebp + 0xb ] 0x0
movzx eax [ esi ]
cmp ax 0x2c
jne r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ecx ] dx
jne r-xdata
mov [ edi ] ax
cmp [ ebp + 0xb ] 0x0
je r-xdata
mov bl [ ebp + 0xb ]
test bl bl
je r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
push 0x22
pop edx
cmp ax dx
jne r-xdata
xor eax eax
mov [ edi ] ax
jmp r-xdata
xor eax eax
mov [ edi ] ax
push edx
push ecx
call sub_409292
test eax eax
setne [ ebp + 0xb ]
mov [ ebp + 0xb ] 0x0
jmp r-xdata
mov esi ecx
mov [ edi ] dx
jmp r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
mov eax esi
jmp r-xdata
inc esi
inc esi
movzx eax [ esi ]
push eax
call sub_40c613
test al al
jne r-xdata
inc esi
inc esi
movzx eax [ esi ]
test ax ax
jne r-xdata
cmp bl [ ebp + 0xb ]
jne r-xdata
inc edi
inc edi
movzx eax [ esi + 0x4 ]
cmp ax 0x2c
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
test ax ax
je r-xdata
sub_409871
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ SHGetMalloc@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push 0x0
call [ SHGetSpecialFolderLocation@IAT ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call [ SHGetPathFromIDListW@IAT ]
mov eax [ ebp - 0x8 ]
push [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
leave
retn 0x8
sub_4098ab
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
xor ecx ecx
mov [ eax ] cx
retn 0x4
push esi
mov [ eax ] dx
inc eax
inc eax
inc ecx
inc ecx
movzx esi [ ecx + 0x2 ]
cmp si dx
jne r-xdata
movzx edx [ ecx ]
cmp dx 0x5c
jne r-xdata
pop esi
cmp si 0x6e
jne r-xdata
push 0x5c
push 0xa
jmp r-xdata
cmp [ ecx ] 0x0
jne r-xdata
pop edx
mov [ eax ] dx
inc eax
inc eax
add ecx 0x4
jmp r-xdata
sub_4098f7
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
xor edi edi
push edi
call [ GetDC@IAT ]
mov esi [ CreateCompatibleDC@IAT ]
push eax
mov [ ebp - 0x8 ] eax
call esi
push [ ebp - 0x8 ]
mov ebx eax
call esi
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push 0x18
push [ ebp + 0x8 ]
call [ GetObjectW@IAT ]
mov eax [ ebp - 0x20 ]
imul eax [ ebp + 0xc ]
cdq
idiv [ ebp - 0x24 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
call [ CreateCompatibleBitmap@IAT ]
push [ ebp + 0x8 ]
mov esi [ SelectObject@IAT ]
push ebx
mov [ ebp - 0xc ] eax
call esi
push [ ebp - 0xc ]
mov [ ebp + 0x8 ] eax
push [ ebp - 0x4 ]
call esi
push 0xcc0020
push [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
push [ ebp - 0x24 ]
push edi
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push edi
push [ ebp - 0x4 ]
call [ StretchBlt@IAT ]
push [ ebp + 0x8 ]
push ebx
call esi
push [ ebp - 0x10 ]
push [ ebp - 0x4 ]
call esi
mov esi [ DeleteDC@IAT ]
push ebx
call esi
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x8 ]
push edi
call [ ReleaseDC@IAT ]
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn 0xc
mov [ ebp + 0x10 ] eax
sub_4099bc
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
imul eax [ esp + 0x4 ]
push 0x60
cdq
pop ecx
idiv ecx
retn 0x4
push esi
push 0x0
call [ GetDC@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
push 0x58
push esi
call [ GetDeviceCaps@IAT ]
push esi
push 0x0
mov [ rw-data ] eax
call [ ReleaseDC@IAT ]
sub_4099ff
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
imul eax [ esp + 0x4 ]
push 0x60
cdq
pop ecx
idiv ecx
retn 0x4
push esi
push 0x0
call [ GetDC@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push esi
push 0x0
mov [ rw-data ] eax
call [ ReleaseDC@IAT ]
sub_409a42
push 0x64
call sub_4099bc
cmp eax 0x7d
jge r-xdata
xor eax eax
inc eax
retn
push 0x64
call sub_4099ff
cmp eax 0x7d
jge r-xdata
xor eax eax
retn
sub_409a61
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
push ebx
call sub_409129
mov edi eax
xor ecx ecx
push 0x2
pop edx
lea eax [ edi + 0x3 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_4093a0
pop ecx
mov esi eax
push ebx
lea eax [ esi + 0x2 ]
push eax
call sub_409153
push 0x22
pop eax
mov [ esi + edi * 2 + 0x2 ] ax
mov [ esi ] ax
push esi
xor eax eax
push ebx
mov [ esi + edi * 2 + 0x4 ] ax
call sub_409153
push esi
call sub_409393
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
retn 0x4
sub_409abc
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
push 0x68
push [ rw-data ]
call [ GetDlgItem@IAT ]
cmp [ rw-data ] 0x0
mov esi [ SendMessageW@IAT ]
mov edi eax
mov [ ebp - 0x4 ] edi
mov ebx 0xb1
jne r-xdata
mov edi 0x5f5e100
push edi
push edi
push ebx
push [ ebp - 0x4 ]
call esi
lea eax [ ebp - 0x60 ]
push eax
push 0x0
push 0x43a
push [ ebp - 0x4 ]
mov [ ebp - 0x60 ] 0x5c
call esi
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x47 ] 0x0
mov [ ebp - 0x5c ] eax
je r-xdata
mov ecx [ rw-data ]
call sub_40d96b
push 0x5
push edi
call [ ShowWindow@IAT ]
push 0xffffffff
push 0x0
push ebx
push edi
call esi
push r--data
push 0x0
push 0xc2
push edi
call esi
mov [ rw-data ] 0x1
lea ecx [ ebp - 0x60 ]
push ecx
push eax
push 0x444
push [ ebp - 0x4 ]
call esi
push [ ebp + 0xc ]
push 0x0
push 0xc2
push [ ebp - 0x4 ]
call esi
push edi
push edi
push ebx
push [ ebp - 0x4 ]
call esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x58 ]
and ecx 0xbfffffff
or ecx eax
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x4c ] 0xa0
mov [ ebp - 0x5c ] 0x40000001
push r--data
push 0x0
push 0xc2
push [ ebp - 0x4 ]
call esi
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp - 0x58 ]
and eax 0xfffffffe
or eax 0x40000000
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x60 ]
push eax
push 0x1
push 0x444
push [ ebp - 0x4 ]
call esi
sub_409bd0
push ebp
mov ebp esp
mov eax 0x1800
call sub_4012c0
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
inc [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
leave
retn
lea ecx [ ebp + 0xc ]
push ecx
push eax
lea eax [ ebp - 0x1800 ]
push eax
call [ wvsprintfW@IAT ]
lea eax [ ebp - 0x1800 ]
push eax
push 0x1
call sub_409abc
sub_409c12
push ebp
mov ebp esp
mov eax 0x1400
call sub_4012c0
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406cab
cmp [ ebp + 0x18 ] 0x0
lea eax [ ebp - 0x800 ]
push eax
je r-xdata
push 0x65
push 0x66
jmp r-xdata
call sub_408c71
push eax
lea eax [ ebp - 0x1400 ]
push 0x600
push eax
call sub_40936c
add esp 0x10
lea eax [ ebp - 0x1400 ]
push eax
push 0x65
push [ rw-data ]
call [ SetDlgItemTextW@IAT ]
call sub_4096b3
xor eax eax
cmp [ rw-data ] al
sete al
leave
retn 0x14
sub_409c8c
push ebp
lea ebp [ esp - 0x68 ]
mov eax 0x1250
call sub_4012c0
push ebx
push edi
mov edi [ ebp + 0x70 ]
xor ebx ebx
push ebx
push ebx
push r--data
push [ ebp + 0x7c ]
push [ ebp + 0x78 ]
push [ ebp + 0x74 ]
push edi
call sub_4018e5
test al al
je r-xdata
mov eax [ ebp + 0x74 ]
sub eax 0x110
push esi
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x6c
push edi
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
mov esi 0x400
push esi
push [ ebp + 0x7c ]
lea eax [ ebp - 0x11e8 ]
push eax
call sub_40c658
push esi
push ebx
lea eax [ ebp - 0x11e8 ]
push eax
call sub_406ab3
lea eax [ ebp - 0x11e8 ]
push eax
push 0x65
push edi
mov edi [ SetDlgItemTextW@IAT ]
call edi
push 0x100
push 0x2b4
lea eax [ ebp - 0x9e8 ]
push eax
push ebx
lea eax [ ebp - 0x11e8 ]
push eax
call [ SHGetFileInfoW@IAT ]
push ebx
push [ ebp - 0x9e8 ]
push 0x170
push 0x66
push [ ebp + 0x70 ]
call [ SendDlgItemMessageW@IAT ]
lea eax [ ebp - 0x334 ]
push eax
lea eax [ ebp - 0x11e8 ]
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp + 0x74 ] eax
cmp eax 0xffffffff
je r-xdata
dec eax
jne r-xdata
pop edi
pop ebx
add ebp 0x68
leave
retn 0x10
xor eax eax
lea eax [ ebp + 0x48 ]
push eax
lea eax [ ebp - 0x320 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp + 0x58 ]
push eax
lea eax [ ebp + 0x48 ]
push eax
call [ FileTimeToSystemTime@IAT ]
push 0x32
lea eax [ ebp - 0x80 ]
push eax
push ebx
lea eax [ ebp + 0x58 ]
push eax
push 0x2
push esi
call [ GetTimeFormatW@IAT ]
push 0x32
lea eax [ ebp - 0x1c ]
push eax
push ebx
lea eax [ ebp + 0x58 ]
push eax
push ebx
push esi
call [ GetDateFormatW@IAT ]
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x81
call sub_408c71
push eax
push r--data
mov ebx 0x200
lea eax [ ebp - 0x734 ]
push ebx
push eax
call sub_40936c
add esp 0x18
lea eax [ ebp - 0x734 ]
push eax
push 0x6a
push [ ebp + 0x70 ]
call edi
push [ ebp + 0x74 ]
call [ FindClose@IAT ]
test [ ebp - 0x334 ] 0x10
jne r-xdata
movzx eax [ ebp + 0x78 ]
push 0x2
pop esi
sub eax esi
je r-xdata
push 0x0
push [ ebp - 0x9e8 ]
push 0x170
push 0x67
push [ ebp + 0x70 ]
call [ SendDlgItemMessageW@IAT ]
lea eax [ ebp + 0x50 ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
call [ DosDateTimeToFileTime@IAT ]
lea eax [ ebp + 0x58 ]
push eax
lea eax [ ebp + 0x50 ]
push eax
call [ FileTimeToSystemTime@IAT ]
push 0x32
lea eax [ ebp - 0x80 ]
push eax
push 0x0
lea eax [ ebp + 0x58 ]
push eax
push 0x2
push esi
call [ GetTimeFormatW@IAT ]
push 0x32
lea eax [ ebp - 0x1c ]
push eax
push 0x0
lea eax [ ebp + 0x58 ]
push eax
push 0x0
push esi
call [ GetDateFormatW@IAT ]
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x81
call sub_408c71
push eax
push r--data
lea eax [ ebp - 0x734 ]
push ebx
push eax
call sub_40936c
add esp 0x18
lea eax [ ebp - 0x734 ]
push eax
push 0x6b
push [ ebp + 0x70 ]
call edi
test [ ebp - 0x334 ] 0x10
mov eax [ rw-data ]
mov ecx [ rw-data ]
je r-xdata
push 0x32
lea eax [ ebp - 0xe4 ]
push eax
push 0x1
push 0x0
push 0x0
push [ ebp - 0x318 ]
call sub_401030
mov ecx [ ebp - 0x314 ]
xor ebx ebx
add eax ecx
adc edx ebx
push edx
push eax
call sub_4096f2
push 0x80
call sub_408c71
push eax
lea eax [ ebp - 0xe4 ]
push eax
push r--data
mov ebx 0x200
lea eax [ ebp - 0x734 ]
push ebx
push eax
call sub_40936c
add esp 0x14
lea eax [ ebp - 0x734 ]
push eax
push 0x68
push [ ebp + 0x70 ]
call edi
push 0x5
sub eax 0x6a
je r-xdata
push 0x32
lea edx [ ebp - 0xe4 ]
push edx
push eax
push ecx
call sub_4096f2
push 0x80
call sub_408c71
push eax
lea eax [ ebp - 0xe4 ]
push eax
push r--data
lea eax [ ebp - 0x734 ]
push ebx
push eax
call sub_40936c
add esp 0x14
lea eax [ ebp - 0x734 ]
push eax
push 0x69
push [ ebp + 0x70 ]
call edi
mov edx ecx
or edx eax
je r-xdata
push esi
push edi
call [ EndDialog@IAT ]
xor eax eax
inc eax
jmp r-xdata
push eax
call [ DestroyIcon@IAT ]
xor esi esi
inc esi
jmp r-xdata
dec eax
je r-xdata
pop esi
push ebx
push ebx
push 0x171
push 0x66
push edi
call [ SendDlgItemMessageW@IAT ]
cmp eax ebx
je r-xdata
dec eax
je r-xdata
push 0x4
jmp r-xdata
dec eax
je r-xdata
pop esi
push 0x3
jmp r-xdata
dec eax
je r-xdata
push 0x6
jmp r-xdata
dec eax
jne r-xdata
sub_409fd8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
push 0x0
push r--data
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_4018e5
test al al
jne r-xdata
xor eax eax
inc eax
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
push esi
push 0x65
mov [ rw-data ] esi
mov esi [ SetDlgItemTextW@IAT ]
push edi
call esi
push [ rw-data ]
push 0x66
push edi
call esi
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
push 0x400
push [ rw-data ]
push 0x66
push edi
call [ GetDlgItemTextW@IAT ]
push 0x1
jmp r-xdata
dec eax
je r-xdata
push edi
call [ EndDialog@IAT ]
jmp r-xdata
push 0x0
sub_40a061
push ebp
mov ebp esp
sub esp 0x100
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push esi
push esi
push r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_4018e5
test al al
jne r-xdata
xor eax eax
inc eax
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
push [ ebp + 0x14 ]
push 0x66
push edi
call [ SetDlgItemTextW@IAT ]
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
pop edi
pop esi
leave
retn 0x10
mov esi 0x80
push esi
lea eax [ ebp - 0x100 ]
push eax
push 0x65
push edi
call [ GetDlgItemTextW@IAT ]
lea eax [ ebp - 0x100 ]
push eax
mov ecx rw-data
call sub_40963d
push esi
lea eax [ ebp - 0x100 ]
push eax
call sub_409685
push 0x1
jmp r-xdata
dec eax
je r-xdata
push edi
call [ EndDialog@IAT ]
jmp r-xdata
push esi
sub_40a123
push ebp
mov ebp esp
mov eax 0x2000
call sub_4012c0
cmp [ rw-data ] 0x0
jne r-xdata
leave
retn
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
push esi
call [ GetLastError@IAT ]
mov esi eax
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x2000 ]
push eax
call [ wvsprintfW@IAT ]
lea eax [ ebp - 0x2000 ]
push eax
push r--data
call sub_409bd0
pop ecx
pop ecx
test esi esi
je r-xdata
pop esi
push esi
call [ SetLastError@IAT ]
sub_40a19d
call sub_40c563
push r--data
push rw-data
call sub_408fe8
mov ecx [ rw-data ]
push r--data
call sub_40c986
push [ esp + 0x4 ]
push rw-data
call sub_409153
push [ esp + 0x4 ]
mov ecx rw-data
push 0x0
call sub_401462
push 0x4
pop eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov al [ rw-data ]
mov [ rw-data ] al
mov al [ rw-data ]
mov [ rw-data ] 0x1
mov [ rw-data ] al
call sub_40d5ad
retn 0x4
sub_40a214
push ebp
mov ebp esp
push edi
push 0x0
push r--data
push [ ebp + 0x8 ]
call sub_40410d
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
je r-xdata
pop edi
pop ebp
retn 0xc
push ebx
push esi
mov esi 0x8000
push esi
call sub_408ced
mov ebx eax
test ebx ebx
jne r-xdata
push 0x2
push 0x0
push edi
call sub_408e00
push edi
call sub_408e27
push 0x0
cmp eax esi
jae r-xdata
push edi
call sub_408d8a
jmp r-xdata
add eax 0xffff8000
push eax
push 0x0
jmp r-xdata
pop esi
pop ebx
test esi esi
jg r-xdata
push edi
call sub_408e00
push edi
push esi
push 0x1
push ebx
call sub_408dbd
push [ ebp + 0x8 ]
mov edi eax
call sub_408d8a
lea esi [ edi - 0x4 ]
jmp r-xdata
cmp [ esi + ebx ] 0x50
jne r-xdata
jmp r-xdata
dec esi
cmp [ esi + ebx + 0x1 ] 0x4b
jne r-xdata
push ebx
call sub_408d06
cmp [ esi + ebx + 0x2 ] 0x5
jne r-xdata
cmp [ esi + ebx + 0x3 ] 0x6
jne r-xdata
lea eax [ edi - 0x16 ]
cmp esi eax
jge r-xdata
movzx eax [ esi + ebx + 0x14 ]
test eax eax
jg r-xdata
sub edi esi
lea ecx [ edi - 0x16 ]
cmp eax ecx
jl r-xdata
mov edi [ ebp + 0x10 ]
mov [ edi ] eax
lea eax [ eax + eax + 0x2 ]
push eax
call sub_408ced
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
test eax eax
jne r-xdata
mov eax ecx
push [ edi ]
push eax
lea eax [ esi + ebx + 0x16 ]
push eax
call sub_40d163
mov ecx [ ebp + 0xc ]
mov eax [ edi ]
mov ecx [ ecx ]
xor edx edx
mov [ ecx + eax * 2 ] dx
and [ edi ] eax
jmp r-xdata
sub_40a311
push ebp
mov ebp esp
sub esp 0x804
and [ ebp - 0x4 ] 0x0
push esi
push edi
mov esi 0x400
push esi
lea eax [ ebp - 0x804 ]
push eax
push [ ebp + 0x8 ]
jmp r-xdata
call sub_40c718
mov edi eax
test edi edi
jne r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x1
je r-xdata
pop edi
pop esi
leave
retn 0x4
push esi
lea eax [ ebp - 0x804 ]
push eax
push edi
cmp [ ebp - 0x804 ] 0x2f
je r-xdata
movzx eax [ ebp - 0x802 ]
push eax
call sub_40d446
sub eax 0x44
je r-xdata
cmp [ ebp - 0x804 ] 0x2d
jne r-xdata
push esi
lea eax [ ebp - 0x800 ]
push eax
push rw-data
dec eax
je r-xdata
movzx eax [ ebp - 0x800 ]
push eax
call sub_40d446
cmp eax 0x4c
jne r-xdata
sub eax 0xb
je r-xdata
cmp [ ebp - 0x7fe ] 0x0
jne r-xdata
lea eax [ ebp - 0x800 ]
push eax
mov ecx rw-data
call sub_40963d
jmp r-xdata
sub eax 0x3
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
movzx eax [ ebp - 0x800 ]
push eax
call sub_40d446
sub eax 0x0
je r-xdata
mov [ rw-data ] 0x1
sub eax 0x31
je r-xdata
dec eax
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
sub eax 0x1e
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push esi
lea eax [ ebp - 0x7fe ]
push eax
push rw-data
jmp r-xdata
call sub_40c658
sub_40a436
push ebp
mov ebp esp
mov eax 0x2000
call sub_4012c0
push ebx
mov ebx ecx
push edi
mov edi [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov [ ebx ] 0x0
test edi edi
je r-xdata
mov [ eax ] 0x0
xor eax eax
movzx eax [ edi ]
test ax ax
je r-xdata
push esi
xor esi esi
xor ecx ecx
cmp ax 0xd
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
inc edi
inc edi
cmp ax 0xa
je r-xdata
mov [ edx ] ax
mov eax [ ebp + 0x14 ]
inc edx
add eax 0xfffffffe
inc edx
cmp ecx eax
jg r-xdata
test esi esi
jne r-xdata
mov eax edi
pop esi
jmp r-xdata
mov [ ebx ] ax
test esi esi
je r-xdata
mov ebx [ ebp + 0xc ]
xor eax eax
mov [ edx ] ax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
jmp r-xdata
movzx eax [ edi ]
inc ecx
test ax ax
jne r-xdata
test ebx ebx
je r-xdata
pop edi
pop ebx
leave
retn 0x10
push 0x1000
lea eax [ ebp - 0x2000 ]
push eax
push esi
call [ ExpandEnvironmentStringsW@IAT ]
push [ ebp + 0x14 ]
lea eax [ ebp - 0x2000 ]
push eax
push ebx
call sub_40c658
xor eax eax
mov [ esi ] ax
movzx eax ax
inc edi
inc edi
cmp ax 0x3d
jne r-xdata
jmp r-xdata
mov esi edx
jmp r-xdata
mov [ ebx ] 0x1
sub_40a50c
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ WaitForSingleObject@IAT ]
push edi
push 0xa
push [ ebp + 0x8 ]
call esi
mov edi 0x102
jmp r-xdata
cmp eax edi
je r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call [ PeekMessageW@IAT ]
push 0xa
push [ ebp + 0x8 ]
call esi
pop edi
pop esi
leave
retn 0x4
sub_40a54b
push ebp
mov ebp esp
sub esp 0x820
push 0x400
lea eax [ ebp - 0x820 ]
push eax
call sub_40e58e
cmp [ rw-data ] 0x0
jne r-xdata
leave
retn
push 0x6
push [ rw-data ]
lea eax [ ebp - 0x820 ]
push eax
call sub_406d97
push eax
call sub_40d3d6
test eax eax
jne r-xdata
push r--data
call sub_40e57b
lea eax [ ebp - 0x820 ]
push eax
call sub_409129
xor ecx ecx
push 0x1e
mov [ ebp + eax * 2 - 0x81e ] cx
push ecx
lea eax [ ebp - 0x20 ]
push eax
call sub_408e46
push 0x14
pop eax
mov [ ebp - 0x10 ] ax
lea eax [ ebp - 0x820 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x3
call [ SHFileOperationW@IAT ]
sub_40a5db
push ebp
mov ebp esp
mov eax 0x2004
call sub_4012c0
push ebx
push esi
push 0x20000
call sub_408ced
mov esi eax
test esi esi
jne r-xdata
xor eax eax
mov [ esi ] ax
xor ebx ebx
jmp r-xdata
mov ecx rw-data
call sub_401a5b
push 0x1000
lea eax [ ebp - 0x1 ]
push eax
push 0x0
push [ edi ]
xor ecx ecx
lea edx [ ebp - 0x2004 ]
call sub_40a436
mov [ edi ] eax
test eax eax
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x2004 ] 0x7d
je r-xdata
cmp [ ebp - 0x2004 ] 0x7b
je r-xdata
lea eax [ ebp - 0x2004 ]
push eax
call sub_409129
add eax ebx
cmp eax 0xfffb
ja r-xdata
lea eax [ ebp - 0x2004 ]
push eax
push esi
call sub_4091c5
push esi
call sub_409129
mov ebx eax
test ebx ebx
jbe r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
lea eax [ esi + ebx * 2 - 0x2 ]
push r--data
lea eax [ esi + ebx * 2 ]
push eax
call sub_409153
dec ebx
dec eax
dec eax
test ebx ebx
ja r-xdata
cmp [ eax ] 0x20
jne r-xdata
sub_40a6a4
push ebx
xor ebx ebx
mov [ rw-data ] 0x1
cmp [ rw-data ] ebx
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
cmp eax ebx
je r-xdata
push 0x7d
call sub_408c71
push eax
push 0x2
push [ rw-data ]
call [ SetDlgItemTextW@IAT ]
cmp [ rw-data ] bl
pop ebx
je r-xdata
push 0x1
push eax
call [ ShowWindow@IAT ]
cmp [ rw-data ] ebx
jne r-xdata
retn
jmp sub_40a54b
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] bl
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push ebx
push 0x1
push 0x111
push [ rw-data ]
call [ SendMessageW@IAT ]
jmp r-xdata
push ebx
call [ Sleep@IAT ]
call sub_4096b3
sub_40a73c
push [ esp + 0x4 ]
push esi
call sub_409153
xor ecx ecx
cmp [ esi ] cx
je r-xdata
retn 0x4
mov eax esi
push 0x25
pop edx
mov [ eax ] dx
cmp dx 0x5c
je r-xdata
movzx edx [ eax ]
cmp dx 0x3a
je r-xdata
cmp dx 0x2f
jne r-xdata
inc ecx
lea eax [ esi + ecx * 2 ]
cmp [ eax ] 0x0
jne r-xdata
sub_40a777
push ebp
mov ebp esp
sub esp 0x808
push ebx
xor ebx ebx
cmp [ rw-data ] bl
je r-xdata
pop ebx
leave
retn 0x4
cmp [ rw-data ] bx
je r-xdata
push esi
push rw-data
lea esi [ ebp - 0x808 ]
call sub_40a73c
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0x20006
push ebx
push ebx
push ebx
push r--data
push 0x80000001
call [ RegCreateKeyExW@IAT ]
pop esi
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_409129
lea eax [ eax + eax + 0x2 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x808 ]
push 0x1
push ebx
push eax
push [ ebp - 0x4 ]
call [ RegSetValueExW@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_40a7fc
push ebp
mov ebp esp
mov eax 0x100c
call sub_4012c0
cmp [ rw-data ] 0x0
je r-xdata
leave
retn 0x8
push esi
push [ ebp + 0x8 ]
lea esi [ ebp - 0x100c ]
call sub_40a73c
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push r--data
push 0x80000001
call [ RegOpenKeyExW@IAT ]
pop esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x80c ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea eax [ ebp - 0x100c ]
push eax
push [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x800
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
shr [ ebp - 0x4 ] 0x1
mov eax 0x3ff
cmp [ ebp - 0x4 ] eax
jae r-xdata
push [ ebp + 0xc ]
xor ecx ecx
mov [ ebp + eax * 2 - 0x80c ] cx
lea eax [ ebp - 0x80c ]
push eax
push [ ebp + 0x8 ]
call sub_40c658
mov eax [ ebp - 0x4 ]
sub_40a8a7
push ebp
mov ebp esp
sub esp 0x81c
call sub_409a42
test al al
je r-xdata
leave
retn 0x4
push edi
push 0x5
push [ ebp + 0x8 ]
call [ GetWindow@IAT ]
and [ ebp + 0x8 ] 0x0
mov edi eax
mov [ ebp - 0x4 ] edi
test edi edi
je r-xdata
pop edi
push ebx
mov ebx [ SendMessageW@IAT ]
push esi
pop esi
pop ebx
push 0x400
lea eax [ ebp - 0x81c ]
push eax
push edi
call [ GetClassNameW@IAT ]
push r--data
lea eax [ ebp - 0x81c ]
push eax
call sub_40d319
test eax eax
jne r-xdata
push 0x2
push edi
call [ GetWindow@IAT ]
mov edi eax
cmp edi [ ebp - 0x4 ]
je r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongW@IAT ]
and eax 0x1f
cmp al 0xe
jne r-xdata
inc [ ebp + 0x8 ]
test edi edi
jne r-xdata
push 0x0
push 0x0
push 0x173
push edi
call ebx
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x8 ] 0x200
jge r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x18
push esi
call [ GetObjectW@IAT ]
push [ ebp - 0x14 ]
call sub_4099ff
push eax
push [ ebp - 0x18 ]
call sub_4099bc
push eax
push esi
call sub_4098f7
push eax
push 0x0
push 0x172
push edi
call ebx
cmp esi [ rw-data ]
je r-xdata
push esi
call [ DeleteObject@IAT ]
sub_40a99a
push esi
mov esi [ esp + 0x8 ]
push 0x20
push esi
call sub_409292
test eax eax
je r-xdata
mov eax esi
cmp [ esi ] 0x22
je r-xdata
push esi
call sub_406a1f
cmp [ eax ] 0x22
je r-xdata
push esi
call sub_409a61
jmp r-xdata
pop esi
retn 0x4
sub_40a9cb
push ebp
mov ebp esp
push esi
mov esi [ DialogBoxParamW@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push [ ebp + 0x8 ]
push sub_409c8c
push [ rw-data ]
push r--data
push [ rw-data ]
call esi
push 0x2
pop eax
jmp r-xdata
dec eax
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call [ SetFileAttributesW@IAT ]
mov al 0x59
dec eax
je r-xdata
mov al 0x4e
jmp r-xdata
dec eax
je r-xdata
pop esi
pop ebp
retn 0x10
mov [ rw-data ] 0x1
dec eax
jne r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
push sub_409fd8
push [ rw-data ]
push r--data
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov [ rw-data ] 0x1
mov al 0x43
jmp r-xdata
dec eax
mov al 0x4e
jne r-xdata
cmp [ rw-data ] 0x0
mov eax [ ebp + 0xc ]
mov [ rw-data ] eax
mov eax [ ebp + 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
mov [ rw-data ] eax
je r-xdata
mov al 0x52
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
sub_40aa8c
push ebp
mov ebp esp
sub esp 0x800
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push esi
push edi
call sub_406cab
push [ ebp + 0x18 ]
lea eax [ ebp - 0x800 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_40a9cb
mov bl al
test esi esi
je r-xdata
test edi edi
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
mov al bl
pop ebx
leave
retn 0x18
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x800 ]
push eax
push esi
call sub_409153
push 0x1000000
push edi
lea eax [ ebp - 0x800 ]
push eax
call sub_40d131
sub_40ab03
push ebp
mov ebp esp
sub esp 0x800
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
je r-xdata
cmp [ ebp + 0x8 ] 0x2
mov eax [ rw-data ]
mov esi eax
jne r-xdata
mov ebx [ ebp + 0x14 ]
mov esi rw-data
mov edi ebx
jmp r-xdata
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_406cab
cmp [ rw-data ] 0x0
jne r-xdata
push eax
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
push 0x40
pop ecx
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ebx [ ebp + 0x14 ]
push 0x40
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x800 ]
push eax
push sub_40a061
push esi
push r--data
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
test eax eax
jne r-xdata
xor esi esi
mov al [ ebx + 0x100 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
mov esi ebx
mov edi rw-data
mov ebx [ ebp + 0x14 ]
push r--data
mov ecx ebx
call sub_40963d
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebx + 0x100 ] 0x0
je r-xdata
sub_40abd0
push ebp
mov ebp esp
mov eax 0x1048
call sub_4012c0
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi ] bx
je r-xdata
pop esi
pop ebx
leave
retn 0x4
push esi
call sub_409129
cmp eax 0x3f6
jae r-xdata
push edi
push 0x3c
pop edi
push edi
push ebx
lea eax [ ebp - 0x48 ]
push eax
call sub_408e46
movzx ecx [ esi ]
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x44 ] 0x1c0
cmp cx 0x22
jne r-xdata
mov [ ebp - 0x38 ] esi
lea eax [ esi + 0x2 ]
mov [ ebp - 0x38 ] eax
jmp r-xdata
cmp [ ebp - 0x34 ] ebx
jne r-xdata
mov ecx esi
xor eax eax
cmp cx bx
je r-xdata
push [ ebp - 0x38 ]
mov [ ebp - 0x2c ] 0x1
call sub_407029
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
cmp [ ebp + 0x8 ] bl
jne r-xdata
cmp [ esi + eax * 2 ] 0x20
je r-xdata
jmp r-xdata
push [ ebp - 0x38 ]
call sub_403f10
mov bl al
test bl bl
je r-xdata
push r--data
push eax
call sub_40d319
test eax eax
jne r-xdata
cmp [ rw-data ] bx
je r-xdata
lea eax [ esi + eax * 2 ]
cmp [ eax ] 0x20
jne r-xdata
cmp [ esi + eax * 2 + 0x2 ] 0x2f
je r-xdata
inc eax
cmp [ esi + eax * 2 ] bx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
mov edi r--data
je r-xdata
lea eax [ ebp - 0x1048 ]
push eax
push [ ebp - 0x38 ]
call sub_406b68
lea eax [ ebp - 0x1048 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] r--data
mov [ ebp - 0x34 ] rw-data
add eax 0x2
mov [ ebp - 0x34 ] eax
xor ecx ecx
mov [ eax ] cx
inc eax
lea ecx [ esi + eax * 2 ]
cmp [ ecx ] bx
jne r-xdata
cmp [ esi + eax * 2 ] 0x22
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x48 ]
push eax
call [ ShellExecuteExW@IAT ]
test eax eax
je r-xdata
test bl bl
jne r-xdata
cmp [ ecx ] 0x22
jne r-xdata
jmp r-xdata
push 0x20
pop ecx
mov [ esi + eax * 2 ] cx
pop edi
cmp [ rw-data ] 0x0
mov ebx [ ShowWindow@IAT ]
mov [ ebp - 0x1 ] 0x0
mov esi 0x3e8
jne r-xdata
push [ ebp - 0x38 ]
lea eax [ ebp - 0x848 ]
push eax
call sub_409153
push edi
lea eax [ ebp - 0x848 ]
push eax
call sub_4091c5
lea eax [ ebp - 0x848 ]
push eax
call sub_403f10
test al al
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x7d0
push [ ebp - 0x10 ]
call [ WaitForInputIdle@IAT ]
push [ ebp - 0x10 ]
call sub_40a50c
cmp [ rw-data ] 0x0
je r-xdata
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push [ ebp - 0x10 ]
call [ CloseHandle@IAT ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
call [ GetExitCodeProcess@IAT ]
test eax eax
je r-xdata
push 0x0
push [ rw-data ]
call ebx
mov [ ebp - 0x1 ] 0x1
cmp [ rw-data ] 0x0
je r-xdata
push edi
push [ ebp - 0x8 ]
call sub_40d319
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
add eax esi
cmp eax [ rw-data ]
jbe r-xdata
xor eax eax
cmp [ ebp + 0x8 ] al
sete al
dec eax
and eax 0xfffffce0
add eax esi
mov [ rw-data ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ rw-data ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ rw-data ] 0x1b58
jmp r-xdata
push 0x1
push [ rw-data ]
call ebx
sub_40ae31
push ebp
mov ebp esp
mov eax 0x150d8
call sub_4012c0
cmp [ ebp + 0xc ] 0x0
je r-xdata
leave
retn 0xc
push 0x1000
lea eax [ ebp + 0xf ]
push eax
lea eax [ ebp - 0x3830 ]
push eax
push [ ebp + 0xc ]
lea ecx [ ebp - 0x1 ]
lea edx [ ebp - 0x90d8 ]
call sub_40a436
mov [ ebp + 0xc ] eax
test eax eax
je r-xdata
push ebx
push esi
push edi
push esi
push eax
call sub_4097ad
add esi 0x2000
dec edi
jne r-xdata
xor esi esi
cmp esi 0xd
ja r-xdata
inc esi
cmp esi 0xe
jb r-xdata
push 0x1000
lea eax [ ebp + 0xf ]
push eax
lea eax [ ebp - 0x3830 ]
push eax
push [ ebp + 0xc ]
lea ecx [ ebp - 0x1 ]
lea edx [ ebp - 0x90d8 ]
call sub_40a436
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
jmp [ esi * 4 + jump_table_40b99d ]
push [ esi * 4 + rw-data ]
lea eax [ ebp - 0x90d8 ]
push eax
call sub_40d319
test eax eax
je r-xdata
jmp r-xdata
push 0x6
mov ebx 0x400
lea eax [ ebp - 0x3830 ]
lea esi [ ebp - 0x150d8 ]
pop edi
pop edi
pop esi
pop ebx
cmp [ ebp + 0x10 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
movzx eax [ ebp - 0x3830 ]
sub eax edi
je r-xdata
movzx eax [ ebp - 0x3830 ]
push eax
call sub_408d51
cmp eax 0x46
je r-xdata
cmp [ ebp + 0x10 ] 0x4
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x3
jne r-xdata
cmp [ ebp + 0x10 ] 0x5
jne r-xdata
cmp [ ebp + 0x10 ] 0x6
jne r-xdata
cmp [ ebp + 0x10 ] 0x7
jne r-xdata
push ebx
lea eax [ ebp - 0x830 ]
push eax
call sub_40e58e
lea eax [ ebp - 0x830 ]
push eax
lea eax [ ebp - 0x1830 ]
push eax
call sub_409153
lea eax [ ebp - 0x1830 ]
push eax
call sub_406a8d
lea eax [ ebp - 0x3830 ]
push eax
lea eax [ ebp - 0x1830 ]
push eax
call sub_4091c5
lea ecx [ ebp - 0x4438 ]
call sub_404e13
lea eax [ ebp - 0x1830 ]
push eax
lea ecx [ ebp - 0x4438 ]
call sub_404e43
lea ecx [ ebp - 0x58d8 ]
call sub_403f1e
push edi
lea eax [ ebp - 0x58d8 ]
push eax
lea ecx [ ebp - 0x4438 ]
call sub_4051d1
test al al
je r-xdata
mov eax [ rw-data ]
test eax eax
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x3830 ]
push eax
push [ ebp + 0x8 ]
call [ SetWindowTextW@IAT ]
jmp r-xdata
cmp [ rw-data ] di
jne r-xdata
movzx eax [ ebp - 0x3830 ]
push eax
call sub_40c601
test al al
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
sub eax 0x30
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp eax 0x55
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push r--data
lea eax [ ebp - 0x3830 ]
push eax
call sub_4091e3
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x7
jne r-xdata
lea eax [ ebp - 0x1030 ]
push eax
push ebx
call [ GetTempPathW@IAT ]
lea eax [ ebp - 0x1030 ]
push eax
call sub_406a8d
xor esi esi
push esi
push [ rw-data ]
lea eax [ ebp - 0x1030 ]
push eax
push r--data
lea eax [ ebp - 0x1830 ]
push ebx
push eax
call sub_40936c
mov edi [ GetFileAttributesW@IAT ]
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x3830 ] di
je r-xdata
push 0x1
jmp r-xdata
xor eax eax
mov [ ebp - 0x830 ] ax
movzx eax [ ebp - 0x150d8 ]
push eax
call sub_408d51
push ebx
cmp eax 0x50
je r-xdata
mov [ rw-data ] 0x1
lea ecx [ ebp - 0x4438 ]
call sub_404e30
jmp r-xdata
mov edi [ GetFileAttributesW@IAT ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push r--data
push eax
call sub_4091c5
xor eax eax
cmp [ ebp - 0x3830 ] 0x22
lea esi [ ebp - 0x3830 ]
mov [ ebp - 0x830 ] ax
jne r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
movzx eax [ ebp - 0x3830 ]
sub eax 0x30
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x0
dec eax
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
push edi
cmp [ rw-data ] edi
jne r-xdata
add esp 0x18
lea eax [ ebp - 0x1830 ]
push eax
call edi
cmp eax 0xffffffff
jne r-xdata
lea edi [ ebp + 0xc ]
call sub_40a5db
mov [ rw-data ] eax
lea eax [ ebp - 0x3830 ]
push eax
push [ ebp + 0x8 ]
call [ SetWindowTextW@IAT ]
lea ecx [ ebp - 0x3830 ]
call sub_40abd0
push rw-data
lea eax [ ebp - 0x830 ]
push eax
call sub_40c658
mov [ ebp - 0x8 ] 0x2
cmp eax 0x54
lea eax [ ebp - 0x830 ]
je r-xdata
lea eax [ ebp - 0x54d8 ]
push eax
call edi
cmp eax 0xffffffff
je r-xdata
call sub_406603
cmp eax ebx
je r-xdata
lea edi [ ebp + 0xc ]
call sub_40a5db
mov edi eax
lea edi [ ebp - 0x3830 ]
jmp r-xdata
push esi
call sub_409129
cmp eax ebx
jae r-xdata
lea esi [ ebp - 0x382e ]
dec eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov [ rw-data ] 0x2
inc esi
push esi
push [ rw-data ]
lea eax [ ebp - 0x1030 ]
push eax
push r--data
lea eax [ ebp - 0x1830 ]
push ebx
push eax
call sub_40936c
lea eax [ ebp - 0x1830 ]
push eax
push 0x66
push [ ebp + 0x8 ]
call [ SetDlgItemTextW@IAT ]
xor edi edi
cmp [ ebp - 0x3830 ] di
je r-xdata
lea eax [ ebp - 0x1030 ]
push eax
call sub_403f10
test al al
jne r-xdata
lea eax [ ebp - 0x130d6 ]
push eax
lea eax [ ebp - 0x1030 ]
push eax
call sub_409153
push 0x22
lea eax [ ebp - 0x102e ]
push eax
call sub_409292
cmp eax edi
je r-xdata
push rw-data
push eax
call sub_40c658
mov [ ebp - 0x8 ] 0x7
jmp r-xdata
push rw-data
push eax
call sub_40c658
mov [ ebp - 0x8 ] 0x10
jmp r-xdata
push 0x0
lea eax [ ebp - 0x58d8 ]
push eax
lea ecx [ ebp - 0x4438 ]
call sub_4051d1
test al al
jne r-xdata
lea eax [ ebp - 0x54d8 ]
push eax
call [ DeleteFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1030 ]
push eax
lea eax [ ebp - 0x830 ]
push eax
call sub_406c2e
lea eax [ ebp - 0x1030 ]
push eax
call sub_406a8d
lea eax [ ebp - 0x830 ]
push eax
call sub_409129
mov esi eax
cmp esi 0x4
jb r-xdata
push [ rw-data ]
call sub_409129
mov esi eax
xor esi esi
jmp r-xdata
test bl bl
je r-xdata
movzx eax [ esi ]
cmp ax 0x2e
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
cmp [ ebp - 0xb0d8 ] si
je r-xdata
xor ebx ebx
lea esi [ ebp - 0x1030 ]
cmp [ ebp - 0x1030 ] bx
je r-xdata
xor ecx ecx
mov [ eax ] cx
add eax 0x2
push eax
lea eax [ ebp - 0x1830 ]
push eax
call sub_409153
jmp r-xdata
xor eax eax
mov [ ebp - 0x68d8 ] ax
mov [ ebp - 0x1830 ] ax
lea eax [ ebp - 0x130d8 ]
push eax
lea eax [ ebp - 0x1030 ]
push eax
call sub_409153
cmp [ ebp - 0x1030 ] 0x22
jne r-xdata
push 0x0
lea eax [ ebp - 0x54d8 ]
push eax
call [ SetFileAttributesW@IAT ]
cmp [ ebp - 0x4cc8 ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
lea eax [ ebp - 0x3830 ]
push eax
push 0x0
call sub_406a38
test al al
jne r-xdata
lea eax [ ebp - 0x1030 ]
push eax
call sub_409129
cmp esi eax
ja r-xdata
push edi
push eax
call sub_4091c5
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
xor ecx ecx
mov [ eax ] cx
push edi
call sub_409129
add eax esi
lea eax [ eax + eax + 0xa ]
push eax
push [ rw-data ]
call sub_408d25
mov [ rw-data ] eax
test bl bl
je r-xdata
cmp ax 0x5c
je r-xdata
cmp [ esi + 0x2 ] 0x5c
jne r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
xor eax eax
mov [ ebp - 0x430 ] ax
push 0x2c
lea eax [ ebp - 0x3830 ]
push eax
call sub_409292
test eax eax
jne r-xdata
lea eax [ ebp - 0x70d8 ]
push eax
lea eax [ ebp - 0x1030 ]
push eax
call sub_406b68
cmp [ ebp - 0x830 ] si
jne r-xdata
lea eax [ ebp - 0x68d8 ]
push eax
lea eax [ ebp - 0xb0d8 ]
push eax
call sub_406b68
movzx eax [ esi ]
cmp ax 0x20
je r-xdata
push esi
lea eax [ ebp - 0x54d8 ]
push eax
push r--data
lea eax [ ebp - 0x1030 ]
push ebx
push eax
call sub_40936c
add esp 0x14
lea eax [ ebp - 0x1030 ]
push eax
call edi
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x54d8 ]
push eax
call sub_409129
xor ecx ecx
push 0x1e
mov [ ebp + eax * 2 - 0x54d6 ] cx
push ecx
lea eax [ ebp - 0x30 ]
push eax
call sub_408e46
push 0x14
pop eax
mov [ ebp - 0x20 ] ax
lea eax [ ebp - 0x54d8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x2c ] 0x3
call [ SHFileOperationW@IAT ]
push edi
call sub_408d06
jmp r-xdata
push esi
cmp ax di
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] di
je r-xdata
cmp [ ebp - 0x430 ] di
jne r-xdata
xor ecx ecx
cmp [ ebp - 0x3830 ] di
je r-xdata
lea eax [ ebp - 0x830 ]
push eax
call sub_406a8d
cmp [ ebp - 0x110d8 ] si
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x830 ]
push eax
call sub_409871
movzx edi ax
xor eax eax
mov [ esi ] ax
lea eax [ ebp - 0x1030 ]
push eax
call sub_403f10
test al al
je r-xdata
cmp ax 0x2f
jne r-xdata
inc esi
lea eax [ ebp - 0x1030 ]
push eax
lea eax [ ebp - 0x54d8 ]
push eax
call [ MoveFileW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x830 ]
push eax
mov edi rw-data
push edi
call sub_409153
push ebx
lea eax [ ebp - 0x830 ]
push eax
call sub_40a7fc
push 0x66
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov esi eax
lea eax [ ebp - 0x830 ]
push eax
push esi
call [ SetWindowTextW@IAT ]
mov ebx [ SendMessageW@IAT ]
push edi
push 0x0
push 0x143
push esi
call ebx
lea eax [ ebp - 0x830 ]
push eax
push edi
call sub_4091e3
test eax eax
je r-xdata
cmp [ eax + 0x2 ] 0x0
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x1
push edi
push r--data
push 0x80000002
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
cmp [ esi + 0x2 ] 0x3a
je r-xdata
push eax
jmp r-xdata
lea eax [ ebp - 0x3830 ]
push eax
call sub_4098ab
xor eax eax
mov [ ebp - 0x2830 ] ax
push 0x24
lea eax [ ebp - 0x430 ]
push eax
lea eax [ ebp - 0x3830 ]
push eax
push [ ebp + 0x8 ]
call [ MessageBoxW@IAT ]
cmp eax 0x6
je r-xdata
lea eax [ ebp - 0x150d8 ]
push eax
lea eax [ ebp - 0x3830 ]
push eax
call sub_409153
lea eax [ ebp - 0x130d8 ]
push eax
lea eax [ ebp - 0x430 ]
push eax
call sub_409153
lea eax [ ebp - 0x3830 ]
lea eax [ ebp - 0x830 ]
push eax
lea eax [ ebp - 0x4030 ]
push eax
call sub_409153
lea eax [ ebp - 0xd0d8 ]
cmp [ ebp - 0xd0d8 ] si
jne r-xdata
lea eax [ ebp - 0x110d8 ]
push eax
lea eax [ ebp - 0x830 ]
push eax
call sub_4091c5
lea eax [ ebp - 0x830 ]
push eax
call sub_406a8d
mov [ esi ] di
mov ebx esi
cmp di 0x2f
jne r-xdata
inc esi
inc esi
cmp [ esi ] 0x0
jne r-xdata
push 0x4
push 0x0
lea eax [ ebp - 0x1030 ]
push eax
call [ MoveFileExW@IAT ]
lea eax [ ebp - 0x830 ]
push eax
push 0x0
push 0x143
push esi
call ebx
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
cmp [ ebp - 0x830 ] di
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x830 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push edi
push r--data
push [ ebp - 0xc ]
mov [ ebp - 0x8 ] 0x800
call [ RegQueryValueExW@IAT ]
push [ ebp - 0xc ]
call [ RegCloseKey@IAT ]
shr [ ebp - 0x8 ] 0x1
mov eax 0x3ff
cmp [ ebp - 0x8 ] eax
jae r-xdata
lea eax [ ebp - 0x830 ]
push eax
call sub_409153
push 0x1
push [ ebp + 0x8 ]
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
call [ EndDialog@IAT ]
xor edi edi
lea esi [ ecx + ecx ]
lea eax [ ebp + esi - 0x382e ]
push eax
lea eax [ ebp - 0x430 ]
push eax
call sub_409153
xor eax eax
mov [ ebp + esi - 0x3830 ] ax
inc ecx
lea eax [ ebp + ecx * 2 - 0x3830 ]
cmp [ eax ] di
jne r-xdata
push eax
call sub_406d97
push eax
lea eax [ ebp - 0x830 ]
push eax
call sub_4091c5
lea eax [ ebp - 0x830 ]
push eax
call sub_407029
cmp eax esi
je r-xdata
lea eax [ ebp - 0x130d8 ]
test ebx ebx
je r-xdata
inc esi
inc esi
cmp [ esi ] 0x20
je r-xdata
push 0x2f
pop eax
mov [ ebp - 0x1830 ] ax
lea eax [ esi + 0x2 ]
push eax
lea eax [ ebp - 0x182e ]
jmp r-xdata
push esi
call sub_409129
mov edi eax
lea eax [ ebp - 0x830 ]
push eax
call sub_409129
add edi eax
cmp edi 0x3ff
jae r-xdata
lea eax [ ebp - 0x830 ]
push eax
call sub_409129
cmp [ ebp + eax * 2 - 0x832 ] 0x5c
je r-xdata
xor ecx ecx
mov [ ebp + eax * 2 - 0x830 ] cx
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x40
je r-xdata
jmp r-xdata
push r--data
lea eax [ ebp - 0x830 ]
push eax
call sub_4091c5
push r--data
push eax
call sub_40d319
test eax eax
je r-xdata
xor eax eax
mov [ ebx ] ax
push esi
lea eax [ ebp - 0x1830 ]
push eax
call sub_409153
mov [ ebx ] di
jmp r-xdata
push 0x22
lea eax [ ebp - 0x830 ]
push eax
call sub_4092bf
test eax eax
je r-xdata
push esi
lea eax [ ebp - 0x830 ]
push eax
call sub_4091c5
jmp r-xdata
push r--data
lea eax [ ebp - 0x830 ]
push eax
call sub_4091c5
push 0x0
lea eax [ ebp - 0x4030 ]
push eax
push 0x5
push 0x1000
call [ SHChangeNotify@IAT ]
jmp r-xdata
push 0x1
lea eax [ ebp - 0x830 ]
push eax
call sub_4041aa
lea eax [ ebp - 0x70d8 ]
push eax
lea eax [ ebp - 0x60d8 ]
push eax
call sub_409153
lea eax [ ebp - 0x60d8 ]
push eax
call sub_4070b7
lea eax [ ebp - 0x1830 ]
push eax
call sub_40c572
push eax
lea eax [ ebp - 0x68d8 ]
push eax
call sub_40c572
push eax
lea eax [ ebp - 0xf0d8 ]
push eax
call sub_40c572
push eax
lea eax [ ebp - 0x60d8 ]
push eax
call sub_40c572
push eax
lea eax [ ebp - 0x830 ]
push eax
lea eax [ ebp - 0x70d8 ]
push eax
push esi
call sub_40e4a3
cmp [ ebp - 0x4030 ] si
je r-xdata
sub_40b9d5
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
xor edi edi
push edi
push edi
push r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_4018e5
test al al
jne r-xdata
xor eax eax
inc eax
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
mov eax [ rw-data ]
push esi
mov esi [ SendMessageW@IAT ]
cmp eax edi
je r-xdata
dec eax
jne r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
push 0x1
push 0x80
push ebx
call esi
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
push ebx
call sub_40a8a7
push 0x65
push ebx
call [ GetDlgItem@IAT ]
push 0x10000
push edi
push 0x435
push eax
mov [ ebp + 0xc ] eax
call esi
push 0xf
call [ GetSysColor@IAT ]
push eax
push edi
push 0x443
push [ ebp + 0xc ]
call esi
push 0x3
push [ rw-data ]
push ebx
call sub_40ae31
pop esi
cmp [ rw-data ] edi
je r-xdata
push eax
push edi
push 0x172
push 0x66
push ebx
call [ SendDlgItemMessageW@IAT ]
pop edi
pop ebx
pop ebp
retn 0x10
push 0x1
dec eax
je r-xdata
push ebx
call [ SetForegroundWindow@IAT ]
mov ecx [ rw-data ]
push edi
push edi
push [ rw-data ]
push [ ebp + 0xc ]
push [ rw-data ]
call sub_40e1ef
push [ rw-data ]
call sub_408d06
jmp r-xdata
push edi
jmp r-xdata
push ebx
call [ EndDialog@IAT ]
sub_40bae6
push ebp
mov ebp esp
mov eax 0x6a64
call sub_4012c0
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push ebx
push r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4018e5
test al al
je r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x110
push edi
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] esi
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
dec eax
jne r-xdata
pop esi
pop ebx
leave
retn 0x10
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
push 0x1
push 0x80
push esi
call [ SendMessageW@IAT ]
xor eax eax
jmp r-xdata
movzx eax [ ebp + 0x10 ]
dec eax
je r-xdata
push esi
call sub_40a8a7
mov edi [ GetDlgItem@IAT ]
push 0x68
push esi
call edi
push __pe_WINRAR_export_address_table
push ebx
push 0x435
push eax
mov [ ebp + 0x14 ] eax
call [ SendMessageW@IAT ]
push 0x400
lea eax [ ebp - 0x113c ]
push eax
call sub_40e58e
push 0x66
push esi
call edi
mov [ ebp + 0x10 ] eax
mov eax rw-data
cmp [ rw-data ] bx
jne r-xdata
push eax
push ebx
push 0x172
push 0x6c
push esi
call [ SendDlgItemMessageW@IAT ]
pop edi
push 0x400
lea eax [ ebp - 0x93c ]
push eax
push 0x66
push esi
call [ GetDlgItemTextW@IAT ]
cmp [ rw-data ] bl
je r-xdata
dec eax
je r-xdata
push eax
push [ ebp + 0x10 ]
call [ SetWindowTextW@IAT ]
push [ ebp + 0x10 ]
call sub_40e5a5
push rw-data
push rw-data
push rw-data
mov [ rw-data ] bl
call sub_40a214
cmp [ rw-data ] ebx
jbe r-xdata
lea eax [ ebp - 0x113c ]
cmp [ rw-data ] bl
je r-xdata
mov [ rw-data ] ebx
cmp [ rw-data ] bl
je r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
cmp [ rw-data ] ebx
je r-xdata
sub eax 0x65
je r-xdata
cmp [ rw-data ] bl
jne r-xdata
push 0x7
push [ rw-data ]
push esi
call sub_40ae31
push 0x68
push esi
call [ GetDlgItem@IAT ]
mov [ ebp + 0xc ] eax
cmp [ rw-data ] ebx
jne r-xdata
xor edi edi
mov [ rw-data ] 0x1
inc edi
jmp r-xdata
push 0x1
jmp r-xdata
mov [ rw-data ] 0x1
push ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0x93c ]
push eax
push 0x64
call sub_408c71
push eax
push esi
call sub_4012eb
test al al
je r-xdata
mov edi [ SetDlgItemTextW@IAT ]
cmp [ rw-data ] bl
jne r-xdata
xor eax eax
mov edi 0x96
mov [ ebp - 0x6a64 ] ax
mov [ ebp + 0xc ] edi
push [ ebp + 0xc ]
call [ SetFocus@IAT ]
cmp [ rw-data ] bl
je r-xdata
mov edi [ SendMessageW@IAT ]
push 0xffffffff
push ebx
push 0xb1
push eax
call edi
push r--data
push ebx
push 0xc2
push [ ebp + 0xc ]
call edi
cmp [ rw-data ] ebx
jle r-xdata
push esi
call [ EndDialog@IAT ]
jmp r-xdata
xor eax eax
inc eax
lea eax [ ebp - 0x93c ]
push eax
push 0x66
push esi
call [ SetDlgItemTextW@IAT ]
jmp r-xdata
cmp [ rw-data ] ebx
jbe r-xdata
push 0xab
call sub_408c71
push eax
push 0x6b
push esi
call edi
push 0xaa
call sub_408c71
push eax
push 0x1
push esi
call edi
cmp [ ebp + 0xc ] 0x97
jne r-xdata
cmp [ rw-data ] bl
je r-xdata
lea eax [ ebp - 0x93c ]
push eax
lea eax [ ebp - 0x1140 ]
push eax
call sub_409153
lea eax [ ebp - 0x1140 ]
push eax
call sub_40a99a
lea eax [ ebp - 0x1140 ]
push eax
push 0xa5
call sub_408c71
push eax
lea eax [ ebp - 0x2a64 ]
push 0x480
push eax
call sub_40936c
add esp 0x10
lea eax [ ebp - 0x2a64 ]
push 0xa6
call sub_408c71
jmp r-xdata
push edi
push esi
call [ EndDialog@IAT ]
cmp [ rw-data ] bl
jne r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
push ebx
push [ rw-data ]
push esi
call sub_40ae31
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
lea eax [ ebp - 0x6a64 ]
push eax
call sub_4091c5
push [ ebp + 0xc ]
call sub_408c71
push eax
lea eax [ ebp - 0x6a64 ]
push eax
call sub_4091c5
cmp [ rw-data ] bl
jne r-xdata
inc [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x9c
jle r-xdata
push ebx
lea eax [ ebp - 0x93c ]
push eax
mov [ ebp + 0xf ] bl
call sub_4041aa
mov edi [ GetLastError@IAT ]
test al al
jne r-xdata
lea eax [ ebp - 0x93c ]
push eax
call sub_40a777
push eax
push ebx
call sub_409abc
cmp [ rw-data ] bl
jne r-xdata
push 0x7d
mov [ rw-data ] 0x1
call sub_408c71
push eax
push edi
push esi
call [ SetDlgItemTextW@IAT ]
mov eax [ rw-data ]
cmp eax 0x9
jne r-xdata
cmp [ rw-data ] bl
je r-xdata
push ebx
push [ ebp + 0x10 ]
call [ EnableWindow@IAT ]
cmp [ rw-data ] 0x1
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0xc ] edi
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0x93c ]
push eax
call sub_40e57b
mov [ ebp + 0x13 ] al
cmp al bl
jne r-xdata
call edi
cmp eax 0x5
je r-xdata
xor ebx ebx
cmp eax 0x3
setne bl
dec ebx
and ebx 0x5
add ebx 0x7f
lea ebx [ eax + 0x7a ]
jmp r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push ebx
push 0x67
push esi
call sub_4018a2
push ebx
push 0x66
push esi
call sub_4018a2
push 0x1
push [ rw-data ]
push esi
call sub_40ae31
push esi
call [ SetForegroundWindow@IAT ]
cmp [ rw-data ] 0x1
je r-xdata
mov ecx [ rw-data ]
push ebx
push ebx
push eax
push [ ebp + 0x14 ]
push [ rw-data ]
call sub_40e1ef
push [ rw-data ]
call sub_408d06
mov ecx [ rw-data ]
push ebx
push ebx
lea eax [ ebp - 0x6a64 ]
push eax
push [ ebp + 0x14 ]
push [ rw-data ]
call sub_40e1ef
cmp [ rw-data ] bl
jne r-xdata
call edi
cmp eax 0x5
jne r-xdata
mov [ ebp + 0xf ] 0x1
cmp eax 0x3
jne r-xdata
mov eax edi
jmp r-xdata
push 0x30
push 0x7e
call sub_408c71
push eax
push ebx
call sub_408c71
push eax
push esi
call [ MessageBoxW@IAT ]
jmp r-xdata
cmp [ rw-data ] bl
je r-xdata
cmp [ rw-data ] bl
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
cmp [ ebp + 0x13 ] bl
jne r-xdata
cmp [ ebp + 0x13 ] bl
je r-xdata
mov [ ebp + 0xf ] 0x1
push 0x7d
call sub_408c71
push eax
push 0x1
push esi
call edi
push ebx
push 0x1
push 0x111
push esi
cmp eax 0x1
jne r-xdata
push ebx
push sub_40b9d5
push ebx
push r--data
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
test eax eax
je r-xdata
push ebx
xor edi edi
push 0x67
inc edi
push esi
mov [ rw-data ] edi
call sub_4018c0
push ebx
push 0x66
push esi
call sub_4018c0
push ebx
push edi
push esi
call sub_4018a2
push edi
push 0x69
push esi
call sub_4018c0
push r--data
push 0x65
push esi
call [ SetDlgItemTextW@IAT ]
push 0x65
push esi
call [ GetDlgItem@IAT ]
mov [ ebp + 0xc ] eax
cmp eax ebx
je r-xdata
cmp [ rw-data ] bl
je r-xdata
cmp [ ebp + 0xf ] bl
sete [ ebp + 0xf ]
cmp [ ebp + 0xf ] bl
jne r-xdata
call [ GetTickCount@IAT ]
push eax
push r--data
lea eax [ ebp - 0x113c ]
push 0x400
push eax
call sub_40936c
add esp 0x10
lea ecx [ ebp - 0x2164 ]
call sub_403602
push 0x9
lea eax [ ebp - 0x113c ]
push eax
push ebx
lea ecx [ ebp - 0x2164 ]
call sub_403955
mov [ ebp + 0x13 ] al
cmp al bl
jne r-xdata
call [ PostMessageW@IAT ]
call [ SendMessageW@IAT ]
jmp r-xdata
push 0x5
push [ rw-data ]
push esi
call sub_40ae31
push 0x2
push [ rw-data ]
push esi
call sub_40ae31
push rw-data
call sub_40a19d
push 0x6
push [ rw-data ]
push esi
call sub_40ae31
cmp [ rw-data ] bl
jne r-xdata
push 0xfffffff0
push eax
call [ GetWindowLongW@IAT ]
or eax 0x80
push eax
push 0xfffffff0
push [ ebp + 0xc ]
call [ SetWindowLongW@IAT ]
mov [ ebp + 0xf ] bl
push 0x82
call sub_408c71
push eax
lea eax [ ebp - 0x93c ]
push eax
push r--data
lea eax [ ebp - 0x153c ]
push 0x600
push eax
call sub_40936c
add esp 0x14
push 0x1
mov ecx rw-data
call sub_4019e1
push 0x30
push 0x7e
call sub_408c71
push eax
lea eax [ ebp - 0x153c ]
push eax
push esi
call [ MessageBoxW@IAT ]
inc [ rw-data ]
jmp r-xdata
push 0x400
lea eax [ ebp - 0x113c ]
push eax
push ebx
call [ GetModuleFileNameW@IAT ]
push 0x80
lea eax [ ebp - 0x13c ]
push eax
mov ecx rw-data
call sub_409609
push rw-data
lea eax [ ebp - 0x13c ]
push eax
lea eax [ ebp - 0x93c ]
push eax
push r--data
lea eax [ ebp - 0x507c ]
push 0x130c
push eax
call sub_40936c
add esp 0x18
push r--data
mov edi 0x5800
push edi
push ebx
push 0x8000004
lea eax [ ebp - 0x113c ]
mov [ ebp - 0x2c ] eax
push ebx
lea eax [ ebp - 0x507c ]
push 0xffffffff
mov [ ebp - 0x3c ] 0x3c
mov [ ebp - 0x38 ] 0x40
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x1c ] ebx
call [ CreateFileMappingW@IAT ]
mov [ ebp + 0x10 ] eax
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x2164 ]
call sub_4037eb
call edi
cmp eax 0x5
jne r-xdata
push edi
push edi
push esi
call sub_4018a2
mov [ rw-data ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
call [ ShellExecuteExW@IAT ]
mov edi eax
push 0x80
lea eax [ ebp - 0x13c ]
push eax
call sub_409685
push 0x130c
lea eax [ ebp - 0x507c ]
push eax
call sub_409685
cmp edi ebx
je r-xdata
call [ GetCommandLineW@IAT ]
cmp eax ebx
je r-xdata
mov [ ebp + 0xf ] 0x1
cmp [ rw-data ] ebx
jne r-xdata
mov [ ebp + 0xf ] 0x1
push 0x2710
push [ ebp - 0x4 ]
call [ WaitForInputIdle@IAT ]
push 0x1f4
call [ Sleep@IAT ]
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
jmp r-xdata
push 0x7
push rw-data
call sub_409871
push 0x2
push rw-data
call sub_409871
push 0x10
push rw-data
call sub_409871
push ebx
push ebx
push ebx
push 0x2
push [ ebp + 0x10 ]
call [ MapViewOfFile@IAT ]
push edi
push rw-data
push eax
mov [ ebp + 0x14 ] eax
call sub_408e73
push [ ebp + 0x14 ]
call [ UnmapViewOfFile@IAT ]
push 0x2000
push eax
push rw-data
call sub_40c658
push 0x4
push [ rw-data ]
push ebx
call sub_40ae31
cmp [ ebp + 0xf ] bl
je r-xdata
push [ ebp + 0x10 ]
call [ CloseHandle@IAT ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
sub_40c33e
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
push 0x1
call sub_40ca1e
xor ebx ebx
push ebx
call [ OleInitialize@IAT ]
mov ecx rw-data
call sub_40d4d3
mov esi 0x5800
push esi
push ebx
mov edi rw-data
push edi
call sub_408e46
call [ GetCommandLineW@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push 0x400
mov esi rw-data
push esi
push ebx
call [ GetModuleFileNameW@IAT ]
push esi
push r--data
call [ SetEnvironmentVariableW@IAT ]
push ebx
call [ GetModuleHandleW@IAT ]
mov edi eax
push 0x64
push edi
mov [ rw-data ] edi
mov [ rw-data ] edi
call [ LoadIconW@IAT ]
push 0x65
push [ rw-data ]
mov [ rw-data ] eax
call [ LoadBitmapW@IAT ]
lea ecx [ ebp - 0xc ]
mov [ rw-data ] eax
call sub_40e5fe
push esi
mov ecx rw-data
call sub_408c5a
lea ecx [ ebp - 0x5c ]
call sub_40d91a
lea ecx [ ebp - 0x34 ]
call sub_40d91a
push 0x64
call sub_4099bc
push 0x64
mov [ ebp - 0x40 ] eax
call sub_4099bc
push ebx
push sub_40bae6
mov [ ebp - 0x18 ] eax
push ebx
lea eax [ ebp - 0x5c ]
mov [ rw-data ] eax
push r--data
lea eax [ ebp - 0x34 ]
push edi
mov [ rw-data ] eax
call [ DialogBoxParamW@IAT ]
lea ecx [ ebp - 0x34 ]
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_40d93c
lea ecx [ ebp - 0x5c ]
call sub_40d93c
lea ecx [ ebp - 0xc ]
call sub_40e658
cmp [ rw-data ] bl
je r-xdata
push eax
call sub_40a311
cmp [ rw-data ] bl
je r-xdata
mov ecx rw-data
call sub_40969b
cmp [ rw-data ] ebx
jbe r-xdata
call sub_40a54b
push [ ebp - 0x8 ]
push r--data
call [ SetEnvironmentVariableW@IAT ]
push r--data
push ebx
push 0x4
call [ OpenFileMappingW@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push [ rw-data ]
mov esi [ DeleteObject@IAT ]
call esi
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push [ rw-data ]
call sub_408d06
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
jmp r-xdata
push esi
push ebx
push ebx
push 0x4
push eax
call [ MapViewOfFile@IAT ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push eax
call esi
push [ ebp - 0x4 ]
call [ UnmapViewOfFile@IAT ]
push esi
push eax
push edi
call sub_408e73
push edi
push r--data
call [ SetEnvironmentVariableW@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] 0x1
cmp eax ebx
je r-xdata
cmp [ rw-data ] bl
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
call sub_40a50c
push 0xff
mov ecx rw-data
call sub_4019e1
call [ OleUninitialize@IAT ]
mov eax [ rw-data ]
cmp eax ebx
ja r-xdata
push eax
call [ Sleep@IAT ]
push eax
call [ ExitProcess@IAT ]
mov eax [ rw-data ]
sub_40c630
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0xc ]
test esi esi
jbe r-xdata
mov eax edi
pop edi
pop esi
retn 0xc
lea eax [ esi - 0x1 ]
push eax
push [ esp + 0x14 ]
push edi
call sub_40901c
mov [ edi + esi - 0x1 ] 0x0
sub_40c658
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0xc ]
test esi esi
jbe r-xdata
mov eax edi
pop edi
pop esi
retn 0xc
lea eax [ esi - 0x1 ]
push eax
push [ esp + 0x14 ]
push edi
call sub_409183
xor eax eax
mov [ edi + esi * 2 - 0x2 ] ax
sub_40c682
push ebp
mov ebp esp
sub esp 0x6c
push esi
xor esi esi
push ebx
push 0x0
push 0xa
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401120
add ecx 0x30
mov [ ebp + esi * 2 - 0x6c ] cx
inc esi
mov [ ebp + 0x8 ] eax
or eax edx
mov [ ebp - 0x4 ] ebx
mov [ ebp + 0xc ] edx
jne r-xdata
mov edx [ ebp + 0x10 ]
pop ebx
test esi esi
jbe r-xdata
xor eax eax
mov [ edx + esi * 2 ] ax
pop esi
leave
retn 0xc
lea ecx [ ebp + esi * 2 - 0x6e ]
push edi
mov di [ ecx ]
mov [ edx + eax * 2 ] di
inc eax
dec ecx
dec ecx
cmp eax esi
jb r-xdata
pop edi
sub_40c6d8
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
cmp eax 0x4
jb r-xdata
push esi
shl eax 0xb
add eax rw-data
push 0x400
mov esi eax
push esi
push [ esp + 0x10 ]
call sub_40d163
xor eax eax
mov [ esi + 0x7fe ] ax
mov eax esi
pop esi
retn 0x4
xor eax eax
mov [ rw-data ] eax
sub_40c718
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
jmp r-xdata
movzx eax [ edx ]
push eax
call sub_40c613
test al al
jne r-xdata
inc edx
inc edx
movzx ecx [ edx ]
test cx cx
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov [ ebp + 0xb ] 0x0
xor eax eax
jmp r-xdata
cmp cx 0x22
jne r-xdata
movzx eax cx
push eax
call sub_40c613
test al al
jne r-xdata
pop ebp
retn 0xc
test edi edi
je r-xdata
lea eax [ edx + 0x2 ]
cmp [ eax ] cx
jne r-xdata
test edi edi
je r-xdata
inc edx
inc edx
movzx ecx [ edx ]
test cx cx
jne r-xdata
lea eax [ ebx - 0x1 ]
cmp esi eax
jae r-xdata
cmp [ ebp + 0xb ] 0x0
sete al
mov [ ebp + 0xb ] al
jmp r-xdata
test edi edi
je r-xdata
pop edi
pop esi
mov eax edx
pop ebx
xor eax eax
mov [ edi + esi * 2 ] ax
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov [ edi + esi * 2 ] cx
inc esi
mov edx eax
jmp r-xdata
lea ecx [ ebx - 0x1 ]
cmp esi ecx
jae r-xdata
push 0x22
pop ecx
mov [ edi + esi * 2 ] cx
inc esi
sub_40c7e0
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
cmp ecx eax
jbe r-xdata
pop esi
retn 0x4
mov edx eax
shr edx 0x2
push edi
lea edi [ edx + eax + 0x20 ]
cmp ecx edi
jbe r-xdata
push edi
push [ esi ]
call sub_408d25
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi ecx
mov [ esi + 0x8 ] edi
pop edi
mov ecx rw-data
call sub_401a5b
sub_40c824
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
add [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
cmp ecx eax
jbe r-xdata
pop esi
retn 0x4
mov edx eax
shr edx 0x2
push edi
lea edi [ edx + eax + 0x20 ]
cmp ecx edi
jbe r-xdata
lea eax [ edi + edi ]
push eax
push [ esi ]
call sub_408d25
mov [ esi ] eax
test eax eax
jne r-xdata
mov edi ecx
mov [ esi + 0x8 ] edi
pop edi
mov ecx rw-data
call sub_401a5b
sub_40c890
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test ebx ebx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov ebx r--data
mov edi [ esi + 0x4 ]
push ebx
call sub_408ef5
inc eax
push eax
mov ecx esi
call sub_40c7e0
mov eax [ esi ]
push ebx
add eax edi
push eax
call sub_408fe8
push [ ebp + 0xc ]
mov ebx [ esi + 0x14 ]
lea edi [ esi + 0x10 ]
call sub_409129
inc eax
push eax
mov ecx edi
call sub_40c824
mov eax [ edi ]
push [ ebp + 0xc ]
lea eax [ eax + ebx * 2 ]
push eax
call sub_409153
inc [ esi + 0x20 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov [ ebp + 0xc ] r--data
sub_40c8fd
push esi
mov esi ecx
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x4 ]
jae r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x1c ]
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
and [ eax ] 0x0
push edi
mov edi [ esi ]
add edi eax
push edi
call sub_408ef5
inc eax
add [ esi + 0xc ] eax
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
xor al al
and [ eax ] 0x0
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x10 ]
lea edi [ ecx + eax * 2 ]
push edi
call sub_409129
inc eax
add [ esi + 0x1c ] eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov [ eax ] edi
mov al 0x1
pop edi
jmp r-xdata
mov [ eax ] edi
pop esi
retn 0x8
sub_40c967
xor eax eax
push esi
mov esi ecx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
call sub_40c86b
mov eax esi
pop esi
retn
sub_40c9a2
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_40c8fd
test al al
je r-xdata
leave
retn 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40901c
mov al 0x1
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call sub_409183
sub_40ca1e
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
retn 0x4
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
movzx ecx [ esp + 0x4 ]
neg ecx
sbb ecx ecx
and ecx r--data
push ecx
call eax
sub_40ca52
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi ecx
mov ax [ esi ]
mov [ ebp - 0x18 ] ax
mov ax [ esi + 0x4 ]
mov [ ebp - 0x16 ] ax
mov ax [ esi + 0x8 ]
mov [ ebp - 0x12 ] ax
mov ax [ esi + 0xc ]
mov [ ebp - 0x10 ] ax
mov ax [ esi + 0x10 ]
mov [ ebp - 0xe ] ax
mov ax [ esi + 0x14 ]
mov [ ebp - 0xc ] ax
xor eax eax
mov [ ebp - 0xa ] ax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov esi [ esi + 0x18 ]
add [ ebp - 0x8 ] esi
cmp [ ebp - 0x8 ] esi
pop esi
jae r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
call [ LocalFileTimeToFileTime@IAT ]
leave
retn 0x4
inc [ ebp - 0x4 ]
sub_40cabe
mov edx [ ecx ]
mov eax [ esp + 0x4 ]
cmp edx [ eax ]
jne r-xdata
xor eax eax
mov edx [ ecx + 0x4 ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx [ ecx + 0x8 ]
cmp edx [ eax + 0x8 ]
jne r-xdata
mov edx [ ecx + 0xc ]
cmp edx [ eax + 0xc ]
jne r-xdata
mov edx [ ecx + 0x10 ]
cmp edx [ eax + 0x10 ]
jne r-xdata
mov edx [ ecx + 0x14 ]
cmp edx [ eax + 0x14 ]
jne r-xdata
mov ecx [ ecx + 0x18 ]
cmp ecx [ eax + 0x18 ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x4
sub_40cb02
mov eax [ ecx ]
sub eax 0x3c
shl eax 0x4
or eax [ ecx + 0x4 ]
shl eax 0x5
or eax [ ecx + 0x8 ]
shl eax 0x5
or eax [ ecx + 0xc ]
shl eax 0x6
or eax [ ecx + 0x10 ]
mov ecx [ ecx + 0x14 ]
shl eax 0x5
shr ecx 0x1
or eax ecx
retn
sub_40cb2a
mov ecx [ esp + 0x4 ]
test cl 0x3
jne r-xdata
xor eax eax
push esi
mov eax ecx
push 0x64
cdq
pop esi
idiv esi
pop esi
test edx edx
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax ecx
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
retn 0x4
sub_40cb5f
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
mov esi ecx
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
movzx edi [ ebp - 0x18 ]
movzx eax [ ebp - 0x1a ]
movzx ecx [ ebp - 0x1e ]
movzx edx [ ebp - 0x20 ]
mov [ esi + 0xc ] edi
movzx edi [ ebp - 0x16 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] edi
movzx edi [ ebp - 0x14 ]
dec eax
mov [ esi + 0x20 ] eax
xor eax eax
mov [ esi + 0x14 ] edi
movzx edi [ ebp - 0x1c ]
inc eax
mov [ esi ] edx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x1c ] edi
cmp ecx eax
jbe r-xdata
cmp ecx 0x2
jbe r-xdata
mov edi rw-data
push ebx
xor eax eax
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov eax [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
xor edx edx
xor ecx ecx
sub edx ecx
sub edx [ ebp - 0x10 ]
pop edi
add edx [ ebp - 0x8 ]
mov eax esi
mov [ esi + 0x18 ] edx
pop esi
leave
retn 0x4
push edx
call sub_40cb2a
test al al
je r-xdata
mov ebx [ edi ]
add [ esi + 0x20 ] ebx
inc eax
add edi 0x4
cmp eax ecx
jb r-xdata
pop ebx
inc [ esi + 0x20 ]
sub_40cc16
push ebp
mov ebp esp
push ecx
push ecx
push esi
xor esi esi
cmp [ ecx ] esi
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_40ca52
push 0x1
push esi
push esi
push [ ebp - 0x4 ]
call sub_401030
mov ecx [ ebp - 0x8 ]
xor esi esi
add eax ecx
adc edx esi
xor eax eax
xor edx edx
jmp r-xdata
pop esi
leave
retn
sub_40cc49
push ebx
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
push edi
call sub_40cc16
mov ecx esi
mov ebx eax
mov edi edx
call sub_40cc16
cmp edx edi
jl r-xdata
xor eax eax
jg r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp eax ebx
jbe r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_40cc79
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_40cc49
test al al
jne r-xdata
xor eax eax
inc eax
push [ esp + 0x8 ]
mov ecx esi
call sub_40cabe
test al al
jne r-xdata
xor eax eax
jmp r-xdata
pop esi
retn 0x4
sub_40cca3
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push esi
mov [ rw-data ] 0x0
je r-xdata
xor al al
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp [ eax ] 0x63
jne r-xdata
cmp [ ebp + 0xc ] 0x4
jb r-xdata
mov al [ rw-data ]
jmp r-xdata
push ebx
push edi
pop esi
pop ebp
retn 0xc
pop edi
pop ebx
cmp ebx 0x9901
jne r-xdata
push 0xfffffffc
pop eax
sub eax edi
add [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] 0x4
lea esi [ esi + edi + 0x4 ]
jae r-xdata
cmp edi 0x7
jb r-xdata
push esi
call sub_404c8d
movzx ebx ax
lea eax [ esi + 0x2 ]
push eax
call sub_404c8d
movzx edi ax
mov eax [ ebp + 0xc ]
add eax 0xfffffffc
cmp edi eax
ja r-xdata
lea eax [ esi + 0x6 ]
push eax
call sub_404c8d
mov ecx 0x4541
cmp ax cx
jne r-xdata
lea eax [ esi + 0x4 ]
push eax
call sub_404c8d
dec ax
neg ax
sbb al al
inc al
mov [ rw-data ] al
movzx eax [ esi + 0x8 ]
mov [ rw-data ] eax
cmp eax 0x3
ja r-xdata
lea eax [ esi + 0x9 ]
push eax
call sub_404c8d
mov ecx [ ebp + 0x10 ]
mov [ ecx ] ax
mov [ rw-data ] 0x1
sub_40cda4
mov eax [ rw-data ]
mov ecx eax
xor ecx [ esp + 0x4 ]
shr eax 0x8
mov edx 0xff
and ecx edx
xor eax [ ecx * 4 + rw-data ]
mov ecx [ rw-data ]
mov [ rw-data ] eax
movzx eax al
add eax [ rw-data ]
imul eax eax 0x8088405
inc eax
mov [ rw-data ] eax
shr eax 0x18
xor eax ecx
and eax edx
shr ecx 0x8
xor ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x4 ]
mov [ rw-data ] ecx
retn 0x4
sub_40cdfe
push esi
mov esi [ esp + 0x8 ]
mov [ rw-data ] 0x12345678
mov [ rw-data ] 0x23456789
mov [ rw-data ] 0x34567890
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
movsx eax al
push eax
call sub_40cda4
inc esi
pop esi
retn 0x4
sub_40ce37
push ebp
mov ebp esp
sub esp 0xc
push esi
push [ ebp + 0xc ]
call sub_40cdfe
push 0xc
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_408e73
xor esi esi
lea edx [ ebp + esi - 0xc ]
call sub_40cd84
xor [ edx ] al
movzx eax [ edx ]
push eax
call sub_40cda4
inc esi
cmp esi 0xc
jl r-xdata
movzx ax [ ebp - 0x1 ]
movzx ecx ax
mov eax [ rw-data ]
test [ eax + 0x40 ] 0x2
movzx eax [ rw-data ]
jne r-xdata
movzx ecx cx
cmp ecx eax
je r-xdata
movzx eax [ rw-data ]
mov ecx [ rw-data ]
mov eax ecx
cdq
cmp edx [ rw-data ]
push edi
jl r-xdata
or eax 0xffffffff
jmp r-xdata
mov edi ecx
mov edx [ rw-data ]
jg r-xdata
pop esi
leave
retn 0x8
test edi edi
jne r-xdata
mov edi edx
jmp r-xdata
cmp eax edx
jbe r-xdata
dec edi
call sub_40cd84
xor [ esi ] al
movzx eax [ esi ]
push eax
call sub_40cda4
inc esi
xor eax eax
pop edi
mov esi [ rw-data ]
jmp r-xdata
sub_40cee7
push esi
push edi
push [ rw-data ]
push ebx
call sub_40ce37
mov edi eax
test edi edi
je r-xdata
mov eax edi
push [ rw-data ]
call sub_408ef5
inc eax
push eax
call sub_408ced
mov esi eax
test esi esi
jne r-xdata
push esi
push [ rw-data ]
call CharToOemA
push esi
push ebx
call sub_40ce37
mov edi eax
test edi edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
call sub_408d06
push esi
push [ rw-data ]
call OemToCharA
push esi
push ebx
call sub_40ce37
mov edi eax
pop edi
pop esi
retn
sub_40cf51
push ebp
mov ebp esp
sub esp 0x110
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] bl
jne r-xdata
mov edi 0x81
cmp [ rw-data ] ebx
je r-xdata
mov eax [ rw-data ]
and [ eax + 0x40 ] 0xfffffffe
call sub_40449c
mov [ ebp - 0x4 ] ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ rw-data ] ebx
cmp [ rw-data ] bl
je r-xdata
call sub_404759
jg r-xdata
push edi
call sub_408ced
mov [ rw-data ] eax
cmp eax ebx
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
add [ rw-data ] 0xffffffff
adc [ rw-data ] 0xffffffff
js r-xdata
call sub_404414
mov eax [ rw-data ]
or [ eax + 0x40 ] 0x1
mov eax [ rw-data ]
movzx ax [ eax ]
inc [ rw-data ]
jmp r-xdata
cmp [ rw-data ] ebx
jb r-xdata
push edi
push [ rw-data ]
lea eax [ ebp - 0x4 ]
push eax
push rw-data
mov [ ebp - 0x4 ] ebx
call [ rw-data ]
mov esi eax
cmp esi 0x5
jne r-xdata
jmp r-xdata
xor eax eax
lea ebx [ ebp - 0x10 ]
call sub_40cee7
test eax eax
je r-xdata
push eax
call sub_408d06
mov [ rw-data ] ebx
push edi
call sub_408ced
mov [ rw-data ] eax
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xc
movzx eax ax
mov [ ebp + ecx - 0x10 ] al
jl r-xdata
cmp esi ebx
je r-xdata
push [ rw-data ]
call sub_408d06
mov [ rw-data ] ebx
jmp r-xdata
push 0x5
pop eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi 0x80
push esi
lea eax [ ebp - 0x110 ]
push eax
mov ecx rw-data
call sub_409609
push esi
push [ rw-data ]
lea eax [ ebp - 0x110 ]
push eax
call sub_40d131
push 0x100
lea eax [ ebp - 0x110 ]
push eax
call sub_409685
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] bl
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] bl
mov [ ebp - 0x4 ] ebx
pop edi
pop esi
pop ebx
leave
retn
xor ebx ebx
xor eax eax
inc eax
jmp r-xdata
lea ebx [ ebp - 0x10 ]
call sub_40cee7
test eax eax
je r-xdata
xor eax eax
cmp esi 0xfffffffe
sete al
lea eax [ eax * 8 + 0x1 ]
jmp r-xdata
sub_40d131
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
xor ebx ebx
push ebx
push ebx
push [ ebp + 0x10 ]
mov [ ebp - 0x1 ] 0x1
push eax
push 0xffffffff
push [ ebp + 0x8 ]
mov [ eax ] bl
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop ebx
leave
retn 0xc
mov [ ebp - 0x1 ] bl
sub_40d163
mov eax [ esp + 0x8 ]
push ebx
push [ esp + 0x10 ]
xor ecx ecx
push eax
push 0xffffffff
push [ esp + 0x14 ]
mov bl 0x1
push ecx
push ecx
mov [ eax ] cx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov al bl
pop ebx
retn 0xc
xor bl bl
sub_40d18e
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
dec eax
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x1
mov [ ebp + 0x10 ] eax
test edi edi
je r-xdata
movzx edx cl
inc esi
cmp edx 0x80
jae r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
leave
retn 0xc
xor eax eax
mov [ edi ] ax
mov eax edx
and eax 0xffffffe0
cmp eax 0xc0
jne r-xdata
mov ecx edx
jmp r-xdata
mov eax edx
and eax 0xfffffff0
cmp eax 0xe0
jne r-xdata
mov cl [ esi ]
mov al cl
and al 0xc0
cmp al 0x80
jne r-xdata
test edi edi
je r-xdata
mov eax edx
and eax 0xfffffff8
cmp eax 0xf0
jne r-xdata
mov al [ esi ]
mov cl al
and cl 0xc0
cmp cl 0x80
jne r-xdata
movsx ecx cl
and edx 0x1f
and ecx 0x3f
shl edx 0x6
or ecx edx
inc esi
jmp r-xdata
cmp ecx 0xffff
jbe r-xdata
dec [ ebp + 0x10 ]
js r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov al [ esi ]
and al 0xc0
cmp al 0x80
jne r-xdata
mov bl [ esi + 0x1 ]
mov cl bl
and cl 0xc0
cmp cl 0x80
jne r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
mov al [ esi + 0x1 ]
mov cl al
and cl 0xc0
cmp cl 0x80
jne r-xdata
movsx ecx al
and ecx 0x3f
and edx 0xf
shl edx 0x6
or ecx edx
movsx eax bl
shl ecx 0x6
and eax 0x3f
or ecx eax
inc esi
inc esi
jmp r-xdata
mov [ edi ] cx
inc edi
inc edi
jmp r-xdata
cmp ecx 0x10ffff
ja r-xdata
dec [ ebp + 0x10 ]
js r-xdata
mov bl [ esi + 0x2 ]
mov cl bl
and cl 0xc0
cmp cl 0x80
jne r-xdata
test edi edi
je r-xdata
movsx ecx [ esi ]
and ecx 0x3f
and edx 0x7
movsx eax al
shl edx 0x6
or ecx edx
shl ecx 0x6
and eax 0x3f
or ecx eax
movsx eax bl
shl ecx 0x6
and eax 0x3f
or ecx eax
add esi 0x3
lea eax [ ecx - 0x10000 ]
shr eax 0xa
sub eax 0x2800
mov [ edi ] ax
inc edi
and ecx 0x3ff
inc edi
sub ecx 0x2400
jmp r-xdata
sub_40d319
push ebp
mov ebp esp
mov eax 0x1000
call sub_4012c0
call sub_406603
test eax eax
je r-xdata
push esi
mov esi 0x800
push esi
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x8 ]
call sub_40d131
push esi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
call sub_40d131
lea eax [ ebp - 0x800 ]
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_40c591
pop esi
push 0xffffffff
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
push 0x1001
push 0x400
call [ CompareStringW@IAT ]
dec eax
dec eax
jmp r-xdata
leave
retn 0x8
sub_40d38b
push ebp
mov ebp esp
mov eax 0x1000
call sub_4012c0
push esi
mov esi 0x800
push esi
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp + 0x8 ]
call sub_406cfe
push esi
lea eax [ ebp - 0x800 ]
push eax
push [ ebp + 0xc ]
call sub_406cfe
lea eax [ ebp - 0x800 ]
push eax
lea eax [ ebp - 0x1000 ]
push eax
call sub_40c591
pop esi
leave
retn 0x8
sub_40d3d6
push ebp
mov ebp esp
call sub_406603
test eax eax
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d38b
push esi
push edi
push [ ebp + 0x8 ]
call sub_409129
mov esi [ ebp + 0x10 ]
cmp eax esi
jae r-xdata
mov edi esi
push [ ebp + 0x8 ]
call sub_409129
mov edi eax
jmp r-xdata
mov eax esi
push [ ebp + 0xc ]
call sub_409129
jmp r-xdata
push [ ebp + 0xc ]
call sub_409129
cmp eax esi
jae r-xdata
pop ebp
retn 0xc
push eax
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
push 0x1001
push 0x400
call [ CompareStringW@IAT ]
dec eax
pop edi
dec eax
pop esi
jmp r-xdata
sub_40d446
push ebp
mov ebp esp
sub esp 0x20
call sub_406603
test eax eax
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x1e ] ax
push 0xa
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] si
call sub_40d131
cmp [ ebp - 0xc ] 0x3f
jne r-xdata
push [ ebp + 0x8 ]
call [ CharUpperW@IAT ]
jmp r-xdata
push [ ebp - 0xc ]
call sub_40c5d7
mov [ ebp - 0xc ] al
push 0x1000000
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40d163
movzx eax [ ebp - 0x20 ]
mov eax esi
jmp r-xdata
leave
retn 0x4
pop esi
sub_40d4ad
mov edx [ esp + 0x4 ]
xor eax eax
jmp r-xdata
movzx ecx [ edx ]
cmp cx 0x30
jae r-xdata
cmp cx 0x39
ja r-xdata
retn 0x4
imul eax eax 0xa
movzx ecx cx
inc edx
lea eax [ eax + ecx - 0x30 ]
inc edx
sub_40d4d3
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
lea eax [ ebp - 0x14 ]
push eax
xor esi esi
push esi
mov edi ecx
call [ GetCPInfo@IAT ]
cmp [ ebp - 0x14 ] 0x1
seta al
mov [ edi + 0x100 ] al
push esi
call [ IsDBCSLeadByte@IAT ]
test eax eax
setne al
mov [ esi + edi ] al
inc esi
cmp esi 0x100
jb r-xdata
pop edi
pop esi
leave
retn
sub_40d52f
push esi
mov esi [ esp + 0x8 ]
mov dl [ esi ]
xor eax eax
test dl dl
je r-xdata
pop esi
retn 0x8
push edi
movsx edx dl
cmp edx [ esp + 0x10 ]
jne r-xdata
inc esi
inc esi
jmp r-xdata
inc esi
mov eax esi
mov dl [ esi ]
test dl dl
jne r-xdata
movzx edi dl
cmp [ edi + ecx ] 0x0
je r-xdata
pop edi
sub_40d56d
mov eax [ esp + 0x4 ]
test eax eax
jl r-xdata
sub eax 0x32
je r-xdata
cmp eax 0xc
jae r-xdata
push 0x5
dec eax
je r-xdata
mov eax [ eax * 4 + rw-data ]
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
dec eax
je r-xdata
retn 0x4
push 0x9
jmp r-xdata
sub eax 0x1c
je r-xdata
pop eax
mov eax 0xff
jmp r-xdata
dec eax
je r-xdata
dec eax
sub_40d5ad
push esi
call sub_4052c3
call sub_4083bd
mov esi eax
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push eax
call sub_408d06
and [ rw-data ] 0x0
push esi
call sub_40d56d
test eax eax
je r-xdata
mov eax 0xff
jmp r-xdata
mov eax esi
pop esi
retn
push eax
mov ecx rw-data
call sub_4019e1
sub_40d5f9
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x18 ] 0x0
sub_40d63f
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x10 ]
call [ IsWindow@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
retn 0x8
sub_40d668
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi - 0x4 ]
xor ebx ebx
push edi
test eax eax
je r-xdata
xor eax eax
lea eax [ esi + 0x4 ]
jmp r-xdata
mov edi [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x10 ]
call [ GetClientRect@IAT ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0xc ] ecx
call [ CopyRect@IAT ]
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x14
mov [ eax + 0x4 ] ebx
mov ecx [ esi + 0x10 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
mov eax [ edi ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x18
sub_40d73d
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
mov edi ecx
call [ CLSIDFromString@IAT ]
lea esi [ edi + 0x18 ]
push esi
push r--data
push 0x5
push 0x0
lea eax [ ebp - 0x14 ]
push eax
call [ CoCreateInstance@IAT ]
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi ]
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push edi
push eax
call [ ecx + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov esi [ esi ]
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
push r--data
push esi
call [ eax ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40d7c3
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
pop esi
leave
retn
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push 0x1
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40d843
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x18 ] edi
je r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp [ ebp + 0x8 ] edi
je r-xdata
push edi
push [ esi + 0x14 ]
push edi
push esi
push edi
push 0xfffffffd
push eax
call [ ecx + 0x2c ]
push ebx
lea ebx [ esi + 0x1c ]
push ebx
push [ esi + 0x14 ]
push edi
push esi
push edi
push 0xfffffffb
push eax
call [ ecx + 0x2c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ebx
push [ esi + 0x14 ]
push edi
push esi
push edi
push 0xffffffff
push eax
call [ ecx + 0x2c ]
pop ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40d8b3
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea edx [ esi + 0x1c ]
push edx
push [ esi + 0x14 ]
push 0x0
push esi
push 0x0
push 0xfffffffc
push eax
call [ ecx + 0x2c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40d8ff
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
mov eax [ esi + 0x18 ]
pop esi
retn
xor eax eax
pop esi
retn
sub_40d91a
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] cl
mov [ eax + 0x20 ] cl
mov [ eax + 0x21 ] cl
mov [ eax + 0x24 ] ecx
retn
sub_40d93c
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0xc ] 0x0
pop esi
retn
call sub_40d7c3
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x8 ] 0x0
sub_40d982
push ebp
mov ebp esp
sub esp 0x28
push ebx
mov ebx [ GetTickCount@IAT ]
push esi
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
call ebx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
call ebx
sub eax [ ebp - 0xc ]
cmp eax 0x2710
ja r-xdata
cmp [ ebp - 0x4 ] edi
jne r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
push esi
call [ eax + 0x48 ]
mov esi eax
cmp esi edi
jl r-xdata
push edi
push edi
push edi
push edi
lea eax [ ebp - 0x28 ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
je r-xdata
xor eax eax
cmp esi edi
pop edi
pop esi
setge al
pop ebx
leave
retn 0x8
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
mov esi eax
cmp esi edi
jl r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
push esi
call [ eax + 0x48 ]
test eax eax
jl r-xdata
push edi
push edi
push edi
lea eax [ ebp - 0x28 ]
push eax
call [ GetMessageW@IAT ]
lea eax [ ebp - 0x28 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x28 ]
push eax
call [ DispatchMessageW@IAT ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
mov esi eax
cmp esi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov esi eax
sub_40da59
mov eax [ esp + 0x4 ]
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx 0x3c
jne r-xdata
xor al al
inc eax
inc eax
cmp [ eax + 0x2 ] 0x2f
jne r-xdata
push 0x2
pop ecx
mov al 0x1
jmp r-xdata
inc ecx
cmp ecx 0x14
jb r-xdata
retn 0x4
cmp [ eax + ecx * 2 ] 0x3e
je r-xdata
sub_40da8f
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_409129
imul eax eax 0xc
add eax 0x200
push eax
call sub_408ced
mov edi eax
mov [ ebp - 0x8 ] edi
test edi edi
jne r-xdata
push ebx
push r--data
push edi
call sub_409153
push edi
call sub_409129
mov ebx eax
mov eax esi
cmp [ eax ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
push [ ebp + 0x8 ]
xor eax eax
mov [ edi + ebx * 2 ] ax
call sub_408d06
mov eax edi
pop ebx
push 0x4
push r--data
push esi
call sub_40d3d6
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x4
cmp esi [ ebp + 0x8 ]
jbe r-xdata
lea edi [ esi + 0x4 ]
cmp [ edi ] 0xd
jne r-xdata
mov ax [ esi ]
mov [ edi + ebx * 2 ] ax
inc ebx
cmp [ esi ] 0x20
jne r-xdata
mov edi [ ebp - 0x8 ]
inc esi
inc esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
lea eax [ eax + ebx * 2 ]
mov [ ebp - 0x4 ] eax
cmp [ esi - 0x2 ] 0x20
jne r-xdata
inc esi
inc esi
cmp [ esi ] 0x0
jne r-xdata
push r--data
push [ ebp - 0x4 ]
call sub_409153
add [ ebp - 0x4 ] 0x8
mov esi edi
lea edi [ esi + 0x4 ]
add ebx 0x4
cmp [ edi ] 0xd
je r-xdata
push r--data
lea eax [ edi + ebx * 2 ]
push eax
call sub_409153
add ebx 0x6
jmp r-xdata
cmp [ esi + 0x6 ] 0xa
jne r-xdata
sub_40db7d
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
mov esi [ GetTickCount@IAT ]
push edi
mov [ ebp - 0x8 ] ecx
call esi
mov [ ebp - 0x4 ] eax
call esi
sub eax [ ebp - 0x4 ]
xor ebx ebx
mov edi 0x2710
jmp r-xdata
cmp eax edi
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
lea edx [ ebp - 0xc ]
push edx
push eax
call [ ecx + 0xe0 ]
cmp [ ebp - 0xc ] 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ VariantInit@IAT ]
push 0x3
pop eax
push ebx
lea edx [ ebp - 0x1c ]
push edx
mov [ ebp - 0x1c ] ax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
push 0x2
push 0x3f
mov [ ebp - 0x14 ] 0x96
mov ecx [ eax ]
push eax
call [ ecx + 0xd8 ]
pop edi
pop esi
pop ebx
leave
retn
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x38 ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
je r-xdata
call esi
sub eax [ ebp - 0x4 ]
lea eax [ ebp - 0x38 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x38 ]
push eax
call [ DispatchMessageW@IAT ]
push ebx
push ebx
push ebx
lea eax [ ebp - 0x38 ]
push eax
call [ GetMessageW@IAT ]
sub_40dc5e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
push r--data
push edi
call sub_40d702
test eax eax
jne r-xdata
mov eax 0x80004003
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
push r--data
push edi
call sub_40d702
test eax eax
je r-xdata
pop esi
pop ebp
retn 0xc
pop edi
push r--data
push edi
call sub_40d702
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push r--data
push edi
call sub_40d702
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor ecx ecx
lea ecx [ eax + 0x4 ]
jmp r-xdata
push r--data
push edi
call sub_40d702
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea ecx [ eax + 0x8 ]
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
xor eax eax
jmp r-xdata
mov [ esi ] ecx
jmp r-xdata
and [ esi ] 0x0
mov eax 0x80004002
lea ecx [ eax + 0xc ]
jmp r-xdata
sub_40dd09
push esi
mov esi [ esp + 0x8 ]
dec [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jne r-xdata
pop esi
retn 0x4
mov ecx esi
call sub_40d5f9
push esi
call sub_409393
pop ecx
xor eax eax
sub_40dd2a
push ebp
mov ebp esp
sub esp 0xc
cmp [ ecx + 0xc ] 0x0
mov [ ebp - 0xc ] ecx
je r-xdata
leave
retn 0x4
and [ ebp - 0x8 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40da59
push esi
mov [ ebp + 0xb ] al
call sub_409129
lea eax [ eax + eax + 0x200 ]
push eax
call sub_408ced
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
push ebx
mov ebx r--data
push ebx
push edi
call sub_409153
push r--data
push edi
call sub_4091c5
push r--data
push edi
call sub_4091c5
cmp [ esi ] 0x20
mov [ ebp - 0x4 ] esi
jne r-xdata
push 0x6
push ebx
push [ ebp - 0x4 ]
call sub_40d3d6
mov ebx eax
neg ebx
sbb bl bl
inc bl
je r-xdata
add [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x20
je r-xdata
push esi
push edi
call sub_4091c5
test bl bl
jne r-xdata
mov esi [ ebp - 0x4 ]
add esi 0xc
cmp [ ebp + 0xb ] 0x0
jne r-xdata
push r--data
push edi
call sub_4091c5
push edi
call sub_409129
mov esi eax
imul esi esi 0x6
add esi 0x9
push esi
push 0x40
call [ GlobalAlloc@IAT ]
mov ebx eax
xor eax eax
cmp ebx eax
je r-xdata
mov ecx [ ebp - 0xc ]
push edi
call sub_40da8f
mov edi eax
push edi
call sub_408d06
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push ebx
call [ CreateStreamOnHGlobal@IAT ]
pop ebx
test eax eax
jl r-xdata
push eax
push eax
add esi 0xfffffffd
push esi
lea ecx [ ebx + 0x3 ]
push ecx
push 0xffffffff
push edi
push eax
push 0xfde9
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
push [ eax + 0xc ]
call sub_40d982
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ ebx ] 0x0
mov [ ebx ] 0xef
mov [ ebx + 0x1 ] 0xbb
mov [ ebx + 0x2 ] 0xbf
jmp r-xdata
sub_40de68
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
mov edi ecx
call sub_409129
lea eax [ eax + eax + 0x2 ]
push eax
call sub_408ced
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
pop esi
leave
retn 0x4
push esi
mov ecx edi
call sub_40da59
mov edi [ ebp - 0x4 ]
mov [ ebp + 0xb ] al
movzx eax [ esi ]
test ax ax
je r-xdata
mov eax [ ebp - 0x4 ]
push ebx
jmp r-xdata
test ax ax
jne r-xdata
cmp ax 0x3c
je r-xdata
push 0x4
push r--data
push esi
call sub_40d3d6
mov ebx eax
neg ebx
sbb bl bl
inc bl
jne r-xdata
cmp [ ebp + 0xb ] 0x0
je r-xdata
push 0xd
pop eax
mov [ edi ] ax
push 0x2
pop eax
add edi eax
push 0xa
pop ecx
mov [ edi ] cx
add edi eax
test bl bl
je r-xdata
push 0x4
push r--data
push esi
call sub_40d3d6
test eax eax
jne r-xdata
xor bl bl
cmp [ ebp + 0xb ] bl
je r-xdata
cmp ax 0xd
je r-xdata
push 0x7
push r--data
xor eax eax
push esi
mov [ edi ] ax
call sub_40d3d6
test eax eax
jne r-xdata
push 0xd
pop ecx
mov [ edi ] cx
push 0xa
add edi eax
pop ecx
mov [ edi ] cx
add edi eax
movzx eax [ esi ]
test ax ax
je r-xdata
cmp ax 0x26
jne r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
cmp ax 0xa
jne r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
cmp [ esi ] ax
je r-xdata
cmp ax 0x20
jne r-xdata
xor edx edx
push 0x20
pop eax
jmp r-xdata
cmp [ edi - 0x2 ] 0x20
je r-xdata
cmp ax 0x3e
je r-xdata
cmp [ esi ] 0x3e
jne r-xdata
pop ebx
push 0x8
push r--data
push esi
call sub_40d3d6
inc esi
inc esi
test eax eax
je r-xdata
mov [ edi ] ax
inc edi
inc edi
cmp edi [ ebp - 0x4 ]
je r-xdata
test bl bl
jne r-xdata
cmp cx 0x3b
jne r-xdata
inc esi
inc esi
inc esi
inc esi
inc esi
inc esi
movzx eax [ esi ]
test ax ax
jne r-xdata
add esi 0xe
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
cmp [ edi - 0x2 ] ax
je r-xdata
movzx eax [ esi ]
inc edx
inc edx
cmp edx 0x28
jb r-xdata
lea esi [ eax + 0x2 ]
mov bl 0x1
jmp r-xdata
lea eax [ edx + esi ]
movzx ecx [ eax ]
test cx cx
je r-xdata
sub_40dfe8
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
jne r-xdata
cmp [ esi + 0x21 ] 0x0
mov [ esi + 0x20 ] 0x1
je r-xdata
cmp [ esi + 0x20 ] 0x0
jne r-xdata
pop esi
retn
mov ecx [ esi + 0x8 ]
push 0x1
call sub_40d8b3
push [ esi + 0x10 ]
call sub_40dd2a
sub_40e051
push esi
mov esi ecx
xor eax eax
push 0x10
push eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x1c ]
push eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] 0x1
call sub_408e46
mov eax esi
pop esi
retn
sub_40e08e
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
push 0x2c
mov [ esi + 0x4 ] edi
call sub_4093a0
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_40e051
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov [ eax + 0x14 ] edi
mov ecx [ esi + 0x8 ]
push r--data
call sub_40d73d
mov ecx [ esi + 0x8 ]
push 0x1
call sub_40d843
mov ecx [ esi + 0x8 ]
push 0x1
call sub_40d8b3
mov ecx [ esi + 0x8 ]
call sub_40d8ff
mov edi eax
cmp edi ebx
je r-xdata
mov [ esi + 0x8 ] eax
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc ]
cmp eax ebx
je r-xdata
mov eax [ edi ]
push ebp
lea ecx [ esi + 0xc ]
push ecx
push r--data
push edi
call [ eax ]
mov ebp eax
mov eax [ edi ]
push edi
call [ eax + 0x8 ]
cmp ebp ebx
pop ebp
jl r-xdata
mov ecx [ esi + 0x14 ]
push ebx
push ebx
push ebx
mov [ esi + 0x20 ] bl
push ebx
cmp ecx ebx
je r-xdata
mov ecx [ eax ]
push r--data
push eax
call [ ecx + 0x2c ]
mov ecx esi
call sub_40dfe8
mov edx [ eax ]
push ecx
push eax
call [ edx + 0x2c ]
jmp r-xdata
sub_40e13e
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
dec eax
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
je r-xdata
push 0xffffffeb
push esi
call [ GetWindowLongW@IAT ]
push esi
mov ecx eax
call sub_40e08e
sub eax 0x80
jne r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ DefWindowProcW@IAT ]
pop edi
pop esi
pop ebp
retn 0x10
push [ edi ]
push 0xffffffeb
push esi
call [ SetWindowLongW@IAT ]
jmp r-xdata
sub_40e188
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
push 0x7f00
push edi
mov ebx ecx
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x828
mov [ ebp - 0x28 ] sub_40e13e
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] edi
call [ LoadCursorW@IAT ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] r--data
mov [ ebp - 0x4 ] edi
call [ RegisterClassExW@IAT ]
pop edi
mov [ ebx ] esi
pop esi
pop ebx
leave
retn 0x4
sub_40e1ef
push ebp
mov ebp esp
mov al [ ebp + 0x18 ]
sub esp 0x10
push ebx
push esi
push edi
push 0x0
push [ ebp + 0xc ]
mov esi ecx
mov [ esi + 0x21 ] al
call [ ShowWindow@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call sub_40e188
mov eax [ ebp + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call [ GetWindowRect@IAT ]
mov ebx [ GetParent@IAT ]
push 0x2
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call ebx
push eax
push 0x0
call [ MapWindowPoints@IAT ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov edi [ ebp - 0x8 ]
push esi
push [ esi ]
sub edi eax
push 0x0
push [ ebp + 0xc ]
lea ecx [ eax + 0x1 ]
dec edi
mov [ ebp + 0x18 ] ecx
dec edi
call ebx
push eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
push eax
push edi
push [ ebp - 0xc ]
xor edi edi
push [ ebp + 0x18 ]
push 0x40000000
push edi
push r--data
push edi
call [ CreateWindowExW@IAT ]
mov [ esi + 0x4 ] eax
cmp [ esi + 0xc ] edi
jne r-xdata
push eax
call [ DestroyWindow@IAT ]
cmp eax edi
je r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
cmp [ esi + 0x1c ] 0x64
jbe r-xdata
push 0x5
push eax
call [ ShowWindow@IAT ]
push [ esi + 0x4 ]
call [ UpdateWindow@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x14
cmp [ esi + 0x14 ] edi
jne r-xdata
mov ecx esi
call sub_40db7d
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
push eax
mov ecx esi
call sub_40de68
mov esi eax
cmp esi edi
je r-xdata
push 0x5
push [ ebp + 0xc ]
call [ ShowWindow@IAT ]
push esi
push [ ebp + 0xc ]
call [ SetWindowTextW@IAT ]
push esi
call sub_408d06
jmp r-xdata
sub_40e301
push ebp
mov ebp esp
sub esp 0x70
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov eax [ eax + 0x24 ]
cmp [ rw-data ] bl
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] bl
jne r-xdata
and eax 0xffffffdf
mov [ ebp - 0x3 ] bl
cmp [ rw-data ] ebx
je r-xdata
pop ebx
leave
retn
and eax 0x7f
push eax
push rw-data
push ebx
call sub_403f99
mov [ ebp - 0x2 ] bl
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x3 ] 0x1
cmp [ rw-data ] ebx
jne r-xdata
mov [ ebp - 0x1 ] bl
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x2 ] 0x1
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x2 ] bl
je r-xdata
push rw-data
lea ecx [ ebp - 0x70 ]
call sub_40cb5f
mov [ ebp - 0x1 ] 0x1
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x1 ] bl
je r-xdata
push rw-data
lea ecx [ ebp - 0x4c ]
call sub_40cb5f
lea ecx [ ebp - 0x70 ]
call sub_40cb59
lea ecx [ ebp - 0x4c ]
call sub_40cb59
lea ecx [ ebp - 0x28 ]
call sub_40cb59
cmp [ ebp - 0x3 ] bl
je r-xdata
movzx eax [ ebp - 0x1 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x28 ]
and eax ecx
push eax
movzx eax [ ebp - 0x2 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x4c ]
and eax ecx
push eax
movzx eax [ ebp - 0x3 ]
neg eax
sbb eax eax
lea ecx [ ebp - 0x70 ]
and eax ecx
mov ecx [ rw-data ]
push eax
call sub_403b2e
mov ecx [ rw-data ]
call sub_403674
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
push rw-data
lea ecx [ ebp - 0x28 ]
call sub_40cb5f
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_40e444
movzx eax [ rw-data ]
test eax eax
je r-xdata
movzx eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ecx + 0x24 ] eax
cmp eax 0xb
je r-xdata
cmp eax 0x6
je r-xdata
cmp eax 0xe
je r-xdata
push rw-data
call sub_406a1f
movzx eax [ eax ]
cmp ax 0x5c
je r-xdata
mov eax [ rw-data ]
and [ eax + 0x24 ] 0x0
jmp r-xdata
cmp ax 0x2f
je r-xdata
xor eax eax
retn
mov eax [ rw-data ]
mov [ eax + 0x24 ] 0x20
jmp r-xdata
sub_40e4a3
push ebp
mov ebp esp
push ecx
push ecx
push ebx
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x1
xor ebx ebx
push ebx
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
mov al bl
pop ebx
leave
retn 0x1c
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
cmp [ ebp + 0x8 ] bl
je r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x50 ]
cmp [ ebp + 0x18 ] ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push 0x2
push [ ebp + 0x10 ]
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
push [ ebp + 0x1c ]
push r--data
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x20 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x2c ]
push eax
call [ ecx + 0x44 ]
cmp [ ebp + 0x20 ] ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push 0x1
push [ ebp + 0x10 ]
push eax
call [ ecx + 0x18 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x14 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov bl 0x1
sub_40e5a5
push ebp
mov ebp esp
sub esp 0xa0
push edi
mov edi [ ebp + 0x8 ]
push 0x50
lea eax [ ebp - 0xa0 ]
push eax
push edi
call [ GetClassNameW@IAT ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
mov esi r--data
push esi
lea eax [ ebp - 0xa0 ]
push eax
call sub_40d319
test eax eax
je r-xdata
pop edi
leave
retn 0x4
push 0x10
push edi
call [ SHAutoComplete@IAT ]
pop esi
push 0x0
push esi
push 0x0
push edi
call [ FindWindowExW@IAT ]
mov edi eax
sub_40e5fe
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ LoadLibraryW@IAT ]
mov esi ecx
and [ esi + 0x4 ] 0x0
and [ esi ] 0x0
push r--data
call edi
push r--data
mov [ esi ] eax
call edi
push 0x0
mov [ esi + 0x4 ] eax
call [ OleInitialize@IAT ]
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] 0x8
mov [ ebp - 0x4 ] 0x7ff
call [ InitCommonControlsEx@IAT ]
push rw-data
call [ SHGetMalloc@IAT ]
pop edi
mov eax esi
pop esi
leave
retn
sub_40e658
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ FreeLibrary@IAT ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
push eax
call edi
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
pop edi
pop esi
jmp [ OleUninitialize@IAT ]
push esi
call edi
sub_40e688
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax 0xff
and ecx eax
add ecx 0xffffffeb
and edx eax
cmp ecx 0x6
ja r-xdata
mov al 0x1
cmp edx 0xa
je r-xdata
xor al al
jmp r-xdata
cmp edx 0xb
je r-xdata
retn 0x8
cmp edx 0x3
jne r-xdata
sub_401462
mov ecx [ ecx + 0x4f10 ]
jmp sub_40c890
sub_401643
push esi
mov esi ecx
call sub_401598
mov ecx esi
pop esi
jmp sub_4069b9
j_sub_40ab03
jmp sub_40ab03
sub_401925
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] 0x1
mov [ ecx + 0x9 ] al
mov [ ecx + 0xa ] al
retn
sub_401937
xor al al
retn 0x8
sub_40193c
push 0x6b
call sub_408c71
push eax
call sub_409bd0
pop ecx
retn
sub_401a46
retn
sub_401a47
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
mov [ eax + 0x9 ] cl
mov [ eax + 0xa ] cl
retn
sub_401a5b
push esi
mov esi ecx
call sub_40193c
push 0x8
mov ecx esi
call sub_401a14
pop esi
retn
sub_401ba4
push [ esp + 0x4 ]
call sub_40c6d8
push eax
push r--data
push 0x0
call sub_40a123
add esp 0xc
retn 0x4
j_sub_401a14
jmp sub_401a14
sub_401d46
push esi
push [ esp + 0xc ]
mov esi ecx
push [ esp + 0xc ]
push 0x0
push 0x0
call sub_401c89
push 0x2
mov ecx esi
call sub_401a14
pop esi
retn 0x8
sub_401d67
push esi
push [ esp + 0x14 ]
mov esi ecx
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_401ce5
push 0x5
mov ecx esi
call sub_401a14
pop esi
retn 0x10
sub_402530
mov eax [ esp + 0x4 ]
cmp eax [ ecx + 0x8 ]
jbe r-xdata
mov [ ecx + 0x4 ] eax
sub eax [ ecx + 0x4 ]
push eax
call sub_40249e
jmp r-xdata
retn 0x4
sub_40364d
cmp [ esp + 0x4 ] 0xffffffff
je r-xdata
retn 0x4
xor eax eax
mov [ eax * 4 + rw-data ] ecx
inc eax
cmp eax 0x100
jb r-xdata
cmp [ eax * 4 + rw-data ] 0x0
je r-xdata
jmp r-xdata
sub_4037b8
push [ ecx + 0x4 ]
call [ SetEndOfFile@IAT ]
dec eax
neg eax
sbb eax eax
inc eax
retn
sub_403c51
push esi
mov esi ecx
call sub_4037eb
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_409393
pop ecx
sub_403f46
cmp [ esp + 0x4 ] 0xffffffff
je r-xdata
xor eax eax
test [ esp + 0x4 ] 0x10
je r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x4
sub_403f5e
test [ esp + 0x4 ] 0x7
push 0x0
pop eax
sete al
retn 0x4
sub_403fdd
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
push [ esp + 0x4 ]
call [ DeleteFileW@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x4
sub_40410d
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
push 0x0
call sub_40402e
retn 0xc
sub_4043a2
push 0x0
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_403f99
retn 0x8
sub_4049bc
xor eax eax
retn 0x10
sub_4049c1
mov eax [ esp + 0xc ]
and [ eax ] 0x0
xor eax eax
retn 0x10
sub_404e13
mov eax ecx
or [ eax + 0xc04 ] 0xffffffff
xor ecx ecx
mov [ eax ] 0x0
mov [ eax + 0x400 ] cx
mov [ eax + 0xc00 ] 0x1
retn
sub_404e30
mov eax [ ecx + 0xc04 ]
cmp eax 0xffffffff
je r-xdata
retn
push eax
call [ FindClose@IAT ]
sub_405922
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push [ rw-data ]
call sub_405901
push [ rw-data ]
call sub_405901
and [ rw-data ] 0x0
and [ rw-data ] 0x0
sub_4069b9
push esi
push 0x36c8
mov esi ecx
push 0x0
push esi
call sub_408e46
lea ecx [ esi + 0x2d60 ]
call sub_40146d
lea ecx [ esi + 0x281c ]
pop esi
jmp j_sub_40969b
sub_406a1f
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_409129
test eax eax
lea eax [ esi + eax * 2 - 0x2 ]
ja r-xdata
pop esi
retn 0x4
mov eax esi
sub_406d28
cmp [ rw-data ] 0x0
je r-xdata
jmp sub_408f4a
mov ecx rw-data
jmp sub_40d52f
sub_406dd3
mov eax [ esp + 0x4 ]
push esi
mov esi eax
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
push eax
mov esi eax
call sub_404123
mov eax esi
pop esi
retn 0x4
sub_40700d
xor eax eax
cmp [ esp + 0x4 ] eax
je r-xdata
retn 0x4
push 0x2e
push [ esp + 0x8 ]
call sub_406d40
push eax
call sub_406d28
sub_407029
xor eax eax
cmp [ esp + 0x4 ] eax
je r-xdata
retn 0x4
push 0x2e
push [ esp + 0x8 ]
call sub_406d97
push eax
call sub_4092bf
sub_408481
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] cl
retn
sub_40848e
push [ ecx ]
call sub_408d06
retn
sub_408754
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_4087bf
cmp [ ecx + 0x10 ] 0x0
je r-xdata
retn 0x4
push 0xffffffec
push [ esp + 0x8 ]
call [ GetWindowLongW@IAT ]
or eax __pe_WINRAR_export_address_table
push eax
push 0xffffffec
push [ esp + 0xc ]
call [ SetWindowLongW@IAT ]
sub_408c5a
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_408496
mov ecx esi
call sub_4089aa
pop esi
retn 0x4
sub_40910b
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408ef5
add eax [ ebp + 0x8 ]
push eax
call sub_408fe8
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_409335
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_409393
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_408d06
pop ebp
retn
sub_4093a0
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_408ced
pop ebp
retn
sub_40945b
xor eax eax
retn
_start
call sub_4093ad
xor eax eax
push eax
push eax
push eax
push eax
call sub_40c33e
sub_4094c2
mov eax ecx
mov ecx [ eax ]
mov edx [ eax + 0x10 ]
cmp edx [ ecx + 0xc24 ]
jne r-xdata
retn
push 0x0
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_403c6d
sub_4094df
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
pop esi
retn
push eax
call [ FreeLibrary@IAT ]
sub_409674
push esi
push r--data
mov esi ecx
call sub_40963d
mov eax esi
pop esi
retn
sub_40969b
push 0x100
push ecx
mov [ ecx + 0x100 ] 0x0
call sub_409685
retn
j_sub_40969b
jmp sub_40969b
sub_40a0fd
push 0x0
push [ esp + 0x10 ]
push [ esp + 0xc ]
call sub_409779
push eax
push 0x402
push 0x6a
push [ rw-data ]
call [ SendDlgItemMessageW@IAT ]
retn 0x10
sub_40a180
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
call sub_40a0fd
call sub_4096b3
retn 0x20
sub_40c563
call sub_401761
mov ecx rw-data
jmp sub_401925
sub_40c572
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
cmp [ eax ] 0x0
jne r-xdata
retn 0x4
CharToOemA
jmp [ CharToOemA@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
sub_40c591
push 0xffffffff
push [ esp + 0xc ]
push 0xffffffff
push [ esp + 0x10 ]
push 0x1001
push 0x400
call [ CompareStringA@IAT ]
dec eax
dec eax
retn 0x8
sub_40c5b2
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0x14 ]
push [ esp + 0x10 ]
push 0x1001
push 0x400
call [ CompareStringA@IAT ]
dec eax
dec eax
retn 0xc
sub_40c5d7
movzx eax [ esp + 0x4 ]
push eax
call [ CharUpperA@IAT ]
retn 0x4
sub_40c5e6
cmp [ esp + 0x4 ] 0x69
jne r-xdata
movzx eax [ esp + 0x4 ]
push eax
call sub_40d446
push 0x49
pop eax
jmp r-xdata
retn 0x4
sub_40c601
mov eax [ esp + 0x4 ]
add eax 0xffffffd0
push 0x9
pop ecx
cmp ecx eax
sbb eax eax
inc eax
retn 0x4
j_sub_40c591
jmp sub_40c591
sub_40c7bb
and [ ecx + 0xc ] 0x0
and [ ecx + 0x1c ] 0x0
retn
sub_40c7c4
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call sub_408d06
and [ esi ] 0x0
sub_40c86b
push esi
mov esi ecx
and [ esi + 0xc ] 0x0
and [ esi + 0x1c ] 0x0
call sub_40c7c4
lea ecx [ esi + 0x10 ]
call sub_40c7c4
and [ esi + 0x20 ] 0x0
and [ esi + 0xa4 ] 0x0
pop esi
retn
sub_40c986
push 0x0
push [ esp + 0x8 ]
call sub_40c890
retn 0x4
sub_40c994
push [ esp + 0x4 ]
push 0x0
call sub_40c890
retn 0x4
sub_40c9e6
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x0
call sub_40c8fd
mov eax [ ebp - 0x4 ]
leave
retn
sub_40c9fa
push [ esp + 0x8 ]
push 0x0
push [ esp + 0xc ]
call sub_40c9a2
retn 0x8
sub_40ca0c
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push 0x0
call sub_40c9a2
retn 0x8
sub_40d11e
call sub_40cf51
cmp [ rw-data ] 0x0
je r-xdata
retn
test eax eax
jne r-xdata
sub_40d513
mov eax [ esp + 0x4 ]
movzx edx [ eax ]
cmp [ edx + ecx ] 0x0
je r-xdata
inc eax
cmp [ eax + 0x1 ] 0x0
je r-xdata
add eax 0x2
jmp r-xdata
retn 0x4
sub_40d561
push esi
mov esi ecx
call sub_40d4d3
mov eax esi
pop esi
retn
sub_40d62a
mov eax [ esp + 0x4 ]
inc [ eax + 0x10 ]
mov eax [ eax + 0x10 ]
retn 0x4
sub_40d637
mov eax 0x80004002
retn 0x8
sub_40d663
xor eax eax
retn 0x4
sub_40d6e2
mov eax 0x80004001
retn 0xc
sub_40d6ea
mov eax 0x80004001
retn 0x4
sub_40d6f2
mov eax 0x80004001
retn 0x8
sub_40d6fa
mov eax 0x80004001
retn 0x10
sub_40d71c
xor eax eax
retn 0x8
sub_40d721
xor eax eax
retn 0xc
sub_40d726
mov eax [ esp + 0x18 ]
or [ eax ] 0xffffffff
mov eax 0x80020006
retn 0x18
sub_40d735
mov eax 0x80020003
retn 0x24
sub_40d96b
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop esi
retn
push eax
call [ DestroyWindow@IAT ]
and [ esi + 0x4 ] 0x0
sub_40dc2c
sub [ esp + 0x4 ] 0x4
jmp sub_40d6f2
sub_40dc36
sub [ esp + 0x4 ] 0x4
jmp sub_40d63f
sub_40dc40
sub [ esp + 0x4 ] 0x4
jmp sub_40d62a
sub_40dc4a
sub [ esp + 0x4 ] 0x8
jmp sub_40d62a
sub_40dc54
sub [ esp + 0x4 ] 0xc
jmp sub_40d62a
sub_40e015
sub [ esp + 0x4 ] 0xc
jmp sub_40dc5e
sub_40e01f
sub [ esp + 0x4 ] 0x4
jmp sub_40dd09
sub_40e029
sub [ esp + 0x4 ] 0x8
jmp sub_40dd09
sub_40e033
sub [ esp + 0x4 ] 0xc
jmp sub_40dd09
sub_40e03d
sub [ esp + 0x4 ] 0x4
jmp sub_40dc5e
sub_40e047
sub [ esp + 0x4 ] 0x8
jmp sub_40dc5e
sub_40e57b
push [ esp + 0x4 ]
call [ SetCurrentDirectoryW@IAT ]
neg eax
sbb eax eax
neg eax
retn 0x4
sub_40e58e
push [ esp + 0x4 ]
push [ esp + 0xc ]
call [ GetCurrentDirectoryW@IAT ]
neg eax
sbb eax eax
neg eax
retn 0x8
sub_40e6b9
cmp [ esp + 0x8 ] 0x3
je r-xdata
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_40d18e
xor al al
jmp r-xdata
retn 0x8
sub_40e6d4
push sub_40e74c
call sub_40945b
pop ecx
retn
sub_40e6e0
mov ecx rw-data
call sub_409674
push sub_40e774
call sub_40945b
pop ecx
retn
sub_40e6f6
mov ecx rw-data
jmp sub_401a47
sub_40e700
mov ecx rw-data
call sub_408481
push sub_40e756
call sub_40945b
pop ecx
retn
sub_40e716
mov ecx rw-data
call sub_401729
push sub_40e760
call sub_40945b
pop ecx
retn
sub_40e72c
mov ecx rw-data
call sub_409674
push sub_40e76a
call sub_40945b
pop ecx
retn
sub_40e742
mov ecx rw-data
jmp sub_40d4d3
sub_40e74c
mov ecx rw-data
jmp sub_4094df
sub_40e756
mov ecx rw-data
jmp sub_40848e
sub_40e760
mov ecx rw-data
jmp sub_401643
sub_40e76a
mov ecx rw-data
jmp j_sub_40969b
sub_40e774
mov ecx rw-data
jmp j_sub_40969b
